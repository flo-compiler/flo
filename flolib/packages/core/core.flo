import STDIN, nanosleep, read in "@flo/sys/lib"
fnc input(): string {
    let size = -1
    let buffer = new i8*(1)
    while (buffer[size] != '\n'){
        buffer = buffer.resize((++size)+1)
        read(STDIN, buffer+size, 1)
    }
    return new string(buffer, size)
}
fnc sleep(secs: int, nanosecs: int){
    let req = [secs, nanosecs]
    let rem: i8[2] = [0, 0]
    let req_struct = &req[0]
    let rem_struct = &rem[0]
    while nanosleep(req_struct, rem_struct) > 0 1
}