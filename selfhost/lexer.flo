class FloRange {
    start: int
    end: int
}
enum TokenType {
    COL
    SEMICOL
    COMMA
    PLUS
    PLUS_PLUS
    MINUS
    MINUS_MINUS
    MULT
    DIV
    LPAR
    RPAR
    MOD
    LBRACE
    RBRACE
    LBRACKET
    RBRACKET
    INT
    FLOAT
    LN
    STR
    CHAR
    POW
    QUES
    AMP
    EQ
    EEQ
    NEQ
    GT
    LT
    LTE
    GTE
    LEQ
    ARROW
    EOF
    NOT
    SL
    SR
    DOT
    DOT_DOT
    DOT_DOT_DOT
    IDENTIFER
    KEYWORD
}
class Token {
    toktype: TokenType
    range: FloRange
}
class Lexer{
    get_tokens(): Token [] {    
        tokens: Tokens[] = []
        while !this.eof(){
            char = self.get_current_char()
            if char in 65..90 or char in 97..122 or char == '_':
                tokens << this.make_identifer()
            if = ":" 
                tokens << new Token(TokenType.COL, this.get_range(1))
            else if = ";"
                tokens << new Token(TokenType.SEMICOL, this.get_range(1))
            else if = ","
                tokens << new Token(TokenType.COMMA, this.get_range(1))
            else if = "+"
            else if = "++"
            else if = "-"
            else if = "--"
            else if = "*"
            else if = "/"
            else if = "("
                tokens << new Token(TokenType.LPAR, this.get_range(1))
            else if = ")"
                tokens << new Token(TokenType.RPAR, this.get_range(1))
            else if = "%"
                tokens << new Token(TokenType.MOD, this.get_range(1))
            else if = "{"
                tokens << new Token(TokenType.LBRACE, this.get_range(1))
            else if = "}"
                tokens << new Token(TokenType.RBRACE, this.get_range(1))
            else if = "["
                tokens << new Token(TokenType.LBRACKET, this.get_range(1))
            else if = "]"
                tokens << new Token(TokenType.RBRACKET, this.get_range(1))
            else if = "int"
                tokens << new Token(TokenType.INT, this.get_range(3))
            else if = "float"
                tokens << new Token(TokenType.FLOAT, this.get_range(5))
            else if = '\n'
                tokens << new Token(TokenType.LN, this.get_range(2))
            else if = '"'
                tokens << this.make_string()
            else if = '\''
                tokens << this.make_char()
            else if = "^"
                tokens << new Token(TokenType.POW, this.get_range(1))
            else if = "?"
                tokens << new Token(TokenType.QUES, this.get_range(1))
            else if = "&"
                tokens << new Token(TokenType.AMP, this.get_range(1))
            else if = "="
            else if = "=="
            else if = "!"
            else if = "!="
            else if = ">"
            else if = ">="
            else if = "<"
            else if = "<="
            else if = "=>"
            else if = "<<"
            else if = ">>"
            else if = "."
            else if = ".."
            else if = "..."
            else // error
            this.advance()
        }
        tokens << new Token(TokenType.EOF, this.get_range(0))
    }
}