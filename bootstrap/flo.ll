; ModuleID = 'src/main.flo'
source_filename = "src/main.flo"

%string = type <{ ptr, ptr, i64, i64 }>
%Array_string_ = type <{ ptr, ptr, i64, i64 }>
%CodeGen = type <{ ptr, ptr, ptr, ptr, ptr, i1, ptr, ptr, ptr, ptr, ptr }>
%TypeChecker = type <{ ptr, i64, ptr, ptr, ptr, ptr, ptr, i1, i1, ptr }>
%Compiler = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_FloFile_ = type <{ ptr, ptr, i64, i64 }>
%Array_FloError_ = type <{ ptr, ptr, i64, i64 }>
%Map_string_FileId_ = type <{ ptr, i64, i64 }>
%Program = type <{ i1, ptr }>
%Array_Module_ = type <{ ptr, ptr, i64, i64 }>
%Map_string_Generic_ = type <{ ptr, i64, i64 }>
%Module = type <{ i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_Scope_ = type <{ ptr, ptr, i64, i64 }>
%Map_string_LLVMValueRef_ = type <{ ptr, i64, i64 }>
%Map_string_CGClassType_ = type <{ ptr, i64, i64 }>
%Map_string_CGEnumType_ = type <{ ptr, i64, i64 }>
%Array_Enum_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_Enum_ = type <{ i1, i64, i64, ptr }>
%Array_Class_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_Class_ = type <{ i1, i64, i64, ptr }>
%Array_ConstDeclaration_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_ConstDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_VarDeclaration_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_VarDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_Function_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_Function_ = type <{ i1, i64, i64, ptr }>
%MapIterator_string_LLVMValueRef_ = type <{ i1, ptr, i64, i64 }>
%MapIterator_string_CGClassType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_string_CGClassType_ = type <{ ptr, ptr }>
%MapIterator_string_CGEnumType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_string_CGEnumType_ = type <{ ptr, ptr }>
%GeneratedModule = type <{ ptr, ptr, ptr }>
%FloFile = type <{ ptr, ptr }>
%FloError = type <{ i64, ptr, ptr }>
%FloRange = type <{ i64, i64, i64, i64 }>
%Range = type <{ i64, i64 }>
%RangeIterator = type <{ i1, i64, i64 }>
%MapEntry_string_FileId_ = type <{ ptr, ptr }>
%File = type <{ ptr, i64 }>
%Array_Token_ = type <{ ptr, ptr, i64, i64 }>
%Lexer = type <{ i8, ptr, ptr, i64, i64, i64 }>
%Token = type <{ i64, ptr }>
%Array_Array_Token__ = type <{ ptr, ptr, i64, i64 }>
%Array_int_ = type <{ ptr, ptr, i64, i64 }>
%StringBuilder = type <{ ptr, ptr, i64, ptr, i64 }>
%StrToken = type <{ i64, ptr, ptr, ptr, ptr }>
%IntToken = type <{ i64, ptr, i64 }>
%IdentifierToken = type <{ i64, ptr, ptr }>
%FloatToken = type <{ i64, ptr, double }>
%CharToken = type <{ i64, ptr, i8 }>
%Array_ImportClause_ = type <{ ptr, ptr, i64, i64 }>
%Array_ImportNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_VarDeclarationStatement_ = type <{ ptr, ptr, i64, i64 }>
%Array_EnumNodeField_ = type <{ ptr, ptr, i64, i64 }>
%Array_EnumNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_TypeAliasNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_ConstDeclarationStatement_ = type <{ ptr, ptr, i64, i64 }>
%Array_ArgNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_StatementNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_MethodNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_FieldNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_TypeNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_GenericParameterNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_ClassDeclarationNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_FunctionDeclarationNode_ = type <{ ptr, ptr, i64, i64 }>
%ModuleAST = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Parser = type <{ ptr, ptr, ptr, i64 }>
%FunctionDeclarationNode = type <{ ptr, ptr, ptr, ptr, i1 }>
%TypeNode = type <{ ptr, i64 }>
%ClassDeclarationNode = type <{ ptr, ptr, ptr, ptr, ptr }>
%FieldNode = type <{ ptr, i64, ptr, ptr }>
%MethodNode = type <{ ptr, ptr, ptr, i64, ptr, i1, i1 }>
%EnumNode = type <{ ptr, ptr, ptr }>
%EnumNodeField = type <{ ptr, ptr }>
%ImportNode = type <{ ptr, ptr, ptr }>
%ImportClause = type <{ ptr, ptr }>
%TypeAliasNode = type <{ ptr, ptr }>
%BlockNode = type <{ ptr, ptr }>
%FunctionTypeNode = type <{ ptr, i64, ptr, ptr }>
%RecordTypeNode = type <{ ptr, i64, ptr, ptr }>
%PointerTypeNode = type <{ ptr, i64, ptr }>
%ArrayTypeNode = type <{ ptr, i64, ptr, ptr }>
%Array_ExpressionNode_ = type <{ ptr, ptr, i64, i64 }>
%StatementNode = type <{ ptr, i64 }>
%ExpressionNode = type <{ ptr, i64, i64 }>
%StringExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%VarDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%NewExpressionNode = type <{ ptr, i64, i64, ptr, i1, ptr }>
%IfStatementNode = type <{ ptr, i64, ptr, ptr, ptr }>
%WhileStatementNode = type <{ ptr, i64, ptr, ptr }>
%ForStatementNode = type <{ ptr, i64, ptr, ptr, ptr, ptr, i64, ptr, ptr }>
%ReturnStatementNode = type <{ ptr, i64, ptr }>
%ConstDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%ArgNode = type <{ ptr, ptr, ptr }>
%IntExpressionNode = type <{ ptr, i64, i64, ptr }>
%FloatExpressionNode = type <{ ptr, i64, i64, ptr }>
%CharExpressionNode = type <{ ptr, i64, i64, ptr }>
%VarAccessExpressionNode = type <{ ptr, i64, i64, ptr }>
%ArrayExpressionNode = type <{ ptr, i64, i64, ptr }>
%CallExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%ExpressionIndexNode = type <{ ptr, i64, i64, ptr, ptr }>
%MemberExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%UnaryExpressionNode = type <{ ptr, i64, i64, i64, ptr }>
%BinaryExpressionNode = type <{ ptr, i64, i64, ptr, i64, ptr }>
%TypeCastExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%TernaryExpressionNode = type <{ ptr, i64, i64, ptr, ptr, ptr }>
%Map_string_VarId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_VarId_ = type <{ ptr, ptr }>
%Map_string_EnumId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_EnumId_ = type <{ ptr, ptr }>
%Map_string_Type_ = type <{ ptr, i64, i64 }>
%MapEntry_string_Type_ = type <{ ptr, ptr }>
%Map_string_ClassId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_ClassId_ = type <{ ptr, ptr }>
%Array_Var_ = type <{ ptr, ptr, i64, i64 }>
%Map_string_PropId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_PropId_ = type <{ ptr, ptr }>
%Array_EnumField_ = type <{ ptr, ptr, i64, i64 }>
%Array_Const_ = type <{ ptr, ptr, i64, i64 }>
%Array_FunctionArg_ = type <{ ptr, ptr, i64, i64 }>
%Array_Statement_ = type <{ ptr, ptr, i64, i64 }>
%Array_Type_ = type <{ ptr, ptr, i64, i64 }>
%Array_ClassMethod_ = type <{ ptr, ptr, i64, i64 }>
%Array_ClassField_ = type <{ ptr, ptr, i64, i64 }>
%Scope = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%ArrayIterator_ImportNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_EnumNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ClassDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_TypeAliasNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ConstDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%ConstDeclaration = type <{ i64, ptr, ptr, i1 }>
%ArrayIterator_VarDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%VarDeclaration = type <{ i64, ptr, ptr, i1 }>
%VarId = type <{ i64, i64, i64 }>
%Var = type <{ ptr, ptr, ptr }>
%Expression = type <{ i64, i1, i64, ptr }>
%ArrayIterator_FunctionDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%Function = type <{ ptr, ptr, ptr, ptr, ptr, ptr, i1 }>
%Block = type <{ ptr, i1, i1, i1 }>
%FunctionType = type <{ i64, ptr, ptr, i1 }>
%ScopeId = type <{ i64, i64 }>
%ReturnStatement = type <{ i64, ptr }>
%Class = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, i1 }>
%TypeId = type <{ i64, i64, i64 }>
%Enum = type <{ ptr, ptr, ptr, ptr }>
%MapIterator_string_Type_ = type <{ i1, ptr, i64, i64 }>
%GenericType = type <{ i64, ptr, ptr, ptr }>
%ObjectType = type <{ i64, ptr }>
%Array_Expression_ = type <{ ptr, ptr, i64, i64 }>
%StringExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%IntrinsicCall = type <{ i64, i1, i64, ptr, i64, ptr }>
%TypeCastExpression = type <{ i64, i1, i64, ptr, ptr }>
%FunctionArg = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%MapIterator_string_PropId_ = type <{ i1, ptr, i64, i64 }>
%PropId = type <{ i64, ptr, i64 }>
%ClassMethod = type <{ ptr, i1, i64, ptr, ptr, ptr, ptr, i1, ptr, i64 }>
%ClassField = type <{ ptr, i1, i64, ptr, ptr, ptr, i64 }>
%Const = type <{ ptr, ptr, ptr }>
%EnumType = type <{ i64, ptr }>
%MemberExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%CallExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%BinaryExpression = type <{ i64, i1, i64, ptr, ptr, i64, ptr }>
%NewExpression = type <{ i64, i1, i64, ptr, ptr, i1, ptr }>
%VarAccessExpression = type <{ i64, i1, i64, ptr, ptr }>
%PointerType = type <{ i64, ptr }>
%ArrayType = type <{ i64, ptr, i64 }>
%ArrayIterator_TypeNode_ = type <{ i1, i64, i64, ptr }>
%ForStatement = type <{ i64, ptr, ptr, ptr, ptr, ptr }>
%UnaryExpression = type <{ i64, i1, i64, ptr, i64, ptr }>
%IfStatement = type <{ i64, ptr, ptr, ptr }>
%WhileStatement = type <{ i64, ptr, ptr }>
%TernaryExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%MapEntry_string_Generic_ = type <{ ptr, ptr }>
%Generic = type <{ i64, ptr }>
%IndexExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%ArrayIterator_StatementNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ImportClause_ = type <{ i1, i64, i64, ptr }>
%ModuleVarId = type <{ i64, i64, i64, ptr }>
%ArrayIterator_ArgNode_ = type <{ i1, i64, i64, ptr }>
%ArrayExpression = type <{ i64, i1, i64, ptr, ptr }>
%EnumField = type <{ ptr, ptr, ptr }>
%IntExpression = type <{ i64, i1, i64, ptr, i64 }>
%FloatExpression = type <{ i64, i1, i64, ptr, double }>
%ArrayIterator_ExpressionNode_ = type <{ i1, i64, i64, ptr }>
%BooleanExpression = type <{ i64, i1, i64, ptr, i1 }>
%ArrayIterator_Expression_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_Statement_ = type <{ i1, i64, i64, ptr }>
%MapEntry_string_LLVMValueRef_ = type <{ ptr, ptr }>
%ArrayIterator_Type_ = type <{ i1, i64, i64, ptr }>
%Map_string_int_ = type <{ ptr, i64, i64 }>
%MapEntry_string_int_ = type <{ ptr, i64 }>
%ArrayIterator_ClassMethod_ = type <{ i1, i64, i64, ptr }>
%CGClassType = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_LLVMValueRef_ = type <{ ptr, ptr, i64, i64 }>
%Array_LLVMTypeRef_ = type <{ ptr, ptr, i64, i64 }>
%CGEnumType = type <{ ptr, ptr }>
%ArrayIterator_LLVMTypeRef_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_EnumField_ = type <{ i1, i64, i64, ptr }>
%IntrinsicResult = type <{ ptr, ptr }>
%ArrayIterator_LLVMValueRef_ = type <{ i1, i64, i64, ptr }>

@VTablestring = internal global <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }> <{ ptr @string_find, ptr @string_substring, ptr @string_get_byte, ptr @string_get_bytes, ptr @string_replace, ptr @string_to_cstring, ptr @string_ends_with, ptr @string_starts_with }>
@VTableArray_string_ = internal global <{ ptr, ptr }> <{ ptr @Array_string__pop, ptr @Array_string__find }>
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@1 = private unnamed_addr constant [28 x i8] c"Usage: %s <path> [OPTIONS]\0A\00", align 1
@2 = private unnamed_addr constant [38 x i8] c" -h, --help\09\09\09Show this help message.\00", align 1
@3 = private unnamed_addr constant [36 x i8] c" --print-ast\09\09\09Print generated AST.\00", align 1
@4 = private unnamed_addr constant [40 x i8] c" --emit-llvm\09\09\09Print generated LLVM-IR.\00", align 1
@5 = private unnamed_addr constant [43 x i8] c" -o <file>\09\09\09Place the output into <file>.\00", align 1
@6 = private unnamed_addr constant [47 x i8] c" --target\09\09\09Compile to specific target triple.\00", align 1
@7 = private unnamed_addr constant [33 x i8] c" -I\09\09\09Specify runtime directory.\00", align 1
@8 = private unnamed_addr constant [93 x i8] c" -O OPT_LEVEL\0A \09\09\09\09Specify the compiler's optimization level which is a\0A \09\09\09\09value from 0-3.\00", align 1
@9 = private unnamed_addr constant [31 x i8] c" -v, --version\09\09\09Show version.\00", align 1
@10 = private unnamed_addr constant [8 x i8] c"\1B[1;31m\00", align 1
@11 = private unnamed_addr constant [22 x i8] c"[Illegal Character]: \00", align 1
@12 = private unnamed_addr constant [17 x i8] c"[Syntax Error]: \00", align 1
@13 = private unnamed_addr constant [13 x i8] c"[IO Error]: \00", align 1
@14 = private unnamed_addr constant [15 x i8] c"[Type Error]: \00", align 1
@15 = private unnamed_addr constant [15 x i8] c"[Name Error]: \00", align 1
@16 = private unnamed_addr constant [10 x i8] c"[Error]: \00", align 1
@17 = private unnamed_addr constant [35 x i8] c"Missing value after '%s' argument.\00", align 1
@18 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@19 = private unnamed_addr constant [20 x i8] c"v0.01@test.selfhost\00", align 1
@20 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@VTableArray_FloError_ = internal global <{ ptr, ptr }> <{ ptr @Array_FloError__pop, ptr @Array_FloError__find }>
@VTableArray_FloFile_ = internal global <{ ptr, ptr }> <{ ptr @Array_FloFile__pop, ptr @Array_FloFile__find }>
@21 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@VTableCompiler = internal global <{ ptr, ptr, ptr, ptr, ptr }> <{ ptr @Compiler_set_std_path, ptr @Compiler_register_file, ptr @Compiler_set_current_file, ptr @Compiler_print_errors, ptr @Compiler_add_builtins }>
@22 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@23 = private unnamed_addr constant [23 x i8] c"/builtins/builtins.flo\00", align 1
@VTableFile = internal global <{ ptr, ptr }> <{ ptr @File_read_all, ptr @File_close }>
@24 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@25 = private unnamed_addr constant [19 x i8] c"File '%s', line %d\00", align 1
@26 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@27 = private unnamed_addr constant [32 x i8] c"No such file or directory: '%s'\00", align 1
@VTableArray_Token_ = internal global <{ ptr, ptr }> <{ ptr @Array_Token__pop, ptr @Array_Token__find }>
@VTableArray_Array_Token__ = internal global <{ ptr, ptr }> <{ ptr @Array_Array_Token___pop, ptr @Array_Array_Token___find }>
@VTableArray_int_ = internal global <{ ptr, ptr }> <{ ptr @Array_int__pop, ptr @Array_int__find }>
@28 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@29 = private unnamed_addr constant [4 x i8] c"xor\00", align 1
@30 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@31 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@32 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@33 = private unnamed_addr constant [4 x i8] c"i16\00", align 1
@34 = private unnamed_addr constant [4 x i8] c"i32\00", align 1
@35 = private unnamed_addr constant [4 x i8] c"i64\00", align 1
@36 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@37 = private unnamed_addr constant [4 x i8] c"f16\00", align 1
@38 = private unnamed_addr constant [4 x i8] c"f32\00", align 1
@39 = private unnamed_addr constant [4 x i8] c"f64\00", align 1
@40 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@41 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@42 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@43 = private unnamed_addr constant [4 x i8] c"fnc\00", align 1
@44 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@45 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@46 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@47 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@48 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@49 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@50 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@51 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@52 = private unnamed_addr constant [4 x i8] c"del\00", align 1
@VTableStringBuilder = internal global <{ ptr, ptr, ptr, ptr }> <{ ptr @StringBuilder_add_bytes_length, ptr @StringBuilder_append_string, ptr @StringBuilder_add_byte, ptr @StringBuilder_get_string }>
@53 = private unnamed_addr constant [4 x i8] c"033\00", align 1
@54 = private unnamed_addr constant [4 x i8] c"x1b\00", align 1
@55 = private unnamed_addr constant [6 x i8] c"u001b\00", align 1
@56 = private unnamed_addr constant [24 x i8] c"Illegal character: '%s'\00", align 1
@VTableArray_ImportClause_ = internal global <{ ptr, ptr }> <{ ptr @Array_ImportClause__pop, ptr @Array_ImportClause__find }>
@VTableArray_ImportNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_ImportNode__pop, ptr @Array_ImportNode__find }>
@VTableArray_VarDeclarationStatement_ = internal global <{ ptr, ptr }> <{ ptr @Array_VarDeclarationStatement__pop, ptr @Array_VarDeclarationStatement__find }>
@VTableArray_EnumNodeField_ = internal global <{ ptr, ptr }> <{ ptr @Array_EnumNodeField__pop, ptr @Array_EnumNodeField__find }>
@VTableArray_EnumNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_EnumNode__pop, ptr @Array_EnumNode__find }>
@VTableArray_TypeAliasNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_TypeAliasNode__pop, ptr @Array_TypeAliasNode__find }>
@VTableArray_ConstDeclarationStatement_ = internal global <{ ptr, ptr }> <{ ptr @Array_ConstDeclarationStatement__pop, ptr @Array_ConstDeclarationStatement__find }>
@VTableArray_ArgNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_ArgNode__pop, ptr @Array_ArgNode__find }>
@VTableArray_StatementNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_StatementNode__pop, ptr @Array_StatementNode__find }>
@VTableArray_MethodNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_MethodNode__pop, ptr @Array_MethodNode__find }>
@VTableArray_FieldNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_FieldNode__pop, ptr @Array_FieldNode__find }>
@VTableArray_TypeNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_TypeNode__pop, ptr @Array_TypeNode__find }>
@VTableArray_GenericParameterNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_GenericParameterNode__pop, ptr @Array_GenericParameterNode__find }>
@VTableArray_ClassDeclarationNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_ClassDeclarationNode__pop, ptr @Array_ClassDeclarationNode__find }>
@VTableArray_FunctionDeclarationNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_FunctionDeclarationNode__pop, ptr @Array_FunctionDeclarationNode__find }>
@VTableArray_ExpressionNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_ExpressionNode__pop, ptr @Array_ExpressionNode__find }>
@57 = private unnamed_addr constant [23 x i8] c"Expected an Identifier\00", align 1
@58 = private unnamed_addr constant [13 x i8] c"Expected '='\00", align 1
@59 = private unnamed_addr constant [13 x i8] c"Expected ':'\00", align 1
@60 = private unnamed_addr constant [13 x i8] c"Expected '('\00", align 1
@61 = private unnamed_addr constant [13 x i8] c"Expected ')'\00", align 1
@62 = private unnamed_addr constant [13 x i8] c"Expected '{'\00", align 1
@63 = private unnamed_addr constant [13 x i8] c"Expected '}'\00", align 1
@64 = private unnamed_addr constant [13 x i8] c"Expected ','\00", align 1
@65 = private unnamed_addr constant [13 x i8] c"Expected '<'\00", align 1
@66 = private unnamed_addr constant [13 x i8] c"Expected '>'\00", align 1
@67 = private unnamed_addr constant [14 x i8] c"Expected '->'\00", align 1
@68 = private unnamed_addr constant [27 x i8] c"Expected a type definition\00", align 1
@69 = private unnamed_addr constant [4 x i8] c"Map\00", align 1
@70 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@71 = private unnamed_addr constant [29 x i8] c"Expected an Expression value\00", align 1
@72 = private unnamed_addr constant [29 x i8] c"'%s' has no type information\00", align 1
@73 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@74 = private unnamed_addr constant [20 x i8] c"Expected ':' or '('\00", align 1
@75 = private unnamed_addr constant [80 x i8] c"Illegal expression expected: 'fnc', 'class', 'enum', 'import', 'const' or 'let'\00", align 1
@VTableArray_Scope_ = internal global <{ ptr, ptr }> <{ ptr @Array_Scope__pop, ptr @Array_Scope__find }>
@VTableArray_VarDeclaration_ = internal global <{ ptr, ptr }> <{ ptr @Array_VarDeclaration__pop, ptr @Array_VarDeclaration__find }>
@VTableArray_Var_ = internal global <{ ptr, ptr }> <{ ptr @Array_Var__pop, ptr @Array_Var__find }>
@VTableArray_ConstDeclaration_ = internal global <{ ptr, ptr }> <{ ptr @Array_ConstDeclaration__pop, ptr @Array_ConstDeclaration__find }>
@VTableArray_EnumField_ = internal global <{ ptr, ptr }> <{ ptr @Array_EnumField__pop, ptr @Array_EnumField__find }>
@VTableArray_Enum_ = internal global <{ ptr, ptr }> <{ ptr @Array_Enum__pop, ptr @Array_Enum__find }>
@VTableArray_Const_ = internal global <{ ptr, ptr }> <{ ptr @Array_Const__pop, ptr @Array_Const__find }>
@VTableArray_FunctionArg_ = internal global <{ ptr, ptr }> <{ ptr @Array_FunctionArg__pop, ptr @Array_FunctionArg__find }>
@VTableArray_Statement_ = internal global <{ ptr, ptr }> <{ ptr @Array_Statement__pop, ptr @Array_Statement__find }>
@VTableArray_Type_ = internal global <{ ptr, ptr }> <{ ptr @Array_Type__pop, ptr @Array_Type__find }>
@VTableArray_ClassMethod_ = internal global <{ ptr, ptr }> <{ ptr @Array_ClassMethod__pop, ptr @Array_ClassMethod__find }>
@VTableArray_ClassField_ = internal global <{ ptr, ptr }> <{ ptr @Array_ClassField__pop, ptr @Array_ClassField__find }>
@VTableArray_Class_ = internal global <{ ptr, ptr }> <{ ptr @Array_Class__pop, ptr @Array_Class__find }>
@VTableArray_Function_ = internal global <{ ptr, ptr }> <{ ptr @Array_Function__pop, ptr @Array_Function__find }>
@VTableArray_Module_ = internal global <{ ptr, ptr }> <{ ptr @Array_Module__pop, ptr @Array_Module__find }>
@VTableArray_Expression_ = internal global <{ ptr, ptr }> <{ ptr @Array_Expression__pop, ptr @Array_Expression__find }>
@76 = private unnamed_addr constant [11 x i8] c"(%s) => %s\00", align 1
@77 = private unnamed_addr constant [4 x i8] c"%s*\00", align 1
@78 = private unnamed_addr constant [7 x i8] c"%s[%d]\00", align 1
@79 = private unnamed_addr constant [4 x i8] c"i%d\00", align 1
@80 = private unnamed_addr constant [4 x i8] c"f%d\00", align 1
@81 = private unnamed_addr constant [7 x i8] c"record\00", align 1
@82 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@83 = private unnamed_addr constant [13 x i8] c"__generics__\00", align 1
@84 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@85 = private unnamed_addr constant [68 x i8] c"Name '%s' has already been used for another type. consider renaming\00", align 1
@86 = private unnamed_addr constant [41 x i8] c"Generic expects %d parameters but got %d\00", align 1
@87 = private unnamed_addr constant [4 x i8] c"%s_\00", align 1
@88 = private unnamed_addr constant [6 x i8] c"%s_%s\00", align 1
@89 = private unnamed_addr constant [55 x i8] c"Initilializer for global variable has to be a constant\00", align 1
@90 = private unnamed_addr constant [56 x i8] c"Expected type of '%s' but got type of '%s' on signature\00", align 1
@91 = private unnamed_addr constant [52 x i8] c"Import statement path can't be a a formatted string\00", align 1
@92 = private unnamed_addr constant [28 x i8] c"%s not found in module \22\22%s\00", align 1
@93 = private unnamed_addr constant [37 x i8] c"Illegal re-declaration of const '%s'\00", align 1
@94 = private unnamed_addr constant [48 x i8] c"Illegal re-declaration of type '%s' as function\00", align 1
@95 = private unnamed_addr constant [53 x i8] c"Expected an int type for enum type but got type '%s'\00", align 1
@96 = private unnamed_addr constant [38 x i8] c"Enum initializer has to be a constant\00", align 1
@97 = private unnamed_addr constant [36 x i8] c"Expected type '%s' but got type '%s\00", align 1
@98 = private unnamed_addr constant [7 x i8] c"__eq__\00", align 1
@99 = private unnamed_addr constant [8 x i8] c"__add__\00", align 1
@100 = private unnamed_addr constant [8 x i8] c"__sub__\00", align 1
@101 = private unnamed_addr constant [8 x i8] c"__mul__\00", align 1
@102 = private unnamed_addr constant [8 x i8] c"__div__\00", align 1
@103 = private unnamed_addr constant [7 x i8] c"__or__\00", align 1
@104 = private unnamed_addr constant [8 x i8] c"__ora__\00", align 1
@105 = private unnamed_addr constant [12 x i8] c"__getitem__\00", align 1
@106 = private unnamed_addr constant [12 x i8] c"__setitem__\00", align 1
@107 = private unnamed_addr constant [7 x i8] c"__sl__\00", align 1
@108 = private unnamed_addr constant [7 x i8] c"__sr__\00", align 1
@109 = private unnamed_addr constant [8 x i8] c"__sla__\00", align 1
@110 = private unnamed_addr constant [8 x i8] c"__sra__\00", align 1
@111 = private unnamed_addr constant [7 x i8] c"__in__\00", align 1
@112 = private unnamed_addr constant [7 x i8] c"__lt__\00", align 1
@113 = private unnamed_addr constant [7 x i8] c"__lg__\00", align 1
@114 = private unnamed_addr constant [7 x i8] c"__ne__\00", align 1
@115 = private unnamed_addr constant [7 x i8] c"__le__\00", align 1
@116 = private unnamed_addr constant [7 x i8] c"__ge__\00", align 1
@117 = private unnamed_addr constant [8 x i8] c"__pow__\00", align 1
@118 = private unnamed_addr constant [8 x i8] c"__mod__\00", align 1
@119 = private unnamed_addr constant [8 x i8] c"__del__\00", align 1
@120 = private unnamed_addr constant [76 x i8] c" is reserved only for operator overloads and cannot be used as a field name\00", align 1
@121 = private unnamed_addr constant [36 x i8] c"Field %s in class %s already exists\00", align 1
@122 = private unnamed_addr constant [89 x i8] c"Signature of inherited field %s in class %s does not match expected parent signature '%s\00", align 1
@123 = private unnamed_addr constant [49 x i8] c"Expected inherited field %s in class %s to be %s\00", align 1
@124 = private unnamed_addr constant [68 x i8] c"Expected type '%s' but got type '%s' on static field initialization\00", align 1
@125 = private unnamed_addr constant [46 x i8] c"Static field initializer has to be a constant\00", align 1
@126 = private unnamed_addr constant [65 x i8] c"Expected %d arguments for binary operator overload %s but got %d\00", align 1
@127 = private unnamed_addr constant [45 x i8] c"Binary operator overload %s cannot be static\00", align 1
@128 = private unnamed_addr constant [75 x i8] c"__iter__ method must return an iteratable object {done: bool, next(): any}\00", align 1
@129 = private unnamed_addr constant [37 x i8] c"Method %s in class %s already exists\00", align 1
@130 = private unnamed_addr constant [91 x i8] c"Signature of inherited method %s in class %s does not match expected parent signature '%s'\00", align 1
@131 = private unnamed_addr constant [50 x i8] c"Expected inherited method %s in class %s to be %s\00", align 1
@132 = private unnamed_addr constant [32 x i8] c"Static method can't be abstract\00", align 1
@133 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@134 = private unnamed_addr constant [34 x i8] c"Class constructor can't be static\00", align 1
@135 = private unnamed_addr constant [36 x i8] c"Class constructor can't be abstract\00", align 1
@136 = private unnamed_addr constant [59 x i8] c"Can't have a abstract private method use protected instead\00", align 1
@137 = private unnamed_addr constant [6 x i8] c"super\00", align 1
@138 = private unnamed_addr constant [42 x i8] c"Can only inherit from class not type '%s'\00", align 1
@139 = private unnamed_addr constant [81 x i8] c"Class with constructor must implement all it's methods missing %s implementation\00", align 1
@140 = private unnamed_addr constant [39 x i8] c"Method missing ending return statement\00", align 1
@141 = private unnamed_addr constant [41 x i8] c"Function missing ending return statement\00", align 1
@142 = private unnamed_addr constant [17 x i8] c"length is an int\00", align 1
@143 = private unnamed_addr constant [31 x i8] c"length is a non-constant value\00", align 1
@144 = private unnamed_addr constant [32 x i8] c"length should be greater than 0\00", align 1
@145 = private unnamed_addr constant [20 x i8] c"Undefined type '%s'\00", align 1
@146 = private unnamed_addr constant [48 x i8] c"Expected element type of '%s' but got type '%s'\00", align 1
@147 = private unnamed_addr constant [24 x i8] c"Undefined variable '%s'\00", align 1
@148 = private unnamed_addr constant [34 x i8] c"Cannot assign a value to a record\00", align 1
@149 = private unnamed_addr constant [36 x i8] c"Cannot assign a value to a constant\00", align 1
@150 = private unnamed_addr constant [52 x i8] c"Illegal assignment of variable of type '%s' to '%s'\00", align 1
@151 = private unnamed_addr constant [7 x i8] c"__gt__\00", align 1
@152 = private unnamed_addr constant [8 x i8] c"__and__\00", align 1
@153 = private unnamed_addr constant [8 x i8] c"__xor__\00", align 1
@154 = private unnamed_addr constant [37 x i8] c"Expected type '%s' but got type '%s'\00", align 1
@155 = private unnamed_addr constant [55 x i8] c"Unsupported binary operator overload for operator '%s'\00", align 1
@156 = private unnamed_addr constant [108 x i8] c"No binary operator overload for '%s' in object of class '%s' please implement the method %s to support this\00", align 1
@157 = private unnamed_addr constant [114 x i8] c"No operator overload for index set operator on %s object please implement method __setitem__ to use in this class\00", align 1
@158 = private unnamed_addr constant [6 x i8] c"Range\00", align 1
@159 = private unnamed_addr constant [58 x i8] c"Illegal binary operation '%s' between types '%s' and '%s'\00", align 1
@160 = private unnamed_addr constant [8 x i8] c"++(pre)\00", align 1
@161 = private unnamed_addr constant [8 x i8] c"--(pre)\00", align 1
@162 = private unnamed_addr constant [39 x i8] c"Illegal unary operation %s on constant\00", align 1
@163 = private unnamed_addr constant [40 x i8] c"Illegal unary operation %s on type '%s'\00", align 1
@164 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@165 = private unnamed_addr constant [30 x i8] c"Cannot cast type '%s' to '%s'\00", align 1
@166 = private unnamed_addr constant [45 x i8] c"Cannot construct an object of abstract class\00", align 1
@167 = private unnamed_addr constant [55 x i8] c"Expected %d argument(s) on constructor call but got %d\00", align 1
@168 = private unnamed_addr constant [71 x i8] c"Expected type '%s' but got type '%s' as constructor call argument (%d)\00", align 1
@169 = private unnamed_addr constant [68 x i8] c"New operator expects 1 argument for pointers but got %d argument(s)\00", align 1
@170 = private unnamed_addr constant [23 x i8] c"Type {\0A 'kind': %s, \0A}\00", align 1
@171 = private unnamed_addr constant [74 x i8] c"New operator for pointers expects argument of type '%s' but got type '%s'\00", align 1
@172 = private unnamed_addr constant [65 x i8] c"New operator expects either an a pointer or an object not a '%s'\00", align 1
@173 = private unnamed_addr constant [76 x i8] c"Property '%s' is defined as private and only accessible within the class %s\00", align 1
@174 = private unnamed_addr constant [71 x i8] c"Property '%s' is defined as %s and only accessible within the class %s\00", align 1
@175 = private unnamed_addr constant [52 x i8] c"Property '%s' doesn't exist in object of class '%s'\00", align 1
@176 = private unnamed_addr constant [50 x i8] c"Property '%s' is not a static member in class '%s\00", align 1
@177 = private unnamed_addr constant [40 x i8] c"'%s' is not an element of enum the '%s'\00", align 1
@178 = private unnamed_addr constant [10 x i8] c"copy_from\00", align 1
@179 = private unnamed_addr constant [10 x i8] c"move_from\00", align 1
@180 = private unnamed_addr constant [10 x i8] c"fill_with\00", align 1
@181 = private unnamed_addr constant [7 x i8] c"resize\00", align 1
@182 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@183 = private unnamed_addr constant [28 x i8] c"intrinsic %s is not defined\00", align 1
@184 = private unnamed_addr constant [38 x i8] c"Cannot get property '%s' of type '%s'\00", align 1
@185 = private unnamed_addr constant [53 x i8] c"Expected type '%s' from first case but got type '%s'\00", align 1
@186 = private unnamed_addr constant [122 x i8] c"No operator overload for indexing operator on %s object please implement method __getitem__ to use indexing in this class\00", align 1
@187 = private unnamed_addr constant [35 x i8] c"Expected an integer type for index\00", align 1
@188 = private unnamed_addr constant [39 x i8] c"Cannot index into a value of type '%s'\00", align 1
@189 = private unnamed_addr constant [47 x i8] c"Expected a function type for call but got '%s'\00", align 1
@190 = private unnamed_addr constant [52 x i8] c"Expected %d argument(s) on function call but got %d\00", align 1
@191 = private unnamed_addr constant [63 x i8] c"Expected type '%s' but got type '%s' as function call argument\00", align 1
@192 = private unnamed_addr constant [66 x i8] c"Expected argument 1 to be of type to be of a pointer but got '%s'\00", align 1
@193 = private unnamed_addr constant [49 x i8] c"Expected 2 arguments on function call but got %d\00", align 1
@194 = private unnamed_addr constant [63 x i8] c"Expected an int of but got type '%s' as function call argument\00", align 1
@195 = private unnamed_addr constant [49 x i8] c"Expected 3 arguments on function call but got %d\00", align 1
@196 = private unnamed_addr constant [66 x i8] c"Expected type '%s' of but got type '%s' as function call argument\00", align 1
@197 = private unnamed_addr constant [26 x i8] c"Variable '%s' has no type\00", align 1
@198 = private unnamed_addr constant [70 x i8] c"Cannot declare a value as null without any type hint for future usage\00", align 1
@199 = private unnamed_addr constant [61 x i8] c"Expected type '%s' but got type '%s' on variable declaration\00", align 1
@200 = private unnamed_addr constant [57 x i8] c"Illegal re-declaration of already declared variable '%s'\00", align 1
@201 = private unnamed_addr constant [49 x i8] c"Cannot assign a non-constant value to a constant\00", align 1
@202 = private unnamed_addr constant [29 x i8] c"Iterator has to be an object\00", align 1
@203 = private unnamed_addr constant [47 x i8] c"Iterator type has to have __iter__ as property\00", align 1
@204 = private unnamed_addr constant [7 x i8] c"tmp_it\00", align 1
@205 = private unnamed_addr constant [30 x i8] c"Illegal break outside of loop\00", align 1
@206 = private unnamed_addr constant [33 x i8] c"Illegal continue outside of loop\00", align 1
@207 = private unnamed_addr constant [55 x i8] c"Function with void return type cannot return any value\00", align 1
@208 = private unnamed_addr constant [57 x i8] c"Expected return type of '%s' but got return type of '%s'\00", align 1
@209 = private unnamed_addr constant [33 x i8] c"Function return type is not void\00", align 1
@VTableGeneratedModule = internal global <{ ptr, ptr, ptr, ptr }> <{ ptr @GeneratedModule_run_passes, ptr @GeneratedModule_exec, ptr @GeneratedModule_write_object, ptr @GeneratedModule_print }>
@210 = private unnamed_addr constant [10 x i8] c"Panic: %s\00", align 1
@211 = private unnamed_addr constant [10 x i8] c"error: %s\00", align 1
@212 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@213 = private unnamed_addr constant [49 x i8] c"Main function not found in module; can't execute\00", align 1
@214 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@215 = private unnamed_addr constant [10 x i8] c"output.ll\00", align 1
@VTableArray_LLVMValueRef_ = internal global <{ ptr, ptr }> <{ ptr @Array_LLVMValueRef__pop, ptr @Array_LLVMValueRef__find }>
@VTableArray_LLVMTypeRef_ = internal global <{ ptr, ptr }> <{ ptr @Array_LLVMTypeRef__pop, ptr @Array_LLVMTypeRef__find }>
@216 = private unnamed_addr constant [9 x i8] c"%d;%d;%d\00", align 1
@217 = private unnamed_addr constant [33 x i8] c"Type could not be code generated\00", align 1
@218 = private unnamed_addr constant [8 x i8] c"realloc\00", align 1
@219 = private unnamed_addr constant [7 x i8] c"memcmp\00", align 1
@220 = private unnamed_addr constant [6 x i8] c"%s {\0A\00", align 1
@221 = private unnamed_addr constant [7 x i8] c" ... }\00", align 1
@222 = private unnamed_addr constant [4 x i8] c"lld\00", align 1
@223 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@224 = private unnamed_addr constant [13 x i8] c" '%s': %s, \0A\00", align 1
@225 = private unnamed_addr constant [11 x i8] c"<function>\00", align 1
@226 = private unnamed_addr constant [18 x i8] c"string_from_bytes\00", align 1
@227 = private unnamed_addr constant [55 x i8] c"Could not find function 'string.from_bytes' in program\00", align 1
@228 = private unnamed_addr constant [55 x i8] c"Array expression is not a constant (codegen_array_exp)\00", align 1
@229 = private unnamed_addr constant [46 x i8] c"This should never happen! (get_expr_mem: var)\00", align 1
@230 = private unnamed_addr constant [9 x i8] c"arrayidx\00", align 1
@231 = private unnamed_addr constant [7 x i8] c"ptridx\00", align 1
@232 = private unnamed_addr constant [9 x i8] c"%s;%d;%d\00", align 1
@233 = private unnamed_addr constant [10 x i8] c"memberidx\00", align 1
@234 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@235 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@236 = private unnamed_addr constant [12 x i8] c"llvm.pow.%s\00", align 1
@237 = private unnamed_addr constant [23 x i8] c"Unknown case! %s %s %s\00", align 1
@238 = private unnamed_addr constant [11 x i8] c"incdec.ptr\00", align 1
@239 = private unnamed_addr constant [51 x i8] c"This should never happen; (codegen_var_access_exp)\00", align 1
@240 = private unnamed_addr constant [11 x i8] c"true_block\00", align 1
@241 = private unnamed_addr constant [12 x i8] c"false_block\00", align 1
@242 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@243 = private unnamed_addr constant [8 x i8] c"ternary\00", align 1
@244 = private unnamed_addr constant [52 x i8] c"this should not happen; (codegen_member_exp); class\00", align 1
@245 = private unnamed_addr constant [60 x i8] c"This should never happen; (codegen_member_expr; class prop)\00", align 1
@246 = private unnamed_addr constant [51 x i8] c"this should not happen; (codegen_member_exp); enum\00", align 1
@247 = private unnamed_addr constant [11 x i8] c"to_cstring\00", align 1
@248 = private unnamed_addr constant [22 x i8] c"instrinsic not found!\00", align 1
@249 = private unnamed_addr constant [9 x i8] c"if.entry\00", align 1
@250 = private unnamed_addr constant [6 x i8] c"ifend\00", align 1
@251 = private unnamed_addr constant [10 x i8] c"for.entry\00", align 1
@252 = private unnamed_addr constant [9 x i8] c"for.cond\00", align 1
@253 = private unnamed_addr constant [9 x i8] c"for.body\00", align 1
@254 = private unnamed_addr constant [9 x i8] c"for.incr\00", align 1
@255 = private unnamed_addr constant [8 x i8] c"for.end\00", align 1
@256 = private unnamed_addr constant [12 x i8] c"while.entry\00", align 1
@257 = private unnamed_addr constant [10 x i8] c"while.end\00", align 1
@258 = private unnamed_addr constant [48 x i8] c"Could not find constructor for constructor call\00", align 1
@259 = private unnamed_addr constant [76 x i8] c"This should not happen: could not find function %s_%s (declare_class_props)\00", align 1
@260 = private unnamed_addr constant [9 x i8] c"VTable%s\00", align 1
@261 = private unnamed_addr constant [15 x i8] c"%s_constructor\00", align 1
@262 = private unnamed_addr constant [12 x i8] c"--emit-llvm\00", align 1
@263 = private unnamed_addr constant [4 x i8] c"a.o\00", align 1
@264 = private unnamed_addr constant [25 x i8] c"No input file specified.\00", align 1

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @string_find(ptr nocapture readonly %0, ptr nocapture readonly %1, i64 %2) #0 {
for.entry:
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp sgt i64 %3, %2
  br i1 %4, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = load i8, ptr %5, align 1
  %memberidx2 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.026 = phi i64 [ %2, %for.body.lr.ph ], [ %13, %ifend ]
  %ptridx3 = getelementptr inbounds i8, ptr %7, i64 %i.026
  %8 = load i8, ptr %ptridx3, align 1
  %9 = icmp eq i8 %6, %8
  br i1 %9, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend, %ifend11, %while.entry, %for.entry, %if.entry
  %common.ret.op = phi i64 [ %i.026, %if.entry ], [ -1, %for.entry ], [ -1, %while.entry ], [ %i.026, %ifend11 ], [ -1, %ifend ]
  ret i64 %common.ret.op

if.entry:                                         ; preds = %for.body
  %memberidx4 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %10 = load i64, ptr %memberidx4, align 4
  %11 = add i64 %10, -1
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %while.entry, label %common.ret

ifend:                                            ; preds = %for.body
  %13 = add nsw i64 %i.026, 1
  %14 = icmp slt i64 %13, %3
  br i1 %14, label %for.body, label %common.ret

while.entry:                                      ; preds = %if.entry, %ifend11
  %15 = phi i64 [ %19, %ifend11 ], [ %11, %if.entry ]
  %ptridx6 = getelementptr inbounds i8, ptr %5, i64 %15
  %16 = load i8, ptr %ptridx6, align 1
  %17 = add i64 %15, %i.026
  %ptridx8 = getelementptr inbounds i8, ptr %7, i64 %17
  %18 = load i8, ptr %ptridx8, align 1
  %.not = icmp eq i8 %16, %18
  br i1 %.not, label %ifend11, label %common.ret

ifend11:                                          ; preds = %while.entry
  %19 = add i64 %15, -1
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %while.entry, label %common.ret
}

define internal noalias ptr @string_substring(ptr nocapture readonly %0, i64 %1, i64 %2) {
  %4 = trunc i64 %2 to i32
  %mallocsize = shl i32 %4, 3
  %5 = tail call ptr @malloc(i32 %mallocsize)
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 1073741824 %7, i64 %2, i1 false)
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %8, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  store ptr %5, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  store i64 %2, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %8, i64 0, i32 3
  store i64 %2, ptr %memberidx2.i, align 4
  ret ptr %8
}

define internal ptr @string_replace(ptr %0, ptr %1, ptr nocapture readonly %2) {
  %4 = load ptr, ptr %0, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i64 %5(ptr nonnull %0, ptr %1, i64 0)
  %7 = icmp sgt i64 %6, -1
  br i1 %7, label %if.entry, label %common.ret

common.ret:                                       ; preds = %3, %if.entry
  %common.ret.op = phi ptr [ %23, %if.entry ], [ %0, %3 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %memberidx1 = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %8 = load i64, ptr %memberidx1, align 4
  %memberidx2 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %9 = load i64, ptr %memberidx2, align 4
  %10 = sub i64 %8, %9
  %memberidx3 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  %11 = load i64, ptr %memberidx3, align 4
  %12 = add i64 %10, %11
  %13 = trunc i64 %12 to i32
  %mallocsize = shl i32 %13, 3
  %14 = tail call ptr @malloc(i32 %mallocsize)
  %memberidx4 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %memberidx4, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %15, i64 %6, i1 false)
  %ptridx = getelementptr inbounds i8, ptr %14, i64 %6
  %memberidx6 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  %16 = load ptr, ptr %memberidx6, align 8
  %17 = load i64, ptr %memberidx3, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %ptridx, ptr align 8 %16, i64 %17, i1 false)
  %18 = add i64 %17, %6
  %ptridx9 = getelementptr inbounds i8, ptr %14, i64 %18
  %19 = load i64, ptr %memberidx2, align 4
  %20 = add i64 %19, %6
  %ptridx14 = getelementptr inbounds i8, ptr %15, i64 %20
  %21 = load i64, ptr %memberidx1, align 4
  %22 = sub i64 %21, %20
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %ptridx9, ptr align 1073741824 %ptridx14, i64 %22, i1 false)
  %23 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %23, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %23, i64 0, i32 1
  store ptr %14, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %23, i64 0, i32 2
  store i64 %12, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %23, i64 0, i32 3
  store i64 %12, ptr %memberidx2.i, align 4
  br label %common.ret
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn
define internal ptr @string_get_bytes(ptr nocapture readonly %0) #1 {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %2 = load ptr, ptr %memberidx, align 8
  ret ptr %2
}

define internal noalias ptr @string_to_cstring(ptr nocapture readonly %0) {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = trunc i64 %2 to i32
  %4 = shl i32 %3, 3
  %mallocsize = add i32 %4, 8
  %5 = tail call ptr @malloc(i32 %mallocsize)
  %memberidx1 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %memberidx, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %6, i64 %7, i1 false)
  %ptridx = getelementptr inbounds i8, ptr %5, i64 %7
  store i8 0, ptr %ptridx, align 1
  ret ptr %5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly willreturn
define internal i8 @string_get_byte(ptr nocapture readonly %0, i64 %1) #2 {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %ptridx = getelementptr inbounds i8, ptr %3, i64 %1
  %4 = load i8, ptr %ptridx, align 1
  ret i8 %4
}

define internal i1 @string_ends_with(ptr nocapture readonly %0, ptr nocapture readonly %1) {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp slt i64 %3, %4
  br i1 %5, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend
  %common.ret.op = phi i1 [ %12, %ifend ], [ false, %2 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %2
  %memberidx2 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 %3
  %8 = sub i64 0, %4
  %9 = getelementptr inbounds i8, ptr %7, i64 %8
  %memberidx5 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %10 = load ptr, ptr %memberidx5, align 8
  %11 = tail call i64 @memcmp(ptr %9, ptr %10, i64 %4)
  %12 = icmp eq i64 %11, 0
  br label %common.ret
}

define internal i1 @string_starts_with(ptr nocapture readonly %0, ptr nocapture readonly %1) {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp slt i64 %3, %4
  br i1 %5, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend
  %common.ret.op = phi i1 [ %9, %ifend ], [ false, %2 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %2
  %memberidx2 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = tail call i64 @memcmp(ptr %6, ptr %7, i64 %4)
  %9 = icmp eq i64 %8, 0
  br label %common.ret
}

declare noalias ptr @malloc(i32) local_unnamed_addr

; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1)
declare noalias noundef ptr @realloc(ptr allocptr nocapture, i64 noundef) local_unnamed_addr #4

declare i64 @memcmp(ptr, ptr, i64) local_unnamed_addr

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free")
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(ptr nocapture) local_unnamed_addr #6

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_string__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

define internal i64 @Array_string__find(ptr nocapture readonly %0, ptr nocapture readonly %1) {
for.entry:
  %memberidx = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 1
  %memberidx1.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %4 = phi i64 [ %2, %for.body.lr.ph ], [ %13, %ifend ]
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %14, %ifend ]
  %5 = load ptr, ptr %memberidx1, align 8
  %ptridx = getelementptr inbounds ptr, ptr %5, i64 %i.06
  %6 = load ptr, ptr %ptridx, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx.i, align 4
  %8 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp eq i64 %7, %8
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %for.body
  %memberidx2.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  %9 = load ptr, ptr %memberidx2.i, align 8
  %10 = load ptr, ptr %memberidx3.i, align 8
  %11 = tail call i64 @memcmp(ptr %9, ptr %10, i64 %7)
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %common.ret, label %ifend.i.ifend_crit_edge

ifend.i.ifend_crit_edge:                          ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx, align 4
  br label %ifend

common.ret:                                       ; preds = %ifend, %ifend.i, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %ifend.i ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %ifend.i.ifend_crit_edge, %for.body
  %13 = phi i64 [ %.pre, %ifend.i.ifend_crit_edge ], [ %4, %for.body ]
  %14 = add nuw nsw i64 %i.06, 1
  %15 = icmp slt i64 %14, %13
  br i1 %15, label %for.body, label %common.ret
}

; Function Attrs: nofree
declare void @write(i64 noundef, ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #8

declare i64 @asprintf(ptr, ptr, ...) local_unnamed_addr

define internal fastcc ptr @flag_value_or(ptr %0, ptr %1, ptr readnone %2) unnamed_addr {
  %4 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr }>, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call i64 %5(ptr nonnull %0, ptr %1)
  %.not = icmp eq i64 %6, -1
  br i1 %.not, label %common.ret, label %if.entry

if.entry:                                         ; preds = %3
  %memberidx1 = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 2
  %7 = load i64, ptr %memberidx1, align 4
  %8 = add nuw i64 %6, 1
  %9 = icmp sgt i64 %7, %8
  br i1 %9, label %if.entry2, label %else3

common.ret:                                       ; preds = %else3, %3, %if.entry2
  %common.ret.op = phi ptr [ %11, %if.entry2 ], [ %2, %3 ], [ %2, %else3 ]
  ret ptr %common.ret.op

if.entry2:                                        ; preds = %if.entry
  %memberidx.i = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %10, i64 %8
  %11 = load ptr, ptr %ptridx.i, align 8
  br label %common.ret

else3:                                            ; preds = %if.entry
  %12 = load ptr, ptr %1, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %12, i64 0, i32 5
  %13 = load ptr, ptr %memberidx5, align 8
  %14 = tail call ptr %13(ptr nonnull %1)
  %15 = alloca ptr, align 8
  %16 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %15, ptr nonnull @17, ptr %14)
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %18, align 8
  %memberidx.i11 = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  store ptr %17, ptr %memberidx.i11, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  store i64 %16, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 3
  store i64 %16, ptr %memberidx2.i, align 4
  tail call void @free(ptr %14)
  call fastcc void @print_message_error(i64 4, ptr nonnull %18)
  br label %common.ret
}

define internal fastcc void @print_message_error(i64 %0, ptr %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @10, i64 7, i1 false)
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %4, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  store ptr %3, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %5 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %6 = tail call ptr %5(ptr nonnull %4)
  %7 = load i64, ptr %memberidx1.i.i.i, align 4
  tail call void @write(i64 1, ptr %6, i64 %7)
  switch i64 %0, label %else11 [
    i64 0, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 5, label %if.entry7
    i64 1, label %if.entry10
  ]

if.entry:                                         ; preds = %2
  %8 = tail call ptr @malloc(i32 168)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %8, ptr noundef nonnull align 8 dereferenceable(21) @11, i64 21, i1 false)
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %9, align 8
  %memberidx.i.i17 = getelementptr inbounds %string, ptr %9, i64 0, i32 1
  store ptr %8, ptr %memberidx.i.i17, align 8
  %memberidx1.i.i18 = getelementptr inbounds %string, ptr %9, i64 0, i32 2
  store i64 21, ptr %memberidx1.i.i18, align 4
  br label %ifend

ifend:                                            ; preds = %if.entry10, %else11, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink51 = phi ptr [ %29, %if.entry10 ], [ %31, %else11 ], [ %27, %if.entry7 ], [ %25, %if.entry4 ], [ %23, %if.entry1 ], [ %9, %if.entry ]
  %.sink = phi i64 [ 14, %if.entry10 ], [ 9, %else11 ], [ 14, %if.entry7 ], [ 12, %if.entry4 ], [ 16, %if.entry1 ], [ 21, %if.entry ]
  %memberidx1.i.i39.sink = phi ptr [ %memberidx1.i.i39, %if.entry10 ], [ %memberidx1.i.i44, %else11 ], [ %memberidx1.i.i34, %if.entry7 ], [ %memberidx1.i.i29, %if.entry4 ], [ %memberidx1.i.i24, %if.entry1 ], [ %memberidx1.i.i18, %if.entry ]
  %memberidx2.i.i40 = getelementptr inbounds %string, ptr %.sink51, i64 0, i32 3
  store i64 %.sink, ptr %memberidx2.i.i40, align 4
  %10 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %11 = tail call ptr %10(ptr nonnull %.sink51)
  %12 = load i64, ptr %memberidx1.i.i39.sink, align 4
  tail call void @write(i64 1, ptr %11, i64 %12)
  %13 = tail call ptr @malloc(i32 32)
  store i32 1831885595, ptr %13, align 8
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i.i1.i = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i.i1.i, align 8
  %memberidx1.i.i2.i = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i2.i, align 4
  %memberidx2.i.i3.i = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i3.i, align 4
  %15 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %16 = tail call ptr %15(ptr nonnull %14)
  %17 = load i64, ptr %memberidx1.i.i2.i, align 4
  tail call void @write(i64 1, ptr %16, i64 %17)
  %18 = load ptr, ptr %1, align 8
  %memberidx.i.i21 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %18, i64 0, i32 3
  %19 = load ptr, ptr %memberidx.i.i21, align 8
  %20 = tail call ptr %19(ptr nonnull %1)
  %memberidx1.i.i22 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %21 = load i64, ptr %memberidx1.i.i22, align 4
  tail call void @write(i64 1, ptr %20, i64 %21)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  ret void

if.entry1:                                        ; preds = %2
  %22 = tail call ptr @malloc(i32 128)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, ptr noundef nonnull align 8 dereferenceable(16) @12, i64 16, i1 false)
  %23 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %23, align 8
  %memberidx.i.i23 = getelementptr inbounds %string, ptr %23, i64 0, i32 1
  store ptr %22, ptr %memberidx.i.i23, align 8
  %memberidx1.i.i24 = getelementptr inbounds %string, ptr %23, i64 0, i32 2
  store i64 16, ptr %memberidx1.i.i24, align 4
  br label %ifend

if.entry4:                                        ; preds = %2
  %24 = tail call ptr @malloc(i32 96)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %24, ptr noundef nonnull align 8 dereferenceable(12) @13, i64 12, i1 false)
  %25 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %25, align 8
  %memberidx.i.i28 = getelementptr inbounds %string, ptr %25, i64 0, i32 1
  store ptr %24, ptr %memberidx.i.i28, align 8
  %memberidx1.i.i29 = getelementptr inbounds %string, ptr %25, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i29, align 4
  br label %ifend

if.entry7:                                        ; preds = %2
  %26 = tail call ptr @malloc(i32 112)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %26, ptr noundef nonnull align 8 dereferenceable(14) @14, i64 14, i1 false)
  %27 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %27, align 8
  %memberidx.i.i33 = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  store ptr %26, ptr %memberidx.i.i33, align 8
  %memberidx1.i.i34 = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  store i64 14, ptr %memberidx1.i.i34, align 4
  br label %ifend

if.entry10:                                       ; preds = %2
  %28 = tail call ptr @malloc(i32 112)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %28, ptr noundef nonnull align 8 dereferenceable(14) @15, i64 14, i1 false)
  %29 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %29, align 8
  %memberidx.i.i38 = getelementptr inbounds %string, ptr %29, i64 0, i32 1
  store ptr %28, ptr %memberidx.i.i38, align 8
  %memberidx1.i.i39 = getelementptr inbounds %string, ptr %29, i64 0, i32 2
  store i64 14, ptr %memberidx1.i.i39, align 4
  br label %ifend

else11:                                           ; preds = %2
  %30 = tail call ptr @malloc(i32 72)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %30, ptr noundef nonnull align 8 dereferenceable(9) @16, i64 9, i1 false)
  %31 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %31, align 8
  %memberidx.i.i43 = getelementptr inbounds %string, ptr %31, i64 0, i32 1
  store ptr %30, ptr %memberidx.i.i43, align 8
  %memberidx1.i.i44 = getelementptr inbounds %string, ptr %31, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i44, align 4
  br label %ifend
}

define i64 @main(i64 %0, ptr nocapture readonly %1) local_unnamed_addr {
  %3 = alloca %CodeGen, align 8
  %4 = alloca %TypeChecker, align 8
  %5 = alloca ptr, align 8
  %6 = icmp sgt i64 %0, 1
  br i1 %6, label %for.body.i.preheader, label %else

for.body.i.preheader:                             ; preds = %2
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_string_, ptr %7, align 8
  %memberidx.i.i = getelementptr inbounds %Array_string_, ptr %7, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_string_, ptr %7, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_string_, ptr %7, i64 0, i32 1
  %8 = tail call ptr @malloc(i32 64)
  store ptr %8, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader, %Array_string____sl__.exit.i
  %i.0.i179 = phi i64 [ %23, %Array_string____sl__.exit.i ], [ 0, %for.body.i.preheader ]
  %ptridx.i = getelementptr inbounds ptr, ptr %1, i64 %i.0.i179
  %9 = load ptr, ptr %ptridx.i, align 8
  %10 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %9)
  %11 = trunc i64 %10 to i32
  %mallocsize.i.i = shl i32 %11, 3
  %12 = tail call ptr @malloc(i32 %mallocsize.i.i)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %9, i64 %10, i1 false)
  %13 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %10, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %10, ptr %memberidx2.i.i.i, align 4
  %14 = load i64, ptr %memberidx.i.i, align 4
  %15 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp slt i64 %14, %15
  br i1 %.not.i.i, label %for.body.i.Array_string____sl__.exit.i_crit_edge, label %if.entry.i.i

for.body.i.Array_string____sl__.exit.i_crit_edge: ; preds = %for.body.i
  %.pre187 = load ptr, ptr %memberidx2.i.i, align 8
  br label %Array_string____sl__.exit.i

if.entry.i.i:                                     ; preds = %for.body.i
  %16 = shl i64 %15, 1
  store i64 %16, ptr %memberidx1.i.i, align 4
  %17 = load ptr, ptr %memberidx2.i.i, align 8
  %18 = shl i64 %15, 4
  %19 = tail call ptr @realloc(ptr %17, i64 %18)
  store ptr %19, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %Array_string____sl__.exit.i

Array_string____sl__.exit.i:                      ; preds = %for.body.i.Array_string____sl__.exit.i_crit_edge, %if.entry.i.i
  %20 = phi ptr [ %19, %if.entry.i.i ], [ %.pre187, %for.body.i.Array_string____sl__.exit.i_crit_edge ]
  %21 = phi i64 [ %.pre, %if.entry.i.i ], [ %14, %for.body.i.Array_string____sl__.exit.i_crit_edge ]
  %22 = add i64 %21, 1
  store i64 %22, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %20, i64 %21
  store ptr %13, ptr %ptridx.i.i, align 8
  %23 = add nuw nsw i64 %i.0.i179, 1
  %24 = icmp slt i64 %23, %0
  br i1 %24, label %for.body.i, label %parse_args.exit

parse_args.exit:                                  ; preds = %Array_string____sl__.exit.i
  %25 = tail call ptr @malloc(i32 16)
  store i16 30253, ptr %25, align 8
  %26 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %26, align 8
  %memberidx.i.i46 = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  store ptr %25, ptr %memberidx.i.i46, align 8
  %memberidx1.i.i47 = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i47, align 4
  %memberidx2.i.i48 = getelementptr inbounds %string, ptr %26, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i48, align 4
  %27 = load ptr, ptr %7, align 8
  %memberidx.i.i49 = getelementptr inbounds <{ ptr, ptr }>, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx.i.i49, align 8
  %29 = tail call i64 %28(ptr nonnull %7, ptr nonnull %26)
  %30 = tail call ptr @malloc(i32 72)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %30, ptr noundef nonnull align 8 dereferenceable(9) @18, i64 9, i1 false)
  %31 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %31, align 8
  %memberidx.i.i50 = getelementptr inbounds %string, ptr %31, i64 0, i32 1
  store ptr %30, ptr %memberidx.i.i50, align 8
  %memberidx1.i.i51 = getelementptr inbounds %string, ptr %31, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i51, align 4
  %memberidx2.i.i52 = getelementptr inbounds %string, ptr %31, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i52, align 4
  %32 = load ptr, ptr %7, align 8
  %memberidx.i.i53 = getelementptr inbounds <{ ptr, ptr }>, ptr %32, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i.i53, align 8
  %34 = tail call i64 %33(ptr nonnull %7, ptr nonnull %31)
  %35 = and i64 %34, %29
  %.not = icmp eq i64 %35, -1
  br i1 %.not, label %ifend3, label %if.entry1

common.ret:                                       ; preds = %TypeChecker_check.exit, %ifend24, %ifend17, %if.entry15, %if.entry4, %if.entry1, %ifend38, %else
  %common.ret.op = phi i64 [ 1, %else ], [ %code.0, %ifend38 ], [ 0, %if.entry1 ], [ 0, %if.entry4 ], [ 1, %if.entry15 ], [ 1, %ifend17 ], [ 1, %ifend24 ], [ 1, %TypeChecker_check.exit ]
  ret i64 %common.ret.op

else:                                             ; preds = %2
  %36 = tail call ptr @malloc(i32 192)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %36, ptr noundef nonnull align 8 dereferenceable(24) @264, i64 24, i1 false)
  %37 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %37, align 8
  %memberidx.i.i54 = getelementptr inbounds %string, ptr %37, i64 0, i32 1
  store ptr %36, ptr %memberidx.i.i54, align 8
  %memberidx1.i.i55 = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  store i64 24, ptr %memberidx1.i.i55, align 4
  %memberidx2.i.i56 = getelementptr inbounds %string, ptr %37, i64 0, i32 3
  store i64 24, ptr %memberidx2.i.i56, align 4
  tail call fastcc void @print_message_error(i64 4, ptr nonnull %37)
  br label %common.ret

if.entry1:                                        ; preds = %parse_args.exit
  %38 = tail call ptr @malloc(i32 152)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(19) %38, ptr noundef nonnull align 8 dereferenceable(19) @19, i64 19, i1 false)
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i57 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i57, align 8
  %memberidx1.i.i58 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 19, ptr %memberidx1.i.i58, align 4
  %memberidx2.i.i59 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 19, ptr %memberidx2.i.i59, align 4
  %40 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %41 = tail call ptr %40(ptr nonnull %39)
  %42 = load i64, ptr %memberidx1.i.i58, align 4
  tail call void @write(i64 1, ptr %41, i64 %42)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  br label %common.ret

ifend3:                                           ; preds = %parse_args.exit
  %43 = tail call ptr @malloc(i32 16)
  store i16 26669, ptr %43, align 8
  %44 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %44, align 8
  %memberidx.i.i62 = getelementptr inbounds %string, ptr %44, i64 0, i32 1
  store ptr %43, ptr %memberidx.i.i62, align 8
  %memberidx1.i.i63 = getelementptr inbounds %string, ptr %44, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i63, align 4
  %memberidx2.i.i64 = getelementptr inbounds %string, ptr %44, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i64, align 4
  %45 = load ptr, ptr %7, align 8
  %memberidx.i.i65 = getelementptr inbounds <{ ptr, ptr }>, ptr %45, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i.i65, align 8
  %47 = tail call i64 %46(ptr nonnull %7, ptr nonnull %44)
  %48 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %48, ptr noundef nonnull align 8 dereferenceable(6) @20, i64 6, i1 false)
  %49 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %49, align 8
  %memberidx.i.i66 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  store ptr %48, ptr %memberidx.i.i66, align 8
  %memberidx1.i.i67 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i67, align 4
  %memberidx2.i.i68 = getelementptr inbounds %string, ptr %49, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i68, align 4
  %50 = load ptr, ptr %7, align 8
  %memberidx.i.i69 = getelementptr inbounds <{ ptr, ptr }>, ptr %50, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i.i69, align 8
  %52 = tail call i64 %51(ptr nonnull %7, ptr nonnull %49)
  %53 = and i64 %52, %47
  %.not146 = icmp eq i64 %53, -1
  %54 = load ptr, ptr %memberidx2.i.i, align 8
  br i1 %.not146, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend3
  %55 = load ptr, ptr %54, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %56 = load ptr, ptr %55, align 8
  %memberidx.i70 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %56, i64 0, i32 5
  %57 = load ptr, ptr %memberidx.i70, align 8
  %58 = tail call ptr %57(ptr nonnull %55)
  %59 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @1, ptr %58)
  %60 = load ptr, ptr %5, align 8
  %61 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %61, align 8
  %memberidx.i.i71 = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  store ptr %60, ptr %memberidx.i.i71, align 8
  %memberidx1.i.i72 = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  store i64 %59, ptr %memberidx1.i.i72, align 4
  %memberidx2.i.i73 = getelementptr inbounds %string, ptr %61, i64 0, i32 3
  store i64 %59, ptr %memberidx2.i.i73, align 4
  call void @free(ptr %58)
  %62 = load ptr, ptr %61, align 8
  %memberidx.i.i1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %62, i64 0, i32 3
  %63 = load ptr, ptr %memberidx.i.i1.i, align 8
  %64 = call ptr %63(ptr nonnull %61)
  %65 = load i64, ptr %memberidx1.i.i72, align 4
  call void @write(i64 1, ptr %64, i64 %65)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %66 = call ptr @malloc(i32 64)
  store i64 4202788979706449999, ptr %66, align 8
  %67 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %67, align 8
  %memberidx.i.i3.i = getelementptr inbounds %string, ptr %67, i64 0, i32 1
  store ptr %66, ptr %memberidx.i.i3.i, align 8
  %memberidx1.i.i4.i = getelementptr inbounds %string, ptr %67, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i4.i, align 4
  %memberidx2.i.i.i74 = getelementptr inbounds %string, ptr %67, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i.i74, align 4
  %68 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %69 = call ptr %68(ptr nonnull %67)
  %70 = load i64, ptr %memberidx1.i.i4.i, align 4
  call void @write(i64 1, ptr %69, i64 %70)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %71 = call ptr @malloc(i32 296)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %71, ptr noundef nonnull align 8 dereferenceable(37) @2, i64 37, i1 false)
  %72 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %72, align 8
  %memberidx.i.i7.i75 = getelementptr inbounds %string, ptr %72, i64 0, i32 1
  store ptr %71, ptr %memberidx.i.i7.i75, align 8
  %memberidx1.i.i8.i = getelementptr inbounds %string, ptr %72, i64 0, i32 2
  store i64 37, ptr %memberidx1.i.i8.i, align 4
  %memberidx2.i.i9.i = getelementptr inbounds %string, ptr %72, i64 0, i32 3
  store i64 37, ptr %memberidx2.i.i9.i, align 4
  %73 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %74 = call ptr %73(ptr nonnull %72)
  %75 = load i64, ptr %memberidx1.i.i8.i, align 4
  call void @write(i64 1, ptr %74, i64 %75)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %76 = call ptr @malloc(i32 280)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %76, ptr noundef nonnull align 8 dereferenceable(35) @3, i64 35, i1 false)
  %77 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %77, align 8
  %memberidx.i.i12.i = getelementptr inbounds %string, ptr %77, i64 0, i32 1
  store ptr %76, ptr %memberidx.i.i12.i, align 8
  %memberidx1.i.i13.i = getelementptr inbounds %string, ptr %77, i64 0, i32 2
  store i64 35, ptr %memberidx1.i.i13.i, align 4
  %memberidx2.i.i14.i = getelementptr inbounds %string, ptr %77, i64 0, i32 3
  store i64 35, ptr %memberidx2.i.i14.i, align 4
  %78 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %79 = call ptr %78(ptr nonnull %77)
  %80 = load i64, ptr %memberidx1.i.i13.i, align 4
  call void @write(i64 1, ptr %79, i64 %80)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %81 = call ptr @malloc(i32 312)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(39) %81, ptr noundef nonnull align 8 dereferenceable(39) @4, i64 39, i1 false)
  %82 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %82, align 8
  %memberidx.i.i17.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  store ptr %81, ptr %memberidx.i.i17.i, align 8
  %memberidx1.i.i18.i = getelementptr inbounds %string, ptr %82, i64 0, i32 2
  store i64 39, ptr %memberidx1.i.i18.i, align 4
  %memberidx2.i.i19.i = getelementptr inbounds %string, ptr %82, i64 0, i32 3
  store i64 39, ptr %memberidx2.i.i19.i, align 4
  %83 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %84 = call ptr %83(ptr nonnull %82)
  %85 = load i64, ptr %memberidx1.i.i18.i, align 4
  call void @write(i64 1, ptr %84, i64 %85)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %86 = call ptr @malloc(i32 336)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(42) %86, ptr noundef nonnull align 8 dereferenceable(42) @5, i64 42, i1 false)
  %87 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %87, align 8
  %memberidx.i.i22.i = getelementptr inbounds %string, ptr %87, i64 0, i32 1
  store ptr %86, ptr %memberidx.i.i22.i, align 8
  %memberidx1.i.i23.i = getelementptr inbounds %string, ptr %87, i64 0, i32 2
  store i64 42, ptr %memberidx1.i.i23.i, align 4
  %memberidx2.i.i24.i = getelementptr inbounds %string, ptr %87, i64 0, i32 3
  store i64 42, ptr %memberidx2.i.i24.i, align 4
  %88 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %89 = call ptr %88(ptr nonnull %87)
  %90 = load i64, ptr %memberidx1.i.i23.i, align 4
  call void @write(i64 1, ptr %89, i64 %90)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %91 = call ptr @malloc(i32 368)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(46) %91, ptr noundef nonnull align 8 dereferenceable(46) @6, i64 46, i1 false)
  %92 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %92, align 8
  %memberidx.i.i27.i = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  store ptr %91, ptr %memberidx.i.i27.i, align 8
  %memberidx1.i.i28.i = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  store i64 46, ptr %memberidx1.i.i28.i, align 4
  %memberidx2.i.i29.i = getelementptr inbounds %string, ptr %92, i64 0, i32 3
  store i64 46, ptr %memberidx2.i.i29.i, align 4
  %93 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %94 = call ptr %93(ptr nonnull %92)
  %95 = load i64, ptr %memberidx1.i.i28.i, align 4
  call void @write(i64 1, ptr %94, i64 %95)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %96 = call ptr @malloc(i32 256)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %96, ptr noundef nonnull align 8 dereferenceable(32) @7, i64 32, i1 false)
  %97 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %97, align 8
  %memberidx.i.i32.i = getelementptr inbounds %string, ptr %97, i64 0, i32 1
  store ptr %96, ptr %memberidx.i.i32.i, align 8
  %memberidx1.i.i33.i = getelementptr inbounds %string, ptr %97, i64 0, i32 2
  store i64 32, ptr %memberidx1.i.i33.i, align 4
  %memberidx2.i.i34.i = getelementptr inbounds %string, ptr %97, i64 0, i32 3
  store i64 32, ptr %memberidx2.i.i34.i, align 4
  %98 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %99 = call ptr %98(ptr nonnull %97)
  %100 = load i64, ptr %memberidx1.i.i33.i, align 4
  call void @write(i64 1, ptr %99, i64 %100)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %101 = call ptr @malloc(i32 736)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(92) %101, ptr noundef nonnull align 8 dereferenceable(92) @8, i64 92, i1 false)
  %102 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %102, align 8
  %memberidx.i.i37.i = getelementptr inbounds %string, ptr %102, i64 0, i32 1
  store ptr %101, ptr %memberidx.i.i37.i, align 8
  %memberidx1.i.i38.i = getelementptr inbounds %string, ptr %102, i64 0, i32 2
  store i64 92, ptr %memberidx1.i.i38.i, align 4
  %memberidx2.i.i39.i = getelementptr inbounds %string, ptr %102, i64 0, i32 3
  store i64 92, ptr %memberidx2.i.i39.i, align 4
  %103 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %104 = call ptr %103(ptr nonnull %102)
  %105 = load i64, ptr %memberidx1.i.i38.i, align 4
  call void @write(i64 1, ptr %104, i64 %105)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %106 = call ptr @malloc(i32 240)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(30) %106, ptr noundef nonnull align 8 dereferenceable(30) @9, i64 30, i1 false)
  %107 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %107, align 8
  %memberidx.i.i42.i = getelementptr inbounds %string, ptr %107, i64 0, i32 1
  store ptr %106, ptr %memberidx.i.i42.i, align 8
  %memberidx1.i.i43.i = getelementptr inbounds %string, ptr %107, i64 0, i32 2
  store i64 30, ptr %memberidx1.i.i43.i, align 4
  %memberidx2.i.i44.i = getelementptr inbounds %string, ptr %107, i64 0, i32 3
  store i64 30, ptr %memberidx2.i.i44.i, align 4
  %108 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %109 = call ptr %108(ptr nonnull %107)
  %110 = load i64, ptr %memberidx1.i.i43.i, align 4
  call void @write(i64 1, ptr %109, i64 %110)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  br label %common.ret

ifend6:                                           ; preds = %ifend3
  %ptridx.i79 = getelementptr inbounds ptr, ptr %54, i64 1
  %111 = load ptr, ptr %ptridx.i79, align 8
  %112 = alloca %Compiler, align 8
  store ptr @VTableCompiler, ptr %112, align 8
  %memberidx.i80 = getelementptr inbounds %Compiler, ptr %112, i64 0, i32 5
  %113 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FloFile_, ptr %113, align 8
  %memberidx.i.i81 = getelementptr inbounds %Array_FloFile_, ptr %113, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i81, align 4
  %memberidx1.i.i82 = getelementptr inbounds %Array_FloFile_, ptr %113, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i82, align 4
  %memberidx2.i.i83 = getelementptr inbounds %Array_FloFile_, ptr %113, i64 0, i32 1
  %114 = tail call ptr @malloc(i32 64)
  store ptr %114, ptr %memberidx2.i.i83, align 8
  store i64 0, ptr %memberidx.i.i81, align 4
  store ptr %113, ptr %memberidx.i80, align 8
  %memberidx3.i = getelementptr inbounds %Compiler, ptr %112, i64 0, i32 1
  store ptr null, ptr %memberidx3.i, align 8
  %memberidx4.i = getelementptr inbounds %Compiler, ptr %112, i64 0, i32 3
  store ptr null, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Compiler, ptr %112, i64 0, i32 6
  %115 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FloError_, ptr %115, align 8
  %memberidx.i15.i = getelementptr inbounds %Array_FloError_, ptr %115, i64 0, i32 2
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx1.i16.i = getelementptr inbounds %Array_FloError_, ptr %115, i64 0, i32 3
  store i64 8, ptr %memberidx1.i16.i, align 4
  %memberidx2.i17.i = getelementptr inbounds %Array_FloError_, ptr %115, i64 0, i32 1
  %116 = tail call ptr @malloc(i32 64)
  store ptr %116, ptr %memberidx2.i17.i, align 8
  store i64 0, ptr %memberidx.i15.i, align 4
  store ptr %115, ptr %memberidx5.i, align 8
  %117 = tail call ptr @malloc(i32 24)
  %118 = tail call ptr @malloc(i32 2048)
  store ptr %118, ptr %117, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %ifend6, %for.body.i.i
  %i.0.i.i178 = phi i64 [ 0, %ifend6 ], [ %120, %for.body.i.i ]
  %119 = load ptr, ptr %117, align 8
  %ptridx.i.i84 = getelementptr inbounds ptr, ptr %119, i64 %i.0.i.i178
  store ptr null, ptr %ptridx.i.i84, align 8
  %120 = add nuw nsw i64 %i.0.i.i178, 1
  %121 = icmp ult i64 %i.0.i.i178, 255
  br i1 %121, label %for.body.i.i, label %Compiler_constructor.exit

Compiler_constructor.exit:                        ; preds = %for.body.i.i
  %memberidx8.i = getelementptr inbounds %Compiler, ptr %112, i64 0, i32 7
  %memberidx2.i18.i = getelementptr inbounds %Map_string_FileId_, ptr %117, i64 0, i32 1
  store i64 256, ptr %memberidx2.i18.i, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_string_FileId_, ptr %117, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %117, ptr %memberidx8.i, align 8
  %122 = load ptr, ptr %112, align 8
  %123 = load ptr, ptr %122, align 8
  %124 = tail call ptr @malloc(i32 64)
  store i64 7091318314087362350, ptr %124, align 8
  %125 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %125, align 8
  %memberidx.i.i.i85 = getelementptr inbounds %string, ptr %125, i64 0, i32 1
  store ptr %124, ptr %memberidx.i.i.i85, align 8
  %memberidx1.i.i.i86 = getelementptr inbounds %string, ptr %125, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i86, align 4
  %memberidx2.i.i.i87 = getelementptr inbounds %string, ptr %125, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i.i87, align 4
  call void %123(ptr nonnull %112, ptr nonnull %125)
  %126 = call ptr @malloc(i32 16)
  store i16 18733, ptr %126, align 8
  %127 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %127, align 8
  %memberidx.i.i88 = getelementptr inbounds %string, ptr %127, i64 0, i32 1
  store ptr %126, ptr %memberidx.i.i88, align 8
  %memberidx1.i.i89 = getelementptr inbounds %string, ptr %127, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i89, align 4
  %memberidx2.i.i90 = getelementptr inbounds %string, ptr %127, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i90, align 4
  %128 = load ptr, ptr %7, align 8
  %memberidx.i.i91 = getelementptr inbounds <{ ptr, ptr }>, ptr %128, i64 0, i32 1
  %129 = load ptr, ptr %memberidx.i.i91, align 8
  %130 = call i64 %129(ptr nonnull %7, ptr nonnull %127)
  %.not147 = icmp eq i64 %130, -1
  br i1 %.not147, label %ifend9, label %if.entry7

if.entry7:                                        ; preds = %Compiler_constructor.exit
  %131 = call ptr @malloc(i32 16)
  store i16 18733, ptr %131, align 8
  %132 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %132, align 8
  %memberidx.i.i92 = getelementptr inbounds %string, ptr %132, i64 0, i32 1
  store ptr %131, ptr %memberidx.i.i92, align 8
  %memberidx1.i.i93 = getelementptr inbounds %string, ptr %132, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i93, align 4
  %memberidx2.i.i94 = getelementptr inbounds %string, ptr %132, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i94, align 4
  %133 = call ptr @malloc(i32 0)
  %134 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %134, align 8
  %memberidx.i.i95 = getelementptr inbounds %string, ptr %134, i64 0, i32 1
  store ptr %133, ptr %memberidx.i.i95, align 8
  %memberidx1.i.i96 = getelementptr inbounds %string, ptr %134, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i96, i8 0, i64 16, i1 false)
  %135 = call fastcc ptr @flag_value_or(ptr nonnull %7, ptr nonnull %132, ptr nonnull %134)
  %136 = call ptr @malloc(i32 0)
  %137 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %137, align 8
  %memberidx.i.i98 = getelementptr inbounds %string, ptr %137, i64 0, i32 1
  store ptr %136, ptr %memberidx.i.i98, align 8
  %memberidx1.i.i99 = getelementptr inbounds %string, ptr %137, i64 0, i32 2
  %memberidx.i.i101 = getelementptr inbounds %string, ptr %135, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i99, i8 0, i64 16, i1 false)
  %138 = load i64, ptr %memberidx.i.i101, align 4
  %.not.i.i103 = icmp eq i64 %138, 0
  br i1 %.not.i.i103, label %ifend.i.i, label %if.entry10

ifend.i.i:                                        ; preds = %if.entry7
  %memberidx2.i.i104 = getelementptr inbounds %string, ptr %135, i64 0, i32 1
  %139 = load ptr, ptr %memberidx2.i.i104, align 8
  %140 = call i64 @memcmp(ptr %139, ptr %136, i64 0)
  %.not169 = icmp eq i64 %140, 0
  br i1 %.not169, label %ifend9, label %if.entry10

ifend9:                                           ; preds = %if.entry10, %ifend.i.i, %Compiler_constructor.exit
  %141 = load ptr, ptr %112, align 8
  %memberidx13 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr }>, ptr %141, i64 0, i32 1
  %142 = load ptr, ptr %memberidx13, align 8
  %143 = call ptr %142(ptr nonnull %112, ptr %111)
  %144 = load ptr, ptr %112, align 8
  %memberidx14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr }>, ptr %144, i64 0, i32 2
  %145 = load ptr, ptr %memberidx14, align 8
  %146 = call i1 %145(ptr nonnull %112, ptr %143)
  br i1 %146, label %ifend17, label %if.entry15

if.entry10:                                       ; preds = %if.entry7, %ifend.i.i
  %147 = load ptr, ptr %112, align 8
  %148 = load ptr, ptr %147, align 8
  call void %148(ptr nonnull %112, ptr nonnull %135)
  br label %ifend9

if.entry15:                                       ; preds = %ifend9
  %149 = load ptr, ptr %111, align 8
  %memberidx18 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %149, i64 0, i32 5
  %150 = load ptr, ptr %memberidx18, align 8
  %151 = call ptr %150(ptr nonnull %111)
  %152 = alloca ptr, align 8
  %153 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %152, ptr nonnull @27, ptr %151)
  %154 = load ptr, ptr %152, align 8
  %155 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %155, align 8
  %memberidx.i106 = getelementptr inbounds %string, ptr %155, i64 0, i32 1
  store ptr %154, ptr %memberidx.i106, align 8
  %memberidx1.i107 = getelementptr inbounds %string, ptr %155, i64 0, i32 2
  store i64 %153, ptr %memberidx1.i107, align 4
  %memberidx2.i108 = getelementptr inbounds %string, ptr %155, i64 0, i32 3
  store i64 %153, ptr %memberidx2.i108, align 4
  tail call void @free(ptr %151)
  call fastcc void @print_message_error(i64 3, ptr nonnull %155)
  br label %common.ret

ifend17:                                          ; preds = %ifend9
  %156 = load ptr, ptr %memberidx4.i, align 8
  %157 = load ptr, ptr %memberidx5.i, align 8
  %158 = call fastcc ptr @Lexer_tokenize(ptr %156, ptr %157)
  %159 = load ptr, ptr %112, align 8
  %memberidx21 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr }>, ptr %159, i64 0, i32 3
  %160 = load ptr, ptr %memberidx21, align 8
  %161 = call i1 %160(ptr nonnull %112)
  br i1 %161, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend17
  %162 = load ptr, ptr %memberidx5.i, align 8
  %163 = call fastcc ptr @Parser_parse(ptr %158, ptr %162)
  %164 = load ptr, ptr %112, align 8
  %memberidx26 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr }>, ptr %164, i64 0, i32 3
  %165 = load ptr, ptr %memberidx26, align 8
  %166 = call i1 %165(ptr nonnull %112)
  br i1 %166, label %common.ret, label %ifend29

ifend29:                                          ; preds = %ifend24
  call void @llvm.lifetime.start.p0(i64 66, ptr nonnull %4)
  %memberidx.i.i109 = getelementptr inbounds %TypeChecker, ptr %4, i64 0, i32 6
  store ptr %112, ptr %memberidx.i.i109, align 8
  %memberidx1.i.i110 = getelementptr inbounds %TypeChecker, ptr %4, i64 0, i32 1
  store i64 -1, ptr %memberidx1.i.i110, align 8
  %memberidx2.i.i111 = getelementptr inbounds %TypeChecker, ptr %4, i64 0, i32 7
  store i1 false, ptr %memberidx2.i.i111, align 8
  %167 = call ptr @malloc(i32 9)
  store i1 false, ptr %167, align 1
  %memberidx1.i.i.i112 = getelementptr inbounds %Program, ptr %167, i64 0, i32 1
  %168 = call ptr @malloc(i32 32)
  store ptr @VTableArray_Module_, ptr %168, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %168, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %168, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %168, i64 0, i32 1
  %169 = call ptr @malloc(i32 64)
  store ptr %169, ptr %memberidx2.i.i.i.i, align 8
  store i64 0, ptr %memberidx.i.i.i.i, align 4
  store ptr %168, ptr %memberidx1.i.i.i112, align 8
  store ptr %167, ptr %4, align 8
  %170 = call ptr @malloc(i32 24)
  %171 = call ptr @malloc(i32 2048)
  store ptr %171, ptr %170, align 8
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %ifend29, %for.body.i.i.i
  %i.0.i.i.i177 = phi i64 [ 0, %ifend29 ], [ %173, %for.body.i.i.i ]
  %172 = load ptr, ptr %170, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %172, i64 %i.0.i.i.i177
  store ptr null, ptr %ptridx.i.i.i, align 8
  %173 = add nuw nsw i64 %i.0.i.i.i177, 1
  %174 = icmp ult i64 %i.0.i.i.i177, 255
  br i1 %174, label %for.body.i.i.i, label %TypeChecker_constructor.exit.i

TypeChecker_constructor.exit.i:                   ; preds = %for.body.i.i.i
  %memberidx4.i.i113 = getelementptr inbounds %TypeChecker, ptr %4, i64 0, i32 9
  %memberidx2.i.i.i114 = getelementptr inbounds %Map_string_Generic_, ptr %170, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i.i114, align 4
  %memberidx3.i9.i.i = getelementptr inbounds %Map_string_Generic_, ptr %170, i64 0, i32 2
  store i64 0, ptr %memberidx3.i9.i.i, align 4
  store ptr %170, ptr %memberidx4.i.i113, align 8
  %175 = load ptr, ptr %memberidx.i.i109, align 8
  %176 = load ptr, ptr %175, align 8
  %memberidx1.i9.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr }>, ptr %176, i64 0, i32 1
  %177 = load ptr, ptr %memberidx1.i9.i, align 8
  %178 = call ptr @malloc(i32 96)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %178, ptr noundef nonnull align 8 dereferenceable(12) @83, i64 12, i1 false)
  %179 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %179, align 8
  %memberidx.i.i.i10.i = getelementptr inbounds %string, ptr %179, i64 0, i32 1
  store ptr %178, ptr %memberidx.i.i.i10.i, align 8
  %memberidx1.i.i.i11.i = getelementptr inbounds %string, ptr %179, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i.i11.i, align 4
  %memberidx2.i.i.i12.i = getelementptr inbounds %string, ptr %179, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i.i12.i, align 4
  %180 = call ptr %177(ptr nonnull %175, ptr nonnull %179)
  %181 = call ptr @malloc(i32 56)
  call fastcc void @ModuleAST_constructor(ptr %181)
  %182 = call ptr @malloc(i32 96)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %182, ptr noundef nonnull align 8 dereferenceable(12) @83, i64 12, i1 false)
  %183 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %183, align 8
  %memberidx.i.i3.i.i = getelementptr inbounds %string, ptr %183, i64 0, i32 1
  store ptr %182, ptr %memberidx.i.i3.i.i, align 8
  %memberidx1.i.i4.i.i = getelementptr inbounds %string, ptr %183, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i4.i.i, align 4
  %memberidx2.i.i5.i.i = getelementptr inbounds %string, ptr %183, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i5.i.i, align 4
  %184 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %4, ptr %181, ptr nonnull %183)
  %185 = load ptr, ptr %memberidx.i.i109, align 8
  %memberidx1.i14.i = getelementptr inbounds %Compiler, ptr %185, i64 0, i32 4
  %186 = load ptr, ptr %memberidx1.i14.i, align 8
  %187 = call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr nonnull %4, ptr %186, ptr null)
  store i64 0, ptr %memberidx1.i.i110, align 8
  %memberidx1.i16.i116 = getelementptr inbounds %TypeChecker, ptr %4, i64 0, i32 5
  %188 = load ptr, ptr %4, align 8
  %memberidx1.i.i17.i = getelementptr inbounds %Program, ptr %188, i64 0, i32 1
  %189 = load ptr, ptr %memberidx1.i.i17.i, align 8
  %memberidx.i.i.i18.i = getelementptr inbounds %Array_Module_, ptr %189, i64 0, i32 1
  %190 = load ptr, ptr %memberidx.i.i.i18.i, align 8
  %191 = load ptr, ptr %190, align 8
  %memberidx2.i19.i = getelementptr inbounds %Module, ptr %191, i64 0, i32 7
  %192 = load ptr, ptr %memberidx2.i19.i, align 8
  %memberidx.i.i.i117 = getelementptr inbounds %Array_Scope_, ptr %192, i64 0, i32 1
  %193 = load ptr, ptr %memberidx.i.i.i117, align 8
  %194 = load ptr, ptr %193, align 8
  %195 = load ptr, ptr %194, align 8
  store ptr %195, ptr %memberidx1.i16.i116, align 8
  %196 = load ptr, ptr %memberidx1.i.i17.i, align 8
  %memberidx.i.i21.i = getelementptr inbounds %Array_Module_, ptr %196, i64 0, i32 1
  %197 = load ptr, ptr %memberidx.i.i21.i, align 8
  %ptridx.i.i22.i = getelementptr inbounds ptr, ptr %197, i64 1
  %198 = load ptr, ptr %ptridx.i.i22.i, align 8
  call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %4, ptr %198)
  %199 = load ptr, ptr %memberidx.i.i109, align 8
  %memberidx1.i24.i = getelementptr inbounds %Compiler, ptr %199, i64 0, i32 6
  %200 = load ptr, ptr %memberidx1.i24.i, align 8
  %memberidx2.i25.i = getelementptr inbounds %Array_FloError_, ptr %200, i64 0, i32 2
  %201 = load i64, ptr %memberidx2.i25.i, align 4
  %202 = icmp sgt i64 %201, 0
  br i1 %202, label %TypeChecker_check.exit, label %ifend.i

ifend.i:                                          ; preds = %TypeChecker_constructor.exit.i
  %203 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %4, ptr %163, ptr %111)
  %204 = load ptr, ptr %4, align 8
  br label %TypeChecker_check.exit

TypeChecker_check.exit:                           ; preds = %TypeChecker_constructor.exit.i, %ifend.i
  %common.ret.op.i = phi ptr [ %204, %ifend.i ], [ null, %TypeChecker_constructor.exit.i ]
  call void @llvm.lifetime.end.p0(i64 66, ptr nonnull %4)
  %205 = load ptr, ptr %112, align 8
  %memberidx30 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr }>, ptr %205, i64 0, i32 3
  %206 = load ptr, ptr %memberidx30, align 8
  %207 = call i1 %206(ptr nonnull %112)
  br i1 %207, label %common.ret, label %ifend33

ifend33:                                          ; preds = %TypeChecker_check.exit
  call void @llvm.lifetime.start.p0(i64 81, ptr nonnull %3)
  %memberidx.i150 = getelementptr inbounds %Program, ptr %common.ret.op.i, i64 0, i32 1
  %208 = load ptr, ptr %memberidx.i150, align 8
  %memberidx.i.i151 = getelementptr inbounds %Array_Module_, ptr %208, i64 0, i32 1
  %209 = load ptr, ptr %memberidx.i.i151, align 8
  %ptridx.i.i152 = getelementptr inbounds ptr, ptr %209, i64 2
  %210 = load ptr, ptr %ptridx.i.i152, align 8
  %memberidx1.i153 = getelementptr inbounds %Module, ptr %210, i64 0, i32 1
  %211 = load ptr, ptr %memberidx1.i153, align 8
  %memberidx.i68.i = getelementptr inbounds %CodeGen, ptr %3, i64 0, i32 4
  store ptr %common.ret.op.i, ptr %memberidx.i68.i, align 8
  %212 = call ptr @malloc(i32 24)
  %213 = call ptr @malloc(i32 2048)
  store ptr %213, ptr %212, align 8
  br label %for.body.i.i.i155

for.body.i.i.i155:                                ; preds = %for.body.i.i.i155, %ifend33
  %i.0.i.i186.i = phi i64 [ 0, %ifend33 ], [ %215, %for.body.i.i.i155 ]
  %214 = load ptr, ptr %212, align 8
  %ptridx.i.i.i154 = getelementptr inbounds ptr, ptr %214, i64 %i.0.i.i186.i
  store ptr null, ptr %ptridx.i.i.i154, align 8
  %215 = add nuw nsw i64 %i.0.i.i186.i, 1
  %216 = icmp ult i64 %i.0.i.i186.i, 255
  br i1 %216, label %for.body.i.i.i155, label %Map_string_LLVMValueRef__constructor.exit.i.i

Map_string_LLVMValueRef__constructor.exit.i.i:    ; preds = %for.body.i.i.i155
  %memberidx1.i69.i = getelementptr inbounds %CodeGen, ptr %3, i64 0, i32 6
  %memberidx2.i.i.i156 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %212, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i.i156, align 4
  %memberidx3.i.i.i157 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %212, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i.i157, align 4
  store ptr %212, ptr %memberidx1.i69.i, align 8
  %217 = call ptr @malloc(i32 24)
  %218 = call ptr @malloc(i32 2048)
  store ptr %218, ptr %217, align 8
  br label %for.body.i23.i.i

for.body.i23.i.i:                                 ; preds = %for.body.i23.i.i, %Map_string_LLVMValueRef__constructor.exit.i.i
  %i.0.i20.i185.i = phi i64 [ 0, %Map_string_LLVMValueRef__constructor.exit.i.i ], [ %220, %for.body.i23.i.i ]
  %219 = load ptr, ptr %217, align 8
  %ptridx.i22.i.i = getelementptr inbounds ptr, ptr %219, i64 %i.0.i20.i185.i
  store ptr null, ptr %ptridx.i22.i.i, align 8
  %220 = add nuw nsw i64 %i.0.i20.i185.i, 1
  %221 = icmp ult i64 %i.0.i20.i185.i, 255
  br i1 %221, label %for.body.i23.i.i, label %Map_string_LLVMValueRef__constructor.exit26.i.i

Map_string_LLVMValueRef__constructor.exit26.i.i:  ; preds = %for.body.i23.i.i
  %memberidx2.i.i158 = getelementptr inbounds %CodeGen, ptr %3, i64 0, i32 7
  %memberidx2.i24.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %217, i64 0, i32 1
  store i64 256, ptr %memberidx2.i24.i.i, align 4
  %memberidx3.i25.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %217, i64 0, i32 2
  store i64 0, ptr %memberidx3.i25.i.i, align 4
  store ptr %217, ptr %memberidx2.i.i158, align 8
  %222 = call ptr @malloc(i32 24)
  %223 = call ptr @malloc(i32 2048)
  store ptr %223, ptr %222, align 8
  br label %for.body.i30.i.i

for.body.i30.i.i:                                 ; preds = %for.body.i30.i.i, %Map_string_LLVMValueRef__constructor.exit26.i.i
  %i.0.i27.i184.i = phi i64 [ 0, %Map_string_LLVMValueRef__constructor.exit26.i.i ], [ %225, %for.body.i30.i.i ]
  %224 = load ptr, ptr %222, align 8
  %ptridx.i29.i.i = getelementptr inbounds ptr, ptr %224, i64 %i.0.i27.i184.i
  store ptr null, ptr %ptridx.i29.i.i, align 8
  %225 = add nuw nsw i64 %i.0.i27.i184.i, 1
  %226 = icmp ult i64 %i.0.i27.i184.i, 255
  br i1 %226, label %for.body.i30.i.i, label %Map_string_CGClassType__constructor.exit.i.i

Map_string_CGClassType__constructor.exit.i.i:     ; preds = %for.body.i30.i.i
  %memberidx3.i.i159 = getelementptr inbounds %CodeGen, ptr %3, i64 0, i32 8
  %memberidx2.i31.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %222, i64 0, i32 1
  store i64 256, ptr %memberidx2.i31.i.i, align 4
  %memberidx3.i32.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %222, i64 0, i32 2
  store i64 0, ptr %memberidx3.i32.i.i, align 4
  store ptr %222, ptr %memberidx3.i.i159, align 8
  %227 = call ptr @malloc(i32 24)
  %228 = call ptr @malloc(i32 2048)
  store ptr %228, ptr %227, align 8
  br label %for.body.i36.i.i

for.body.i36.i.i:                                 ; preds = %for.body.i36.i.i, %Map_string_CGClassType__constructor.exit.i.i
  %i.0.i33.i183.i = phi i64 [ 0, %Map_string_CGClassType__constructor.exit.i.i ], [ %230, %for.body.i36.i.i ]
  %229 = load ptr, ptr %227, align 8
  %ptridx.i35.i.i = getelementptr inbounds ptr, ptr %229, i64 %i.0.i33.i183.i
  store ptr null, ptr %ptridx.i35.i.i, align 8
  %230 = add nuw nsw i64 %i.0.i33.i183.i, 1
  %231 = icmp ult i64 %i.0.i33.i183.i, 255
  br i1 %231, label %for.body.i36.i.i, label %Map_string_CGEnumType__constructor.exit.i.i

Map_string_CGEnumType__constructor.exit.i.i:      ; preds = %for.body.i36.i.i
  %memberidx4.i.i160 = getelementptr inbounds %CodeGen, ptr %3, i64 0, i32 9
  %memberidx2.i37.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %227, i64 0, i32 1
  store i64 256, ptr %memberidx2.i37.i.i, align 4
  %memberidx3.i38.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %227, i64 0, i32 2
  store i64 0, ptr %memberidx3.i38.i.i, align 4
  store ptr %227, ptr %memberidx4.i.i160, align 8
  %232 = call ptr @malloc(i32 24)
  %233 = call ptr @malloc(i32 2048)
  store ptr %233, ptr %232, align 8
  br label %for.body.i42.i.i

for.body.i42.i.i:                                 ; preds = %for.body.i42.i.i, %Map_string_CGEnumType__constructor.exit.i.i
  %i.0.i39.i182.i = phi i64 [ 0, %Map_string_CGEnumType__constructor.exit.i.i ], [ %235, %for.body.i42.i.i ]
  %234 = load ptr, ptr %232, align 8
  %ptridx.i41.i.i = getelementptr inbounds ptr, ptr %234, i64 %i.0.i39.i182.i
  store ptr null, ptr %ptridx.i41.i.i, align 8
  %235 = add nuw nsw i64 %i.0.i39.i182.i, 1
  %236 = icmp ult i64 %i.0.i39.i182.i, 255
  br i1 %236, label %for.body.i42.i.i, label %CodeGen_constructor.exit.i

CodeGen_constructor.exit.i:                       ; preds = %for.body.i42.i.i
  %memberidx5.i70.i = getelementptr inbounds %CodeGen, ptr %3, i64 0, i32 10
  %memberidx2.i43.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %232, i64 0, i32 1
  store i64 256, ptr %memberidx2.i43.i.i, align 4
  %memberidx3.i44.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %232, i64 0, i32 2
  store i64 0, ptr %memberidx3.i44.i.i, align 4
  store ptr %232, ptr %memberidx5.i70.i, align 8
  %memberidx6.i.i = getelementptr inbounds %CodeGen, ptr %3, i64 0, i32 5
  store i1 true, ptr %memberidx6.i.i, align 8
  %memberidx8.i.i = getelementptr inbounds %CodeGen, ptr %3, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx8.i.i, i8 0, i64 16, i1 false)
  %237 = load ptr, ptr %211, align 8
  %memberidx10.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %237, i64 0, i32 5
  %238 = load ptr, ptr %memberidx10.i.i, align 8
  %239 = call ptr %238(ptr nonnull %211)
  %240 = call ptr @LLVMModuleCreateWithName(ptr %239)
  store ptr %240, ptr %3, align 8
  %memberidx2.i161 = getelementptr inbounds %Module, ptr %210, i64 0, i32 6
  %241 = load ptr, ptr %memberidx2.i161, align 8
  %242 = call ptr @malloc(i32 25)
  %memberidx.i71.i = getelementptr inbounds %Array_Enum_, ptr %241, i64 0, i32 1
  %243 = load ptr, ptr %memberidx.i71.i, align 8
  %memberidx1.i72.i = getelementptr inbounds %Array_Enum_, ptr %241, i64 0, i32 2
  %244 = load i64, ptr %memberidx1.i72.i, align 4
  store i1 false, ptr %242, align 1
  %memberidx1.i.i.i162 = getelementptr inbounds %ArrayIterator_Enum_, ptr %242, i64 0, i32 1
  %memberidx2.i.i73.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %242, i64 0, i32 3
  store ptr %243, ptr %memberidx2.i.i73.i, align 8
  %memberidx3.i.i74.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %242, i64 0, i32 2
  store i64 %244, ptr %memberidx3.i.i74.i, align 4
  store i64 1, ptr %memberidx1.i.i.i162, align 4
  %245 = icmp slt i64 %244, 1
  br i1 %245, label %for.end.i, label %for.body.i163

for.body.i163:                                    ; preds = %CodeGen_constructor.exit.i, %for.body.i163
  %246 = phi i64 [ %247, %for.body.i163 ], [ 1, %CodeGen_constructor.exit.i ]
  %enum_.0180.in.i = phi ptr [ %ptridx.i81.i, %for.body.i163 ], [ %243, %CodeGen_constructor.exit.i ]
  %enum_.0180.i = load ptr, ptr %enum_.0180.in.i, align 8
  call fastcc void @CodeGen_declare_enum(ptr nonnull %3, ptr %enum_.0180.i)
  %247 = add i64 %246, 1
  store i64 %247, ptr %memberidx1.i.i.i162, align 4
  %ptridx.i81.i = getelementptr inbounds ptr, ptr %243, i64 %246
  %248 = icmp sgt i64 %247, %244
  br i1 %248, label %for.end.i, label %for.body.i163

for.end.i:                                        ; preds = %for.body.i163, %CodeGen_constructor.exit.i
  call void @free(ptr nonnull %242)
  %memberidx6.i = getelementptr inbounds %Module, ptr %210, i64 0, i32 4
  %249 = load ptr, ptr %memberidx6.i, align 8
  %250 = call ptr @malloc(i32 25)
  %memberidx.i83.i = getelementptr inbounds %Array_Class_, ptr %249, i64 0, i32 1
  %251 = load ptr, ptr %memberidx.i83.i, align 8
  %memberidx1.i84.i = getelementptr inbounds %Array_Class_, ptr %249, i64 0, i32 2
  %252 = load i64, ptr %memberidx1.i84.i, align 4
  store i1 false, ptr %250, align 1
  %memberidx1.i.i85.i = getelementptr inbounds %ArrayIterator_Class_, ptr %250, i64 0, i32 1
  %memberidx2.i.i86.i = getelementptr inbounds %ArrayIterator_Class_, ptr %250, i64 0, i32 3
  store ptr %251, ptr %memberidx2.i.i86.i, align 8
  %memberidx3.i.i87.i = getelementptr inbounds %ArrayIterator_Class_, ptr %250, i64 0, i32 2
  store i64 %252, ptr %memberidx3.i.i87.i, align 4
  store i64 1, ptr %memberidx1.i.i85.i, align 4
  %253 = icmp slt i64 %252, 1
  br i1 %253, label %for.end10.i, label %for.body8.i

for.body8.i:                                      ; preds = %for.end.i, %for.body8.i
  %254 = phi i64 [ %255, %for.body8.i ], [ 1, %for.end.i ]
  %storemerge177.in.i = phi ptr [ %ptridx.i94.i, %for.body8.i ], [ %251, %for.end.i ]
  %storemerge177.i = load ptr, ptr %storemerge177.in.i, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %3, ptr %storemerge177.i)
  %255 = add i64 %254, 1
  store i64 %255, ptr %memberidx1.i.i85.i, align 4
  %ptridx.i94.i = getelementptr inbounds ptr, ptr %251, i64 %254
  %256 = icmp sgt i64 %255, %252
  br i1 %256, label %for.end10.i, label %for.body8.i

for.end10.i:                                      ; preds = %for.body8.i, %for.end.i
  call void @free(ptr nonnull %250)
  %memberidx14.i = getelementptr inbounds %Module, ptr %210, i64 0, i32 8
  %257 = load ptr, ptr %memberidx14.i, align 8
  %258 = call ptr @malloc(i32 25)
  %memberidx.i96.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %257, i64 0, i32 1
  %259 = load ptr, ptr %memberidx.i96.i, align 8
  %memberidx1.i97.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %257, i64 0, i32 2
  %260 = load i64, ptr %memberidx1.i97.i, align 4
  store i1 false, ptr %258, align 1
  %memberidx1.i.i98.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %258, i64 0, i32 1
  %memberidx2.i.i99.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %258, i64 0, i32 3
  store ptr %259, ptr %memberidx2.i.i99.i, align 8
  %memberidx3.i.i100.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %258, i64 0, i32 2
  store i64 %260, ptr %memberidx3.i.i100.i, align 4
  store i64 1, ptr %memberidx1.i.i98.i, align 4
  %261 = icmp slt i64 %260, 1
  br i1 %261, label %for.end18.i, label %for.body16.i

for.body16.i:                                     ; preds = %for.end10.i, %for.body16.i
  %262 = phi i64 [ %263, %for.body16.i ], [ 1, %for.end10.i ]
  %storemerge63174.in.i = phi ptr [ %ptridx.i107.i, %for.body16.i ], [ %259, %for.end10.i ]
  %storemerge63174.i = load ptr, ptr %storemerge63174.in.i, align 8
  call fastcc void @CodeGen_codegen_const_declaration(ptr nonnull %3, ptr null, ptr %storemerge63174.i)
  %263 = add i64 %262, 1
  store i64 %263, ptr %memberidx1.i.i98.i, align 4
  %ptridx.i107.i = getelementptr inbounds ptr, ptr %259, i64 %262
  %264 = icmp sgt i64 %263, %260
  br i1 %264, label %for.end18.i, label %for.body16.i

for.end18.i:                                      ; preds = %for.body16.i, %for.end10.i
  call void @free(ptr nonnull %258)
  %memberidx22.i = getelementptr inbounds %Module, ptr %210, i64 0, i32 9
  %265 = load ptr, ptr %memberidx22.i, align 8
  %266 = call ptr @malloc(i32 25)
  %memberidx.i109.i = getelementptr inbounds %Array_VarDeclaration_, ptr %265, i64 0, i32 1
  %267 = load ptr, ptr %memberidx.i109.i, align 8
  %memberidx1.i110.i = getelementptr inbounds %Array_VarDeclaration_, ptr %265, i64 0, i32 2
  %268 = load i64, ptr %memberidx1.i110.i, align 4
  store i1 false, ptr %266, align 1
  %memberidx1.i.i111.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %266, i64 0, i32 1
  %memberidx2.i.i112.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %266, i64 0, i32 3
  store ptr %267, ptr %memberidx2.i.i112.i, align 8
  %memberidx3.i.i113.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %266, i64 0, i32 2
  store i64 %268, ptr %memberidx3.i.i113.i, align 4
  store i64 1, ptr %memberidx1.i.i111.i, align 4
  %269 = icmp slt i64 %268, 1
  br i1 %269, label %for.end26.i, label %for.body24.i

for.body24.i:                                     ; preds = %for.end18.i, %for.body24.i
  %270 = phi i64 [ %271, %for.body24.i ], [ 1, %for.end18.i ]
  %storemerge64171.in.i = phi ptr [ %ptridx.i120.i, %for.body24.i ], [ %267, %for.end18.i ]
  %storemerge64171.i = load ptr, ptr %storemerge64171.in.i, align 8
  call fastcc void @CodeGen_codegen_var_declaration(ptr nonnull %3, ptr null, ptr %storemerge64171.i)
  %271 = add i64 %270, 1
  store i64 %271, ptr %memberidx1.i.i111.i, align 4
  %ptridx.i120.i = getelementptr inbounds ptr, ptr %267, i64 %270
  %272 = icmp sgt i64 %271, %268
  br i1 %272, label %for.end26.i, label %for.body24.i

for.end26.i:                                      ; preds = %for.body24.i, %for.end18.i
  call void @free(ptr nonnull %266)
  %273 = load ptr, ptr %memberidx6.i, align 8
  %274 = call ptr @malloc(i32 25)
  %memberidx.i122.i = getelementptr inbounds %Array_Class_, ptr %273, i64 0, i32 1
  %275 = load ptr, ptr %memberidx.i122.i, align 8
  %memberidx1.i123.i = getelementptr inbounds %Array_Class_, ptr %273, i64 0, i32 2
  %276 = load i64, ptr %memberidx1.i123.i, align 4
  store i1 false, ptr %274, align 1
  %memberidx1.i.i124.i = getelementptr inbounds %ArrayIterator_Class_, ptr %274, i64 0, i32 1
  %memberidx2.i.i125.i = getelementptr inbounds %ArrayIterator_Class_, ptr %274, i64 0, i32 3
  store ptr %275, ptr %memberidx2.i.i125.i, align 8
  %memberidx3.i.i126.i = getelementptr inbounds %ArrayIterator_Class_, ptr %274, i64 0, i32 2
  store i64 %276, ptr %memberidx3.i.i126.i, align 4
  store i64 1, ptr %memberidx1.i.i124.i, align 4
  %277 = icmp slt i64 %276, 1
  br i1 %277, label %for.end35.i, label %for.body33.i

for.body33.i:                                     ; preds = %for.end26.i, %for.body33.i
  %278 = phi i64 [ %279, %for.body33.i ], [ 1, %for.end26.i ]
  %storemerge65168.in.i = phi ptr [ %ptridx.i133.i, %for.body33.i ], [ %275, %for.end26.i ]
  %storemerge65168.i = load ptr, ptr %storemerge65168.in.i, align 8
  call fastcc void @CodeGen_codegen_class(ptr nonnull %3, ptr %storemerge65168.i)
  %279 = add i64 %278, 1
  store i64 %279, ptr %memberidx1.i.i124.i, align 4
  %ptridx.i133.i = getelementptr inbounds ptr, ptr %275, i64 %278
  %280 = icmp sgt i64 %279, %276
  br i1 %280, label %for.end35.i, label %for.body33.i

for.end35.i:                                      ; preds = %for.body33.i, %for.end26.i
  call void @free(ptr nonnull %274)
  %memberidx39.i = getelementptr inbounds %Module, ptr %210, i64 0, i32 5
  %281 = load ptr, ptr %memberidx39.i, align 8
  %282 = call ptr @malloc(i32 25)
  %memberidx.i135.i = getelementptr inbounds %Array_Function_, ptr %281, i64 0, i32 1
  %283 = load ptr, ptr %memberidx.i135.i, align 8
  %memberidx1.i136.i = getelementptr inbounds %Array_Function_, ptr %281, i64 0, i32 2
  %284 = load i64, ptr %memberidx1.i136.i, align 4
  store i1 false, ptr %282, align 1
  %memberidx1.i.i137.i = getelementptr inbounds %ArrayIterator_Function_, ptr %282, i64 0, i32 1
  %memberidx2.i.i138.i = getelementptr inbounds %ArrayIterator_Function_, ptr %282, i64 0, i32 3
  store ptr %283, ptr %memberidx2.i.i138.i, align 8
  %memberidx3.i.i139.i = getelementptr inbounds %ArrayIterator_Function_, ptr %282, i64 0, i32 2
  store i64 %284, ptr %memberidx3.i.i139.i, align 4
  store i64 1, ptr %memberidx1.i.i137.i, align 4
  %285 = icmp slt i64 %284, 1
  br i1 %285, label %for.end43.i, label %for.body41.i

for.body41.i:                                     ; preds = %for.end35.i, %for.body41.i
  %286 = phi i64 [ %287, %for.body41.i ], [ 1, %for.end35.i ]
  %storemerge66166.in.i = phi ptr [ %ptridx.i146.i, %for.body41.i ], [ %283, %for.end35.i ]
  %storemerge66166.i = load ptr, ptr %storemerge66166.in.i, align 8
  call fastcc void @CodeGen_codegen_function(ptr nonnull %3, ptr %storemerge66166.i)
  %287 = add i64 %286, 1
  store i64 %287, ptr %memberidx1.i.i137.i, align 4
  %ptridx.i146.i = getelementptr inbounds ptr, ptr %283, i64 %286
  %288 = icmp sgt i64 %287, %284
  br i1 %288, label %for.end43.i, label %for.body41.i

for.end43.i:                                      ; preds = %for.body41.i, %for.end35.i
  call void @free(ptr nonnull %282)
  %289 = load ptr, ptr %memberidx1.i69.i, align 8
  %290 = call ptr @malloc(i32 25)
  %291 = load ptr, ptr %289, align 8
  %memberidx1.i.i150.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %289, i64 0, i32 1
  %292 = load i64, ptr %memberidx1.i.i150.i, align 4
  %memberidx2.i.i151.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %289, i64 0, i32 2
  %293 = load i64, ptr %memberidx2.i.i151.i, align 4
  store i1 false, ptr %290, align 1
  %memberidx1.i.i.i.i164 = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %290, i64 0, i32 1
  store ptr %291, ptr %memberidx1.i.i.i.i164, align 8
  %memberidx2.i.i.i.i165 = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %290, i64 0, i32 2
  %memberidx3.i.i.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %290, i64 0, i32 3
  store i64 %293, ptr %memberidx3.i.i.i.i, align 4
  %294 = add i64 %292, -1
  store i64 %294, ptr %memberidx2.i.i.i.i165, align 4
  %295 = icmp sgt i64 %292, 0
  br i1 %295, label %while.entry.i.i.preheader.i, label %MapIterator_string_LLVMValueRef__next.exit.i.i

while.entry.i.i.preheader.i:                      ; preds = %for.end43.i
  %296 = shl i64 %292, 3
  %uglygep203.i = getelementptr i8, ptr %291, i64 %296
  br label %while.entry.i.i.i

while.entry.i.i.i:                                ; preds = %ifend.i.i.i, %while.entry.i.i.preheader.i
  %297 = phi i64 [ %300, %ifend.i.i.i ], [ %294, %while.entry.i.i.preheader.i ]
  %298 = phi ptr [ %incdec.ptr.i.i.i, %ifend.i.i.i ], [ %291, %while.entry.i.i.preheader.i ]
  %incdec.ptr.i.i.i = getelementptr inbounds ptr, ptr %298, i64 1
  %299 = load ptr, ptr %298, align 8
  %.not.i.i.i = icmp eq ptr %299, null
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %MapIterator_string_LLVMValueRef__next.exit.loopexit.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i.i
  %300 = add i64 %297, -1
  store i64 %300, ptr %memberidx2.i.i.i.i165, align 4
  %301 = icmp sgt i64 %297, 0
  br i1 %301, label %while.entry.i.i.i, label %MapIterator_string_LLVMValueRef__next.exit.loopexit.i.i

MapIterator_string_LLVMValueRef__next.exit.loopexit.i.i: ; preds = %ifend.i.i.i, %while.entry.i.i.i
  %incdec.ptr.i.i.lcssa.i = phi ptr [ %uglygep203.i, %ifend.i.i.i ], [ %incdec.ptr.i.i.i, %while.entry.i.i.i ]
  %memberidx2.i.i.promoted252.i.i = phi i64 [ -1, %ifend.i.i.i ], [ %297, %while.entry.i.i.i ]
  store ptr %incdec.ptr.i.i.lcssa.i, ptr %memberidx1.i.i.i.i164, align 8
  br label %MapIterator_string_LLVMValueRef__next.exit.i.i

MapIterator_string_LLVMValueRef__next.exit.i.i:   ; preds = %MapIterator_string_LLVMValueRef__next.exit.loopexit.i.i, %for.end43.i
  %memberidx2.i.i.promoted.i.i = phi i64 [ %memberidx2.i.i.promoted252.i.i, %MapIterator_string_LLVMValueRef__next.exit.loopexit.i.i ], [ %294, %for.end43.i ]
  %memberidx1.i.i.promoted228.i.i = phi ptr [ %incdec.ptr.i.i.lcssa.i, %MapIterator_string_LLVMValueRef__next.exit.loopexit.i.i ], [ %291, %for.end43.i ]
  %storemerge175224.i.i = icmp slt i64 %293, 1
  br i1 %storemerge175224.i.i, label %for.end.i.i, label %for.body.i.i166

for.body.i.i166:                                  ; preds = %MapIterator_string_LLVMValueRef__next.exit.i.i, %MapIterator_string_LLVMValueRef__next.exit72.i.i
  %302 = phi i64 [ %313, %MapIterator_string_LLVMValueRef__next.exit72.i.i ], [ %memberidx2.i.i.promoted.i.i, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  %incdec.ptr.i65.lcssa230.i.i = phi ptr [ %incdec.ptr.i65.lcssa229.i.i, %MapIterator_string_LLVMValueRef__next.exit72.i.i ], [ %memberidx1.i.i.promoted228.i.i, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  %storemerge184225.in.i.i = phi i64 [ %storemerge184225.i.i, %MapIterator_string_LLVMValueRef__next.exit72.i.i ], [ %293, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  %storemerge184225.i.i = add nsw i64 %storemerge184225.in.i.i, -1
  %var_entry.0.in.i.i = getelementptr inbounds ptr, ptr %incdec.ptr.i65.lcssa230.i.i, i64 -1
  %var_entry.0.i.i = load ptr, ptr %var_entry.0.in.i.i, align 8
  %303 = load ptr, ptr %var_entry.0.i.i, align 8
  %memberidx.i62.i.i = getelementptr inbounds %string, ptr %303, i64 0, i32 1
  %304 = load ptr, ptr %memberidx.i62.i.i, align 8
  call void @free(ptr %304)
  call void @free(ptr %303)
  %305 = add i64 %302, -1
  %306 = icmp sgt i64 %302, 0
  br i1 %306, label %while.entry.i67.preheader.i.i, label %MapIterator_string_LLVMValueRef__next.exit72.i.i

while.entry.i67.preheader.i.i:                    ; preds = %for.body.i.i166
  %307 = shl i64 %302, 3
  %uglygep249.i.i = getelementptr i8, ptr %incdec.ptr.i65.lcssa230.i.i, i64 %307
  br label %while.entry.i67.i.i

while.entry.i67.i.i:                              ; preds = %ifend.i71.i.i, %while.entry.i67.preheader.i.i
  %308 = phi i64 [ %311, %ifend.i71.i.i ], [ %305, %while.entry.i67.preheader.i.i ]
  %309 = phi ptr [ %incdec.ptr.i65.i.i, %ifend.i71.i.i ], [ %incdec.ptr.i65.lcssa230.i.i, %while.entry.i67.preheader.i.i ]
  %incdec.ptr.i65.i.i = getelementptr inbounds ptr, ptr %309, i64 1
  %310 = load ptr, ptr %309, align 8
  %.not.i66.i.i = icmp eq ptr %310, null
  br i1 %.not.i66.i.i, label %ifend.i71.i.i, label %MapIterator_string_LLVMValueRef__next.exit72.i.i

ifend.i71.i.i:                                    ; preds = %while.entry.i67.i.i
  %311 = add i64 %308, -1
  %312 = icmp sgt i64 %308, 0
  br i1 %312, label %while.entry.i67.i.i, label %MapIterator_string_LLVMValueRef__next.exit72.i.i

MapIterator_string_LLVMValueRef__next.exit72.i.i: ; preds = %ifend.i71.i.i, %while.entry.i67.i.i, %for.body.i.i166
  %313 = phi i64 [ %305, %for.body.i.i166 ], [ %308, %while.entry.i67.i.i ], [ -1, %ifend.i71.i.i ]
  %incdec.ptr.i65.lcssa229.i.i = phi ptr [ %incdec.ptr.i65.lcssa230.i.i, %for.body.i.i166 ], [ %incdec.ptr.i65.i.i, %while.entry.i67.i.i ], [ %uglygep249.i.i, %ifend.i71.i.i ]
  %storemerge175.i.i = icmp slt i64 %storemerge184225.in.i.i, 2
  br i1 %storemerge175.i.i, label %for.end.i.loopexit.i, label %for.body.i.i166

for.end.i.loopexit.i:                             ; preds = %MapIterator_string_LLVMValueRef__next.exit72.i.i
  %.pre.i = load ptr, ptr %289, align 8
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.end.i.loopexit.i, %MapIterator_string_LLVMValueRef__next.exit.i.i
  %314 = phi ptr [ %.pre.i, %for.end.i.loopexit.i ], [ %291, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  call void @free(ptr nonnull %290)
  call void @free(ptr %314)
  call void @free(ptr %289)
  %315 = load ptr, ptr %memberidx2.i.i158, align 8
  %316 = call ptr @malloc(i32 25)
  %317 = load ptr, ptr %315, align 8
  %memberidx1.i83.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %315, i64 0, i32 1
  %318 = load i64, ptr %memberidx1.i83.i.i, align 4
  %memberidx2.i84.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %315, i64 0, i32 2
  %319 = load i64, ptr %memberidx2.i84.i.i, align 4
  store i1 false, ptr %316, align 1
  %memberidx1.i.i85.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %316, i64 0, i32 1
  store ptr %317, ptr %memberidx1.i.i85.i.i, align 8
  %memberidx2.i.i86.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %316, i64 0, i32 2
  %memberidx3.i.i87.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %316, i64 0, i32 3
  store i64 %319, ptr %memberidx3.i.i87.i.i, align 4
  %320 = add i64 %318, -1
  store i64 %320, ptr %memberidx2.i.i86.i.i, align 4
  %321 = icmp sgt i64 %318, 0
  br i1 %321, label %while.entry.i92.i.preheader.i, label %MapIterator_string_LLVMValueRef__next.exit97.i.i

while.entry.i92.i.preheader.i:                    ; preds = %for.end.i.i
  %322 = shl i64 %318, 3
  %uglygep202.i = getelementptr i8, ptr %317, i64 %322
  br label %while.entry.i92.i.i

while.entry.i92.i.i:                              ; preds = %ifend.i96.i.i, %while.entry.i92.i.preheader.i
  %323 = phi i64 [ %326, %ifend.i96.i.i ], [ %320, %while.entry.i92.i.preheader.i ]
  %324 = phi ptr [ %incdec.ptr.i90.i.i, %ifend.i96.i.i ], [ %317, %while.entry.i92.i.preheader.i ]
  %incdec.ptr.i90.i.i = getelementptr inbounds ptr, ptr %324, i64 1
  %325 = load ptr, ptr %324, align 8
  %.not.i91.i.i = icmp eq ptr %325, null
  br i1 %.not.i91.i.i, label %ifend.i96.i.i, label %MapIterator_string_LLVMValueRef__next.exit97.loopexit.i.i

ifend.i96.i.i:                                    ; preds = %while.entry.i92.i.i
  %326 = add i64 %323, -1
  store i64 %326, ptr %memberidx2.i.i86.i.i, align 4
  %327 = icmp sgt i64 %323, 0
  br i1 %327, label %while.entry.i92.i.i, label %MapIterator_string_LLVMValueRef__next.exit97.loopexit.i.i

MapIterator_string_LLVMValueRef__next.exit97.loopexit.i.i: ; preds = %ifend.i96.i.i, %while.entry.i92.i.i
  %incdec.ptr.i90.i.lcssa.i = phi ptr [ %uglygep202.i, %ifend.i96.i.i ], [ %incdec.ptr.i90.i.i, %while.entry.i92.i.i ]
  %memberidx2.i.i86.promoted255.i.i = phi i64 [ -1, %ifend.i96.i.i ], [ %323, %while.entry.i92.i.i ]
  store ptr %incdec.ptr.i90.i.lcssa.i, ptr %memberidx1.i.i85.i.i, align 8
  br label %MapIterator_string_LLVMValueRef__next.exit97.i.i

MapIterator_string_LLVMValueRef__next.exit97.i.i: ; preds = %MapIterator_string_LLVMValueRef__next.exit97.loopexit.i.i, %for.end.i.i
  %memberidx2.i.i86.promoted.i.i = phi i64 [ %memberidx2.i.i86.promoted255.i.i, %MapIterator_string_LLVMValueRef__next.exit97.loopexit.i.i ], [ %320, %for.end.i.i ]
  %.pn176.in.promoted.i.i = phi ptr [ %incdec.ptr.i90.i.lcssa.i, %MapIterator_string_LLVMValueRef__next.exit97.loopexit.i.i ], [ %317, %for.end.i.i ]
  %storemerge185217.i.i = icmp slt i64 %319, 1
  store i1 %storemerge185217.i.i, ptr %316, align 1
  br i1 %storemerge185217.i.i, label %for.end10.i.i, label %for.body8.i.i

for.body8.i.i:                                    ; preds = %MapIterator_string_LLVMValueRef__next.exit97.i.i, %MapIterator_string_LLVMValueRef__next.exit123.i.i
  %328 = phi i64 [ %339, %MapIterator_string_LLVMValueRef__next.exit123.i.i ], [ %memberidx2.i.i86.promoted.i.i, %MapIterator_string_LLVMValueRef__next.exit97.i.i ]
  %.pn176221.i.i = phi ptr [ %.pn176220.i.i, %MapIterator_string_LLVMValueRef__next.exit123.i.i ], [ %.pn176.in.promoted.i.i, %MapIterator_string_LLVMValueRef__next.exit97.i.i ]
  %storemerge189218.in.i.i = phi i64 [ %storemerge189218.i.i, %MapIterator_string_LLVMValueRef__next.exit123.i.i ], [ %319, %MapIterator_string_LLVMValueRef__next.exit97.i.i ]
  %storemerge189218.i.i = add nsw i64 %storemerge189218.in.i.i, -1
  %storemerge.in.i.i = getelementptr inbounds ptr, ptr %.pn176221.i.i, i64 -1
  %storemerge.i.i = load ptr, ptr %storemerge.in.i.i, align 8
  %329 = load ptr, ptr %storemerge.i.i, align 8
  %memberidx.i113.i.i = getelementptr inbounds %string, ptr %329, i64 0, i32 1
  %330 = load ptr, ptr %memberidx.i113.i.i, align 8
  call void @free(ptr %330)
  call void @free(ptr %329)
  %331 = add i64 %328, -1
  %332 = icmp sgt i64 %328, 0
  br i1 %332, label %while.entry.i118.preheader.i.i, label %MapIterator_string_LLVMValueRef__next.exit123.i.i

while.entry.i118.preheader.i.i:                   ; preds = %for.body8.i.i
  %333 = shl i64 %328, 3
  %uglygep248.i.i = getelementptr i8, ptr %.pn176221.i.i, i64 %333
  br label %while.entry.i118.i.i

while.entry.i118.i.i:                             ; preds = %ifend.i122.i.i, %while.entry.i118.preheader.i.i
  %334 = phi i64 [ %337, %ifend.i122.i.i ], [ %331, %while.entry.i118.preheader.i.i ]
  %335 = phi ptr [ %incdec.ptr.i116.i.i, %ifend.i122.i.i ], [ %.pn176221.i.i, %while.entry.i118.preheader.i.i ]
  %incdec.ptr.i116.i.i = getelementptr inbounds ptr, ptr %335, i64 1
  %336 = load ptr, ptr %335, align 8
  %.not.i117.i.i = icmp eq ptr %336, null
  br i1 %.not.i117.i.i, label %ifend.i122.i.i, label %MapIterator_string_LLVMValueRef__next.exit123.i.i

ifend.i122.i.i:                                   ; preds = %while.entry.i118.i.i
  %337 = add i64 %334, -1
  %338 = icmp sgt i64 %334, 0
  br i1 %338, label %while.entry.i118.i.i, label %MapIterator_string_LLVMValueRef__next.exit123.i.i

MapIterator_string_LLVMValueRef__next.exit123.i.i: ; preds = %ifend.i122.i.i, %while.entry.i118.i.i, %for.body8.i.i
  %339 = phi i64 [ %331, %for.body8.i.i ], [ %334, %while.entry.i118.i.i ], [ -1, %ifend.i122.i.i ]
  %.pn176220.i.i = phi ptr [ %.pn176221.i.i, %for.body8.i.i ], [ %incdec.ptr.i116.i.i, %while.entry.i118.i.i ], [ %uglygep248.i.i, %ifend.i122.i.i ]
  %storemerge185.i.i = icmp slt i64 %storemerge189218.in.i.i, 2
  br i1 %storemerge185.i.i, label %for.cond7.for.end10_crit_edge.i.i, label %for.body8.i.i

for.cond7.for.end10_crit_edge.i.i:                ; preds = %MapIterator_string_LLVMValueRef__next.exit123.i.i
  store ptr %.pn176220.i.i, ptr %memberidx1.i.i85.i.i, align 8
  store i64 %339, ptr %memberidx2.i.i86.i.i, align 4
  store i1 true, ptr %316, align 1
  %.pre204.i = load ptr, ptr %315, align 8
  br label %for.end10.i.i

for.end10.i.i:                                    ; preds = %for.cond7.for.end10_crit_edge.i.i, %MapIterator_string_LLVMValueRef__next.exit97.i.i
  %340 = phi ptr [ %.pre204.i, %for.cond7.for.end10_crit_edge.i.i ], [ %317, %MapIterator_string_LLVMValueRef__next.exit97.i.i ]
  call void @free(ptr nonnull %316)
  call void @free(ptr %340)
  call void @free(ptr %315)
  %341 = load ptr, ptr %memberidx5.i70.i, align 8
  %342 = call ptr @malloc(i32 25)
  %343 = load ptr, ptr %341, align 8
  %memberidx1.i124.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %341, i64 0, i32 1
  %344 = load i64, ptr %memberidx1.i124.i.i, align 4
  %memberidx2.i125.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %341, i64 0, i32 2
  %345 = load i64, ptr %memberidx2.i125.i.i, align 4
  store i1 false, ptr %342, align 1
  %memberidx1.i.i126.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %342, i64 0, i32 1
  store ptr %343, ptr %memberidx1.i.i126.i.i, align 8
  %memberidx2.i.i127.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %342, i64 0, i32 2
  %memberidx3.i.i128.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %342, i64 0, i32 3
  store i64 %345, ptr %memberidx3.i.i128.i.i, align 4
  %346 = add i64 %344, -1
  store i64 %346, ptr %memberidx2.i.i127.i.i, align 4
  %347 = icmp sgt i64 %344, 0
  br i1 %347, label %while.entry.i133.i.preheader.i, label %MapIterator_string_LLVMValueRef__next.exit138.i.i

while.entry.i133.i.preheader.i:                   ; preds = %for.end10.i.i
  %348 = shl i64 %344, 3
  %uglygep201.i = getelementptr i8, ptr %343, i64 %348
  br label %while.entry.i133.i.i

while.entry.i133.i.i:                             ; preds = %ifend.i137.i.i, %while.entry.i133.i.preheader.i
  %349 = phi i64 [ %352, %ifend.i137.i.i ], [ %346, %while.entry.i133.i.preheader.i ]
  %350 = phi ptr [ %incdec.ptr.i131.i.i, %ifend.i137.i.i ], [ %343, %while.entry.i133.i.preheader.i ]
  %incdec.ptr.i131.i.i = getelementptr inbounds ptr, ptr %350, i64 1
  %351 = load ptr, ptr %350, align 8
  %.not.i132.i.i = icmp eq ptr %351, null
  br i1 %.not.i132.i.i, label %ifend.i137.i.i, label %MapIterator_string_LLVMValueRef__next.exit138.loopexit.i.i

ifend.i137.i.i:                                   ; preds = %while.entry.i133.i.i
  %352 = add i64 %349, -1
  store i64 %352, ptr %memberidx2.i.i127.i.i, align 4
  %353 = icmp sgt i64 %349, 0
  br i1 %353, label %while.entry.i133.i.i, label %MapIterator_string_LLVMValueRef__next.exit138.loopexit.i.i

MapIterator_string_LLVMValueRef__next.exit138.loopexit.i.i: ; preds = %ifend.i137.i.i, %while.entry.i133.i.i
  %incdec.ptr.i131.i.lcssa.i = phi ptr [ %uglygep201.i, %ifend.i137.i.i ], [ %incdec.ptr.i131.i.i, %while.entry.i133.i.i ]
  %memberidx2.i.i127.promoted258.i.i = phi i64 [ -1, %ifend.i137.i.i ], [ %349, %while.entry.i133.i.i ]
  store ptr %incdec.ptr.i131.i.lcssa.i, ptr %memberidx1.i.i126.i.i, align 8
  br label %MapIterator_string_LLVMValueRef__next.exit138.i.i

MapIterator_string_LLVMValueRef__next.exit138.i.i: ; preds = %MapIterator_string_LLVMValueRef__next.exit138.loopexit.i.i, %for.end10.i.i
  %memberidx2.i.i127.promoted.i.i = phi i64 [ %memberidx2.i.i127.promoted258.i.i, %MapIterator_string_LLVMValueRef__next.exit138.loopexit.i.i ], [ %346, %for.end10.i.i ]
  %.pn178.in.promoted.i.i = phi ptr [ %incdec.ptr.i131.i.lcssa.i, %MapIterator_string_LLVMValueRef__next.exit138.loopexit.i.i ], [ %343, %for.end10.i.i ]
  %storemerge186209.i.i = icmp slt i64 %345, 1
  store i1 %storemerge186209.i.i, ptr %342, align 1
  br i1 %storemerge186209.i.i, label %for.end20.i.i, label %for.body18.i.i

for.body18.i.i:                                   ; preds = %MapIterator_string_LLVMValueRef__next.exit138.i.i, %MapIterator_string_LLVMValueRef__next.exit159.i.i
  %354 = phi i64 [ %365, %MapIterator_string_LLVMValueRef__next.exit159.i.i ], [ %memberidx2.i.i127.promoted.i.i, %MapIterator_string_LLVMValueRef__next.exit138.i.i ]
  %.pn178213.i.i = phi ptr [ %.pn178212.i.i, %MapIterator_string_LLVMValueRef__next.exit159.i.i ], [ %.pn178.in.promoted.i.i, %MapIterator_string_LLVMValueRef__next.exit138.i.i ]
  %storemerge190210.in.i.i = phi i64 [ %storemerge190210.i.i, %MapIterator_string_LLVMValueRef__next.exit159.i.i ], [ %345, %MapIterator_string_LLVMValueRef__next.exit138.i.i ]
  %storemerge190210.i.i = add nsw i64 %storemerge190210.in.i.i, -1
  %storemerge58.in.i.i = getelementptr inbounds ptr, ptr %.pn178213.i.i, i64 -1
  %storemerge58.i.i = load ptr, ptr %storemerge58.in.i.i, align 8
  %355 = load ptr, ptr %storemerge58.i.i, align 8
  %memberidx.i149.i.i = getelementptr inbounds %string, ptr %355, i64 0, i32 1
  %356 = load ptr, ptr %memberidx.i149.i.i, align 8
  call void @free(ptr %356)
  call void @free(ptr %355)
  %357 = add i64 %354, -1
  %358 = icmp sgt i64 %354, 0
  br i1 %358, label %while.entry.i154.preheader.i.i, label %MapIterator_string_LLVMValueRef__next.exit159.i.i

while.entry.i154.preheader.i.i:                   ; preds = %for.body18.i.i
  %359 = shl i64 %354, 3
  %uglygep247.i.i = getelementptr i8, ptr %.pn178213.i.i, i64 %359
  br label %while.entry.i154.i.i

while.entry.i154.i.i:                             ; preds = %ifend.i158.i.i, %while.entry.i154.preheader.i.i
  %360 = phi i64 [ %363, %ifend.i158.i.i ], [ %357, %while.entry.i154.preheader.i.i ]
  %361 = phi ptr [ %incdec.ptr.i152.i.i, %ifend.i158.i.i ], [ %.pn178213.i.i, %while.entry.i154.preheader.i.i ]
  %incdec.ptr.i152.i.i = getelementptr inbounds ptr, ptr %361, i64 1
  %362 = load ptr, ptr %361, align 8
  %.not.i153.i.i = icmp eq ptr %362, null
  br i1 %.not.i153.i.i, label %ifend.i158.i.i, label %MapIterator_string_LLVMValueRef__next.exit159.i.i

ifend.i158.i.i:                                   ; preds = %while.entry.i154.i.i
  %363 = add i64 %360, -1
  %364 = icmp sgt i64 %360, 0
  br i1 %364, label %while.entry.i154.i.i, label %MapIterator_string_LLVMValueRef__next.exit159.i.i

MapIterator_string_LLVMValueRef__next.exit159.i.i: ; preds = %ifend.i158.i.i, %while.entry.i154.i.i, %for.body18.i.i
  %365 = phi i64 [ %357, %for.body18.i.i ], [ %360, %while.entry.i154.i.i ], [ -1, %ifend.i158.i.i ]
  %.pn178212.i.i = phi ptr [ %.pn178213.i.i, %for.body18.i.i ], [ %incdec.ptr.i152.i.i, %while.entry.i154.i.i ], [ %uglygep247.i.i, %ifend.i158.i.i ]
  %storemerge186.i.i = icmp slt i64 %storemerge190210.in.i.i, 2
  br i1 %storemerge186.i.i, label %for.cond17.for.end20_crit_edge.i.i, label %for.body18.i.i

for.cond17.for.end20_crit_edge.i.i:               ; preds = %MapIterator_string_LLVMValueRef__next.exit159.i.i
  store ptr %.pn178212.i.i, ptr %memberidx1.i.i126.i.i, align 8
  store i64 %365, ptr %memberidx2.i.i127.i.i, align 4
  store i1 true, ptr %342, align 1
  %.pre205.i = load ptr, ptr %341, align 8
  br label %for.end20.i.i

for.end20.i.i:                                    ; preds = %for.cond17.for.end20_crit_edge.i.i, %MapIterator_string_LLVMValueRef__next.exit138.i.i
  %366 = phi ptr [ %.pre205.i, %for.cond17.for.end20_crit_edge.i.i ], [ %343, %MapIterator_string_LLVMValueRef__next.exit138.i.i ]
  call void @free(ptr nonnull %342)
  call void @free(ptr %366)
  call void @free(ptr %341)
  %367 = load ptr, ptr %memberidx3.i.i159, align 8
  %368 = call ptr @malloc(i32 25)
  %369 = load ptr, ptr %367, align 8
  %memberidx1.i170.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %367, i64 0, i32 1
  %370 = load i64, ptr %memberidx1.i170.i.i, align 4
  %memberidx2.i171.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %367, i64 0, i32 2
  %371 = load i64, ptr %memberidx2.i171.i.i, align 4
  store i1 false, ptr %368, align 1
  %memberidx1.i.i172.i.i = getelementptr inbounds %MapIterator_string_CGClassType_, ptr %368, i64 0, i32 1
  store ptr %369, ptr %memberidx1.i.i172.i.i, align 8
  %memberidx2.i.i173.i.i = getelementptr inbounds %MapIterator_string_CGClassType_, ptr %368, i64 0, i32 2
  %memberidx3.i.i174.i.i = getelementptr inbounds %MapIterator_string_CGClassType_, ptr %368, i64 0, i32 3
  store i64 %371, ptr %memberidx3.i.i174.i.i, align 4
  %372 = add i64 %370, -1
  store i64 %372, ptr %memberidx2.i.i173.i.i, align 4
  %373 = icmp sgt i64 %370, 0
  br i1 %373, label %while.entry.i164.i.preheader.i, label %MapIterator_string_CGClassType__next.exit169.i.i

while.entry.i164.i.preheader.i:                   ; preds = %for.end20.i.i
  %374 = shl i64 %370, 3
  %uglygep200.i = getelementptr i8, ptr %369, i64 %374
  br label %while.entry.i164.i.i

while.entry.i164.i.i:                             ; preds = %ifend.i168.i.i, %while.entry.i164.i.preheader.i
  %375 = phi i64 [ %378, %ifend.i168.i.i ], [ %372, %while.entry.i164.i.preheader.i ]
  %376 = phi ptr [ %incdec.ptr.i162.i.i, %ifend.i168.i.i ], [ %369, %while.entry.i164.i.preheader.i ]
  %incdec.ptr.i162.i.i = getelementptr inbounds ptr, ptr %376, i64 1
  %377 = load ptr, ptr %376, align 8
  %.not.i163.i.i = icmp eq ptr %377, null
  br i1 %.not.i163.i.i, label %ifend.i168.i.i, label %MapIterator_string_CGClassType__next.exit169.loopexit.i.i

ifend.i168.i.i:                                   ; preds = %while.entry.i164.i.i
  %378 = add i64 %375, -1
  store i64 %378, ptr %memberidx2.i.i173.i.i, align 4
  %379 = icmp sgt i64 %375, 0
  br i1 %379, label %while.entry.i164.i.i, label %MapIterator_string_CGClassType__next.exit169.loopexit.i.i

MapIterator_string_CGClassType__next.exit169.loopexit.i.i: ; preds = %ifend.i168.i.i, %while.entry.i164.i.i
  %incdec.ptr.i162.i.lcssa.i = phi ptr [ %uglygep200.i, %ifend.i168.i.i ], [ %incdec.ptr.i162.i.i, %while.entry.i164.i.i ]
  %memberidx2.i.i173.promoted261.i.i = phi i64 [ -1, %ifend.i168.i.i ], [ %375, %while.entry.i164.i.i ]
  store ptr %incdec.ptr.i162.i.lcssa.i, ptr %memberidx1.i.i172.i.i, align 8
  br label %MapIterator_string_CGClassType__next.exit169.i.i

MapIterator_string_CGClassType__next.exit169.i.i: ; preds = %MapIterator_string_CGClassType__next.exit169.loopexit.i.i, %for.end20.i.i
  %memberidx2.i.i173.promoted.i.i = phi i64 [ %memberidx2.i.i173.promoted261.i.i, %MapIterator_string_CGClassType__next.exit169.loopexit.i.i ], [ %372, %for.end20.i.i ]
  %.pn180.in.promoted.i.i = phi ptr [ %incdec.ptr.i162.i.lcssa.i, %MapIterator_string_CGClassType__next.exit169.loopexit.i.i ], [ %369, %for.end20.i.i ]
  %storemerge187201.i.i = icmp slt i64 %371, 1
  store i1 %storemerge187201.i.i, ptr %368, align 1
  br i1 %storemerge187201.i.i, label %for.end30.i.i, label %for.body28.i.i

for.body28.i.i:                                   ; preds = %MapIterator_string_CGClassType__next.exit169.i.i, %MapIterator_string_CGClassType__next.exit.i.i
  %380 = phi i64 [ %392, %MapIterator_string_CGClassType__next.exit.i.i ], [ %memberidx2.i.i173.promoted.i.i, %MapIterator_string_CGClassType__next.exit169.i.i ]
  %.pn180205.i.i = phi ptr [ %.pn180204.i.i, %MapIterator_string_CGClassType__next.exit.i.i ], [ %.pn180.in.promoted.i.i, %MapIterator_string_CGClassType__next.exit169.i.i ]
  %storemerge191202.in.i.i = phi i64 [ %storemerge191202.i.i, %MapIterator_string_CGClassType__next.exit.i.i ], [ %371, %MapIterator_string_CGClassType__next.exit169.i.i ]
  %storemerge191202.i.i = add nsw i64 %storemerge191202.in.i.i, -1
  %storemerge59.in.i.i = getelementptr inbounds ptr, ptr %.pn180205.i.i, i64 -1
  %storemerge59.i.i = load ptr, ptr %storemerge59.in.i.i, align 8
  %381 = load ptr, ptr %storemerge59.i.i, align 8
  %memberidx.i148.i.i = getelementptr inbounds %string, ptr %381, i64 0, i32 1
  %382 = load ptr, ptr %memberidx.i148.i.i, align 8
  call void @free(ptr %382)
  call void @free(ptr %381)
  %memberidx33.i.i = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %storemerge59.i.i, i64 0, i32 1
  %383 = load ptr, ptr %memberidx33.i.i, align 8
  call void @free(ptr %383)
  %384 = add i64 %380, -1
  %385 = icmp sgt i64 %380, 0
  br i1 %385, label %while.entry.i143.preheader.i.i, label %MapIterator_string_CGClassType__next.exit.i.i

while.entry.i143.preheader.i.i:                   ; preds = %for.body28.i.i
  %386 = shl i64 %380, 3
  %uglygep246.i.i = getelementptr i8, ptr %.pn180205.i.i, i64 %386
  br label %while.entry.i143.i.i

while.entry.i143.i.i:                             ; preds = %ifend.i147.i.i, %while.entry.i143.preheader.i.i
  %387 = phi i64 [ %390, %ifend.i147.i.i ], [ %384, %while.entry.i143.preheader.i.i ]
  %388 = phi ptr [ %incdec.ptr.i141.i.i, %ifend.i147.i.i ], [ %.pn180205.i.i, %while.entry.i143.preheader.i.i ]
  %incdec.ptr.i141.i.i = getelementptr inbounds ptr, ptr %388, i64 1
  %389 = load ptr, ptr %388, align 8
  %.not.i142.i.i = icmp eq ptr %389, null
  br i1 %.not.i142.i.i, label %ifend.i147.i.i, label %MapIterator_string_CGClassType__next.exit.i.i

ifend.i147.i.i:                                   ; preds = %while.entry.i143.i.i
  %390 = add i64 %387, -1
  %391 = icmp sgt i64 %387, 0
  br i1 %391, label %while.entry.i143.i.i, label %MapIterator_string_CGClassType__next.exit.i.i

MapIterator_string_CGClassType__next.exit.i.i:    ; preds = %ifend.i147.i.i, %while.entry.i143.i.i, %for.body28.i.i
  %392 = phi i64 [ %384, %for.body28.i.i ], [ %387, %while.entry.i143.i.i ], [ -1, %ifend.i147.i.i ]
  %.pn180204.i.i = phi ptr [ %.pn180205.i.i, %for.body28.i.i ], [ %incdec.ptr.i141.i.i, %while.entry.i143.i.i ], [ %uglygep246.i.i, %ifend.i147.i.i ]
  %storemerge187.i.i = icmp slt i64 %storemerge191202.in.i.i, 2
  br i1 %storemerge187.i.i, label %for.cond27.for.end30_crit_edge.i.i, label %for.body28.i.i

for.cond27.for.end30_crit_edge.i.i:               ; preds = %MapIterator_string_CGClassType__next.exit.i.i
  store ptr %.pn180204.i.i, ptr %memberidx1.i.i172.i.i, align 8
  store i64 %392, ptr %memberidx2.i.i173.i.i, align 4
  store i1 true, ptr %368, align 1
  %.pre206.i = load ptr, ptr %367, align 8
  br label %for.end30.i.i

for.end30.i.i:                                    ; preds = %for.cond27.for.end30_crit_edge.i.i, %MapIterator_string_CGClassType__next.exit169.i.i
  %393 = phi ptr [ %.pre206.i, %for.cond27.for.end30_crit_edge.i.i ], [ %369, %MapIterator_string_CGClassType__next.exit169.i.i ]
  call void @free(ptr nonnull %368)
  call void @free(ptr %393)
  call void @free(ptr %367)
  %394 = load ptr, ptr %memberidx4.i.i160, align 8
  %395 = call ptr @malloc(i32 25)
  %396 = load ptr, ptr %394, align 8
  %memberidx1.i108.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %394, i64 0, i32 1
  %397 = load i64, ptr %memberidx1.i108.i.i, align 4
  %memberidx2.i109.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %394, i64 0, i32 2
  %398 = load i64, ptr %memberidx2.i109.i.i, align 4
  store i1 false, ptr %395, align 1
  %memberidx1.i.i110.i.i = getelementptr inbounds %MapIterator_string_CGEnumType_, ptr %395, i64 0, i32 1
  store ptr %396, ptr %memberidx1.i.i110.i.i, align 8
  %memberidx2.i.i111.i.i = getelementptr inbounds %MapIterator_string_CGEnumType_, ptr %395, i64 0, i32 2
  %memberidx3.i.i112.i.i = getelementptr inbounds %MapIterator_string_CGEnumType_, ptr %395, i64 0, i32 3
  store i64 %398, ptr %memberidx3.i.i112.i.i, align 4
  %399 = add i64 %397, -1
  store i64 %399, ptr %memberidx2.i.i111.i.i, align 4
  %400 = icmp sgt i64 %397, 0
  br i1 %400, label %while.entry.i102.i.preheader.i, label %MapIterator_string_CGEnumType__next.exit107.i.i

while.entry.i102.i.preheader.i:                   ; preds = %for.end30.i.i
  %401 = shl i64 %397, 3
  %uglygep.i = getelementptr i8, ptr %396, i64 %401
  br label %while.entry.i102.i.i

while.entry.i102.i.i:                             ; preds = %ifend.i106.i.i, %while.entry.i102.i.preheader.i
  %402 = phi i64 [ %405, %ifend.i106.i.i ], [ %399, %while.entry.i102.i.preheader.i ]
  %403 = phi ptr [ %incdec.ptr.i100.i.i, %ifend.i106.i.i ], [ %396, %while.entry.i102.i.preheader.i ]
  %incdec.ptr.i100.i.i = getelementptr inbounds ptr, ptr %403, i64 1
  %404 = load ptr, ptr %403, align 8
  %.not.i101.i.i = icmp eq ptr %404, null
  br i1 %.not.i101.i.i, label %ifend.i106.i.i, label %MapIterator_string_CGEnumType__next.exit107.loopexit.i.i

ifend.i106.i.i:                                   ; preds = %while.entry.i102.i.i
  %405 = add i64 %402, -1
  store i64 %405, ptr %memberidx2.i.i111.i.i, align 4
  %406 = icmp sgt i64 %402, 0
  br i1 %406, label %while.entry.i102.i.i, label %MapIterator_string_CGEnumType__next.exit107.loopexit.i.i

MapIterator_string_CGEnumType__next.exit107.loopexit.i.i: ; preds = %ifend.i106.i.i, %while.entry.i102.i.i
  %incdec.ptr.i100.i.lcssa.i = phi ptr [ %uglygep.i, %ifend.i106.i.i ], [ %incdec.ptr.i100.i.i, %while.entry.i102.i.i ]
  %memberidx2.i.i111.promoted264.i.i = phi i64 [ -1, %ifend.i106.i.i ], [ %402, %while.entry.i102.i.i ]
  store ptr %incdec.ptr.i100.i.lcssa.i, ptr %memberidx1.i.i110.i.i, align 8
  br label %MapIterator_string_CGEnumType__next.exit107.i.i

MapIterator_string_CGEnumType__next.exit107.i.i:  ; preds = %MapIterator_string_CGEnumType__next.exit107.loopexit.i.i, %for.end30.i.i
  %memberidx2.i.i111.promoted.i.i = phi i64 [ %memberidx2.i.i111.promoted264.i.i, %MapIterator_string_CGEnumType__next.exit107.loopexit.i.i ], [ %399, %for.end30.i.i ]
  %.pn182.in.promoted.i.i = phi ptr [ %incdec.ptr.i100.i.lcssa.i, %MapIterator_string_CGEnumType__next.exit107.loopexit.i.i ], [ %396, %for.end30.i.i ]
  %storemerge188195.i.i = icmp slt i64 %398, 1
  store i1 %storemerge188195.i.i, ptr %395, align 1
  br i1 %storemerge188195.i.i, label %CodeGen_destroy.exit.i, label %for.body39.i.i

for.body39.i.i:                                   ; preds = %MapIterator_string_CGEnumType__next.exit107.i.i, %MapIterator_string_CGEnumType__next.exit.i.i
  %407 = phi i64 [ %419, %MapIterator_string_CGEnumType__next.exit.i.i ], [ %memberidx2.i.i111.promoted.i.i, %MapIterator_string_CGEnumType__next.exit107.i.i ]
  %.pn182198.i.i = phi ptr [ %.pn182197.i.i, %MapIterator_string_CGEnumType__next.exit.i.i ], [ %.pn182.in.promoted.i.i, %MapIterator_string_CGEnumType__next.exit107.i.i ]
  %storemerge192196.in.i.i = phi i64 [ %storemerge192196.i.i, %MapIterator_string_CGEnumType__next.exit.i.i ], [ %398, %MapIterator_string_CGEnumType__next.exit107.i.i ]
  %storemerge192196.i.i = add nsw i64 %storemerge192196.in.i.i, -1
  %storemerge60.in.i.i = getelementptr inbounds ptr, ptr %.pn182198.i.i, i64 -1
  %storemerge60.i.i = load ptr, ptr %storemerge60.in.i.i, align 8
  %408 = load ptr, ptr %storemerge60.i.i, align 8
  %memberidx.i82.i.i = getelementptr inbounds %string, ptr %408, i64 0, i32 1
  %409 = load ptr, ptr %memberidx.i82.i.i, align 8
  call void @free(ptr %409)
  call void @free(ptr %408)
  %memberidx44.i.i = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %storemerge60.i.i, i64 0, i32 1
  %410 = load ptr, ptr %memberidx44.i.i, align 8
  call void @free(ptr %410)
  %411 = add i64 %407, -1
  %412 = icmp sgt i64 %407, 0
  br i1 %412, label %while.entry.i77.preheader.i.i, label %MapIterator_string_CGEnumType__next.exit.i.i

while.entry.i77.preheader.i.i:                    ; preds = %for.body39.i.i
  %413 = shl i64 %407, 3
  %uglygep.i.i = getelementptr i8, ptr %.pn182198.i.i, i64 %413
  br label %while.entry.i77.i.i

while.entry.i77.i.i:                              ; preds = %ifend.i81.i.i, %while.entry.i77.preheader.i.i
  %414 = phi i64 [ %417, %ifend.i81.i.i ], [ %411, %while.entry.i77.preheader.i.i ]
  %415 = phi ptr [ %incdec.ptr.i75.i.i, %ifend.i81.i.i ], [ %.pn182198.i.i, %while.entry.i77.preheader.i.i ]
  %incdec.ptr.i75.i.i = getelementptr inbounds ptr, ptr %415, i64 1
  %416 = load ptr, ptr %415, align 8
  %.not.i76.i.i = icmp eq ptr %416, null
  br i1 %.not.i76.i.i, label %ifend.i81.i.i, label %MapIterator_string_CGEnumType__next.exit.i.i

ifend.i81.i.i:                                    ; preds = %while.entry.i77.i.i
  %417 = add i64 %414, -1
  %418 = icmp sgt i64 %414, 0
  br i1 %418, label %while.entry.i77.i.i, label %MapIterator_string_CGEnumType__next.exit.i.i

MapIterator_string_CGEnumType__next.exit.i.i:     ; preds = %ifend.i81.i.i, %while.entry.i77.i.i, %for.body39.i.i
  %419 = phi i64 [ %411, %for.body39.i.i ], [ %414, %while.entry.i77.i.i ], [ -1, %ifend.i81.i.i ]
  %.pn182197.i.i = phi ptr [ %.pn182198.i.i, %for.body39.i.i ], [ %incdec.ptr.i75.i.i, %while.entry.i77.i.i ], [ %uglygep.i.i, %ifend.i81.i.i ]
  %storemerge188.i.i = icmp slt i64 %storemerge192196.in.i.i, 2
  br i1 %storemerge188.i.i, label %for.cond38.for.end41_crit_edge.i.i, label %for.body39.i.i

for.cond38.for.end41_crit_edge.i.i:               ; preds = %MapIterator_string_CGEnumType__next.exit.i.i
  store ptr %.pn182197.i.i, ptr %memberidx1.i.i110.i.i, align 8
  store i64 %419, ptr %memberidx2.i.i111.i.i, align 4
  store i1 true, ptr %395, align 1
  %.pre207.i = load ptr, ptr %394, align 8
  br label %CodeGen_destroy.exit.i

CodeGen_destroy.exit.i:                           ; preds = %for.cond38.for.end41_crit_edge.i.i, %MapIterator_string_CGEnumType__next.exit107.i.i
  %420 = phi ptr [ %396, %MapIterator_string_CGEnumType__next.exit107.i.i ], [ %.pre207.i, %for.cond38.for.end41_crit_edge.i.i ]
  call void @free(ptr nonnull %395)
  call void @free(ptr %420)
  call void @free(ptr %394)
  %421 = call ptr @malloc(i32 24)
  %422 = load ptr, ptr %3, align 8
  store ptr @VTableGeneratedModule, ptr %421, align 8
  %memberidx.i67.i = getelementptr inbounds %GeneratedModule, ptr %421, i64 0, i32 1
  store ptr %422, ptr %memberidx.i67.i, align 8
  %memberidx1.i.i167 = getelementptr inbounds %GeneratedModule, ptr %421, i64 0, i32 2
  store ptr null, ptr %memberidx1.i.i167, align 8
  %423 = call i1 @LLVMVerifyModule(ptr %422, i64 1, ptr nonnull %memberidx1.i.i167)
  br i1 %423, label %if.entry.i.i168, label %CodeGen_codegen.exit

if.entry.i.i168:                                  ; preds = %CodeGen_destroy.exit.i
  %424 = load ptr, ptr %421, align 8
  %memberidx5.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %424, i64 0, i32 3
  %425 = load ptr, ptr %memberidx5.i.i, align 8
  call void %425(ptr nonnull %421)
  call fastcc void @GeneratedModule_print_errors(ptr nonnull %421)
  br label %CodeGen_codegen.exit

CodeGen_codegen.exit:                             ; preds = %CodeGen_destroy.exit.i, %if.entry.i.i168
  call void @LLVM_InitializeAllTargetInfos()
  call void @LLVM_InitializeAllTargets()
  call void @LLVM_InitializeAllTargetMCs()
  call void @LLVM_InitializeAllAsmParsers()
  call void @LLVM_InitializeAllAsmPrinters()
  call void @llvm.lifetime.end.p0(i64 81, ptr nonnull %3)
  %426 = load ptr, ptr %421, align 8
  %427 = load ptr, ptr %426, align 8
  %428 = call ptr @malloc(i32 16)
  store i16 20269, ptr %428, align 8
  %429 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %429, align 8
  %memberidx.i.i118 = getelementptr inbounds %string, ptr %429, i64 0, i32 1
  store ptr %428, ptr %memberidx.i.i118, align 8
  %memberidx1.i.i119 = getelementptr inbounds %string, ptr %429, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i119, align 4
  %memberidx2.i.i120 = getelementptr inbounds %string, ptr %429, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i120, align 4
  %430 = call ptr @malloc(i32 8)
  store i8 49, ptr %430, align 8
  %431 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %431, align 8
  %memberidx.i.i121 = getelementptr inbounds %string, ptr %431, i64 0, i32 1
  store ptr %430, ptr %memberidx.i.i121, align 8
  %memberidx1.i.i122 = getelementptr inbounds %string, ptr %431, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i122, align 4
  %memberidx2.i.i123 = getelementptr inbounds %string, ptr %431, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i123, align 4
  %432 = call fastcc ptr @flag_value_or(ptr nonnull %7, ptr nonnull %429, ptr nonnull %431)
  %433 = load ptr, ptr %432, align 8
  %memberidx35 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %433, i64 0, i32 5
  %434 = load ptr, ptr %memberidx35, align 8
  %435 = call ptr %434(ptr nonnull %432)
  %436 = call i64 @atol(ptr nocapture %435)
  tail call void @free(ptr %435)
  call void %427(ptr nonnull %421, i64 %436)
  %437 = call ptr @malloc(i32 88)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %437, ptr noundef nonnull align 8 dereferenceable(11) @262, i64 11, i1 false)
  %438 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %438, align 8
  %memberidx.i.i124 = getelementptr inbounds %string, ptr %438, i64 0, i32 1
  store ptr %437, ptr %memberidx.i.i124, align 8
  %memberidx1.i.i125 = getelementptr inbounds %string, ptr %438, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i125, align 4
  %memberidx2.i.i126 = getelementptr inbounds %string, ptr %438, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i126, align 4
  %439 = load ptr, ptr %7, align 8
  %memberidx.i.i127 = getelementptr inbounds <{ ptr, ptr }>, ptr %439, i64 0, i32 1
  %440 = load ptr, ptr %memberidx.i.i127, align 8
  %441 = call i64 %440(ptr nonnull %7, ptr nonnull %438)
  %.not148 = icmp eq i64 %441, -1
  br i1 %.not148, label %else37, label %if.entry36

if.entry36:                                       ; preds = %CodeGen_codegen.exit
  %442 = load ptr, ptr %421, align 8
  %memberidx39 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %442, i64 0, i32 3
  %443 = load ptr, ptr %memberidx39, align 8
  call void %443(ptr nonnull %421)
  br label %ifend38

else37:                                           ; preds = %CodeGen_codegen.exit
  %444 = call ptr @malloc(i32 16)
  store i16 28461, ptr %444, align 8
  %445 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %445, align 8
  %memberidx.i.i128 = getelementptr inbounds %string, ptr %445, i64 0, i32 1
  store ptr %444, ptr %memberidx.i.i128, align 8
  %memberidx1.i.i129 = getelementptr inbounds %string, ptr %445, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i129, align 4
  %memberidx2.i.i130 = getelementptr inbounds %string, ptr %445, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i130, align 4
  %446 = load ptr, ptr %7, align 8
  %memberidx.i.i131 = getelementptr inbounds <{ ptr, ptr }>, ptr %446, i64 0, i32 1
  %447 = load ptr, ptr %memberidx.i.i131, align 8
  %448 = call i64 %447(ptr nonnull %7, ptr nonnull %445)
  %.not149 = icmp eq i64 %448, -1
  %449 = load ptr, ptr %421, align 8
  br i1 %.not149, label %else41, label %if.entry40

ifend38:                                          ; preds = %if.entry40, %else41, %if.entry36
  %code.0 = phi i64 [ 0, %if.entry36 ], [ 0, %if.entry40 ], [ %463, %else41 ]
  %450 = load ptr, ptr %memberidx2.i.i, align 8
  call void @free(ptr %450)
  tail call void @free(ptr nonnull %7)
  tail call void @free(ptr %163)
  br label %common.ret

if.entry40:                                       ; preds = %else37
  %memberidx43 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %449, i64 0, i32 2
  %451 = load ptr, ptr %memberidx43, align 8
  %452 = call ptr @malloc(i32 16)
  store i16 28461, ptr %452, align 8
  %453 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %453, align 8
  %memberidx.i.i133 = getelementptr inbounds %string, ptr %453, i64 0, i32 1
  store ptr %452, ptr %memberidx.i.i133, align 8
  %memberidx1.i.i134 = getelementptr inbounds %string, ptr %453, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i134, align 4
  %memberidx2.i.i135 = getelementptr inbounds %string, ptr %453, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i135, align 4
  %454 = call ptr @malloc(i32 24)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %454, ptr noundef nonnull align 8 dereferenceable(3) @263, i64 3, i1 false)
  %455 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %455, align 8
  %memberidx.i.i136 = getelementptr inbounds %string, ptr %455, i64 0, i32 1
  store ptr %454, ptr %memberidx.i.i136, align 8
  %memberidx1.i.i137 = getelementptr inbounds %string, ptr %455, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i137, align 4
  %memberidx2.i.i138 = getelementptr inbounds %string, ptr %455, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i138, align 4
  %456 = call fastcc ptr @flag_value_or(ptr nonnull %7, ptr nonnull %453, ptr nonnull %455)
  %457 = call ptr @malloc(i32 64)
  store i64 8387223622006353197, ptr %457, align 8
  %458 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %458, align 8
  %memberidx.i.i139 = getelementptr inbounds %string, ptr %458, i64 0, i32 1
  store ptr %457, ptr %memberidx.i.i139, align 8
  %memberidx1.i.i140 = getelementptr inbounds %string, ptr %458, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i140, align 4
  %memberidx2.i.i141 = getelementptr inbounds %string, ptr %458, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i141, align 4
  %459 = call ptr @malloc(i32 0)
  %460 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %460, align 8
  %memberidx.i.i142 = getelementptr inbounds %string, ptr %460, i64 0, i32 1
  store ptr %459, ptr %memberidx.i.i142, align 8
  %memberidx1.i.i143 = getelementptr inbounds %string, ptr %460, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i143, i8 0, i64 16, i1 false)
  %461 = call fastcc ptr @flag_value_or(ptr nonnull %7, ptr nonnull %458, ptr nonnull %460)
  call void %451(ptr nonnull %421, ptr %456, ptr %461)
  br label %ifend38

else41:                                           ; preds = %else37
  %memberidx44 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %449, i64 0, i32 1
  %462 = load ptr, ptr %memberidx44, align 8
  %463 = call i64 %462(ptr nonnull %421)
  br label %ifend38
}

define internal i1 @Compiler_print_errors(ptr nocapture readonly %0) {
  %2 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 6
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_FloError_, ptr %3, i64 0, i32 2
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %if.entry, label %common.ret

common.ret:                                       ; preds = %1, %print_error_line.exit
  ret i1 %5

if.entry:                                         ; preds = %1
  %memberidx.i = getelementptr inbounds %Array_FloError_, ptr %3, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx3 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %8 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %memberidx4, align 8
  %10 = load i64, ptr %9, align 4
  %memberidx.i12 = getelementptr inbounds %Array_FloFile_, ptr %8, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i12, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %12 = load ptr, ptr %ptridx.i, align 8
  %memberidx6 = getelementptr inbounds %FloFile, ptr %12, i64 0, i32 1
  %13 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %memberidx7, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %15 = load i64, ptr %7, align 4
  %memberidx1.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 1
  %16 = load ptr, ptr %memberidx1.i, align 8
  tail call fastcc void @print_message_error(i64 %15, ptr %16)
  %17 = load ptr, ptr %13, align 8
  %memberidx2.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %17, i64 0, i32 5
  %18 = load ptr, ptr %memberidx2.i, align 8
  %19 = tail call ptr %18(ptr nonnull %13)
  %memberidx3.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 2
  %20 = load ptr, ptr %memberidx3.i, align 8
  %memberidx4.i = getelementptr inbounds %FloRange, ptr %20, i64 0, i32 3
  %21 = load i64, ptr %memberidx4.i, align 4
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @25, ptr %19, i64 %21)
  %23 = load ptr, ptr %2, align 8
  %24 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %24, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %24, i64 0, i32 1
  store ptr %23, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %24, i64 0, i32 2
  store i64 %22, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %24, i64 0, i32 3
  store i64 %22, ptr %memberidx2.i.i, align 4
  call void @free(ptr %19)
  %25 = load ptr, ptr %24, align 8
  %memberidx.i.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx.i.i.i, align 8
  %27 = call ptr %26(ptr nonnull %24)
  %28 = load i64, ptr %memberidx1.i.i, align 4
  call void @write(i64 1, ptr %27, i64 %28)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %29 = load ptr, ptr %memberidx3.i, align 8
  %memberidx.i13 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i13, align 4
  %31 = load ptr, ptr %14, align 8
  %memberidx.i.i14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %31, i64 0, i32 2
  %32 = load ptr, ptr %memberidx.i.i14, align 8
  %33 = call i8 %32(ptr nonnull %14, i64 %30)
  %34 = icmp ne i8 %33, 10
  %memberidx1.i.i15 = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  %35 = load i64, ptr %memberidx1.i.i15, align 4
  %36 = icmp sgt i64 %35, %30
  %37 = and i1 %34, %36
  br i1 %37, label %while.entry.i.i, label %get_next_line_index.exit.i

while.entry.i.i:                                  ; preds = %if.entry, %while.entry.i.i
  %start.0.i.i = phi i64 [ %38, %while.entry.i.i ], [ %30, %if.entry ]
  %38 = add nsw i64 %start.0.i.i, 1
  %39 = load ptr, ptr %14, align 8
  %memberidx2.i.i16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %39, i64 0, i32 2
  %40 = load ptr, ptr %memberidx2.i.i16, align 8
  %41 = call i8 %40(ptr nonnull %14, i64 %38)
  %42 = icmp ne i8 %41, 10
  %43 = load i64, ptr %memberidx1.i.i15, align 4
  %44 = icmp slt i64 %38, %43
  %45 = and i1 %42, %44
  br i1 %45, label %while.entry.i.i, label %get_next_line_index.exit.i

get_next_line_index.exit.i:                       ; preds = %while.entry.i.i, %if.entry
  %start.1.i.i = phi i64 [ %30, %if.entry ], [ %38, %while.entry.i.i ]
  %46 = load i64, ptr %29, align 4
  %memberidx2.i17 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i17, align 4
  %48 = sub i64 %46, %47
  %49 = load ptr, ptr %14, align 8
  %memberidx3.i18 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx3.i18, align 8
  %51 = sub i64 %start.1.i.i, %48
  %52 = call ptr %50(ptr nonnull %14, i64 %48, i64 %51)
  %53 = load ptr, ptr %52, align 8
  %memberidx.i.i.i19 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %53, i64 0, i32 3
  %54 = load ptr, ptr %memberidx.i.i.i19, align 8
  %55 = call ptr %54(ptr nonnull %52)
  %memberidx1.i.i.i20 = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  %56 = load i64, ptr %memberidx1.i.i.i20, align 4
  call void @write(i64 1, ptr %55, i64 %56)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %57 = load i64, ptr %memberidx2.i17, align 4
  %58 = load i64, ptr %memberidx.i13, align 4
  %59 = load i64, ptr %29, align 4
  %60 = sub i64 %58, %59
  %61 = call ptr @malloc(i32 16)
  store i64 0, ptr %61, align 4
  %memberidx1.i27.i = getelementptr inbounds %Range, ptr %61, i64 0, i32 1
  store i64 %57, ptr %memberidx1.i27.i, align 4
  %62 = call ptr @malloc(i32 17)
  %memberidx.i.i29.i = getelementptr inbounds %RangeIterator, ptr %62, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i29.i, align 4
  %memberidx1.i.i30.i = getelementptr inbounds %RangeIterator, ptr %62, i64 0, i32 2
  store i64 %57, ptr %memberidx1.i.i30.i, align 4
  %63 = icmp slt i64 %57, 1
  store i1 %63, ptr %62, align 1
  br i1 %63, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %get_next_line_index.exit.i, %for.body.i
  %storemerge64.i = phi i64 [ %70, %for.body.i ], [ 1, %get_next_line_index.exit.i ]
  %64 = call ptr @malloc(i32 8)
  store i8 32, ptr %64, align 8
  %65 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %65, align 8
  %memberidx.i.i33.i = getelementptr inbounds %string, ptr %65, i64 0, i32 1
  store ptr %64, ptr %memberidx.i.i33.i, align 8
  %memberidx1.i.i34.i = getelementptr inbounds %string, ptr %65, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i34.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %65, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i.i, align 4
  %66 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %67 = call ptr %66(ptr nonnull %65)
  %68 = load i64, ptr %memberidx1.i.i34.i, align 4
  call void @write(i64 1, ptr %67, i64 %68)
  %69 = icmp sge i64 %storemerge64.i, %57
  store i1 %69, ptr %62, align 1
  %70 = add nuw i64 %storemerge64.i, 1
  br i1 %69, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i, %get_next_line_index.exit.i
  call void @free(ptr nonnull %62)
  %71 = call ptr @malloc(i32 56)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %71, ptr noundef nonnull align 8 dereferenceable(7) @10, i64 7, i1 false)
  %72 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %72, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %string, ptr %72, i64 0, i32 1
  store ptr %71, ptr %memberidx.i.i.i.i, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %string, ptr %72, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %string, ptr %72, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i.i, align 4
  %73 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %74 = call ptr %73(ptr nonnull %72)
  %75 = load i64, ptr %memberidx1.i.i.i.i, align 4
  call void @write(i64 1, ptr %74, i64 %75)
  %76 = call ptr @malloc(i32 16)
  store i64 0, ptr %76, align 4
  %memberidx1.i41.i = getelementptr inbounds %Range, ptr %76, i64 0, i32 1
  store i64 %60, ptr %memberidx1.i41.i, align 4
  %77 = call ptr @malloc(i32 17)
  %memberidx.i.i43.i = getelementptr inbounds %RangeIterator, ptr %77, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i43.i, align 4
  %memberidx1.i.i44.i = getelementptr inbounds %RangeIterator, ptr %77, i64 0, i32 2
  store i64 %60, ptr %memberidx1.i.i44.i, align 4
  %78 = icmp slt i64 %60, 1
  store i1 %78, ptr %77, align 1
  br i1 %78, label %print_error_line.exit, label %for.body12.i

for.body12.i:                                     ; preds = %for.end.i, %for.body12.i
  %storemerge6263.i = phi i64 [ %85, %for.body12.i ], [ 1, %for.end.i ]
  %79 = call ptr @malloc(i32 8)
  store i8 94, ptr %79, align 8
  %80 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %80, align 8
  %memberidx.i.i47.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  store ptr %79, ptr %memberidx.i.i47.i, align 8
  %memberidx1.i.i48.i = getelementptr inbounds %string, ptr %80, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i48.i, align 4
  %memberidx2.i.i49.i = getelementptr inbounds %string, ptr %80, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i49.i, align 4
  %81 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %82 = call ptr %81(ptr nonnull %80)
  %83 = load i64, ptr %memberidx1.i.i48.i, align 4
  call void @write(i64 1, ptr %82, i64 %83)
  %84 = icmp sge i64 %storemerge6263.i, %60
  store i1 %84, ptr %77, align 1
  %85 = add nuw i64 %storemerge6263.i, 1
  br i1 %84, label %print_error_line.exit, label %for.body12.i

print_error_line.exit:                            ; preds = %for.body12.i, %for.end.i
  call void @free(ptr nonnull %77)
  %86 = call ptr @malloc(i32 32)
  store i32 1831885595, ptr %86, align 8
  %87 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %87, align 8
  %memberidx.i.i1.i.i = getelementptr inbounds %string, ptr %87, i64 0, i32 1
  store ptr %86, ptr %memberidx.i.i1.i.i, align 8
  %memberidx1.i.i2.i.i = getelementptr inbounds %string, ptr %87, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i2.i.i, align 4
  %memberidx2.i.i3.i.i = getelementptr inbounds %string, ptr %87, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i3.i.i, align 4
  %88 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %89 = call ptr %88(ptr nonnull %87)
  %90 = load i64, ptr %memberidx1.i.i2.i.i, align 4
  call void @write(i64 1, ptr %89, i64 %90)
  %91 = call ptr @malloc(i32 8)
  store i8 10, ptr %91, align 8
  %92 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %92, align 8
  %memberidx.i.i56.i = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  store ptr %91, ptr %memberidx.i.i56.i, align 8
  %memberidx1.i.i57.i = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i57.i, align 4
  %memberidx2.i.i58.i = getelementptr inbounds %string, ptr %92, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i58.i, align 4
  %93 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %94 = call ptr %93(ptr nonnull %92)
  %95 = load i64, ptr %memberidx1.i.i57.i, align 4
  call void @write(i64 1, ptr %94, i64 %95)
  %memberidx.i61.i = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  %96 = load ptr, ptr %memberidx.i61.i, align 8
  call void @free(ptr %96)
  call void @free(ptr %52)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  br label %common.ret
}

define internal void @Compiler_set_std_path(ptr nocapture writeonly %0, ptr %1) {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  store ptr %1, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %4 = tail call ptr @malloc(i32 176)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(22) %4, ptr noundef nonnull align 8 dereferenceable(22) @23, i64 22, i1 false)
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %5, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  store ptr %4, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  store i64 22, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 3
  store i64 22, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %6 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i, align 8
  %8 = tail call ptr %7(ptr nonnull %1)
  %9 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %10 = tail call ptr %9(ptr nonnull %5)
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @22, ptr %8, ptr %10)
  %12 = load ptr, ptr %3, align 8
  %13 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i4 = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i4, align 8
  %memberidx1.i.i5 = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i.i5, align 4
  %memberidx2.i.i6 = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i.i6, align 4
  call void @free(ptr %8)
  call void @free(ptr %10)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  store ptr %13, ptr %memberidx1, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FloError__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FloError__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal ptr @Compiler_register_file(ptr nocapture readonly %0, ptr %1) {
  %buf.i.i = alloca [400 x i8], align 1
  %3 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %3, i64 0, i32 4
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = tail call ptr @malloc(i32 32)
  store i32 1869375040, ptr %5, align 8
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %6, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  store ptr %5, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i, align 4
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %memberidx1.i, align 8
  %8 = tail call ptr %4(ptr nonnull %1, ptr nonnull %6, ptr %7)
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %9, i64 0, i32 6
  %10 = load ptr, ptr %memberidx2.i, align 8
  %11 = tail call ptr @malloc(i32 32)
  store i32 1869375022, ptr %11, align 8
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %12, align 8
  %memberidx.i.i5.i = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  store ptr %11, ptr %memberidx.i.i5.i, align 8
  %memberidx1.i.i6.i = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i6.i, align 4
  %memberidx2.i.i7.i = getelementptr inbounds %string, ptr %12, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i7.i, align 4
  %13 = tail call i1 %10(ptr nonnull %8, ptr nonnull %12)
  br i1 %13, label %Compiler_find_module_path.exit, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %14 = tail call ptr @malloc(i32 32)
  store i32 1869375022, ptr %14, align 8
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i.i8.i = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i.i8.i, align 8
  %memberidx1.i.i9.i = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i9.i, align 4
  %memberidx2.i.i10.i = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i10.i, align 4
  %memberidx.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  %16 = load i64, ptr %memberidx.i.i, align 4
  %17 = add i64 %16, 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  %18 = load ptr, ptr %memberidx2.i.i, align 8
  %19 = tail call ptr @realloc(ptr %18, i64 %17)
  store ptr %19, ptr %memberidx2.i.i, align 8
  %20 = load i64, ptr %memberidx.i.i, align 4
  %21 = getelementptr inbounds i8, ptr %19, i64 %20
  %22 = load i32, ptr %14, align 8
  store i32 %22, ptr %21, align 1073741824
  store i64 %17, ptr %memberidx.i.i, align 4
  br label %Compiler_find_module_path.exit

Compiler_find_module_path.exit:                   ; preds = %2, %if.entry.i
  call void @llvm.lifetime.start.p0(i64 400, ptr nonnull %buf.i.i)
  %23 = load ptr, ptr %8, align 8
  %memberidx.i11.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx.i11.i, align 8
  %25 = tail call ptr %24(ptr nonnull %8)
  %26 = call ptr @realpath(ptr %25, ptr nonnull %buf.i.i)
  %27 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %buf.i.i)
  %28 = trunc i64 %27 to i32
  %mallocsize.i.i.i = shl i32 %28, 3
  %29 = call ptr @malloc(i32 %mallocsize.i.i.i)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %29, ptr nonnull align 8 %buf.i.i, i64 %27, i1 false)
  %30 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %30, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 1
  store ptr %29, ptr %memberidx.i.i.i.i, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 2
  store i64 %27, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 3
  store i64 %27, ptr %memberidx2.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %buf.i.i)
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 7
  %31 = load ptr, ptr %memberidx, align 8
  %32 = call fastcc i64 @Map_string_FileId__hash_fnc(ptr nonnull %30)
  %memberidx.i15 = getelementptr inbounds %Map_string_FileId_, ptr %31, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i15, align 4
  %34 = srem i64 %32, %33
  %35 = load ptr, ptr %31, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %35, i64 %34
  %36 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %36, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %Compiler_find_module_path.exit, %else.i
  %37 = phi ptr [ %47, %else.i ], [ %35, %Compiler_find_module_path.exit ]
  %38 = phi i64 [ %48, %else.i ], [ %33, %Compiler_find_module_path.exit ]
  %39 = phi ptr [ %51, %else.i ], [ %36, %Compiler_find_module_path.exit ]
  %hash.0.i = phi i64 [ %50, %else.i ], [ %34, %Compiler_find_module_path.exit ]
  %40 = load ptr, ptr %39, align 8
  %memberidx.i.i16 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  %41 = load i64, ptr %memberidx.i.i16, align 4
  %42 = load i64, ptr %memberidx1.i.i.i.i, align 4
  %.not.i.i = icmp eq i64 %41, %42
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i18 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  %43 = load ptr, ptr %memberidx2.i.i18, align 8
  %44 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %45 = call i64 @memcmp(ptr %43, ptr %44, i64 %41)
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i15, align 4
  %.pre30 = load ptr, ptr %31, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre31.pre = load ptr, ptr %31, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre31.pre, i64 %hash.0.i
  %.pre32.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre32.pre, null
  br i1 %.not29.i, label %ifend, label %Map_string_FileId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %47 = phi ptr [ %.pre30, %ifend.i.i.else.i_crit_edge ], [ %37, %while.entry.i ]
  %48 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %38, %while.entry.i ]
  %49 = add i64 %hash.0.i, 1
  %50 = srem i64 %49, %48
  %ptridx7.i = getelementptr inbounds ptr, ptr %47, i64 %50
  %51 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %51, null
  br i1 %.not30.i, label %ifend, label %while.entry.i

Map_string_FileId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_FileId_, ptr %.pre32.pre, i64 0, i32 1
  %52 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %52, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_string_FileId____getitem__.exit, %Array_FloFile____sl__.exit
  %common.ret.op = phi ptr [ %53, %Array_FloFile____sl__.exit ], [ %52, %Map_string_FileId____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %Compiler_find_module_path.exit, %while.end.i, %Map_string_FileId____getitem__.exit
  %53 = tail call ptr @malloc(i32 8)
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FloFile_, ptr %54, i64 0, i32 2
  %55 = load i64, ptr %memberidx2, align 4
  store i64 %55, ptr %53, align 4
  %56 = load ptr, ptr %memberidx, align 8
  call fastcc void @Map_string_FileId____setitem__(ptr %56, ptr nonnull %30, ptr nonnull %53)
  %57 = load ptr, ptr %memberidx1, align 8
  %58 = tail call ptr @malloc(i32 16)
  store ptr %30, ptr %58, align 8
  %memberidx1.i19 = getelementptr inbounds %FloFile, ptr %58, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i19, align 8
  %memberidx.i20 = getelementptr inbounds %Array_FloFile_, ptr %57, i64 0, i32 2
  %59 = load i64, ptr %memberidx.i20, align 4
  %memberidx1.i21 = getelementptr inbounds %Array_FloFile_, ptr %57, i64 0, i32 3
  %60 = load i64, ptr %memberidx1.i21, align 4
  %.not.i22 = icmp slt i64 %59, %60
  br i1 %.not.i22, label %ifend.Array_FloFile____sl__.exit_crit_edge, label %if.entry.i25

ifend.Array_FloFile____sl__.exit_crit_edge:       ; preds = %ifend
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_FloFile_, ptr %57, i64 0, i32 1
  %.pre34 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_FloFile____sl__.exit

if.entry.i25:                                     ; preds = %ifend
  %61 = shl i64 %60, 1
  store i64 %61, ptr %memberidx1.i21, align 4
  %memberidx2.i.i24 = getelementptr inbounds %Array_FloFile_, ptr %57, i64 0, i32 1
  %62 = load ptr, ptr %memberidx2.i.i24, align 8
  %63 = shl i64 %60, 4
  %64 = call ptr @realloc(ptr %62, i64 %63)
  store ptr %64, ptr %memberidx2.i.i24, align 8
  %.pre33 = load i64, ptr %memberidx.i20, align 4
  br label %Array_FloFile____sl__.exit

Array_FloFile____sl__.exit:                       ; preds = %ifend.Array_FloFile____sl__.exit_crit_edge, %if.entry.i25
  %65 = phi ptr [ %.pre34, %ifend.Array_FloFile____sl__.exit_crit_edge ], [ %64, %if.entry.i25 ]
  %66 = phi i64 [ %59, %ifend.Array_FloFile____sl__.exit_crit_edge ], [ %.pre33, %if.entry.i25 ]
  %67 = add i64 %66, 1
  store i64 %67, ptr %memberidx.i20, align 4
  %ptridx.i26 = getelementptr inbounds ptr, ptr %65, i64 %66
  store ptr %58, ptr %ptridx.i26, align 8
  br label %common.ret
}

define internal i1 @Compiler_set_current_file(ptr nocapture %0, ptr %1) {
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %3 = load ptr, ptr %memberidx, align 8
  %4 = load i64, ptr %1, align 4
  %memberidx.i = getelementptr inbounds %Array_FloFile_, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %5, i64 %4
  %6 = load ptr, ptr %ptridx.i, align 8
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %memberidx.i19 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %8, i64 0, i32 5
  %9 = load ptr, ptr %memberidx.i19, align 8
  %10 = tail call ptr %9(ptr nonnull %7)
  %11 = tail call i64 @access(ptr %10, i64 0)
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %ifend, label %common.ret

common.ret:                                       ; preds = %2, %ifend7
  ret i1 %12

ifend:                                            ; preds = %2
  %13 = load ptr, ptr %6, align 8
  %14 = load ptr, ptr %13, align 8
  %memberidx.i20 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %14, i64 0, i32 5
  %15 = load ptr, ptr %memberidx.i20, align 8
  %16 = tail call ptr %15(ptr nonnull %13)
  %17 = tail call i64 @fopen(ptr %16, ptr nonnull @24)
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %File_open_for_reading.exit, label %ifend.i

ifend.i:                                          ; preds = %ifend
  %19 = tail call ptr @malloc(i32 16)
  store ptr @VTableFile, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %File, ptr %19, i64 0, i32 1
  store i64 %17, ptr %memberidx.i.i, align 4
  br label %File_open_for_reading.exit

File_open_for_reading.exit:                       ; preds = %ifend, %ifend.i
  %common.ret.op.i = phi ptr [ %19, %ifend.i ], [ null, %ifend ]
  %memberidx4 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 3
  %20 = load ptr, ptr %memberidx4, align 8
  %.not = icmp eq ptr %20, null
  br i1 %.not, label %ifend7, label %if.entry5

if.entry5:                                        ; preds = %File_open_for_reading.exit
  %memberidx.i21 = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i21, align 8
  tail call void @free(ptr %21)
  tail call void @free(ptr nonnull %20)
  br label %ifend7

ifend7:                                           ; preds = %File_open_for_reading.exit, %if.entry5
  %22 = load ptr, ptr %common.ret.op.i, align 8
  %23 = load ptr, ptr %22, align 8
  %24 = tail call ptr %23(ptr nonnull %common.ret.op.i)
  store ptr %24, ptr %memberidx4, align 8
  %memberidx11 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 1
  store ptr %1, ptr %memberidx11, align 8
  %25 = load ptr, ptr %common.ret.op.i, align 8
  %memberidx12 = getelementptr inbounds <{ ptr, ptr }>, ptr %25, i64 0, i32 1
  %26 = load ptr, ptr %memberidx12, align 8
  tail call void %26(ptr nonnull %common.ret.op.i)
  br label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FloFile__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FloFile__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal ptr @Compiler_add_builtins(ptr %0) {
  %2 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr }>, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call ptr %3(ptr nonnull %0, ptr %4)
  ret ptr %5
}

define internal fastcc void @Map_string_FileId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx6 = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx6, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.037 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.037
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.037, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %storemerge36 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %storemerge36
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_FileId_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_FileId____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %storemerge36, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_FileId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_FileId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_FileId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = srem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i34 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %13, %while.entry.preheader ], [ %26, %ifend9 ]
  %16 = phi i64 [ %11, %while.entry.preheader ], [ %27, %ifend9 ]
  %17 = phi ptr [ %14, %while.entry.preheader ], [ %30, %ifend9 ]
  %18 = phi i64 [ %12, %while.entry.preheader ], [ %29, %ifend9 ]
  %19 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i34, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.thread35, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend9

while.end.thread35:                               ; preds = %ifend.i
  %.pre40 = load ptr, ptr %0, align 8
  br label %ifend15

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %26 = phi ptr [ %.pre39, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %28 = add i64 %18, 1
  %29 = srem i64 %28, %27
  %ptridx12 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx12, align 8
  %.not33 = icmp eq ptr %30, null
  br i1 %.not33, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %31 = phi ptr [ %13, %ifend ], [ %26, %ifend9 ]
  %32 = phi i64 [ %12, %ifend ], [ %29, %ifend9 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend15

ifend15:                                          ; preds = %while.end.thread35, %if.entry13
  %35 = phi ptr [ %.pre40, %while.end.thread35 ], [ %31, %if.entry13 ]
  %36 = phi i64 [ %18, %while.end.thread35 ], [ %32, %if.entry13 ]
  %ptridx19 = getelementptr inbounds ptr, ptr %35, i64 %36
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_FileId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_FileId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @21, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = sext i8 %13 to i64
  %15 = add i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  %20 = call i64 @llvm.abs.i64(i64 %hash.0.lcssa, i1 false)
  ret i64 %20
}

; Function Attrs: nofree nounwind
declare noundef ptr @realpath(ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #9

declare ptr @dirname(ptr) local_unnamed_addr

define internal noalias ptr @File_read_all(ptr nocapture readonly %0) {
  %2 = tail call ptr @malloc(i32 0)
  %memberidx = getelementptr inbounds %File, ptr %0, i64 0, i32 1
  %buffer10 = alloca [1024 x i8], align 1
  %3 = load i64, ptr %memberidx, align 4
  %4 = call i64 @fread(ptr nonnull %buffer10, i64 1, i64 1024, i64 %3)
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %ifend, %1
  %size.0.lcssa = phi i64 [ 0, %1 ], [ %8, %ifend ]
  %allocated_mem.0.lcssa = phi ptr [ %2, %1 ], [ %9, %ifend ]
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %6, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  store ptr %allocated_mem.0.lcssa, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  store i64 %size.0.lcssa, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %6, i64 0, i32 3
  store i64 %size.0.lcssa, ptr %memberidx2.i, align 4
  ret ptr %6

ifend:                                            ; preds = %1, %ifend
  %7 = phi i64 [ %12, %ifend ], [ %4, %1 ]
  %buffer13 = phi ptr [ %buffer, %ifend ], [ %buffer10, %1 ]
  %allocated_mem.012 = phi ptr [ %9, %ifend ], [ %2, %1 ]
  %size.011 = phi i64 [ %8, %ifend ], [ 0, %1 ]
  %8 = add i64 %7, %size.011
  %9 = call ptr @realloc(ptr %allocated_mem.012, i64 %8)
  %10 = getelementptr inbounds i8, ptr %9, i64 %size.011
  call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %10, ptr nonnull align 1073741824 %buffer13, i64 %7, i1 false)
  %buffer = alloca [1024 x i8], align 1
  %11 = load i64, ptr %memberidx, align 4
  %12 = call i64 @fread(ptr nonnull %buffer, i64 1, i64 1024, i64 %11)
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %if.entry, label %ifend
}

define internal void @File_close(ptr nocapture readonly %0) {
  %memberidx = getelementptr inbounds %File, ptr %0, i64 0, i32 1
  %2 = load i64, ptr %memberidx, align 4
  tail call void @fclose(i64 %2)
  ret void
}

declare i64 @fopen(ptr, ptr) local_unnamed_addr

declare i64 @fread(ptr, i64, i64, i64) local_unnamed_addr

; Function Attrs: nofree nounwind
declare noundef i64 @access(ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #9

declare void @fclose(i64) local_unnamed_addr

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Token__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Token__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc ptr @Lexer_tokenize(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Lexer, align 8
  %memberidx.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 1
  store ptr %0, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 2
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 5
  store i64 1, ptr %memberidx3.i, align 4
  %memberidx4.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 4
  store i64 0, ptr %memberidx4.i, align 4
  %memberidx2.i.i24 = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx2.i.i24, align 4
  %5 = icmp slt i64 %4, 0
  br i1 %5, label %Lexer_advance.exit, label %ifend.i

ifend.i:                                          ; preds = %2
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %6, i64 0, i32 2
  %7 = load ptr, ptr %memberidx2.i26, align 8
  store i64 0, ptr %memberidx2.i, align 4
  %8 = tail call i8 %7(ptr nonnull %0, i64 0)
  store i8 %8, ptr %3, align 8
  %9 = icmp eq i8 %8, 10
  br i1 %9, label %if.entry6.i, label %else7.i

if.entry6.i:                                      ; preds = %ifend.i
  store i64 0, ptr %memberidx4.i, align 4
  store i64 2, ptr %memberidx3.i, align 4
  br label %Lexer_advance.exit

else7.i:                                          ; preds = %ifend.i
  store i64 1, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %2, %if.entry6.i, %else7.i
  %10 = phi i64 [ -1, %2 ], [ 0, %if.entry6.i ], [ 0, %else7.i ]
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Token_, ptr %11, align 8
  %memberidx.i28 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 2
  %memberidx1.i29 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 3
  store i64 8, ptr %memberidx1.i29, align 4
  %memberidx2.i30 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = tail call ptr @malloc(i32 64)
  store ptr %12, ptr %memberidx2.i30, align 8
  store i64 0, ptr %memberidx.i28, align 4
  %13 = load i64, ptr %memberidx2.i.i24, align 4
  %14 = icmp sge i64 %10, %13
  %memberidx3 = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 2
  %15 = load i64, ptr %memberidx3, align 4
  %16 = icmp ne i64 %15, 0
  %17 = or i1 %14, %16
  br i1 %17, label %while.end, label %while.entry

while.entry:                                      ; preds = %Lexer_advance.exit, %Lexer_advance.exit53
  %18 = phi ptr [ %25, %Lexer_advance.exit53 ], [ %12, %Lexer_advance.exit ]
  %19 = phi i64 [ %26, %Lexer_advance.exit53 ], [ 8, %Lexer_advance.exit ]
  %20 = phi i64 [ %27, %Lexer_advance.exit53 ], [ 0, %Lexer_advance.exit ]
  %21 = call fastcc ptr @Lexer_lex_token(ptr nonnull %3)
  %.not.i56 = icmp slt i64 %20, %19
  br i1 %.not.i56, label %Array_Token____sl__.exit63, label %if.entry.i59

if.entry.i59:                                     ; preds = %while.entry
  %22 = shl i64 %19, 1
  store i64 %22, ptr %memberidx1.i29, align 4
  %23 = shl i64 %19, 4
  %24 = call ptr @realloc(ptr %18, i64 %23)
  store ptr %24, ptr %memberidx2.i30, align 8
  br label %Array_Token____sl__.exit63

Array_Token____sl__.exit63:                       ; preds = %while.entry, %if.entry.i59
  %25 = phi ptr [ %18, %while.entry ], [ %24, %if.entry.i59 ]
  %26 = phi i64 [ %19, %while.entry ], [ %22, %if.entry.i59 ]
  %27 = add i64 %20, 1
  store i64 %27, ptr %memberidx.i28, align 4
  %ptridx.i61 = getelementptr inbounds ptr, ptr %25, i64 %20
  store ptr %21, ptr %ptridx.i61, align 8
  %28 = load i64, ptr %memberidx2.i, align 4
  %29 = load ptr, ptr %memberidx.i, align 8
  %memberidx2.i.i43 = getelementptr inbounds %string, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx2.i.i43, align 4
  %.not = icmp slt i64 %28, %30
  br i1 %.not, label %ifend.i47, label %Lexer_advance.exit53

ifend.i47:                                        ; preds = %Array_Token____sl__.exit63
  %31 = load ptr, ptr %29, align 8
  %memberidx2.i45 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %31, i64 0, i32 2
  %32 = load ptr, ptr %memberidx2.i45, align 8
  %33 = add nsw i64 %28, 1
  store i64 %33, ptr %memberidx2.i, align 4
  %34 = call i8 %32(ptr nonnull %29, i64 %33)
  store i8 %34, ptr %3, align 8
  %35 = icmp eq i8 %34, 10
  br i1 %35, label %if.entry6.i50, label %Lexer_advance.exit53.sink.split

if.entry6.i50:                                    ; preds = %ifend.i47
  store i64 0, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit53.sink.split

Lexer_advance.exit53.sink.split:                  ; preds = %ifend.i47, %if.entry6.i50
  %memberidx3.i.sink67 = phi ptr [ %memberidx3.i, %if.entry6.i50 ], [ %memberidx4.i, %ifend.i47 ]
  %36 = load i64, ptr %memberidx3.i.sink67, align 4
  %37 = add i64 %36, 1
  store i64 %37, ptr %memberidx3.i.sink67, align 4
  br label %Lexer_advance.exit53

Lexer_advance.exit53:                             ; preds = %Lexer_advance.exit53.sink.split, %Array_Token____sl__.exit63
  %38 = load i64, ptr %memberidx2.i, align 4
  %39 = load ptr, ptr %memberidx.i, align 8
  %memberidx2.i40 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  %40 = load i64, ptr %memberidx2.i40, align 4
  %41 = icmp sge i64 %38, %40
  %42 = load ptr, ptr %memberidx1.i, align 8
  %memberidx5 = getelementptr inbounds %Array_FloError_, ptr %42, i64 0, i32 2
  %43 = load i64, ptr %memberidx5, align 4
  %44 = icmp ne i64 %43, 0
  %45 = or i1 %41, %44
  br i1 %45, label %while.end, label %while.entry

while.end:                                        ; preds = %Lexer_advance.exit53, %Lexer_advance.exit
  %46 = phi ptr [ %12, %Lexer_advance.exit ], [ %25, %Lexer_advance.exit53 ]
  %47 = phi i64 [ 8, %Lexer_advance.exit ], [ %26, %Lexer_advance.exit53 ]
  %48 = phi i64 [ 0, %Lexer_advance.exit ], [ %27, %Lexer_advance.exit53 ]
  %49 = tail call ptr @malloc(i32 16)
  %50 = tail call ptr @malloc(i32 32)
  %51 = load i64, ptr %memberidx4.i, align 4
  %52 = load i64, ptr %memberidx3.i, align 4
  %memberidx2.i36 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %50, i8 0, i64 16, i1 false)
  store i64 %51, ptr %memberidx2.i36, align 4
  %memberidx3.i37 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 3
  store i64 %52, ptr %memberidx3.i37, align 4
  store i64 44, ptr %49, align 4
  %memberidx1.i34 = getelementptr inbounds %Token, ptr %49, i64 0, i32 1
  store ptr %50, ptr %memberidx1.i34, align 8
  %.not.i = icmp slt i64 %48, %47
  br i1 %.not.i, label %Array_Token____sl__.exit, label %if.entry.i

if.entry.i:                                       ; preds = %while.end
  %53 = shl i64 %47, 1
  store i64 %53, ptr %memberidx1.i29, align 4
  %54 = shl i64 %47, 4
  %55 = call ptr @realloc(ptr %46, i64 %54)
  store ptr %55, ptr %memberidx2.i30, align 8
  %.pre = load i64, ptr %memberidx.i28, align 4
  br label %Array_Token____sl__.exit

Array_Token____sl__.exit:                         ; preds = %while.end, %if.entry.i
  %56 = phi ptr [ %46, %while.end ], [ %55, %if.entry.i ]
  %57 = phi i64 [ %48, %while.end ], [ %.pre, %if.entry.i ]
  %58 = add i64 %57, 1
  store i64 %58, ptr %memberidx.i28, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %56, i64 %57
  store ptr %49, ptr %ptridx.i, align 8
  ret ptr %11
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Array_Token___pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Array_Token___find(ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx1.i = getelementptr inbounds %Array_Token_, ptr %1, i64 0, i32 2
  %5 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i10.i = getelementptr inbounds %Array_Token_, ptr %1, i64 0, i32 1
  %6 = icmp sgt i64 %5, 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.09 = phi i64 [ 0, %for.body.lr.ph ], [ %15, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.09
  %7 = load ptr, ptr %ptridx, align 8
  %memberidx.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %8, %5
  br i1 %.not.i, label %for.cond.preheader.i, label %ifend

for.cond.preheader.i:                             ; preds = %for.body
  br i1 %6, label %for.body.lr.ph.i, label %common.ret

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i, align 8
  %10 = load ptr, ptr %memberidx.i10.i, align 8
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %11 = add nuw nsw i64 %storemerge12.i, 1
  %12 = icmp slt i64 %11, %5
  br i1 %12, label %for.body.i, label %common.ret

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %storemerge12.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %11, %for.cond.i ]
  %ptridx.i.i = getelementptr inbounds ptr, ptr %9, i64 %storemerge12.i
  %13 = load ptr, ptr %ptridx.i.i, align 8
  %ptridx.i11.i = getelementptr inbounds ptr, ptr %10, i64 %storemerge12.i
  %14 = load ptr, ptr %ptridx.i11.i, align 8
  %.not9.i = icmp eq ptr %13, %14
  br i1 %.not9.i, label %for.cond.i, label %ifend

common.ret:                                       ; preds = %ifend, %for.cond.preheader.i, %for.cond.i, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.09, %for.cond.i ], [ -1, %ifend ], [ %i.09, %for.cond.preheader.i ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body.i, %for.body
  %15 = add nuw nsw i64 %i.09, 1
  %16 = icmp slt i64 %15, %2
  br i1 %16, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal i64 @Array_int__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_int_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_int_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds i64, ptr %4, i64 %2
  %5 = load i64, ptr %ptridx, align 4
  ret i64 %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_int__find(ptr nocapture readonly %0, i64 %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_int_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_int_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds i64, ptr %4, i64 %i.06
  %5 = load i64, ptr %ptridx, align 4
  %6 = icmp eq i64 %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc ptr @Lexer_string_token(ptr %0) unnamed_addr {
  %2 = alloca %StringBuilder, align 8
  %3 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Array_Token__, ptr %3, align 8
  %memberidx.i = getelementptr inbounds %Array_Array_Token__, ptr %3, i64 0, i32 2
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_Array_Token__, ptr %3, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_Array_Token__, ptr %3, i64 0, i32 1
  %4 = tail call ptr @malloc(i32 64)
  store ptr %4, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_int_, ptr %5, align 8
  %memberidx.i64 = getelementptr inbounds %Array_int_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i64, align 4
  %memberidx1.i65 = getelementptr inbounds %Array_int_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i65, align 4
  %memberidx2.i66 = getelementptr inbounds %Array_int_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i66, align 8
  store i64 0, ptr %memberidx.i64, align 4
  %memberidx.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %7 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i.i, align 4
  %.not = icmp slt i64 %7, %9
  br i1 %.not, label %ifend.i, label %Lexer_advance.exit

ifend.i:                                          ; preds = %1
  %10 = load ptr, ptr %8, align 8
  %memberidx2.i68 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %10, i64 0, i32 2
  %11 = load ptr, ptr %memberidx2.i68, align 8
  %12 = add nsw i64 %7, 1
  store i64 %12, ptr %memberidx.i.i, align 4
  %13 = tail call i8 %11(ptr nonnull %8, i64 %12)
  store i8 %13, ptr %0, align 1
  %14 = icmp eq i8 %13, 10
  %memberidx9.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %14, label %if.entry6.i, label %Lexer_advance.exit.sink.split

if.entry6.i:                                      ; preds = %ifend.i
  store i64 0, ptr %memberidx9.i, align 4
  %memberidx10.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.sink.split

Lexer_advance.exit.sink.split:                    ; preds = %ifend.i, %if.entry6.i
  %memberidx10.i.sink267 = phi ptr [ %memberidx10.i, %if.entry6.i ], [ %memberidx9.i, %ifend.i ]
  %15 = load i64, ptr %memberidx10.i.sink267, align 4
  %16 = add i64 %15, 1
  store i64 %16, ptr %memberidx10.i.sink267, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %Lexer_advance.exit.sink.split, %1
  %17 = alloca %StringBuilder, align 8
  store ptr @VTableStringBuilder, ptr %17, align 8
  %memberidx.i69 = getelementptr inbounds %StringBuilder, ptr %17, i64 0, i32 2
  store i64 1, ptr %memberidx.i69, align 8
  %memberidx1.i70 = getelementptr inbounds %StringBuilder, ptr %17, i64 0, i32 1
  %18 = tail call ptr @malloc(i32 8)
  store ptr %18, ptr %memberidx1.i70, align 8
  %memberidx3.i71 = getelementptr inbounds %StringBuilder, ptr %17, i64 0, i32 3
  store ptr %18, ptr %memberidx3.i71, align 8
  %memberidx5.i = getelementptr inbounds %StringBuilder, ptr %17, i64 0, i32 4
  store i64 0, ptr %memberidx5.i, align 8
  %19 = load i64, ptr %memberidx.i.i, align 4
  %20 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i74 = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  %21 = load i64, ptr %memberidx2.i74, align 4
  %.not217 = icmp slt i64 %19, %21
  br i1 %.not217, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Lexer_advance.exit
  %memberidx12.i106 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i104 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.outer

while.entry.outer:                                ; preds = %while.entry.preheader, %Lexer_advance.exit124
  %escape_next.0.ph = phi i1 [ false, %while.entry.preheader ], [ %113, %Lexer_advance.exit124 ]
  %length.0.ph = phi i64 [ 2, %while.entry.preheader ], [ %112, %Lexer_advance.exit124 ]
  %22 = load i8, ptr %0, align 1
  %23 = icmp ne i8 %22, 34
  %24 = or i1 %escape_next.0.ph, %23
  br i1 %24, label %ifend.lr.ph, label %while.end

ifend.lr.ph:                                      ; preds = %while.entry.outer
  %25 = add i64 %length.0.ph, -2
  br label %ifend

while.end:                                        ; preds = %while.entry.outer, %Lexer_advance.exit124, %Array_Array_Token_____sl__.exit, %Lexer_advance.exit
  %length.1 = phi i64 [ 2, %Lexer_advance.exit ], [ %length.0.ph, %Array_Array_Token_____sl__.exit ], [ %length.0.ph, %while.entry.outer ], [ %112, %Lexer_advance.exit124 ]
  %26 = call ptr @malloc(i32 32)
  %27 = load i64, ptr %memberidx.i.i, align 4
  %28 = sub i64 1, %length.1
  %29 = add i64 %28, %27
  %30 = add i64 %27, 1
  %memberidx2.i76 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %31 = load i64, ptr %memberidx2.i76, align 4
  %32 = sub i64 %31, %length.1
  %memberidx3.i77 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %33 = load i64, ptr %memberidx3.i77, align 4
  store i64 %29, ptr %26, align 4
  %memberidx1.i.i78 = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 1
  store i64 %30, ptr %memberidx1.i.i78, align 4
  %memberidx2.i.i79 = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i79, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i, align 4
  %34 = load ptr, ptr %17, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %34, i64 0, i32 3
  %35 = load ptr, ptr %memberidx32, align 8
  %36 = call ptr %35(ptr nonnull %17)
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %2)
  %memberidx.i80 = getelementptr inbounds %string, ptr %36, i64 0, i32 2
  %37 = load i64, ptr %memberidx.i80, align 4
  store ptr @VTableStringBuilder, ptr %2, align 8
  %memberidx.i.i81 = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 2
  store i64 %37, ptr %memberidx.i.i81, align 8
  %memberidx1.i.i82 = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 1
  %38 = trunc i64 %37 to i32
  %mallocsize.i.i = shl i32 %38, 3
  %39 = call ptr @malloc(i32 %mallocsize.i.i)
  store ptr %39, ptr %memberidx1.i.i82, align 8
  %memberidx3.i.i83 = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 3
  store ptr %39, ptr %memberidx3.i.i83, align 8
  %memberidx5.i.i = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i, align 8
  %40 = load i64, ptr %memberidx.i80, align 4
  %41 = icmp sgt i64 %40, 0
  br i1 %41, label %for.body.i, label %unescape.exit

for.body.i:                                       ; preds = %while.end, %for.incr.i
  %i.0.i237 = phi i64 [ %46, %for.incr.i ], [ 0, %while.end ]
  %42 = load ptr, ptr %36, align 8
  %memberidx2.i84 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %42, i64 0, i32 2
  %43 = load ptr, ptr %memberidx2.i84, align 8
  %44 = call i8 %43(ptr nonnull %36, i64 %i.0.i237)
  %45 = icmp eq i8 %44, 92
  br i1 %45, label %if.entry.i, label %ifend.i85

for.incr.i:                                       ; preds = %if.entry16.i, %if.entry8.i, %ifend.i85
  %i.1.i = phi i64 [ %49, %if.entry8.i ], [ %81, %if.entry16.i ], [ %i.2.i, %ifend.i85 ]
  %46 = add i64 %i.1.i, 1
  %47 = load i64, ptr %memberidx.i80, align 4
  %48 = icmp slt i64 %46, %47
  br i1 %48, label %for.body.i, label %unescape.exit.loopexit

if.entry.i:                                       ; preds = %for.body.i
  %49 = add i64 %i.0.i237, 3
  %50 = load i64, ptr %memberidx.i80, align 4
  %51 = icmp slt i64 %49, %50
  br i1 %51, label %if.entry4.i, label %ifend6.i

ifend.i85:                                        ; preds = %ifend27.i.i, %get_escape_char.exit.i.fold.split, %get_escape_char.exit.i.fold.split226, %get_escape_char.exit.i.fold.split227, %get_escape_char.exit.i.fold.split228, %get_escape_char.exit.i.fold.split229, %get_escape_char.exit.i.fold.split230, %get_escape_char.exit.i.fold.split231, %get_escape_char.exit.i.fold.split232, %get_escape_char.exit.i.fold.split233, %ifend6.i, %for.body.i
  %char.0.i = phi i8 [ %44, %for.body.i ], [ 7, %ifend6.i ], [ %67, %ifend27.i.i ], [ 8, %get_escape_char.exit.i.fold.split ], [ 9, %get_escape_char.exit.i.fold.split226 ], [ 12, %get_escape_char.exit.i.fold.split227 ], [ 10, %get_escape_char.exit.i.fold.split228 ], [ 13, %get_escape_char.exit.i.fold.split229 ], [ 11, %get_escape_char.exit.i.fold.split230 ], [ 0, %get_escape_char.exit.i.fold.split231 ], [ %67, %get_escape_char.exit.i.fold.split232 ], [ %67, %get_escape_char.exit.i.fold.split233 ]
  %i.2.i = phi i64 [ %i.0.i237, %for.body.i ], [ %66, %ifend6.i ], [ %66, %ifend27.i.i ], [ %66, %get_escape_char.exit.i.fold.split ], [ %66, %get_escape_char.exit.i.fold.split226 ], [ %66, %get_escape_char.exit.i.fold.split227 ], [ %66, %get_escape_char.exit.i.fold.split228 ], [ %66, %get_escape_char.exit.i.fold.split229 ], [ %66, %get_escape_char.exit.i.fold.split230 ], [ %66, %get_escape_char.exit.i.fold.split231 ], [ %66, %get_escape_char.exit.i.fold.split232 ], [ %66, %get_escape_char.exit.i.fold.split233 ]
  %52 = load ptr, ptr %2, align 8
  %memberidx21.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %52, i64 0, i32 2
  %53 = load ptr, ptr %memberidx21.i, align 8
  call void %53(ptr nonnull %2, i8 %char.0.i)
  br label %for.incr.i

if.entry4.i:                                      ; preds = %if.entry.i
  %54 = load ptr, ptr %36, align 8
  %memberidx7.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %54, i64 0, i32 3
  %55 = load ptr, ptr %memberidx7.i, align 8
  %56 = call ptr %55(ptr nonnull %36)
  %57 = getelementptr i8, ptr %56, i64 1
  %58 = getelementptr i8, ptr %57, i64 %i.0.i237
  %59 = call i64 @memcmp(ptr %58, ptr nonnull @53, i64 3)
  %60 = icmp eq i64 %59, 0
  %61 = call i64 @memcmp(ptr %58, ptr nonnull @54, i64 3)
  %62 = icmp eq i64 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %if.entry8.i, label %ifend10.i

ifend6.i:                                         ; preds = %if.entry13.i, %ifend10.i, %if.entry.i
  %64 = load ptr, ptr %36, align 8
  %memberidx20.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %64, i64 0, i32 2
  %65 = load ptr, ptr %memberidx20.i, align 8
  %66 = add nsw i64 %i.0.i237, 1
  %67 = call i8 %65(ptr nonnull %36, i64 %66)
  switch i8 %67, label %ifend27.i.i [
    i8 97, label %ifend.i85
    i8 98, label %get_escape_char.exit.i.fold.split
    i8 116, label %get_escape_char.exit.i.fold.split226
    i8 102, label %get_escape_char.exit.i.fold.split227
    i8 110, label %get_escape_char.exit.i.fold.split228
    i8 114, label %get_escape_char.exit.i.fold.split229
    i8 118, label %get_escape_char.exit.i.fold.split230
    i8 48, label %get_escape_char.exit.i.fold.split231
    i8 39, label %get_escape_char.exit.i.fold.split232
    i8 34, label %get_escape_char.exit.i.fold.split233
  ]

ifend27.i.i:                                      ; preds = %ifend6.i
  br label %ifend.i85

get_escape_char.exit.i.fold.split:                ; preds = %ifend6.i
  br label %ifend.i85

get_escape_char.exit.i.fold.split226:             ; preds = %ifend6.i
  br label %ifend.i85

get_escape_char.exit.i.fold.split227:             ; preds = %ifend6.i
  br label %ifend.i85

get_escape_char.exit.i.fold.split228:             ; preds = %ifend6.i
  br label %ifend.i85

get_escape_char.exit.i.fold.split229:             ; preds = %ifend6.i
  br label %ifend.i85

get_escape_char.exit.i.fold.split230:             ; preds = %ifend6.i
  br label %ifend.i85

get_escape_char.exit.i.fold.split231:             ; preds = %ifend6.i
  br label %ifend.i85

get_escape_char.exit.i.fold.split232:             ; preds = %ifend6.i
  br label %ifend.i85

get_escape_char.exit.i.fold.split233:             ; preds = %ifend6.i
  br label %ifend.i85

if.entry8.i:                                      ; preds = %if.entry4.i
  %68 = load ptr, ptr %2, align 8
  %memberidx11.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %68, i64 0, i32 1
  %69 = load ptr, ptr %memberidx11.i, align 8
  %70 = call ptr @malloc(i32 8)
  store i8 27, ptr %70, align 8
  %71 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %71, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %71, i64 0, i32 1
  store ptr %70, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %71, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %71, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i.i, align 4
  call void %69(ptr nonnull %2, ptr nonnull %71)
  br label %for.incr.i

ifend10.i:                                        ; preds = %if.entry4.i
  %72 = add i64 %i.0.i237, 6
  %73 = load i64, ptr %memberidx.i80, align 4
  %74 = icmp slt i64 %72, %73
  br i1 %74, label %if.entry13.i, label %ifend6.i

if.entry13.i:                                     ; preds = %ifend10.i
  %75 = call i64 @memcmp(ptr %58, ptr nonnull @55, i64 5)
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %if.entry16.i, label %ifend6.i

if.entry16.i:                                     ; preds = %if.entry13.i
  %77 = load ptr, ptr %2, align 8
  %memberidx19.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %77, i64 0, i32 1
  %78 = load ptr, ptr %memberidx19.i, align 8
  %79 = call ptr @malloc(i32 8)
  store i8 27, ptr %79, align 8
  %80 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %80, align 8
  %memberidx.i.i44.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  store ptr %79, ptr %memberidx.i.i44.i, align 8
  %memberidx1.i.i45.i = getelementptr inbounds %string, ptr %80, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i45.i, align 4
  %memberidx2.i.i46.i = getelementptr inbounds %string, ptr %80, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i46.i, align 4
  call void %78(ptr nonnull %2, ptr nonnull %80)
  %81 = add i64 %i.0.i237, 5
  br label %for.incr.i

unescape.exit.loopexit:                           ; preds = %for.incr.i
  %.pre259 = load ptr, ptr %2, align 8
  br label %unescape.exit

unescape.exit:                                    ; preds = %unescape.exit.loopexit, %while.end
  %82 = phi ptr [ %.pre259, %unescape.exit.loopexit ], [ @VTableStringBuilder, %while.end ]
  %memberidx22.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %82, i64 0, i32 3
  %83 = load ptr, ptr %memberidx22.i, align 8
  %84 = call ptr %83(ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %2)
  %85 = tail call ptr @malloc(i32 40)
  store i64 32, ptr %85, align 4
  %memberidx1.i.i86 = getelementptr inbounds %Token, ptr %85, i64 0, i32 1
  store ptr %26, ptr %memberidx1.i.i86, align 8
  %memberidx.i87 = getelementptr inbounds %StrToken, ptr %85, i64 0, i32 2
  store ptr %84, ptr %memberidx.i87, align 8
  %memberidx1.i88 = getelementptr inbounds %StrToken, ptr %85, i64 0, i32 3
  store ptr %5, ptr %memberidx1.i88, align 8
  %memberidx2.i89 = getelementptr inbounds %StrToken, ptr %85, i64 0, i32 4
  store ptr %3, ptr %memberidx2.i89, align 8
  ret ptr %85

ifend:                                            ; preds = %ifend.lr.ph, %Array_Array_Token_____sl__.exit
  %86 = phi i8 [ %22, %ifend.lr.ph ], [ %187, %Array_Array_Token_____sl__.exit ]
  %escape_next.0239 = phi i1 [ %escape_next.0.ph, %ifend.lr.ph ], [ false, %Array_Array_Token_____sl__.exit ]
  %87 = icmp ne i8 %86, 36
  %88 = or i1 %escape_next.0239, %87
  br i1 %88, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %ifend
  %89 = load i64, ptr %memberidx.i64, align 4
  %90 = load i64, ptr %memberidx1.i65, align 4
  %.not.i = icmp slt i64 %89, %90
  br i1 %.not.i, label %if.entry6.Array_int____sl__.exit_crit_edge, label %if.entry.i94

if.entry6.Array_int____sl__.exit_crit_edge:       ; preds = %if.entry6
  %.pre246 = load ptr, ptr %memberidx2.i66, align 8
  br label %Array_int____sl__.exit

if.entry.i94:                                     ; preds = %if.entry6
  %91 = shl i64 %90, 1
  store i64 %91, ptr %memberidx1.i65, align 4
  %92 = load ptr, ptr %memberidx2.i66, align 8
  %93 = shl i64 %90, 4
  %94 = call ptr @realloc(ptr %92, i64 %93)
  store ptr %94, ptr %memberidx2.i66, align 8
  %.pre = load i64, ptr %memberidx.i64, align 4
  br label %Array_int____sl__.exit

Array_int____sl__.exit:                           ; preds = %if.entry6.Array_int____sl__.exit_crit_edge, %if.entry.i94
  %95 = phi ptr [ %.pre246, %if.entry6.Array_int____sl__.exit_crit_edge ], [ %94, %if.entry.i94 ]
  %96 = phi i64 [ %89, %if.entry6.Array_int____sl__.exit_crit_edge ], [ %.pre, %if.entry.i94 ]
  %97 = add i64 %96, 1
  store i64 %97, ptr %memberidx.i64, align 4
  %ptridx.i = getelementptr inbounds i64, ptr %95, i64 %96
  store i64 %25, ptr %ptridx.i, align 4
  %98 = load i64, ptr %memberidx.i.i, align 4
  %99 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i98 = getelementptr inbounds %string, ptr %99, i64 0, i32 2
  %100 = load i64, ptr %memberidx2.i.i98, align 4
  %.not218 = icmp slt i64 %98, %100
  br i1 %.not218, label %ifend.i102, label %Lexer_advance.exit108

ifend.i102:                                       ; preds = %Array_int____sl__.exit
  %101 = load ptr, ptr %99, align 8
  %memberidx2.i100 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %101, i64 0, i32 2
  %102 = load ptr, ptr %memberidx2.i100, align 8
  %103 = add nsw i64 %98, 1
  store i64 %103, ptr %memberidx.i.i, align 4
  %104 = call i8 %102(ptr nonnull %99, i64 %103)
  store i8 %104, ptr %0, align 1
  %105 = icmp eq i8 %104, 10
  br i1 %105, label %if.entry6.i105, label %Lexer_advance.exit108.sink.split

if.entry6.i105:                                   ; preds = %ifend.i102
  store i64 0, ptr %memberidx12.i106, align 4
  br label %Lexer_advance.exit108.sink.split

Lexer_advance.exit108.sink.split:                 ; preds = %ifend.i102, %if.entry6.i105
  %memberidx10.i104.sink269 = phi ptr [ %memberidx10.i104, %if.entry6.i105 ], [ %memberidx12.i106, %ifend.i102 ]
  %106 = load i64, ptr %memberidx10.i104.sink269, align 4
  %107 = add i64 %106, 1
  store i64 %107, ptr %memberidx10.i104.sink269, align 4
  br label %Lexer_advance.exit108

Lexer_advance.exit108:                            ; preds = %Lexer_advance.exit108.sink.split, %Array_int____sl__.exit
  %108 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Token_, ptr %108, align 8
  %memberidx.i109 = getelementptr inbounds %Array_Token_, ptr %108, i64 0, i32 2
  store i64 0, ptr %memberidx.i109, align 4
  %memberidx1.i110 = getelementptr inbounds %Array_Token_, ptr %108, i64 0, i32 3
  store i64 8, ptr %memberidx1.i110, align 4
  %memberidx2.i111 = getelementptr inbounds %Array_Token_, ptr %108, i64 0, i32 1
  %109 = call ptr @malloc(i32 64)
  store ptr %109, ptr %memberidx2.i111, align 8
  store i64 0, ptr %memberidx.i109, align 4
  %110 = load i8, ptr %0, align 1
  %111 = icmp eq i8 %110, 40
  br i1 %111, label %if.entry12, label %else13

ifend8:                                           ; preds = %ifend
  %112 = add i64 %length.0.ph, 1
  %113 = icmp eq i8 %86, 92
  %114 = load ptr, ptr %17, align 8
  %memberidx30 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %114, i64 0, i32 2
  %115 = load ptr, ptr %memberidx30, align 8
  call void %115(ptr nonnull %17, i8 %86)
  %116 = load i64, ptr %memberidx.i.i, align 4
  %117 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i114 = getelementptr inbounds %string, ptr %117, i64 0, i32 2
  %118 = load i64, ptr %memberidx2.i.i114, align 4
  %.not224 = icmp slt i64 %116, %118
  br i1 %.not224, label %ifend.i118, label %Lexer_advance.exit124

ifend.i118:                                       ; preds = %ifend8
  %119 = load ptr, ptr %117, align 8
  %memberidx2.i116 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %119, i64 0, i32 2
  %120 = load ptr, ptr %memberidx2.i116, align 8
  %121 = add nsw i64 %116, 1
  store i64 %121, ptr %memberidx.i.i, align 4
  %122 = call i8 %120(ptr nonnull %117, i64 %121)
  store i8 %122, ptr %0, align 1
  %123 = icmp eq i8 %122, 10
  br i1 %123, label %if.entry6.i121, label %Lexer_advance.exit124.sink.split

if.entry6.i121:                                   ; preds = %ifend.i118
  store i64 0, ptr %memberidx12.i106, align 4
  br label %Lexer_advance.exit124.sink.split

Lexer_advance.exit124.sink.split:                 ; preds = %ifend.i118, %if.entry6.i121
  %memberidx10.i104.sink272 = phi ptr [ %memberidx10.i104, %if.entry6.i121 ], [ %memberidx12.i106, %ifend.i118 ]
  %124 = load i64, ptr %memberidx10.i104.sink272, align 4
  %125 = add i64 %124, 1
  store i64 %125, ptr %memberidx10.i104.sink272, align 4
  br label %Lexer_advance.exit124

Lexer_advance.exit124:                            ; preds = %Lexer_advance.exit124.sink.split, %ifend8
  %126 = load i64, ptr %memberidx.i.i, align 4
  %127 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i127 = getelementptr inbounds %string, ptr %127, i64 0, i32 2
  %128 = load i64, ptr %memberidx2.i127, align 4
  %.not225 = icmp slt i64 %126, %128
  br i1 %.not225, label %while.entry.outer, label %while.end

if.entry12:                                       ; preds = %Lexer_advance.exit108
  %129 = load i64, ptr %memberidx.i.i, align 4
  %130 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i130 = getelementptr inbounds %string, ptr %130, i64 0, i32 2
  %131 = load i64, ptr %memberidx2.i.i130, align 4
  %.not220 = icmp slt i64 %129, %131
  br i1 %.not220, label %ifend.i134, label %Lexer_advance.exit140

ifend.i134:                                       ; preds = %if.entry12
  %132 = load ptr, ptr %130, align 8
  %memberidx2.i132 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %132, i64 0, i32 2
  %133 = load ptr, ptr %memberidx2.i132, align 8
  %134 = add nsw i64 %129, 1
  store i64 %134, ptr %memberidx.i.i, align 4
  %135 = call i8 %133(ptr nonnull %130, i64 %134)
  store i8 %135, ptr %0, align 1
  %136 = icmp eq i8 %135, 10
  br i1 %136, label %if.entry6.i137, label %Lexer_advance.exit140.sink.split

if.entry6.i137:                                   ; preds = %ifend.i134
  store i64 0, ptr %memberidx12.i106, align 4
  br label %Lexer_advance.exit140.sink.split

Lexer_advance.exit140.sink.split:                 ; preds = %ifend.i134, %if.entry6.i137
  %memberidx10.i104.sink275 = phi ptr [ %memberidx10.i104, %if.entry6.i137 ], [ %memberidx12.i106, %ifend.i134 ]
  %.ph = phi i8 [ 10, %if.entry6.i137 ], [ %135, %ifend.i134 ]
  %137 = load i64, ptr %memberidx10.i104.sink275, align 4
  %138 = add i64 %137, 1
  store i64 %138, ptr %memberidx10.i104.sink275, align 4
  br label %Lexer_advance.exit140

Lexer_advance.exit140:                            ; preds = %Lexer_advance.exit140.sink.split, %if.entry12
  %139 = phi i8 [ 40, %if.entry12 ], [ %.ph, %Lexer_advance.exit140.sink.split ]
  %140 = icmp ne i8 %139, 41
  %141 = load i64, ptr %memberidx.i.i, align 4
  %142 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i143 = getelementptr inbounds %string, ptr %142, i64 0, i32 2
  %143 = load i64, ptr %memberidx2.i143, align 4
  %.not221 = icmp slt i64 %141, %143
  %144 = and i1 %140, %.not221
  br i1 %144, label %while.entry15, label %ifend14

else13:                                           ; preds = %Lexer_advance.exit108
  %145 = call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %146 = load i64, ptr %memberidx.i109, align 4
  %147 = load i64, ptr %memberidx1.i110, align 4
  %.not.i146 = icmp slt i64 %146, %147
  br i1 %.not.i146, label %else13.Array_Token____sl__.exit_crit_edge, label %if.entry.i149

else13.Array_Token____sl__.exit_crit_edge:        ; preds = %else13
  %.pre248 = load ptr, ptr %memberidx2.i111, align 8
  br label %Array_Token____sl__.exit

if.entry.i149:                                    ; preds = %else13
  %148 = shl i64 %147, 1
  store i64 %148, ptr %memberidx1.i110, align 4
  %149 = load ptr, ptr %memberidx2.i111, align 8
  %150 = shl i64 %147, 4
  %151 = call ptr @realloc(ptr %149, i64 %150)
  store ptr %151, ptr %memberidx2.i111, align 8
  %.pre247 = load i64, ptr %memberidx.i109, align 4
  br label %Array_Token____sl__.exit

Array_Token____sl__.exit:                         ; preds = %else13.Array_Token____sl__.exit_crit_edge, %if.entry.i149
  %152 = phi ptr [ %.pre248, %else13.Array_Token____sl__.exit_crit_edge ], [ %151, %if.entry.i149 ]
  %153 = phi i64 [ %146, %else13.Array_Token____sl__.exit_crit_edge ], [ %.pre247, %if.entry.i149 ]
  %154 = add i64 %153, 1
  store i64 %154, ptr %memberidx.i109, align 4
  %ptridx.i151 = getelementptr inbounds ptr, ptr %152, i64 %153
  store ptr %145, ptr %ptridx.i151, align 8
  %.pre252 = load i64, ptr %memberidx.i.i, align 4
  %.pre253 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i155.phi.trans.insert = getelementptr inbounds %string, ptr %.pre253, i64 0, i32 2
  %.pre254 = load i64, ptr %memberidx2.i.i155.phi.trans.insert, align 4
  br label %ifend14

ifend14:                                          ; preds = %Lexer_advance.exit211, %Lexer_advance.exit140, %Array_Token____sl__.exit
  %155 = phi i64 [ %143, %Lexer_advance.exit140 ], [ %.pre254, %Array_Token____sl__.exit ], [ %221, %Lexer_advance.exit211 ]
  %156 = phi ptr [ %142, %Lexer_advance.exit140 ], [ %.pre253, %Array_Token____sl__.exit ], [ %220, %Lexer_advance.exit211 ]
  %157 = phi i64 [ %141, %Lexer_advance.exit140 ], [ %.pre252, %Array_Token____sl__.exit ], [ %219, %Lexer_advance.exit211 ]
  %.not219 = icmp slt i64 %157, %155
  br i1 %.not219, label %ifend.i159, label %Lexer_advance.exit165

ifend.i159:                                       ; preds = %ifend14
  %158 = load ptr, ptr %156, align 8
  %memberidx2.i157 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %158, i64 0, i32 2
  %159 = load ptr, ptr %memberidx2.i157, align 8
  %160 = add nsw i64 %157, 1
  store i64 %160, ptr %memberidx.i.i, align 4
  %161 = call i8 %159(ptr nonnull %156, i64 %160)
  store i8 %161, ptr %0, align 1
  %162 = icmp eq i8 %161, 10
  br i1 %162, label %if.entry6.i162, label %Lexer_advance.exit165.sink.split

if.entry6.i162:                                   ; preds = %ifend.i159
  store i64 0, ptr %memberidx12.i106, align 4
  br label %Lexer_advance.exit165.sink.split

Lexer_advance.exit165.sink.split:                 ; preds = %ifend.i159, %if.entry6.i162
  %memberidx10.i104.sink278 = phi ptr [ %memberidx10.i104, %if.entry6.i162 ], [ %memberidx12.i106, %ifend.i159 ]
  %163 = load i64, ptr %memberidx10.i104.sink278, align 4
  %164 = add i64 %163, 1
  store i64 %164, ptr %memberidx10.i104.sink278, align 4
  br label %Lexer_advance.exit165

Lexer_advance.exit165:                            ; preds = %Lexer_advance.exit165.sink.split, %ifend14
  %165 = tail call ptr @malloc(i32 16)
  %166 = tail call ptr @malloc(i32 32)
  %167 = load i64, ptr %memberidx12.i106, align 4
  %168 = load i64, ptr %memberidx10.i104, align 4
  %memberidx2.i167 = getelementptr inbounds %FloRange, ptr %166, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %166, i8 0, i64 16, i1 false)
  store i64 %167, ptr %memberidx2.i167, align 4
  %memberidx3.i168 = getelementptr inbounds %FloRange, ptr %166, i64 0, i32 3
  store i64 %168, ptr %memberidx3.i168, align 4
  store i64 44, ptr %165, align 4
  %memberidx1.i169 = getelementptr inbounds %Token, ptr %165, i64 0, i32 1
  store ptr %166, ptr %memberidx1.i169, align 8
  %169 = load i64, ptr %memberidx.i109, align 4
  %170 = load i64, ptr %memberidx1.i110, align 4
  %.not.i172 = icmp slt i64 %169, %170
  br i1 %.not.i172, label %Lexer_advance.exit165.Array_Token____sl__.exit179_crit_edge, label %if.entry.i175

Lexer_advance.exit165.Array_Token____sl__.exit179_crit_edge: ; preds = %Lexer_advance.exit165
  %.pre256 = load ptr, ptr %memberidx2.i111, align 8
  br label %Array_Token____sl__.exit179

if.entry.i175:                                    ; preds = %Lexer_advance.exit165
  %171 = shl i64 %170, 1
  store i64 %171, ptr %memberidx1.i110, align 4
  %172 = load ptr, ptr %memberidx2.i111, align 8
  %173 = shl i64 %170, 4
  %174 = call ptr @realloc(ptr %172, i64 %173)
  store ptr %174, ptr %memberidx2.i111, align 8
  %.pre255 = load i64, ptr %memberidx.i109, align 4
  br label %Array_Token____sl__.exit179

Array_Token____sl__.exit179:                      ; preds = %Lexer_advance.exit165.Array_Token____sl__.exit179_crit_edge, %if.entry.i175
  %175 = phi ptr [ %.pre256, %Lexer_advance.exit165.Array_Token____sl__.exit179_crit_edge ], [ %174, %if.entry.i175 ]
  %176 = phi i64 [ %169, %Lexer_advance.exit165.Array_Token____sl__.exit179_crit_edge ], [ %.pre255, %if.entry.i175 ]
  %177 = add i64 %176, 1
  store i64 %177, ptr %memberidx.i109, align 4
  %ptridx.i177 = getelementptr inbounds ptr, ptr %175, i64 %176
  store ptr %165, ptr %ptridx.i177, align 8
  %178 = load i64, ptr %memberidx.i, align 4
  %179 = load i64, ptr %memberidx1.i, align 4
  %.not.i182 = icmp slt i64 %178, %179
  br i1 %.not.i182, label %Array_Token____sl__.exit179.Array_Array_Token_____sl__.exit_crit_edge, label %if.entry.i185

Array_Token____sl__.exit179.Array_Array_Token_____sl__.exit_crit_edge: ; preds = %Array_Token____sl__.exit179
  %.pre258 = load ptr, ptr %memberidx2.i, align 8
  br label %Array_Array_Token_____sl__.exit

if.entry.i185:                                    ; preds = %Array_Token____sl__.exit179
  %180 = shl i64 %179, 1
  store i64 %180, ptr %memberidx1.i, align 4
  %181 = load ptr, ptr %memberidx2.i, align 8
  %182 = shl i64 %179, 4
  %183 = call ptr @realloc(ptr %181, i64 %182)
  store ptr %183, ptr %memberidx2.i, align 8
  %.pre257 = load i64, ptr %memberidx.i, align 4
  br label %Array_Array_Token_____sl__.exit

Array_Array_Token_____sl__.exit:                  ; preds = %Array_Token____sl__.exit179.Array_Array_Token_____sl__.exit_crit_edge, %if.entry.i185
  %184 = phi ptr [ %.pre258, %Array_Token____sl__.exit179.Array_Array_Token_____sl__.exit_crit_edge ], [ %183, %if.entry.i185 ]
  %185 = phi i64 [ %178, %Array_Token____sl__.exit179.Array_Array_Token_____sl__.exit_crit_edge ], [ %.pre257, %if.entry.i185 ]
  %186 = add i64 %185, 1
  store i64 %186, ptr %memberidx.i, align 4
  %ptridx.i187 = getelementptr inbounds ptr, ptr %184, i64 %185
  store ptr %108, ptr %ptridx.i187, align 8
  %187 = load i8, ptr %0, align 1
  %.not241 = icmp eq i8 %187, 34
  br i1 %.not241, label %while.end, label %ifend

while.entry15:                                    ; preds = %Lexer_advance.exit140, %Lexer_advance.exit211
  %188 = phi i8 [ %215, %Lexer_advance.exit211 ], [ %139, %Lexer_advance.exit140 ]
  %189 = phi i64 [ %192, %Lexer_advance.exit211 ], [ 0, %Lexer_advance.exit140 ]
  switch i8 %188, label %ifend25 [
    i8 40, label %ifend21.thread
    i8 41, label %if.entry23
  ]

ifend21.thread:                                   ; preds = %while.entry15
  %190 = add i64 %189, 1
  br label %ifend25

if.entry23:                                       ; preds = %while.entry15
  %191 = add i64 %189, -1
  br label %ifend25

ifend25:                                          ; preds = %while.entry15, %ifend21.thread, %if.entry23
  %192 = phi i64 [ %189, %while.entry15 ], [ %190, %ifend21.thread ], [ %191, %if.entry23 ]
  %193 = call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %194 = load i64, ptr %memberidx.i109, align 4
  %195 = load i64, ptr %memberidx1.i110, align 4
  %.not.i191 = icmp slt i64 %194, %195
  br i1 %.not.i191, label %ifend25.Array_Token____sl__.exit198_crit_edge, label %if.entry.i194

ifend25.Array_Token____sl__.exit198_crit_edge:    ; preds = %ifend25
  %.pre250 = load ptr, ptr %memberidx2.i111, align 8
  br label %Array_Token____sl__.exit198

if.entry.i194:                                    ; preds = %ifend25
  %196 = shl i64 %195, 1
  store i64 %196, ptr %memberidx1.i110, align 4
  %197 = load ptr, ptr %memberidx2.i111, align 8
  %198 = shl i64 %195, 4
  %199 = call ptr @realloc(ptr %197, i64 %198)
  store ptr %199, ptr %memberidx2.i111, align 8
  %.pre249 = load i64, ptr %memberidx.i109, align 4
  br label %Array_Token____sl__.exit198

Array_Token____sl__.exit198:                      ; preds = %ifend25.Array_Token____sl__.exit198_crit_edge, %if.entry.i194
  %200 = phi ptr [ %.pre250, %ifend25.Array_Token____sl__.exit198_crit_edge ], [ %199, %if.entry.i194 ]
  %201 = phi i64 [ %194, %ifend25.Array_Token____sl__.exit198_crit_edge ], [ %.pre249, %if.entry.i194 ]
  %202 = add i64 %201, 1
  store i64 %202, ptr %memberidx.i109, align 4
  %ptridx.i196 = getelementptr inbounds ptr, ptr %200, i64 %201
  store ptr %193, ptr %ptridx.i196, align 8
  %203 = load i64, ptr %memberidx.i.i, align 4
  %204 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i201 = getelementptr inbounds %string, ptr %204, i64 0, i32 2
  %205 = load i64, ptr %memberidx2.i.i201, align 4
  %.not222 = icmp slt i64 %203, %205
  br i1 %.not222, label %ifend.i205, label %Array_Token____sl__.exit198.Lexer_advance.exit211_crit_edge

Array_Token____sl__.exit198.Lexer_advance.exit211_crit_edge: ; preds = %Array_Token____sl__.exit198
  %.pre251 = load i8, ptr %0, align 1
  br label %Lexer_advance.exit211

ifend.i205:                                       ; preds = %Array_Token____sl__.exit198
  %206 = load ptr, ptr %204, align 8
  %memberidx2.i203 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %206, i64 0, i32 2
  %207 = load ptr, ptr %memberidx2.i203, align 8
  %208 = add nsw i64 %203, 1
  store i64 %208, ptr %memberidx.i.i, align 4
  %209 = call i8 %207(ptr nonnull %204, i64 %208)
  store i8 %209, ptr %0, align 1
  %210 = icmp eq i8 %209, 10
  br i1 %210, label %if.entry6.i208, label %else7.i210

if.entry6.i208:                                   ; preds = %ifend.i205
  store i64 0, ptr %memberidx12.i106, align 4
  %211 = load i64, ptr %memberidx10.i104, align 4
  %212 = add i64 %211, 1
  store i64 %212, ptr %memberidx10.i104, align 4
  br label %Lexer_advance.exit211

else7.i210:                                       ; preds = %ifend.i205
  %213 = load i64, ptr %memberidx12.i106, align 4
  %214 = add i64 %213, 1
  store i64 %214, ptr %memberidx12.i106, align 4
  br label %Lexer_advance.exit211

Lexer_advance.exit211:                            ; preds = %Array_Token____sl__.exit198.Lexer_advance.exit211_crit_edge, %if.entry6.i208, %else7.i210
  %215 = phi i8 [ %.pre251, %Array_Token____sl__.exit198.Lexer_advance.exit211_crit_edge ], [ 10, %if.entry6.i208 ], [ %209, %else7.i210 ]
  %216 = icmp ne i8 %215, 41
  %217 = icmp ne i64 %192, 0
  %218 = or i1 %216, %217
  %219 = load i64, ptr %memberidx.i.i, align 4
  %220 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i214 = getelementptr inbounds %string, ptr %220, i64 0, i32 2
  %221 = load i64, ptr %memberidx2.i214, align 4
  %.not223 = icmp slt i64 %219, %221
  %222 = and i1 %218, %.not223
  br i1 %222, label %while.entry15, label %ifend14
}

define internal fastcc ptr @Lexer_base_int_token(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %5 = load i64, ptr %memberidx2.i.i, align 4
  %.not = icmp slt i64 %3, %5
  br i1 %.not, label %ifend.i, label %Lexer_advance.exit

ifend.i:                                          ; preds = %2
  %6 = load ptr, ptr %4, align 8
  %memberidx2.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %6, i64 0, i32 2
  %7 = load ptr, ptr %memberidx2.i, align 8
  %8 = add nsw i64 %3, 1
  store i64 %8, ptr %memberidx.i.i, align 4
  %9 = tail call i8 %7(ptr nonnull %4, i64 %8)
  store i8 %9, ptr %0, align 1
  %10 = icmp eq i8 %9, 10
  %memberidx9.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %10, label %if.entry6.i, label %Lexer_advance.exit.sink.split

if.entry6.i:                                      ; preds = %ifend.i
  store i64 0, ptr %memberidx9.i, align 4
  %memberidx10.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.sink.split

Lexer_advance.exit.sink.split:                    ; preds = %ifend.i, %if.entry6.i
  %memberidx10.i.sink67 = phi ptr [ %memberidx10.i, %if.entry6.i ], [ %memberidx9.i, %ifend.i ]
  %11 = load i64, ptr %memberidx10.i.sink67, align 4
  %12 = add i64 %11, 1
  store i64 %12, ptr %memberidx10.i.sink67, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %Lexer_advance.exit.sink.split, %2
  %13 = load i64, ptr %memberidx.i.i, align 4
  %14 = add i64 %13, 1
  %15 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i15 = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  %16 = load i64, ptr %memberidx2.i15, align 4
  %17 = icmp slt i64 %14, %16
  br i1 %17, label %if.entry.i, label %Lexer_peek.exit

if.entry.i:                                       ; preds = %Lexer_advance.exit
  %18 = load ptr, ptr %15, align 8
  %memberidx4.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %18, i64 0, i32 2
  %19 = load ptr, ptr %memberidx4.i, align 8
  %20 = tail call i8 %19(ptr nonnull %15, i64 %14)
  br label %Lexer_peek.exit

Lexer_peek.exit:                                  ; preds = %Lexer_advance.exit, %if.entry.i
  %common.ret.op.i = phi i8 [ %20, %if.entry.i ], [ 0, %Lexer_advance.exit ]
  %21 = add i8 %common.ret.op.i, -97
  %22 = icmp ult i8 %21, 26
  %23 = add i8 %common.ret.op.i, -32
  %common.ret.op.i16 = select i1 %22, i8 %23, i8 %common.ret.op.i
  %24 = icmp slt i64 %1, 10
  %25 = icmp sgt i8 %common.ret.op.i16, 47
  %26 = sext i8 %common.ret.op.i16 to i64
  %27 = add i64 %1, 48
  %28 = icmp sge i64 %27, %26
  %29 = and i1 %25, %28
  br i1 %24, label %in_base_range.exit34, label %ifend.i33

ifend.i33:                                        ; preds = %Lexer_peek.exit
  %30 = icmp sgt i8 %common.ret.op.i16, 64
  %31 = add nuw i64 %1, 65
  %32 = icmp sge i64 %31, %26
  %33 = and i1 %30, %32
  %34 = or i1 %29, %33
  br label %in_base_range.exit34

in_base_range.exit34:                             ; preds = %Lexer_peek.exit, %ifend.i33
  %common.ret.op.i31 = phi i1 [ %34, %ifend.i33 ], [ %29, %Lexer_peek.exit ]
  %35 = load i64, ptr %memberidx.i.i, align 4
  %36 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i50 = getelementptr inbounds %string, ptr %36, i64 0, i32 2
  %37 = load i64, ptr %memberidx2.i50, align 4
  %.not60 = icmp slt i64 %35, %37
  %38 = and i1 %common.ret.op.i31, %.not60
  br i1 %38, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %in_base_range.exit34
  %memberidx12.i45 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i43 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %39 = add i64 %1, 48
  %40 = add nuw i64 %1, 65
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %in_base_range.exit
  %41 = phi i64 [ %86, %in_base_range.exit ], [ %37, %while.entry.preheader ]
  %42 = phi ptr [ %85, %in_base_range.exit ], [ %36, %while.entry.preheader ]
  %43 = phi i64 [ %84, %in_base_range.exit ], [ %35, %while.entry.preheader ]
  %length.0 = phi i64 [ %48, %in_base_range.exit ], [ 3, %while.entry.preheader ]
  %value.0 = phi i64 [ %47, %in_base_range.exit ], [ 0, %while.entry.preheader ]
  %current_char.0 = phi i8 [ %common.ret.op.i23, %in_base_range.exit ], [ %common.ret.op.i16, %while.entry.preheader ]
  %44 = mul i64 %value.0, %1
  %45 = icmp sgt i8 %current_char.0, 64
  %spec.select.v = select i1 %45, i8 -55, i8 -48
  %spec.select = add i8 %spec.select.v, %current_char.0
  %46 = sext i8 %spec.select to i64
  %47 = add i64 %44, %46
  %48 = add i64 %length.0, 1
  %.not61 = icmp slt i64 %43, %41
  br i1 %.not61, label %ifend.i41, label %Lexer_advance.exit47

while.end:                                        ; preds = %in_base_range.exit, %in_base_range.exit34
  %length.1 = phi i64 [ 3, %in_base_range.exit34 ], [ %48, %in_base_range.exit ]
  %value.1 = phi i64 [ 0, %in_base_range.exit34 ], [ %47, %in_base_range.exit ]
  %49 = tail call ptr @malloc(i32 24)
  %50 = tail call ptr @malloc(i32 32)
  %51 = load i64, ptr %memberidx.i.i, align 4
  %52 = sub i64 1, %length.1
  %53 = add i64 %52, %51
  %54 = add i64 %51, 1
  %memberidx2.i54 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %55 = load i64, ptr %memberidx2.i54, align 4
  %56 = sub i64 %55, %length.1
  %memberidx3.i55 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %57 = load i64, ptr %memberidx3.i55, align 4
  store i64 %53, ptr %50, align 4
  %memberidx1.i.i56 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 1
  store i64 %54, ptr %memberidx1.i.i56, align 4
  %memberidx2.i.i57 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 2
  store i64 %56, ptr %memberidx2.i.i57, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 3
  store i64 %57, ptr %memberidx3.i.i, align 4
  store i64 29, ptr %49, align 4
  %memberidx1.i.i51 = getelementptr inbounds %Token, ptr %49, i64 0, i32 1
  store ptr %50, ptr %memberidx1.i.i51, align 8
  %memberidx.i52 = getelementptr inbounds %IntToken, ptr %49, i64 0, i32 2
  store i64 %value.1, ptr %memberidx.i52, align 4
  ret ptr %49

ifend.i41:                                        ; preds = %while.entry
  %58 = load ptr, ptr %42, align 8
  %memberidx2.i39 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %58, i64 0, i32 2
  %59 = load ptr, ptr %memberidx2.i39, align 8
  %60 = add nsw i64 %43, 1
  store i64 %60, ptr %memberidx.i.i, align 4
  %61 = tail call i8 %59(ptr nonnull %42, i64 %60)
  store i8 %61, ptr %0, align 1
  %62 = icmp eq i8 %61, 10
  br i1 %62, label %if.entry6.i44, label %Lexer_advance.exit47.sink.split

if.entry6.i44:                                    ; preds = %ifend.i41
  store i64 0, ptr %memberidx12.i45, align 4
  br label %Lexer_advance.exit47.sink.split

Lexer_advance.exit47.sink.split:                  ; preds = %ifend.i41, %if.entry6.i44
  %memberidx10.i43.sink69 = phi ptr [ %memberidx10.i43, %if.entry6.i44 ], [ %memberidx12.i45, %ifend.i41 ]
  %63 = load i64, ptr %memberidx10.i43.sink69, align 4
  %64 = add i64 %63, 1
  store i64 %64, ptr %memberidx10.i43.sink69, align 4
  br label %Lexer_advance.exit47

Lexer_advance.exit47:                             ; preds = %Lexer_advance.exit47.sink.split, %while.entry
  %65 = load i64, ptr %memberidx.i.i, align 4
  %66 = add i64 %65, 1
  %67 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i26 = getelementptr inbounds %string, ptr %67, i64 0, i32 2
  %68 = load i64, ptr %memberidx2.i26, align 4
  %69 = icmp slt i64 %66, %68
  br i1 %69, label %if.entry.i29, label %Lexer_peek.exit30

if.entry.i29:                                     ; preds = %Lexer_advance.exit47
  %70 = load ptr, ptr %67, align 8
  %memberidx4.i28 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %70, i64 0, i32 2
  %71 = load ptr, ptr %memberidx4.i28, align 8
  %72 = tail call i8 %71(ptr nonnull %67, i64 %66)
  br label %Lexer_peek.exit30

Lexer_peek.exit30:                                ; preds = %Lexer_advance.exit47, %if.entry.i29
  %common.ret.op.i27 = phi i8 [ %72, %if.entry.i29 ], [ 0, %Lexer_advance.exit47 ]
  %73 = add i8 %common.ret.op.i27, -97
  %74 = icmp ult i8 %73, 26
  %75 = add i8 %common.ret.op.i27, -32
  %common.ret.op.i23 = select i1 %74, i8 %75, i8 %common.ret.op.i27
  %76 = icmp sgt i8 %common.ret.op.i23, 47
  %77 = sext i8 %common.ret.op.i23 to i64
  %78 = icmp sge i64 %39, %77
  %79 = and i1 %76, %78
  br i1 %24, label %in_base_range.exit, label %ifend.i22

ifend.i22:                                        ; preds = %Lexer_peek.exit30
  %80 = icmp sgt i8 %common.ret.op.i23, 64
  %81 = icmp sge i64 %40, %77
  %82 = and i1 %80, %81
  %83 = or i1 %79, %82
  br label %in_base_range.exit

in_base_range.exit:                               ; preds = %Lexer_peek.exit30, %ifend.i22
  %common.ret.op.i20 = phi i1 [ %83, %ifend.i22 ], [ %79, %Lexer_peek.exit30 ]
  %84 = load i64, ptr %memberidx.i.i, align 4
  %85 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i19 = getelementptr inbounds %string, ptr %85, i64 0, i32 2
  %86 = load i64, ptr %memberidx2.i19, align 4
  %.not62 = icmp slt i64 %84, %86
  %87 = and i1 %common.ret.op.i20, %.not62
  br i1 %87, label %while.entry, label %while.end
}

define internal fastcc ptr @Lexer_lex_token(ptr %0) unnamed_addr {
  %2 = load i8, ptr %0, align 1
  switch i8 %2, label %ifend [
    i8 32, label %if.entry
    i8 9, label %if.entry
  ]

common.ret:                                       ; preds = %end.i, %if.entry6.i893, %if.entry2.i, %if.entry.i890, %ifend5.i, %ifend.i876, %ifend6.i738, %Lexer_advance.exit84.i730, %ifend3.i709, %Lexer_advance.exit.i672, %ifend6.i643, %Lexer_advance.exit84.i635, %ifend3.i619, %Lexer_advance.exit.i595, %ifend.i566, %Lexer_advance.exit.i558, %ifend.i529, %Lexer_advance.exit.i521, %ifend.i404, %Lexer_advance.exit.i396, %ifend.i321, %Lexer_advance.exit.i313, %ifend.i284, %Lexer_advance.exit.i276, %ifend.i247, %Lexer_advance.exit.i246, %ifend6.i, %Lexer_advance.exit84.i, %Lexer_advance.exit50.i, %Lexer_advance.exit.i222, %ifend3.i, %Lexer_advance.exit44.i, %Lexer_advance.exit.i, %Array_FloError____sl__.exit, %if.entry87, %Lexer_dot_token.exit, %if.entry69, %if.entry66, %Lexer_char_token.exit, %if.entry60, %if.entry57, %if.entry54, %if.entry51, %if.entry48, %if.entry45, %if.entry42, %Lexer_advance.exit364, %if.entry18, %if.entry15, %if.entry12, %if.entry6, %Lexer_advance.exit
  %common.ret.op = phi ptr [ %13, %Lexer_advance.exit ], [ %344, %if.entry6 ], [ %457, %if.entry12 ], [ %464, %if.entry15 ], [ %471, %if.entry18 ], [ %853, %Lexer_advance.exit364 ], [ %885, %if.entry42 ], [ %892, %if.entry45 ], [ %899, %if.entry48 ], [ %906, %if.entry51 ], [ %913, %if.entry54 ], [ %920, %if.entry57 ], [ %927, %if.entry60 ], [ %970, %Lexer_char_token.exit ], [ %979, %if.entry66 ], [ %986, %if.entry69 ], [ %1261, %Lexer_dot_token.exit ], [ %1270, %if.entry87 ], [ null, %Array_FloError____sl__.exit ], [ %496, %Lexer_advance.exit.i ], [ %528, %ifend3.i ], [ %520, %Lexer_advance.exit44.i ], [ %553, %Lexer_advance.exit.i222 ], [ %609, %ifend6.i ], [ %577, %Lexer_advance.exit50.i ], [ %601, %Lexer_advance.exit84.i ], [ %635, %Lexer_advance.exit.i246 ], [ %643, %ifend.i247 ], [ %668, %Lexer_advance.exit.i276 ], [ %676, %ifend.i284 ], [ %701, %Lexer_advance.exit.i313 ], [ %709, %ifend.i321 ], [ %870, %Lexer_advance.exit.i396 ], [ %878, %ifend.i404 ], [ %1011, %Lexer_advance.exit.i521 ], [ %1019, %ifend.i529 ], [ %1044, %Lexer_advance.exit.i558 ], [ %1052, %ifend.i566 ], [ %1077, %Lexer_advance.exit.i595 ], [ %1109, %ifend3.i619 ], [ %1126, %Lexer_advance.exit84.i635 ], [ %1134, %ifend6.i643 ], [ %1160, %Lexer_advance.exit.i672 ], [ %1192, %ifend3.i709 ], [ %1209, %Lexer_advance.exit84.i730 ], [ %1217, %ifend6.i738 ], [ %314, %ifend.i876 ], [ %318, %ifend5.i ], [ %357, %if.entry.i890 ], [ %368, %if.entry2.i ], [ %379, %if.entry6.i893 ], [ %420, %end.i ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1, %1
  %memberidx.i.i166 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i166, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i167 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %5 = load i64, ptr %memberidx2.i.i167, align 4
  %.not854 = icmp slt i64 %3, %5
  br i1 %.not854, label %ifend.i, label %Lexer_advance.exit

ifend.i:                                          ; preds = %if.entry
  %6 = load ptr, ptr %4, align 8
  %memberidx2.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %6, i64 0, i32 2
  %7 = load ptr, ptr %memberidx2.i, align 8
  %8 = add nsw i64 %3, 1
  store i64 %8, ptr %memberidx.i.i166, align 4
  %9 = tail call i8 %7(ptr nonnull %4, i64 %8)
  store i8 %9, ptr %0, align 1
  %10 = icmp eq i8 %9, 10
  %memberidx9.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %10, label %if.entry6.i, label %Lexer_advance.exit.sink.split

if.entry6.i:                                      ; preds = %ifend.i
  store i64 0, ptr %memberidx9.i, align 4
  %memberidx10.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.sink.split

Lexer_advance.exit.sink.split:                    ; preds = %ifend.i, %if.entry6.i
  %memberidx10.i.sink980 = phi ptr [ %memberidx10.i, %if.entry6.i ], [ %memberidx9.i, %ifend.i ]
  %11 = load i64, ptr %memberidx10.i.sink980, align 4
  %12 = add i64 %11, 1
  store i64 %12, ptr %memberidx10.i.sink980, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %Lexer_advance.exit.sink.split, %if.entry
  %13 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

ifend:                                            ; preds = %1
  %14 = and i8 %2, -33
  %15 = add i8 %14, -65
  %16 = icmp ult i8 %15, 26
  %17 = icmp eq i8 %2, 95
  %18 = or i1 %17, %16
  br i1 %18, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %memberidx.i864 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %19 = load i64, ptr %memberidx.i864, align 4
  %20 = add i64 %19, 1
  %memberidx1.i.i865 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %21 = load ptr, ptr %memberidx1.i.i865, align 8
  %memberidx2.i.i866 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i.i866, align 4
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %if.entry.i.i868, label %Lexer_peek.exit.i

if.entry.i.i868:                                  ; preds = %if.entry3
  %24 = load ptr, ptr %21, align 8
  %memberidx4.i.i867 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %24, i64 0, i32 2
  %25 = load ptr, ptr %memberidx4.i.i867, align 8
  %26 = tail call i8 %25(ptr nonnull %21, i64 %20)
  %.pre.i = load i64, ptr %memberidx.i864, align 4
  %.pre160.i = load ptr, ptr %memberidx1.i.i865, align 8
  %memberidx2.i32.phi.trans.insert.i = getelementptr inbounds %string, ptr %.pre160.i, i64 0, i32 2
  %.pre161.i = load i64, ptr %memberidx2.i32.phi.trans.insert.i, align 4
  %.pre168.i = add i64 %.pre.i, 1
  br label %Lexer_peek.exit.i

Lexer_peek.exit.i:                                ; preds = %if.entry.i.i868, %if.entry3
  %.pre-phi.i = phi i64 [ %20, %if.entry3 ], [ %.pre168.i, %if.entry.i.i868 ]
  %27 = phi i64 [ %22, %if.entry3 ], [ %.pre161.i, %if.entry.i.i868 ]
  %28 = phi ptr [ %21, %if.entry3 ], [ %.pre160.i, %if.entry.i.i868 ]
  %29 = phi i64 [ %19, %if.entry3 ], [ %.pre.i, %if.entry.i.i868 ]
  %30 = icmp slt i64 %.pre-phi.i, %27
  br i1 %30, label %if.entry.i35.i, label %Lexer_peek.exit36.i

if.entry.i35.i:                                   ; preds = %Lexer_peek.exit.i
  %31 = load ptr, ptr %28, align 8
  %memberidx4.i34.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %31, i64 0, i32 2
  %32 = load ptr, ptr %memberidx4.i34.i, align 8
  %33 = tail call i8 %32(ptr nonnull %28, i64 %.pre-phi.i)
  %.pre162.i = load i64, ptr %memberidx.i864, align 4
  %.pre163.i = load ptr, ptr %memberidx1.i.i865, align 8
  %memberidx2.i54.phi.trans.insert.i = getelementptr inbounds %string, ptr %.pre163.i, i64 0, i32 2
  %.pre164.i = load i64, ptr %memberidx2.i54.phi.trans.insert.i, align 4
  br label %Lexer_peek.exit36.i

Lexer_peek.exit36.i:                              ; preds = %if.entry.i35.i, %Lexer_peek.exit.i
  %34 = phi i64 [ %.pre164.i, %if.entry.i35.i ], [ %27, %Lexer_peek.exit.i ]
  %35 = phi ptr [ %.pre163.i, %if.entry.i35.i ], [ %28, %Lexer_peek.exit.i ]
  %36 = phi i64 [ %.pre162.i, %if.entry.i35.i ], [ %29, %Lexer_peek.exit.i ]
  %common.ret.op.i33.i = phi i8 [ %33, %if.entry.i35.i ], [ 0, %Lexer_peek.exit.i ]
  %37 = and i8 %common.ret.op.i33.i, -33
  %38 = add i8 %37, -65
  %39 = icmp ult i8 %38, 26
  %40 = icmp eq i8 %common.ret.op.i33.i, 95
  %41 = or i1 %40, %39
  %42 = add i8 %common.ret.op.i33.i, -48
  %43 = icmp ult i8 %42, 10
  %44 = or i1 %43, %41
  %.not151.i = icmp slt i64 %36, %34
  %45 = and i1 %.not151.i, %44
  br i1 %45, label %while.entry.preheader.i, label %while.end.i872

while.entry.preheader.i:                          ; preds = %Lexer_peek.exit36.i
  %memberidx12.i78.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i76.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i870

while.entry.i870:                                 ; preds = %Lexer_peek.exit87.i, %while.entry.preheader.i
  %46 = phi ptr [ %65, %Lexer_peek.exit87.i ], [ %35, %while.entry.preheader.i ]
  %47 = phi i64 [ %66, %Lexer_peek.exit87.i ], [ %36, %while.entry.preheader.i ]
  %48 = phi i64 [ %67, %Lexer_peek.exit87.i ], [ %34, %while.entry.preheader.i ]
  %length.0.i869 = phi i64 [ %49, %Lexer_peek.exit87.i ], [ 1, %while.entry.preheader.i ]
  %49 = add i64 %length.0.i869, 1
  %.not155.i = icmp slt i64 %47, %48
  br i1 %.not155.i, label %ifend.i74.i, label %Lexer_advance.exit80.i

ifend.i74.i:                                      ; preds = %while.entry.i870
  %50 = load ptr, ptr %46, align 8
  %memberidx2.i72.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %50, i64 0, i32 2
  %51 = load ptr, ptr %memberidx2.i72.i, align 8
  %52 = add nsw i64 %47, 1
  store i64 %52, ptr %memberidx.i864, align 4
  %53 = tail call i8 %51(ptr nonnull %46, i64 %52)
  store i8 %53, ptr %0, align 1
  %54 = icmp eq i8 %53, 10
  br i1 %54, label %if.entry6.i77.i, label %Lexer_advance.exit80.sink.split.i

if.entry6.i77.i:                                  ; preds = %ifend.i74.i
  store i64 0, ptr %memberidx12.i78.i, align 4
  br label %Lexer_advance.exit80.sink.split.i

Lexer_advance.exit80.sink.split.i:                ; preds = %if.entry6.i77.i, %ifend.i74.i
  %memberidx10.i76.sink171.i = phi ptr [ %memberidx10.i76.i, %if.entry6.i77.i ], [ %memberidx12.i78.i, %ifend.i74.i ]
  %55 = load i64, ptr %memberidx10.i76.sink171.i, align 4
  %56 = add i64 %55, 1
  store i64 %56, ptr %memberidx10.i76.sink171.i, align 4
  %.pre956 = load i64, ptr %memberidx.i864, align 4
  %.pre957 = load ptr, ptr %memberidx1.i.i865, align 8
  br label %Lexer_advance.exit80.i

Lexer_advance.exit80.i:                           ; preds = %Lexer_advance.exit80.sink.split.i, %while.entry.i870
  %57 = phi ptr [ %.pre957, %Lexer_advance.exit80.sink.split.i ], [ %46, %while.entry.i870 ]
  %58 = phi i64 [ %.pre956, %Lexer_advance.exit80.sink.split.i ], [ %47, %while.entry.i870 ]
  %59 = add i64 %58, 1
  %memberidx2.i83.i = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  %60 = load i64, ptr %memberidx2.i83.i, align 4
  %61 = icmp slt i64 %59, %60
  br i1 %61, label %if.entry.i86.i, label %Lexer_peek.exit87.i

if.entry.i86.i:                                   ; preds = %Lexer_advance.exit80.i
  %62 = load ptr, ptr %57, align 8
  %memberidx4.i85.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %62, i64 0, i32 2
  %63 = load ptr, ptr %memberidx4.i85.i, align 8
  %64 = tail call i8 %63(ptr nonnull %57, i64 %59)
  %.pre165.i = load i64, ptr %memberidx.i864, align 4
  %.pre166.i = load ptr, ptr %memberidx1.i.i865, align 8
  %memberidx2.i105.phi.trans.insert.i = getelementptr inbounds %string, ptr %.pre166.i, i64 0, i32 2
  %.pre167.i = load i64, ptr %memberidx2.i105.phi.trans.insert.i, align 4
  br label %Lexer_peek.exit87.i

Lexer_peek.exit87.i:                              ; preds = %if.entry.i86.i, %Lexer_advance.exit80.i
  %65 = phi ptr [ %.pre166.i, %if.entry.i86.i ], [ %57, %Lexer_advance.exit80.i ]
  %66 = phi i64 [ %.pre165.i, %if.entry.i86.i ], [ %58, %Lexer_advance.exit80.i ]
  %67 = phi i64 [ %.pre167.i, %if.entry.i86.i ], [ %60, %Lexer_advance.exit80.i ]
  %common.ret.op.i84.i = phi i8 [ %64, %if.entry.i86.i ], [ 0, %Lexer_advance.exit80.i ]
  %68 = and i8 %common.ret.op.i84.i, -33
  %69 = add i8 %68, -65
  %70 = icmp ult i8 %69, 26
  %71 = icmp eq i8 %common.ret.op.i84.i, 95
  %72 = or i1 %71, %70
  %73 = add i8 %common.ret.op.i84.i, -48
  %74 = icmp ult i8 %73, 10
  %75 = or i1 %74, %72
  %.not156.i = icmp slt i64 %66, %67
  %76 = and i1 %.not156.i, %75
  br i1 %76, label %while.entry.i870, label %while.end.i872

while.end.i872:                                   ; preds = %Lexer_peek.exit87.i, %Lexer_peek.exit36.i
  %77 = phi ptr [ %35, %Lexer_peek.exit36.i ], [ %65, %Lexer_peek.exit87.i ]
  %length.1.i = phi i64 [ 1, %Lexer_peek.exit36.i ], [ %49, %Lexer_peek.exit87.i ]
  %78 = load ptr, ptr %77, align 8
  %memberidx2.i871 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %78, i64 0, i32 1
  %79 = load ptr, ptr %memberidx2.i871, align 8
  %80 = tail call ptr %79(ptr nonnull %77, i64 %19, i64 %length.1.i)
  %81 = tail call ptr @malloc(i32 32)
  %82 = load i64, ptr %memberidx.i864, align 4
  %83 = sub i64 1, %length.1.i
  %84 = add i64 %83, %82
  %85 = add i64 %82, 1
  %memberidx2.i107.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %86 = load i64, ptr %memberidx2.i107.i, align 4
  %87 = sub i64 %86, %length.1.i
  %memberidx3.i108.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %88 = load i64, ptr %memberidx3.i108.i, align 4
  store i64 %84, ptr %81, align 4
  %memberidx1.i.i109.i = getelementptr inbounds %FloRange, ptr %81, i64 0, i32 1
  store i64 %85, ptr %memberidx1.i.i109.i, align 4
  %memberidx2.i.i110.i = getelementptr inbounds %FloRange, ptr %81, i64 0, i32 2
  store i64 %87, ptr %memberidx2.i.i110.i, align 4
  %memberidx3.i.i111.i = getelementptr inbounds %FloRange, ptr %81, i64 0, i32 3
  store i64 %88, ptr %memberidx3.i.i111.i, align 4
  %89 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %89, ptr noundef nonnull align 8 dereferenceable(3) @28, i64 3, i1 false)
  %90 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %90, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %string, ptr %90, i64 0, i32 1
  store ptr %89, ptr %memberidx.i.i.i.i, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %string, ptr %90, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %string, ptr %90, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i.i.i, align 4
  %memberidx.i.i98.i = getelementptr inbounds %string, ptr %80, i64 0, i32 2
  %91 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i.i.i = icmp eq i64 %91, 3
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %ifend.i102.i

ifend.i.i.i:                                      ; preds = %while.end.i872
  %memberidx2.i.i100.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %92 = load ptr, ptr %memberidx2.i.i100.i, align 8
  %93 = tail call i64 @memcmp(ptr %92, ptr nonnull %89, i64 3)
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %if.entry.i874, label %ifend.i102.i

ifend.i102.i:                                     ; preds = %ifend.i.i.i, %while.end.i872
  %95 = tail call ptr @malloc(i32 16)
  store i16 29295, ptr %95, align 8
  %96 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %96, align 8
  %memberidx.i.i141.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i.i141.i.i, align 8
  %memberidx1.i.i142.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i142.i.i, align 4
  %memberidx2.i.i143.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i143.i.i, align 4
  %97 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i146.i.i = icmp eq i64 %97, 2
  br i1 %.not.i146.i.i, label %ifend.i150.i.i, label %ifend3.i.i

ifend.i150.i.i:                                   ; preds = %ifend.i102.i
  %memberidx2.i148.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %98 = load ptr, ptr %memberidx2.i148.i.i, align 8
  %99 = tail call i64 @memcmp(ptr %98, ptr nonnull %95, i64 2)
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %if.entry.i874, label %ifend3.i.i

ifend3.i.i:                                       ; preds = %ifend.i150.i.i, %ifend.i102.i
  %101 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %101, ptr noundef nonnull align 8 dereferenceable(3) @29, i64 3, i1 false)
  %102 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %102, align 8
  %memberidx.i.i152.i.i = getelementptr inbounds %string, ptr %102, i64 0, i32 1
  store ptr %101, ptr %memberidx.i.i152.i.i, align 8
  %memberidx1.i.i153.i.i = getelementptr inbounds %string, ptr %102, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i153.i.i, align 4
  %memberidx2.i.i154.i.i = getelementptr inbounds %string, ptr %102, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i154.i.i, align 4
  %103 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i157.i.i = icmp eq i64 %103, 3
  br i1 %.not.i157.i.i, label %ifend.i161.i.i, label %ifend6.i.i

ifend.i161.i.i:                                   ; preds = %ifend3.i.i
  %memberidx2.i159.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %104 = load ptr, ptr %memberidx2.i159.i.i, align 8
  %105 = tail call i64 @memcmp(ptr %104, ptr nonnull %101, i64 3)
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %if.entry.i874, label %ifend6.i.i

ifend6.i.i:                                       ; preds = %ifend.i161.i.i, %ifend3.i.i
  %107 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %107, ptr noundef nonnull align 8 dereferenceable(5) @30, i64 5, i1 false)
  %108 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %108, align 8
  %memberidx.i.i163.i.i = getelementptr inbounds %string, ptr %108, i64 0, i32 1
  store ptr %107, ptr %memberidx.i.i163.i.i, align 8
  %memberidx1.i.i164.i.i = getelementptr inbounds %string, ptr %108, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i164.i.i, align 4
  %memberidx2.i.i165.i.i = getelementptr inbounds %string, ptr %108, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i165.i.i, align 4
  %109 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i168.i.i = icmp eq i64 %109, 5
  br i1 %.not.i168.i.i, label %ifend.i172.i.i, label %ifend9.i.i

ifend.i172.i.i:                                   ; preds = %ifend6.i.i
  %memberidx2.i170.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %110 = load ptr, ptr %memberidx2.i170.i.i, align 8
  %111 = tail call i64 @memcmp(ptr %110, ptr nonnull %107, i64 5)
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %if.entry.i874, label %ifend9.i.i

ifend9.i.i:                                       ; preds = %ifend.i172.i.i, %ifend6.i.i
  %113 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %113, ptr noundef nonnull align 8 dereferenceable(3) @31, i64 3, i1 false)
  %114 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %114, align 8
  %memberidx.i.i174.i.i = getelementptr inbounds %string, ptr %114, i64 0, i32 1
  store ptr %113, ptr %memberidx.i.i174.i.i, align 8
  %memberidx1.i.i175.i.i = getelementptr inbounds %string, ptr %114, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i175.i.i, align 4
  %memberidx2.i.i176.i.i = getelementptr inbounds %string, ptr %114, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i176.i.i, align 4
  %115 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i179.i.i = icmp eq i64 %115, 3
  br i1 %.not.i179.i.i, label %ifend.i183.i.i, label %ifend12.i.i

ifend.i183.i.i:                                   ; preds = %ifend9.i.i
  %memberidx2.i181.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %116 = load ptr, ptr %memberidx2.i181.i.i, align 8
  %117 = tail call i64 @memcmp(ptr %116, ptr nonnull %113, i64 3)
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %if.entry.i874, label %ifend12.i.i

ifend12.i.i:                                      ; preds = %ifend.i183.i.i, %ifend9.i.i
  %119 = tail call ptr @malloc(i32 16)
  store i16 26217, ptr %119, align 8
  %120 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %120, align 8
  %memberidx.i.i185.i.i = getelementptr inbounds %string, ptr %120, i64 0, i32 1
  store ptr %119, ptr %memberidx.i.i185.i.i, align 8
  %memberidx1.i.i186.i.i = getelementptr inbounds %string, ptr %120, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i186.i.i, align 4
  %memberidx2.i.i187.i.i = getelementptr inbounds %string, ptr %120, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i187.i.i, align 4
  %121 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i190.i.i = icmp eq i64 %121, 2
  br i1 %.not.i190.i.i, label %ifend.i194.i.i, label %ifend15.i.i

ifend.i194.i.i:                                   ; preds = %ifend12.i.i
  %memberidx2.i192.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %122 = load ptr, ptr %memberidx2.i192.i.i, align 8
  %123 = tail call i64 @memcmp(ptr %122, ptr nonnull %119, i64 2)
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %if.entry.i874, label %ifend15.i.i

ifend15.i.i:                                      ; preds = %ifend.i194.i.i, %ifend12.i.i
  %125 = tail call ptr @malloc(i32 32)
  store i32 1702063205, ptr %125, align 8
  %126 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %126, align 8
  %memberidx.i.i196.i.i = getelementptr inbounds %string, ptr %126, i64 0, i32 1
  store ptr %125, ptr %memberidx.i.i196.i.i, align 8
  %memberidx1.i.i197.i.i = getelementptr inbounds %string, ptr %126, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i197.i.i, align 4
  %memberidx2.i.i198.i.i = getelementptr inbounds %string, ptr %126, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i198.i.i, align 4
  %127 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i201.i.i = icmp eq i64 %127, 4
  br i1 %.not.i201.i.i, label %ifend.i205.i.i, label %ifend18.i.i

ifend.i205.i.i:                                   ; preds = %ifend15.i.i
  %memberidx2.i203.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %128 = load ptr, ptr %memberidx2.i203.i.i, align 8
  %129 = tail call i64 @memcmp(ptr %128, ptr nonnull %125, i64 4)
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %if.entry.i874, label %ifend18.i.i

ifend18.i.i:                                      ; preds = %ifend.i205.i.i, %ifend15.i.i
  %131 = tail call ptr @malloc(i32 32)
  store i32 1819242338, ptr %131, align 8
  %132 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %132, align 8
  %memberidx.i.i207.i.i = getelementptr inbounds %string, ptr %132, i64 0, i32 1
  store ptr %131, ptr %memberidx.i.i207.i.i, align 8
  %memberidx1.i.i208.i.i = getelementptr inbounds %string, ptr %132, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i208.i.i, align 4
  %memberidx2.i.i209.i.i = getelementptr inbounds %string, ptr %132, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i209.i.i, align 4
  %133 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i212.i.i = icmp eq i64 %133, 4
  br i1 %.not.i212.i.i, label %ifend.i216.i.i, label %ifend21.i.i

ifend.i216.i.i:                                   ; preds = %ifend18.i.i
  %memberidx2.i214.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %134 = load ptr, ptr %memberidx2.i214.i.i, align 8
  %135 = tail call i64 @memcmp(ptr %134, ptr nonnull %131, i64 4)
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %if.entry.i874, label %ifend21.i.i

ifend21.i.i:                                      ; preds = %ifend.i216.i.i, %ifend18.i.i
  %137 = tail call ptr @malloc(i32 16)
  store i16 13417, ptr %137, align 8
  %138 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %138, align 8
  %memberidx.i.i218.i.i = getelementptr inbounds %string, ptr %138, i64 0, i32 1
  store ptr %137, ptr %memberidx.i.i218.i.i, align 8
  %memberidx1.i.i219.i.i = getelementptr inbounds %string, ptr %138, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i219.i.i, align 4
  %memberidx2.i.i220.i.i = getelementptr inbounds %string, ptr %138, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i220.i.i, align 4
  %139 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i223.i.i = icmp eq i64 %139, 2
  br i1 %.not.i223.i.i, label %ifend.i227.i.i, label %ifend24.i.i

ifend.i227.i.i:                                   ; preds = %ifend21.i.i
  %memberidx2.i225.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %140 = load ptr, ptr %memberidx2.i225.i.i, align 8
  %141 = tail call i64 @memcmp(ptr %140, ptr nonnull %137, i64 2)
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %if.entry.i874, label %ifend24.i.i

ifend24.i.i:                                      ; preds = %ifend.i227.i.i, %ifend21.i.i
  %143 = tail call ptr @malloc(i32 16)
  store i16 14441, ptr %143, align 8
  %144 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %144, align 8
  %memberidx.i.i229.i.i = getelementptr inbounds %string, ptr %144, i64 0, i32 1
  store ptr %143, ptr %memberidx.i.i229.i.i, align 8
  %memberidx1.i.i230.i.i = getelementptr inbounds %string, ptr %144, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i230.i.i, align 4
  %memberidx2.i.i231.i.i = getelementptr inbounds %string, ptr %144, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i231.i.i, align 4
  %145 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i234.i.i = icmp eq i64 %145, 2
  br i1 %.not.i234.i.i, label %ifend.i238.i.i, label %ifend27.i.i873

ifend.i238.i.i:                                   ; preds = %ifend24.i.i
  %memberidx2.i236.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %146 = load ptr, ptr %memberidx2.i236.i.i, align 8
  %147 = tail call i64 @memcmp(ptr %146, ptr nonnull %143, i64 2)
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %if.entry.i874, label %ifend27.i.i873

ifend27.i.i873:                                   ; preds = %ifend.i238.i.i, %ifend24.i.i
  %149 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %149, ptr noundef nonnull align 8 dereferenceable(3) @33, i64 3, i1 false)
  %150 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %150, align 8
  %memberidx.i.i240.i.i = getelementptr inbounds %string, ptr %150, i64 0, i32 1
  store ptr %149, ptr %memberidx.i.i240.i.i, align 8
  %memberidx1.i.i241.i.i = getelementptr inbounds %string, ptr %150, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i241.i.i, align 4
  %memberidx2.i.i242.i.i = getelementptr inbounds %string, ptr %150, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i242.i.i, align 4
  %151 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i245.i.i = icmp eq i64 %151, 3
  br i1 %.not.i245.i.i, label %ifend.i249.i.i, label %ifend30.i.i

ifend.i249.i.i:                                   ; preds = %ifend27.i.i873
  %memberidx2.i247.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %152 = load ptr, ptr %memberidx2.i247.i.i, align 8
  %153 = tail call i64 @memcmp(ptr %152, ptr nonnull %149, i64 3)
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %if.entry.i874, label %ifend30.i.i

ifend30.i.i:                                      ; preds = %ifend.i249.i.i, %ifend27.i.i873
  %155 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %155, ptr noundef nonnull align 8 dereferenceable(3) @34, i64 3, i1 false)
  %156 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %156, align 8
  %memberidx.i.i251.i.i = getelementptr inbounds %string, ptr %156, i64 0, i32 1
  store ptr %155, ptr %memberidx.i.i251.i.i, align 8
  %memberidx1.i.i252.i.i = getelementptr inbounds %string, ptr %156, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i252.i.i, align 4
  %memberidx2.i.i253.i.i = getelementptr inbounds %string, ptr %156, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i253.i.i, align 4
  %157 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i256.i.i = icmp eq i64 %157, 3
  br i1 %.not.i256.i.i, label %ifend.i260.i.i, label %ifend33.i.i

ifend.i260.i.i:                                   ; preds = %ifend30.i.i
  %memberidx2.i258.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %158 = load ptr, ptr %memberidx2.i258.i.i, align 8
  %159 = tail call i64 @memcmp(ptr %158, ptr nonnull %155, i64 3)
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %if.entry.i874, label %ifend33.i.i

ifend33.i.i:                                      ; preds = %ifend.i260.i.i, %ifend30.i.i
  %161 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %161, ptr noundef nonnull align 8 dereferenceable(3) @35, i64 3, i1 false)
  %162 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %162, align 8
  %memberidx.i.i262.i.i = getelementptr inbounds %string, ptr %162, i64 0, i32 1
  store ptr %161, ptr %memberidx.i.i262.i.i, align 8
  %memberidx1.i.i263.i.i = getelementptr inbounds %string, ptr %162, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i263.i.i, align 4
  %memberidx2.i.i264.i.i = getelementptr inbounds %string, ptr %162, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i264.i.i, align 4
  %163 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i267.i.i = icmp eq i64 %163, 3
  br i1 %.not.i267.i.i, label %ifend.i271.i.i, label %ifend36.i.i

ifend.i271.i.i:                                   ; preds = %ifend33.i.i
  %memberidx2.i269.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %164 = load ptr, ptr %memberidx2.i269.i.i, align 8
  %165 = tail call i64 @memcmp(ptr %164, ptr nonnull %161, i64 3)
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %if.entry.i874, label %ifend36.i.i

ifend36.i.i:                                      ; preds = %ifend.i271.i.i, %ifend33.i.i
  %167 = tail call ptr @malloc(i32 32)
  store i32 942813545, ptr %167, align 8
  %168 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %168, align 8
  %memberidx.i.i273.i.i = getelementptr inbounds %string, ptr %168, i64 0, i32 1
  store ptr %167, ptr %memberidx.i.i273.i.i, align 8
  %memberidx1.i.i274.i.i = getelementptr inbounds %string, ptr %168, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i274.i.i, align 4
  %memberidx2.i.i275.i.i = getelementptr inbounds %string, ptr %168, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i275.i.i, align 4
  %169 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i278.i.i = icmp eq i64 %169, 4
  br i1 %.not.i278.i.i, label %ifend.i282.i.i, label %ifend39.i.i

ifend.i282.i.i:                                   ; preds = %ifend36.i.i
  %memberidx2.i280.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %170 = load ptr, ptr %memberidx2.i280.i.i, align 8
  %171 = tail call i64 @memcmp(ptr %170, ptr nonnull %167, i64 4)
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %if.entry.i874, label %ifend39.i.i

ifend39.i.i:                                      ; preds = %ifend.i282.i.i, %ifend36.i.i
  %173 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %173, ptr noundef nonnull align 8 dereferenceable(3) @36, i64 3, i1 false)
  %174 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %174, align 8
  %memberidx.i.i284.i.i = getelementptr inbounds %string, ptr %174, i64 0, i32 1
  store ptr %173, ptr %memberidx.i.i284.i.i, align 8
  %memberidx1.i.i285.i.i = getelementptr inbounds %string, ptr %174, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i285.i.i, align 4
  %memberidx2.i.i286.i.i = getelementptr inbounds %string, ptr %174, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i286.i.i, align 4
  %175 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i289.i.i = icmp eq i64 %175, 3
  br i1 %.not.i289.i.i, label %ifend.i293.i.i, label %ifend42.i.i

ifend.i293.i.i:                                   ; preds = %ifend39.i.i
  %memberidx2.i291.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %176 = load ptr, ptr %memberidx2.i291.i.i, align 8
  %177 = tail call i64 @memcmp(ptr %176, ptr nonnull %173, i64 3)
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %if.entry.i874, label %ifend42.i.i

ifend42.i.i:                                      ; preds = %ifend.i293.i.i, %ifend39.i.i
  %179 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %179, ptr noundef nonnull align 8 dereferenceable(3) @37, i64 3, i1 false)
  %180 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %180, align 8
  %memberidx.i.i295.i.i = getelementptr inbounds %string, ptr %180, i64 0, i32 1
  store ptr %179, ptr %memberidx.i.i295.i.i, align 8
  %memberidx1.i.i296.i.i = getelementptr inbounds %string, ptr %180, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i296.i.i, align 4
  %memberidx2.i.i297.i.i = getelementptr inbounds %string, ptr %180, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i297.i.i, align 4
  %181 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i300.i.i = icmp eq i64 %181, 3
  br i1 %.not.i300.i.i, label %ifend.i304.i.i, label %ifend45.i.i

ifend.i304.i.i:                                   ; preds = %ifend42.i.i
  %memberidx2.i302.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %182 = load ptr, ptr %memberidx2.i302.i.i, align 8
  %183 = tail call i64 @memcmp(ptr %182, ptr nonnull %179, i64 3)
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %if.entry.i874, label %ifend45.i.i

ifend45.i.i:                                      ; preds = %ifend.i304.i.i, %ifend42.i.i
  %185 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %185, ptr noundef nonnull align 8 dereferenceable(3) @38, i64 3, i1 false)
  %186 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %186, align 8
  %memberidx.i.i306.i.i = getelementptr inbounds %string, ptr %186, i64 0, i32 1
  store ptr %185, ptr %memberidx.i.i306.i.i, align 8
  %memberidx1.i.i307.i.i = getelementptr inbounds %string, ptr %186, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i307.i.i, align 4
  %memberidx2.i.i308.i.i = getelementptr inbounds %string, ptr %186, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i308.i.i, align 4
  %187 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i311.i.i = icmp eq i64 %187, 3
  br i1 %.not.i311.i.i, label %ifend.i315.i.i, label %ifend48.i.i

ifend.i315.i.i:                                   ; preds = %ifend45.i.i
  %memberidx2.i313.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %188 = load ptr, ptr %memberidx2.i313.i.i, align 8
  %189 = tail call i64 @memcmp(ptr %188, ptr nonnull %185, i64 3)
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %if.entry.i874, label %ifend48.i.i

ifend48.i.i:                                      ; preds = %ifend.i315.i.i, %ifend45.i.i
  %191 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %191, ptr noundef nonnull align 8 dereferenceable(3) @39, i64 3, i1 false)
  %192 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %192, align 8
  %memberidx.i.i317.i.i = getelementptr inbounds %string, ptr %192, i64 0, i32 1
  store ptr %191, ptr %memberidx.i.i317.i.i, align 8
  %memberidx1.i.i318.i.i = getelementptr inbounds %string, ptr %192, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i318.i.i, align 4
  %memberidx2.i.i319.i.i = getelementptr inbounds %string, ptr %192, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i319.i.i, align 4
  %193 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i322.i.i = icmp eq i64 %193, 3
  br i1 %.not.i322.i.i, label %ifend.i326.i.i, label %ifend51.i.i

ifend.i326.i.i:                                   ; preds = %ifend48.i.i
  %memberidx2.i324.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %194 = load ptr, ptr %memberidx2.i324.i.i, align 8
  %195 = tail call i64 @memcmp(ptr %194, ptr nonnull %191, i64 3)
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %if.entry.i874, label %ifend51.i.i

ifend51.i.i:                                      ; preds = %ifend.i326.i.i, %ifend48.i.i
  %197 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %197, ptr noundef nonnull align 8 dereferenceable(5) @40, i64 5, i1 false)
  %198 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %198, align 8
  %memberidx.i.i328.i.i = getelementptr inbounds %string, ptr %198, i64 0, i32 1
  store ptr %197, ptr %memberidx.i.i328.i.i, align 8
  %memberidx1.i.i329.i.i = getelementptr inbounds %string, ptr %198, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i329.i.i, align 4
  %memberidx2.i.i330.i.i = getelementptr inbounds %string, ptr %198, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i330.i.i, align 4
  %199 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i333.i.i = icmp eq i64 %199, 5
  br i1 %.not.i333.i.i, label %ifend.i337.i.i, label %ifend54.i.i

ifend.i337.i.i:                                   ; preds = %ifend51.i.i
  %memberidx2.i335.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %200 = load ptr, ptr %memberidx2.i335.i.i, align 8
  %201 = tail call i64 @memcmp(ptr %200, ptr nonnull %197, i64 5)
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %if.entry.i874, label %ifend54.i.i

ifend54.i.i:                                      ; preds = %ifend.i337.i.i, %ifend51.i.i
  %203 = tail call ptr @malloc(i32 32)
  store i32 1684631414, ptr %203, align 8
  %204 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %204, align 8
  %memberidx.i.i339.i.i = getelementptr inbounds %string, ptr %204, i64 0, i32 1
  store ptr %203, ptr %memberidx.i.i339.i.i, align 8
  %memberidx1.i.i340.i.i = getelementptr inbounds %string, ptr %204, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i340.i.i, align 4
  %memberidx2.i.i341.i.i = getelementptr inbounds %string, ptr %204, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i341.i.i, align 4
  %205 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i344.i.i = icmp eq i64 %205, 4
  br i1 %.not.i344.i.i, label %ifend.i348.i.i, label %ifend57.i.i

ifend.i348.i.i:                                   ; preds = %ifend54.i.i
  %memberidx2.i346.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %206 = load ptr, ptr %memberidx2.i346.i.i, align 8
  %207 = tail call i64 @memcmp(ptr %206, ptr nonnull %203, i64 4)
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %if.entry.i874, label %ifend57.i.i

ifend57.i.i:                                      ; preds = %ifend.i348.i.i, %ifend54.i.i
  %209 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %209, ptr noundef nonnull align 8 dereferenceable(3) @41, i64 3, i1 false)
  %210 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %210, align 8
  %memberidx.i.i350.i.i = getelementptr inbounds %string, ptr %210, i64 0, i32 1
  store ptr %209, ptr %memberidx.i.i350.i.i, align 8
  %memberidx1.i.i351.i.i = getelementptr inbounds %string, ptr %210, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i351.i.i, align 4
  %memberidx2.i.i352.i.i = getelementptr inbounds %string, ptr %210, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i352.i.i, align 4
  %211 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i355.i.i = icmp eq i64 %211, 3
  br i1 %.not.i355.i.i, label %ifend.i359.i.i, label %ifend60.i.i

ifend.i359.i.i:                                   ; preds = %ifend57.i.i
  %memberidx2.i357.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %212 = load ptr, ptr %memberidx2.i357.i.i, align 8
  %213 = tail call i64 @memcmp(ptr %212, ptr nonnull %209, i64 3)
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %if.entry.i874, label %ifend60.i.i

ifend60.i.i:                                      ; preds = %ifend.i359.i.i, %ifend57.i.i
  %215 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %215, ptr noundef nonnull align 8 dereferenceable(5) @42, i64 5, i1 false)
  %216 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %216, align 8
  %memberidx.i.i361.i.i = getelementptr inbounds %string, ptr %216, i64 0, i32 1
  store ptr %215, ptr %memberidx.i.i361.i.i, align 8
  %memberidx1.i.i362.i.i = getelementptr inbounds %string, ptr %216, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i362.i.i, align 4
  %memberidx2.i.i363.i.i = getelementptr inbounds %string, ptr %216, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i363.i.i, align 4
  %217 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i366.i.i = icmp eq i64 %217, 5
  br i1 %.not.i366.i.i, label %ifend.i370.i.i, label %ifend63.i.i

ifend.i370.i.i:                                   ; preds = %ifend60.i.i
  %memberidx2.i368.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %218 = load ptr, ptr %memberidx2.i368.i.i, align 8
  %219 = tail call i64 @memcmp(ptr %218, ptr nonnull %215, i64 5)
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %if.entry.i874, label %ifend63.i.i

ifend63.i.i:                                      ; preds = %ifend.i370.i.i, %ifend60.i.i
  %221 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %221, ptr noundef nonnull align 8 dereferenceable(3) @43, i64 3, i1 false)
  %222 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %222, align 8
  %memberidx.i.i372.i.i = getelementptr inbounds %string, ptr %222, i64 0, i32 1
  store ptr %221, ptr %memberidx.i.i372.i.i, align 8
  %memberidx1.i.i373.i.i = getelementptr inbounds %string, ptr %222, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i373.i.i, align 4
  %memberidx2.i.i374.i.i = getelementptr inbounds %string, ptr %222, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i374.i.i, align 4
  %223 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i377.i.i = icmp eq i64 %223, 3
  br i1 %.not.i377.i.i, label %ifend.i381.i.i, label %ifend66.i.i

ifend.i381.i.i:                                   ; preds = %ifend63.i.i
  %memberidx2.i379.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %224 = load ptr, ptr %memberidx2.i379.i.i, align 8
  %225 = tail call i64 @memcmp(ptr %224, ptr nonnull %221, i64 3)
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %if.entry.i874, label %ifend66.i.i

ifend66.i.i:                                      ; preds = %ifend.i381.i.i, %ifend63.i.i
  %227 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %227, ptr noundef nonnull align 8 dereferenceable(5) @44, i64 5, i1 false)
  %228 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %228, align 8
  %memberidx.i.i383.i.i = getelementptr inbounds %string, ptr %228, i64 0, i32 1
  store ptr %227, ptr %memberidx.i.i383.i.i, align 8
  %memberidx1.i.i384.i.i = getelementptr inbounds %string, ptr %228, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i384.i.i, align 4
  %memberidx2.i.i385.i.i = getelementptr inbounds %string, ptr %228, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i385.i.i, align 4
  %229 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i388.i.i = icmp eq i64 %229, 5
  br i1 %.not.i388.i.i, label %ifend.i392.i.i, label %ifend69.i.i

ifend.i392.i.i:                                   ; preds = %ifend66.i.i
  %memberidx2.i390.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %230 = load ptr, ptr %memberidx2.i390.i.i, align 8
  %231 = tail call i64 @memcmp(ptr %230, ptr nonnull %227, i64 5)
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %if.entry.i874, label %ifend69.i.i

ifend69.i.i:                                      ; preds = %ifend.i392.i.i, %ifend66.i.i
  %233 = tail call ptr @malloc(i32 64)
  store i64 7310870969309884259, ptr %233, align 8
  %234 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %234, align 8
  %memberidx.i.i394.i.i = getelementptr inbounds %string, ptr %234, i64 0, i32 1
  store ptr %233, ptr %memberidx.i.i394.i.i, align 8
  %memberidx1.i.i395.i.i = getelementptr inbounds %string, ptr %234, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i395.i.i, align 4
  %memberidx2.i.i396.i.i = getelementptr inbounds %string, ptr %234, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i396.i.i, align 4
  %235 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i399.i.i = icmp eq i64 %235, 8
  br i1 %.not.i399.i.i, label %ifend.i403.i.i, label %ifend72.i.i

ifend.i403.i.i:                                   ; preds = %ifend69.i.i
  %memberidx2.i401.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %236 = load ptr, ptr %memberidx2.i401.i.i, align 8
  %237 = tail call i64 @memcmp(ptr %236, ptr nonnull %233, i64 8)
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %if.entry.i874, label %ifend72.i.i

ifend72.i.i:                                      ; preds = %ifend.i403.i.i, %ifend69.i.i
  %239 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %239, ptr noundef nonnull align 8 dereferenceable(6) @45, i64 6, i1 false)
  %240 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %240, align 8
  %memberidx.i.i405.i.i = getelementptr inbounds %string, ptr %240, i64 0, i32 1
  store ptr %239, ptr %memberidx.i.i405.i.i, align 8
  %memberidx1.i.i406.i.i = getelementptr inbounds %string, ptr %240, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i406.i.i, align 4
  %memberidx2.i.i407.i.i = getelementptr inbounds %string, ptr %240, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i407.i.i, align 4
  %241 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i410.i.i = icmp eq i64 %241, 6
  br i1 %.not.i410.i.i, label %ifend.i414.i.i, label %ifend75.i.i

ifend.i414.i.i:                                   ; preds = %ifend72.i.i
  %memberidx2.i412.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %242 = load ptr, ptr %memberidx2.i412.i.i, align 8
  %243 = tail call i64 @memcmp(ptr %242, ptr nonnull %239, i64 6)
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %if.entry.i874, label %ifend75.i.i

ifend75.i.i:                                      ; preds = %ifend.i414.i.i, %ifend72.i.i
  %245 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %245, ptr noundef nonnull align 8 dereferenceable(6) @46, i64 6, i1 false)
  %246 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %246, align 8
  %memberidx.i.i416.i.i = getelementptr inbounds %string, ptr %246, i64 0, i32 1
  store ptr %245, ptr %memberidx.i.i416.i.i, align 8
  %memberidx1.i.i417.i.i = getelementptr inbounds %string, ptr %246, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i417.i.i, align 4
  %memberidx2.i.i418.i.i = getelementptr inbounds %string, ptr %246, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i418.i.i, align 4
  %247 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i421.i.i = icmp eq i64 %247, 6
  br i1 %.not.i421.i.i, label %ifend.i425.i.i, label %ifend78.i.i

ifend.i425.i.i:                                   ; preds = %ifend75.i.i
  %memberidx2.i423.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %248 = load ptr, ptr %memberidx2.i423.i.i, align 8
  %249 = tail call i64 @memcmp(ptr %248, ptr nonnull %245, i64 6)
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %if.entry.i874, label %ifend78.i.i

ifend78.i.i:                                      ; preds = %ifend.i425.i.i, %ifend75.i.i
  %251 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %251, ptr noundef nonnull align 8 dereferenceable(7) @47, i64 7, i1 false)
  %252 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %252, align 8
  %memberidx.i.i427.i.i = getelementptr inbounds %string, ptr %252, i64 0, i32 1
  store ptr %251, ptr %memberidx.i.i427.i.i, align 8
  %memberidx1.i.i428.i.i = getelementptr inbounds %string, ptr %252, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i428.i.i, align 4
  %memberidx2.i.i429.i.i = getelementptr inbounds %string, ptr %252, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i429.i.i, align 4
  %253 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i432.i.i = icmp eq i64 %253, 7
  br i1 %.not.i432.i.i, label %ifend.i436.i.i, label %ifend81.i.i

ifend.i436.i.i:                                   ; preds = %ifend78.i.i
  %memberidx2.i434.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %254 = load ptr, ptr %memberidx2.i434.i.i, align 8
  %255 = tail call i64 @memcmp(ptr %254, ptr nonnull %251, i64 7)
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %if.entry.i874, label %ifend81.i.i

ifend81.i.i:                                      ; preds = %ifend.i436.i.i, %ifend78.i.i
  %257 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %257, ptr noundef nonnull align 8 dereferenceable(6) @48, i64 6, i1 false)
  %258 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %258, align 8
  %memberidx.i.i438.i.i = getelementptr inbounds %string, ptr %258, i64 0, i32 1
  store ptr %257, ptr %memberidx.i.i438.i.i, align 8
  %memberidx1.i.i439.i.i = getelementptr inbounds %string, ptr %258, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i439.i.i, align 4
  %memberidx2.i.i440.i.i = getelementptr inbounds %string, ptr %258, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i440.i.i, align 4
  %259 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i443.i.i = icmp eq i64 %259, 6
  br i1 %.not.i443.i.i, label %ifend.i447.i.i, label %ifend84.i.i

ifend.i447.i.i:                                   ; preds = %ifend81.i.i
  %memberidx2.i445.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %260 = load ptr, ptr %memberidx2.i445.i.i, align 8
  %261 = tail call i64 @memcmp(ptr %260, ptr nonnull %257, i64 6)
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %if.entry.i874, label %ifend84.i.i

ifend84.i.i:                                      ; preds = %ifend.i447.i.i, %ifend81.i.i
  %263 = tail call ptr @malloc(i32 72)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %263, ptr noundef nonnull align 8 dereferenceable(9) @49, i64 9, i1 false)
  %264 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %264, align 8
  %memberidx.i.i449.i.i = getelementptr inbounds %string, ptr %264, i64 0, i32 1
  store ptr %263, ptr %memberidx.i.i449.i.i, align 8
  %memberidx1.i.i450.i.i = getelementptr inbounds %string, ptr %264, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i450.i.i, align 4
  %memberidx2.i.i451.i.i = getelementptr inbounds %string, ptr %264, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i451.i.i, align 4
  %265 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i454.i.i = icmp eq i64 %265, 9
  br i1 %.not.i454.i.i, label %ifend.i458.i.i, label %ifend87.i.i

ifend.i458.i.i:                                   ; preds = %ifend84.i.i
  %memberidx2.i456.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %266 = load ptr, ptr %memberidx2.i456.i.i, align 8
  %267 = tail call i64 @memcmp(ptr %266, ptr nonnull %263, i64 9)
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %if.entry.i874, label %ifend87.i.i

ifend87.i.i:                                      ; preds = %ifend.i458.i.i, %ifend84.i.i
  %269 = tail call ptr @malloc(i32 16)
  store i16 28265, ptr %269, align 8
  %270 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %270, align 8
  %memberidx.i.i460.i.i = getelementptr inbounds %string, ptr %270, i64 0, i32 1
  store ptr %269, ptr %memberidx.i.i460.i.i, align 8
  %memberidx1.i.i461.i.i = getelementptr inbounds %string, ptr %270, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i461.i.i, align 4
  %memberidx2.i.i462.i.i = getelementptr inbounds %string, ptr %270, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i462.i.i, align 4
  %271 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i465.i.i = icmp eq i64 %271, 2
  br i1 %.not.i465.i.i, label %ifend.i469.i.i, label %ifend90.i.i

ifend.i469.i.i:                                   ; preds = %ifend87.i.i
  %memberidx2.i467.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %272 = load ptr, ptr %memberidx2.i467.i.i, align 8
  %273 = tail call i64 @memcmp(ptr %272, ptr nonnull %269, i64 2)
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %if.entry.i874, label %ifend90.i.i

ifend90.i.i:                                      ; preds = %ifend.i469.i.i, %ifend87.i.i
  %275 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %275, ptr noundef nonnull align 8 dereferenceable(5) @50, i64 5, i1 false)
  %276 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %276, align 8
  %memberidx.i.i471.i.i = getelementptr inbounds %string, ptr %276, i64 0, i32 1
  store ptr %275, ptr %memberidx.i.i471.i.i, align 8
  %memberidx1.i.i472.i.i = getelementptr inbounds %string, ptr %276, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i472.i.i, align 4
  %memberidx2.i.i473.i.i = getelementptr inbounds %string, ptr %276, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i473.i.i, align 4
  %277 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i476.i.i = icmp eq i64 %277, 5
  br i1 %.not.i476.i.i, label %ifend.i480.i.i, label %ifend93.i.i

ifend.i480.i.i:                                   ; preds = %ifend90.i.i
  %memberidx2.i478.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %278 = load ptr, ptr %memberidx2.i478.i.i, align 8
  %279 = tail call i64 @memcmp(ptr %278, ptr nonnull %275, i64 5)
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %if.entry.i874, label %ifend93.i.i

ifend93.i.i:                                      ; preds = %ifend.i480.i.i, %ifend90.i.i
  %281 = tail call ptr @malloc(i32 32)
  store i32 1836412517, ptr %281, align 8
  %282 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %282, align 8
  %memberidx.i.i482.i.i = getelementptr inbounds %string, ptr %282, i64 0, i32 1
  store ptr %281, ptr %memberidx.i.i482.i.i, align 8
  %memberidx1.i.i483.i.i = getelementptr inbounds %string, ptr %282, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i483.i.i, align 4
  %memberidx2.i.i484.i.i = getelementptr inbounds %string, ptr %282, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i484.i.i, align 4
  %283 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i487.i.i = icmp eq i64 %283, 4
  br i1 %.not.i487.i.i, label %ifend.i491.i.i, label %ifend96.i.i

ifend.i491.i.i:                                   ; preds = %ifend93.i.i
  %memberidx2.i489.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %284 = load ptr, ptr %memberidx2.i489.i.i, align 8
  %285 = tail call i64 @memcmp(ptr %284, ptr nonnull %281, i64 4)
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %if.entry.i874, label %ifend96.i.i

ifend96.i.i:                                      ; preds = %ifend.i491.i.i, %ifend93.i.i
  %287 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %287, ptr noundef nonnull align 8 dereferenceable(3) @51, i64 3, i1 false)
  %288 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %288, align 8
  %memberidx.i.i493.i.i = getelementptr inbounds %string, ptr %288, i64 0, i32 1
  store ptr %287, ptr %memberidx.i.i493.i.i, align 8
  %memberidx1.i.i494.i.i = getelementptr inbounds %string, ptr %288, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i494.i.i, align 4
  %memberidx2.i.i495.i.i = getelementptr inbounds %string, ptr %288, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i495.i.i, align 4
  %289 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i498.i.i = icmp eq i64 %289, 3
  br i1 %.not.i498.i.i, label %ifend.i502.i.i, label %ifend99.i.i

ifend.i502.i.i:                                   ; preds = %ifend96.i.i
  %memberidx2.i500.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %290 = load ptr, ptr %memberidx2.i500.i.i, align 8
  %291 = tail call i64 @memcmp(ptr %290, ptr nonnull %287, i64 3)
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %if.entry.i874, label %ifend99.i.i

ifend99.i.i:                                      ; preds = %ifend.i502.i.i, %ifend96.i.i
  %293 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %293, ptr noundef nonnull align 8 dereferenceable(3) @52, i64 3, i1 false)
  %294 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %294, align 8
  %memberidx.i.i504.i.i = getelementptr inbounds %string, ptr %294, i64 0, i32 1
  store ptr %293, ptr %memberidx.i.i504.i.i, align 8
  %memberidx1.i.i505.i.i = getelementptr inbounds %string, ptr %294, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i505.i.i, align 4
  %memberidx2.i.i506.i.i = getelementptr inbounds %string, ptr %294, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i506.i.i, align 4
  %295 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i509.i.i = icmp eq i64 %295, 3
  br i1 %.not.i509.i.i, label %ifend.i513.i.i, label %ifend102.i.i

ifend.i513.i.i:                                   ; preds = %ifend99.i.i
  %memberidx2.i511.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %296 = load ptr, ptr %memberidx2.i511.i.i, align 8
  %297 = tail call i64 @memcmp(ptr %296, ptr nonnull %293, i64 3)
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %if.entry.i874, label %ifend102.i.i

ifend102.i.i:                                     ; preds = %ifend.i513.i.i, %ifend99.i.i
  %299 = tail call ptr @malloc(i32 16)
  store i16 29537, ptr %299, align 8
  %300 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %300, align 8
  %memberidx.i.i515.i.i = getelementptr inbounds %string, ptr %300, i64 0, i32 1
  store ptr %299, ptr %memberidx.i.i515.i.i, align 8
  %memberidx1.i.i516.i.i = getelementptr inbounds %string, ptr %300, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i516.i.i, align 4
  %memberidx2.i.i517.i.i = getelementptr inbounds %string, ptr %300, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i517.i.i, align 4
  %301 = load i64, ptr %memberidx.i.i98.i, align 4
  %.not.i520.i.i = icmp eq i64 %301, 2
  br i1 %.not.i520.i.i, label %ifend.i524.i.i, label %ifend.i876

ifend.i524.i.i:                                   ; preds = %ifend102.i.i
  %memberidx2.i522.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %302 = load ptr, ptr %memberidx2.i522.i.i, align 8
  %303 = tail call i64 @memcmp(ptr %302, ptr nonnull %299, i64 2)
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %if.entry.i874, label %ifend.i876

if.entry.i874:                                    ; preds = %ifend.i524.i.i, %ifend.i513.i.i, %ifend.i502.i.i, %ifend.i491.i.i, %ifend.i480.i.i, %ifend.i469.i.i, %ifend.i458.i.i, %ifend.i447.i.i, %ifend.i436.i.i, %ifend.i425.i.i, %ifend.i414.i.i, %ifend.i403.i.i, %ifend.i392.i.i, %ifend.i381.i.i, %ifend.i370.i.i, %ifend.i359.i.i, %ifend.i348.i.i, %ifend.i337.i.i, %ifend.i326.i.i, %ifend.i315.i.i, %ifend.i304.i.i, %ifend.i293.i.i, %ifend.i282.i.i, %ifend.i271.i.i, %ifend.i260.i.i, %ifend.i249.i.i, %ifend.i238.i.i, %ifend.i227.i.i, %ifend.i216.i.i, %ifend.i205.i.i, %ifend.i194.i.i, %ifend.i183.i.i, %ifend.i172.i.i, %ifend.i161.i.i, %ifend.i150.i.i, %ifend.i.i.i
  %305 = phi i1 [ false, %ifend.i524.i.i ], [ true, %ifend.i.i.i ], [ false, %ifend.i150.i.i ], [ false, %ifend.i161.i.i ], [ false, %ifend.i172.i.i ], [ false, %ifend.i183.i.i ], [ false, %ifend.i194.i.i ], [ false, %ifend.i205.i.i ], [ false, %ifend.i216.i.i ], [ false, %ifend.i227.i.i ], [ false, %ifend.i238.i.i ], [ false, %ifend.i249.i.i ], [ false, %ifend.i260.i.i ], [ false, %ifend.i271.i.i ], [ false, %ifend.i282.i.i ], [ false, %ifend.i293.i.i ], [ false, %ifend.i304.i.i ], [ false, %ifend.i315.i.i ], [ false, %ifend.i326.i.i ], [ false, %ifend.i337.i.i ], [ false, %ifend.i348.i.i ], [ false, %ifend.i359.i.i ], [ false, %ifend.i370.i.i ], [ false, %ifend.i381.i.i ], [ false, %ifend.i392.i.i ], [ false, %ifend.i403.i.i ], [ false, %ifend.i414.i.i ], [ false, %ifend.i425.i.i ], [ false, %ifend.i436.i.i ], [ false, %ifend.i447.i.i ], [ false, %ifend.i458.i.i ], [ false, %ifend.i469.i.i ], [ false, %ifend.i480.i.i ], [ false, %ifend.i491.i.i ], [ false, %ifend.i502.i.i ], [ false, %ifend.i513.i.i ]
  %.pr.i = phi i64 [ 87, %ifend.i524.i.i ], [ 52, %ifend.i.i.i ], [ 53, %ifend.i150.i.i ], [ 54, %ifend.i161.i.i ], [ 55, %ifend.i172.i.i ], [ 56, %ifend.i183.i.i ], [ 57, %ifend.i194.i.i ], [ 58, %ifend.i205.i.i ], [ 59, %ifend.i216.i.i ], [ 60, %ifend.i227.i.i ], [ 61, %ifend.i238.i.i ], [ 62, %ifend.i249.i.i ], [ 63, %ifend.i260.i.i ], [ 64, %ifend.i271.i.i ], [ 65, %ifend.i282.i.i ], [ 66, %ifend.i293.i.i ], [ 67, %ifend.i304.i.i ], [ 68, %ifend.i315.i.i ], [ 69, %ifend.i326.i.i ], [ 70, %ifend.i337.i.i ], [ 71, %ifend.i348.i.i ], [ 72, %ifend.i359.i.i ], [ 73, %ifend.i370.i.i ], [ 74, %ifend.i381.i.i ], [ 75, %ifend.i392.i.i ], [ 76, %ifend.i403.i.i ], [ 77, %ifend.i414.i.i ], [ 78, %ifend.i425.i.i ], [ 79, %ifend.i436.i.i ], [ 80, %ifend.i447.i.i ], [ 81, %ifend.i458.i.i ], [ 82, %ifend.i469.i.i ], [ 83, %ifend.i480.i.i ], [ 84, %ifend.i491.i.i ], [ 85, %ifend.i502.i.i ], [ 86, %ifend.i513.i.i ]
  %306 = load i64, ptr %memberidx.i864, align 4
  %307 = add i64 %306, 1
  %308 = load ptr, ptr %memberidx1.i.i865, align 8
  %memberidx2.i93.i = getelementptr inbounds %string, ptr %308, i64 0, i32 2
  %309 = load i64, ptr %memberidx2.i93.i, align 4
  %310 = icmp slt i64 %307, %309
  br i1 %310, label %if.entry.i96.i, label %ifend5.i

if.entry.i96.i:                                   ; preds = %if.entry.i874
  %311 = load ptr, ptr %308, align 8
  %memberidx4.i95.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %311, i64 0, i32 2
  %312 = load ptr, ptr %memberidx4.i95.i, align 8
  %313 = tail call i8 %312(ptr nonnull %308, i64 %307)
  %phi.cmp.i = icmp eq i8 %313, 61
  br i1 %phi.cmp.i, label %if.entry3.i, label %ifend5.i

ifend.i876:                                       ; preds = %ifend.i524.i.i, %ifend102.i.i
  %314 = tail call ptr @malloc(i32 24)
  store i64 51, ptr %314, align 4
  %memberidx1.i.i89.i875 = getelementptr inbounds %Token, ptr %314, i64 0, i32 1
  store ptr %81, ptr %memberidx1.i.i89.i875, align 8
  %memberidx.i90.i = getelementptr inbounds %IdentifierToken, ptr %314, i64 0, i32 2
  store ptr %80, ptr %memberidx.i90.i, align 8
  br label %common.ret

if.entry3.i:                                      ; preds = %if.entry.i96.i
  br i1 %305, label %if.entry6.i877, label %ifend8.i

ifend5.sink.split.sink.split.i:                   ; preds = %ifend.i.i881, %ifend.i45.i, %ifend.i61.i
  %.ph.ph.i = phi i64 [ 16, %ifend.i61.i ], [ 17, %ifend.i45.i ], [ 18, %ifend.i.i881 ]
  store i64 0, ptr %memberidx2.i107.i, align 4
  br label %ifend5.sink.split.i

ifend5.sink.split.i:                              ; preds = %ifend.i.i881, %ifend.i45.i, %ifend.i61.i, %ifend5.sink.split.sink.split.i
  %memberidx2.i107.sink173.i = phi ptr [ %memberidx2.i107.i, %ifend.i61.i ], [ %memberidx2.i107.i, %ifend.i45.i ], [ %memberidx2.i107.i, %ifend.i.i881 ], [ %memberidx3.i108.i, %ifend5.sink.split.sink.split.i ]
  %.ph.i = phi i64 [ 16, %ifend.i61.i ], [ 17, %ifend.i45.i ], [ 18, %ifend.i.i881 ], [ %.ph.ph.i, %ifend5.sink.split.sink.split.i ]
  %315 = load i64, ptr %memberidx2.i107.sink173.i, align 4
  %316 = add i64 %315, 1
  store i64 %316, ptr %memberidx2.i107.sink173.i, align 4
  br label %ifend5.i

ifend5.i:                                         ; preds = %if.entry12.i, %if.entry9.i, %ifend8.i, %if.entry6.i877, %ifend5.sink.split.i, %if.entry.i96.i, %if.entry.i874
  %317 = phi i64 [ %.pr.i, %ifend8.i ], [ %.pr.i, %if.entry.i874 ], [ %.pr.i, %if.entry.i96.i ], [ 16, %if.entry6.i877 ], [ 17, %if.entry9.i ], [ 18, %if.entry12.i ], [ %.ph.i, %ifend5.sink.split.i ]
  %318 = tail call ptr @malloc(i32 16)
  store i64 %317, ptr %318, align 4
  %memberidx1.i88.i = getelementptr inbounds %Token, ptr %318, i64 0, i32 1
  store ptr %81, ptr %memberidx1.i88.i, align 8
  br label %common.ret

if.entry6.i877:                                   ; preds = %if.entry3.i
  %319 = load i64, ptr %memberidx.i864, align 4
  %320 = load ptr, ptr %memberidx1.i.i865, align 8
  %memberidx2.i.i57.i = getelementptr inbounds %string, ptr %320, i64 0, i32 2
  %321 = load i64, ptr %memberidx2.i.i57.i, align 4
  %.not154.i = icmp slt i64 %319, %321
  br i1 %.not154.i, label %ifend.i61.i, label %ifend5.i

ifend.i61.i:                                      ; preds = %if.entry6.i877
  %322 = load ptr, ptr %320, align 8
  %memberidx2.i59.i878 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %322, i64 0, i32 2
  %323 = load ptr, ptr %memberidx2.i59.i878, align 8
  %324 = add nsw i64 %319, 1
  store i64 %324, ptr %memberidx.i864, align 4
  %325 = tail call i8 %323(ptr nonnull %320, i64 %324)
  store i8 %325, ptr %0, align 1
  %326 = icmp eq i8 %325, 10
  br i1 %326, label %ifend5.sink.split.sink.split.i, label %ifend5.sink.split.i

ifend8.i:                                         ; preds = %if.entry3.i
  %trunc.i = trunc i64 %.pr.i to i7
  switch i7 %trunc.i, label %ifend5.i [
    i7 53, label %if.entry9.i
    i7 54, label %if.entry12.i
  ]

if.entry9.i:                                      ; preds = %ifend8.i
  %327 = load i64, ptr %memberidx.i864, align 4
  %328 = load ptr, ptr %memberidx1.i.i865, align 8
  %memberidx2.i.i41.i = getelementptr inbounds %string, ptr %328, i64 0, i32 2
  %329 = load i64, ptr %memberidx2.i.i41.i, align 4
  %.not153.i = icmp slt i64 %327, %329
  br i1 %.not153.i, label %ifend.i45.i, label %ifend5.i

ifend.i45.i:                                      ; preds = %if.entry9.i
  %330 = load ptr, ptr %328, align 8
  %memberidx2.i43.i879 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %330, i64 0, i32 2
  %331 = load ptr, ptr %memberidx2.i43.i879, align 8
  %332 = add nsw i64 %327, 1
  store i64 %332, ptr %memberidx.i864, align 4
  %333 = tail call i8 %331(ptr nonnull %328, i64 %332)
  store i8 %333, ptr %0, align 1
  %334 = icmp eq i8 %333, 10
  br i1 %334, label %ifend5.sink.split.sink.split.i, label %ifend5.sink.split.i

if.entry12.i:                                     ; preds = %ifend8.i
  %335 = load i64, ptr %memberidx.i864, align 4
  %336 = load ptr, ptr %memberidx1.i.i865, align 8
  %memberidx2.i.i.i880 = getelementptr inbounds %string, ptr %336, i64 0, i32 2
  %337 = load i64, ptr %memberidx2.i.i.i880, align 4
  %.not152.i = icmp slt i64 %335, %337
  br i1 %.not152.i, label %ifend.i.i881, label %ifend5.i

ifend.i.i881:                                     ; preds = %if.entry12.i
  %338 = load ptr, ptr %336, align 8
  %memberidx2.i38.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %338, i64 0, i32 2
  %339 = load ptr, ptr %memberidx2.i38.i, align 8
  %340 = add nsw i64 %335, 1
  store i64 %340, ptr %memberidx.i864, align 4
  %341 = tail call i8 %339(ptr nonnull %336, i64 %340)
  store i8 %341, ptr %0, align 1
  %342 = icmp eq i8 %341, 10
  br i1 %342, label %ifend5.sink.split.sink.split.i, label %ifend5.sink.split.i

ifend5:                                           ; preds = %ifend
  %343 = icmp eq i8 %2, 34
  br i1 %343, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend5
  %344 = tail call fastcc ptr @Lexer_string_token(ptr nonnull %0)
  br label %common.ret

ifend8:                                           ; preds = %ifend5
  %345 = add i8 %2, -48
  %346 = icmp ult i8 %345, 10
  br i1 %346, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend8
  %memberidx.i.i882 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %347 = load i64, ptr %memberidx.i.i882, align 4
  %348 = add i64 %347, 1
  %memberidx1.i.i883 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %349 = load ptr, ptr %memberidx1.i.i883, align 8
  %memberidx2.i.i884 = getelementptr inbounds %string, ptr %349, i64 0, i32 2
  %350 = load i64, ptr %memberidx2.i.i884, align 4
  %351 = icmp slt i64 %348, %350
  br i1 %351, label %Lexer_peek.exit.i887, label %ifend.i892

Lexer_peek.exit.i887:                             ; preds = %if.entry9
  %352 = icmp eq i8 %2, 48
  %353 = load ptr, ptr %349, align 8
  %memberidx4.i.i885 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %353, i64 0, i32 2
  %354 = load ptr, ptr %memberidx4.i.i885, align 8
  %355 = tail call i8 %354(ptr nonnull %349, i64 %348)
  %phi.cmp.i886 = icmp eq i8 %355, 98
  %356 = and i1 %352, %phi.cmp.i886
  br i1 %356, label %if.entry.i890, label %Lexer_peek.exit.ifend_crit_edge.i

Lexer_peek.exit.ifend_crit_edge.i:                ; preds = %Lexer_peek.exit.i887
  %.pre.i888 = load i64, ptr %memberidx.i.i882, align 4
  %.pre108.i = load ptr, ptr %memberidx1.i.i883, align 8
  %memberidx2.i45.phi.trans.insert.i = getelementptr inbounds %string, ptr %.pre108.i, i64 0, i32 2
  %.pre109.i = load i64, ptr %memberidx2.i45.phi.trans.insert.i, align 4
  %.pre122.i = add i64 %.pre.i888, 1
  br label %ifend.i892

if.entry.i890:                                    ; preds = %Lexer_peek.exit.i887
  %357 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 2)
  br label %common.ret

ifend.i892:                                       ; preds = %Lexer_peek.exit.ifend_crit_edge.i, %if.entry9
  %.pre-phi.i891 = phi i64 [ %.pre122.i, %Lexer_peek.exit.ifend_crit_edge.i ], [ %348, %if.entry9 ]
  %358 = phi i64 [ %.pre109.i, %Lexer_peek.exit.ifend_crit_edge.i ], [ %350, %if.entry9 ]
  %359 = phi ptr [ %.pre108.i, %Lexer_peek.exit.ifend_crit_edge.i ], [ %349, %if.entry9 ]
  %360 = phi i64 [ %.pre.i888, %Lexer_peek.exit.ifend_crit_edge.i ], [ %347, %if.entry9 ]
  %361 = icmp slt i64 %.pre-phi.i891, %358
  br i1 %361, label %Lexer_peek.exit49.i, label %ifend4.i

Lexer_peek.exit49.i:                              ; preds = %ifend.i892
  %362 = load i8, ptr %0, align 1
  %363 = icmp eq i8 %362, 48
  %364 = load ptr, ptr %359, align 8
  %memberidx4.i47.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %364, i64 0, i32 2
  %365 = load ptr, ptr %memberidx4.i47.i, align 8
  %366 = tail call i8 %365(ptr nonnull %359, i64 %.pre-phi.i891)
  %phi.cmp101.i = icmp eq i8 %366, 111
  %367 = and i1 %363, %phi.cmp101.i
  br i1 %367, label %if.entry2.i, label %Lexer_peek.exit49.ifend4_crit_edge.i

Lexer_peek.exit49.ifend4_crit_edge.i:             ; preds = %Lexer_peek.exit49.i
  %.pre110.i = load i64, ptr %memberidx.i.i882, align 4
  %.pre111.i = load ptr, ptr %memberidx1.i.i883, align 8
  %memberidx2.i52.phi.trans.insert.i = getelementptr inbounds %string, ptr %.pre111.i, i64 0, i32 2
  %.pre112.i = load i64, ptr %memberidx2.i52.phi.trans.insert.i, align 4
  %.pre123.i = add i64 %.pre110.i, 1
  br label %ifend4.i

if.entry2.i:                                      ; preds = %Lexer_peek.exit49.i
  %368 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 8)
  br label %common.ret

ifend4.i:                                         ; preds = %Lexer_peek.exit49.ifend4_crit_edge.i, %ifend.i892
  %.pre-phi124.i = phi i64 [ %.pre123.i, %Lexer_peek.exit49.ifend4_crit_edge.i ], [ %.pre-phi.i891, %ifend.i892 ]
  %369 = phi i64 [ %.pre112.i, %Lexer_peek.exit49.ifend4_crit_edge.i ], [ %358, %ifend.i892 ]
  %370 = phi ptr [ %.pre111.i, %Lexer_peek.exit49.ifend4_crit_edge.i ], [ %359, %ifend.i892 ]
  %371 = phi i64 [ %.pre110.i, %Lexer_peek.exit49.ifend4_crit_edge.i ], [ %360, %ifend.i892 ]
  %372 = icmp slt i64 %.pre-phi124.i, %369
  br i1 %372, label %Lexer_peek.exit56.i, label %ifend8.i894

Lexer_peek.exit56.i:                              ; preds = %ifend4.i
  %373 = load i8, ptr %0, align 1
  %374 = icmp eq i8 %373, 48
  %375 = load ptr, ptr %370, align 8
  %memberidx4.i54.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %375, i64 0, i32 2
  %376 = load ptr, ptr %memberidx4.i54.i, align 8
  %377 = tail call i8 %376(ptr nonnull %370, i64 %.pre-phi124.i)
  %phi.cmp102.i = icmp eq i8 %377, 120
  %378 = and i1 %374, %phi.cmp102.i
  br i1 %378, label %if.entry6.i893, label %Lexer_peek.exit56.ifend8_crit_edge.i

Lexer_peek.exit56.ifend8_crit_edge.i:             ; preds = %Lexer_peek.exit56.i
  %.pre113.i = load i64, ptr %memberidx.i.i882, align 4
  %.pre114.i = load ptr, ptr %memberidx1.i.i883, align 8
  %memberidx2.i59.phi.trans.insert.i = getelementptr inbounds %string, ptr %.pre114.i, i64 0, i32 2
  %.pre115.i = load i64, ptr %memberidx2.i59.phi.trans.insert.i, align 4
  %.pre125.i = add i64 %.pre113.i, 1
  br label %ifend8.i894

if.entry6.i893:                                   ; preds = %Lexer_peek.exit56.i
  %379 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 16)
  br label %common.ret

ifend8.i894:                                      ; preds = %Lexer_peek.exit56.ifend8_crit_edge.i, %ifend4.i
  %.pre-phi126.i = phi i64 [ %.pre125.i, %Lexer_peek.exit56.ifend8_crit_edge.i ], [ %.pre-phi124.i, %ifend4.i ]
  %380 = phi i64 [ %.pre115.i, %Lexer_peek.exit56.ifend8_crit_edge.i ], [ %369, %ifend4.i ]
  %381 = phi ptr [ %.pre114.i, %Lexer_peek.exit56.ifend8_crit_edge.i ], [ %370, %ifend4.i ]
  %382 = phi i64 [ %.pre113.i, %Lexer_peek.exit56.ifend8_crit_edge.i ], [ %371, %ifend4.i ]
  %383 = icmp slt i64 %.pre-phi126.i, %380
  br i1 %383, label %if.entry.i62.i, label %Lexer_peek.exit63.i

if.entry.i62.i:                                   ; preds = %ifend8.i894
  %384 = load ptr, ptr %381, align 8
  %memberidx4.i61.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %384, i64 0, i32 2
  %385 = load ptr, ptr %memberidx4.i61.i, align 8
  %386 = tail call i8 %385(ptr nonnull %381, i64 %.pre-phi126.i)
  %.pre116.i = load i64, ptr %memberidx.i.i882, align 4
  %.pre117.i = load ptr, ptr %memberidx1.i.i883, align 8
  %memberidx2.i67.phi.trans.insert.i = getelementptr inbounds %string, ptr %.pre117.i, i64 0, i32 2
  %.pre118.i = load i64, ptr %memberidx2.i67.phi.trans.insert.i, align 4
  br label %Lexer_peek.exit63.i

Lexer_peek.exit63.i:                              ; preds = %if.entry.i62.i, %ifend8.i894
  %387 = phi i64 [ %.pre118.i, %if.entry.i62.i ], [ %380, %ifend8.i894 ]
  %388 = phi ptr [ %.pre117.i, %if.entry.i62.i ], [ %381, %ifend8.i894 ]
  %389 = phi i64 [ %.pre116.i, %if.entry.i62.i ], [ %382, %ifend8.i894 ]
  %common.ret.op.i60.i = phi i8 [ %386, %if.entry.i62.i ], [ 0, %ifend8.i894 ]
  %390 = add i8 %common.ret.op.i60.i, -48
  %391 = icmp ult i8 %390, 10
  %392 = icmp eq i8 %common.ret.op.i60.i, 46
  %393 = or i1 %392, %391
  %.not.i895 = icmp slt i64 %389, %387
  %394 = and i1 %.not.i895, %393
  br i1 %394, label %while.entry.preheader.i898, label %while.end.i906

while.entry.preheader.i898:                       ; preds = %Lexer_peek.exit63.i
  %memberidx12.i.i896 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i.i897 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i900

while.entry.i900:                                 ; preds = %Lexer_peek.exit92.i, %while.entry.preheader.i898
  %395 = phi i64 [ %445, %Lexer_peek.exit92.i ], [ %387, %while.entry.preheader.i898 ]
  %396 = phi ptr [ %446, %Lexer_peek.exit92.i ], [ %388, %while.entry.preheader.i898 ]
  %397 = phi i64 [ %447, %Lexer_peek.exit92.i ], [ %389, %while.entry.preheader.i898 ]
  %length.0.i899 = phi i64 [ %426, %Lexer_peek.exit92.i ], [ 1, %while.entry.preheader.i898 ]
  %is_float.0.i = phi i1 [ %spec.select.i, %Lexer_peek.exit92.i ], [ false, %while.entry.preheader.i898 ]
  %next_char.0.i = phi i8 [ %common.ret.op.i89.i, %Lexer_peek.exit92.i ], [ %common.ret.op.i60.i, %while.entry.preheader.i898 ]
  %398 = icmp eq i8 %next_char.0.i, 46
  %399 = add i64 %397, 2
  %400 = icmp slt i64 %399, %395
  br i1 %400, label %if.entry.i74.i, label %Lexer_peek.exit75.i

if.entry.i74.i:                                   ; preds = %while.entry.i900
  %401 = load ptr, ptr %396, align 8
  %memberidx4.i73.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %401, i64 0, i32 2
  %402 = load ptr, ptr %memberidx4.i73.i, align 8
  %403 = tail call i8 %402(ptr nonnull %396, i64 %399)
  br label %Lexer_peek.exit75.i

Lexer_peek.exit75.i:                              ; preds = %if.entry.i74.i, %while.entry.i900
  %common.ret.op.i72.i = phi i8 [ %403, %if.entry.i74.i ], [ 0, %while.entry.i900 ]
  %404 = add i8 %common.ret.op.i72.i, -58
  %405 = icmp ult i8 %404, -10
  %406 = or i1 %is_float.0.i, %405
  %407 = and i1 %398, %406
  br i1 %407, label %while.end.i906, label %ifend11.i

while.end.i906:                                   ; preds = %Lexer_peek.exit92.i, %Lexer_peek.exit75.i, %Lexer_peek.exit63.i
  %length.1.i901 = phi i64 [ 1, %Lexer_peek.exit63.i ], [ %length.0.i899, %Lexer_peek.exit75.i ], [ %426, %Lexer_peek.exit92.i ]
  %is_float.1.i = phi i1 [ false, %Lexer_peek.exit63.i ], [ %is_float.0.i, %Lexer_peek.exit75.i ], [ %spec.select.i, %Lexer_peek.exit92.i ]
  %408 = tail call ptr @malloc(i32 32)
  %409 = load i64, ptr %memberidx.i.i882, align 4
  %410 = sub i64 %409, %length.1.i901
  %411 = add i64 %410, 1
  %412 = add i64 %409, 1
  %memberidx2.i79.i902 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %413 = load i64, ptr %memberidx2.i79.i902, align 4
  %414 = sub i64 %413, %length.1.i901
  %memberidx3.i.i903 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %415 = load i64, ptr %memberidx3.i.i903, align 4
  store i64 %411, ptr %408, align 4
  %memberidx1.i.i80.i = getelementptr inbounds %FloRange, ptr %408, i64 0, i32 1
  store i64 %412, ptr %memberidx1.i.i80.i, align 4
  %memberidx2.i.i.i904 = getelementptr inbounds %FloRange, ptr %408, i64 0, i32 2
  store i64 %414, ptr %memberidx2.i.i.i904, align 4
  %memberidx3.i.i.i905 = getelementptr inbounds %FloRange, ptr %408, i64 0, i32 3
  store i64 %415, ptr %memberidx3.i.i.i905, align 4
  %416 = load ptr, ptr %memberidx1.i.i883, align 8
  %417 = load ptr, ptr %416, align 8
  %memberidx17.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %417, i64 0, i32 1
  %418 = load ptr, ptr %memberidx17.i, align 8
  %419 = tail call ptr %418(ptr nonnull %416, i64 %411, i64 %length.1.i901)
  %420 = tail call ptr @malloc(i32 24)
  %421 = load ptr, ptr %419, align 8
  %memberidx19.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %421, i64 0, i32 5
  %422 = load ptr, ptr %memberidx19.i, align 8
  %423 = tail call ptr %422(ptr nonnull %419)
  br i1 %is_float.1.i, label %true_block.i, label %false_block.i

ifend11.i:                                        ; preds = %Lexer_peek.exit75.i
  %424 = load i8, ptr %0, align 1
  %425 = icmp eq i8 %424, 46
  %spec.select.i = select i1 %425, i1 true, i1 %is_float.0.i
  %426 = add i64 %length.0.i899, 1
  %427 = load i64, ptr %memberidx.i.i882, align 4
  %428 = load ptr, ptr %memberidx1.i.i883, align 8
  %memberidx2.i.i82.i = getelementptr inbounds %string, ptr %428, i64 0, i32 2
  %429 = load i64, ptr %memberidx2.i.i82.i, align 4
  %.not103.i = icmp slt i64 %427, %429
  br i1 %.not103.i, label %ifend.i.i907, label %Lexer_advance.exit.i909

ifend.i.i907:                                     ; preds = %ifend11.i
  %430 = load ptr, ptr %428, align 8
  %memberidx2.i84.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %430, i64 0, i32 2
  %431 = load ptr, ptr %memberidx2.i84.i, align 8
  %432 = add nsw i64 %427, 1
  store i64 %432, ptr %memberidx.i.i882, align 4
  %433 = tail call i8 %431(ptr nonnull %428, i64 %432)
  store i8 %433, ptr %0, align 1
  %434 = icmp eq i8 %433, 10
  br i1 %434, label %if.entry6.i.i908, label %Lexer_advance.exit.sink.split.i

if.entry6.i.i908:                                 ; preds = %ifend.i.i907
  store i64 0, ptr %memberidx12.i.i896, align 4
  br label %Lexer_advance.exit.sink.split.i

Lexer_advance.exit.sink.split.i:                  ; preds = %if.entry6.i.i908, %ifend.i.i907
  %memberidx10.i.sink128.i = phi ptr [ %memberidx10.i.i897, %if.entry6.i.i908 ], [ %memberidx12.i.i896, %ifend.i.i907 ]
  %435 = load i64, ptr %memberidx10.i.sink128.i, align 4
  %436 = add i64 %435, 1
  store i64 %436, ptr %memberidx10.i.sink128.i, align 4
  %.pre953 = load i64, ptr %memberidx.i.i882, align 4
  %.pre954 = load ptr, ptr %memberidx1.i.i883, align 8
  %memberidx2.i88.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre954, i64 0, i32 2
  %.pre955 = load i64, ptr %memberidx2.i88.i.phi.trans.insert, align 4
  br label %Lexer_advance.exit.i909

Lexer_advance.exit.i909:                          ; preds = %Lexer_advance.exit.sink.split.i, %ifend11.i
  %437 = phi i64 [ %.pre955, %Lexer_advance.exit.sink.split.i ], [ %429, %ifend11.i ]
  %438 = phi ptr [ %.pre954, %Lexer_advance.exit.sink.split.i ], [ %428, %ifend11.i ]
  %439 = phi i64 [ %.pre953, %Lexer_advance.exit.sink.split.i ], [ %427, %ifend11.i ]
  %440 = add i64 %439, 1
  %441 = icmp slt i64 %440, %437
  br i1 %441, label %if.entry.i91.i, label %Lexer_peek.exit92.i

if.entry.i91.i:                                   ; preds = %Lexer_advance.exit.i909
  %442 = load ptr, ptr %438, align 8
  %memberidx4.i90.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %442, i64 0, i32 2
  %443 = load ptr, ptr %memberidx4.i90.i, align 8
  %444 = tail call i8 %443(ptr nonnull %438, i64 %440)
  %.pre119.i = load i64, ptr %memberidx.i.i882, align 4
  %.pre120.i = load ptr, ptr %memberidx1.i.i883, align 8
  %memberidx2.i95.phi.trans.insert.i = getelementptr inbounds %string, ptr %.pre120.i, i64 0, i32 2
  %.pre121.i = load i64, ptr %memberidx2.i95.phi.trans.insert.i, align 4
  br label %Lexer_peek.exit92.i

Lexer_peek.exit92.i:                              ; preds = %if.entry.i91.i, %Lexer_advance.exit.i909
  %445 = phi i64 [ %.pre121.i, %if.entry.i91.i ], [ %437, %Lexer_advance.exit.i909 ]
  %446 = phi ptr [ %.pre120.i, %if.entry.i91.i ], [ %438, %Lexer_advance.exit.i909 ]
  %447 = phi i64 [ %.pre119.i, %if.entry.i91.i ], [ %439, %Lexer_advance.exit.i909 ]
  %common.ret.op.i89.i = phi i8 [ %444, %if.entry.i91.i ], [ 0, %Lexer_advance.exit.i909 ]
  %448 = add i8 %common.ret.op.i89.i, -48
  %449 = icmp ult i8 %448, 10
  %450 = icmp eq i8 %common.ret.op.i89.i, 46
  %451 = or i1 %450, %449
  %.not104.i = icmp slt i64 %447, %445
  %452 = and i1 %.not104.i, %451
  br i1 %452, label %while.entry.i900, label %while.end.i906

true_block.i:                                     ; preds = %while.end.i906
  %453 = tail call double @atof(ptr %423)
  tail call void @free(ptr %423)
  store i64 30, ptr %420, align 4
  %memberidx.i77.i = getelementptr inbounds %FloatToken, ptr %420, i64 0, i32 2
  store double %453, ptr %memberidx.i77.i, align 8
  br label %end.i

false_block.i:                                    ; preds = %while.end.i906
  %454 = tail call i64 @atol(ptr nocapture %423)
  tail call void @free(ptr %423)
  store i64 29, ptr %420, align 4
  %memberidx.i68.i = getelementptr inbounds %IntToken, ptr %420, i64 0, i32 2
  store i64 %454, ptr %memberidx.i68.i, align 4
  br label %end.i

end.i:                                            ; preds = %false_block.i, %true_block.i
  %455 = getelementptr inbounds %Token, ptr %420, i64 0, i32 1
  store ptr %408, ptr %455, align 8
  %memberidx.i64.i = getelementptr inbounds %string, ptr %419, i64 0, i32 1
  %456 = load ptr, ptr %memberidx.i64.i, align 8
  tail call void @free(ptr %456)
  tail call void @free(ptr nonnull %419)
  br label %common.ret

ifend11:                                          ; preds = %ifend8
  switch i8 %2, label %ifend89 [
    i8 58, label %if.entry12
    i8 59, label %if.entry15
    i8 44, label %if.entry18
    i8 43, label %if.entry21
    i8 45, label %if.entry24
    i8 42, label %if.entry27
    i8 37, label %if.entry30
    i8 94, label %if.entry33
    i8 47, label %if.entry36
    i8 40, label %if.entry42
    i8 41, label %if.entry45
    i8 123, label %if.entry48
    i8 125, label %if.entry51
    i8 91, label %if.entry54
    i8 93, label %if.entry57
    i8 13, label %if.entry60
    i8 10, label %if.entry60
    i8 39, label %if.entry63
    i8 63, label %if.entry66
    i8 38, label %if.entry69
    i8 61, label %if.entry72
    i8 33, label %if.entry75
    i8 62, label %if.entry78
    i8 60, label %if.entry81
    i8 46, label %if.entry84
    i8 0, label %if.entry87
  ]

if.entry12:                                       ; preds = %ifend11
  %457 = tail call ptr @malloc(i32 16)
  %458 = tail call ptr @malloc(i32 32)
  %memberidx.i176 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %459 = load i64, ptr %memberidx.i176, align 4
  %460 = add i64 %459, 1
  %memberidx2.i177 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %461 = load i64, ptr %memberidx2.i177, align 4
  %462 = add i64 %461, -1
  %memberidx3.i178 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %463 = load i64, ptr %memberidx3.i178, align 4
  store i64 %459, ptr %458, align 4
  %memberidx1.i.i179 = getelementptr inbounds %FloRange, ptr %458, i64 0, i32 1
  store i64 %460, ptr %memberidx1.i.i179, align 4
  %memberidx2.i.i180 = getelementptr inbounds %FloRange, ptr %458, i64 0, i32 2
  store i64 %462, ptr %memberidx2.i.i180, align 4
  %memberidx3.i.i181 = getelementptr inbounds %FloRange, ptr %458, i64 0, i32 3
  store i64 %463, ptr %memberidx3.i.i181, align 4
  store i64 1, ptr %457, align 4
  %memberidx1.i182 = getelementptr inbounds %Token, ptr %457, i64 0, i32 1
  store ptr %458, ptr %memberidx1.i182, align 8
  br label %common.ret

if.entry15:                                       ; preds = %ifend11
  %464 = tail call ptr @malloc(i32 16)
  %465 = tail call ptr @malloc(i32 32)
  %memberidx.i183 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %466 = load i64, ptr %memberidx.i183, align 4
  %467 = add i64 %466, 1
  %memberidx2.i184 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %468 = load i64, ptr %memberidx2.i184, align 4
  %469 = add i64 %468, -1
  %memberidx3.i185 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %470 = load i64, ptr %memberidx3.i185, align 4
  store i64 %466, ptr %465, align 4
  %memberidx1.i.i186 = getelementptr inbounds %FloRange, ptr %465, i64 0, i32 1
  store i64 %467, ptr %memberidx1.i.i186, align 4
  %memberidx2.i.i187 = getelementptr inbounds %FloRange, ptr %465, i64 0, i32 2
  store i64 %469, ptr %memberidx2.i.i187, align 4
  %memberidx3.i.i188 = getelementptr inbounds %FloRange, ptr %465, i64 0, i32 3
  store i64 %470, ptr %memberidx3.i.i188, align 4
  store i64 2, ptr %464, align 4
  %memberidx1.i189 = getelementptr inbounds %Token, ptr %464, i64 0, i32 1
  store ptr %465, ptr %memberidx1.i189, align 8
  br label %common.ret

if.entry18:                                       ; preds = %ifend11
  %471 = tail call ptr @malloc(i32 16)
  %472 = tail call ptr @malloc(i32 32)
  %memberidx.i190 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %473 = load i64, ptr %memberidx.i190, align 4
  %474 = add i64 %473, 1
  %memberidx2.i191 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %475 = load i64, ptr %memberidx2.i191, align 4
  %476 = add i64 %475, -1
  %memberidx3.i192 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %477 = load i64, ptr %memberidx3.i192, align 4
  store i64 %473, ptr %472, align 4
  %memberidx1.i.i193 = getelementptr inbounds %FloRange, ptr %472, i64 0, i32 1
  store i64 %474, ptr %memberidx1.i.i193, align 4
  %memberidx2.i.i194 = getelementptr inbounds %FloRange, ptr %472, i64 0, i32 2
  store i64 %476, ptr %memberidx2.i.i194, align 4
  %memberidx3.i.i195 = getelementptr inbounds %FloRange, ptr %472, i64 0, i32 3
  store i64 %477, ptr %memberidx3.i.i195, align 4
  store i64 3, ptr %471, align 4
  %memberidx1.i196 = getelementptr inbounds %Token, ptr %471, i64 0, i32 1
  store ptr %472, ptr %memberidx1.i196, align 8
  br label %common.ret

if.entry21:                                       ; preds = %ifend11
  %memberidx.i.i197 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %478 = load i64, ptr %memberidx.i.i197, align 4
  %479 = add i64 %478, 1
  %memberidx1.i.i198 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %480 = load ptr, ptr %memberidx1.i.i198, align 8
  %memberidx2.i.i199 = getelementptr inbounds %string, ptr %480, i64 0, i32 2
  %481 = load i64, ptr %memberidx2.i.i199, align 4
  %482 = icmp slt i64 %479, %481
  br i1 %482, label %if.entry.i.i, label %else.i

if.entry.i.i:                                     ; preds = %if.entry21
  %483 = load ptr, ptr %480, align 8
  %memberidx4.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %483, i64 0, i32 2
  %484 = load ptr, ptr %memberidx4.i.i, align 8
  %485 = tail call i8 %484(ptr nonnull %480, i64 %479)
  %phi.cmp850 = icmp eq i8 %485, 43
  %486 = load i64, ptr %memberidx.i.i197, align 4
  %487 = load ptr, ptr %memberidx1.i.i198, align 8
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %487, i64 0, i32 2
  %488 = load i64, ptr %memberidx2.i.i.i, align 4
  br i1 %phi.cmp850, label %if.entry.i200, label %if.entry.i.i.else.i_crit_edge

if.entry.i.i.else.i_crit_edge:                    ; preds = %if.entry.i.i
  %.pre961 = add i64 %486, 1
  br label %else.i

if.entry.i200:                                    ; preds = %if.entry.i.i
  %.not853 = icmp slt i64 %486, %488
  br i1 %.not853, label %ifend.i.i, label %Lexer_advance.exit.i

ifend.i.i:                                        ; preds = %if.entry.i200
  %489 = load ptr, ptr %487, align 8
  %memberidx2.i11.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %489, i64 0, i32 2
  %490 = load ptr, ptr %memberidx2.i11.i, align 8
  %491 = add nsw i64 %486, 1
  store i64 %491, ptr %memberidx.i.i197, align 4
  %492 = tail call i8 %490(ptr nonnull %487, i64 %491)
  store i8 %492, ptr %0, align 1
  %493 = icmp eq i8 %492, 10
  %memberidx9.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %493, label %if.entry6.i.i, label %Lexer_advance.exit.i.sink.split

if.entry6.i.i:                                    ; preds = %ifend.i.i
  store i64 0, ptr %memberidx9.i.i, align 4
  %memberidx10.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i.sink.split

Lexer_advance.exit.i.sink.split:                  ; preds = %ifend.i.i, %if.entry6.i.i
  %memberidx9.i.i.sink982 = phi ptr [ %memberidx10.i.i, %if.entry6.i.i ], [ %memberidx9.i.i, %ifend.i.i ]
  %494 = load i64, ptr %memberidx9.i.i.sink982, align 4
  %495 = add i64 %494, 1
  store i64 %495, ptr %memberidx9.i.i.sink982, align 4
  br label %Lexer_advance.exit.i

Lexer_advance.exit.i:                             ; preds = %Lexer_advance.exit.i.sink.split, %if.entry.i200
  %496 = tail call ptr @malloc(i32 16)
  %497 = tail call ptr @malloc(i32 32)
  %498 = load i64, ptr %memberidx.i.i197, align 4
  %499 = add i64 %498, -1
  %500 = add i64 %498, 1
  %memberidx2.i13.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %501 = load i64, ptr %memberidx2.i13.i, align 4
  %502 = add i64 %501, -2
  %memberidx3.i14.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %503 = load i64, ptr %memberidx3.i14.i, align 4
  store i64 %499, ptr %497, align 4
  %memberidx1.i.i15.i = getelementptr inbounds %FloRange, ptr %497, i64 0, i32 1
  store i64 %500, ptr %memberidx1.i.i15.i, align 4
  %memberidx2.i.i16.i = getelementptr inbounds %FloRange, ptr %497, i64 0, i32 2
  store i64 %502, ptr %memberidx2.i.i16.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %497, i64 0, i32 3
  store i64 %503, ptr %memberidx3.i.i.i, align 4
  store i64 21, ptr %496, align 4
  %memberidx1.i17.i = getelementptr inbounds %Token, ptr %496, i64 0, i32 1
  store ptr %497, ptr %memberidx1.i17.i, align 8
  br label %common.ret

else.i:                                           ; preds = %if.entry.i.i.else.i_crit_edge, %if.entry21
  %.pre-phi = phi i64 [ %.pre961, %if.entry.i.i.else.i_crit_edge ], [ %479, %if.entry21 ]
  %504 = phi i64 [ %488, %if.entry.i.i.else.i_crit_edge ], [ %481, %if.entry21 ]
  %505 = phi ptr [ %487, %if.entry.i.i.else.i_crit_edge ], [ %480, %if.entry21 ]
  %506 = icmp slt i64 %.pre-phi, %504
  br i1 %506, label %if.entry.i30.i, label %ifend3.i

if.entry.i30.i:                                   ; preds = %else.i
  %507 = load ptr, ptr %505, align 8
  %memberidx4.i29.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %507, i64 0, i32 2
  %508 = load ptr, ptr %memberidx4.i29.i, align 8
  %509 = tail call i8 %508(ptr nonnull %505, i64 %.pre-phi)
  %phi.cmp851 = icmp eq i8 %509, 61
  br i1 %phi.cmp851, label %if.entry1.i, label %ifend3.i

if.entry1.i:                                      ; preds = %if.entry.i30.i
  %510 = load i64, ptr %memberidx.i.i197, align 4
  %511 = load ptr, ptr %memberidx1.i.i198, align 8
  %memberidx2.i.i34.i = getelementptr inbounds %string, ptr %511, i64 0, i32 2
  %512 = load i64, ptr %memberidx2.i.i34.i, align 4
  %.not852 = icmp slt i64 %510, %512
  br i1 %.not852, label %ifend.i38.i, label %Lexer_advance.exit44.i

ifend.i38.i:                                      ; preds = %if.entry1.i
  %513 = load ptr, ptr %511, align 8
  %memberidx2.i36.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %513, i64 0, i32 2
  %514 = load ptr, ptr %memberidx2.i36.i, align 8
  %515 = add nsw i64 %510, 1
  store i64 %515, ptr %memberidx.i.i197, align 4
  %516 = tail call i8 %514(ptr nonnull %511, i64 %515)
  store i8 %516, ptr %0, align 1
  %517 = icmp eq i8 %516, 10
  %memberidx9.i39.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %517, label %if.entry6.i41.i, label %Lexer_advance.exit44.i.sink.split

if.entry6.i41.i:                                  ; preds = %ifend.i38.i
  store i64 0, ptr %memberidx9.i39.i, align 4
  %memberidx10.i40.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit44.i.sink.split

Lexer_advance.exit44.i.sink.split:                ; preds = %ifend.i38.i, %if.entry6.i41.i
  %memberidx9.i39.i.sink984 = phi ptr [ %memberidx10.i40.i, %if.entry6.i41.i ], [ %memberidx9.i39.i, %ifend.i38.i ]
  %518 = load i64, ptr %memberidx9.i39.i.sink984, align 4
  %519 = add i64 %518, 1
  store i64 %519, ptr %memberidx9.i39.i.sink984, align 4
  br label %Lexer_advance.exit44.i

Lexer_advance.exit44.i:                           ; preds = %Lexer_advance.exit44.i.sink.split, %if.entry1.i
  %520 = tail call ptr @malloc(i32 16)
  %521 = tail call ptr @malloc(i32 32)
  %522 = load i64, ptr %memberidx.i.i197, align 4
  %523 = add i64 %522, -1
  %524 = add i64 %522, 1
  %memberidx2.i46.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %525 = load i64, ptr %memberidx2.i46.i, align 4
  %526 = add i64 %525, -2
  %memberidx3.i47.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %527 = load i64, ptr %memberidx3.i47.i, align 4
  store i64 %523, ptr %521, align 4
  %memberidx1.i.i48.i = getelementptr inbounds %FloRange, ptr %521, i64 0, i32 1
  store i64 %524, ptr %memberidx1.i.i48.i, align 4
  %memberidx2.i.i49.i = getelementptr inbounds %FloRange, ptr %521, i64 0, i32 2
  store i64 %526, ptr %memberidx2.i.i49.i, align 4
  %memberidx3.i.i50.i = getelementptr inbounds %FloRange, ptr %521, i64 0, i32 3
  store i64 %527, ptr %memberidx3.i.i50.i, align 4
  store i64 12, ptr %520, align 4
  %memberidx1.i51.i = getelementptr inbounds %Token, ptr %520, i64 0, i32 1
  store ptr %521, ptr %memberidx1.i51.i, align 8
  br label %common.ret

ifend3.i:                                         ; preds = %else.i, %if.entry.i30.i
  %528 = tail call ptr @malloc(i32 16)
  %529 = tail call ptr @malloc(i32 32)
  %530 = load i64, ptr %memberidx.i.i197, align 4
  %531 = add i64 %530, 1
  %memberidx2.i20.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %532 = load i64, ptr %memberidx2.i20.i, align 4
  %533 = add i64 %532, -1
  %memberidx3.i21.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %534 = load i64, ptr %memberidx3.i21.i, align 4
  store i64 %530, ptr %529, align 4
  %memberidx1.i.i22.i = getelementptr inbounds %FloRange, ptr %529, i64 0, i32 1
  store i64 %531, ptr %memberidx1.i.i22.i, align 4
  %memberidx2.i.i23.i = getelementptr inbounds %FloRange, ptr %529, i64 0, i32 2
  store i64 %533, ptr %memberidx2.i.i23.i, align 4
  %memberidx3.i.i24.i = getelementptr inbounds %FloRange, ptr %529, i64 0, i32 3
  store i64 %534, ptr %memberidx3.i.i24.i, align 4
  store i64 6, ptr %528, align 4
  %memberidx1.i18.i = getelementptr inbounds %Token, ptr %528, i64 0, i32 1
  store ptr %529, ptr %memberidx1.i18.i, align 8
  br label %common.ret

if.entry24:                                       ; preds = %ifend11
  %memberidx.i.i202 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %535 = load i64, ptr %memberidx.i.i202, align 4
  %536 = add i64 %535, 1
  %memberidx1.i.i203 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %537 = load ptr, ptr %memberidx1.i.i203, align 8
  %memberidx2.i.i204 = getelementptr inbounds %string, ptr %537, i64 0, i32 2
  %538 = load i64, ptr %memberidx2.i.i204, align 4
  %539 = icmp slt i64 %536, %538
  br i1 %539, label %if.entry.i.i206, label %else.i223

if.entry.i.i206:                                  ; preds = %if.entry24
  %540 = load ptr, ptr %537, align 8
  %memberidx4.i.i205 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %540, i64 0, i32 2
  %541 = load ptr, ptr %memberidx4.i.i205, align 8
  %542 = tail call i8 %541(ptr nonnull %537, i64 %536)
  %phi.cmp844 = icmp eq i8 %542, 45
  %543 = load i64, ptr %memberidx.i.i202, align 4
  %544 = load ptr, ptr %memberidx1.i.i203, align 8
  %memberidx2.i.i.i212 = getelementptr inbounds %string, ptr %544, i64 0, i32 2
  %545 = load i64, ptr %memberidx2.i.i.i212, align 4
  br i1 %phi.cmp844, label %if.entry.i213, label %if.entry.i.i206.else.i223_crit_edge

if.entry.i.i206.else.i223_crit_edge:              ; preds = %if.entry.i.i206
  %.pre962 = add i64 %543, 1
  br label %else.i223

if.entry.i213:                                    ; preds = %if.entry.i.i206
  %.not849 = icmp slt i64 %543, %545
  br i1 %.not849, label %ifend.i.i215, label %Lexer_advance.exit.i222

ifend.i.i215:                                     ; preds = %if.entry.i213
  %546 = load ptr, ptr %544, align 8
  %memberidx2.i17.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %546, i64 0, i32 2
  %547 = load ptr, ptr %memberidx2.i17.i, align 8
  %548 = add nsw i64 %543, 1
  store i64 %548, ptr %memberidx.i.i202, align 4
  %549 = tail call i8 %547(ptr nonnull %544, i64 %548)
  store i8 %549, ptr %0, align 1
  %550 = icmp eq i8 %549, 10
  %memberidx9.i.i216 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %550, label %if.entry6.i.i218, label %Lexer_advance.exit.i222.sink.split

if.entry6.i.i218:                                 ; preds = %ifend.i.i215
  store i64 0, ptr %memberidx9.i.i216, align 4
  %memberidx10.i.i217 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i222.sink.split

Lexer_advance.exit.i222.sink.split:               ; preds = %ifend.i.i215, %if.entry6.i.i218
  %memberidx9.i.i216.sink986 = phi ptr [ %memberidx10.i.i217, %if.entry6.i.i218 ], [ %memberidx9.i.i216, %ifend.i.i215 ]
  %551 = load i64, ptr %memberidx9.i.i216.sink986, align 4
  %552 = add i64 %551, 1
  store i64 %552, ptr %memberidx9.i.i216.sink986, align 4
  br label %Lexer_advance.exit.i222

Lexer_advance.exit.i222:                          ; preds = %Lexer_advance.exit.i222.sink.split, %if.entry.i213
  %553 = tail call ptr @malloc(i32 16)
  %554 = tail call ptr @malloc(i32 32)
  %555 = load i64, ptr %memberidx.i.i202, align 4
  %556 = add i64 %555, -1
  %557 = add i64 %555, 1
  %memberidx2.i19.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %558 = load i64, ptr %memberidx2.i19.i, align 4
  %559 = add i64 %558, -2
  %memberidx3.i20.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %560 = load i64, ptr %memberidx3.i20.i, align 4
  store i64 %556, ptr %554, align 4
  %memberidx1.i.i21.i = getelementptr inbounds %FloRange, ptr %554, i64 0, i32 1
  store i64 %557, ptr %memberidx1.i.i21.i, align 4
  %memberidx2.i.i22.i = getelementptr inbounds %FloRange, ptr %554, i64 0, i32 2
  store i64 %559, ptr %memberidx2.i.i22.i, align 4
  %memberidx3.i.i.i221 = getelementptr inbounds %FloRange, ptr %554, i64 0, i32 3
  store i64 %560, ptr %memberidx3.i.i.i221, align 4
  store i64 22, ptr %553, align 4
  %memberidx1.i23.i = getelementptr inbounds %Token, ptr %553, i64 0, i32 1
  store ptr %554, ptr %memberidx1.i23.i, align 8
  br label %common.ret

else.i223:                                        ; preds = %if.entry.i.i206.else.i223_crit_edge, %if.entry24
  %.pre-phi963 = phi i64 [ %.pre962, %if.entry.i.i206.else.i223_crit_edge ], [ %536, %if.entry24 ]
  %561 = phi i64 [ %545, %if.entry.i.i206.else.i223_crit_edge ], [ %538, %if.entry24 ]
  %562 = phi ptr [ %544, %if.entry.i.i206.else.i223_crit_edge ], [ %537, %if.entry24 ]
  %563 = icmp slt i64 %.pre-phi963, %561
  br i1 %563, label %if.entry.i36.i, label %else2.i

if.entry.i36.i:                                   ; preds = %else.i223
  %564 = load ptr, ptr %562, align 8
  %memberidx4.i35.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %564, i64 0, i32 2
  %565 = load ptr, ptr %memberidx4.i35.i, align 8
  %566 = tail call i8 %565(ptr nonnull %562, i64 %.pre-phi963)
  %phi.cmp845 = icmp eq i8 %566, 61
  %567 = load i64, ptr %memberidx.i.i202, align 4
  %568 = load ptr, ptr %memberidx1.i.i203, align 8
  %memberidx2.i.i40.i = getelementptr inbounds %string, ptr %568, i64 0, i32 2
  %569 = load i64, ptr %memberidx2.i.i40.i, align 4
  br i1 %phi.cmp845, label %if.entry1.i224, label %if.entry.i36.i.else2.i_crit_edge

if.entry.i36.i.else2.i_crit_edge:                 ; preds = %if.entry.i36.i
  %.pre964 = add i64 %567, 1
  br label %else2.i

if.entry1.i224:                                   ; preds = %if.entry.i36.i
  %.not848 = icmp slt i64 %567, %569
  br i1 %.not848, label %ifend.i44.i, label %Lexer_advance.exit50.i

ifend.i44.i:                                      ; preds = %if.entry1.i224
  %570 = load ptr, ptr %568, align 8
  %memberidx2.i42.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %570, i64 0, i32 2
  %571 = load ptr, ptr %memberidx2.i42.i, align 8
  %572 = add nsw i64 %567, 1
  store i64 %572, ptr %memberidx.i.i202, align 4
  %573 = tail call i8 %571(ptr nonnull %568, i64 %572)
  store i8 %573, ptr %0, align 1
  %574 = icmp eq i8 %573, 10
  %memberidx9.i45.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %574, label %if.entry6.i47.i, label %Lexer_advance.exit50.i.sink.split

if.entry6.i47.i:                                  ; preds = %ifend.i44.i
  store i64 0, ptr %memberidx9.i45.i, align 4
  %memberidx10.i46.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit50.i.sink.split

Lexer_advance.exit50.i.sink.split:                ; preds = %ifend.i44.i, %if.entry6.i47.i
  %memberidx9.i45.i.sink988 = phi ptr [ %memberidx10.i46.i, %if.entry6.i47.i ], [ %memberidx9.i45.i, %ifend.i44.i ]
  %575 = load i64, ptr %memberidx9.i45.i.sink988, align 4
  %576 = add i64 %575, 1
  store i64 %576, ptr %memberidx9.i45.i.sink988, align 4
  br label %Lexer_advance.exit50.i

Lexer_advance.exit50.i:                           ; preds = %Lexer_advance.exit50.i.sink.split, %if.entry1.i224
  %577 = tail call ptr @malloc(i32 16)
  %578 = tail call ptr @malloc(i32 32)
  %579 = load i64, ptr %memberidx.i.i202, align 4
  %580 = add i64 %579, -1
  %581 = add i64 %579, 1
  %memberidx2.i52.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %582 = load i64, ptr %memberidx2.i52.i, align 4
  %583 = add i64 %582, -2
  %memberidx3.i53.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %584 = load i64, ptr %memberidx3.i53.i, align 4
  store i64 %580, ptr %578, align 4
  %memberidx1.i.i54.i = getelementptr inbounds %FloRange, ptr %578, i64 0, i32 1
  store i64 %581, ptr %memberidx1.i.i54.i, align 4
  %memberidx2.i.i55.i = getelementptr inbounds %FloRange, ptr %578, i64 0, i32 2
  store i64 %583, ptr %memberidx2.i.i55.i, align 4
  %memberidx3.i.i56.i = getelementptr inbounds %FloRange, ptr %578, i64 0, i32 3
  store i64 %584, ptr %memberidx3.i.i56.i, align 4
  store i64 11, ptr %577, align 4
  %memberidx1.i57.i = getelementptr inbounds %Token, ptr %577, i64 0, i32 1
  store ptr %578, ptr %memberidx1.i57.i, align 8
  br label %common.ret

else2.i:                                          ; preds = %if.entry.i36.i.else2.i_crit_edge, %else.i223
  %.pre-phi965 = phi i64 [ %.pre964, %if.entry.i36.i.else2.i_crit_edge ], [ %.pre-phi963, %else.i223 ]
  %585 = phi i64 [ %569, %if.entry.i36.i.else2.i_crit_edge ], [ %561, %else.i223 ]
  %586 = phi ptr [ %568, %if.entry.i36.i.else2.i_crit_edge ], [ %562, %else.i223 ]
  %587 = icmp slt i64 %.pre-phi965, %585
  br i1 %587, label %if.entry.i70.i, label %ifend6.i

if.entry.i70.i:                                   ; preds = %else2.i
  %588 = load ptr, ptr %586, align 8
  %memberidx4.i69.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %588, i64 0, i32 2
  %589 = load ptr, ptr %memberidx4.i69.i, align 8
  %590 = tail call i8 %589(ptr nonnull %586, i64 %.pre-phi965)
  %phi.cmp846 = icmp eq i8 %590, 62
  br i1 %phi.cmp846, label %if.entry4.i, label %ifend6.i

if.entry4.i:                                      ; preds = %if.entry.i70.i
  %591 = load i64, ptr %memberidx.i.i202, align 4
  %592 = load ptr, ptr %memberidx1.i.i203, align 8
  %memberidx2.i.i74.i = getelementptr inbounds %string, ptr %592, i64 0, i32 2
  %593 = load i64, ptr %memberidx2.i.i74.i, align 4
  %.not847 = icmp slt i64 %591, %593
  br i1 %.not847, label %ifend.i78.i, label %Lexer_advance.exit84.i

ifend.i78.i:                                      ; preds = %if.entry4.i
  %594 = load ptr, ptr %592, align 8
  %memberidx2.i76.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %594, i64 0, i32 2
  %595 = load ptr, ptr %memberidx2.i76.i, align 8
  %596 = add nsw i64 %591, 1
  store i64 %596, ptr %memberidx.i.i202, align 4
  %597 = tail call i8 %595(ptr nonnull %592, i64 %596)
  store i8 %597, ptr %0, align 1
  %598 = icmp eq i8 %597, 10
  %memberidx9.i79.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %598, label %if.entry6.i81.i, label %Lexer_advance.exit84.i.sink.split

if.entry6.i81.i:                                  ; preds = %ifend.i78.i
  store i64 0, ptr %memberidx9.i79.i, align 4
  %memberidx10.i80.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit84.i.sink.split

Lexer_advance.exit84.i.sink.split:                ; preds = %ifend.i78.i, %if.entry6.i81.i
  %memberidx9.i79.i.sink990 = phi ptr [ %memberidx10.i80.i, %if.entry6.i81.i ], [ %memberidx9.i79.i, %ifend.i78.i ]
  %599 = load i64, ptr %memberidx9.i79.i.sink990, align 4
  %600 = add i64 %599, 1
  store i64 %600, ptr %memberidx9.i79.i.sink990, align 4
  br label %Lexer_advance.exit84.i

Lexer_advance.exit84.i:                           ; preds = %Lexer_advance.exit84.i.sink.split, %if.entry4.i
  %601 = tail call ptr @malloc(i32 16)
  %602 = tail call ptr @malloc(i32 32)
  %603 = load i64, ptr %memberidx.i.i202, align 4
  %604 = add i64 %603, -1
  %605 = add i64 %603, 1
  %memberidx2.i60.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %606 = load i64, ptr %memberidx2.i60.i, align 4
  %607 = add i64 %606, -2
  %memberidx3.i61.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %608 = load i64, ptr %memberidx3.i61.i, align 4
  store i64 %604, ptr %602, align 4
  %memberidx1.i.i62.i = getelementptr inbounds %FloRange, ptr %602, i64 0, i32 1
  store i64 %605, ptr %memberidx1.i.i62.i, align 4
  %memberidx2.i.i63.i = getelementptr inbounds %FloRange, ptr %602, i64 0, i32 2
  store i64 %607, ptr %memberidx2.i.i63.i, align 4
  %memberidx3.i.i64.i = getelementptr inbounds %FloRange, ptr %602, i64 0, i32 3
  store i64 %608, ptr %memberidx3.i.i64.i, align 4
  store i64 43, ptr %601, align 4
  %memberidx1.i58.i = getelementptr inbounds %Token, ptr %601, i64 0, i32 1
  store ptr %602, ptr %memberidx1.i58.i, align 8
  br label %common.ret

ifend6.i:                                         ; preds = %else2.i, %if.entry.i70.i
  %609 = tail call ptr @malloc(i32 16)
  %610 = tail call ptr @malloc(i32 32)
  %611 = load i64, ptr %memberidx.i.i202, align 4
  %612 = add i64 %611, -1
  %613 = add i64 %611, 1
  %memberidx2.i26.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %614 = load i64, ptr %memberidx2.i26.i, align 4
  %615 = add i64 %614, -2
  %memberidx3.i27.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %616 = load i64, ptr %memberidx3.i27.i, align 4
  store i64 %612, ptr %610, align 4
  %memberidx1.i.i28.i = getelementptr inbounds %FloRange, ptr %610, i64 0, i32 1
  store i64 %613, ptr %memberidx1.i.i28.i, align 4
  %memberidx2.i.i29.i = getelementptr inbounds %FloRange, ptr %610, i64 0, i32 2
  store i64 %615, ptr %memberidx2.i.i29.i, align 4
  %memberidx3.i.i30.i = getelementptr inbounds %FloRange, ptr %610, i64 0, i32 3
  store i64 %616, ptr %memberidx3.i.i30.i, align 4
  store i64 5, ptr %609, align 4
  %memberidx1.i24.i = getelementptr inbounds %Token, ptr %609, i64 0, i32 1
  store ptr %610, ptr %memberidx1.i24.i, align 8
  br label %common.ret

if.entry27:                                       ; preds = %ifend11
  %memberidx.i.i226 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %617 = load i64, ptr %memberidx.i.i226, align 4
  %618 = add i64 %617, 1
  %memberidx1.i.i227 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %619 = load ptr, ptr %memberidx1.i.i227, align 8
  %memberidx2.i.i228 = getelementptr inbounds %string, ptr %619, i64 0, i32 2
  %620 = load i64, ptr %memberidx2.i.i228, align 4
  %621 = icmp slt i64 %618, %620
  br i1 %621, label %if.entry.i.i230, label %ifend.i247

if.entry.i.i230:                                  ; preds = %if.entry27
  %622 = load ptr, ptr %619, align 8
  %memberidx4.i.i229 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %622, i64 0, i32 2
  %623 = load ptr, ptr %memberidx4.i.i229, align 8
  %624 = tail call i8 %623(ptr nonnull %619, i64 %618)
  %phi.cmp842 = icmp eq i8 %624, 61
  br i1 %phi.cmp842, label %if.entry.i237, label %ifend.i247

if.entry.i237:                                    ; preds = %if.entry.i.i230
  %625 = load i64, ptr %memberidx.i.i226, align 4
  %626 = load ptr, ptr %memberidx1.i.i227, align 8
  %memberidx2.i.i.i236 = getelementptr inbounds %string, ptr %626, i64 0, i32 2
  %627 = load i64, ptr %memberidx2.i.i.i236, align 4
  %.not843 = icmp slt i64 %625, %627
  br i1 %.not843, label %ifend.i.i239, label %Lexer_advance.exit.i246

ifend.i.i239:                                     ; preds = %if.entry.i237
  %628 = load ptr, ptr %626, align 8
  %memberidx2.i5.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %628, i64 0, i32 2
  %629 = load ptr, ptr %memberidx2.i5.i, align 8
  %630 = add nsw i64 %625, 1
  store i64 %630, ptr %memberidx.i.i226, align 4
  %631 = tail call i8 %629(ptr nonnull %626, i64 %630)
  store i8 %631, ptr %0, align 1
  %632 = icmp eq i8 %631, 10
  %memberidx9.i.i240 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %632, label %if.entry6.i.i242, label %Lexer_advance.exit.i246.sink.split

if.entry6.i.i242:                                 ; preds = %ifend.i.i239
  store i64 0, ptr %memberidx9.i.i240, align 4
  %memberidx10.i.i241 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i246.sink.split

Lexer_advance.exit.i246.sink.split:               ; preds = %ifend.i.i239, %if.entry6.i.i242
  %memberidx9.i.i240.sink992 = phi ptr [ %memberidx10.i.i241, %if.entry6.i.i242 ], [ %memberidx9.i.i240, %ifend.i.i239 ]
  %633 = load i64, ptr %memberidx9.i.i240.sink992, align 4
  %634 = add i64 %633, 1
  store i64 %634, ptr %memberidx9.i.i240.sink992, align 4
  br label %Lexer_advance.exit.i246

Lexer_advance.exit.i246:                          ; preds = %Lexer_advance.exit.i246.sink.split, %if.entry.i237
  %635 = tail call ptr @malloc(i32 16)
  %636 = tail call ptr @malloc(i32 32)
  %637 = load i64, ptr %memberidx.i.i226, align 4
  %638 = add i64 %637, -1
  %639 = add i64 %637, 1
  %memberidx2.i7.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %640 = load i64, ptr %memberidx2.i7.i, align 4
  %641 = add i64 %640, -2
  %memberidx3.i8.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %642 = load i64, ptr %memberidx3.i8.i, align 4
  store i64 %638, ptr %636, align 4
  %memberidx1.i.i9.i = getelementptr inbounds %FloRange, ptr %636, i64 0, i32 1
  store i64 %639, ptr %memberidx1.i.i9.i, align 4
  %memberidx2.i.i10.i = getelementptr inbounds %FloRange, ptr %636, i64 0, i32 2
  store i64 %641, ptr %memberidx2.i.i10.i, align 4
  %memberidx3.i.i.i245 = getelementptr inbounds %FloRange, ptr %636, i64 0, i32 3
  store i64 %642, ptr %memberidx3.i.i.i245, align 4
  store i64 10, ptr %635, align 4
  %memberidx1.i11.i = getelementptr inbounds %Token, ptr %635, i64 0, i32 1
  store ptr %636, ptr %memberidx1.i11.i, align 8
  br label %common.ret

ifend.i247:                                       ; preds = %if.entry27, %if.entry.i.i230
  %643 = tail call ptr @malloc(i32 16)
  %644 = tail call ptr @malloc(i32 32)
  %645 = load i64, ptr %memberidx.i.i226, align 4
  %646 = add i64 %645, 1
  %memberidx2.i14.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %647 = load i64, ptr %memberidx2.i14.i, align 4
  %648 = add i64 %647, -1
  %memberidx3.i15.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %649 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %645, ptr %644, align 4
  %memberidx1.i.i16.i = getelementptr inbounds %FloRange, ptr %644, i64 0, i32 1
  store i64 %646, ptr %memberidx1.i.i16.i, align 4
  %memberidx2.i.i17.i = getelementptr inbounds %FloRange, ptr %644, i64 0, i32 2
  store i64 %648, ptr %memberidx2.i.i17.i, align 4
  %memberidx3.i.i18.i = getelementptr inbounds %FloRange, ptr %644, i64 0, i32 3
  store i64 %649, ptr %memberidx3.i.i18.i, align 4
  store i64 4, ptr %643, align 4
  %memberidx1.i12.i = getelementptr inbounds %Token, ptr %643, i64 0, i32 1
  store ptr %644, ptr %memberidx1.i12.i, align 8
  br label %common.ret

if.entry30:                                       ; preds = %ifend11
  %memberidx.i.i248 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %650 = load i64, ptr %memberidx.i.i248, align 4
  %651 = add i64 %650, 1
  %memberidx1.i.i249 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %652 = load ptr, ptr %memberidx1.i.i249, align 8
  %memberidx2.i.i250 = getelementptr inbounds %string, ptr %652, i64 0, i32 2
  %653 = load i64, ptr %memberidx2.i.i250, align 4
  %654 = icmp slt i64 %651, %653
  br i1 %654, label %if.entry.i.i252, label %ifend.i284

if.entry.i.i252:                                  ; preds = %if.entry30
  %655 = load ptr, ptr %652, align 8
  %memberidx4.i.i251 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %655, i64 0, i32 2
  %656 = load ptr, ptr %memberidx4.i.i251, align 8
  %657 = tail call i8 %656(ptr nonnull %652, i64 %651)
  %phi.cmp840 = icmp eq i8 %657, 61
  br i1 %phi.cmp840, label %if.entry.i259, label %ifend.i284

if.entry.i259:                                    ; preds = %if.entry.i.i252
  %658 = load i64, ptr %memberidx.i.i248, align 4
  %659 = load ptr, ptr %memberidx1.i.i249, align 8
  %memberidx2.i.i.i258 = getelementptr inbounds %string, ptr %659, i64 0, i32 2
  %660 = load i64, ptr %memberidx2.i.i.i258, align 4
  %.not841 = icmp slt i64 %658, %660
  br i1 %.not841, label %ifend.i.i263, label %Lexer_advance.exit.i276

ifend.i.i263:                                     ; preds = %if.entry.i259
  %661 = load ptr, ptr %659, align 8
  %memberidx2.i5.i261 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %661, i64 0, i32 2
  %662 = load ptr, ptr %memberidx2.i5.i261, align 8
  %663 = add nsw i64 %658, 1
  store i64 %663, ptr %memberidx.i.i248, align 4
  %664 = tail call i8 %662(ptr nonnull %659, i64 %663)
  store i8 %664, ptr %0, align 1
  %665 = icmp eq i8 %664, 10
  %memberidx9.i.i264 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %665, label %if.entry6.i.i266, label %Lexer_advance.exit.i276.sink.split

if.entry6.i.i266:                                 ; preds = %ifend.i.i263
  store i64 0, ptr %memberidx9.i.i264, align 4
  %memberidx10.i.i265 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i276.sink.split

Lexer_advance.exit.i276.sink.split:               ; preds = %ifend.i.i263, %if.entry6.i.i266
  %memberidx9.i.i264.sink994 = phi ptr [ %memberidx10.i.i265, %if.entry6.i.i266 ], [ %memberidx9.i.i264, %ifend.i.i263 ]
  %666 = load i64, ptr %memberidx9.i.i264.sink994, align 4
  %667 = add i64 %666, 1
  store i64 %667, ptr %memberidx9.i.i264.sink994, align 4
  br label %Lexer_advance.exit.i276

Lexer_advance.exit.i276:                          ; preds = %Lexer_advance.exit.i276.sink.split, %if.entry.i259
  %668 = tail call ptr @malloc(i32 16)
  %669 = tail call ptr @malloc(i32 32)
  %670 = load i64, ptr %memberidx.i.i248, align 4
  %671 = add i64 %670, -1
  %672 = add i64 %670, 1
  %memberidx2.i7.i270 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %673 = load i64, ptr %memberidx2.i7.i270, align 4
  %674 = add i64 %673, -2
  %memberidx3.i8.i271 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %675 = load i64, ptr %memberidx3.i8.i271, align 4
  store i64 %671, ptr %669, align 4
  %memberidx1.i.i9.i272 = getelementptr inbounds %FloRange, ptr %669, i64 0, i32 1
  store i64 %672, ptr %memberidx1.i.i9.i272, align 4
  %memberidx2.i.i10.i273 = getelementptr inbounds %FloRange, ptr %669, i64 0, i32 2
  store i64 %674, ptr %memberidx2.i.i10.i273, align 4
  %memberidx3.i.i.i274 = getelementptr inbounds %FloRange, ptr %669, i64 0, i32 3
  store i64 %675, ptr %memberidx3.i.i.i274, align 4
  store i64 14, ptr %668, align 4
  %memberidx1.i11.i275 = getelementptr inbounds %Token, ptr %668, i64 0, i32 1
  store ptr %669, ptr %memberidx1.i11.i275, align 8
  br label %common.ret

ifend.i284:                                       ; preds = %if.entry30, %if.entry.i.i252
  %676 = tail call ptr @malloc(i32 16)
  %677 = tail call ptr @malloc(i32 32)
  %678 = load i64, ptr %memberidx.i.i248, align 4
  %679 = add i64 %678, 1
  %memberidx2.i14.i278 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %680 = load i64, ptr %memberidx2.i14.i278, align 4
  %681 = add i64 %680, -1
  %memberidx3.i15.i279 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %682 = load i64, ptr %memberidx3.i15.i279, align 4
  store i64 %678, ptr %677, align 4
  %memberidx1.i.i16.i280 = getelementptr inbounds %FloRange, ptr %677, i64 0, i32 1
  store i64 %679, ptr %memberidx1.i.i16.i280, align 4
  %memberidx2.i.i17.i281 = getelementptr inbounds %FloRange, ptr %677, i64 0, i32 2
  store i64 %681, ptr %memberidx2.i.i17.i281, align 4
  %memberidx3.i.i18.i282 = getelementptr inbounds %FloRange, ptr %677, i64 0, i32 3
  store i64 %682, ptr %memberidx3.i.i18.i282, align 4
  store i64 8, ptr %676, align 4
  %memberidx1.i12.i283 = getelementptr inbounds %Token, ptr %676, i64 0, i32 1
  store ptr %677, ptr %memberidx1.i12.i283, align 8
  br label %common.ret

if.entry33:                                       ; preds = %ifend11
  %memberidx.i.i285 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %683 = load i64, ptr %memberidx.i.i285, align 4
  %684 = add i64 %683, 1
  %memberidx1.i.i286 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %685 = load ptr, ptr %memberidx1.i.i286, align 8
  %memberidx2.i.i287 = getelementptr inbounds %string, ptr %685, i64 0, i32 2
  %686 = load i64, ptr %memberidx2.i.i287, align 4
  %687 = icmp slt i64 %684, %686
  br i1 %687, label %if.entry.i.i289, label %ifend.i321

if.entry.i.i289:                                  ; preds = %if.entry33
  %688 = load ptr, ptr %685, align 8
  %memberidx4.i.i288 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %688, i64 0, i32 2
  %689 = load ptr, ptr %memberidx4.i.i288, align 8
  %690 = tail call i8 %689(ptr nonnull %685, i64 %684)
  %phi.cmp838 = icmp eq i8 %690, 61
  br i1 %phi.cmp838, label %if.entry.i296, label %ifend.i321

if.entry.i296:                                    ; preds = %if.entry.i.i289
  %691 = load i64, ptr %memberidx.i.i285, align 4
  %692 = load ptr, ptr %memberidx1.i.i286, align 8
  %memberidx2.i.i.i295 = getelementptr inbounds %string, ptr %692, i64 0, i32 2
  %693 = load i64, ptr %memberidx2.i.i.i295, align 4
  %.not839 = icmp slt i64 %691, %693
  br i1 %.not839, label %ifend.i.i300, label %Lexer_advance.exit.i313

ifend.i.i300:                                     ; preds = %if.entry.i296
  %694 = load ptr, ptr %692, align 8
  %memberidx2.i5.i298 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %694, i64 0, i32 2
  %695 = load ptr, ptr %memberidx2.i5.i298, align 8
  %696 = add nsw i64 %691, 1
  store i64 %696, ptr %memberidx.i.i285, align 4
  %697 = tail call i8 %695(ptr nonnull %692, i64 %696)
  store i8 %697, ptr %0, align 1
  %698 = icmp eq i8 %697, 10
  %memberidx9.i.i301 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %698, label %if.entry6.i.i303, label %Lexer_advance.exit.i313.sink.split

if.entry6.i.i303:                                 ; preds = %ifend.i.i300
  store i64 0, ptr %memberidx9.i.i301, align 4
  %memberidx10.i.i302 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i313.sink.split

Lexer_advance.exit.i313.sink.split:               ; preds = %ifend.i.i300, %if.entry6.i.i303
  %memberidx9.i.i301.sink996 = phi ptr [ %memberidx10.i.i302, %if.entry6.i.i303 ], [ %memberidx9.i.i301, %ifend.i.i300 ]
  %699 = load i64, ptr %memberidx9.i.i301.sink996, align 4
  %700 = add i64 %699, 1
  store i64 %700, ptr %memberidx9.i.i301.sink996, align 4
  br label %Lexer_advance.exit.i313

Lexer_advance.exit.i313:                          ; preds = %Lexer_advance.exit.i313.sink.split, %if.entry.i296
  %701 = tail call ptr @malloc(i32 16)
  %702 = tail call ptr @malloc(i32 32)
  %703 = load i64, ptr %memberidx.i.i285, align 4
  %704 = add i64 %703, -1
  %705 = add i64 %703, 1
  %memberidx2.i7.i307 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %706 = load i64, ptr %memberidx2.i7.i307, align 4
  %707 = add i64 %706, -2
  %memberidx3.i8.i308 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %708 = load i64, ptr %memberidx3.i8.i308, align 4
  store i64 %704, ptr %702, align 4
  %memberidx1.i.i9.i309 = getelementptr inbounds %FloRange, ptr %702, i64 0, i32 1
  store i64 %705, ptr %memberidx1.i.i9.i309, align 4
  %memberidx2.i.i10.i310 = getelementptr inbounds %FloRange, ptr %702, i64 0, i32 2
  store i64 %707, ptr %memberidx2.i.i10.i310, align 4
  %memberidx3.i.i.i311 = getelementptr inbounds %FloRange, ptr %702, i64 0, i32 3
  store i64 %708, ptr %memberidx3.i.i.i311, align 4
  store i64 15, ptr %701, align 4
  %memberidx1.i11.i312 = getelementptr inbounds %Token, ptr %701, i64 0, i32 1
  store ptr %702, ptr %memberidx1.i11.i312, align 8
  br label %common.ret

ifend.i321:                                       ; preds = %if.entry33, %if.entry.i.i289
  %709 = tail call ptr @malloc(i32 16)
  %710 = tail call ptr @malloc(i32 32)
  %711 = load i64, ptr %memberidx.i.i285, align 4
  %712 = add i64 %711, 1
  %memberidx2.i14.i315 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %713 = load i64, ptr %memberidx2.i14.i315, align 4
  %714 = add i64 %713, -1
  %memberidx3.i15.i316 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %715 = load i64, ptr %memberidx3.i15.i316, align 4
  store i64 %711, ptr %710, align 4
  %memberidx1.i.i16.i317 = getelementptr inbounds %FloRange, ptr %710, i64 0, i32 1
  store i64 %712, ptr %memberidx1.i.i16.i317, align 4
  %memberidx2.i.i17.i318 = getelementptr inbounds %FloRange, ptr %710, i64 0, i32 2
  store i64 %714, ptr %memberidx2.i.i17.i318, align 4
  %memberidx3.i.i18.i319 = getelementptr inbounds %FloRange, ptr %710, i64 0, i32 3
  store i64 %715, ptr %memberidx3.i.i18.i319, align 4
  store i64 9, ptr %709, align 4
  %memberidx1.i12.i320 = getelementptr inbounds %Token, ptr %709, i64 0, i32 1
  store ptr %710, ptr %memberidx1.i12.i320, align 8
  br label %common.ret

if.entry36:                                       ; preds = %ifend11
  %memberidx.i.i322 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %716 = load i64, ptr %memberidx.i.i322, align 4
  %717 = add i64 %716, 1
  %memberidx1.i.i323 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %718 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i.i324 = getelementptr inbounds %string, ptr %718, i64 0, i32 2
  %719 = load i64, ptr %memberidx2.i.i324, align 4
  %720 = icmp slt i64 %717, %719
  br i1 %720, label %Lexer_peek.exit.i328, label %else.i343

Lexer_peek.exit.i328:                             ; preds = %if.entry36
  %721 = load ptr, ptr %718, align 8
  %memberidx4.i.i325 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %721, i64 0, i32 2
  %722 = load ptr, ptr %memberidx4.i.i325, align 8
  %723 = tail call i8 %722(ptr nonnull %718, i64 %717)
  %724 = icmp eq i8 %723, 42
  %725 = load i64, ptr %memberidx.i.i322, align 4
  %726 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i.i.i331 = getelementptr inbounds %string, ptr %726, i64 0, i32 2
  %727 = load i64, ptr %memberidx2.i.i.i331, align 4
  br i1 %724, label %if.entry.i332, label %Lexer_peek.exit.i328.else.i343_crit_edge

Lexer_peek.exit.i328.else.i343_crit_edge:         ; preds = %Lexer_peek.exit.i328
  %.pre966 = add i64 %725, 1
  br label %else.i343

if.entry.i332:                                    ; preds = %Lexer_peek.exit.i328
  %.not832 = icmp slt i64 %725, %727
  br i1 %.not832, label %ifend.i.i336, label %Lexer_advance.exit.i342

ifend.i.i336:                                     ; preds = %if.entry.i332
  %728 = load ptr, ptr %726, align 8
  %memberidx2.i27.i334 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %728, i64 0, i32 2
  %729 = load ptr, ptr %memberidx2.i27.i334, align 8
  %730 = add nsw i64 %725, 1
  store i64 %730, ptr %memberidx.i.i322, align 4
  %731 = tail call i8 %729(ptr nonnull %726, i64 %730)
  store i8 %731, ptr %0, align 1
  %732 = icmp eq i8 %731, 10
  %memberidx9.i.i337 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %732, label %if.entry6.i.i339, label %Lexer_advance.exit.i342.sink.split

if.entry6.i.i339:                                 ; preds = %ifend.i.i336
  store i64 0, ptr %memberidx9.i.i337, align 4
  %memberidx10.i.i338 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i342.sink.split

Lexer_advance.exit.i342.sink.split:               ; preds = %ifend.i.i336, %if.entry6.i.i339
  %memberidx9.i.i337.sink998 = phi ptr [ %memberidx10.i.i338, %if.entry6.i.i339 ], [ %memberidx9.i.i337, %ifend.i.i336 ]
  %733 = load i64, ptr %memberidx9.i.i337.sink998, align 4
  %734 = add i64 %733, 1
  store i64 %734, ptr %memberidx9.i.i337.sink998, align 4
  br label %Lexer_advance.exit.i342

Lexer_advance.exit.i342:                          ; preds = %Lexer_advance.exit.i342.sink.split, %if.entry.i332
  %735 = load i64, ptr %memberidx.i.i322, align 4
  %736 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i30.i = getelementptr inbounds %string, ptr %736, i64 0, i32 2
  %737 = load i64, ptr %memberidx2.i30.i, align 4
  %.not833 = icmp slt i64 %735, %737
  br i1 %.not833, label %while.entry.i.preheader, label %while.end.i

while.entry.i.preheader:                          ; preds = %Lexer_advance.exit.i342
  %memberidx12.i98.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i96.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i

else.i343:                                        ; preds = %Lexer_peek.exit.i328.else.i343_crit_edge, %if.entry36
  %.pre-phi967 = phi i64 [ %.pre966, %Lexer_peek.exit.i328.else.i343_crit_edge ], [ %717, %if.entry36 ]
  %738 = phi i64 [ %727, %Lexer_peek.exit.i328.else.i343_crit_edge ], [ %719, %if.entry36 ]
  %739 = phi ptr [ %726, %Lexer_peek.exit.i328.else.i343_crit_edge ], [ %718, %if.entry36 ]
  %740 = icmp slt i64 %.pre-phi967, %738
  br i1 %740, label %if.entry.i46.i, label %ifend41

if.entry.i46.i:                                   ; preds = %else.i343
  %741 = load ptr, ptr %739, align 8
  %memberidx4.i45.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %741, i64 0, i32 2
  %742 = load ptr, ptr %memberidx4.i45.i, align 8
  %743 = tail call i8 %742(ptr nonnull %739, i64 %.pre-phi967)
  %phi.cmp825 = icmp eq i8 %743, 47
  %744 = load i64, ptr %memberidx.i.i322, align 4
  %745 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i.i119.i = getelementptr inbounds %string, ptr %745, i64 0, i32 2
  %746 = load i64, ptr %memberidx2.i.i119.i, align 4
  br i1 %phi.cmp825, label %if.entry4.i346, label %if.entry.i46.i.ifend41_crit_edge

if.entry.i46.i.ifend41_crit_edge:                 ; preds = %if.entry.i46.i
  %.pre968 = add i64 %744, 1
  br label %ifend41

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Lexer_advance.exit100.i
  %747 = phi i64 [ %737, %while.entry.i.preheader ], [ %796, %Lexer_advance.exit100.i ]
  %748 = phi ptr [ %736, %while.entry.i.preheader ], [ %795, %Lexer_advance.exit100.i ]
  %749 = phi i64 [ %735, %while.entry.i.preheader ], [ %794, %Lexer_advance.exit100.i ]
  %750 = add nsw i64 %749, 1
  %751 = icmp slt i64 %750, %747
  br i1 %751, label %if.entry.i53.i, label %Lexer_peek.exit54.i

if.entry.i53.i:                                   ; preds = %while.entry.i
  %752 = load ptr, ptr %748, align 8
  %memberidx4.i52.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %752, i64 0, i32 2
  %753 = load ptr, ptr %memberidx4.i52.i, align 8
  %754 = tail call i8 %753(ptr nonnull %748, i64 %750)
  %.pre933 = load i64, ptr %memberidx.i.i322, align 4
  %.pre934 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i57.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre934, i64 0, i32 2
  %.pre935 = load i64, ptr %memberidx2.i57.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit54.i

Lexer_peek.exit54.i:                              ; preds = %if.entry.i53.i, %while.entry.i
  %755 = phi i64 [ %.pre935, %if.entry.i53.i ], [ %747, %while.entry.i ]
  %756 = phi ptr [ %.pre934, %if.entry.i53.i ], [ %748, %while.entry.i ]
  %757 = phi i64 [ %.pre933, %if.entry.i53.i ], [ %749, %while.entry.i ]
  %common.ret.op.i51.i = phi i8 [ %754, %if.entry.i53.i ], [ 0, %while.entry.i ]
  %758 = add i64 %757, 2
  %759 = icmp slt i64 %758, %755
  br i1 %759, label %Lexer_peek.exit61.i, label %ifend3.i345

Lexer_peek.exit61.i:                              ; preds = %Lexer_peek.exit54.i
  %760 = icmp eq i8 %common.ret.op.i51.i, 42
  %761 = load ptr, ptr %756, align 8
  %memberidx4.i59.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %761, i64 0, i32 2
  %762 = load ptr, ptr %memberidx4.i59.i, align 8
  %763 = tail call i8 %762(ptr nonnull %756, i64 %758)
  %764 = icmp eq i8 %763, 47
  %765 = and i1 %760, %764
  %.pre939.pre = load i64, ptr %memberidx.i.i322, align 4
  %.pre940.pre = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i.i64.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds %string, ptr %.pre940.pre, i64 0, i32 2
  %.pre941.pre = load i64, ptr %memberidx2.i.i64.i.phi.trans.insert.phi.trans.insert, align 4
  br i1 %765, label %while.end.i, label %ifend3.i345

while.end.i:                                      ; preds = %Lexer_advance.exit100.i, %Lexer_peek.exit61.i, %Lexer_advance.exit.i342
  %766 = phi i64 [ %737, %Lexer_advance.exit.i342 ], [ %.pre941.pre, %Lexer_peek.exit61.i ], [ %796, %Lexer_advance.exit100.i ]
  %767 = phi ptr [ %736, %Lexer_advance.exit.i342 ], [ %.pre940.pre, %Lexer_peek.exit61.i ], [ %795, %Lexer_advance.exit100.i ]
  %768 = phi i64 [ %735, %Lexer_advance.exit.i342 ], [ %.pre939.pre, %Lexer_peek.exit61.i ], [ %794, %Lexer_advance.exit100.i ]
  %.not836 = icmp slt i64 %768, %766
  br i1 %.not836, label %ifend.i68.i, label %Lexer_advance.exit74.i

ifend.i68.i:                                      ; preds = %while.end.i
  %769 = load ptr, ptr %767, align 8
  %memberidx2.i66.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %769, i64 0, i32 2
  %770 = load ptr, ptr %memberidx2.i66.i, align 8
  %771 = add nsw i64 %768, 1
  store i64 %771, ptr %memberidx.i.i322, align 4
  %772 = tail call i8 %770(ptr nonnull %767, i64 %771)
  store i8 %772, ptr %0, align 1
  %773 = icmp eq i8 %772, 10
  %memberidx9.i69.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %773, label %if.entry6.i71.i, label %Lexer_advance.exit74.i.sink.split

if.entry6.i71.i:                                  ; preds = %ifend.i68.i
  store i64 0, ptr %memberidx9.i69.i, align 4
  %memberidx10.i70.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit74.i.sink.split

Lexer_advance.exit74.i.sink.split:                ; preds = %ifend.i68.i, %if.entry6.i71.i
  %memberidx9.i69.i.sink1000 = phi ptr [ %memberidx10.i70.i, %if.entry6.i71.i ], [ %memberidx9.i69.i, %ifend.i68.i ]
  %774 = load i64, ptr %memberidx9.i69.i.sink1000, align 4
  %775 = add i64 %774, 1
  store i64 %775, ptr %memberidx9.i69.i.sink1000, align 4
  br label %Lexer_advance.exit74.i

Lexer_advance.exit74.i:                           ; preds = %Lexer_advance.exit74.i.sink.split, %while.end.i
  %776 = load i64, ptr %memberidx.i.i322, align 4
  %777 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i.i77.i = getelementptr inbounds %string, ptr %777, i64 0, i32 2
  %778 = load i64, ptr %memberidx2.i.i77.i, align 4
  %.not837 = icmp slt i64 %776, %778
  br i1 %.not837, label %ifend.i81.i, label %if.entry39

ifend.i81.i:                                      ; preds = %Lexer_advance.exit74.i
  %779 = load ptr, ptr %777, align 8
  %memberidx2.i79.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %779, i64 0, i32 2
  %780 = load ptr, ptr %memberidx2.i79.i, align 8
  %781 = add nsw i64 %776, 1
  store i64 %781, ptr %memberidx.i.i322, align 4
  %782 = tail call i8 %780(ptr nonnull %777, i64 %781)
  store i8 %782, ptr %0, align 1
  %783 = icmp eq i8 %782, 10
  %memberidx9.i82.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %783, label %if.entry6.i84.i, label %if.entry39.sink.split

if.entry6.i84.i:                                  ; preds = %ifend.i81.i
  store i64 0, ptr %memberidx9.i82.i, align 4
  %memberidx10.i83.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %if.entry39.sink.split

ifend3.i345:                                      ; preds = %Lexer_peek.exit61.i, %Lexer_peek.exit54.i
  %784 = phi i64 [ %755, %Lexer_peek.exit54.i ], [ %.pre941.pre, %Lexer_peek.exit61.i ]
  %785 = phi ptr [ %756, %Lexer_peek.exit54.i ], [ %.pre940.pre, %Lexer_peek.exit61.i ]
  %786 = phi i64 [ %757, %Lexer_peek.exit54.i ], [ %.pre939.pre, %Lexer_peek.exit61.i ]
  %.not834 = icmp slt i64 %786, %784
  br i1 %.not834, label %ifend.i94.i, label %Lexer_advance.exit100.i

ifend.i94.i:                                      ; preds = %ifend3.i345
  %787 = load ptr, ptr %785, align 8
  %memberidx2.i92.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %787, i64 0, i32 2
  %788 = load ptr, ptr %memberidx2.i92.i, align 8
  %789 = add nsw i64 %786, 1
  store i64 %789, ptr %memberidx.i.i322, align 4
  %790 = tail call i8 %788(ptr nonnull %785, i64 %789)
  store i8 %790, ptr %0, align 1
  %791 = icmp eq i8 %790, 10
  br i1 %791, label %if.entry6.i97.i, label %Lexer_advance.exit100.i.sink.split

if.entry6.i97.i:                                  ; preds = %ifend.i94.i
  store i64 0, ptr %memberidx12.i98.i, align 4
  br label %Lexer_advance.exit100.i.sink.split

Lexer_advance.exit100.i.sink.split:               ; preds = %ifend.i94.i, %if.entry6.i97.i
  %memberidx12.i98.i.sink1002 = phi ptr [ %memberidx10.i96.i, %if.entry6.i97.i ], [ %memberidx12.i98.i, %ifend.i94.i ]
  %792 = load i64, ptr %memberidx12.i98.i.sink1002, align 4
  %793 = add i64 %792, 1
  store i64 %793, ptr %memberidx12.i98.i.sink1002, align 4
  br label %Lexer_advance.exit100.i

Lexer_advance.exit100.i:                          ; preds = %Lexer_advance.exit100.i.sink.split, %ifend3.i345
  %794 = load i64, ptr %memberidx.i.i322, align 4
  %795 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i103.i = getelementptr inbounds %string, ptr %795, i64 0, i32 2
  %796 = load i64, ptr %memberidx2.i103.i, align 4
  %.not835 = icmp slt i64 %794, %796
  br i1 %.not835, label %while.entry.i, label %while.end.i

if.entry4.i346:                                   ; preds = %if.entry.i46.i
  %.not829 = icmp slt i64 %744, %746
  br i1 %.not829, label %ifend.i123.i, label %Lexer_advance.exit129.i

ifend.i123.i:                                     ; preds = %if.entry4.i346
  %797 = load ptr, ptr %745, align 8
  %memberidx2.i121.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %797, i64 0, i32 2
  %798 = load ptr, ptr %memberidx2.i121.i, align 8
  %799 = add nsw i64 %744, 1
  store i64 %799, ptr %memberidx.i.i322, align 4
  %800 = tail call i8 %798(ptr nonnull %745, i64 %799)
  store i8 %800, ptr %0, align 1
  %801 = icmp eq i8 %800, 10
  %memberidx9.i124.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %801, label %if.entry6.i126.i, label %Lexer_advance.exit129.i.sink.split

if.entry6.i126.i:                                 ; preds = %ifend.i123.i
  store i64 0, ptr %memberidx9.i124.i, align 4
  %memberidx10.i125.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit129.i.sink.split

Lexer_advance.exit129.i.sink.split:               ; preds = %ifend.i123.i, %if.entry6.i126.i
  %memberidx9.i124.i.sink1004 = phi ptr [ %memberidx10.i125.i, %if.entry6.i126.i ], [ %memberidx9.i124.i, %ifend.i123.i ]
  %802 = load i64, ptr %memberidx9.i124.i.sink1004, align 4
  %803 = add i64 %802, 1
  store i64 %803, ptr %memberidx9.i124.i.sink1004, align 4
  br label %Lexer_advance.exit129.i

Lexer_advance.exit129.i:                          ; preds = %Lexer_advance.exit129.i.sink.split, %if.entry4.i346
  %804 = load i64, ptr %memberidx.i.i322, align 4
  %805 = add i64 %804, 1
  %806 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i132.i = getelementptr inbounds %string, ptr %806, i64 0, i32 2
  %807 = load i64, ptr %memberidx2.i132.i, align 4
  %808 = icmp slt i64 %805, %807
  br i1 %808, label %if.entry.i135.i, label %Lexer_peek.exit136.i

if.entry.i135.i:                                  ; preds = %Lexer_advance.exit129.i
  %809 = load ptr, ptr %806, align 8
  %memberidx4.i134.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %809, i64 0, i32 2
  %810 = load ptr, ptr %memberidx4.i134.i, align 8
  %811 = tail call i8 %810(ptr nonnull %806, i64 %805)
  %phi.cmp830 = icmp eq i8 %811, 10
  %.pre927 = load i64, ptr %memberidx.i.i322, align 4
  %.pre928 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i139.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre928, i64 0, i32 2
  %.pre929 = load i64, ptr %memberidx2.i139.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit136.i

Lexer_peek.exit136.i:                             ; preds = %if.entry.i135.i, %Lexer_advance.exit129.i
  %812 = phi i64 [ %.pre929, %if.entry.i135.i ], [ %807, %Lexer_advance.exit129.i ]
  %813 = phi ptr [ %.pre928, %if.entry.i135.i ], [ %806, %Lexer_advance.exit129.i ]
  %814 = phi i64 [ %.pre927, %if.entry.i135.i ], [ %804, %Lexer_advance.exit129.i ]
  %common.ret.op.i133.i = phi i1 [ %phi.cmp830, %if.entry.i135.i ], [ false, %Lexer_advance.exit129.i ]
  %815 = icmp sge i64 %814, %812
  %816 = or i1 %common.ret.op.i133.i, %815
  br i1 %816, label %if.entry39, label %while.entry7.i.preheader

while.entry7.i.preheader:                         ; preds = %Lexer_peek.exit136.i
  %memberidx12.i114.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i112.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry7.i

while.entry7.i:                                   ; preds = %while.entry7.i.preheader, %Lexer_peek.exit40.i
  %817 = phi i64 [ %812, %while.entry7.i.preheader ], [ %835, %Lexer_peek.exit40.i ]
  %818 = phi ptr [ %813, %while.entry7.i.preheader ], [ %836, %Lexer_peek.exit40.i ]
  %819 = phi i64 [ %814, %while.entry7.i.preheader ], [ %837, %Lexer_peek.exit40.i ]
  %.not831 = icmp slt i64 %819, %817
  br i1 %.not831, label %ifend.i110.i, label %Lexer_advance.exit116.i

ifend.i110.i:                                     ; preds = %while.entry7.i
  %820 = load ptr, ptr %818, align 8
  %memberidx2.i108.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %820, i64 0, i32 2
  %821 = load ptr, ptr %memberidx2.i108.i, align 8
  %822 = add nsw i64 %819, 1
  store i64 %822, ptr %memberidx.i.i322, align 4
  %823 = tail call i8 %821(ptr nonnull %818, i64 %822)
  store i8 %823, ptr %0, align 1
  %824 = icmp eq i8 %823, 10
  br i1 %824, label %if.entry6.i113.i, label %Lexer_advance.exit116.i.sink.split

if.entry6.i113.i:                                 ; preds = %ifend.i110.i
  store i64 0, ptr %memberidx12.i114.i, align 4
  br label %Lexer_advance.exit116.i.sink.split

Lexer_advance.exit116.i.sink.split:               ; preds = %ifend.i110.i, %if.entry6.i113.i
  %memberidx12.i114.i.sink1006 = phi ptr [ %memberidx10.i112.i, %if.entry6.i113.i ], [ %memberidx12.i114.i, %ifend.i110.i ]
  %825 = load i64, ptr %memberidx12.i114.i.sink1006, align 4
  %826 = add i64 %825, 1
  store i64 %826, ptr %memberidx12.i114.i.sink1006, align 4
  br label %Lexer_advance.exit116.i

Lexer_advance.exit116.i:                          ; preds = %Lexer_advance.exit116.i.sink.split, %while.entry7.i
  %827 = load i64, ptr %memberidx.i.i322, align 4
  %828 = add i64 %827, 1
  %829 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i36.i348 = getelementptr inbounds %string, ptr %829, i64 0, i32 2
  %830 = load i64, ptr %memberidx2.i36.i348, align 4
  %831 = icmp slt i64 %828, %830
  br i1 %831, label %if.entry.i39.i, label %Lexer_peek.exit40.i

if.entry.i39.i:                                   ; preds = %Lexer_advance.exit116.i
  %832 = load ptr, ptr %829, align 8
  %memberidx4.i38.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %832, i64 0, i32 2
  %833 = load ptr, ptr %memberidx4.i38.i, align 8
  %834 = tail call i8 %833(ptr nonnull %829, i64 %828)
  %.pre930 = load i64, ptr %memberidx.i.i322, align 4
  %.pre931 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i33.i351.phi.trans.insert = getelementptr inbounds %string, ptr %.pre931, i64 0, i32 2
  %.pre932 = load i64, ptr %memberidx2.i33.i351.phi.trans.insert, align 4
  br label %Lexer_peek.exit40.i

Lexer_peek.exit40.i:                              ; preds = %if.entry.i39.i, %Lexer_advance.exit116.i
  %835 = phi i64 [ %.pre932, %if.entry.i39.i ], [ %830, %Lexer_advance.exit116.i ]
  %836 = phi ptr [ %.pre931, %if.entry.i39.i ], [ %829, %Lexer_advance.exit116.i ]
  %837 = phi i64 [ %.pre930, %if.entry.i39.i ], [ %827, %Lexer_advance.exit116.i ]
  %common.ret.op.i37.i = phi i8 [ %834, %if.entry.i39.i ], [ 0, %Lexer_advance.exit116.i ]
  %838 = icmp eq i8 %common.ret.op.i37.i, 10
  %839 = icmp sge i64 %837, %835
  %840 = or i1 %838, %839
  br i1 %840, label %if.entry39, label %while.entry7.i

if.entry39.sink.split:                            ; preds = %ifend.i81.i, %if.entry6.i84.i
  %memberidx9.i82.i.sink1008 = phi ptr [ %memberidx10.i83.i, %if.entry6.i84.i ], [ %memberidx9.i82.i, %ifend.i81.i ]
  %841 = load i64, ptr %memberidx9.i82.i.sink1008, align 4
  %842 = add i64 %841, 1
  store i64 %842, ptr %memberidx9.i82.i.sink1008, align 4
  br label %if.entry39

if.entry39:                                       ; preds = %Lexer_peek.exit40.i, %if.entry39.sink.split, %Lexer_peek.exit136.i, %Lexer_advance.exit74.i
  %843 = load i64, ptr %memberidx.i.i322, align 4
  %844 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i.i354 = getelementptr inbounds %string, ptr %844, i64 0, i32 2
  %845 = load i64, ptr %memberidx2.i.i354, align 4
  %.not828 = icmp slt i64 %843, %845
  br i1 %.not828, label %ifend.i358, label %Lexer_advance.exit364

ifend.i358:                                       ; preds = %if.entry39
  %846 = load ptr, ptr %844, align 8
  %memberidx2.i356 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %846, i64 0, i32 2
  %847 = load ptr, ptr %memberidx2.i356, align 8
  %848 = add nsw i64 %843, 1
  store i64 %848, ptr %memberidx.i.i322, align 4
  %849 = tail call i8 %847(ptr nonnull %844, i64 %848)
  store i8 %849, ptr %0, align 1
  %850 = icmp eq i8 %849, 10
  %memberidx9.i359 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %850, label %if.entry6.i361, label %Lexer_advance.exit364.sink.split

if.entry6.i361:                                   ; preds = %ifend.i358
  store i64 0, ptr %memberidx9.i359, align 4
  %memberidx10.i360 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit364.sink.split

Lexer_advance.exit364.sink.split:                 ; preds = %ifend.i358, %if.entry6.i361
  %memberidx10.i360.sink1010 = phi ptr [ %memberidx10.i360, %if.entry6.i361 ], [ %memberidx9.i359, %ifend.i358 ]
  %851 = load i64, ptr %memberidx10.i360.sink1010, align 4
  %852 = add i64 %851, 1
  store i64 %852, ptr %memberidx10.i360.sink1010, align 4
  br label %Lexer_advance.exit364

Lexer_advance.exit364:                            ; preds = %Lexer_advance.exit364.sink.split, %if.entry39
  %853 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

ifend41:                                          ; preds = %if.entry.i46.i.ifend41_crit_edge, %else.i343
  %.pre-phi969 = phi i64 [ %.pre968, %if.entry.i46.i.ifend41_crit_edge ], [ %.pre-phi967, %else.i343 ]
  %854 = phi i64 [ %746, %if.entry.i46.i.ifend41_crit_edge ], [ %738, %else.i343 ]
  %855 = phi ptr [ %745, %if.entry.i46.i.ifend41_crit_edge ], [ %739, %else.i343 ]
  %856 = icmp slt i64 %.pre-phi969, %854
  br i1 %856, label %if.entry.i.i372, label %ifend.i404

if.entry.i.i372:                                  ; preds = %ifend41
  %857 = load ptr, ptr %855, align 8
  %memberidx4.i.i371 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %857, i64 0, i32 2
  %858 = load ptr, ptr %memberidx4.i.i371, align 8
  %859 = tail call i8 %858(ptr nonnull %855, i64 %.pre-phi969)
  %phi.cmp826 = icmp eq i8 %859, 61
  br i1 %phi.cmp826, label %if.entry.i379, label %ifend.i404

if.entry.i379:                                    ; preds = %if.entry.i.i372
  %860 = load i64, ptr %memberidx.i.i322, align 4
  %861 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i.i.i378 = getelementptr inbounds %string, ptr %861, i64 0, i32 2
  %862 = load i64, ptr %memberidx2.i.i.i378, align 4
  %.not827 = icmp slt i64 %860, %862
  br i1 %.not827, label %ifend.i.i383, label %Lexer_advance.exit.i396

ifend.i.i383:                                     ; preds = %if.entry.i379
  %863 = load ptr, ptr %861, align 8
  %memberidx2.i5.i381 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %863, i64 0, i32 2
  %864 = load ptr, ptr %memberidx2.i5.i381, align 8
  %865 = add nsw i64 %860, 1
  store i64 %865, ptr %memberidx.i.i322, align 4
  %866 = tail call i8 %864(ptr nonnull %861, i64 %865)
  store i8 %866, ptr %0, align 1
  %867 = icmp eq i8 %866, 10
  %memberidx9.i.i384 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %867, label %if.entry6.i.i386, label %Lexer_advance.exit.i396.sink.split

if.entry6.i.i386:                                 ; preds = %ifend.i.i383
  store i64 0, ptr %memberidx9.i.i384, align 4
  %memberidx10.i.i385 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i396.sink.split

Lexer_advance.exit.i396.sink.split:               ; preds = %ifend.i.i383, %if.entry6.i.i386
  %memberidx9.i.i384.sink1012 = phi ptr [ %memberidx10.i.i385, %if.entry6.i.i386 ], [ %memberidx9.i.i384, %ifend.i.i383 ]
  %868 = load i64, ptr %memberidx9.i.i384.sink1012, align 4
  %869 = add i64 %868, 1
  store i64 %869, ptr %memberidx9.i.i384.sink1012, align 4
  br label %Lexer_advance.exit.i396

Lexer_advance.exit.i396:                          ; preds = %Lexer_advance.exit.i396.sink.split, %if.entry.i379
  %870 = tail call ptr @malloc(i32 16)
  %871 = tail call ptr @malloc(i32 32)
  %872 = load i64, ptr %memberidx.i.i322, align 4
  %873 = add i64 %872, -1
  %874 = add i64 %872, 1
  %memberidx2.i7.i390 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %875 = load i64, ptr %memberidx2.i7.i390, align 4
  %876 = add i64 %875, -2
  %memberidx3.i8.i391 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %877 = load i64, ptr %memberidx3.i8.i391, align 4
  store i64 %873, ptr %871, align 4
  %memberidx1.i.i9.i392 = getelementptr inbounds %FloRange, ptr %871, i64 0, i32 1
  store i64 %874, ptr %memberidx1.i.i9.i392, align 4
  %memberidx2.i.i10.i393 = getelementptr inbounds %FloRange, ptr %871, i64 0, i32 2
  store i64 %876, ptr %memberidx2.i.i10.i393, align 4
  %memberidx3.i.i.i394 = getelementptr inbounds %FloRange, ptr %871, i64 0, i32 3
  store i64 %877, ptr %memberidx3.i.i.i394, align 4
  store i64 13, ptr %870, align 4
  %memberidx1.i11.i395 = getelementptr inbounds %Token, ptr %870, i64 0, i32 1
  store ptr %871, ptr %memberidx1.i11.i395, align 8
  br label %common.ret

ifend.i404:                                       ; preds = %ifend41, %if.entry.i.i372
  %878 = tail call ptr @malloc(i32 16)
  %879 = tail call ptr @malloc(i32 32)
  %880 = load i64, ptr %memberidx.i.i322, align 4
  %881 = add i64 %880, 1
  %memberidx2.i14.i398 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %882 = load i64, ptr %memberidx2.i14.i398, align 4
  %883 = add i64 %882, -1
  %memberidx3.i15.i399 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %884 = load i64, ptr %memberidx3.i15.i399, align 4
  store i64 %880, ptr %879, align 4
  %memberidx1.i.i16.i400 = getelementptr inbounds %FloRange, ptr %879, i64 0, i32 1
  store i64 %881, ptr %memberidx1.i.i16.i400, align 4
  %memberidx2.i.i17.i401 = getelementptr inbounds %FloRange, ptr %879, i64 0, i32 2
  store i64 %883, ptr %memberidx2.i.i17.i401, align 4
  %memberidx3.i.i18.i402 = getelementptr inbounds %FloRange, ptr %879, i64 0, i32 3
  store i64 %884, ptr %memberidx3.i.i18.i402, align 4
  store i64 7, ptr %878, align 4
  %memberidx1.i12.i403 = getelementptr inbounds %Token, ptr %878, i64 0, i32 1
  store ptr %879, ptr %memberidx1.i12.i403, align 8
  br label %common.ret

if.entry42:                                       ; preds = %ifend11
  %885 = tail call ptr @malloc(i32 16)
  %886 = tail call ptr @malloc(i32 32)
  %memberidx.i405 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %887 = load i64, ptr %memberidx.i405, align 4
  %888 = add i64 %887, 1
  %memberidx2.i406 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %889 = load i64, ptr %memberidx2.i406, align 4
  %890 = add i64 %889, -1
  %memberidx3.i407 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %891 = load i64, ptr %memberidx3.i407, align 4
  store i64 %887, ptr %886, align 4
  %memberidx1.i.i408 = getelementptr inbounds %FloRange, ptr %886, i64 0, i32 1
  store i64 %888, ptr %memberidx1.i.i408, align 4
  %memberidx2.i.i409 = getelementptr inbounds %FloRange, ptr %886, i64 0, i32 2
  store i64 %890, ptr %memberidx2.i.i409, align 4
  %memberidx3.i.i410 = getelementptr inbounds %FloRange, ptr %886, i64 0, i32 3
  store i64 %891, ptr %memberidx3.i.i410, align 4
  store i64 23, ptr %885, align 4
  %memberidx1.i411 = getelementptr inbounds %Token, ptr %885, i64 0, i32 1
  store ptr %886, ptr %memberidx1.i411, align 8
  br label %common.ret

if.entry45:                                       ; preds = %ifend11
  %892 = tail call ptr @malloc(i32 16)
  %893 = tail call ptr @malloc(i32 32)
  %memberidx.i412 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %894 = load i64, ptr %memberidx.i412, align 4
  %895 = add i64 %894, 1
  %memberidx2.i413 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %896 = load i64, ptr %memberidx2.i413, align 4
  %897 = add i64 %896, -1
  %memberidx3.i414 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %898 = load i64, ptr %memberidx3.i414, align 4
  store i64 %894, ptr %893, align 4
  %memberidx1.i.i415 = getelementptr inbounds %FloRange, ptr %893, i64 0, i32 1
  store i64 %895, ptr %memberidx1.i.i415, align 4
  %memberidx2.i.i416 = getelementptr inbounds %FloRange, ptr %893, i64 0, i32 2
  store i64 %897, ptr %memberidx2.i.i416, align 4
  %memberidx3.i.i417 = getelementptr inbounds %FloRange, ptr %893, i64 0, i32 3
  store i64 %898, ptr %memberidx3.i.i417, align 4
  store i64 24, ptr %892, align 4
  %memberidx1.i418 = getelementptr inbounds %Token, ptr %892, i64 0, i32 1
  store ptr %893, ptr %memberidx1.i418, align 8
  br label %common.ret

if.entry48:                                       ; preds = %ifend11
  %899 = tail call ptr @malloc(i32 16)
  %900 = tail call ptr @malloc(i32 32)
  %memberidx.i419 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %901 = load i64, ptr %memberidx.i419, align 4
  %902 = add i64 %901, 1
  %memberidx2.i420 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %903 = load i64, ptr %memberidx2.i420, align 4
  %904 = add i64 %903, -1
  %memberidx3.i421 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %905 = load i64, ptr %memberidx3.i421, align 4
  store i64 %901, ptr %900, align 4
  %memberidx1.i.i422 = getelementptr inbounds %FloRange, ptr %900, i64 0, i32 1
  store i64 %902, ptr %memberidx1.i.i422, align 4
  %memberidx2.i.i423 = getelementptr inbounds %FloRange, ptr %900, i64 0, i32 2
  store i64 %904, ptr %memberidx2.i.i423, align 4
  %memberidx3.i.i424 = getelementptr inbounds %FloRange, ptr %900, i64 0, i32 3
  store i64 %905, ptr %memberidx3.i.i424, align 4
  store i64 25, ptr %899, align 4
  %memberidx1.i425 = getelementptr inbounds %Token, ptr %899, i64 0, i32 1
  store ptr %900, ptr %memberidx1.i425, align 8
  br label %common.ret

if.entry51:                                       ; preds = %ifend11
  %906 = tail call ptr @malloc(i32 16)
  %907 = tail call ptr @malloc(i32 32)
  %memberidx.i426 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %908 = load i64, ptr %memberidx.i426, align 4
  %909 = add i64 %908, 1
  %memberidx2.i427 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %910 = load i64, ptr %memberidx2.i427, align 4
  %911 = add i64 %910, -1
  %memberidx3.i428 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %912 = load i64, ptr %memberidx3.i428, align 4
  store i64 %908, ptr %907, align 4
  %memberidx1.i.i429 = getelementptr inbounds %FloRange, ptr %907, i64 0, i32 1
  store i64 %909, ptr %memberidx1.i.i429, align 4
  %memberidx2.i.i430 = getelementptr inbounds %FloRange, ptr %907, i64 0, i32 2
  store i64 %911, ptr %memberidx2.i.i430, align 4
  %memberidx3.i.i431 = getelementptr inbounds %FloRange, ptr %907, i64 0, i32 3
  store i64 %912, ptr %memberidx3.i.i431, align 4
  store i64 26, ptr %906, align 4
  %memberidx1.i432 = getelementptr inbounds %Token, ptr %906, i64 0, i32 1
  store ptr %907, ptr %memberidx1.i432, align 8
  br label %common.ret

if.entry54:                                       ; preds = %ifend11
  %913 = tail call ptr @malloc(i32 16)
  %914 = tail call ptr @malloc(i32 32)
  %memberidx.i433 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %915 = load i64, ptr %memberidx.i433, align 4
  %916 = add i64 %915, 1
  %memberidx2.i434 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %917 = load i64, ptr %memberidx2.i434, align 4
  %918 = add i64 %917, -1
  %memberidx3.i435 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %919 = load i64, ptr %memberidx3.i435, align 4
  store i64 %915, ptr %914, align 4
  %memberidx1.i.i436 = getelementptr inbounds %FloRange, ptr %914, i64 0, i32 1
  store i64 %916, ptr %memberidx1.i.i436, align 4
  %memberidx2.i.i437 = getelementptr inbounds %FloRange, ptr %914, i64 0, i32 2
  store i64 %918, ptr %memberidx2.i.i437, align 4
  %memberidx3.i.i438 = getelementptr inbounds %FloRange, ptr %914, i64 0, i32 3
  store i64 %919, ptr %memberidx3.i.i438, align 4
  store i64 27, ptr %913, align 4
  %memberidx1.i439 = getelementptr inbounds %Token, ptr %913, i64 0, i32 1
  store ptr %914, ptr %memberidx1.i439, align 8
  br label %common.ret

if.entry57:                                       ; preds = %ifend11
  %920 = tail call ptr @malloc(i32 16)
  %921 = tail call ptr @malloc(i32 32)
  %memberidx.i440 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %922 = load i64, ptr %memberidx.i440, align 4
  %923 = add i64 %922, 1
  %memberidx2.i441 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %924 = load i64, ptr %memberidx2.i441, align 4
  %925 = add i64 %924, -1
  %memberidx3.i442 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %926 = load i64, ptr %memberidx3.i442, align 4
  store i64 %922, ptr %921, align 4
  %memberidx1.i.i443 = getelementptr inbounds %FloRange, ptr %921, i64 0, i32 1
  store i64 %923, ptr %memberidx1.i.i443, align 4
  %memberidx2.i.i444 = getelementptr inbounds %FloRange, ptr %921, i64 0, i32 2
  store i64 %925, ptr %memberidx2.i.i444, align 4
  %memberidx3.i.i445 = getelementptr inbounds %FloRange, ptr %921, i64 0, i32 3
  store i64 %926, ptr %memberidx3.i.i445, align 4
  store i64 28, ptr %920, align 4
  %memberidx1.i446 = getelementptr inbounds %Token, ptr %920, i64 0, i32 1
  store ptr %921, ptr %memberidx1.i446, align 8
  br label %common.ret

if.entry60:                                       ; preds = %ifend11, %ifend11
  %927 = tail call ptr @malloc(i32 16)
  %928 = tail call ptr @malloc(i32 32)
  %memberidx.i447 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %929 = load i64, ptr %memberidx.i447, align 4
  %930 = add i64 %929, 1
  %memberidx2.i448 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %931 = load i64, ptr %memberidx2.i448, align 4
  %932 = add i64 %931, -1
  %memberidx3.i449 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %933 = load i64, ptr %memberidx3.i449, align 4
  store i64 %929, ptr %928, align 4
  %memberidx1.i.i450 = getelementptr inbounds %FloRange, ptr %928, i64 0, i32 1
  store i64 %930, ptr %memberidx1.i.i450, align 4
  %memberidx2.i.i451 = getelementptr inbounds %FloRange, ptr %928, i64 0, i32 2
  store i64 %932, ptr %memberidx2.i.i451, align 4
  %memberidx3.i.i452 = getelementptr inbounds %FloRange, ptr %928, i64 0, i32 3
  store i64 %933, ptr %memberidx3.i.i452, align 4
  store i64 31, ptr %927, align 4
  %memberidx1.i453 = getelementptr inbounds %Token, ptr %927, i64 0, i32 1
  store ptr %928, ptr %memberidx1.i453, align 8
  br label %common.ret

if.entry63:                                       ; preds = %ifend11
  %memberidx.i.i.i454 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %934 = load i64, ptr %memberidx.i.i.i454, align 4
  %memberidx1.i.i.i455 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %935 = load ptr, ptr %memberidx1.i.i.i455, align 8
  %memberidx2.i.i.i456 = getelementptr inbounds %string, ptr %935, i64 0, i32 2
  %936 = load i64, ptr %memberidx2.i.i.i456, align 4
  %.not822 = icmp slt i64 %934, %936
  br i1 %.not822, label %ifend.i.i460, label %ifend.i471

ifend.i.i460:                                     ; preds = %if.entry63
  %937 = load ptr, ptr %935, align 8
  %memberidx2.i.i458 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %937, i64 0, i32 2
  %938 = load ptr, ptr %memberidx2.i.i458, align 8
  %939 = add nsw i64 %934, 1
  store i64 %939, ptr %memberidx.i.i.i454, align 4
  %940 = tail call i8 %938(ptr nonnull %935, i64 %939)
  store i8 %940, ptr %0, align 1
  %941 = icmp eq i8 %940, 10
  %memberidx9.i.i461 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %941, label %if.entry6.i.i463, label %Lexer_advance.exit.i466

if.entry6.i.i463:                                 ; preds = %ifend.i.i460
  store i64 0, ptr %memberidx9.i.i461, align 4
  %memberidx10.i.i462 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %942 = load i64, ptr %memberidx10.i.i462, align 4
  %943 = add i64 %942, 1
  store i64 %943, ptr %memberidx10.i.i462, align 4
  br label %ifend.i471

Lexer_advance.exit.i466:                          ; preds = %ifend.i.i460
  %944 = load i64, ptr %memberidx9.i.i461, align 4
  %945 = add i64 %944, 1
  store i64 %945, ptr %memberidx9.i.i461, align 4
  %946 = icmp eq i8 %940, 92
  br i1 %946, label %if.entry.i467, label %ifend.i471

if.entry.i467:                                    ; preds = %Lexer_advance.exit.i466
  %947 = load i64, ptr %memberidx.i.i.i454, align 4
  %948 = load ptr, ptr %memberidx1.i.i.i455, align 8
  %memberidx2.i.i12.i = getelementptr inbounds %string, ptr %948, i64 0, i32 2
  %949 = load i64, ptr %memberidx2.i.i12.i, align 4
  %.not824 = icmp slt i64 %947, %949
  br i1 %.not824, label %ifend.i16.i, label %ifend27.i.i

ifend.i16.i:                                      ; preds = %if.entry.i467
  %950 = load ptr, ptr %948, align 8
  %memberidx2.i14.i468 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %950, i64 0, i32 2
  %951 = load ptr, ptr %memberidx2.i14.i468, align 8
  %952 = add nsw i64 %947, 1
  store i64 %952, ptr %memberidx.i.i.i454, align 4
  %953 = tail call i8 %951(ptr nonnull %948, i64 %952)
  store i8 %953, ptr %0, align 1
  %954 = icmp eq i8 %953, 10
  %memberidx9.i17.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %954, label %if.entry6.i19.i, label %Lexer_advance.exit22.i

if.entry6.i19.i:                                  ; preds = %ifend.i16.i
  store i64 0, ptr %memberidx9.i17.i, align 4
  %memberidx10.i18.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %955 = load i64, ptr %memberidx10.i18.i, align 4
  %956 = add i64 %955, 1
  store i64 %956, ptr %memberidx10.i18.i, align 4
  br label %ifend27.i.i

Lexer_advance.exit22.i:                           ; preds = %ifend.i16.i
  %957 = load i64, ptr %memberidx9.i17.i, align 4
  %958 = add i64 %957, 1
  store i64 %958, ptr %memberidx9.i17.i, align 4
  switch i8 %953, label %ifend27.i.i [
    i8 97, label %ifend.i471
    i8 98, label %get_escape_char.exit.i.fold.split
    i8 116, label %get_escape_char.exit.i.fold.split855
    i8 102, label %get_escape_char.exit.i.fold.split856
    i8 110, label %get_escape_char.exit.i.fold.split857
    i8 114, label %get_escape_char.exit.i.fold.split858
    i8 118, label %get_escape_char.exit.i.fold.split859
    i8 48, label %get_escape_char.exit.i.fold.split860
    i8 39, label %get_escape_char.exit.i.fold.split861
    i8 34, label %get_escape_char.exit.i.fold.split862
  ]

ifend27.i.i:                                      ; preds = %if.entry.i467, %if.entry6.i19.i, %Lexer_advance.exit22.i
  %959 = phi i8 [ %953, %Lexer_advance.exit22.i ], [ 92, %if.entry.i467 ], [ 10, %if.entry6.i19.i ]
  br label %ifend.i471

get_escape_char.exit.i.fold.split:                ; preds = %Lexer_advance.exit22.i
  br label %ifend.i471

get_escape_char.exit.i.fold.split855:             ; preds = %Lexer_advance.exit22.i
  br label %ifend.i471

get_escape_char.exit.i.fold.split856:             ; preds = %Lexer_advance.exit22.i
  br label %ifend.i471

get_escape_char.exit.i.fold.split857:             ; preds = %Lexer_advance.exit22.i
  br label %ifend.i471

get_escape_char.exit.i.fold.split858:             ; preds = %Lexer_advance.exit22.i
  br label %ifend.i471

get_escape_char.exit.i.fold.split859:             ; preds = %Lexer_advance.exit22.i
  br label %ifend.i471

get_escape_char.exit.i.fold.split860:             ; preds = %Lexer_advance.exit22.i
  br label %ifend.i471

get_escape_char.exit.i.fold.split861:             ; preds = %Lexer_advance.exit22.i
  br label %ifend.i471

get_escape_char.exit.i.fold.split862:             ; preds = %Lexer_advance.exit22.i
  br label %ifend.i471

ifend.i471:                                       ; preds = %if.entry63, %if.entry6.i.i463, %ifend27.i.i, %get_escape_char.exit.i.fold.split, %get_escape_char.exit.i.fold.split855, %get_escape_char.exit.i.fold.split856, %get_escape_char.exit.i.fold.split857, %get_escape_char.exit.i.fold.split858, %get_escape_char.exit.i.fold.split859, %get_escape_char.exit.i.fold.split860, %get_escape_char.exit.i.fold.split861, %get_escape_char.exit.i.fold.split862, %Lexer_advance.exit22.i, %Lexer_advance.exit.i466
  %length.0.i = phi i64 [ 3, %Lexer_advance.exit.i466 ], [ 5, %Lexer_advance.exit22.i ], [ 5, %get_escape_char.exit.i.fold.split862 ], [ 5, %get_escape_char.exit.i.fold.split861 ], [ 5, %get_escape_char.exit.i.fold.split860 ], [ 5, %get_escape_char.exit.i.fold.split859 ], [ 5, %get_escape_char.exit.i.fold.split858 ], [ 5, %get_escape_char.exit.i.fold.split857 ], [ 5, %get_escape_char.exit.i.fold.split856 ], [ 5, %get_escape_char.exit.i.fold.split855 ], [ 5, %get_escape_char.exit.i.fold.split ], [ 5, %ifend27.i.i ], [ 3, %if.entry6.i.i463 ], [ 3, %if.entry63 ]
  %value.0.i = phi i8 [ %940, %Lexer_advance.exit.i466 ], [ 7, %Lexer_advance.exit22.i ], [ %953, %get_escape_char.exit.i.fold.split862 ], [ %953, %get_escape_char.exit.i.fold.split861 ], [ 0, %get_escape_char.exit.i.fold.split860 ], [ 11, %get_escape_char.exit.i.fold.split859 ], [ 13, %get_escape_char.exit.i.fold.split858 ], [ 10, %get_escape_char.exit.i.fold.split857 ], [ 12, %get_escape_char.exit.i.fold.split856 ], [ 9, %get_escape_char.exit.i.fold.split855 ], [ 8, %get_escape_char.exit.i.fold.split ], [ %959, %ifend27.i.i ], [ 10, %if.entry6.i.i463 ], [ 39, %if.entry63 ]
  %960 = load i64, ptr %memberidx.i.i.i454, align 4
  %961 = load ptr, ptr %memberidx1.i.i.i455, align 8
  %memberidx2.i.i32.i = getelementptr inbounds %string, ptr %961, i64 0, i32 2
  %962 = load i64, ptr %memberidx2.i.i32.i, align 4
  %.not823 = icmp slt i64 %960, %962
  br i1 %.not823, label %ifend.i36.i, label %Lexer_char_token.exit

ifend.i36.i:                                      ; preds = %ifend.i471
  %963 = load ptr, ptr %961, align 8
  %memberidx2.i34.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %963, i64 0, i32 2
  %964 = load ptr, ptr %memberidx2.i34.i, align 8
  %965 = add nsw i64 %960, 1
  store i64 %965, ptr %memberidx.i.i.i454, align 4
  %966 = tail call i8 %964(ptr nonnull %961, i64 %965)
  store i8 %966, ptr %0, align 1
  %967 = icmp eq i8 %966, 10
  %memberidx9.i37.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %967, label %if.entry6.i39.i, label %Lexer_char_token.exit.sink.split

if.entry6.i39.i:                                  ; preds = %ifend.i36.i
  store i64 0, ptr %memberidx9.i37.i, align 4
  %memberidx10.i38.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_char_token.exit.sink.split

Lexer_char_token.exit.sink.split:                 ; preds = %ifend.i36.i, %if.entry6.i39.i
  %memberidx10.i38.i.sink1014 = phi ptr [ %memberidx10.i38.i, %if.entry6.i39.i ], [ %memberidx9.i37.i, %ifend.i36.i ]
  %968 = load i64, ptr %memberidx10.i38.i.sink1014, align 4
  %969 = add i64 %968, 1
  store i64 %969, ptr %memberidx10.i38.i.sink1014, align 4
  br label %Lexer_char_token.exit

Lexer_char_token.exit:                            ; preds = %Lexer_char_token.exit.sink.split, %ifend.i471
  %970 = tail call ptr @malloc(i32 17)
  %971 = tail call ptr @malloc(i32 32)
  %972 = load i64, ptr %memberidx.i.i.i454, align 4
  %973 = sub nsw i64 1, %length.0.i
  %974 = add i64 %973, %972
  %975 = add i64 %972, 1
  %memberidx2.i26.i473 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %976 = load i64, ptr %memberidx2.i26.i473, align 4
  %977 = sub i64 %976, %length.0.i
  %memberidx3.i27.i474 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %978 = load i64, ptr %memberidx3.i27.i474, align 4
  store i64 %974, ptr %971, align 4
  %memberidx1.i.i28.i475 = getelementptr inbounds %FloRange, ptr %971, i64 0, i32 1
  store i64 %975, ptr %memberidx1.i.i28.i475, align 4
  %memberidx2.i.i29.i476 = getelementptr inbounds %FloRange, ptr %971, i64 0, i32 2
  store i64 %977, ptr %memberidx2.i.i29.i476, align 4
  %memberidx3.i.i.i477 = getelementptr inbounds %FloRange, ptr %971, i64 0, i32 3
  store i64 %978, ptr %memberidx3.i.i.i477, align 4
  store i64 33, ptr %970, align 4
  %memberidx1.i.i24.i = getelementptr inbounds %Token, ptr %970, i64 0, i32 1
  store ptr %971, ptr %memberidx1.i.i24.i, align 8
  %memberidx.i.i478 = getelementptr inbounds %CharToken, ptr %970, i64 0, i32 2
  store i8 %value.0.i, ptr %memberidx.i.i478, align 1
  br label %common.ret

if.entry66:                                       ; preds = %ifend11
  %979 = tail call ptr @malloc(i32 16)
  %980 = tail call ptr @malloc(i32 32)
  %memberidx.i479 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %981 = load i64, ptr %memberidx.i479, align 4
  %982 = add i64 %981, 1
  %memberidx2.i480 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %983 = load i64, ptr %memberidx2.i480, align 4
  %984 = add i64 %983, -1
  %memberidx3.i481 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %985 = load i64, ptr %memberidx3.i481, align 4
  store i64 %981, ptr %980, align 4
  %memberidx1.i.i482 = getelementptr inbounds %FloRange, ptr %980, i64 0, i32 1
  store i64 %982, ptr %memberidx1.i.i482, align 4
  %memberidx2.i.i483 = getelementptr inbounds %FloRange, ptr %980, i64 0, i32 2
  store i64 %984, ptr %memberidx2.i.i483, align 4
  %memberidx3.i.i484 = getelementptr inbounds %FloRange, ptr %980, i64 0, i32 3
  store i64 %985, ptr %memberidx3.i.i484, align 4
  store i64 34, ptr %979, align 4
  %memberidx1.i485 = getelementptr inbounds %Token, ptr %979, i64 0, i32 1
  store ptr %980, ptr %memberidx1.i485, align 8
  br label %common.ret

if.entry69:                                       ; preds = %ifend11
  %986 = tail call ptr @malloc(i32 16)
  %987 = tail call ptr @malloc(i32 32)
  %memberidx.i486 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %988 = load i64, ptr %memberidx.i486, align 4
  %989 = add i64 %988, 1
  %memberidx2.i487 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %990 = load i64, ptr %memberidx2.i487, align 4
  %991 = add i64 %990, -1
  %memberidx3.i488 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %992 = load i64, ptr %memberidx3.i488, align 4
  store i64 %988, ptr %987, align 4
  %memberidx1.i.i489 = getelementptr inbounds %FloRange, ptr %987, i64 0, i32 1
  store i64 %989, ptr %memberidx1.i.i489, align 4
  %memberidx2.i.i490 = getelementptr inbounds %FloRange, ptr %987, i64 0, i32 2
  store i64 %991, ptr %memberidx2.i.i490, align 4
  %memberidx3.i.i491 = getelementptr inbounds %FloRange, ptr %987, i64 0, i32 3
  store i64 %992, ptr %memberidx3.i.i491, align 4
  store i64 35, ptr %986, align 4
  %memberidx1.i492 = getelementptr inbounds %Token, ptr %986, i64 0, i32 1
  store ptr %987, ptr %memberidx1.i492, align 8
  br label %common.ret

if.entry72:                                       ; preds = %ifend11
  %memberidx.i.i493 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %993 = load i64, ptr %memberidx.i.i493, align 4
  %994 = add i64 %993, 1
  %memberidx1.i.i494 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %995 = load ptr, ptr %memberidx1.i.i494, align 8
  %memberidx2.i.i495 = getelementptr inbounds %string, ptr %995, i64 0, i32 2
  %996 = load i64, ptr %memberidx2.i.i495, align 4
  %997 = icmp slt i64 %994, %996
  br i1 %997, label %if.entry.i.i497, label %ifend.i529

if.entry.i.i497:                                  ; preds = %if.entry72
  %998 = load ptr, ptr %995, align 8
  %memberidx4.i.i496 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %998, i64 0, i32 2
  %999 = load ptr, ptr %memberidx4.i.i496, align 8
  %1000 = tail call i8 %999(ptr nonnull %995, i64 %994)
  %phi.cmp820 = icmp eq i8 %1000, 61
  br i1 %phi.cmp820, label %if.entry.i504, label %ifend.i529

if.entry.i504:                                    ; preds = %if.entry.i.i497
  %1001 = load i64, ptr %memberidx.i.i493, align 4
  %1002 = load ptr, ptr %memberidx1.i.i494, align 8
  %memberidx2.i.i.i503 = getelementptr inbounds %string, ptr %1002, i64 0, i32 2
  %1003 = load i64, ptr %memberidx2.i.i.i503, align 4
  %.not821 = icmp slt i64 %1001, %1003
  br i1 %.not821, label %ifend.i.i508, label %Lexer_advance.exit.i521

ifend.i.i508:                                     ; preds = %if.entry.i504
  %1004 = load ptr, ptr %1002, align 8
  %memberidx2.i5.i506 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1004, i64 0, i32 2
  %1005 = load ptr, ptr %memberidx2.i5.i506, align 8
  %1006 = add nsw i64 %1001, 1
  store i64 %1006, ptr %memberidx.i.i493, align 4
  %1007 = tail call i8 %1005(ptr nonnull %1002, i64 %1006)
  store i8 %1007, ptr %0, align 1
  %1008 = icmp eq i8 %1007, 10
  %memberidx9.i.i509 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1008, label %if.entry6.i.i511, label %Lexer_advance.exit.i521.sink.split

if.entry6.i.i511:                                 ; preds = %ifend.i.i508
  store i64 0, ptr %memberidx9.i.i509, align 4
  %memberidx10.i.i510 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i521.sink.split

Lexer_advance.exit.i521.sink.split:               ; preds = %ifend.i.i508, %if.entry6.i.i511
  %memberidx9.i.i509.sink1016 = phi ptr [ %memberidx10.i.i510, %if.entry6.i.i511 ], [ %memberidx9.i.i509, %ifend.i.i508 ]
  %1009 = load i64, ptr %memberidx9.i.i509.sink1016, align 4
  %1010 = add i64 %1009, 1
  store i64 %1010, ptr %memberidx9.i.i509.sink1016, align 4
  br label %Lexer_advance.exit.i521

Lexer_advance.exit.i521:                          ; preds = %Lexer_advance.exit.i521.sink.split, %if.entry.i504
  %1011 = tail call ptr @malloc(i32 16)
  %1012 = tail call ptr @malloc(i32 32)
  %1013 = load i64, ptr %memberidx.i.i493, align 4
  %1014 = add i64 %1013, -1
  %1015 = add i64 %1013, 1
  %memberidx2.i7.i515 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1016 = load i64, ptr %memberidx2.i7.i515, align 4
  %1017 = add i64 %1016, -2
  %memberidx3.i8.i516 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1018 = load i64, ptr %memberidx3.i8.i516, align 4
  store i64 %1014, ptr %1012, align 4
  %memberidx1.i.i9.i517 = getelementptr inbounds %FloRange, ptr %1012, i64 0, i32 1
  store i64 %1015, ptr %memberidx1.i.i9.i517, align 4
  %memberidx2.i.i10.i518 = getelementptr inbounds %FloRange, ptr %1012, i64 0, i32 2
  store i64 %1017, ptr %memberidx2.i.i10.i518, align 4
  %memberidx3.i.i.i519 = getelementptr inbounds %FloRange, ptr %1012, i64 0, i32 3
  store i64 %1018, ptr %memberidx3.i.i.i519, align 4
  store i64 37, ptr %1011, align 4
  %memberidx1.i11.i520 = getelementptr inbounds %Token, ptr %1011, i64 0, i32 1
  store ptr %1012, ptr %memberidx1.i11.i520, align 8
  br label %common.ret

ifend.i529:                                       ; preds = %if.entry72, %if.entry.i.i497
  %1019 = tail call ptr @malloc(i32 16)
  %1020 = tail call ptr @malloc(i32 32)
  %1021 = load i64, ptr %memberidx.i.i493, align 4
  %1022 = add i64 %1021, 1
  %memberidx2.i14.i523 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1023 = load i64, ptr %memberidx2.i14.i523, align 4
  %1024 = add i64 %1023, -1
  %memberidx3.i15.i524 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1025 = load i64, ptr %memberidx3.i15.i524, align 4
  store i64 %1021, ptr %1020, align 4
  %memberidx1.i.i16.i525 = getelementptr inbounds %FloRange, ptr %1020, i64 0, i32 1
  store i64 %1022, ptr %memberidx1.i.i16.i525, align 4
  %memberidx2.i.i17.i526 = getelementptr inbounds %FloRange, ptr %1020, i64 0, i32 2
  store i64 %1024, ptr %memberidx2.i.i17.i526, align 4
  %memberidx3.i.i18.i527 = getelementptr inbounds %FloRange, ptr %1020, i64 0, i32 3
  store i64 %1025, ptr %memberidx3.i.i18.i527, align 4
  store i64 36, ptr %1019, align 4
  %memberidx1.i12.i528 = getelementptr inbounds %Token, ptr %1019, i64 0, i32 1
  store ptr %1020, ptr %memberidx1.i12.i528, align 8
  br label %common.ret

if.entry75:                                       ; preds = %ifend11
  %memberidx.i.i530 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1026 = load i64, ptr %memberidx.i.i530, align 4
  %1027 = add i64 %1026, 1
  %memberidx1.i.i531 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1028 = load ptr, ptr %memberidx1.i.i531, align 8
  %memberidx2.i.i532 = getelementptr inbounds %string, ptr %1028, i64 0, i32 2
  %1029 = load i64, ptr %memberidx2.i.i532, align 4
  %1030 = icmp slt i64 %1027, %1029
  br i1 %1030, label %if.entry.i.i534, label %ifend.i566

if.entry.i.i534:                                  ; preds = %if.entry75
  %1031 = load ptr, ptr %1028, align 8
  %memberidx4.i.i533 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1031, i64 0, i32 2
  %1032 = load ptr, ptr %memberidx4.i.i533, align 8
  %1033 = tail call i8 %1032(ptr nonnull %1028, i64 %1027)
  %phi.cmp818 = icmp eq i8 %1033, 61
  br i1 %phi.cmp818, label %if.entry.i541, label %ifend.i566

if.entry.i541:                                    ; preds = %if.entry.i.i534
  %1034 = load i64, ptr %memberidx.i.i530, align 4
  %1035 = load ptr, ptr %memberidx1.i.i531, align 8
  %memberidx2.i.i.i540 = getelementptr inbounds %string, ptr %1035, i64 0, i32 2
  %1036 = load i64, ptr %memberidx2.i.i.i540, align 4
  %.not819 = icmp slt i64 %1034, %1036
  br i1 %.not819, label %ifend.i.i545, label %Lexer_advance.exit.i558

ifend.i.i545:                                     ; preds = %if.entry.i541
  %1037 = load ptr, ptr %1035, align 8
  %memberidx2.i5.i543 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1037, i64 0, i32 2
  %1038 = load ptr, ptr %memberidx2.i5.i543, align 8
  %1039 = add nsw i64 %1034, 1
  store i64 %1039, ptr %memberidx.i.i530, align 4
  %1040 = tail call i8 %1038(ptr nonnull %1035, i64 %1039)
  store i8 %1040, ptr %0, align 1
  %1041 = icmp eq i8 %1040, 10
  %memberidx9.i.i546 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1041, label %if.entry6.i.i548, label %Lexer_advance.exit.i558.sink.split

if.entry6.i.i548:                                 ; preds = %ifend.i.i545
  store i64 0, ptr %memberidx9.i.i546, align 4
  %memberidx10.i.i547 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i558.sink.split

Lexer_advance.exit.i558.sink.split:               ; preds = %ifend.i.i545, %if.entry6.i.i548
  %memberidx9.i.i546.sink1018 = phi ptr [ %memberidx10.i.i547, %if.entry6.i.i548 ], [ %memberidx9.i.i546, %ifend.i.i545 ]
  %1042 = load i64, ptr %memberidx9.i.i546.sink1018, align 4
  %1043 = add i64 %1042, 1
  store i64 %1043, ptr %memberidx9.i.i546.sink1018, align 4
  br label %Lexer_advance.exit.i558

Lexer_advance.exit.i558:                          ; preds = %Lexer_advance.exit.i558.sink.split, %if.entry.i541
  %1044 = tail call ptr @malloc(i32 16)
  %1045 = tail call ptr @malloc(i32 32)
  %1046 = load i64, ptr %memberidx.i.i530, align 4
  %1047 = add i64 %1046, -1
  %1048 = add i64 %1046, 1
  %memberidx2.i7.i552 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1049 = load i64, ptr %memberidx2.i7.i552, align 4
  %1050 = add i64 %1049, -2
  %memberidx3.i8.i553 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1051 = load i64, ptr %memberidx3.i8.i553, align 4
  store i64 %1047, ptr %1045, align 4
  %memberidx1.i.i9.i554 = getelementptr inbounds %FloRange, ptr %1045, i64 0, i32 1
  store i64 %1048, ptr %memberidx1.i.i9.i554, align 4
  %memberidx2.i.i10.i555 = getelementptr inbounds %FloRange, ptr %1045, i64 0, i32 2
  store i64 %1050, ptr %memberidx2.i.i10.i555, align 4
  %memberidx3.i.i.i556 = getelementptr inbounds %FloRange, ptr %1045, i64 0, i32 3
  store i64 %1051, ptr %memberidx3.i.i.i556, align 4
  store i64 38, ptr %1044, align 4
  %memberidx1.i11.i557 = getelementptr inbounds %Token, ptr %1044, i64 0, i32 1
  store ptr %1045, ptr %memberidx1.i11.i557, align 8
  br label %common.ret

ifend.i566:                                       ; preds = %if.entry75, %if.entry.i.i534
  %1052 = tail call ptr @malloc(i32 16)
  %1053 = tail call ptr @malloc(i32 32)
  %1054 = load i64, ptr %memberidx.i.i530, align 4
  %1055 = add i64 %1054, 1
  %memberidx2.i14.i560 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1056 = load i64, ptr %memberidx2.i14.i560, align 4
  %1057 = add i64 %1056, -1
  %memberidx3.i15.i561 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1058 = load i64, ptr %memberidx3.i15.i561, align 4
  store i64 %1054, ptr %1053, align 4
  %memberidx1.i.i16.i562 = getelementptr inbounds %FloRange, ptr %1053, i64 0, i32 1
  store i64 %1055, ptr %memberidx1.i.i16.i562, align 4
  %memberidx2.i.i17.i563 = getelementptr inbounds %FloRange, ptr %1053, i64 0, i32 2
  store i64 %1057, ptr %memberidx2.i.i17.i563, align 4
  %memberidx3.i.i18.i564 = getelementptr inbounds %FloRange, ptr %1053, i64 0, i32 3
  store i64 %1058, ptr %memberidx3.i.i18.i564, align 4
  store i64 45, ptr %1052, align 4
  %memberidx1.i12.i565 = getelementptr inbounds %Token, ptr %1052, i64 0, i32 1
  store ptr %1053, ptr %memberidx1.i12.i565, align 8
  br label %common.ret

if.entry78:                                       ; preds = %ifend11
  %memberidx.i.i567 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1059 = load i64, ptr %memberidx.i.i567, align 4
  %1060 = add i64 %1059, 1
  %memberidx1.i.i568 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1061 = load ptr, ptr %memberidx1.i.i568, align 8
  %memberidx2.i.i569 = getelementptr inbounds %string, ptr %1061, i64 0, i32 2
  %1062 = load i64, ptr %memberidx2.i.i569, align 4
  %1063 = icmp slt i64 %1060, %1062
  br i1 %1063, label %if.entry.i.i571, label %else.i599

if.entry.i.i571:                                  ; preds = %if.entry78
  %1064 = load ptr, ptr %1061, align 8
  %memberidx4.i.i570 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1064, i64 0, i32 2
  %1065 = load ptr, ptr %memberidx4.i.i570, align 8
  %1066 = tail call i8 %1065(ptr nonnull %1061, i64 %1060)
  %phi.cmp812 = icmp eq i8 %1066, 61
  %1067 = load i64, ptr %memberidx.i.i567, align 4
  %1068 = load ptr, ptr %memberidx1.i.i568, align 8
  %memberidx2.i.i.i577 = getelementptr inbounds %string, ptr %1068, i64 0, i32 2
  %1069 = load i64, ptr %memberidx2.i.i.i577, align 4
  br i1 %phi.cmp812, label %if.entry.i578, label %if.entry.i.i571.else.i599_crit_edge

if.entry.i.i571.else.i599_crit_edge:              ; preds = %if.entry.i.i571
  %.pre970 = add i64 %1067, 1
  br label %else.i599

if.entry.i578:                                    ; preds = %if.entry.i.i571
  %.not817 = icmp slt i64 %1067, %1069
  br i1 %.not817, label %ifend.i.i582, label %Lexer_advance.exit.i595

ifend.i.i582:                                     ; preds = %if.entry.i578
  %1070 = load ptr, ptr %1068, align 8
  %memberidx2.i17.i580 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1070, i64 0, i32 2
  %1071 = load ptr, ptr %memberidx2.i17.i580, align 8
  %1072 = add nsw i64 %1067, 1
  store i64 %1072, ptr %memberidx.i.i567, align 4
  %1073 = tail call i8 %1071(ptr nonnull %1068, i64 %1072)
  store i8 %1073, ptr %0, align 1
  %1074 = icmp eq i8 %1073, 10
  %memberidx9.i.i583 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1074, label %if.entry6.i.i585, label %Lexer_advance.exit.i595.sink.split

if.entry6.i.i585:                                 ; preds = %ifend.i.i582
  store i64 0, ptr %memberidx9.i.i583, align 4
  %memberidx10.i.i584 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i595.sink.split

Lexer_advance.exit.i595.sink.split:               ; preds = %ifend.i.i582, %if.entry6.i.i585
  %memberidx9.i.i583.sink1020 = phi ptr [ %memberidx10.i.i584, %if.entry6.i.i585 ], [ %memberidx9.i.i583, %ifend.i.i582 ]
  %1075 = load i64, ptr %memberidx9.i.i583.sink1020, align 4
  %1076 = add i64 %1075, 1
  store i64 %1076, ptr %memberidx9.i.i583.sink1020, align 4
  br label %Lexer_advance.exit.i595

Lexer_advance.exit.i595:                          ; preds = %Lexer_advance.exit.i595.sink.split, %if.entry.i578
  %1077 = tail call ptr @malloc(i32 16)
  %1078 = tail call ptr @malloc(i32 32)
  %1079 = load i64, ptr %memberidx.i.i567, align 4
  %1080 = add i64 %1079, -1
  %1081 = add i64 %1079, 1
  %memberidx2.i19.i589 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1082 = load i64, ptr %memberidx2.i19.i589, align 4
  %1083 = add i64 %1082, -2
  %memberidx3.i20.i590 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1084 = load i64, ptr %memberidx3.i20.i590, align 4
  store i64 %1080, ptr %1078, align 4
  %memberidx1.i.i21.i591 = getelementptr inbounds %FloRange, ptr %1078, i64 0, i32 1
  store i64 %1081, ptr %memberidx1.i.i21.i591, align 4
  %memberidx2.i.i22.i592 = getelementptr inbounds %FloRange, ptr %1078, i64 0, i32 2
  store i64 %1083, ptr %memberidx2.i.i22.i592, align 4
  %memberidx3.i.i.i593 = getelementptr inbounds %FloRange, ptr %1078, i64 0, i32 3
  store i64 %1084, ptr %memberidx3.i.i.i593, align 4
  store i64 42, ptr %1077, align 4
  %memberidx1.i23.i594 = getelementptr inbounds %Token, ptr %1077, i64 0, i32 1
  store ptr %1078, ptr %memberidx1.i23.i594, align 8
  br label %common.ret

else.i599:                                        ; preds = %if.entry.i.i571.else.i599_crit_edge, %if.entry78
  %.pre-phi971 = phi i64 [ %.pre970, %if.entry.i.i571.else.i599_crit_edge ], [ %1060, %if.entry78 ]
  %1085 = phi i64 [ %1069, %if.entry.i.i571.else.i599_crit_edge ], [ %1062, %if.entry78 ]
  %1086 = phi ptr [ %1068, %if.entry.i.i571.else.i599_crit_edge ], [ %1061, %if.entry78 ]
  %1087 = icmp slt i64 %.pre-phi971, %1085
  br i1 %1087, label %if.entry.i36.i601, label %ifend3.i619

if.entry.i36.i601:                                ; preds = %else.i599
  %1088 = load ptr, ptr %1086, align 8
  %memberidx4.i35.i600 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1088, i64 0, i32 2
  %1089 = load ptr, ptr %memberidx4.i35.i600, align 8
  %1090 = tail call i8 %1089(ptr nonnull %1086, i64 %.pre-phi971)
  %phi.cmp813 = icmp eq i8 %1090, 62
  br i1 %phi.cmp813, label %if.entry1.i607, label %ifend3.i619

if.entry1.i607:                                   ; preds = %if.entry.i36.i601
  %1091 = load i64, ptr %memberidx.i.i567, align 4
  %1092 = load ptr, ptr %memberidx1.i.i568, align 8
  %memberidx2.i.i40.i606 = getelementptr inbounds %string, ptr %1092, i64 0, i32 2
  %1093 = load i64, ptr %memberidx2.i.i40.i606, align 4
  %.not814 = icmp slt i64 %1091, %1093
  br i1 %.not814, label %ifend.i44.i611, label %Lexer_advance.exit50.i618

ifend.i44.i611:                                   ; preds = %if.entry1.i607
  %1094 = load ptr, ptr %1092, align 8
  %memberidx2.i42.i609 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1094, i64 0, i32 2
  %1095 = load ptr, ptr %memberidx2.i42.i609, align 8
  %1096 = add nsw i64 %1091, 1
  store i64 %1096, ptr %memberidx.i.i567, align 4
  %1097 = tail call i8 %1095(ptr nonnull %1092, i64 %1096)
  store i8 %1097, ptr %0, align 1
  %1098 = icmp eq i8 %1097, 10
  %memberidx9.i45.i612 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1098, label %if.entry6.i47.i614, label %Lexer_advance.exit50.i618.sink.split

if.entry6.i47.i614:                               ; preds = %ifend.i44.i611
  store i64 0, ptr %memberidx9.i45.i612, align 4
  %memberidx10.i46.i613 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit50.i618.sink.split

Lexer_advance.exit50.i618.sink.split:             ; preds = %ifend.i44.i611, %if.entry6.i47.i614
  %memberidx9.i45.i612.sink1022 = phi ptr [ %memberidx10.i46.i613, %if.entry6.i47.i614 ], [ %memberidx9.i45.i612, %ifend.i44.i611 ]
  %1099 = load i64, ptr %memberidx9.i45.i612.sink1022, align 4
  %1100 = add i64 %1099, 1
  store i64 %1100, ptr %memberidx9.i45.i612.sink1022, align 4
  br label %Lexer_advance.exit50.i618

Lexer_advance.exit50.i618:                        ; preds = %Lexer_advance.exit50.i618.sink.split, %if.entry1.i607
  %1101 = load i64, ptr %memberidx.i.i567, align 4
  %1102 = add i64 %1101, 1
  %1103 = load ptr, ptr %memberidx1.i.i568, align 8
  %memberidx2.i53.i = getelementptr inbounds %string, ptr %1103, i64 0, i32 2
  %1104 = load i64, ptr %memberidx2.i53.i, align 4
  %1105 = icmp slt i64 %1102, %1104
  br i1 %1105, label %if.entry.i56.i, label %ifend6.i643

if.entry.i56.i:                                   ; preds = %Lexer_advance.exit50.i618
  %1106 = load ptr, ptr %1103, align 8
  %memberidx4.i55.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1106, i64 0, i32 2
  %1107 = load ptr, ptr %memberidx4.i55.i, align 8
  %1108 = tail call i8 %1107(ptr nonnull %1103, i64 %1102)
  %phi.cmp815 = icmp eq i8 %1108, 61
  br i1 %phi.cmp815, label %if.entry4.i623, label %ifend6.i643

ifend3.i619:                                      ; preds = %else.i599, %if.entry.i36.i601
  %1109 = tail call ptr @malloc(i32 16)
  %1110 = tail call ptr @malloc(i32 32)
  %1111 = load i64, ptr %memberidx.i.i567, align 4
  %1112 = add i64 %1111, 1
  %memberidx2.i59.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1113 = load i64, ptr %memberidx2.i59.i, align 4
  %1114 = add i64 %1113, -1
  %memberidx3.i60.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1115 = load i64, ptr %memberidx3.i60.i, align 4
  store i64 %1111, ptr %1110, align 4
  %memberidx1.i.i61.i = getelementptr inbounds %FloRange, ptr %1110, i64 0, i32 1
  store i64 %1112, ptr %memberidx1.i.i61.i, align 4
  %memberidx2.i.i62.i = getelementptr inbounds %FloRange, ptr %1110, i64 0, i32 2
  store i64 %1114, ptr %memberidx2.i.i62.i, align 4
  %memberidx3.i.i63.i = getelementptr inbounds %FloRange, ptr %1110, i64 0, i32 3
  store i64 %1115, ptr %memberidx3.i.i63.i, align 4
  store i64 39, ptr %1109, align 4
  %memberidx1.i64.i = getelementptr inbounds %Token, ptr %1109, i64 0, i32 1
  store ptr %1110, ptr %memberidx1.i64.i, align 8
  br label %common.ret

if.entry4.i623:                                   ; preds = %if.entry.i56.i
  %1116 = load i64, ptr %memberidx.i.i567, align 4
  %1117 = load ptr, ptr %memberidx1.i.i568, align 8
  %memberidx2.i.i74.i622 = getelementptr inbounds %string, ptr %1117, i64 0, i32 2
  %1118 = load i64, ptr %memberidx2.i.i74.i622, align 4
  %.not816 = icmp slt i64 %1116, %1118
  br i1 %.not816, label %ifend.i78.i627, label %Lexer_advance.exit84.i635

ifend.i78.i627:                                   ; preds = %if.entry4.i623
  %1119 = load ptr, ptr %1117, align 8
  %memberidx2.i76.i625 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1119, i64 0, i32 2
  %1120 = load ptr, ptr %memberidx2.i76.i625, align 8
  %1121 = add nsw i64 %1116, 1
  store i64 %1121, ptr %memberidx.i.i567, align 4
  %1122 = tail call i8 %1120(ptr nonnull %1117, i64 %1121)
  store i8 %1122, ptr %0, align 1
  %1123 = icmp eq i8 %1122, 10
  %memberidx9.i79.i628 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1123, label %if.entry6.i81.i630, label %Lexer_advance.exit84.i635.sink.split

if.entry6.i81.i630:                               ; preds = %ifend.i78.i627
  store i64 0, ptr %memberidx9.i79.i628, align 4
  %memberidx10.i80.i629 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit84.i635.sink.split

Lexer_advance.exit84.i635.sink.split:             ; preds = %ifend.i78.i627, %if.entry6.i81.i630
  %memberidx9.i79.i628.sink1024 = phi ptr [ %memberidx10.i80.i629, %if.entry6.i81.i630 ], [ %memberidx9.i79.i628, %ifend.i78.i627 ]
  %1124 = load i64, ptr %memberidx9.i79.i628.sink1024, align 4
  %1125 = add i64 %1124, 1
  store i64 %1125, ptr %memberidx9.i79.i628.sink1024, align 4
  br label %Lexer_advance.exit84.i635

Lexer_advance.exit84.i635:                        ; preds = %Lexer_advance.exit84.i635.sink.split, %if.entry4.i623
  %1126 = tail call ptr @malloc(i32 16)
  %1127 = tail call ptr @malloc(i32 32)
  %1128 = load i64, ptr %memberidx.i.i567, align 4
  %1129 = add i64 %1128, -2
  %1130 = add i64 %1128, 1
  %memberidx2.i67.i633 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1131 = load i64, ptr %memberidx2.i67.i633, align 4
  %1132 = add i64 %1131, -3
  %memberidx3.i68.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1133 = load i64, ptr %memberidx3.i68.i, align 4
  store i64 %1129, ptr %1127, align 4
  %memberidx1.i.i69.i = getelementptr inbounds %FloRange, ptr %1127, i64 0, i32 1
  store i64 %1130, ptr %memberidx1.i.i69.i, align 4
  %memberidx2.i.i70.i = getelementptr inbounds %FloRange, ptr %1127, i64 0, i32 2
  store i64 %1132, ptr %memberidx2.i.i70.i, align 4
  %memberidx3.i.i71.i = getelementptr inbounds %FloRange, ptr %1127, i64 0, i32 3
  store i64 %1133, ptr %memberidx3.i.i71.i, align 4
  store i64 19, ptr %1126, align 4
  %memberidx1.i65.i634 = getelementptr inbounds %Token, ptr %1126, i64 0, i32 1
  store ptr %1127, ptr %memberidx1.i65.i634, align 8
  br label %common.ret

ifend6.i643:                                      ; preds = %Lexer_advance.exit50.i618, %if.entry.i56.i
  %1134 = tail call ptr @malloc(i32 16)
  %1135 = tail call ptr @malloc(i32 32)
  %1136 = load i64, ptr %memberidx.i.i567, align 4
  %1137 = add i64 %1136, -1
  %1138 = add i64 %1136, 1
  %memberidx2.i26.i637 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1139 = load i64, ptr %memberidx2.i26.i637, align 4
  %1140 = add i64 %1139, -2
  %memberidx3.i27.i638 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1141 = load i64, ptr %memberidx3.i27.i638, align 4
  store i64 %1137, ptr %1135, align 4
  %memberidx1.i.i28.i639 = getelementptr inbounds %FloRange, ptr %1135, i64 0, i32 1
  store i64 %1138, ptr %memberidx1.i.i28.i639, align 4
  %memberidx2.i.i29.i640 = getelementptr inbounds %FloRange, ptr %1135, i64 0, i32 2
  store i64 %1140, ptr %memberidx2.i.i29.i640, align 4
  %memberidx3.i.i30.i641 = getelementptr inbounds %FloRange, ptr %1135, i64 0, i32 3
  store i64 %1141, ptr %memberidx3.i.i30.i641, align 4
  store i64 47, ptr %1134, align 4
  %memberidx1.i24.i642 = getelementptr inbounds %Token, ptr %1134, i64 0, i32 1
  store ptr %1135, ptr %memberidx1.i24.i642, align 8
  br label %common.ret

if.entry81:                                       ; preds = %ifend11
  %memberidx.i.i644 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1142 = load i64, ptr %memberidx.i.i644, align 4
  %1143 = add i64 %1142, 1
  %memberidx1.i.i645 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1144 = load ptr, ptr %memberidx1.i.i645, align 8
  %memberidx2.i.i646 = getelementptr inbounds %string, ptr %1144, i64 0, i32 2
  %1145 = load i64, ptr %memberidx2.i.i646, align 4
  %1146 = icmp slt i64 %1143, %1145
  br i1 %1146, label %if.entry.i.i648, label %else.i676

if.entry.i.i648:                                  ; preds = %if.entry81
  %1147 = load ptr, ptr %1144, align 8
  %memberidx4.i.i647 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1147, i64 0, i32 2
  %1148 = load ptr, ptr %memberidx4.i.i647, align 8
  %1149 = tail call i8 %1148(ptr nonnull %1144, i64 %1143)
  %phi.cmp806 = icmp eq i8 %1149, 61
  %1150 = load i64, ptr %memberidx.i.i644, align 4
  %1151 = load ptr, ptr %memberidx1.i.i645, align 8
  %memberidx2.i.i.i654 = getelementptr inbounds %string, ptr %1151, i64 0, i32 2
  %1152 = load i64, ptr %memberidx2.i.i.i654, align 4
  br i1 %phi.cmp806, label %if.entry.i655, label %if.entry.i.i648.else.i676_crit_edge

if.entry.i.i648.else.i676_crit_edge:              ; preds = %if.entry.i.i648
  %.pre972 = add i64 %1150, 1
  br label %else.i676

if.entry.i655:                                    ; preds = %if.entry.i.i648
  %.not811 = icmp slt i64 %1150, %1152
  br i1 %.not811, label %ifend.i.i659, label %Lexer_advance.exit.i672

ifend.i.i659:                                     ; preds = %if.entry.i655
  %1153 = load ptr, ptr %1151, align 8
  %memberidx2.i17.i657 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1153, i64 0, i32 2
  %1154 = load ptr, ptr %memberidx2.i17.i657, align 8
  %1155 = add nsw i64 %1150, 1
  store i64 %1155, ptr %memberidx.i.i644, align 4
  %1156 = tail call i8 %1154(ptr nonnull %1151, i64 %1155)
  store i8 %1156, ptr %0, align 1
  %1157 = icmp eq i8 %1156, 10
  %memberidx9.i.i660 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1157, label %if.entry6.i.i662, label %Lexer_advance.exit.i672.sink.split

if.entry6.i.i662:                                 ; preds = %ifend.i.i659
  store i64 0, ptr %memberidx9.i.i660, align 4
  %memberidx10.i.i661 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i672.sink.split

Lexer_advance.exit.i672.sink.split:               ; preds = %ifend.i.i659, %if.entry6.i.i662
  %memberidx9.i.i660.sink1026 = phi ptr [ %memberidx10.i.i661, %if.entry6.i.i662 ], [ %memberidx9.i.i660, %ifend.i.i659 ]
  %1158 = load i64, ptr %memberidx9.i.i660.sink1026, align 4
  %1159 = add i64 %1158, 1
  store i64 %1159, ptr %memberidx9.i.i660.sink1026, align 4
  br label %Lexer_advance.exit.i672

Lexer_advance.exit.i672:                          ; preds = %Lexer_advance.exit.i672.sink.split, %if.entry.i655
  %1160 = tail call ptr @malloc(i32 16)
  %1161 = tail call ptr @malloc(i32 32)
  %1162 = load i64, ptr %memberidx.i.i644, align 4
  %1163 = add i64 %1162, -1
  %1164 = add i64 %1162, 1
  %memberidx2.i19.i666 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1165 = load i64, ptr %memberidx2.i19.i666, align 4
  %1166 = add i64 %1165, -2
  %memberidx3.i20.i667 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1167 = load i64, ptr %memberidx3.i20.i667, align 4
  store i64 %1163, ptr %1161, align 4
  %memberidx1.i.i21.i668 = getelementptr inbounds %FloRange, ptr %1161, i64 0, i32 1
  store i64 %1164, ptr %memberidx1.i.i21.i668, align 4
  %memberidx2.i.i22.i669 = getelementptr inbounds %FloRange, ptr %1161, i64 0, i32 2
  store i64 %1166, ptr %memberidx2.i.i22.i669, align 4
  %memberidx3.i.i.i670 = getelementptr inbounds %FloRange, ptr %1161, i64 0, i32 3
  store i64 %1167, ptr %memberidx3.i.i.i670, align 4
  store i64 41, ptr %1160, align 4
  %memberidx1.i23.i671 = getelementptr inbounds %Token, ptr %1160, i64 0, i32 1
  store ptr %1161, ptr %memberidx1.i23.i671, align 8
  br label %common.ret

else.i676:                                        ; preds = %if.entry.i.i648.else.i676_crit_edge, %if.entry81
  %.pre-phi973 = phi i64 [ %.pre972, %if.entry.i.i648.else.i676_crit_edge ], [ %1143, %if.entry81 ]
  %1168 = phi i64 [ %1152, %if.entry.i.i648.else.i676_crit_edge ], [ %1145, %if.entry81 ]
  %1169 = phi ptr [ %1151, %if.entry.i.i648.else.i676_crit_edge ], [ %1144, %if.entry81 ]
  %1170 = icmp slt i64 %.pre-phi973, %1168
  br i1 %1170, label %if.entry.i36.i678, label %ifend3.i709

if.entry.i36.i678:                                ; preds = %else.i676
  %1171 = load ptr, ptr %1169, align 8
  %memberidx4.i35.i677 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1171, i64 0, i32 2
  %1172 = load ptr, ptr %memberidx4.i35.i677, align 8
  %1173 = tail call i8 %1172(ptr nonnull %1169, i64 %.pre-phi973)
  %phi.cmp807 = icmp eq i8 %1173, 60
  br i1 %phi.cmp807, label %if.entry1.i684, label %ifend3.i709

if.entry1.i684:                                   ; preds = %if.entry.i36.i678
  %1174 = load i64, ptr %memberidx.i.i644, align 4
  %1175 = load ptr, ptr %memberidx1.i.i645, align 8
  %memberidx2.i.i40.i683 = getelementptr inbounds %string, ptr %1175, i64 0, i32 2
  %1176 = load i64, ptr %memberidx2.i.i40.i683, align 4
  %.not808 = icmp slt i64 %1174, %1176
  br i1 %.not808, label %ifend.i44.i688, label %Lexer_advance.exit50.i697

ifend.i44.i688:                                   ; preds = %if.entry1.i684
  %1177 = load ptr, ptr %1175, align 8
  %memberidx2.i42.i686 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1177, i64 0, i32 2
  %1178 = load ptr, ptr %memberidx2.i42.i686, align 8
  %1179 = add nsw i64 %1174, 1
  store i64 %1179, ptr %memberidx.i.i644, align 4
  %1180 = tail call i8 %1178(ptr nonnull %1175, i64 %1179)
  store i8 %1180, ptr %0, align 1
  %1181 = icmp eq i8 %1180, 10
  %memberidx9.i45.i689 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1181, label %if.entry6.i47.i691, label %Lexer_advance.exit50.i697.sink.split

if.entry6.i47.i691:                               ; preds = %ifend.i44.i688
  store i64 0, ptr %memberidx9.i45.i689, align 4
  %memberidx10.i46.i690 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit50.i697.sink.split

Lexer_advance.exit50.i697.sink.split:             ; preds = %ifend.i44.i688, %if.entry6.i47.i691
  %memberidx9.i45.i689.sink1028 = phi ptr [ %memberidx10.i46.i690, %if.entry6.i47.i691 ], [ %memberidx9.i45.i689, %ifend.i44.i688 ]
  %1182 = load i64, ptr %memberidx9.i45.i689.sink1028, align 4
  %1183 = add i64 %1182, 1
  store i64 %1183, ptr %memberidx9.i45.i689.sink1028, align 4
  br label %Lexer_advance.exit50.i697

Lexer_advance.exit50.i697:                        ; preds = %Lexer_advance.exit50.i697.sink.split, %if.entry1.i684
  %1184 = load i64, ptr %memberidx.i.i644, align 4
  %1185 = add i64 %1184, 1
  %1186 = load ptr, ptr %memberidx1.i.i645, align 8
  %memberidx2.i53.i696 = getelementptr inbounds %string, ptr %1186, i64 0, i32 2
  %1187 = load i64, ptr %memberidx2.i53.i696, align 4
  %1188 = icmp slt i64 %1185, %1187
  br i1 %1188, label %if.entry.i56.i699, label %ifend6.i738

if.entry.i56.i699:                                ; preds = %Lexer_advance.exit50.i697
  %1189 = load ptr, ptr %1186, align 8
  %memberidx4.i55.i698 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1189, i64 0, i32 2
  %1190 = load ptr, ptr %memberidx4.i55.i698, align 8
  %1191 = tail call i8 %1190(ptr nonnull %1186, i64 %1185)
  %phi.cmp809 = icmp eq i8 %1191, 61
  br i1 %phi.cmp809, label %if.entry4.i713, label %ifend6.i738

ifend3.i709:                                      ; preds = %else.i676, %if.entry.i36.i678
  %1192 = tail call ptr @malloc(i32 16)
  %1193 = tail call ptr @malloc(i32 32)
  %1194 = load i64, ptr %memberidx.i.i644, align 4
  %1195 = add i64 %1194, 1
  %memberidx2.i59.i703 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1196 = load i64, ptr %memberidx2.i59.i703, align 4
  %1197 = add i64 %1196, -1
  %memberidx3.i60.i704 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1198 = load i64, ptr %memberidx3.i60.i704, align 4
  store i64 %1194, ptr %1193, align 4
  %memberidx1.i.i61.i705 = getelementptr inbounds %FloRange, ptr %1193, i64 0, i32 1
  store i64 %1195, ptr %memberidx1.i.i61.i705, align 4
  %memberidx2.i.i62.i706 = getelementptr inbounds %FloRange, ptr %1193, i64 0, i32 2
  store i64 %1197, ptr %memberidx2.i.i62.i706, align 4
  %memberidx3.i.i63.i707 = getelementptr inbounds %FloRange, ptr %1193, i64 0, i32 3
  store i64 %1198, ptr %memberidx3.i.i63.i707, align 4
  store i64 40, ptr %1192, align 4
  %memberidx1.i64.i708 = getelementptr inbounds %Token, ptr %1192, i64 0, i32 1
  store ptr %1193, ptr %memberidx1.i64.i708, align 8
  br label %common.ret

if.entry4.i713:                                   ; preds = %if.entry.i56.i699
  %1199 = load i64, ptr %memberidx.i.i644, align 4
  %1200 = load ptr, ptr %memberidx1.i.i645, align 8
  %memberidx2.i.i74.i712 = getelementptr inbounds %string, ptr %1200, i64 0, i32 2
  %1201 = load i64, ptr %memberidx2.i.i74.i712, align 4
  %.not810 = icmp slt i64 %1199, %1201
  br i1 %.not810, label %ifend.i78.i717, label %Lexer_advance.exit84.i730

ifend.i78.i717:                                   ; preds = %if.entry4.i713
  %1202 = load ptr, ptr %1200, align 8
  %memberidx2.i76.i715 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1202, i64 0, i32 2
  %1203 = load ptr, ptr %memberidx2.i76.i715, align 8
  %1204 = add nsw i64 %1199, 1
  store i64 %1204, ptr %memberidx.i.i644, align 4
  %1205 = tail call i8 %1203(ptr nonnull %1200, i64 %1204)
  store i8 %1205, ptr %0, align 1
  %1206 = icmp eq i8 %1205, 10
  %memberidx9.i79.i718 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1206, label %if.entry6.i81.i720, label %Lexer_advance.exit84.i730.sink.split

if.entry6.i81.i720:                               ; preds = %ifend.i78.i717
  store i64 0, ptr %memberidx9.i79.i718, align 4
  %memberidx10.i80.i719 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit84.i730.sink.split

Lexer_advance.exit84.i730.sink.split:             ; preds = %ifend.i78.i717, %if.entry6.i81.i720
  %memberidx9.i79.i718.sink1030 = phi ptr [ %memberidx10.i80.i719, %if.entry6.i81.i720 ], [ %memberidx9.i79.i718, %ifend.i78.i717 ]
  %1207 = load i64, ptr %memberidx9.i79.i718.sink1030, align 4
  %1208 = add i64 %1207, 1
  store i64 %1208, ptr %memberidx9.i79.i718.sink1030, align 4
  br label %Lexer_advance.exit84.i730

Lexer_advance.exit84.i730:                        ; preds = %Lexer_advance.exit84.i730.sink.split, %if.entry4.i713
  %1209 = tail call ptr @malloc(i32 16)
  %1210 = tail call ptr @malloc(i32 32)
  %1211 = load i64, ptr %memberidx.i.i644, align 4
  %1212 = add i64 %1211, -2
  %1213 = add i64 %1211, 1
  %memberidx2.i67.i724 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1214 = load i64, ptr %memberidx2.i67.i724, align 4
  %1215 = add i64 %1214, -3
  %memberidx3.i68.i725 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1216 = load i64, ptr %memberidx3.i68.i725, align 4
  store i64 %1212, ptr %1210, align 4
  %memberidx1.i.i69.i726 = getelementptr inbounds %FloRange, ptr %1210, i64 0, i32 1
  store i64 %1213, ptr %memberidx1.i.i69.i726, align 4
  %memberidx2.i.i70.i727 = getelementptr inbounds %FloRange, ptr %1210, i64 0, i32 2
  store i64 %1215, ptr %memberidx2.i.i70.i727, align 4
  %memberidx3.i.i71.i728 = getelementptr inbounds %FloRange, ptr %1210, i64 0, i32 3
  store i64 %1216, ptr %memberidx3.i.i71.i728, align 4
  store i64 20, ptr %1209, align 4
  %memberidx1.i65.i729 = getelementptr inbounds %Token, ptr %1209, i64 0, i32 1
  store ptr %1210, ptr %memberidx1.i65.i729, align 8
  br label %common.ret

ifend6.i738:                                      ; preds = %Lexer_advance.exit50.i697, %if.entry.i56.i699
  %1217 = tail call ptr @malloc(i32 16)
  %1218 = tail call ptr @malloc(i32 32)
  %1219 = load i64, ptr %memberidx.i.i644, align 4
  %1220 = add i64 %1219, -1
  %1221 = add i64 %1219, 1
  %memberidx2.i26.i732 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1222 = load i64, ptr %memberidx2.i26.i732, align 4
  %1223 = add i64 %1222, -2
  %memberidx3.i27.i733 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1224 = load i64, ptr %memberidx3.i27.i733, align 4
  store i64 %1220, ptr %1218, align 4
  %memberidx1.i.i28.i734 = getelementptr inbounds %FloRange, ptr %1218, i64 0, i32 1
  store i64 %1221, ptr %memberidx1.i.i28.i734, align 4
  %memberidx2.i.i29.i735 = getelementptr inbounds %FloRange, ptr %1218, i64 0, i32 2
  store i64 %1223, ptr %memberidx2.i.i29.i735, align 4
  %memberidx3.i.i30.i736 = getelementptr inbounds %FloRange, ptr %1218, i64 0, i32 3
  store i64 %1224, ptr %memberidx3.i.i30.i736, align 4
  store i64 46, ptr %1217, align 4
  %memberidx1.i24.i737 = getelementptr inbounds %Token, ptr %1217, i64 0, i32 1
  store ptr %1218, ptr %memberidx1.i24.i737, align 8
  br label %common.ret

if.entry84:                                       ; preds = %ifend11
  %memberidx.i.i739 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1225 = load i64, ptr %memberidx.i.i739, align 4
  %1226 = add i64 %1225, 1
  %memberidx1.i.i740 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1227 = load ptr, ptr %memberidx1.i.i740, align 8
  %memberidx2.i.i741 = getelementptr inbounds %string, ptr %1227, i64 0, i32 2
  %1228 = load i64, ptr %memberidx2.i.i741, align 4
  %1229 = icmp slt i64 %1226, %1228
  br i1 %1229, label %if.entry.i.i743, label %Lexer_dot_token.exit

if.entry.i.i743:                                  ; preds = %if.entry84
  %1230 = load ptr, ptr %1227, align 8
  %memberidx4.i.i742 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1230, i64 0, i32 2
  %1231 = load ptr, ptr %memberidx4.i.i742, align 8
  %1232 = tail call i8 %1231(ptr nonnull %1227, i64 %1226)
  %phi.cmp = icmp eq i8 %1232, 46
  br i1 %phi.cmp, label %if.entry.i749, label %Lexer_dot_token.exit

if.entry.i749:                                    ; preds = %if.entry.i.i743
  %1233 = load i64, ptr %memberidx.i.i739, align 4
  %1234 = load ptr, ptr %memberidx1.i.i740, align 8
  %memberidx2.i.i.i748 = getelementptr inbounds %string, ptr %1234, i64 0, i32 2
  %1235 = load i64, ptr %memberidx2.i.i.i748, align 4
  %.not = icmp slt i64 %1233, %1235
  br i1 %.not, label %ifend.i.i753, label %Lexer_advance.exit.i762

ifend.i.i753:                                     ; preds = %if.entry.i749
  %1236 = load ptr, ptr %1234, align 8
  %memberidx2.i11.i751 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1236, i64 0, i32 2
  %1237 = load ptr, ptr %memberidx2.i11.i751, align 8
  %1238 = add nsw i64 %1233, 1
  store i64 %1238, ptr %memberidx.i.i739, align 4
  %1239 = tail call i8 %1237(ptr nonnull %1234, i64 %1238)
  store i8 %1239, ptr %0, align 1
  %1240 = icmp eq i8 %1239, 10
  %memberidx9.i.i754 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1240, label %if.entry6.i.i756, label %Lexer_advance.exit.i762.sink.split

if.entry6.i.i756:                                 ; preds = %ifend.i.i753
  store i64 0, ptr %memberidx9.i.i754, align 4
  %memberidx10.i.i755 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i762.sink.split

Lexer_advance.exit.i762.sink.split:               ; preds = %ifend.i.i753, %if.entry6.i.i756
  %memberidx9.i.i754.sink1032 = phi ptr [ %memberidx10.i.i755, %if.entry6.i.i756 ], [ %memberidx9.i.i754, %ifend.i.i753 ]
  %1241 = load i64, ptr %memberidx9.i.i754.sink1032, align 4
  %1242 = add i64 %1241, 1
  store i64 %1242, ptr %memberidx9.i.i754.sink1032, align 4
  br label %Lexer_advance.exit.i762

Lexer_advance.exit.i762:                          ; preds = %Lexer_advance.exit.i762.sink.split, %if.entry.i749
  %1243 = load i64, ptr %memberidx.i.i739, align 4
  %1244 = add i64 %1243, 1
  %1245 = load ptr, ptr %memberidx1.i.i740, align 8
  %memberidx2.i14.i761 = getelementptr inbounds %string, ptr %1245, i64 0, i32 2
  %1246 = load i64, ptr %memberidx2.i14.i761, align 4
  %1247 = icmp slt i64 %1244, %1246
  br i1 %1247, label %if.entry.i17.i, label %Lexer_dot_token.exit

if.entry.i17.i:                                   ; preds = %Lexer_advance.exit.i762
  %1248 = load ptr, ptr %1245, align 8
  %memberidx4.i16.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1248, i64 0, i32 2
  %1249 = load ptr, ptr %memberidx4.i16.i, align 8
  %1250 = tail call i8 %1249(ptr nonnull %1245, i64 %1244)
  %phi.cmp804 = icmp eq i8 %1250, 46
  br i1 %phi.cmp804, label %if.entry1.i772, label %Lexer_dot_token.exit

if.entry1.i772:                                   ; preds = %if.entry.i17.i
  %1251 = load i64, ptr %memberidx.i.i739, align 4
  %1252 = load ptr, ptr %memberidx1.i.i740, align 8
  %memberidx2.i.i27.i = getelementptr inbounds %string, ptr %1252, i64 0, i32 2
  %1253 = load i64, ptr %memberidx2.i.i27.i, align 4
  %.not805 = icmp slt i64 %1251, %1253
  br i1 %.not805, label %ifend.i31.i, label %Lexer_dot_token.exit

ifend.i31.i:                                      ; preds = %if.entry1.i772
  %1254 = load ptr, ptr %1252, align 8
  %memberidx2.i29.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1254, i64 0, i32 2
  %1255 = load ptr, ptr %memberidx2.i29.i, align 8
  %1256 = add nsw i64 %1251, 1
  store i64 %1256, ptr %memberidx.i.i739, align 4
  %1257 = tail call i8 %1255(ptr nonnull %1252, i64 %1256)
  store i8 %1257, ptr %0, align 1
  %1258 = icmp eq i8 %1257, 10
  %memberidx9.i32.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1258, label %if.entry6.i34.i, label %Lexer_dot_token.exit.sink.split

if.entry6.i34.i:                                  ; preds = %ifend.i31.i
  store i64 0, ptr %memberidx9.i32.i, align 4
  %memberidx10.i33.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_dot_token.exit.sink.split

Lexer_dot_token.exit.sink.split:                  ; preds = %ifend.i31.i, %if.entry6.i34.i
  %memberidx10.i33.i.sink1034 = phi ptr [ %memberidx10.i33.i, %if.entry6.i34.i ], [ %memberidx9.i32.i, %ifend.i31.i ]
  %1259 = load i64, ptr %memberidx10.i33.i.sink1034, align 4
  %1260 = add i64 %1259, 1
  store i64 %1260, ptr %memberidx10.i33.i.sink1034, align 4
  br label %Lexer_dot_token.exit

Lexer_dot_token.exit:                             ; preds = %Lexer_dot_token.exit.sink.split, %Lexer_advance.exit.i762, %if.entry84, %if.entry1.i772, %if.entry.i.i743, %if.entry.i17.i
  %token.0.i = phi i64 [ 49, %if.entry.i17.i ], [ 48, %if.entry.i.i743 ], [ 50, %if.entry1.i772 ], [ 48, %if.entry84 ], [ 49, %Lexer_advance.exit.i762 ], [ 50, %Lexer_dot_token.exit.sink.split ]
  %length.0.i763 = phi i64 [ 2, %if.entry.i17.i ], [ 1, %if.entry.i.i743 ], [ 3, %if.entry1.i772 ], [ 1, %if.entry84 ], [ 2, %Lexer_advance.exit.i762 ], [ 3, %Lexer_dot_token.exit.sink.split ]
  %1261 = tail call ptr @malloc(i32 16)
  %1262 = tail call ptr @malloc(i32 32)
  %1263 = load i64, ptr %memberidx.i.i739, align 4
  %1264 = sub nsw i64 1, %length.0.i763
  %1265 = add i64 %1264, %1263
  %1266 = add i64 %1263, 1
  %memberidx2.i20.i765 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1267 = load i64, ptr %memberidx2.i20.i765, align 4
  %1268 = sub i64 %1267, %length.0.i763
  %memberidx3.i21.i766 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1269 = load i64, ptr %memberidx3.i21.i766, align 4
  store i64 %1265, ptr %1262, align 4
  %memberidx1.i.i22.i767 = getelementptr inbounds %FloRange, ptr %1262, i64 0, i32 1
  store i64 %1266, ptr %memberidx1.i.i22.i767, align 4
  %memberidx2.i.i23.i768 = getelementptr inbounds %FloRange, ptr %1262, i64 0, i32 2
  store i64 %1268, ptr %memberidx2.i.i23.i768, align 4
  %memberidx3.i.i.i769 = getelementptr inbounds %FloRange, ptr %1262, i64 0, i32 3
  store i64 %1269, ptr %memberidx3.i.i.i769, align 4
  store i64 %token.0.i, ptr %1261, align 4
  %memberidx1.i24.i770 = getelementptr inbounds %Token, ptr %1261, i64 0, i32 1
  store ptr %1262, ptr %memberidx1.i24.i770, align 8
  br label %common.ret

if.entry87:                                       ; preds = %ifend11
  %1270 = tail call ptr @malloc(i32 16)
  %1271 = tail call ptr @malloc(i32 32)
  %memberidx90 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1272 = load i64, ptr %memberidx90, align 4
  %memberidx91 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1273 = load i64, ptr %memberidx91, align 4
  %memberidx2.i774 = getelementptr inbounds %FloRange, ptr %1271, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %1271, i8 0, i64 16, i1 false)
  store i64 %1272, ptr %memberidx2.i774, align 4
  %memberidx3.i775 = getelementptr inbounds %FloRange, ptr %1271, i64 0, i32 3
  store i64 %1273, ptr %memberidx3.i775, align 4
  store i64 44, ptr %1270, align 4
  %memberidx1.i776 = getelementptr inbounds %Token, ptr %1270, i64 0, i32 1
  store ptr %1271, ptr %memberidx1.i776, align 8
  br label %common.ret

ifend89:                                          ; preds = %ifend11
  %memberidx92 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1274 = load ptr, ptr %memberidx92, align 8
  %1275 = load ptr, ptr %1274, align 8
  %memberidx93 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1275, i64 0, i32 1
  %1276 = load ptr, ptr %memberidx93, align 8
  %memberidx94 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1277 = load i64, ptr %memberidx94, align 4
  %1278 = tail call ptr %1276(ptr nonnull %1274, i64 %1277, i64 1)
  %memberidx95 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 2
  %1279 = load ptr, ptr %memberidx95, align 8
  %1280 = tail call ptr @malloc(i32 24)
  %1281 = load ptr, ptr %1278, align 8
  %memberidx96 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1281, i64 0, i32 5
  %1282 = load ptr, ptr %memberidx96, align 8
  %1283 = tail call ptr %1282(ptr nonnull %1278)
  %1284 = alloca ptr, align 8
  %1285 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %1284, ptr nonnull @56, ptr %1283)
  %1286 = load ptr, ptr %1284, align 8
  %1287 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %1287, align 8
  %memberidx.i365 = getelementptr inbounds %string, ptr %1287, i64 0, i32 1
  store ptr %1286, ptr %memberidx.i365, align 8
  %memberidx1.i366 = getelementptr inbounds %string, ptr %1287, i64 0, i32 2
  store i64 %1285, ptr %memberidx1.i366, align 4
  %memberidx2.i367 = getelementptr inbounds %string, ptr %1287, i64 0, i32 3
  store i64 %1285, ptr %memberidx2.i367, align 4
  tail call void @free(ptr %1283)
  %1288 = call ptr @malloc(i32 32)
  %1289 = load i64, ptr %memberidx94, align 4
  %1290 = add i64 %1289, 1
  %memberidx2.i172 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1291 = load i64, ptr %memberidx2.i172, align 4
  %1292 = add i64 %1291, -1
  %memberidx3.i173 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1293 = load i64, ptr %memberidx3.i173, align 4
  store i64 %1289, ptr %1288, align 4
  %memberidx1.i.i174 = getelementptr inbounds %FloRange, ptr %1288, i64 0, i32 1
  store i64 %1290, ptr %memberidx1.i.i174, align 4
  %memberidx2.i.i175 = getelementptr inbounds %FloRange, ptr %1288, i64 0, i32 2
  store i64 %1292, ptr %memberidx2.i.i175, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %1288, i64 0, i32 3
  store i64 %1293, ptr %memberidx3.i.i, align 4
  store i64 0, ptr %1280, align 4
  %memberidx1.i169 = getelementptr inbounds %FloError, ptr %1280, i64 0, i32 2
  store ptr %1288, ptr %memberidx1.i169, align 8
  %memberidx2.i170 = getelementptr inbounds %FloError, ptr %1280, i64 0, i32 1
  store ptr %1287, ptr %memberidx2.i170, align 8
  %memberidx.i165 = getelementptr inbounds %Array_FloError_, ptr %1279, i64 0, i32 2
  %1294 = load i64, ptr %memberidx.i165, align 4
  %memberidx1.i = getelementptr inbounds %Array_FloError_, ptr %1279, i64 0, i32 3
  %1295 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %1294, %1295
  br i1 %.not.i, label %ifend89.Array_FloError____sl__.exit_crit_edge, label %if.entry.i

ifend89.Array_FloError____sl__.exit_crit_edge:    ; preds = %ifend89
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %1279, i64 0, i32 1
  %.pre952 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_FloError____sl__.exit

if.entry.i:                                       ; preds = %ifend89
  %1296 = shl i64 %1295, 1
  store i64 %1296, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_FloError_, ptr %1279, i64 0, i32 1
  %1297 = load ptr, ptr %memberidx2.i.i, align 8
  %1298 = shl i64 %1295, 4
  %1299 = call ptr @realloc(ptr %1297, i64 %1298)
  store ptr %1299, ptr %memberidx2.i.i, align 8
  %.pre951 = load i64, ptr %memberidx.i165, align 4
  br label %Array_FloError____sl__.exit

Array_FloError____sl__.exit:                      ; preds = %ifend89.Array_FloError____sl__.exit_crit_edge, %if.entry.i
  %1300 = phi ptr [ %.pre952, %ifend89.Array_FloError____sl__.exit_crit_edge ], [ %1299, %if.entry.i ]
  %1301 = phi i64 [ %1294, %ifend89.Array_FloError____sl__.exit_crit_edge ], [ %.pre951, %if.entry.i ]
  %1302 = add i64 %1301, 1
  store i64 %1302, ptr %memberidx.i165, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %1300, i64 %1301
  store ptr %1280, ptr %ptridx.i, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %1278, i64 0, i32 1
  %1303 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %1303)
  tail call void @free(ptr nonnull %1278)
  br label %common.ret
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare double @atof(ptr nocapture) local_unnamed_addr #10

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare i64 @atol(ptr nocapture) local_unnamed_addr #10

; Function Attrs: mustprogress nounwind willreturn
define internal void @StringBuilder_add_byte(ptr nocapture %0, i8 %1) #11 {
  %memberidx = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  %5 = sub i64 %3, %4
  %6 = icmp slt i64 %5, 2
  br i1 %6, label %if.entry, label %.ifend_crit_edge

.ifend_crit_edge:                                 ; preds = %2
  %memberidx2.phi.trans.insert = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %.pre = load ptr, ptr %memberidx2.phi.trans.insert, align 8
  br label %ifend

if.entry:                                         ; preds = %2
  %7 = shl i64 %3, 1
  store i64 %7, ptr %memberidx, align 4
  %memberidx2.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %9 = tail call ptr @realloc(ptr %8, i64 %7)
  store ptr %9, ptr %memberidx2.i, align 8
  %memberidx5.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx1, align 4
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  store ptr %11, ptr %memberidx5.i, align 8
  br label %ifend

ifend:                                            ; preds = %.ifend_crit_edge, %if.entry
  %12 = phi ptr [ %.pre, %.ifend_crit_edge ], [ %11, %if.entry ]
  %memberidx2 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  store i8 %1, ptr %12, align 1
  %13 = load ptr, ptr %memberidx2, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 1
  store ptr %14, ptr %memberidx2, align 8
  %15 = load i64, ptr %memberidx1, align 4
  %16 = add i64 %15, 1
  store i64 %16, ptr %memberidx1, align 4
  ret void
}

; Function Attrs: mustprogress nounwind willreturn
define internal void @StringBuilder_add_bytes_length(ptr nocapture %0, ptr nocapture readonly %1, i64 %2) #11 {
  %memberidx = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 4
  %5 = load i64, ptr %memberidx1, align 4
  %6 = sub i64 %4, %5
  %.not = icmp sgt i64 %6, %2
  br i1 %.not, label %.ifend_crit_edge, label %if.entry

.ifend_crit_edge:                                 ; preds = %3
  %memberidx2.phi.trans.insert = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %.pre = load ptr, ptr %memberidx2.phi.trans.insert, align 8
  br label %ifend

if.entry:                                         ; preds = %3
  %7 = shl i64 %4, 1
  store i64 %7, ptr %memberidx, align 4
  %memberidx2.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %9 = tail call ptr @realloc(ptr %8, i64 %7)
  store ptr %9, ptr %memberidx2.i, align 8
  %memberidx5.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx1, align 4
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  store ptr %11, ptr %memberidx5.i, align 8
  br label %ifend

ifend:                                            ; preds = %.ifend_crit_edge, %if.entry
  %12 = phi ptr [ %.pre, %.ifend_crit_edge ], [ %11, %if.entry ]
  %memberidx2 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %1, i64 %2, i1 false)
  %13 = load ptr, ptr %memberidx2, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 %2
  store ptr %14, ptr %memberidx2, align 8
  %15 = load i64, ptr %memberidx1, align 4
  %16 = add i64 %15, %2
  store i64 %16, ptr %memberidx1, align 4
  ret void
}

define internal void @StringBuilder_append_string(ptr %0, ptr %1) {
  %3 = load ptr, ptr %0, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %5, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call ptr %6(ptr nonnull %1)
  %memberidx2 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %8 = load i64, ptr %memberidx2, align 4
  tail call void %4(ptr nonnull %0, ptr %7, i64 %8)
  ret void
}

define internal noalias ptr @StringBuilder_get_string(ptr nocapture readonly %0) {
  %2 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %3, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %4, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %4, ptr %memberidx2.i, align 4
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ImportClause__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ImportClause__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ImportNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ImportNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_VarDeclarationStatement__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_VarDeclarationStatement__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_EnumNodeField__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_EnumNodeField__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_EnumNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_EnumNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_TypeAliasNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_TypeAliasNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ConstDeclarationStatement__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ConstDeclarationStatement__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ArgNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ArgNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_StatementNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_StatementNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_MethodNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_MethodNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FieldNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FieldNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_TypeNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_TypeNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_GenericParameterNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_GenericParameterNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ClassDeclarationNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ClassDeclarationNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FunctionDeclarationNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FunctionDeclarationNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc void @ModuleAST_constructor(ptr nocapture writeonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FunctionDeclarationNode_, ptr %2, align 8
  %memberidx.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 2
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 1
  %3 = tail call ptr @malloc(i32 64)
  store ptr %3, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  store ptr %2, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 1
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ClassDeclarationNode_, ptr %4, align 8
  %memberidx.i27 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 2
  store i64 0, ptr %memberidx.i27, align 4
  %memberidx1.i28 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i28, align 4
  %memberidx2.i29 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i29, align 8
  store i64 0, ptr %memberidx.i27, align 4
  store ptr %4, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 3
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ImportNode_, ptr %6, align 8
  %memberidx.i30 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx.i30, align 4
  %memberidx1.i31 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 3
  store i64 8, ptr %memberidx1.i31, align 4
  %memberidx2.i32 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %memberidx2.i32, align 8
  store i64 0, ptr %memberidx.i30, align 4
  store ptr %6, ptr %memberidx6, align 8
  %memberidx9 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 4
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ConstDeclarationStatement_, ptr %8, align 8
  %memberidx.i33 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i33, align 4
  %memberidx1.i34 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 3
  store i64 8, ptr %memberidx1.i34, align 4
  %memberidx2.i35 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 1
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %memberidx2.i35, align 8
  store i64 0, ptr %memberidx.i33, align 4
  store ptr %8, ptr %memberidx9, align 8
  %memberidx12 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 5
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_VarDeclarationStatement_, ptr %10, align 8
  %memberidx.i36 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 2
  store i64 0, ptr %memberidx.i36, align 4
  %memberidx1.i37 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 3
  store i64 8, ptr %memberidx1.i37, align 4
  %memberidx2.i38 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 1
  %11 = tail call ptr @malloc(i32 64)
  store ptr %11, ptr %memberidx2.i38, align 8
  store i64 0, ptr %memberidx.i36, align 4
  store ptr %10, ptr %memberidx12, align 8
  %memberidx15 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 2
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_EnumNode_, ptr %12, align 8
  %memberidx.i39 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 2
  store i64 0, ptr %memberidx.i39, align 4
  %memberidx1.i40 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 3
  store i64 8, ptr %memberidx1.i40, align 4
  %memberidx2.i41 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %memberidx2.i41, align 8
  store i64 0, ptr %memberidx.i39, align 4
  store ptr %12, ptr %memberidx15, align 8
  %memberidx18 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 6
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeAliasNode_, ptr %14, align 8
  %memberidx.i42 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 2
  store i64 0, ptr %memberidx.i42, align 4
  %memberidx1.i43 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 3
  store i64 8, ptr %memberidx1.i43, align 4
  %memberidx2.i44 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 1
  %15 = tail call ptr @malloc(i32 64)
  store ptr %15, ptr %memberidx2.i44, align 8
  store i64 0, ptr %memberidx.i42, align 4
  store ptr %14, ptr %memberidx18, align 8
  ret void
}

define internal fastcc noalias ptr @Parser_parse(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Parser, align 8
  store ptr %0, ptr %3, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i72 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx2.i72, align 4
  %5 = icmp sgt i64 %4, -1
  br i1 %5, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %2
  %memberidx3.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  store i64 0, ptr %memberidx2.i, align 8
  %memberidx.i.i73 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i.i73, align 8
  %7 = load ptr, ptr %6, align 8
  store ptr %7, ptr %memberidx3.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %2, %if.entry.i
  %8 = phi i64 [ -1, %2 ], [ 0, %if.entry.i ]
  %9 = phi ptr [ undef, %2 ], [ %7, %if.entry.i ]
  %10 = tail call ptr @malloc(i32 56)
  tail call fastcc void @ModuleAST_constructor(ptr %10)
  %memberidx.i75 = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  %11 = load i64, ptr %9, align 4
  %12 = icmp eq i64 %11, 31
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %12, %14
  br i1 %15, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %Parser_advance.exit
  %memberidx.i.i.i78 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %16 = load i64, ptr %memberidx2.i72, align 4
  %17 = icmp slt i64 %8, %16
  br i1 %17, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %18 = phi i64 [ %25, %Parser_advance.exit.i ], [ 31, %while.entry.i.preheader ]
  %19 = phi ptr [ %27, %Parser_advance.exit.i ], [ %9, %while.entry.i.preheader ]
  %20 = phi i64 [ %28, %Parser_advance.exit.i ], [ %8, %while.entry.i.preheader ]
  %21 = icmp slt i64 %20, %16
  br i1 %21, label %if.entry.i.i79, label %Parser_advance.exit.i

if.entry.i.i79:                                   ; preds = %while.entry.i
  %22 = add nsw i64 %20, 1
  store i64 %22, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx.i.i.i78, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %23, i64 %22
  %24 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %24, ptr %memberidx.i75, align 8
  %.pre = load i64, ptr %24, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i79, %while.entry.i
  %25 = phi i64 [ %.pre, %if.entry.i.i79 ], [ %18, %while.entry.i ]
  %26 = phi i64 [ %.pre, %if.entry.i.i79 ], [ 31, %while.entry.i ]
  %27 = phi ptr [ %24, %if.entry.i.i79 ], [ %19, %while.entry.i ]
  %28 = phi i64 [ %22, %if.entry.i.i79 ], [ %20, %while.entry.i ]
  %29 = icmp eq i64 %26, 31
  br i1 %29, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %Parser_advance.exit
  %30 = phi i64 [ %11, %Parser_advance.exit ], [ %25, %Parser_advance.exit.i ]
  %31 = phi ptr [ %9, %Parser_advance.exit ], [ %27, %Parser_advance.exit.i ]
  %32 = icmp ne i64 %30, 44
  %33 = and i1 %32, %14
  br i1 %33, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_new_lines.exit
  %memberidx32 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 5
  %memberidx26 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 4
  %memberidx20 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 3
  %memberidx14 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 2
  %memberidx8 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 1
  %memberidx40 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 6
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_new_lines.exit135
  %34 = phi i64 [ %30, %while.entry.preheader ], [ %106, %Parser_new_lines.exit135 ]
  %35 = phi ptr [ %31, %while.entry.preheader ], [ %107, %Parser_new_lines.exit135 ]
  switch i64 %34, label %else30 [
    i64 74, label %if.entry
    i64 83, label %if.entry5
    i64 84, label %if.entry11
    i64 78, label %if.entry17
    i64 55, label %if.entry23
    i64 56, label %if.entry29
  ]

while.end:                                        ; preds = %Parser_new_lines.exit135, %Parser_new_lines.exit
  ret ptr %10

if.entry:                                         ; preds = %while.entry
  %36 = load i64, ptr %memberidx2.i, align 8
  %37 = load ptr, ptr %3, align 8
  %memberidx2.i87 = getelementptr inbounds %Array_Token_, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i87, align 4
  %39 = icmp slt i64 %36, %38
  br i1 %39, label %if.entry.i91, label %Parser_advance.exit92

if.entry.i91:                                     ; preds = %if.entry
  %40 = add nsw i64 %36, 1
  store i64 %40, ptr %memberidx2.i, align 8
  %memberidx.i.i89 = getelementptr inbounds %Array_Token_, ptr %37, i64 0, i32 1
  %41 = load ptr, ptr %memberidx.i.i89, align 8
  %ptridx.i.i90 = getelementptr inbounds ptr, ptr %41, i64 %40
  %42 = load ptr, ptr %ptridx.i.i90, align 8
  store ptr %42, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit92

Parser_advance.exit92:                            ; preds = %if.entry, %if.entry.i91
  %43 = load ptr, ptr %10, align 8
  %44 = call ptr @malloc(i32 33)
  %memberidx.i.i98 = getelementptr inbounds %FunctionDeclarationNode, ptr %44, i64 0, i32 1
  %45 = call ptr @malloc(i32 32)
  store ptr @VTableArray_ArgNode_, ptr %45, align 8
  %memberidx.i.i.i99 = getelementptr inbounds %Array_ArgNode_, ptr %45, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i99, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %45, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i100 = getelementptr inbounds %Array_ArgNode_, ptr %45, i64 0, i32 1
  %46 = call ptr @malloc(i32 64)
  store ptr %46, ptr %memberidx2.i.i.i100, align 8
  store i64 0, ptr %memberidx.i.i.i99, align 4
  store ptr %45, ptr %memberidx.i.i98, align 8
  %memberidx3.i.i102 = getelementptr inbounds %FunctionDeclarationNode, ptr %44, i64 0, i32 4
  store i1 false, ptr %memberidx3.i.i102, align 1
  %47 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %47, ptr %44, align 8
  %48 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 23)
  %49 = load ptr, ptr %memberidx.i75, align 8
  %50 = load i64, ptr %49, align 4
  %.not.i104 = icmp eq i64 %50, 24
  br i1 %.not.i104, label %ifend.i, label %if.entry.i106

if.entry.i106:                                    ; preds = %Parser_advance.exit92
  %51 = load ptr, ptr %memberidx.i.i98, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %51)
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry.i106, %Parser_advance.exit92
  %52 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 24)
  %53 = load ptr, ptr %memberidx.i75, align 8
  %54 = load i64, ptr %53, align 4
  %55 = icmp eq i64 %54, 1
  br i1 %55, label %if.entry6.i, label %else7.i

if.entry6.i:                                      ; preds = %ifend.i
  %56 = load i64, ptr %memberidx2.i, align 8
  %57 = load ptr, ptr %3, align 8
  %memberidx2.i34.i = getelementptr inbounds %Array_Token_, ptr %57, i64 0, i32 2
  %58 = load i64, ptr %memberidx2.i34.i, align 4
  %59 = icmp slt i64 %56, %58
  br i1 %59, label %if.entry.i.i108, label %Parser_advance.exit.i109

if.entry.i.i108:                                  ; preds = %if.entry6.i
  %60 = add nsw i64 %56, 1
  store i64 %60, ptr %memberidx2.i, align 8
  %memberidx.i.i36.i = getelementptr inbounds %Array_Token_, ptr %57, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i.i36.i, align 8
  %ptridx.i.i.i107 = getelementptr inbounds ptr, ptr %61, i64 %60
  %62 = load ptr, ptr %ptridx.i.i.i107, align 8
  store ptr %62, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i109

Parser_advance.exit.i109:                         ; preds = %if.entry.i.i108, %if.entry6.i
  %memberidx9.i = getelementptr inbounds %FunctionDeclarationNode, ptr %44, i64 0, i32 3
  %63 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %63, ptr %memberidx9.i, align 8
  br label %ifend8.i

else7.i:                                          ; preds = %ifend.i
  %memberidx10.i = getelementptr inbounds %FunctionDeclarationNode, ptr %44, i64 0, i32 3
  %64 = call ptr @malloc(i32 16)
  %65 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %65, i8 0, i64 32, i1 false)
  store ptr %65, ptr %64, align 8
  %memberidx.i39.i = getelementptr inbounds %TypeNode, ptr %64, i64 0, i32 1
  store i64 12, ptr %memberidx.i39.i, align 4
  store ptr %64, ptr %memberidx10.i, align 8
  br label %ifend8.i

ifend8.i:                                         ; preds = %else7.i, %Parser_advance.exit.i109
  %66 = load ptr, ptr %memberidx.i75, align 8
  %67 = load i64, ptr %66, align 4
  %68 = icmp eq i64 %67, 25
  br i1 %68, label %if.entry13.i, label %else14.i

if.entry13.i:                                     ; preds = %ifend8.i
  %memberidx16.i = getelementptr inbounds %FunctionDeclarationNode, ptr %44, i64 0, i32 2
  %69 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %69, ptr %memberidx16.i, align 8
  br label %Parser_parse_function.exit

else14.i:                                         ; preds = %ifend8.i
  store i1 true, ptr %memberidx3.i.i102, align 1
  br label %Parser_parse_function.exit

Parser_parse_function.exit:                       ; preds = %if.entry13.i, %else14.i
  %memberidx.i111 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %43, i64 0, i32 2
  %70 = load i64, ptr %memberidx.i111, align 4
  %memberidx1.i112 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %43, i64 0, i32 3
  %71 = load i64, ptr %memberidx1.i112, align 4
  %.not.i113 = icmp slt i64 %70, %71
  br i1 %.not.i113, label %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge, label %if.entry.i116

Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge: ; preds = %Parser_parse_function.exit
  %memberidx4.i117.phi.trans.insert = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %43, i64 0, i32 1
  %.pre350 = load ptr, ptr %memberidx4.i117.phi.trans.insert, align 8
  br label %Array_FunctionDeclarationNode____sl__.exit

if.entry.i116:                                    ; preds = %Parser_parse_function.exit
  %72 = shl i64 %71, 1
  store i64 %72, ptr %memberidx1.i112, align 4
  %memberidx2.i.i115 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %43, i64 0, i32 1
  %73 = load ptr, ptr %memberidx2.i.i115, align 8
  %74 = shl i64 %71, 4
  %75 = call ptr @realloc(ptr %73, i64 %74)
  store ptr %75, ptr %memberidx2.i.i115, align 8
  %.pre349 = load i64, ptr %memberidx.i111, align 4
  br label %Array_FunctionDeclarationNode____sl__.exit

Array_FunctionDeclarationNode____sl__.exit:       ; preds = %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge, %if.entry.i116
  %76 = phi ptr [ %.pre350, %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge ], [ %75, %if.entry.i116 ]
  %77 = phi i64 [ %70, %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge ], [ %.pre349, %if.entry.i116 ]
  %78 = add i64 %77, 1
  store i64 %78, ptr %memberidx.i111, align 4
  %ptridx.i118 = getelementptr inbounds ptr, ptr %76, i64 %77
  store ptr %44, ptr %ptridx.i118, align 8
  br label %ifend

ifend:                                            ; preds = %Array_TypeAliasNode____sl__.exit, %Parser_error.exit, %Array_VarDeclarationStatement____sl__.exit, %Array_ConstDeclarationStatement____sl__.exit, %Array_ImportNode____sl__.exit, %Array_EnumNode____sl__.exit, %Array_ClassDeclarationNode____sl__.exit, %Array_FunctionDeclarationNode____sl__.exit
  %79 = load ptr, ptr %memberidx.i75, align 8
  %80 = load i64, ptr %79, align 4
  %81 = icmp eq i64 %80, 31
  %82 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i123 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 2
  %83 = load i64, ptr %memberidx3.i.i123, align 4
  %84 = icmp eq i64 %83, 0
  %85 = and i1 %81, %84
  br i1 %85, label %while.entry.i126.preheader, label %Parser_new_lines.exit135

while.entry.i126.preheader:                       ; preds = %ifend
  %86 = load ptr, ptr %3, align 8
  %memberidx2.i12.i125 = getelementptr inbounds %Array_Token_, ptr %86, i64 0, i32 2
  %memberidx.i.i.i128 = getelementptr inbounds %Array_Token_, ptr %86, i64 0, i32 1
  %.pre355 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i126

while.entry.i126:                                 ; preds = %while.entry.i126.preheader, %Parser_advance.exit.i134
  %87 = phi i64 [ 0, %while.entry.i126.preheader ], [ %96, %Parser_advance.exit.i134 ]
  %88 = phi i64 [ 31, %while.entry.i126.preheader ], [ %97, %Parser_advance.exit.i134 ]
  %89 = phi ptr [ %79, %while.entry.i126.preheader ], [ %100, %Parser_advance.exit.i134 ]
  %90 = phi i64 [ %.pre355, %while.entry.i126.preheader ], [ %101, %Parser_advance.exit.i134 ]
  %91 = load i64, ptr %memberidx2.i12.i125, align 4
  %92 = icmp slt i64 %90, %91
  br i1 %92, label %if.entry.i.i130, label %Parser_advance.exit.i134

if.entry.i.i130:                                  ; preds = %while.entry.i126
  %93 = add nsw i64 %90, 1
  store i64 %93, ptr %memberidx2.i, align 8
  %94 = load ptr, ptr %memberidx.i.i.i128, align 8
  %ptridx.i.i.i129 = getelementptr inbounds ptr, ptr %94, i64 %93
  %95 = load ptr, ptr %ptridx.i.i.i129, align 8
  store ptr %95, ptr %memberidx.i75, align 8
  %.pre356 = load i64, ptr %95, align 4
  %.pre357 = load i64, ptr %memberidx3.i.i123, align 4
  br label %Parser_advance.exit.i134

Parser_advance.exit.i134:                         ; preds = %if.entry.i.i130, %while.entry.i126
  %96 = phi i64 [ %.pre357, %if.entry.i.i130 ], [ %87, %while.entry.i126 ]
  %97 = phi i64 [ %.pre356, %if.entry.i.i130 ], [ %88, %while.entry.i126 ]
  %98 = phi i64 [ %.pre357, %if.entry.i.i130 ], [ 0, %while.entry.i126 ]
  %99 = phi i64 [ %.pre356, %if.entry.i.i130 ], [ 31, %while.entry.i126 ]
  %100 = phi ptr [ %95, %if.entry.i.i130 ], [ %89, %while.entry.i126 ]
  %101 = phi i64 [ %93, %if.entry.i.i130 ], [ %90, %while.entry.i126 ]
  %102 = icmp eq i64 %99, 31
  %103 = icmp eq i64 %98, 0
  %104 = and i1 %102, %103
  br i1 %104, label %while.entry.i126, label %Parser_new_lines.exit135

Parser_new_lines.exit135:                         ; preds = %Parser_advance.exit.i134, %ifend
  %105 = phi i64 [ %83, %ifend ], [ %96, %Parser_advance.exit.i134 ]
  %106 = phi i64 [ %80, %ifend ], [ %97, %Parser_advance.exit.i134 ]
  %107 = phi ptr [ %79, %ifend ], [ %100, %Parser_advance.exit.i134 ]
  %108 = icmp ne i64 %106, 44
  %109 = icmp eq i64 %105, 0
  %110 = and i1 %108, %109
  br i1 %110, label %while.entry, label %while.end

if.entry5:                                        ; preds = %while.entry
  %111 = load ptr, ptr %memberidx8, align 8
  %112 = load i64, ptr %memberidx2.i, align 8
  %113 = load ptr, ptr %3, align 8
  %memberidx2.i.i140 = getelementptr inbounds %Array_Token_, ptr %113, i64 0, i32 2
  %114 = load i64, ptr %memberidx2.i.i140, align 4
  %115 = icmp slt i64 %112, %114
  br i1 %115, label %if.entry.i.i144, label %Parser_advance.exit.i150

if.entry.i.i144:                                  ; preds = %if.entry5
  %116 = add nsw i64 %112, 1
  store i64 %116, ptr %memberidx2.i, align 8
  %memberidx.i.i.i142 = getelementptr inbounds %Array_Token_, ptr %113, i64 0, i32 1
  %117 = load ptr, ptr %memberidx.i.i.i142, align 8
  %ptridx.i.i.i143 = getelementptr inbounds ptr, ptr %117, i64 %116
  %118 = load ptr, ptr %ptridx.i.i.i143, align 8
  store ptr %118, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i150

Parser_advance.exit.i150:                         ; preds = %if.entry.i.i144, %if.entry5
  %119 = call ptr @malloc(i32 40)
  %120 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %120, ptr %119, align 8
  %memberidx1.i.i145 = getelementptr inbounds %ClassDeclarationNode, ptr %119, i64 0, i32 3
  %121 = call ptr @malloc(i32 32)
  store ptr @VTableArray_FieldNode_, ptr %121, align 8
  %memberidx.i.i21.i = getelementptr inbounds %Array_FieldNode_, ptr %121, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i21.i, align 4
  %memberidx1.i.i.i146 = getelementptr inbounds %Array_FieldNode_, ptr %121, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i146, align 4
  %memberidx2.i.i.i147 = getelementptr inbounds %Array_FieldNode_, ptr %121, i64 0, i32 1
  %122 = call ptr @malloc(i32 64)
  store ptr %122, ptr %memberidx2.i.i.i147, align 8
  store i64 0, ptr %memberidx.i.i21.i, align 4
  store ptr %121, ptr %memberidx1.i.i145, align 8
  %memberidx4.i.i148 = getelementptr inbounds %ClassDeclarationNode, ptr %119, i64 0, i32 4
  %123 = call ptr @malloc(i32 32)
  store ptr @VTableArray_MethodNode_, ptr %123, align 8
  %memberidx.i15.i.i = getelementptr inbounds %Array_MethodNode_, ptr %123, i64 0, i32 2
  store i64 0, ptr %memberidx.i15.i.i, align 4
  %memberidx1.i16.i.i = getelementptr inbounds %Array_MethodNode_, ptr %123, i64 0, i32 3
  store i64 8, ptr %memberidx1.i16.i.i, align 4
  %memberidx2.i17.i.i = getelementptr inbounds %Array_MethodNode_, ptr %123, i64 0, i32 1
  %124 = call ptr @malloc(i32 64)
  store ptr %124, ptr %memberidx2.i17.i.i, align 8
  store i64 0, ptr %memberidx.i15.i.i, align 4
  store ptr %123, ptr %memberidx4.i.i148, align 8
  %memberidx7.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %119, i64 0, i32 1
  %125 = call ptr @malloc(i32 32)
  store ptr @VTableArray_GenericParameterNode_, ptr %125, align 8
  %memberidx.i18.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %125, i64 0, i32 2
  store i64 0, ptr %memberidx.i18.i.i, align 4
  %memberidx1.i19.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %125, i64 0, i32 3
  store i64 8, ptr %memberidx1.i19.i.i, align 4
  %memberidx2.i20.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %125, i64 0, i32 1
  %126 = call ptr @malloc(i32 64)
  store ptr %126, ptr %memberidx2.i20.i.i, align 8
  store i64 0, ptr %memberidx.i18.i.i, align 4
  store ptr %125, ptr %memberidx7.i.i, align 8
  %memberidx10.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %119, i64 0, i32 2
  store ptr null, ptr %memberidx10.i.i, align 8
  %127 = load ptr, ptr %memberidx.i75, align 8
  %128 = load i64, ptr %127, align 4
  %129 = icmp eq i64 %128, 40
  br i1 %129, label %if.entry.i152, label %ifend.i153

if.entry.i152:                                    ; preds = %Parser_advance.exit.i150
  %130 = load i64, ptr %memberidx2.i, align 8
  %131 = load ptr, ptr %3, align 8
  %memberidx2.i.i24.i = getelementptr inbounds %Array_Token_, ptr %131, i64 0, i32 2
  %132 = load i64, ptr %memberidx2.i.i24.i, align 4
  %133 = icmp slt i64 %130, %132
  br i1 %133, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %if.entry.i152
  %134 = add nsw i64 %130, 1
  store i64 %134, ptr %memberidx2.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %131, i64 0, i32 1
  %135 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %135, i64 %134
  %136 = load ptr, ptr %ptridx.i.i.i.i, align 8
  store ptr %136, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %if.entry.i152
  %137 = call ptr @malloc(i32 8)
  %138 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %138, ptr %137, align 8
  %139 = load i64, ptr %memberidx.i18.i.i, align 4
  %140 = load i64, ptr %memberidx1.i19.i.i, align 4
  %.not.i21.i.i = icmp slt i64 %139, %140
  br i1 %.not.i21.i.i, label %Parser_advance.exit.i.i.Array_GenericParameterNode____sl__.exit27.i.i_crit_edge, label %if.entry.i24.i.i

Parser_advance.exit.i.i.Array_GenericParameterNode____sl__.exit27.i.i_crit_edge: ; preds = %Parser_advance.exit.i.i
  %.pre337 = load ptr, ptr %memberidx2.i20.i.i, align 8
  br label %Array_GenericParameterNode____sl__.exit27.i.i

if.entry.i24.i.i:                                 ; preds = %Parser_advance.exit.i.i
  %141 = shl i64 %140, 1
  store i64 %141, ptr %memberidx1.i19.i.i, align 4
  %142 = load ptr, ptr %memberidx2.i20.i.i, align 8
  %143 = shl i64 %140, 4
  %144 = call ptr @realloc(ptr %142, i64 %143)
  store ptr %144, ptr %memberidx2.i20.i.i, align 8
  %.pre336 = load i64, ptr %memberidx.i18.i.i, align 4
  br label %Array_GenericParameterNode____sl__.exit27.i.i

Array_GenericParameterNode____sl__.exit27.i.i:    ; preds = %Parser_advance.exit.i.i.Array_GenericParameterNode____sl__.exit27.i.i_crit_edge, %if.entry.i24.i.i
  %145 = phi ptr [ %144, %if.entry.i24.i.i ], [ %.pre337, %Parser_advance.exit.i.i.Array_GenericParameterNode____sl__.exit27.i.i_crit_edge ]
  %146 = phi i64 [ %.pre336, %if.entry.i24.i.i ], [ %139, %Parser_advance.exit.i.i.Array_GenericParameterNode____sl__.exit27.i.i_crit_edge ]
  %147 = add i64 %146, 1
  store i64 %147, ptr %memberidx.i18.i.i, align 4
  %ptridx.i26.i.i = getelementptr inbounds ptr, ptr %145, i64 %146
  store ptr %137, ptr %ptridx.i26.i.i, align 8
  %148 = load ptr, ptr %memberidx.i75, align 8
  %149 = load i64, ptr %148, align 4
  %150 = icmp eq i64 %149, 3
  %151 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i30.i.i = getelementptr inbounds %Array_FloError_, ptr %151, i64 0, i32 2
  %152 = load i64, ptr %memberidx3.i30.i.i, align 4
  %153 = icmp eq i64 %152, 0
  %154 = and i1 %150, %153
  br i1 %154, label %while.entry.i.i, label %Parser_parse_generic_parameters.exit.i

while.entry.i.i:                                  ; preds = %Array_GenericParameterNode____sl__.exit27.i.i, %Array_GenericParameterNode____sl__.exit.i.i
  %155 = load i64, ptr %memberidx2.i, align 8
  %156 = load ptr, ptr %3, align 8
  %memberidx2.i32.i.i = getelementptr inbounds %Array_Token_, ptr %156, i64 0, i32 2
  %157 = load i64, ptr %memberidx2.i32.i.i, align 4
  %158 = icmp slt i64 %155, %157
  br i1 %158, label %if.entry.i36.i.i, label %Parser_advance.exit37.i.i

if.entry.i36.i.i:                                 ; preds = %while.entry.i.i
  %159 = add nsw i64 %155, 1
  store i64 %159, ptr %memberidx2.i, align 8
  %memberidx.i.i34.i.i = getelementptr inbounds %Array_Token_, ptr %156, i64 0, i32 1
  %160 = load ptr, ptr %memberidx.i.i34.i.i, align 8
  %ptridx.i.i35.i.i = getelementptr inbounds ptr, ptr %160, i64 %159
  %161 = load ptr, ptr %ptridx.i.i35.i.i, align 8
  store ptr %161, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit37.i.i

Parser_advance.exit37.i.i:                        ; preds = %if.entry.i36.i.i, %while.entry.i.i
  %162 = call ptr @malloc(i32 8)
  %163 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %163, ptr %162, align 8
  %164 = load i64, ptr %memberidx.i18.i.i, align 4
  %165 = load i64, ptr %memberidx1.i19.i.i, align 4
  %.not.i.i.i = icmp slt i64 %164, %165
  br i1 %.not.i.i.i, label %Parser_advance.exit37.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge, label %if.entry.i18.i.i

Parser_advance.exit37.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge: ; preds = %Parser_advance.exit37.i.i
  %.pre339 = load ptr, ptr %memberidx2.i20.i.i, align 8
  br label %Array_GenericParameterNode____sl__.exit.i.i

if.entry.i18.i.i:                                 ; preds = %Parser_advance.exit37.i.i
  %166 = shl i64 %165, 1
  store i64 %166, ptr %memberidx1.i19.i.i, align 4
  %167 = load ptr, ptr %memberidx2.i20.i.i, align 8
  %168 = shl i64 %165, 4
  %169 = call ptr @realloc(ptr %167, i64 %168)
  store ptr %169, ptr %memberidx2.i20.i.i, align 8
  %.pre338 = load i64, ptr %memberidx.i18.i.i, align 4
  br label %Array_GenericParameterNode____sl__.exit.i.i

Array_GenericParameterNode____sl__.exit.i.i:      ; preds = %Parser_advance.exit37.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge, %if.entry.i18.i.i
  %170 = phi ptr [ %169, %if.entry.i18.i.i ], [ %.pre339, %Parser_advance.exit37.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge ]
  %171 = phi i64 [ %.pre338, %if.entry.i18.i.i ], [ %164, %Parser_advance.exit37.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge ]
  %172 = add i64 %171, 1
  store i64 %172, ptr %memberidx.i18.i.i, align 4
  %ptridx.i.i27.i = getelementptr inbounds ptr, ptr %170, i64 %171
  store ptr %162, ptr %ptridx.i.i27.i, align 8
  %173 = load ptr, ptr %memberidx.i75, align 8
  %174 = load i64, ptr %173, align 4
  %175 = icmp eq i64 %174, 3
  %176 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i15.i.i = getelementptr inbounds %Array_FloError_, ptr %176, i64 0, i32 2
  %177 = load i64, ptr %memberidx3.i15.i.i, align 4
  %178 = icmp eq i64 %177, 0
  %179 = and i1 %175, %178
  br i1 %179, label %while.entry.i.i, label %Parser_parse_generic_parameters.exit.i

Parser_parse_generic_parameters.exit.i:           ; preds = %Array_GenericParameterNode____sl__.exit.i.i, %Array_GenericParameterNode____sl__.exit27.i.i
  %180 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 39)
  %.pre340 = load ptr, ptr %memberidx.i75, align 8
  %.pre341 = load i64, ptr %.pre340, align 4
  br label %ifend.i153

ifend.i153:                                       ; preds = %Parser_parse_generic_parameters.exit.i, %Parser_advance.exit.i150
  %181 = phi i64 [ %.pre341, %Parser_parse_generic_parameters.exit.i ], [ %128, %Parser_advance.exit.i150 ]
  %182 = icmp eq i64 %181, 23
  br i1 %182, label %if.entry5.i, label %ifend7.i

if.entry5.i:                                      ; preds = %ifend.i153
  %183 = load i64, ptr %memberidx2.i, align 8
  %184 = load ptr, ptr %3, align 8
  %memberidx2.i29.i = getelementptr inbounds %Array_Token_, ptr %184, i64 0, i32 2
  %185 = load i64, ptr %memberidx2.i29.i, align 4
  %186 = icmp slt i64 %183, %185
  br i1 %186, label %if.entry.i33.i, label %Parser_advance.exit34.i

if.entry.i33.i:                                   ; preds = %if.entry5.i
  %187 = add nsw i64 %183, 1
  store i64 %187, ptr %memberidx2.i, align 8
  %memberidx.i.i31.i = getelementptr inbounds %Array_Token_, ptr %184, i64 0, i32 1
  %188 = load ptr, ptr %memberidx.i.i31.i, align 8
  %ptridx.i.i32.i = getelementptr inbounds ptr, ptr %188, i64 %187
  %189 = load ptr, ptr %ptridx.i.i32.i, align 8
  store ptr %189, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit34.i

Parser_advance.exit34.i:                          ; preds = %if.entry.i33.i, %if.entry5.i
  %190 = call fastcc ptr @Parser_parse_object_type(ptr nonnull %3)
  store ptr %190, ptr %memberidx10.i.i, align 8
  %191 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 24)
  %.pre342 = load ptr, ptr %memberidx.i75, align 8
  %.pre343 = load i64, ptr %.pre342, align 4
  br label %ifend7.i

ifend7.i:                                         ; preds = %Parser_advance.exit34.i, %ifend.i153
  %192 = phi i64 [ %.pre343, %Parser_advance.exit34.i ], [ %181, %ifend.i153 ]
  %193 = icmp eq i64 %192, 31
  %194 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i38.i = getelementptr inbounds %Array_FloError_, ptr %194, i64 0, i32 2
  %195 = load i64, ptr %memberidx3.i.i38.i, align 4
  %196 = icmp eq i64 %195, 0
  %197 = and i1 %193, %196
  br i1 %197, label %while.entry.i39.i.preheader, label %Parser_parse_class.exit

while.entry.i39.i.preheader:                      ; preds = %ifend7.i
  %198 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %198, i64 0, i32 2
  %memberidx.i.i.i40.i = getelementptr inbounds %Array_Token_, ptr %198, i64 0, i32 1
  %.pre344 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i39.i

while.entry.i39.i:                                ; preds = %while.entry.i39.i.preheader, %Parser_advance.exit.i43.i
  %199 = phi i64 [ %.pre344, %while.entry.i39.i.preheader ], [ %207, %Parser_advance.exit.i43.i ]
  %200 = load i64, ptr %memberidx2.i12.i.i, align 4
  %201 = icmp slt i64 %199, %200
  br i1 %201, label %if.entry.i.i42.i, label %Parser_advance.exit.i43.i

if.entry.i.i42.i:                                 ; preds = %while.entry.i39.i
  %202 = add nsw i64 %199, 1
  store i64 %202, ptr %memberidx2.i, align 8
  %203 = load ptr, ptr %memberidx.i.i.i40.i, align 8
  %ptridx.i.i.i41.i = getelementptr inbounds ptr, ptr %203, i64 %202
  %204 = load ptr, ptr %ptridx.i.i.i41.i, align 8
  store ptr %204, ptr %memberidx.i75, align 8
  %.pre345 = load i64, ptr %204, align 4
  %.pre346 = load i64, ptr %memberidx3.i.i38.i, align 4
  br label %Parser_advance.exit.i43.i

Parser_advance.exit.i43.i:                        ; preds = %if.entry.i.i42.i, %while.entry.i39.i
  %205 = phi i64 [ %.pre346, %if.entry.i.i42.i ], [ 0, %while.entry.i39.i ]
  %206 = phi i64 [ %.pre345, %if.entry.i.i42.i ], [ 31, %while.entry.i39.i ]
  %207 = phi i64 [ %202, %if.entry.i.i42.i ], [ %199, %while.entry.i39.i ]
  %208 = icmp eq i64 %206, 31
  %209 = icmp eq i64 %205, 0
  %210 = and i1 %208, %209
  br i1 %210, label %while.entry.i39.i, label %Parser_parse_class.exit

Parser_parse_class.exit:                          ; preds = %Parser_advance.exit.i43.i, %ifend7.i
  %211 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %212 = load ptr, ptr %memberidx.i75, align 8
  %213 = load i64, ptr %212, align 4
  %214 = icmp eq i64 %213, 31
  %215 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i261 = getelementptr inbounds %Array_FloError_, ptr %215, i64 0, i32 2
  %216 = load i64, ptr %memberidx3.i.i.i261, align 4
  %217 = icmp eq i64 %216, 0
  %218 = and i1 %214, %217
  br i1 %218, label %while.entry.i.preheader.i, label %Parser_new_lines.exit.i

while.entry.i.preheader.i:                        ; preds = %Parser_parse_class.exit
  %219 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i263 = getelementptr inbounds %Array_Token_, ptr %219, i64 0, i32 2
  %memberidx.i.i.i.i264 = getelementptr inbounds %Array_Token_, ptr %219, i64 0, i32 1
  %220 = load i64, ptr %memberidx2.i, align 8
  %221 = load i64, ptr %memberidx2.i12.i.i263, align 4
  %222 = icmp slt i64 %220, %221
  br i1 %222, label %while.entry.i.i265, label %while.entry.i.us.i

while.entry.i.us.i:                               ; preds = %while.entry.i.preheader.i, %while.entry.i.us.i
  br label %while.entry.i.us.i

while.entry.i.i265:                               ; preds = %while.entry.i.preheader.i, %Parser_advance.exit.i.i268
  %223 = phi i64 [ %230, %Parser_advance.exit.i.i268 ], [ 31, %while.entry.i.preheader.i ]
  %224 = phi i64 [ %233, %Parser_advance.exit.i.i268 ], [ %220, %while.entry.i.preheader.i ]
  %225 = load i64, ptr %memberidx2.i12.i.i263, align 4
  %226 = icmp slt i64 %224, %225
  br i1 %226, label %if.entry.i.i.i267, label %Parser_advance.exit.i.i268

if.entry.i.i.i267:                                ; preds = %while.entry.i.i265
  %227 = add nsw i64 %224, 1
  store i64 %227, ptr %memberidx2.i, align 8
  %228 = load ptr, ptr %memberidx.i.i.i.i264, align 8
  %ptridx.i.i.i.i266 = getelementptr inbounds ptr, ptr %228, i64 %227
  %229 = load ptr, ptr %ptridx.i.i.i.i266, align 8
  store ptr %229, ptr %memberidx.i75, align 8
  %.pre.i = load i64, ptr %229, align 4
  %.pre161.i = load i64, ptr %memberidx3.i.i.i261, align 4
  br label %Parser_advance.exit.i.i268

Parser_advance.exit.i.i268:                       ; preds = %if.entry.i.i.i267, %while.entry.i.i265
  %230 = phi i64 [ %.pre.i, %if.entry.i.i.i267 ], [ %223, %while.entry.i.i265 ]
  %231 = phi i64 [ %.pre161.i, %if.entry.i.i.i267 ], [ 0, %while.entry.i.i265 ]
  %232 = phi i64 [ %.pre.i, %if.entry.i.i.i267 ], [ 31, %while.entry.i.i265 ]
  %233 = phi i64 [ %227, %if.entry.i.i.i267 ], [ %224, %while.entry.i.i265 ]
  %234 = icmp eq i64 %232, 31
  %235 = icmp eq i64 %231, 0
  %236 = and i1 %235, %234
  br i1 %236, label %while.entry.i.i265, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i268, %Parser_parse_class.exit
  %237 = phi i64 [ %213, %Parser_parse_class.exit ], [ %230, %Parser_advance.exit.i.i268 ]
  %238 = phi i64 [ %216, %Parser_parse_class.exit ], [ %231, %Parser_advance.exit.i.i268 ]
  %.fr.i = freeze i64 %238
  %239 = icmp eq i64 %.fr.i, 0
  br i1 %239, label %switch.early.test.i, label %while.end.i271

switch.early.test.i:                              ; preds = %Parser_new_lines.exit.i
  switch i64 %237, label %while.entry.i270 [
    i64 44, label %while.end.i271
    i64 26, label %while.end.i271
  ]

while.entry.i270:                                 ; preds = %switch.early.test.i, %switch.early.test147.i
  %240 = phi i64 [ %296, %switch.early.test147.i ], [ %237, %switch.early.test.i ]
  switch i64 %240, label %if.entry.i272 [
    i64 80, label %else.i
    i64 79, label %Parser_parse_access_modifier.exit.fold.split.i
    i64 81, label %else.fold.split.i
  ]

Parser_parse_access_modifier.exit.fold.split.i:   ; preds = %while.entry.i270
  br label %else.i

while.end.i271:                                   ; preds = %switch.early.test147.i, %switch.early.test147.i, %Parser_new_lines.exit115.i, %switch.early.test.i, %switch.early.test.i, %Parser_new_lines.exit.i
  %241 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  br label %Parser_parse_class_block.exit

if.entry.i272:                                    ; preds = %while.entry.i270
  %.pre162.i = load i64, ptr %memberidx2.i, align 8
  %.pre163.i = load ptr, ptr %3, align 8
  br label %ifend.i274

else.fold.split.i:                                ; preds = %while.entry.i270
  br label %else.i

else.i:                                           ; preds = %else.fold.split.i, %Parser_parse_access_modifier.exit.fold.split.i, %while.entry.i270
  %common.ret.op.i.ph.i = phi i64 [ 1, %Parser_parse_access_modifier.exit.fold.split.i ], [ 2, %while.entry.i270 ], [ 3, %else.fold.split.i ]
  %242 = load i64, ptr %memberidx2.i, align 8
  %243 = load ptr, ptr %3, align 8
  %memberidx2.i55.i = getelementptr inbounds %Array_Token_, ptr %243, i64 0, i32 2
  %244 = load i64, ptr %memberidx2.i55.i, align 4
  %245 = icmp slt i64 %242, %244
  br i1 %245, label %if.entry.i.i273, label %ifend.i274

if.entry.i.i273:                                  ; preds = %else.i
  %246 = add nsw i64 %242, 1
  store i64 %246, ptr %memberidx2.i, align 8
  %memberidx.i.i57.i = getelementptr inbounds %Array_Token_, ptr %243, i64 0, i32 1
  %247 = load ptr, ptr %memberidx.i.i57.i, align 8
  %ptridx.i.i58.i = getelementptr inbounds ptr, ptr %247, i64 %246
  %248 = load ptr, ptr %ptridx.i.i58.i, align 8
  store ptr %248, ptr %memberidx.i75, align 8
  br label %ifend.i274

ifend.i274:                                       ; preds = %if.entry.i.i273, %else.i, %if.entry.i272
  %249 = phi i64 [ %common.ret.op.i.ph.i, %if.entry.i.i273 ], [ %common.ret.op.i.ph.i, %else.i ], [ 2, %if.entry.i272 ]
  %250 = phi ptr [ %243, %if.entry.i.i273 ], [ %243, %else.i ], [ %.pre163.i, %if.entry.i272 ]
  %251 = phi i64 [ %246, %if.entry.i.i273 ], [ %242, %else.i ], [ %.pre162.i, %if.entry.i272 ]
  %252 = add i64 %251, 1
  %memberidx2.i61.i = getelementptr inbounds %Array_Token_, ptr %250, i64 0, i32 2
  %253 = load i64, ptr %memberidx2.i61.i, align 4
  %254 = icmp slt i64 %252, %253
  br i1 %254, label %Parser_peek.exit.i, label %Parser_peek.exit.thread.i

Parser_peek.exit.i:                               ; preds = %ifend.i274
  %memberidx.i.i63.i = getelementptr inbounds %Array_Token_, ptr %250, i64 0, i32 1
  %255 = load ptr, ptr %memberidx.i.i63.i, align 8
  %ptridx.i.i64.i = getelementptr inbounds ptr, ptr %255, i64 %252
  %common.ret.op.i62.i = load ptr, ptr %ptridx.i.i64.i, align 8
  %256 = load i64, ptr %common.ret.op.i62.i, align 4
  %257 = icmp eq i64 %256, 1
  br i1 %257, label %if.entry3.i, label %Parser_peek.exit99.i

Parser_peek.exit.thread.i:                        ; preds = %ifend.i274
  %258 = add i64 %253, -1
  %memberidx.i12.i.i = getelementptr inbounds %Array_Token_, ptr %250, i64 0, i32 1
  %259 = load ptr, ptr %memberidx.i12.i.i, align 8
  %ptridx.i13.i.i = getelementptr inbounds ptr, ptr %259, i64 %258
  %common.ret.op.i62150.i = load ptr, ptr %ptridx.i13.i.i, align 8
  %260 = load i64, ptr %common.ret.op.i62150.i, align 4
  %261 = icmp eq i64 %260, 1
  br i1 %261, label %if.entry3.i, label %Parser_peek.exit99.i

if.entry3.i:                                      ; preds = %Parser_peek.exit.thread.i, %Parser_peek.exit.i
  %262 = call ptr @malloc(i32 32)
  %263 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %263, ptr %262, align 8
  %memberidx1.i73.i = getelementptr inbounds %FieldNode, ptr %262, i64 0, i32 2
  store ptr null, ptr %memberidx1.i73.i, align 8
  %264 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 1)
  %memberidx6.i = getelementptr inbounds %FieldNode, ptr %262, i64 0, i32 3
  %265 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %265, ptr %memberidx6.i, align 8
  %266 = load ptr, ptr %memberidx.i75, align 8
  %267 = load i64, ptr %266, align 4
  %268 = icmp eq i64 %267, 36
  br i1 %268, label %if.entry9.i, label %ifend11.i

Parser_peek.exit99.i:                             ; preds = %Parser_peek.exit.thread.i, %Parser_peek.exit.i
  %269 = phi i64 [ %256, %Parser_peek.exit.i ], [ %260, %Parser_peek.exit.thread.i ]
  %270 = icmp eq i64 %269, 23
  br i1 %270, label %if.entry16.i, label %else17.i

ifend5.i:                                         ; preds = %Array_MethodNode____sl__.exit.i, %Array_FieldNode____sl__.exit.i
  %271 = load ptr, ptr %memberidx.i75, align 8
  %272 = load i64, ptr %271, align 4
  %273 = icmp eq i64 %272, 31
  %274 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i103.i = getelementptr inbounds %Array_FloError_, ptr %274, i64 0, i32 2
  %275 = load i64, ptr %memberidx3.i.i103.i, align 4
  %276 = icmp eq i64 %275, 0
  %277 = and i1 %273, %276
  br i1 %277, label %while.entry.i106.preheader.i, label %Parser_new_lines.exit115.i

while.entry.i106.preheader.i:                     ; preds = %ifend5.i
  %278 = load ptr, ptr %3, align 8
  %memberidx2.i12.i105.i = getelementptr inbounds %Array_Token_, ptr %278, i64 0, i32 2
  %memberidx.i.i.i108.i = getelementptr inbounds %Array_Token_, ptr %278, i64 0, i32 1
  %279 = load i64, ptr %memberidx2.i, align 8
  %280 = load i64, ptr %memberidx2.i12.i105.i, align 4
  %281 = icmp slt i64 %279, %280
  br i1 %281, label %while.entry.i106.i, label %while.entry.i106.us.i

while.entry.i106.us.i:                            ; preds = %while.entry.i106.preheader.i, %while.entry.i106.us.i
  br label %while.entry.i106.us.i

while.entry.i106.i:                               ; preds = %while.entry.i106.preheader.i, %Parser_advance.exit.i114.i
  %282 = phi i64 [ %289, %Parser_advance.exit.i114.i ], [ 31, %while.entry.i106.preheader.i ]
  %283 = phi i64 [ %292, %Parser_advance.exit.i114.i ], [ %279, %while.entry.i106.preheader.i ]
  %284 = load i64, ptr %memberidx2.i12.i105.i, align 4
  %285 = icmp slt i64 %283, %284
  br i1 %285, label %if.entry.i.i110.i, label %Parser_advance.exit.i114.i

if.entry.i.i110.i:                                ; preds = %while.entry.i106.i
  %286 = add nsw i64 %283, 1
  store i64 %286, ptr %memberidx2.i, align 8
  %287 = load ptr, ptr %memberidx.i.i.i108.i, align 8
  %ptridx.i.i.i109.i = getelementptr inbounds ptr, ptr %287, i64 %286
  %288 = load ptr, ptr %ptridx.i.i.i109.i, align 8
  store ptr %288, ptr %memberidx.i75, align 8
  %.pre171.i = load i64, ptr %288, align 4
  %.pre172.i = load i64, ptr %memberidx3.i.i103.i, align 4
  br label %Parser_advance.exit.i114.i

Parser_advance.exit.i114.i:                       ; preds = %if.entry.i.i110.i, %while.entry.i106.i
  %289 = phi i64 [ %.pre171.i, %if.entry.i.i110.i ], [ %282, %while.entry.i106.i ]
  %290 = phi i64 [ %.pre172.i, %if.entry.i.i110.i ], [ 0, %while.entry.i106.i ]
  %291 = phi i64 [ %.pre171.i, %if.entry.i.i110.i ], [ 31, %while.entry.i106.i ]
  %292 = phi i64 [ %286, %if.entry.i.i110.i ], [ %283, %while.entry.i106.i ]
  %293 = icmp eq i64 %291, 31
  %294 = icmp eq i64 %290, 0
  %295 = and i1 %294, %293
  br i1 %295, label %while.entry.i106.i, label %Parser_new_lines.exit115.i

Parser_new_lines.exit115.i:                       ; preds = %Parser_advance.exit.i114.i, %ifend5.i
  %296 = phi i64 [ %272, %ifend5.i ], [ %289, %Parser_advance.exit.i114.i ]
  %297 = phi i64 [ %275, %ifend5.i ], [ %290, %Parser_advance.exit.i114.i ]
  %.fr151.i = freeze i64 %297
  %298 = icmp eq i64 %.fr151.i, 0
  br i1 %298, label %switch.early.test147.i, label %while.end.i271

switch.early.test147.i:                           ; preds = %Parser_new_lines.exit115.i
  switch i64 %296, label %while.entry.i270 [
    i64 44, label %while.end.i271
    i64 26, label %while.end.i271
  ]

if.entry9.i:                                      ; preds = %if.entry3.i
  %299 = load i64, ptr %memberidx2.i, align 8
  %300 = load ptr, ptr %3, align 8
  %memberidx2.i120.i = getelementptr inbounds %Array_Token_, ptr %300, i64 0, i32 2
  %301 = load i64, ptr %memberidx2.i120.i, align 4
  %302 = icmp slt i64 %299, %301
  br i1 %302, label %if.entry.i124.i, label %Parser_advance.exit126.i

if.entry.i124.i:                                  ; preds = %if.entry9.i
  %303 = add nsw i64 %299, 1
  store i64 %303, ptr %memberidx2.i, align 8
  %memberidx.i.i122.i = getelementptr inbounds %Array_Token_, ptr %300, i64 0, i32 1
  %304 = load ptr, ptr %memberidx.i.i122.i, align 8
  %ptridx.i.i123.i = getelementptr inbounds ptr, ptr %304, i64 %303
  %305 = load ptr, ptr %ptridx.i.i123.i, align 8
  store ptr %305, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit126.i

Parser_advance.exit126.i:                         ; preds = %if.entry.i124.i, %if.entry9.i
  %306 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %306, ptr %memberidx1.i73.i, align 8
  br label %ifend11.i

ifend11.i:                                        ; preds = %Parser_advance.exit126.i, %if.entry3.i
  %memberidx13.i = getelementptr inbounds %FieldNode, ptr %262, i64 0, i32 1
  store i64 %249, ptr %memberidx13.i, align 4
  %307 = load ptr, ptr %memberidx1.i.i145, align 8
  %memberidx.i127.i = getelementptr inbounds %Array_FieldNode_, ptr %307, i64 0, i32 2
  %308 = load i64, ptr %memberidx.i127.i, align 4
  %memberidx1.i128.i = getelementptr inbounds %Array_FieldNode_, ptr %307, i64 0, i32 3
  %309 = load i64, ptr %memberidx1.i128.i, align 4
  %.not.i129.i = icmp slt i64 %308, %309
  br i1 %.not.i129.i, label %ifend11.Array_FieldNode____sl__.exit_crit_edge.i, label %if.entry.i132.i

ifend11.Array_FieldNode____sl__.exit_crit_edge.i: ; preds = %ifend11.i
  %memberidx4.i133.phi.trans.insert.i = getelementptr inbounds %Array_FieldNode_, ptr %307, i64 0, i32 1
  %.pre170.i = load ptr, ptr %memberidx4.i133.phi.trans.insert.i, align 8
  br label %Array_FieldNode____sl__.exit.i

if.entry.i132.i:                                  ; preds = %ifend11.i
  %310 = shl i64 %309, 1
  store i64 %310, ptr %memberidx1.i128.i, align 4
  %memberidx2.i.i131.i = getelementptr inbounds %Array_FieldNode_, ptr %307, i64 0, i32 1
  %311 = load ptr, ptr %memberidx2.i.i131.i, align 8
  %312 = shl i64 %309, 4
  %313 = call ptr @realloc(ptr %311, i64 %312)
  store ptr %313, ptr %memberidx2.i.i131.i, align 8
  %.pre169.i = load i64, ptr %memberidx.i127.i, align 4
  br label %Array_FieldNode____sl__.exit.i

Array_FieldNode____sl__.exit.i:                   ; preds = %if.entry.i132.i, %ifend11.Array_FieldNode____sl__.exit_crit_edge.i
  %314 = phi ptr [ %.pre170.i, %ifend11.Array_FieldNode____sl__.exit_crit_edge.i ], [ %313, %if.entry.i132.i ]
  %315 = phi i64 [ %308, %ifend11.Array_FieldNode____sl__.exit_crit_edge.i ], [ %.pre169.i, %if.entry.i132.i ]
  %316 = add i64 %315, 1
  store i64 %316, ptr %memberidx.i127.i, align 4
  %ptridx.i134.i = getelementptr inbounds ptr, ptr %314, i64 %315
  store ptr %262, ptr %ptridx.i134.i, align 8
  br label %ifend5.i

if.entry16.i:                                     ; preds = %Parser_peek.exit99.i
  %317 = call ptr @malloc(i32 42)
  %318 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %318, ptr %317, align 8
  %memberidx1.i.i74.i = getelementptr inbounds %MethodNode, ptr %317, i64 0, i32 1
  %319 = call ptr @malloc(i32 32)
  store ptr @VTableArray_ArgNode_, ptr %319, align 8
  %memberidx.i.i.i75.i = getelementptr inbounds %Array_ArgNode_, ptr %319, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i75.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %319, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i76.i = getelementptr inbounds %Array_ArgNode_, ptr %319, i64 0, i32 1
  %320 = call ptr @malloc(i32 64)
  store ptr %320, ptr %memberidx2.i.i.i76.i, align 8
  store i64 0, ptr %memberidx.i.i.i75.i, align 4
  store ptr %319, ptr %memberidx1.i.i74.i, align 8
  %memberidx4.i.i78.i = getelementptr inbounds %MethodNode, ptr %317, i64 0, i32 5
  store i1 true, ptr %memberidx4.i.i78.i, align 1
  %memberidx5.i.i.i = getelementptr inbounds %MethodNode, ptr %317, i64 0, i32 6
  store i1 false, ptr %memberidx5.i.i.i, align 1
  %321 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 23)
  %322 = load ptr, ptr %memberidx.i75, align 8
  %323 = load i64, ptr %322, align 4
  %.not.i80.i = icmp eq i64 %323, 24
  br i1 %.not.i80.i, label %ifend.i86.i, label %if.entry.i84.i

if.entry.i84.i:                                   ; preds = %if.entry16.i
  %memberidx3.i81.i = getelementptr inbounds %IdentifierToken, ptr %322, i64 0, i32 2
  %324 = load ptr, ptr %memberidx3.i81.i, align 8
  %325 = call ptr @malloc(i32 32)
  store i32 1936287860, ptr %325, align 8
  %326 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %326, align 8
  %memberidx.i.i53.i.i = getelementptr inbounds %string, ptr %326, i64 0, i32 1
  store ptr %325, ptr %memberidx.i.i53.i.i, align 8
  %memberidx1.i.i54.i.i = getelementptr inbounds %string, ptr %326, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i54.i.i, align 4
  %memberidx2.i.i55.i.i = getelementptr inbounds %string, ptr %326, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i55.i.i, align 4
  %memberidx.i.i82.i = getelementptr inbounds %string, ptr %324, i64 0, i32 2
  %327 = load i64, ptr %memberidx.i.i82.i, align 4
  %.not.i.i83.i = icmp eq i64 %327, 4
  br i1 %.not.i.i83.i, label %ifend.i.i.i, label %ifend.i86.i

ifend.i.i.i:                                      ; preds = %if.entry.i84.i
  %memberidx2.i.i85.i = getelementptr inbounds %string, ptr %324, i64 0, i32 1
  %328 = load ptr, ptr %memberidx2.i.i85.i, align 8
  %329 = call i64 @memcmp(ptr %328, ptr nonnull %325, i64 4)
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %if.entry4.i.i, label %ifend.i86.i

ifend.i86.i:                                      ; preds = %if.entry.i.i88.i, %if.entry4.i.i, %ifend.i.i.i, %if.entry.i84.i, %if.entry16.i
  %331 = load ptr, ptr %memberidx.i75, align 8
  %332 = load i64, ptr %331, align 4
  %.not52.i.i = icmp eq i64 %332, 24
  br i1 %.not52.i.i, label %ifend12.i.i, label %if.entry10.i.i

if.entry4.i.i:                                    ; preds = %ifend.i.i.i
  store i1 false, ptr %memberidx4.i.i78.i, align 1
  %333 = load i64, ptr %memberidx2.i, align 8
  %334 = load ptr, ptr %3, align 8
  %memberidx2.i59.i.i = getelementptr inbounds %Array_Token_, ptr %334, i64 0, i32 2
  %335 = load i64, ptr %memberidx2.i59.i.i, align 4
  %336 = icmp slt i64 %333, %335
  br i1 %336, label %if.entry.i.i88.i, label %ifend.i86.i

if.entry.i.i88.i:                                 ; preds = %if.entry4.i.i
  %337 = add nsw i64 %333, 1
  store i64 %337, ptr %memberidx2.i, align 8
  %memberidx.i.i61.i.i = getelementptr inbounds %Array_Token_, ptr %334, i64 0, i32 1
  %338 = load ptr, ptr %memberidx.i.i61.i.i, align 8
  %ptridx.i.i.i87.i = getelementptr inbounds ptr, ptr %338, i64 %337
  %339 = load ptr, ptr %ptridx.i.i.i87.i, align 8
  store ptr %339, ptr %memberidx.i75, align 8
  br label %ifend.i86.i

if.entry10.i.i:                                   ; preds = %ifend.i86.i
  %340 = load i1, ptr %memberidx4.i.i78.i, align 1
  br i1 %340, label %ifend16.i.i, label %if.entry14.i.i

ifend12.i.i:                                      ; preds = %ifend16.i.i, %ifend.i86.i
  %341 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 24)
  %342 = load ptr, ptr %memberidx.i75, align 8
  %343 = load i64, ptr %342, align 4
  %344 = icmp eq i64 %343, 1
  br i1 %344, label %if.entry20.i.i, label %else21.i.i

if.entry14.i.i:                                   ; preds = %if.entry10.i.i
  %345 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 3)
  br label %ifend16.i.i

ifend16.i.i:                                      ; preds = %if.entry14.i.i, %if.entry10.i.i
  %346 = load ptr, ptr %memberidx1.i.i74.i, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %346)
  br label %ifend12.i.i

if.entry20.i.i:                                   ; preds = %ifend12.i.i
  %347 = load i64, ptr %memberidx2.i, align 8
  %348 = load ptr, ptr %3, align 8
  %memberidx2.i64.i.i = getelementptr inbounds %Array_Token_, ptr %348, i64 0, i32 2
  %349 = load i64, ptr %memberidx2.i64.i.i, align 4
  %350 = icmp slt i64 %347, %349
  br i1 %350, label %if.entry.i68.i.i, label %Parser_advance.exit70.i.i

if.entry.i68.i.i:                                 ; preds = %if.entry20.i.i
  %351 = add nsw i64 %347, 1
  store i64 %351, ptr %memberidx2.i, align 8
  %memberidx.i.i66.i.i = getelementptr inbounds %Array_Token_, ptr %348, i64 0, i32 1
  %352 = load ptr, ptr %memberidx.i.i66.i.i, align 8
  %ptridx.i.i67.i.i = getelementptr inbounds ptr, ptr %352, i64 %351
  %353 = load ptr, ptr %ptridx.i.i67.i.i, align 8
  store ptr %353, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit70.i.i

Parser_advance.exit70.i.i:                        ; preds = %if.entry.i68.i.i, %if.entry20.i.i
  %memberidx23.i.i = getelementptr inbounds %MethodNode, ptr %317, i64 0, i32 4
  %354 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %354, ptr %memberidx23.i.i, align 8
  br label %ifend22.i.i

else21.i.i:                                       ; preds = %ifend12.i.i
  %memberidx24.i.i = getelementptr inbounds %MethodNode, ptr %317, i64 0, i32 4
  %355 = call ptr @malloc(i32 16)
  %356 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %356, i8 0, i64 32, i1 false)
  store ptr %356, ptr %355, align 8
  %memberidx.i74.i.i = getelementptr inbounds %TypeNode, ptr %355, i64 0, i32 1
  store i64 12, ptr %memberidx.i74.i.i, align 4
  store ptr %355, ptr %memberidx24.i.i, align 8
  br label %ifend22.i.i

ifend22.i.i:                                      ; preds = %else21.i.i, %Parser_advance.exit70.i.i
  %357 = load ptr, ptr %memberidx.i75, align 8
  %358 = load i64, ptr %357, align 4
  %359 = icmp eq i64 %358, 25
  br i1 %359, label %if.entry27.i.i, label %else28.i.i

if.entry27.i.i:                                   ; preds = %ifend22.i.i
  %memberidx30.i.i = getelementptr inbounds %MethodNode, ptr %317, i64 0, i32 2
  %360 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %360, ptr %memberidx30.i.i, align 8
  br label %Parser_parse_method.exit.i

else28.i.i:                                       ; preds = %ifend22.i.i
  store i1 true, ptr %memberidx5.i.i.i, align 1
  br label %Parser_parse_method.exit.i

Parser_parse_method.exit.i:                       ; preds = %else28.i.i, %if.entry27.i.i
  %memberidx19.i = getelementptr inbounds %MethodNode, ptr %317, i64 0, i32 3
  store i64 %249, ptr %memberidx19.i, align 4
  %361 = load ptr, ptr %memberidx4.i.i148, align 8
  %memberidx.i67.i = getelementptr inbounds %Array_MethodNode_, ptr %361, i64 0, i32 2
  %362 = load i64, ptr %memberidx.i67.i, align 4
  %memberidx1.i68.i = getelementptr inbounds %Array_MethodNode_, ptr %361, i64 0, i32 3
  %363 = load i64, ptr %memberidx1.i68.i, align 4
  %.not.i.i275 = icmp slt i64 %362, %363
  br i1 %.not.i.i275, label %Parser_parse_method.exit.Array_MethodNode____sl__.exit_crit_edge.i, label %if.entry.i71.i

Parser_parse_method.exit.Array_MethodNode____sl__.exit_crit_edge.i: ; preds = %Parser_parse_method.exit.i
  %memberidx4.i.phi.trans.insert.i = getelementptr inbounds %Array_MethodNode_, ptr %361, i64 0, i32 1
  %.pre168.i = load ptr, ptr %memberidx4.i.phi.trans.insert.i, align 8
  br label %Array_MethodNode____sl__.exit.i

if.entry.i71.i:                                   ; preds = %Parser_parse_method.exit.i
  %364 = shl i64 %363, 1
  store i64 %364, ptr %memberidx1.i68.i, align 4
  %memberidx2.i.i70.i = getelementptr inbounds %Array_MethodNode_, ptr %361, i64 0, i32 1
  %365 = load ptr, ptr %memberidx2.i.i70.i, align 8
  %366 = shl i64 %363, 4
  %367 = call ptr @realloc(ptr %365, i64 %366)
  store ptr %367, ptr %memberidx2.i.i70.i, align 8
  %.pre167.i = load i64, ptr %memberidx.i67.i, align 4
  br label %Array_MethodNode____sl__.exit.i

Array_MethodNode____sl__.exit.i:                  ; preds = %if.entry.i71.i, %Parser_parse_method.exit.Array_MethodNode____sl__.exit_crit_edge.i
  %368 = phi ptr [ %.pre168.i, %Parser_parse_method.exit.Array_MethodNode____sl__.exit_crit_edge.i ], [ %367, %if.entry.i71.i ]
  %369 = phi i64 [ %362, %Parser_parse_method.exit.Array_MethodNode____sl__.exit_crit_edge.i ], [ %.pre167.i, %if.entry.i71.i ]
  %370 = add i64 %369, 1
  store i64 %370, ptr %memberidx.i67.i, align 4
  %ptridx.i.i276 = getelementptr inbounds ptr, ptr %368, i64 %369
  store ptr %317, ptr %ptridx.i.i276, align 8
  br label %ifend5.i

else17.i:                                         ; preds = %Parser_peek.exit99.i
  %371 = call ptr @malloc(i32 152)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(19) %371, ptr noundef nonnull align 8 dereferenceable(19) @74, i64 19, i1 false)
  %372 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %372, align 8
  %memberidx.i.i51.i = getelementptr inbounds %string, ptr %372, i64 0, i32 1
  store ptr %371, ptr %memberidx.i.i51.i, align 8
  %memberidx1.i.i52.i = getelementptr inbounds %string, ptr %372, i64 0, i32 2
  store i64 19, ptr %memberidx1.i.i52.i, align 4
  %memberidx2.i.i53.i = getelementptr inbounds %string, ptr %372, i64 0, i32 3
  store i64 19, ptr %memberidx2.i.i53.i, align 4
  %373 = load ptr, ptr %memberidx1.i, align 8
  %374 = call ptr @malloc(i32 24)
  %375 = load ptr, ptr %memberidx.i75, align 8
  %memberidx2.i.i277 = getelementptr inbounds %Token, ptr %375, i64 0, i32 1
  %376 = load ptr, ptr %memberidx2.i.i277, align 8
  store i64 2, ptr %374, align 4
  %memberidx1.i.i.i278 = getelementptr inbounds %FloError, ptr %374, i64 0, i32 2
  store ptr %376, ptr %memberidx1.i.i.i278, align 8
  %memberidx2.i.i44.i = getelementptr inbounds %FloError, ptr %374, i64 0, i32 1
  store ptr %372, ptr %memberidx2.i.i44.i, align 8
  %memberidx.i.i45.i = getelementptr inbounds %Array_FloError_, ptr %373, i64 0, i32 2
  %377 = load i64, ptr %memberidx.i.i45.i, align 4
  %memberidx1.i4.i.i = getelementptr inbounds %Array_FloError_, ptr %373, i64 0, i32 3
  %378 = load i64, ptr %memberidx1.i4.i.i, align 4
  %.not.i.i.i279 = icmp slt i64 %377, %378
  br i1 %.not.i.i.i279, label %else17.Parser_error.exit_crit_edge.i, label %if.entry.i.i47.i

else17.Parser_error.exit_crit_edge.i:             ; preds = %else17.i
  %memberidx4.i.i.phi.trans.insert.i = getelementptr inbounds %Array_FloError_, ptr %373, i64 0, i32 1
  %.pre166.i = load ptr, ptr %memberidx4.i.i.phi.trans.insert.i, align 8
  br label %Parser_error.exit.i

if.entry.i.i47.i:                                 ; preds = %else17.i
  %379 = shl i64 %378, 1
  store i64 %379, ptr %memberidx1.i4.i.i, align 4
  %memberidx2.i.i.i.i280 = getelementptr inbounds %Array_FloError_, ptr %373, i64 0, i32 1
  %380 = load ptr, ptr %memberidx2.i.i.i.i280, align 8
  %381 = shl i64 %378, 4
  %382 = call ptr @realloc(ptr %380, i64 %381)
  store ptr %382, ptr %memberidx2.i.i.i.i280, align 8
  %.pre165.i = load i64, ptr %memberidx.i.i45.i, align 4
  br label %Parser_error.exit.i

Parser_error.exit.i:                              ; preds = %if.entry.i.i47.i, %else17.Parser_error.exit_crit_edge.i
  %383 = phi ptr [ %.pre166.i, %else17.Parser_error.exit_crit_edge.i ], [ %382, %if.entry.i.i47.i ]
  %384 = phi i64 [ %377, %else17.Parser_error.exit_crit_edge.i ], [ %.pre165.i, %if.entry.i.i47.i ]
  %385 = add i64 %384, 1
  store i64 %385, ptr %memberidx.i.i45.i, align 4
  %ptridx.i.i.i281 = getelementptr inbounds ptr, ptr %383, i64 %384
  store ptr %374, ptr %ptridx.i.i.i281, align 8
  br label %Parser_parse_class_block.exit

Parser_parse_class_block.exit:                    ; preds = %while.end.i271, %Parser_error.exit.i
  %memberidx.i155 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %111, i64 0, i32 2
  %386 = load i64, ptr %memberidx.i155, align 4
  %memberidx1.i156 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %111, i64 0, i32 3
  %387 = load i64, ptr %memberidx1.i156, align 4
  %.not.i157 = icmp slt i64 %386, %387
  br i1 %.not.i157, label %Parser_parse_class_block.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge, label %if.entry.i160

Parser_parse_class_block.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge: ; preds = %Parser_parse_class_block.exit
  %memberidx4.i161.phi.trans.insert = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %111, i64 0, i32 1
  %.pre348 = load ptr, ptr %memberidx4.i161.phi.trans.insert, align 8
  br label %Array_ClassDeclarationNode____sl__.exit

if.entry.i160:                                    ; preds = %Parser_parse_class_block.exit
  %388 = shl i64 %387, 1
  store i64 %388, ptr %memberidx1.i156, align 4
  %memberidx2.i.i159 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %111, i64 0, i32 1
  %389 = load ptr, ptr %memberidx2.i.i159, align 8
  %390 = shl i64 %387, 4
  %391 = call ptr @realloc(ptr %389, i64 %390)
  store ptr %391, ptr %memberidx2.i.i159, align 8
  %.pre347 = load i64, ptr %memberidx.i155, align 4
  br label %Array_ClassDeclarationNode____sl__.exit

Array_ClassDeclarationNode____sl__.exit:          ; preds = %Parser_parse_class_block.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge, %if.entry.i160
  %392 = phi ptr [ %.pre348, %Parser_parse_class_block.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge ], [ %391, %if.entry.i160 ]
  %393 = phi i64 [ %386, %Parser_parse_class_block.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge ], [ %.pre347, %if.entry.i160 ]
  %394 = add i64 %393, 1
  store i64 %394, ptr %memberidx.i155, align 4
  %ptridx.i162 = getelementptr inbounds ptr, ptr %392, i64 %393
  store ptr %119, ptr %ptridx.i162, align 8
  br label %ifend

if.entry11:                                       ; preds = %while.entry
  %395 = load ptr, ptr %memberidx14, align 8
  %396 = load i64, ptr %memberidx2.i, align 8
  %397 = load ptr, ptr %3, align 8
  %memberidx2.i.i283 = getelementptr inbounds %Array_Token_, ptr %397, i64 0, i32 2
  %398 = load i64, ptr %memberidx2.i.i283, align 4
  %399 = icmp slt i64 %396, %398
  br i1 %399, label %if.entry.i.i287, label %Parser_advance.exit.i290

if.entry.i.i287:                                  ; preds = %if.entry11
  %400 = add nsw i64 %396, 1
  store i64 %400, ptr %memberidx2.i, align 8
  %memberidx.i.i.i285 = getelementptr inbounds %Array_Token_, ptr %397, i64 0, i32 1
  %401 = load ptr, ptr %memberidx.i.i.i285, align 8
  %ptridx.i.i.i286 = getelementptr inbounds ptr, ptr %401, i64 %400
  %402 = load ptr, ptr %ptridx.i.i.i286, align 8
  store ptr %402, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i290

Parser_advance.exit.i290:                         ; preds = %if.entry.i.i287, %if.entry11
  %403 = call ptr @malloc(i32 24)
  %404 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %404, ptr %403, align 8
  %memberidx1.i38.i = getelementptr inbounds %EnumNode, ptr %403, i64 0, i32 1
  %405 = call ptr @malloc(i32 32)
  store ptr @VTableArray_EnumNodeField_, ptr %405, align 8
  %memberidx.i.i39.i = getelementptr inbounds %Array_EnumNodeField_, ptr %405, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i39.i, align 4
  %memberidx1.i.i.i288 = getelementptr inbounds %Array_EnumNodeField_, ptr %405, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i288, align 4
  %memberidx2.i.i40.i = getelementptr inbounds %Array_EnumNodeField_, ptr %405, i64 0, i32 1
  %406 = call ptr @malloc(i32 64)
  store ptr %406, ptr %memberidx2.i.i40.i, align 8
  store i64 0, ptr %memberidx.i.i39.i, align 4
  store ptr %405, ptr %memberidx1.i38.i, align 8
  %memberidx4.i42.i = getelementptr inbounds %EnumNode, ptr %403, i64 0, i32 2
  store ptr null, ptr %memberidx4.i42.i, align 8
  %407 = load ptr, ptr %memberidx.i75, align 8
  %408 = load i64, ptr %407, align 4
  %409 = icmp eq i64 %408, 23
  br i1 %409, label %if.entry.i291, label %ifend.i293

if.entry.i291:                                    ; preds = %Parser_advance.exit.i290
  %410 = load i64, ptr %memberidx2.i, align 8
  %411 = load ptr, ptr %3, align 8
  %memberidx2.i44.i = getelementptr inbounds %Array_Token_, ptr %411, i64 0, i32 2
  %412 = load i64, ptr %memberidx2.i44.i, align 4
  %413 = icmp slt i64 %410, %412
  br i1 %413, label %if.entry.i48.i, label %Parser_advance.exit49.i

if.entry.i48.i:                                   ; preds = %if.entry.i291
  %414 = add nsw i64 %410, 1
  store i64 %414, ptr %memberidx2.i, align 8
  %memberidx.i.i46.i = getelementptr inbounds %Array_Token_, ptr %411, i64 0, i32 1
  %415 = load ptr, ptr %memberidx.i.i46.i, align 8
  %ptridx.i.i47.i = getelementptr inbounds ptr, ptr %415, i64 %414
  %416 = load ptr, ptr %ptridx.i.i47.i, align 8
  store ptr %416, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit49.i

Parser_advance.exit49.i:                          ; preds = %if.entry.i48.i, %if.entry.i291
  %417 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %417, ptr %memberidx4.i42.i, align 8
  %418 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 24)
  %.pre.i292 = load ptr, ptr %memberidx.i75, align 8
  %.pre101.i = load i64, ptr %.pre.i292, align 4
  br label %ifend.i293

ifend.i293:                                       ; preds = %Parser_advance.exit49.i, %Parser_advance.exit.i290
  %419 = phi i64 [ %408, %Parser_advance.exit.i290 ], [ %.pre101.i, %Parser_advance.exit49.i ]
  %420 = icmp eq i64 %419, 31
  %421 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i53.i = getelementptr inbounds %Array_FloError_, ptr %421, i64 0, i32 2
  %422 = load i64, ptr %memberidx3.i.i53.i, align 4
  %423 = icmp eq i64 %422, 0
  %424 = and i1 %420, %423
  br i1 %424, label %while.entry.i56.preheader.i, label %Parser_new_lines.exit65.i

while.entry.i56.preheader.i:                      ; preds = %ifend.i293
  %425 = load ptr, ptr %3, align 8
  %memberidx2.i12.i55.i = getelementptr inbounds %Array_Token_, ptr %425, i64 0, i32 2
  %memberidx.i.i.i58.i = getelementptr inbounds %Array_Token_, ptr %425, i64 0, i32 1
  %426 = load i64, ptr %memberidx2.i, align 8
  %427 = load i64, ptr %memberidx2.i12.i55.i, align 4
  %428 = icmp slt i64 %426, %427
  br i1 %428, label %while.entry.i56.i, label %while.entry.i56.us.i

while.entry.i56.us.i:                             ; preds = %while.entry.i56.preheader.i, %while.entry.i56.us.i
  br label %while.entry.i56.us.i

while.entry.i56.i:                                ; preds = %while.entry.i56.preheader.i, %Parser_advance.exit.i64.i
  %429 = phi i64 [ %437, %Parser_advance.exit.i64.i ], [ %426, %while.entry.i56.preheader.i ]
  %430 = load i64, ptr %memberidx2.i12.i55.i, align 4
  %431 = icmp slt i64 %429, %430
  br i1 %431, label %if.entry.i.i60.i, label %Parser_advance.exit.i64.i

if.entry.i.i60.i:                                 ; preds = %while.entry.i56.i
  %432 = add nsw i64 %429, 1
  store i64 %432, ptr %memberidx2.i, align 8
  %433 = load ptr, ptr %memberidx.i.i.i58.i, align 8
  %ptridx.i.i.i59.i = getelementptr inbounds ptr, ptr %433, i64 %432
  %434 = load ptr, ptr %ptridx.i.i.i59.i, align 8
  store ptr %434, ptr %memberidx.i75, align 8
  %.pre102.i = load i64, ptr %434, align 4
  %.pre103.i = load i64, ptr %memberidx3.i.i53.i, align 4
  br label %Parser_advance.exit.i64.i

Parser_advance.exit.i64.i:                        ; preds = %if.entry.i.i60.i, %while.entry.i56.i
  %435 = phi i64 [ %.pre103.i, %if.entry.i.i60.i ], [ 0, %while.entry.i56.i ]
  %436 = phi i64 [ %.pre102.i, %if.entry.i.i60.i ], [ 31, %while.entry.i56.i ]
  %437 = phi i64 [ %432, %if.entry.i.i60.i ], [ %429, %while.entry.i56.i ]
  %438 = icmp eq i64 %436, 31
  %439 = icmp eq i64 %435, 0
  %440 = and i1 %439, %438
  br i1 %440, label %while.entry.i56.i, label %Parser_new_lines.exit65.i

Parser_new_lines.exit65.i:                        ; preds = %Parser_advance.exit.i64.i, %ifend.i293
  %441 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %442 = load ptr, ptr %memberidx.i75, align 8
  %443 = load i64, ptr %442, align 4
  %444 = icmp eq i64 %443, 31
  %445 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i69.i294 = getelementptr inbounds %Array_FloError_, ptr %445, i64 0, i32 2
  %446 = load i64, ptr %memberidx3.i.i69.i294, align 4
  %447 = icmp eq i64 %446, 0
  %448 = and i1 %444, %447
  br i1 %448, label %while.entry.i72.preheader.i, label %Parser_new_lines.exit81.i

while.entry.i72.preheader.i:                      ; preds = %Parser_new_lines.exit65.i
  %449 = load ptr, ptr %3, align 8
  %memberidx2.i12.i71.i = getelementptr inbounds %Array_Token_, ptr %449, i64 0, i32 2
  %memberidx.i.i.i74.i = getelementptr inbounds %Array_Token_, ptr %449, i64 0, i32 1
  %450 = load i64, ptr %memberidx2.i, align 8
  %451 = load i64, ptr %memberidx2.i12.i71.i, align 4
  %452 = icmp slt i64 %450, %451
  br i1 %452, label %while.entry.i72.i, label %while.entry.i72.us.i

while.entry.i72.us.i:                             ; preds = %while.entry.i72.preheader.i, %while.entry.i72.us.i
  br label %while.entry.i72.us.i

while.entry.i72.i:                                ; preds = %while.entry.i72.preheader.i, %Parser_advance.exit.i80.i
  %453 = phi i64 [ %460, %Parser_advance.exit.i80.i ], [ 31, %while.entry.i72.preheader.i ]
  %454 = phi i64 [ %463, %Parser_advance.exit.i80.i ], [ %450, %while.entry.i72.preheader.i ]
  %455 = load i64, ptr %memberidx2.i12.i71.i, align 4
  %456 = icmp slt i64 %454, %455
  br i1 %456, label %if.entry.i.i76.i, label %Parser_advance.exit.i80.i

if.entry.i.i76.i:                                 ; preds = %while.entry.i72.i
  %457 = add nsw i64 %454, 1
  store i64 %457, ptr %memberidx2.i, align 8
  %458 = load ptr, ptr %memberidx.i.i.i74.i, align 8
  %ptridx.i.i.i75.i = getelementptr inbounds ptr, ptr %458, i64 %457
  %459 = load ptr, ptr %ptridx.i.i.i75.i, align 8
  store ptr %459, ptr %memberidx.i75, align 8
  %.pre104.i = load i64, ptr %459, align 4
  %.pre105.i = load i64, ptr %memberidx3.i.i69.i294, align 4
  br label %Parser_advance.exit.i80.i

Parser_advance.exit.i80.i:                        ; preds = %if.entry.i.i76.i, %while.entry.i72.i
  %460 = phi i64 [ %.pre104.i, %if.entry.i.i76.i ], [ %453, %while.entry.i72.i ]
  %461 = phi i64 [ %.pre105.i, %if.entry.i.i76.i ], [ 0, %while.entry.i72.i ]
  %462 = phi i64 [ %.pre104.i, %if.entry.i.i76.i ], [ 31, %while.entry.i72.i ]
  %463 = phi i64 [ %457, %if.entry.i.i76.i ], [ %454, %while.entry.i72.i ]
  %464 = icmp eq i64 %462, 31
  %465 = icmp eq i64 %461, 0
  %466 = and i1 %465, %464
  br i1 %466, label %while.entry.i72.i, label %Parser_new_lines.exit81.i

Parser_new_lines.exit81.i:                        ; preds = %Parser_advance.exit.i80.i, %Parser_new_lines.exit65.i
  %467 = phi i64 [ %443, %Parser_new_lines.exit65.i ], [ %460, %Parser_advance.exit.i80.i ]
  %468 = icmp eq i64 %467, 51
  br i1 %468, label %while.entry.i295, label %Parser_parse_enum.exit

while.entry.i295:                                 ; preds = %Parser_new_lines.exit81.i, %Parser_new_lines.exit.i308
  %469 = call ptr @malloc(i32 16)
  %470 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %470, ptr %469, align 8
  %memberidx1.i89.i = getelementptr inbounds %EnumNodeField, ptr %469, i64 0, i32 1
  store ptr null, ptr %memberidx1.i89.i, align 8
  %471 = load ptr, ptr %memberidx.i75, align 8
  %472 = load i64, ptr %471, align 4
  %473 = icmp eq i64 %472, 36
  br i1 %473, label %if.entry7.i, label %ifend9.i

if.entry7.i:                                      ; preds = %while.entry.i295
  %474 = load i64, ptr %memberidx2.i, align 8
  %475 = load ptr, ptr %3, align 8
  %memberidx2.i83.i = getelementptr inbounds %Array_Token_, ptr %475, i64 0, i32 2
  %476 = load i64, ptr %memberidx2.i83.i, align 4
  %477 = icmp slt i64 %474, %476
  br i1 %477, label %if.entry.i87.i, label %Parser_advance.exit88.i

if.entry.i87.i:                                   ; preds = %if.entry7.i
  %478 = add nsw i64 %474, 1
  store i64 %478, ptr %memberidx2.i, align 8
  %memberidx.i.i85.i = getelementptr inbounds %Array_Token_, ptr %475, i64 0, i32 1
  %479 = load ptr, ptr %memberidx.i.i85.i, align 8
  %ptridx.i.i86.i = getelementptr inbounds ptr, ptr %479, i64 %478
  %480 = load ptr, ptr %ptridx.i.i86.i, align 8
  store ptr %480, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit88.i

Parser_advance.exit88.i:                          ; preds = %if.entry.i87.i, %if.entry7.i
  %481 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %481, ptr %memberidx1.i89.i, align 8
  br label %ifend9.i

ifend9.i:                                         ; preds = %Parser_advance.exit88.i, %while.entry.i295
  %482 = load i64, ptr %memberidx.i.i39.i, align 4
  %483 = load i64, ptr %memberidx1.i.i.i288, align 4
  %.not.i.i297 = icmp slt i64 %482, %483
  br i1 %.not.i.i297, label %ifend9.Array_EnumNodeField____sl__.exit_crit_edge.i, label %if.entry.i37.i

ifend9.Array_EnumNodeField____sl__.exit_crit_edge.i: ; preds = %ifend9.i
  %.pre107.i = load ptr, ptr %memberidx2.i.i40.i, align 8
  br label %Array_EnumNodeField____sl__.exit.i

if.entry.i37.i:                                   ; preds = %ifend9.i
  %484 = shl i64 %483, 1
  store i64 %484, ptr %memberidx1.i.i.i288, align 4
  %485 = load ptr, ptr %memberidx2.i.i40.i, align 8
  %486 = shl i64 %483, 4
  %487 = call ptr @realloc(ptr %485, i64 %486)
  store ptr %487, ptr %memberidx2.i.i40.i, align 8
  %.pre106.i = load i64, ptr %memberidx.i.i39.i, align 4
  br label %Array_EnumNodeField____sl__.exit.i

Array_EnumNodeField____sl__.exit.i:               ; preds = %if.entry.i37.i, %ifend9.Array_EnumNodeField____sl__.exit_crit_edge.i
  %488 = phi ptr [ %.pre107.i, %ifend9.Array_EnumNodeField____sl__.exit_crit_edge.i ], [ %487, %if.entry.i37.i ]
  %489 = phi i64 [ %482, %ifend9.Array_EnumNodeField____sl__.exit_crit_edge.i ], [ %.pre106.i, %if.entry.i37.i ]
  %490 = add i64 %489, 1
  store i64 %490, ptr %memberidx.i.i39.i, align 4
  %ptridx.i.i298 = getelementptr inbounds ptr, ptr %488, i64 %489
  store ptr %469, ptr %ptridx.i.i298, align 8
  %491 = load ptr, ptr %memberidx.i75, align 8
  %492 = load i64, ptr %491, align 4
  %493 = icmp eq i64 %492, 31
  %494 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i299 = getelementptr inbounds %Array_FloError_, ptr %494, i64 0, i32 2
  %495 = load i64, ptr %memberidx3.i.i.i299, align 4
  %496 = icmp eq i64 %495, 0
  %497 = and i1 %493, %496
  br i1 %497, label %while.entry.i.preheader.i302, label %Parser_new_lines.exit.i308

while.entry.i.preheader.i302:                     ; preds = %Array_EnumNodeField____sl__.exit.i
  %498 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i300 = getelementptr inbounds %Array_Token_, ptr %498, i64 0, i32 2
  %memberidx.i.i.i.i301 = getelementptr inbounds %Array_Token_, ptr %498, i64 0, i32 1
  %499 = load i64, ptr %memberidx2.i, align 8
  %500 = load i64, ptr %memberidx2.i12.i.i300, align 4
  %501 = icmp slt i64 %499, %500
  br i1 %501, label %while.entry.i.i304, label %while.entry.i.us.i303

while.entry.i.us.i303:                            ; preds = %while.entry.i.preheader.i302, %while.entry.i.us.i303
  br label %while.entry.i.us.i303

while.entry.i.i304:                               ; preds = %while.entry.i.preheader.i302, %Parser_advance.exit.i.i307
  %502 = phi i64 [ %509, %Parser_advance.exit.i.i307 ], [ 31, %while.entry.i.preheader.i302 ]
  %503 = phi i64 [ %512, %Parser_advance.exit.i.i307 ], [ %499, %while.entry.i.preheader.i302 ]
  %504 = load i64, ptr %memberidx2.i12.i.i300, align 4
  %505 = icmp slt i64 %503, %504
  br i1 %505, label %if.entry.i.i.i306, label %Parser_advance.exit.i.i307

if.entry.i.i.i306:                                ; preds = %while.entry.i.i304
  %506 = add nsw i64 %503, 1
  store i64 %506, ptr %memberidx2.i, align 8
  %507 = load ptr, ptr %memberidx.i.i.i.i301, align 8
  %ptridx.i.i.i.i305 = getelementptr inbounds ptr, ptr %507, i64 %506
  %508 = load ptr, ptr %ptridx.i.i.i.i305, align 8
  store ptr %508, ptr %memberidx.i75, align 8
  %.pre108.i = load i64, ptr %508, align 4
  %.pre109.i = load i64, ptr %memberidx3.i.i.i299, align 4
  br label %Parser_advance.exit.i.i307

Parser_advance.exit.i.i307:                       ; preds = %if.entry.i.i.i306, %while.entry.i.i304
  %509 = phi i64 [ %.pre108.i, %if.entry.i.i.i306 ], [ %502, %while.entry.i.i304 ]
  %510 = phi i64 [ %.pre109.i, %if.entry.i.i.i306 ], [ 0, %while.entry.i.i304 ]
  %511 = phi i64 [ %.pre108.i, %if.entry.i.i.i306 ], [ 31, %while.entry.i.i304 ]
  %512 = phi i64 [ %506, %if.entry.i.i.i306 ], [ %503, %while.entry.i.i304 ]
  %513 = icmp eq i64 %511, 31
  %514 = icmp eq i64 %510, 0
  %515 = and i1 %514, %513
  br i1 %515, label %while.entry.i.i304, label %Parser_new_lines.exit.i308

Parser_new_lines.exit.i308:                       ; preds = %Parser_advance.exit.i.i307, %Array_EnumNodeField____sl__.exit.i
  %516 = phi i64 [ %492, %Array_EnumNodeField____sl__.exit.i ], [ %509, %Parser_advance.exit.i.i307 ]
  %517 = icmp eq i64 %516, 51
  br i1 %517, label %while.entry.i295, label %Parser_parse_enum.exit

Parser_parse_enum.exit:                           ; preds = %Parser_new_lines.exit.i308, %Parser_new_lines.exit81.i
  %518 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %memberidx.i164 = getelementptr inbounds %Array_EnumNode_, ptr %395, i64 0, i32 2
  %519 = load i64, ptr %memberidx.i164, align 4
  %memberidx1.i165 = getelementptr inbounds %Array_EnumNode_, ptr %395, i64 0, i32 3
  %520 = load i64, ptr %memberidx1.i165, align 4
  %.not.i166 = icmp slt i64 %519, %520
  br i1 %.not.i166, label %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge, label %if.entry.i169

Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge: ; preds = %Parser_parse_enum.exit
  %memberidx4.i170.phi.trans.insert = getelementptr inbounds %Array_EnumNode_, ptr %395, i64 0, i32 1
  %.pre335 = load ptr, ptr %memberidx4.i170.phi.trans.insert, align 8
  br label %Array_EnumNode____sl__.exit

if.entry.i169:                                    ; preds = %Parser_parse_enum.exit
  %521 = shl i64 %520, 1
  store i64 %521, ptr %memberidx1.i165, align 4
  %memberidx2.i.i168 = getelementptr inbounds %Array_EnumNode_, ptr %395, i64 0, i32 1
  %522 = load ptr, ptr %memberidx2.i.i168, align 8
  %523 = shl i64 %520, 4
  %524 = call ptr @realloc(ptr %522, i64 %523)
  store ptr %524, ptr %memberidx2.i.i168, align 8
  %.pre334 = load i64, ptr %memberidx.i164, align 4
  br label %Array_EnumNode____sl__.exit

Array_EnumNode____sl__.exit:                      ; preds = %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge, %if.entry.i169
  %525 = phi ptr [ %.pre335, %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge ], [ %524, %if.entry.i169 ]
  %526 = phi i64 [ %519, %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge ], [ %.pre334, %if.entry.i169 ]
  %527 = add i64 %526, 1
  store i64 %527, ptr %memberidx.i164, align 4
  %ptridx.i171 = getelementptr inbounds ptr, ptr %525, i64 %526
  store ptr %403, ptr %ptridx.i171, align 8
  br label %ifend

if.entry17:                                       ; preds = %while.entry
  %528 = load ptr, ptr %memberidx20, align 8
  %529 = load i64, ptr %memberidx2.i, align 8
  %530 = load ptr, ptr %3, align 8
  %memberidx2.i.i174 = getelementptr inbounds %Array_Token_, ptr %530, i64 0, i32 2
  %531 = load i64, ptr %memberidx2.i.i174, align 4
  %532 = icmp slt i64 %529, %531
  br i1 %532, label %if.entry.i.i178, label %Parser_advance.exit.i182

if.entry.i.i178:                                  ; preds = %if.entry17
  %533 = add nsw i64 %529, 1
  store i64 %533, ptr %memberidx2.i, align 8
  %memberidx.i.i.i176 = getelementptr inbounds %Array_Token_, ptr %530, i64 0, i32 1
  %534 = load ptr, ptr %memberidx.i.i.i176, align 8
  %ptridx.i.i.i177 = getelementptr inbounds ptr, ptr %534, i64 %533
  %535 = load ptr, ptr %ptridx.i.i.i177, align 8
  store ptr %535, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i182

Parser_advance.exit.i182:                         ; preds = %if.entry.i.i178, %if.entry17
  %536 = call ptr @malloc(i32 24)
  %537 = call ptr @malloc(i32 32)
  store ptr @VTableArray_ImportClause_, ptr %537, align 8
  %memberidx.i.i32.i = getelementptr inbounds %Array_ImportClause_, ptr %537, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i32.i, align 4
  %memberidx1.i.i.i179 = getelementptr inbounds %Array_ImportClause_, ptr %537, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i179, align 4
  %memberidx2.i.i.i180 = getelementptr inbounds %Array_ImportClause_, ptr %537, i64 0, i32 1
  %538 = call ptr @malloc(i32 64)
  store ptr %538, ptr %memberidx2.i.i.i180, align 8
  store i64 0, ptr %memberidx.i.i32.i, align 4
  store ptr %537, ptr %536, align 8
  %memberidx3.i34.i = getelementptr inbounds %ImportNode, ptr %536, i64 0, i32 2
  store ptr null, ptr %memberidx3.i34.i, align 8
  %539 = load ptr, ptr %memberidx.i75, align 8
  %540 = load i64, ptr %539, align 4
  %541 = icmp eq i64 %540, 51
  br i1 %541, label %if.entry.i183, label %ifend.i194

if.entry.i183:                                    ; preds = %Parser_advance.exit.i182
  %542 = call ptr @malloc(i32 16)
  %543 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %543, ptr %542, align 8
  %memberidx1.i.i35.i = getelementptr inbounds %ImportClause, ptr %542, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i35.i, align 8
  %544 = load ptr, ptr %memberidx.i75, align 8
  %545 = load i64, ptr %544, align 4
  %546 = icmp eq i64 %545, 87
  br i1 %546, label %if.entry.i39.i, label %Parser_parse_import_clause.exit.i

if.entry.i39.i:                                   ; preds = %if.entry.i183
  %547 = load i64, ptr %memberidx2.i, align 8
  %548 = load ptr, ptr %3, align 8
  %memberidx2.i.i38.i = getelementptr inbounds %Array_Token_, ptr %548, i64 0, i32 2
  %549 = load i64, ptr %memberidx2.i.i38.i, align 4
  %550 = icmp slt i64 %547, %549
  br i1 %550, label %if.entry.i.i.i187, label %Parser_advance.exit.i.i188

if.entry.i.i.i187:                                ; preds = %if.entry.i39.i
  %551 = add nsw i64 %547, 1
  store i64 %551, ptr %memberidx2.i, align 8
  %memberidx.i.i.i.i185 = getelementptr inbounds %Array_Token_, ptr %548, i64 0, i32 1
  %552 = load ptr, ptr %memberidx.i.i.i.i185, align 8
  %ptridx.i.i.i.i186 = getelementptr inbounds ptr, ptr %552, i64 %551
  %553 = load ptr, ptr %ptridx.i.i.i.i186, align 8
  store ptr %553, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i.i188

Parser_advance.exit.i.i188:                       ; preds = %if.entry.i.i.i187, %if.entry.i39.i
  %554 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %554, ptr %memberidx1.i.i35.i, align 8
  br label %Parser_parse_import_clause.exit.i

Parser_parse_import_clause.exit.i:                ; preds = %Parser_advance.exit.i.i188, %if.entry.i183
  %555 = load i64, ptr %memberidx.i.i32.i, align 4
  %556 = load i64, ptr %memberidx1.i.i.i179, align 4
  %.not.i.i190 = icmp slt i64 %555, %556
  br i1 %.not.i.i190, label %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge, label %if.entry.i44.i

Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge: ; preds = %Parser_parse_import_clause.exit.i
  %.pre327 = load ptr, ptr %memberidx2.i.i.i180, align 8
  br label %Array_ImportClause____sl__.exit.i

if.entry.i44.i:                                   ; preds = %Parser_parse_import_clause.exit.i
  %557 = shl i64 %556, 1
  store i64 %557, ptr %memberidx1.i.i.i179, align 4
  %558 = load ptr, ptr %memberidx2.i.i.i180, align 8
  %559 = shl i64 %556, 4
  %560 = call ptr @realloc(ptr %558, i64 %559)
  store ptr %560, ptr %memberidx2.i.i.i180, align 8
  %.pre326 = load i64, ptr %memberidx.i.i32.i, align 4
  br label %Array_ImportClause____sl__.exit.i

Array_ImportClause____sl__.exit.i:                ; preds = %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge, %if.entry.i44.i
  %561 = phi ptr [ %560, %if.entry.i44.i ], [ %.pre327, %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge ]
  %562 = phi i64 [ %.pre326, %if.entry.i44.i ], [ %555, %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge ]
  %563 = add i64 %562, 1
  store i64 %563, ptr %memberidx.i.i32.i, align 4
  %ptridx.i.i192 = getelementptr inbounds ptr, ptr %561, i64 %562
  store ptr %542, ptr %ptridx.i.i192, align 8
  %564 = load ptr, ptr %memberidx.i75, align 8
  %565 = load i64, ptr %564, align 4
  %566 = icmp eq i64 %565, 3
  %567 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i47.i = getelementptr inbounds %Array_FloError_, ptr %567, i64 0, i32 2
  %568 = load i64, ptr %memberidx3.i47.i, align 4
  %569 = icmp eq i64 %568, 0
  %570 = and i1 %566, %569
  br i1 %570, label %while.entry.i195, label %while.end.i

ifend.i194thread-pre-split:                       ; preds = %if.entry.i92.i, %if.entry.i.i96.i, %else.i98.i
  %.ph = phi ptr [ %624, %if.entry.i92.i ], [ %632, %if.entry.i.i96.i ], [ %.pre330, %else.i98.i ]
  %.pr = load i64, ptr %.ph, align 4
  br label %ifend.i194

ifend.i194:                                       ; preds = %ifend.i194thread-pre-split, %Parser_advance.exit.i182
  %571 = phi i64 [ %.pr, %ifend.i194thread-pre-split ], [ %540, %Parser_advance.exit.i182 ]
  %572 = phi ptr [ %.ph, %ifend.i194thread-pre-split ], [ %539, %Parser_advance.exit.i182 ]
  %memberidx8.i193 = getelementptr inbounds %ImportNode, ptr %536, i64 0, i32 1
  %573 = icmp eq i64 %571, 32
  br i1 %573, label %if.entry.i51.i, label %else.i.i

if.entry.i51.i:                                   ; preds = %ifend.i194
  %574 = load i64, ptr %memberidx2.i, align 8
  %575 = load ptr, ptr %3, align 8
  %memberidx2.i.i50.i = getelementptr inbounds %Array_Token_, ptr %575, i64 0, i32 2
  %576 = load i64, ptr %memberidx2.i.i50.i, align 4
  %577 = icmp slt i64 %574, %576
  br i1 %577, label %if.entry.i.i55.i, label %Parser_eat.exit.i

if.entry.i.i55.i:                                 ; preds = %if.entry.i51.i
  %578 = add nsw i64 %574, 1
  store i64 %578, ptr %memberidx2.i, align 8
  %memberidx.i.i.i53.i = getelementptr inbounds %Array_Token_, ptr %575, i64 0, i32 1
  %579 = load ptr, ptr %memberidx.i.i.i53.i, align 8
  %ptridx.i.i.i54.i = getelementptr inbounds ptr, ptr %579, i64 %578
  %580 = load ptr, ptr %ptridx.i.i.i54.i, align 8
  store ptr %580, ptr %memberidx.i75, align 8
  br label %Parser_eat.exit.i

else.i.i:                                         ; preds = %ifend.i194
  %581 = call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %572, i64 0, i32 1
  %582 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 44, ptr %581, align 4
  %memberidx1.i82.i.i = getelementptr inbounds %Token, ptr %581, i64 0, i32 1
  store ptr %582, ptr %memberidx1.i82.i.i, align 8
  %.pre331 = load ptr, ptr %memberidx.i75, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i51.i, %if.entry.i.i55.i, %else.i.i
  %583 = phi ptr [ %.pre331, %else.i.i ], [ %580, %if.entry.i.i55.i ], [ %572, %if.entry.i51.i ]
  %common.ret.op.i.i = phi ptr [ %581, %else.i.i ], [ %572, %if.entry.i.i55.i ], [ %572, %if.entry.i51.i ]
  store ptr %common.ret.op.i.i, ptr %memberidx8.i193, align 8
  %584 = load i64, ptr %583, align 4
  %585 = icmp eq i64 %584, 87
  br i1 %585, label %if.entry11.i, label %Parser_parse_import.exit

while.entry.i195:                                 ; preds = %Array_ImportClause____sl__.exit.i, %Array_ImportClause____sl__.exit84.i
  %586 = load i64, ptr %memberidx2.i, align 8
  %587 = load ptr, ptr %3, align 8
  %memberidx2.i58.i = getelementptr inbounds %Array_Token_, ptr %587, i64 0, i32 2
  %588 = load i64, ptr %memberidx2.i58.i, align 4
  %589 = icmp slt i64 %586, %588
  br i1 %589, label %if.entry.i62.i, label %Parser_advance.exit63.i

if.entry.i62.i:                                   ; preds = %while.entry.i195
  %590 = add nsw i64 %586, 1
  store i64 %590, ptr %memberidx2.i, align 8
  %memberidx.i.i60.i = getelementptr inbounds %Array_Token_, ptr %587, i64 0, i32 1
  %591 = load ptr, ptr %memberidx.i.i60.i, align 8
  %ptridx.i.i61.i = getelementptr inbounds ptr, ptr %591, i64 %590
  %592 = load ptr, ptr %ptridx.i.i61.i, align 8
  store ptr %592, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit63.i

Parser_advance.exit63.i:                          ; preds = %if.entry.i62.i, %while.entry.i195
  %593 = load ptr, ptr %536, align 8
  %594 = call ptr @malloc(i32 16)
  %595 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %595, ptr %594, align 8
  %memberidx1.i.i64.i = getelementptr inbounds %ImportClause, ptr %594, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i64.i, align 8
  %596 = load ptr, ptr %memberidx.i75, align 8
  %597 = load i64, ptr %596, align 4
  %598 = icmp eq i64 %597, 87
  br i1 %598, label %if.entry.i68.i, label %Parser_parse_import_clause.exit75.i

if.entry.i68.i:                                   ; preds = %Parser_advance.exit63.i
  %599 = load i64, ptr %memberidx2.i, align 8
  %600 = load ptr, ptr %3, align 8
  %memberidx2.i.i67.i = getelementptr inbounds %Array_Token_, ptr %600, i64 0, i32 2
  %601 = load i64, ptr %memberidx2.i.i67.i, align 4
  %602 = icmp slt i64 %599, %601
  br i1 %602, label %if.entry.i.i72.i, label %Parser_advance.exit.i74.i

if.entry.i.i72.i:                                 ; preds = %if.entry.i68.i
  %603 = add nsw i64 %599, 1
  store i64 %603, ptr %memberidx2.i, align 8
  %memberidx.i.i.i70.i = getelementptr inbounds %Array_Token_, ptr %600, i64 0, i32 1
  %604 = load ptr, ptr %memberidx.i.i.i70.i, align 8
  %ptridx.i.i.i71.i = getelementptr inbounds ptr, ptr %604, i64 %603
  %605 = load ptr, ptr %ptridx.i.i.i71.i, align 8
  store ptr %605, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i74.i

Parser_advance.exit.i74.i:                        ; preds = %if.entry.i.i72.i, %if.entry.i68.i
  %606 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %606, ptr %memberidx1.i.i64.i, align 8
  br label %Parser_parse_import_clause.exit75.i

Parser_parse_import_clause.exit75.i:              ; preds = %Parser_advance.exit.i74.i, %Parser_advance.exit63.i
  %memberidx.i76.i = getelementptr inbounds %Array_ImportClause_, ptr %593, i64 0, i32 2
  %607 = load i64, ptr %memberidx.i76.i, align 4
  %memberidx1.i77.i = getelementptr inbounds %Array_ImportClause_, ptr %593, i64 0, i32 3
  %608 = load i64, ptr %memberidx1.i77.i, align 4
  %.not.i78.i = icmp slt i64 %607, %608
  br i1 %.not.i78.i, label %Parser_parse_import_clause.exit75.i.Array_ImportClause____sl__.exit84.i_crit_edge, label %if.entry.i81.i

Parser_parse_import_clause.exit75.i.Array_ImportClause____sl__.exit84.i_crit_edge: ; preds = %Parser_parse_import_clause.exit75.i
  %memberidx4.i82.i.phi.trans.insert = getelementptr inbounds %Array_ImportClause_, ptr %593, i64 0, i32 1
  %.pre329 = load ptr, ptr %memberidx4.i82.i.phi.trans.insert, align 8
  br label %Array_ImportClause____sl__.exit84.i

if.entry.i81.i:                                   ; preds = %Parser_parse_import_clause.exit75.i
  %609 = shl i64 %608, 1
  store i64 %609, ptr %memberidx1.i77.i, align 4
  %memberidx2.i.i80.i = getelementptr inbounds %Array_ImportClause_, ptr %593, i64 0, i32 1
  %610 = load ptr, ptr %memberidx2.i.i80.i, align 8
  %611 = shl i64 %608, 4
  %612 = call ptr @realloc(ptr %610, i64 %611)
  store ptr %612, ptr %memberidx2.i.i80.i, align 8
  %.pre328 = load i64, ptr %memberidx.i76.i, align 4
  br label %Array_ImportClause____sl__.exit84.i

Array_ImportClause____sl__.exit84.i:              ; preds = %Parser_parse_import_clause.exit75.i.Array_ImportClause____sl__.exit84.i_crit_edge, %if.entry.i81.i
  %613 = phi ptr [ %612, %if.entry.i81.i ], [ %.pre329, %Parser_parse_import_clause.exit75.i.Array_ImportClause____sl__.exit84.i_crit_edge ]
  %614 = phi i64 [ %.pre328, %if.entry.i81.i ], [ %607, %Parser_parse_import_clause.exit75.i.Array_ImportClause____sl__.exit84.i_crit_edge ]
  %615 = add i64 %614, 1
  store i64 %615, ptr %memberidx.i76.i, align 4
  %ptridx.i83.i = getelementptr inbounds ptr, ptr %613, i64 %614
  store ptr %594, ptr %ptridx.i83.i, align 8
  %616 = load ptr, ptr %memberidx.i75, align 8
  %617 = load i64, ptr %616, align 4
  %618 = icmp eq i64 %617, 3
  %619 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i87.i = getelementptr inbounds %Array_FloError_, ptr %619, i64 0, i32 2
  %620 = load i64, ptr %memberidx3.i87.i, align 4
  %621 = icmp eq i64 %620, 0
  %622 = and i1 %618, %621
  br i1 %622, label %while.entry.i195, label %while.end.i

while.end.i:                                      ; preds = %Array_ImportClause____sl__.exit84.i, %Array_ImportClause____sl__.exit.i
  %623 = phi i64 [ %565, %Array_ImportClause____sl__.exit.i ], [ %617, %Array_ImportClause____sl__.exit84.i ]
  %624 = phi ptr [ %564, %Array_ImportClause____sl__.exit.i ], [ %616, %Array_ImportClause____sl__.exit84.i ]
  %625 = icmp eq i64 %623, 82
  br i1 %625, label %if.entry.i92.i, label %else.i98.i

if.entry.i92.i:                                   ; preds = %while.end.i
  %626 = load i64, ptr %memberidx2.i, align 8
  %627 = load ptr, ptr %3, align 8
  %memberidx2.i.i91.i = getelementptr inbounds %Array_Token_, ptr %627, i64 0, i32 2
  %628 = load i64, ptr %memberidx2.i.i91.i, align 4
  %629 = icmp slt i64 %626, %628
  br i1 %629, label %if.entry.i.i96.i, label %ifend.i194thread-pre-split

if.entry.i.i96.i:                                 ; preds = %if.entry.i92.i
  %630 = add nsw i64 %626, 1
  store i64 %630, ptr %memberidx2.i, align 8
  %memberidx.i.i.i94.i = getelementptr inbounds %Array_Token_, ptr %627, i64 0, i32 1
  %631 = load ptr, ptr %memberidx.i.i.i94.i, align 8
  %ptridx.i.i.i95.i = getelementptr inbounds ptr, ptr %631, i64 %630
  %632 = load ptr, ptr %ptridx.i.i.i95.i, align 8
  store ptr %632, ptr %memberidx.i75, align 8
  br label %ifend.i194thread-pre-split

else.i98.i:                                       ; preds = %while.end.i
  %633 = call ptr @malloc(i32 16)
  %memberidx35.i99.i = getelementptr inbounds %Token, ptr %624, i64 0, i32 1
  %634 = load ptr, ptr %memberidx35.i99.i, align 8
  store i64 44, ptr %633, align 4
  %memberidx1.i82.i100.i = getelementptr inbounds %Token, ptr %633, i64 0, i32 1
  store ptr %634, ptr %memberidx1.i82.i100.i, align 8
  %.pre330 = load ptr, ptr %memberidx.i75, align 8
  br label %ifend.i194thread-pre-split

if.entry11.i:                                     ; preds = %Parser_eat.exit.i
  %635 = load i64, ptr %memberidx2.i, align 8
  %636 = load ptr, ptr %3, align 8
  %memberidx2.i103.i = getelementptr inbounds %Array_Token_, ptr %636, i64 0, i32 2
  %637 = load i64, ptr %memberidx2.i103.i, align 4
  %638 = icmp slt i64 %635, %637
  br i1 %638, label %if.entry.i107.i, label %Parser_advance.exit108.i

if.entry.i107.i:                                  ; preds = %if.entry11.i
  %639 = add nsw i64 %635, 1
  store i64 %639, ptr %memberidx2.i, align 8
  %memberidx.i.i105.i = getelementptr inbounds %Array_Token_, ptr %636, i64 0, i32 1
  %640 = load ptr, ptr %memberidx.i.i105.i, align 8
  %ptridx.i.i106.i = getelementptr inbounds ptr, ptr %640, i64 %639
  %641 = load ptr, ptr %ptridx.i.i106.i, align 8
  store ptr %641, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit108.i

Parser_advance.exit108.i:                         ; preds = %if.entry.i107.i, %if.entry11.i
  %642 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %642, ptr %memberidx3.i34.i, align 8
  br label %Parser_parse_import.exit

Parser_parse_import.exit:                         ; preds = %Parser_eat.exit.i, %Parser_advance.exit108.i
  %memberidx.i196 = getelementptr inbounds %Array_ImportNode_, ptr %528, i64 0, i32 2
  %643 = load i64, ptr %memberidx.i196, align 4
  %memberidx1.i197 = getelementptr inbounds %Array_ImportNode_, ptr %528, i64 0, i32 3
  %644 = load i64, ptr %memberidx1.i197, align 4
  %.not.i198 = icmp slt i64 %643, %644
  br i1 %.not.i198, label %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge, label %if.entry.i201

Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge: ; preds = %Parser_parse_import.exit
  %memberidx4.i202.phi.trans.insert = getelementptr inbounds %Array_ImportNode_, ptr %528, i64 0, i32 1
  %.pre333 = load ptr, ptr %memberidx4.i202.phi.trans.insert, align 8
  br label %Array_ImportNode____sl__.exit

if.entry.i201:                                    ; preds = %Parser_parse_import.exit
  %645 = shl i64 %644, 1
  store i64 %645, ptr %memberidx1.i197, align 4
  %memberidx2.i.i200 = getelementptr inbounds %Array_ImportNode_, ptr %528, i64 0, i32 1
  %646 = load ptr, ptr %memberidx2.i.i200, align 8
  %647 = shl i64 %644, 4
  %648 = call ptr @realloc(ptr %646, i64 %647)
  store ptr %648, ptr %memberidx2.i.i200, align 8
  %.pre332 = load i64, ptr %memberidx.i196, align 4
  br label %Array_ImportNode____sl__.exit

Array_ImportNode____sl__.exit:                    ; preds = %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge, %if.entry.i201
  %649 = phi ptr [ %.pre333, %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge ], [ %648, %if.entry.i201 ]
  %650 = phi i64 [ %643, %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge ], [ %.pre332, %if.entry.i201 ]
  %651 = add i64 %650, 1
  store i64 %651, ptr %memberidx.i196, align 4
  %ptridx.i203 = getelementptr inbounds ptr, ptr %649, i64 %650
  store ptr %536, ptr %ptridx.i203, align 8
  br label %ifend

if.entry23:                                       ; preds = %while.entry
  %652 = load ptr, ptr %memberidx26, align 8
  %653 = call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %3)
  %memberidx.i205 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %652, i64 0, i32 2
  %654 = load i64, ptr %memberidx.i205, align 4
  %memberidx1.i206 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %652, i64 0, i32 3
  %655 = load i64, ptr %memberidx1.i206, align 4
  %.not.i207 = icmp slt i64 %654, %655
  br i1 %.not.i207, label %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge, label %if.entry.i210

if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge: ; preds = %if.entry23
  %memberidx4.i211.phi.trans.insert = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %652, i64 0, i32 1
  %.pre325 = load ptr, ptr %memberidx4.i211.phi.trans.insert, align 8
  br label %Array_ConstDeclarationStatement____sl__.exit

if.entry.i210:                                    ; preds = %if.entry23
  %656 = shl i64 %655, 1
  store i64 %656, ptr %memberidx1.i206, align 4
  %memberidx2.i.i209 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %652, i64 0, i32 1
  %657 = load ptr, ptr %memberidx2.i.i209, align 8
  %658 = shl i64 %655, 4
  %659 = call ptr @realloc(ptr %657, i64 %658)
  store ptr %659, ptr %memberidx2.i.i209, align 8
  %.pre324 = load i64, ptr %memberidx.i205, align 4
  br label %Array_ConstDeclarationStatement____sl__.exit

Array_ConstDeclarationStatement____sl__.exit:     ; preds = %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge, %if.entry.i210
  %660 = phi ptr [ %.pre325, %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge ], [ %659, %if.entry.i210 ]
  %661 = phi i64 [ %654, %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge ], [ %.pre324, %if.entry.i210 ]
  %662 = add i64 %661, 1
  store i64 %662, ptr %memberidx.i205, align 4
  %ptridx.i212 = getelementptr inbounds ptr, ptr %660, i64 %661
  store ptr %653, ptr %ptridx.i212, align 8
  br label %ifend

if.entry29:                                       ; preds = %while.entry
  %663 = load ptr, ptr %memberidx32, align 8
  %664 = call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %3)
  %memberidx.i214 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %663, i64 0, i32 2
  %665 = load i64, ptr %memberidx.i214, align 4
  %memberidx1.i215 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %663, i64 0, i32 3
  %666 = load i64, ptr %memberidx1.i215, align 4
  %.not.i216 = icmp slt i64 %665, %666
  br i1 %.not.i216, label %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge, label %if.entry.i219

if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge: ; preds = %if.entry29
  %memberidx4.i220.phi.trans.insert = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %663, i64 0, i32 1
  %.pre323 = load ptr, ptr %memberidx4.i220.phi.trans.insert, align 8
  br label %Array_VarDeclarationStatement____sl__.exit

if.entry.i219:                                    ; preds = %if.entry29
  %667 = shl i64 %666, 1
  store i64 %667, ptr %memberidx1.i215, align 4
  %memberidx2.i.i218 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %663, i64 0, i32 1
  %668 = load ptr, ptr %memberidx2.i.i218, align 8
  %669 = shl i64 %666, 4
  %670 = call ptr @realloc(ptr %668, i64 %669)
  store ptr %670, ptr %memberidx2.i.i218, align 8
  %.pre322 = load i64, ptr %memberidx.i214, align 4
  br label %Array_VarDeclarationStatement____sl__.exit

Array_VarDeclarationStatement____sl__.exit:       ; preds = %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge, %if.entry.i219
  %671 = phi ptr [ %.pre323, %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge ], [ %670, %if.entry.i219 ]
  %672 = phi i64 [ %665, %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge ], [ %.pre322, %if.entry.i219 ]
  %673 = add i64 %672, 1
  store i64 %673, ptr %memberidx.i214, align 4
  %ptridx.i221 = getelementptr inbounds ptr, ptr %671, i64 %672
  store ptr %664, ptr %ptridx.i221, align 8
  br label %ifend

else30:                                           ; preds = %while.entry
  %memberidx36 = getelementptr inbounds %IdentifierToken, ptr %35, i64 0, i32 2
  %674 = load ptr, ptr %memberidx36, align 8
  %675 = call ptr @malloc(i32 32)
  store i32 1701869940, ptr %675, align 8
  %676 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %676, align 8
  %memberidx.i.i223 = getelementptr inbounds %string, ptr %676, i64 0, i32 1
  store ptr %675, ptr %memberidx.i.i223, align 8
  %memberidx1.i.i224 = getelementptr inbounds %string, ptr %676, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i224, align 4
  %memberidx2.i.i225 = getelementptr inbounds %string, ptr %676, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i225, align 4
  %memberidx.i226 = getelementptr inbounds %string, ptr %674, i64 0, i32 2
  %677 = load i64, ptr %memberidx.i226, align 4
  %.not.i228 = icmp eq i64 %677, 4
  br i1 %.not.i228, label %string___eq__.exit, label %else38

string___eq__.exit:                               ; preds = %else30
  %678 = icmp eq i64 %34, 51
  %memberidx2.i229 = getelementptr inbounds %string, ptr %674, i64 0, i32 1
  %679 = load ptr, ptr %memberidx2.i229, align 8
  %680 = call i64 @memcmp(ptr %679, ptr nonnull %675, i64 4)
  %681 = icmp eq i64 %680, 0
  %682 = and i1 %678, %681
  br i1 %682, label %if.entry37, label %else38

if.entry37:                                       ; preds = %string___eq__.exit
  %683 = load ptr, ptr %memberidx40, align 8
  %684 = load i64, ptr %memberidx2.i, align 8
  %685 = load ptr, ptr %3, align 8
  %memberidx2.i.i233 = getelementptr inbounds %Array_Token_, ptr %685, i64 0, i32 2
  %686 = load i64, ptr %memberidx2.i.i233, align 4
  %687 = icmp slt i64 %684, %686
  br i1 %687, label %if.entry.i.i237, label %Parser_parse_type_alias.exit

if.entry.i.i237:                                  ; preds = %if.entry37
  %688 = add nsw i64 %684, 1
  store i64 %688, ptr %memberidx2.i, align 8
  %memberidx.i.i.i235 = getelementptr inbounds %Array_Token_, ptr %685, i64 0, i32 1
  %689 = load ptr, ptr %memberidx.i.i.i235, align 8
  %ptridx.i.i.i236 = getelementptr inbounds ptr, ptr %689, i64 %688
  %690 = load ptr, ptr %ptridx.i.i.i236, align 8
  store ptr %690, ptr %memberidx.i75, align 8
  br label %Parser_parse_type_alias.exit

Parser_parse_type_alias.exit:                     ; preds = %if.entry37, %if.entry.i.i237
  %691 = call ptr @malloc(i32 16)
  %692 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 51)
  store ptr %692, ptr %691, align 8
  %693 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 36)
  %memberidx.i238 = getelementptr inbounds %TypeAliasNode, ptr %691, i64 0, i32 1
  %694 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %694, ptr %memberidx.i238, align 8
  %memberidx.i93 = getelementptr inbounds %Array_TypeAliasNode_, ptr %683, i64 0, i32 2
  %695 = load i64, ptr %memberidx.i93, align 4
  %memberidx1.i94 = getelementptr inbounds %Array_TypeAliasNode_, ptr %683, i64 0, i32 3
  %696 = load i64, ptr %memberidx1.i94, align 4
  %.not.i = icmp slt i64 %695, %696
  br i1 %.not.i, label %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge, label %if.entry.i97

Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge: ; preds = %Parser_parse_type_alias.exit
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_TypeAliasNode_, ptr %683, i64 0, i32 1
  %.pre354 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_TypeAliasNode____sl__.exit

if.entry.i97:                                     ; preds = %Parser_parse_type_alias.exit
  %697 = shl i64 %696, 1
  store i64 %697, ptr %memberidx1.i94, align 4
  %memberidx2.i.i96 = getelementptr inbounds %Array_TypeAliasNode_, ptr %683, i64 0, i32 1
  %698 = load ptr, ptr %memberidx2.i.i96, align 8
  %699 = shl i64 %696, 4
  %700 = call ptr @realloc(ptr %698, i64 %699)
  store ptr %700, ptr %memberidx2.i.i96, align 8
  %.pre353 = load i64, ptr %memberidx.i93, align 4
  br label %Array_TypeAliasNode____sl__.exit

Array_TypeAliasNode____sl__.exit:                 ; preds = %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge, %if.entry.i97
  %701 = phi ptr [ %.pre354, %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge ], [ %700, %if.entry.i97 ]
  %702 = phi i64 [ %695, %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge ], [ %.pre353, %if.entry.i97 ]
  %703 = add i64 %702, 1
  store i64 %703, ptr %memberidx.i93, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %701, i64 %702
  store ptr %691, ptr %ptridx.i, align 8
  br label %ifend

else38:                                           ; preds = %else30, %string___eq__.exit
  %704 = call ptr @malloc(i32 632)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(79) %704, ptr noundef nonnull align 8 dereferenceable(79) @75, i64 79, i1 false)
  %705 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %705, align 8
  %memberidx.i.i80 = getelementptr inbounds %string, ptr %705, i64 0, i32 1
  store ptr %704, ptr %memberidx.i.i80, align 8
  %memberidx1.i.i81 = getelementptr inbounds %string, ptr %705, i64 0, i32 2
  store i64 79, ptr %memberidx1.i.i81, align 4
  %memberidx2.i.i82 = getelementptr inbounds %string, ptr %705, i64 0, i32 3
  store i64 79, ptr %memberidx2.i.i82, align 4
  %706 = load ptr, ptr %memberidx1.i, align 8
  %707 = call ptr @malloc(i32 24)
  %708 = load ptr, ptr %memberidx.i75, align 8
  %memberidx2.i70 = getelementptr inbounds %Token, ptr %708, i64 0, i32 1
  %709 = load ptr, ptr %memberidx2.i70, align 8
  store i64 2, ptr %707, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %707, i64 0, i32 2
  store ptr %709, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %707, i64 0, i32 1
  store ptr %705, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %706, i64 0, i32 2
  %710 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %706, i64 0, i32 3
  %711 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %710, %711
  br i1 %.not.i.i, label %else38.Parser_error.exit_crit_edge, label %if.entry.i.i

else38.Parser_error.exit_crit_edge:               ; preds = %else38
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %706, i64 0, i32 1
  %.pre352 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %else38
  %712 = shl i64 %711, 1
  store i64 %712, ptr %memberidx1.i4.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %706, i64 0, i32 1
  %713 = load ptr, ptr %memberidx2.i.i.i, align 8
  %714 = shl i64 %711, 4
  %715 = call ptr @realloc(ptr %713, i64 %714)
  store ptr %715, ptr %memberidx2.i.i.i, align 8
  %.pre351 = load i64, ptr %memberidx.i.i, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %else38.Parser_error.exit_crit_edge, %if.entry.i.i
  %716 = phi ptr [ %.pre352, %else38.Parser_error.exit_crit_edge ], [ %715, %if.entry.i.i ]
  %717 = phi i64 [ %710, %else38.Parser_error.exit_crit_edge ], [ %.pre351, %if.entry.i.i ]
  %718 = add i64 %717, 1
  store i64 %718, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %716, i64 %717
  store ptr %707, ptr %ptridx.i.i, align 8
  br label %ifend
}

define internal fastcc ptr @Parser_parse_block(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 16)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i77 = getelementptr inbounds %BlockNode, ptr %2, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_StatementNode_, ptr %5, align 8
  %memberidx.i.i78 = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i78, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i79 = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i.i79, align 8
  store i64 0, ptr %memberidx.i.i78, align 4
  store ptr %5, ptr %memberidx.i77, align 8
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 31
  %memberidx2.i.i63 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %memberidx2.i.i63, align 8
  %memberidx3.i.i64 = getelementptr inbounds %Array_FloError_, ptr %10, i64 0, i32 2
  %11 = load i64, ptr %memberidx3.i.i64, align 4
  %12 = icmp eq i64 %11, 0
  %13 = and i1 %9, %12
  br i1 %13, label %while.entry.i67.preheader, label %Parser_new_lines.exit76

while.entry.i67.preheader:                        ; preds = %1
  %memberidx.i11.i65 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12.i66 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %memberidx.i.i.i69 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i11.i65, align 4
  %16 = load i64, ptr %memberidx2.i12.i66, align 4
  %17 = icmp slt i64 %15, %16
  br i1 %17, label %while.entry.i67, label %while.entry.i67.us

while.entry.i67.us:                               ; preds = %while.entry.i67.preheader, %while.entry.i67.us
  br label %while.entry.i67.us

while.entry.i67:                                  ; preds = %while.entry.i67.preheader, %Parser_advance.exit.i75
  %18 = phi i64 [ %26, %Parser_advance.exit.i75 ], [ 0, %while.entry.i67.preheader ]
  %19 = phi i64 [ %27, %Parser_advance.exit.i75 ], [ 31, %while.entry.i67.preheader ]
  %20 = phi i64 [ %30, %Parser_advance.exit.i75 ], [ %15, %while.entry.i67.preheader ]
  %21 = load i64, ptr %memberidx2.i12.i66, align 4
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %if.entry.i.i71, label %Parser_advance.exit.i75

if.entry.i.i71:                                   ; preds = %while.entry.i67
  %23 = add nsw i64 %20, 1
  store i64 %23, ptr %memberidx.i11.i65, align 4
  %24 = load ptr, ptr %memberidx.i.i.i69, align 8
  %ptridx.i.i.i70 = getelementptr inbounds ptr, ptr %24, i64 %23
  %25 = load ptr, ptr %ptridx.i.i.i70, align 8
  store ptr %25, ptr %memberidx, align 8
  %.pre = load i64, ptr %25, align 4
  %.pre92 = load i64, ptr %memberidx3.i.i64, align 4
  br label %Parser_advance.exit.i75

Parser_advance.exit.i75:                          ; preds = %if.entry.i.i71, %while.entry.i67
  %26 = phi i64 [ %.pre92, %if.entry.i.i71 ], [ %18, %while.entry.i67 ]
  %27 = phi i64 [ %.pre, %if.entry.i.i71 ], [ %19, %while.entry.i67 ]
  %28 = phi i64 [ %.pre92, %if.entry.i.i71 ], [ 0, %while.entry.i67 ]
  %29 = phi i64 [ %.pre, %if.entry.i.i71 ], [ 31, %while.entry.i67 ]
  %30 = phi i64 [ %23, %if.entry.i.i71 ], [ %20, %while.entry.i67 ]
  %31 = icmp eq i64 %29, 31
  %32 = icmp eq i64 %28, 0
  %33 = and i1 %31, %32
  br i1 %33, label %while.entry.i67, label %Parser_new_lines.exit76

Parser_new_lines.exit76:                          ; preds = %Parser_advance.exit.i75, %1
  %34 = phi i64 [ %11, %1 ], [ %26, %Parser_advance.exit.i75 ]
  %35 = phi i64 [ %8, %1 ], [ %27, %Parser_advance.exit.i75 ]
  %36 = icmp eq i64 %35, 25
  br i1 %36, label %if.entry, label %else

if.entry:                                         ; preds = %Parser_new_lines.exit76
  %memberidx.i56 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %37 = load i64, ptr %memberidx.i56, align 4
  %38 = load ptr, ptr %0, align 8
  %memberidx2.i57 = getelementptr inbounds %Array_Token_, ptr %38, i64 0, i32 2
  %39 = load i64, ptr %memberidx2.i57, align 4
  %40 = icmp slt i64 %37, %39
  br i1 %40, label %Parser_advance.exit, label %Parser_new_lines.exit55

Parser_advance.exit:                              ; preds = %if.entry
  %41 = add nsw i64 %37, 1
  store i64 %41, ptr %memberidx.i56, align 4
  %memberidx.i.i59 = getelementptr inbounds %Array_Token_, ptr %38, i64 0, i32 1
  %42 = load ptr, ptr %memberidx.i.i59, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %42, i64 %41
  %43 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %43, ptr %memberidx, align 8
  %.pre95 = load i64, ptr %43, align 4
  %.pre96 = load i64, ptr %memberidx3.i.i64, align 4
  %44 = icmp eq i64 %.pre95, 31
  %45 = icmp eq i64 %.pre96, 0
  %46 = and i1 %44, %45
  br i1 %46, label %while.entry.i46.preheader, label %Parser_new_lines.exit55

while.entry.i46.preheader:                        ; preds = %Parser_advance.exit
  %memberidx.i.i.i48 = getelementptr inbounds %Array_Token_, ptr %38, i64 0, i32 1
  %47 = load i64, ptr %memberidx2.i57, align 4
  %48 = icmp slt i64 %41, %47
  br i1 %48, label %while.entry.i46, label %while.entry.i46.us

while.entry.i46.us:                               ; preds = %while.entry.i46.preheader, %while.entry.i46.us
  br label %while.entry.i46.us

while.entry.i46:                                  ; preds = %while.entry.i46.preheader, %Parser_advance.exit.i54
  %49 = phi i64 [ %57, %Parser_advance.exit.i54 ], [ 31, %while.entry.i46.preheader ]
  %50 = phi i64 [ %58, %Parser_advance.exit.i54 ], [ 0, %while.entry.i46.preheader ]
  %51 = phi i64 [ %61, %Parser_advance.exit.i54 ], [ %41, %while.entry.i46.preheader ]
  %52 = load i64, ptr %memberidx2.i57, align 4
  %53 = icmp slt i64 %51, %52
  br i1 %53, label %if.entry.i.i50, label %Parser_advance.exit.i54

if.entry.i.i50:                                   ; preds = %while.entry.i46
  %54 = add nsw i64 %51, 1
  store i64 %54, ptr %memberidx.i56, align 4
  %55 = load ptr, ptr %memberidx.i.i.i48, align 8
  %ptridx.i.i.i49 = getelementptr inbounds ptr, ptr %55, i64 %54
  %56 = load ptr, ptr %ptridx.i.i.i49, align 8
  store ptr %56, ptr %memberidx, align 8
  %.pre97 = load i64, ptr %56, align 4
  %.pre98 = load i64, ptr %memberidx3.i.i64, align 4
  br label %Parser_advance.exit.i54

Parser_advance.exit.i54:                          ; preds = %if.entry.i.i50, %while.entry.i46
  %57 = phi i64 [ %.pre97, %if.entry.i.i50 ], [ %49, %while.entry.i46 ]
  %58 = phi i64 [ %.pre98, %if.entry.i.i50 ], [ %50, %while.entry.i46 ]
  %59 = phi i64 [ %.pre98, %if.entry.i.i50 ], [ 0, %while.entry.i46 ]
  %60 = phi i64 [ %.pre97, %if.entry.i.i50 ], [ 31, %while.entry.i46 ]
  %61 = phi i64 [ %54, %if.entry.i.i50 ], [ %51, %while.entry.i46 ]
  %62 = icmp eq i64 %60, 31
  %63 = icmp eq i64 %59, 0
  %64 = and i1 %62, %63
  br i1 %64, label %while.entry.i46, label %Parser_new_lines.exit55

Parser_new_lines.exit55:                          ; preds = %Parser_advance.exit.i54, %if.entry, %Parser_advance.exit
  %65 = phi i64 [ %.pre95, %Parser_advance.exit ], [ 25, %if.entry ], [ %57, %Parser_advance.exit.i54 ]
  %66 = phi i64 [ %.pre96, %Parser_advance.exit ], [ %34, %if.entry ], [ %58, %Parser_advance.exit.i54 ]
  %.fr = freeze i64 %66
  %67 = icmp eq i64 %.fr, 0
  br i1 %67, label %switch.early.test, label %while.end

switch.early.test:                                ; preds = %Parser_new_lines.exit55
  switch i64 %65, label %while.entry [
    i64 44, label %while.end
    i64 26, label %while.end
  ]

else:                                             ; preds = %Parser_new_lines.exit76
  %68 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %69 = load i64, ptr %memberidx.i.i78, align 4
  %70 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i30 = icmp slt i64 %69, %70
  br i1 %.not.i30, label %else.Array_StatementNode____sl__.exit36_crit_edge, label %if.entry.i33

else.Array_StatementNode____sl__.exit36_crit_edge: ; preds = %else
  %.pre94 = load ptr, ptr %memberidx2.i.i79, align 8
  br label %Array_StatementNode____sl__.exit36

if.entry.i33:                                     ; preds = %else
  %71 = shl i64 %70, 1
  store i64 %71, ptr %memberidx1.i.i, align 4
  %72 = load ptr, ptr %memberidx2.i.i79, align 8
  %73 = shl i64 %70, 4
  %74 = tail call ptr @realloc(ptr %72, i64 %73)
  store ptr %74, ptr %memberidx2.i.i79, align 8
  %.pre93 = load i64, ptr %memberidx.i.i78, align 4
  br label %Array_StatementNode____sl__.exit36

Array_StatementNode____sl__.exit36:               ; preds = %else.Array_StatementNode____sl__.exit36_crit_edge, %if.entry.i33
  %75 = phi ptr [ %.pre94, %else.Array_StatementNode____sl__.exit36_crit_edge ], [ %74, %if.entry.i33 ]
  %76 = phi i64 [ %69, %else.Array_StatementNode____sl__.exit36_crit_edge ], [ %.pre93, %if.entry.i33 ]
  %77 = add i64 %76, 1
  store i64 %77, ptr %memberidx.i.i78, align 4
  %ptridx.i35 = getelementptr inbounds ptr, ptr %75, i64 %76
  store ptr %68, ptr %ptridx.i35, align 8
  br label %ifend

ifend:                                            ; preds = %Array_StatementNode____sl__.exit36, %while.end
  ret ptr %2

while.entry:                                      ; preds = %switch.early.test, %switch.early.test84
  %78 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %79 = load i64, ptr %memberidx.i.i78, align 4
  %80 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i = icmp slt i64 %79, %80
  br i1 %.not.i, label %while.entry.Array_StatementNode____sl__.exit_crit_edge, label %if.entry.i

while.entry.Array_StatementNode____sl__.exit_crit_edge: ; preds = %while.entry
  %.pre100 = load ptr, ptr %memberidx2.i.i79, align 8
  br label %Array_StatementNode____sl__.exit

if.entry.i:                                       ; preds = %while.entry
  %81 = shl i64 %80, 1
  store i64 %81, ptr %memberidx1.i.i, align 4
  %82 = load ptr, ptr %memberidx2.i.i79, align 8
  %83 = shl i64 %80, 4
  %84 = tail call ptr @realloc(ptr %82, i64 %83)
  store ptr %84, ptr %memberidx2.i.i79, align 8
  %.pre99 = load i64, ptr %memberidx.i.i78, align 4
  br label %Array_StatementNode____sl__.exit

Array_StatementNode____sl__.exit:                 ; preds = %while.entry.Array_StatementNode____sl__.exit_crit_edge, %if.entry.i
  %85 = phi ptr [ %.pre100, %while.entry.Array_StatementNode____sl__.exit_crit_edge ], [ %84, %if.entry.i ]
  %86 = phi i64 [ %79, %while.entry.Array_StatementNode____sl__.exit_crit_edge ], [ %.pre99, %if.entry.i ]
  %87 = add i64 %86, 1
  store i64 %87, ptr %memberidx.i.i78, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %85, i64 %86
  store ptr %78, ptr %ptridx.i, align 8
  %88 = load ptr, ptr %memberidx, align 8
  %89 = load i64, ptr %88, align 4
  %90 = icmp eq i64 %89, 31
  %91 = load ptr, ptr %memberidx2.i.i63, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 2
  %92 = load i64, ptr %memberidx3.i.i, align 4
  %93 = icmp eq i64 %92, 0
  %94 = and i1 %90, %93
  br i1 %94, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %Array_StatementNode____sl__.exit
  %95 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %95, i64 0, i32 2
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %95, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i56, align 4
  %97 = load i64, ptr %memberidx2.i12.i, align 4
  %98 = icmp slt i64 %96, %97
  br i1 %98, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %99 = phi i64 [ %107, %Parser_advance.exit.i ], [ 31, %while.entry.i.preheader ]
  %100 = phi i64 [ %108, %Parser_advance.exit.i ], [ 0, %while.entry.i.preheader ]
  %101 = phi i64 [ %111, %Parser_advance.exit.i ], [ %96, %while.entry.i.preheader ]
  %102 = load i64, ptr %memberidx2.i12.i, align 4
  %103 = icmp slt i64 %101, %102
  br i1 %103, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %104 = add nsw i64 %101, 1
  store i64 %104, ptr %memberidx.i56, align 4
  %105 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %105, i64 %104
  %106 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %106, ptr %memberidx, align 8
  %.pre101 = load i64, ptr %106, align 4
  %.pre102 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %107 = phi i64 [ %.pre101, %if.entry.i.i ], [ %99, %while.entry.i ]
  %108 = phi i64 [ %.pre102, %if.entry.i.i ], [ %100, %while.entry.i ]
  %109 = phi i64 [ %.pre102, %if.entry.i.i ], [ 0, %while.entry.i ]
  %110 = phi i64 [ %.pre101, %if.entry.i.i ], [ 31, %while.entry.i ]
  %111 = phi i64 [ %104, %if.entry.i.i ], [ %101, %while.entry.i ]
  %112 = icmp eq i64 %110, 31
  %113 = icmp eq i64 %109, 0
  %114 = and i1 %112, %113
  br i1 %114, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %Array_StatementNode____sl__.exit
  %115 = phi i64 [ %89, %Array_StatementNode____sl__.exit ], [ %107, %Parser_advance.exit.i ]
  %116 = phi i64 [ %92, %Array_StatementNode____sl__.exit ], [ %108, %Parser_advance.exit.i ]
  %.fr85 = freeze i64 %116
  %117 = icmp eq i64 %.fr85, 0
  br i1 %117, label %switch.early.test84, label %while.end

switch.early.test84:                              ; preds = %Parser_new_lines.exit
  switch i64 %115, label %while.entry [
    i64 44, label %while.end
    i64 26, label %while.end
  ]

while.end:                                        ; preds = %switch.early.test84, %switch.early.test84, %Parser_new_lines.exit, %switch.early.test, %switch.early.test, %Parser_new_lines.exit55
  %118 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  br label %ifend
}

define internal fastcc ptr @Parser_parse_type(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 16)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i209 = getelementptr inbounds %TypeNode, ptr %2, i64 0, i32 1
  store i64 12, ptr %memberidx.i209, align 4
  %5 = load i64, ptr %3, align 4
  switch i64 %5, label %else12 [
    i64 51, label %if.entry
    i64 23, label %if.entry6
    i64 27, label %if.entry11
  ]

if.entry:                                         ; preds = %1
  %6 = tail call fastcc ptr @Parser_parse_object_type(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %if.entry.i.i145, %ifend.i, %else.i162, %if.entry.i.i160, %if.entry.i156, %Parser_parse_function_type.exit, %if.entry
  %type_node.0 = phi ptr [ %6, %if.entry ], [ %16, %Parser_parse_function_type.exit ], [ %39, %if.entry.i156 ], [ %39, %if.entry.i.i160 ], [ %39, %else.i162 ], [ %89, %ifend.i ], [ %89, %if.entry.i.i145 ]
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 27
  %10 = icmp eq i64 %8, 4
  %11 = or i1 %9, %10
  %memberidx2.i207 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %memberidx2.i207, align 8
  %memberidx3.i208 = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i208, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %11, %14
  br i1 %15, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %ifend
  %memberidx.i.i121 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

if.entry6:                                        ; preds = %1
  %16 = tail call ptr @malloc(i32 32)
  %17 = load ptr, ptr %memberidx, align 8
  %memberidx1.i211 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx1.i211, align 8
  store ptr %18, ptr %16, align 8
  %memberidx.i.i23.i = getelementptr inbounds %TypeNode, ptr %16, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i23.i, align 4
  %memberidx.i24.i = getelementptr inbounds %FunctionTypeNode, ptr %16, i64 0, i32 2
  %19 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %19, align 8
  %memberidx.i3.i.i = getelementptr inbounds %Array_TypeNode_, ptr %19, i64 0, i32 2
  store i64 0, ptr %memberidx.i3.i.i, align 4
  %memberidx1.i.i25.i = getelementptr inbounds %Array_TypeNode_, ptr %19, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i25.i, align 4
  %memberidx2.i.i26.i = getelementptr inbounds %Array_TypeNode_, ptr %19, i64 0, i32 1
  %20 = tail call ptr @malloc(i32 64)
  store ptr %20, ptr %memberidx2.i.i26.i, align 8
  store i64 0, ptr %memberidx.i3.i.i, align 4
  store ptr %19, ptr %memberidx.i24.i, align 8
  %memberidx.i.i212 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %21 = load i64, ptr %memberidx.i.i212, align 4
  %22 = load ptr, ptr %0, align 8
  %memberidx2.i21.i = getelementptr inbounds %Array_Token_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx2.i21.i, align 4
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %if.entry.i.i215, label %if.entry6.Parser_advance.exit.i217_crit_edge

if.entry6.Parser_advance.exit.i217_crit_edge:     ; preds = %if.entry6
  %.pre237 = load ptr, ptr %memberidx, align 8
  br label %Parser_advance.exit.i217

if.entry.i.i215:                                  ; preds = %if.entry6
  %25 = add nsw i64 %21, 1
  store i64 %25, ptr %memberidx.i.i212, align 4
  %memberidx.i.i.i213 = getelementptr inbounds %Array_Token_, ptr %22, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i.i.i213, align 8
  %ptridx.i.i.i214 = getelementptr inbounds ptr, ptr %26, i64 %25
  %27 = load ptr, ptr %ptridx.i.i.i214, align 8
  store ptr %27, ptr %memberidx, align 8
  br label %Parser_advance.exit.i217

Parser_advance.exit.i217:                         ; preds = %if.entry6.Parser_advance.exit.i217_crit_edge, %if.entry.i.i215
  %28 = phi ptr [ %.pre237, %if.entry6.Parser_advance.exit.i217_crit_edge ], [ %27, %if.entry.i.i215 ]
  %29 = load i64, ptr %28, align 4
  %.not.i216 = icmp eq i64 %29, 24
  br i1 %.not.i216, label %Parser_parse_function_type.exit, label %if.entry.i219

if.entry.i219:                                    ; preds = %Parser_advance.exit.i217
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %19)
  br label %Parser_parse_function_type.exit

Parser_parse_function_type.exit:                  ; preds = %Parser_advance.exit.i217, %if.entry.i219
  %30 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 24)
  %31 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 43)
  %memberidx5.i = getelementptr inbounds %FunctionTypeNode, ptr %16, i64 0, i32 3
  %32 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %32, ptr %memberidx5.i, align 8
  %33 = load ptr, ptr %32, align 8
  %34 = tail call ptr @malloc(i32 32)
  %35 = load i64, ptr %18, align 4
  %memberidx1.i.i220 = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 1
  %36 = load i64, ptr %memberidx1.i.i220, align 4
  %memberidx2.i.i221 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 2
  %37 = load i64, ptr %memberidx2.i.i221, align 4
  %memberidx3.i.i222 = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 3
  %38 = load i64, ptr %memberidx3.i.i222, align 4
  store i64 %35, ptr %34, align 4
  %memberidx1.i.i.i223 = getelementptr inbounds %FloRange, ptr %34, i64 0, i32 1
  store i64 %36, ptr %memberidx1.i.i.i223, align 4
  %memberidx2.i.i.i224 = getelementptr inbounds %FloRange, ptr %34, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i.i.i224, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %34, i64 0, i32 3
  store i64 %38, ptr %memberidx3.i.i.i, align 4
  store ptr %34, ptr %16, align 8
  br label %ifend

if.entry11:                                       ; preds = %1
  %39 = tail call ptr @malloc(i32 32)
  %40 = tail call ptr @malloc(i32 24)
  %41 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %41, ptr noundef nonnull align 8 dereferenceable(3) @69, i64 3, i1 false)
  %42 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %42, align 8
  %memberidx.i.i203 = getelementptr inbounds %string, ptr %42, i64 0, i32 1
  store ptr %41, ptr %memberidx.i.i203, align 8
  %memberidx1.i.i204 = getelementptr inbounds %string, ptr %42, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i204, align 4
  %memberidx2.i.i205 = getelementptr inbounds %string, ptr %42, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i205, align 4
  %43 = load ptr, ptr %memberidx, align 8
  %memberidx15 = getelementptr inbounds %Token, ptr %43, i64 0, i32 1
  %44 = load ptr, ptr %memberidx15, align 8
  store i64 51, ptr %40, align 4
  %memberidx1.i.i201 = getelementptr inbounds %Token, ptr %40, i64 0, i32 1
  store ptr %44, ptr %memberidx1.i.i201, align 8
  %memberidx.i202 = getelementptr inbounds %IdentifierToken, ptr %40, i64 0, i32 2
  store ptr %42, ptr %memberidx.i202, align 8
  %45 = load ptr, ptr %memberidx15, align 8
  store ptr %45, ptr %39, align 8
  %memberidx.i.i194 = getelementptr inbounds %TypeNode, ptr %39, i64 0, i32 1
  store i64 18, ptr %memberidx.i.i194, align 4
  %memberidx.i195 = getelementptr inbounds %RecordTypeNode, ptr %39, i64 0, i32 2
  store ptr %40, ptr %memberidx.i195, align 8
  %memberidx1.i196 = getelementptr inbounds %RecordTypeNode, ptr %39, i64 0, i32 3
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %46, align 8
  %memberidx.i5.i197 = getelementptr inbounds %Array_TypeNode_, ptr %46, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i197, align 4
  %memberidx1.i.i198 = getelementptr inbounds %Array_TypeNode_, ptr %46, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i198, align 4
  %memberidx2.i.i199 = getelementptr inbounds %Array_TypeNode_, ptr %46, i64 0, i32 1
  %47 = tail call ptr @malloc(i32 64)
  store ptr %47, ptr %memberidx2.i.i199, align 8
  store i64 0, ptr %memberidx.i5.i197, align 4
  store ptr %46, ptr %memberidx1.i196, align 8
  %memberidx.i186 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %48 = load i64, ptr %memberidx.i186, align 4
  %49 = load ptr, ptr %0, align 8
  %memberidx2.i187 = getelementptr inbounds %Array_Token_, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i187, align 4
  %51 = icmp slt i64 %48, %50
  br i1 %51, label %if.entry.i191, label %Parser_advance.exit193

if.entry.i191:                                    ; preds = %if.entry11
  %52 = add nsw i64 %48, 1
  store i64 %52, ptr %memberidx.i186, align 4
  %memberidx.i.i189 = getelementptr inbounds %Array_Token_, ptr %49, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i.i189, align 8
  %ptridx.i.i190 = getelementptr inbounds ptr, ptr %53, i64 %52
  %54 = load ptr, ptr %ptridx.i.i190, align 8
  store ptr %54, ptr %memberidx, align 8
  br label %Parser_advance.exit193

Parser_advance.exit193:                           ; preds = %if.entry11, %if.entry.i191
  %55 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %56 = load i64, ptr %memberidx.i5.i197, align 4
  %57 = load i64, ptr %memberidx1.i.i198, align 4
  %.not.i178 = icmp slt i64 %56, %57
  br i1 %.not.i178, label %Parser_advance.exit193.Array_TypeNode____sl__.exit185_crit_edge, label %if.entry.i181

Parser_advance.exit193.Array_TypeNode____sl__.exit185_crit_edge: ; preds = %Parser_advance.exit193
  %.pre234 = load ptr, ptr %memberidx2.i.i199, align 8
  br label %Array_TypeNode____sl__.exit185

if.entry.i181:                                    ; preds = %Parser_advance.exit193
  %58 = shl i64 %57, 1
  store i64 %58, ptr %memberidx1.i.i198, align 4
  %59 = load ptr, ptr %memberidx2.i.i199, align 8
  %60 = shl i64 %57, 4
  %61 = tail call ptr @realloc(ptr %59, i64 %60)
  store ptr %61, ptr %memberidx2.i.i199, align 8
  %.pre = load i64, ptr %memberidx.i5.i197, align 4
  br label %Array_TypeNode____sl__.exit185

Array_TypeNode____sl__.exit185:                   ; preds = %Parser_advance.exit193.Array_TypeNode____sl__.exit185_crit_edge, %if.entry.i181
  %62 = phi ptr [ %.pre234, %Parser_advance.exit193.Array_TypeNode____sl__.exit185_crit_edge ], [ %61, %if.entry.i181 ]
  %63 = phi i64 [ %56, %Parser_advance.exit193.Array_TypeNode____sl__.exit185_crit_edge ], [ %.pre, %if.entry.i181 ]
  %64 = add i64 %63, 1
  store i64 %64, ptr %memberidx.i5.i197, align 4
  %ptridx.i183 = getelementptr inbounds ptr, ptr %62, i64 %63
  store ptr %55, ptr %ptridx.i183, align 8
  %65 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %66 = load ptr, ptr %memberidx1.i196, align 8
  %67 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i166 = getelementptr inbounds %Array_TypeNode_, ptr %66, i64 0, i32 2
  %68 = load i64, ptr %memberidx.i166, align 4
  %memberidx1.i167 = getelementptr inbounds %Array_TypeNode_, ptr %66, i64 0, i32 3
  %69 = load i64, ptr %memberidx1.i167, align 4
  %.not.i168 = icmp slt i64 %68, %69
  br i1 %.not.i168, label %Array_TypeNode____sl__.exit185.Array_TypeNode____sl__.exit175_crit_edge, label %if.entry.i171

Array_TypeNode____sl__.exit185.Array_TypeNode____sl__.exit175_crit_edge: ; preds = %Array_TypeNode____sl__.exit185
  %memberidx4.i172.phi.trans.insert = getelementptr inbounds %Array_TypeNode_, ptr %66, i64 0, i32 1
  %.pre236 = load ptr, ptr %memberidx4.i172.phi.trans.insert, align 8
  br label %Array_TypeNode____sl__.exit175

if.entry.i171:                                    ; preds = %Array_TypeNode____sl__.exit185
  %70 = shl i64 %69, 1
  store i64 %70, ptr %memberidx1.i167, align 4
  %memberidx2.i.i170 = getelementptr inbounds %Array_TypeNode_, ptr %66, i64 0, i32 1
  %71 = load ptr, ptr %memberidx2.i.i170, align 8
  %72 = shl i64 %69, 4
  %73 = tail call ptr @realloc(ptr %71, i64 %72)
  store ptr %73, ptr %memberidx2.i.i170, align 8
  %.pre235 = load i64, ptr %memberidx.i166, align 4
  br label %Array_TypeNode____sl__.exit175

Array_TypeNode____sl__.exit175:                   ; preds = %Array_TypeNode____sl__.exit185.Array_TypeNode____sl__.exit175_crit_edge, %if.entry.i171
  %74 = phi ptr [ %.pre236, %Array_TypeNode____sl__.exit185.Array_TypeNode____sl__.exit175_crit_edge ], [ %73, %if.entry.i171 ]
  %75 = phi i64 [ %68, %Array_TypeNode____sl__.exit185.Array_TypeNode____sl__.exit175_crit_edge ], [ %.pre235, %if.entry.i171 ]
  %76 = add i64 %75, 1
  store i64 %76, ptr %memberidx.i166, align 4
  %ptridx.i173 = getelementptr inbounds ptr, ptr %74, i64 %75
  store ptr %67, ptr %ptridx.i173, align 8
  %77 = load ptr, ptr %memberidx, align 8
  %78 = load i64, ptr %77, align 4
  %79 = icmp eq i64 %78, 28
  br i1 %79, label %if.entry.i156, label %else.i162

if.entry.i156:                                    ; preds = %Array_TypeNode____sl__.exit175
  %80 = load i64, ptr %memberidx.i186, align 4
  %81 = load ptr, ptr %0, align 8
  %memberidx2.i.i155 = getelementptr inbounds %Array_Token_, ptr %81, i64 0, i32 2
  %82 = load i64, ptr %memberidx2.i.i155, align 4
  %83 = icmp slt i64 %80, %82
  br i1 %83, label %if.entry.i.i160, label %ifend

if.entry.i.i160:                                  ; preds = %if.entry.i156
  %84 = add nsw i64 %80, 1
  store i64 %84, ptr %memberidx.i186, align 4
  %memberidx.i.i.i158 = getelementptr inbounds %Array_Token_, ptr %81, i64 0, i32 1
  %85 = load ptr, ptr %memberidx.i.i.i158, align 8
  %ptridx.i.i.i159 = getelementptr inbounds ptr, ptr %85, i64 %84
  %86 = load ptr, ptr %ptridx.i.i.i159, align 8
  store ptr %86, ptr %memberidx, align 8
  br label %ifend

else.i162:                                        ; preds = %Array_TypeNode____sl__.exit175
  %87 = tail call ptr @malloc(i32 16)
  %memberidx35.i163 = getelementptr inbounds %Token, ptr %77, i64 0, i32 1
  %88 = load ptr, ptr %memberidx35.i163, align 8
  store i64 44, ptr %87, align 4
  %memberidx1.i82.i164 = getelementptr inbounds %Token, ptr %87, i64 0, i32 1
  store ptr %88, ptr %memberidx1.i82.i164, align 8
  br label %ifend

else12:                                           ; preds = %1
  %89 = tail call ptr @malloc(i32 16)
  %90 = load ptr, ptr %memberidx, align 8
  %memberidx1.i139 = getelementptr inbounds %Token, ptr %90, i64 0, i32 1
  %91 = load ptr, ptr %memberidx1.i139, align 8
  store ptr %91, ptr %89, align 8
  %memberidx.i.i140 = getelementptr inbounds %TypeNode, ptr %89, i64 0, i32 1
  store i64 12, ptr %memberidx.i.i140, align 4
  %92 = load i64, ptr %90, align 4
  switch i64 %92, label %if.entry73.i [
    i64 59, label %if.entry.i142
    i64 60, label %if.entry7.i
    i64 61, label %if.entry13.i
    i64 62, label %if.entry19.i
    i64 63, label %if.entry25.i
    i64 64, label %if.entry31.i
    i64 65, label %if.entry37.i
    i64 66, label %if.entry43.i
    i64 67, label %if.entry49.i
    i64 68, label %if.entry55.i
    i64 69, label %if.entry61.i
    i64 70, label %if.entry67.i
    i64 71, label %ifend.i
  ]

if.entry.i142:                                    ; preds = %else12
  store i64 0, ptr %memberidx.i.i140, align 4
  br label %ifend.i

ifend.i:                                          ; preds = %else12, %Parser_error.exit.i, %if.entry67.i, %if.entry61.i, %if.entry55.i, %if.entry49.i, %if.entry43.i, %if.entry37.i, %if.entry31.i, %if.entry25.i, %if.entry19.i, %if.entry13.i, %if.entry7.i, %if.entry.i142
  %memberidx.i104.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %93 = load i64, ptr %memberidx.i104.i, align 4
  %94 = load ptr, ptr %0, align 8
  %memberidx2.i105.i = getelementptr inbounds %Array_Token_, ptr %94, i64 0, i32 2
  %95 = load i64, ptr %memberidx2.i105.i, align 4
  %96 = icmp slt i64 %93, %95
  br i1 %96, label %if.entry.i.i145, label %ifend

if.entry.i.i145:                                  ; preds = %ifend.i
  %97 = add nsw i64 %93, 1
  store i64 %97, ptr %memberidx.i104.i, align 4
  %memberidx.i.i106.i = getelementptr inbounds %Array_Token_, ptr %94, i64 0, i32 1
  %98 = load ptr, ptr %memberidx.i.i106.i, align 8
  %ptridx.i.i107.i = getelementptr inbounds ptr, ptr %98, i64 %97
  %99 = load ptr, ptr %ptridx.i.i107.i, align 8
  store ptr %99, ptr %memberidx, align 8
  br label %ifend

if.entry7.i:                                      ; preds = %else12
  store i64 1, ptr %memberidx.i.i140, align 4
  br label %ifend.i

if.entry13.i:                                     ; preds = %else12
  store i64 2, ptr %memberidx.i.i140, align 4
  br label %ifend.i

if.entry19.i:                                     ; preds = %else12
  store i64 3, ptr %memberidx.i.i140, align 4
  br label %ifend.i

if.entry25.i:                                     ; preds = %else12
  store i64 4, ptr %memberidx.i.i140, align 4
  br label %ifend.i

if.entry31.i:                                     ; preds = %else12
  store i64 5, ptr %memberidx.i.i140, align 4
  br label %ifend.i

if.entry37.i:                                     ; preds = %else12
  store i64 6, ptr %memberidx.i.i140, align 4
  br label %ifend.i

if.entry43.i:                                     ; preds = %else12
  store i64 7, ptr %memberidx.i.i140, align 4
  br label %ifend.i

if.entry49.i:                                     ; preds = %else12
  store i64 8, ptr %memberidx.i.i140, align 4
  br label %ifend.i

if.entry55.i:                                     ; preds = %else12
  store i64 9, ptr %memberidx.i.i140, align 4
  br label %ifend.i

if.entry61.i:                                     ; preds = %else12
  store i64 10, ptr %memberidx.i.i140, align 4
  br label %ifend.i

if.entry67.i:                                     ; preds = %else12
  store i64 11, ptr %memberidx.i.i140, align 4
  br label %ifend.i

if.entry73.i:                                     ; preds = %else12
  %100 = tail call ptr @malloc(i32 208)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(26) %100, ptr noundef nonnull align 8 dereferenceable(26) @68, i64 26, i1 false)
  %101 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %101, align 8
  %memberidx.i.i108.i = getelementptr inbounds %string, ptr %101, i64 0, i32 1
  store ptr %100, ptr %memberidx.i.i108.i, align 8
  %memberidx1.i.i109.i = getelementptr inbounds %string, ptr %101, i64 0, i32 2
  store i64 26, ptr %memberidx1.i.i109.i, align 4
  %memberidx2.i.i110.i = getelementptr inbounds %string, ptr %101, i64 0, i32 3
  store i64 26, ptr %memberidx2.i.i110.i, align 4
  %memberidx.i103.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %102 = load ptr, ptr %memberidx.i103.i, align 8
  %103 = tail call ptr @malloc(i32 24)
  %104 = load ptr, ptr %memberidx, align 8
  %memberidx2.i.i149 = getelementptr inbounds %Token, ptr %104, i64 0, i32 1
  %105 = load ptr, ptr %memberidx2.i.i149, align 8
  store i64 2, ptr %103, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloError, ptr %103, i64 0, i32 2
  store ptr %105, ptr %memberidx1.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %FloError, ptr %103, i64 0, i32 1
  store ptr %101, ptr %memberidx2.i.i.i, align 8
  %memberidx.i.i.i150 = getelementptr inbounds %Array_FloError_, ptr %102, i64 0, i32 2
  %106 = load i64, ptr %memberidx.i.i.i150, align 4
  %memberidx1.i4.i.i = getelementptr inbounds %Array_FloError_, ptr %102, i64 0, i32 3
  %107 = load i64, ptr %memberidx1.i4.i.i, align 4
  %.not.i.i.i = icmp slt i64 %106, %107
  br i1 %.not.i.i.i, label %if.entry73.i.Parser_error.exit.i_crit_edge, label %if.entry.i.i.i

if.entry73.i.Parser_error.exit.i_crit_edge:       ; preds = %if.entry73.i
  %memberidx4.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %102, i64 0, i32 1
  %.pre239 = load ptr, ptr %memberidx4.i.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry73.i
  %108 = shl i64 %107, 1
  store i64 %108, ptr %memberidx1.i4.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %102, i64 0, i32 1
  %109 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %110 = shl i64 %107, 4
  %111 = tail call ptr @realloc(ptr %109, i64 %110)
  store ptr %111, ptr %memberidx2.i.i.i.i, align 8
  %.pre238 = load i64, ptr %memberidx.i.i.i150, align 4
  br label %Parser_error.exit.i

Parser_error.exit.i:                              ; preds = %if.entry73.i.Parser_error.exit.i_crit_edge, %if.entry.i.i.i
  %112 = phi ptr [ %111, %if.entry.i.i.i ], [ %.pre239, %if.entry73.i.Parser_error.exit.i_crit_edge ]
  %113 = phi i64 [ %.pre238, %if.entry.i.i.i ], [ %106, %if.entry73.i.Parser_error.exit.i_crit_edge ]
  %114 = add i64 %113, 1
  store i64 %114, ptr %memberidx.i.i.i150, align 4
  %ptridx.i.i.i151 = getelementptr inbounds ptr, ptr %112, i64 %113
  store ptr %103, ptr %ptridx.i.i.i151, align 8
  br label %ifend.i

while.entry:                                      ; preds = %while.entry.preheader, %ifend28
  %115 = phi i64 [ %146, %ifend28 ], [ %8, %while.entry.preheader ]
  %type_node.1 = phi ptr [ %type_node.3, %ifend28 ], [ %type_node.0, %while.entry.preheader ]
  %116 = icmp eq i64 %115, 27
  br i1 %116, label %if.entry26, label %else27

while.end:                                        ; preds = %ifend28, %ifend
  %type_node.2 = phi ptr [ %type_node.0, %ifend ], [ %type_node.3, %ifend28 ]
  ret ptr %type_node.2

if.entry26:                                       ; preds = %while.entry
  %117 = load i64, ptr %memberidx.i.i121, align 4
  %118 = load ptr, ptr %0, align 8
  %memberidx2.i134 = getelementptr inbounds %Array_Token_, ptr %118, i64 0, i32 2
  %119 = load i64, ptr %memberidx2.i134, align 4
  %120 = icmp slt i64 %117, %119
  br i1 %120, label %Parser_advance.exit, label %else32

Parser_advance.exit:                              ; preds = %if.entry26
  %121 = add nsw i64 %117, 1
  store i64 %121, ptr %memberidx.i.i121, align 4
  %memberidx.i.i136 = getelementptr inbounds %Array_Token_, ptr %118, i64 0, i32 1
  %122 = load ptr, ptr %memberidx.i.i136, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %122, i64 %121
  %123 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %123, ptr %memberidx, align 8
  %.pre240 = load i64, ptr %123, align 4
  %124 = icmp eq i64 %.pre240, 28
  br i1 %124, label %if.entry31, label %else32

else27:                                           ; preds = %while.entry
  %125 = tail call ptr @malloc(i32 24)
  %126 = load ptr, ptr %type_node.1, align 8
  %127 = load ptr, ptr %memberidx, align 8
  %128 = load i64, ptr %127, align 4
  %129 = icmp eq i64 %128, 4
  br i1 %129, label %if.entry.i123, label %else.i129

if.entry.i123:                                    ; preds = %else27
  %130 = load i64, ptr %memberidx.i.i121, align 4
  %131 = load ptr, ptr %0, align 8
  %memberidx2.i.i122 = getelementptr inbounds %Array_Token_, ptr %131, i64 0, i32 2
  %132 = load i64, ptr %memberidx2.i.i122, align 4
  %133 = icmp slt i64 %130, %132
  br i1 %133, label %if.entry.i.i127, label %Parser_eat.exit132

if.entry.i.i127:                                  ; preds = %if.entry.i123
  %134 = add nsw i64 %130, 1
  store i64 %134, ptr %memberidx.i.i121, align 4
  %memberidx.i.i.i125 = getelementptr inbounds %Array_Token_, ptr %131, i64 0, i32 1
  %135 = load ptr, ptr %memberidx.i.i.i125, align 8
  %ptridx.i.i.i126 = getelementptr inbounds ptr, ptr %135, i64 %134
  %136 = load ptr, ptr %ptridx.i.i.i126, align 8
  store ptr %136, ptr %memberidx, align 8
  br label %Parser_eat.exit132

else.i129:                                        ; preds = %else27
  %137 = tail call ptr @malloc(i32 16)
  %memberidx35.i130 = getelementptr inbounds %Token, ptr %127, i64 0, i32 1
  %138 = load ptr, ptr %memberidx35.i130, align 8
  store i64 44, ptr %137, align 4
  %memberidx1.i82.i131 = getelementptr inbounds %Token, ptr %137, i64 0, i32 1
  store ptr %138, ptr %memberidx1.i82.i131, align 8
  br label %Parser_eat.exit132

Parser_eat.exit132:                               ; preds = %if.entry.i123, %if.entry.i.i127, %else.i129
  %common.ret.op.i120 = phi ptr [ %137, %else.i129 ], [ %127, %if.entry.i.i127 ], [ %127, %if.entry.i123 ]
  %memberidx47 = getelementptr inbounds %Token, ptr %common.ret.op.i120, i64 0, i32 1
  %139 = load ptr, ptr %memberidx47, align 8
  %140 = tail call ptr @malloc(i32 32)
  %141 = load i64, ptr %126, align 4
  %memberidx1.i113 = getelementptr inbounds %FloRange, ptr %139, i64 0, i32 1
  %142 = load i64, ptr %memberidx1.i113, align 4
  %memberidx2.i114 = getelementptr inbounds %FloRange, ptr %126, i64 0, i32 2
  %143 = load i64, ptr %memberidx2.i114, align 4
  %memberidx3.i115 = getelementptr inbounds %FloRange, ptr %139, i64 0, i32 3
  %144 = load i64, ptr %memberidx3.i115, align 4
  store i64 %141, ptr %140, align 4
  %memberidx1.i.i116 = getelementptr inbounds %FloRange, ptr %140, i64 0, i32 1
  store i64 %142, ptr %memberidx1.i.i116, align 4
  %memberidx2.i.i117 = getelementptr inbounds %FloRange, ptr %140, i64 0, i32 2
  store i64 %143, ptr %memberidx2.i.i117, align 4
  %memberidx3.i.i118 = getelementptr inbounds %FloRange, ptr %140, i64 0, i32 3
  store i64 %144, ptr %memberidx3.i.i118, align 4
  store ptr %140, ptr %125, align 8
  %memberidx.i.i111 = getelementptr inbounds %TypeNode, ptr %125, i64 0, i32 1
  store i64 15, ptr %memberidx.i.i111, align 4
  %memberidx.i112 = getelementptr inbounds %PointerTypeNode, ptr %125, i64 0, i32 2
  store ptr %type_node.1, ptr %memberidx.i112, align 8
  br label %ifend28

ifend28:                                          ; preds = %else.i, %if.entry.i.i, %if.entry.i, %Parser_eat.exit132
  %type_node.3 = phi ptr [ %125, %Parser_eat.exit132 ], [ %type_node.4, %if.entry.i ], [ %type_node.4, %if.entry.i.i ], [ %type_node.4, %else.i ]
  %145 = load ptr, ptr %memberidx, align 8
  %146 = load i64, ptr %145, align 4
  %147 = icmp eq i64 %146, 27
  %148 = icmp eq i64 %146, 4
  %149 = or i1 %147, %148
  %150 = load ptr, ptr %memberidx2.i207, align 8
  %memberidx3.i110 = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 2
  %151 = load i64, ptr %memberidx3.i110, align 4
  %152 = icmp eq i64 %151, 0
  %153 = and i1 %149, %152
  br i1 %153, label %while.entry, label %while.end

if.entry31:                                       ; preds = %Parser_advance.exit
  %154 = tail call ptr @malloc(i32 32)
  %155 = tail call ptr @malloc(i32 24)
  %156 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %156, ptr noundef nonnull align 8 dereferenceable(5) @70, i64 5, i1 false)
  %157 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %157, align 8
  %memberidx.i.i105 = getelementptr inbounds %string, ptr %157, i64 0, i32 1
  store ptr %156, ptr %memberidx.i.i105, align 8
  %memberidx1.i.i106 = getelementptr inbounds %string, ptr %157, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i106, align 4
  %memberidx2.i.i107 = getelementptr inbounds %string, ptr %157, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i107, align 4
  %158 = load ptr, ptr %memberidx, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %158, i64 0, i32 1
  %159 = load ptr, ptr %memberidx36, align 8
  store i64 51, ptr %155, align 4
  %memberidx1.i.i103 = getelementptr inbounds %Token, ptr %155, i64 0, i32 1
  store ptr %159, ptr %memberidx1.i.i103, align 8
  %memberidx.i104 = getelementptr inbounds %IdentifierToken, ptr %155, i64 0, i32 2
  store ptr %157, ptr %memberidx.i104, align 8
  %160 = load ptr, ptr %memberidx36, align 8
  store ptr %160, ptr %154, align 8
  %memberidx.i.i97 = getelementptr inbounds %TypeNode, ptr %154, i64 0, i32 1
  store i64 18, ptr %memberidx.i.i97, align 4
  %memberidx.i98 = getelementptr inbounds %RecordTypeNode, ptr %154, i64 0, i32 2
  store ptr %155, ptr %memberidx.i98, align 8
  %memberidx1.i99 = getelementptr inbounds %RecordTypeNode, ptr %154, i64 0, i32 3
  %161 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %161, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %161, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i100 = getelementptr inbounds %Array_TypeNode_, ptr %161, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i100, align 4
  %memberidx2.i.i101 = getelementptr inbounds %Array_TypeNode_, ptr %161, i64 0, i32 1
  %162 = tail call ptr @malloc(i32 64)
  store ptr %162, ptr %memberidx2.i.i101, align 8
  store ptr %161, ptr %memberidx1.i99, align 8
  %163 = load i64, ptr %memberidx1.i.i100, align 4
  %.not.i = icmp sgt i64 %163, 0
  br i1 %.not.i, label %Array_TypeNode____sl__.exit, label %if.entry.i96

if.entry.i96:                                     ; preds = %if.entry31
  %164 = shl i64 %163, 1
  store i64 %164, ptr %memberidx1.i.i100, align 4
  %165 = shl i64 %163, 4
  %166 = tail call ptr @realloc(ptr %162, i64 %165)
  store ptr %166, ptr %memberidx2.i.i101, align 8
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %if.entry31, %if.entry.i96
  %167 = phi ptr [ %162, %if.entry31 ], [ %166, %if.entry.i96 ]
  store i64 1, ptr %memberidx.i5.i, align 4
  store ptr %type_node.1, ptr %167, align 8
  %.pre241 = load ptr, ptr %154, align 8
  %.pre242 = load ptr, ptr %memberidx, align 8
  br label %ifend33

else32:                                           ; preds = %if.entry26, %Parser_advance.exit
  %168 = tail call ptr @malloc(i32 32)
  %169 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %170 = load ptr, ptr %memberidx, align 8
  %memberidx41 = getelementptr inbounds %Token, ptr %170, i64 0, i32 1
  %171 = load ptr, ptr %memberidx41, align 8
  store ptr %171, ptr %168, align 8
  %memberidx.i.i89 = getelementptr inbounds %TypeNode, ptr %168, i64 0, i32 1
  store i64 16, ptr %memberidx.i.i89, align 4
  %memberidx.i90 = getelementptr inbounds %ArrayTypeNode, ptr %168, i64 0, i32 2
  store ptr %type_node.1, ptr %memberidx.i90, align 8
  %memberidx1.i91 = getelementptr inbounds %ArrayTypeNode, ptr %168, i64 0, i32 3
  store ptr %169, ptr %memberidx1.i91, align 8
  br label %ifend33

ifend33:                                          ; preds = %else32, %Array_TypeNode____sl__.exit
  %172 = phi ptr [ %.pre242, %Array_TypeNode____sl__.exit ], [ %170, %else32 ]
  %173 = phi ptr [ %.pre241, %Array_TypeNode____sl__.exit ], [ %171, %else32 ]
  %type_node.4 = phi ptr [ %154, %Array_TypeNode____sl__.exit ], [ %168, %else32 ]
  %memberidx45 = getelementptr inbounds %Token, ptr %172, i64 0, i32 1
  %174 = load ptr, ptr %memberidx45, align 8
  %175 = tail call ptr @malloc(i32 32)
  %176 = load i64, ptr %173, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %174, i64 0, i32 1
  %177 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %FloRange, ptr %173, i64 0, i32 2
  %178 = load i64, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %174, i64 0, i32 3
  %179 = load i64, ptr %memberidx3.i, align 4
  store i64 %176, ptr %175, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %175, i64 0, i32 1
  store i64 %177, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i87 = getelementptr inbounds %FloRange, ptr %175, i64 0, i32 2
  store i64 %178, ptr %memberidx2.i.i87, align 4
  %memberidx3.i.i88 = getelementptr inbounds %FloRange, ptr %175, i64 0, i32 3
  store i64 %179, ptr %memberidx3.i.i88, align 4
  store ptr %175, ptr %type_node.4, align 8
  %180 = load ptr, ptr %memberidx, align 8
  %181 = load i64, ptr %180, align 4
  %182 = icmp eq i64 %181, 28
  br i1 %182, label %if.entry.i, label %else.i

if.entry.i:                                       ; preds = %ifend33
  %183 = load i64, ptr %memberidx.i.i121, align 4
  %184 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %184, i64 0, i32 2
  %185 = load i64, ptr %memberidx2.i.i, align 4
  %186 = icmp slt i64 %183, %185
  br i1 %186, label %if.entry.i.i, label %ifend28

if.entry.i.i:                                     ; preds = %if.entry.i
  %187 = add nsw i64 %183, 1
  store i64 %187, ptr %memberidx.i.i121, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %184, i64 0, i32 1
  %188 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %188, i64 %187
  %189 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %189, ptr %memberidx, align 8
  br label %ifend28

else.i:                                           ; preds = %ifend33
  %190 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %180, i64 0, i32 1
  %191 = load ptr, ptr %memberidx35.i, align 8
  store i64 44, ptr %190, align 4
  %memberidx1.i82.i = getelementptr inbounds %Token, ptr %190, i64 0, i32 1
  store ptr %191, ptr %memberidx1.i82.i, align 8
  br label %ifend28
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ExpressionNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ExpressionNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc void @Parser_parse_expression_list(ptr %0, ptr nocapture %1) unnamed_addr {
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, 31
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx3.i.i, align 4
  %8 = icmp eq i64 %7, 0
  %9 = and i1 %5, %8
  br i1 %9, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %2
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 2
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx.i11.i, align 4
  %12 = load i64, ptr %memberidx2.i12.i, align 4
  %13 = icmp slt i64 %11, %12
  br i1 %13, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %14 = phi i64 [ %22, %Parser_advance.exit.i ], [ %11, %while.entry.i.preheader ]
  %15 = load i64, ptr %memberidx2.i12.i, align 4
  %16 = icmp slt i64 %14, %15
  br i1 %16, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %17 = add nsw i64 %14, 1
  store i64 %17, ptr %memberidx.i11.i, align 4
  %18 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %19, ptr %memberidx.i, align 8
  %.pre = load i64, ptr %19, align 4
  %.pre96 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %20 = phi i64 [ %.pre96, %if.entry.i.i ], [ 0, %while.entry.i ]
  %21 = phi i64 [ %.pre, %if.entry.i.i ], [ 31, %while.entry.i ]
  %22 = phi i64 [ %17, %if.entry.i.i ], [ %14, %while.entry.i ]
  %23 = icmp eq i64 %21, 31
  %24 = icmp eq i64 %20, 0
  %25 = and i1 %23, %24
  br i1 %25, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %2
  %26 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %memberidx.i15 = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i15, align 4
  %memberidx1.i = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 3
  %28 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %27, %28
  br i1 %.not.i, label %Parser_new_lines.exit.Array_ExpressionNode____sl__.exit_crit_edge, label %if.entry.i

Parser_new_lines.exit.Array_ExpressionNode____sl__.exit_crit_edge: ; preds = %Parser_new_lines.exit
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %.pre98 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_ExpressionNode____sl__.exit

if.entry.i:                                       ; preds = %Parser_new_lines.exit
  %29 = shl i64 %28, 1
  store i64 %29, ptr %memberidx1.i, align 4
  %memberidx2.i.i17 = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2.i.i17, align 8
  %31 = shl i64 %28, 4
  %32 = tail call ptr @realloc(ptr %30, i64 %31)
  store ptr %32, ptr %memberidx2.i.i17, align 8
  %.pre97 = load i64, ptr %memberidx.i15, align 4
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %Parser_new_lines.exit.Array_ExpressionNode____sl__.exit_crit_edge, %if.entry.i
  %33 = phi ptr [ %.pre98, %Parser_new_lines.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %32, %if.entry.i ]
  %34 = phi i64 [ %27, %Parser_new_lines.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %.pre97, %if.entry.i ]
  %35 = add i64 %34, 1
  store i64 %35, ptr %memberidx.i15, align 4
  %memberidx4.i = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %ptridx.i = getelementptr inbounds ptr, ptr %33, i64 %34
  store ptr %26, ptr %ptridx.i, align 8
  %36 = load ptr, ptr %memberidx.i, align 8
  %37 = load i64, ptr %36, align 4
  %38 = icmp eq i64 %37, 31
  %39 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i21 = getelementptr inbounds %Array_FloError_, ptr %39, i64 0, i32 2
  %40 = load i64, ptr %memberidx3.i.i21, align 4
  %41 = icmp eq i64 %40, 0
  %42 = and i1 %38, %41
  br i1 %42, label %while.entry.i24.preheader, label %Parser_new_lines.exit33

while.entry.i24.preheader:                        ; preds = %Array_ExpressionNode____sl__.exit
  %memberidx.i11.i22 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %43 = load ptr, ptr %0, align 8
  %memberidx2.i12.i23 = getelementptr inbounds %Array_Token_, ptr %43, i64 0, i32 2
  %memberidx.i.i.i26 = getelementptr inbounds %Array_Token_, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i11.i22, align 4
  %45 = load i64, ptr %memberidx2.i12.i23, align 4
  %46 = icmp slt i64 %44, %45
  br i1 %46, label %while.entry.i24, label %while.entry.i24.us

while.entry.i24.us:                               ; preds = %while.entry.i24.preheader, %while.entry.i24.us
  br label %while.entry.i24.us

while.entry.i24:                                  ; preds = %while.entry.i24.preheader, %Parser_advance.exit.i32
  %47 = phi i64 [ %55, %Parser_advance.exit.i32 ], [ 0, %while.entry.i24.preheader ]
  %48 = phi i64 [ %56, %Parser_advance.exit.i32 ], [ 31, %while.entry.i24.preheader ]
  %49 = phi i64 [ %59, %Parser_advance.exit.i32 ], [ %44, %while.entry.i24.preheader ]
  %50 = load i64, ptr %memberidx2.i12.i23, align 4
  %51 = icmp slt i64 %49, %50
  br i1 %51, label %if.entry.i.i28, label %Parser_advance.exit.i32

if.entry.i.i28:                                   ; preds = %while.entry.i24
  %52 = add nsw i64 %49, 1
  store i64 %52, ptr %memberidx.i11.i22, align 4
  %53 = load ptr, ptr %memberidx.i.i.i26, align 8
  %ptridx.i.i.i27 = getelementptr inbounds ptr, ptr %53, i64 %52
  %54 = load ptr, ptr %ptridx.i.i.i27, align 8
  store ptr %54, ptr %memberidx.i, align 8
  %.pre99 = load i64, ptr %54, align 4
  %.pre100 = load i64, ptr %memberidx3.i.i21, align 4
  br label %Parser_advance.exit.i32

Parser_advance.exit.i32:                          ; preds = %if.entry.i.i28, %while.entry.i24
  %55 = phi i64 [ %.pre100, %if.entry.i.i28 ], [ %47, %while.entry.i24 ]
  %56 = phi i64 [ %.pre99, %if.entry.i.i28 ], [ %48, %while.entry.i24 ]
  %57 = phi i64 [ %.pre100, %if.entry.i.i28 ], [ 0, %while.entry.i24 ]
  %58 = phi i64 [ %.pre99, %if.entry.i.i28 ], [ 31, %while.entry.i24 ]
  %59 = phi i64 [ %52, %if.entry.i.i28 ], [ %49, %while.entry.i24 ]
  %60 = icmp eq i64 %58, 31
  %61 = icmp eq i64 %57, 0
  %62 = and i1 %60, %61
  br i1 %62, label %while.entry.i24, label %Parser_new_lines.exit33

Parser_new_lines.exit33:                          ; preds = %Parser_advance.exit.i32, %Array_ExpressionNode____sl__.exit
  %63 = phi i64 [ %40, %Array_ExpressionNode____sl__.exit ], [ %55, %Parser_advance.exit.i32 ]
  %64 = phi i64 [ %37, %Array_ExpressionNode____sl__.exit ], [ %56, %Parser_advance.exit.i32 ]
  %65 = icmp eq i64 %64, 3
  %66 = icmp eq i64 %63, 0
  %67 = and i1 %65, %66
  br i1 %67, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_new_lines.exit33
  %memberidx.i35 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_ExpressionNode____sl__.exit64
  %68 = phi ptr [ %39, %while.entry.preheader ], [ %106, %Array_ExpressionNode____sl__.exit64 ]
  %69 = load i64, ptr %memberidx.i35, align 4
  %70 = load ptr, ptr %0, align 8
  %memberidx2.i36 = getelementptr inbounds %Array_Token_, ptr %70, i64 0, i32 2
  %71 = load i64, ptr %memberidx2.i36, align 4
  %72 = icmp slt i64 %69, %71
  br i1 %72, label %Parser_advance.exit, label %Parser_new_lines.exit55

Parser_advance.exit:                              ; preds = %while.entry
  %73 = add nsw i64 %69, 1
  store i64 %73, ptr %memberidx.i35, align 4
  %memberidx.i.i38 = getelementptr inbounds %Array_Token_, ptr %70, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i.i38, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %74, i64 %73
  %75 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %75, ptr %memberidx.i, align 8
  %.pre101 = load i64, ptr %75, align 4
  %memberidx3.i.i43.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 2
  %.pre102 = load i64, ptr %memberidx3.i.i43.phi.trans.insert, align 4
  %76 = icmp eq i64 %.pre101, 31
  %memberidx3.i.i43 = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 2
  %77 = icmp eq i64 %.pre102, 0
  %78 = and i1 %76, %77
  br i1 %78, label %while.entry.i46.preheader, label %Parser_new_lines.exit55

while.entry.i46.preheader:                        ; preds = %Parser_advance.exit
  %memberidx.i.i.i48 = getelementptr inbounds %Array_Token_, ptr %70, i64 0, i32 1
  %79 = load i64, ptr %memberidx2.i36, align 4
  %80 = icmp slt i64 %73, %79
  br i1 %80, label %while.entry.i46, label %while.entry.i46.us

while.entry.i46.us:                               ; preds = %while.entry.i46.preheader, %while.entry.i46.us
  br label %while.entry.i46.us

while.entry.i46:                                  ; preds = %while.entry.i46.preheader, %Parser_advance.exit.i54
  %81 = phi i64 [ %89, %Parser_advance.exit.i54 ], [ %73, %while.entry.i46.preheader ]
  %82 = load i64, ptr %memberidx2.i36, align 4
  %83 = icmp slt i64 %81, %82
  br i1 %83, label %if.entry.i.i50, label %Parser_advance.exit.i54

if.entry.i.i50:                                   ; preds = %while.entry.i46
  %84 = add nsw i64 %81, 1
  store i64 %84, ptr %memberidx.i35, align 4
  %85 = load ptr, ptr %memberidx.i.i.i48, align 8
  %ptridx.i.i.i49 = getelementptr inbounds ptr, ptr %85, i64 %84
  %86 = load ptr, ptr %ptridx.i.i.i49, align 8
  store ptr %86, ptr %memberidx.i, align 8
  %.pre104 = load i64, ptr %86, align 4
  %.pre105 = load i64, ptr %memberidx3.i.i43, align 4
  br label %Parser_advance.exit.i54

Parser_advance.exit.i54:                          ; preds = %if.entry.i.i50, %while.entry.i46
  %87 = phi i64 [ %.pre105, %if.entry.i.i50 ], [ 0, %while.entry.i46 ]
  %88 = phi i64 [ %.pre104, %if.entry.i.i50 ], [ 31, %while.entry.i46 ]
  %89 = phi i64 [ %84, %if.entry.i.i50 ], [ %81, %while.entry.i46 ]
  %90 = icmp eq i64 %88, 31
  %91 = icmp eq i64 %87, 0
  %92 = and i1 %90, %91
  br i1 %92, label %while.entry.i46, label %Parser_new_lines.exit55

Parser_new_lines.exit55:                          ; preds = %Parser_advance.exit.i54, %while.entry, %Parser_advance.exit
  %93 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %94 = load i64, ptr %memberidx.i15, align 4
  %95 = load i64, ptr %memberidx1.i, align 4
  %.not.i58 = icmp slt i64 %94, %95
  br i1 %.not.i58, label %Parser_new_lines.exit55.Array_ExpressionNode____sl__.exit64_crit_edge, label %if.entry.i61

Parser_new_lines.exit55.Array_ExpressionNode____sl__.exit64_crit_edge: ; preds = %Parser_new_lines.exit55
  %.pre107 = load ptr, ptr %memberidx4.i, align 8
  br label %Array_ExpressionNode____sl__.exit64

if.entry.i61:                                     ; preds = %Parser_new_lines.exit55
  %96 = shl i64 %95, 1
  store i64 %96, ptr %memberidx1.i, align 4
  %97 = load ptr, ptr %memberidx4.i, align 8
  %98 = shl i64 %95, 4
  %99 = tail call ptr @realloc(ptr %97, i64 %98)
  store ptr %99, ptr %memberidx4.i, align 8
  %.pre106 = load i64, ptr %memberidx.i15, align 4
  br label %Array_ExpressionNode____sl__.exit64

Array_ExpressionNode____sl__.exit64:              ; preds = %Parser_new_lines.exit55.Array_ExpressionNode____sl__.exit64_crit_edge, %if.entry.i61
  %100 = phi ptr [ %.pre107, %Parser_new_lines.exit55.Array_ExpressionNode____sl__.exit64_crit_edge ], [ %99, %if.entry.i61 ]
  %101 = phi i64 [ %94, %Parser_new_lines.exit55.Array_ExpressionNode____sl__.exit64_crit_edge ], [ %.pre106, %if.entry.i61 ]
  %102 = add i64 %101, 1
  store i64 %102, ptr %memberidx.i15, align 4
  %ptridx.i63 = getelementptr inbounds ptr, ptr %100, i64 %101
  store ptr %93, ptr %ptridx.i63, align 8
  %103 = load ptr, ptr %memberidx.i, align 8
  %104 = load i64, ptr %103, align 4
  %105 = icmp eq i64 %104, 3
  %106 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i67 = getelementptr inbounds %Array_FloError_, ptr %106, i64 0, i32 2
  %107 = load i64, ptr %memberidx3.i67, align 4
  %108 = icmp eq i64 %107, 0
  %109 = and i1 %105, %108
  br i1 %109, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_ExpressionNode____sl__.exit64, %Parser_new_lines.exit33
  %110 = phi i64 [ %63, %Parser_new_lines.exit33 ], [ %107, %Array_ExpressionNode____sl__.exit64 ]
  %111 = phi ptr [ %39, %Parser_new_lines.exit33 ], [ %106, %Array_ExpressionNode____sl__.exit64 ]
  %112 = phi i64 [ %64, %Parser_new_lines.exit33 ], [ %104, %Array_ExpressionNode____sl__.exit64 ]
  %113 = icmp eq i64 %112, 31
  %memberidx3.i.i71 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 2
  %114 = icmp eq i64 %110, 0
  %115 = and i1 %113, %114
  br i1 %115, label %while.entry.i74.preheader, label %Parser_new_lines.exit83

while.entry.i74.preheader:                        ; preds = %while.end
  %memberidx.i11.i72 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %116 = load ptr, ptr %0, align 8
  %memberidx2.i12.i73 = getelementptr inbounds %Array_Token_, ptr %116, i64 0, i32 2
  %memberidx.i.i.i76 = getelementptr inbounds %Array_Token_, ptr %116, i64 0, i32 1
  %117 = load i64, ptr %memberidx.i11.i72, align 4
  %118 = load i64, ptr %memberidx2.i12.i73, align 4
  %119 = icmp slt i64 %117, %118
  br i1 %119, label %while.entry.i74, label %while.entry.i74.us

while.entry.i74.us:                               ; preds = %while.entry.i74.preheader, %while.entry.i74.us
  br label %while.entry.i74.us

while.entry.i74:                                  ; preds = %while.entry.i74.preheader, %Parser_advance.exit.i82
  %120 = phi i64 [ %128, %Parser_advance.exit.i82 ], [ %117, %while.entry.i74.preheader ]
  %121 = load i64, ptr %memberidx2.i12.i73, align 4
  %122 = icmp slt i64 %120, %121
  br i1 %122, label %if.entry.i.i78, label %Parser_advance.exit.i82

if.entry.i.i78:                                   ; preds = %while.entry.i74
  %123 = add nsw i64 %120, 1
  store i64 %123, ptr %memberidx.i11.i72, align 4
  %124 = load ptr, ptr %memberidx.i.i.i76, align 8
  %ptridx.i.i.i77 = getelementptr inbounds ptr, ptr %124, i64 %123
  %125 = load ptr, ptr %ptridx.i.i.i77, align 8
  store ptr %125, ptr %memberidx.i, align 8
  %.pre108 = load i64, ptr %125, align 4
  %.pre109 = load i64, ptr %memberidx3.i.i71, align 4
  br label %Parser_advance.exit.i82

Parser_advance.exit.i82:                          ; preds = %if.entry.i.i78, %while.entry.i74
  %126 = phi i64 [ %.pre109, %if.entry.i.i78 ], [ 0, %while.entry.i74 ]
  %127 = phi i64 [ %.pre108, %if.entry.i.i78 ], [ 31, %while.entry.i74 ]
  %128 = phi i64 [ %123, %if.entry.i.i78 ], [ %120, %while.entry.i74 ]
  %129 = icmp eq i64 %127, 31
  %130 = icmp eq i64 %126, 0
  %131 = and i1 %129, %130
  br i1 %131, label %while.entry.i74, label %Parser_new_lines.exit83

Parser_new_lines.exit83:                          ; preds = %Parser_advance.exit.i82, %while.end
  ret void
}

define internal fastcc ptr @Parser_parse_string(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %1 = load ptr, ptr %memberidx.i, align 8
  %2 = load i64, ptr %1, align 4
  %3 = icmp eq i64 %2, 32
  br i1 %3, label %if.entry.i, label %else.i

if.entry.i:                                       ; preds = %for.entry
  %memberidx.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx2.i.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i.i, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %9, i64 %8
  %10 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %10, ptr %memberidx.i, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %for.entry
  %11 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %1, i64 0, i32 1
  %12 = load ptr, ptr %memberidx35.i, align 8
  store i64 44, ptr %11, align 4
  %memberidx1.i82.i = getelementptr inbounds %Token, ptr %11, i64 0, i32 1
  store ptr %12, ptr %memberidx1.i82.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %11, %else.i ], [ %1, %if.entry.i.i ], [ %1, %if.entry.i ]
  %13 = alloca %Parser, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %memberidx, align 8
  store ptr null, ptr %13, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %13, i64 0, i32 1
  store ptr %14, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %13, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %15, align 8
  %memberidx.i18 = getelementptr inbounds %Array_ExpressionNode_, ptr %15, i64 0, i32 2
  store i64 0, ptr %memberidx.i18, align 4
  %memberidx1.i19 = getelementptr inbounds %Array_ExpressionNode_, ptr %15, i64 0, i32 3
  store i64 8, ptr %memberidx1.i19, align 4
  %memberidx2.i20 = getelementptr inbounds %Array_ExpressionNode_, ptr %15, i64 0, i32 1
  %16 = tail call ptr @malloc(i32 64)
  store ptr %16, ptr %memberidx2.i20, align 8
  store i64 0, ptr %memberidx.i18, align 4
  %memberidx3 = getelementptr inbounds %StrToken, ptr %common.ret.op.i, i64 0, i32 4
  %17 = load ptr, ptr %memberidx3, align 8
  %memberidx441 = getelementptr inbounds %Array_Array_Token__, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx441, align 4
  %19 = icmp sgt i64 %18, 0
  %20 = load ptr, ptr %memberidx.i, align 8
  %21 = load i64, ptr %20, align 4
  %22 = icmp ne i64 %21, 44
  %23 = load ptr, ptr %memberidx, align 8
  %memberidx3.i42 = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 2
  %24 = load i64, ptr %memberidx3.i42, align 4
  %25 = icmp eq i64 %24, 0
  %26 = and i1 %22, %25
  %27 = and i1 %19, %26
  br i1 %27, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %Parser_eat.exit
  %memberidx3.i26 = getelementptr inbounds %Parser, ptr %13, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ExpressionNode____sl__.exit
  %28 = phi ptr [ %17, %for.body.lr.ph ], [ %46, %Array_ExpressionNode____sl__.exit ]
  %i.043 = phi i64 [ 0, %for.body.lr.ph ], [ %45, %Array_ExpressionNode____sl__.exit ]
  %memberidx.i23 = getelementptr inbounds %Array_Array_Token__, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i23, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %29, i64 %i.043
  %30 = load ptr, ptr %ptridx.i, align 8
  store ptr %30, ptr %13, align 8
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i25 = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 2
  %31 = load i64, ptr %memberidx2.i25, align 4
  %32 = icmp sgt i64 %31, -1
  br i1 %32, label %if.entry.i28, label %Parser_advance.exit

if.entry.i28:                                     ; preds = %for.body
  store i64 0, ptr %memberidx2.i, align 8
  %memberidx.i.i27 = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i.i27, align 8
  %34 = load ptr, ptr %33, align 8
  store ptr %34, ptr %memberidx3.i26, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %for.body, %if.entry.i28
  %35 = call fastcc ptr @Parser_parse_expression(ptr nonnull %13)
  %36 = load i64, ptr %memberidx.i18, align 4
  %37 = load i64, ptr %memberidx1.i19, align 4
  %.not.i = icmp slt i64 %36, %37
  br i1 %.not.i, label %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge, label %if.entry.i33

Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge: ; preds = %Parser_advance.exit
  %.pre44 = load ptr, ptr %memberidx2.i20, align 8
  br label %Array_ExpressionNode____sl__.exit

if.entry.i33:                                     ; preds = %Parser_advance.exit
  %38 = shl i64 %37, 1
  store i64 %38, ptr %memberidx1.i19, align 4
  %39 = load ptr, ptr %memberidx2.i20, align 8
  %40 = shl i64 %37, 4
  %41 = call ptr @realloc(ptr %39, i64 %40)
  store ptr %41, ptr %memberidx2.i20, align 8
  %.pre = load i64, ptr %memberidx.i18, align 4
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge, %if.entry.i33
  %42 = phi ptr [ %.pre44, %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %41, %if.entry.i33 ]
  %43 = phi i64 [ %36, %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %.pre, %if.entry.i33 ]
  %44 = add i64 %43, 1
  store i64 %44, ptr %memberidx.i18, align 4
  %ptridx.i34 = getelementptr inbounds ptr, ptr %42, i64 %43
  store ptr %35, ptr %ptridx.i34, align 8
  %45 = add nuw nsw i64 %i.043, 1
  %46 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Array_Array_Token__, ptr %46, i64 0, i32 2
  %47 = load i64, ptr %memberidx4, align 4
  %48 = icmp slt i64 %45, %47
  %49 = load ptr, ptr %memberidx.i, align 8
  %50 = load i64, ptr %49, align 4
  %51 = icmp ne i64 %50, 44
  %52 = load ptr, ptr %memberidx, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx3.i, align 4
  %54 = icmp eq i64 %53, 0
  %55 = and i1 %51, %54
  %56 = and i1 %48, %55
  br i1 %56, label %for.body, label %for.end

for.end:                                          ; preds = %Array_ExpressionNode____sl__.exit, %Parser_eat.exit
  %57 = tail call ptr @malloc(i32 40)
  %memberidx.i35 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %58 = load ptr, ptr %memberidx.i35, align 8
  store ptr %58, ptr %57, align 8
  %memberidx.i.i.i36 = getelementptr inbounds %StatementNode, ptr %57, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i36, align 4
  %memberidx.i.i37 = getelementptr inbounds %ExpressionNode, ptr %57, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i37, align 4
  %memberidx1.i38 = getelementptr inbounds %StringExpressionNode, ptr %57, i64 0, i32 3
  store ptr %common.ret.op.i, ptr %memberidx1.i38, align 8
  %memberidx2.i39 = getelementptr inbounds %StringExpressionNode, ptr %57, i64 0, i32 4
  store ptr %15, ptr %memberidx2.i39, align 8
  ret ptr %57
}

define internal fastcc noalias ptr @Parser_parse_variable_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 1, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 3
  %memberidx1.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 4
  %memberidx.i63 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx.i, i8 0, i64 16, i1 false)
  %5 = load i64, ptr %memberidx.i63, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i64 = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i64, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i63, align 4
  %memberidx.i.i66 = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i66, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %10, i64 %9
  %11 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 2
  %12 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 51)
  store ptr %12, ptr %memberidx2, align 8
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %16 = load i64, ptr %memberidx.i63, align 4
  %17 = load ptr, ptr %0, align 8
  %memberidx2.i68 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx2.i68, align 4
  %19 = icmp slt i64 %16, %18
  br i1 %19, label %if.entry.i72, label %Parser_advance.exit73

if.entry.i72:                                     ; preds = %if.entry
  %20 = add nsw i64 %16, 1
  store i64 %20, ptr %memberidx.i63, align 4
  %memberidx.i.i70 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i.i70, align 8
  %ptridx.i.i71 = getelementptr inbounds ptr, ptr %21, i64 %20
  %22 = load ptr, ptr %ptridx.i.i71, align 8
  store ptr %22, ptr %memberidx, align 8
  br label %Parser_advance.exit73

Parser_advance.exit73:                            ; preds = %if.entry, %if.entry.i72
  %23 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %23, ptr %memberidx.i, align 8
  %.pre = load ptr, ptr %memberidx, align 8
  %.pre104 = load i64, ptr %.pre, align 4
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit73
  %24 = phi ptr [ null, %Parser_advance.exit ], [ %23, %Parser_advance.exit73 ]
  %25 = phi i64 [ %14, %Parser_advance.exit ], [ %.pre104, %Parser_advance.exit73 ]
  %26 = phi ptr [ %13, %Parser_advance.exit ], [ %.pre, %Parser_advance.exit73 ]
  %memberidx7 = getelementptr inbounds %Token, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx7, align 8
  %28 = icmp eq i64 %25, 36
  br i1 %28, label %if.entry10, label %else11

if.entry10:                                       ; preds = %ifend
  %29 = load i64, ptr %memberidx.i63, align 4
  %30 = load ptr, ptr %0, align 8
  %memberidx2.i75 = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 2
  %31 = load i64, ptr %memberidx2.i75, align 4
  %32 = icmp slt i64 %29, %31
  br i1 %32, label %if.entry.i79, label %Parser_advance.exit80

if.entry.i79:                                     ; preds = %if.entry10
  %33 = add nsw i64 %29, 1
  store i64 %33, ptr %memberidx.i63, align 4
  %memberidx.i.i77 = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i.i77, align 8
  %ptridx.i.i78 = getelementptr inbounds ptr, ptr %34, i64 %33
  %35 = load ptr, ptr %ptridx.i.i78, align 8
  store ptr %35, ptr %memberidx, align 8
  br label %Parser_advance.exit80

Parser_advance.exit80:                            ; preds = %if.entry10, %if.entry.i79
  %36 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %36, ptr %memberidx1.i, align 8
  %37 = load ptr, ptr %36, align 8
  br label %ifend12

else11:                                           ; preds = %ifend
  %38 = icmp ne ptr %24, null
  %39 = icmp eq i64 %25, 23
  %40 = and i1 %39, %38
  br i1 %40, label %if.entry19, label %ifend12

ifend12:                                          ; preds = %ifend30, %else11, %Parser_advance.exit80
  %41 = phi ptr [ %27, %ifend30 ], [ %27, %else11 ], [ %37, %Parser_advance.exit80 ]
  %42 = tail call ptr @malloc(i32 32)
  %43 = load i64, ptr %4, align 4
  %memberidx1.i94 = getelementptr inbounds %FloRange, ptr %41, i64 0, i32 1
  %44 = load i64, ptr %memberidx1.i94, align 4
  %memberidx2.i95 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %45 = load i64, ptr %memberidx2.i95, align 4
  %memberidx3.i96 = getelementptr inbounds %FloRange, ptr %41, i64 0, i32 3
  %46 = load i64, ptr %memberidx3.i96, align 4
  store i64 %43, ptr %42, align 4
  %memberidx1.i.i97 = getelementptr inbounds %FloRange, ptr %42, i64 0, i32 1
  store i64 %44, ptr %memberidx1.i.i97, align 4
  %memberidx2.i.i98 = getelementptr inbounds %FloRange, ptr %42, i64 0, i32 2
  store i64 %45, ptr %memberidx2.i.i98, align 4
  %memberidx3.i.i99 = getelementptr inbounds %FloRange, ptr %42, i64 0, i32 3
  store i64 %46, ptr %memberidx3.i.i99, align 4
  store ptr %42, ptr %2, align 8
  ret ptr %2

if.entry19:                                       ; preds = %else11
  %47 = tail call ptr @malloc(i32 41)
  %48 = load ptr, ptr %24, align 8
  %memberidx.i88 = getelementptr inbounds %NewExpressionNode, ptr %47, i64 0, i32 3
  store ptr %24, ptr %memberidx.i88, align 8
  %memberidx1.i89 = getelementptr inbounds %NewExpressionNode, ptr %47, i64 0, i32 4
  store i1 true, ptr %memberidx1.i89, align 1
  store ptr %48, ptr %47, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %47, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i90 = getelementptr inbounds %ExpressionNode, ptr %47, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i90, align 4
  %memberidx2.i91 = getelementptr inbounds %NewExpressionNode, ptr %47, i64 0, i32 5
  %49 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %49, align 8
  %memberidx.i7.i = getelementptr inbounds %Array_ExpressionNode_, ptr %49, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i.i92 = getelementptr inbounds %Array_ExpressionNode_, ptr %49, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i92, align 4
  %memberidx2.i.i93 = getelementptr inbounds %Array_ExpressionNode_, ptr %49, i64 0, i32 1
  %50 = tail call ptr @malloc(i32 64)
  store ptr %50, ptr %memberidx2.i.i93, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %49, ptr %memberidx2.i91, align 8
  store i1 false, ptr %memberidx1.i89, align 1
  %51 = load i64, ptr %memberidx.i63, align 4
  %52 = load ptr, ptr %0, align 8
  %memberidx2.i82 = getelementptr inbounds %Array_Token_, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx2.i82, align 4
  %54 = icmp slt i64 %51, %53
  br i1 %54, label %if.entry.i86, label %if.entry19.Parser_advance.exit87_crit_edge

if.entry19.Parser_advance.exit87_crit_edge:       ; preds = %if.entry19
  %.pre105 = load ptr, ptr %memberidx, align 8
  br label %Parser_advance.exit87

if.entry.i86:                                     ; preds = %if.entry19
  %55 = add nsw i64 %51, 1
  store i64 %55, ptr %memberidx.i63, align 4
  %memberidx.i.i84 = getelementptr inbounds %Array_Token_, ptr %52, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i.i84, align 8
  %ptridx.i.i85 = getelementptr inbounds ptr, ptr %56, i64 %55
  %57 = load ptr, ptr %ptridx.i.i85, align 8
  store ptr %57, ptr %memberidx, align 8
  br label %Parser_advance.exit87

Parser_advance.exit87:                            ; preds = %if.entry19.Parser_advance.exit87_crit_edge, %if.entry.i86
  %58 = phi ptr [ %.pre105, %if.entry19.Parser_advance.exit87_crit_edge ], [ %57, %if.entry.i86 ]
  %59 = load i64, ptr %58, align 4
  %.not = icmp eq i64 %59, 24
  br i1 %.not, label %ifend30, label %if.entry28

if.entry28:                                       ; preds = %Parser_advance.exit87
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %49)
  br label %ifend30

ifend30:                                          ; preds = %Parser_advance.exit87, %if.entry28
  %60 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 24)
  %memberidx34 = getelementptr inbounds %Token, ptr %60, i64 0, i32 1
  %61 = load ptr, ptr %memberidx34, align 8
  %62 = tail call ptr @malloc(i32 32)
  %63 = load i64, ptr %48, align 4
  %memberidx1.i62 = getelementptr inbounds %FloRange, ptr %61, i64 0, i32 1
  %64 = load i64, ptr %memberidx1.i62, align 4
  %memberidx2.i = getelementptr inbounds %FloRange, ptr %48, i64 0, i32 2
  %65 = load i64, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %61, i64 0, i32 3
  %66 = load i64, ptr %memberidx3.i, align 4
  store i64 %63, ptr %62, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %62, i64 0, i32 1
  store i64 %64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %62, i64 0, i32 2
  store i64 %65, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %62, i64 0, i32 3
  store i64 %66, ptr %memberidx3.i.i, align 4
  store ptr %62, ptr %47, align 8
  store ptr %47, ptr %memberidx1.i, align 8
  br label %ifend12
}

define internal fastcc ptr @Parser_parse_statement(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %ifend38 [
    i64 57, label %if.entry
    i64 73, label %if.entry6
    i64 72, label %if.entry11
    i64 77, label %if.entry16
    i64 56, label %if.entry21
    i64 55, label %if.entry26
    i64 76, label %if.entry31
    i64 75, label %if.entry36
  ]

common.ret:                                       ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %Parser_advance.exit.i, %if.entry.i, %if.entry28.i, %ifend.i, %Parser_advance.exit38.i, %Parser_new_lines.exit.i, %Parser_advance.exit67, %Parser_advance.exit, %if.entry26, %if.entry21, %Parser_parse_while_statement.exit, %ifend38
  %common.ret.op = phi ptr [ %191, %ifend38 ], [ %58, %Parser_parse_while_statement.exit ], [ %173, %if.entry21 ], [ %174, %if.entry26 ], [ %182, %Parser_advance.exit ], [ %190, %Parser_advance.exit67 ], [ %5, %Parser_new_lines.exit.i ], [ %5, %Parser_advance.exit38.i ], [ %76, %ifend.i ], [ %76, %if.entry28.i ], [ %151, %switch.early.test ], [ %151, %if.entry.i ], [ %151, %Parser_advance.exit.i ], [ %151, %switch.early.test ], [ %151, %switch.early.test ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %5 = tail call ptr @malloc(i32 40)
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1.i98 = getelementptr inbounds %Token, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1.i98, align 8
  store ptr %7, ptr %5, align 8
  %memberidx.i.i.i99 = getelementptr inbounds %StatementNode, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i99, align 4
  %memberidx.i.i100 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 4
  store ptr null, ptr %memberidx.i.i100, align 8
  %memberidx.i24.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %8 = load i64, ptr %memberidx.i24.i, align 4
  %9 = load ptr, ptr %0, align 8
  %memberidx2.i.i101 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 2
  %10 = load i64, ptr %memberidx2.i.i101, align 4
  %11 = icmp slt i64 %8, %10
  br i1 %11, label %if.entry.i.i104, label %Parser_advance.exit.i111

if.entry.i.i104:                                  ; preds = %if.entry
  %12 = add nsw i64 %8, 1
  store i64 %12, ptr %memberidx.i24.i, align 4
  %memberidx.i.i25.i = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i.i25.i, align 8
  %ptridx.i.i.i103 = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i.i.i103, align 8
  store ptr %14, ptr %memberidx, align 8
  br label %Parser_advance.exit.i111

Parser_advance.exit.i111:                         ; preds = %if.entry.i.i104, %if.entry
  %memberidx2.i105 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 2
  %15 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %15, ptr %memberidx2.i105, align 8
  %16 = load ptr, ptr %15, align 8
  %17 = tail call ptr @malloc(i32 32)
  %18 = load i64, ptr %7, align 4
  %memberidx1.i.i106 = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 1
  %19 = load i64, ptr %memberidx1.i.i106, align 4
  %memberidx2.i26.i = getelementptr inbounds %FloRange, ptr %7, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i26.i, align 4
  %memberidx3.i27.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 3
  %21 = load i64, ptr %memberidx3.i27.i, align 4
  store i64 %18, ptr %17, align 4
  %memberidx1.i.i.i107 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i.i.i107, align 4
  %memberidx2.i.i.i108 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i.i.i108, align 4
  %memberidx3.i.i.i109 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 3
  store i64 %21, ptr %memberidx3.i.i.i109, align 4
  store ptr %17, ptr %5, align 8
  %memberidx7.i110 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 3
  %22 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %22, ptr %memberidx7.i110, align 8
  %23 = load ptr, ptr %memberidx, align 8
  %24 = load i64, ptr %23, align 4
  %25 = icmp eq i64 %24, 31
  %memberidx2.i.i30.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %26 = load ptr, ptr %memberidx2.i.i30.i, align 8
  %memberidx3.i.i31.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx3.i.i31.i, align 4
  %28 = icmp eq i64 %27, 0
  %29 = and i1 %25, %28
  br i1 %29, label %while.entry.i.i.preheader, label %Parser_new_lines.exit.i

while.entry.i.i.preheader:                        ; preds = %Parser_advance.exit.i111
  %30 = load ptr, ptr %0, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 2
  %memberidx.i.i.i.i112 = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i24.i, align 4
  %32 = load i64, ptr %memberidx2.i12.i.i, align 4
  %33 = icmp slt i64 %31, %32
  br i1 %33, label %while.entry.i.i, label %while.entry.i.i.us

while.entry.i.i.us:                               ; preds = %while.entry.i.i.preheader, %while.entry.i.i.us
  br label %while.entry.i.i.us

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i.i115
  %34 = phi i64 [ %41, %Parser_advance.exit.i.i115 ], [ 31, %while.entry.i.i.preheader ]
  %35 = phi i64 [ %44, %Parser_advance.exit.i.i115 ], [ %31, %while.entry.i.i.preheader ]
  %36 = load i64, ptr %memberidx2.i12.i.i, align 4
  %37 = icmp slt i64 %35, %36
  br i1 %37, label %if.entry.i.i.i114, label %Parser_advance.exit.i.i115

if.entry.i.i.i114:                                ; preds = %while.entry.i.i
  %38 = add nsw i64 %35, 1
  store i64 %38, ptr %memberidx.i24.i, align 4
  %39 = load ptr, ptr %memberidx.i.i.i.i112, align 8
  %ptridx.i.i.i.i113 = getelementptr inbounds ptr, ptr %39, i64 %38
  %40 = load ptr, ptr %ptridx.i.i.i.i113, align 8
  store ptr %40, ptr %memberidx, align 8
  %.pre139 = load i64, ptr %40, align 4
  %.pre140 = load i64, ptr %memberidx3.i.i31.i, align 4
  br label %Parser_advance.exit.i.i115

Parser_advance.exit.i.i115:                       ; preds = %if.entry.i.i.i114, %while.entry.i.i
  %41 = phi i64 [ %.pre139, %if.entry.i.i.i114 ], [ %34, %while.entry.i.i ]
  %42 = phi i64 [ %.pre140, %if.entry.i.i.i114 ], [ 0, %while.entry.i.i ]
  %43 = phi i64 [ %.pre139, %if.entry.i.i.i114 ], [ 31, %while.entry.i.i ]
  %44 = phi i64 [ %38, %if.entry.i.i.i114 ], [ %35, %while.entry.i.i ]
  %45 = icmp eq i64 %43, 31
  %46 = icmp eq i64 %42, 0
  %47 = and i1 %45, %46
  br i1 %47, label %while.entry.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i115, %Parser_advance.exit.i111
  %48 = phi i64 [ %24, %Parser_advance.exit.i111 ], [ %41, %Parser_advance.exit.i.i115 ]
  %49 = icmp eq i64 %48, 58
  br i1 %49, label %if.entry.i116, label %common.ret

if.entry.i116:                                    ; preds = %Parser_new_lines.exit.i
  %50 = load i64, ptr %memberidx.i24.i, align 4
  %51 = load ptr, ptr %0, align 8
  %memberidx2.i33.i = getelementptr inbounds %Array_Token_, ptr %51, i64 0, i32 2
  %52 = load i64, ptr %memberidx2.i33.i, align 4
  %53 = icmp slt i64 %50, %52
  br i1 %53, label %if.entry.i37.i, label %Parser_advance.exit38.i

if.entry.i37.i:                                   ; preds = %if.entry.i116
  %54 = add nsw i64 %50, 1
  store i64 %54, ptr %memberidx.i24.i, align 4
  %memberidx.i.i35.i = getelementptr inbounds %Array_Token_, ptr %51, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i.i35.i, align 8
  %ptridx.i.i36.i = getelementptr inbounds ptr, ptr %55, i64 %54
  %56 = load ptr, ptr %ptridx.i.i36.i, align 8
  store ptr %56, ptr %memberidx, align 8
  br label %Parser_advance.exit38.i

Parser_advance.exit38.i:                          ; preds = %if.entry.i37.i, %if.entry.i116
  %57 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %57, ptr %memberidx.i.i100, align 8
  br label %common.ret

if.entry6:                                        ; preds = %1
  %58 = tail call ptr @malloc(i32 32)
  %59 = load ptr, ptr %memberidx, align 8
  %memberidx1.i84 = getelementptr inbounds %Token, ptr %59, i64 0, i32 1
  %60 = load ptr, ptr %memberidx1.i84, align 8
  store ptr %60, ptr %58, align 8
  %memberidx.i.i.i85 = getelementptr inbounds %StatementNode, ptr %58, i64 0, i32 1
  store i64 4, ptr %memberidx.i.i.i85, align 4
  %memberidx.i.i86 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %61 = load i64, ptr %memberidx.i.i86, align 4
  %62 = load ptr, ptr %0, align 8
  %memberidx2.i.i87 = getelementptr inbounds %Array_Token_, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx2.i.i87, align 4
  %64 = icmp slt i64 %61, %63
  br i1 %64, label %if.entry.i.i90, label %Parser_parse_while_statement.exit

if.entry.i.i90:                                   ; preds = %if.entry6
  %65 = add nsw i64 %61, 1
  store i64 %65, ptr %memberidx.i.i86, align 4
  %memberidx.i.i16.i = getelementptr inbounds %Array_Token_, ptr %62, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i16.i, align 8
  %ptridx.i.i.i89 = getelementptr inbounds ptr, ptr %66, i64 %65
  %67 = load ptr, ptr %ptridx.i.i.i89, align 8
  store ptr %67, ptr %memberidx, align 8
  br label %Parser_parse_while_statement.exit

Parser_parse_while_statement.exit:                ; preds = %if.entry6, %if.entry.i.i90
  %memberidx2.i91 = getelementptr inbounds %WhileStatementNode, ptr %58, i64 0, i32 2
  %68 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %68, ptr %memberidx2.i91, align 8
  %69 = load ptr, ptr %68, align 8
  %70 = tail call ptr @malloc(i32 32)
  %71 = load i64, ptr %60, align 4
  %memberidx1.i.i92 = getelementptr inbounds %FloRange, ptr %69, i64 0, i32 1
  %72 = load i64, ptr %memberidx1.i.i92, align 4
  %memberidx2.i17.i = getelementptr inbounds %FloRange, ptr %60, i64 0, i32 2
  %73 = load i64, ptr %memberidx2.i17.i, align 4
  %memberidx3.i18.i = getelementptr inbounds %FloRange, ptr %69, i64 0, i32 3
  %74 = load i64, ptr %memberidx3.i18.i, align 4
  store i64 %71, ptr %70, align 4
  %memberidx1.i.i.i93 = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 1
  store i64 %72, ptr %memberidx1.i.i.i93, align 4
  %memberidx2.i.i.i94 = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 2
  store i64 %73, ptr %memberidx2.i.i.i94, align 4
  %memberidx3.i.i.i95 = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 3
  store i64 %74, ptr %memberidx3.i.i.i95, align 4
  store ptr %70, ptr %58, align 8
  %memberidx7.i = getelementptr inbounds %WhileStatementNode, ptr %58, i64 0, i32 3
  %75 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %75, ptr %memberidx7.i, align 8
  br label %common.ret

if.entry11:                                       ; preds = %1
  %76 = tail call ptr @malloc(i32 72)
  %77 = load ptr, ptr %memberidx, align 8
  %memberidx1.i70 = getelementptr inbounds %Token, ptr %77, i64 0, i32 1
  %78 = load ptr, ptr %memberidx1.i70, align 8
  %memberidx.i.i71 = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 2
  %memberidx1.i.i72 = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 3
  %memberidx2.i.i73 = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 4
  %memberidx3.i.i74 = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 6
  store i64 0, ptr %memberidx3.i.i74, align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %memberidx.i.i71, i8 0, i64 24, i1 false)
  store ptr %78, ptr %76, align 8
  %memberidx.i.i.i75 = getelementptr inbounds %StatementNode, ptr %76, i64 0, i32 1
  store i64 3, ptr %memberidx.i.i.i75, align 4
  %memberidx.i60.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %79 = load i64, ptr %memberidx.i60.i, align 4
  %80 = load ptr, ptr %0, align 8
  %memberidx2.i61.i = getelementptr inbounds %Array_Token_, ptr %80, i64 0, i32 2
  %81 = load i64, ptr %memberidx2.i61.i, align 4
  %82 = icmp slt i64 %79, %81
  br i1 %82, label %if.entry.i.i77, label %Parser_advance.exit.i78

if.entry.i.i77:                                   ; preds = %if.entry11
  %83 = add nsw i64 %79, 1
  store i64 %83, ptr %memberidx.i60.i, align 4
  %memberidx.i.i63.i = getelementptr inbounds %Array_Token_, ptr %80, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i.i63.i, align 8
  %ptridx.i.i.i76 = getelementptr inbounds ptr, ptr %84, i64 %83
  %85 = load ptr, ptr %ptridx.i.i.i76, align 8
  store ptr %85, ptr %memberidx, align 8
  %.pre = load i64, ptr %memberidx2.i61.i, align 4
  br label %Parser_advance.exit.i78

Parser_advance.exit.i78:                          ; preds = %if.entry.i.i77, %if.entry11
  %86 = phi ptr [ %85, %if.entry.i.i77 ], [ %77, %if.entry11 ]
  %87 = phi i64 [ %.pre, %if.entry.i.i77 ], [ %81, %if.entry11 ]
  %88 = phi i64 [ %83, %if.entry.i.i77 ], [ %79, %if.entry11 ]
  %89 = add i64 %88, 1
  %90 = icmp slt i64 %89, %87
  %91 = add i64 %87, -1
  %.sink142 = select i1 %90, i64 %89, i64 %91
  %memberidx.i12.i.i = getelementptr inbounds %Array_Token_, ptr %80, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i12.i.i, align 8
  %ptridx.i13.i.i = getelementptr inbounds ptr, ptr %92, i64 %.sink142
  %common.ret.op.i.i = load ptr, ptr %ptridx.i13.i.i, align 8
  %93 = load i64, ptr %common.ret.op.i.i, align 4
  %.not.i = icmp eq i64 %93, 82
  br i1 %.not.i, label %else.i, label %if.entry.i79

if.entry.i79:                                     ; preds = %Parser_advance.exit.i78
  %94 = load i64, ptr %86, align 4
  %.not57.i = icmp eq i64 %94, 2
  br i1 %.not57.i, label %if.entry.i85.i, label %ifend7.i

else.i:                                           ; preds = %Parser_advance.exit.i78
  store i64 1, ptr %memberidx3.i.i74, align 4
  %memberidx22.i = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 7
  %95 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 51)
  store ptr %95, ptr %memberidx22.i, align 8
  %96 = load ptr, ptr %memberidx, align 8
  %97 = load i64, ptr %96, align 4
  %98 = icmp eq i64 %97, 82
  br i1 %98, label %if.entry.i72.i, label %else.i.i

if.entry.i72.i:                                   ; preds = %else.i
  %99 = load i64, ptr %memberidx.i60.i, align 4
  %100 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i80 = getelementptr inbounds %Array_Token_, ptr %100, i64 0, i32 2
  %101 = load i64, ptr %memberidx2.i.i.i80, align 4
  %102 = icmp slt i64 %99, %101
  br i1 %102, label %if.entry.i.i.i, label %Parser_eat.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry.i72.i
  %103 = add nsw i64 %99, 1
  store i64 %103, ptr %memberidx.i60.i, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %100, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %104, i64 %103
  %105 = load ptr, ptr %ptridx.i.i.i.i, align 8
  store ptr %105, ptr %memberidx, align 8
  br label %Parser_eat.exit.i

else.i.i:                                         ; preds = %else.i
  %106 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %96, i64 0, i32 1
  %107 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 44, ptr %106, align 4
  %memberidx1.i82.i.i = getelementptr inbounds %Token, ptr %106, i64 0, i32 1
  store ptr %107, ptr %memberidx1.i82.i.i, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i72.i, %if.entry.i.i.i, %else.i.i
  %memberidx23.i = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 5
  %108 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %108, ptr %memberidx23.i, align 8
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry17.i, %Parser_eat.exit108.i, %Parser_eat.exit.i
  %109 = load ptr, ptr %memberidx, align 8
  %memberidx27.i = getelementptr inbounds %Token, ptr %109, i64 0, i32 1
  %110 = load ptr, ptr %memberidx27.i, align 8
  %111 = tail call ptr @malloc(i32 32)
  %112 = load i64, ptr %78, align 4
  %memberidx1.i73.i = getelementptr inbounds %FloRange, ptr %110, i64 0, i32 1
  %113 = load i64, ptr %memberidx1.i73.i, align 4
  %memberidx2.i74.i = getelementptr inbounds %FloRange, ptr %78, i64 0, i32 2
  %114 = load i64, ptr %memberidx2.i74.i, align 4
  %memberidx3.i75.i = getelementptr inbounds %FloRange, ptr %110, i64 0, i32 3
  %115 = load i64, ptr %memberidx3.i75.i, align 4
  store i64 %112, ptr %111, align 4
  %memberidx1.i.i.i82 = getelementptr inbounds %FloRange, ptr %111, i64 0, i32 1
  store i64 %113, ptr %memberidx1.i.i.i82, align 4
  %memberidx2.i.i76.i = getelementptr inbounds %FloRange, ptr %111, i64 0, i32 2
  store i64 %114, ptr %memberidx2.i.i76.i, align 4
  %memberidx3.i.i77.i = getelementptr inbounds %FloRange, ptr %111, i64 0, i32 3
  store i64 %115, ptr %memberidx3.i.i77.i, align 4
  store ptr %111, ptr %76, align 8
  %116 = load ptr, ptr %memberidx, align 8
  %117 = load i64, ptr %116, align 4
  %118 = icmp ne i64 %117, 44
  %memberidx2.i79.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %119 = load ptr, ptr %memberidx2.i79.i, align 8
  %memberidx3.i80.i = getelementptr inbounds %Array_FloError_, ptr %119, i64 0, i32 2
  %120 = load i64, ptr %memberidx3.i80.i, align 4
  %121 = icmp eq i64 %120, 0
  %122 = and i1 %118, %121
  br i1 %122, label %if.entry28.i, label %common.ret

ifend7.i:                                         ; preds = %if.entry.i79
  %123 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  store ptr %123, ptr %memberidx.i.i71, align 8
  %.pre133 = load ptr, ptr %memberidx, align 8
  %.pre134 = load i64, ptr %.pre133, align 4
  %phi.cmp = icmp eq i64 %.pre134, 2
  br i1 %phi.cmp, label %if.entry.i85.i, label %else.i91.i

if.entry.i85.i:                                   ; preds = %if.entry.i79, %ifend7.i
  %124 = phi ptr [ %.pre133, %ifend7.i ], [ %86, %if.entry.i79 ]
  %125 = load i64, ptr %memberidx.i60.i, align 4
  %126 = load ptr, ptr %0, align 8
  %memberidx2.i.i84.i = getelementptr inbounds %Array_Token_, ptr %126, i64 0, i32 2
  %127 = load i64, ptr %memberidx2.i.i84.i, align 4
  %128 = icmp slt i64 %125, %127
  br i1 %128, label %if.entry.i.i89.i, label %Parser_eat.exit94.i

if.entry.i.i89.i:                                 ; preds = %if.entry.i85.i
  %129 = add nsw i64 %125, 1
  store i64 %129, ptr %memberidx.i60.i, align 4
  %memberidx.i.i.i87.i = getelementptr inbounds %Array_Token_, ptr %126, i64 0, i32 1
  %130 = load ptr, ptr %memberidx.i.i.i87.i, align 8
  %ptridx.i.i.i88.i = getelementptr inbounds ptr, ptr %130, i64 %129
  %131 = load ptr, ptr %ptridx.i.i.i88.i, align 8
  store ptr %131, ptr %memberidx, align 8
  br label %Parser_eat.exit94.i

else.i91.i:                                       ; preds = %ifend7.i
  %132 = tail call ptr @malloc(i32 16)
  %memberidx35.i92.i = getelementptr inbounds %Token, ptr %.pre133, i64 0, i32 1
  %133 = load ptr, ptr %memberidx35.i92.i, align 8
  store i64 44, ptr %132, align 4
  %memberidx1.i82.i93.i = getelementptr inbounds %Token, ptr %132, i64 0, i32 1
  store ptr %133, ptr %memberidx1.i82.i93.i, align 8
  %.pre135 = load ptr, ptr %memberidx, align 8
  br label %Parser_eat.exit94.i

Parser_eat.exit94.i:                              ; preds = %if.entry.i85.i, %if.entry.i.i89.i, %else.i91.i
  %134 = phi ptr [ %124, %if.entry.i85.i ], [ %131, %if.entry.i.i89.i ], [ %.pre135, %else.i91.i ]
  %135 = load i64, ptr %134, align 4
  %.not58.i = icmp eq i64 %135, 2
  br i1 %.not58.i, label %if.entry.i99.i, label %ifend13.i

ifend13.i:                                        ; preds = %Parser_eat.exit94.i
  %136 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %136, ptr %memberidx1.i.i72, align 8
  %.pre136 = load ptr, ptr %memberidx, align 8
  %.pre137 = load i64, ptr %.pre136, align 4
  %phi.cmp141 = icmp eq i64 %.pre137, 2
  br i1 %phi.cmp141, label %if.entry.i99.i, label %else.i105.i

if.entry.i99.i:                                   ; preds = %Parser_eat.exit94.i, %ifend13.i
  %137 = phi ptr [ %.pre136, %ifend13.i ], [ %134, %Parser_eat.exit94.i ]
  %138 = load i64, ptr %memberidx.i60.i, align 4
  %139 = load ptr, ptr %0, align 8
  %memberidx2.i.i98.i = getelementptr inbounds %Array_Token_, ptr %139, i64 0, i32 2
  %140 = load i64, ptr %memberidx2.i.i98.i, align 4
  %141 = icmp slt i64 %138, %140
  br i1 %141, label %if.entry.i.i103.i, label %Parser_eat.exit108.i

if.entry.i.i103.i:                                ; preds = %if.entry.i99.i
  %142 = add nsw i64 %138, 1
  store i64 %142, ptr %memberidx.i60.i, align 4
  %memberidx.i.i.i101.i = getelementptr inbounds %Array_Token_, ptr %139, i64 0, i32 1
  %143 = load ptr, ptr %memberidx.i.i.i101.i, align 8
  %ptridx.i.i.i102.i = getelementptr inbounds ptr, ptr %143, i64 %142
  %144 = load ptr, ptr %ptridx.i.i.i102.i, align 8
  store ptr %144, ptr %memberidx, align 8
  br label %Parser_eat.exit108.i

else.i105.i:                                      ; preds = %ifend13.i
  %145 = tail call ptr @malloc(i32 16)
  %memberidx35.i106.i = getelementptr inbounds %Token, ptr %.pre136, i64 0, i32 1
  %146 = load ptr, ptr %memberidx35.i106.i, align 8
  store i64 44, ptr %145, align 4
  %memberidx1.i82.i107.i = getelementptr inbounds %Token, ptr %145, i64 0, i32 1
  store ptr %146, ptr %memberidx1.i82.i107.i, align 8
  %.pre138 = load ptr, ptr %memberidx, align 8
  br label %Parser_eat.exit108.i

Parser_eat.exit108.i:                             ; preds = %if.entry.i99.i, %if.entry.i.i103.i, %else.i105.i
  %147 = phi ptr [ %137, %if.entry.i99.i ], [ %144, %if.entry.i.i103.i ], [ %.pre138, %else.i105.i ]
  %148 = load i64, ptr %147, align 4
  %.not59.i = icmp eq i64 %148, 25
  br i1 %.not59.i, label %ifend.i, label %if.entry17.i

if.entry17.i:                                     ; preds = %Parser_eat.exit108.i
  %149 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  store ptr %149, ptr %memberidx2.i.i73, align 8
  br label %ifend.i

if.entry28.i:                                     ; preds = %ifend.i
  %memberidx31.i = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 8
  %150 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %150, ptr %memberidx31.i, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %151 = tail call ptr @malloc(i32 24)
  %152 = load ptr, ptr %memberidx, align 8
  %memberidx1.i = getelementptr inbounds %Token, ptr %152, i64 0, i32 1
  %153 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %ReturnStatementNode, ptr %151, i64 0, i32 2
  store ptr null, ptr %memberidx.i.i, align 8
  store ptr %153, ptr %151, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %151, i64 0, i32 1
  store i64 7, ptr %memberidx.i.i.i, align 4
  %memberidx.i18.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %154 = load i64, ptr %memberidx.i18.i, align 4
  %155 = load ptr, ptr %0, align 8
  %memberidx2.i19.i = getelementptr inbounds %Array_Token_, ptr %155, i64 0, i32 2
  %156 = load i64, ptr %memberidx2.i19.i, align 4
  %157 = icmp slt i64 %154, %156
  br i1 %157, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %if.entry16
  %158 = add nsw i64 %154, 1
  store i64 %158, ptr %memberidx.i18.i, align 4
  %memberidx.i.i21.i = getelementptr inbounds %Array_Token_, ptr %155, i64 0, i32 1
  %159 = load ptr, ptr %memberidx.i.i21.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %159, i64 %158
  %160 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %160, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %if.entry16
  %161 = phi ptr [ %160, %if.entry.i.i ], [ %152, %if.entry16 ]
  %memberidx2.i23.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %162 = load ptr, ptr %memberidx2.i23.i, align 8
  %memberidx3.i24.i = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 2
  %163 = load i64, ptr %memberidx3.i24.i, align 4
  %.fr = freeze i64 %163
  %164 = icmp eq i64 %.fr, 0
  br i1 %164, label %switch.early.test, label %common.ret

switch.early.test:                                ; preds = %Parser_advance.exit.i
  %165 = load i64, ptr %161, align 4
  switch i64 %165, label %if.entry.i [
    i64 44, label %common.ret
    i64 31, label %common.ret
    i64 26, label %common.ret
  ]

if.entry.i:                                       ; preds = %switch.early.test
  %166 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %167 = load ptr, ptr %166, align 8
  %168 = tail call ptr @malloc(i32 32)
  %169 = load i64, ptr %153, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 1
  %170 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %153, i64 0, i32 2
  %171 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 3
  %172 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %169, ptr %168, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %168, i64 0, i32 1
  store i64 %170, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %168, i64 0, i32 2
  store i64 %171, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %168, i64 0, i32 3
  store i64 %172, ptr %memberidx3.i.i.i, align 4
  store ptr %168, ptr %151, align 8
  store ptr %166, ptr %memberidx.i.i, align 8
  br label %common.ret

if.entry21:                                       ; preds = %1
  %173 = tail call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry26:                                       ; preds = %1
  %174 = tail call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry31:                                       ; preds = %1
  %memberidx.i57 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %175 = load i64, ptr %memberidx.i57, align 4
  %176 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %176, i64 0, i32 2
  %177 = load i64, ptr %memberidx2.i, align 4
  %178 = icmp slt i64 %175, %177
  br i1 %178, label %if.entry.i59, label %Parser_advance.exit

if.entry.i59:                                     ; preds = %if.entry31
  %179 = add nsw i64 %175, 1
  store i64 %179, ptr %memberidx.i57, align 4
  %memberidx.i.i58 = getelementptr inbounds %Array_Token_, ptr %176, i64 0, i32 1
  %180 = load ptr, ptr %memberidx.i.i58, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %180, i64 %179
  %181 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %181, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry31, %if.entry.i59
  %182 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %182, align 8
  %memberidx.i60 = getelementptr inbounds %StatementNode, ptr %182, i64 0, i32 1
  store i64 5, ptr %memberidx.i60, align 4
  br label %common.ret

if.entry36:                                       ; preds = %1
  %memberidx.i61 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %183 = load i64, ptr %memberidx.i61, align 4
  %184 = load ptr, ptr %0, align 8
  %memberidx2.i62 = getelementptr inbounds %Array_Token_, ptr %184, i64 0, i32 2
  %185 = load i64, ptr %memberidx2.i62, align 4
  %186 = icmp slt i64 %183, %185
  br i1 %186, label %if.entry.i66, label %Parser_advance.exit67

if.entry.i66:                                     ; preds = %if.entry36
  %187 = add nsw i64 %183, 1
  store i64 %187, ptr %memberidx.i61, align 4
  %memberidx.i.i64 = getelementptr inbounds %Array_Token_, ptr %184, i64 0, i32 1
  %188 = load ptr, ptr %memberidx.i.i64, align 8
  %ptridx.i.i65 = getelementptr inbounds ptr, ptr %188, i64 %187
  %189 = load ptr, ptr %ptridx.i.i65, align 8
  store ptr %189, ptr %memberidx, align 8
  br label %Parser_advance.exit67

Parser_advance.exit67:                            ; preds = %if.entry36, %if.entry.i66
  %190 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %190, align 8
  %memberidx.i68 = getelementptr inbounds %StatementNode, ptr %190, i64 0, i32 1
  store i64 6, ptr %memberidx.i68, align 4
  br label %common.ret

ifend38:                                          ; preds = %1
  %191 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  br label %common.ret
}

define internal fastcc void @Parser_parse_args(ptr %0, ptr nocapture %1) unnamed_addr {
  %3 = tail call fastcc ptr @Parser_parse_arg(ptr %0)
  %memberidx.i = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 3
  %5 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %4, %5
  br i1 %.not.i, label %.Array_ArgNode____sl__.exit_crit_edge, label %if.entry.i

.Array_ArgNode____sl__.exit_crit_edge:            ; preds = %2
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %.pre24 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_ArgNode____sl__.exit

if.entry.i:                                       ; preds = %2
  %6 = shl i64 %5, 1
  store i64 %6, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i.i, align 8
  %8 = shl i64 %5, 4
  %9 = tail call ptr @realloc(ptr %7, i64 %8)
  store ptr %9, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i, align 4
  br label %Array_ArgNode____sl__.exit

Array_ArgNode____sl__.exit:                       ; preds = %.Array_ArgNode____sl__.exit_crit_edge, %if.entry.i
  %10 = phi ptr [ %.pre24, %.Array_ArgNode____sl__.exit_crit_edge ], [ %9, %if.entry.i ]
  %11 = phi i64 [ %4, %.Array_ArgNode____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %12 = add i64 %11, 1
  store i64 %12, ptr %memberidx.i, align 4
  %memberidx4.i = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %ptridx.i = getelementptr inbounds ptr, ptr %10, i64 %11
  store ptr %3, ptr %ptridx.i, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 3
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %16 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i, align 4
  %18 = icmp eq i64 %17, 0
  %19 = and i1 %15, %18
  br i1 %19, label %while.entry, label %while.end

while.entry:                                      ; preds = %Array_ArgNode____sl__.exit, %Array_ArgNode____sl__.exit23
  %20 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 3)
  %21 = tail call fastcc ptr @Parser_parse_arg(ptr nonnull %0)
  %22 = load i64, ptr %memberidx.i, align 4
  %23 = load i64, ptr %memberidx1.i, align 4
  %.not.i17 = icmp slt i64 %22, %23
  br i1 %.not.i17, label %while.entry.Array_ArgNode____sl__.exit23_crit_edge, label %if.entry.i20

while.entry.Array_ArgNode____sl__.exit23_crit_edge: ; preds = %while.entry
  %.pre26 = load ptr, ptr %memberidx4.i, align 8
  br label %Array_ArgNode____sl__.exit23

if.entry.i20:                                     ; preds = %while.entry
  %24 = shl i64 %23, 1
  store i64 %24, ptr %memberidx1.i, align 4
  %25 = load ptr, ptr %memberidx4.i, align 8
  %26 = shl i64 %23, 4
  %27 = tail call ptr @realloc(ptr %25, i64 %26)
  store ptr %27, ptr %memberidx4.i, align 8
  %.pre25 = load i64, ptr %memberidx.i, align 4
  br label %Array_ArgNode____sl__.exit23

Array_ArgNode____sl__.exit23:                     ; preds = %while.entry.Array_ArgNode____sl__.exit23_crit_edge, %if.entry.i20
  %28 = phi ptr [ %.pre26, %while.entry.Array_ArgNode____sl__.exit23_crit_edge ], [ %27, %if.entry.i20 ]
  %29 = phi i64 [ %22, %while.entry.Array_ArgNode____sl__.exit23_crit_edge ], [ %.pre25, %if.entry.i20 ]
  %30 = add i64 %29, 1
  store i64 %30, ptr %memberidx.i, align 4
  %ptridx.i22 = getelementptr inbounds ptr, ptr %28, i64 %29
  store ptr %21, ptr %ptridx.i22, align 8
  %31 = load ptr, ptr %memberidx, align 8
  %32 = load i64, ptr %31, align 4
  %33 = icmp eq i64 %32, 3
  %34 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i14 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 2
  %35 = load i64, ptr %memberidx3.i14, align 4
  %36 = icmp eq i64 %35, 0
  %37 = and i1 %33, %36
  br i1 %37, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_ArgNode____sl__.exit23, %Array_ArgNode____sl__.exit
  ret void
}

define internal fastcc noalias ptr @Parser_parse_const_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 2, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 3
  store ptr null, ptr %memberidx.i, align 8
  %memberidx.i24 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %5 = load i64, ptr %memberidx.i24, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i25 = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i25, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i24, align 4
  %memberidx.i.i27 = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i27, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %10, i64 %9
  %11 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 2
  %12 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 51)
  store ptr %12, ptr %memberidx2, align 8
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %16 = load i64, ptr %memberidx.i24, align 4
  %17 = load ptr, ptr %0, align 8
  %memberidx2.i29 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx2.i29, align 4
  %19 = icmp slt i64 %16, %18
  br i1 %19, label %if.entry.i33, label %Parser_advance.exit34

if.entry.i33:                                     ; preds = %if.entry
  %20 = add nsw i64 %16, 1
  store i64 %20, ptr %memberidx.i24, align 4
  %memberidx.i.i31 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i.i31, align 8
  %ptridx.i.i32 = getelementptr inbounds ptr, ptr %21, i64 %20
  %22 = load ptr, ptr %ptridx.i.i32, align 8
  store ptr %22, ptr %memberidx, align 8
  br label %Parser_advance.exit34

Parser_advance.exit34:                            ; preds = %if.entry, %if.entry.i33
  %23 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %23, ptr %memberidx.i, align 8
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit34
  %24 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 36)
  %memberidx6 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 4
  %25 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %25, ptr %memberidx6, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = tail call ptr @malloc(i32 32)
  %28 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 1
  %29 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %30 = load i64, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 3
  %31 = load i64, ptr %memberidx3.i, align 4
  store i64 %28, ptr %27, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %27, i64 0, i32 1
  store i64 %29, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %27, i64 0, i32 2
  store i64 %30, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %27, i64 0, i32 3
  store i64 %31, ptr %memberidx3.i.i, align 4
  store ptr %27, ptr %2, align 8
  ret ptr %2
}

define internal fastcc void @Parser_parse_type_list(ptr %0, ptr nocapture %1) unnamed_addr {
  %3 = tail call fastcc ptr @Parser_parse_type(ptr %0)
  %memberidx.i20 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx.i20, align 4
  %memberidx1.i21 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 3
  %5 = load i64, ptr %memberidx1.i21, align 4
  %.not.i22 = icmp slt i64 %4, %5
  br i1 %.not.i22, label %.Array_TypeNode____sl__.exit28_crit_edge, label %if.entry.i25

.Array_TypeNode____sl__.exit28_crit_edge:         ; preds = %2
  %memberidx4.i26.phi.trans.insert = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %.pre29 = load ptr, ptr %memberidx4.i26.phi.trans.insert, align 8
  br label %Array_TypeNode____sl__.exit28

if.entry.i25:                                     ; preds = %2
  %6 = shl i64 %5, 1
  store i64 %6, ptr %memberidx1.i21, align 4
  %memberidx2.i.i24 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i.i24, align 8
  %8 = shl i64 %5, 4
  %9 = tail call ptr @realloc(ptr %7, i64 %8)
  store ptr %9, ptr %memberidx2.i.i24, align 8
  %.pre = load i64, ptr %memberidx.i20, align 4
  br label %Array_TypeNode____sl__.exit28

Array_TypeNode____sl__.exit28:                    ; preds = %.Array_TypeNode____sl__.exit28_crit_edge, %if.entry.i25
  %10 = phi ptr [ %.pre29, %.Array_TypeNode____sl__.exit28_crit_edge ], [ %9, %if.entry.i25 ]
  %11 = phi i64 [ %4, %.Array_TypeNode____sl__.exit28_crit_edge ], [ %.pre, %if.entry.i25 ]
  %12 = add i64 %11, 1
  store i64 %12, ptr %memberidx.i20, align 4
  %memberidx4.i26 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %ptridx.i27 = getelementptr inbounds ptr, ptr %10, i64 %11
  store ptr %3, ptr %ptridx.i27, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 3
  %memberidx2.i18 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %16 = load ptr, ptr %memberidx2.i18, align 8
  %memberidx3.i19 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i19, align 4
  %18 = icmp eq i64 %17, 0
  %19 = and i1 %15, %18
  br i1 %19, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Array_TypeNode____sl__.exit28
  %memberidx.i12 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_TypeNode____sl__.exit
  %20 = load i64, ptr %memberidx.i12, align 4
  %21 = load ptr, ptr %0, align 8
  %memberidx2.i13 = getelementptr inbounds %Array_Token_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i13, align 4
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %if.entry.i16, label %Parser_advance.exit

if.entry.i16:                                     ; preds = %while.entry
  %24 = add nsw i64 %20, 1
  store i64 %24, ptr %memberidx.i12, align 4
  %memberidx.i.i15 = getelementptr inbounds %Array_Token_, ptr %21, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i.i15, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %25, i64 %24
  %26 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %26, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i16
  %27 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %28 = load i64, ptr %memberidx.i20, align 4
  %29 = load i64, ptr %memberidx1.i21, align 4
  %.not.i = icmp slt i64 %28, %29
  br i1 %.not.i, label %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge, label %if.entry.i

Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge: ; preds = %Parser_advance.exit
  %.pre31 = load ptr, ptr %memberidx4.i26, align 8
  br label %Array_TypeNode____sl__.exit

if.entry.i:                                       ; preds = %Parser_advance.exit
  %30 = shl i64 %29, 1
  store i64 %30, ptr %memberidx1.i21, align 4
  %31 = load ptr, ptr %memberidx4.i26, align 8
  %32 = shl i64 %29, 4
  %33 = tail call ptr @realloc(ptr %31, i64 %32)
  store ptr %33, ptr %memberidx4.i26, align 8
  %.pre30 = load i64, ptr %memberidx.i20, align 4
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge, %if.entry.i
  %34 = phi ptr [ %.pre31, %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge ], [ %33, %if.entry.i ]
  %35 = phi i64 [ %28, %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge ], [ %.pre30, %if.entry.i ]
  %36 = add i64 %35, 1
  store i64 %36, ptr %memberidx.i20, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %34, i64 %35
  store ptr %27, ptr %ptridx.i, align 8
  %37 = load ptr, ptr %memberidx, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 3
  %40 = load ptr, ptr %memberidx2.i18, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %40, i64 0, i32 2
  %41 = load i64, ptr %memberidx3.i, align 4
  %42 = icmp eq i64 %41, 0
  %43 = and i1 %39, %42
  br i1 %43, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_TypeNode____sl__.exit, %Array_TypeNode____sl__.exit28
  ret void
}

define internal fastcc ptr @Parser_parse_arg(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 24)
  %3 = tail call fastcc ptr @Parser_eat(ptr %0, i64 51)
  store ptr %3, ptr %2, align 8
  %memberidx1.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 1
  %memberidx2.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 2
  %memberidx.i51 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx1.i, i8 0, i64 16, i1 false)
  %4 = load ptr, ptr %memberidx.i51, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp ne i64 %5, 44
  %memberidx2.i52 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i52, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx3.i, align 4
  %9 = icmp eq i64 %8, 0
  %10 = and i1 %6, %9
  br i1 %10, label %ifend, label %common.ret

common.ret:                                       ; preds = %Parser_error.exit, %ifend13, %Parser_advance.exit, %1
  ret ptr %2

ifend:                                            ; preds = %1
  %11 = icmp eq i64 %5, 1
  br i1 %11, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx.i53 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %12 = load i64, ptr %memberidx.i53, align 4
  %13 = load ptr, ptr %0, align 8
  %memberidx2.i54 = getelementptr inbounds %Array_Token_, ptr %13, i64 0, i32 2
  %14 = load i64, ptr %memberidx2.i54, align 4
  %15 = icmp slt i64 %12, %14
  br i1 %15, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry2
  %16 = add nsw i64 %12, 1
  store i64 %16, ptr %memberidx.i53, align 4
  %memberidx.i.i56 = getelementptr inbounds %Array_Token_, ptr %13, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i.i56, align 8
  %ptridx.i.i57 = getelementptr inbounds ptr, ptr %17, i64 %16
  %18 = load ptr, ptr %ptridx.i.i57, align 8
  store ptr %18, ptr %memberidx.i51, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry2, %if.entry.i
  %19 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %19, ptr %memberidx1.i, align 8
  %20 = load ptr, ptr %memberidx.i51, align 8
  %21 = load i64, ptr %20, align 4
  %22 = icmp ne i64 %21, 44
  %23 = load ptr, ptr %memberidx2.i52, align 8
  %memberidx3.i63 = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 2
  %24 = load i64, ptr %memberidx3.i63, align 4
  %25 = icmp eq i64 %24, 0
  %26 = and i1 %22, %25
  br i1 %26, label %ifend4, label %common.ret

ifend4:                                           ; preds = %Parser_advance.exit, %ifend
  %27 = phi ptr [ %19, %Parser_advance.exit ], [ null, %ifend ]
  %28 = phi i64 [ %21, %Parser_advance.exit ], [ %5, %ifend ]
  %29 = icmp eq i64 %28, 36
  br i1 %29, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %ifend4
  %memberidx.i64 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %30 = load i64, ptr %memberidx.i64, align 4
  %31 = load ptr, ptr %0, align 8
  %memberidx2.i65 = getelementptr inbounds %Array_Token_, ptr %31, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i65, align 4
  %33 = icmp slt i64 %30, %32
  br i1 %33, label %if.entry.i69, label %Parser_advance.exit70

if.entry.i69:                                     ; preds = %if.entry11
  %34 = add nsw i64 %30, 1
  store i64 %34, ptr %memberidx.i64, align 4
  %memberidx.i.i67 = getelementptr inbounds %Array_Token_, ptr %31, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i.i67, align 8
  %ptridx.i.i68 = getelementptr inbounds ptr, ptr %35, i64 %34
  %36 = load ptr, ptr %ptridx.i.i68, align 8
  store ptr %36, ptr %memberidx.i51, align 8
  br label %Parser_advance.exit70

Parser_advance.exit70:                            ; preds = %if.entry11, %if.entry.i69
  %37 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %37, ptr %memberidx2.i, align 8
  %phi.cmp = icmp eq ptr %37, null
  br label %ifend13

ifend13:                                          ; preds = %ifend4, %Parser_advance.exit70
  %38 = phi i1 [ true, %ifend4 ], [ %phi.cmp, %Parser_advance.exit70 ]
  %39 = icmp eq ptr %27, null
  %40 = and i1 %39, %38
  br i1 %40, label %if.entry17, label %common.ret

if.entry17:                                       ; preds = %ifend13
  %memberidx21 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %41 = load ptr, ptr %memberidx21, align 8
  %42 = load ptr, ptr %41, align 8
  %memberidx22 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %42, i64 0, i32 5
  %43 = load ptr, ptr %memberidx22, align 8
  %44 = tail call ptr %43(ptr nonnull %41)
  %45 = alloca ptr, align 8
  %46 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %45, ptr nonnull @72, ptr %44)
  %47 = load ptr, ptr %45, align 8
  %48 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %48, align 8
  %memberidx.i58 = getelementptr inbounds %string, ptr %48, i64 0, i32 1
  store ptr %47, ptr %memberidx.i58, align 8
  %memberidx1.i59 = getelementptr inbounds %string, ptr %48, i64 0, i32 2
  store i64 %46, ptr %memberidx1.i59, align 4
  %memberidx2.i60 = getelementptr inbounds %string, ptr %48, i64 0, i32 3
  store i64 %46, ptr %memberidx2.i60, align 4
  tail call void @free(ptr %44)
  %49 = load ptr, ptr %memberidx2.i52, align 8
  %50 = call ptr @malloc(i32 24)
  %51 = load ptr, ptr %memberidx.i51, align 8
  %memberidx2.i50 = getelementptr inbounds %Token, ptr %51, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i50, align 8
  store i64 2, ptr %50, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %50, i64 0, i32 2
  store ptr %52, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %50, i64 0, i32 1
  store ptr %48, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 2
  %53 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 3
  %54 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %53, %54
  br i1 %.not.i.i, label %if.entry17.Parser_error.exit_crit_edge, label %if.entry.i.i

if.entry17.Parser_error.exit_crit_edge:           ; preds = %if.entry17
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %.pre72 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %if.entry17
  %55 = shl i64 %54, 1
  store i64 %55, ptr %memberidx1.i4.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %56 = load ptr, ptr %memberidx2.i.i.i, align 8
  %57 = shl i64 %54, 4
  %58 = call ptr @realloc(ptr %56, i64 %57)
  store ptr %58, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry17.Parser_error.exit_crit_edge, %if.entry.i.i
  %59 = phi ptr [ %.pre72, %if.entry17.Parser_error.exit_crit_edge ], [ %58, %if.entry.i.i ]
  %60 = phi i64 [ %53, %if.entry17.Parser_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %61 = add i64 %60, 1
  store i64 %61, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %59, i64 %60
  store ptr %50, ptr %ptridx.i.i, align 8
  %62 = load ptr, ptr %memberidx2.i52, align 8
  %memberidx25 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx25, align 4
  %64 = add i64 %63, -1
  %memberidx.i = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %65, i64 %64
  %66 = load ptr, ptr %ptridx.i, align 8
  %memberidx26 = getelementptr inbounds %FloError, ptr %66, i64 0, i32 2
  %memberidx28 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %67 = load ptr, ptr %memberidx28, align 8
  store ptr %67, ptr %memberidx26, align 8
  br label %common.ret
}

define internal fastcc ptr @Parser_parse_object_type(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_eat(ptr %0, i64 51)
  %3 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  store ptr %4, ptr %3, align 8
  %memberidx.i.i17 = getelementptr inbounds %TypeNode, ptr %3, i64 0, i32 1
  store i64 18, ptr %memberidx.i.i17, align 4
  %memberidx.i18 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 2
  store ptr %2, ptr %memberidx.i18, align 8
  %memberidx1.i19 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 3
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %5, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i20 = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i20, align 4
  %memberidx2.i.i21 = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i.i21, align 8
  store i64 0, ptr %memberidx.i5.i, align 4
  store ptr %5, ptr %memberidx1.i19, align 8
  %memberidx1 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 40
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i15 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx2.i15, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %15, i64 %14
  %16 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %16, ptr %memberidx1, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %5)
  %17 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 39)
  %memberidx6 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx6, align 8
  %19 = tail call ptr @malloc(i32 32)
  %20 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 1
  %21 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 3
  %23 = load i64, ptr %memberidx3.i, align 4
  store i64 %20, ptr %19, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 1
  store i64 %21, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 3
  store i64 %23, ptr %memberidx3.i.i, align 4
  store ptr %19, ptr %3, align 8
  br label %ifend

ifend:                                            ; preds = %1, %Parser_advance.exit
  ret ptr %3
}

define internal fastcc ptr @Parser_parse_unary_expression_pre(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %else35.i.i [
    i64 21, label %ifend
    i64 22, label %Parser_is_unary_op.exit.fold.split
    i64 5, label %Parser_is_unary_op.exit.fold.split27
    i64 35, label %Parser_is_unary_op.exit.fold.split28
    i64 86, label %ifend.fold.split
    i64 32, label %if.entry.i58.i
    i64 29, label %if.entry4.i.i
    i64 30, label %if.entry9.i.i
    i64 33, label %if.entry14.i.i
    i64 51, label %if.entry19.i.i
    i64 27, label %if.entry24.i.i
    i64 85, label %if.entry29.i.i
    i64 23, label %if.entry34.i.i
  ]

Parser_is_unary_op.exit.fold.split:               ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split27:             ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split28:             ; preds = %1
  br label %ifend

common.ret42.sink.split:                          ; preds = %Parser_advance.exit, %Parser_advance.exit.i
  %.sink48 = phi ptr [ %218, %Parser_advance.exit.i ], [ %234, %Parser_advance.exit ]
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %.sink48, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i18.i = getelementptr inbounds %ExpressionNode, ptr %.sink48, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i18.i, align 4
  br label %common.ret42

common.ret42:                                     ; preds = %common.ret42.sink.split, %Parser_parse_lhs_expression_allow_call.exit
  %common.ret42.op = phi ptr [ %expression.1.i, %Parser_parse_lhs_expression_allow_call.exit ], [ %.sink48, %common.ret42.sink.split ]
  ret ptr %common.ret42.op

if.entry.i58.i:                                   ; preds = %1
  %5 = tail call fastcc ptr @Parser_parse_string(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry4.i.i:                                    ; preds = %1
  %6 = tail call ptr @malloc(i32 32)
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 29
  br i1 %9, label %if.entry.i.i62.i, label %else.i.i70.i

if.entry.i.i62.i:                                 ; preds = %if.entry4.i.i
  %memberidx.i.i.i60.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i.i.i60.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i61.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx2.i.i.i61.i, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i.i.i66.i, label %Parser_eat.exit.i73.i

if.entry.i.i.i66.i:                               ; preds = %if.entry.i.i62.i
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i.i.i60.i, align 4
  %memberidx.i.i.i.i64.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i.i.i.i64.i, align 8
  %ptridx.i.i.i.i65.i = getelementptr inbounds ptr, ptr %15, i64 %14
  %16 = load ptr, ptr %ptridx.i.i.i.i65.i, align 8
  store ptr %16, ptr %memberidx, align 8
  br label %Parser_eat.exit.i73.i

else.i.i70.i:                                     ; preds = %if.entry4.i.i
  %17 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i68.i = getelementptr inbounds %Token, ptr %7, i64 0, i32 1
  %18 = load ptr, ptr %memberidx35.i.i68.i, align 8
  store i64 44, ptr %17, align 4
  %memberidx1.i82.i.i69.i = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  store ptr %18, ptr %memberidx1.i82.i.i69.i, align 8
  br label %Parser_eat.exit.i73.i

Parser_eat.exit.i73.i:                            ; preds = %else.i.i70.i, %if.entry.i.i.i66.i, %if.entry.i.i62.i
  %common.ret.op.i.i71.i = phi ptr [ %17, %else.i.i70.i ], [ %7, %if.entry.i.i.i66.i ], [ %7, %if.entry.i.i62.i ]
  %memberidx.i58.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i.i71.i, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i58.i.i, align 8
  store ptr %19, ptr %6, align 8
  %memberidx.i.i.i59.i.i = getelementptr inbounds %StatementNode, ptr %6, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i59.i.i, align 4
  %memberidx.i.i60.i.i = getelementptr inbounds %ExpressionNode, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i60.i.i, align 4
  %memberidx1.i.i72.i = getelementptr inbounds %IntExpressionNode, ptr %6, i64 0, i32 3
  store ptr %common.ret.op.i.i71.i, ptr %memberidx1.i.i72.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry9.i.i:                                    ; preds = %1
  %20 = tail call ptr @malloc(i32 32)
  %21 = load ptr, ptr %memberidx, align 8
  %22 = load i64, ptr %21, align 4
  %23 = icmp eq i64 %22, 30
  br i1 %23, label %if.entry.i65.i.i, label %else.i71.i.i

if.entry.i65.i.i:                                 ; preds = %if.entry9.i.i
  %memberidx.i.i63.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %24 = load i64, ptr %memberidx.i.i63.i.i, align 4
  %25 = load ptr, ptr %0, align 8
  %memberidx2.i.i64.i.i = getelementptr inbounds %Array_Token_, ptr %25, i64 0, i32 2
  %26 = load i64, ptr %memberidx2.i.i64.i.i, align 4
  %27 = icmp slt i64 %24, %26
  br i1 %27, label %if.entry.i.i69.i.i, label %Parser_eat.exit74.i.i

if.entry.i.i69.i.i:                               ; preds = %if.entry.i65.i.i
  %28 = add nsw i64 %24, 1
  store i64 %28, ptr %memberidx.i.i63.i.i, align 4
  %memberidx.i.i.i67.i.i = getelementptr inbounds %Array_Token_, ptr %25, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i.i.i67.i.i, align 8
  %ptridx.i.i.i68.i.i = getelementptr inbounds ptr, ptr %29, i64 %28
  %30 = load ptr, ptr %ptridx.i.i.i68.i.i, align 8
  store ptr %30, ptr %memberidx, align 8
  br label %Parser_eat.exit74.i.i

else.i71.i.i:                                     ; preds = %if.entry9.i.i
  %31 = tail call ptr @malloc(i32 16)
  %memberidx35.i72.i.i = getelementptr inbounds %Token, ptr %21, i64 0, i32 1
  %32 = load ptr, ptr %memberidx35.i72.i.i, align 8
  store i64 44, ptr %31, align 4
  %memberidx1.i82.i73.i.i = getelementptr inbounds %Token, ptr %31, i64 0, i32 1
  store ptr %32, ptr %memberidx1.i82.i73.i.i, align 8
  br label %Parser_eat.exit74.i.i

Parser_eat.exit74.i.i:                            ; preds = %else.i71.i.i, %if.entry.i.i69.i.i, %if.entry.i65.i.i
  %common.ret.op.i62.i.i = phi ptr [ %31, %else.i71.i.i ], [ %21, %if.entry.i.i69.i.i ], [ %21, %if.entry.i65.i.i ]
  %memberidx.i75.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i62.i.i, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i75.i.i, align 8
  store ptr %33, ptr %20, align 8
  %memberidx.i.i.i76.i.i = getelementptr inbounds %StatementNode, ptr %20, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i76.i.i, align 4
  %memberidx.i.i77.i.i = getelementptr inbounds %ExpressionNode, ptr %20, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i77.i.i, align 4
  %memberidx1.i78.i.i = getelementptr inbounds %FloatExpressionNode, ptr %20, i64 0, i32 3
  store ptr %common.ret.op.i62.i.i, ptr %memberidx1.i78.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry14.i.i:                                   ; preds = %1
  %34 = tail call ptr @malloc(i32 32)
  %35 = load ptr, ptr %memberidx, align 8
  %36 = load i64, ptr %35, align 4
  %37 = icmp eq i64 %36, 33
  br i1 %37, label %if.entry.i83.i.i, label %else.i89.i.i

if.entry.i83.i.i:                                 ; preds = %if.entry14.i.i
  %memberidx.i.i81.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %38 = load i64, ptr %memberidx.i.i81.i.i, align 4
  %39 = load ptr, ptr %0, align 8
  %memberidx2.i.i82.i.i = getelementptr inbounds %Array_Token_, ptr %39, i64 0, i32 2
  %40 = load i64, ptr %memberidx2.i.i82.i.i, align 4
  %41 = icmp slt i64 %38, %40
  br i1 %41, label %if.entry.i.i87.i.i, label %Parser_eat.exit92.i.i

if.entry.i.i87.i.i:                               ; preds = %if.entry.i83.i.i
  %42 = add nsw i64 %38, 1
  store i64 %42, ptr %memberidx.i.i81.i.i, align 4
  %memberidx.i.i.i85.i.i = getelementptr inbounds %Array_Token_, ptr %39, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i.i.i85.i.i, align 8
  %ptridx.i.i.i86.i.i = getelementptr inbounds ptr, ptr %43, i64 %42
  %44 = load ptr, ptr %ptridx.i.i.i86.i.i, align 8
  store ptr %44, ptr %memberidx, align 8
  br label %Parser_eat.exit92.i.i

else.i89.i.i:                                     ; preds = %if.entry14.i.i
  %45 = tail call ptr @malloc(i32 16)
  %memberidx35.i90.i.i = getelementptr inbounds %Token, ptr %35, i64 0, i32 1
  %46 = load ptr, ptr %memberidx35.i90.i.i, align 8
  store i64 44, ptr %45, align 4
  %memberidx1.i82.i91.i.i = getelementptr inbounds %Token, ptr %45, i64 0, i32 1
  store ptr %46, ptr %memberidx1.i82.i91.i.i, align 8
  br label %Parser_eat.exit92.i.i

Parser_eat.exit92.i.i:                            ; preds = %else.i89.i.i, %if.entry.i.i87.i.i, %if.entry.i83.i.i
  %common.ret.op.i80.i.i = phi ptr [ %45, %else.i89.i.i ], [ %35, %if.entry.i.i87.i.i ], [ %35, %if.entry.i83.i.i ]
  %memberidx.i93.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i80.i.i, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i93.i.i, align 8
  store ptr %47, ptr %34, align 8
  %memberidx.i.i.i94.i.i = getelementptr inbounds %StatementNode, ptr %34, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i94.i.i, align 4
  %memberidx.i.i95.i.i = getelementptr inbounds %ExpressionNode, ptr %34, i64 0, i32 2
  store i64 3, ptr %memberidx.i.i95.i.i, align 4
  %memberidx1.i96.i.i = getelementptr inbounds %CharExpressionNode, ptr %34, i64 0, i32 3
  store ptr %common.ret.op.i80.i.i, ptr %memberidx1.i96.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry19.i.i:                                   ; preds = %1
  %48 = tail call ptr @malloc(i32 32)
  %49 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 51)
  %memberidx.i97.i.i = getelementptr inbounds %Token, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i97.i.i, align 8
  store ptr %50, ptr %48, align 8
  %memberidx.i.i.i98.i.i = getelementptr inbounds %StatementNode, ptr %48, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i98.i.i, align 4
  %memberidx.i.i99.i.i = getelementptr inbounds %ExpressionNode, ptr %48, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i99.i.i, align 4
  %memberidx1.i100.i.i = getelementptr inbounds %VarAccessExpressionNode, ptr %48, i64 0, i32 3
  store ptr %49, ptr %memberidx1.i100.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry24.i.i:                                   ; preds = %1
  %51 = tail call ptr @malloc(i32 32)
  %52 = load ptr, ptr %memberidx, align 8
  %memberidx1.i104.i = getelementptr inbounds %Token, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx1.i104.i, align 8
  store ptr %53, ptr %51, align 8
  %memberidx.i.i.i.i105.i = getelementptr inbounds %StatementNode, ptr %51, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i105.i, align 4
  %memberidx.i.i.i106.i = getelementptr inbounds %ExpressionNode, ptr %51, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i.i106.i, align 4
  %memberidx.i.i107.i = getelementptr inbounds %ArrayExpressionNode, ptr %51, i64 0, i32 3
  %54 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %54, align 8
  %memberidx.i3.i.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %54, i64 0, i32 2
  store i64 0, ptr %memberidx.i3.i.i.i, align 4
  %memberidx1.i.i.i108.i = getelementptr inbounds %Array_ExpressionNode_, ptr %54, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i108.i, align 4
  %memberidx2.i.i.i109.i = getelementptr inbounds %Array_ExpressionNode_, ptr %54, i64 0, i32 1
  %55 = tail call ptr @malloc(i32 64)
  store ptr %55, ptr %memberidx2.i.i.i109.i, align 8
  store i64 0, ptr %memberidx.i3.i.i.i, align 4
  store ptr %54, ptr %memberidx.i.i107.i, align 8
  %memberidx.i15.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %56 = load i64, ptr %memberidx.i15.i.i, align 4
  %57 = load ptr, ptr %0, align 8
  %memberidx2.i16.i.i = getelementptr inbounds %Array_Token_, ptr %57, i64 0, i32 2
  %58 = load i64, ptr %memberidx2.i16.i.i, align 4
  %59 = icmp slt i64 %56, %58
  br i1 %59, label %if.entry.i.i113.i, label %if.entry24.i.i.Parser_advance.exit.i115.i_crit_edge

if.entry24.i.i.Parser_advance.exit.i115.i_crit_edge: ; preds = %if.entry24.i.i
  %.pre = load ptr, ptr %memberidx, align 8
  br label %Parser_advance.exit.i115.i

if.entry.i.i113.i:                                ; preds = %if.entry24.i.i
  %60 = add nsw i64 %56, 1
  store i64 %60, ptr %memberidx.i15.i.i, align 4
  %memberidx.i.i17.i.i = getelementptr inbounds %Array_Token_, ptr %57, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i.i17.i.i, align 8
  %ptridx.i.i.i112.i = getelementptr inbounds ptr, ptr %61, i64 %60
  %62 = load ptr, ptr %ptridx.i.i.i112.i, align 8
  store ptr %62, ptr %memberidx, align 8
  br label %Parser_advance.exit.i115.i

Parser_advance.exit.i115.i:                       ; preds = %if.entry24.i.i.Parser_advance.exit.i115.i_crit_edge, %if.entry.i.i113.i
  %63 = phi ptr [ %.pre, %if.entry24.i.i.Parser_advance.exit.i115.i_crit_edge ], [ %62, %if.entry.i.i113.i ]
  %64 = load i64, ptr %63, align 4
  %.not.i114.i = icmp eq i64 %64, 28
  br i1 %.not.i114.i, label %if.entry.i21.i.i, label %ifend.i.i

ifend.i.i:                                        ; preds = %Parser_advance.exit.i115.i
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %54)
  %.pre43 = load ptr, ptr %memberidx, align 8
  %.pre44 = load i64, ptr %.pre43, align 4
  %phi.cmp = icmp eq i64 %.pre44, 28
  br i1 %phi.cmp, label %if.entry.i21.i.i, label %else.i.i125.i

if.entry.i21.i.i:                                 ; preds = %Parser_advance.exit.i115.i, %ifend.i.i
  %65 = phi ptr [ %.pre43, %ifend.i.i ], [ %63, %Parser_advance.exit.i115.i ]
  %66 = load i64, ptr %memberidx.i15.i.i, align 4
  %67 = load ptr, ptr %0, align 8
  %memberidx2.i.i20.i.i = getelementptr inbounds %Array_Token_, ptr %67, i64 0, i32 2
  %68 = load i64, ptr %memberidx2.i.i20.i.i, align 4
  %69 = icmp slt i64 %66, %68
  br i1 %69, label %if.entry.i.i.i122.i, label %Parser_parse_array_expression.exit.i

if.entry.i.i.i122.i:                              ; preds = %if.entry.i21.i.i
  %70 = add nsw i64 %66, 1
  store i64 %70, ptr %memberidx.i15.i.i, align 4
  %memberidx.i.i.i22.i.i = getelementptr inbounds %Array_Token_, ptr %67, i64 0, i32 1
  %71 = load ptr, ptr %memberidx.i.i.i22.i.i, align 8
  %ptridx.i.i.i.i121.i = getelementptr inbounds ptr, ptr %71, i64 %70
  %72 = load ptr, ptr %ptridx.i.i.i.i121.i, align 8
  store ptr %72, ptr %memberidx, align 8
  br label %Parser_parse_array_expression.exit.i

else.i.i125.i:                                    ; preds = %ifend.i.i
  %73 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i123.i = getelementptr inbounds %Token, ptr %.pre43, i64 0, i32 1
  %74 = load ptr, ptr %memberidx35.i.i123.i, align 8
  store i64 44, ptr %73, align 4
  %memberidx1.i82.i.i124.i = getelementptr inbounds %Token, ptr %73, i64 0, i32 1
  store ptr %74, ptr %memberidx1.i82.i.i124.i, align 8
  br label %Parser_parse_array_expression.exit.i

Parser_parse_array_expression.exit.i:             ; preds = %else.i.i125.i, %if.entry.i.i.i122.i, %if.entry.i21.i.i
  %common.ret.op.i.i.i = phi ptr [ %73, %else.i.i125.i ], [ %65, %if.entry.i.i.i122.i ], [ %65, %if.entry.i21.i.i ]
  %memberidx7.i126.i = getelementptr inbounds %Token, ptr %common.ret.op.i.i.i, i64 0, i32 1
  %75 = load ptr, ptr %memberidx7.i126.i, align 8
  %76 = tail call ptr @malloc(i32 32)
  %77 = load i64, ptr %53, align 4
  %memberidx1.i.i127.i = getelementptr inbounds %FloRange, ptr %75, i64 0, i32 1
  %78 = load i64, ptr %memberidx1.i.i127.i, align 4
  %memberidx2.i23.i.i = getelementptr inbounds %FloRange, ptr %53, i64 0, i32 2
  %79 = load i64, ptr %memberidx2.i23.i.i, align 4
  %memberidx3.i24.i.i = getelementptr inbounds %FloRange, ptr %75, i64 0, i32 3
  %80 = load i64, ptr %memberidx3.i24.i.i, align 4
  store i64 %77, ptr %76, align 4
  %memberidx1.i.i25.i.i = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 1
  store i64 %78, ptr %memberidx1.i.i25.i.i, align 4
  %memberidx2.i.i26.i.i = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 2
  store i64 %79, ptr %memberidx2.i.i26.i.i, align 4
  %memberidx3.i.i27.i.i = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 3
  store i64 %80, ptr %memberidx3.i.i27.i.i, align 4
  store ptr %76, ptr %51, align 8
  br label %Parser_parse_atom.exit.i

if.entry29.i.i:                                   ; preds = %1
  %memberidx.i.i87.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %81 = load i64, ptr %memberidx.i.i87.i, align 4
  %82 = load ptr, ptr %0, align 8
  %memberidx2.i.i88.i = getelementptr inbounds %Array_Token_, ptr %82, i64 0, i32 2
  %83 = load i64, ptr %memberidx2.i.i88.i, align 4
  %84 = icmp slt i64 %81, %83
  br i1 %84, label %if.entry.i.i92.i, label %Parser_advance.exit.i97.i

if.entry.i.i92.i:                                 ; preds = %if.entry29.i.i
  %85 = add nsw i64 %81, 1
  store i64 %85, ptr %memberidx.i.i87.i, align 4
  %memberidx.i.i.i90.i = getelementptr inbounds %Array_Token_, ptr %82, i64 0, i32 1
  %86 = load ptr, ptr %memberidx.i.i.i90.i, align 8
  %ptridx.i.i.i91.i = getelementptr inbounds ptr, ptr %86, i64 %85
  %87 = load ptr, ptr %ptridx.i.i.i91.i, align 8
  store ptr %87, ptr %memberidx, align 8
  br label %Parser_advance.exit.i97.i

Parser_advance.exit.i97.i:                        ; preds = %if.entry.i.i92.i, %if.entry29.i.i
  %88 = tail call ptr @malloc(i32 41)
  %89 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i18.i.i = getelementptr inbounds %NewExpressionNode, ptr %88, i64 0, i32 3
  store ptr %89, ptr %memberidx.i18.i.i, align 8
  %memberidx1.i.i93.i = getelementptr inbounds %NewExpressionNode, ptr %88, i64 0, i32 4
  store i1 true, ptr %memberidx1.i.i93.i, align 1
  store ptr %3, ptr %88, align 8
  %memberidx.i.i.i.i94.i = getelementptr inbounds %StatementNode, ptr %88, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i94.i, align 4
  %memberidx.i.i19.i.i = getelementptr inbounds %ExpressionNode, ptr %88, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i19.i.i, align 4
  %memberidx2.i20.i.i = getelementptr inbounds %NewExpressionNode, ptr %88, i64 0, i32 5
  %90 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %90, align 8
  %memberidx.i7.i.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %90, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i.i.i, align 4
  %memberidx1.i.i.i95.i = getelementptr inbounds %Array_ExpressionNode_, ptr %90, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i95.i, align 4
  %memberidx2.i.i.i96.i = getelementptr inbounds %Array_ExpressionNode_, ptr %90, i64 0, i32 1
  %91 = tail call ptr @malloc(i32 64)
  store ptr %91, ptr %memberidx2.i.i.i96.i, align 8
  store i64 0, ptr %memberidx.i7.i.i.i, align 4
  store ptr %90, ptr %memberidx2.i20.i.i, align 8
  %92 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 23)
  %memberidx2.i22.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %93 = load ptr, ptr %memberidx2.i22.i.i, align 8
  %memberidx3.i23.i.i = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 2
  %94 = load i64, ptr %memberidx3.i23.i.i, align 4
  %.fr = freeze i64 %94
  %95 = icmp eq i64 %.fr, 0
  br i1 %95, label %switch.early.test.i.i, label %Parser_parse_new_expression.exit.i

switch.early.test.i.i:                            ; preds = %Parser_advance.exit.i97.i
  %96 = load ptr, ptr %memberidx, align 8
  %97 = load i64, ptr %96, align 4
  switch i64 %97, label %if.entry.i99.i [
    i64 44, label %Parser_parse_new_expression.exit.i
    i64 24, label %Parser_parse_new_expression.exit.i
  ]

if.entry.i99.i:                                   ; preds = %switch.early.test.i.i
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %90)
  br label %Parser_parse_new_expression.exit.i

Parser_parse_new_expression.exit.i:               ; preds = %if.entry.i99.i, %switch.early.test.i.i, %switch.early.test.i.i, %Parser_advance.exit.i97.i
  %98 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 24)
  %memberidx7.i100.i = getelementptr inbounds %Token, ptr %98, i64 0, i32 1
  %99 = load ptr, ptr %memberidx7.i100.i, align 8
  %100 = tail call ptr @malloc(i32 32)
  %101 = load i64, ptr %3, align 4
  %memberidx1.i24.i.i = getelementptr inbounds %FloRange, ptr %99, i64 0, i32 1
  %102 = load i64, ptr %memberidx1.i24.i.i, align 4
  %memberidx2.i25.i.i = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %103 = load i64, ptr %memberidx2.i25.i.i, align 4
  %memberidx3.i26.i.i = getelementptr inbounds %FloRange, ptr %99, i64 0, i32 3
  %104 = load i64, ptr %memberidx3.i26.i.i, align 4
  store i64 %101, ptr %100, align 4
  %memberidx1.i.i27.i.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 1
  store i64 %102, ptr %memberidx1.i.i27.i.i, align 4
  %memberidx2.i.i28.i101.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 2
  store i64 %103, ptr %memberidx2.i.i28.i101.i, align 4
  %memberidx3.i.i.i102.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 3
  store i64 %104, ptr %memberidx3.i.i.i102.i, align 4
  store ptr %100, ptr %88, align 8
  br label %Parser_parse_atom.exit.i

if.entry34.i.i:                                   ; preds = %1
  %memberidx.i101.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %105 = load i64, ptr %memberidx.i101.i.i, align 4
  %106 = load ptr, ptr %0, align 8
  %memberidx2.i.i74.i = getelementptr inbounds %Array_Token_, ptr %106, i64 0, i32 2
  %107 = load i64, ptr %memberidx2.i.i74.i, align 4
  %108 = icmp slt i64 %105, %107
  br i1 %108, label %if.entry.i103.i.i, label %Parser_advance.exit.i.i

if.entry.i103.i.i:                                ; preds = %if.entry34.i.i
  %109 = add nsw i64 %105, 1
  store i64 %109, ptr %memberidx.i101.i.i, align 4
  %memberidx.i.i102.i.i = getelementptr inbounds %Array_Token_, ptr %106, i64 0, i32 1
  %110 = load ptr, ptr %memberidx.i.i102.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %110, i64 %109
  %111 = load ptr, ptr %ptridx.i.i.i.i, align 8
  store ptr %111, ptr %memberidx, align 8
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i103.i.i, %if.entry34.i.i
  %112 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %113 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 24)
  br label %Parser_parse_atom.exit.i

else35.i.i:                                       ; preds = %1
  %114 = tail call ptr @malloc(i32 224)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %114, ptr noundef nonnull align 8 dereferenceable(28) @71, i64 28, i1 false)
  %115 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %115, align 8
  %memberidx.i.i104.i.i = getelementptr inbounds %string, ptr %115, i64 0, i32 1
  store ptr %114, ptr %memberidx.i.i104.i.i, align 8
  %memberidx1.i.i.i76.i = getelementptr inbounds %string, ptr %115, i64 0, i32 2
  store i64 28, ptr %memberidx1.i.i.i76.i, align 4
  %memberidx2.i.i105.i.i = getelementptr inbounds %string, ptr %115, i64 0, i32 3
  store i64 28, ptr %memberidx2.i.i105.i.i, align 4
  %memberidx.i106.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i106.i.i, align 8
  %117 = tail call ptr @malloc(i32 24)
  %118 = load ptr, ptr %memberidx, align 8
  %memberidx2.i108.i.i = getelementptr inbounds %Token, ptr %118, i64 0, i32 1
  %119 = load ptr, ptr %memberidx2.i108.i.i, align 8
  store i64 2, ptr %117, align 4
  %memberidx1.i.i109.i.i = getelementptr inbounds %FloError, ptr %117, i64 0, i32 2
  store ptr %119, ptr %memberidx1.i.i109.i.i, align 8
  %memberidx2.i.i110.i.i = getelementptr inbounds %FloError, ptr %117, i64 0, i32 1
  store ptr %115, ptr %memberidx2.i.i110.i.i, align 8
  %memberidx.i.i111.i.i = getelementptr inbounds %Array_FloError_, ptr %116, i64 0, i32 2
  %120 = load i64, ptr %memberidx.i.i111.i.i, align 4
  %memberidx1.i4.i.i.i = getelementptr inbounds %Array_FloError_, ptr %116, i64 0, i32 3
  %121 = load i64, ptr %memberidx1.i4.i.i.i, align 4
  %.not.i.i.i.i = icmp slt i64 %120, %121
  br i1 %.not.i.i.i.i, label %else35.i.i.Parser_error.exit.i.i_crit_edge, label %if.entry.i.i113.i.i

else35.i.i.Parser_error.exit.i.i_crit_edge:       ; preds = %else35.i.i
  %memberidx4.i.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %116, i64 0, i32 1
  %.pre46 = load ptr, ptr %memberidx4.i.i.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit.i.i

if.entry.i.i113.i.i:                              ; preds = %else35.i.i
  %122 = shl i64 %121, 1
  store i64 %122, ptr %memberidx1.i4.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %116, i64 0, i32 1
  %123 = load ptr, ptr %memberidx2.i.i.i.i.i, align 8
  %124 = shl i64 %121, 4
  %125 = tail call ptr @realloc(ptr %123, i64 %124)
  store ptr %125, ptr %memberidx2.i.i.i.i.i, align 8
  %.pre45 = load i64, ptr %memberidx.i.i111.i.i, align 4
  br label %Parser_error.exit.i.i

Parser_error.exit.i.i:                            ; preds = %else35.i.i.Parser_error.exit.i.i_crit_edge, %if.entry.i.i113.i.i
  %126 = phi ptr [ %125, %if.entry.i.i113.i.i ], [ %.pre46, %else35.i.i.Parser_error.exit.i.i_crit_edge ]
  %127 = phi i64 [ %.pre45, %if.entry.i.i113.i.i ], [ %120, %else35.i.i.Parser_error.exit.i.i_crit_edge ]
  %128 = add i64 %127, 1
  store i64 %128, ptr %memberidx.i.i111.i.i, align 4
  %ptridx.i.i114.i.i = getelementptr inbounds ptr, ptr %126, i64 %127
  store ptr %117, ptr %ptridx.i.i114.i.i, align 8
  %129 = tail call ptr @malloc(i32 24)
  %130 = load ptr, ptr %memberidx, align 8
  %memberidx38.i.i = getelementptr inbounds %Token, ptr %130, i64 0, i32 1
  %131 = load ptr, ptr %memberidx38.i.i, align 8
  store ptr %131, ptr %129, align 8
  %memberidx.i.i115.i.i = getelementptr inbounds %StatementNode, ptr %129, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i115.i.i, align 4
  %memberidx.i116.i.i = getelementptr inbounds %ExpressionNode, ptr %129, i64 0, i32 2
  store i64 7, ptr %memberidx.i116.i.i, align 4
  br label %Parser_parse_atom.exit.i

Parser_parse_atom.exit.i:                         ; preds = %Parser_error.exit.i.i, %Parser_advance.exit.i.i, %Parser_parse_new_expression.exit.i, %Parser_parse_array_expression.exit.i, %if.entry19.i.i, %Parser_eat.exit92.i.i, %Parser_eat.exit74.i.i, %Parser_eat.exit.i73.i, %if.entry.i58.i
  %common.ret.op.i.i = phi ptr [ %5, %if.entry.i58.i ], [ %129, %Parser_error.exit.i.i ], [ %6, %Parser_eat.exit.i73.i ], [ %20, %Parser_eat.exit74.i.i ], [ %34, %Parser_eat.exit92.i.i ], [ %48, %if.entry19.i.i ], [ %51, %Parser_parse_array_expression.exit.i ], [ %88, %Parser_parse_new_expression.exit.i ], [ %112, %Parser_advance.exit.i.i ]
  %132 = load ptr, ptr %memberidx, align 8
  %133 = load i64, ptr %132, align 4
  %134 = icmp ne i64 %133, 44
  %memberidx2.i.i30 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %135 = load ptr, ptr %memberidx2.i.i30, align 8
  %memberidx3.i.i31 = getelementptr inbounds %Array_FloError_, ptr %135, i64 0, i32 2
  %136 = load i64, ptr %memberidx3.i.i31, align 4
  %137 = icmp eq i64 %136, 0
  %138 = and i1 %134, %137
  br i1 %138, label %while.entry.i.preheader, label %Parser_parse_lhs_expression_allow_call.exit

while.entry.i.preheader:                          ; preds = %Parser_parse_atom.exit.i
  %memberidx.i.i.i.i35 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %ifend.i
  %139 = phi i64 [ %158, %ifend.i ], [ %133, %while.entry.i.preheader ]
  %140 = phi ptr [ %157, %ifend.i ], [ %132, %while.entry.i.preheader ]
  %expression.0.i = phi ptr [ %expression.2.i, %ifend.i ], [ %common.ret.op.i.i, %while.entry.i.preheader ]
  switch i64 %139, label %Parser_parse_lhs_expression_allow_call.exit [
    i64 23, label %if.entry.i32
    i64 27, label %if.entry.i.i29.i
    i64 48, label %if.entry.i.i.i
  ]

if.entry.i32:                                     ; preds = %while.entry.i
  %141 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 23)
  %142 = tail call ptr @malloc(i32 40)
  %143 = load ptr, ptr %memberidx, align 8
  %memberidx1.i46.i = getelementptr inbounds %Token, ptr %143, i64 0, i32 1
  %144 = load ptr, ptr %memberidx1.i46.i, align 8
  store ptr %144, ptr %142, align 8
  %memberidx.i.i.i.i47.i = getelementptr inbounds %StatementNode, ptr %142, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i47.i, align 4
  %memberidx.i.i.i48.i = getelementptr inbounds %ExpressionNode, ptr %142, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i.i48.i, align 4
  %memberidx.i.i49.i = getelementptr inbounds %CallExpressionNode, ptr %142, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i.i49.i, align 8
  %memberidx1.i.i50.i = getelementptr inbounds %CallExpressionNode, ptr %142, i64 0, i32 4
  %145 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %145, align 8
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %145, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  %memberidx1.i.i.i51.i = getelementptr inbounds %Array_ExpressionNode_, ptr %145, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i51.i, align 4
  %memberidx2.i.i.i52.i = getelementptr inbounds %Array_ExpressionNode_, ptr %145, i64 0, i32 1
  %146 = tail call ptr @malloc(i32 64)
  store ptr %146, ptr %memberidx2.i.i.i52.i, align 8
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  store ptr %145, ptr %memberidx1.i.i50.i, align 8
  %147 = load ptr, ptr %memberidx, align 8
  %148 = load i64, ptr %147, align 4
  %.not.i.i = icmp eq i64 %148, 24
  br i1 %.not.i.i, label %Parser_parse_call_expression.exit.i, label %if.entry.i.i33

if.entry.i.i33:                                   ; preds = %if.entry.i32
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %145)
  br label %Parser_parse_call_expression.exit.i

Parser_parse_call_expression.exit.i:              ; preds = %if.entry.i.i33, %if.entry.i32
  %149 = load ptr, ptr %expression.0.i, align 8
  %150 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 24)
  %memberidx7.i.i = getelementptr inbounds %Token, ptr %150, i64 0, i32 1
  %151 = load ptr, ptr %memberidx7.i.i, align 8
  %152 = tail call ptr @malloc(i32 32)
  %153 = load i64, ptr %149, align 4
  %memberidx1.i15.i.i = getelementptr inbounds %FloRange, ptr %151, i64 0, i32 1
  %154 = load i64, ptr %memberidx1.i15.i.i, align 4
  %memberidx2.i.i55.i = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 2
  %155 = load i64, ptr %memberidx2.i.i55.i, align 4
  %memberidx3.i16.i.i = getelementptr inbounds %FloRange, ptr %151, i64 0, i32 3
  %156 = load i64, ptr %memberidx3.i16.i.i, align 4
  store i64 %153, ptr %152, align 4
  %memberidx1.i.i17.i.i = getelementptr inbounds %FloRange, ptr %152, i64 0, i32 1
  store i64 %154, ptr %memberidx1.i.i17.i.i, align 4
  %memberidx2.i.i18.i.i = getelementptr inbounds %FloRange, ptr %152, i64 0, i32 2
  store i64 %155, ptr %memberidx2.i.i18.i.i, align 4
  %memberidx3.i.i.i56.i = getelementptr inbounds %FloRange, ptr %152, i64 0, i32 3
  store i64 %156, ptr %memberidx3.i.i.i56.i, align 4
  store ptr %152, ptr %142, align 8
  br label %ifend.i

ifend.i:                                          ; preds = %Parser_parse_member_expression.exit.i, %Parser_parse_index_expression.exit.i, %Parser_parse_call_expression.exit.i
  %expression.2.i = phi ptr [ %142, %Parser_parse_call_expression.exit.i ], [ %171, %Parser_parse_index_expression.exit.i ], [ %201, %Parser_parse_member_expression.exit.i ]
  %157 = load ptr, ptr %memberidx, align 8
  %158 = load i64, ptr %157, align 4
  %159 = icmp ne i64 %158, 44
  %160 = load ptr, ptr %memberidx2.i.i30, align 8
  %memberidx3.i25.i = getelementptr inbounds %Array_FloError_, ptr %160, i64 0, i32 2
  %161 = load i64, ptr %memberidx3.i25.i, align 4
  %162 = icmp eq i64 %161, 0
  %163 = and i1 %159, %162
  br i1 %163, label %while.entry.i, label %Parser_parse_lhs_expression_allow_call.exit

if.entry.i.i29.i:                                 ; preds = %while.entry.i
  %164 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %165 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i28.i = getelementptr inbounds %Array_Token_, ptr %165, i64 0, i32 2
  %166 = load i64, ptr %memberidx2.i.i.i28.i, align 4
  %167 = icmp slt i64 %164, %166
  br i1 %167, label %if.entry.i.i.i33.i, label %Parser_eat.exit.i.i

if.entry.i.i.i33.i:                               ; preds = %if.entry.i.i29.i
  %168 = add nsw i64 %164, 1
  store i64 %168, ptr %memberidx.i.i.i.i35, align 4
  %memberidx.i.i.i.i31.i = getelementptr inbounds %Array_Token_, ptr %165, i64 0, i32 1
  %169 = load ptr, ptr %memberidx.i.i.i.i31.i, align 8
  %ptridx.i.i.i.i32.i = getelementptr inbounds ptr, ptr %169, i64 %168
  %170 = load ptr, ptr %ptridx.i.i.i.i32.i, align 8
  store ptr %170, ptr %memberidx, align 8
  br label %Parser_eat.exit.i.i

Parser_eat.exit.i.i:                              ; preds = %if.entry.i.i.i33.i, %if.entry.i.i29.i
  %171 = tail call ptr @malloc(i32 40)
  %172 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %173 = load ptr, ptr %memberidx, align 8
  %memberidx1.i40.i = getelementptr inbounds %Token, ptr %173, i64 0, i32 1
  %174 = load ptr, ptr %memberidx1.i40.i, align 8
  %memberidx.i10.i.i = getelementptr inbounds %ExpressionIndexNode, ptr %171, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i10.i.i, align 8
  %memberidx1.i.i41.i = getelementptr inbounds %ExpressionIndexNode, ptr %171, i64 0, i32 4
  store ptr %172, ptr %memberidx1.i.i41.i, align 8
  store ptr %174, ptr %171, align 8
  %memberidx.i.i.i11.i.i = getelementptr inbounds %StatementNode, ptr %171, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i11.i.i, align 4
  %memberidx.i.i12.i.i = getelementptr inbounds %ExpressionNode, ptr %171, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i12.i.i, align 4
  %175 = load ptr, ptr %expression.0.i, align 8
  %176 = load i64, ptr %173, align 4
  %177 = icmp eq i64 %176, 28
  br i1 %177, label %if.entry.i17.i.i, label %else.i23.i.i

if.entry.i17.i.i:                                 ; preds = %Parser_eat.exit.i.i
  %178 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %179 = load ptr, ptr %0, align 8
  %memberidx2.i.i16.i.i = getelementptr inbounds %Array_Token_, ptr %179, i64 0, i32 2
  %180 = load i64, ptr %memberidx2.i.i16.i.i, align 4
  %181 = icmp slt i64 %178, %180
  br i1 %181, label %if.entry.i.i21.i.i, label %Parser_parse_index_expression.exit.i

if.entry.i.i21.i.i:                               ; preds = %if.entry.i17.i.i
  %182 = add nsw i64 %178, 1
  store i64 %182, ptr %memberidx.i.i.i.i35, align 4
  %memberidx.i.i.i19.i.i = getelementptr inbounds %Array_Token_, ptr %179, i64 0, i32 1
  %183 = load ptr, ptr %memberidx.i.i.i19.i.i, align 8
  %ptridx.i.i.i20.i.i = getelementptr inbounds ptr, ptr %183, i64 %182
  %184 = load ptr, ptr %ptridx.i.i.i20.i.i, align 8
  store ptr %184, ptr %memberidx, align 8
  br label %Parser_parse_index_expression.exit.i

else.i23.i.i:                                     ; preds = %Parser_eat.exit.i.i
  %185 = tail call ptr @malloc(i32 16)
  %186 = load ptr, ptr %memberidx1.i40.i, align 8
  store i64 44, ptr %185, align 4
  %memberidx1.i82.i25.i.i = getelementptr inbounds %Token, ptr %185, i64 0, i32 1
  store ptr %186, ptr %memberidx1.i82.i25.i.i, align 8
  br label %Parser_parse_index_expression.exit.i

Parser_parse_index_expression.exit.i:             ; preds = %else.i23.i.i, %if.entry.i.i21.i.i, %if.entry.i17.i.i
  %common.ret.op.i14.i.i = phi ptr [ %185, %else.i23.i.i ], [ %173, %if.entry.i.i21.i.i ], [ %173, %if.entry.i17.i.i ]
  %memberidx4.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i14.i.i, i64 0, i32 1
  %187 = load ptr, ptr %memberidx4.i.i, align 8
  %188 = tail call ptr @malloc(i32 32)
  %189 = load i64, ptr %175, align 4
  %memberidx1.i27.i.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 1
  %190 = load i64, ptr %memberidx1.i27.i.i, align 4
  %memberidx2.i.i42.i = getelementptr inbounds %FloRange, ptr %175, i64 0, i32 2
  %191 = load i64, ptr %memberidx2.i.i42.i, align 4
  %memberidx3.i.i43.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 3
  %192 = load i64, ptr %memberidx3.i.i43.i, align 4
  store i64 %189, ptr %188, align 4
  %memberidx1.i.i.i44.i = getelementptr inbounds %FloRange, ptr %188, i64 0, i32 1
  store i64 %190, ptr %memberidx1.i.i.i44.i, align 4
  %memberidx2.i.i28.i.i = getelementptr inbounds %FloRange, ptr %188, i64 0, i32 2
  store i64 %191, ptr %memberidx2.i.i28.i.i, align 4
  %memberidx3.i.i29.i.i = getelementptr inbounds %FloRange, ptr %188, i64 0, i32 3
  store i64 %192, ptr %memberidx3.i.i29.i.i, align 4
  store ptr %188, ptr %171, align 8
  br label %ifend.i

if.entry.i.i.i:                                   ; preds = %while.entry.i
  %193 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %194 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %194, i64 0, i32 2
  %195 = load i64, ptr %memberidx2.i.i.i.i, align 4
  %196 = icmp slt i64 %193, %195
  br i1 %196, label %if.entry.i.i.i.i, label %Parser_parse_member_expression.exit.i

if.entry.i.i.i.i:                                 ; preds = %if.entry.i.i.i
  %197 = add nsw i64 %193, 1
  store i64 %197, ptr %memberidx.i.i.i.i35, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %194, i64 0, i32 1
  %198 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %198, i64 %197
  %199 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  store ptr %199, ptr %memberidx, align 8
  br label %Parser_parse_member_expression.exit.i

Parser_parse_member_expression.exit.i:            ; preds = %if.entry.i.i.i.i, %if.entry.i.i.i
  %200 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 51)
  %201 = tail call ptr @malloc(i32 40)
  %202 = load ptr, ptr %expression.0.i, align 8
  %memberidx1.i.i36 = getelementptr inbounds %Token, ptr %200, i64 0, i32 1
  %203 = load ptr, ptr %memberidx1.i.i36, align 8
  %204 = tail call ptr @malloc(i32 32)
  %205 = load i64, ptr %202, align 4
  %memberidx1.i.i.i37 = getelementptr inbounds %FloRange, ptr %203, i64 0, i32 1
  %206 = load i64, ptr %memberidx1.i.i.i37, align 4
  %memberidx2.i.i.i38 = getelementptr inbounds %FloRange, ptr %202, i64 0, i32 2
  %207 = load i64, ptr %memberidx2.i.i.i38, align 4
  %memberidx3.i.i.i39 = getelementptr inbounds %FloRange, ptr %203, i64 0, i32 3
  %208 = load i64, ptr %memberidx3.i.i.i39, align 4
  store i64 %205, ptr %204, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %204, i64 0, i32 1
  store i64 %206, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i5.i.i = getelementptr inbounds %FloRange, ptr %204, i64 0, i32 2
  store i64 %207, ptr %memberidx2.i.i5.i.i, align 4
  %memberidx3.i.i6.i.i = getelementptr inbounds %FloRange, ptr %204, i64 0, i32 3
  store i64 %208, ptr %memberidx3.i.i6.i.i, align 4
  store ptr %204, ptr %201, align 8
  %memberidx.i.i.i7.i.i = getelementptr inbounds %StatementNode, ptr %201, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i7.i.i, align 4
  %memberidx.i.i8.i.i = getelementptr inbounds %ExpressionNode, ptr %201, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i8.i.i, align 4
  %memberidx.i9.i.i = getelementptr inbounds %MemberExpressionNode, ptr %201, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i9.i.i, align 8
  %memberidx1.i10.i.i = getelementptr inbounds %MemberExpressionNode, ptr %201, i64 0, i32 4
  store ptr %200, ptr %memberidx1.i10.i.i, align 8
  br label %ifend.i

Parser_parse_lhs_expression_allow_call.exit:      ; preds = %while.entry.i, %ifend.i, %Parser_parse_atom.exit.i
  %209 = phi i64 [ %133, %Parser_parse_atom.exit.i ], [ %139, %while.entry.i ], [ %158, %ifend.i ]
  %210 = phi ptr [ %132, %Parser_parse_atom.exit.i ], [ %140, %while.entry.i ], [ %157, %ifend.i ]
  %expression.1.i = phi ptr [ %common.ret.op.i.i, %Parser_parse_atom.exit.i ], [ %expression.0.i, %while.entry.i ], [ %expression.2.i, %ifend.i ]
  switch i64 %209, label %common.ret42 [
    i64 21, label %ifend.i20
    i64 22, label %if.entry3.i
  ]

ifend.i20:                                        ; preds = %Parser_parse_lhs_expression_allow_call.exit, %if.entry3.i
  %op.0.i = phi i64 [ 5, %if.entry3.i ], [ 4, %Parser_parse_lhs_expression_allow_call.exit ]
  %memberidx.i.i18 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %211 = load i64, ptr %memberidx.i.i18, align 4
  %212 = load ptr, ptr %0, align 8
  %memberidx2.i.i19 = getelementptr inbounds %Array_Token_, ptr %212, i64 0, i32 2
  %213 = load i64, ptr %memberidx2.i.i19, align 4
  %214 = icmp slt i64 %211, %213
  br i1 %214, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %ifend.i20
  %215 = add nsw i64 %211, 1
  store i64 %215, ptr %memberidx.i.i18, align 4
  %memberidx.i.i.i22 = getelementptr inbounds %Array_Token_, ptr %212, i64 0, i32 1
  %216 = load ptr, ptr %memberidx.i.i.i22, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %216, i64 %215
  %217 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %217, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %ifend.i20
  %218 = tail call ptr @malloc(i32 40)
  %219 = load ptr, ptr %expression.1.i, align 8
  %memberidx7.i = getelementptr inbounds %Token, ptr %210, i64 0, i32 1
  %220 = load ptr, ptr %memberidx7.i, align 8
  %221 = tail call ptr @malloc(i32 32)
  %222 = load i64, ptr %219, align 4
  %memberidx1.i.i23 = getelementptr inbounds %FloRange, ptr %220, i64 0, i32 1
  %223 = load i64, ptr %memberidx1.i.i23, align 4
  %memberidx2.i14.i = getelementptr inbounds %FloRange, ptr %219, i64 0, i32 2
  %224 = load i64, ptr %memberidx2.i14.i, align 4
  %memberidx3.i15.i = getelementptr inbounds %FloRange, ptr %220, i64 0, i32 3
  %225 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %222, ptr %221, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %221, i64 0, i32 1
  store i64 %223, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %221, i64 0, i32 2
  store i64 %224, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %221, i64 0, i32 3
  store i64 %225, ptr %memberidx3.i.i.i, align 4
  %memberidx.i16.i = getelementptr inbounds %UnaryExpressionNode, ptr %218, i64 0, i32 3
  store i64 %op.0.i, ptr %memberidx.i16.i, align 4
  %memberidx1.i17.i = getelementptr inbounds %UnaryExpressionNode, ptr %218, i64 0, i32 4
  store ptr %expression.1.i, ptr %memberidx1.i17.i, align 8
  store ptr %221, ptr %218, align 8
  br label %common.ret42.sink.split

if.entry3.i:                                      ; preds = %Parser_parse_lhs_expression_allow_call.exit
  br label %ifend.i20

ifend.fold.split:                                 ; preds = %1
  br label %ifend

ifend:                                            ; preds = %1, %ifend.fold.split, %Parser_is_unary_op.exit.fold.split28, %Parser_is_unary_op.exit.fold.split27, %Parser_is_unary_op.exit.fold.split
  %common.ret.op.i41 = phi i64 [ 8, %Parser_is_unary_op.exit.fold.split28 ], [ 6, %Parser_is_unary_op.exit.fold.split27 ], [ 3, %Parser_is_unary_op.exit.fold.split ], [ 2, %1 ], [ 1, %ifend.fold.split ]
  %memberidx.i8 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %226 = load i64, ptr %memberidx.i8, align 4
  %227 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %227, i64 0, i32 2
  %228 = load i64, ptr %memberidx2.i, align 4
  %229 = icmp slt i64 %226, %228
  br i1 %229, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %ifend
  %230 = add nsw i64 %226, 1
  store i64 %230, ptr %memberidx.i8, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %227, i64 0, i32 1
  %231 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %231, i64 %230
  %232 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %232, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %ifend, %if.entry.i
  %233 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %234 = tail call ptr @malloc(i32 40)
  %235 = load ptr, ptr %233, align 8
  %236 = tail call ptr @malloc(i32 32)
  %237 = load i64, ptr %3, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %235, i64 0, i32 1
  %238 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i10 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %239 = load i64, ptr %memberidx2.i10, align 4
  %memberidx3.i11 = getelementptr inbounds %FloRange, ptr %235, i64 0, i32 3
  %240 = load i64, ptr %memberidx3.i11, align 4
  store i64 %237, ptr %236, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %236, i64 0, i32 1
  store i64 %238, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %236, i64 0, i32 2
  store i64 %239, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %236, i64 0, i32 3
  store i64 %240, ptr %memberidx3.i.i, align 4
  %memberidx.i12 = getelementptr inbounds %UnaryExpressionNode, ptr %234, i64 0, i32 3
  store i64 %common.ret.op.i41, ptr %memberidx.i12, align 4
  %memberidx1.i13 = getelementptr inbounds %UnaryExpressionNode, ptr %234, i64 0, i32 4
  store ptr %233, ptr %memberidx1.i13, align 8
  store ptr %236, ptr %234, align 8
  br label %common.ret42.sink.split
}

define internal fastcc ptr @Parser_eat(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %if.entry, label %else

common.ret:                                       ; preds = %if.entry.i, %if.entry, %ifend4
  %common.ret.op = phi ptr [ %28, %ifend4 ], [ %3, %if.entry ], [ %3, %if.entry.i ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %12 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %common.ret

else:                                             ; preds = %2
  switch i64 %1, label %ifend4 [
    i64 51, label %if.entry2
    i64 36, label %if.entry5
    i64 1, label %if.entry8
    i64 23, label %if.entry11
    i64 24, label %if.entry14
    i64 25, label %if.entry17
    i64 26, label %if.entry20
    i64 3, label %if.entry23
    i64 40, label %if.entry26
    i64 39, label %if.entry29
    i64 43, label %if.entry32
  ]

if.entry2:                                        ; preds = %else
  %13 = tail call ptr @malloc(i32 176)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(22) %13, ptr noundef nonnull align 8 dereferenceable(22) @57, i64 22, i1 false)
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i.i65 = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i.i65, align 8
  %memberidx1.i.i66 = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 22, ptr %memberidx1.i.i66, align 4
  %memberidx2.i.i67 = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 22, ptr %memberidx2.i.i67, align 4
  %memberidx.i68 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i68, align 8
  %16 = tail call ptr @malloc(i32 24)
  %17 = load ptr, ptr %memberidx, align 8
  %memberidx2.i70 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx2.i70, align 8
  store i64 2, ptr %16, align 4
  %memberidx1.i.i71 = getelementptr inbounds %FloError, ptr %16, i64 0, i32 2
  store ptr %18, ptr %memberidx1.i.i71, align 8
  %memberidx2.i.i72 = getelementptr inbounds %FloError, ptr %16, i64 0, i32 1
  store ptr %14, ptr %memberidx2.i.i72, align 8
  %memberidx.i.i73 = getelementptr inbounds %Array_FloError_, ptr %15, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i.i73, align 4
  %memberidx1.i4.i74 = getelementptr inbounds %Array_FloError_, ptr %15, i64 0, i32 3
  %20 = load i64, ptr %memberidx1.i4.i74, align 4
  %.not.i.i75 = icmp slt i64 %19, %20
  br i1 %.not.i.i75, label %if.entry2.Parser_error.exit81_crit_edge, label %if.entry.i.i78

if.entry2.Parser_error.exit81_crit_edge:          ; preds = %if.entry2
  %memberidx4.i.i79.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %15, i64 0, i32 1
  %.pre260 = load ptr, ptr %memberidx4.i.i79.phi.trans.insert, align 8
  br label %Parser_error.exit81

if.entry.i.i78:                                   ; preds = %if.entry2
  %21 = shl i64 %20, 1
  store i64 %21, ptr %memberidx1.i4.i74, align 4
  %memberidx2.i.i.i77 = getelementptr inbounds %Array_FloError_, ptr %15, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i.i.i77, align 8
  %23 = shl i64 %20, 4
  %24 = tail call ptr @realloc(ptr %22, i64 %23)
  store ptr %24, ptr %memberidx2.i.i.i77, align 8
  %.pre259 = load i64, ptr %memberidx.i.i73, align 4
  br label %Parser_error.exit81

Parser_error.exit81:                              ; preds = %if.entry2.Parser_error.exit81_crit_edge, %if.entry.i.i78
  %25 = phi ptr [ %.pre260, %if.entry2.Parser_error.exit81_crit_edge ], [ %24, %if.entry.i.i78 ]
  %26 = phi i64 [ %19, %if.entry2.Parser_error.exit81_crit_edge ], [ %.pre259, %if.entry.i.i78 ]
  %27 = add i64 %26, 1
  store i64 %27, ptr %memberidx.i.i73, align 4
  %ptridx.i.i80 = getelementptr inbounds ptr, ptr %25, i64 %26
  store ptr %16, ptr %ptridx.i.i80, align 8
  br label %ifend4

ifend4:                                           ; preds = %else, %Parser_error.exit, %Parser_error.exit235, %Parser_error.exit218, %Parser_error.exit201, %Parser_error.exit184, %Parser_error.exit167, %Parser_error.exit150, %Parser_error.exit133, %Parser_error.exit116, %Parser_error.exit99, %Parser_error.exit81
  %28 = tail call ptr @malloc(i32 16)
  %memberidx35 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %29 = load ptr, ptr %memberidx35, align 8
  store i64 44, ptr %28, align 4
  %memberidx1.i82 = getelementptr inbounds %Token, ptr %28, i64 0, i32 1
  store ptr %29, ptr %memberidx1.i82, align 8
  br label %common.ret

if.entry5:                                        ; preds = %else
  %30 = tail call ptr @malloc(i32 96)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %30, ptr noundef nonnull align 8 dereferenceable(12) @58, i64 12, i1 false)
  %31 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %31, align 8
  %memberidx.i.i83 = getelementptr inbounds %string, ptr %31, i64 0, i32 1
  store ptr %30, ptr %memberidx.i.i83, align 8
  %memberidx1.i.i84 = getelementptr inbounds %string, ptr %31, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i84, align 4
  %memberidx2.i.i85 = getelementptr inbounds %string, ptr %31, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i85, align 4
  %memberidx.i86 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i86, align 8
  %33 = tail call ptr @malloc(i32 24)
  %34 = load ptr, ptr %memberidx, align 8
  %memberidx2.i88 = getelementptr inbounds %Token, ptr %34, i64 0, i32 1
  %35 = load ptr, ptr %memberidx2.i88, align 8
  store i64 2, ptr %33, align 4
  %memberidx1.i.i89 = getelementptr inbounds %FloError, ptr %33, i64 0, i32 2
  store ptr %35, ptr %memberidx1.i.i89, align 8
  %memberidx2.i.i90 = getelementptr inbounds %FloError, ptr %33, i64 0, i32 1
  store ptr %31, ptr %memberidx2.i.i90, align 8
  %memberidx.i.i91 = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 2
  %36 = load i64, ptr %memberidx.i.i91, align 4
  %memberidx1.i4.i92 = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 3
  %37 = load i64, ptr %memberidx1.i4.i92, align 4
  %.not.i.i93 = icmp slt i64 %36, %37
  br i1 %.not.i.i93, label %if.entry5.Parser_error.exit99_crit_edge, label %if.entry.i.i96

if.entry5.Parser_error.exit99_crit_edge:          ; preds = %if.entry5
  %memberidx4.i.i97.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 1
  %.pre258 = load ptr, ptr %memberidx4.i.i97.phi.trans.insert, align 8
  br label %Parser_error.exit99

if.entry.i.i96:                                   ; preds = %if.entry5
  %38 = shl i64 %37, 1
  store i64 %38, ptr %memberidx1.i4.i92, align 4
  %memberidx2.i.i.i95 = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 1
  %39 = load ptr, ptr %memberidx2.i.i.i95, align 8
  %40 = shl i64 %37, 4
  %41 = tail call ptr @realloc(ptr %39, i64 %40)
  store ptr %41, ptr %memberidx2.i.i.i95, align 8
  %.pre257 = load i64, ptr %memberidx.i.i91, align 4
  br label %Parser_error.exit99

Parser_error.exit99:                              ; preds = %if.entry5.Parser_error.exit99_crit_edge, %if.entry.i.i96
  %42 = phi ptr [ %.pre258, %if.entry5.Parser_error.exit99_crit_edge ], [ %41, %if.entry.i.i96 ]
  %43 = phi i64 [ %36, %if.entry5.Parser_error.exit99_crit_edge ], [ %.pre257, %if.entry.i.i96 ]
  %44 = add i64 %43, 1
  store i64 %44, ptr %memberidx.i.i91, align 4
  %ptridx.i.i98 = getelementptr inbounds ptr, ptr %42, i64 %43
  store ptr %33, ptr %ptridx.i.i98, align 8
  br label %ifend4

if.entry8:                                        ; preds = %else
  %45 = tail call ptr @malloc(i32 96)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %45, ptr noundef nonnull align 8 dereferenceable(12) @59, i64 12, i1 false)
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i100 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i100, align 8
  %memberidx1.i.i101 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i101, align 4
  %memberidx2.i.i102 = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i102, align 4
  %memberidx.i103 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i103, align 8
  %48 = tail call ptr @malloc(i32 24)
  %49 = load ptr, ptr %memberidx, align 8
  %memberidx2.i105 = getelementptr inbounds %Token, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx2.i105, align 8
  store i64 2, ptr %48, align 4
  %memberidx1.i.i106 = getelementptr inbounds %FloError, ptr %48, i64 0, i32 2
  store ptr %50, ptr %memberidx1.i.i106, align 8
  %memberidx2.i.i107 = getelementptr inbounds %FloError, ptr %48, i64 0, i32 1
  store ptr %46, ptr %memberidx2.i.i107, align 8
  %memberidx.i.i108 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %51 = load i64, ptr %memberidx.i.i108, align 4
  %memberidx1.i4.i109 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 3
  %52 = load i64, ptr %memberidx1.i4.i109, align 4
  %.not.i.i110 = icmp slt i64 %51, %52
  br i1 %.not.i.i110, label %if.entry8.Parser_error.exit116_crit_edge, label %if.entry.i.i113

if.entry8.Parser_error.exit116_crit_edge:         ; preds = %if.entry8
  %memberidx4.i.i114.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %.pre256 = load ptr, ptr %memberidx4.i.i114.phi.trans.insert, align 8
  br label %Parser_error.exit116

if.entry.i.i113:                                  ; preds = %if.entry8
  %53 = shl i64 %52, 1
  store i64 %53, ptr %memberidx1.i4.i109, align 4
  %memberidx2.i.i.i112 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %54 = load ptr, ptr %memberidx2.i.i.i112, align 8
  %55 = shl i64 %52, 4
  %56 = tail call ptr @realloc(ptr %54, i64 %55)
  store ptr %56, ptr %memberidx2.i.i.i112, align 8
  %.pre255 = load i64, ptr %memberidx.i.i108, align 4
  br label %Parser_error.exit116

Parser_error.exit116:                             ; preds = %if.entry8.Parser_error.exit116_crit_edge, %if.entry.i.i113
  %57 = phi ptr [ %.pre256, %if.entry8.Parser_error.exit116_crit_edge ], [ %56, %if.entry.i.i113 ]
  %58 = phi i64 [ %51, %if.entry8.Parser_error.exit116_crit_edge ], [ %.pre255, %if.entry.i.i113 ]
  %59 = add i64 %58, 1
  store i64 %59, ptr %memberidx.i.i108, align 4
  %ptridx.i.i115 = getelementptr inbounds ptr, ptr %57, i64 %58
  store ptr %48, ptr %ptridx.i.i115, align 8
  br label %ifend4

if.entry11:                                       ; preds = %else
  %60 = tail call ptr @malloc(i32 96)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %60, ptr noundef nonnull align 8 dereferenceable(12) @60, i64 12, i1 false)
  %61 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %61, align 8
  %memberidx.i.i117 = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  store ptr %60, ptr %memberidx.i.i117, align 8
  %memberidx1.i.i118 = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i118, align 4
  %memberidx2.i.i119 = getelementptr inbounds %string, ptr %61, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i119, align 4
  %memberidx.i120 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %62 = load ptr, ptr %memberidx.i120, align 8
  %63 = tail call ptr @malloc(i32 24)
  %64 = load ptr, ptr %memberidx, align 8
  %memberidx2.i122 = getelementptr inbounds %Token, ptr %64, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i122, align 8
  store i64 2, ptr %63, align 4
  %memberidx1.i.i123 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %65, ptr %memberidx1.i.i123, align 8
  %memberidx2.i.i124 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %61, ptr %memberidx2.i.i124, align 8
  %memberidx.i.i125 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %66 = load i64, ptr %memberidx.i.i125, align 4
  %memberidx1.i4.i126 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 3
  %67 = load i64, ptr %memberidx1.i4.i126, align 4
  %.not.i.i127 = icmp slt i64 %66, %67
  br i1 %.not.i.i127, label %if.entry11.Parser_error.exit133_crit_edge, label %if.entry.i.i130

if.entry11.Parser_error.exit133_crit_edge:        ; preds = %if.entry11
  %memberidx4.i.i131.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %.pre254 = load ptr, ptr %memberidx4.i.i131.phi.trans.insert, align 8
  br label %Parser_error.exit133

if.entry.i.i130:                                  ; preds = %if.entry11
  %68 = shl i64 %67, 1
  store i64 %68, ptr %memberidx1.i4.i126, align 4
  %memberidx2.i.i.i129 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %69 = load ptr, ptr %memberidx2.i.i.i129, align 8
  %70 = shl i64 %67, 4
  %71 = tail call ptr @realloc(ptr %69, i64 %70)
  store ptr %71, ptr %memberidx2.i.i.i129, align 8
  %.pre253 = load i64, ptr %memberidx.i.i125, align 4
  br label %Parser_error.exit133

Parser_error.exit133:                             ; preds = %if.entry11.Parser_error.exit133_crit_edge, %if.entry.i.i130
  %72 = phi ptr [ %.pre254, %if.entry11.Parser_error.exit133_crit_edge ], [ %71, %if.entry.i.i130 ]
  %73 = phi i64 [ %66, %if.entry11.Parser_error.exit133_crit_edge ], [ %.pre253, %if.entry.i.i130 ]
  %74 = add i64 %73, 1
  store i64 %74, ptr %memberidx.i.i125, align 4
  %ptridx.i.i132 = getelementptr inbounds ptr, ptr %72, i64 %73
  store ptr %63, ptr %ptridx.i.i132, align 8
  br label %ifend4

if.entry14:                                       ; preds = %else
  %75 = tail call ptr @malloc(i32 96)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %75, ptr noundef nonnull align 8 dereferenceable(12) @61, i64 12, i1 false)
  %76 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %76, align 8
  %memberidx.i.i134 = getelementptr inbounds %string, ptr %76, i64 0, i32 1
  store ptr %75, ptr %memberidx.i.i134, align 8
  %memberidx1.i.i135 = getelementptr inbounds %string, ptr %76, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i135, align 4
  %memberidx2.i.i136 = getelementptr inbounds %string, ptr %76, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i136, align 4
  %memberidx.i137 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %77 = load ptr, ptr %memberidx.i137, align 8
  %78 = tail call ptr @malloc(i32 24)
  %79 = load ptr, ptr %memberidx, align 8
  %memberidx2.i139 = getelementptr inbounds %Token, ptr %79, i64 0, i32 1
  %80 = load ptr, ptr %memberidx2.i139, align 8
  store i64 2, ptr %78, align 4
  %memberidx1.i.i140 = getelementptr inbounds %FloError, ptr %78, i64 0, i32 2
  store ptr %80, ptr %memberidx1.i.i140, align 8
  %memberidx2.i.i141 = getelementptr inbounds %FloError, ptr %78, i64 0, i32 1
  store ptr %76, ptr %memberidx2.i.i141, align 8
  %memberidx.i.i142 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 2
  %81 = load i64, ptr %memberidx.i.i142, align 4
  %memberidx1.i4.i143 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 3
  %82 = load i64, ptr %memberidx1.i4.i143, align 4
  %.not.i.i144 = icmp slt i64 %81, %82
  br i1 %.not.i.i144, label %if.entry14.Parser_error.exit150_crit_edge, label %if.entry.i.i147

if.entry14.Parser_error.exit150_crit_edge:        ; preds = %if.entry14
  %memberidx4.i.i148.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 1
  %.pre252 = load ptr, ptr %memberidx4.i.i148.phi.trans.insert, align 8
  br label %Parser_error.exit150

if.entry.i.i147:                                  ; preds = %if.entry14
  %83 = shl i64 %82, 1
  store i64 %83, ptr %memberidx1.i4.i143, align 4
  %memberidx2.i.i.i146 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 1
  %84 = load ptr, ptr %memberidx2.i.i.i146, align 8
  %85 = shl i64 %82, 4
  %86 = tail call ptr @realloc(ptr %84, i64 %85)
  store ptr %86, ptr %memberidx2.i.i.i146, align 8
  %.pre251 = load i64, ptr %memberidx.i.i142, align 4
  br label %Parser_error.exit150

Parser_error.exit150:                             ; preds = %if.entry14.Parser_error.exit150_crit_edge, %if.entry.i.i147
  %87 = phi ptr [ %.pre252, %if.entry14.Parser_error.exit150_crit_edge ], [ %86, %if.entry.i.i147 ]
  %88 = phi i64 [ %81, %if.entry14.Parser_error.exit150_crit_edge ], [ %.pre251, %if.entry.i.i147 ]
  %89 = add i64 %88, 1
  store i64 %89, ptr %memberidx.i.i142, align 4
  %ptridx.i.i149 = getelementptr inbounds ptr, ptr %87, i64 %88
  store ptr %78, ptr %ptridx.i.i149, align 8
  br label %ifend4

if.entry17:                                       ; preds = %else
  %90 = tail call ptr @malloc(i32 96)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %90, ptr noundef nonnull align 8 dereferenceable(12) @62, i64 12, i1 false)
  %91 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %91, align 8
  %memberidx.i.i151 = getelementptr inbounds %string, ptr %91, i64 0, i32 1
  store ptr %90, ptr %memberidx.i.i151, align 8
  %memberidx1.i.i152 = getelementptr inbounds %string, ptr %91, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i152, align 4
  %memberidx2.i.i153 = getelementptr inbounds %string, ptr %91, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i153, align 4
  %memberidx.i154 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i154, align 8
  %93 = tail call ptr @malloc(i32 24)
  %94 = load ptr, ptr %memberidx, align 8
  %memberidx2.i156 = getelementptr inbounds %Token, ptr %94, i64 0, i32 1
  %95 = load ptr, ptr %memberidx2.i156, align 8
  store i64 2, ptr %93, align 4
  %memberidx1.i.i157 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 2
  store ptr %95, ptr %memberidx1.i.i157, align 8
  %memberidx2.i.i158 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 1
  store ptr %91, ptr %memberidx2.i.i158, align 8
  %memberidx.i.i159 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 2
  %96 = load i64, ptr %memberidx.i.i159, align 4
  %memberidx1.i4.i160 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 3
  %97 = load i64, ptr %memberidx1.i4.i160, align 4
  %.not.i.i161 = icmp slt i64 %96, %97
  br i1 %.not.i.i161, label %if.entry17.Parser_error.exit167_crit_edge, label %if.entry.i.i164

if.entry17.Parser_error.exit167_crit_edge:        ; preds = %if.entry17
  %memberidx4.i.i165.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %.pre250 = load ptr, ptr %memberidx4.i.i165.phi.trans.insert, align 8
  br label %Parser_error.exit167

if.entry.i.i164:                                  ; preds = %if.entry17
  %98 = shl i64 %97, 1
  store i64 %98, ptr %memberidx1.i4.i160, align 4
  %memberidx2.i.i.i163 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %99 = load ptr, ptr %memberidx2.i.i.i163, align 8
  %100 = shl i64 %97, 4
  %101 = tail call ptr @realloc(ptr %99, i64 %100)
  store ptr %101, ptr %memberidx2.i.i.i163, align 8
  %.pre249 = load i64, ptr %memberidx.i.i159, align 4
  br label %Parser_error.exit167

Parser_error.exit167:                             ; preds = %if.entry17.Parser_error.exit167_crit_edge, %if.entry.i.i164
  %102 = phi ptr [ %.pre250, %if.entry17.Parser_error.exit167_crit_edge ], [ %101, %if.entry.i.i164 ]
  %103 = phi i64 [ %96, %if.entry17.Parser_error.exit167_crit_edge ], [ %.pre249, %if.entry.i.i164 ]
  %104 = add i64 %103, 1
  store i64 %104, ptr %memberidx.i.i159, align 4
  %ptridx.i.i166 = getelementptr inbounds ptr, ptr %102, i64 %103
  store ptr %93, ptr %ptridx.i.i166, align 8
  br label %ifend4

if.entry20:                                       ; preds = %else
  %105 = tail call ptr @malloc(i32 96)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %105, ptr noundef nonnull align 8 dereferenceable(12) @63, i64 12, i1 false)
  %106 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %106, align 8
  %memberidx.i.i168 = getelementptr inbounds %string, ptr %106, i64 0, i32 1
  store ptr %105, ptr %memberidx.i.i168, align 8
  %memberidx1.i.i169 = getelementptr inbounds %string, ptr %106, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i169, align 4
  %memberidx2.i.i170 = getelementptr inbounds %string, ptr %106, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i170, align 4
  %memberidx.i171 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %107 = load ptr, ptr %memberidx.i171, align 8
  %108 = tail call ptr @malloc(i32 24)
  %109 = load ptr, ptr %memberidx, align 8
  %memberidx2.i173 = getelementptr inbounds %Token, ptr %109, i64 0, i32 1
  %110 = load ptr, ptr %memberidx2.i173, align 8
  store i64 2, ptr %108, align 4
  %memberidx1.i.i174 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 2
  store ptr %110, ptr %memberidx1.i.i174, align 8
  %memberidx2.i.i175 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 1
  store ptr %106, ptr %memberidx2.i.i175, align 8
  %memberidx.i.i176 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 2
  %111 = load i64, ptr %memberidx.i.i176, align 4
  %memberidx1.i4.i177 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 3
  %112 = load i64, ptr %memberidx1.i4.i177, align 4
  %.not.i.i178 = icmp slt i64 %111, %112
  br i1 %.not.i.i178, label %if.entry20.Parser_error.exit184_crit_edge, label %if.entry.i.i181

if.entry20.Parser_error.exit184_crit_edge:        ; preds = %if.entry20
  %memberidx4.i.i182.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %.pre248 = load ptr, ptr %memberidx4.i.i182.phi.trans.insert, align 8
  br label %Parser_error.exit184

if.entry.i.i181:                                  ; preds = %if.entry20
  %113 = shl i64 %112, 1
  store i64 %113, ptr %memberidx1.i4.i177, align 4
  %memberidx2.i.i.i180 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %114 = load ptr, ptr %memberidx2.i.i.i180, align 8
  %115 = shl i64 %112, 4
  %116 = tail call ptr @realloc(ptr %114, i64 %115)
  store ptr %116, ptr %memberidx2.i.i.i180, align 8
  %.pre247 = load i64, ptr %memberidx.i.i176, align 4
  br label %Parser_error.exit184

Parser_error.exit184:                             ; preds = %if.entry20.Parser_error.exit184_crit_edge, %if.entry.i.i181
  %117 = phi ptr [ %.pre248, %if.entry20.Parser_error.exit184_crit_edge ], [ %116, %if.entry.i.i181 ]
  %118 = phi i64 [ %111, %if.entry20.Parser_error.exit184_crit_edge ], [ %.pre247, %if.entry.i.i181 ]
  %119 = add i64 %118, 1
  store i64 %119, ptr %memberidx.i.i176, align 4
  %ptridx.i.i183 = getelementptr inbounds ptr, ptr %117, i64 %118
  store ptr %108, ptr %ptridx.i.i183, align 8
  br label %ifend4

if.entry23:                                       ; preds = %else
  %120 = tail call ptr @malloc(i32 96)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %120, ptr noundef nonnull align 8 dereferenceable(12) @64, i64 12, i1 false)
  %121 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %121, align 8
  %memberidx.i.i185 = getelementptr inbounds %string, ptr %121, i64 0, i32 1
  store ptr %120, ptr %memberidx.i.i185, align 8
  %memberidx1.i.i186 = getelementptr inbounds %string, ptr %121, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i186, align 4
  %memberidx2.i.i187 = getelementptr inbounds %string, ptr %121, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i187, align 4
  %memberidx.i188 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %122 = load ptr, ptr %memberidx.i188, align 8
  %123 = tail call ptr @malloc(i32 24)
  %124 = load ptr, ptr %memberidx, align 8
  %memberidx2.i190 = getelementptr inbounds %Token, ptr %124, i64 0, i32 1
  %125 = load ptr, ptr %memberidx2.i190, align 8
  store i64 2, ptr %123, align 4
  %memberidx1.i.i191 = getelementptr inbounds %FloError, ptr %123, i64 0, i32 2
  store ptr %125, ptr %memberidx1.i.i191, align 8
  %memberidx2.i.i192 = getelementptr inbounds %FloError, ptr %123, i64 0, i32 1
  store ptr %121, ptr %memberidx2.i.i192, align 8
  %memberidx.i.i193 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 2
  %126 = load i64, ptr %memberidx.i.i193, align 4
  %memberidx1.i4.i194 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 3
  %127 = load i64, ptr %memberidx1.i4.i194, align 4
  %.not.i.i195 = icmp slt i64 %126, %127
  br i1 %.not.i.i195, label %if.entry23.Parser_error.exit201_crit_edge, label %if.entry.i.i198

if.entry23.Parser_error.exit201_crit_edge:        ; preds = %if.entry23
  %memberidx4.i.i199.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 1
  %.pre246 = load ptr, ptr %memberidx4.i.i199.phi.trans.insert, align 8
  br label %Parser_error.exit201

if.entry.i.i198:                                  ; preds = %if.entry23
  %128 = shl i64 %127, 1
  store i64 %128, ptr %memberidx1.i4.i194, align 4
  %memberidx2.i.i.i197 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 1
  %129 = load ptr, ptr %memberidx2.i.i.i197, align 8
  %130 = shl i64 %127, 4
  %131 = tail call ptr @realloc(ptr %129, i64 %130)
  store ptr %131, ptr %memberidx2.i.i.i197, align 8
  %.pre245 = load i64, ptr %memberidx.i.i193, align 4
  br label %Parser_error.exit201

Parser_error.exit201:                             ; preds = %if.entry23.Parser_error.exit201_crit_edge, %if.entry.i.i198
  %132 = phi ptr [ %.pre246, %if.entry23.Parser_error.exit201_crit_edge ], [ %131, %if.entry.i.i198 ]
  %133 = phi i64 [ %126, %if.entry23.Parser_error.exit201_crit_edge ], [ %.pre245, %if.entry.i.i198 ]
  %134 = add i64 %133, 1
  store i64 %134, ptr %memberidx.i.i193, align 4
  %ptridx.i.i200 = getelementptr inbounds ptr, ptr %132, i64 %133
  store ptr %123, ptr %ptridx.i.i200, align 8
  br label %ifend4

if.entry26:                                       ; preds = %else
  %135 = tail call ptr @malloc(i32 96)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %135, ptr noundef nonnull align 8 dereferenceable(12) @65, i64 12, i1 false)
  %136 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %136, align 8
  %memberidx.i.i202 = getelementptr inbounds %string, ptr %136, i64 0, i32 1
  store ptr %135, ptr %memberidx.i.i202, align 8
  %memberidx1.i.i203 = getelementptr inbounds %string, ptr %136, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i203, align 4
  %memberidx2.i.i204 = getelementptr inbounds %string, ptr %136, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i204, align 4
  %memberidx.i205 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %137 = load ptr, ptr %memberidx.i205, align 8
  %138 = tail call ptr @malloc(i32 24)
  %139 = load ptr, ptr %memberidx, align 8
  %memberidx2.i207 = getelementptr inbounds %Token, ptr %139, i64 0, i32 1
  %140 = load ptr, ptr %memberidx2.i207, align 8
  store i64 2, ptr %138, align 4
  %memberidx1.i.i208 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 2
  store ptr %140, ptr %memberidx1.i.i208, align 8
  %memberidx2.i.i209 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 1
  store ptr %136, ptr %memberidx2.i.i209, align 8
  %memberidx.i.i210 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 2
  %141 = load i64, ptr %memberidx.i.i210, align 4
  %memberidx1.i4.i211 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 3
  %142 = load i64, ptr %memberidx1.i4.i211, align 4
  %.not.i.i212 = icmp slt i64 %141, %142
  br i1 %.not.i.i212, label %if.entry26.Parser_error.exit218_crit_edge, label %if.entry.i.i215

if.entry26.Parser_error.exit218_crit_edge:        ; preds = %if.entry26
  %memberidx4.i.i216.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %.pre244 = load ptr, ptr %memberidx4.i.i216.phi.trans.insert, align 8
  br label %Parser_error.exit218

if.entry.i.i215:                                  ; preds = %if.entry26
  %143 = shl i64 %142, 1
  store i64 %143, ptr %memberidx1.i4.i211, align 4
  %memberidx2.i.i.i214 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %144 = load ptr, ptr %memberidx2.i.i.i214, align 8
  %145 = shl i64 %142, 4
  %146 = tail call ptr @realloc(ptr %144, i64 %145)
  store ptr %146, ptr %memberidx2.i.i.i214, align 8
  %.pre243 = load i64, ptr %memberidx.i.i210, align 4
  br label %Parser_error.exit218

Parser_error.exit218:                             ; preds = %if.entry26.Parser_error.exit218_crit_edge, %if.entry.i.i215
  %147 = phi ptr [ %.pre244, %if.entry26.Parser_error.exit218_crit_edge ], [ %146, %if.entry.i.i215 ]
  %148 = phi i64 [ %141, %if.entry26.Parser_error.exit218_crit_edge ], [ %.pre243, %if.entry.i.i215 ]
  %149 = add i64 %148, 1
  store i64 %149, ptr %memberidx.i.i210, align 4
  %ptridx.i.i217 = getelementptr inbounds ptr, ptr %147, i64 %148
  store ptr %138, ptr %ptridx.i.i217, align 8
  br label %ifend4

if.entry29:                                       ; preds = %else
  %150 = tail call ptr @malloc(i32 96)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %150, ptr noundef nonnull align 8 dereferenceable(12) @66, i64 12, i1 false)
  %151 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %151, align 8
  %memberidx.i.i219 = getelementptr inbounds %string, ptr %151, i64 0, i32 1
  store ptr %150, ptr %memberidx.i.i219, align 8
  %memberidx1.i.i220 = getelementptr inbounds %string, ptr %151, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i220, align 4
  %memberidx2.i.i221 = getelementptr inbounds %string, ptr %151, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i221, align 4
  %memberidx.i222 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %152 = load ptr, ptr %memberidx.i222, align 8
  %153 = tail call ptr @malloc(i32 24)
  %154 = load ptr, ptr %memberidx, align 8
  %memberidx2.i224 = getelementptr inbounds %Token, ptr %154, i64 0, i32 1
  %155 = load ptr, ptr %memberidx2.i224, align 8
  store i64 2, ptr %153, align 4
  %memberidx1.i.i225 = getelementptr inbounds %FloError, ptr %153, i64 0, i32 2
  store ptr %155, ptr %memberidx1.i.i225, align 8
  %memberidx2.i.i226 = getelementptr inbounds %FloError, ptr %153, i64 0, i32 1
  store ptr %151, ptr %memberidx2.i.i226, align 8
  %memberidx.i.i227 = getelementptr inbounds %Array_FloError_, ptr %152, i64 0, i32 2
  %156 = load i64, ptr %memberidx.i.i227, align 4
  %memberidx1.i4.i228 = getelementptr inbounds %Array_FloError_, ptr %152, i64 0, i32 3
  %157 = load i64, ptr %memberidx1.i4.i228, align 4
  %.not.i.i229 = icmp slt i64 %156, %157
  br i1 %.not.i.i229, label %if.entry29.Parser_error.exit235_crit_edge, label %if.entry.i.i232

if.entry29.Parser_error.exit235_crit_edge:        ; preds = %if.entry29
  %memberidx4.i.i233.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %152, i64 0, i32 1
  %.pre242 = load ptr, ptr %memberidx4.i.i233.phi.trans.insert, align 8
  br label %Parser_error.exit235

if.entry.i.i232:                                  ; preds = %if.entry29
  %158 = shl i64 %157, 1
  store i64 %158, ptr %memberidx1.i4.i228, align 4
  %memberidx2.i.i.i231 = getelementptr inbounds %Array_FloError_, ptr %152, i64 0, i32 1
  %159 = load ptr, ptr %memberidx2.i.i.i231, align 8
  %160 = shl i64 %157, 4
  %161 = tail call ptr @realloc(ptr %159, i64 %160)
  store ptr %161, ptr %memberidx2.i.i.i231, align 8
  %.pre241 = load i64, ptr %memberidx.i.i227, align 4
  br label %Parser_error.exit235

Parser_error.exit235:                             ; preds = %if.entry29.Parser_error.exit235_crit_edge, %if.entry.i.i232
  %162 = phi ptr [ %.pre242, %if.entry29.Parser_error.exit235_crit_edge ], [ %161, %if.entry.i.i232 ]
  %163 = phi i64 [ %156, %if.entry29.Parser_error.exit235_crit_edge ], [ %.pre241, %if.entry.i.i232 ]
  %164 = add i64 %163, 1
  store i64 %164, ptr %memberidx.i.i227, align 4
  %ptridx.i.i234 = getelementptr inbounds ptr, ptr %162, i64 %163
  store ptr %153, ptr %ptridx.i.i234, align 8
  br label %ifend4

if.entry32:                                       ; preds = %else
  %165 = tail call ptr @malloc(i32 104)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %165, ptr noundef nonnull align 8 dereferenceable(13) @67, i64 13, i1 false)
  %166 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %166, align 8
  %memberidx.i.i236 = getelementptr inbounds %string, ptr %166, i64 0, i32 1
  store ptr %165, ptr %memberidx.i.i236, align 8
  %memberidx1.i.i237 = getelementptr inbounds %string, ptr %166, i64 0, i32 2
  store i64 13, ptr %memberidx1.i.i237, align 4
  %memberidx2.i.i238 = getelementptr inbounds %string, ptr %166, i64 0, i32 3
  store i64 13, ptr %memberidx2.i.i238, align 4
  %memberidx.i61 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %167 = load ptr, ptr %memberidx.i61, align 8
  %168 = tail call ptr @malloc(i32 24)
  %169 = load ptr, ptr %memberidx, align 8
  %memberidx2.i62 = getelementptr inbounds %Token, ptr %169, i64 0, i32 1
  %170 = load ptr, ptr %memberidx2.i62, align 8
  store i64 2, ptr %168, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %168, i64 0, i32 2
  store ptr %170, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %168, i64 0, i32 1
  store ptr %166, ptr %memberidx2.i.i, align 8
  %memberidx.i.i63 = getelementptr inbounds %Array_FloError_, ptr %167, i64 0, i32 2
  %171 = load i64, ptr %memberidx.i.i63, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %167, i64 0, i32 3
  %172 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %171, %172
  br i1 %.not.i.i, label %if.entry32.Parser_error.exit_crit_edge, label %if.entry.i.i

if.entry32.Parser_error.exit_crit_edge:           ; preds = %if.entry32
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %167, i64 0, i32 1
  %.pre240 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %if.entry32
  %173 = shl i64 %172, 1
  store i64 %173, ptr %memberidx1.i4.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %167, i64 0, i32 1
  %174 = load ptr, ptr %memberidx2.i.i.i, align 8
  %175 = shl i64 %172, 4
  %176 = tail call ptr @realloc(ptr %174, i64 %175)
  store ptr %176, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i63, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry32.Parser_error.exit_crit_edge, %if.entry.i.i
  %177 = phi ptr [ %.pre240, %if.entry32.Parser_error.exit_crit_edge ], [ %176, %if.entry.i.i ]
  %178 = phi i64 [ %171, %if.entry32.Parser_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %179 = add i64 %178, 1
  store i64 %179, ptr %memberidx.i.i63, align 4
  %ptridx.i.i64 = getelementptr inbounds ptr, ptr %177, i64 %178
  store ptr %168, ptr %ptridx.i.i64, align 8
  br label %ifend4
}

define internal fastcc ptr @Parser_parse_term_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend7.i [
    i64 4, label %Parser_is_term_expr_op.exit
    i64 7, label %Parser_is_term_expr_op.exit.fold.split
    i64 8, label %Parser_is_term_expr_op.exit.fold.split30
  ]

ifend7.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 9
  %spec.select.i = select i1 %5, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split:           ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split30:         ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit:                      ; preds = %1, %Parser_is_term_expr_op.exit.fold.split30, %Parser_is_term_expr_op.exit.fold.split, %ifend7.i
  %common.ret.op.i = phi i64 [ 3, %1 ], [ %spec.select.i, %ifend7.i ], [ 4, %Parser_is_term_expr_op.exit.fold.split ], [ 5, %Parser_is_term_expr_op.exit.fold.split30 ]
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 44
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx3.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_is_term_expr_op.exit
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_term_expr_op.exit24
  %unary.0 = phi ptr [ %20, %Parser_is_term_expr_op.exit24 ], [ %2, %while.entry.preheader ]
  %op.0 = phi i64 [ %common.ret.op.i19, %Parser_is_term_expr_op.exit24 ], [ %common.ret.op.i, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %19, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %20 = tail call ptr @malloc(i32 48)
  %21 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %22 = load ptr, ptr %unary.0, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = tail call ptr @malloc(i32 32)
  %25 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %22, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 3
  %28 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %25, ptr %24, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 2
  store i64 %27, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  store i64 %28, ptr %memberidx3.i.i.i, align 4
  store ptr %24, ptr %20, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %20, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i15 = getelementptr inbounds %ExpressionNode, ptr %20, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i15, align 4
  %memberidx2.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 3
  store ptr %unary.0, ptr %memberidx2.i16, align 8
  %memberidx3.i17 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i17, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 5
  store ptr %21, ptr %memberidx4.i, align 8
  %29 = load ptr, ptr %memberidx.i, align 8
  %30 = load i64, ptr %29, align 4
  switch i64 %30, label %ifend7.i23 [
    i64 4, label %Parser_is_term_expr_op.exit24
    i64 7, label %Parser_is_term_expr_op.exit24.fold.split
    i64 8, label %Parser_is_term_expr_op.exit24.fold.split31
  ]

ifend7.i23:                                       ; preds = %Parser_advance.exit
  %31 = icmp eq i64 %30, 9
  %spec.select.i22 = select i1 %31, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit24

Parser_is_term_expr_op.exit24.fold.split:         ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit24

Parser_is_term_expr_op.exit24.fold.split31:       ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit24

Parser_is_term_expr_op.exit24:                    ; preds = %Parser_advance.exit, %Parser_is_term_expr_op.exit24.fold.split31, %Parser_is_term_expr_op.exit24.fold.split, %ifend7.i23
  %common.ret.op.i19 = phi i64 [ 3, %Parser_advance.exit ], [ %spec.select.i22, %ifend7.i23 ], [ 4, %Parser_is_term_expr_op.exit24.fold.split ], [ 5, %Parser_is_term_expr_op.exit24.fold.split31 ]
  %32 = icmp ne i64 %common.ret.op.i19, 0
  %33 = icmp ne i64 %30, 44
  %34 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i27 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 2
  %35 = load i64, ptr %memberidx3.i27, align 4
  %36 = icmp eq i64 %35, 0
  %37 = and i1 %33, %36
  %38 = and i1 %32, %37
  br i1 %38, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_is_term_expr_op.exit24, %Parser_is_term_expr_op.exit
  %unary.1 = phi ptr [ %2, %Parser_is_term_expr_op.exit ], [ %20, %Parser_is_term_expr_op.exit24 ]
  ret ptr %unary.1
}

define internal fastcc ptr @Parser_parse_arithmetic_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_term_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx3.i, align 4
  %7 = icmp eq i64 %6, 0
  %8 = add i64 %4, -5
  %9 = icmp ult i64 %8, 2
  %10 = and i1 %9, %7
  br i1 %10, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %1
  %11 = icmp eq i64 %4, 6
  %12 = icmp eq i64 %4, 5
  %spec.select.i = select i1 %12, i64 2, i64 0
  %common.ret.op.i = select i1 %11, i64 1, i64 %spec.select.i
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_advance.exit
  %term.0 = phi ptr [ %20, %Parser_advance.exit ], [ %2, %while.entry.preheader ]
  %op.0 = phi i64 [ %common.ret.op.i19, %Parser_advance.exit ], [ %common.ret.op.i, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %19, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %20 = tail call ptr @malloc(i32 48)
  %21 = tail call fastcc ptr @Parser_parse_term_expression(ptr nonnull %0)
  %22 = load ptr, ptr %term.0, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = tail call ptr @malloc(i32 32)
  %25 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %22, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 3
  %28 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %25, ptr %24, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 2
  store i64 %27, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  store i64 %28, ptr %memberidx3.i.i.i, align 4
  store ptr %24, ptr %20, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %20, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i14 = getelementptr inbounds %ExpressionNode, ptr %20, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i14, align 4
  %memberidx2.i15 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 3
  store ptr %term.0, ptr %memberidx2.i15, align 8
  %memberidx3.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i16, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 5
  store ptr %21, ptr %memberidx4.i, align 8
  %29 = load ptr, ptr %memberidx.i, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 6
  %32 = icmp eq i64 %30, 5
  %spec.select.i18 = select i1 %32, i64 2, i64 0
  %common.ret.op.i19 = select i1 %31, i64 1, i64 %spec.select.i18
  %33 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i22 = getelementptr inbounds %Array_FloError_, ptr %33, i64 0, i32 2
  %34 = load i64, ptr %memberidx3.i22, align 4
  %35 = icmp eq i64 %34, 0
  %36 = add i64 %30, -5
  %37 = icmp ult i64 %36, 2
  %38 = and i1 %37, %35
  br i1 %38, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_advance.exit, %1
  %term.1 = phi ptr [ %2, %1 ], [ %20, %Parser_advance.exit ]
  ret ptr %term.1
}

define internal fastcc ptr @Parser_parse_bitshift_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend4.i [
    i64 46, label %Parser_is_bitshift_expr_op.exit
    i64 47, label %Parser_is_bitshift_expr_op.exit.fold.split
  ]

ifend4.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 54
  %spec.select.i = select i1 %5, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit.fold.split:       ; preds = %1
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit:                  ; preds = %1, %Parser_is_bitshift_expr_op.exit.fold.split, %ifend4.i
  %common.ret.op.i = phi i64 [ 13, %1 ], [ %spec.select.i, %ifend4.i ], [ 14, %Parser_is_bitshift_expr_op.exit.fold.split ]
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 44
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx3.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_is_bitshift_expr_op.exit
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_bitshift_expr_op.exit23
  %arith.0 = phi ptr [ %20, %Parser_is_bitshift_expr_op.exit23 ], [ %2, %while.entry.preheader ]
  %op.0 = phi i64 [ %common.ret.op.i19, %Parser_is_bitshift_expr_op.exit23 ], [ %common.ret.op.i, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %19, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %20 = tail call ptr @malloc(i32 48)
  %21 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr nonnull %0)
  %22 = load ptr, ptr %arith.0, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = tail call ptr @malloc(i32 32)
  %25 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %22, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 3
  %28 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %25, ptr %24, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 2
  store i64 %27, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  store i64 %28, ptr %memberidx3.i.i.i, align 4
  store ptr %24, ptr %20, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %20, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i15 = getelementptr inbounds %ExpressionNode, ptr %20, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i15, align 4
  %memberidx2.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 3
  store ptr %arith.0, ptr %memberidx2.i16, align 8
  %memberidx3.i17 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i17, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 5
  store ptr %21, ptr %memberidx4.i, align 8
  %29 = load ptr, ptr %memberidx.i, align 8
  %30 = load i64, ptr %29, align 4
  switch i64 %30, label %ifend4.i22 [
    i64 46, label %Parser_is_bitshift_expr_op.exit23
    i64 47, label %Parser_is_bitshift_expr_op.exit23.fold.split
  ]

ifend4.i22:                                       ; preds = %Parser_advance.exit
  %31 = icmp eq i64 %30, 54
  %spec.select.i21 = select i1 %31, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit23

Parser_is_bitshift_expr_op.exit23.fold.split:     ; preds = %Parser_advance.exit
  br label %Parser_is_bitshift_expr_op.exit23

Parser_is_bitshift_expr_op.exit23:                ; preds = %Parser_advance.exit, %Parser_is_bitshift_expr_op.exit23.fold.split, %ifend4.i22
  %common.ret.op.i19 = phi i64 [ 13, %Parser_advance.exit ], [ %spec.select.i21, %ifend4.i22 ], [ 14, %Parser_is_bitshift_expr_op.exit23.fold.split ]
  %32 = icmp ne i64 %common.ret.op.i19, 0
  %33 = icmp ne i64 %30, 44
  %34 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i26 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 2
  %35 = load i64, ptr %memberidx3.i26, align 4
  %36 = icmp eq i64 %35, 0
  %37 = and i1 %33, %36
  %38 = and i1 %32, %37
  br i1 %38, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_is_bitshift_expr_op.exit23, %Parser_is_bitshift_expr_op.exit
  %arith.1 = phi ptr [ %2, %Parser_is_bitshift_expr_op.exit ], [ %20, %Parser_is_bitshift_expr_op.exit23 ]
  ret ptr %arith.1
}

define internal fastcc ptr @Parser_parse_comparasion_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 45
  br i1 %4, label %if.entry, label %ifend

common.ret:                                       ; preds = %Parser_is_comp_expr_op.exit47, %Parser_is_comp_expr_op.exit, %Parser_advance.exit
  %common.ret.op = phi ptr [ %14, %Parser_advance.exit ], [ %21, %Parser_is_comp_expr_op.exit ], [ %40, %Parser_is_comp_expr_op.exit47 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %5 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %12 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  %13 = tail call fastcc ptr @Parser_parse_comparasion_expression(ptr nonnull %0)
  %14 = tail call ptr @malloc(i32 40)
  %15 = load ptr, ptr %13, align 8
  %16 = tail call ptr @malloc(i32 32)
  %17 = load i64, ptr %5, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %15, i64 0, i32 1
  %18 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i15 = getelementptr inbounds %FloRange, ptr %5, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i15, align 4
  %memberidx3.i16 = getelementptr inbounds %FloRange, ptr %15, i64 0, i32 3
  %20 = load i64, ptr %memberidx3.i16, align 4
  store i64 %17, ptr %16, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 1
  store i64 %18, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 2
  store i64 %19, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 3
  store i64 %20, ptr %memberidx3.i.i, align 4
  %memberidx.i17 = getelementptr inbounds %UnaryExpressionNode, ptr %14, i64 0, i32 3
  store i64 7, ptr %memberidx.i17, align 4
  %memberidx1.i18 = getelementptr inbounds %UnaryExpressionNode, ptr %14, i64 0, i32 4
  store ptr %13, ptr %memberidx1.i18, align 8
  store ptr %16, ptr %14, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %14, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i19 = getelementptr inbounds %ExpressionNode, ptr %14, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i19, align 4
  br label %common.ret

ifend:                                            ; preds = %1
  %21 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %22 = load ptr, ptr %memberidx, align 8
  %23 = load i64, ptr %22, align 4
  switch i64 %23, label %ifend13.i [
    i64 39, label %Parser_is_comp_expr_op.exit
    i64 40, label %Parser_is_comp_expr_op.exit.fold.split
    i64 42, label %Parser_is_comp_expr_op.exit.fold.split54
    i64 41, label %Parser_is_comp_expr_op.exit.fold.split55
    i64 37, label %Parser_is_comp_expr_op.exit.fold.split56
  ]

ifend13.i:                                        ; preds = %ifend
  %24 = icmp eq i64 %23, 38
  %spec.select.i = select i1 %24, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split:           ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split54:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split55:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split56:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit:                      ; preds = %ifend, %Parser_is_comp_expr_op.exit.fold.split56, %Parser_is_comp_expr_op.exit.fold.split55, %Parser_is_comp_expr_op.exit.fold.split54, %Parser_is_comp_expr_op.exit.fold.split, %ifend13.i
  %op.promoted = phi i64 [ 7, %ifend ], [ %spec.select.i, %ifend13.i ], [ 9, %Parser_is_comp_expr_op.exit.fold.split ], [ 8, %Parser_is_comp_expr_op.exit.fold.split54 ], [ 10, %Parser_is_comp_expr_op.exit.fold.split55 ], [ 11, %Parser_is_comp_expr_op.exit.fold.split56 ]
  %25 = icmp ne i64 %op.promoted, 0
  %26 = icmp ne i64 %23, 44
  %memberidx2.i22 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i22, align 8
  %memberidx3.i23 = getelementptr inbounds %Array_FloError_, ptr %27, i64 0, i32 2
  %28 = load i64, ptr %memberidx3.i23, align 4
  %29 = icmp eq i64 %28, 0
  %30 = and i1 %26, %29
  %31 = and i1 %25, %30
  br i1 %31, label %while.entry.preheader, label %common.ret

while.entry.preheader:                            ; preds = %Parser_is_comp_expr_op.exit
  %memberidx.i24 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_comp_expr_op.exit47
  %common.ret.op.i4060 = phi i64 [ %op.promoted, %while.entry.preheader ], [ %common.ret.op.i40, %Parser_is_comp_expr_op.exit47 ]
  %32 = phi ptr [ %21, %while.entry.preheader ], [ %40, %Parser_is_comp_expr_op.exit47 ]
  %33 = load i64, ptr %memberidx.i24, align 4
  %34 = load ptr, ptr %0, align 8
  %memberidx2.i25 = getelementptr inbounds %Array_Token_, ptr %34, i64 0, i32 2
  %35 = load i64, ptr %memberidx2.i25, align 4
  %36 = icmp slt i64 %33, %35
  br i1 %36, label %if.entry.i29, label %Parser_advance.exit31

if.entry.i29:                                     ; preds = %while.entry
  %37 = add nsw i64 %33, 1
  store i64 %37, ptr %memberidx.i24, align 4
  %memberidx.i.i27 = getelementptr inbounds %Array_Token_, ptr %34, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i.i27, align 8
  %ptridx.i.i28 = getelementptr inbounds ptr, ptr %38, i64 %37
  %39 = load ptr, ptr %ptridx.i.i28, align 8
  store ptr %39, ptr %memberidx, align 8
  br label %Parser_advance.exit31

Parser_advance.exit31:                            ; preds = %while.entry, %if.entry.i29
  %40 = tail call ptr @malloc(i32 48)
  %41 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %42 = load ptr, ptr %32, align 8
  %43 = load ptr, ptr %41, align 8
  %44 = tail call ptr @malloc(i32 32)
  %45 = load i64, ptr %42, align 4
  %memberidx1.i.i32 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i.i32, align 4
  %memberidx2.i.i33 = getelementptr inbounds %FloRange, ptr %42, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i.i33, align 4
  %memberidx3.i.i34 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 3
  %48 = load i64, ptr %memberidx3.i.i34, align 4
  store i64 %45, ptr %44, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 2
  store i64 %47, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  store i64 %48, ptr %memberidx3.i.i.i, align 4
  store ptr %44, ptr %40, align 8
  %memberidx.i.i.i35 = getelementptr inbounds %StatementNode, ptr %40, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i35, align 4
  %memberidx.i.i36 = getelementptr inbounds %ExpressionNode, ptr %40, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i36, align 4
  %memberidx2.i37 = getelementptr inbounds %BinaryExpressionNode, ptr %40, i64 0, i32 3
  store ptr %32, ptr %memberidx2.i37, align 8
  %memberidx3.i38 = getelementptr inbounds %BinaryExpressionNode, ptr %40, i64 0, i32 4
  store i64 %common.ret.op.i4060, ptr %memberidx3.i38, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %40, i64 0, i32 5
  store ptr %41, ptr %memberidx4.i, align 8
  %49 = load ptr, ptr %memberidx, align 8
  %50 = load i64, ptr %49, align 4
  switch i64 %50, label %ifend13.i46 [
    i64 39, label %Parser_is_comp_expr_op.exit47
    i64 40, label %Parser_is_comp_expr_op.exit47.fold.split
    i64 42, label %Parser_is_comp_expr_op.exit47.fold.split57
    i64 41, label %Parser_is_comp_expr_op.exit47.fold.split58
    i64 37, label %Parser_is_comp_expr_op.exit47.fold.split59
  ]

ifend13.i46:                                      ; preds = %Parser_advance.exit31
  %51 = icmp eq i64 %50, 38
  %spec.select.i45 = select i1 %51, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit47

Parser_is_comp_expr_op.exit47.fold.split:         ; preds = %Parser_advance.exit31
  br label %Parser_is_comp_expr_op.exit47

Parser_is_comp_expr_op.exit47.fold.split57:       ; preds = %Parser_advance.exit31
  br label %Parser_is_comp_expr_op.exit47

Parser_is_comp_expr_op.exit47.fold.split58:       ; preds = %Parser_advance.exit31
  br label %Parser_is_comp_expr_op.exit47

Parser_is_comp_expr_op.exit47.fold.split59:       ; preds = %Parser_advance.exit31
  br label %Parser_is_comp_expr_op.exit47

Parser_is_comp_expr_op.exit47:                    ; preds = %Parser_advance.exit31, %Parser_is_comp_expr_op.exit47.fold.split59, %Parser_is_comp_expr_op.exit47.fold.split58, %Parser_is_comp_expr_op.exit47.fold.split57, %Parser_is_comp_expr_op.exit47.fold.split, %ifend13.i46
  %common.ret.op.i40 = phi i64 [ 7, %Parser_advance.exit31 ], [ %spec.select.i45, %ifend13.i46 ], [ 9, %Parser_is_comp_expr_op.exit47.fold.split ], [ 8, %Parser_is_comp_expr_op.exit47.fold.split57 ], [ 10, %Parser_is_comp_expr_op.exit47.fold.split58 ], [ 11, %Parser_is_comp_expr_op.exit47.fold.split59 ]
  %52 = icmp ne i64 %common.ret.op.i40, 0
  %53 = icmp ne i64 %50, 44
  %54 = load ptr, ptr %memberidx2.i22, align 8
  %memberidx3.i50 = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 2
  %55 = load i64, ptr %memberidx3.i50, align 4
  %56 = icmp eq i64 %55, 0
  %57 = and i1 %53, %56
  %58 = and i1 %52, %57
  br i1 %58, label %while.entry, label %common.ret
}

define internal fastcc ptr @Parser_parse_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_comparasion_expression(ptr %0)
  %memberidx.i.i19.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i.i19.i, align 8
  %4 = load i64, ptr %3, align 4
  %5 = and i64 %4, -2
  %6 = icmp eq i64 %5, 52
  %7 = icmp ne i64 %4, 44
  %memberidx2.i.i20.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i.i21.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx3.i.i21.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.i.i.preheader, label %Parser_parse_bit_expression.exit.i

while.entry.i.i.preheader:                        ; preds = %1
  %13 = icmp eq i64 %4, 53
  %14 = icmp eq i64 %4, 52
  %spec.select.i.i.i = select i1 %14, i64 16, i64 0
  %common.ret.op.i.i.i = select i1 %13, i64 15, i64 %spec.select.i.i.i
  %memberidx.i11.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i.i

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i35.i
  %cmp.0.i.i = phi ptr [ %22, %Parser_advance.exit.i35.i ], [ %2, %while.entry.i.i.preheader ]
  %op.0.i.i = phi i64 [ %common.ret.op.i19.i.i, %Parser_advance.exit.i35.i ], [ %common.ret.op.i.i.i, %while.entry.i.i.preheader ]
  %15 = load i64, ptr %memberidx.i11.i.i, align 4
  %16 = load ptr, ptr %0, align 8
  %memberidx2.i12.i22.i = getelementptr inbounds %Array_Token_, ptr %16, i64 0, i32 2
  %17 = load i64, ptr %memberidx2.i12.i22.i, align 4
  %18 = icmp slt i64 %15, %17
  br i1 %18, label %if.entry.i.i26.i, label %Parser_advance.exit.i35.i

if.entry.i.i26.i:                                 ; preds = %while.entry.i.i
  %19 = add nsw i64 %15, 1
  store i64 %19, ptr %memberidx.i11.i.i, align 4
  %memberidx.i.i.i24.i = getelementptr inbounds %Array_Token_, ptr %16, i64 0, i32 1
  %20 = load ptr, ptr %memberidx.i.i.i24.i, align 8
  %ptridx.i.i.i25.i = getelementptr inbounds ptr, ptr %20, i64 %19
  %21 = load ptr, ptr %ptridx.i.i.i25.i, align 8
  store ptr %21, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit.i35.i

Parser_advance.exit.i35.i:                        ; preds = %if.entry.i.i26.i, %while.entry.i.i
  %22 = tail call ptr @malloc(i32 48)
  %23 = tail call fastcc ptr @Parser_parse_comparasion_expression(ptr nonnull %0)
  %24 = load ptr, ptr %cmp.0.i.i, align 8
  %25 = load ptr, ptr %23, align 8
  %26 = tail call ptr @malloc(i32 32)
  %27 = load i64, ptr %24, align 4
  %memberidx1.i.i.i27.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  %28 = load i64, ptr %memberidx1.i.i.i27.i, align 4
  %memberidx2.i.i.i28.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i.i.i28.i, align 4
  %memberidx3.i.i.i29.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  %30 = load i64, ptr %memberidx3.i.i.i29.i, align 4
  store i64 %27, ptr %26, align 4
  %memberidx1.i.i.i.i30.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 1
  store i64 %28, ptr %memberidx1.i.i.i.i30.i, align 4
  %memberidx2.i.i.i.i31.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 2
  store i64 %29, ptr %memberidx2.i.i.i.i31.i, align 4
  %memberidx3.i.i.i.i32.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 3
  store i64 %30, ptr %memberidx3.i.i.i.i32.i, align 4
  store ptr %26, ptr %22, align 8
  %memberidx.i.i.i.i33.i = getelementptr inbounds %StatementNode, ptr %22, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i33.i, align 4
  %memberidx.i.i14.i.i = getelementptr inbounds %ExpressionNode, ptr %22, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i14.i.i, align 4
  %memberidx2.i15.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %22, i64 0, i32 3
  store ptr %cmp.0.i.i, ptr %memberidx2.i15.i.i, align 8
  %memberidx3.i16.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %22, i64 0, i32 4
  store i64 %op.0.i.i, ptr %memberidx3.i16.i.i, align 4
  %memberidx4.i.i34.i = getelementptr inbounds %BinaryExpressionNode, ptr %22, i64 0, i32 5
  store ptr %23, ptr %memberidx4.i.i34.i, align 8
  %31 = load ptr, ptr %memberidx.i.i19.i, align 8
  %32 = load i64, ptr %31, align 4
  %33 = icmp eq i64 %32, 53
  %34 = icmp eq i64 %32, 52
  %spec.select.i18.i.i = select i1 %34, i64 16, i64 0
  %common.ret.op.i19.i.i = select i1 %33, i64 15, i64 %spec.select.i18.i.i
  %35 = and i64 %32, -2
  %36 = icmp eq i64 %35, 52
  %37 = icmp ne i64 %32, 44
  %38 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i22.i.i = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 2
  %39 = load i64, ptr %memberidx3.i22.i.i, align 4
  %40 = icmp eq i64 %39, 0
  %41 = and i1 %37, %40
  %42 = and i1 %36, %41
  br i1 %42, label %while.entry.i.i, label %Parser_parse_bit_expression.exit.i

Parser_parse_bit_expression.exit.i:               ; preds = %Parser_advance.exit.i35.i, %1
  %43 = phi i64 [ %9, %1 ], [ %39, %Parser_advance.exit.i35.i ]
  %44 = phi i64 [ %4, %1 ], [ %32, %Parser_advance.exit.i35.i ]
  %cmp.1.i.i = phi ptr [ %2, %1 ], [ %22, %Parser_advance.exit.i35.i ]
  %45 = icmp eq i64 %44, 49
  %46 = icmp eq i64 %43, 0
  %47 = and i1 %45, %46
  br i1 %47, label %ifend.i.i, label %Parser_parse_range_expression.exit.i

ifend.i.i:                                        ; preds = %Parser_parse_bit_expression.exit.i
  %memberidx.i8.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %48 = load i64, ptr %memberidx.i8.i.i, align 4
  %49 = load ptr, ptr %0, align 8
  %memberidx2.i9.i.i = getelementptr inbounds %Array_Token_, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i9.i.i, align 4
  %51 = icmp slt i64 %48, %50
  br i1 %51, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %ifend.i.i
  %52 = add nsw i64 %48, 1
  store i64 %52, ptr %memberidx.i8.i.i, align 4
  %memberidx.i.i.i14.i = getelementptr inbounds %Array_Token_, ptr %49, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i.i.i14.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %53, i64 %52
  %54 = load ptr, ptr %ptridx.i.i.i.i, align 8
  store ptr %54, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %ifend.i.i
  %55 = tail call ptr @malloc(i32 48)
  %56 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %57 = load ptr, ptr %cmp.1.i.i, align 8
  %58 = load ptr, ptr %56, align 8
  %59 = tail call ptr @malloc(i32 32)
  %60 = load i64, ptr %57, align 4
  %memberidx1.i.i.i15.i = getelementptr inbounds %FloRange, ptr %58, i64 0, i32 1
  %61 = load i64, ptr %memberidx1.i.i.i15.i, align 4
  %memberidx2.i.i.i16.i = getelementptr inbounds %FloRange, ptr %57, i64 0, i32 2
  %62 = load i64, ptr %memberidx2.i.i.i16.i, align 4
  %memberidx3.i.i.i17.i = getelementptr inbounds %FloRange, ptr %58, i64 0, i32 3
  %63 = load i64, ptr %memberidx3.i.i.i17.i, align 4
  store i64 %60, ptr %59, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %59, i64 0, i32 1
  store i64 %61, ptr %memberidx1.i.i.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %59, i64 0, i32 2
  store i64 %62, ptr %memberidx2.i.i.i.i.i, align 4
  %memberidx3.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %59, i64 0, i32 3
  store i64 %63, ptr %memberidx3.i.i.i.i.i, align 4
  store ptr %59, ptr %55, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %StatementNode, ptr %55, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i.i, align 4
  %memberidx.i.i11.i.i = getelementptr inbounds %ExpressionNode, ptr %55, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i11.i.i, align 4
  %memberidx2.i12.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %55, i64 0, i32 3
  store ptr %cmp.1.i.i, ptr %memberidx2.i12.i.i, align 8
  %memberidx3.i13.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %55, i64 0, i32 4
  store i64 31, ptr %memberidx3.i13.i.i, align 4
  %memberidx4.i.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %55, i64 0, i32 5
  store ptr %56, ptr %memberidx4.i.i.i, align 8
  %.pre = load ptr, ptr %memberidx.i.i19.i, align 8
  %.pre84 = load i64, ptr %.pre, align 4
  br label %Parser_parse_range_expression.exit.i

Parser_parse_range_expression.exit.i:             ; preds = %Parser_advance.exit.i.i, %Parser_parse_bit_expression.exit.i
  %64 = phi i64 [ %.pre84, %Parser_advance.exit.i.i ], [ %44, %Parser_parse_bit_expression.exit.i ]
  %common.ret.op.i.i = phi ptr [ %55, %Parser_advance.exit.i.i ], [ %cmp.1.i.i, %Parser_parse_bit_expression.exit.i ]
  %.not.i = icmp eq i64 %64, 87
  br i1 %.not.i, label %ifend.i, label %Parser_parse_typecast_expression.exit

ifend.i:                                          ; preds = %Parser_parse_range_expression.exit.i
  %memberidx.i.i69 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %65 = load i64, ptr %memberidx.i.i69, align 4
  %66 = load ptr, ptr %0, align 8
  %memberidx2.i.i70 = getelementptr inbounds %Array_Token_, ptr %66, i64 0, i32 2
  %67 = load i64, ptr %memberidx2.i.i70, align 4
  %68 = icmp slt i64 %65, %67
  br i1 %68, label %if.entry.i.i74, label %Parser_advance.exit.i82

if.entry.i.i74:                                   ; preds = %ifend.i
  %69 = add nsw i64 %65, 1
  store i64 %69, ptr %memberidx.i.i69, align 4
  %memberidx.i.i.i72 = getelementptr inbounds %Array_Token_, ptr %66, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i.i72, align 8
  %ptridx.i.i.i73 = getelementptr inbounds ptr, ptr %70, i64 %69
  %71 = load ptr, ptr %ptridx.i.i.i73, align 8
  store ptr %71, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit.i82

Parser_advance.exit.i82:                          ; preds = %if.entry.i.i74, %ifend.i
  %72 = tail call ptr @malloc(i32 40)
  %73 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %74 = load ptr, ptr %common.ret.op.i.i, align 8
  %75 = load ptr, ptr %73, align 8
  %76 = tail call ptr @malloc(i32 32)
  %77 = load i64, ptr %74, align 4
  %memberidx1.i.i.i75 = getelementptr inbounds %FloRange, ptr %75, i64 0, i32 1
  %78 = load i64, ptr %memberidx1.i.i.i75, align 4
  %memberidx2.i.i.i76 = getelementptr inbounds %FloRange, ptr %74, i64 0, i32 2
  %79 = load i64, ptr %memberidx2.i.i.i76, align 4
  %memberidx3.i.i.i77 = getelementptr inbounds %FloRange, ptr %75, i64 0, i32 3
  %80 = load i64, ptr %memberidx3.i.i.i77, align 4
  store i64 %77, ptr %76, align 4
  %memberidx1.i.i.i.i78 = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 1
  store i64 %78, ptr %memberidx1.i.i.i.i78, align 4
  %memberidx2.i.i.i.i79 = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 2
  store i64 %79, ptr %memberidx2.i.i.i.i79, align 4
  %memberidx3.i.i.i.i80 = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 3
  store i64 %80, ptr %memberidx3.i.i.i.i80, align 4
  store ptr %76, ptr %72, align 8
  %memberidx.i.i.i.i81 = getelementptr inbounds %StatementNode, ptr %72, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i81, align 4
  %memberidx.i.i6.i = getelementptr inbounds %ExpressionNode, ptr %72, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %TypeCastExpressionNode, ptr %72, i64 0, i32 3
  store ptr %common.ret.op.i.i, ptr %memberidx2.i7.i, align 8
  %memberidx3.i8.i = getelementptr inbounds %TypeCastExpressionNode, ptr %72, i64 0, i32 4
  store ptr %73, ptr %memberidx3.i8.i, align 8
  %.pre85 = load ptr, ptr %memberidx.i.i19.i, align 8
  %.pre86 = load i64, ptr %.pre85, align 4
  br label %Parser_parse_typecast_expression.exit

Parser_parse_typecast_expression.exit:            ; preds = %Parser_parse_range_expression.exit.i, %Parser_advance.exit.i82
  %81 = phi i64 [ %.pre86, %Parser_advance.exit.i82 ], [ %64, %Parser_parse_range_expression.exit.i ]
  %common.ret.op.i68 = phi ptr [ %72, %Parser_advance.exit.i82 ], [ %common.ret.op.i.i, %Parser_parse_range_expression.exit.i ]
  %82 = icmp eq i64 %81, 34
  %83 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i.i48 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 2
  %84 = load i64, ptr %memberidx3.i.i48, align 4
  %85 = icmp eq i64 %84, 0
  %86 = and i1 %82, %85
  br i1 %86, label %ifend.i51, label %Parser_parse_ternary_expression.exit

ifend.i51:                                        ; preds = %Parser_parse_typecast_expression.exit
  %memberidx.i10.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %87 = load i64, ptr %memberidx.i10.i, align 4
  %88 = load ptr, ptr %0, align 8
  %memberidx2.i11.i = getelementptr inbounds %Array_Token_, ptr %88, i64 0, i32 2
  %89 = load i64, ptr %memberidx2.i11.i, align 4
  %90 = icmp slt i64 %87, %89
  br i1 %90, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %ifend.i51
  %91 = add nsw i64 %87, 1
  store i64 %91, ptr %memberidx.i10.i, align 4
  %memberidx.i.i.i52 = getelementptr inbounds %Array_Token_, ptr %88, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i.i.i52, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %92, i64 %91
  %93 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %93, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %ifend.i51
  %94 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %95 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %96 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %97 = tail call ptr @malloc(i32 48)
  %98 = load ptr, ptr %common.ret.op.i68, align 8
  %99 = load ptr, ptr %96, align 8
  %100 = tail call ptr @malloc(i32 32)
  %101 = load i64, ptr %98, align 4
  %memberidx1.i.i.i53 = getelementptr inbounds %FloRange, ptr %99, i64 0, i32 1
  %102 = load i64, ptr %memberidx1.i.i.i53, align 4
  %memberidx2.i.i.i54 = getelementptr inbounds %FloRange, ptr %98, i64 0, i32 2
  %103 = load i64, ptr %memberidx2.i.i.i54, align 4
  %memberidx3.i.i.i55 = getelementptr inbounds %FloRange, ptr %99, i64 0, i32 3
  %104 = load i64, ptr %memberidx3.i.i.i55, align 4
  store i64 %101, ptr %100, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 1
  store i64 %102, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 2
  store i64 %103, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 3
  store i64 %104, ptr %memberidx3.i.i.i.i, align 4
  store ptr %100, ptr %97, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %97, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i13.i = getelementptr inbounds %ExpressionNode, ptr %97, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i13.i, align 4
  %memberidx2.i14.i = getelementptr inbounds %TernaryExpressionNode, ptr %97, i64 0, i32 3
  store ptr %common.ret.op.i68, ptr %memberidx2.i14.i, align 8
  %memberidx3.i15.i = getelementptr inbounds %TernaryExpressionNode, ptr %97, i64 0, i32 4
  store ptr %94, ptr %memberidx3.i15.i, align 8
  %memberidx4.i.i = getelementptr inbounds %TernaryExpressionNode, ptr %97, i64 0, i32 5
  store ptr %96, ptr %memberidx4.i.i, align 8
  %105 = load ptr, ptr %94, align 8
  %106 = load ptr, ptr %96, align 8
  %107 = tail call ptr @malloc(i32 32)
  %108 = load i64, ptr %105, align 4
  %memberidx1.i15.i.i = getelementptr inbounds %FloRange, ptr %106, i64 0, i32 1
  %109 = load i64, ptr %memberidx1.i15.i.i, align 4
  %memberidx2.i16.i.i = getelementptr inbounds %FloRange, ptr %105, i64 0, i32 2
  %110 = load i64, ptr %memberidx2.i16.i.i, align 4
  %memberidx3.i17.i.i = getelementptr inbounds %FloRange, ptr %106, i64 0, i32 3
  %111 = load i64, ptr %memberidx3.i17.i.i, align 4
  store i64 %108, ptr %107, align 4
  %memberidx1.i.i18.i.i = getelementptr inbounds %FloRange, ptr %107, i64 0, i32 1
  store i64 %109, ptr %memberidx1.i.i18.i.i, align 4
  %memberidx2.i.i19.i.i = getelementptr inbounds %FloRange, ptr %107, i64 0, i32 2
  store i64 %110, ptr %memberidx2.i.i19.i.i, align 4
  %memberidx3.i.i20.i.i = getelementptr inbounds %FloRange, ptr %107, i64 0, i32 3
  store i64 %111, ptr %memberidx3.i.i20.i.i, align 4
  store ptr %107, ptr %97, align 8
  %.pre87 = load ptr, ptr %memberidx.i.i19.i, align 8
  %.pre88 = load i64, ptr %.pre87, align 4
  %.pre89 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre89, i64 0, i32 2
  %.pre90 = load i64, ptr %memberidx3.i.phi.trans.insert, align 4
  br label %Parser_parse_ternary_expression.exit

Parser_parse_ternary_expression.exit:             ; preds = %Parser_parse_typecast_expression.exit, %Parser_advance.exit.i
  %112 = phi i64 [ %.pre90, %Parser_advance.exit.i ], [ %84, %Parser_parse_typecast_expression.exit ]
  %113 = phi i64 [ %.pre88, %Parser_advance.exit.i ], [ %81, %Parser_parse_typecast_expression.exit ]
  %common.ret.op.i49 = phi ptr [ %97, %Parser_advance.exit.i ], [ %common.ret.op.i68, %Parser_parse_typecast_expression.exit ]
  %114 = icmp eq i64 %113, 82
  %115 = icmp eq i64 %112, 0
  %116 = and i1 %114, %115
  br i1 %116, label %if.entry, label %ifend

common.ret83.sink.split:                          ; preds = %Parser_advance.exit, %Parser_advance.exit33
  %.sink97 = phi ptr [ %145, %Parser_advance.exit33 ], [ %124, %Parser_advance.exit ]
  %common.ret.op.i.sink = phi i64 [ %common.ret.op.i, %Parser_advance.exit33 ], [ 18, %Parser_advance.exit ]
  %.sink = phi ptr [ %146, %Parser_advance.exit33 ], [ %125, %Parser_advance.exit ]
  %memberidx.i.i.i40 = getelementptr inbounds %StatementNode, ptr %.sink97, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i40, align 4
  %memberidx.i.i41 = getelementptr inbounds %ExpressionNode, ptr %.sink97, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i41, align 4
  %memberidx2.i42 = getelementptr inbounds %BinaryExpressionNode, ptr %.sink97, i64 0, i32 3
  store ptr %common.ret.op.i49, ptr %memberidx2.i42, align 8
  %memberidx3.i43 = getelementptr inbounds %BinaryExpressionNode, ptr %.sink97, i64 0, i32 4
  store i64 %common.ret.op.i.sink, ptr %memberidx3.i43, align 4
  %memberidx4.i44 = getelementptr inbounds %BinaryExpressionNode, ptr %.sink97, i64 0, i32 5
  store ptr %.sink, ptr %memberidx4.i44, align 8
  br label %common.ret83

common.ret83:                                     ; preds = %common.ret83.sink.split, %Parser_is_assign_op.exit
  %common.ret83.op = phi ptr [ %common.ret.op.i49, %Parser_is_assign_op.exit ], [ %.sink97, %common.ret83.sink.split ]
  ret ptr %common.ret83.op

if.entry:                                         ; preds = %Parser_parse_ternary_expression.exit
  %memberidx.i16 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %117 = load i64, ptr %memberidx.i16, align 4
  %118 = load ptr, ptr %0, align 8
  %memberidx2.i17 = getelementptr inbounds %Array_Token_, ptr %118, i64 0, i32 2
  %119 = load i64, ptr %memberidx2.i17, align 4
  %120 = icmp slt i64 %117, %119
  br i1 %120, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %121 = add nsw i64 %117, 1
  store i64 %121, ptr %memberidx.i16, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %118, i64 0, i32 1
  %122 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %122, i64 %121
  %123 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %123, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  %124 = tail call ptr @malloc(i32 48)
  %125 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %126 = load ptr, ptr %common.ret.op.i49, align 8
  %127 = load ptr, ptr %125, align 8
  %128 = tail call ptr @malloc(i32 32)
  %129 = load i64, ptr %126, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %127, i64 0, i32 1
  %130 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %126, i64 0, i32 2
  %131 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %127, i64 0, i32 3
  %132 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %129, ptr %128, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %128, i64 0, i32 1
  store i64 %130, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %128, i64 0, i32 2
  store i64 %131, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %128, i64 0, i32 3
  store i64 %132, ptr %memberidx3.i.i.i, align 4
  store ptr %128, ptr %124, align 8
  br label %common.ret83.sink.split

ifend:                                            ; preds = %Parser_parse_ternary_expression.exit
  switch i64 %113, label %ifend51.i [
    i64 36, label %Parser_is_assign_op.exit
    i64 10, label %Parser_is_assign_op.exit.fold.split
    i64 11, label %Parser_is_assign_op.exit.fold.split59
    i64 12, label %Parser_is_assign_op.exit.fold.split60
    i64 13, label %Parser_is_assign_op.exit.fold.split61
    i64 14, label %Parser_is_assign_op.exit.fold.split62
    i64 15, label %Parser_is_assign_op.exit.fold.split63
    i64 16, label %Parser_is_assign_op.exit.fold.split64
    i64 17, label %Parser_is_assign_op.exit.fold.split65
    i64 18, label %Parser_is_assign_op.exit.fold.split66
    i64 20, label %Parser_is_assign_op.exit.fold.split67
  ]

ifend51.i:                                        ; preds = %ifend
  %133 = icmp eq i64 %113, 19
  %spec.select.i = select i1 %133, i64 30, i64 0
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split:              ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split59:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split60:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split61:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split62:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split63:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split64:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split65:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split66:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split67:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit:                         ; preds = %ifend, %Parser_is_assign_op.exit.fold.split67, %Parser_is_assign_op.exit.fold.split66, %Parser_is_assign_op.exit.fold.split65, %Parser_is_assign_op.exit.fold.split64, %Parser_is_assign_op.exit.fold.split63, %Parser_is_assign_op.exit.fold.split62, %Parser_is_assign_op.exit.fold.split61, %Parser_is_assign_op.exit.fold.split60, %Parser_is_assign_op.exit.fold.split59, %Parser_is_assign_op.exit.fold.split, %ifend51.i
  %common.ret.op.i = phi i64 [ 19, %ifend ], [ %spec.select.i, %ifend51.i ], [ 22, %Parser_is_assign_op.exit.fold.split ], [ 21, %Parser_is_assign_op.exit.fold.split59 ], [ 20, %Parser_is_assign_op.exit.fold.split60 ], [ 23, %Parser_is_assign_op.exit.fold.split61 ], [ 24, %Parser_is_assign_op.exit.fold.split62 ], [ 25, %Parser_is_assign_op.exit.fold.split63 ], [ 26, %Parser_is_assign_op.exit.fold.split64 ], [ 27, %Parser_is_assign_op.exit.fold.split65 ], [ 28, %Parser_is_assign_op.exit.fold.split66 ], [ 29, %Parser_is_assign_op.exit.fold.split67 ]
  %134 = icmp ne i64 %common.ret.op.i, 0
  %135 = icmp ne i64 %113, 44
  %136 = and i1 %135, %115
  %137 = and i1 %136, %134
  br i1 %137, label %ifend4, label %common.ret83

ifend4:                                           ; preds = %Parser_is_assign_op.exit
  %memberidx.i26 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %138 = load i64, ptr %memberidx.i26, align 4
  %139 = load ptr, ptr %0, align 8
  %memberidx2.i27 = getelementptr inbounds %Array_Token_, ptr %139, i64 0, i32 2
  %140 = load i64, ptr %memberidx2.i27, align 4
  %141 = icmp slt i64 %138, %140
  br i1 %141, label %if.entry.i31, label %Parser_advance.exit33

if.entry.i31:                                     ; preds = %ifend4
  %142 = add nsw i64 %138, 1
  store i64 %142, ptr %memberidx.i26, align 4
  %memberidx.i.i29 = getelementptr inbounds %Array_Token_, ptr %139, i64 0, i32 1
  %143 = load ptr, ptr %memberidx.i.i29, align 8
  %ptridx.i.i30 = getelementptr inbounds ptr, ptr %143, i64 %142
  %144 = load ptr, ptr %ptridx.i.i30, align 8
  store ptr %144, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit33

Parser_advance.exit33:                            ; preds = %ifend4, %if.entry.i31
  %145 = tail call ptr @malloc(i32 48)
  %146 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %147 = load ptr, ptr %common.ret.op.i49, align 8
  %148 = load ptr, ptr %146, align 8
  %149 = tail call ptr @malloc(i32 32)
  %150 = load i64, ptr %147, align 4
  %memberidx1.i.i34 = getelementptr inbounds %FloRange, ptr %148, i64 0, i32 1
  %151 = load i64, ptr %memberidx1.i.i34, align 4
  %memberidx2.i.i35 = getelementptr inbounds %FloRange, ptr %147, i64 0, i32 2
  %152 = load i64, ptr %memberidx2.i.i35, align 4
  %memberidx3.i.i36 = getelementptr inbounds %FloRange, ptr %148, i64 0, i32 3
  %153 = load i64, ptr %memberidx3.i.i36, align 4
  store i64 %150, ptr %149, align 4
  %memberidx1.i.i.i37 = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 1
  store i64 %151, ptr %memberidx1.i.i.i37, align 4
  %memberidx2.i.i.i38 = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 2
  store i64 %152, ptr %memberidx2.i.i.i38, align 4
  %memberidx3.i.i.i39 = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 3
  store i64 %153, ptr %memberidx3.i.i.i39, align 4
  store ptr %149, ptr %145, align 8
  br label %common.ret83.sink.split
}

define internal fastcc void @Map_string_VarId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx6 = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx6, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.037 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.037
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.037, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %storemerge36 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %storemerge36
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_VarId_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %storemerge36, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_VarId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_VarId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = srem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i34 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %13, %while.entry.preheader ], [ %26, %ifend9 ]
  %16 = phi i64 [ %11, %while.entry.preheader ], [ %27, %ifend9 ]
  %17 = phi ptr [ %14, %while.entry.preheader ], [ %30, %ifend9 ]
  %18 = phi i64 [ %12, %while.entry.preheader ], [ %29, %ifend9 ]
  %19 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i34, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.thread35, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend9

while.end.thread35:                               ; preds = %ifend.i
  %.pre40 = load ptr, ptr %0, align 8
  br label %ifend15

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %26 = phi ptr [ %.pre39, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %28 = add i64 %18, 1
  %29 = srem i64 %28, %27
  %ptridx12 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx12, align 8
  %.not33 = icmp eq ptr %30, null
  br i1 %.not33, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %31 = phi ptr [ %13, %ifend ], [ %26, %ifend9 ]
  %32 = phi i64 [ %12, %ifend ], [ %29, %ifend9 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend15

ifend15:                                          ; preds = %while.end.thread35, %if.entry13
  %35 = phi ptr [ %.pre40, %while.end.thread35 ], [ %31, %if.entry13 ]
  %36 = phi i64 [ %18, %while.end.thread35 ], [ %32, %if.entry13 ]
  %ptridx19 = getelementptr inbounds ptr, ptr %35, i64 %36
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_VarId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @21, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = sext i8 %13 to i64
  %15 = add i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  %20 = call i64 @llvm.abs.i64(i64 %hash.0.lcssa, i1 false)
  ret i64 %20
}

define internal fastcc void @Map_string_EnumId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx6 = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx6, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.037 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.037
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.037, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %storemerge36 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %storemerge36
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_EnumId_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %storemerge36, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_EnumId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_EnumId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_EnumId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = srem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i34 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %13, %while.entry.preheader ], [ %26, %ifend9 ]
  %16 = phi i64 [ %11, %while.entry.preheader ], [ %27, %ifend9 ]
  %17 = phi ptr [ %14, %while.entry.preheader ], [ %30, %ifend9 ]
  %18 = phi i64 [ %12, %while.entry.preheader ], [ %29, %ifend9 ]
  %19 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i34, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.thread35, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend9

while.end.thread35:                               ; preds = %ifend.i
  %.pre40 = load ptr, ptr %0, align 8
  br label %ifend15

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %26 = phi ptr [ %.pre39, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %28 = add i64 %18, 1
  %29 = srem i64 %28, %27
  %ptridx12 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx12, align 8
  %.not33 = icmp eq ptr %30, null
  br i1 %.not33, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %31 = phi ptr [ %13, %ifend ], [ %26, %ifend9 ]
  %32 = phi i64 [ %12, %ifend ], [ %29, %ifend9 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend15

ifend15:                                          ; preds = %while.end.thread35, %if.entry13
  %35 = phi ptr [ %.pre40, %while.end.thread35 ], [ %31, %if.entry13 ]
  %36 = phi i64 [ %18, %while.end.thread35 ], [ %32, %if.entry13 ]
  %ptridx19 = getelementptr inbounds ptr, ptr %35, i64 %36
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_EnumId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_EnumId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @21, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = sext i8 %13 to i64
  %15 = add i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  %20 = call i64 @llvm.abs.i64(i64 %hash.0.lcssa, i1 false)
  ret i64 %20
}

define internal fastcc void @Map_string_Type__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx6 = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx6, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.037 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.037
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.037, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %storemerge36 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %storemerge36
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_Type_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %storemerge36, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_Type____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_Type__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_Type__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = srem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i34 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %13, %while.entry.preheader ], [ %26, %ifend9 ]
  %16 = phi i64 [ %11, %while.entry.preheader ], [ %27, %ifend9 ]
  %17 = phi ptr [ %14, %while.entry.preheader ], [ %30, %ifend9 ]
  %18 = phi i64 [ %12, %while.entry.preheader ], [ %29, %ifend9 ]
  %19 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i34, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.thread35, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend9

while.end.thread35:                               ; preds = %ifend.i
  %.pre40 = load ptr, ptr %0, align 8
  br label %ifend15

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %26 = phi ptr [ %.pre39, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %28 = add i64 %18, 1
  %29 = srem i64 %28, %27
  %ptridx12 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx12, align 8
  %.not33 = icmp eq ptr %30, null
  br i1 %.not33, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %31 = phi ptr [ %13, %ifend ], [ %26, %ifend9 ]
  %32 = phi i64 [ %12, %ifend ], [ %29, %ifend9 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend15

ifend15:                                          ; preds = %while.end.thread35, %if.entry13
  %35 = phi ptr [ %.pre40, %while.end.thread35 ], [ %31, %if.entry13 ]
  %36 = phi i64 [ %18, %while.end.thread35 ], [ %32, %if.entry13 ]
  %ptridx19 = getelementptr inbounds ptr, ptr %35, i64 %36
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_Type_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_Type__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @21, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = sext i8 %13 to i64
  %15 = add i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  %20 = call i64 @llvm.abs.i64(i64 %hash.0.lcssa, i1 false)
  ret i64 %20
}

define internal fastcc void @Map_string_ClassId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx6 = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx6, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.037 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.037
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.037, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %storemerge36 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %storemerge36
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_ClassId_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %storemerge36, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_ClassId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_ClassId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = srem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i34 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %13, %while.entry.preheader ], [ %26, %ifend9 ]
  %16 = phi i64 [ %11, %while.entry.preheader ], [ %27, %ifend9 ]
  %17 = phi ptr [ %14, %while.entry.preheader ], [ %30, %ifend9 ]
  %18 = phi i64 [ %12, %while.entry.preheader ], [ %29, %ifend9 ]
  %19 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i34, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.thread35, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend9

while.end.thread35:                               ; preds = %ifend.i
  %.pre40 = load ptr, ptr %0, align 8
  br label %ifend15

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %26 = phi ptr [ %.pre39, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %28 = add i64 %18, 1
  %29 = srem i64 %28, %27
  %ptridx12 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx12, align 8
  %.not33 = icmp eq ptr %30, null
  br i1 %.not33, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %31 = phi ptr [ %13, %ifend ], [ %26, %ifend9 ]
  %32 = phi i64 [ %12, %ifend ], [ %29, %ifend9 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend15

ifend15:                                          ; preds = %while.end.thread35, %if.entry13
  %35 = phi ptr [ %.pre40, %while.end.thread35 ], [ %31, %if.entry13 ]
  %36 = phi i64 [ %18, %while.end.thread35 ], [ %32, %if.entry13 ]
  %ptridx19 = getelementptr inbounds ptr, ptr %35, i64 %36
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_ClassId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_ClassId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @21, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = sext i8 %13 to i64
  %15 = add i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  %20 = call i64 @llvm.abs.i64(i64 %hash.0.lcssa, i1 false)
  ret i64 %20
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Scope__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Scope__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_VarDeclaration__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_VarDeclaration__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Var__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Var__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ConstDeclaration__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ConstDeclaration__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc void @Map_string_PropId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx6 = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx6, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.037 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.037
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.037, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %storemerge36 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %storemerge36
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_PropId_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_PropId____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %storemerge36, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_PropId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_PropId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = srem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i34 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %13, %while.entry.preheader ], [ %26, %ifend9 ]
  %16 = phi i64 [ %11, %while.entry.preheader ], [ %27, %ifend9 ]
  %17 = phi ptr [ %14, %while.entry.preheader ], [ %30, %ifend9 ]
  %18 = phi i64 [ %12, %while.entry.preheader ], [ %29, %ifend9 ]
  %19 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i34, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.thread35, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend9

while.end.thread35:                               ; preds = %ifend.i
  %.pre40 = load ptr, ptr %0, align 8
  br label %ifend15

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %26 = phi ptr [ %.pre39, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %28 = add i64 %18, 1
  %29 = srem i64 %28, %27
  %ptridx12 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx12, align 8
  %.not33 = icmp eq ptr %30, null
  br i1 %.not33, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %31 = phi ptr [ %13, %ifend ], [ %26, %ifend9 ]
  %32 = phi i64 [ %12, %ifend ], [ %29, %ifend9 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend15

ifend15:                                          ; preds = %while.end.thread35, %if.entry13
  %35 = phi ptr [ %.pre40, %while.end.thread35 ], [ %31, %if.entry13 ]
  %36 = phi i64 [ %18, %while.end.thread35 ], [ %32, %if.entry13 ]
  %ptridx19 = getelementptr inbounds ptr, ptr %35, i64 %36
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_PropId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @21, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = sext i8 %13 to i64
  %15 = add i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  %20 = call i64 @llvm.abs.i64(i64 %hash.0.lcssa, i1 false)
  ret i64 %20
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_EnumField__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_EnumField__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Enum__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Enum__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Const__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Const__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FunctionArg__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FunctionArg__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Statement__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Statement__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Type__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Type__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ClassMethod__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ClassMethod__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ClassField__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ClassField__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Class__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Class__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Function__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Function__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Module__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Module__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc ptr @TypeChecker_check_module(ptr %0, ptr nocapture readonly %1, ptr %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  store i1 false, ptr %memberidx, align 1
  %memberidx1 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %3 = load i64, ptr %memberidx1, align 4
  %memberidx2 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %4 = load ptr, ptr %memberidx2, align 8
  %5 = tail call ptr @malloc(i32 80)
  %memberidx.i184 = getelementptr inbounds %Module, ptr %5, i64 0, i32 1
  store ptr %2, ptr %memberidx.i184, align 8
  %memberidx1.i185 = getelementptr inbounds %Module, ptr %5, i64 0, i32 5
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Function_, ptr %6, align 8
  %memberidx.i.i = getelementptr inbounds %Array_Function_, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Function_, ptr %6, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Function_, ptr %6, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %6, ptr %memberidx1.i185, align 8
  %memberidx4.i = getelementptr inbounds %Module, ptr %5, i64 0, i32 2
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Var_, ptr %8, align 8
  %memberidx.i37.i = getelementptr inbounds %Array_Var_, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i37.i, align 4
  %memberidx1.i38.i = getelementptr inbounds %Array_Var_, ptr %8, i64 0, i32 3
  store i64 8, ptr %memberidx1.i38.i, align 4
  %memberidx2.i39.i = getelementptr inbounds %Array_Var_, ptr %8, i64 0, i32 1
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %memberidx2.i39.i, align 8
  store i64 0, ptr %memberidx.i37.i, align 4
  store ptr %8, ptr %memberidx4.i, align 8
  %memberidx7.i = getelementptr inbounds %Module, ptr %5, i64 0, i32 4
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Class_, ptr %10, align 8
  %memberidx.i40.i = getelementptr inbounds %Array_Class_, ptr %10, i64 0, i32 2
  store i64 0, ptr %memberidx.i40.i, align 4
  %memberidx1.i41.i = getelementptr inbounds %Array_Class_, ptr %10, i64 0, i32 3
  store i64 8, ptr %memberidx1.i41.i, align 4
  %memberidx2.i42.i = getelementptr inbounds %Array_Class_, ptr %10, i64 0, i32 1
  %11 = tail call ptr @malloc(i32 64)
  store ptr %11, ptr %memberidx2.i42.i, align 8
  store i64 0, ptr %memberidx.i40.i, align 4
  store ptr %10, ptr %memberidx7.i, align 8
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Function_, ptr %12, align 8
  %memberidx.i43.i = getelementptr inbounds %Array_Function_, ptr %12, i64 0, i32 2
  store i64 0, ptr %memberidx.i43.i, align 4
  %memberidx1.i44.i = getelementptr inbounds %Array_Function_, ptr %12, i64 0, i32 3
  store i64 8, ptr %memberidx1.i44.i, align 4
  %memberidx2.i45.i = getelementptr inbounds %Array_Function_, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %memberidx2.i45.i, align 8
  store i64 0, ptr %memberidx.i43.i, align 4
  store ptr %12, ptr %memberidx1.i185, align 8
  %memberidx13.i = getelementptr inbounds %Module, ptr %5, i64 0, i32 6
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Enum_, ptr %14, align 8
  %memberidx.i46.i = getelementptr inbounds %Array_Enum_, ptr %14, i64 0, i32 2
  store i64 0, ptr %memberidx.i46.i, align 4
  %memberidx1.i47.i = getelementptr inbounds %Array_Enum_, ptr %14, i64 0, i32 3
  store i64 8, ptr %memberidx1.i47.i, align 4
  %memberidx2.i48.i = getelementptr inbounds %Array_Enum_, ptr %14, i64 0, i32 1
  %15 = tail call ptr @malloc(i32 64)
  store ptr %15, ptr %memberidx2.i48.i, align 8
  store i64 0, ptr %memberidx.i46.i, align 4
  store ptr %14, ptr %memberidx13.i, align 8
  %memberidx16.i = getelementptr inbounds %Module, ptr %5, i64 0, i32 7
  %16 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Scope_, ptr %16, align 8
  %memberidx.i49.i = getelementptr inbounds %Array_Scope_, ptr %16, i64 0, i32 2
  store i64 0, ptr %memberidx.i49.i, align 4
  %memberidx1.i50.i = getelementptr inbounds %Array_Scope_, ptr %16, i64 0, i32 3
  store i64 8, ptr %memberidx1.i50.i, align 4
  %memberidx2.i51.i = getelementptr inbounds %Array_Scope_, ptr %16, i64 0, i32 1
  %17 = tail call ptr @malloc(i32 64)
  store ptr %17, ptr %memberidx2.i51.i, align 8
  store i64 0, ptr %memberidx.i49.i, align 4
  store ptr %16, ptr %memberidx16.i, align 8
  %memberidx19.i = getelementptr inbounds %Module, ptr %5, i64 0, i32 8
  %18 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ConstDeclaration_, ptr %18, align 8
  %memberidx.i52.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %18, i64 0, i32 2
  store i64 0, ptr %memberidx.i52.i, align 4
  %memberidx1.i53.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %18, i64 0, i32 3
  store i64 8, ptr %memberidx1.i53.i, align 4
  %memberidx2.i54.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %18, i64 0, i32 1
  %19 = tail call ptr @malloc(i32 64)
  store ptr %19, ptr %memberidx2.i54.i, align 8
  store i64 0, ptr %memberidx.i52.i, align 4
  store ptr %18, ptr %memberidx19.i, align 8
  %memberidx22.i = getelementptr inbounds %Module, ptr %5, i64 0, i32 9
  %20 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_VarDeclaration_, ptr %20, align 8
  %memberidx.i55.i = getelementptr inbounds %Array_VarDeclaration_, ptr %20, i64 0, i32 2
  store i64 0, ptr %memberidx.i55.i, align 4
  %memberidx1.i56.i = getelementptr inbounds %Array_VarDeclaration_, ptr %20, i64 0, i32 3
  store i64 8, ptr %memberidx1.i56.i, align 4
  %memberidx2.i57.i = getelementptr inbounds %Array_VarDeclaration_, ptr %20, i64 0, i32 1
  %21 = tail call ptr @malloc(i32 64)
  store ptr %21, ptr %memberidx2.i57.i, align 8
  store i64 0, ptr %memberidx.i55.i, align 4
  store ptr %20, ptr %memberidx22.i, align 8
  %memberidx25.i = getelementptr inbounds %Module, ptr %5, i64 0, i32 3
  %22 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Const_, ptr %22, align 8
  %memberidx.i58.i = getelementptr inbounds %Array_Const_, ptr %22, i64 0, i32 2
  store i64 0, ptr %memberidx.i58.i, align 4
  %memberidx1.i59.i = getelementptr inbounds %Array_Const_, ptr %22, i64 0, i32 3
  store i64 8, ptr %memberidx1.i59.i, align 4
  %memberidx2.i60.i = getelementptr inbounds %Array_Const_, ptr %22, i64 0, i32 1
  %23 = tail call ptr @malloc(i32 64)
  store ptr %23, ptr %memberidx2.i60.i, align 8
  store i64 0, ptr %memberidx.i58.i, align 4
  store ptr %22, ptr %memberidx25.i, align 8
  %24 = load ptr, ptr %0, align 8
  %memberidx5 = getelementptr inbounds %Program, ptr %24, i64 0, i32 1
  %25 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %Array_Module_, ptr %25, i64 0, i32 2
  %26 = load i64, ptr %memberidx6, align 4
  store i64 %26, ptr %memberidx1, align 4
  %27 = load ptr, ptr %memberidx5, align 8
  %memberidx.i186 = getelementptr inbounds %Array_Module_, ptr %27, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i186, align 4
  %memberidx1.i187 = getelementptr inbounds %Array_Module_, ptr %27, i64 0, i32 3
  %29 = load i64, ptr %memberidx1.i187, align 4
  %.not.i = icmp slt i64 %28, %29
  br i1 %.not.i, label %for.entry.Array_Module____sl__.exit_crit_edge, label %if.entry.i

for.entry.Array_Module____sl__.exit_crit_edge:    ; preds = %for.entry
  %memberidx4.i190.phi.trans.insert = getelementptr inbounds %Array_Module_, ptr %27, i64 0, i32 1
  %.pre446 = load ptr, ptr %memberidx4.i190.phi.trans.insert, align 8
  br label %Array_Module____sl__.exit

if.entry.i:                                       ; preds = %for.entry
  %30 = shl i64 %29, 1
  store i64 %30, ptr %memberidx1.i187, align 4
  %memberidx2.i.i189 = getelementptr inbounds %Array_Module_, ptr %27, i64 0, i32 1
  %31 = load ptr, ptr %memberidx2.i.i189, align 8
  %32 = shl i64 %29, 4
  %33 = tail call ptr @realloc(ptr %31, i64 %32)
  store ptr %33, ptr %memberidx2.i.i189, align 8
  %.pre = load i64, ptr %memberidx.i186, align 4
  br label %Array_Module____sl__.exit

Array_Module____sl__.exit:                        ; preds = %for.entry.Array_Module____sl__.exit_crit_edge, %if.entry.i
  %34 = phi ptr [ %.pre446, %for.entry.Array_Module____sl__.exit_crit_edge ], [ %33, %if.entry.i ]
  %35 = phi i64 [ %28, %for.entry.Array_Module____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %36 = add i64 %35, 1
  store i64 %36, ptr %memberidx.i186, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %34, i64 %35
  store ptr %5, ptr %ptridx.i, align 8
  %37 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0)
  %memberidx9 = getelementptr inbounds %Scope, ptr %37, i64 0, i32 1
  %38 = load ptr, ptr %memberidx9, align 8
  %39 = tail call ptr @malloc(i32 32)
  store i32 1702195828, ptr %39, align 8
  %40 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i.i191 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i.i191, align 8
  %memberidx1.i.i192 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i192, align 4
  %memberidx2.i.i193 = getelementptr inbounds %string, ptr %40, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i193, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %38, ptr nonnull %40, ptr null)
  %41 = load ptr, ptr %memberidx9, align 8
  %42 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %42, ptr noundef nonnull align 8 dereferenceable(5) @84, i64 5, i1 false)
  %43 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %43, align 8
  %memberidx.i.i194 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  store ptr %42, ptr %memberidx.i.i194, align 8
  %memberidx1.i.i195 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i195, align 4
  %memberidx2.i.i196 = getelementptr inbounds %string, ptr %43, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i196, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %41, ptr nonnull %43, ptr null)
  %44 = load ptr, ptr %memberidx9, align 8
  %45 = tail call ptr @malloc(i32 32)
  store i32 1819047278, ptr %45, align 8
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i197 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i197, align 8
  %memberidx1.i.i198 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i198, align 4
  %memberidx2.i.i199 = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i199, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %44, ptr nonnull %46, ptr null)
  %47 = load ptr, ptr %37, align 8
  store ptr %47, ptr %memberidx2, align 8
  %memberidx15 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %memberidx16 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %memberidx17 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %memberidx15, i8 0, i64 24, i1 false)
  %48 = load ptr, ptr %memberidx17, align 8
  %49 = tail call ptr @malloc(i32 25)
  %memberidx.i200 = getelementptr inbounds %Array_ImportNode_, ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i200, align 8
  %memberidx1.i201 = getelementptr inbounds %Array_ImportNode_, ptr %48, i64 0, i32 2
  %51 = load i64, ptr %memberidx1.i201, align 4
  store i1 false, ptr %49, align 1
  %memberidx1.i.i202 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %49, i64 0, i32 1
  %memberidx2.i.i203 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %49, i64 0, i32 3
  store ptr %50, ptr %memberidx2.i.i203, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %49, i64 0, i32 2
  store i64 %51, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i202, align 4
  %52 = icmp slt i64 %51, 1
  br i1 %52, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %Array_Module____sl__.exit
  %memberidx.i212 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %53 = phi i64 [ 1, %for.body.lr.ph ], [ %63, %ifend ]
  %module_import.0432.in = phi ptr [ %50, %for.body.lr.ph ], [ %ptridx.i226, %ifend ]
  %module_import.0432 = load ptr, ptr %module_import.0432.in, align 8
  tail call fastcc void @TypeChecker_check_module_import(ptr nonnull %0, ptr %module_import.0432)
  %54 = load ptr, ptr %memberidx.i212, align 8
  %memberidx1.i213 = getelementptr inbounds %Compiler, ptr %54, i64 0, i32 6
  %55 = load ptr, ptr %memberidx1.i213, align 8
  %memberidx2.i214 = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %56 = load i64, ptr %memberidx2.i214, align 4
  %57 = icmp sgt i64 %56, 0
  br i1 %57, label %common.ret.loopexit, label %ifend

for.end:                                          ; preds = %ifend, %Array_Module____sl__.exit
  tail call void @free(ptr nonnull %49)
  %memberidx21 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 2
  %58 = load ptr, ptr %memberidx21, align 8
  %59 = tail call ptr @malloc(i32 25)
  %memberidx.i215 = getelementptr inbounds %Array_EnumNode_, ptr %58, i64 0, i32 1
  %60 = load ptr, ptr %memberidx.i215, align 8
  %memberidx1.i216 = getelementptr inbounds %Array_EnumNode_, ptr %58, i64 0, i32 2
  %61 = load i64, ptr %memberidx1.i216, align 4
  store i1 false, ptr %59, align 1
  %memberidx1.i.i217 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %59, i64 0, i32 1
  %memberidx2.i.i218 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %59, i64 0, i32 3
  store ptr %60, ptr %memberidx2.i.i218, align 8
  %memberidx3.i.i219 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %59, i64 0, i32 2
  store i64 %61, ptr %memberidx3.i.i219, align 4
  store i64 1, ptr %memberidx1.i.i217, align 4
  %62 = icmp slt i64 %61, 1
  br i1 %62, label %for.end25, label %for.body23

common.ret.loopexit:                              ; preds = %for.body
  store i1 false, ptr %49, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %ifend116, %for.end79, %for.end33, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %for.end33 ], [ null, %for.end79 ], [ %spec.select, %ifend116 ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %for.body
  %63 = add i64 %53, 1
  store i64 %63, ptr %memberidx1.i.i202, align 4
  %ptridx.i226 = getelementptr inbounds ptr, ptr %50, i64 %53
  %64 = icmp sgt i64 %63, %51
  br i1 %64, label %for.end, label %for.body

for.body23:                                       ; preds = %for.end, %for.body23
  %65 = phi i64 [ %66, %for.body23 ], [ 1, %for.end ]
  %storemerge427.in = phi ptr [ %ptridx.i230, %for.body23 ], [ %60, %for.end ]
  %storemerge427 = load ptr, ptr %storemerge427.in, align 8
  tail call fastcc void @TypeChecker_declare_enum_within_module(ptr nonnull %0, ptr %storemerge427)
  %66 = add i64 %65, 1
  store i64 %66, ptr %memberidx1.i.i217, align 4
  %ptridx.i230 = getelementptr inbounds ptr, ptr %60, i64 %65
  %67 = icmp sgt i64 %66, %61
  br i1 %67, label %for.end25, label %for.body23

for.end25:                                        ; preds = %for.body23, %for.end
  tail call void @free(ptr nonnull %59)
  %memberidx29 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 1
  %68 = load ptr, ptr %memberidx29, align 8
  %69 = tail call ptr @malloc(i32 25)
  %memberidx.i232 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i232, align 8
  %memberidx1.i233 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %68, i64 0, i32 2
  %71 = load i64, ptr %memberidx1.i233, align 4
  store i1 false, ptr %69, align 1
  %memberidx1.i.i234 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %69, i64 0, i32 1
  %memberidx2.i.i235 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %69, i64 0, i32 3
  store ptr %70, ptr %memberidx2.i.i235, align 8
  %memberidx3.i.i236 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %69, i64 0, i32 2
  store i64 %71, ptr %memberidx3.i.i236, align 4
  store i64 1, ptr %memberidx1.i.i234, align 4
  %72 = icmp slt i64 %71, 1
  br i1 %72, label %for.end33, label %for.body31

for.body31:                                       ; preds = %for.end25, %for.body31
  %73 = phi i64 [ %74, %for.body31 ], [ 1, %for.end25 ]
  %storemerge176424.in = phi ptr [ %ptridx.i243, %for.body31 ], [ %70, %for.end25 ]
  %storemerge176424 = load ptr, ptr %storemerge176424.in, align 8
  tail call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr %storemerge176424)
  %74 = add i64 %73, 1
  store i64 %74, ptr %memberidx1.i.i234, align 4
  %ptridx.i243 = getelementptr inbounds ptr, ptr %70, i64 %73
  %75 = icmp sgt i64 %74, %71
  br i1 %75, label %for.end33, label %for.body31

for.end33:                                        ; preds = %for.body31, %for.end25
  tail call void @free(ptr nonnull %69)
  %memberidx.i245 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %76 = load ptr, ptr %memberidx.i245, align 8
  %memberidx1.i246 = getelementptr inbounds %Compiler, ptr %76, i64 0, i32 6
  %77 = load ptr, ptr %memberidx1.i246, align 8
  %memberidx2.i247 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 2
  %78 = load i64, ptr %memberidx2.i247, align 4
  %79 = icmp sgt i64 %78, 0
  br i1 %79, label %common.ret, label %for.entry38

for.entry38:                                      ; preds = %for.end33
  %memberidx40 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 6
  %80 = load ptr, ptr %memberidx40, align 8
  %81 = tail call ptr @malloc(i32 25)
  %memberidx.i248 = getelementptr inbounds %Array_TypeAliasNode_, ptr %80, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i248, align 8
  %memberidx1.i249 = getelementptr inbounds %Array_TypeAliasNode_, ptr %80, i64 0, i32 2
  %83 = load i64, ptr %memberidx1.i249, align 4
  store i1 false, ptr %81, align 1
  %memberidx1.i.i250 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %81, i64 0, i32 1
  %memberidx2.i.i251 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %81, i64 0, i32 3
  store ptr %82, ptr %memberidx2.i.i251, align 8
  %memberidx3.i.i252 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %81, i64 0, i32 2
  store i64 %83, ptr %memberidx3.i.i252, align 4
  store i64 1, ptr %memberidx1.i.i250, align 4
  %84 = icmp slt i64 %83, 1
  br i1 %84, label %for.end44, label %for.body42.lr.ph

for.body42.lr.ph:                                 ; preds = %for.entry38
  %memberidx56 = getelementptr inbounds %Scope, ptr %37, i64 0, i32 6
  br label %for.body42

for.body42:                                       ; preds = %for.body42.lr.ph, %ifend52
  %85 = phi i64 [ 1, %for.body42.lr.ph ], [ %119, %ifend52 ]
  %storemerge177421.in = phi ptr [ %82, %for.body42.lr.ph ], [ %ptridx.i277, %ifend52 ]
  %storemerge177421 = load ptr, ptr %storemerge177421.in, align 8
  %memberidx46 = getelementptr inbounds %TypeAliasNode, ptr %storemerge177421, i64 0, i32 1
  %86 = load ptr, ptr %memberidx46, align 8
  %87 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %86)
  %88 = load ptr, ptr %storemerge177421, align 8
  %memberidx48 = getelementptr inbounds %IdentifierToken, ptr %88, i64 0, i32 2
  %89 = load ptr, ptr %memberidx48, align 8
  %90 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %89)
  %91 = load i64, ptr %90, align 4
  %.not = icmp eq i64 %91, 22
  br i1 %.not, label %ifend52, label %if.entry50

for.end44:                                        ; preds = %ifend52, %for.entry38
  tail call void @free(ptr nonnull %81)
  %memberidx59 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 4
  %92 = load ptr, ptr %memberidx59, align 8
  %93 = tail call ptr @malloc(i32 25)
  %memberidx.i257 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %92, i64 0, i32 1
  %94 = load ptr, ptr %memberidx.i257, align 8
  %memberidx1.i258 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %92, i64 0, i32 2
  %95 = load i64, ptr %memberidx1.i258, align 4
  store i1 false, ptr %93, align 1
  %memberidx1.i.i259 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %93, i64 0, i32 1
  %memberidx2.i.i260 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %93, i64 0, i32 3
  store ptr %94, ptr %memberidx2.i.i260, align 8
  %memberidx3.i.i261 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %93, i64 0, i32 2
  store i64 %95, ptr %memberidx3.i.i261, align 4
  store i64 1, ptr %memberidx1.i.i259, align 4
  %96 = icmp slt i64 %95, 1
  br i1 %96, label %for.end63, label %for.body61

if.entry50:                                       ; preds = %for.body42
  store i1 false, ptr %81, align 1
  %97 = load ptr, ptr %89, align 8
  %memberidx53 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %97, i64 0, i32 5
  %98 = load ptr, ptr %memberidx53, align 8
  %99 = tail call ptr %98(ptr nonnull %89)
  %100 = alloca ptr, align 8
  %101 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %100, ptr nonnull @85, ptr %99)
  %102 = load ptr, ptr %100, align 8
  %103 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %103, align 8
  %memberidx.i266 = getelementptr inbounds %string, ptr %103, i64 0, i32 1
  store ptr %102, ptr %memberidx.i266, align 8
  %memberidx1.i267 = getelementptr inbounds %string, ptr %103, i64 0, i32 2
  store i64 %101, ptr %memberidx1.i267, align 4
  %memberidx2.i268 = getelementptr inbounds %string, ptr %103, i64 0, i32 3
  store i64 %101, ptr %memberidx2.i268, align 4
  tail call void @free(ptr %99)
  %104 = load ptr, ptr %storemerge177421, align 8
  %memberidx55 = getelementptr inbounds %Token, ptr %104, i64 0, i32 1
  %105 = load ptr, ptr %memberidx55, align 8
  %106 = load ptr, ptr %memberidx.i245, align 8
  %memberidx1.i270 = getelementptr inbounds %Compiler, ptr %106, i64 0, i32 6
  %107 = load ptr, ptr %memberidx1.i270, align 8
  %108 = call ptr @malloc(i32 24)
  store i64 1, ptr %108, align 4
  %memberidx1.i.i271 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 2
  store ptr %105, ptr %memberidx1.i.i271, align 8
  %memberidx2.i.i272 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 1
  store ptr %103, ptr %memberidx2.i.i272, align 8
  %memberidx.i.i273 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 2
  %109 = load i64, ptr %memberidx.i.i273, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 3
  %110 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %109, %110
  br i1 %.not.i.i, label %if.entry50.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry50.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry50
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %.pre448 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry50
  %111 = shl i64 %110, 1
  store i64 %111, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %112 = load ptr, ptr %memberidx2.i.i.i, align 8
  %113 = shl i64 %110, 4
  %114 = call ptr @realloc(ptr %112, i64 %113)
  store ptr %114, ptr %memberidx2.i.i.i, align 8
  %.pre447 = load i64, ptr %memberidx.i.i273, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry50.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %115 = phi ptr [ %.pre448, %if.entry50.TypeChecker_error.exit_crit_edge ], [ %114, %if.entry.i.i ]
  %116 = phi i64 [ %109, %if.entry50.TypeChecker_error.exit_crit_edge ], [ %.pre447, %if.entry.i.i ]
  %117 = add i64 %116, 1
  store i64 %117, ptr %memberidx.i.i273, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %115, i64 %116
  store ptr %108, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend52:                                          ; preds = %for.body42
  %118 = load ptr, ptr %memberidx56, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr %118, ptr %89, ptr %87)
  %119 = add i64 %85, 1
  store i64 %119, ptr %memberidx1.i.i250, align 4
  %ptridx.i277 = getelementptr inbounds ptr, ptr %82, i64 %85
  %120 = icmp sgt i64 %119, %83
  br i1 %120, label %for.end44, label %for.body42

for.body61:                                       ; preds = %for.end44, %TypeChecker_declare_global_const.exit
  %121 = phi i64 [ %142, %TypeChecker_declare_global_const.exit ], [ 1, %for.end44 ]
  %storemerge178416.in = phi ptr [ %ptridx.i292, %TypeChecker_declare_global_const.exit ], [ %94, %for.end44 ]
  %storemerge178416 = load ptr, ptr %storemerge178416.in, align 8
  %122 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr nonnull %0, ptr %storemerge178416)
  %123 = load ptr, ptr %memberidx.i245, align 8
  %memberidx1.i.i280 = getelementptr inbounds %Compiler, ptr %123, i64 0, i32 6
  %124 = load ptr, ptr %memberidx1.i.i280, align 8
  %memberidx2.i.i281 = getelementptr inbounds %Array_FloError_, ptr %124, i64 0, i32 2
  %125 = load i64, ptr %memberidx2.i.i281, align 4
  %126 = icmp sgt i64 %125, 0
  br i1 %126, label %TypeChecker_declare_global_const.exit, label %ifend.i

ifend.i:                                          ; preds = %for.body61
  %memberidx.i282 = getelementptr inbounds %ConstDeclaration, ptr %122, i64 0, i32 3
  store i1 true, ptr %memberidx.i282, align 1
  %127 = load i64, ptr %memberidx1, align 4
  %128 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Program, ptr %128, i64 0, i32 1
  %129 = load ptr, ptr %memberidx1.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %129, i64 0, i32 1
  %130 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %130, i64 %127
  %131 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx1.i283 = getelementptr inbounds %Module, ptr %131, i64 0, i32 8
  %132 = load ptr, ptr %memberidx1.i283, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %132, i64 0, i32 2
  %133 = load i64, ptr %memberidx.i5.i, align 4
  %memberidx1.i6.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %132, i64 0, i32 3
  %134 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i284 = icmp slt i64 %133, %134
  br i1 %.not.i.i284, label %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge, label %if.entry.i.i287

ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge: ; preds = %ifend.i
  %memberidx4.i.i288.phi.trans.insert = getelementptr inbounds %Array_ConstDeclaration_, ptr %132, i64 0, i32 1
  %.pre450 = load ptr, ptr %memberidx4.i.i288.phi.trans.insert, align 8
  br label %Array_ConstDeclaration____sl__.exit.i

if.entry.i.i287:                                  ; preds = %ifend.i
  %135 = shl i64 %134, 1
  store i64 %135, ptr %memberidx1.i6.i, align 4
  %memberidx2.i.i.i286 = getelementptr inbounds %Array_ConstDeclaration_, ptr %132, i64 0, i32 1
  %136 = load ptr, ptr %memberidx2.i.i.i286, align 8
  %137 = shl i64 %134, 4
  %138 = tail call ptr @realloc(ptr %136, i64 %137)
  store ptr %138, ptr %memberidx2.i.i.i286, align 8
  %.pre449 = load i64, ptr %memberidx.i5.i, align 4
  br label %Array_ConstDeclaration____sl__.exit.i

Array_ConstDeclaration____sl__.exit.i:            ; preds = %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge, %if.entry.i.i287
  %139 = phi ptr [ %138, %if.entry.i.i287 ], [ %.pre450, %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge ]
  %140 = phi i64 [ %.pre449, %if.entry.i.i287 ], [ %133, %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge ]
  %141 = add i64 %140, 1
  store i64 %141, ptr %memberidx.i5.i, align 4
  %ptridx.i.i289 = getelementptr inbounds ptr, ptr %139, i64 %140
  store ptr %122, ptr %ptridx.i.i289, align 8
  br label %TypeChecker_declare_global_const.exit

TypeChecker_declare_global_const.exit:            ; preds = %for.body61, %Array_ConstDeclaration____sl__.exit.i
  %142 = add i64 %121, 1
  store i64 %142, ptr %memberidx1.i.i259, align 4
  %ptridx.i292 = getelementptr inbounds ptr, ptr %94, i64 %121
  %143 = icmp sgt i64 %142, %95
  br i1 %143, label %for.end63, label %for.body61

for.end63:                                        ; preds = %TypeChecker_declare_global_const.exit, %for.end44
  tail call void @free(ptr nonnull %93)
  %memberidx67 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 5
  %144 = load ptr, ptr %memberidx67, align 8
  %145 = tail call ptr @malloc(i32 25)
  %memberidx.i294 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %144, i64 0, i32 1
  %146 = load ptr, ptr %memberidx.i294, align 8
  %memberidx1.i295 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %144, i64 0, i32 2
  %147 = load i64, ptr %memberidx1.i295, align 4
  store i1 false, ptr %145, align 1
  %memberidx1.i.i296 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %145, i64 0, i32 1
  %memberidx2.i.i297 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %145, i64 0, i32 3
  store ptr %146, ptr %memberidx2.i.i297, align 8
  %memberidx3.i.i298 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %145, i64 0, i32 2
  store i64 %147, ptr %memberidx3.i.i298, align 4
  store i64 1, ptr %memberidx1.i.i296, align 4
  %148 = icmp slt i64 %147, 1
  br i1 %148, label %for.end71, label %for.body69

for.body69:                                       ; preds = %for.end63, %TypeChecker_declare_global_var.exit
  %149 = phi i64 [ %198, %TypeChecker_declare_global_var.exit ], [ 1, %for.end63 ]
  %storemerge179413.in = phi ptr [ %ptridx.i324, %TypeChecker_declare_global_var.exit ], [ %146, %for.end63 ]
  %storemerge179413 = load ptr, ptr %storemerge179413.in, align 8
  %150 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr nonnull %0, ptr %storemerge179413)
  %151 = load ptr, ptr %memberidx.i245, align 8
  %memberidx1.i.i304 = getelementptr inbounds %Compiler, ptr %151, i64 0, i32 6
  %152 = load ptr, ptr %memberidx1.i.i304, align 8
  %memberidx2.i.i305 = getelementptr inbounds %Array_FloError_, ptr %152, i64 0, i32 2
  %153 = load i64, ptr %memberidx2.i.i305, align 4
  %154 = icmp sgt i64 %153, 0
  br i1 %154, label %TypeChecker_declare_global_var.exit, label %ifend.i310

ifend.i310:                                       ; preds = %for.body69
  %155 = load ptr, ptr %0, align 8
  %memberidx1.i306 = getelementptr inbounds %VarDeclaration, ptr %150, i64 0, i32 2
  %156 = load ptr, ptr %memberidx1.i306, align 8
  %memberidx.i20.i = getelementptr inbounds %Program, ptr %155, i64 0, i32 1
  %157 = load ptr, ptr %memberidx.i20.i, align 8
  %memberidx1.i21.i = getelementptr inbounds %VarId, ptr %156, i64 0, i32 1
  %158 = load i64, ptr %memberidx1.i21.i, align 4
  %memberidx.i.i22.i = getelementptr inbounds %Array_Module_, ptr %157, i64 0, i32 1
  %159 = load ptr, ptr %memberidx.i.i22.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %159, i64 %158
  %160 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i23.i = getelementptr inbounds %Module, ptr %160, i64 0, i32 2
  %161 = load ptr, ptr %memberidx2.i23.i, align 8
  %memberidx3.i.i307 = getelementptr inbounds %VarId, ptr %156, i64 0, i32 2
  %162 = load i64, ptr %memberidx3.i.i307, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Var_, ptr %161, i64 0, i32 1
  %163 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %163, i64 %162
  %164 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx2.i308 = getelementptr inbounds %Var, ptr %164, i64 0, i32 2
  %165 = load ptr, ptr %memberidx2.i308, align 8
  %memberidx3.i309 = getelementptr inbounds %Expression, ptr %165, i64 0, i32 1
  %166 = load i1, ptr %memberidx3.i309, align 1
  br i1 %166, label %ifend6.i, label %if.entry4.i

if.entry4.i:                                      ; preds = %ifend.i310
  %167 = tail call ptr @malloc(i32 432)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %167, ptr noundef nonnull align 8 dereferenceable(54) @89, i64 54, i1 false)
  %168 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %168, align 8
  %memberidx.i.i32.i = getelementptr inbounds %string, ptr %168, i64 0, i32 1
  store ptr %167, ptr %memberidx.i.i32.i, align 8
  %memberidx1.i.i33.i = getelementptr inbounds %string, ptr %168, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i33.i, align 4
  %memberidx2.i.i34.i = getelementptr inbounds %string, ptr %168, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i34.i, align 4
  %memberidx7.i311 = getelementptr inbounds %VarDeclarationStatement, ptr %storemerge179413, i64 0, i32 4
  %169 = load ptr, ptr %memberidx7.i311, align 8
  %170 = load ptr, ptr %169, align 8
  %171 = load ptr, ptr %memberidx.i245, align 8
  %memberidx1.i26.i = getelementptr inbounds %Compiler, ptr %171, i64 0, i32 6
  %172 = load ptr, ptr %memberidx1.i26.i, align 8
  %173 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %173, align 4
  %memberidx1.i.i27.i = getelementptr inbounds %FloError, ptr %173, i64 0, i32 2
  store ptr %170, ptr %memberidx1.i.i27.i, align 8
  %memberidx2.i.i28.i = getelementptr inbounds %FloError, ptr %173, i64 0, i32 1
  store ptr %168, ptr %memberidx2.i.i28.i, align 8
  %memberidx.i.i29.i = getelementptr inbounds %Array_FloError_, ptr %172, i64 0, i32 2
  %174 = load i64, ptr %memberidx.i.i29.i, align 4
  %memberidx1.i2.i.i = getelementptr inbounds %Array_FloError_, ptr %172, i64 0, i32 3
  %175 = load i64, ptr %memberidx1.i2.i.i, align 4
  %.not.i.i.i = icmp slt i64 %174, %175
  br i1 %.not.i.i.i, label %if.entry4.i.TypeChecker_error.exit.i_crit_edge, label %if.entry.i.i.i

if.entry4.i.TypeChecker_error.exit.i_crit_edge:   ; preds = %if.entry4.i
  %memberidx4.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %172, i64 0, i32 1
  %.pre452 = load ptr, ptr %memberidx4.i.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry4.i
  %176 = shl i64 %175, 1
  store i64 %176, ptr %memberidx1.i2.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %172, i64 0, i32 1
  %177 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %178 = shl i64 %175, 4
  %179 = tail call ptr @realloc(ptr %177, i64 %178)
  store ptr %179, ptr %memberidx2.i.i.i.i, align 8
  %.pre451 = load i64, ptr %memberidx.i.i29.i, align 4
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %if.entry4.i.TypeChecker_error.exit.i_crit_edge, %if.entry.i.i.i
  %180 = phi ptr [ %179, %if.entry.i.i.i ], [ %.pre452, %if.entry4.i.TypeChecker_error.exit.i_crit_edge ]
  %181 = phi i64 [ %.pre451, %if.entry.i.i.i ], [ %174, %if.entry4.i.TypeChecker_error.exit.i_crit_edge ]
  %182 = add i64 %181, 1
  store i64 %182, ptr %memberidx.i.i29.i, align 4
  %ptridx.i.i31.i = getelementptr inbounds ptr, ptr %180, i64 %181
  store ptr %173, ptr %ptridx.i.i31.i, align 8
  br label %TypeChecker_declare_global_var.exit

ifend6.i:                                         ; preds = %ifend.i310
  %memberidx9.i312 = getelementptr inbounds %VarDeclaration, ptr %150, i64 0, i32 3
  store i1 true, ptr %memberidx9.i312, align 1
  %183 = load i64, ptr %memberidx1, align 4
  %184 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i313 = getelementptr inbounds %Program, ptr %184, i64 0, i32 1
  %185 = load ptr, ptr %memberidx1.i.i.i313, align 8
  %memberidx.i.i.i.i314 = getelementptr inbounds %Array_Module_, ptr %185, i64 0, i32 1
  %186 = load ptr, ptr %memberidx.i.i.i.i314, align 8
  %ptridx.i.i.i.i315 = getelementptr inbounds ptr, ptr %186, i64 %183
  %187 = load ptr, ptr %ptridx.i.i.i.i315, align 8
  %memberidx10.i = getelementptr inbounds %Module, ptr %187, i64 0, i32 9
  %188 = load ptr, ptr %memberidx10.i, align 8
  %memberidx.i18.i = getelementptr inbounds %Array_VarDeclaration_, ptr %188, i64 0, i32 2
  %189 = load i64, ptr %memberidx.i18.i, align 4
  %memberidx1.i19.i = getelementptr inbounds %Array_VarDeclaration_, ptr %188, i64 0, i32 3
  %190 = load i64, ptr %memberidx1.i19.i, align 4
  %.not.i.i316 = icmp slt i64 %189, %190
  br i1 %.not.i.i316, label %ifend6.i.Array_VarDeclaration____sl__.exit.i_crit_edge, label %if.entry.i.i319

ifend6.i.Array_VarDeclaration____sl__.exit.i_crit_edge: ; preds = %ifend6.i
  %memberidx4.i.i320.phi.trans.insert = getelementptr inbounds %Array_VarDeclaration_, ptr %188, i64 0, i32 1
  %.pre454 = load ptr, ptr %memberidx4.i.i320.phi.trans.insert, align 8
  br label %Array_VarDeclaration____sl__.exit.i

if.entry.i.i319:                                  ; preds = %ifend6.i
  %191 = shl i64 %190, 1
  store i64 %191, ptr %memberidx1.i19.i, align 4
  %memberidx2.i.i.i318 = getelementptr inbounds %Array_VarDeclaration_, ptr %188, i64 0, i32 1
  %192 = load ptr, ptr %memberidx2.i.i.i318, align 8
  %193 = shl i64 %190, 4
  %194 = tail call ptr @realloc(ptr %192, i64 %193)
  store ptr %194, ptr %memberidx2.i.i.i318, align 8
  %.pre453 = load i64, ptr %memberidx.i18.i, align 4
  br label %Array_VarDeclaration____sl__.exit.i

Array_VarDeclaration____sl__.exit.i:              ; preds = %ifend6.i.Array_VarDeclaration____sl__.exit.i_crit_edge, %if.entry.i.i319
  %195 = phi ptr [ %194, %if.entry.i.i319 ], [ %.pre454, %ifend6.i.Array_VarDeclaration____sl__.exit.i_crit_edge ]
  %196 = phi i64 [ %.pre453, %if.entry.i.i319 ], [ %189, %ifend6.i.Array_VarDeclaration____sl__.exit.i_crit_edge ]
  %197 = add i64 %196, 1
  store i64 %197, ptr %memberidx.i18.i, align 4
  %ptridx.i.i321 = getelementptr inbounds ptr, ptr %195, i64 %196
  store ptr %150, ptr %ptridx.i.i321, align 8
  br label %TypeChecker_declare_global_var.exit

TypeChecker_declare_global_var.exit:              ; preds = %for.body69, %TypeChecker_error.exit.i, %Array_VarDeclaration____sl__.exit.i
  %198 = add i64 %149, 1
  store i64 %198, ptr %memberidx1.i.i296, align 4
  %ptridx.i324 = getelementptr inbounds ptr, ptr %146, i64 %149
  %199 = icmp sgt i64 %198, %147
  br i1 %199, label %for.end71, label %for.body69

for.end71:                                        ; preds = %TypeChecker_declare_global_var.exit, %for.end63
  tail call void @free(ptr nonnull %145)
  %200 = load ptr, ptr %1, align 8
  %201 = tail call ptr @malloc(i32 25)
  %memberidx.i326 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %200, i64 0, i32 1
  %202 = load ptr, ptr %memberidx.i326, align 8
  %memberidx1.i327 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %200, i64 0, i32 2
  %203 = load i64, ptr %memberidx1.i327, align 4
  store i1 false, ptr %201, align 1
  %memberidx1.i.i328 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %201, i64 0, i32 1
  %memberidx2.i.i329 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %201, i64 0, i32 3
  store ptr %202, ptr %memberidx2.i.i329, align 8
  %memberidx3.i.i330 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %201, i64 0, i32 2
  store i64 %203, ptr %memberidx3.i.i330, align 4
  store i64 1, ptr %memberidx1.i.i328, align 4
  %204 = icmp slt i64 %203, 1
  br i1 %204, label %for.end79, label %for.body77

for.body77:                                       ; preds = %for.end71, %for.body77
  %205 = phi i64 [ %206, %for.body77 ], [ 1, %for.end71 ]
  %storemerge180410.in = phi ptr [ %ptridx.i337, %for.body77 ], [ %202, %for.end71 ]
  %storemerge180410 = load ptr, ptr %storemerge180410.in, align 8
  tail call fastcc void @TypeChecker_declare_function_within_module(ptr nonnull %0, ptr %storemerge180410)
  %206 = add i64 %205, 1
  store i64 %206, ptr %memberidx1.i.i328, align 4
  %ptridx.i337 = getelementptr inbounds ptr, ptr %202, i64 %205
  %207 = icmp sgt i64 %206, %203
  br i1 %207, label %for.end79, label %for.body77

for.end79:                                        ; preds = %for.body77, %for.end71
  tail call void @free(ptr nonnull %201)
  %208 = load ptr, ptr %memberidx.i245, align 8
  %memberidx1.i340 = getelementptr inbounds %Compiler, ptr %208, i64 0, i32 6
  %209 = load ptr, ptr %memberidx1.i340, align 8
  %memberidx2.i341 = getelementptr inbounds %Array_FloError_, ptr %209, i64 0, i32 2
  %210 = load i64, ptr %memberidx2.i341, align 4
  %211 = icmp sgt i64 %210, 0
  br i1 %211, label %common.ret, label %for.cond85.preheader

for.cond85.preheader:                             ; preds = %for.end79
  %212 = load ptr, ptr %memberidx21, align 8
  %memberidx90407 = getelementptr inbounds %Array_EnumNode_, ptr %212, i64 0, i32 2
  %213 = load i64, ptr %memberidx90407, align 4
  %214 = icmp sgt i64 %213, 0
  br i1 %214, label %for.body86, label %for.entry93

for.body86:                                       ; preds = %for.cond85.preheader, %for.body86
  %215 = phi ptr [ %222, %for.body86 ], [ %212, %for.cond85.preheader ]
  %storemerge183408 = phi i64 [ %221, %for.body86 ], [ 0, %for.cond85.preheader ]
  %216 = load ptr, ptr %memberidx13.i, align 8
  %memberidx.i342 = getelementptr inbounds %Array_Enum_, ptr %216, i64 0, i32 1
  %217 = load ptr, ptr %memberidx.i342, align 8
  %ptridx.i343 = getelementptr inbounds ptr, ptr %217, i64 %storemerge183408
  %218 = load ptr, ptr %ptridx.i343, align 8
  %memberidx.i344 = getelementptr inbounds %Array_EnumNode_, ptr %215, i64 0, i32 1
  %219 = load ptr, ptr %memberidx.i344, align 8
  %ptridx.i345 = getelementptr inbounds ptr, ptr %219, i64 %storemerge183408
  %220 = load ptr, ptr %ptridx.i345, align 8
  tail call fastcc void @TypeChecker_check_enum_body(ptr nonnull %0, ptr %218, ptr %220)
  %221 = add nuw nsw i64 %storemerge183408, 1
  %222 = load ptr, ptr %memberidx21, align 8
  %memberidx90 = getelementptr inbounds %Array_EnumNode_, ptr %222, i64 0, i32 2
  %223 = load i64, ptr %memberidx90, align 4
  %224 = icmp slt i64 %221, %223
  br i1 %224, label %for.body86, label %for.entry93

for.entry93:                                      ; preds = %for.body86, %for.cond85.preheader
  %225 = load ptr, ptr %memberidx29, align 8
  %226 = tail call ptr @malloc(i32 25)
  %memberidx.i346 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %225, i64 0, i32 1
  %227 = load ptr, ptr %memberidx.i346, align 8
  %memberidx1.i347 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %225, i64 0, i32 2
  %228 = load i64, ptr %memberidx1.i347, align 4
  store i1 false, ptr %226, align 1
  %memberidx1.i.i348 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %226, i64 0, i32 1
  %memberidx2.i.i349 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %226, i64 0, i32 3
  store ptr %227, ptr %memberidx2.i.i349, align 8
  %memberidx3.i.i350 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %226, i64 0, i32 2
  store i64 %228, ptr %memberidx3.i.i350, align 4
  store i64 1, ptr %memberidx1.i.i348, align 4
  %229 = icmp slt i64 %228, 1
  br i1 %229, label %for.end100, label %for.body98

for.body98:                                       ; preds = %for.entry93, %for.body98
  %230 = phi i64 [ %231, %for.body98 ], [ 1, %for.entry93 ]
  %storemerge181406.in = phi ptr [ %ptridx.i357, %for.body98 ], [ %227, %for.entry93 ]
  %storemerge181406 = load ptr, ptr %storemerge181406.in, align 8
  tail call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr %storemerge181406)
  %231 = add i64 %230, 1
  store i64 %231, ptr %memberidx1.i.i348, align 4
  %ptridx.i357 = getelementptr inbounds ptr, ptr %227, i64 %230
  %232 = icmp sgt i64 %231, %228
  br i1 %232, label %for.end100, label %for.body98

for.end100:                                       ; preds = %for.body98, %for.entry93
  tail call void @free(ptr nonnull %226)
  %233 = load ptr, ptr %1, align 8
  %memberidx109403 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %233, i64 0, i32 2
  %234 = load i64, ptr %memberidx109403, align 4
  %235 = icmp sgt i64 %234, 0
  br i1 %235, label %for.body105, label %for.end107

for.body105:                                      ; preds = %for.end100, %TypeChecker_check_function_body.exit
  %236 = phi ptr [ %295, %TypeChecker_check_function_body.exit ], [ %233, %for.end100 ]
  %storemerge182404 = phi i64 [ %294, %TypeChecker_check_function_body.exit ], [ 0, %for.end100 ]
  %237 = load ptr, ptr %memberidx1.i185, align 8
  %memberidx.i359 = getelementptr inbounds %Array_Function_, ptr %237, i64 0, i32 1
  %238 = load ptr, ptr %memberidx.i359, align 8
  %ptridx.i360 = getelementptr inbounds ptr, ptr %238, i64 %storemerge182404
  %239 = load ptr, ptr %ptridx.i360, align 8
  %memberidx.i361 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %236, i64 0, i32 1
  %240 = load ptr, ptr %memberidx.i361, align 8
  %ptridx.i362 = getelementptr inbounds ptr, ptr %240, i64 %storemerge182404
  %241 = load ptr, ptr %ptridx.i362, align 8
  %memberidx.i363 = getelementptr inbounds %Function, ptr %239, i64 0, i32 6
  %242 = load i1, ptr %memberidx.i363, align 1
  br i1 %242, label %TypeChecker_check_function_body.exit, label %ifend.i371

ifend.i371:                                       ; preds = %for.body105
  %243 = load ptr, ptr %239, align 8
  store ptr %243, ptr %memberidx16, align 8
  %memberidx6.i366 = getelementptr inbounds %Function, ptr %239, i64 0, i32 5
  %244 = load ptr, ptr %memberidx6.i366, align 8
  store ptr %244, ptr %memberidx2, align 8
  %memberidx7.i367 = getelementptr inbounds %Function, ptr %239, i64 0, i32 3
  %memberidx8.i = getelementptr inbounds %FunctionDeclarationNode, ptr %241, i64 0, i32 2
  %245 = load ptr, ptr %memberidx8.i, align 8
  %246 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %245)
  store ptr %246, ptr %memberidx7.i367, align 8
  %247 = load ptr, ptr %memberidx.i245, align 8
  %memberidx1.i.i369 = getelementptr inbounds %Compiler, ptr %247, i64 0, i32 6
  %248 = load ptr, ptr %memberidx1.i.i369, align 8
  %memberidx2.i.i370 = getelementptr inbounds %Array_FloError_, ptr %248, i64 0, i32 2
  %249 = load i64, ptr %memberidx2.i.i370, align 4
  %250 = icmp sgt i64 %249, 0
  br i1 %250, label %TypeChecker_check_function_body.exit, label %ifend11.i

ifend11.i:                                        ; preds = %ifend.i371
  %memberidx13.i372 = getelementptr inbounds %Block, ptr %246, i64 0, i32 1
  %251 = load i1, ptr %memberidx13.i372, align 1
  br i1 %251, label %ifend16.i, label %if.entry14.i

if.entry14.i:                                     ; preds = %ifend11.i
  %memberidx17.i = getelementptr inbounds %Function, ptr %239, i64 0, i32 4
  %252 = load ptr, ptr %memberidx17.i, align 8
  %memberidx18.i373 = getelementptr inbounds %FunctionType, ptr %252, i64 0, i32 2
  %253 = load ptr, ptr %memberidx18.i373, align 8
  %254 = load i64, ptr %253, align 4
  %255 = icmp eq i64 %254, 12
  br i1 %255, label %if.entry20.i, label %else21.i

ifend16.i:                                        ; preds = %Array_Statement____sl__.exit.i, %ifend11.i
  %256 = load ptr, ptr %0, align 8
  %257 = load ptr, ptr %memberidx6.i366, align 8
  %memberidx.i49.i374 = getelementptr inbounds %Program, ptr %256, i64 0, i32 1
  %258 = load ptr, ptr %memberidx.i49.i374, align 8
  %259 = load i64, ptr %257, align 4
  %memberidx.i.i50.i = getelementptr inbounds %Array_Module_, ptr %258, i64 0, i32 1
  %260 = load ptr, ptr %memberidx.i.i50.i, align 8
  %ptridx.i.i51.i = getelementptr inbounds ptr, ptr %260, i64 %259
  %261 = load ptr, ptr %ptridx.i.i51.i, align 8
  %memberidx2.i52.i = getelementptr inbounds %Module, ptr %261, i64 0, i32 7
  %262 = load ptr, ptr %memberidx2.i52.i, align 8
  %memberidx3.i.i375 = getelementptr inbounds %ScopeId, ptr %257, i64 0, i32 1
  %263 = load i64, ptr %memberidx3.i.i375, align 4
  %memberidx.i5.i.i376 = getelementptr inbounds %Array_Scope_, ptr %262, i64 0, i32 1
  %264 = load ptr, ptr %memberidx.i5.i.i376, align 8
  %ptridx.i6.i.i377 = getelementptr inbounds ptr, ptr %264, i64 %263
  %265 = load ptr, ptr %ptridx.i6.i.i377, align 8
  %memberidx30.i = getelementptr inbounds %Scope, ptr %265, i64 0, i32 5
  %266 = load ptr, ptr %memberidx30.i, align 8
  store ptr %266, ptr %memberidx2, align 8
  br label %TypeChecker_check_function_body.exit

if.entry20.i:                                     ; preds = %if.entry14.i
  %267 = load ptr, ptr %246, align 8
  %268 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %268, align 4
  %memberidx.i53.i = getelementptr inbounds %ReturnStatement, ptr %268, i64 0, i32 1
  store ptr null, ptr %memberidx.i53.i, align 8
  %memberidx.i57.i = getelementptr inbounds %Array_Statement_, ptr %267, i64 0, i32 2
  %269 = load i64, ptr %memberidx.i57.i, align 4
  %memberidx1.i58.i = getelementptr inbounds %Array_Statement_, ptr %267, i64 0, i32 3
  %270 = load i64, ptr %memberidx1.i58.i, align 4
  %.not.i.i378 = icmp slt i64 %269, %270
  br i1 %.not.i.i378, label %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge, label %if.entry.i.i379

if.entry20.i.Array_Statement____sl__.exit.i_crit_edge: ; preds = %if.entry20.i
  %memberidx4.i.i380.phi.trans.insert = getelementptr inbounds %Array_Statement_, ptr %267, i64 0, i32 1
  %.pre458 = load ptr, ptr %memberidx4.i.i380.phi.trans.insert, align 8
  br label %Array_Statement____sl__.exit.i

if.entry.i.i379:                                  ; preds = %if.entry20.i
  %271 = shl i64 %270, 1
  store i64 %271, ptr %memberidx1.i58.i, align 4
  %memberidx2.i.i60.i = getelementptr inbounds %Array_Statement_, ptr %267, i64 0, i32 1
  %272 = load ptr, ptr %memberidx2.i.i60.i, align 8
  %273 = shl i64 %270, 4
  %274 = tail call ptr @realloc(ptr %272, i64 %273)
  store ptr %274, ptr %memberidx2.i.i60.i, align 8
  %.pre457 = load i64, ptr %memberidx.i57.i, align 4
  br label %Array_Statement____sl__.exit.i

Array_Statement____sl__.exit.i:                   ; preds = %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge, %if.entry.i.i379
  %275 = phi ptr [ %274, %if.entry.i.i379 ], [ %.pre458, %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge ]
  %276 = phi i64 [ %.pre457, %if.entry.i.i379 ], [ %269, %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge ]
  %277 = add i64 %276, 1
  store i64 %277, ptr %memberidx.i57.i, align 4
  %ptridx.i.i381 = getelementptr inbounds ptr, ptr %275, i64 %276
  store ptr %268, ptr %ptridx.i.i381, align 8
  br label %ifend16.i

else21.i:                                         ; preds = %if.entry14.i
  %278 = tail call ptr @malloc(i32 320)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %278, ptr noundef nonnull align 8 dereferenceable(40) @141, i64 40, i1 false)
  %279 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %279, align 8
  %memberidx.i.i54.i = getelementptr inbounds %string, ptr %279, i64 0, i32 1
  store ptr %278, ptr %memberidx.i.i54.i, align 8
  %memberidx1.i.i55.i = getelementptr inbounds %string, ptr %279, i64 0, i32 2
  store i64 40, ptr %memberidx1.i.i55.i, align 4
  %memberidx2.i.i56.i = getelementptr inbounds %string, ptr %279, i64 0, i32 3
  store i64 40, ptr %memberidx2.i.i56.i, align 4
  %memberidx25.i382 = getelementptr inbounds %FunctionDeclarationNode, ptr %241, i64 0, i32 3
  %280 = load ptr, ptr %memberidx25.i382, align 8
  %281 = load ptr, ptr %280, align 8
  %282 = load ptr, ptr %memberidx.i245, align 8
  %memberidx1.i48.i = getelementptr inbounds %Compiler, ptr %282, i64 0, i32 6
  %283 = load ptr, ptr %memberidx1.i48.i, align 8
  %284 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %284, align 4
  %memberidx1.i.i.i383 = getelementptr inbounds %FloError, ptr %284, i64 0, i32 2
  store ptr %281, ptr %memberidx1.i.i.i383, align 8
  %memberidx2.i.i.i384 = getelementptr inbounds %FloError, ptr %284, i64 0, i32 1
  store ptr %279, ptr %memberidx2.i.i.i384, align 8
  %memberidx.i.i.i385 = getelementptr inbounds %Array_FloError_, ptr %283, i64 0, i32 2
  %285 = load i64, ptr %memberidx.i.i.i385, align 4
  %memberidx1.i2.i.i386 = getelementptr inbounds %Array_FloError_, ptr %283, i64 0, i32 3
  %286 = load i64, ptr %memberidx1.i2.i.i386, align 4
  %.not.i.i.i387 = icmp slt i64 %285, %286
  br i1 %.not.i.i.i387, label %else21.i.TypeChecker_error.exit.i393_crit_edge, label %if.entry.i.i.i390

else21.i.TypeChecker_error.exit.i393_crit_edge:   ; preds = %else21.i
  %memberidx4.i.i.i391.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %283, i64 0, i32 1
  %.pre456 = load ptr, ptr %memberidx4.i.i.i391.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i393

if.entry.i.i.i390:                                ; preds = %else21.i
  %287 = shl i64 %286, 1
  store i64 %287, ptr %memberidx1.i2.i.i386, align 4
  %memberidx2.i.i.i.i389 = getelementptr inbounds %Array_FloError_, ptr %283, i64 0, i32 1
  %288 = load ptr, ptr %memberidx2.i.i.i.i389, align 8
  %289 = shl i64 %286, 4
  %290 = tail call ptr @realloc(ptr %288, i64 %289)
  store ptr %290, ptr %memberidx2.i.i.i.i389, align 8
  %.pre455 = load i64, ptr %memberidx.i.i.i385, align 4
  br label %TypeChecker_error.exit.i393

TypeChecker_error.exit.i393:                      ; preds = %else21.i.TypeChecker_error.exit.i393_crit_edge, %if.entry.i.i.i390
  %291 = phi ptr [ %290, %if.entry.i.i.i390 ], [ %.pre456, %else21.i.TypeChecker_error.exit.i393_crit_edge ]
  %292 = phi i64 [ %.pre455, %if.entry.i.i.i390 ], [ %285, %else21.i.TypeChecker_error.exit.i393_crit_edge ]
  %293 = add i64 %292, 1
  store i64 %293, ptr %memberidx.i.i.i385, align 4
  %ptridx.i.i.i392 = getelementptr inbounds ptr, ptr %291, i64 %292
  store ptr %284, ptr %ptridx.i.i.i392, align 8
  br label %TypeChecker_check_function_body.exit

TypeChecker_check_function_body.exit:             ; preds = %for.body105, %ifend.i371, %ifend16.i, %TypeChecker_error.exit.i393
  %294 = add nuw nsw i64 %storemerge182404, 1
  %295 = load ptr, ptr %1, align 8
  %memberidx109 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %295, i64 0, i32 2
  %296 = load i64, ptr %memberidx109, align 4
  %297 = icmp slt i64 %294, %296
  br i1 %297, label %for.body105, label %for.end107

for.end107:                                       ; preds = %TypeChecker_check_function_body.exit, %for.end100
  %298 = load i1, ptr %memberidx, align 1
  %299 = load i64, ptr %memberidx1, align 4
  %300 = icmp ne i64 %299, 0
  %301 = and i1 %298, %300
  br i1 %301, label %if.entry114, label %ifend116

if.entry114:                                      ; preds = %for.end107
  store i64 0, ptr %memberidx1, align 4
  %302 = load ptr, ptr %0, align 8
  %memberidx1.i.i209 = getelementptr inbounds %Program, ptr %302, i64 0, i32 1
  %303 = load ptr, ptr %memberidx1.i.i209, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %303, i64 0, i32 1
  %304 = load ptr, ptr %memberidx.i.i.i, align 8
  %305 = load ptr, ptr %304, align 8
  %memberidx2.i210 = getelementptr inbounds %Module, ptr %305, i64 0, i32 7
  %306 = load ptr, ptr %memberidx2.i210, align 8
  %memberidx.i.i211 = getelementptr inbounds %Array_Scope_, ptr %306, i64 0, i32 1
  %307 = load ptr, ptr %memberidx.i.i211, align 8
  %308 = load ptr, ptr %307, align 8
  %309 = load ptr, ptr %308, align 8
  store ptr %309, ptr %memberidx2, align 8
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr %5)
  br label %ifend116

ifend116:                                         ; preds = %for.end107, %if.entry114
  store ptr %4, ptr %memberidx2, align 8
  store i64 %3, ptr %memberidx1, align 4
  %310 = load ptr, ptr %memberidx.i245, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %310, i64 0, i32 6
  %311 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %311, i64 0, i32 2
  %312 = load i64, ptr %memberidx2.i, align 4
  %313 = icmp sgt i64 %312, 0
  %spec.select = select i1 %313, ptr null, ptr %5
  br label %common.ret
}

define internal fastcc void @TypeChecker_import_all_from_module(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Module, ptr %1, i64 0, i32 7
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %Array_Scope_, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load ptr, ptr %3, align 8
  %memberidx1 = getelementptr inbounds %Module, ptr %1, i64 0, i32 9
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call ptr @malloc(i32 25)
  %memberidx.i75 = getelementptr inbounds %Array_VarDeclaration_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i75, align 8
  %memberidx1.i = getelementptr inbounds %Array_VarDeclaration_, ptr %5, i64 0, i32 2
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp slt i64 %8, 1
  br i1 %9, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i.i.i93 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %10 = phi i64 [ 1, %for.body.lr.ph ], [ %22, %for.body ]
  %imported_var.0217.in = phi ptr [ %7, %for.body.lr.ph ], [ %ptridx.i102, %for.body ]
  %imported_var.0217 = load ptr, ptr %imported_var.0217.in, align 8
  %memberidx3 = getelementptr inbounds %VarDeclaration, ptr %imported_var.0217, i64 0, i32 1
  %11 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %VarDeclaration, ptr %imported_var.0217, i64 0, i32 2
  %12 = load ptr, ptr %memberidx4, align 8
  %13 = load i64, ptr %memberidx.i.i.i93, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i94 = getelementptr inbounds %Program, ptr %14, i64 0, i32 1
  %15 = load ptr, ptr %memberidx1.i.i.i.i94, align 8
  %memberidx.i.i.i.i.i95 = getelementptr inbounds %Array_Module_, ptr %15, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i.i.i.i.i95, align 8
  %ptridx.i.i.i.i.i96 = getelementptr inbounds ptr, ptr %16, i64 %13
  %17 = load ptr, ptr %ptridx.i.i.i.i.i96, align 8
  %memberidx.i.i97 = getelementptr inbounds %Module, ptr %17, i64 0, i32 7
  %18 = load ptr, ptr %memberidx.i.i97, align 8
  %memberidx.i1.i.i98 = getelementptr inbounds %Array_Scope_, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i1.i.i98, align 8
  %20 = load ptr, ptr %19, align 8
  %memberidx.i99 = getelementptr inbounds %Scope, ptr %20, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i99, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %21, ptr %11, ptr %12)
  %22 = add i64 %10, 1
  %ptridx.i102 = getelementptr inbounds ptr, ptr %7, i64 %10
  %23 = icmp sgt i64 %22, %8
  br i1 %23, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %6)
  %memberidx7 = getelementptr inbounds %Module, ptr %1, i64 0, i32 8
  %24 = load ptr, ptr %memberidx7, align 8
  %25 = tail call ptr @malloc(i32 25)
  %memberidx.i117 = getelementptr inbounds %Array_ConstDeclaration_, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i117, align 8
  %memberidx1.i118 = getelementptr inbounds %Array_ConstDeclaration_, ptr %24, i64 0, i32 2
  %27 = load i64, ptr %memberidx1.i118, align 4
  store i1 false, ptr %25, align 1
  %memberidx1.i.i119 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %25, i64 0, i32 1
  %memberidx2.i.i120 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %25, i64 0, i32 3
  store ptr %26, ptr %memberidx2.i.i120, align 8
  %memberidx3.i.i121 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %25, i64 0, i32 2
  store i64 %27, ptr %memberidx3.i.i121, align 4
  store i64 1, ptr %memberidx1.i.i119, align 4
  %28 = icmp slt i64 %27, 1
  br i1 %28, label %for.end11, label %for.body9.lr.ph

for.body9.lr.ph:                                  ; preds = %for.end
  %memberidx.i.i.i126 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  br label %for.body9

for.body9:                                        ; preds = %for.body9.lr.ph, %for.body9
  %29 = phi i64 [ 1, %for.body9.lr.ph ], [ %41, %for.body9 ]
  %storemerge214.in = phi ptr [ %26, %for.body9.lr.ph ], [ %ptridx.i135, %for.body9 ]
  %storemerge214 = load ptr, ptr %storemerge214.in, align 8
  %memberidx13 = getelementptr inbounds %ConstDeclaration, ptr %storemerge214, i64 0, i32 1
  %30 = load ptr, ptr %memberidx13, align 8
  %memberidx14 = getelementptr inbounds %ConstDeclaration, ptr %storemerge214, i64 0, i32 2
  %31 = load ptr, ptr %memberidx14, align 8
  %32 = load i64, ptr %memberidx.i.i.i126, align 4
  %33 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i127 = getelementptr inbounds %Program, ptr %33, i64 0, i32 1
  %34 = load ptr, ptr %memberidx1.i.i.i.i127, align 8
  %memberidx.i.i.i.i.i128 = getelementptr inbounds %Array_Module_, ptr %34, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i.i.i.i.i128, align 8
  %ptridx.i.i.i.i.i129 = getelementptr inbounds ptr, ptr %35, i64 %32
  %36 = load ptr, ptr %ptridx.i.i.i.i.i129, align 8
  %memberidx.i.i130 = getelementptr inbounds %Module, ptr %36, i64 0, i32 7
  %37 = load ptr, ptr %memberidx.i.i130, align 8
  %memberidx.i1.i.i131 = getelementptr inbounds %Array_Scope_, ptr %37, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i1.i.i131, align 8
  %39 = load ptr, ptr %38, align 8
  %memberidx.i132 = getelementptr inbounds %Scope, ptr %39, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i132, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %40, ptr %30, ptr %31)
  %41 = add i64 %29, 1
  store i64 %41, ptr %memberidx1.i.i119, align 4
  %ptridx.i135 = getelementptr inbounds ptr, ptr %26, i64 %29
  %42 = icmp sgt i64 %41, %27
  br i1 %42, label %for.end11, label %for.body9

for.end11:                                        ; preds = %for.body9, %for.end
  tail call void @free(ptr nonnull %25)
  %memberidx17 = getelementptr inbounds %Module, ptr %1, i64 0, i32 5
  %43 = load ptr, ptr %memberidx17, align 8
  %44 = tail call ptr @malloc(i32 25)
  %memberidx.i137 = getelementptr inbounds %Array_Function_, ptr %43, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i137, align 8
  %memberidx1.i138 = getelementptr inbounds %Array_Function_, ptr %43, i64 0, i32 2
  %46 = load i64, ptr %memberidx1.i138, align 4
  store i1 false, ptr %44, align 1
  %memberidx1.i.i139 = getelementptr inbounds %ArrayIterator_Function_, ptr %44, i64 0, i32 1
  %memberidx2.i.i140 = getelementptr inbounds %ArrayIterator_Function_, ptr %44, i64 0, i32 3
  store ptr %45, ptr %memberidx2.i.i140, align 8
  %memberidx3.i.i141 = getelementptr inbounds %ArrayIterator_Function_, ptr %44, i64 0, i32 2
  store i64 %46, ptr %memberidx3.i.i141, align 4
  store i64 1, ptr %memberidx1.i.i139, align 4
  %47 = icmp slt i64 %46, 1
  br i1 %47, label %for.end21, label %for.body19.lr.ph

for.body19.lr.ph:                                 ; preds = %for.end11
  %memberidx.i.i.i155 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  br label %for.body19

for.body19:                                       ; preds = %for.body19.lr.ph, %for.body19
  %48 = phi i64 [ 1, %for.body19.lr.ph ], [ %60, %for.body19 ]
  %storemerge69211.in = phi ptr [ %45, %for.body19.lr.ph ], [ %ptridx.i164, %for.body19 ]
  %storemerge69211 = load ptr, ptr %storemerge69211.in, align 8
  %memberidx23 = getelementptr inbounds %Function, ptr %storemerge69211, i64 0, i32 1
  %49 = load ptr, ptr %memberidx23, align 8
  %50 = load ptr, ptr %storemerge69211, align 8
  %51 = load i64, ptr %memberidx.i.i.i155, align 4
  %52 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i156 = getelementptr inbounds %Program, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx1.i.i.i.i156, align 8
  %memberidx.i.i.i.i.i157 = getelementptr inbounds %Array_Module_, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i.i.i.i.i157, align 8
  %ptridx.i.i.i.i.i158 = getelementptr inbounds ptr, ptr %54, i64 %51
  %55 = load ptr, ptr %ptridx.i.i.i.i.i158, align 8
  %memberidx.i.i159 = getelementptr inbounds %Module, ptr %55, i64 0, i32 7
  %56 = load ptr, ptr %memberidx.i.i159, align 8
  %memberidx.i1.i.i160 = getelementptr inbounds %Array_Scope_, ptr %56, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i1.i.i160, align 8
  %58 = load ptr, ptr %57, align 8
  %memberidx.i161 = getelementptr inbounds %Scope, ptr %58, i64 0, i32 3
  %59 = load ptr, ptr %memberidx.i161, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %59, ptr %49, ptr %50)
  %60 = add i64 %48, 1
  store i64 %60, ptr %memberidx1.i.i139, align 4
  %ptridx.i164 = getelementptr inbounds ptr, ptr %45, i64 %48
  %61 = icmp sgt i64 %60, %46
  br i1 %61, label %for.end21, label %for.body19

for.end21:                                        ; preds = %for.body19, %for.end11
  tail call void @free(ptr nonnull %44)
  %memberidx27 = getelementptr inbounds %Module, ptr %1, i64 0, i32 4
  %62 = load ptr, ptr %memberidx27, align 8
  %63 = tail call ptr @malloc(i32 25)
  %memberidx.i181 = getelementptr inbounds %Array_Class_, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i181, align 8
  %memberidx1.i182 = getelementptr inbounds %Array_Class_, ptr %62, i64 0, i32 2
  %65 = load i64, ptr %memberidx1.i182, align 4
  store i1 false, ptr %63, align 1
  %memberidx1.i.i183 = getelementptr inbounds %ArrayIterator_Class_, ptr %63, i64 0, i32 1
  %memberidx2.i.i184 = getelementptr inbounds %ArrayIterator_Class_, ptr %63, i64 0, i32 3
  store ptr %64, ptr %memberidx2.i.i184, align 8
  %memberidx3.i.i185 = getelementptr inbounds %ArrayIterator_Class_, ptr %63, i64 0, i32 2
  store i64 %65, ptr %memberidx3.i.i185, align 4
  store i64 1, ptr %memberidx1.i.i183, align 4
  %66 = icmp slt i64 %65, 1
  br i1 %66, label %for.end31, label %for.body29.lr.ph

for.body29.lr.ph:                                 ; preds = %for.end21
  %memberidx.i.i.i170 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  br label %for.body29

for.body29:                                       ; preds = %for.body29.lr.ph, %for.body29
  %67 = phi i64 [ 1, %for.body29.lr.ph ], [ %83, %for.body29 ]
  %storemerge70208.in = phi ptr [ %64, %for.body29.lr.ph ], [ %ptridx.i168, %for.body29 ]
  %storemerge70208 = load ptr, ptr %storemerge70208.in, align 8
  %memberidx33 = getelementptr inbounds %Class, ptr %storemerge70208, i64 0, i32 1
  %68 = load ptr, ptr %memberidx33, align 8
  %69 = load ptr, ptr %storemerge70208, align 8
  %70 = load i64, ptr %memberidx.i.i.i170, align 4
  %71 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i171 = getelementptr inbounds %Program, ptr %71, i64 0, i32 1
  %72 = load ptr, ptr %memberidx1.i.i.i.i171, align 8
  %memberidx.i.i.i.i.i172 = getelementptr inbounds %Array_Module_, ptr %72, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i.i.i.i.i172, align 8
  %ptridx.i.i.i.i.i173 = getelementptr inbounds ptr, ptr %73, i64 %70
  %74 = load ptr, ptr %ptridx.i.i.i.i.i173, align 8
  %memberidx.i.i174 = getelementptr inbounds %Module, ptr %74, i64 0, i32 7
  %75 = load ptr, ptr %memberidx.i.i174, align 8
  %memberidx.i1.i.i175 = getelementptr inbounds %Array_Scope_, ptr %75, i64 0, i32 1
  %76 = load ptr, ptr %memberidx.i1.i.i175, align 8
  %77 = load ptr, ptr %76, align 8
  %memberidx.i176 = getelementptr inbounds %Scope, ptr %77, i64 0, i32 2
  %78 = load ptr, ptr %memberidx.i176, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %78, ptr %68, ptr %69)
  %memberidx1.i177 = getelementptr inbounds %Scope, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx1.i177, align 8
  %80 = tail call ptr @malloc(i32 24)
  %81 = load i64, ptr %69, align 4
  %memberidx1.i.i178 = getelementptr inbounds %TypeId, ptr %69, i64 0, i32 2
  %82 = load i64, ptr %memberidx1.i.i178, align 4
  store i64 3, ptr %80, align 4
  %memberidx1.i.i.i179 = getelementptr inbounds %VarId, ptr %80, i64 0, i32 1
  store i64 %81, ptr %memberidx1.i.i.i179, align 4
  %memberidx2.i.i.i180 = getelementptr inbounds %VarId, ptr %80, i64 0, i32 2
  store i64 %82, ptr %memberidx2.i.i.i180, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %79, ptr %68, ptr nonnull %80)
  %83 = add i64 %67, 1
  store i64 %83, ptr %memberidx1.i.i183, align 4
  %ptridx.i168 = getelementptr inbounds ptr, ptr %64, i64 %67
  %84 = icmp sgt i64 %83, %65
  br i1 %84, label %for.end31, label %for.body29

for.end31:                                        ; preds = %for.body29, %for.end21
  tail call void @free(ptr nonnull %63)
  %memberidx37 = getelementptr inbounds %Module, ptr %1, i64 0, i32 6
  %85 = load ptr, ptr %memberidx37, align 8
  %86 = tail call ptr @malloc(i32 25)
  %memberidx.i150 = getelementptr inbounds %Array_Enum_, ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i150, align 8
  %memberidx1.i151 = getelementptr inbounds %Array_Enum_, ptr %85, i64 0, i32 2
  %88 = load i64, ptr %memberidx1.i151, align 4
  store i1 false, ptr %86, align 1
  %memberidx1.i.i152 = getelementptr inbounds %ArrayIterator_Enum_, ptr %86, i64 0, i32 1
  %memberidx2.i.i153 = getelementptr inbounds %ArrayIterator_Enum_, ptr %86, i64 0, i32 3
  store ptr %87, ptr %memberidx2.i.i153, align 8
  %memberidx3.i.i154 = getelementptr inbounds %ArrayIterator_Enum_, ptr %86, i64 0, i32 2
  store i64 %88, ptr %memberidx3.i.i154, align 4
  store i64 1, ptr %memberidx1.i.i152, align 4
  %89 = icmp slt i64 %88, 1
  br i1 %89, label %for.end41, label %for.body39.lr.ph

for.body39.lr.ph:                                 ; preds = %for.end31
  %memberidx.i.i.i108 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  br label %for.body39

for.body39:                                       ; preds = %for.body39.lr.ph, %for.body39
  %90 = phi i64 [ 1, %for.body39.lr.ph ], [ %106, %for.body39 ]
  %storemerge71205.in = phi ptr [ %87, %for.body39.lr.ph ], [ %ptridx.i106, %for.body39 ]
  %storemerge71205 = load ptr, ptr %storemerge71205.in, align 8
  %memberidx43 = getelementptr inbounds %Enum, ptr %storemerge71205, i64 0, i32 1
  %91 = load ptr, ptr %memberidx43, align 8
  %92 = load ptr, ptr %storemerge71205, align 8
  %93 = load i64, ptr %memberidx.i.i.i108, align 4
  %94 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i109 = getelementptr inbounds %Program, ptr %94, i64 0, i32 1
  %95 = load ptr, ptr %memberidx1.i.i.i.i109, align 8
  %memberidx.i.i.i.i.i110 = getelementptr inbounds %Array_Module_, ptr %95, i64 0, i32 1
  %96 = load ptr, ptr %memberidx.i.i.i.i.i110, align 8
  %ptridx.i.i.i.i.i111 = getelementptr inbounds ptr, ptr %96, i64 %93
  %97 = load ptr, ptr %ptridx.i.i.i.i.i111, align 8
  %memberidx.i.i112 = getelementptr inbounds %Module, ptr %97, i64 0, i32 7
  %98 = load ptr, ptr %memberidx.i.i112, align 8
  %memberidx.i1.i.i113 = getelementptr inbounds %Array_Scope_, ptr %98, i64 0, i32 1
  %99 = load ptr, ptr %memberidx.i1.i.i113, align 8
  %100 = load ptr, ptr %99, align 8
  %memberidx.i114 = getelementptr inbounds %Scope, ptr %100, i64 0, i32 4
  %101 = load ptr, ptr %memberidx.i114, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %101, ptr %91, ptr %92)
  %memberidx1.i115 = getelementptr inbounds %Scope, ptr %100, i64 0, i32 1
  %102 = load ptr, ptr %memberidx1.i115, align 8
  %103 = tail call ptr @malloc(i32 24)
  %104 = load i64, ptr %92, align 4
  %memberidx1.i.i116 = getelementptr inbounds %TypeId, ptr %92, i64 0, i32 2
  %105 = load i64, ptr %memberidx1.i.i116, align 4
  store i64 4, ptr %103, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %103, i64 0, i32 1
  store i64 %104, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %VarId, ptr %103, i64 0, i32 2
  store i64 %105, ptr %memberidx2.i.i.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %102, ptr %91, ptr nonnull %103)
  %106 = add i64 %90, 1
  store i64 %106, ptr %memberidx1.i.i152, align 4
  %ptridx.i106 = getelementptr inbounds ptr, ptr %87, i64 %90
  %107 = icmp sgt i64 %106, %88
  br i1 %107, label %for.end41, label %for.body39

for.end41:                                        ; preds = %for.body39, %for.end31
  tail call void @free(ptr nonnull %86)
  %memberidx47 = getelementptr inbounds %Scope, ptr %4, i64 0, i32 6
  %108 = load ptr, ptr %memberidx47, align 8
  %109 = tail call ptr @malloc(i32 25)
  %110 = load ptr, ptr %108, align 8
  %memberidx1.i88 = getelementptr inbounds %Map_string_Type_, ptr %108, i64 0, i32 1
  %111 = load i64, ptr %memberidx1.i88, align 4
  %memberidx2.i89 = getelementptr inbounds %Map_string_Type_, ptr %108, i64 0, i32 2
  %112 = load i64, ptr %memberidx2.i89, align 4
  store i1 false, ptr %109, align 1
  %memberidx1.i.i90 = getelementptr inbounds %MapIterator_string_Type_, ptr %109, i64 0, i32 1
  store ptr %110, ptr %memberidx1.i.i90, align 8
  %memberidx2.i.i91 = getelementptr inbounds %MapIterator_string_Type_, ptr %109, i64 0, i32 2
  %memberidx3.i.i92 = getelementptr inbounds %MapIterator_string_Type_, ptr %109, i64 0, i32 3
  store i64 %112, ptr %memberidx3.i.i92, align 4
  %113 = add i64 %111, -1
  store i64 %113, ptr %memberidx2.i.i91, align 4
  %114 = icmp sgt i64 %111, 0
  br i1 %114, label %while.entry.i82, label %MapIterator_string_Type__next.exit87

while.entry.i82:                                  ; preds = %for.end41, %ifend.i86
  %115 = phi i64 [ %118, %ifend.i86 ], [ %113, %for.end41 ]
  %116 = phi ptr [ %incdec.ptr.i80, %ifend.i86 ], [ %110, %for.end41 ]
  %incdec.ptr.i80 = getelementptr inbounds ptr, ptr %116, i64 1
  %117 = load ptr, ptr %116, align 8
  %.not.i81 = icmp eq ptr %117, null
  br i1 %.not.i81, label %ifend.i86, label %MapIterator_string_Type__next.exit87.loopexit

ifend.i86:                                        ; preds = %while.entry.i82
  %118 = add i64 %115, -1
  store i64 %118, ptr %memberidx2.i.i91, align 4
  %119 = icmp sgt i64 %115, 0
  br i1 %119, label %while.entry.i82, label %MapIterator_string_Type__next.exit87.loopexit

MapIterator_string_Type__next.exit87.loopexit:    ; preds = %ifend.i86, %while.entry.i82
  %120 = phi i64 [ %118, %ifend.i86 ], [ %115, %while.entry.i82 ]
  store ptr %incdec.ptr.i80, ptr %memberidx1.i.i90, align 8
  br label %MapIterator_string_Type__next.exit87

MapIterator_string_Type__next.exit87:             ; preds = %MapIterator_string_Type__next.exit87.loopexit, %for.end41
  %121 = phi i64 [ %120, %MapIterator_string_Type__next.exit87.loopexit ], [ %113, %for.end41 ]
  %.pn.in.promoted = phi ptr [ %incdec.ptr.i80, %MapIterator_string_Type__next.exit87.loopexit ], [ %110, %for.end41 ]
  %storemerge196200 = icmp slt i64 %112, 1
  store i1 %storemerge196200, ptr %109, align 1
  br i1 %storemerge196200, label %for.end51, label %for.body49.lr.ph

for.body49.lr.ph:                                 ; preds = %MapIterator_string_Type__next.exit87
  %memberidx.i.i.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  br label %for.body49

for.body49:                                       ; preds = %for.body49.lr.ph, %MapIterator_string_Type__next.exit
  %122 = phi i64 [ %121, %for.body49.lr.ph ], [ %141, %MapIterator_string_Type__next.exit ]
  %.pn203 = phi ptr [ %.pn.in.promoted, %for.body49.lr.ph ], [ %.pn202, %MapIterator_string_Type__next.exit ]
  %storemerge197201.in = phi i64 [ %112, %for.body49.lr.ph ], [ %storemerge197201, %MapIterator_string_Type__next.exit ]
  %storemerge197201 = add i64 %storemerge197201.in, -1
  %storemerge72.in = getelementptr inbounds ptr, ptr %.pn203, i64 -1
  %storemerge72 = load ptr, ptr %storemerge72.in, align 8
  %123 = load ptr, ptr %storemerge72, align 8
  %memberidx54 = getelementptr inbounds %MapEntry_string_Type_, ptr %storemerge72, i64 0, i32 1
  %124 = load ptr, ptr %memberidx54, align 8
  %125 = load i64, ptr %memberidx.i.i.i, align 4
  %126 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %126, i64 0, i32 1
  %127 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %127, i64 0, i32 1
  %128 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %128, i64 %125
  %129 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Module, ptr %129, i64 0, i32 7
  %130 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx.i1.i.i = getelementptr inbounds %Array_Scope_, ptr %130, i64 0, i32 1
  %131 = load ptr, ptr %memberidx.i1.i.i, align 8
  %132 = load ptr, ptr %131, align 8
  %memberidx.i74 = getelementptr inbounds %Scope, ptr %132, i64 0, i32 6
  %133 = load ptr, ptr %memberidx.i74, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr %133, ptr %123, ptr %124)
  %134 = add i64 %122, -1
  store i64 %134, ptr %memberidx2.i.i91, align 4
  %135 = icmp sgt i64 %122, 0
  br i1 %135, label %while.entry.i, label %MapIterator_string_Type__next.exit

while.entry.i:                                    ; preds = %for.body49, %ifend.i
  %136 = phi i64 [ %139, %ifend.i ], [ %134, %for.body49 ]
  %137 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %.pn203, %for.body49 ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %137, i64 1
  %138 = load ptr, ptr %137, align 8
  %.not.i = icmp eq ptr %138, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_Type__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %139 = add i64 %136, -1
  store i64 %139, ptr %memberidx2.i.i91, align 4
  %140 = icmp sgt i64 %136, 0
  br i1 %140, label %while.entry.i, label %MapIterator_string_Type__next.exit

MapIterator_string_Type__next.exit:               ; preds = %while.entry.i, %ifend.i, %for.body49
  %141 = phi i64 [ %134, %for.body49 ], [ %136, %while.entry.i ], [ %139, %ifend.i ]
  %.pn202 = phi ptr [ %.pn203, %for.body49 ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge196 = icmp slt i64 %storemerge197201, 1
  store i1 %storemerge196, ptr %109, align 1
  br i1 %storemerge196, label %for.cond48.for.end51_crit_edge, label %for.body49

for.cond48.for.end51_crit_edge:                   ; preds = %MapIterator_string_Type__next.exit
  store ptr %.pn202, ptr %memberidx1.i.i90, align 8
  br label %for.end51

for.end51:                                        ; preds = %for.cond48.for.end51_crit_edge, %MapIterator_string_Type__next.exit87
  tail call void @free(ptr nonnull %109)
  ret void
}

define internal fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %3, align 4
  %memberidx = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx1 = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %6)
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %9 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %9, i64 0, i32 6
  %10 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %10, i64 0, i32 2
  %11 = load i64, ptr %memberidx2.i, align 4
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend45, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %41, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %150, %ifend45 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %13 = load ptr, ptr %0, align 8
  %14 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %14, ptr noundef nonnull align 8 dereferenceable(6) @164, i64 6, i1 false)
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i, align 4
  %16 = load i64, ptr %7, align 4
  %17 = icmp eq i64 %16, 21
  br i1 %17, label %if.entry.i, label %is_object.exit.thread

if.entry.i:                                       ; preds = %ifend, %if.entry.i
  %.tr5.i = phi ptr [ %18, %if.entry.i ], [ %7, %ifend ]
  %memberidx1.i158 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %18 = load ptr, ptr %memberidx1.i158, align 8
  %19 = load i64, ptr %18, align 4
  switch i64 %19, label %ifend6 [
    i64 21, label %if.entry.i
    i64 13, label %tailrecurse.i.preheader
  ]

is_object.exit.thread:                            ; preds = %ifend
  %20 = icmp eq i64 %16, 13
  br i1 %20, label %if.entry3.i, label %ifend6

tailrecurse.i.preheader:                          ; preds = %if.entry.i
  br i1 %17, label %if.entry.i161, label %if.entry3.i

if.entry.i161:                                    ; preds = %tailrecurse.i.preheader, %if.entry.i161
  %.tr11.i212 = phi ptr [ %21, %if.entry.i161 ], [ %7, %tailrecurse.i.preheader ]
  %memberidx1.i160 = getelementptr inbounds %GenericType, ptr %.tr11.i212, i64 0, i32 3
  %21 = load ptr, ptr %memberidx1.i160, align 8
  %22 = load i64, ptr %21, align 4
  %switch = icmp eq i64 %22, 21
  br i1 %switch, label %if.entry.i161, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i161, %is_object.exit.thread, %tailrecurse.i.preheader
  %.tr11.i.lcssa = phi ptr [ %7, %tailrecurse.i.preheader ], [ %7, %is_object.exit.thread ], [ %21, %if.entry.i161 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i162 = getelementptr inbounds %Program, ptr %13, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i.i162, align 8
  %25 = load i64, ptr %23, align 4
  %memberidx.i.i.i163 = getelementptr inbounds %Array_Module_, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i.i.i163, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %26, i64 %25
  %27 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i164 = getelementptr inbounds %Module, ptr %27, i64 0, i32 4
  %28 = load ptr, ptr %memberidx2.i.i164, align 8
  %memberidx3.i.i165 = getelementptr inbounds %TypeId, ptr %23, i64 0, i32 2
  %29 = load i64, ptr %memberidx3.i.i165, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %28, i64 0, i32 1
  %30 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %30, i64 %29
  %31 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx.i79 = getelementptr inbounds %Class, ptr %31, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i79, align 8
  %memberidx.i.i80 = getelementptr inbounds %string, ptr %32, i64 0, i32 2
  %33 = load i64, ptr %memberidx.i.i80, align 4
  %.not.i.i = icmp eq i64 %33, 6
  br i1 %.not.i.i, label %string___eq__.exit.i, label %ifend6

string___eq__.exit.i:                             ; preds = %if.entry3.i
  %memberidx2.i.i82 = getelementptr inbounds %string, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx2.i.i82, align 8
  %35 = tail call i64 @memcmp(ptr %34, ptr %14, i64 6)
  %36 = icmp eq i64 %35, 0
  %37 = load ptr, ptr %31, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 1
  %40 = and i1 %36, %39
  br i1 %40, label %if.entry4, label %string___eq__.exit.i.ifend6_crit_edge

string___eq__.exit.i.ifend6_crit_edge:            ; preds = %string___eq__.exit.i
  %.pre = load i64, ptr %7, align 4
  br label %ifend6

if.entry4:                                        ; preds = %string___eq__.exit.i
  %41 = tail call ptr @malloc(i32 49)
  %42 = tail call ptr @malloc(i32 0)
  %43 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %43, align 8
  %memberidx.i.i83 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  store ptr %42, ptr %memberidx.i.i83, align 8
  %memberidx1.i.i84 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i84, i8 0, i64 16, i1 false)
  %44 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_int_, ptr %44, align 8
  %memberidx.i86 = getelementptr inbounds %Array_int_, ptr %44, i64 0, i32 2
  store i64 0, ptr %memberidx.i86, align 4
  %memberidx1.i87 = getelementptr inbounds %Array_int_, ptr %44, i64 0, i32 3
  store i64 8, ptr %memberidx1.i87, align 4
  %memberidx2.i88 = getelementptr inbounds %Array_int_, ptr %44, i64 0, i32 1
  %45 = tail call ptr @malloc(i32 64)
  store ptr %45, ptr %memberidx2.i88, align 8
  store i64 0, ptr %45, align 4
  store i64 1, ptr %memberidx.i86, align 4
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %46, align 8
  %memberidx.i89 = getelementptr inbounds %Array_Expression_, ptr %46, i64 0, i32 2
  store i64 0, ptr %memberidx.i89, align 4
  %memberidx1.i90 = getelementptr inbounds %Array_Expression_, ptr %46, i64 0, i32 3
  store i64 8, ptr %memberidx1.i90, align 4
  %memberidx2.i91 = getelementptr inbounds %Array_Expression_, ptr %46, i64 0, i32 1
  %47 = tail call ptr @malloc(i32 64)
  store ptr %47, ptr %memberidx2.i91, align 8
  store ptr %5, ptr %47, align 8
  store i64 1, ptr %memberidx.i89, align 4
  store i64 8, ptr %41, align 4
  %memberidx.i.i92 = getelementptr inbounds %Expression, ptr %41, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i92, align 4
  %memberidx1.i.i93 = getelementptr inbounds %Expression, ptr %41, i64 0, i32 1
  %memberidx.i94 = getelementptr inbounds %StringExpression, ptr %41, i64 0, i32 6
  store ptr %46, ptr %memberidx.i94, align 8
  %memberidx1.i95 = getelementptr inbounds %StringExpression, ptr %41, i64 0, i32 5
  store ptr %44, ptr %memberidx1.i95, align 8
  %memberidx2.i96 = getelementptr inbounds %Expression, ptr %41, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i96, align 8
  %memberidx3.i = getelementptr inbounds %StringExpression, ptr %41, i64 0, i32 4
  store ptr %43, ptr %memberidx3.i, align 8
  store i1 true, ptr %memberidx1.i.i93, align 1
  br label %common.ret

ifend6:                                           ; preds = %if.entry.i, %is_object.exit.thread, %string___eq__.exit.i.ifend6_crit_edge, %if.entry3.i
  %48 = phi i64 [ %.pre, %string___eq__.exit.i.ifend6_crit_edge ], [ %16, %if.entry3.i ], [ %16, %is_object.exit.thread ], [ %16, %if.entry.i ]
  %49 = add i64 %48, -1
  %50 = icmp ult i64 %49, 11
  %51 = load i64, ptr %8, align 4
  %52 = add i64 %51, -1
  %53 = icmp ult i64 %52, 11
  %54 = and i1 %50, %53
  %55 = icmp ult i64 %49, 7
  %56 = icmp eq i64 %51, 14
  %57 = and i1 %55, %56
  %58 = icmp ult i64 %52, 7
  %59 = icmp eq i64 %48, 14
  %60 = and i1 %59, %58
  %61 = select i1 %60, i1 true, i1 %57
  %spec.store.select157 = select i1 %61, i1 true, i1 %54
  %62 = load ptr, ptr %0, align 8
  %63 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %63, ptr noundef nonnull align 8 dereferenceable(6) @164, i64 6, i1 false)
  %64 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %64, align 8
  %memberidx.i.i97 = getelementptr inbounds %string, ptr %64, i64 0, i32 1
  store ptr %63, ptr %memberidx.i.i97, align 8
  %memberidx1.i.i98 = getelementptr inbounds %string, ptr %64, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i98, align 4
  %memberidx2.i.i99 = getelementptr inbounds %string, ptr %64, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i99, align 4
  %65 = load i64, ptr %8, align 4
  %66 = icmp eq i64 %65, 21
  br i1 %66, label %if.entry.i168, label %is_object.exit171.thread

if.entry.i168:                                    ; preds = %ifend6, %if.entry.i168
  %.tr5.i166 = phi ptr [ %67, %if.entry.i168 ], [ %8, %ifend6 ]
  %memberidx1.i167 = getelementptr inbounds %GenericType, ptr %.tr5.i166, i64 0, i32 3
  %67 = load ptr, ptr %memberidx1.i167, align 8
  %68 = load i64, ptr %67, align 4
  switch i64 %68, label %ifend25 [
    i64 21, label %if.entry.i168
    i64 13, label %tailrecurse.i173.preheader
  ]

is_object.exit171.thread:                         ; preds = %ifend6
  %69 = icmp eq i64 %65, 13
  br i1 %69, label %if.entry3.i185, label %ifend25

tailrecurse.i173.preheader:                       ; preds = %if.entry.i168
  br i1 %66, label %if.entry.i176, label %if.entry3.i185

if.entry.i176:                                    ; preds = %tailrecurse.i173.preheader, %if.entry.i176
  %.tr11.i172210 = phi ptr [ %70, %if.entry.i176 ], [ %8, %tailrecurse.i173.preheader ]
  %memberidx1.i175 = getelementptr inbounds %GenericType, ptr %.tr11.i172210, i64 0, i32 3
  %70 = load ptr, ptr %memberidx1.i175, align 8
  %71 = load i64, ptr %70, align 4
  %switch205 = icmp eq i64 %71, 21
  br i1 %switch205, label %if.entry.i176, label %if.entry3.i185

if.entry3.i185:                                   ; preds = %if.entry.i176, %is_object.exit171.thread, %tailrecurse.i173.preheader
  %.tr11.i172.lcssa = phi ptr [ %8, %tailrecurse.i173.preheader ], [ %8, %is_object.exit171.thread ], [ %70, %if.entry.i176 ]
  %memberidx6.i177 = getelementptr inbounds %ObjectType, ptr %.tr11.i172.lcssa, i64 0, i32 1
  %72 = load ptr, ptr %memberidx6.i177, align 8
  %memberidx.i.i178 = getelementptr inbounds %Program, ptr %62, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i.i178, align 8
  %74 = load i64, ptr %72, align 4
  %memberidx.i.i.i179 = getelementptr inbounds %Array_Module_, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i.i.i179, align 8
  %ptridx.i.i.i180 = getelementptr inbounds ptr, ptr %75, i64 %74
  %76 = load ptr, ptr %ptridx.i.i.i180, align 8
  %memberidx2.i.i181 = getelementptr inbounds %Module, ptr %76, i64 0, i32 4
  %77 = load ptr, ptr %memberidx2.i.i181, align 8
  %memberidx3.i.i182 = getelementptr inbounds %TypeId, ptr %72, i64 0, i32 2
  %78 = load i64, ptr %memberidx3.i.i182, align 4
  %memberidx.i5.i.i183 = getelementptr inbounds %Array_Class_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i5.i.i183, align 8
  %ptridx.i6.i.i184 = getelementptr inbounds ptr, ptr %79, i64 %78
  %80 = load ptr, ptr %ptridx.i6.i.i184, align 8
  %memberidx.i101 = getelementptr inbounds %Class, ptr %80, i64 0, i32 1
  %81 = load ptr, ptr %memberidx.i101, align 8
  %memberidx.i.i102 = getelementptr inbounds %string, ptr %81, i64 0, i32 2
  %82 = load i64, ptr %memberidx.i.i102, align 4
  %.not.i.i104 = icmp eq i64 %82, 6
  br i1 %.not.i.i104, label %is_buitin.exit111, label %ifend25

is_buitin.exit111:                                ; preds = %if.entry3.i185
  %memberidx2.i.i106 = getelementptr inbounds %string, ptr %81, i64 0, i32 1
  %83 = load ptr, ptr %memberidx2.i.i106, align 8
  %84 = tail call i64 @memcmp(ptr %83, ptr %63, i64 6)
  %85 = icmp eq i64 %84, 0
  %86 = load ptr, ptr %80, align 8
  %87 = load i64, ptr %86, align 4
  %88 = icmp eq i64 %87, 1
  %89 = and i1 %85, %88
  %90 = and i1 %50, %89
  br i1 %90, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %is_buitin.exit111
  %91 = load i64, ptr %7, align 4
  %92 = and i64 %91, -4
  %93 = icmp eq i64 %92, 8
  br i1 %93, label %if.entry26, label %else27

ifend25:                                          ; preds = %if.entry.i168, %is_object.exit171.thread, %if.entry3.i185, %is_buitin.exit111, %ifend28
  %.pr220 = phi i1 [ true, %ifend28 ], [ %spec.store.select157, %is_buitin.exit111 ], [ %spec.store.select157, %if.entry3.i185 ], [ %spec.store.select157, %is_object.exit171.thread ], [ %spec.store.select157, %if.entry.i168 ]
  %exp.0 = phi ptr [ %113, %ifend28 ], [ %5, %is_buitin.exit111 ], [ %5, %if.entry3.i185 ], [ %5, %is_object.exit171.thread ], [ %5, %if.entry.i168 ]
  %94 = load i64, ptr %7, align 4
  %95 = icmp eq i64 %94, 21
  br i1 %95, label %if.entry.i189, label %is_object.exit192

if.entry.i189:                                    ; preds = %ifend25, %if.entry.i189
  %.tr5.i187 = phi ptr [ %96, %if.entry.i189 ], [ %7, %ifend25 ]
  %memberidx1.i188 = getelementptr inbounds %GenericType, ptr %.tr5.i187, i64 0, i32 3
  %96 = load ptr, ptr %memberidx1.i188, align 8
  %97 = load i64, ptr %96, align 4
  %98 = icmp eq i64 %97, 21
  br i1 %98, label %if.entry.i189, label %is_object.exit192

is_object.exit192:                                ; preds = %if.entry.i189, %ifend25
  %.lcssa.i190 = phi i64 [ %94, %ifend25 ], [ %97, %if.entry.i189 ]
  %99 = icmp eq i64 %.lcssa.i190, 13
  %100 = load i64, ptr %8, align 4
  %101 = icmp eq i64 %100, 21
  br i1 %101, label %if.entry.i195, label %is_object.exit198

if.entry.i195:                                    ; preds = %is_object.exit192, %if.entry.i195
  %.tr5.i193 = phi ptr [ %102, %if.entry.i195 ], [ %8, %is_object.exit192 ]
  %memberidx1.i194 = getelementptr inbounds %GenericType, ptr %.tr5.i193, i64 0, i32 3
  %102 = load ptr, ptr %memberidx1.i194, align 8
  %103 = load i64, ptr %102, align 4
  %104 = icmp eq i64 %103, 21
  br i1 %104, label %if.entry.i195, label %is_object.exit198

is_object.exit198:                                ; preds = %if.entry.i195, %is_object.exit192
  %.lcssa.i196 = phi i64 [ %100, %is_object.exit192 ], [ %103, %if.entry.i195 ]
  %105 = icmp eq i64 %.lcssa.i196, 13
  %106 = and i1 %99, %105
  br i1 %106, label %ifend45, label %ifend39

if.entry26:                                       ; preds = %if.entry23
  %107 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %107, align 4
  %memberidx.i.i112 = getelementptr inbounds %Expression, ptr %107, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i112, align 4
  %memberidx1.i.i113 = getelementptr inbounds %Expression, ptr %107, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i113, align 1
  %memberidx.i114 = getelementptr inbounds %IntrinsicCall, ptr %107, i64 0, i32 4
  store i64 0, ptr %memberidx.i114, align 4
  %memberidx1.i115 = getelementptr inbounds %IntrinsicCall, ptr %107, i64 0, i32 5
  %108 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %108, align 8
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %108, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %108, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i, align 4
  %memberidx2.i.i116 = getelementptr inbounds %Array_Expression_, ptr %108, i64 0, i32 1
  %109 = tail call ptr @malloc(i32 64)
  store ptr %109, ptr %memberidx2.i.i116, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %108, ptr %memberidx1.i115, align 8
  %memberidx4.i118 = getelementptr inbounds %Expression, ptr %107, i64 0, i32 3
  %110 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %110, align 4
  store ptr %110, ptr %memberidx4.i118, align 8
  br label %ifend28

else27:                                           ; preds = %if.entry23
  %111 = icmp slt i64 %91, 5
  %112 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %112, align 4
  %memberidx.i.i122 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i122, align 4
  %memberidx1.i.i123 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i123, align 1
  %memberidx.i124 = getelementptr inbounds %IntrinsicCall, ptr %112, i64 0, i32 4
  br i1 %111, label %if.entry31, label %else32

ifend28:                                          ; preds = %if.entry31, %else32, %if.entry26
  %113 = phi ptr [ %112, %if.entry31 ], [ %112, %else32 ], [ %107, %if.entry26 ]
  %memberidx34 = getelementptr inbounds %IntrinsicCall, ptr %113, i64 0, i32 5
  %114 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %114, align 8
  %memberidx.i119 = getelementptr inbounds %Array_Expression_, ptr %114, i64 0, i32 2
  store i64 0, ptr %memberidx.i119, align 4
  %memberidx1.i120 = getelementptr inbounds %Array_Expression_, ptr %114, i64 0, i32 3
  store i64 8, ptr %memberidx1.i120, align 4
  %memberidx2.i121 = getelementptr inbounds %Array_Expression_, ptr %114, i64 0, i32 1
  %115 = tail call ptr @malloc(i32 64)
  store ptr %115, ptr %memberidx2.i121, align 8
  store ptr %5, ptr %115, align 8
  store i64 1, ptr %memberidx.i119, align 4
  store ptr %114, ptr %memberidx34, align 8
  br label %ifend25

if.entry31:                                       ; preds = %else27
  store i64 1, ptr %memberidx.i124, align 4
  %memberidx1.i125 = getelementptr inbounds %IntrinsicCall, ptr %112, i64 0, i32 5
  %116 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %116, align 8
  %memberidx.i7.i126 = getelementptr inbounds %Array_Expression_, ptr %116, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i126, align 4
  %memberidx1.i8.i127 = getelementptr inbounds %Array_Expression_, ptr %116, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i127, align 4
  %memberidx2.i.i128 = getelementptr inbounds %Array_Expression_, ptr %116, i64 0, i32 1
  %117 = tail call ptr @malloc(i32 64)
  store ptr %117, ptr %memberidx2.i.i128, align 8
  store i64 0, ptr %memberidx.i7.i126, align 4
  store ptr %116, ptr %memberidx1.i125, align 8
  %memberidx4.i130 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 3
  %118 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %118, align 4
  store ptr %118, ptr %memberidx4.i130, align 8
  br label %ifend28

else32:                                           ; preds = %else27
  store i64 2, ptr %memberidx.i124, align 4
  %memberidx1.i134 = getelementptr inbounds %IntrinsicCall, ptr %112, i64 0, i32 5
  %119 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %119, align 8
  %memberidx.i7.i135 = getelementptr inbounds %Array_Expression_, ptr %119, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i135, align 4
  %memberidx1.i8.i136 = getelementptr inbounds %Array_Expression_, ptr %119, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i136, align 4
  %memberidx2.i.i137 = getelementptr inbounds %Array_Expression_, ptr %119, i64 0, i32 1
  %120 = tail call ptr @malloc(i32 64)
  store ptr %120, ptr %memberidx2.i.i137, align 8
  store i64 0, ptr %memberidx.i7.i135, align 4
  store ptr %119, ptr %memberidx1.i134, align 8
  %memberidx4.i139 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 3
  %121 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %121, align 4
  store ptr %121, ptr %memberidx4.i139, align 8
  br label %ifend28

ifend39:                                          ; preds = %is_object.exit198
  %122 = icmp eq i64 %94, 15
  %123 = icmp eq i64 %100, 15
  %124 = and i1 %122, %123
  %brmerge = select i1 %124, i1 true, i1 %.pr220
  br i1 %brmerge, label %ifend45, label %if.entry43

if.entry43:                                       ; preds = %ifend39
  %125 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %8)
  %126 = load ptr, ptr %125, align 8
  %memberidx46 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %126, i64 0, i32 5
  %127 = load ptr, ptr %memberidx46, align 8
  %128 = tail call ptr %127(ptr nonnull %125)
  %129 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %7)
  %130 = load ptr, ptr %129, align 8
  %memberidx47 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %130, i64 0, i32 5
  %131 = load ptr, ptr %memberidx47, align 8
  %132 = tail call ptr %131(ptr nonnull %129)
  %133 = alloca ptr, align 8
  %134 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %133, ptr nonnull @165, ptr %128, ptr %132)
  %135 = load ptr, ptr %133, align 8
  %136 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %136, align 8
  %memberidx.i140 = getelementptr inbounds %string, ptr %136, i64 0, i32 1
  store ptr %135, ptr %memberidx.i140, align 8
  %memberidx1.i141 = getelementptr inbounds %string, ptr %136, i64 0, i32 2
  store i64 %134, ptr %memberidx1.i141, align 4
  %memberidx2.i142 = getelementptr inbounds %string, ptr %136, i64 0, i32 3
  store i64 %134, ptr %memberidx2.i142, align 4
  tail call void @free(ptr %128)
  tail call void @free(ptr %132)
  %137 = load ptr, ptr %1, align 8
  %138 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i144 = getelementptr inbounds %Compiler, ptr %138, i64 0, i32 6
  %139 = load ptr, ptr %memberidx1.i144, align 8
  %140 = call ptr @malloc(i32 24)
  store i64 5, ptr %140, align 4
  %memberidx1.i.i145 = getelementptr inbounds %FloError, ptr %140, i64 0, i32 2
  store ptr %137, ptr %memberidx1.i.i145, align 8
  %memberidx2.i.i146 = getelementptr inbounds %FloError, ptr %140, i64 0, i32 1
  store ptr %136, ptr %memberidx2.i.i146, align 8
  %memberidx.i.i147 = getelementptr inbounds %Array_FloError_, ptr %139, i64 0, i32 2
  %141 = load i64, ptr %memberidx.i.i147, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %139, i64 0, i32 3
  %142 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i148 = icmp slt i64 %141, %142
  br i1 %.not.i.i148, label %if.entry43.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry43.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry43
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %139, i64 0, i32 1
  %.pre222 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry43
  %143 = shl i64 %142, 1
  store i64 %143, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %139, i64 0, i32 1
  %144 = load ptr, ptr %memberidx2.i.i.i, align 8
  %145 = shl i64 %142, 4
  %146 = call ptr @realloc(ptr %144, i64 %145)
  store ptr %146, ptr %memberidx2.i.i.i, align 8
  %.pre221 = load i64, ptr %memberidx.i.i147, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry43.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %147 = phi ptr [ %.pre222, %if.entry43.TypeChecker_error.exit_crit_edge ], [ %146, %if.entry.i.i ]
  %148 = phi i64 [ %141, %if.entry43.TypeChecker_error.exit_crit_edge ], [ %.pre221, %if.entry.i.i ]
  %149 = add i64 %148, 1
  store i64 %149, ptr %memberidx.i.i147, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %147, i64 %148
  store ptr %140, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend45:                                          ; preds = %ifend39, %is_object.exit198
  %150 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %150, align 4
  %memberidx.i.i149 = getelementptr inbounds %Expression, ptr %150, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i149, align 4
  %memberidx1.i.i150 = getelementptr inbounds %Expression, ptr %150, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i150, align 1
  %memberidx.i151 = getelementptr inbounds %TypeCastExpression, ptr %150, i64 0, i32 4
  store ptr %exp.0, ptr %memberidx.i151, align 8
  %memberidx1.i152 = getelementptr inbounds %Expression, ptr %150, i64 0, i32 3
  store ptr %7, ptr %memberidx1.i152, align 8
  %memberidx3.i154 = getelementptr inbounds %Expression, ptr %exp.0, i64 0, i32 1
  %151 = load i1, ptr %memberidx3.i154, align 1
  store i1 %151, ptr %memberidx1.i.i150, align 1
  br label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Expression__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Expression__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc ptr @TypeChecker_fill_in_call_args(ptr %0, ptr nocapture readonly %1, ptr readonly %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %4, align 8
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 2
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %memberidx2 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 2
  %6 = load i64, ptr %memberidx2, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx3 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  %memberidx.i43 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Expression____sl__.exit
  %8 = phi ptr [ %5, %for.body.lr.ph ], [ %32, %Array_Expression____sl__.exit ]
  %9 = phi i64 [ 8, %for.body.lr.ph ], [ %33, %Array_Expression____sl__.exit ]
  %10 = phi i64 [ 0, %for.body.lr.ph ], [ %34, %Array_Expression____sl__.exit ]
  %i.062 = phi i64 [ 0, %for.body.lr.ph ], [ %35, %Array_Expression____sl__.exit ]
  %11 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Array_Type_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx4, align 4
  %13 = icmp sgt i64 %12, %i.062
  br i1 %13, label %true_block, label %false_block

for.end:                                          ; preds = %Array_Expression____sl__.exit, %for.entry
  %14 = phi ptr [ %5, %for.entry ], [ %32, %Array_Expression____sl__.exit ]
  %15 = phi i64 [ 8, %for.entry ], [ %33, %Array_Expression____sl__.exit ]
  %16 = phi i64 [ 0, %for.entry ], [ %34, %Array_Expression____sl__.exit ]
  %.lcssa = phi i64 [ %6, %for.entry ], [ %36, %Array_Expression____sl__.exit ]
  %memberidx.i39 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %17 = load ptr, ptr %memberidx.i39, align 8
  %memberidx1.i40 = getelementptr inbounds %Compiler, ptr %17, i64 0, i32 6
  %18 = load ptr, ptr %memberidx1.i40, align 8
  %memberidx2.i41 = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i41, align 4
  %20 = icmp sgt i64 %19, 0
  %21 = icmp eq ptr %2, null
  %22 = or i1 %21, %20
  br i1 %22, label %common.ret, label %ifend

true_block:                                       ; preds = %for.body
  %memberidx.i42 = getelementptr inbounds %Array_Type_, ptr %11, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i42, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %23, i64 %i.062
  %24 = load ptr, ptr %ptridx.i, align 8
  br label %end

false_block:                                      ; preds = %for.body
  %25 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %25, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %24, %true_block ], [ %25, %false_block ]
  %26 = load ptr, ptr %memberidx.i43, align 8
  %ptridx.i44 = getelementptr inbounds ptr, ptr %26, i64 %i.062
  %27 = load ptr, ptr %ptridx.i44, align 8
  %28 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %ternary, ptr %27)
  %.not.i = icmp slt i64 %10, %9
  br i1 %.not.i, label %Array_Expression____sl__.exit, label %if.entry.i

if.entry.i:                                       ; preds = %end
  %29 = shl i64 %9, 1
  store i64 %29, ptr %memberidx1.i, align 4
  %30 = shl i64 %9, 4
  %31 = tail call ptr @realloc(ptr %8, i64 %30)
  store ptr %31, ptr %memberidx2.i, align 8
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %end, %if.entry.i
  %32 = phi ptr [ %8, %end ], [ %31, %if.entry.i ]
  %33 = phi i64 [ %9, %end ], [ %29, %if.entry.i ]
  %34 = add i64 %10, 1
  store i64 %34, ptr %memberidx.i, align 4
  %ptridx.i47 = getelementptr inbounds ptr, ptr %32, i64 %10
  store ptr %28, ptr %ptridx.i47, align 8
  %35 = add nuw nsw i64 %i.062, 1
  %36 = load i64, ptr %memberidx2, align 4
  %37 = icmp slt i64 %35, %36
  br i1 %37, label %for.body, label %for.end

common.ret:                                       ; preds = %ifend22, %ifend, %for.end
  ret ptr %4

ifend:                                            ; preds = %for.end
  %memberidx6 = getelementptr inbounds %Array_FunctionArg_, ptr %2, i64 0, i32 2
  %38 = load i64, ptr %memberidx6, align 4
  %39 = icmp sgt i64 %38, %.lcssa
  br i1 %39, label %for.body15.lr.ph, label %common.ret

for.body15.lr.ph:                                 ; preds = %ifend
  %memberidx.i48 = getelementptr inbounds %Array_FunctionArg_, ptr %2, i64 0, i32 1
  br label %for.body15

for.body15:                                       ; preds = %for.body15.lr.ph, %ifend22
  %40 = phi i64 [ %38, %for.body15.lr.ph ], [ %54, %ifend22 ]
  %41 = phi ptr [ %14, %for.body15.lr.ph ], [ %55, %ifend22 ]
  %42 = phi ptr [ %14, %for.body15.lr.ph ], [ %56, %ifend22 ]
  %43 = phi i64 [ %15, %for.body15.lr.ph ], [ %57, %ifend22 ]
  %44 = phi i64 [ %16, %for.body15.lr.ph ], [ %58, %ifend22 ]
  %storemerge61 = phi i64 [ %.lcssa, %for.body15.lr.ph ], [ %59, %ifend22 ]
  %45 = load ptr, ptr %memberidx.i48, align 8
  %ptridx.i49 = getelementptr inbounds ptr, ptr %45, i64 %storemerge61
  %46 = load ptr, ptr %ptridx.i49, align 8
  %memberidx19 = getelementptr inbounds %FunctionArg, ptr %46, i64 0, i32 6
  %47 = load ptr, ptr %memberidx19, align 8
  %.not = icmp eq ptr %47, null
  br i1 %.not, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %for.body15
  %.not.i52 = icmp slt i64 %44, %43
  br i1 %.not.i52, label %Array_Expression____sl__.exit58, label %if.entry.i55

if.entry.i55:                                     ; preds = %if.entry20
  %48 = shl i64 %43, 1
  store i64 %48, ptr %memberidx1.i, align 4
  %49 = shl i64 %43, 4
  %50 = tail call ptr @realloc(ptr %42, i64 %49)
  store ptr %50, ptr %memberidx2.i, align 8
  br label %Array_Expression____sl__.exit58

Array_Expression____sl__.exit58:                  ; preds = %if.entry20, %if.entry.i55
  %51 = phi ptr [ %41, %if.entry20 ], [ %50, %if.entry.i55 ]
  %52 = phi i64 [ %43, %if.entry20 ], [ %48, %if.entry.i55 ]
  %53 = add i64 %44, 1
  store i64 %53, ptr %memberidx.i, align 4
  %ptridx.i57 = getelementptr inbounds ptr, ptr %51, i64 %44
  store ptr %47, ptr %ptridx.i57, align 8
  %.pre = load i64, ptr %memberidx6, align 4
  br label %ifend22

ifend22:                                          ; preds = %for.body15, %Array_Expression____sl__.exit58
  %54 = phi i64 [ %40, %for.body15 ], [ %.pre, %Array_Expression____sl__.exit58 ]
  %55 = phi ptr [ %41, %for.body15 ], [ %51, %Array_Expression____sl__.exit58 ]
  %56 = phi ptr [ %42, %for.body15 ], [ %51, %Array_Expression____sl__.exit58 ]
  %57 = phi i64 [ %43, %for.body15 ], [ %52, %Array_Expression____sl__.exit58 ]
  %58 = phi i64 [ %44, %for.body15 ], [ %53, %Array_Expression____sl__.exit58 ]
  %59 = add nsw i64 %storemerge61, 1
  %60 = icmp slt i64 %59, %54
  br i1 %60, label %for.body15, label %common.ret
}

define internal fastcc void @TypeChecker_add_inherited_props_to_class(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 21
  br i1 %6, label %if.entry.i130, label %is_object.exit

if.entry.i130:                                    ; preds = %3, %if.entry.i130
  %.tr5.i = phi ptr [ %7, %if.entry.i130 ], [ %4, %3 ]
  %memberidx1.i129 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1.i129, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 21
  br i1 %9, label %if.entry.i130, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i130, %3
  %.lcssa.i = phi i64 [ %5, %3 ], [ %8, %if.entry.i130 ]
  %10 = icmp eq i64 %.lcssa.i, 13
  br i1 %10, label %ifend, label %if.entry

if.entry:                                         ; preds = %is_object.exit
  %11 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %4)
  %12 = load ptr, ptr %11, align 8
  %memberidx1 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %12, i64 0, i32 5
  %13 = load ptr, ptr %memberidx1, align 8
  %14 = tail call ptr %13(ptr nonnull %11)
  %15 = alloca ptr, align 8
  %16 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %15, ptr nonnull @138, ptr %14)
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  store ptr %17, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  store i64 %16, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 3
  store i64 %16, ptr %memberidx2.i, align 4
  tail call void @free(ptr %14)
  %memberidx2 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 2
  %19 = load ptr, ptr %memberidx2, align 8
  %20 = load ptr, ptr %19, align 8
  %memberidx.i49 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %21 = load ptr, ptr %memberidx.i49, align 8
  %memberidx1.i50 = getelementptr inbounds %Compiler, ptr %21, i64 0, i32 6
  %22 = load ptr, ptr %memberidx1.i50, align 8
  %23 = call ptr @malloc(i32 24)
  store i64 5, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 2
  store ptr %20, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 1
  store ptr %18, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 2
  %24 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 3
  %25 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %24, %25
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 1
  %.pre157 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %26 = shl i64 %25, 1
  store i64 %26, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i.i.i, align 8
  %28 = shl i64 %25, 4
  %29 = call ptr @realloc(ptr %27, i64 %28)
  store ptr %29, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %30 = phi ptr [ %.pre157, %if.entry.TypeChecker_error.exit_crit_edge ], [ %29, %if.entry.i.i ]
  %31 = phi i64 [ %24, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %32 = add i64 %31, 1
  store i64 %32, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %30, i64 %31
  store ptr %23, ptr %ptridx.i.i, align 8
  %.pre158 = load i64, ptr %4, align 4
  br label %ifend

ifend:                                            ; preds = %is_object.exit, %TypeChecker_error.exit
  %33 = phi i64 [ %5, %is_object.exit ], [ %.pre158, %TypeChecker_error.exit ]
  %34 = load ptr, ptr %0, align 8
  %switch152 = icmp eq i64 %33, 21
  br i1 %switch152, label %if.entry.i134, label %if.entry3.i

if.entry.i134:                                    ; preds = %ifend, %if.entry.i134
  %.tr11.i153 = phi ptr [ %35, %if.entry.i134 ], [ %4, %ifend ]
  %memberidx1.i133 = getelementptr inbounds %GenericType, ptr %.tr11.i153, i64 0, i32 3
  %35 = load ptr, ptr %memberidx1.i133, align 8
  %36 = load i64, ptr %35, align 4
  %switch = icmp eq i64 %36, 21
  br i1 %switch, label %if.entry.i134, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i134, %ifend
  %.tr11.i.lcssa = phi ptr [ %4, %ifend ], [ %35, %if.entry.i134 ]
  %memberidx6.i135 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %37 = load ptr, ptr %memberidx6.i135, align 8
  %memberidx.i.i136 = getelementptr inbounds %Program, ptr %34, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i.i136, align 8
  %39 = load i64, ptr %37, align 4
  %memberidx.i.i.i137 = getelementptr inbounds %Array_Module_, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i.i.i137, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %40, i64 %39
  %41 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i138 = getelementptr inbounds %Module, ptr %41, i64 0, i32 4
  %42 = load ptr, ptr %memberidx2.i.i138, align 8
  %memberidx3.i.i139 = getelementptr inbounds %TypeId, ptr %37, i64 0, i32 2
  %43 = load i64, ptr %memberidx3.i.i139, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx5 = getelementptr inbounds %Class, ptr %45, i64 0, i32 6
  %46 = load ptr, ptr %memberidx5, align 8
  %47 = call ptr @malloc(i32 25)
  %48 = load ptr, ptr %46, align 8
  %memberidx1.i51 = getelementptr inbounds %Map_string_PropId_, ptr %46, i64 0, i32 1
  %49 = load i64, ptr %memberidx1.i51, align 4
  %memberidx2.i52 = getelementptr inbounds %Map_string_PropId_, ptr %46, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i52, align 4
  store i1 false, ptr %47, align 1
  %memberidx1.i.i53 = getelementptr inbounds %MapIterator_string_PropId_, ptr %47, i64 0, i32 1
  store ptr %48, ptr %memberidx1.i.i53, align 8
  %memberidx2.i.i54 = getelementptr inbounds %MapIterator_string_PropId_, ptr %47, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %47, i64 0, i32 3
  store i64 %50, ptr %memberidx3.i.i, align 4
  %51 = add i64 %49, -1
  store i64 %51, ptr %memberidx2.i.i54, align 4
  %52 = icmp sgt i64 %49, 0
  br i1 %52, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %if.entry3.i, %ifend.i
  %53 = phi i64 [ %56, %ifend.i ], [ %51, %if.entry3.i ]
  %54 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %48, %if.entry3.i ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %54, i64 1
  %55 = load ptr, ptr %54, align 8
  %.not.i = icmp eq ptr %55, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %56 = add i64 %53, -1
  store i64 %56, ptr %memberidx2.i.i54, align 4
  %57 = icmp sgt i64 %53, 0
  br i1 %57, label %while.entry.i, label %MapIterator_string_PropId__next.exit.loopexit

MapIterator_string_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %58 = phi i64 [ %56, %ifend.i ], [ %53, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i53, align 8
  br label %MapIterator_string_PropId__next.exit

MapIterator_string_PropId__next.exit:             ; preds = %MapIterator_string_PropId__next.exit.loopexit, %if.entry3.i
  %59 = phi i64 [ %58, %MapIterator_string_PropId__next.exit.loopexit ], [ %51, %if.entry3.i ]
  %.pn.in.promoted = phi ptr [ %incdec.ptr.i, %MapIterator_string_PropId__next.exit.loopexit ], [ %48, %if.entry3.i ]
  %storemerge144148 = icmp slt i64 %50, 1
  store i1 %storemerge144148, ptr %47, align 1
  br i1 %storemerge144148, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit
  %memberidx10 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx26 = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %memberidx32 = getelementptr inbounds %Class, ptr %1, i64 0, i32 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit73
  %60 = phi i64 [ %59, %for.body.lr.ph ], [ %132, %MapIterator_string_PropId__next.exit73 ]
  %.pn151 = phi ptr [ %.pn.in.promoted, %for.body.lr.ph ], [ %.pn150, %MapIterator_string_PropId__next.exit73 ]
  %storemerge145149.in = phi i64 [ %50, %for.body.lr.ph ], [ %storemerge145149, %MapIterator_string_PropId__next.exit73 ]
  %storemerge145149 = add i64 %storemerge145149.in, -1
  %storemerge.in = getelementptr inbounds ptr, ptr %.pn151, i64 -1
  %storemerge = load ptr, ptr %storemerge.in, align 8
  %61 = load ptr, ptr %storemerge, align 8
  %memberidx8 = getelementptr inbounds %MapEntry_string_PropId_, ptr %storemerge, i64 0, i32 1
  %62 = load ptr, ptr %memberidx8, align 8
  %63 = load ptr, ptr %0, align 8
  %memberidx.i.i57 = getelementptr inbounds %PropId, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i.i57, align 8
  %memberidx.i.i.i58 = getelementptr inbounds %Program, ptr %63, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i.i.i58, align 8
  %66 = load i64, ptr %64, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %65, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %67, i64 %66
  %68 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i59 = getelementptr inbounds %Module, ptr %68, i64 0, i32 4
  %69 = load ptr, ptr %memberidx2.i.i.i59, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %64, i64 0, i32 2
  %70 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %69, i64 0, i32 1
  %71 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %71, i64 %70
  %72 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %73 = load i64, ptr %62, align 4
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %if.entry.i, label %ifend.i63

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i60 = getelementptr inbounds %Class, ptr %72, i64 0, i32 5
  %75 = load ptr, ptr %memberidx1.i60, align 8
  %memberidx2.i61 = getelementptr inbounds %PropId, ptr %62, i64 0, i32 2
  %76 = load i64, ptr %memberidx2.i61, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %75, i64 0, i32 1
  %77 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %77, i64 %76
  %78 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %78, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i63:                                        ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %72, i64 0, i32 4
  %79 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %62, i64 0, i32 2
  %80 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %79, i64 0, i32 1
  %81 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i62 = getelementptr inbounds ptr, ptr %81, i64 %80
  %82 = load ptr, ptr %ptridx.i.i62, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %82, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i63
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i63 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %83 = load ptr, ptr %memberidx10, align 8
  %84 = call fastcc i64 @Map_string_PropId__hash_fnc(ptr %61)
  %memberidx.i118 = getelementptr inbounds %Map_string_PropId_, ptr %83, i64 0, i32 1
  %85 = load i64, ptr %memberidx.i118, align 4
  %86 = srem i64 %84, %85
  %87 = load ptr, ptr %83, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %87, i64 %86
  %88 = load ptr, ptr %ptridx.i, align 8
  %.not.i119 = icmp eq ptr %88, null
  br i1 %.not.i119, label %Map_string_PropId____getitem__.exit, label %while.entry.i123.preheader

while.entry.i123.preheader:                       ; preds = %get_class_prop_type.exit
  %memberidx1.i.i121 = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  %memberidx3.i.i125 = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  br label %while.entry.i123

while.entry.i123:                                 ; preds = %while.entry.i123.preheader, %else.i
  %89 = phi ptr [ %99, %else.i ], [ %87, %while.entry.i123.preheader ]
  %90 = phi i64 [ %100, %else.i ], [ %85, %while.entry.i123.preheader ]
  %91 = phi ptr [ %103, %else.i ], [ %88, %while.entry.i123.preheader ]
  %hash.0.i = phi i64 [ %102, %else.i ], [ %86, %while.entry.i123.preheader ]
  %92 = load ptr, ptr %91, align 8
  %memberidx.i.i120 = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  %93 = load i64, ptr %memberidx.i.i120, align 4
  %94 = load i64, ptr %memberidx1.i.i121, align 4
  %.not.i.i122 = icmp eq i64 %93, %94
  br i1 %.not.i.i122, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i123
  %memberidx2.i.i124 = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  %95 = load ptr, ptr %memberidx2.i.i124, align 8
  %96 = load ptr, ptr %memberidx3.i.i125, align 8
  %97 = call i64 @memcmp(ptr %95, ptr %96, i64 %93)
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre160 = load i64, ptr %memberidx.i118, align 4
  %.pre161 = load ptr, ptr %83, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre162.pre = load ptr, ptr %83, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre162.pre, i64 %hash.0.i
  %.pre163.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre163.pre, null
  br i1 %.not29.i, label %Map_string_PropId____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i123
  %99 = phi ptr [ %.pre161, %ifend.i.i.else.i_crit_edge ], [ %89, %while.entry.i123 ]
  %100 = phi i64 [ %.pre160, %ifend.i.i.else.i_crit_edge ], [ %90, %while.entry.i123 ]
  %101 = add i64 %hash.0.i, 1
  %102 = srem i64 %101, %100
  %ptridx7.i = getelementptr inbounds ptr, ptr %99, i64 %102
  %103 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %103, null
  br i1 %.not30.i, label %Map_string_PropId____getitem__.exit, label %while.entry.i123

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre163.pre, i64 0, i32 1
  %104 = load ptr, ptr %memberidx15.i, align 8
  br label %Map_string_PropId____getitem__.exit

Map_string_PropId____getitem__.exit:              ; preds = %else.i, %get_class_prop_type.exit, %while.end.i, %if.entry10.i
  %common.ret.op.i126 = phi ptr [ %104, %if.entry10.i ], [ null, %while.end.i ], [ null, %get_class_prop_type.exit ], [ null, %else.i ]
  %105 = load ptr, ptr %0, align 8
  %106 = load ptr, ptr %memberidx.i.i57, align 8
  %memberidx.i.i.i97 = getelementptr inbounds %Program, ptr %105, i64 0, i32 1
  %107 = load ptr, ptr %memberidx.i.i.i97, align 8
  %108 = load i64, ptr %106, align 4
  %memberidx.i.i.i.i98 = getelementptr inbounds %Array_Module_, ptr %107, i64 0, i32 1
  %109 = load ptr, ptr %memberidx.i.i.i.i98, align 8
  %ptridx.i.i.i.i99 = getelementptr inbounds ptr, ptr %109, i64 %108
  %110 = load ptr, ptr %ptridx.i.i.i.i99, align 8
  %memberidx2.i.i.i100 = getelementptr inbounds %Module, ptr %110, i64 0, i32 4
  %111 = load ptr, ptr %memberidx2.i.i.i100, align 8
  %memberidx3.i.i.i101 = getelementptr inbounds %TypeId, ptr %106, i64 0, i32 2
  %112 = load i64, ptr %memberidx3.i.i.i101, align 4
  %memberidx.i5.i.i.i102 = getelementptr inbounds %Array_Class_, ptr %111, i64 0, i32 1
  %113 = load ptr, ptr %memberidx.i5.i.i.i102, align 8
  %ptridx.i6.i.i.i103 = getelementptr inbounds ptr, ptr %113, i64 %112
  %114 = load ptr, ptr %ptridx.i6.i.i.i103, align 8
  %115 = load i64, ptr %62, align 4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %if.entry.i89, label %ifend.i95

if.entry.i89:                                     ; preds = %Map_string_PropId____getitem__.exit
  %memberidx1.i106 = getelementptr inbounds %Class, ptr %114, i64 0, i32 5
  %117 = load ptr, ptr %memberidx1.i106, align 8
  %memberidx2.i107 = getelementptr inbounds %PropId, ptr %62, i64 0, i32 2
  %118 = load i64, ptr %memberidx2.i107, align 4
  %memberidx.i12.i108 = getelementptr inbounds %Array_ClassMethod_, ptr %117, i64 0, i32 1
  %119 = load ptr, ptr %memberidx.i12.i108, align 8
  %ptridx.i13.i109 = getelementptr inbounds ptr, ptr %119, i64 %118
  %120 = load ptr, ptr %ptridx.i13.i109, align 8
  %memberidx3.i110 = getelementptr inbounds %ClassMethod, ptr %120, i64 0, i32 2
  %memberidx3.i88 = getelementptr inbounds %ClassMethod, ptr %120, i64 0, i32 1
  br label %is_class_prop_static.exit

ifend.i95:                                        ; preds = %Map_string_PropId____getitem__.exit
  %memberidx4.i112 = getelementptr inbounds %Class, ptr %114, i64 0, i32 4
  %121 = load ptr, ptr %memberidx4.i112, align 8
  %memberidx5.i113 = getelementptr inbounds %PropId, ptr %62, i64 0, i32 2
  %122 = load i64, ptr %memberidx5.i113, align 4
  %memberidx.i11.i114 = getelementptr inbounds %Array_ClassField_, ptr %121, i64 0, i32 1
  %123 = load ptr, ptr %memberidx.i11.i114, align 8
  %ptridx.i.i115 = getelementptr inbounds ptr, ptr %123, i64 %122
  %124 = load ptr, ptr %ptridx.i.i115, align 8
  %memberidx6.i116 = getelementptr inbounds %ClassField, ptr %124, i64 0, i32 2
  %memberidx6.i94 = getelementptr inbounds %ClassField, ptr %124, i64 0, i32 1
  br label %is_class_prop_static.exit

is_class_prop_static.exit:                        ; preds = %if.entry.i89, %ifend.i95
  %common.ret.op.i105142.in = phi ptr [ %memberidx3.i110, %if.entry.i89 ], [ %memberidx6.i116, %ifend.i95 ]
  %common.ret.op.in.i82 = phi ptr [ %memberidx3.i88, %if.entry.i89 ], [ %memberidx6.i94, %ifend.i95 ]
  %common.ret.op.i83 = load i1, ptr %common.ret.op.in.i82, align 1
  br i1 %common.ret.op.i83, label %for.incr, label %ifend15

for.incr:                                         ; preds = %ifend31, %ifend15, %is_class_prop_static.exit
  %125 = add i64 %60, -1
  store i64 %125, ptr %memberidx2.i.i54, align 4
  %126 = icmp sgt i64 %60, 0
  br i1 %126, label %while.entry.i68, label %MapIterator_string_PropId__next.exit73

while.entry.i68:                                  ; preds = %for.incr, %ifend.i72
  %127 = phi i64 [ %130, %ifend.i72 ], [ %125, %for.incr ]
  %128 = phi ptr [ %incdec.ptr.i66, %ifend.i72 ], [ %.pn151, %for.incr ]
  %incdec.ptr.i66 = getelementptr inbounds ptr, ptr %128, i64 1
  %129 = load ptr, ptr %128, align 8
  %.not.i67 = icmp eq ptr %129, null
  br i1 %.not.i67, label %ifend.i72, label %MapIterator_string_PropId__next.exit73

ifend.i72:                                        ; preds = %while.entry.i68
  %130 = add i64 %127, -1
  store i64 %130, ptr %memberidx2.i.i54, align 4
  %131 = icmp sgt i64 %127, 0
  br i1 %131, label %while.entry.i68, label %MapIterator_string_PropId__next.exit73

MapIterator_string_PropId__next.exit73:           ; preds = %while.entry.i68, %ifend.i72, %for.incr
  %132 = phi i64 [ %125, %for.incr ], [ %127, %while.entry.i68 ], [ %130, %ifend.i72 ]
  %.pn150 = phi ptr [ %.pn151, %for.incr ], [ %incdec.ptr.i66, %ifend.i72 ], [ %incdec.ptr.i66, %while.entry.i68 ]
  %storemerge144 = icmp slt i64 %storemerge145149, 1
  store i1 %storemerge144, ptr %47, align 1
  br i1 %storemerge144, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %MapIterator_string_PropId__next.exit73
  store ptr %.pn150, ptr %memberidx1.i.i53, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %MapIterator_string_PropId__next.exit
  tail call void @free(ptr nonnull %47)
  ret void

ifend15:                                          ; preds = %is_class_prop_static.exit
  %common.ret.op.i105142 = load i64, ptr %common.ret.op.i105142.in, align 4
  %133 = icmp ne i64 %common.ret.op.i105142, 1
  %134 = load i64, ptr %common.ret.op.i, align 4
  %135 = icmp ne i64 %134, 17
  %.not = or i1 %133, %135
  %136 = icmp eq ptr %common.ret.op.i126, null
  %or.cond = select i1 %.not, i1 %136, i1 false
  br i1 %or.cond, label %if.entry19, label %for.incr

if.entry19:                                       ; preds = %ifend15
  %137 = icmp eq i64 %115, 1
  br i1 %137, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %if.entry19
  %138 = load i64, ptr %memberidx26, align 4
  %139 = add i64 %138, 1
  store i64 %139, ptr %memberidx26, align 4
  %.pre164 = load i64, ptr %62, align 4
  br label %ifend25

ifend25:                                          ; preds = %if.entry19, %if.entry23
  %140 = phi i64 [ %115, %if.entry19 ], [ %.pre164, %if.entry23 ]
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %if.entry29, label %ifend31

if.entry29:                                       ; preds = %ifend25
  %142 = load i64, ptr %memberidx32, align 4
  %143 = add i64 %142, 1
  store i64 %143, ptr %memberidx32, align 4
  br label %ifend31

ifend31:                                          ; preds = %ifend25, %if.entry29
  %144 = load ptr, ptr %memberidx10, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %144, ptr %61, ptr nonnull %62)
  br label %for.incr
}

define internal fastcc ptr @TypeChecker_check_member_access(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx.i = getelementptr inbounds %PropId, ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %memberidx.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i, align 8
  %6 = load i64, ptr %4, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %6
  %8 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %8, i64 0, i32 4
  %9 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %4, i64 0, i32 2
  %10 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %12 = load ptr, ptr %ptridx.i6.i.i, align 8
  %13 = tail call ptr @malloc(i32 0)
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i.i55 = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i.i55, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %15 = load i64, ptr %1, align 4
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %if.entry, label %else

if.entry:                                         ; preds = %2
  %memberidx2 = getelementptr inbounds %Class, ptr %12, i64 0, i32 5
  %17 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %18 = load i64, ptr %memberidx3, align 4
  %memberidx.i57 = getelementptr inbounds %Array_ClassMethod_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i57, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %19, i64 %18
  %20 = load ptr, ptr %ptridx.i, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %20, i64 0, i32 2
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %20, i64 0, i32 3
  br label %ifend

else:                                             ; preds = %2
  %memberidx6 = getelementptr inbounds %Class, ptr %12, i64 0, i32 4
  %21 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %22 = load i64, ptr %memberidx7, align 4
  %memberidx.i58 = getelementptr inbounds %Array_ClassField_, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i58, align 8
  %ptridx.i59 = getelementptr inbounds ptr, ptr %23, i64 %22
  %24 = load ptr, ptr %ptridx.i59, align 8
  %memberidx8 = getelementptr inbounds %ClassField, ptr %24, i64 0, i32 2
  %memberidx9 = getelementptr inbounds %ClassField, ptr %24, i64 0, i32 3
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %visibility.0.in = phi ptr [ %memberidx4, %if.entry ], [ %memberidx8, %else ]
  %member_name.0.in = phi ptr [ %memberidx5, %if.entry ], [ %memberidx9, %else ]
  %member_name.0 = load ptr, ptr %member_name.0.in, align 8
  %visibility.0 = load i64, ptr %visibility.0.in, align 4
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %25 = load ptr, ptr %memberidx10, align 8
  %.not = icmp eq ptr %25, null
  br i1 %.not, label %else12, label %if.entry11

if.entry11:                                       ; preds = %ifend
  %26 = load i64, ptr %25, align 4
  %27 = load ptr, ptr %12, align 8
  %28 = load i64, ptr %27, align 4
  %29 = icmp ne i64 %26, %28
  %memberidx19 = getelementptr inbounds %TypeId, ptr %27, i64 0, i32 2
  %30 = load i64, ptr %memberidx19, align 4
  %memberidx21 = getelementptr inbounds %TypeId, ptr %25, i64 0, i32 2
  %31 = load i64, ptr %memberidx21, align 4
  %32 = icmp ne i64 %30, %31
  %33 = or i1 %29, %32
  %34 = icmp eq i64 %visibility.0, 1
  %or.cond = select i1 %33, i1 %34, i1 false
  br i1 %or.cond, label %if.entry25, label %common.ret

else12:                                           ; preds = %ifend
  %.not53 = icmp eq i64 %visibility.0, 2
  br i1 %.not53, label %common.ret, label %if.entry31

common.ret.sink.split:                            ; preds = %if.entry25, %dump_access.exit
  %.sink67 = phi ptr [ %54, %dump_access.exit ], [ %37, %if.entry25 ]
  %.sink = phi ptr [ %58, %dump_access.exit ], [ %41, %if.entry25 ]
  %common.ret.op.ph = phi ptr [ %62, %dump_access.exit ], [ %45, %if.entry25 ]
  tail call void @free(ptr %.sink67)
  tail call void @free(ptr %.sink)
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %else12, %if.entry11
  %common.ret.op = phi ptr [ null, %if.entry11 ], [ null, %else12 ], [ %common.ret.op.ph, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry25:                                       ; preds = %if.entry11
  %35 = load ptr, ptr %member_name.0, align 8
  %memberidx28 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %35, i64 0, i32 5
  %36 = load ptr, ptr %memberidx28, align 8
  %37 = tail call ptr %36(ptr nonnull %member_name.0)
  %memberidx29 = getelementptr inbounds %Class, ptr %12, i64 0, i32 1
  %38 = load ptr, ptr %memberidx29, align 8
  %39 = load ptr, ptr %38, align 8
  %memberidx30 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %39, i64 0, i32 5
  %40 = load ptr, ptr %memberidx30, align 8
  %41 = tail call ptr %40(ptr nonnull %38)
  %42 = alloca ptr, align 8
  %43 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %42, ptr nonnull @173, ptr %37, ptr %41)
  %44 = load ptr, ptr %42, align 8
  %45 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %45, align 8
  %memberidx.i60 = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  store ptr %44, ptr %memberidx.i60, align 8
  %memberidx1.i61 = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  store i64 %43, ptr %memberidx1.i61, align 4
  %memberidx2.i62 = getelementptr inbounds %string, ptr %45, i64 0, i32 3
  store i64 %43, ptr %memberidx2.i62, align 4
  br label %common.ret.sink.split

if.entry31:                                       ; preds = %else12
  %46 = load ptr, ptr %member_name.0, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %46, i64 0, i32 5
  %47 = load ptr, ptr %memberidx34, align 8
  %48 = tail call ptr %47(ptr nonnull %member_name.0)
  %49 = icmp eq i64 %visibility.0, 1
  br i1 %49, label %if.entry.i, label %ifend3.i

if.entry.i:                                       ; preds = %if.entry31
  %50 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %50, ptr noundef nonnull align 8 dereferenceable(7) @47, i64 7, i1 false)
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry31
  %51 = tail call ptr @malloc(i32 72)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %51, ptr noundef nonnull align 8 dereferenceable(9) @49, i64 9, i1 false)
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i, %ifend3.i
  %.sink72 = phi ptr [ %50, %if.entry.i ], [ %51, %ifend3.i ]
  %.sink70 = phi i64 [ 7, %if.entry.i ], [ 9, %ifend3.i ]
  %52 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %52, align 8
  %memberidx.i.i.i63 = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  store ptr %.sink72, ptr %memberidx.i.i.i63, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  store i64 %.sink70, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %52, i64 0, i32 3
  store i64 %.sink70, ptr %memberidx2.i.i.i, align 4
  %53 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %54 = tail call ptr %53(ptr nonnull %52)
  %memberidx36 = getelementptr inbounds %Class, ptr %12, i64 0, i32 1
  %55 = load ptr, ptr %memberidx36, align 8
  %56 = load ptr, ptr %55, align 8
  %memberidx37 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %56, i64 0, i32 5
  %57 = load ptr, ptr %memberidx37, align 8
  %58 = tail call ptr %57(ptr nonnull %55)
  %59 = alloca ptr, align 8
  %60 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %59, ptr nonnull @174, ptr %48, ptr %54, ptr %58)
  %61 = load ptr, ptr %59, align 8
  %62 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %62, align 8
  %memberidx.i54 = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i54, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  store i64 %60, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %62, i64 0, i32 3
  store i64 %60, ptr %memberidx2.i, align 4
  tail call void @free(ptr %48)
  br label %common.ret.sink.split
}

define internal fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ReturnStatementNode, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %4, null
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %5 = load ptr, ptr %0, align 8
  %memberidx.i.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %8 = load i64, ptr %6, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %9, i64 %8
  %10 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %12 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %ptridx.i6.i.i.i.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i6.i.i.i.i, align 8
  %15 = load i64, ptr %4, align 4
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %if.entry.i
  %memberidx1.i.i = getelementptr inbounds %Class, ptr %14, i64 0, i32 5
  %17 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %18 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i12.i.i, align 8
  %ptridx.i13.i.i = getelementptr inbounds ptr, ptr %19, i64 %18
  %20 = load ptr, ptr %ptridx.i13.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %20, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i.i:                                        ; preds = %if.entry.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %14, i64 0, i32 4
  %21 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %22 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i11.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %23, i64 %22
  %24 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %24, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i:                                          ; preds = %2
  %memberidx.i.i7.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %25 = load i64, ptr %memberidx.i.i7.i, align 4
  %26 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i8.i = getelementptr inbounds %Array_Module_, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx.i.i.i.i8.i, align 8
  %ptridx.i.i.i.i9.i = getelementptr inbounds ptr, ptr %28, i64 %25
  %29 = load ptr, ptr %ptridx.i.i.i.i9.i, align 8
  %memberidx.i.i = getelementptr inbounds %Module, ptr %29, i64 0, i32 5
  %30 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i10.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %31 = load ptr, ptr %memberidx1.i10.i, align 8
  %memberidx2.i11.i = getelementptr inbounds %VarId, ptr %31, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i11.i, align 4
  %memberidx.i4.i.i = getelementptr inbounds %Array_Function_, ptr %30, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i4.i.i, align 8
  %ptridx.i.i12.i = getelementptr inbounds ptr, ptr %33, i64 %32
  %34 = load ptr, ptr %ptridx.i.i12.i, align 8
  %memberidx3.i = getelementptr inbounds %Function, ptr %34, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

TypeChecker_get_current_function_type.exit:       ; preds = %if.entry.i.i, %ifend.i.i, %ifend.i
  %common.ret.op.i.in = phi ptr [ %memberidx3.i, %ifend.i ], [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.i.in, align 8
  %memberidx1 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 2
  %35 = load ptr, ptr %memberidx1, align 8
  %36 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %36, align 4
  %memberidx.i42 = getelementptr inbounds %ReturnStatement, ptr %36, i64 0, i32 1
  store ptr null, ptr %memberidx.i42, align 8
  %.not = icmp eq ptr %3, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %TypeChecker_get_current_function_type.exit
  %37 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %35, ptr nonnull %3)
  %memberidx.i43 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %38 = load ptr, ptr %memberidx.i43, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %38, i64 0, i32 6
  %39 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %39, i64 0, i32 2
  %40 = load i64, ptr %memberidx2.i, align 4
  %41 = icmp sgt i64 %40, 0
  br i1 %41, label %common.ret, label %ifend4

else:                                             ; preds = %TypeChecker_get_current_function_type.exit
  %42 = load i64, ptr %35, align 4
  %.not41 = icmp eq i64 %42, 12
  br i1 %.not41, label %common.ret, label %if.entry20

common.ret:                                       ; preds = %ifend13, %else, %if.entry, %TypeChecker_error.exit86, %TypeChecker_error.exit70, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit70 ], [ null, %TypeChecker_error.exit86 ], [ null, %if.entry ], [ %36, %else ], [ %36, %ifend13 ]
  ret ptr %common.ret.op

ifend4:                                           ; preds = %if.entry
  %43 = load i64, ptr %35, align 4
  %44 = icmp eq i64 %43, 12
  br i1 %44, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend4
  %45 = tail call ptr @malloc(i32 432)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %45, ptr noundef nonnull align 8 dereferenceable(54) @207, i64 54, i1 false)
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i44 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i44, align 8
  %memberidx1.i.i45 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i45, align 4
  %memberidx2.i.i46 = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i46, align 4
  %47 = load ptr, ptr %3, align 8
  %48 = load ptr, ptr %memberidx.i43, align 8
  %memberidx1.i48 = getelementptr inbounds %Compiler, ptr %48, i64 0, i32 6
  %49 = load ptr, ptr %memberidx1.i48, align 8
  %50 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %50, align 4
  %memberidx1.i.i49 = getelementptr inbounds %FloError, ptr %50, i64 0, i32 2
  store ptr %47, ptr %memberidx1.i.i49, align 8
  %memberidx2.i.i50 = getelementptr inbounds %FloError, ptr %50, i64 0, i32 1
  store ptr %46, ptr %memberidx2.i.i50, align 8
  %memberidx.i.i51 = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 2
  %51 = load i64, ptr %memberidx.i.i51, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 3
  %52 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %51, %52
  br i1 %.not.i.i, label %if.entry6.TypeChecker_error.exit_crit_edge, label %if.entry.i.i53

if.entry6.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry6
  %memberidx4.i.i54.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %.pre90 = load ptr, ptr %memberidx4.i.i54.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i53:                                   ; preds = %if.entry6
  %53 = shl i64 %52, 1
  store i64 %53, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %54 = load ptr, ptr %memberidx2.i.i.i, align 8
  %55 = shl i64 %52, 4
  %56 = tail call ptr @realloc(ptr %54, i64 %55)
  store ptr %56, ptr %memberidx2.i.i.i, align 8
  %.pre89 = load i64, ptr %memberidx.i.i51, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry6.TypeChecker_error.exit_crit_edge, %if.entry.i.i53
  %57 = phi ptr [ %.pre90, %if.entry6.TypeChecker_error.exit_crit_edge ], [ %56, %if.entry.i.i53 ]
  %58 = phi i64 [ %51, %if.entry6.TypeChecker_error.exit_crit_edge ], [ %.pre89, %if.entry.i.i53 ]
  %59 = add i64 %58, 1
  store i64 %59, ptr %memberidx.i.i51, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %57, i64 %58
  store ptr %50, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend4
  %memberidx10 = getelementptr inbounds %Expression, ptr %37, i64 0, i32 3
  %60 = load ptr, ptr %memberidx10, align 8
  %61 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %35, ptr %60)
  br i1 %61, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend8
  %62 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %35)
  %63 = load ptr, ptr %62, align 8
  %memberidx14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %63, i64 0, i32 5
  %64 = load ptr, ptr %memberidx14, align 8
  %65 = tail call ptr %64(ptr nonnull %62)
  %66 = load ptr, ptr %memberidx10, align 8
  %67 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %66)
  %68 = load ptr, ptr %67, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %68, i64 0, i32 5
  %69 = load ptr, ptr %memberidx16, align 8
  %70 = tail call ptr %69(ptr nonnull %67)
  %71 = alloca ptr, align 8
  %72 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %71, ptr nonnull @208, ptr %65, ptr %70)
  %73 = load ptr, ptr %71, align 8
  %74 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %74, align 8
  %memberidx.i55 = getelementptr inbounds %string, ptr %74, i64 0, i32 1
  store ptr %73, ptr %memberidx.i55, align 8
  %memberidx1.i56 = getelementptr inbounds %string, ptr %74, i64 0, i32 2
  store i64 %72, ptr %memberidx1.i56, align 4
  %memberidx2.i57 = getelementptr inbounds %string, ptr %74, i64 0, i32 3
  store i64 %72, ptr %memberidx2.i57, align 4
  tail call void @free(ptr %65)
  tail call void @free(ptr %70)
  %75 = load ptr, ptr %3, align 8
  %76 = load ptr, ptr %memberidx.i43, align 8
  %memberidx1.i59 = getelementptr inbounds %Compiler, ptr %76, i64 0, i32 6
  %77 = load ptr, ptr %memberidx1.i59, align 8
  %78 = call ptr @malloc(i32 24)
  store i64 5, ptr %78, align 4
  %memberidx1.i.i60 = getelementptr inbounds %FloError, ptr %78, i64 0, i32 2
  store ptr %75, ptr %memberidx1.i.i60, align 8
  %memberidx2.i.i61 = getelementptr inbounds %FloError, ptr %78, i64 0, i32 1
  store ptr %74, ptr %memberidx2.i.i61, align 8
  %memberidx.i.i62 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 2
  %79 = load i64, ptr %memberidx.i.i62, align 4
  %memberidx1.i2.i63 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 3
  %80 = load i64, ptr %memberidx1.i2.i63, align 4
  %.not.i.i64 = icmp slt i64 %79, %80
  br i1 %.not.i.i64, label %if.entry11.TypeChecker_error.exit70_crit_edge, label %if.entry.i.i67

if.entry11.TypeChecker_error.exit70_crit_edge:    ; preds = %if.entry11
  %memberidx4.i.i68.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 1
  %.pre88 = load ptr, ptr %memberidx4.i.i68.phi.trans.insert, align 8
  br label %TypeChecker_error.exit70

if.entry.i.i67:                                   ; preds = %if.entry11
  %81 = shl i64 %80, 1
  store i64 %81, ptr %memberidx1.i2.i63, align 4
  %memberidx2.i.i.i66 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 1
  %82 = load ptr, ptr %memberidx2.i.i.i66, align 8
  %83 = shl i64 %80, 4
  %84 = call ptr @realloc(ptr %82, i64 %83)
  store ptr %84, ptr %memberidx2.i.i.i66, align 8
  %.pre = load i64, ptr %memberidx.i.i62, align 4
  br label %TypeChecker_error.exit70

TypeChecker_error.exit70:                         ; preds = %if.entry11.TypeChecker_error.exit70_crit_edge, %if.entry.i.i67
  %85 = phi ptr [ %.pre88, %if.entry11.TypeChecker_error.exit70_crit_edge ], [ %84, %if.entry.i.i67 ]
  %86 = phi i64 [ %79, %if.entry11.TypeChecker_error.exit70_crit_edge ], [ %.pre, %if.entry.i.i67 ]
  %87 = add i64 %86, 1
  store i64 %87, ptr %memberidx.i.i62, align 4
  %ptridx.i.i69 = getelementptr inbounds ptr, ptr %85, i64 %86
  store ptr %78, ptr %ptridx.i.i69, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend8
  store ptr %37, ptr %memberidx.i42, align 8
  br label %common.ret

if.entry20:                                       ; preds = %else
  %88 = tail call ptr @malloc(i32 256)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %88, ptr noundef nonnull align 8 dereferenceable(32) @209, i64 32, i1 false)
  %89 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %89, align 8
  %memberidx.i.i71 = getelementptr inbounds %string, ptr %89, i64 0, i32 1
  store ptr %88, ptr %memberidx.i.i71, align 8
  %memberidx1.i.i72 = getelementptr inbounds %string, ptr %89, i64 0, i32 2
  store i64 32, ptr %memberidx1.i.i72, align 4
  %memberidx2.i.i73 = getelementptr inbounds %string, ptr %89, i64 0, i32 3
  store i64 32, ptr %memberidx2.i.i73, align 4
  %90 = load ptr, ptr %1, align 8
  %memberidx.i74 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %91 = load ptr, ptr %memberidx.i74, align 8
  %memberidx1.i75 = getelementptr inbounds %Compiler, ptr %91, i64 0, i32 6
  %92 = load ptr, ptr %memberidx1.i75, align 8
  %93 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %93, align 4
  %memberidx1.i.i76 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 2
  store ptr %90, ptr %memberidx1.i.i76, align 8
  %memberidx2.i.i77 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 1
  store ptr %89, ptr %memberidx2.i.i77, align 8
  %memberidx.i.i78 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 2
  %94 = load i64, ptr %memberidx.i.i78, align 4
  %memberidx1.i2.i79 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 3
  %95 = load i64, ptr %memberidx1.i2.i79, align 4
  %.not.i.i80 = icmp slt i64 %94, %95
  br i1 %.not.i.i80, label %if.entry20.TypeChecker_error.exit86_crit_edge, label %if.entry.i.i83

if.entry20.TypeChecker_error.exit86_crit_edge:    ; preds = %if.entry20
  %memberidx4.i.i84.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %.pre92 = load ptr, ptr %memberidx4.i.i84.phi.trans.insert, align 8
  br label %TypeChecker_error.exit86

if.entry.i.i83:                                   ; preds = %if.entry20
  %96 = shl i64 %95, 1
  store i64 %96, ptr %memberidx1.i2.i79, align 4
  %memberidx2.i.i.i82 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %97 = load ptr, ptr %memberidx2.i.i.i82, align 8
  %98 = shl i64 %95, 4
  %99 = tail call ptr @realloc(ptr %97, i64 %98)
  store ptr %99, ptr %memberidx2.i.i.i82, align 8
  %.pre91 = load i64, ptr %memberidx.i.i78, align 4
  br label %TypeChecker_error.exit86

TypeChecker_error.exit86:                         ; preds = %if.entry20.TypeChecker_error.exit86_crit_edge, %if.entry.i.i83
  %100 = phi ptr [ %.pre92, %if.entry20.TypeChecker_error.exit86_crit_edge ], [ %99, %if.entry.i.i83 ]
  %101 = phi i64 [ %94, %if.entry20.TypeChecker_error.exit86_crit_edge ], [ %.pre91, %if.entry.i.i83 ]
  %102 = add i64 %101, 1
  store i64 %102, ptr %memberidx.i.i78, align 4
  %ptridx.i.i85 = getelementptr inbounds ptr, ptr %100, i64 %101
  store ptr %93, ptr %ptridx.i.i85, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %4)
  %.not.i = icmp eq ptr %5, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 2
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %end20, %end, %ifend53, %TypeChecker_error.exit176, %TypeChecker_error.exit160, %TypeChecker_error.exit144, %TypeChecker_error.exit117, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit117 ], [ null, %TypeChecker_error.exit144 ], [ null, %TypeChecker_error.exit160 ], [ null, %TypeChecker_error.exit176 ], [ %173, %ifend53 ], [ null, %end ], [ null, %end20 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %if.entry.i
  %8 = load ptr, ptr %4, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %8, i64 0, i32 5
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = tail call ptr %9(ptr nonnull %4)
  %11 = alloca ptr, align 8
  %12 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %11, ptr nonnull @93, ptr %10)
  %13 = load ptr, ptr %11, align 8
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 %12, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 %12, ptr %memberidx2.i, align 4
  tail call void @free(ptr %10)
  %15 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %15, i64 0, i32 1
  %16 = load ptr, ptr %memberidx4, align 8
  %memberidx.i93 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %17 = load ptr, ptr %memberidx.i93, align 8
  %memberidx1.i94 = getelementptr inbounds %Compiler, ptr %17, i64 0, i32 6
  %18 = load ptr, ptr %memberidx1.i94, align 8
  %19 = call ptr @malloc(i32 24)
  store i64 1, ptr %19, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 2
  store ptr %16, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 1
  store ptr %14, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 3
  %21 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %20, %21
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %.pre185 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %22 = shl i64 %21, 1
  store i64 %22, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i.i, align 8
  %24 = shl i64 %21, 4
  %25 = call ptr @realloc(ptr %23, i64 %24)
  store ptr %25, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %26 = phi ptr [ %.pre185, %if.entry.TypeChecker_error.exit_crit_edge ], [ %25, %if.entry.i.i ]
  %27 = phi i64 [ %20, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %28 = add i64 %27, 1
  store i64 %28, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %26, i64 %27
  store ptr %19, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %29 = load ptr, ptr %0, align 8
  %memberidx1.i95 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %30 = load ptr, ptr %memberidx1.i95, align 8
  %memberidx.i.i96 = getelementptr inbounds %Program, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i.i96, align 8
  %32 = load i64, ptr %30, align 4
  %memberidx.i.i.i97 = getelementptr inbounds %Array_Module_, ptr %31, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i.i.i97, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %33, i64 %32
  %34 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i98 = getelementptr inbounds %Module, ptr %34, i64 0, i32 7
  %35 = load ptr, ptr %memberidx2.i.i98, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %30, i64 0, i32 1
  %36 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %35, i64 0, i32 1
  %37 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %37, i64 %36
  %38 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx5 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 3
  %39 = load ptr, ptr %memberidx5, align 8
  %.not = icmp eq ptr %39, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %40 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %39)
  br label %end

false_block:                                      ; preds = %ifend
  %41 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %41, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %40, %true_block ], [ %41, %false_block ]
  %memberidx.i99 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %42 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i100 = getelementptr inbounds %Compiler, ptr %42, i64 0, i32 6
  %43 = load ptr, ptr %memberidx1.i100, align 8
  %memberidx2.i101 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx2.i101, align 4
  %45 = icmp sgt i64 %44, 0
  br i1 %45, label %common.ret, label %ifend9

ifend9:                                           ; preds = %end
  %memberidx10 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 4
  %46 = load ptr, ptr %memberidx10, align 8
  %47 = icmp eq ptr %46, null
  %48 = load i64, ptr %ternary, align 4
  %49 = icmp eq i64 %48, 22
  %50 = and i1 %47, %49
  br i1 %50, label %if.entry12, label %ifend14

if.entry12:                                       ; preds = %ifend9
  %51 = load ptr, ptr %4, align 8
  %memberidx15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %51, i64 0, i32 5
  %52 = load ptr, ptr %memberidx15, align 8
  %53 = tail call ptr %52(ptr nonnull %4)
  %54 = alloca ptr, align 8
  %55 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %54, ptr nonnull @197, ptr %53)
  %56 = load ptr, ptr %54, align 8
  %57 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %57, align 8
  %memberidx.i102 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  store ptr %56, ptr %memberidx.i102, align 8
  %memberidx1.i103 = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  store i64 %55, ptr %memberidx1.i103, align 4
  %memberidx2.i104 = getelementptr inbounds %string, ptr %57, i64 0, i32 3
  store i64 %55, ptr %memberidx2.i104, align 4
  tail call void @free(ptr %53)
  %58 = load ptr, ptr %memberidx, align 8
  %memberidx17 = getelementptr inbounds %Token, ptr %58, i64 0, i32 1
  %59 = load ptr, ptr %memberidx17, align 8
  %60 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i106 = getelementptr inbounds %Compiler, ptr %60, i64 0, i32 6
  %61 = load ptr, ptr %memberidx1.i106, align 8
  %62 = call ptr @malloc(i32 24)
  store i64 4, ptr %62, align 4
  %memberidx1.i.i107 = getelementptr inbounds %FloError, ptr %62, i64 0, i32 2
  store ptr %59, ptr %memberidx1.i.i107, align 8
  %memberidx2.i.i108 = getelementptr inbounds %FloError, ptr %62, i64 0, i32 1
  store ptr %57, ptr %memberidx2.i.i108, align 8
  %memberidx.i.i109 = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i.i109, align 4
  %memberidx1.i2.i110 = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 3
  %64 = load i64, ptr %memberidx1.i2.i110, align 4
  %.not.i.i111 = icmp slt i64 %63, %64
  br i1 %.not.i.i111, label %if.entry12.TypeChecker_error.exit117_crit_edge, label %if.entry.i.i114

if.entry12.TypeChecker_error.exit117_crit_edge:   ; preds = %if.entry12
  %memberidx4.i.i115.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 1
  %.pre200 = load ptr, ptr %memberidx4.i.i115.phi.trans.insert, align 8
  br label %TypeChecker_error.exit117

if.entry.i.i114:                                  ; preds = %if.entry12
  %65 = shl i64 %64, 1
  store i64 %65, ptr %memberidx1.i2.i110, align 4
  %memberidx2.i.i.i113 = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 1
  %66 = load ptr, ptr %memberidx2.i.i.i113, align 8
  %67 = shl i64 %64, 4
  %68 = call ptr @realloc(ptr %66, i64 %67)
  store ptr %68, ptr %memberidx2.i.i.i113, align 8
  %.pre199 = load i64, ptr %memberidx.i.i109, align 4
  br label %TypeChecker_error.exit117

TypeChecker_error.exit117:                        ; preds = %if.entry12.TypeChecker_error.exit117_crit_edge, %if.entry.i.i114
  %69 = phi ptr [ %.pre200, %if.entry12.TypeChecker_error.exit117_crit_edge ], [ %68, %if.entry.i.i114 ]
  %70 = phi i64 [ %63, %if.entry12.TypeChecker_error.exit117_crit_edge ], [ %.pre199, %if.entry.i.i114 ]
  %71 = add i64 %70, 1
  store i64 %71, ptr %memberidx.i.i109, align 4
  %ptridx.i.i116 = getelementptr inbounds ptr, ptr %69, i64 %70
  store ptr %62, ptr %ptridx.i.i116, align 8
  br label %common.ret

ifend14:                                          ; preds = %ifend9
  br i1 %47, label %ifend29, label %end20

end20:                                            ; preds = %ifend14
  %72 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %46)
  %.pre186 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i119.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre186, i64 0, i32 6
  %.pre187 = load ptr, ptr %memberidx1.i119.phi.trans.insert, align 8
  %memberidx2.i120.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre187, i64 0, i32 2
  %.pre188 = load i64, ptr %memberidx2.i120.phi.trans.insert, align 4
  %73 = icmp sgt i64 %.pre188, 0
  br i1 %73, label %common.ret, label %ifend26

ifend26:                                          ; preds = %end20
  %.not89 = icmp eq ptr %72, null
  br i1 %.not89, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend26
  %memberidx.i121 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i121, align 4
  %75 = icmp eq i64 %74, 5
  %memberidx30 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  %76 = load ptr, ptr %memberidx30, align 8
  %77 = load i64, ptr %76, align 4
  %78 = icmp eq i64 %77, 22
  %79 = and i1 %75, %78
  br i1 %79, label %if.entry32, label %ifend34

ifend29:                                          ; preds = %ifend14, %if.entry46, %ifend40, %ifend26
  %ternary23204207 = phi ptr [ %72, %if.entry46 ], [ %72, %ifend40 ], [ null, %ifend26 ], [ null, %ifend14 ]
  %80 = phi ptr [ %150, %if.entry46 ], [ %ternary, %ifend40 ], [ %ternary, %ifend26 ], [ %ternary, %ifend14 ]
  %memberidx50 = getelementptr inbounds %Scope, ptr %38, i64 0, i32 1
  %81 = load ptr, ptr %memberidx50, align 8
  %82 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %4)
  %memberidx.i122 = getelementptr inbounds %Map_string_VarId_, ptr %81, i64 0, i32 1
  %83 = load i64, ptr %memberidx.i122, align 4
  %84 = srem i64 %82, %83
  %85 = load ptr, ptr %81, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %85, i64 %84
  %86 = load ptr, ptr %ptridx.i, align 8
  %.not.i123 = icmp eq ptr %86, null
  br i1 %.not.i123, label %ifend53, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend29
  %memberidx1.i.i125 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i128 = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %87 = phi ptr [ %97, %else.i ], [ %85, %while.entry.i.preheader ]
  %88 = phi i64 [ %98, %else.i ], [ %83, %while.entry.i.preheader ]
  %89 = phi ptr [ %101, %else.i ], [ %86, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %100, %else.i ], [ %84, %while.entry.i.preheader ]
  %90 = load ptr, ptr %89, align 8
  %memberidx.i.i124 = getelementptr inbounds %string, ptr %90, i64 0, i32 2
  %91 = load i64, ptr %memberidx.i.i124, align 4
  %92 = load i64, ptr %memberidx1.i.i125, align 4
  %.not.i.i126 = icmp eq i64 %91, %92
  br i1 %.not.i.i126, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i127 = getelementptr inbounds %string, ptr %90, i64 0, i32 1
  %93 = load ptr, ptr %memberidx2.i.i127, align 8
  %94 = load ptr, ptr %memberidx3.i.i128, align 8
  %95 = tail call i64 @memcmp(ptr %93, ptr %94, i64 %91)
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre193 = load i64, ptr %memberidx.i122, align 4
  %.pre194 = load ptr, ptr %81, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre195.pre = load ptr, ptr %81, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre195.pre, i64 %hash.0.i
  %.pre196.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre196.pre, null
  br i1 %.not29.i, label %ifend53, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %97 = phi ptr [ %.pre194, %ifend.i.i.else.i_crit_edge ], [ %87, %while.entry.i ]
  %98 = phi i64 [ %.pre193, %ifend.i.i.else.i_crit_edge ], [ %88, %while.entry.i ]
  %99 = add i64 %hash.0.i, 1
  %100 = srem i64 %99, %98
  %ptridx7.i = getelementptr inbounds ptr, ptr %97, i64 %100
  %101 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %101, null
  br i1 %.not30.i, label %ifend53, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre196.pre, i64 0, i32 1
  %102 = load ptr, ptr %memberidx15.i, align 8
  %phi.cmp = icmp eq ptr %102, null
  br i1 %phi.cmp, label %ifend53, label %if.entry51

if.entry32:                                       ; preds = %if.entry27
  %103 = tail call ptr @malloc(i32 552)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %103, ptr noundef nonnull align 8 dereferenceable(69) @198, i64 69, i1 false)
  %104 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %104, align 8
  %memberidx.i.i129 = getelementptr inbounds %string, ptr %104, i64 0, i32 1
  store ptr %103, ptr %memberidx.i.i129, align 8
  %memberidx1.i.i130 = getelementptr inbounds %string, ptr %104, i64 0, i32 2
  store i64 69, ptr %memberidx1.i.i130, align 4
  %memberidx2.i.i131 = getelementptr inbounds %string, ptr %104, i64 0, i32 3
  store i64 69, ptr %memberidx2.i.i131, align 4
  %105 = load ptr, ptr %1, align 8
  %106 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i133 = getelementptr inbounds %Compiler, ptr %106, i64 0, i32 6
  %107 = load ptr, ptr %memberidx1.i133, align 8
  %108 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %108, align 4
  %memberidx1.i.i134 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 2
  store ptr %105, ptr %memberidx1.i.i134, align 8
  %memberidx2.i.i135 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 1
  store ptr %104, ptr %memberidx2.i.i135, align 8
  %memberidx.i.i136 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 2
  %109 = load i64, ptr %memberidx.i.i136, align 4
  %memberidx1.i2.i137 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 3
  %110 = load i64, ptr %memberidx1.i2.i137, align 4
  %.not.i.i138 = icmp slt i64 %109, %110
  br i1 %.not.i.i138, label %if.entry32.TypeChecker_error.exit144_crit_edge, label %if.entry.i.i141

if.entry32.TypeChecker_error.exit144_crit_edge:   ; preds = %if.entry32
  %memberidx4.i.i142.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %.pre192 = load ptr, ptr %memberidx4.i.i142.phi.trans.insert, align 8
  br label %TypeChecker_error.exit144

if.entry.i.i141:                                  ; preds = %if.entry32
  %111 = shl i64 %110, 1
  store i64 %111, ptr %memberidx1.i2.i137, align 4
  %memberidx2.i.i.i140 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %112 = load ptr, ptr %memberidx2.i.i.i140, align 8
  %113 = shl i64 %110, 4
  %114 = tail call ptr @realloc(ptr %112, i64 %113)
  store ptr %114, ptr %memberidx2.i.i.i140, align 8
  %.pre191 = load i64, ptr %memberidx.i.i136, align 4
  br label %TypeChecker_error.exit144

TypeChecker_error.exit144:                        ; preds = %if.entry32.TypeChecker_error.exit144_crit_edge, %if.entry.i.i141
  %115 = phi ptr [ %.pre192, %if.entry32.TypeChecker_error.exit144_crit_edge ], [ %114, %if.entry.i.i141 ]
  %116 = phi i64 [ %109, %if.entry32.TypeChecker_error.exit144_crit_edge ], [ %.pre191, %if.entry.i.i141 ]
  %117 = add i64 %116, 1
  store i64 %117, ptr %memberidx.i.i136, align 4
  %ptridx.i.i143 = getelementptr inbounds ptr, ptr %115, i64 %116
  store ptr %108, ptr %ptridx.i.i143, align 8
  br label %common.ret

ifend34:                                          ; preds = %if.entry27
  %118 = load i64, ptr %ternary, align 4
  %119 = icmp eq i64 %118, 22
  %120 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %76)
  %121 = or i1 %120, %119
  br i1 %121, label %ifend40, label %if.entry38

if.entry38:                                       ; preds = %ifend34
  %122 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %123 = load ptr, ptr %122, align 8
  %memberidx41 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %123, i64 0, i32 5
  %124 = load ptr, ptr %memberidx41, align 8
  %125 = tail call ptr %124(ptr nonnull %122)
  %126 = load ptr, ptr %memberidx30, align 8
  %127 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %126)
  %128 = load ptr, ptr %127, align 8
  %memberidx43 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %128, i64 0, i32 5
  %129 = load ptr, ptr %memberidx43, align 8
  %130 = tail call ptr %129(ptr nonnull %127)
  %131 = alloca ptr, align 8
  %132 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %131, ptr nonnull @199, ptr %125, ptr %130)
  %133 = load ptr, ptr %131, align 8
  %134 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %134, align 8
  %memberidx.i145 = getelementptr inbounds %string, ptr %134, i64 0, i32 1
  store ptr %133, ptr %memberidx.i145, align 8
  %memberidx1.i146 = getelementptr inbounds %string, ptr %134, i64 0, i32 2
  store i64 %132, ptr %memberidx1.i146, align 4
  %memberidx2.i147 = getelementptr inbounds %string, ptr %134, i64 0, i32 3
  store i64 %132, ptr %memberidx2.i147, align 4
  tail call void @free(ptr %125)
  tail call void @free(ptr %130)
  %135 = load ptr, ptr %1, align 8
  %136 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i149 = getelementptr inbounds %Compiler, ptr %136, i64 0, i32 6
  %137 = load ptr, ptr %memberidx1.i149, align 8
  %138 = call ptr @malloc(i32 24)
  store i64 5, ptr %138, align 4
  %memberidx1.i.i150 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 2
  store ptr %135, ptr %memberidx1.i.i150, align 8
  %memberidx2.i.i151 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 1
  store ptr %134, ptr %memberidx2.i.i151, align 8
  %memberidx.i.i152 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 2
  %139 = load i64, ptr %memberidx.i.i152, align 4
  %memberidx1.i2.i153 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 3
  %140 = load i64, ptr %memberidx1.i2.i153, align 4
  %.not.i.i154 = icmp slt i64 %139, %140
  br i1 %.not.i.i154, label %if.entry38.TypeChecker_error.exit160_crit_edge, label %if.entry.i.i157

if.entry38.TypeChecker_error.exit160_crit_edge:   ; preds = %if.entry38
  %memberidx4.i.i158.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %.pre190 = load ptr, ptr %memberidx4.i.i158.phi.trans.insert, align 8
  br label %TypeChecker_error.exit160

if.entry.i.i157:                                  ; preds = %if.entry38
  %141 = shl i64 %140, 1
  store i64 %141, ptr %memberidx1.i2.i153, align 4
  %memberidx2.i.i.i156 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %142 = load ptr, ptr %memberidx2.i.i.i156, align 8
  %143 = shl i64 %140, 4
  %144 = call ptr @realloc(ptr %142, i64 %143)
  store ptr %144, ptr %memberidx2.i.i.i156, align 8
  %.pre189 = load i64, ptr %memberidx.i.i152, align 4
  br label %TypeChecker_error.exit160

TypeChecker_error.exit160:                        ; preds = %if.entry38.TypeChecker_error.exit160_crit_edge, %if.entry.i.i157
  %145 = phi ptr [ %.pre190, %if.entry38.TypeChecker_error.exit160_crit_edge ], [ %144, %if.entry.i.i157 ]
  %146 = phi i64 [ %139, %if.entry38.TypeChecker_error.exit160_crit_edge ], [ %.pre189, %if.entry.i.i157 ]
  %147 = add i64 %146, 1
  store i64 %147, ptr %memberidx.i.i152, align 4
  %ptridx.i.i159 = getelementptr inbounds ptr, ptr %145, i64 %146
  store ptr %138, ptr %ptridx.i.i159, align 8
  br label %common.ret

ifend40:                                          ; preds = %ifend34
  %148 = load i64, ptr %ternary, align 4
  %149 = icmp eq i64 %148, 22
  br i1 %149, label %if.entry46, label %ifend29

if.entry46:                                       ; preds = %ifend40
  %150 = load ptr, ptr %memberidx30, align 8
  br label %ifend29

if.entry51:                                       ; preds = %if.entry10.i
  %151 = load ptr, ptr %4, align 8
  %memberidx54 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %151, i64 0, i32 5
  %152 = load ptr, ptr %memberidx54, align 8
  %153 = tail call ptr %152(ptr nonnull %4)
  %154 = alloca ptr, align 8
  %155 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %154, ptr nonnull @200, ptr %153)
  %156 = load ptr, ptr %154, align 8
  %157 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %157, align 8
  %memberidx.i161 = getelementptr inbounds %string, ptr %157, i64 0, i32 1
  store ptr %156, ptr %memberidx.i161, align 8
  %memberidx1.i162 = getelementptr inbounds %string, ptr %157, i64 0, i32 2
  store i64 %155, ptr %memberidx1.i162, align 4
  %memberidx2.i163 = getelementptr inbounds %string, ptr %157, i64 0, i32 3
  store i64 %155, ptr %memberidx2.i163, align 4
  tail call void @free(ptr %153)
  %158 = load ptr, ptr %memberidx, align 8
  %memberidx56 = getelementptr inbounds %Token, ptr %158, i64 0, i32 1
  %159 = load ptr, ptr %memberidx56, align 8
  %160 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i165 = getelementptr inbounds %Compiler, ptr %160, i64 0, i32 6
  %161 = load ptr, ptr %memberidx1.i165, align 8
  %162 = call ptr @malloc(i32 24)
  store i64 1, ptr %162, align 4
  %memberidx1.i.i166 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 2
  store ptr %159, ptr %memberidx1.i.i166, align 8
  %memberidx2.i.i167 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 1
  store ptr %157, ptr %memberidx2.i.i167, align 8
  %memberidx.i.i168 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 2
  %163 = load i64, ptr %memberidx.i.i168, align 4
  %memberidx1.i2.i169 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 3
  %164 = load i64, ptr %memberidx1.i2.i169, align 4
  %.not.i.i170 = icmp slt i64 %163, %164
  br i1 %.not.i.i170, label %if.entry51.TypeChecker_error.exit176_crit_edge, label %if.entry.i.i173

if.entry51.TypeChecker_error.exit176_crit_edge:   ; preds = %if.entry51
  %memberidx4.i.i174.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 1
  %.pre198 = load ptr, ptr %memberidx4.i.i174.phi.trans.insert, align 8
  br label %TypeChecker_error.exit176

if.entry.i.i173:                                  ; preds = %if.entry51
  %165 = shl i64 %164, 1
  store i64 %165, ptr %memberidx1.i2.i169, align 4
  %memberidx2.i.i.i172 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 1
  %166 = load ptr, ptr %memberidx2.i.i.i172, align 8
  %167 = shl i64 %164, 4
  %168 = call ptr @realloc(ptr %166, i64 %167)
  store ptr %168, ptr %memberidx2.i.i.i172, align 8
  %.pre197 = load i64, ptr %memberidx.i.i168, align 4
  br label %TypeChecker_error.exit176

TypeChecker_error.exit176:                        ; preds = %if.entry51.TypeChecker_error.exit176_crit_edge, %if.entry.i.i173
  %169 = phi ptr [ %.pre198, %if.entry51.TypeChecker_error.exit176_crit_edge ], [ %168, %if.entry.i.i173 ]
  %170 = phi i64 [ %163, %if.entry51.TypeChecker_error.exit176_crit_edge ], [ %.pre197, %if.entry.i.i173 ]
  %171 = add i64 %170, 1
  store i64 %171, ptr %memberidx.i.i168, align 4
  %ptridx.i.i175 = getelementptr inbounds ptr, ptr %169, i64 %170
  store ptr %162, ptr %ptridx.i.i175, align 8
  br label %common.ret

ifend53:                                          ; preds = %else.i, %ifend29, %while.end.i, %if.entry10.i
  %172 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %4, ptr %ternary23204207, ptr %80)
  %173 = tail call ptr @malloc(i32 25)
  %memberidx57 = getelementptr inbounds %Var, ptr %172, i64 0, i32 1
  %174 = load ptr, ptr %memberidx57, align 8
  store i64 1, ptr %173, align 4
  %memberidx.i177 = getelementptr inbounds %VarDeclaration, ptr %173, i64 0, i32 2
  store ptr %174, ptr %memberidx.i177, align 8
  %memberidx1.i178 = getelementptr inbounds %VarDeclaration, ptr %173, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i178, align 8
  %memberidx2.i179 = getelementptr inbounds %VarDeclaration, ptr %173, i64 0, i32 3
  store i1 false, ptr %memberidx2.i179, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i, align 8
  %8 = load i64, ptr %6, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %9, i64 %8
  %10 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 7
  %11 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %12 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i6.i.i, align 8
  %15 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %4)
  %.not.i = icmp eq ptr %15, null
  br i1 %.not.i, label %TypeChecker_is_constant_in_scope.exit, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %16 = load i64, ptr %15, align 4
  %17 = icmp eq i64 %16, 2
  br label %TypeChecker_is_constant_in_scope.exit

TypeChecker_is_constant_in_scope.exit:            ; preds = %2, %if.entry.i
  %is_constant.0.i = phi i1 [ %17, %if.entry.i ], [ false, %2 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %memberidx2, align 8
  %19 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_string_VarId_, ptr %18, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = srem i64 %19, %20
  %22 = load ptr, ptr %18, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %22, i64 %21
  %23 = load ptr, ptr %ptridx.i, align 8
  %.not.i60 = icmp eq ptr %23, null
  br i1 %.not.i60, label %Map_string_VarId____getitem__.exit, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %TypeChecker_is_constant_in_scope.exit
  %memberidx1.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i63 = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %24 = phi ptr [ %34, %else.i ], [ %22, %while.entry.i.preheader ]
  %25 = phi i64 [ %35, %else.i ], [ %20, %while.entry.i.preheader ]
  %26 = phi ptr [ %38, %else.i ], [ %23, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %37, %else.i ], [ %21, %while.entry.i.preheader ]
  %27 = load ptr, ptr %26, align 8
  %memberidx.i.i61 = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i.i61, align 4
  %29 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %28, %29
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i62 = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2.i.i62, align 8
  %31 = load ptr, ptr %memberidx3.i.i63, align 8
  %32 = tail call i64 @memcmp(ptr %30, ptr %31, i64 %28)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre135 = load ptr, ptr %18, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre136.pre = load ptr, ptr %18, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre136.pre, i64 %hash.0.i
  %.pre137.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre137.pre, null
  br i1 %.not29.i, label %Map_string_VarId____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %34 = phi ptr [ %.pre135, %ifend.i.i.else.i_crit_edge ], [ %24, %while.entry.i ]
  %35 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %25, %while.entry.i ]
  %36 = add i64 %hash.0.i, 1
  %37 = srem i64 %36, %35
  %ptridx7.i = getelementptr inbounds ptr, ptr %34, i64 %37
  %38 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %38, null
  br i1 %.not30.i, label %Map_string_VarId____getitem__.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre137.pre, i64 0, i32 1
  %39 = load ptr, ptr %memberidx15.i, align 8
  %phi.cmp = icmp ne ptr %39, null
  br label %Map_string_VarId____getitem__.exit

Map_string_VarId____getitem__.exit:               ; preds = %else.i, %TypeChecker_is_constant_in_scope.exit, %while.end.i, %if.entry10.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry10.i ], [ false, %while.end.i ], [ false, %TypeChecker_is_constant_in_scope.exit ], [ false, %else.i ]
  %40 = or i1 %is_constant.0.i, %common.ret.op.i
  br i1 %40, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend10, %end, %ifend30, %TypeChecker_error.exit127, %TypeChecker_error.exit111, %TypeChecker_error.exit94, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit94 ], [ null, %TypeChecker_error.exit111 ], [ null, %TypeChecker_error.exit127 ], [ %143, %ifend30 ], [ null, %end ], [ null, %ifend10 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %Map_string_VarId____getitem__.exit
  %41 = load ptr, ptr %4, align 8
  %memberidx3 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %41, i64 0, i32 5
  %42 = load ptr, ptr %memberidx3, align 8
  %43 = tail call ptr %42(ptr nonnull %4)
  %44 = alloca ptr, align 8
  %45 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %44, ptr nonnull @93, ptr %43)
  %46 = load ptr, ptr %44, align 8
  %47 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %47, align 8
  %memberidx.i64 = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  store ptr %46, ptr %memberidx.i64, align 8
  %memberidx1.i65 = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  store i64 %45, ptr %memberidx1.i65, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %47, i64 0, i32 3
  store i64 %45, ptr %memberidx2.i, align 4
  tail call void @free(ptr %43)
  %48 = load ptr, ptr %memberidx, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %48, i64 0, i32 1
  %49 = load ptr, ptr %memberidx5, align 8
  %memberidx.i66 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %50 = load ptr, ptr %memberidx.i66, align 8
  %memberidx1.i67 = getelementptr inbounds %Compiler, ptr %50, i64 0, i32 6
  %51 = load ptr, ptr %memberidx1.i67, align 8
  %52 = call ptr @malloc(i32 24)
  store i64 1, ptr %52, align 4
  %memberidx1.i.i68 = getelementptr inbounds %FloError, ptr %52, i64 0, i32 2
  store ptr %49, ptr %memberidx1.i.i68, align 8
  %memberidx2.i.i69 = getelementptr inbounds %FloError, ptr %52, i64 0, i32 1
  store ptr %47, ptr %memberidx2.i.i69, align 8
  %memberidx.i.i70 = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 2
  %53 = load i64, ptr %memberidx.i.i70, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 3
  %54 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i71 = icmp slt i64 %53, %54
  br i1 %.not.i.i71, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %.pre145 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %55 = shl i64 %54, 1
  store i64 %55, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %56 = load ptr, ptr %memberidx2.i.i.i, align 8
  %57 = shl i64 %54, 4
  %58 = call ptr @realloc(ptr %56, i64 %57)
  store ptr %58, ptr %memberidx2.i.i.i, align 8
  %.pre144 = load i64, ptr %memberidx.i.i70, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %59 = phi ptr [ %.pre145, %if.entry.TypeChecker_error.exit_crit_edge ], [ %58, %if.entry.i.i ]
  %60 = phi i64 [ %53, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre144, %if.entry.i.i ]
  %61 = add i64 %60, 1
  store i64 %61, ptr %memberidx.i.i70, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %59, i64 %60
  store ptr %52, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_VarId____getitem__.exit
  %memberidx6 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 3
  %62 = load ptr, ptr %memberidx6, align 8
  %.not = icmp eq ptr %62, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %63 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %62)
  br label %end

false_block:                                      ; preds = %ifend
  %64 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %64, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %63, %true_block ], [ %64, %false_block ]
  %memberidx.i73 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %65 = load ptr, ptr %memberidx.i73, align 8
  %memberidx1.i74 = getelementptr inbounds %Compiler, ptr %65, i64 0, i32 6
  %66 = load ptr, ptr %memberidx1.i74, align 8
  %memberidx2.i75 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 2
  %67 = load i64, ptr %memberidx2.i75, align 4
  %68 = icmp sgt i64 %67, 0
  br i1 %68, label %common.ret, label %ifend10

ifend10:                                          ; preds = %end
  %memberidx11 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 4
  %69 = load ptr, ptr %memberidx11, align 8
  %70 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %ternary, ptr %69)
  %71 = load ptr, ptr %memberidx.i73, align 8
  %memberidx1.i77 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 6
  %72 = load ptr, ptr %memberidx1.i77, align 8
  %memberidx2.i78 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 2
  %73 = load i64, ptr %memberidx2.i78, align 4
  %74 = icmp sgt i64 %73, 0
  br i1 %74, label %common.ret, label %ifend14

ifend14:                                          ; preds = %ifend10
  %memberidx15 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 1
  %75 = load i1, ptr %memberidx15, align 1
  br i1 %75, label %ifend18, label %if.entry16

if.entry16:                                       ; preds = %ifend14
  %76 = tail call ptr @malloc(i32 384)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %76, ptr noundef nonnull align 8 dereferenceable(48) @201, i64 48, i1 false)
  %77 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %77, align 8
  %memberidx.i.i79 = getelementptr inbounds %string, ptr %77, i64 0, i32 1
  store ptr %76, ptr %memberidx.i.i79, align 8
  %memberidx1.i.i80 = getelementptr inbounds %string, ptr %77, i64 0, i32 2
  store i64 48, ptr %memberidx1.i.i80, align 4
  %memberidx2.i.i81 = getelementptr inbounds %string, ptr %77, i64 0, i32 3
  store i64 48, ptr %memberidx2.i.i81, align 4
  %78 = load ptr, ptr %memberidx11, align 8
  %79 = load ptr, ptr %78, align 8
  %80 = load ptr, ptr %memberidx.i73, align 8
  %memberidx1.i83 = getelementptr inbounds %Compiler, ptr %80, i64 0, i32 6
  %81 = load ptr, ptr %memberidx1.i83, align 8
  %82 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %82, align 4
  %memberidx1.i.i84 = getelementptr inbounds %FloError, ptr %82, i64 0, i32 2
  store ptr %79, ptr %memberidx1.i.i84, align 8
  %memberidx2.i.i85 = getelementptr inbounds %FloError, ptr %82, i64 0, i32 1
  store ptr %77, ptr %memberidx2.i.i85, align 8
  %memberidx.i.i86 = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 2
  %83 = load i64, ptr %memberidx.i.i86, align 4
  %memberidx1.i2.i87 = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 3
  %84 = load i64, ptr %memberidx1.i2.i87, align 4
  %.not.i.i88 = icmp slt i64 %83, %84
  br i1 %.not.i.i88, label %if.entry16.TypeChecker_error.exit94_crit_edge, label %if.entry.i.i91

if.entry16.TypeChecker_error.exit94_crit_edge:    ; preds = %if.entry16
  %memberidx4.i.i92.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 1
  %.pre139 = load ptr, ptr %memberidx4.i.i92.phi.trans.insert, align 8
  br label %TypeChecker_error.exit94

if.entry.i.i91:                                   ; preds = %if.entry16
  %85 = shl i64 %84, 1
  store i64 %85, ptr %memberidx1.i2.i87, align 4
  %memberidx2.i.i.i90 = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 1
  %86 = load ptr, ptr %memberidx2.i.i.i90, align 8
  %87 = shl i64 %84, 4
  %88 = tail call ptr @realloc(ptr %86, i64 %87)
  store ptr %88, ptr %memberidx2.i.i.i90, align 8
  %.pre138 = load i64, ptr %memberidx.i.i86, align 4
  br label %TypeChecker_error.exit94

TypeChecker_error.exit94:                         ; preds = %if.entry16.TypeChecker_error.exit94_crit_edge, %if.entry.i.i91
  %89 = phi ptr [ %.pre139, %if.entry16.TypeChecker_error.exit94_crit_edge ], [ %88, %if.entry.i.i91 ]
  %90 = phi i64 [ %83, %if.entry16.TypeChecker_error.exit94_crit_edge ], [ %.pre138, %if.entry.i.i91 ]
  %91 = add i64 %90, 1
  store i64 %91, ptr %memberidx.i.i86, align 4
  %ptridx.i.i93 = getelementptr inbounds ptr, ptr %89, i64 %90
  store ptr %82, ptr %ptridx.i.i93, align 8
  br label %common.ret

ifend18:                                          ; preds = %ifend14
  %memberidx.i95 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 2
  %92 = load i64, ptr %memberidx.i95, align 4
  %93 = icmp eq i64 %92, 5
  %94 = load i64, ptr %ternary, align 4
  %95 = icmp eq i64 %94, 22
  %96 = and i1 %93, %95
  br i1 %96, label %if.entry22, label %ifend24

if.entry22:                                       ; preds = %ifend18
  %97 = tail call ptr @malloc(i32 552)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %97, ptr noundef nonnull align 8 dereferenceable(69) @198, i64 69, i1 false)
  %98 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %98, align 8
  %memberidx.i.i96 = getelementptr inbounds %string, ptr %98, i64 0, i32 1
  store ptr %97, ptr %memberidx.i.i96, align 8
  %memberidx1.i.i97 = getelementptr inbounds %string, ptr %98, i64 0, i32 2
  store i64 69, ptr %memberidx1.i.i97, align 4
  %memberidx2.i.i98 = getelementptr inbounds %string, ptr %98, i64 0, i32 3
  store i64 69, ptr %memberidx2.i.i98, align 4
  %99 = load ptr, ptr %1, align 8
  %100 = load ptr, ptr %memberidx.i73, align 8
  %memberidx1.i100 = getelementptr inbounds %Compiler, ptr %100, i64 0, i32 6
  %101 = load ptr, ptr %memberidx1.i100, align 8
  %102 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %102, align 4
  %memberidx1.i.i101 = getelementptr inbounds %FloError, ptr %102, i64 0, i32 2
  store ptr %99, ptr %memberidx1.i.i101, align 8
  %memberidx2.i.i102 = getelementptr inbounds %FloError, ptr %102, i64 0, i32 1
  store ptr %98, ptr %memberidx2.i.i102, align 8
  %memberidx.i.i103 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 2
  %103 = load i64, ptr %memberidx.i.i103, align 4
  %memberidx1.i2.i104 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 3
  %104 = load i64, ptr %memberidx1.i2.i104, align 4
  %.not.i.i105 = icmp slt i64 %103, %104
  br i1 %.not.i.i105, label %if.entry22.TypeChecker_error.exit111_crit_edge, label %if.entry.i.i108

if.entry22.TypeChecker_error.exit111_crit_edge:   ; preds = %if.entry22
  %memberidx4.i.i109.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 1
  %.pre143 = load ptr, ptr %memberidx4.i.i109.phi.trans.insert, align 8
  br label %TypeChecker_error.exit111

if.entry.i.i108:                                  ; preds = %if.entry22
  %105 = shl i64 %104, 1
  store i64 %105, ptr %memberidx1.i2.i104, align 4
  %memberidx2.i.i.i107 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 1
  %106 = load ptr, ptr %memberidx2.i.i.i107, align 8
  %107 = shl i64 %104, 4
  %108 = tail call ptr @realloc(ptr %106, i64 %107)
  store ptr %108, ptr %memberidx2.i.i.i107, align 8
  %.pre142 = load i64, ptr %memberidx.i.i103, align 4
  br label %TypeChecker_error.exit111

TypeChecker_error.exit111:                        ; preds = %if.entry22.TypeChecker_error.exit111_crit_edge, %if.entry.i.i108
  %109 = phi ptr [ %.pre143, %if.entry22.TypeChecker_error.exit111_crit_edge ], [ %108, %if.entry.i.i108 ]
  %110 = phi i64 [ %103, %if.entry22.TypeChecker_error.exit111_crit_edge ], [ %.pre142, %if.entry.i.i108 ]
  %111 = add i64 %110, 1
  store i64 %111, ptr %memberidx.i.i103, align 4
  %ptridx.i.i110 = getelementptr inbounds ptr, ptr %109, i64 %110
  store ptr %102, ptr %ptridx.i.i110, align 8
  br label %common.ret

ifend24:                                          ; preds = %ifend18
  %112 = icmp ne i64 %94, 22
  %memberidx27 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 3
  %113 = load ptr, ptr %memberidx27, align 8
  %114 = icmp ne ptr %ternary, %113
  %115 = and i1 %112, %114
  br i1 %115, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend24
  %116 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %117 = load ptr, ptr %116, align 8
  %memberidx31 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %117, i64 0, i32 5
  %118 = load ptr, ptr %memberidx31, align 8
  %119 = tail call ptr %118(ptr nonnull %116)
  %120 = load ptr, ptr %memberidx27, align 8
  %121 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %120)
  %122 = load ptr, ptr %121, align 8
  %memberidx33 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %122, i64 0, i32 5
  %123 = load ptr, ptr %memberidx33, align 8
  %124 = tail call ptr %123(ptr nonnull %121)
  %125 = alloca ptr, align 8
  %126 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %125, ptr nonnull @199, ptr %119, ptr %124)
  %127 = load ptr, ptr %125, align 8
  %128 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %128, align 8
  %memberidx.i112 = getelementptr inbounds %string, ptr %128, i64 0, i32 1
  store ptr %127, ptr %memberidx.i112, align 8
  %memberidx1.i113 = getelementptr inbounds %string, ptr %128, i64 0, i32 2
  store i64 %126, ptr %memberidx1.i113, align 4
  %memberidx2.i114 = getelementptr inbounds %string, ptr %128, i64 0, i32 3
  store i64 %126, ptr %memberidx2.i114, align 4
  tail call void @free(ptr %119)
  tail call void @free(ptr %124)
  %129 = load ptr, ptr %1, align 8
  %130 = load ptr, ptr %memberidx.i73, align 8
  %memberidx1.i116 = getelementptr inbounds %Compiler, ptr %130, i64 0, i32 6
  %131 = load ptr, ptr %memberidx1.i116, align 8
  %132 = call ptr @malloc(i32 24)
  store i64 5, ptr %132, align 4
  %memberidx1.i.i117 = getelementptr inbounds %FloError, ptr %132, i64 0, i32 2
  store ptr %129, ptr %memberidx1.i.i117, align 8
  %memberidx2.i.i118 = getelementptr inbounds %FloError, ptr %132, i64 0, i32 1
  store ptr %128, ptr %memberidx2.i.i118, align 8
  %memberidx.i.i119 = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 2
  %133 = load i64, ptr %memberidx.i.i119, align 4
  %memberidx1.i2.i120 = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 3
  %134 = load i64, ptr %memberidx1.i2.i120, align 4
  %.not.i.i121 = icmp slt i64 %133, %134
  br i1 %.not.i.i121, label %if.entry28.TypeChecker_error.exit127_crit_edge, label %if.entry.i.i124

if.entry28.TypeChecker_error.exit127_crit_edge:   ; preds = %if.entry28
  %memberidx4.i.i125.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 1
  %.pre141 = load ptr, ptr %memberidx4.i.i125.phi.trans.insert, align 8
  br label %TypeChecker_error.exit127

if.entry.i.i124:                                  ; preds = %if.entry28
  %135 = shl i64 %134, 1
  store i64 %135, ptr %memberidx1.i2.i120, align 4
  %memberidx2.i.i.i123 = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 1
  %136 = load ptr, ptr %memberidx2.i.i.i123, align 8
  %137 = shl i64 %134, 4
  %138 = call ptr @realloc(ptr %136, i64 %137)
  store ptr %138, ptr %memberidx2.i.i.i123, align 8
  %.pre140 = load i64, ptr %memberidx.i.i119, align 4
  br label %TypeChecker_error.exit127

TypeChecker_error.exit127:                        ; preds = %if.entry28.TypeChecker_error.exit127_crit_edge, %if.entry.i.i124
  %139 = phi ptr [ %.pre141, %if.entry28.TypeChecker_error.exit127_crit_edge ], [ %138, %if.entry.i.i124 ]
  %140 = phi i64 [ %133, %if.entry28.TypeChecker_error.exit127_crit_edge ], [ %.pre140, %if.entry.i.i124 ]
  %141 = add i64 %140, 1
  store i64 %141, ptr %memberidx.i.i119, align 4
  %ptridx.i.i126 = getelementptr inbounds ptr, ptr %139, i64 %140
  store ptr %132, ptr %ptridx.i.i126, align 8
  br label %common.ret

ifend30:                                          ; preds = %ifend24
  %142 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr %4, ptr nonnull %70, ptr %113)
  %143 = tail call ptr @malloc(i32 25)
  %memberidx36 = getelementptr inbounds %Const, ptr %142, i64 0, i32 1
  %144 = load ptr, ptr %memberidx36, align 8
  store i64 2, ptr %143, align 4
  %memberidx.i128 = getelementptr inbounds %ConstDeclaration, ptr %143, i64 0, i32 2
  store ptr %144, ptr %memberidx.i128, align 8
  %memberidx1.i129 = getelementptr inbounds %ConstDeclaration, ptr %143, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i129, align 8
  %memberidx2.i130 = getelementptr inbounds %ConstDeclaration, ptr %143, i64 0, i32 3
  store i1 false, ptr %memberidx2.i130, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %4 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i, align 8
  %6 = load i64, ptr %4, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %6
  %8 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %10 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %memberidx1.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i.i80 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend5, %2
  %current_scope.0.in = phi ptr [ %ptridx.i6.i.i, %2 ], [ %ptridx.i6.i, %ifend5 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 1
  %12 = load ptr, ptr %memberidx, align 8
  %13 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_string_VarId_, ptr %12, i64 0, i32 1
  %14 = load i64, ptr %memberidx.i, align 4
  %15 = srem i64 %13, %14
  %16 = load ptr, ptr %12, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %16, i64 %15
  %17 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %17, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %while.entry, %else.i
  %18 = phi ptr [ %28, %else.i ], [ %16, %while.entry ]
  %19 = phi i64 [ %29, %else.i ], [ %14, %while.entry ]
  %20 = phi ptr [ %32, %else.i ], [ %17, %while.entry ]
  %hash.0.i = phi i64 [ %31, %else.i ], [ %15, %while.entry ]
  %21 = load ptr, ptr %20, align 8
  %memberidx.i.i78 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i.i78, align 4
  %23 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %22, %23
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i79 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  %24 = load ptr, ptr %memberidx2.i.i79, align 8
  %25 = load ptr, ptr %memberidx3.i.i80, align 8
  %26 = tail call i64 @memcmp(ptr %24, ptr %25, i64 %22)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre158 = load ptr, ptr %12, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre159.pre = load ptr, ptr %12, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre159.pre, i64 %hash.0.i
  %.pre160.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre160.pre, null
  br i1 %.not29.i, label %if.entry, label %Map_string_VarId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %28 = phi ptr [ %.pre158, %ifend.i.i.else.i_crit_edge ], [ %18, %while.entry.i ]
  %29 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %19, %while.entry.i ]
  %30 = add i64 %hash.0.i, 1
  %31 = srem i64 %30, %29
  %ptridx7.i = getelementptr inbounds ptr, ptr %28, i64 %31
  %32 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %32, null
  br i1 %.not30.i, label %if.entry, label %while.entry.i

Map_string_VarId____getitem__.exit:               ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre160.pre, i64 0, i32 1
  %33 = load ptr, ptr %memberidx15.i, align 8
  %34 = icmp eq ptr %33, null
  br i1 %34, label %if.entry, label %ifend12

while.end:                                        ; preds = %ifend
  %35 = icmp eq ptr %value.1, null
  %36 = load ptr, ptr %memberidx1.i, align 8
  %37 = load i64, ptr %36, align 4
  %38 = icmp ne i64 %37, 0
  %39 = and i1 %35, %38
  br i1 %39, label %if.entry10, label %ifend12

if.entry:                                         ; preds = %else.i, %while.entry, %while.end.i, %Map_string_VarId____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 3
  %40 = load ptr, ptr %memberidx1, align 8
  %41 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %1)
  %memberidx.i81 = getelementptr inbounds %Map_string_VarId_, ptr %40, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i81, align 4
  %43 = srem i64 %41, %42
  %44 = load ptr, ptr %40, align 8
  %ptridx.i82 = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i82, align 8
  %.not.i83 = icmp eq ptr %45, null
  br i1 %.not.i83, label %ifend, label %while.entry.i89

while.entry.i89:                                  ; preds = %if.entry, %else.i101
  %46 = phi ptr [ %56, %else.i101 ], [ %44, %if.entry ]
  %47 = phi i64 [ %57, %else.i101 ], [ %42, %if.entry ]
  %48 = phi ptr [ %60, %else.i101 ], [ %45, %if.entry ]
  %hash.0.i84 = phi i64 [ %59, %else.i101 ], [ %43, %if.entry ]
  %49 = load ptr, ptr %48, align 8
  %memberidx.i.i86 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx.i.i86, align 4
  %51 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i88 = icmp eq i64 %50, %51
  br i1 %.not.i.i88, label %ifend.i.i92, label %else.i101

ifend.i.i92:                                      ; preds = %while.entry.i89
  %memberidx2.i.i90 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i90, align 8
  %53 = load ptr, ptr %memberidx3.i.i80, align 8
  %54 = tail call i64 @memcmp(ptr %52, ptr %53, i64 %50)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %while.end.i98, label %ifend.i.i92.else.i101_crit_edge

ifend.i.i92.else.i101_crit_edge:                  ; preds = %ifend.i.i92
  %.pre161 = load i64, ptr %memberidx.i81, align 4
  %.pre162 = load ptr, ptr %40, align 8
  br label %else.i101

while.end.i98:                                    ; preds = %ifend.i.i92
  %.pre163.pre = load ptr, ptr %40, align 8
  %ptridx9.i96.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre163.pre, i64 %hash.0.i84
  %.pre164.pre = load ptr, ptr %ptridx9.i96.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i97 = icmp eq ptr %.pre164.pre, null
  br i1 %.not29.i97, label %ifend, label %if.entry10.i104

else.i101:                                        ; preds = %ifend.i.i92.else.i101_crit_edge, %while.entry.i89
  %56 = phi ptr [ %.pre162, %ifend.i.i92.else.i101_crit_edge ], [ %46, %while.entry.i89 ]
  %57 = phi i64 [ %.pre161, %ifend.i.i92.else.i101_crit_edge ], [ %47, %while.entry.i89 ]
  %58 = add i64 %hash.0.i84, 1
  %59 = srem i64 %58, %57
  %ptridx7.i99 = getelementptr inbounds ptr, ptr %56, i64 %59
  %60 = load ptr, ptr %ptridx7.i99, align 8
  %.not30.i100 = icmp eq ptr %60, null
  br i1 %.not30.i100, label %ifend, label %while.entry.i89

if.entry10.i104:                                  ; preds = %while.end.i98
  %memberidx15.i103 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre164.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx15.i103, align 8
  br label %ifend

ifend:                                            ; preds = %else.i101, %if.entry, %if.entry10.i104, %while.end.i98
  %value.1 = phi ptr [ %61, %if.entry10.i104 ], [ null, %while.end.i98 ], [ null, %if.entry ], [ null, %else.i101 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %62 = load ptr, ptr %memberidx2, align 8
  %63 = icmp eq ptr %62, null
  %64 = icmp ne ptr %value.1, null
  %65 = or i1 %64, %63
  br i1 %65, label %while.end, label %ifend5

ifend5:                                           ; preds = %ifend
  %66 = load ptr, ptr %0, align 8
  %memberidx.i106 = getelementptr inbounds %Program, ptr %66, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i106, align 8
  %68 = load i64, ptr %62, align 4
  %memberidx.i.i107 = getelementptr inbounds %Array_Module_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i.i107, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %69, i64 %68
  %70 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %70, i64 0, i32 7
  %71 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %62, i64 0, i32 1
  %72 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %71, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %73, i64 %72
  br label %while.entry

if.entry10:                                       ; preds = %while.end
  %74 = load ptr, ptr %0, align 8
  %memberidx16 = getelementptr inbounds %Program, ptr %74, i64 0, i32 1
  %75 = load ptr, ptr %memberidx16, align 8
  %memberidx.i108 = getelementptr inbounds %Array_Module_, ptr %75, i64 0, i32 1
  %76 = load ptr, ptr %memberidx.i108, align 8
  %77 = load ptr, ptr %76, align 8
  %memberidx17 = getelementptr inbounds %Module, ptr %77, i64 0, i32 7
  %78 = load ptr, ptr %memberidx17, align 8
  %memberidx.i109 = getelementptr inbounds %Array_Scope_, ptr %78, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i109, align 8
  %80 = load ptr, ptr %79, align 8
  %81 = load ptr, ptr %80, align 8
  store ptr %81, ptr %memberidx1.i, align 8
  %82 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %1)
  store ptr %36, ptr %memberidx1.i, align 8
  %.not = icmp eq ptr %82, null
  br i1 %.not, label %ifend12, label %if.entry20

ifend12:                                          ; preds = %Map_string_VarId____getitem__.exit, %if.entry39, %ifend37, %if.entry10, %while.end
  %value.2 = phi ptr [ %82, %if.entry39 ], [ %82, %ifend37 ], [ null, %if.entry10 ], [ %value.1, %while.end ], [ %33, %Map_string_VarId____getitem__.exit ]
  ret ptr %value.2

if.entry20:                                       ; preds = %if.entry10
  %83 = load ptr, ptr %0, align 8
  store i1 true, ptr %83, align 1
  %84 = load i64, ptr %82, align 4
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %if.entry26, label %ifend28

if.entry26:                                       ; preds = %if.entry20
  %memberidx.i.i.i119 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %86 = load i64, ptr %memberidx.i.i.i119, align 4
  %87 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i120 = getelementptr inbounds %Program, ptr %87, i64 0, i32 1
  %88 = load ptr, ptr %memberidx1.i.i.i.i120, align 8
  %memberidx.i.i.i.i.i121 = getelementptr inbounds %Array_Module_, ptr %88, i64 0, i32 1
  %89 = load ptr, ptr %memberidx.i.i.i.i.i121, align 8
  %ptridx.i.i.i.i.i122 = getelementptr inbounds ptr, ptr %89, i64 %86
  %90 = load ptr, ptr %ptridx.i.i.i.i.i122, align 8
  %memberidx.i.i123 = getelementptr inbounds %Module, ptr %90, i64 0, i32 7
  %91 = load ptr, ptr %memberidx.i.i123, align 8
  %memberidx.i1.i.i124 = getelementptr inbounds %Array_Scope_, ptr %91, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i1.i.i124, align 8
  %93 = load ptr, ptr %92, align 8
  %memberidx.i125 = getelementptr inbounds %Scope, ptr %93, i64 0, i32 3
  %94 = load ptr, ptr %memberidx.i125, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %94, ptr %1, ptr nonnull %82)
  %.pre165 = load i64, ptr %82, align 4
  br label %ifend28

ifend28:                                          ; preds = %if.entry20, %if.entry26
  %95 = phi i64 [ %84, %if.entry20 ], [ %.pre165, %if.entry26 ]
  %96 = add i64 %95, -1
  %97 = icmp ult i64 %96, 2
  br i1 %97, label %if.entry31, label %ifend33

if.entry31:                                       ; preds = %ifend28
  %memberidx.i.i.i126 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %98 = load i64, ptr %memberidx.i.i.i126, align 4
  %99 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i127 = getelementptr inbounds %Program, ptr %99, i64 0, i32 1
  %100 = load ptr, ptr %memberidx1.i.i.i.i127, align 8
  %memberidx.i.i.i.i.i128 = getelementptr inbounds %Array_Module_, ptr %100, i64 0, i32 1
  %101 = load ptr, ptr %memberidx.i.i.i.i.i128, align 8
  %ptridx.i.i.i.i.i129 = getelementptr inbounds ptr, ptr %101, i64 %98
  %102 = load ptr, ptr %ptridx.i.i.i.i.i129, align 8
  %memberidx.i.i130 = getelementptr inbounds %Module, ptr %102, i64 0, i32 7
  %103 = load ptr, ptr %memberidx.i.i130, align 8
  %memberidx.i1.i.i131 = getelementptr inbounds %Array_Scope_, ptr %103, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i1.i.i131, align 8
  %105 = load ptr, ptr %104, align 8
  %memberidx.i132 = getelementptr inbounds %Scope, ptr %105, i64 0, i32 1
  %106 = load ptr, ptr %memberidx.i132, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %106, ptr %1, ptr nonnull %82)
  %.pr = load i64, ptr %82, align 4
  br label %ifend33

ifend33:                                          ; preds = %ifend28, %if.entry31
  %107 = phi i64 [ %95, %ifend28 ], [ %.pr, %if.entry31 ]
  %108 = icmp eq i64 %107, 3
  br i1 %108, label %if.entry35, label %ifend37

if.entry35:                                       ; preds = %ifend33
  %109 = tail call ptr @malloc(i32 24)
  %memberidx.i133 = getelementptr inbounds %VarId, ptr %82, i64 0, i32 1
  %110 = load i64, ptr %memberidx.i133, align 4
  %memberidx1.i134 = getelementptr inbounds %VarId, ptr %82, i64 0, i32 2
  %111 = load i64, ptr %memberidx1.i134, align 4
  store i64 %110, ptr %109, align 4
  %memberidx1.i.i.i135 = getelementptr inbounds %TypeId, ptr %109, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i135, align 4
  %memberidx2.i.i.i136 = getelementptr inbounds %TypeId, ptr %109, i64 0, i32 2
  store i64 %111, ptr %memberidx2.i.i.i136, align 4
  %memberidx.i.i.i137 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %112 = load i64, ptr %memberidx.i.i.i137, align 4
  %113 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i138 = getelementptr inbounds %Program, ptr %113, i64 0, i32 1
  %114 = load ptr, ptr %memberidx1.i.i.i.i138, align 8
  %memberidx.i.i.i.i.i139 = getelementptr inbounds %Array_Module_, ptr %114, i64 0, i32 1
  %115 = load ptr, ptr %memberidx.i.i.i.i.i139, align 8
  %ptridx.i.i.i.i.i140 = getelementptr inbounds ptr, ptr %115, i64 %112
  %116 = load ptr, ptr %ptridx.i.i.i.i.i140, align 8
  %memberidx.i.i141 = getelementptr inbounds %Module, ptr %116, i64 0, i32 7
  %117 = load ptr, ptr %memberidx.i.i141, align 8
  %memberidx.i1.i.i142 = getelementptr inbounds %Array_Scope_, ptr %117, i64 0, i32 1
  %118 = load ptr, ptr %memberidx.i1.i.i142, align 8
  %119 = load ptr, ptr %118, align 8
  %memberidx.i143 = getelementptr inbounds %Scope, ptr %119, i64 0, i32 2
  %120 = load ptr, ptr %memberidx.i143, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %120, ptr %1, ptr nonnull %109)
  %memberidx1.i144 = getelementptr inbounds %Scope, ptr %119, i64 0, i32 1
  %121 = load ptr, ptr %memberidx1.i144, align 8
  %122 = tail call ptr @malloc(i32 24)
  %123 = load i64, ptr %109, align 4
  %124 = load i64, ptr %memberidx2.i.i.i136, align 4
  store i64 3, ptr %122, align 4
  %memberidx1.i.i.i146 = getelementptr inbounds %VarId, ptr %122, i64 0, i32 1
  store i64 %123, ptr %memberidx1.i.i.i146, align 4
  %memberidx2.i.i.i147 = getelementptr inbounds %VarId, ptr %122, i64 0, i32 2
  store i64 %124, ptr %memberidx2.i.i.i147, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %121, ptr %1, ptr nonnull %122)
  %.pre166 = load i64, ptr %82, align 4
  br label %ifend37

ifend37:                                          ; preds = %ifend33, %if.entry35
  %125 = phi i64 [ %107, %ifend33 ], [ %.pre166, %if.entry35 ]
  %126 = icmp eq i64 %125, 4
  br i1 %126, label %if.entry39, label %ifend12

if.entry39:                                       ; preds = %ifend37
  %127 = tail call ptr @malloc(i32 24)
  %memberidx.i110 = getelementptr inbounds %VarId, ptr %82, i64 0, i32 1
  %128 = load i64, ptr %memberidx.i110, align 4
  %memberidx1.i111 = getelementptr inbounds %VarId, ptr %82, i64 0, i32 2
  %129 = load i64, ptr %memberidx1.i111, align 4
  store i64 %128, ptr %127, align 4
  %memberidx1.i.i.i = getelementptr inbounds %TypeId, ptr %127, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %TypeId, ptr %127, i64 0, i32 2
  store i64 %129, ptr %memberidx2.i.i.i, align 4
  %memberidx.i.i.i112 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %130 = load i64, ptr %memberidx.i.i.i112, align 4
  %131 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %131, i64 0, i32 1
  %132 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %132, i64 0, i32 1
  %133 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %133, i64 %130
  %134 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx.i.i113 = getelementptr inbounds %Module, ptr %134, i64 0, i32 7
  %135 = load ptr, ptr %memberidx.i.i113, align 8
  %memberidx.i1.i.i = getelementptr inbounds %Array_Scope_, ptr %135, i64 0, i32 1
  %136 = load ptr, ptr %memberidx.i1.i.i, align 8
  %137 = load ptr, ptr %136, align 8
  %memberidx.i114 = getelementptr inbounds %Scope, ptr %137, i64 0, i32 4
  %138 = load ptr, ptr %memberidx.i114, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %138, ptr %1, ptr nonnull %127)
  %memberidx1.i115 = getelementptr inbounds %Scope, ptr %137, i64 0, i32 1
  %139 = load ptr, ptr %memberidx1.i115, align 8
  %140 = tail call ptr @malloc(i32 24)
  %141 = load i64, ptr %127, align 4
  %142 = load i64, ptr %memberidx2.i.i.i, align 4
  store i64 4, ptr %140, align 4
  %memberidx1.i.i.i117 = getelementptr inbounds %VarId, ptr %140, i64 0, i32 1
  store i64 %141, ptr %memberidx1.i.i.i117, align 4
  %memberidx2.i.i.i118 = getelementptr inbounds %VarId, ptr %140, i64 0, i32 2
  store i64 %142, ptr %memberidx2.i.i.i118, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %139, ptr %1, ptr nonnull %140)
  br label %ifend12
}

define internal fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %4 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i, align 8
  %6 = load i64, ptr %4, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %6
  %8 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %10 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %memberidx1.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i.i64 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend12, %2
  %current_scope.0.in = phi ptr [ %ptridx.i6.i.i, %2 ], [ %ptridx.i6.i, %ifend12 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 6
  %12 = load ptr, ptr %memberidx, align 8
  %13 = tail call fastcc i64 @Map_string_Type__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_string_Type_, ptr %12, i64 0, i32 1
  %14 = load i64, ptr %memberidx.i, align 4
  %15 = srem i64 %13, %14
  %16 = load ptr, ptr %12, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %16, i64 %15
  %17 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %17, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %while.entry, %else.i
  %18 = phi ptr [ %28, %else.i ], [ %16, %while.entry ]
  %19 = phi i64 [ %29, %else.i ], [ %14, %while.entry ]
  %20 = phi ptr [ %32, %else.i ], [ %17, %while.entry ]
  %hash.0.i = phi i64 [ %31, %else.i ], [ %15, %while.entry ]
  %21 = load ptr, ptr %20, align 8
  %memberidx.i.i62 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i.i62, align 4
  %23 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %22, %23
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i63 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  %24 = load ptr, ptr %memberidx2.i.i63, align 8
  %25 = load ptr, ptr %memberidx3.i.i64, align 8
  %26 = tail call i64 @memcmp(ptr %24, ptr %25, i64 %22)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre151 = load ptr, ptr %12, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre152.pre = load ptr, ptr %12, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre152.pre, i64 %hash.0.i
  %.pre153.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre153.pre, null
  br i1 %.not29.i, label %ifend, label %Map_string_Type____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %28 = phi ptr [ %.pre151, %ifend.i.i.else.i_crit_edge ], [ %18, %while.entry.i ]
  %29 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %19, %while.entry.i ]
  %30 = add i64 %hash.0.i, 1
  %31 = srem i64 %30, %29
  %ptridx7.i = getelementptr inbounds ptr, ptr %28, i64 %31
  %32 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %32, null
  br i1 %.not30.i, label %ifend, label %while.entry.i

Map_string_Type____getitem__.exit:                ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_Type_, ptr %.pre153.pre, i64 0, i32 1
  %33 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %33, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_string_Type____getitem__.exit, %ifend29, %ifend19, %if.entry6, %if.entry2
  %common.ret.op = phi ptr [ %56, %if.entry2 ], [ %79, %if.entry6 ], [ %102, %ifend19 ], [ %100, %ifend29 ], [ %33, %Map_string_Type____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %while.entry, %while.end.i, %Map_string_Type____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 2
  %34 = load ptr, ptr %memberidx1, align 8
  %35 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr %1)
  %memberidx.i65 = getelementptr inbounds %Map_string_ClassId_, ptr %34, i64 0, i32 1
  %36 = load i64, ptr %memberidx.i65, align 4
  %37 = srem i64 %35, %36
  %38 = load ptr, ptr %34, align 8
  %ptridx.i66 = getelementptr inbounds ptr, ptr %38, i64 %37
  %39 = load ptr, ptr %ptridx.i66, align 8
  %.not.i67 = icmp eq ptr %39, null
  br i1 %.not.i67, label %ifend4, label %while.entry.i73

while.entry.i73:                                  ; preds = %ifend, %else.i85
  %40 = phi ptr [ %50, %else.i85 ], [ %38, %ifend ]
  %41 = phi i64 [ %51, %else.i85 ], [ %36, %ifend ]
  %42 = phi ptr [ %54, %else.i85 ], [ %39, %ifend ]
  %hash.0.i68 = phi i64 [ %53, %else.i85 ], [ %37, %ifend ]
  %43 = load ptr, ptr %42, align 8
  %memberidx.i.i70 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i.i70, align 4
  %45 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i72 = icmp eq i64 %44, %45
  br i1 %.not.i.i72, label %ifend.i.i76, label %else.i85

ifend.i.i76:                                      ; preds = %while.entry.i73
  %memberidx2.i.i74 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i74, align 8
  %47 = load ptr, ptr %memberidx3.i.i64, align 8
  %48 = tail call i64 @memcmp(ptr %46, ptr %47, i64 %44)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %while.end.i82, label %ifend.i.i76.else.i85_crit_edge

ifend.i.i76.else.i85_crit_edge:                   ; preds = %ifend.i.i76
  %.pre154 = load i64, ptr %memberidx.i65, align 4
  %.pre155 = load ptr, ptr %34, align 8
  br label %else.i85

while.end.i82:                                    ; preds = %ifend.i.i76
  %.pre156.pre = load ptr, ptr %34, align 8
  %ptridx9.i80.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre156.pre, i64 %hash.0.i68
  %.pre157.pre = load ptr, ptr %ptridx9.i80.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i81 = icmp eq ptr %.pre157.pre, null
  br i1 %.not29.i81, label %ifend4, label %Map_string_ClassId____getitem__.exit

else.i85:                                         ; preds = %ifend.i.i76.else.i85_crit_edge, %while.entry.i73
  %50 = phi ptr [ %.pre155, %ifend.i.i76.else.i85_crit_edge ], [ %40, %while.entry.i73 ]
  %51 = phi i64 [ %.pre154, %ifend.i.i76.else.i85_crit_edge ], [ %41, %while.entry.i73 ]
  %52 = add i64 %hash.0.i68, 1
  %53 = srem i64 %52, %51
  %ptridx7.i83 = getelementptr inbounds ptr, ptr %50, i64 %53
  %54 = load ptr, ptr %ptridx7.i83, align 8
  %.not30.i84 = icmp eq ptr %54, null
  br i1 %.not30.i84, label %ifend4, label %while.entry.i73

Map_string_ClassId____getitem__.exit:             ; preds = %while.end.i82
  %memberidx15.i87 = getelementptr inbounds %MapEntry_string_ClassId_, ptr %.pre157.pre, i64 0, i32 1
  %55 = load ptr, ptr %memberidx15.i87, align 8
  %.not58 = icmp eq ptr %55, null
  br i1 %.not58, label %ifend4, label %if.entry2

if.entry2:                                        ; preds = %Map_string_ClassId____getitem__.exit
  %56 = tail call ptr @malloc(i32 16)
  store i64 13, ptr %56, align 4
  %memberidx.i89 = getelementptr inbounds %ObjectType, ptr %56, i64 0, i32 1
  store ptr %55, ptr %memberidx.i89, align 8
  br label %common.ret

ifend4:                                           ; preds = %else.i85, %ifend, %while.end.i82, %Map_string_ClassId____getitem__.exit
  %memberidx5 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 4
  %57 = load ptr, ptr %memberidx5, align 8
  %58 = tail call fastcc i64 @Map_string_EnumId__hash_fnc(ptr %1)
  %memberidx.i90 = getelementptr inbounds %Map_string_EnumId_, ptr %57, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i90, align 4
  %60 = srem i64 %58, %59
  %61 = load ptr, ptr %57, align 8
  %ptridx.i91 = getelementptr inbounds ptr, ptr %61, i64 %60
  %62 = load ptr, ptr %ptridx.i91, align 8
  %.not.i92 = icmp eq ptr %62, null
  br i1 %.not.i92, label %ifend8, label %while.entry.i98

while.entry.i98:                                  ; preds = %ifend4, %else.i110
  %63 = phi ptr [ %73, %else.i110 ], [ %61, %ifend4 ]
  %64 = phi i64 [ %74, %else.i110 ], [ %59, %ifend4 ]
  %65 = phi ptr [ %77, %else.i110 ], [ %62, %ifend4 ]
  %hash.0.i93 = phi i64 [ %76, %else.i110 ], [ %60, %ifend4 ]
  %66 = load ptr, ptr %65, align 8
  %memberidx.i.i95 = getelementptr inbounds %string, ptr %66, i64 0, i32 2
  %67 = load i64, ptr %memberidx.i.i95, align 4
  %68 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i97 = icmp eq i64 %67, %68
  br i1 %.not.i.i97, label %ifend.i.i101, label %else.i110

ifend.i.i101:                                     ; preds = %while.entry.i98
  %memberidx2.i.i99 = getelementptr inbounds %string, ptr %66, i64 0, i32 1
  %69 = load ptr, ptr %memberidx2.i.i99, align 8
  %70 = load ptr, ptr %memberidx3.i.i64, align 8
  %71 = tail call i64 @memcmp(ptr %69, ptr %70, i64 %67)
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %while.end.i107, label %ifend.i.i101.else.i110_crit_edge

ifend.i.i101.else.i110_crit_edge:                 ; preds = %ifend.i.i101
  %.pre158 = load i64, ptr %memberidx.i90, align 4
  %.pre159 = load ptr, ptr %57, align 8
  br label %else.i110

while.end.i107:                                   ; preds = %ifend.i.i101
  %.pre160.pre = load ptr, ptr %57, align 8
  %ptridx9.i105.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre160.pre, i64 %hash.0.i93
  %.pre161.pre = load ptr, ptr %ptridx9.i105.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i106 = icmp eq ptr %.pre161.pre, null
  br i1 %.not29.i106, label %ifend8, label %Map_string_EnumId____getitem__.exit

else.i110:                                        ; preds = %ifend.i.i101.else.i110_crit_edge, %while.entry.i98
  %73 = phi ptr [ %.pre159, %ifend.i.i101.else.i110_crit_edge ], [ %63, %while.entry.i98 ]
  %74 = phi i64 [ %.pre158, %ifend.i.i101.else.i110_crit_edge ], [ %64, %while.entry.i98 ]
  %75 = add i64 %hash.0.i93, 1
  %76 = srem i64 %75, %74
  %ptridx7.i108 = getelementptr inbounds ptr, ptr %73, i64 %76
  %77 = load ptr, ptr %ptridx7.i108, align 8
  %.not30.i109 = icmp eq ptr %77, null
  br i1 %.not30.i109, label %ifend8, label %while.entry.i98

Map_string_EnumId____getitem__.exit:              ; preds = %while.end.i107
  %memberidx15.i112 = getelementptr inbounds %MapEntry_string_EnumId_, ptr %.pre161.pre, i64 0, i32 1
  %78 = load ptr, ptr %memberidx15.i112, align 8
  %.not59 = icmp eq ptr %78, null
  br i1 %.not59, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %Map_string_EnumId____getitem__.exit
  %79 = tail call ptr @malloc(i32 16)
  store i64 14, ptr %79, align 4
  %memberidx.i114 = getelementptr inbounds %EnumType, ptr %79, i64 0, i32 1
  store ptr %78, ptr %memberidx.i114, align 8
  br label %common.ret

ifend8:                                           ; preds = %else.i110, %ifend4, %while.end.i107, %Map_string_EnumId____getitem__.exit
  %memberidx9 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %80 = load ptr, ptr %memberidx9, align 8
  %81 = icmp eq ptr %80, null
  br i1 %81, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %ifend8
  %82 = load ptr, ptr %memberidx1.i, align 8
  %83 = load i64, ptr %82, align 4
  %.not60 = icmp eq i64 %83, 0
  br i1 %.not60, label %ifend19, label %if.entry17

ifend12:                                          ; preds = %ifend8
  %84 = load ptr, ptr %0, align 8
  %memberidx.i115 = getelementptr inbounds %Program, ptr %84, i64 0, i32 1
  %85 = load ptr, ptr %memberidx.i115, align 8
  %86 = load i64, ptr %80, align 4
  %memberidx.i.i116 = getelementptr inbounds %Array_Module_, ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i.i116, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %87, i64 %86
  %88 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %88, i64 0, i32 7
  %89 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %80, i64 0, i32 1
  %90 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %89, i64 0, i32 1
  %91 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %91, i64 %90
  br label %while.entry

if.entry17:                                       ; preds = %if.entry10
  %92 = load ptr, ptr %0, align 8
  %memberidx23 = getelementptr inbounds %Program, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx23, align 8
  %memberidx.i117 = getelementptr inbounds %Array_Module_, ptr %93, i64 0, i32 1
  %94 = load ptr, ptr %memberidx.i117, align 8
  %95 = load ptr, ptr %94, align 8
  %memberidx24 = getelementptr inbounds %Module, ptr %95, i64 0, i32 7
  %96 = load ptr, ptr %memberidx24, align 8
  %memberidx.i123 = getelementptr inbounds %Array_Scope_, ptr %96, i64 0, i32 1
  %97 = load ptr, ptr %memberidx.i123, align 8
  %98 = load ptr, ptr %97, align 8
  %99 = load ptr, ptr %98, align 8
  store ptr %99, ptr %memberidx1.i, align 8
  %100 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %1)
  %101 = load i64, ptr %100, align 4
  %.not61 = icmp eq i64 %101, 22
  br i1 %.not61, label %ifend29, label %if.entry27

ifend19:                                          ; preds = %if.entry10
  %102 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %102, align 4
  br label %common.ret

if.entry27:                                       ; preds = %if.entry17
  %103 = load ptr, ptr %0, align 8
  store i1 true, ptr %103, align 1
  %104 = load i64, ptr %100, align 4
  %105 = icmp eq i64 %104, 13
  br i1 %105, label %if.entry33, label %else34

ifend29:                                          ; preds = %if.entry33, %else34, %if.entry17
  store ptr %82, ptr %memberidx1.i, align 8
  br label %common.ret

if.entry33:                                       ; preds = %if.entry27
  %memberidx36 = getelementptr inbounds %ObjectType, ptr %100, i64 0, i32 1
  %106 = load ptr, ptr %memberidx36, align 8
  %memberidx.i.i.i118 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %107 = load i64, ptr %memberidx.i.i.i118, align 4
  %108 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %108, i64 0, i32 1
  %109 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %109, i64 0, i32 1
  %110 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %110, i64 %107
  %111 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx.i.i119 = getelementptr inbounds %Module, ptr %111, i64 0, i32 7
  %112 = load ptr, ptr %memberidx.i.i119, align 8
  %memberidx.i1.i.i = getelementptr inbounds %Array_Scope_, ptr %112, i64 0, i32 1
  %113 = load ptr, ptr %memberidx.i1.i.i, align 8
  %114 = load ptr, ptr %113, align 8
  %memberidx.i120 = getelementptr inbounds %Scope, ptr %114, i64 0, i32 2
  %115 = load ptr, ptr %memberidx.i120, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %115, ptr %1, ptr %106)
  %memberidx1.i121 = getelementptr inbounds %Scope, ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %memberidx1.i121, align 8
  %117 = tail call ptr @malloc(i32 24)
  %118 = load i64, ptr %106, align 4
  %memberidx1.i.i122 = getelementptr inbounds %TypeId, ptr %106, i64 0, i32 2
  %119 = load i64, ptr %memberidx1.i.i122, align 4
  store i64 3, ptr %117, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %117, i64 0, i32 1
  store i64 %118, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %VarId, ptr %117, i64 0, i32 2
  store i64 %119, ptr %memberidx2.i.i.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %116, ptr %1, ptr nonnull %117)
  br label %ifend29

else34:                                           ; preds = %if.entry27
  %memberidx37 = getelementptr inbounds %EnumType, ptr %100, i64 0, i32 1
  %120 = load ptr, ptr %memberidx37, align 8
  %memberidx.i.i.i124 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %121 = load i64, ptr %memberidx.i.i.i124, align 4
  %122 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i125 = getelementptr inbounds %Program, ptr %122, i64 0, i32 1
  %123 = load ptr, ptr %memberidx1.i.i.i.i125, align 8
  %memberidx.i.i.i.i.i126 = getelementptr inbounds %Array_Module_, ptr %123, i64 0, i32 1
  %124 = load ptr, ptr %memberidx.i.i.i.i.i126, align 8
  %ptridx.i.i.i.i.i127 = getelementptr inbounds ptr, ptr %124, i64 %121
  %125 = load ptr, ptr %ptridx.i.i.i.i.i127, align 8
  %memberidx.i.i128 = getelementptr inbounds %Module, ptr %125, i64 0, i32 7
  %126 = load ptr, ptr %memberidx.i.i128, align 8
  %memberidx.i1.i.i129 = getelementptr inbounds %Array_Scope_, ptr %126, i64 0, i32 1
  %127 = load ptr, ptr %memberidx.i1.i.i129, align 8
  %128 = load ptr, ptr %127, align 8
  %memberidx.i130 = getelementptr inbounds %Scope, ptr %128, i64 0, i32 4
  %129 = load ptr, ptr %memberidx.i130, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %129, ptr %1, ptr %120)
  %memberidx1.i131 = getelementptr inbounds %Scope, ptr %128, i64 0, i32 1
  %130 = load ptr, ptr %memberidx1.i131, align 8
  %131 = tail call ptr @malloc(i32 24)
  %132 = load i64, ptr %120, align 4
  %memberidx1.i.i132 = getelementptr inbounds %TypeId, ptr %120, i64 0, i32 2
  %133 = load i64, ptr %memberidx1.i.i132, align 4
  store i64 4, ptr %131, align 4
  %memberidx1.i.i.i133 = getelementptr inbounds %VarId, ptr %131, i64 0, i32 1
  store i64 %132, ptr %memberidx1.i.i.i133, align 4
  %memberidx2.i.i.i134 = getelementptr inbounds %VarId, ptr %131, i64 0, i32 2
  store i64 %133, ptr %memberidx2.i.i.i134, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %130, ptr %1, ptr nonnull %131)
  br label %ifend29
}

define internal fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Var, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i12 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i12, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx1.i.i = getelementptr inbounds %Program, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %8, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %9, i64 %6
  %10 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx1.i14 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %11 = load ptr, ptr %memberidx1.i14, align 8
  %12 = load i64, ptr %11, align 4
  %ptridx.i.i.i17 = getelementptr inbounds ptr, ptr %9, i64 %12
  %13 = load ptr, ptr %ptridx.i.i.i17, align 8
  %memberidx2.i.i18 = getelementptr inbounds %Module, ptr %13, i64 0, i32 7
  %14 = load ptr, ptr %memberidx2.i.i18, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %11, i64 0, i32 1
  %15 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %16, i64 %15
  %17 = load ptr, ptr %ptridx.i6.i.i, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = load i64, ptr %memberidx.i12, align 4
  %memberidx1 = getelementptr inbounds %Module, ptr %10, i64 0, i32 2
  %20 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Var_, ptr %20, i64 0, i32 2
  %21 = load i64, ptr %memberidx2, align 4
  store i64 1, ptr %18, align 4
  %memberidx1.i19 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i19, align 4
  %memberidx2.i = getelementptr inbounds %VarId, ptr %18, i64 0, i32 2
  store i64 %21, ptr %memberidx2.i, align 4
  %memberidx3 = getelementptr inbounds %Var, ptr %5, i64 0, i32 1
  store ptr %18, ptr %memberidx3, align 8
  %22 = load ptr, ptr %memberidx1, align 8
  %memberidx.i13 = getelementptr inbounds %Array_Var_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx.i13, align 4
  %memberidx1.i = getelementptr inbounds %Array_Var_, ptr %22, i64 0, i32 3
  %24 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %23, %24
  br i1 %.not.i, label %.Array_Var____sl__.exit_crit_edge, label %if.entry.i

.Array_Var____sl__.exit_crit_edge:                ; preds = %4
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Var_, ptr %22, i64 0, i32 1
  %.pre20 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Var____sl__.exit

if.entry.i:                                       ; preds = %4
  %25 = shl i64 %24, 1
  store i64 %25, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Var_, ptr %22, i64 0, i32 1
  %26 = load ptr, ptr %memberidx2.i.i, align 8
  %27 = shl i64 %24, 4
  %28 = tail call ptr @realloc(ptr %26, i64 %27)
  store ptr %28, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i13, align 4
  br label %Array_Var____sl__.exit

Array_Var____sl__.exit:                           ; preds = %.Array_Var____sl__.exit_crit_edge, %if.entry.i
  %29 = phi ptr [ %.pre20, %.Array_Var____sl__.exit_crit_edge ], [ %28, %if.entry.i ]
  %30 = phi i64 [ %23, %.Array_Var____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %31 = add i64 %30, 1
  store i64 %31, ptr %memberidx.i13, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %29, i64 %30
  store ptr %5, ptr %ptridx.i, align 8
  %memberidx5 = getelementptr inbounds %Scope, ptr %17, i64 0, i32 1
  %32 = load ptr, ptr %memberidx5, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %32, ptr %1, ptr nonnull %18)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Const, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i12 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i12, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx1.i.i = getelementptr inbounds %Program, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %8, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %9, i64 %6
  %10 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx1.i14 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %11 = load ptr, ptr %memberidx1.i14, align 8
  %12 = load i64, ptr %11, align 4
  %ptridx.i.i.i17 = getelementptr inbounds ptr, ptr %9, i64 %12
  %13 = load ptr, ptr %ptridx.i.i.i17, align 8
  %memberidx2.i.i18 = getelementptr inbounds %Module, ptr %13, i64 0, i32 7
  %14 = load ptr, ptr %memberidx2.i.i18, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %11, i64 0, i32 1
  %15 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %16, i64 %15
  %17 = load ptr, ptr %ptridx.i6.i.i, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = load i64, ptr %memberidx.i12, align 4
  %memberidx1 = getelementptr inbounds %Module, ptr %10, i64 0, i32 3
  %20 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Const_, ptr %20, i64 0, i32 2
  %21 = load i64, ptr %memberidx2, align 4
  store i64 2, ptr %18, align 4
  %memberidx1.i.i19 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i.i19, align 4
  %memberidx2.i.i20 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 2
  store i64 %21, ptr %memberidx2.i.i20, align 4
  %memberidx3 = getelementptr inbounds %Const, ptr %5, i64 0, i32 1
  store ptr %18, ptr %memberidx3, align 8
  %22 = load ptr, ptr %memberidx1, align 8
  %memberidx.i13 = getelementptr inbounds %Array_Const_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx.i13, align 4
  %memberidx1.i = getelementptr inbounds %Array_Const_, ptr %22, i64 0, i32 3
  %24 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %23, %24
  br i1 %.not.i, label %.Array_Const____sl__.exit_crit_edge, label %if.entry.i

.Array_Const____sl__.exit_crit_edge:              ; preds = %4
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Const_, ptr %22, i64 0, i32 1
  %.pre21 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Const____sl__.exit

if.entry.i:                                       ; preds = %4
  %25 = shl i64 %24, 1
  store i64 %25, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Const_, ptr %22, i64 0, i32 1
  %26 = load ptr, ptr %memberidx2.i.i, align 8
  %27 = shl i64 %24, 4
  %28 = tail call ptr @realloc(ptr %26, i64 %27)
  store ptr %28, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i13, align 4
  br label %Array_Const____sl__.exit

Array_Const____sl__.exit:                         ; preds = %.Array_Const____sl__.exit_crit_edge, %if.entry.i
  %29 = phi ptr [ %.pre21, %.Array_Const____sl__.exit_crit_edge ], [ %28, %if.entry.i ]
  %30 = phi i64 [ %23, %.Array_Const____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %31 = add i64 %30, 1
  store i64 %31, ptr %memberidx.i13, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %29, i64 %30
  store ptr %5, ptr %ptridx.i, align 8
  %memberidx5 = getelementptr inbounds %Scope, ptr %17, i64 0, i32 1
  %32 = load ptr, ptr %memberidx5, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %32, ptr %1, ptr nonnull %18)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i142, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i141, %if.entry.i142 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %6 = load i64, ptr %.tr11.i, align 4
  switch i64 %6, label %get_class_from_type.exit [
    i64 21, label %if.entry.i142
    i64 13, label %if.entry3.i
  ]

if.entry.i142:                                    ; preds = %tailrecurse.i
  %memberidx1.i141 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i143 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %7 = load ptr, ptr %memberidx6.i143, align 8
  %memberidx.i.i144 = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i.i144, align 8
  %9 = load i64, ptr %7, align 4
  %memberidx.i.i.i145 = getelementptr inbounds %Array_Module_, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i.i145, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %10, i64 %9
  %11 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i146 = getelementptr inbounds %Module, ptr %11, i64 0, i32 4
  %12 = load ptr, ptr %memberidx2.i.i146, align 8
  %memberidx3.i.i147 = getelementptr inbounds %TypeId, ptr %7, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i147, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i6.i.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i140 = phi ptr [ %15, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i140, i64 0, i32 6
  %16 = load ptr, ptr %memberidx3, align 8
  %17 = tail call ptr @malloc(i32 88)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %17, ptr noundef nonnull align 8 dereferenceable(11) @106, i64 11, i1 false)
  %18 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %18, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  store ptr %17, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %18, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i, align 4
  %19 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %18)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %16, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = srem i64 %19, %20
  %22 = load ptr, ptr %16, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %22, i64 %21
  %23 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %23, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %get_class_from_type.exit, %else.i
  %24 = phi ptr [ %34, %else.i ], [ %22, %get_class_from_type.exit ]
  %25 = phi i64 [ %35, %else.i ], [ %20, %get_class_from_type.exit ]
  %26 = phi ptr [ %38, %else.i ], [ %23, %get_class_from_type.exit ]
  %hash.0.i = phi i64 [ %37, %else.i ], [ %21, %get_class_from_type.exit ]
  %27 = load ptr, ptr %26, align 8
  %memberidx.i.i65 = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i.i65, align 4
  %29 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %28, %29
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i67 = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2.i.i67, align 8
  %31 = load ptr, ptr %memberidx.i.i, align 8
  %32 = tail call i64 @memcmp(ptr %30, ptr %31, i64 %28)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre151 = load ptr, ptr %16, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre152.pre = load ptr, ptr %16, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre152.pre, i64 %hash.0.i
  %.pre153.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre153.pre, null
  br i1 %.not29.i, label %if.entry, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %34 = phi ptr [ %.pre151, %ifend.i.i.else.i_crit_edge ], [ %24, %while.entry.i ]
  %35 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %25, %while.entry.i ]
  %36 = add i64 %hash.0.i, 1
  %37 = srem i64 %36, %35
  %ptridx7.i = getelementptr inbounds ptr, ptr %34, i64 %37
  %38 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %38, null
  br i1 %.not30.i, label %if.entry, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre153.pre, i64 0, i32 1
  %39 = load ptr, ptr %memberidx15.i, align 8
  %40 = icmp eq ptr %39, null
  br i1 %40, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend20, %ifend12, %get_class_prop_type.exit, %ifend33, %TypeChecker_error.exit125, %TypeChecker_error.exit106, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit106 ], [ null, %TypeChecker_error.exit125 ], [ %164, %ifend33 ], [ null, %get_class_prop_type.exit ], [ null, %ifend12 ], [ null, %ifend20 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_string_PropId____getitem__.exit
  %memberidx4 = getelementptr inbounds %Class, ptr %common.ret.op.i140, i64 0, i32 1
  %41 = load ptr, ptr %memberidx4, align 8
  %42 = load ptr, ptr %41, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %42, i64 0, i32 5
  %43 = load ptr, ptr %memberidx5, align 8
  %44 = tail call ptr %43(ptr nonnull %41)
  %45 = alloca ptr, align 8
  %46 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %45, ptr nonnull @157, ptr %44)
  %47 = load ptr, ptr %45, align 8
  %48 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %48, align 8
  %memberidx.i68 = getelementptr inbounds %string, ptr %48, i64 0, i32 1
  store ptr %47, ptr %memberidx.i68, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %48, i64 0, i32 2
  store i64 %46, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %48, i64 0, i32 3
  store i64 %46, ptr %memberidx2.i, align 4
  tail call void @free(ptr %44)
  %49 = load ptr, ptr %4, align 8
  %memberidx.i69 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %50 = load ptr, ptr %memberidx.i69, align 8
  %memberidx1.i70 = getelementptr inbounds %Compiler, ptr %50, i64 0, i32 6
  %51 = load ptr, ptr %memberidx1.i70, align 8
  %52 = call ptr @malloc(i32 24)
  store i64 4, ptr %52, align 4
  %memberidx1.i.i71 = getelementptr inbounds %FloError, ptr %52, i64 0, i32 2
  store ptr %49, ptr %memberidx1.i.i71, align 8
  %memberidx2.i.i72 = getelementptr inbounds %FloError, ptr %52, i64 0, i32 1
  store ptr %48, ptr %memberidx2.i.i72, align 8
  %memberidx.i.i73 = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 2
  %53 = load i64, ptr %memberidx.i.i73, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 3
  %54 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i74 = icmp slt i64 %53, %54
  br i1 %.not.i.i74, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %.pre159 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %55 = shl i64 %54, 1
  store i64 %55, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %56 = load ptr, ptr %memberidx2.i.i.i, align 8
  %57 = shl i64 %54, 4
  %58 = call ptr @realloc(ptr %56, i64 %57)
  store ptr %58, ptr %memberidx2.i.i.i, align 8
  %.pre158 = load i64, ptr %memberidx.i.i73, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %59 = phi ptr [ %.pre159, %if.entry.TypeChecker_error.exit_crit_edge ], [ %58, %if.entry.i.i ]
  %60 = phi i64 [ %53, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre158, %if.entry.i.i ]
  %61 = add i64 %60, 1
  store i64 %61, ptr %memberidx.i.i73, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %59, i64 %60
  store ptr %52, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %62 = load ptr, ptr %0, align 8
  %memberidx.i.i75 = getelementptr inbounds %PropId, ptr %39, i64 0, i32 1
  %63 = load ptr, ptr %memberidx.i.i75, align 8
  %memberidx.i.i.i76 = getelementptr inbounds %Program, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i.i.i76, align 8
  %65 = load i64, ptr %63, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %66, i64 %65
  %67 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i77 = getelementptr inbounds %Module, ptr %67, i64 0, i32 4
  %68 = load ptr, ptr %memberidx2.i.i.i77, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %63, i64 0, i32 2
  %69 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %70, i64 %69
  %71 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %72 = load i64, ptr %39, align 4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i79 = getelementptr inbounds %Class, ptr %71, i64 0, i32 5
  %74 = load ptr, ptr %memberidx1.i79, align 8
  %memberidx2.i80 = getelementptr inbounds %PropId, ptr %39, i64 0, i32 2
  %75 = load i64, ptr %memberidx2.i80, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %74, i64 0, i32 1
  %76 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %76, i64 %75
  %77 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %77, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %71, i64 0, i32 4
  %78 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %39, i64 0, i32 2
  %79 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i81 = getelementptr inbounds ptr, ptr %80, i64 %79
  %81 = load ptr, ptr %ptridx.i.i81, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %81, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i78 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx8 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i78, i64 0, i32 1
  %82 = load ptr, ptr %memberidx8, align 8
  %memberidx.i82 = getelementptr inbounds %Array_Type_, ptr %82, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i82, align 8
  %84 = load ptr, ptr %83, align 8
  %ptridx.i84 = getelementptr inbounds ptr, ptr %83, i64 1
  %85 = load ptr, ptr %ptridx.i84, align 8
  %memberidx.i85 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %86 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i86 = getelementptr inbounds %Compiler, ptr %86, i64 0, i32 6
  %87 = load ptr, ptr %memberidx1.i86, align 8
  %memberidx2.i87 = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 2
  %88 = load i64, ptr %memberidx2.i87, align 4
  %89 = icmp sgt i64 %88, 0
  br i1 %89, label %common.ret, label %ifend12

ifend12:                                          ; preds = %get_class_prop_type.exit
  %memberidx13 = getelementptr inbounds %ExpressionIndexNode, ptr %4, i64 0, i32 4
  %90 = load ptr, ptr %memberidx13, align 8
  %91 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %84, ptr %90)
  %92 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i89 = getelementptr inbounds %Compiler, ptr %92, i64 0, i32 6
  %93 = load ptr, ptr %memberidx1.i89, align 8
  %memberidx2.i90 = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 2
  %94 = load i64, ptr %memberidx2.i90, align 4
  %95 = icmp sgt i64 %94, 0
  br i1 %95, label %common.ret, label %ifend16

ifend16:                                          ; preds = %ifend12
  %memberidx17 = getelementptr inbounds %Expression, ptr %91, i64 0, i32 3
  %96 = load ptr, ptr %memberidx17, align 8
  %97 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %84, ptr %96)
  br i1 %97, label %ifend20, label %if.entry18

if.entry18:                                       ; preds = %ifend16
  %98 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %84)
  %99 = load ptr, ptr %98, align 8
  %memberidx21 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %99, i64 0, i32 5
  %100 = load ptr, ptr %memberidx21, align 8
  %101 = tail call ptr %100(ptr nonnull %98)
  %102 = load ptr, ptr %memberidx17, align 8
  %103 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %102)
  %104 = load ptr, ptr %103, align 8
  %memberidx23 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %104, i64 0, i32 5
  %105 = load ptr, ptr %memberidx23, align 8
  %106 = tail call ptr %105(ptr nonnull %103)
  %107 = alloca ptr, align 8
  %108 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %107, ptr nonnull @154, ptr %101, ptr %106)
  %109 = load ptr, ptr %107, align 8
  %110 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %110, align 8
  %memberidx.i91 = getelementptr inbounds %string, ptr %110, i64 0, i32 1
  store ptr %109, ptr %memberidx.i91, align 8
  %memberidx1.i92 = getelementptr inbounds %string, ptr %110, i64 0, i32 2
  store i64 %108, ptr %memberidx1.i92, align 4
  %memberidx2.i93 = getelementptr inbounds %string, ptr %110, i64 0, i32 3
  store i64 %108, ptr %memberidx2.i93, align 4
  tail call void @free(ptr %101)
  tail call void @free(ptr %106)
  %111 = load ptr, ptr %memberidx13, align 8
  %112 = load ptr, ptr %111, align 8
  %113 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i95 = getelementptr inbounds %Compiler, ptr %113, i64 0, i32 6
  %114 = load ptr, ptr %memberidx1.i95, align 8
  %115 = call ptr @malloc(i32 24)
  store i64 5, ptr %115, align 4
  %memberidx1.i.i96 = getelementptr inbounds %FloError, ptr %115, i64 0, i32 2
  store ptr %112, ptr %memberidx1.i.i96, align 8
  %memberidx2.i.i97 = getelementptr inbounds %FloError, ptr %115, i64 0, i32 1
  store ptr %110, ptr %memberidx2.i.i97, align 8
  %memberidx.i.i98 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 2
  %116 = load i64, ptr %memberidx.i.i98, align 4
  %memberidx1.i2.i99 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 3
  %117 = load i64, ptr %memberidx1.i2.i99, align 4
  %.not.i.i100 = icmp slt i64 %116, %117
  br i1 %.not.i.i100, label %if.entry18.TypeChecker_error.exit106_crit_edge, label %if.entry.i.i103

if.entry18.TypeChecker_error.exit106_crit_edge:   ; preds = %if.entry18
  %memberidx4.i.i104.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 1
  %.pre155 = load ptr, ptr %memberidx4.i.i104.phi.trans.insert, align 8
  br label %TypeChecker_error.exit106

if.entry.i.i103:                                  ; preds = %if.entry18
  %118 = shl i64 %117, 1
  store i64 %118, ptr %memberidx1.i2.i99, align 4
  %memberidx2.i.i.i102 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 1
  %119 = load ptr, ptr %memberidx2.i.i.i102, align 8
  %120 = shl i64 %117, 4
  %121 = call ptr @realloc(ptr %119, i64 %120)
  store ptr %121, ptr %memberidx2.i.i.i102, align 8
  %.pre154 = load i64, ptr %memberidx.i.i98, align 4
  br label %TypeChecker_error.exit106

TypeChecker_error.exit106:                        ; preds = %if.entry18.TypeChecker_error.exit106_crit_edge, %if.entry.i.i103
  %122 = phi ptr [ %.pre155, %if.entry18.TypeChecker_error.exit106_crit_edge ], [ %121, %if.entry.i.i103 ]
  %123 = phi i64 [ %116, %if.entry18.TypeChecker_error.exit106_crit_edge ], [ %.pre154, %if.entry.i.i103 ]
  %124 = add i64 %123, 1
  store i64 %124, ptr %memberidx.i.i98, align 4
  %ptridx.i.i105 = getelementptr inbounds ptr, ptr %122, i64 %123
  store ptr %115, ptr %ptridx.i.i105, align 8
  br label %common.ret

ifend20:                                          ; preds = %ifend16
  %memberidx26 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %125 = load ptr, ptr %memberidx26, align 8
  %126 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %85, ptr %125)
  %127 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i108 = getelementptr inbounds %Compiler, ptr %127, i64 0, i32 6
  %128 = load ptr, ptr %memberidx1.i108, align 8
  %memberidx2.i109 = getelementptr inbounds %Array_FloError_, ptr %128, i64 0, i32 2
  %129 = load i64, ptr %memberidx2.i109, align 4
  %130 = icmp sgt i64 %129, 0
  br i1 %130, label %common.ret, label %ifend29

ifend29:                                          ; preds = %ifend20
  %131 = load ptr, ptr %memberidx17, align 8
  %132 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %84, ptr %131)
  br i1 %132, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %ifend29
  %133 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %85)
  %134 = load ptr, ptr %133, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %134, i64 0, i32 5
  %135 = load ptr, ptr %memberidx34, align 8
  %136 = tail call ptr %135(ptr nonnull %133)
  %memberidx35 = getelementptr inbounds %Expression, ptr %126, i64 0, i32 3
  %137 = load ptr, ptr %memberidx35, align 8
  %138 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %137)
  %139 = load ptr, ptr %138, align 8
  %memberidx36 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %139, i64 0, i32 5
  %140 = load ptr, ptr %memberidx36, align 8
  %141 = tail call ptr %140(ptr nonnull %138)
  %142 = alloca ptr, align 8
  %143 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %142, ptr nonnull @154, ptr %136, ptr %141)
  %144 = load ptr, ptr %142, align 8
  %145 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %145, align 8
  %memberidx.i110 = getelementptr inbounds %string, ptr %145, i64 0, i32 1
  store ptr %144, ptr %memberidx.i110, align 8
  %memberidx1.i111 = getelementptr inbounds %string, ptr %145, i64 0, i32 2
  store i64 %143, ptr %memberidx1.i111, align 4
  %memberidx2.i112 = getelementptr inbounds %string, ptr %145, i64 0, i32 3
  store i64 %143, ptr %memberidx2.i112, align 4
  tail call void @free(ptr %136)
  tail call void @free(ptr %141)
  %146 = load ptr, ptr %memberidx26, align 8
  %147 = load ptr, ptr %146, align 8
  %148 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i114 = getelementptr inbounds %Compiler, ptr %148, i64 0, i32 6
  %149 = load ptr, ptr %memberidx1.i114, align 8
  %150 = call ptr @malloc(i32 24)
  store i64 5, ptr %150, align 4
  %memberidx1.i.i115 = getelementptr inbounds %FloError, ptr %150, i64 0, i32 2
  store ptr %147, ptr %memberidx1.i.i115, align 8
  %memberidx2.i.i116 = getelementptr inbounds %FloError, ptr %150, i64 0, i32 1
  store ptr %145, ptr %memberidx2.i.i116, align 8
  %memberidx.i.i117 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 2
  %151 = load i64, ptr %memberidx.i.i117, align 4
  %memberidx1.i2.i118 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 3
  %152 = load i64, ptr %memberidx1.i2.i118, align 4
  %.not.i.i119 = icmp slt i64 %151, %152
  br i1 %.not.i.i119, label %if.entry31.TypeChecker_error.exit125_crit_edge, label %if.entry.i.i122

if.entry31.TypeChecker_error.exit125_crit_edge:   ; preds = %if.entry31
  %memberidx4.i.i123.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 1
  %.pre157 = load ptr, ptr %memberidx4.i.i123.phi.trans.insert, align 8
  br label %TypeChecker_error.exit125

if.entry.i.i122:                                  ; preds = %if.entry31
  %153 = shl i64 %152, 1
  store i64 %153, ptr %memberidx1.i2.i118, align 4
  %memberidx2.i.i.i121 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 1
  %154 = load ptr, ptr %memberidx2.i.i.i121, align 8
  %155 = shl i64 %152, 4
  %156 = call ptr @realloc(ptr %154, i64 %155)
  store ptr %156, ptr %memberidx2.i.i.i121, align 8
  %.pre156 = load i64, ptr %memberidx.i.i117, align 4
  br label %TypeChecker_error.exit125

TypeChecker_error.exit125:                        ; preds = %if.entry31.TypeChecker_error.exit125_crit_edge, %if.entry.i.i122
  %157 = phi ptr [ %.pre157, %if.entry31.TypeChecker_error.exit125_crit_edge ], [ %156, %if.entry.i.i122 ]
  %158 = phi i64 [ %151, %if.entry31.TypeChecker_error.exit125_crit_edge ], [ %.pre156, %if.entry.i.i122 ]
  %159 = add i64 %158, 1
  store i64 %159, ptr %memberidx.i.i117, align 4
  %ptridx.i.i124 = getelementptr inbounds ptr, ptr %157, i64 %158
  store ptr %150, ptr %ptridx.i.i124, align 8
  br label %common.ret

ifend33:                                          ; preds = %ifend29
  %160 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %160, align 4
  %memberidx.i.i126 = getelementptr inbounds %Expression, ptr %160, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i126, align 4
  %memberidx1.i.i127 = getelementptr inbounds %Expression, ptr %160, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i127, align 1
  %memberidx.i128 = getelementptr inbounds %MemberExpression, ptr %160, i64 0, i32 4
  store ptr %1, ptr %memberidx.i128, align 8
  %memberidx1.i129 = getelementptr inbounds %MemberExpression, ptr %160, i64 0, i32 5
  store ptr %39, ptr %memberidx1.i129, align 8
  %memberidx2.i130 = getelementptr inbounds %Expression, ptr %160, i64 0, i32 3
  store ptr %common.ret.op.i78, ptr %memberidx2.i130, align 8
  %161 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %161, align 8
  %memberidx.i131 = getelementptr inbounds %Array_Expression_, ptr %161, i64 0, i32 2
  store i64 0, ptr %memberidx.i131, align 4
  %memberidx1.i132 = getelementptr inbounds %Array_Expression_, ptr %161, i64 0, i32 3
  store i64 16, ptr %memberidx1.i132, align 4
  %memberidx2.i133 = getelementptr inbounds %Array_Expression_, ptr %161, i64 0, i32 1
  %162 = tail call ptr @malloc(i32 128)
  store ptr %162, ptr %memberidx2.i133, align 8
  store ptr %91, ptr %162, align 8
  %163 = getelementptr inbounds ptr, ptr %162, i64 1
  store ptr %126, ptr %163, align 8
  store i64 2, ptr %memberidx.i131, align 4
  %164 = tail call ptr @malloc(i32 41)
  %memberidx41 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i78, i64 0, i32 2
  %165 = load ptr, ptr %memberidx41, align 8
  store i64 8, ptr %164, align 4
  %memberidx.i.i134 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i134, align 4
  %memberidx1.i.i135 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i135, align 1
  %memberidx.i136 = getelementptr inbounds %CallExpression, ptr %164, i64 0, i32 4
  store ptr %160, ptr %memberidx.i136, align 8
  %memberidx1.i137 = getelementptr inbounds %CallExpression, ptr %164, i64 0, i32 5
  store ptr %161, ptr %memberidx1.i137, align 8
  %memberidx2.i138 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 3
  store ptr %165, ptr %memberidx2.i138, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = add i64 %4, -19
  %6 = icmp ult i64 %5, 12
  %7 = icmp eq i64 %4, 19
  %memberidx1 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ExpressionNode, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2, align 4
  %10 = icmp eq i64 %9, 13
  %11 = and i1 %7, %10
  br i1 %11, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %12 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %12, align 4
  %13 = load ptr, ptr %memberidx1, align 8
  %memberidx4 = getelementptr inbounds %ExpressionIndexNode, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx4, align 8
  %15 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %12, ptr %14)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %16 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %16, i64 0, i32 6
  %17 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx2.i, align 4
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %common.ret, label %ifend7

ifend:                                            ; preds = %is_object.exit.ifend_crit_edge, %3
  %20 = phi ptr [ %.pre, %is_object.exit.ifend_crit_edge ], [ %8, %3 ]
  %21 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %20)
  %memberidx.i165 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %22 = load ptr, ptr %memberidx.i165, align 8
  %memberidx1.i166 = getelementptr inbounds %Compiler, ptr %22, i64 0, i32 6
  %23 = load ptr, ptr %memberidx1.i166, align 8
  %memberidx2.i167 = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 2
  %24 = load i64, ptr %memberidx2.i167, align 4
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %common.ret, label %ifend15

common.ret:                                       ; preds = %ifend19, %ifend, %if.entry, %TypeChecker_error.exit, %if.entry105, %if.entry97, %if.entry91, %if.entry87, %ifend80, %ifend69, %ifend61, %if.entry34, %if.entry26, %if.entry17, %if.entry9
  %common.ret.op = phi ptr [ %33, %if.entry9 ], [ %45, %if.entry17 ], [ %61, %if.entry26 ], [ %65, %if.entry34 ], [ %99, %ifend61 ], [ %124, %ifend69 ], [ %138, %ifend80 ], [ %140, %if.entry87 ], [ %143, %if.entry91 ], [ %150, %if.entry97 ], [ %159, %if.entry105 ], [ null, %TypeChecker_error.exit ], [ null, %if.entry ], [ null, %ifend ], [ null, %ifend19 ]
  ret ptr %common.ret.op

ifend7:                                           ; preds = %if.entry
  %memberidx8 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  %26 = load ptr, ptr %memberidx8, align 8
  %27 = load i64, ptr %26, align 4
  %28 = icmp eq i64 %27, 21
  br i1 %28, label %if.entry.i260, label %is_object.exit

if.entry.i260:                                    ; preds = %ifend7, %if.entry.i260
  %.tr5.i = phi ptr [ %29, %if.entry.i260 ], [ %26, %ifend7 ]
  %memberidx1.i259 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %29 = load ptr, ptr %memberidx1.i259, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 21
  br i1 %31, label %if.entry.i260, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i260, %ifend7
  %.lcssa.i = phi i64 [ %27, %ifend7 ], [ %30, %if.entry.i260 ]
  %32 = icmp eq i64 %.lcssa.i, 13
  br i1 %32, label %if.entry9, label %is_object.exit.ifend_crit_edge

is_object.exit.ifend_crit_edge:                   ; preds = %is_object.exit
  %.pre = load ptr, ptr %memberidx1, align 8
  br label %ifend

if.entry9:                                        ; preds = %is_object.exit
  %33 = tail call fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %15, ptr %2)
  br label %common.ret

ifend15:                                          ; preds = %ifend
  %memberidx16 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  %34 = load ptr, ptr %memberidx16, align 8
  %35 = load i64, ptr %34, align 4
  %36 = icmp eq i64 %35, 21
  br i1 %36, label %if.entry.i263, label %is_object.exit265

if.entry.i263:                                    ; preds = %ifend15, %if.entry.i263
  %.tr5.i261 = phi ptr [ %37, %if.entry.i263 ], [ %34, %ifend15 ]
  %memberidx1.i262 = getelementptr inbounds %GenericType, ptr %.tr5.i261, i64 0, i32 3
  %37 = load ptr, ptr %memberidx1.i262, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 21
  br i1 %39, label %if.entry.i263, label %is_object.exit265

is_object.exit265:                                ; preds = %if.entry.i263, %ifend15
  %.lcssa.i264 = phi i64 [ %35, %ifend15 ], [ %38, %if.entry.i263 ]
  %40 = icmp eq i64 %.lcssa.i264, 13
  %41 = xor i1 %6, true
  %42 = and i1 %40, %41
  %43 = icmp ne i64 %4, 18
  %44 = and i1 %43, %42
  br i1 %44, label %if.entry17, label %ifend19

if.entry17:                                       ; preds = %is_object.exit265
  %45 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %21, ptr %2, ptr null)
  br label %common.ret

ifend19:                                          ; preds = %is_object.exit265
  %memberidx21 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %46 = load ptr, ptr %memberidx21, align 8
  %47 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %34, ptr %46)
  %48 = load ptr, ptr %memberidx.i165, align 8
  %memberidx1.i169 = getelementptr inbounds %Compiler, ptr %48, i64 0, i32 6
  %49 = load ptr, ptr %memberidx1.i169, align 8
  %memberidx2.i170 = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i170, align 4
  %51 = icmp sgt i64 %50, 0
  br i1 %51, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend19
  %memberidx25 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 3
  %52 = load ptr, ptr %memberidx25, align 8
  %53 = load i64, ptr %52, align 4
  %54 = icmp eq i64 %53, 21
  br i1 %54, label %if.entry.i268, label %is_object.exit270

if.entry.i268:                                    ; preds = %ifend24, %if.entry.i268
  %.tr5.i266 = phi ptr [ %55, %if.entry.i268 ], [ %52, %ifend24 ]
  %memberidx1.i267 = getelementptr inbounds %GenericType, ptr %.tr5.i266, i64 0, i32 3
  %55 = load ptr, ptr %memberidx1.i267, align 8
  %56 = load i64, ptr %55, align 4
  %57 = icmp eq i64 %56, 21
  br i1 %57, label %if.entry.i268, label %is_object.exit270

is_object.exit270:                                ; preds = %if.entry.i268, %ifend24
  %.lcssa.i269 = phi i64 [ %53, %ifend24 ], [ %56, %if.entry.i268 ]
  %58 = icmp eq i64 %.lcssa.i269, 13
  %59 = icmp eq i64 %4, 18
  %60 = and i1 %59, %58
  br i1 %60, label %if.entry26, label %ifend31

if.entry26:                                       ; preds = %is_object.exit270
  %61 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %47, ptr %2, ptr %21)
  br label %common.ret

ifend31:                                          ; preds = %is_object.exit270
  %memberidx32 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %62 = load i1, ptr %memberidx32, align 1
  %memberidx33 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 1
  %63 = load i1, ptr %memberidx33, align 1
  %64 = and i1 %62, %63
  br i1 %6, label %if.entry34, label %ifend36

if.entry34:                                       ; preds = %ifend31
  %65 = tail call fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr nonnull %21, ptr nonnull %47, ptr %2)
  br label %common.ret

ifend36:                                          ; preds = %ifend31
  %66 = load ptr, ptr %memberidx16, align 8
  %67 = load i64, ptr %66, align 4
  %68 = icmp eq i64 %67, 22
  %69 = icmp ne i64 %53, 22
  %70 = and i1 %69, %68
  br i1 %70, label %if.entry41, label %ifend43

if.entry41:                                       ; preds = %ifend36
  store ptr %52, ptr %memberidx16, align 8
  %.pre275 = load i64, ptr %52, align 4
  %.pre276 = load ptr, ptr %memberidx25, align 8
  %.pre277 = load i64, ptr %.pre276, align 4
  br label %ifend43

ifend43:                                          ; preds = %ifend36, %if.entry41
  %71 = phi i64 [ %53, %ifend36 ], [ %.pre277, %if.entry41 ]
  %72 = phi ptr [ %52, %ifend36 ], [ %.pre276, %if.entry41 ]
  %73 = phi i64 [ %67, %ifend36 ], [ %.pre275, %if.entry41 ]
  %74 = phi ptr [ %66, %ifend36 ], [ %52, %if.entry41 ]
  %75 = add i64 %73, -1
  %76 = icmp ult i64 %75, 11
  %77 = add i64 %71, -1
  %78 = icmp ult i64 %77, 11
  %79 = and i1 %76, %78
  br i1 %79, label %if.entry48, label %else49

if.entry48:                                       ; preds = %ifend43
  %80 = icmp eq i64 %4, 6
  br i1 %80, label %if.entry51, label %ifend53

else49:                                           ; preds = %ifend43
  %81 = or i64 %71, %73
  %82 = icmp eq i64 %81, 0
  %83 = add i64 %4, -15
  %84 = icmp ult i64 %83, 2
  %or.cond = select i1 %82, i1 %84, i1 false
  br i1 %or.cond, label %if.entry87, label %ifend50

ifend50:                                          ; preds = %else49, %ifend65
  %85 = add i64 %4, -7
  %86 = icmp ult i64 %85, 6
  br i1 %86, label %if.entry91, label %ifend93

if.entry51:                                       ; preds = %if.entry48
  %87 = icmp ult i64 %75, 7
  br i1 %87, label %if.entry55, label %ifend57

ifend53:                                          ; preds = %if.entry48
  %88 = add i64 %4, -1
  %89 = icmp ult i64 %88, 10
  br i1 %89, label %if.entry63, label %ifend65

if.entry55:                                       ; preds = %if.entry51
  %90 = tail call ptr @malloc(i32 8)
  store i64 11, ptr %90, align 4
  %91 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %91, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %91, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %91, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %TypeCastExpression, ptr %91, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %91, i64 0, i32 3
  store ptr %90, ptr %memberidx1.i.i, align 8
  %92 = load i1, ptr %memberidx32, align 1
  store i1 %92, ptr %memberidx1.i.i.i, align 1
  %.pre282 = load ptr, ptr %memberidx25, align 8
  %.pre283 = load i64, ptr %.pre282, align 4
  %.pre284 = add i64 %.pre283, -1
  br label %ifend57

ifend57:                                          ; preds = %if.entry51, %if.entry55
  %.pre-phi = phi i64 [ %77, %if.entry51 ], [ %.pre284, %if.entry55 ]
  %93 = phi ptr [ %21, %if.entry51 ], [ %91, %if.entry55 ]
  %94 = icmp ult i64 %.pre-phi, 7
  br i1 %94, label %if.entry59, label %ifend61

if.entry59:                                       ; preds = %ifend57
  %95 = tail call ptr @malloc(i32 8)
  store i64 11, ptr %95, align 4
  %96 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %96, align 4
  %memberidx.i.i.i174 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i174, align 4
  %memberidx1.i.i.i175 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 1
  %memberidx.i.i176 = getelementptr inbounds %TypeCastExpression, ptr %96, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i176, align 8
  %memberidx1.i.i177 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 3
  store ptr %95, ptr %memberidx1.i.i177, align 8
  %97 = load i1, ptr %memberidx33, align 1
  store i1 %97, ptr %memberidx1.i.i.i175, align 1
  br label %ifend61

ifend61:                                          ; preds = %ifend57, %if.entry59
  %98 = phi ptr [ %47, %ifend57 ], [ %96, %if.entry59 ]
  %99 = tail call ptr @malloc(i32 49)
  %memberidx62 = getelementptr inbounds %Expression, ptr %93, i64 0, i32 3
  %100 = load ptr, ptr %memberidx62, align 8
  store i64 8, ptr %99, align 4
  %memberidx.i.i180 = getelementptr inbounds %Expression, ptr %99, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i180, align 4
  %memberidx1.i.i181 = getelementptr inbounds %Expression, ptr %99, i64 0, i32 1
  %memberidx.i182 = getelementptr inbounds %BinaryExpression, ptr %99, i64 0, i32 4
  store ptr %93, ptr %memberidx.i182, align 8
  %memberidx1.i183 = getelementptr inbounds %BinaryExpression, ptr %99, i64 0, i32 5
  store i64 6, ptr %memberidx1.i183, align 4
  %memberidx2.i184 = getelementptr inbounds %BinaryExpression, ptr %99, i64 0, i32 6
  store ptr %98, ptr %memberidx2.i184, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %99, i64 0, i32 3
  store ptr %100, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i181, align 1
  br label %common.ret

if.entry63:                                       ; preds = %ifend53
  %.not.i = icmp eq i64 %73, %71
  br i1 %.not.i, label %check_cast_lower_bits.exit, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry63
  %101 = and i64 %73, -4
  %102 = icmp eq i64 %101, 8
  %103 = icmp ult i64 %77, 7
  %104 = and i1 %102, %103
  br i1 %104, label %if.entry5.i, label %else6.i

if.entry5.i:                                      ; preds = %if.entry.i
  %105 = tail call ptr @malloc(i32 33)
  br label %check_cast_lower_bits.exit.sink.split

else6.i:                                          ; preds = %if.entry.i
  %106 = icmp ult i64 %75, 7
  %107 = and i64 %71, -4
  %108 = icmp eq i64 %107, 8
  %109 = and i1 %106, %108
  br i1 %109, label %if.entry10.i, label %else11.i

if.entry10.i:                                     ; preds = %else6.i
  %110 = tail call ptr @malloc(i32 33)
  br label %check_cast_lower_bits.exit.sink.split

else11.i:                                         ; preds = %else6.i
  %111 = icmp ugt i64 %73, %71
  %ternary.i.i = select i1 %111, ptr %74, ptr %72
  %112 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %112, align 4
  %memberidx.i.i.i37.i = getelementptr inbounds %Expression, ptr %112, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i37.i, align 4
  %memberidx1.i.i.i38.i = getelementptr inbounds %Expression, ptr %112, i64 0, i32 1
  %memberidx.i.i39.i = getelementptr inbounds %TypeCastExpression, ptr %112, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i39.i, align 8
  %memberidx1.i.i40.i = getelementptr inbounds %Expression, ptr %112, i64 0, i32 3
  store ptr %ternary.i.i, ptr %memberidx1.i.i40.i, align 8
  %113 = load i1, ptr %memberidx32, align 1
  store i1 %113, ptr %memberidx1.i.i.i38.i, align 1
  %114 = tail call ptr @malloc(i32 33)
  br label %check_cast_lower_bits.exit.sink.split

check_cast_lower_bits.exit.sink.split:            ; preds = %else11.i, %if.entry10.i, %if.entry5.i
  %.sink293 = phi ptr [ %105, %if.entry5.i ], [ %110, %if.entry10.i ], [ %114, %else11.i ]
  %.sink289 = phi ptr [ %47, %if.entry5.i ], [ %21, %if.entry10.i ], [ %47, %else11.i ]
  %.sink = phi ptr [ %74, %if.entry5.i ], [ %72, %if.entry10.i ], [ %ternary.i.i, %else11.i ]
  %memberidx33.sink = phi ptr [ %memberidx33, %if.entry5.i ], [ %memberidx32, %if.entry10.i ], [ %memberidx33, %else11.i ]
  %.ph = phi ptr [ %105, %if.entry5.i ], [ %47, %if.entry10.i ], [ %114, %else11.i ]
  %.ph287 = phi ptr [ %21, %if.entry5.i ], [ %110, %if.entry10.i ], [ %112, %else11.i ]
  store i64 8, ptr %.sink293, align 4
  %memberidx.i.i.i43.i = getelementptr inbounds %Expression, ptr %.sink293, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i43.i, align 4
  %memberidx1.i.i.i44.i = getelementptr inbounds %Expression, ptr %.sink293, i64 0, i32 1
  %memberidx.i.i45.i = getelementptr inbounds %TypeCastExpression, ptr %.sink293, i64 0, i32 4
  store ptr %.sink289, ptr %memberidx.i.i45.i, align 8
  %memberidx1.i.i46.i = getelementptr inbounds %Expression, ptr %.sink293, i64 0, i32 3
  store ptr %.sink, ptr %memberidx1.i.i46.i, align 8
  %115 = load i1, ptr %memberidx33.sink, align 1
  store i1 %115, ptr %memberidx1.i.i.i44.i, align 1
  br label %check_cast_lower_bits.exit

check_cast_lower_bits.exit:                       ; preds = %check_cast_lower_bits.exit.sink.split, %if.entry63
  %116 = phi ptr [ %47, %if.entry63 ], [ %.ph, %check_cast_lower_bits.exit.sink.split ]
  %117 = phi ptr [ %21, %if.entry63 ], [ %.ph287, %check_cast_lower_bits.exit.sink.split ]
  %memberidx66 = getelementptr inbounds %Expression, ptr %117, i64 0, i32 3
  %118 = load ptr, ptr %memberidx66, align 8
  %119 = icmp ugt i64 %4, 6
  br i1 %119, label %if.entry67, label %ifend69

ifend65:                                          ; preds = %ifend53
  %120 = add i64 %4, -13
  %121 = icmp ult i64 %120, 5
  br i1 %121, label %if.entry70, label %ifend50

if.entry67:                                       ; preds = %check_cast_lower_bits.exit
  %122 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %122, align 4
  br label %ifend69

ifend69:                                          ; preds = %check_cast_lower_bits.exit, %if.entry67
  %123 = phi ptr [ %118, %check_cast_lower_bits.exit ], [ %122, %if.entry67 ]
  %124 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %124, align 4
  %memberidx.i.i189 = getelementptr inbounds %Expression, ptr %124, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i189, align 4
  %memberidx1.i.i190 = getelementptr inbounds %Expression, ptr %124, i64 0, i32 1
  %memberidx.i191 = getelementptr inbounds %BinaryExpression, ptr %124, i64 0, i32 4
  store ptr %117, ptr %memberidx.i191, align 8
  %memberidx1.i192 = getelementptr inbounds %BinaryExpression, ptr %124, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i192, align 4
  %memberidx2.i193 = getelementptr inbounds %BinaryExpression, ptr %124, i64 0, i32 6
  store ptr %116, ptr %memberidx2.i193, align 8
  %memberidx3.i194 = getelementptr inbounds %Expression, ptr %124, i64 0, i32 3
  store ptr %123, ptr %memberidx3.i194, align 8
  store i1 %64, ptr %memberidx1.i.i190, align 1
  br label %common.ret

if.entry70:                                       ; preds = %ifend65
  %125 = and i64 %73, -4
  %126 = icmp eq i64 %125, 8
  br i1 %126, label %if.entry74, label %ifend76

if.entry74:                                       ; preds = %if.entry70
  %127 = tail call ptr @malloc(i32 8)
  store i64 7, ptr %127, align 4
  %128 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %128, align 4
  %memberidx.i.i.i196 = getelementptr inbounds %Expression, ptr %128, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i196, align 4
  %memberidx1.i.i.i197 = getelementptr inbounds %Expression, ptr %128, i64 0, i32 1
  %memberidx.i.i198 = getelementptr inbounds %TypeCastExpression, ptr %128, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i198, align 8
  %memberidx1.i.i199 = getelementptr inbounds %Expression, ptr %128, i64 0, i32 3
  store ptr %127, ptr %memberidx1.i.i199, align 8
  %129 = load i1, ptr %memberidx32, align 1
  store i1 %129, ptr %memberidx1.i.i.i197, align 1
  %.pre280 = load ptr, ptr %memberidx25, align 8
  %.pre281 = load i64, ptr %.pre280, align 4
  br label %ifend76

ifend76:                                          ; preds = %if.entry70, %if.entry74
  %130 = phi ptr [ %21, %if.entry70 ], [ %128, %if.entry74 ]
  %131 = phi i64 [ %71, %if.entry70 ], [ %.pre281, %if.entry74 ]
  %132 = and i64 %131, -4
  %133 = icmp eq i64 %132, 8
  br i1 %133, label %if.entry78, label %ifend80

if.entry78:                                       ; preds = %ifend76
  %134 = tail call ptr @malloc(i32 8)
  store i64 7, ptr %134, align 4
  %135 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %135, align 4
  %memberidx.i.i.i202 = getelementptr inbounds %Expression, ptr %135, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i202, align 4
  %memberidx1.i.i.i203 = getelementptr inbounds %Expression, ptr %135, i64 0, i32 1
  %memberidx.i.i204 = getelementptr inbounds %TypeCastExpression, ptr %135, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i204, align 8
  %memberidx1.i.i205 = getelementptr inbounds %Expression, ptr %135, i64 0, i32 3
  store ptr %134, ptr %memberidx1.i.i205, align 8
  %136 = load i1, ptr %memberidx33, align 1
  store i1 %136, ptr %memberidx1.i.i.i203, align 1
  br label %ifend80

ifend80:                                          ; preds = %ifend76, %if.entry78
  %137 = phi ptr [ %47, %ifend76 ], [ %135, %if.entry78 ]
  %138 = tail call ptr @malloc(i32 49)
  %memberidx81 = getelementptr inbounds %Expression, ptr %130, i64 0, i32 3
  %139 = load ptr, ptr %memberidx81, align 8
  store i64 8, ptr %138, align 4
  %memberidx.i.i208 = getelementptr inbounds %Expression, ptr %138, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i208, align 4
  %memberidx1.i.i209 = getelementptr inbounds %Expression, ptr %138, i64 0, i32 1
  %memberidx.i210 = getelementptr inbounds %BinaryExpression, ptr %138, i64 0, i32 4
  store ptr %130, ptr %memberidx.i210, align 8
  %memberidx1.i211 = getelementptr inbounds %BinaryExpression, ptr %138, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i211, align 4
  %memberidx2.i212 = getelementptr inbounds %BinaryExpression, ptr %138, i64 0, i32 6
  store ptr %137, ptr %memberidx2.i212, align 8
  %memberidx3.i213 = getelementptr inbounds %Expression, ptr %138, i64 0, i32 3
  store ptr %139, ptr %memberidx3.i213, align 8
  store i1 %64, ptr %memberidx1.i.i209, align 1
  br label %common.ret

if.entry87:                                       ; preds = %else49
  %140 = tail call ptr @malloc(i32 49)
  %141 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %140, align 4
  %memberidx.i.i215 = getelementptr inbounds %Expression, ptr %140, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i215, align 4
  %memberidx1.i.i216 = getelementptr inbounds %Expression, ptr %140, i64 0, i32 1
  %memberidx.i217 = getelementptr inbounds %BinaryExpression, ptr %140, i64 0, i32 4
  store ptr %21, ptr %memberidx.i217, align 8
  %memberidx1.i218 = getelementptr inbounds %BinaryExpression, ptr %140, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i218, align 4
  %memberidx2.i219 = getelementptr inbounds %BinaryExpression, ptr %140, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i219, align 8
  %memberidx3.i220 = getelementptr inbounds %Expression, ptr %140, i64 0, i32 3
  store ptr %141, ptr %memberidx3.i220, align 8
  store i1 %64, ptr %memberidx1.i.i216, align 1
  br label %common.ret

if.entry91:                                       ; preds = %ifend50
  %142 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %142, align 4
  %143 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %143, align 4
  %memberidx.i.i222 = getelementptr inbounds %Expression, ptr %143, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i222, align 4
  %memberidx1.i.i223 = getelementptr inbounds %Expression, ptr %143, i64 0, i32 1
  %memberidx.i224 = getelementptr inbounds %BinaryExpression, ptr %143, i64 0, i32 4
  store ptr %21, ptr %memberidx.i224, align 8
  %memberidx1.i225 = getelementptr inbounds %BinaryExpression, ptr %143, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i225, align 4
  %memberidx2.i226 = getelementptr inbounds %BinaryExpression, ptr %143, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i226, align 8
  %memberidx3.i227 = getelementptr inbounds %Expression, ptr %143, i64 0, i32 3
  store ptr %142, ptr %memberidx3.i227, align 8
  store i1 %64, ptr %memberidx1.i.i223, align 1
  br label %common.ret

ifend93:                                          ; preds = %ifend50
  %144 = add i64 %4, -1
  %145 = icmp ult i64 %144, 2
  %146 = icmp eq i64 %73, 15
  %147 = and i1 %145, %146
  %148 = icmp eq i64 %71, 7
  %149 = and i1 %147, %148
  br i1 %149, label %if.entry97, label %ifend99

if.entry97:                                       ; preds = %ifend93
  %150 = tail call ptr @malloc(i32 49)
  %151 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %150, align 4
  %memberidx.i.i229 = getelementptr inbounds %Expression, ptr %150, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i229, align 4
  %memberidx1.i.i230 = getelementptr inbounds %Expression, ptr %150, i64 0, i32 1
  %memberidx.i231 = getelementptr inbounds %BinaryExpression, ptr %150, i64 0, i32 4
  store ptr %21, ptr %memberidx.i231, align 8
  %memberidx1.i232 = getelementptr inbounds %BinaryExpression, ptr %150, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i232, align 4
  %memberidx2.i233 = getelementptr inbounds %BinaryExpression, ptr %150, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i233, align 8
  %memberidx3.i234 = getelementptr inbounds %Expression, ptr %150, i64 0, i32 3
  store ptr %151, ptr %memberidx3.i234, align 8
  store i1 false, ptr %memberidx1.i.i230, align 1
  br label %common.ret

ifend99:                                          ; preds = %ifend93
  %152 = icmp eq i64 %4, 31
  %153 = icmp eq i64 %73, 7
  %154 = and i1 %152, %153
  %155 = and i1 %154, %148
  br i1 %155, label %if.entry105, label %ifend107

if.entry105:                                      ; preds = %ifend99
  %156 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %156, ptr noundef nonnull align 8 dereferenceable(5) @158, i64 5, i1 false)
  %157 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %157, align 8
  %memberidx.i.i236 = getelementptr inbounds %string, ptr %157, i64 0, i32 1
  store ptr %156, ptr %memberidx.i.i236, align 8
  %memberidx1.i.i237 = getelementptr inbounds %string, ptr %157, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i237, align 4
  %memberidx2.i.i238 = getelementptr inbounds %string, ptr %157, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i238, align 4
  %158 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %157)
  %159 = tail call ptr @malloc(i32 42)
  %160 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %160, align 8
  %memberidx.i239 = getelementptr inbounds %Array_Expression_, ptr %160, i64 0, i32 2
  store i64 0, ptr %memberidx.i239, align 4
  %memberidx1.i240 = getelementptr inbounds %Array_Expression_, ptr %160, i64 0, i32 3
  store i64 16, ptr %memberidx1.i240, align 4
  %memberidx2.i241 = getelementptr inbounds %Array_Expression_, ptr %160, i64 0, i32 1
  %161 = tail call ptr @malloc(i32 128)
  store ptr %161, ptr %memberidx2.i241, align 8
  store ptr %21, ptr %161, align 8
  %162 = getelementptr inbounds ptr, ptr %161, i64 1
  store ptr %47, ptr %162, align 8
  store i64 2, ptr %memberidx.i239, align 4
  store i64 8, ptr %159, align 4
  %memberidx.i.i242 = getelementptr inbounds %Expression, ptr %159, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i242, align 4
  %memberidx1.i.i243 = getelementptr inbounds %Expression, ptr %159, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i243, align 1
  %memberidx.i244 = getelementptr inbounds %NewExpression, ptr %159, i64 0, i32 6
  store ptr %158, ptr %memberidx.i244, align 8
  %memberidx1.i245 = getelementptr inbounds %NewExpression, ptr %159, i64 0, i32 5
  store i1 true, ptr %memberidx1.i245, align 1
  %memberidx2.i246 = getelementptr inbounds %NewExpression, ptr %159, i64 0, i32 4
  store ptr %160, ptr %memberidx2.i246, align 8
  %memberidx3.i247 = getelementptr inbounds %Expression, ptr %159, i64 0, i32 3
  store ptr %158, ptr %memberidx3.i247, align 8
  br label %common.ret

ifend107:                                         ; preds = %ifend99
  %163 = tail call fastcc ptr @dump_bin_op(i64 %4)
  %164 = load ptr, ptr %163, align 8
  %memberidx110 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %164, i64 0, i32 5
  %165 = load ptr, ptr %memberidx110, align 8
  %166 = tail call ptr %165(ptr nonnull %163)
  %167 = load ptr, ptr %memberidx16, align 8
  %168 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %167)
  %169 = load ptr, ptr %168, align 8
  %memberidx112 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %169, i64 0, i32 5
  %170 = load ptr, ptr %memberidx112, align 8
  %171 = tail call ptr %170(ptr nonnull %168)
  %172 = load ptr, ptr %memberidx25, align 8
  %173 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %172)
  %174 = load ptr, ptr %173, align 8
  %memberidx114 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %174, i64 0, i32 5
  %175 = load ptr, ptr %memberidx114, align 8
  %176 = tail call ptr %175(ptr nonnull %173)
  %177 = alloca ptr, align 8
  %178 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %177, ptr nonnull @159, ptr %166, ptr %171, ptr %176)
  %179 = load ptr, ptr %177, align 8
  %180 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %180, align 8
  %memberidx.i248 = getelementptr inbounds %string, ptr %180, i64 0, i32 1
  store ptr %179, ptr %memberidx.i248, align 8
  %memberidx1.i249 = getelementptr inbounds %string, ptr %180, i64 0, i32 2
  store i64 %178, ptr %memberidx1.i249, align 4
  %memberidx2.i250 = getelementptr inbounds %string, ptr %180, i64 0, i32 3
  store i64 %178, ptr %memberidx2.i250, align 4
  tail call void @free(ptr %166)
  tail call void @free(ptr %171)
  tail call void @free(ptr %176)
  %181 = load ptr, ptr %2, align 8
  %182 = load ptr, ptr %memberidx.i165, align 8
  %memberidx1.i252 = getelementptr inbounds %Compiler, ptr %182, i64 0, i32 6
  %183 = load ptr, ptr %memberidx1.i252, align 8
  %184 = call ptr @malloc(i32 24)
  store i64 5, ptr %184, align 4
  %memberidx1.i.i253 = getelementptr inbounds %FloError, ptr %184, i64 0, i32 2
  store ptr %181, ptr %memberidx1.i.i253, align 8
  %memberidx2.i.i254 = getelementptr inbounds %FloError, ptr %184, i64 0, i32 1
  store ptr %180, ptr %memberidx2.i.i254, align 8
  %memberidx.i.i255 = getelementptr inbounds %Array_FloError_, ptr %183, i64 0, i32 2
  %185 = load i64, ptr %memberidx.i.i255, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %183, i64 0, i32 3
  %186 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %185, %186
  br i1 %.not.i.i, label %ifend107.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

ifend107.TypeChecker_error.exit_crit_edge:        ; preds = %ifend107
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %183, i64 0, i32 1
  %.pre279 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %ifend107
  %187 = shl i64 %186, 1
  store i64 %187, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i257 = getelementptr inbounds %Array_FloError_, ptr %183, i64 0, i32 1
  %188 = load ptr, ptr %memberidx2.i.i.i257, align 8
  %189 = shl i64 %186, 4
  %190 = call ptr @realloc(ptr %188, i64 %189)
  store ptr %190, ptr %memberidx2.i.i.i257, align 8
  %.pre278 = load i64, ptr %memberidx.i.i255, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %ifend107.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %191 = phi ptr [ %.pre279, %ifend107.TypeChecker_error.exit_crit_edge ], [ %190, %if.entry.i.i ]
  %192 = phi i64 [ %185, %ifend107.TypeChecker_error.exit_crit_edge ], [ %.pre278, %if.entry.i.i ]
  %193 = add i64 %192, 1
  store i64 %193, ptr %memberidx.i.i255, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %191, i64 %192
  store ptr %184, ptr %ptridx.i.i, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %3, align 4
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 6
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %TypeChecker_error.exit96, %TypeChecker_error.exit117, %TypeChecker_get_func_args_from_expression.exit, %2, %ifend23, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %16, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %87, %ifend23 ], [ null, %2 ], [ null, %TypeChecker_get_func_args_from_expression.exit ], [ null, %TypeChecker_error.exit117 ], [ null, %TypeChecker_error.exit96 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  %10 = load i64, ptr %memberidx1, align 4
  %11 = icmp eq i64 %10, 16
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = load i64, ptr %12, align 4
  %14 = icmp eq i64 %13, 22
  %15 = and i1 %11, %14
  br i1 %15, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %ifend
  %16 = tail call fastcc ptr @TypeChecker_check_intrinsic_call(ptr nonnull %0, ptr nonnull %5, ptr nonnull %1)
  br label %common.ret

ifend6:                                           ; preds = %ifend
  %.not = icmp eq i64 %13, 17
  br i1 %.not, label %ifend11, label %if.entry9

if.entry9:                                        ; preds = %ifend6
  %17 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %12)
  %18 = load ptr, ptr %17, align 8
  %memberidx13 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %18, i64 0, i32 5
  %19 = load ptr, ptr %memberidx13, align 8
  %20 = tail call ptr %19(ptr nonnull %17)
  %21 = alloca ptr, align 8
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %21, ptr nonnull @189, ptr %20)
  %23 = load ptr, ptr %21, align 8
  %24 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %24, align 8
  %memberidx.i62 = getelementptr inbounds %string, ptr %24, i64 0, i32 1
  store ptr %23, ptr %memberidx.i62, align 8
  %memberidx1.i63 = getelementptr inbounds %string, ptr %24, i64 0, i32 2
  store i64 %22, ptr %memberidx1.i63, align 4
  %memberidx2.i64 = getelementptr inbounds %string, ptr %24, i64 0, i32 3
  store i64 %22, ptr %memberidx2.i64, align 4
  tail call void @free(ptr %20)
  %25 = load ptr, ptr %memberidx, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i66 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i66, align 8
  %29 = call ptr @malloc(i32 24)
  store i64 5, ptr %29, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %29, i64 0, i32 2
  store ptr %26, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %29, i64 0, i32 1
  store ptr %24, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 3
  %31 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %30, %31
  br i1 %.not.i.i, label %if.entry9.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry9.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry9
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %.pre14 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry9
  %32 = shl i64 %31, 1
  store i64 %32, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %33 = load ptr, ptr %memberidx2.i.i.i, align 8
  %34 = shl i64 %31, 4
  %35 = call ptr @realloc(ptr %33, i64 %34)
  store ptr %35, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry9.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %36 = phi ptr [ %.pre14, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %35, %if.entry.i.i ]
  %37 = phi i64 [ %30, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %38 = add i64 %37, 1
  store i64 %38, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %36, i64 %37
  store ptr %29, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend11:                                          ; preds = %ifend6
  switch i64 %10, label %TypeChecker_get_func_args_from_expression.exit [
    i64 7, label %if.entry.i
    i64 12, label %if.entry9.i
  ]

if.entry.i:                                       ; preds = %ifend11
  %memberidx1.i68 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %39 = load ptr, ptr %memberidx1.i68, align 8
  %40 = load i64, ptr %39, align 4
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %if.entry3.i, label %TypeChecker_get_func_args_from_expression.exit

if.entry3.i:                                      ; preds = %if.entry.i
  %42 = load ptr, ptr %0, align 8
  %memberidx.i.i69 = getelementptr inbounds %Program, ptr %42, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i.i69, align 8
  %memberidx1.i.i70 = getelementptr inbounds %VarId, ptr %39, i64 0, i32 1
  %44 = load i64, ptr %memberidx1.i.i70, align 4
  %memberidx.i.i.i71 = getelementptr inbounds %Array_Module_, ptr %43, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i.i71, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %45, i64 %44
  %46 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i72 = getelementptr inbounds %Module, ptr %46, i64 0, i32 5
  %47 = load ptr, ptr %memberidx2.i.i72, align 8
  %memberidx3.i.i = getelementptr inbounds %VarId, ptr %39, i64 0, i32 2
  %48 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Function_, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %49, i64 %48
  %50 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx7.i = getelementptr inbounds %Function, ptr %50, i64 0, i32 2
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

if.entry9.i:                                      ; preds = %ifend11
  %memberidx12.i = getelementptr inbounds %MemberExpression, ptr %5, i64 0, i32 5
  %51 = load ptr, ptr %memberidx12.i, align 8
  %52 = load ptr, ptr %0, align 8
  %memberidx.i.i19.i = getelementptr inbounds %PropId, ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i.i19.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Program, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %55 = load i64, ptr %53, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %56, i64 %55
  %57 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %57, i64 0, i32 4
  %58 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %53, i64 0, i32 2
  %59 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %58, i64 0, i32 1
  %60 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %ptridx.i6.i.i.i.i = getelementptr inbounds ptr, ptr %60, i64 %59
  %61 = load ptr, ptr %ptridx.i6.i.i.i.i, align 8
  %memberidx.i20.i = getelementptr inbounds %Class, ptr %61, i64 0, i32 5
  %62 = load ptr, ptr %memberidx.i20.i, align 8
  %memberidx1.i21.i = getelementptr inbounds %PropId, ptr %51, i64 0, i32 2
  %63 = load i64, ptr %memberidx1.i21.i, align 4
  %memberidx.i3.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i3.i.i, align 8
  %ptridx.i.i22.i = getelementptr inbounds ptr, ptr %64, i64 %63
  %65 = load ptr, ptr %ptridx.i.i22.i, align 8
  %memberidx14.i = getelementptr inbounds %ClassMethod, ptr %65, i64 0, i32 6
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

TypeChecker_get_func_args_from_expression.exit.sink.split: ; preds = %if.entry9.i, %if.entry3.i
  %memberidx7.i.sink = phi ptr [ %memberidx7.i, %if.entry3.i ], [ %memberidx14.i, %if.entry9.i ]
  %66 = load ptr, ptr %memberidx7.i.sink, align 8
  br label %TypeChecker_get_func_args_from_expression.exit

TypeChecker_get_func_args_from_expression.exit:   ; preds = %TypeChecker_get_func_args_from_expression.exit.sink.split, %ifend11, %if.entry.i
  %common.ret.op.i = phi ptr [ null, %if.entry.i ], [ null, %ifend11 ], [ %66, %TypeChecker_get_func_args_from_expression.exit.sink.split ]
  %memberidx17 = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 4
  %67 = load ptr, ptr %memberidx17, align 8
  %68 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr nonnull %12, ptr %common.ret.op.i, ptr %67)
  %69 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i74 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 6
  %70 = load ptr, ptr %memberidx1.i74, align 8
  %memberidx2.i75 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 2
  %71 = load i64, ptr %memberidx2.i75, align 4
  %72 = icmp sgt i64 %71, 0
  br i1 %72, label %common.ret, label %ifend20

ifend20:                                          ; preds = %TypeChecker_get_func_args_from_expression.exit
  %memberidx.i1 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i1, align 8
  %memberidx1.i2 = getelementptr inbounds %Array_Type_, ptr %73, i64 0, i32 2
  %74 = load i64, ptr %memberidx1.i2, align 4
  %memberidx2.i3 = getelementptr inbounds %Array_Expression_, ptr %68, i64 0, i32 2
  %75 = load i64, ptr %memberidx2.i3, align 4
  %.not.i = icmp eq i64 %74, %75
  br i1 %.not.i, label %for.cond.preheader.i, label %if.entry24

for.cond.preheader.i:                             ; preds = %ifend20
  %76 = icmp sgt i64 %74, 0
  br i1 %76, label %for.body.lr.ph.i, label %ifend23

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %memberidx.i12.i = getelementptr inbounds %Array_Expression_, ptr %68, i64 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %ifend8.i, %for.body.lr.ph.i
  %storemerge14.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %84, %ifend8.i ]
  %77 = load ptr, ptr %memberidx.i1, align 8
  %memberidx.i.i5 = getelementptr inbounds %Array_Type_, ptr %77, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i.i5, align 8
  %ptridx.i.i6 = getelementptr inbounds ptr, ptr %78, i64 %storemerge14.i
  %79 = load ptr, ptr %ptridx.i.i6, align 8
  %80 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %80, i64 %storemerge14.i
  %81 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %81, i64 0, i32 3
  %82 = load ptr, ptr %memberidx5.i, align 8
  %83 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %79, ptr %82)
  br i1 %83, label %ifend8.i, label %else25

ifend8.i:                                         ; preds = %for.body.i
  %84 = add nuw nsw i64 %storemerge14.i, 1
  %85 = load i64, ptr %memberidx2.i3, align 4
  %86 = icmp slt i64 %84, %85
  br i1 %86, label %for.body.i, label %ifend23

ifend23:                                          ; preds = %ifend8.i, %for.cond.preheader.i
  %87 = tail call ptr @malloc(i32 41)
  %memberidx37 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 2
  %88 = load ptr, ptr %memberidx37, align 8
  store i64 8, ptr %87, align 4
  %memberidx.i.i76 = getelementptr inbounds %Expression, ptr %87, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i76, align 4
  %memberidx1.i.i77 = getelementptr inbounds %Expression, ptr %87, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i77, align 1
  %memberidx.i78 = getelementptr inbounds %CallExpression, ptr %87, i64 0, i32 4
  store ptr %5, ptr %memberidx.i78, align 8
  %memberidx1.i79 = getelementptr inbounds %CallExpression, ptr %87, i64 0, i32 5
  store ptr %68, ptr %memberidx1.i79, align 8
  %memberidx2.i80 = getelementptr inbounds %Expression, ptr %87, i64 0, i32 3
  store ptr %88, ptr %memberidx2.i80, align 8
  br label %common.ret

if.entry24:                                       ; preds = %ifend20
  %89 = alloca ptr, align 8
  %90 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %89, ptr nonnull @190, i64 %74, i64 %75)
  %91 = load ptr, ptr %89, align 8
  %92 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %92, align 8
  %memberidx.i81 = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  store ptr %91, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  store i64 %90, ptr %memberidx1.i82, align 4
  %memberidx2.i83 = getelementptr inbounds %string, ptr %92, i64 0, i32 3
  store i64 %90, ptr %memberidx2.i83, align 4
  %93 = load ptr, ptr %1, align 8
  %94 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i85 = getelementptr inbounds %Compiler, ptr %94, i64 0, i32 6
  %95 = load ptr, ptr %memberidx1.i85, align 8
  %96 = call ptr @malloc(i32 24)
  store i64 4, ptr %96, align 4
  %memberidx1.i.i86 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 2
  store ptr %93, ptr %memberidx1.i.i86, align 8
  %memberidx2.i.i87 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 1
  store ptr %92, ptr %memberidx2.i.i87, align 8
  %memberidx.i.i88 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 2
  %97 = load i64, ptr %memberidx.i.i88, align 4
  %memberidx1.i2.i89 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 3
  %98 = load i64, ptr %memberidx1.i2.i89, align 4
  %.not.i.i90 = icmp slt i64 %97, %98
  br i1 %.not.i.i90, label %if.entry24.TypeChecker_error.exit96_crit_edge, label %if.entry.i.i93

if.entry24.TypeChecker_error.exit96_crit_edge:    ; preds = %if.entry24
  %memberidx4.i.i94.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %.pre16 = load ptr, ptr %memberidx4.i.i94.phi.trans.insert, align 8
  br label %TypeChecker_error.exit96

if.entry.i.i93:                                   ; preds = %if.entry24
  %99 = shl i64 %98, 1
  store i64 %99, ptr %memberidx1.i2.i89, align 4
  %memberidx2.i.i.i92 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %100 = load ptr, ptr %memberidx2.i.i.i92, align 8
  %101 = shl i64 %98, 4
  %102 = call ptr @realloc(ptr %100, i64 %101)
  store ptr %102, ptr %memberidx2.i.i.i92, align 8
  %.pre15 = load i64, ptr %memberidx.i.i88, align 4
  br label %TypeChecker_error.exit96

TypeChecker_error.exit96:                         ; preds = %if.entry24.TypeChecker_error.exit96_crit_edge, %if.entry.i.i93
  %103 = phi ptr [ %.pre16, %if.entry24.TypeChecker_error.exit96_crit_edge ], [ %102, %if.entry.i.i93 ]
  %104 = phi i64 [ %97, %if.entry24.TypeChecker_error.exit96_crit_edge ], [ %.pre15, %if.entry.i.i93 ]
  %105 = add i64 %104, 1
  store i64 %105, ptr %memberidx.i.i88, align 4
  %ptridx.i.i95 = getelementptr inbounds ptr, ptr %103, i64 %104
  store ptr %96, ptr %ptridx.i.i95, align 8
  br label %common.ret

else25:                                           ; preds = %for.body.i
  %106 = load ptr, ptr %memberidx.i1, align 8
  %memberidx.i97 = getelementptr inbounds %Array_Type_, ptr %106, i64 0, i32 1
  %107 = load ptr, ptr %memberidx.i97, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %107, i64 %storemerge14.i
  %108 = load ptr, ptr %ptridx.i, align 8
  %109 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %108)
  %110 = load ptr, ptr %109, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx32, align 8
  %112 = tail call ptr %111(ptr nonnull %109)
  %113 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i99 = getelementptr inbounds ptr, ptr %113, i64 %storemerge14.i
  %114 = load ptr, ptr %ptridx.i99, align 8
  %memberidx33 = getelementptr inbounds %Expression, ptr %114, i64 0, i32 3
  %115 = load ptr, ptr %memberidx33, align 8
  %116 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %115)
  %117 = load ptr, ptr %116, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %117, i64 0, i32 5
  %118 = load ptr, ptr %memberidx34, align 8
  %119 = tail call ptr %118(ptr nonnull %116)
  %120 = alloca ptr, align 8
  %121 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %120, ptr nonnull @191, ptr %112, ptr %119)
  %122 = load ptr, ptr %120, align 8
  %123 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %123, align 8
  %memberidx.i100 = getelementptr inbounds %string, ptr %123, i64 0, i32 1
  store ptr %122, ptr %memberidx.i100, align 8
  %memberidx1.i101 = getelementptr inbounds %string, ptr %123, i64 0, i32 2
  store i64 %121, ptr %memberidx1.i101, align 4
  %memberidx2.i102 = getelementptr inbounds %string, ptr %123, i64 0, i32 3
  store i64 %121, ptr %memberidx2.i102, align 4
  tail call void @free(ptr %112)
  tail call void @free(ptr %119)
  %124 = load ptr, ptr %memberidx17, align 8
  %memberidx.i103 = getelementptr inbounds %Array_ExpressionNode_, ptr %124, i64 0, i32 1
  %125 = load ptr, ptr %memberidx.i103, align 8
  %ptridx.i104 = getelementptr inbounds ptr, ptr %125, i64 %storemerge14.i
  %126 = load ptr, ptr %ptridx.i104, align 8
  %127 = load ptr, ptr %126, align 8
  %128 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i106 = getelementptr inbounds %Compiler, ptr %128, i64 0, i32 6
  %129 = load ptr, ptr %memberidx1.i106, align 8
  %130 = call ptr @malloc(i32 24)
  store i64 5, ptr %130, align 4
  %memberidx1.i.i107 = getelementptr inbounds %FloError, ptr %130, i64 0, i32 2
  store ptr %127, ptr %memberidx1.i.i107, align 8
  %memberidx2.i.i108 = getelementptr inbounds %FloError, ptr %130, i64 0, i32 1
  store ptr %123, ptr %memberidx2.i.i108, align 8
  %memberidx.i.i109 = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 2
  %131 = load i64, ptr %memberidx.i.i109, align 4
  %memberidx1.i2.i110 = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 3
  %132 = load i64, ptr %memberidx1.i2.i110, align 4
  %.not.i.i111 = icmp slt i64 %131, %132
  br i1 %.not.i.i111, label %else25.TypeChecker_error.exit117_crit_edge, label %if.entry.i.i114

else25.TypeChecker_error.exit117_crit_edge:       ; preds = %else25
  %memberidx4.i.i115.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 1
  %.pre18 = load ptr, ptr %memberidx4.i.i115.phi.trans.insert, align 8
  br label %TypeChecker_error.exit117

if.entry.i.i114:                                  ; preds = %else25
  %133 = shl i64 %132, 1
  store i64 %133, ptr %memberidx1.i2.i110, align 4
  %memberidx2.i.i.i113 = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 1
  %134 = load ptr, ptr %memberidx2.i.i.i113, align 8
  %135 = shl i64 %132, 4
  %136 = call ptr @realloc(ptr %134, i64 %135)
  store ptr %136, ptr %memberidx2.i.i.i113, align 8
  %.pre17 = load i64, ptr %memberidx.i.i109, align 4
  br label %TypeChecker_error.exit117

TypeChecker_error.exit117:                        ; preds = %else25.TypeChecker_error.exit117_crit_edge, %if.entry.i.i114
  %137 = phi ptr [ %.pre18, %else25.TypeChecker_error.exit117_crit_edge ], [ %136, %if.entry.i.i114 ]
  %138 = phi i64 [ %131, %else25.TypeChecker_error.exit117_crit_edge ], [ %.pre17, %if.entry.i.i114 ]
  %139 = add i64 %138, 1
  store i64 %139, ptr %memberidx.i.i109, align 4
  %ptridx.i.i116 = getelementptr inbounds ptr, ptr %137, i64 %138
  store ptr %130, ptr %ptridx.i.i116, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_type(ptr %0, ptr %1) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeNode, ptr %1, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend60, %ifend76, %for.end68, %TypeChecker_error.exit, %ifend52, %for.end, %ifend36, %TypeChecker_error.exit189, %TypeChecker_error.exit205, %TypeChecker_error.exit221, %if.entry12, %if.entry8, %if.entry3, %if.entry
  %common.ret.op = phi ptr [ %5, %if.entry ], [ %8, %if.entry3 ], [ %10, %if.entry8 ], [ %11, %if.entry12 ], [ null, %TypeChecker_error.exit221 ], [ null, %TypeChecker_error.exit205 ], [ null, %TypeChecker_error.exit189 ], [ %75, %ifend36 ], [ %98, %for.end ], [ %105, %ifend52 ], [ null, %TypeChecker_error.exit ], [ null, %for.end68 ], [ %132, %ifend76 ], [ %107, %ifend60 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %5 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %5, align 4
  br label %common.ret

ifend:                                            ; preds = %2
  %6 = add i64 %3, -1
  %7 = icmp ult i64 %6, 11
  br i1 %7, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %8 = tail call ptr @malloc(i32 8)
  %9 = load i64, ptr %memberidx, align 4
  store i64 %9, ptr %8, align 4
  br label %common.ret

ifend5:                                           ; preds = %ifend
  switch i64 %3, label %ifend52 [
    i64 12, label %if.entry8
    i64 15, label %if.entry12
    i64 16, label %if.entry17
    i64 17, label %if.entry41
    i64 18, label %if.entry50
  ]

if.entry8:                                        ; preds = %ifend5
  %10 = tail call ptr @malloc(i32 8)
  store i64 12, ptr %10, align 4
  br label %common.ret

if.entry12:                                       ; preds = %ifend5
  %11 = tail call ptr @malloc(i32 16)
  %memberidx15 = getelementptr inbounds %PointerTypeNode, ptr %1, i64 0, i32 2
  %12 = load ptr, ptr %memberidx15, align 8
  %13 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %12)
  store i64 15, ptr %11, align 4
  %memberidx.i225 = getelementptr inbounds %PointerType, ptr %11, i64 0, i32 1
  store ptr %13, ptr %memberidx.i225, align 8
  br label %common.ret

if.entry17:                                       ; preds = %ifend5
  %14 = tail call ptr @malloc(i32 8)
  store i64 7, ptr %14, align 4
  %memberidx20 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 3
  %15 = load ptr, ptr %memberidx20, align 8
  %16 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %14, ptr %15)
  %memberidx21 = getelementptr inbounds %Expression, ptr %16, i64 0, i32 3
  %17 = load ptr, ptr %memberidx21, align 8
  %18 = load i64, ptr %17, align 4
  %19 = add i64 %18, -1
  %20 = icmp ult i64 %19, 7
  br i1 %20, label %ifend24, label %if.entry22

if.entry22:                                       ; preds = %if.entry17
  %21 = tail call ptr @malloc(i32 128)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %21, ptr noundef nonnull align 8 dereferenceable(16) @142, i64 16, i1 false)
  %22 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %22, align 8
  %memberidx.i.i222 = getelementptr inbounds %string, ptr %22, i64 0, i32 1
  store ptr %21, ptr %memberidx.i.i222, align 8
  %memberidx1.i.i223 = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  store i64 16, ptr %memberidx1.i.i223, align 4
  %memberidx2.i.i224 = getelementptr inbounds %string, ptr %22, i64 0, i32 3
  store i64 16, ptr %memberidx2.i.i224, align 4
  %23 = load ptr, ptr %memberidx20, align 8
  %24 = load ptr, ptr %23, align 8
  %memberidx.i209 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %25 = load ptr, ptr %memberidx.i209, align 8
  %memberidx1.i210 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 6
  %26 = load ptr, ptr %memberidx1.i210, align 8
  %27 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %27, align 4
  %memberidx1.i.i211 = getelementptr inbounds %FloError, ptr %27, i64 0, i32 2
  store ptr %24, ptr %memberidx1.i.i211, align 8
  %memberidx2.i.i212 = getelementptr inbounds %FloError, ptr %27, i64 0, i32 1
  store ptr %22, ptr %memberidx2.i.i212, align 8
  %memberidx.i.i213 = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i.i213, align 4
  %memberidx1.i2.i214 = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 3
  %29 = load i64, ptr %memberidx1.i2.i214, align 4
  %.not.i.i215 = icmp slt i64 %28, %29
  br i1 %.not.i.i215, label %if.entry22.TypeChecker_error.exit221_crit_edge, label %if.entry.i.i218

if.entry22.TypeChecker_error.exit221_crit_edge:   ; preds = %if.entry22
  %memberidx4.i.i219.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %.pre241 = load ptr, ptr %memberidx4.i.i219.phi.trans.insert, align 8
  br label %TypeChecker_error.exit221

if.entry.i.i218:                                  ; preds = %if.entry22
  %30 = shl i64 %29, 1
  store i64 %30, ptr %memberidx1.i2.i214, align 4
  %memberidx2.i.i.i217 = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %31 = load ptr, ptr %memberidx2.i.i.i217, align 8
  %32 = shl i64 %29, 4
  %33 = tail call ptr @realloc(ptr %31, i64 %32)
  store ptr %33, ptr %memberidx2.i.i.i217, align 8
  %.pre240 = load i64, ptr %memberidx.i.i213, align 4
  br label %TypeChecker_error.exit221

TypeChecker_error.exit221:                        ; preds = %if.entry22.TypeChecker_error.exit221_crit_edge, %if.entry.i.i218
  %34 = phi ptr [ %.pre241, %if.entry22.TypeChecker_error.exit221_crit_edge ], [ %33, %if.entry.i.i218 ]
  %35 = phi i64 [ %28, %if.entry22.TypeChecker_error.exit221_crit_edge ], [ %.pre240, %if.entry.i.i218 ]
  %36 = add i64 %35, 1
  store i64 %36, ptr %memberidx.i.i213, align 4
  %ptridx.i.i220 = getelementptr inbounds ptr, ptr %34, i64 %35
  store ptr %27, ptr %ptridx.i.i220, align 8
  br label %common.ret

ifend24:                                          ; preds = %if.entry17
  %memberidx27 = getelementptr inbounds %Expression, ptr %16, i64 0, i32 1
  %37 = load i1, ptr %memberidx27, align 1
  br i1 %37, label %ifend30, label %if.entry28

if.entry28:                                       ; preds = %ifend24
  %38 = tail call ptr @malloc(i32 240)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(30) %38, ptr noundef nonnull align 8 dereferenceable(30) @143, i64 30, i1 false)
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i206 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i206, align 8
  %memberidx1.i.i207 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 30, ptr %memberidx1.i.i207, align 4
  %memberidx2.i.i208 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 30, ptr %memberidx2.i.i208, align 4
  %40 = load ptr, ptr %memberidx20, align 8
  %41 = load ptr, ptr %40, align 8
  %memberidx.i193 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %42 = load ptr, ptr %memberidx.i193, align 8
  %memberidx1.i194 = getelementptr inbounds %Compiler, ptr %42, i64 0, i32 6
  %43 = load ptr, ptr %memberidx1.i194, align 8
  %44 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %44, align 4
  %memberidx1.i.i195 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 2
  store ptr %41, ptr %memberidx1.i.i195, align 8
  %memberidx2.i.i196 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 1
  store ptr %39, ptr %memberidx2.i.i196, align 8
  %memberidx.i.i197 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %45 = load i64, ptr %memberidx.i.i197, align 4
  %memberidx1.i2.i198 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 3
  %46 = load i64, ptr %memberidx1.i2.i198, align 4
  %.not.i.i199 = icmp slt i64 %45, %46
  br i1 %.not.i.i199, label %if.entry28.TypeChecker_error.exit205_crit_edge, label %if.entry.i.i202

if.entry28.TypeChecker_error.exit205_crit_edge:   ; preds = %if.entry28
  %memberidx4.i.i203.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %.pre243 = load ptr, ptr %memberidx4.i.i203.phi.trans.insert, align 8
  br label %TypeChecker_error.exit205

if.entry.i.i202:                                  ; preds = %if.entry28
  %47 = shl i64 %46, 1
  store i64 %47, ptr %memberidx1.i2.i198, align 4
  %memberidx2.i.i.i201 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %48 = load ptr, ptr %memberidx2.i.i.i201, align 8
  %49 = shl i64 %46, 4
  %50 = tail call ptr @realloc(ptr %48, i64 %49)
  store ptr %50, ptr %memberidx2.i.i.i201, align 8
  %.pre242 = load i64, ptr %memberidx.i.i197, align 4
  br label %TypeChecker_error.exit205

TypeChecker_error.exit205:                        ; preds = %if.entry28.TypeChecker_error.exit205_crit_edge, %if.entry.i.i202
  %51 = phi ptr [ %.pre243, %if.entry28.TypeChecker_error.exit205_crit_edge ], [ %50, %if.entry.i.i202 ]
  %52 = phi i64 [ %45, %if.entry28.TypeChecker_error.exit205_crit_edge ], [ %.pre242, %if.entry.i.i202 ]
  %53 = add i64 %52, 1
  store i64 %53, ptr %memberidx.i.i197, align 4
  %ptridx.i.i204 = getelementptr inbounds ptr, ptr %51, i64 %52
  store ptr %44, ptr %ptridx.i.i204, align 8
  br label %common.ret

ifend30:                                          ; preds = %ifend24
  %54 = load ptr, ptr %0, align 8
  %55 = tail call fastcc i64 @evaluate_const_int_expression(ptr %54, ptr nonnull %16)
  %56 = icmp slt i64 %55, 0
  br i1 %56, label %if.entry34, label %ifend36

if.entry34:                                       ; preds = %ifend30
  %57 = tail call ptr @malloc(i32 248)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(31) %57, ptr noundef nonnull align 8 dereferenceable(31) @144, i64 31, i1 false)
  %58 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i.i190 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i.i190, align 8
  %memberidx1.i.i191 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 31, ptr %memberidx1.i.i191, align 4
  %memberidx2.i.i192 = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 31, ptr %memberidx2.i.i192, align 4
  %59 = load ptr, ptr %memberidx20, align 8
  %60 = load ptr, ptr %59, align 8
  %memberidx.i177 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %61 = load ptr, ptr %memberidx.i177, align 8
  %memberidx1.i178 = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 6
  %62 = load ptr, ptr %memberidx1.i178, align 8
  %63 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %63, align 4
  %memberidx1.i.i179 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %60, ptr %memberidx1.i.i179, align 8
  %memberidx2.i.i180 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i180, align 8
  %memberidx.i.i181 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %64 = load i64, ptr %memberidx.i.i181, align 4
  %memberidx1.i2.i182 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 3
  %65 = load i64, ptr %memberidx1.i2.i182, align 4
  %.not.i.i183 = icmp slt i64 %64, %65
  br i1 %.not.i.i183, label %if.entry34.TypeChecker_error.exit189_crit_edge, label %if.entry.i.i186

if.entry34.TypeChecker_error.exit189_crit_edge:   ; preds = %if.entry34
  %memberidx4.i.i187.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %.pre245 = load ptr, ptr %memberidx4.i.i187.phi.trans.insert, align 8
  br label %TypeChecker_error.exit189

if.entry.i.i186:                                  ; preds = %if.entry34
  %66 = shl i64 %65, 1
  store i64 %66, ptr %memberidx1.i2.i182, align 4
  %memberidx2.i.i.i185 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %67 = load ptr, ptr %memberidx2.i.i.i185, align 8
  %68 = shl i64 %65, 4
  %69 = tail call ptr @realloc(ptr %67, i64 %68)
  store ptr %69, ptr %memberidx2.i.i.i185, align 8
  %.pre244 = load i64, ptr %memberidx.i.i181, align 4
  br label %TypeChecker_error.exit189

TypeChecker_error.exit189:                        ; preds = %if.entry34.TypeChecker_error.exit189_crit_edge, %if.entry.i.i186
  %70 = phi ptr [ %.pre245, %if.entry34.TypeChecker_error.exit189_crit_edge ], [ %69, %if.entry.i.i186 ]
  %71 = phi i64 [ %64, %if.entry34.TypeChecker_error.exit189_crit_edge ], [ %.pre244, %if.entry.i.i186 ]
  %72 = add i64 %71, 1
  store i64 %72, ptr %memberidx.i.i181, align 4
  %ptridx.i.i188 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %63, ptr %ptridx.i.i188, align 8
  br label %common.ret

ifend36:                                          ; preds = %ifend30
  %memberidx39 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 2
  %73 = load ptr, ptr %memberidx39, align 8
  %74 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %73)
  %75 = tail call ptr @malloc(i32 24)
  store i64 16, ptr %75, align 4
  %memberidx.i175 = getelementptr inbounds %ArrayType, ptr %75, i64 0, i32 1
  store ptr %74, ptr %memberidx.i175, align 8
  %memberidx1.i176 = getelementptr inbounds %ArrayType, ptr %75, i64 0, i32 2
  store i64 %55, ptr %memberidx1.i176, align 4
  br label %common.ret

if.entry41:                                       ; preds = %ifend5
  %76 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %76, align 8
  %memberidx.i172 = getelementptr inbounds %Array_Type_, ptr %76, i64 0, i32 2
  store i64 0, ptr %memberidx.i172, align 4
  %memberidx1.i173 = getelementptr inbounds %Array_Type_, ptr %76, i64 0, i32 3
  store i64 8, ptr %memberidx1.i173, align 4
  %memberidx2.i174 = getelementptr inbounds %Array_Type_, ptr %76, i64 0, i32 1
  %77 = tail call ptr @malloc(i32 64)
  store ptr %77, ptr %memberidx2.i174, align 8
  store i64 0, ptr %memberidx.i172, align 4
  %memberidx46 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 2
  %78 = load ptr, ptr %memberidx46, align 8
  %79 = tail call ptr @malloc(i32 25)
  %memberidx.i167 = getelementptr inbounds %Array_TypeNode_, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %memberidx.i167, align 8
  %memberidx1.i168 = getelementptr inbounds %Array_TypeNode_, ptr %78, i64 0, i32 2
  %81 = load i64, ptr %memberidx1.i168, align 4
  store i1 false, ptr %79, align 1
  %memberidx1.i.i169 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %79, i64 0, i32 1
  %memberidx2.i.i170 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %79, i64 0, i32 3
  store ptr %80, ptr %memberidx2.i.i170, align 8
  %memberidx3.i.i171 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %79, i64 0, i32 2
  store i64 %81, ptr %memberidx3.i.i171, align 4
  store i64 1, ptr %memberidx1.i.i169, align 4
  %82 = icmp slt i64 %81, 1
  br i1 %82, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry41, %Array_Type____sl__.exit162
  %83 = phi i64 [ %94, %Array_Type____sl__.exit162 ], [ 1, %if.entry41 ]
  %storemerge120230.in = phi ptr [ %ptridx.i152, %Array_Type____sl__.exit162 ], [ %80, %if.entry41 ]
  %storemerge120230 = load ptr, ptr %storemerge120230.in, align 8
  %84 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %storemerge120230)
  %85 = load i64, ptr %memberidx.i172, align 4
  %86 = load i64, ptr %memberidx1.i173, align 4
  %.not.i156 = icmp slt i64 %85, %86
  br i1 %.not.i156, label %for.body.Array_Type____sl__.exit162_crit_edge, label %if.entry.i159

for.body.Array_Type____sl__.exit162_crit_edge:    ; preds = %for.body
  %.pre239 = load ptr, ptr %memberidx2.i174, align 8
  br label %Array_Type____sl__.exit162

if.entry.i159:                                    ; preds = %for.body
  %87 = shl i64 %86, 1
  store i64 %87, ptr %memberidx1.i173, align 4
  %88 = load ptr, ptr %memberidx2.i174, align 8
  %89 = shl i64 %86, 4
  %90 = tail call ptr @realloc(ptr %88, i64 %89)
  store ptr %90, ptr %memberidx2.i174, align 8
  %.pre238 = load i64, ptr %memberidx.i172, align 4
  br label %Array_Type____sl__.exit162

Array_Type____sl__.exit162:                       ; preds = %for.body.Array_Type____sl__.exit162_crit_edge, %if.entry.i159
  %91 = phi ptr [ %.pre239, %for.body.Array_Type____sl__.exit162_crit_edge ], [ %90, %if.entry.i159 ]
  %92 = phi i64 [ %85, %for.body.Array_Type____sl__.exit162_crit_edge ], [ %.pre238, %if.entry.i159 ]
  %93 = add i64 %92, 1
  store i64 %93, ptr %memberidx.i172, align 4
  %ptridx.i161 = getelementptr inbounds ptr, ptr %91, i64 %92
  store ptr %84, ptr %ptridx.i161, align 8
  %94 = add i64 %83, 1
  store i64 %94, ptr %memberidx1.i.i169, align 4
  %ptridx.i152 = getelementptr inbounds ptr, ptr %80, i64 %83
  %95 = icmp sgt i64 %94, %81
  br i1 %95, label %for.end, label %for.body

for.end:                                          ; preds = %Array_Type____sl__.exit162, %if.entry41
  tail call void @free(ptr nonnull %79)
  %memberidx48 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 3
  %96 = load ptr, ptr %memberidx48, align 8
  %97 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %96)
  %98 = tail call ptr @malloc(i32 25)
  store i64 17, ptr %98, align 4
  %memberidx.i148 = getelementptr inbounds %FunctionType, ptr %98, i64 0, i32 1
  store ptr %76, ptr %memberidx.i148, align 8
  %memberidx1.i149 = getelementptr inbounds %FunctionType, ptr %98, i64 0, i32 2
  store ptr %97, ptr %memberidx1.i149, align 8
  br label %common.ret

if.entry50:                                       ; preds = %ifend5
  %99 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %99, align 8
  %memberidx.i145 = getelementptr inbounds %Array_Type_, ptr %99, i64 0, i32 2
  store i64 0, ptr %memberidx.i145, align 4
  %memberidx1.i146 = getelementptr inbounds %Array_Type_, ptr %99, i64 0, i32 3
  store i64 8, ptr %memberidx1.i146, align 4
  %memberidx2.i147 = getelementptr inbounds %Array_Type_, ptr %99, i64 0, i32 1
  %100 = tail call ptr @malloc(i32 64)
  store ptr %100, ptr %memberidx2.i147, align 8
  store i64 0, ptr %memberidx.i145, align 4
  %memberidx55 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 2
  %101 = load ptr, ptr %memberidx55, align 8
  %memberidx56 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 3
  %102 = load ptr, ptr %memberidx56, align 8
  %memberidx57 = getelementptr inbounds %Array_TypeNode_, ptr %102, i64 0, i32 2
  %103 = load i64, ptr %memberidx57, align 4
  %104 = icmp sgt i64 %103, 0
  br i1 %104, label %for.entry61, label %ifend60

ifend52:                                          ; preds = %ifend5
  %105 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %105, align 4
  br label %common.ret

ifend60:                                          ; preds = %ifend76, %if.entry50
  %memberidx84 = getelementptr inbounds %IdentifierToken, ptr %101, i64 0, i32 2
  %106 = load ptr, ptr %memberidx84, align 8
  %107 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %106)
  %108 = load i64, ptr %107, align 4
  %109 = icmp eq i64 %108, 22
  br i1 %109, label %if.entry86, label %common.ret

for.entry61:                                      ; preds = %if.entry50
  %110 = tail call ptr @malloc(i32 25)
  %memberidx.i141 = getelementptr inbounds %Array_TypeNode_, ptr %102, i64 0, i32 1
  %111 = load ptr, ptr %memberidx.i141, align 8
  %112 = load i64, ptr %memberidx57, align 4
  store i1 false, ptr %110, align 1
  %memberidx1.i.i143 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %110, i64 0, i32 1
  %memberidx2.i.i144 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %110, i64 0, i32 3
  store ptr %111, ptr %memberidx2.i.i144, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %110, i64 0, i32 2
  store i64 %112, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i143, align 4
  %113 = icmp slt i64 %112, 1
  br i1 %113, label %for.end68, label %for.body66

for.body66:                                       ; preds = %for.entry61, %Array_Type____sl__.exit
  %114 = phi i64 [ %125, %Array_Type____sl__.exit ], [ 1, %for.entry61 ]
  %storemerge232.in = phi ptr [ %ptridx.i, %Array_Type____sl__.exit ], [ %111, %for.entry61 ]
  %storemerge232 = load ptr, ptr %storemerge232.in, align 8
  %115 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %storemerge232)
  %116 = load i64, ptr %memberidx.i145, align 4
  %117 = load i64, ptr %memberidx1.i146, align 4
  %.not.i = icmp slt i64 %116, %117
  br i1 %.not.i, label %for.body66.Array_Type____sl__.exit_crit_edge, label %if.entry.i

for.body66.Array_Type____sl__.exit_crit_edge:     ; preds = %for.body66
  %.pre235 = load ptr, ptr %memberidx2.i147, align 8
  br label %Array_Type____sl__.exit

if.entry.i:                                       ; preds = %for.body66
  %118 = shl i64 %117, 1
  store i64 %118, ptr %memberidx1.i146, align 4
  %119 = load ptr, ptr %memberidx2.i147, align 8
  %120 = shl i64 %117, 4
  %121 = tail call ptr @realloc(ptr %119, i64 %120)
  store ptr %121, ptr %memberidx2.i147, align 8
  %.pre = load i64, ptr %memberidx.i145, align 4
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %for.body66.Array_Type____sl__.exit_crit_edge, %if.entry.i
  %122 = phi ptr [ %.pre235, %for.body66.Array_Type____sl__.exit_crit_edge ], [ %121, %if.entry.i ]
  %123 = phi i64 [ %116, %for.body66.Array_Type____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %124 = add i64 %123, 1
  store i64 %124, ptr %memberidx.i145, align 4
  %ptridx.i136 = getelementptr inbounds ptr, ptr %122, i64 %123
  store ptr %115, ptr %ptridx.i136, align 8
  %125 = add i64 %114, 1
  store i64 %125, ptr %memberidx1.i.i143, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %111, i64 %114
  %126 = icmp sgt i64 %125, %112
  br i1 %126, label %for.end68, label %for.body66

for.end68:                                        ; preds = %Array_Type____sl__.exit, %for.entry61
  tail call void @free(ptr nonnull %110)
  %memberidx.i127 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %127 = load ptr, ptr %memberidx.i127, align 8
  %memberidx1.i128 = getelementptr inbounds %Compiler, ptr %127, i64 0, i32 6
  %128 = load ptr, ptr %memberidx1.i128, align 8
  %memberidx2.i129 = getelementptr inbounds %Array_FloError_, ptr %128, i64 0, i32 2
  %129 = load i64, ptr %memberidx2.i129, align 4
  %130 = icmp sgt i64 %129, 0
  br i1 %130, label %common.ret, label %ifend72

ifend72:                                          ; preds = %for.end68
  %memberidx73 = getelementptr inbounds %IdentifierToken, ptr %101, i64 0, i32 2
  %131 = load ptr, ptr %memberidx73, align 8
  %132 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr nonnull %0, ptr %131, ptr nonnull %99)
  %133 = load ptr, ptr %memberidx.i127, align 8
  %memberidx1.i125 = getelementptr inbounds %Compiler, ptr %133, i64 0, i32 6
  %134 = load ptr, ptr %memberidx1.i125, align 8
  %memberidx2.i126 = getelementptr inbounds %Array_FloError_, ptr %134, i64 0, i32 2
  %135 = load i64, ptr %memberidx2.i126, align 4
  %136 = icmp sgt i64 %135, 0
  br i1 %136, label %if.entry74, label %ifend76

if.entry74:                                       ; preds = %ifend72
  %memberidx.i123 = getelementptr inbounds %Array_FloError_, ptr %134, i64 0, i32 1
  %137 = load ptr, ptr %memberidx.i123, align 8
  %138 = load ptr, ptr %137, align 8
  %memberidx79 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 2
  %139 = load ptr, ptr %1, align 8
  store ptr %139, ptr %memberidx79, align 8
  br label %ifend76

ifend76:                                          ; preds = %ifend72, %if.entry74
  %.not = icmp eq ptr %132, null
  br i1 %.not, label %ifend60, label %common.ret

if.entry86:                                       ; preds = %ifend60
  %140 = load ptr, ptr %memberidx84, align 8
  %141 = load ptr, ptr %140, align 8
  %memberidx90 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %141, i64 0, i32 5
  %142 = load ptr, ptr %memberidx90, align 8
  %143 = tail call ptr %142(ptr nonnull %140)
  %144 = alloca ptr, align 8
  %145 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %144, ptr nonnull @145, ptr %143)
  %146 = load ptr, ptr %144, align 8
  %147 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %147, align 8
  %memberidx.i121 = getelementptr inbounds %string, ptr %147, i64 0, i32 1
  store ptr %146, ptr %memberidx.i121, align 8
  %memberidx1.i122 = getelementptr inbounds %string, ptr %147, i64 0, i32 2
  store i64 %145, ptr %memberidx1.i122, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %147, i64 0, i32 3
  store i64 %145, ptr %memberidx2.i, align 4
  tail call void @free(ptr %143)
  %memberidx91 = getelementptr inbounds %Token, ptr %101, i64 0, i32 1
  %148 = load ptr, ptr %memberidx91, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %149 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %149, i64 0, i32 6
  %150 = load ptr, ptr %memberidx1.i, align 8
  %151 = call ptr @malloc(i32 24)
  store i64 5, ptr %151, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %151, i64 0, i32 2
  store ptr %148, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %151, i64 0, i32 1
  store ptr %147, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 2
  %152 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 3
  %153 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %152, %153
  br i1 %.not.i.i, label %if.entry86.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry86.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry86
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 1
  %.pre237 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry86
  %154 = shl i64 %153, 1
  store i64 %154, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 1
  %155 = load ptr, ptr %memberidx2.i.i.i, align 8
  %156 = shl i64 %153, 4
  %157 = call ptr @realloc(ptr %155, i64 %156)
  store ptr %157, ptr %memberidx2.i.i.i, align 8
  %.pre236 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry86.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %158 = phi ptr [ %.pre237, %if.entry86.TypeChecker_error.exit_crit_edge ], [ %157, %if.entry.i.i ]
  %159 = phi i64 [ %152, %if.entry86.TypeChecker_error.exit_crit_edge ], [ %.pre236, %if.entry.i.i ]
  %160 = add i64 %159, 1
  store i64 %160, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %158, i64 %159
  store ptr %151, ptr %ptridx.i.i, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_for_statement(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 48)
  store i64 3, ptr %3, align 4
  %memberidx.i = getelementptr inbounds %ForStatement, ptr %3, i64 0, i32 1
  %memberidx1.i = getelementptr inbounds %ForStatement, ptr %3, i64 0, i32 2
  %memberidx2.i = getelementptr inbounds %ForStatement, ptr %3, i64 0, i32 3
  %memberidx3.i = getelementptr inbounds %ForStatement, ptr %3, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %memberidx.i, i8 0, i64 32, i1 false)
  %4 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0)
  %memberidx.i110 = getelementptr inbounds %Scope, ptr %4, i64 0, i32 5
  %memberidx1.i111 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %memberidx1.i111, align 8
  store ptr %5, ptr %memberidx.i110, align 8
  %6 = load ptr, ptr %4, align 8
  store ptr %6, ptr %memberidx1.i111, align 8
  %memberidx2 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  %7 = load i1, ptr %memberidx2, align 1
  %memberidx3 = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 6
  %8 = load i64, ptr %memberidx3, align 4
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %if.entry, label %else

if.entry:                                         ; preds = %2
  %memberidx4 = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 2
  %10 = load ptr, ptr %memberidx4, align 8
  %.not = icmp eq ptr %10, null
  br i1 %.not, label %ifend7, label %if.entry5

else:                                             ; preds = %2
  %11 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %11, align 4
  %memberidx22 = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 5
  %12 = load ptr, ptr %memberidx22, align 8
  %13 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %11, ptr %12)
  %memberidx.i112 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %14 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i113 = getelementptr inbounds %Compiler, ptr %14, i64 0, i32 6
  %15 = load ptr, ptr %memberidx1.i113, align 8
  %memberidx2.i114 = getelementptr inbounds %Array_FloError_, ptr %15, i64 0, i32 2
  %16 = load i64, ptr %memberidx2.i114, align 4
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %common.ret, label %ifend25

ifend.sink.split:                                 ; preds = %get_class_prop_type.exit268, %if.entry17
  %.sink = phi ptr [ %37, %if.entry17 ], [ %241, %get_class_prop_type.exit268 ]
  store ptr %.sink, ptr %memberidx3.i, align 8
  br label %ifend

ifend:                                            ; preds = %ifend.sink.split, %ifend13
  %memberidx.i115 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %18 = load ptr, ptr %memberidx.i115, align 8
  %memberidx1.i116 = getelementptr inbounds %Compiler, ptr %18, i64 0, i32 6
  %19 = load ptr, ptr %memberidx1.i116, align 8
  %memberidx2.i117 = getelementptr inbounds %Array_FloError_, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i117, align 4
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %common.ret, label %ifend61

if.entry5:                                        ; preds = %if.entry
  %22 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr nonnull %10)
  store ptr %22, ptr %memberidx1.i, align 8
  br label %ifend7

ifend7:                                           ; preds = %if.entry, %if.entry5
  %memberidx10 = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 3
  %23 = load ptr, ptr %memberidx10, align 8
  %.not108 = icmp eq ptr %23, null
  br i1 %.not108, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend7
  %24 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %24, align 4
  %25 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %24, ptr nonnull %23)
  %memberidx.i.i297 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %26 = load ptr, ptr %memberidx.i.i297, align 8
  %memberidx1.i.i298 = getelementptr inbounds %Compiler, ptr %26, i64 0, i32 6
  %27 = load ptr, ptr %memberidx1.i.i298, align 8
  %memberidx2.i.i299 = getelementptr inbounds %Array_FloError_, ptr %27, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i299, align 4
  %29 = icmp sgt i64 %28, 0
  br i1 %29, label %TypeChecker_check_condition.exit, label %ifend.i302

ifend.i302:                                       ; preds = %if.entry11
  %memberidx.i301 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %30 = load ptr, ptr %memberidx.i301, align 8
  %31 = load i64, ptr %30, align 4
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %TypeChecker_check_condition.exit, label %true_block.i

true_block.i:                                     ; preds = %ifend.i302
  %33 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %33, align 4
  %34 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %34, align 4
  %memberidx.i.i.i.i303 = getelementptr inbounds %Expression, ptr %34, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i.i303, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %34, i64 0, i32 1
  %memberidx.i.i.i304 = getelementptr inbounds %TypeCastExpression, ptr %34, i64 0, i32 4
  store ptr %25, ptr %memberidx.i.i.i304, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %34, i64 0, i32 3
  store ptr %33, ptr %memberidx1.i.i.i, align 8
  %memberidx3.i.i.i306 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 1
  %35 = load i1, ptr %memberidx3.i.i.i306, align 1
  store i1 %35, ptr %memberidx1.i.i.i.i, align 1
  br label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i302, %if.entry11, %true_block.i
  %common.ret.op.i300 = phi ptr [ null, %if.entry11 ], [ %34, %true_block.i ], [ %25, %ifend.i302 ]
  store ptr %common.ret.op.i300, ptr %memberidx2.i, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend7, %TypeChecker_check_condition.exit
  %memberidx16 = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 4
  %36 = load ptr, ptr %memberidx16, align 8
  %.not109 = icmp eq ptr %36, null
  br i1 %.not109, label %ifend, label %if.entry17

if.entry17:                                       ; preds = %ifend13
  %37 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr nonnull %36)
  br label %ifend.sink.split

common.ret:                                       ; preds = %ifend, %else, %ifend61, %TypeChecker_error.exit146, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit146 ], [ %3, %ifend61 ], [ null, %else ], [ null, %ifend ]
  ret ptr %common.ret.op

ifend25:                                          ; preds = %else
  %memberidx26 = getelementptr inbounds %Expression, ptr %13, i64 0, i32 3
  %38 = load ptr, ptr %memberidx26, align 8
  %39 = load i64, ptr %38, align 4
  %40 = icmp eq i64 %39, 21
  br i1 %40, label %if.entry.i316, label %is_object.exit.thread

if.entry.i316:                                    ; preds = %ifend25, %if.entry.i316
  %.tr5.i = phi ptr [ %41, %if.entry.i316 ], [ %38, %ifend25 ]
  %memberidx1.i315 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %41 = load ptr, ptr %memberidx1.i315, align 8
  %42 = load i64, ptr %41, align 4
  switch i64 %42, label %if.entry27 [
    i64 21, label %if.entry.i316
    i64 13, label %ifend29
  ]

is_object.exit.thread:                            ; preds = %ifend25
  %43 = icmp eq i64 %39, 13
  br i1 %43, label %ifend29.thread, label %if.entry27

ifend29.thread:                                   ; preds = %is_object.exit.thread
  %44 = load ptr, ptr %0, align 8
  br label %if.entry3.i

if.entry27:                                       ; preds = %if.entry.i316, %is_object.exit.thread
  %45 = tail call ptr @malloc(i32 224)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %45, ptr noundef nonnull align 8 dereferenceable(28) @202, i64 28, i1 false)
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 28, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 28, ptr %memberidx2.i.i, align 4
  %47 = load ptr, ptr %memberidx22, align 8
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i119 = getelementptr inbounds %Compiler, ptr %49, i64 0, i32 6
  %50 = load ptr, ptr %memberidx1.i119, align 8
  %51 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %51, align 4
  %memberidx1.i.i120 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 2
  store ptr %48, ptr %memberidx1.i.i120, align 8
  %memberidx2.i.i121 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 1
  store ptr %46, ptr %memberidx2.i.i121, align 8
  %memberidx.i.i122 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 2
  %52 = load i64, ptr %memberidx.i.i122, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 3
  %53 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %52, %53
  br i1 %.not.i.i, label %if.entry27.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry27.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry27
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %.pre347 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry27
  %54 = shl i64 %53, 1
  store i64 %54, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %55 = load ptr, ptr %memberidx2.i.i.i, align 8
  %56 = shl i64 %53, 4
  %57 = tail call ptr @realloc(ptr %55, i64 %56)
  store ptr %57, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i122, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry27.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %58 = phi ptr [ %.pre347, %if.entry27.TypeChecker_error.exit_crit_edge ], [ %57, %if.entry.i.i ]
  %59 = phi i64 [ %52, %if.entry27.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %60 = add i64 %59, 1
  store i64 %60, ptr %memberidx.i.i122, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %58, i64 %59
  store ptr %51, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend29:                                          ; preds = %if.entry.i316
  %61 = load ptr, ptr %0, align 8
  br i1 %40, label %if.entry.i320, label %if.entry3.i

if.entry.i320:                                    ; preds = %ifend29, %if.entry.i320
  %.tr11.i344 = phi ptr [ %62, %if.entry.i320 ], [ %38, %ifend29 ]
  %memberidx1.i319 = getelementptr inbounds %GenericType, ptr %.tr11.i344, i64 0, i32 3
  %62 = load ptr, ptr %memberidx1.i319, align 8
  %63 = load i64, ptr %62, align 4
  %switch = icmp eq i64 %63, 21
  br i1 %switch, label %if.entry.i320, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i320, %ifend29.thread, %ifend29
  %64 = phi ptr [ %61, %ifend29 ], [ %44, %ifend29.thread ], [ %61, %if.entry.i320 ]
  %.tr11.i.lcssa = phi ptr [ %38, %ifend29 ], [ %38, %ifend29.thread ], [ %62, %if.entry.i320 ]
  %memberidx6.i321 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %65 = load ptr, ptr %memberidx6.i321, align 8
  %memberidx.i.i322 = getelementptr inbounds %Program, ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i322, align 8
  %67 = load i64, ptr %65, align 4
  %memberidx.i.i.i323 = getelementptr inbounds %Array_Module_, ptr %66, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i.i.i323, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %68, i64 %67
  %69 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i324 = getelementptr inbounds %Module, ptr %69, i64 0, i32 4
  %70 = load ptr, ptr %memberidx2.i.i324, align 8
  %memberidx3.i.i325 = getelementptr inbounds %TypeId, ptr %65, i64 0, i32 2
  %71 = load i64, ptr %memberidx3.i.i325, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %70, i64 0, i32 1
  %72 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %72, i64 %71
  %73 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx34 = getelementptr inbounds %Class, ptr %73, i64 0, i32 6
  %74 = load ptr, ptr %memberidx34, align 8
  %75 = tail call ptr @malloc(i32 64)
  store i64 6872337336460992351, ptr %75, align 8
  %76 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %76, align 8
  %memberidx.i.i123 = getelementptr inbounds %string, ptr %76, i64 0, i32 1
  store ptr %75, ptr %memberidx.i.i123, align 8
  %memberidx1.i.i124 = getelementptr inbounds %string, ptr %76, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i124, align 4
  %memberidx2.i.i125 = getelementptr inbounds %string, ptr %76, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i125, align 4
  %77 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %76)
  %memberidx.i126 = getelementptr inbounds %Map_string_PropId_, ptr %74, i64 0, i32 1
  %78 = load i64, ptr %memberidx.i126, align 4
  %79 = srem i64 %77, %78
  %80 = load ptr, ptr %74, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %80, i64 %79
  %81 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %81, null
  br i1 %.not.i, label %if.entry35, label %while.entry.i

while.entry.i:                                    ; preds = %if.entry3.i, %else.i
  %82 = phi ptr [ %92, %else.i ], [ %80, %if.entry3.i ]
  %83 = phi i64 [ %93, %else.i ], [ %78, %if.entry3.i ]
  %84 = phi ptr [ %96, %else.i ], [ %81, %if.entry3.i ]
  %hash.0.i = phi i64 [ %95, %else.i ], [ %79, %if.entry3.i ]
  %85 = load ptr, ptr %84, align 8
  %memberidx.i.i127 = getelementptr inbounds %string, ptr %85, i64 0, i32 2
  %86 = load i64, ptr %memberidx.i.i127, align 4
  %87 = load i64, ptr %memberidx1.i.i124, align 4
  %.not.i.i129 = icmp eq i64 %86, %87
  br i1 %.not.i.i129, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i130 = getelementptr inbounds %string, ptr %85, i64 0, i32 1
  %88 = load ptr, ptr %memberidx2.i.i130, align 8
  %89 = load ptr, ptr %memberidx.i.i123, align 8
  %90 = tail call i64 @memcmp(ptr %88, ptr %89, i64 %86)
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre348 = load i64, ptr %memberidx.i126, align 4
  %.pre349 = load ptr, ptr %74, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre350.pre = load ptr, ptr %74, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre350.pre, i64 %hash.0.i
  %.pre351.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre351.pre, null
  br i1 %.not29.i, label %if.entry35, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %92 = phi ptr [ %.pre349, %ifend.i.i.else.i_crit_edge ], [ %82, %while.entry.i ]
  %93 = phi i64 [ %.pre348, %ifend.i.i.else.i_crit_edge ], [ %83, %while.entry.i ]
  %94 = add i64 %hash.0.i, 1
  %95 = srem i64 %94, %93
  %ptridx7.i = getelementptr inbounds ptr, ptr %92, i64 %95
  %96 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %96, null
  br i1 %.not30.i, label %if.entry35, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre351.pre, i64 0, i32 1
  %97 = load ptr, ptr %memberidx15.i, align 8
  %98 = icmp eq ptr %97, null
  br i1 %98, label %if.entry35, label %ifend37

if.entry35:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_string_PropId____getitem__.exit
  %99 = tail call ptr @malloc(i32 368)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(46) %99, ptr noundef nonnull align 8 dereferenceable(46) @203, i64 46, i1 false)
  %100 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %100, align 8
  %memberidx.i.i131 = getelementptr inbounds %string, ptr %100, i64 0, i32 1
  store ptr %99, ptr %memberidx.i.i131, align 8
  %memberidx1.i.i132 = getelementptr inbounds %string, ptr %100, i64 0, i32 2
  store i64 46, ptr %memberidx1.i.i132, align 4
  %memberidx2.i.i133 = getelementptr inbounds %string, ptr %100, i64 0, i32 3
  store i64 46, ptr %memberidx2.i.i133, align 4
  %101 = load ptr, ptr %memberidx22, align 8
  %102 = load ptr, ptr %101, align 8
  %103 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i135 = getelementptr inbounds %Compiler, ptr %103, i64 0, i32 6
  %104 = load ptr, ptr %memberidx1.i135, align 8
  %105 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %105, align 4
  %memberidx1.i.i136 = getelementptr inbounds %FloError, ptr %105, i64 0, i32 2
  store ptr %102, ptr %memberidx1.i.i136, align 8
  %memberidx2.i.i137 = getelementptr inbounds %FloError, ptr %105, i64 0, i32 1
  store ptr %100, ptr %memberidx2.i.i137, align 8
  %memberidx.i.i138 = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 2
  %106 = load i64, ptr %memberidx.i.i138, align 4
  %memberidx1.i2.i139 = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 3
  %107 = load i64, ptr %memberidx1.i2.i139, align 4
  %.not.i.i140 = icmp slt i64 %106, %107
  br i1 %.not.i.i140, label %if.entry35.TypeChecker_error.exit146_crit_edge, label %if.entry.i.i143

if.entry35.TypeChecker_error.exit146_crit_edge:   ; preds = %if.entry35
  %memberidx4.i.i144.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 1
  %.pre361 = load ptr, ptr %memberidx4.i.i144.phi.trans.insert, align 8
  br label %TypeChecker_error.exit146

if.entry.i.i143:                                  ; preds = %if.entry35
  %108 = shl i64 %107, 1
  store i64 %108, ptr %memberidx1.i2.i139, align 4
  %memberidx2.i.i.i142 = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 1
  %109 = load ptr, ptr %memberidx2.i.i.i142, align 8
  %110 = shl i64 %107, 4
  %111 = tail call ptr @realloc(ptr %109, i64 %110)
  store ptr %111, ptr %memberidx2.i.i.i142, align 8
  %.pre360 = load i64, ptr %memberidx.i.i138, align 4
  br label %TypeChecker_error.exit146

TypeChecker_error.exit146:                        ; preds = %if.entry35.TypeChecker_error.exit146_crit_edge, %if.entry.i.i143
  %112 = phi ptr [ %.pre361, %if.entry35.TypeChecker_error.exit146_crit_edge ], [ %111, %if.entry.i.i143 ]
  %113 = phi i64 [ %106, %if.entry35.TypeChecker_error.exit146_crit_edge ], [ %.pre360, %if.entry.i.i143 ]
  %114 = add i64 %113, 1
  store i64 %114, ptr %memberidx.i.i138, align 4
  %ptridx.i.i145 = getelementptr inbounds ptr, ptr %112, i64 %113
  store ptr %105, ptr %ptridx.i.i145, align 8
  br label %common.ret

ifend37:                                          ; preds = %Map_string_PropId____getitem__.exit
  %115 = load ptr, ptr %0, align 8
  %memberidx.i.i147 = getelementptr inbounds %PropId, ptr %97, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i.i147, align 8
  %memberidx.i.i.i148 = getelementptr inbounds %Program, ptr %115, i64 0, i32 1
  %117 = load ptr, ptr %memberidx.i.i.i148, align 8
  %118 = load i64, ptr %116, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %117, i64 0, i32 1
  %119 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %119, i64 %118
  %120 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i149 = getelementptr inbounds %Module, ptr %120, i64 0, i32 4
  %121 = load ptr, ptr %memberidx2.i.i.i149, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %116, i64 0, i32 2
  %122 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %121, i64 0, i32 1
  %123 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %123, i64 %122
  %124 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %125 = load i64, ptr %97, align 4
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend37
  %memberidx1.i151 = getelementptr inbounds %Class, ptr %124, i64 0, i32 5
  %127 = load ptr, ptr %memberidx1.i151, align 8
  %memberidx2.i152 = getelementptr inbounds %PropId, ptr %97, i64 0, i32 2
  %128 = load i64, ptr %memberidx2.i152, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %127, i64 0, i32 1
  %129 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %129, i64 %128
  %130 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i153 = getelementptr inbounds %ClassMethod, ptr %130, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend37
  %memberidx4.i = getelementptr inbounds %Class, ptr %124, i64 0, i32 4
  %131 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %97, i64 0, i32 2
  %132 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %131, i64 0, i32 1
  %133 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i154 = getelementptr inbounds ptr, ptr %133, i64 %132
  %134 = load ptr, ptr %ptridx.i.i154, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %134, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i153, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i150 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx41 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i150, i64 0, i32 2
  %135 = load ptr, ptr %memberidx41, align 8
  %136 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %136, ptr noundef nonnull align 8 dereferenceable(6) @204, i64 6, i1 false)
  %137 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %137, align 8
  %memberidx.i.i155 = getelementptr inbounds %string, ptr %137, i64 0, i32 1
  store ptr %136, ptr %memberidx.i.i155, align 8
  %memberidx1.i.i156 = getelementptr inbounds %string, ptr %137, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i156, align 4
  %memberidx2.i.i157 = getelementptr inbounds %string, ptr %137, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i157, align 4
  %138 = tail call ptr @malloc(i32 41)
  %139 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %139, align 4
  %memberidx.i.i158 = getelementptr inbounds %Expression, ptr %139, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i158, align 4
  %memberidx1.i.i159 = getelementptr inbounds %Expression, ptr %139, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i159, align 1
  %memberidx.i160 = getelementptr inbounds %MemberExpression, ptr %139, i64 0, i32 4
  store ptr %13, ptr %memberidx.i160, align 8
  %memberidx1.i161 = getelementptr inbounds %MemberExpression, ptr %139, i64 0, i32 5
  store ptr %97, ptr %memberidx1.i161, align 8
  %memberidx2.i162 = getelementptr inbounds %Expression, ptr %139, i64 0, i32 3
  store ptr %common.ret.op.i150, ptr %memberidx2.i162, align 8
  %140 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %140, align 8
  %memberidx.i163 = getelementptr inbounds %Array_Expression_, ptr %140, i64 0, i32 2
  store i64 0, ptr %memberidx.i163, align 4
  %memberidx1.i164 = getelementptr inbounds %Array_Expression_, ptr %140, i64 0, i32 3
  store i64 8, ptr %memberidx1.i164, align 4
  %memberidx2.i165 = getelementptr inbounds %Array_Expression_, ptr %140, i64 0, i32 1
  %141 = tail call ptr @malloc(i32 64)
  store ptr %141, ptr %memberidx2.i165, align 8
  store i64 0, ptr %memberidx.i163, align 4
  store i64 8, ptr %138, align 4
  %memberidx.i.i166 = getelementptr inbounds %Expression, ptr %138, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i166, align 4
  %memberidx1.i.i167 = getelementptr inbounds %Expression, ptr %138, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i167, align 1
  %memberidx.i168 = getelementptr inbounds %CallExpression, ptr %138, i64 0, i32 4
  store ptr %139, ptr %memberidx.i168, align 8
  %memberidx1.i169 = getelementptr inbounds %CallExpression, ptr %138, i64 0, i32 5
  store ptr %140, ptr %memberidx1.i169, align 8
  %memberidx2.i170 = getelementptr inbounds %Expression, ptr %138, i64 0, i32 3
  store ptr %135, ptr %memberidx2.i170, align 8
  %142 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr nonnull %137, ptr nonnull %138, ptr %135)
  %memberidx44 = getelementptr inbounds %Var, ptr %142, i64 0, i32 1
  %143 = load ptr, ptr %memberidx44, align 8
  %144 = tail call ptr @malloc(i32 25)
  store i64 1, ptr %144, align 4
  %memberidx.i171 = getelementptr inbounds %VarDeclaration, ptr %144, i64 0, i32 2
  store ptr %143, ptr %memberidx.i171, align 8
  %memberidx1.i172 = getelementptr inbounds %VarDeclaration, ptr %144, i64 0, i32 1
  store ptr %137, ptr %memberidx1.i172, align 8
  %memberidx2.i173 = getelementptr inbounds %VarDeclaration, ptr %144, i64 0, i32 3
  store i1 false, ptr %memberidx2.i173, align 1
  store ptr %144, ptr %memberidx.i, align 8
  %145 = load ptr, ptr %0, align 8
  br label %tailrecurse.i327

tailrecurse.i327:                                 ; preds = %if.entry.i330, %get_class_prop_type.exit
  %.tr11.i326 = phi ptr [ %135, %get_class_prop_type.exit ], [ %147, %if.entry.i330 ]
  %146 = load i64, ptr %.tr11.i326, align 4
  switch i64 %146, label %get_class_from_type.exit340 [
    i64 21, label %if.entry.i330
    i64 13, label %if.entry3.i339
  ]

if.entry.i330:                                    ; preds = %tailrecurse.i327
  %memberidx1.i329 = getelementptr inbounds %GenericType, ptr %.tr11.i326, i64 0, i32 3
  %147 = load ptr, ptr %memberidx1.i329, align 8
  br label %tailrecurse.i327

if.entry3.i339:                                   ; preds = %tailrecurse.i327
  %memberidx6.i331 = getelementptr inbounds %ObjectType, ptr %.tr11.i326, i64 0, i32 1
  %148 = load ptr, ptr %memberidx6.i331, align 8
  %memberidx.i.i332 = getelementptr inbounds %Program, ptr %145, i64 0, i32 1
  %149 = load ptr, ptr %memberidx.i.i332, align 8
  %150 = load i64, ptr %148, align 4
  %memberidx.i.i.i333 = getelementptr inbounds %Array_Module_, ptr %149, i64 0, i32 1
  %151 = load ptr, ptr %memberidx.i.i.i333, align 8
  %ptridx.i.i.i334 = getelementptr inbounds ptr, ptr %151, i64 %150
  %152 = load ptr, ptr %ptridx.i.i.i334, align 8
  %memberidx2.i.i335 = getelementptr inbounds %Module, ptr %152, i64 0, i32 4
  %153 = load ptr, ptr %memberidx2.i.i335, align 8
  %memberidx3.i.i336 = getelementptr inbounds %TypeId, ptr %148, i64 0, i32 2
  %154 = load i64, ptr %memberidx3.i.i336, align 4
  %memberidx.i5.i.i337 = getelementptr inbounds %Array_Class_, ptr %153, i64 0, i32 1
  %155 = load ptr, ptr %memberidx.i5.i.i337, align 8
  %ptridx.i6.i.i338 = getelementptr inbounds ptr, ptr %155, i64 %154
  %156 = load ptr, ptr %ptridx.i6.i.i338, align 8
  br label %get_class_from_type.exit340

get_class_from_type.exit340:                      ; preds = %tailrecurse.i327, %if.entry3.i339
  %common.ret.op.i328 = phi ptr [ %156, %if.entry3.i339 ], [ null, %tailrecurse.i327 ]
  %memberidx47 = getelementptr inbounds %Class, ptr %common.ret.op.i328, i64 0, i32 6
  %157 = load ptr, ptr %memberidx47, align 8
  %158 = tail call ptr @malloc(i32 32)
  store i32 1701736292, ptr %158, align 8
  %159 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %159, align 8
  %memberidx.i.i174 = getelementptr inbounds %string, ptr %159, i64 0, i32 1
  store ptr %158, ptr %memberidx.i.i174, align 8
  %memberidx1.i.i175 = getelementptr inbounds %string, ptr %159, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i175, align 4
  %memberidx2.i.i176 = getelementptr inbounds %string, ptr %159, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i176, align 4
  %160 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %159)
  %memberidx.i177 = getelementptr inbounds %Map_string_PropId_, ptr %157, i64 0, i32 1
  %161 = load i64, ptr %memberidx.i177, align 4
  %162 = srem i64 %160, %161
  %163 = load ptr, ptr %157, align 8
  %ptridx.i178 = getelementptr inbounds ptr, ptr %163, i64 %162
  %164 = load ptr, ptr %ptridx.i178, align 8
  %.not.i179 = icmp eq ptr %164, null
  br i1 %.not.i179, label %Map_string_PropId____getitem__.exit201, label %while.entry.i185

while.entry.i185:                                 ; preds = %get_class_from_type.exit340, %else.i197
  %165 = phi ptr [ %175, %else.i197 ], [ %163, %get_class_from_type.exit340 ]
  %166 = phi i64 [ %176, %else.i197 ], [ %161, %get_class_from_type.exit340 ]
  %167 = phi ptr [ %179, %else.i197 ], [ %164, %get_class_from_type.exit340 ]
  %hash.0.i180 = phi i64 [ %178, %else.i197 ], [ %162, %get_class_from_type.exit340 ]
  %168 = load ptr, ptr %167, align 8
  %memberidx.i.i182 = getelementptr inbounds %string, ptr %168, i64 0, i32 2
  %169 = load i64, ptr %memberidx.i.i182, align 4
  %170 = load i64, ptr %memberidx1.i.i175, align 4
  %.not.i.i184 = icmp eq i64 %169, %170
  br i1 %.not.i.i184, label %ifend.i.i188, label %else.i197

ifend.i.i188:                                     ; preds = %while.entry.i185
  %memberidx2.i.i186 = getelementptr inbounds %string, ptr %168, i64 0, i32 1
  %171 = load ptr, ptr %memberidx2.i.i186, align 8
  %172 = load ptr, ptr %memberidx.i.i174, align 8
  %173 = tail call i64 @memcmp(ptr %171, ptr %172, i64 %169)
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %while.end.i194, label %ifend.i.i188.else.i197_crit_edge

ifend.i.i188.else.i197_crit_edge:                 ; preds = %ifend.i.i188
  %.pre352 = load i64, ptr %memberidx.i177, align 4
  %.pre353 = load ptr, ptr %157, align 8
  br label %else.i197

while.end.i194:                                   ; preds = %ifend.i.i188
  %.pre354.pre = load ptr, ptr %157, align 8
  %ptridx9.i192.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre354.pre, i64 %hash.0.i180
  %.pre355.pre = load ptr, ptr %ptridx9.i192.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i193 = icmp eq ptr %.pre355.pre, null
  br i1 %.not29.i193, label %Map_string_PropId____getitem__.exit201, label %if.entry10.i200

else.i197:                                        ; preds = %ifend.i.i188.else.i197_crit_edge, %while.entry.i185
  %175 = phi ptr [ %.pre353, %ifend.i.i188.else.i197_crit_edge ], [ %165, %while.entry.i185 ]
  %176 = phi i64 [ %.pre352, %ifend.i.i188.else.i197_crit_edge ], [ %166, %while.entry.i185 ]
  %177 = add i64 %hash.0.i180, 1
  %178 = srem i64 %177, %176
  %ptridx7.i195 = getelementptr inbounds ptr, ptr %175, i64 %178
  %179 = load ptr, ptr %ptridx7.i195, align 8
  %.not30.i196 = icmp eq ptr %179, null
  br i1 %.not30.i196, label %Map_string_PropId____getitem__.exit201, label %while.entry.i185

if.entry10.i200:                                  ; preds = %while.end.i194
  %memberidx15.i199 = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre355.pre, i64 0, i32 1
  %180 = load ptr, ptr %memberidx15.i199, align 8
  br label %Map_string_PropId____getitem__.exit201

Map_string_PropId____getitem__.exit201:           ; preds = %else.i197, %get_class_from_type.exit340, %while.end.i194, %if.entry10.i200
  %common.ret.op.i198 = phi ptr [ %180, %if.entry10.i200 ], [ null, %while.end.i194 ], [ null, %get_class_from_type.exit340 ], [ null, %else.i197 ]
  %181 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %181, align 4
  %memberidx.i.i202 = getelementptr inbounds %Expression, ptr %181, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i202, align 4
  %memberidx1.i.i203 = getelementptr inbounds %Expression, ptr %181, i64 0, i32 1
  %memberidx.i204 = getelementptr inbounds %VarAccessExpression, ptr %181, i64 0, i32 4
  store ptr %143, ptr %memberidx.i204, align 8
  %memberidx1.i205 = getelementptr inbounds %Expression, ptr %181, i64 0, i32 3
  store ptr %135, ptr %memberidx1.i205, align 8
  %182 = load i64, ptr %143, align 4
  %183 = icmp eq i64 %182, 2
  store i1 %183, ptr %memberidx1.i.i203, align 1
  %184 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %184, align 4
  %185 = tail call ptr @malloc(i32 41)
  %186 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %186, align 4
  %memberidx.i.i207 = getelementptr inbounds %Expression, ptr %186, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i207, align 4
  %memberidx1.i.i208 = getelementptr inbounds %Expression, ptr %186, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i208, align 1
  %memberidx.i209 = getelementptr inbounds %MemberExpression, ptr %186, i64 0, i32 4
  store ptr %181, ptr %memberidx.i209, align 8
  %memberidx1.i210 = getelementptr inbounds %MemberExpression, ptr %186, i64 0, i32 5
  store ptr %common.ret.op.i198, ptr %memberidx1.i210, align 8
  %memberidx2.i211 = getelementptr inbounds %Expression, ptr %186, i64 0, i32 3
  store ptr %184, ptr %memberidx2.i211, align 8
  store i64 8, ptr %185, align 4
  %memberidx.i.i212 = getelementptr inbounds %Expression, ptr %185, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i212, align 4
  %memberidx1.i.i213 = getelementptr inbounds %Expression, ptr %185, i64 0, i32 1
  %memberidx.i214 = getelementptr inbounds %UnaryExpression, ptr %185, i64 0, i32 4
  store i64 7, ptr %memberidx.i214, align 4
  %memberidx1.i215 = getelementptr inbounds %UnaryExpression, ptr %185, i64 0, i32 5
  store ptr %186, ptr %memberidx1.i215, align 8
  %memberidx2.i216 = getelementptr inbounds %Expression, ptr %185, i64 0, i32 3
  store ptr %184, ptr %memberidx2.i216, align 8
  store i1 false, ptr %memberidx1.i.i213, align 1
  store ptr %185, ptr %memberidx2.i, align 8
  %memberidx49 = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 7
  %187 = load ptr, ptr %memberidx49, align 8
  %memberidx50 = getelementptr inbounds %IdentifierToken, ptr %187, i64 0, i32 2
  %188 = load ptr, ptr %memberidx50, align 8
  %189 = load ptr, ptr %memberidx47, align 8
  %190 = tail call ptr @malloc(i32 32)
  store i32 1954047342, ptr %190, align 8
  %191 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %191, align 8
  %memberidx.i.i218 = getelementptr inbounds %string, ptr %191, i64 0, i32 1
  store ptr %190, ptr %memberidx.i.i218, align 8
  %memberidx1.i.i219 = getelementptr inbounds %string, ptr %191, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i219, align 4
  %memberidx2.i.i220 = getelementptr inbounds %string, ptr %191, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i220, align 4
  %192 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %191)
  %memberidx.i221 = getelementptr inbounds %Map_string_PropId_, ptr %189, i64 0, i32 1
  %193 = load i64, ptr %memberidx.i221, align 4
  %194 = srem i64 %192, %193
  %195 = load ptr, ptr %189, align 8
  %ptridx.i222 = getelementptr inbounds ptr, ptr %195, i64 %194
  %196 = load ptr, ptr %ptridx.i222, align 8
  %.not.i223 = icmp eq ptr %196, null
  br i1 %.not.i223, label %Map_string_PropId____getitem__.exit245, label %while.entry.i229

while.entry.i229:                                 ; preds = %Map_string_PropId____getitem__.exit201, %else.i241
  %197 = phi ptr [ %207, %else.i241 ], [ %195, %Map_string_PropId____getitem__.exit201 ]
  %198 = phi i64 [ %208, %else.i241 ], [ %193, %Map_string_PropId____getitem__.exit201 ]
  %199 = phi ptr [ %211, %else.i241 ], [ %196, %Map_string_PropId____getitem__.exit201 ]
  %hash.0.i224 = phi i64 [ %210, %else.i241 ], [ %194, %Map_string_PropId____getitem__.exit201 ]
  %200 = load ptr, ptr %199, align 8
  %memberidx.i.i226 = getelementptr inbounds %string, ptr %200, i64 0, i32 2
  %201 = load i64, ptr %memberidx.i.i226, align 4
  %202 = load i64, ptr %memberidx1.i.i219, align 4
  %.not.i.i228 = icmp eq i64 %201, %202
  br i1 %.not.i.i228, label %ifend.i.i232, label %else.i241

ifend.i.i232:                                     ; preds = %while.entry.i229
  %memberidx2.i.i230 = getelementptr inbounds %string, ptr %200, i64 0, i32 1
  %203 = load ptr, ptr %memberidx2.i.i230, align 8
  %204 = load ptr, ptr %memberidx.i.i218, align 8
  %205 = tail call i64 @memcmp(ptr %203, ptr %204, i64 %201)
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %while.end.i238, label %ifend.i.i232.else.i241_crit_edge

ifend.i.i232.else.i241_crit_edge:                 ; preds = %ifend.i.i232
  %.pre356 = load i64, ptr %memberidx.i221, align 4
  %.pre357 = load ptr, ptr %189, align 8
  br label %else.i241

while.end.i238:                                   ; preds = %ifend.i.i232
  %.pre358.pre = load ptr, ptr %189, align 8
  %ptridx9.i236.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre358.pre, i64 %hash.0.i224
  %.pre359.pre = load ptr, ptr %ptridx9.i236.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i237 = icmp eq ptr %.pre359.pre, null
  br i1 %.not29.i237, label %Map_string_PropId____getitem__.exit245, label %if.entry10.i244

else.i241:                                        ; preds = %ifend.i.i232.else.i241_crit_edge, %while.entry.i229
  %207 = phi ptr [ %.pre357, %ifend.i.i232.else.i241_crit_edge ], [ %197, %while.entry.i229 ]
  %208 = phi i64 [ %.pre356, %ifend.i.i232.else.i241_crit_edge ], [ %198, %while.entry.i229 ]
  %209 = add i64 %hash.0.i224, 1
  %210 = srem i64 %209, %208
  %ptridx7.i239 = getelementptr inbounds ptr, ptr %207, i64 %210
  %211 = load ptr, ptr %ptridx7.i239, align 8
  %.not30.i240 = icmp eq ptr %211, null
  br i1 %.not30.i240, label %Map_string_PropId____getitem__.exit245, label %while.entry.i229

if.entry10.i244:                                  ; preds = %while.end.i238
  %memberidx15.i243 = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre359.pre, i64 0, i32 1
  %212 = load ptr, ptr %memberidx15.i243, align 8
  br label %Map_string_PropId____getitem__.exit245

Map_string_PropId____getitem__.exit245:           ; preds = %else.i241, %Map_string_PropId____getitem__.exit201, %while.end.i238, %if.entry10.i244
  %common.ret.op.i242 = phi ptr [ %212, %if.entry10.i244 ], [ null, %while.end.i238 ], [ null, %Map_string_PropId____getitem__.exit201 ], [ null, %else.i241 ]
  %213 = load ptr, ptr %0, align 8
  %memberidx.i.i246 = getelementptr inbounds %PropId, ptr %common.ret.op.i242, i64 0, i32 1
  %214 = load ptr, ptr %memberidx.i.i246, align 8
  %memberidx.i.i.i247 = getelementptr inbounds %Program, ptr %213, i64 0, i32 1
  %215 = load ptr, ptr %memberidx.i.i.i247, align 8
  %216 = load i64, ptr %214, align 4
  %memberidx.i.i.i.i248 = getelementptr inbounds %Array_Module_, ptr %215, i64 0, i32 1
  %217 = load ptr, ptr %memberidx.i.i.i.i248, align 8
  %ptridx.i.i.i.i249 = getelementptr inbounds ptr, ptr %217, i64 %216
  %218 = load ptr, ptr %ptridx.i.i.i.i249, align 8
  %memberidx2.i.i.i250 = getelementptr inbounds %Module, ptr %218, i64 0, i32 4
  %219 = load ptr, ptr %memberidx2.i.i.i250, align 8
  %memberidx3.i.i.i251 = getelementptr inbounds %TypeId, ptr %214, i64 0, i32 2
  %220 = load i64, ptr %memberidx3.i.i.i251, align 4
  %memberidx.i5.i.i.i252 = getelementptr inbounds %Array_Class_, ptr %219, i64 0, i32 1
  %221 = load ptr, ptr %memberidx.i5.i.i.i252, align 8
  %ptridx.i6.i.i.i253 = getelementptr inbounds ptr, ptr %221, i64 %220
  %222 = load ptr, ptr %ptridx.i6.i.i.i253, align 8
  %223 = load i64, ptr %common.ret.op.i242, align 4
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %if.entry.i261, label %ifend.i267

if.entry.i261:                                    ; preds = %Map_string_PropId____getitem__.exit245
  %memberidx1.i256 = getelementptr inbounds %Class, ptr %222, i64 0, i32 5
  %225 = load ptr, ptr %memberidx1.i256, align 8
  %memberidx2.i257 = getelementptr inbounds %PropId, ptr %common.ret.op.i242, i64 0, i32 2
  %226 = load i64, ptr %memberidx2.i257, align 4
  %memberidx.i12.i258 = getelementptr inbounds %Array_ClassMethod_, ptr %225, i64 0, i32 1
  %227 = load ptr, ptr %memberidx.i12.i258, align 8
  %ptridx.i13.i259 = getelementptr inbounds ptr, ptr %227, i64 %226
  %228 = load ptr, ptr %ptridx.i13.i259, align 8
  %memberidx3.i260 = getelementptr inbounds %ClassMethod, ptr %228, i64 0, i32 4
  br label %get_class_prop_type.exit268

ifend.i267:                                       ; preds = %Map_string_PropId____getitem__.exit245
  %memberidx4.i262 = getelementptr inbounds %Class, ptr %222, i64 0, i32 4
  %229 = load ptr, ptr %memberidx4.i262, align 8
  %memberidx5.i263 = getelementptr inbounds %PropId, ptr %common.ret.op.i242, i64 0, i32 2
  %230 = load i64, ptr %memberidx5.i263, align 4
  %memberidx.i11.i264 = getelementptr inbounds %Array_ClassField_, ptr %229, i64 0, i32 1
  %231 = load ptr, ptr %memberidx.i11.i264, align 8
  %ptridx.i.i265 = getelementptr inbounds ptr, ptr %231, i64 %230
  %232 = load ptr, ptr %ptridx.i.i265, align 8
  %memberidx6.i266 = getelementptr inbounds %ClassField, ptr %232, i64 0, i32 4
  br label %get_class_prop_type.exit268

get_class_prop_type.exit268:                      ; preds = %if.entry.i261, %ifend.i267
  %common.ret.op.in.i254 = phi ptr [ %memberidx3.i260, %if.entry.i261 ], [ %memberidx6.i266, %ifend.i267 ]
  %common.ret.op.i255 = load ptr, ptr %common.ret.op.in.i254, align 8
  %memberidx53 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i255, i64 0, i32 2
  %233 = load ptr, ptr %memberidx53, align 8
  %234 = tail call ptr @malloc(i32 41)
  %235 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %235, align 4
  %memberidx.i.i269 = getelementptr inbounds %Expression, ptr %235, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i269, align 4
  %memberidx1.i.i270 = getelementptr inbounds %Expression, ptr %235, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i270, align 1
  %memberidx.i271 = getelementptr inbounds %MemberExpression, ptr %235, i64 0, i32 4
  store ptr %181, ptr %memberidx.i271, align 8
  %memberidx1.i272 = getelementptr inbounds %MemberExpression, ptr %235, i64 0, i32 5
  store ptr %common.ret.op.i242, ptr %memberidx1.i272, align 8
  %memberidx2.i273 = getelementptr inbounds %Expression, ptr %235, i64 0, i32 3
  store ptr %common.ret.op.i255, ptr %memberidx2.i273, align 8
  %236 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %236, align 8
  %memberidx.i274 = getelementptr inbounds %Array_Expression_, ptr %236, i64 0, i32 2
  store i64 0, ptr %memberidx.i274, align 4
  %memberidx1.i275 = getelementptr inbounds %Array_Expression_, ptr %236, i64 0, i32 3
  store i64 8, ptr %memberidx1.i275, align 4
  %memberidx2.i276 = getelementptr inbounds %Array_Expression_, ptr %236, i64 0, i32 1
  %237 = tail call ptr @malloc(i32 64)
  store ptr %237, ptr %memberidx2.i276, align 8
  store i64 0, ptr %memberidx.i274, align 4
  store i64 8, ptr %234, align 4
  %memberidx.i.i277 = getelementptr inbounds %Expression, ptr %234, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i277, align 4
  %memberidx1.i.i278 = getelementptr inbounds %Expression, ptr %234, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i278, align 1
  %memberidx.i279 = getelementptr inbounds %CallExpression, ptr %234, i64 0, i32 4
  store ptr %235, ptr %memberidx.i279, align 8
  %memberidx1.i280 = getelementptr inbounds %CallExpression, ptr %234, i64 0, i32 5
  store ptr %236, ptr %memberidx1.i280, align 8
  %memberidx2.i281 = getelementptr inbounds %Expression, ptr %234, i64 0, i32 3
  store ptr %233, ptr %memberidx2.i281, align 8
  %238 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %188, ptr nonnull %234, ptr %233)
  %memberidx56 = getelementptr inbounds %Var, ptr %238, i64 0, i32 1
  %239 = load ptr, ptr %memberidx56, align 8
  %240 = tail call ptr @malloc(i32 25)
  store i64 1, ptr %240, align 4
  %memberidx.i282 = getelementptr inbounds %VarDeclaration, ptr %240, i64 0, i32 2
  store ptr %239, ptr %memberidx.i282, align 8
  %memberidx1.i283 = getelementptr inbounds %VarDeclaration, ptr %240, i64 0, i32 1
  store ptr %188, ptr %memberidx1.i283, align 8
  %memberidx2.i284 = getelementptr inbounds %VarDeclaration, ptr %240, i64 0, i32 3
  store i1 false, ptr %memberidx2.i284, align 1
  store ptr %240, ptr %memberidx1.i, align 8
  %241 = tail call ptr @malloc(i32 49)
  %242 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %242, align 4
  %memberidx.i.i285 = getelementptr inbounds %Expression, ptr %242, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i285, align 4
  %memberidx1.i.i286 = getelementptr inbounds %Expression, ptr %242, i64 0, i32 1
  %memberidx.i287 = getelementptr inbounds %VarAccessExpression, ptr %242, i64 0, i32 4
  store ptr %239, ptr %memberidx.i287, align 8
  %memberidx1.i288 = getelementptr inbounds %Expression, ptr %242, i64 0, i32 3
  store ptr %233, ptr %memberidx1.i288, align 8
  %243 = load i64, ptr %239, align 4
  %244 = icmp eq i64 %243, 2
  store i1 %244, ptr %memberidx1.i.i286, align 1
  store i64 8, ptr %241, align 4
  %memberidx.i.i290 = getelementptr inbounds %Expression, ptr %241, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i290, align 4
  %memberidx1.i.i291 = getelementptr inbounds %Expression, ptr %241, i64 0, i32 1
  %memberidx.i292 = getelementptr inbounds %BinaryExpression, ptr %241, i64 0, i32 4
  store ptr %242, ptr %memberidx.i292, align 8
  %memberidx1.i293 = getelementptr inbounds %BinaryExpression, ptr %241, i64 0, i32 5
  store i64 19, ptr %memberidx1.i293, align 4
  %memberidx2.i294 = getelementptr inbounds %BinaryExpression, ptr %241, i64 0, i32 6
  store ptr %234, ptr %memberidx2.i294, align 8
  %memberidx3.i295 = getelementptr inbounds %Expression, ptr %241, i64 0, i32 3
  store ptr %233, ptr %memberidx3.i295, align 8
  store i1 false, ptr %memberidx1.i.i291, align 1
  br label %ifend.sink.split

ifend61:                                          ; preds = %ifend
  store i1 true, ptr %memberidx2, align 1
  %memberidx63 = getelementptr inbounds %ForStatement, ptr %3, i64 0, i32 5
  %memberidx64 = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 8
  %245 = load ptr, ptr %memberidx64, align 8
  %246 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %245)
  store ptr %246, ptr %memberidx63, align 8
  store i1 %7, ptr %memberidx2, align 1
  %247 = load ptr, ptr %memberidx.i110, align 8
  store ptr %247, ptr %memberidx1.i111, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_statement(ptr %0, ptr %1) unnamed_addr {
  %memberidx = getelementptr inbounds %StatementNode, ptr %1, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 2, label %if.entry6
    i64 3, label %if.entry10
    i64 4, label %if.entry14
    i64 5, label %if.entry18
    i64 6, label %if.entry22
    i64 7, label %if.entry26
    i64 8, label %if.entry30
  ]

common.ret:                                       ; preds = %2, %ifend.i77, %TypeChecker_error.exit.i76, %ifend.i, %TypeChecker_error.exit.i, %if.entry30, %if.entry26, %TypeChecker_check_condition.exit, %if.entry10, %if.entry6, %if.entry2, %TypeChecker_check_if_stamement.exit
  %common.ret.op = phi ptr [ %21, %TypeChecker_check_if_stamement.exit ], [ %22, %if.entry2 ], [ %23, %if.entry6 ], [ %24, %if.entry10 ], [ %41, %TypeChecker_check_condition.exit ], [ %76, %if.entry26 ], [ %78, %if.entry30 ], [ null, %TypeChecker_error.exit.i ], [ %58, %ifend.i ], [ null, %TypeChecker_error.exit.i76 ], [ %75, %ifend.i77 ], [ null, %2 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %memberidx.i81 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %memberidx.i81, align 8
  %5 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %5, align 4
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %5, ptr %4)
  %memberidx.i.i96 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %7 = load ptr, ptr %memberidx.i.i96, align 8
  %memberidx1.i.i97 = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 6
  %8 = load ptr, ptr %memberidx1.i.i97, align 8
  %memberidx2.i.i98 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i.i98, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %TypeChecker_check_condition.exit110, label %ifend.i101

ifend.i101:                                       ; preds = %if.entry
  %memberidx.i100 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx.i100, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %TypeChecker_check_condition.exit110, label %true_block.i108

true_block.i108:                                  ; preds = %ifend.i101
  %14 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %14, align 4
  %15 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %15, align 4
  %memberidx.i.i.i.i102 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i.i102, align 4
  %memberidx1.i.i.i.i103 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  %memberidx.i.i.i104 = getelementptr inbounds %TypeCastExpression, ptr %15, i64 0, i32 4
  store ptr %6, ptr %memberidx.i.i.i104, align 8
  %memberidx1.i.i.i105 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %14, ptr %memberidx1.i.i.i105, align 8
  %memberidx3.i.i.i107 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %16 = load i1, ptr %memberidx3.i.i.i107, align 1
  store i1 %16, ptr %memberidx1.i.i.i.i103, align 1
  br label %TypeChecker_check_condition.exit110

TypeChecker_check_condition.exit110:              ; preds = %ifend.i101, %if.entry, %true_block.i108
  %common.ret.op.i99 = phi ptr [ null, %if.entry ], [ %15, %true_block.i108 ], [ %6, %ifend.i101 ]
  %memberidx1.i82 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 3
  %17 = load ptr, ptr %memberidx1.i82, align 8
  %18 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %17)
  %memberidx2.i = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 4
  %19 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %19, null
  br i1 %.not.i, label %TypeChecker_check_if_stamement.exit, label %true_block.i

true_block.i:                                     ; preds = %TypeChecker_check_condition.exit110
  %20 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr nonnull %19)
  br label %TypeChecker_check_if_stamement.exit

TypeChecker_check_if_stamement.exit:              ; preds = %TypeChecker_check_condition.exit110, %true_block.i
  %ternary.i = phi ptr [ %20, %true_block.i ], [ null, %TypeChecker_check_condition.exit110 ]
  %21 = tail call ptr @malloc(i32 32)
  store i64 0, ptr %21, align 4
  %memberidx.i.i83 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 1
  store ptr %common.ret.op.i99, ptr %memberidx.i.i83, align 8
  %memberidx1.i.i84 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 2
  store ptr %18, ptr %memberidx1.i.i84, align 8
  %memberidx2.i.i = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx2.i.i, align 8
  br label %common.ret

if.entry2:                                        ; preds = %2
  %22 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry6:                                        ; preds = %2
  %23 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry10:                                       ; preds = %2
  %24 = tail call fastcc ptr @TypeChecker_check_for_statement(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry14:                                       ; preds = %2
  %memberidx.i78 = getelementptr inbounds %WhileStatementNode, ptr %1, i64 0, i32 2
  %25 = load ptr, ptr %memberidx.i78, align 8
  %26 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %26, align 4
  %27 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %26, ptr %25)
  %memberidx.i.i85 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %28 = load ptr, ptr %memberidx.i.i85, align 8
  %memberidx1.i.i86 = getelementptr inbounds %Compiler, ptr %28, i64 0, i32 6
  %29 = load ptr, ptr %memberidx1.i.i86, align 8
  %memberidx2.i.i87 = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx2.i.i87, align 4
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %TypeChecker_check_condition.exit, label %ifend.i90

ifend.i90:                                        ; preds = %if.entry14
  %memberidx.i89 = getelementptr inbounds %Expression, ptr %27, i64 0, i32 3
  %32 = load ptr, ptr %memberidx.i89, align 8
  %33 = load i64, ptr %32, align 4
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %TypeChecker_check_condition.exit, label %true_block.i95

true_block.i95:                                   ; preds = %ifend.i90
  %35 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %35, align 4
  %36 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %36, align 4
  %memberidx.i.i.i.i91 = getelementptr inbounds %Expression, ptr %36, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i.i91, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %36, i64 0, i32 1
  %memberidx.i.i.i92 = getelementptr inbounds %TypeCastExpression, ptr %36, i64 0, i32 4
  store ptr %27, ptr %memberidx.i.i.i92, align 8
  %memberidx1.i.i.i93 = getelementptr inbounds %Expression, ptr %36, i64 0, i32 3
  store ptr %35, ptr %memberidx1.i.i.i93, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Expression, ptr %27, i64 0, i32 1
  %37 = load i1, ptr %memberidx3.i.i.i, align 1
  store i1 %37, ptr %memberidx1.i.i.i.i, align 1
  br label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i90, %if.entry14, %true_block.i95
  %common.ret.op.i88 = phi ptr [ null, %if.entry14 ], [ %36, %true_block.i95 ], [ %27, %ifend.i90 ]
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  %38 = load i1, ptr %memberidx1.i, align 1
  store i1 true, ptr %memberidx1.i, align 1
  %memberidx3.i = getelementptr inbounds %WhileStatementNode, ptr %1, i64 0, i32 3
  %39 = load ptr, ptr %memberidx3.i, align 8
  %40 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %39)
  store i1 %38, ptr %memberidx1.i, align 1
  %41 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %41, align 4
  %memberidx.i.i79 = getelementptr inbounds %WhileStatement, ptr %41, i64 0, i32 1
  store ptr %common.ret.op.i88, ptr %memberidx.i.i79, align 8
  %memberidx1.i.i80 = getelementptr inbounds %WhileStatement, ptr %41, i64 0, i32 2
  store ptr %40, ptr %memberidx1.i.i80, align 8
  br label %common.ret

if.entry18:                                       ; preds = %2
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  %42 = load i1, ptr %memberidx.i, align 1
  br i1 %42, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry18
  %43 = tail call ptr @malloc(i32 256)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %43, ptr noundef nonnull align 8 dereferenceable(32) @206, i64 32, i1 false)
  %44 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %44, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %44, i64 0, i32 1
  store ptr %43, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %44, i64 0, i32 2
  store i64 32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %44, i64 0, i32 3
  store i64 32, ptr %memberidx2.i.i.i, align 4
  %45 = load ptr, ptr %1, align 8
  %memberidx.i.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %46 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Compiler, ptr %46, i64 0, i32 6
  %47 = load ptr, ptr %memberidx1.i.i, align 8
  %48 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %48, align 4
  %memberidx1.i.i3.i = getelementptr inbounds %FloError, ptr %48, i64 0, i32 2
  store ptr %45, ptr %memberidx1.i.i3.i, align 8
  %memberidx2.i.i4.i = getelementptr inbounds %FloError, ptr %48, i64 0, i32 1
  store ptr %44, ptr %memberidx2.i.i4.i, align 8
  %memberidx.i.i5.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %49 = load i64, ptr %memberidx.i.i5.i, align 4
  %memberidx1.i2.i.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 3
  %50 = load i64, ptr %memberidx1.i2.i.i, align 4
  %.not.i.i.i = icmp slt i64 %49, %50
  br i1 %.not.i.i.i, label %if.entry.i.TypeChecker_error.exit.i_crit_edge, label %if.entry.i.i.i

if.entry.i.TypeChecker_error.exit.i_crit_edge:    ; preds = %if.entry.i
  %memberidx4.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %.pre114 = load ptr, ptr %memberidx4.i.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry.i
  %51 = shl i64 %50, 1
  store i64 %51, ptr %memberidx1.i2.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %53 = shl i64 %50, 4
  %54 = tail call ptr @realloc(ptr %52, i64 %53)
  store ptr %54, ptr %memberidx2.i.i.i.i, align 8
  %.pre113 = load i64, ptr %memberidx.i.i5.i, align 4
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %if.entry.i.TypeChecker_error.exit.i_crit_edge, %if.entry.i.i.i
  %55 = phi ptr [ %54, %if.entry.i.i.i ], [ %.pre114, %if.entry.i.TypeChecker_error.exit.i_crit_edge ]
  %56 = phi i64 [ %.pre113, %if.entry.i.i.i ], [ %49, %if.entry.i.TypeChecker_error.exit.i_crit_edge ]
  %57 = add i64 %56, 1
  store i64 %57, ptr %memberidx.i.i5.i, align 4
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %55, i64 %56
  store ptr %48, ptr %ptridx.i.i.i, align 8
  br label %common.ret

ifend.i:                                          ; preds = %if.entry18
  %58 = tail call ptr @malloc(i32 8)
  store i64 5, ptr %58, align 4
  br label %common.ret

if.entry22:                                       ; preds = %2
  %memberidx.i58 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  %59 = load i1, ptr %memberidx.i58, align 1
  br i1 %59, label %ifend.i77, label %if.entry.i70

if.entry.i70:                                     ; preds = %if.entry22
  %60 = tail call ptr @malloc(i32 232)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %60, ptr noundef nonnull align 8 dereferenceable(29) @205, i64 29, i1 false)
  %61 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %61, align 8
  %memberidx.i.i.i60 = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  store ptr %60, ptr %memberidx.i.i.i60, align 8
  %memberidx1.i.i.i61 = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  store i64 29, ptr %memberidx1.i.i.i61, align 4
  %memberidx2.i.i.i62 = getelementptr inbounds %string, ptr %61, i64 0, i32 3
  store i64 29, ptr %memberidx2.i.i.i62, align 4
  %62 = load ptr, ptr %1, align 8
  %memberidx.i.i63 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %63 = load ptr, ptr %memberidx.i.i63, align 8
  %memberidx1.i.i64 = getelementptr inbounds %Compiler, ptr %63, i64 0, i32 6
  %64 = load ptr, ptr %memberidx1.i.i64, align 8
  %65 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %65, align 4
  %memberidx1.i.i3.i65 = getelementptr inbounds %FloError, ptr %65, i64 0, i32 2
  store ptr %62, ptr %memberidx1.i.i3.i65, align 8
  %memberidx2.i.i4.i66 = getelementptr inbounds %FloError, ptr %65, i64 0, i32 1
  store ptr %61, ptr %memberidx2.i.i4.i66, align 8
  %memberidx.i.i5.i67 = getelementptr inbounds %Array_FloError_, ptr %64, i64 0, i32 2
  %66 = load i64, ptr %memberidx.i.i5.i67, align 4
  %memberidx1.i2.i.i68 = getelementptr inbounds %Array_FloError_, ptr %64, i64 0, i32 3
  %67 = load i64, ptr %memberidx1.i2.i.i68, align 4
  %.not.i.i.i69 = icmp slt i64 %66, %67
  br i1 %.not.i.i.i69, label %if.entry.i70.TypeChecker_error.exit.i76_crit_edge, label %if.entry.i.i.i73

if.entry.i70.TypeChecker_error.exit.i76_crit_edge: ; preds = %if.entry.i70
  %memberidx4.i.i.i74.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %64, i64 0, i32 1
  %.pre112 = load ptr, ptr %memberidx4.i.i.i74.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i76

if.entry.i.i.i73:                                 ; preds = %if.entry.i70
  %68 = shl i64 %67, 1
  store i64 %68, ptr %memberidx1.i2.i.i68, align 4
  %memberidx2.i.i.i.i72 = getelementptr inbounds %Array_FloError_, ptr %64, i64 0, i32 1
  %69 = load ptr, ptr %memberidx2.i.i.i.i72, align 8
  %70 = shl i64 %67, 4
  %71 = tail call ptr @realloc(ptr %69, i64 %70)
  store ptr %71, ptr %memberidx2.i.i.i.i72, align 8
  %.pre = load i64, ptr %memberidx.i.i5.i67, align 4
  br label %TypeChecker_error.exit.i76

TypeChecker_error.exit.i76:                       ; preds = %if.entry.i70.TypeChecker_error.exit.i76_crit_edge, %if.entry.i.i.i73
  %72 = phi ptr [ %71, %if.entry.i.i.i73 ], [ %.pre112, %if.entry.i70.TypeChecker_error.exit.i76_crit_edge ]
  %73 = phi i64 [ %.pre, %if.entry.i.i.i73 ], [ %66, %if.entry.i70.TypeChecker_error.exit.i76_crit_edge ]
  %74 = add i64 %73, 1
  store i64 %74, ptr %memberidx.i.i5.i67, align 4
  %ptridx.i.i.i75 = getelementptr inbounds ptr, ptr %72, i64 %73
  store ptr %65, ptr %ptridx.i.i.i75, align 8
  br label %common.ret

ifend.i77:                                        ; preds = %if.entry22
  %75 = tail call ptr @malloc(i32 8)
  store i64 6, ptr %75, align 4
  br label %common.ret

if.entry26:                                       ; preds = %2
  %76 = tail call fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry30:                                       ; preds = %2
  %77 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %77, align 4
  %78 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %77, ptr nonnull %1)
  br label %common.ret
}

define internal fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %1, ptr %2) unnamed_addr {
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry25, %3
  %accumulator.tr.ph = phi i1 [ %34, %if.entry25 ], [ true, %3 ]
  %.tr132.ph = phi ptr [ %32, %if.entry25 ], [ %1, %3 ]
  %.tr133.ph = phi ptr [ %33, %if.entry25 ], [ %2, %3 ]
  br label %tailrecurse.outer137

tailrecurse.outer137:                             ; preds = %tailrecurse.outer, %if.entry33
  %.tr132.ph138 = phi ptr [ %.tr132.ph, %tailrecurse.outer ], [ %35, %if.entry33 ]
  %.tr133.ph139 = phi ptr [ %.tr133.ph, %tailrecurse.outer ], [ %36, %if.entry33 ]
  %memberidx5 = getelementptr inbounds %FunctionType, ptr %.tr132.ph138, i64 0, i32 1
  %memberidx13 = getelementptr inbounds %FunctionType, ptr %.tr132.ph138, i64 0, i32 2
  %.pre = load i64, ptr %.tr132.ph138, align 4
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer137, %ifend52
  %4 = phi i64 [ 13, %ifend52 ], [ %.pre, %tailrecurse.outer137 ]
  %.tr133 = phi ptr [ %57, %ifend52 ], [ %.tr133.ph139, %tailrecurse.outer137 ]
  %5 = load i64, ptr %.tr133, align 4
  %.not = icmp eq i64 %4, %5
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %ifend4, %ifend52, %if.entry39, %ifend11, %if.entry2, %tailrecurse, %for.body, %for.cond82, %for.body83, %for.cond82.preheader, %if.entry66, %ifend73, %ifend.i.i, %if.entry60
  %common.ret.op = phi i1 [ %60, %if.entry60 ], [ false, %ifend.i.i ], [ false, %ifend73 ], [ false, %if.entry66 ], [ true, %for.cond82.preheader ], [ %83, %for.body83 ], [ %83, %for.cond82 ], [ false, %for.body ], [ false, %tailrecurse ], [ false, %if.entry2 ], [ false, %ifend11 ], [ true, %if.entry39 ], [ false, %ifend52 ], [ true, %ifend4 ]
  %accumulator.ret.tr = and i1 %accumulator.tr.ph, %common.ret.op
  ret i1 %accumulator.ret.tr

ifend:                                            ; preds = %tailrecurse
  %6 = icmp eq i64 %4, 17
  br i1 %6, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %7 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %Array_Type_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx6, align 4
  %memberidx7 = getelementptr inbounds %FunctionType, ptr %.tr133, i64 0, i32 1
  %9 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_Type_, ptr %9, i64 0, i32 2
  %10 = load i64, ptr %memberidx8, align 4
  %.not119 = icmp eq i64 %8, %10
  br i1 %.not119, label %ifend11, label %common.ret

ifend4thread-pre-split:                           ; preds = %for.cond, %for.cond.preheader
  %.pr = load i64, ptr %.tr132.ph138, align 4
  br label %ifend4

ifend4:                                           ; preds = %ifend4thread-pre-split, %ifend
  %11 = phi i64 [ %.pr, %ifend4thread-pre-split ], [ %4, %ifend ]
  switch i64 %11, label %common.ret [
    i64 16, label %if.entry25
    i64 15, label %if.entry33
    i64 13, label %if.entry39
    i64 14, label %if.entry60
    i64 21, label %if.entry66
  ]

ifend11:                                          ; preds = %if.entry2
  %memberidx12 = getelementptr inbounds %FunctionType, ptr %.tr133, i64 0, i32 2
  %12 = load ptr, ptr %memberidx12, align 8
  %13 = load ptr, ptr %memberidx13, align 8
  %14 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %12, ptr %13)
  br i1 %14, label %for.cond.preheader, label %common.ret

for.cond.preheader:                               ; preds = %ifend11
  %15 = load ptr, ptr %memberidx5, align 8
  %memberidx18156 = getelementptr inbounds %Array_Type_, ptr %15, i64 0, i32 2
  %16 = load i64, ptr %memberidx18156, align 4
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %for.body, label %ifend4thread-pre-split

for.cond:                                         ; preds = %for.body
  %18 = add nuw nsw i64 %storemerge120157, 1
  %19 = load ptr, ptr %memberidx5, align 8
  %memberidx18 = getelementptr inbounds %Array_Type_, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx18, align 4
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %for.body, label %ifend4thread-pre-split

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %22 = phi ptr [ %19, %for.cond ], [ %15, %for.cond.preheader ]
  %storemerge120157 = phi i64 [ %18, %for.cond ], [ 0, %for.cond.preheader ]
  %memberidx.i121 = getelementptr inbounds %Array_Type_, ptr %22, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i121, align 8
  %ptridx.i122 = getelementptr inbounds ptr, ptr %23, i64 %storemerge120157
  %24 = load ptr, ptr %ptridx.i122, align 8
  %25 = load ptr, ptr %memberidx7, align 8
  %memberidx.i123 = getelementptr inbounds %Array_Type_, ptr %25, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i123, align 8
  %ptridx.i124 = getelementptr inbounds ptr, ptr %26, i64 %storemerge120157
  %27 = load ptr, ptr %ptridx.i124, align 8
  %28 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %24, ptr %27)
  br i1 %28, label %for.cond, label %common.ret

if.entry25:                                       ; preds = %ifend4
  %29 = load i64, ptr %memberidx13, align 4
  %memberidx29 = getelementptr inbounds %ArrayType, ptr %.tr133, i64 0, i32 2
  %30 = load i64, ptr %memberidx29, align 4
  %31 = icmp eq i64 %29, %30
  %32 = load ptr, ptr %memberidx5, align 8
  %memberidx31 = getelementptr inbounds %ArrayType, ptr %.tr133, i64 0, i32 1
  %33 = load ptr, ptr %memberidx31, align 8
  %34 = and i1 %accumulator.tr.ph, %31
  br label %tailrecurse.outer

if.entry33:                                       ; preds = %ifend4
  %35 = load ptr, ptr %memberidx5, align 8
  %memberidx37 = getelementptr inbounds %PointerType, ptr %.tr133, i64 0, i32 1
  %36 = load ptr, ptr %memberidx37, align 8
  br label %tailrecurse.outer137

if.entry39:                                       ; preds = %ifend4
  %37 = load ptr, ptr %memberidx5, align 8
  %memberidx43 = getelementptr inbounds %ObjectType, ptr %.tr133, i64 0, i32 1
  %38 = load ptr, ptr %memberidx43, align 8
  %memberidx44 = getelementptr inbounds %TypeId, ptr %37, i64 0, i32 1
  %39 = load i64, ptr %memberidx44, align 4
  %memberidx45 = getelementptr inbounds %TypeId, ptr %38, i64 0, i32 1
  %40 = load i64, ptr %memberidx45, align 4
  %41 = icmp eq i64 %39, %40
  %42 = load i64, ptr %37, align 4
  %43 = load i64, ptr %38, align 4
  %44 = icmp eq i64 %42, %43
  %45 = and i1 %41, %44
  %memberidx48 = getelementptr inbounds %TypeId, ptr %37, i64 0, i32 2
  %46 = load i64, ptr %memberidx48, align 4
  %memberidx49 = getelementptr inbounds %TypeId, ptr %38, i64 0, i32 2
  %47 = load i64, ptr %memberidx49, align 4
  %48 = icmp eq i64 %46, %47
  %49 = and i1 %45, %48
  br i1 %49, label %common.ret, label %ifend52

ifend52:                                          ; preds = %if.entry39
  %50 = load ptr, ptr %0, align 8
  %memberidx.i127 = getelementptr inbounds %Program, ptr %50, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i127, align 8
  %memberidx.i.i128 = getelementptr inbounds %Array_Module_, ptr %51, i64 0, i32 1
  %52 = load ptr, ptr %memberidx.i.i128, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %52, i64 %43
  %53 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %53, i64 0, i32 4
  %54 = load ptr, ptr %memberidx2.i, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_Class_, ptr %54, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %55, i64 %47
  %56 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx54 = getelementptr inbounds %Class, ptr %56, i64 0, i32 2
  %57 = load ptr, ptr %memberidx54, align 8
  %.not118 = icmp eq ptr %57, null
  br i1 %.not118, label %common.ret, label %tailrecurse

if.entry60:                                       ; preds = %ifend4
  %58 = load ptr, ptr %memberidx5, align 8
  %memberidx64 = getelementptr inbounds %EnumType, ptr %.tr133, i64 0, i32 1
  %59 = load ptr, ptr %memberidx64, align 8
  %60 = icmp eq ptr %58, %59
  br label %common.ret

if.entry66:                                       ; preds = %ifend4
  %61 = load ptr, ptr %memberidx5, align 8
  %memberidx70 = getelementptr inbounds %GenericType, ptr %.tr133, i64 0, i32 1
  %62 = load ptr, ptr %memberidx70, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  %64 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %63, %64
  br i1 %.not.i.i, label %ifend.i.i, label %common.ret

ifend.i.i:                                        ; preds = %if.entry66
  %memberidx2.i.i = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  %66 = load ptr, ptr %memberidx3.i.i, align 8
  %67 = tail call i64 @memcmp(ptr %65, ptr %66, i64 %63)
  %.not131 = icmp eq i64 %67, 0
  br i1 %.not131, label %ifend73, label %common.ret

ifend73:                                          ; preds = %ifend.i.i
  %68 = load ptr, ptr %memberidx13, align 8
  %memberidx75 = getelementptr inbounds %Array_Type_, ptr %68, i64 0, i32 2
  %69 = load i64, ptr %memberidx75, align 4
  %memberidx76 = getelementptr inbounds %GenericType, ptr %.tr133, i64 0, i32 2
  %70 = load ptr, ptr %memberidx76, align 8
  %memberidx77 = getelementptr inbounds %Array_Type_, ptr %70, i64 0, i32 2
  %71 = load i64, ptr %memberidx77, align 4
  %.not117 = icmp eq i64 %69, %71
  br i1 %.not117, label %for.cond82.preheader, label %common.ret

for.cond82.preheader:                             ; preds = %ifend73
  %72 = icmp sgt i64 %69, 0
  br i1 %72, label %for.body83, label %common.ret

for.cond82:                                       ; preds = %for.body83
  %73 = add nuw nsw i64 %storemerge154, 1
  %74 = load ptr, ptr %memberidx13, align 8
  %memberidx87 = getelementptr inbounds %Array_Type_, ptr %74, i64 0, i32 2
  %75 = load i64, ptr %memberidx87, align 4
  %76 = icmp slt i64 %73, %75
  br i1 %76, label %for.body83, label %common.ret

for.body83:                                       ; preds = %for.cond82.preheader, %for.cond82
  %77 = phi ptr [ %74, %for.cond82 ], [ %68, %for.cond82.preheader ]
  %storemerge154 = phi i64 [ %73, %for.cond82 ], [ 0, %for.cond82.preheader ]
  %memberidx.i125 = getelementptr inbounds %Array_Type_, ptr %77, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i125, align 8
  %ptridx.i126 = getelementptr inbounds ptr, ptr %78, i64 %storemerge154
  %79 = load ptr, ptr %ptridx.i126, align 8
  %80 = load ptr, ptr %memberidx76, align 8
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %80, i64 0, i32 1
  %81 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %81, i64 %storemerge154
  %82 = load ptr, ptr %ptridx.i, align 8
  %83 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %79, ptr %82)
  br i1 %83, label %for.cond82, label %common.ret
}

define internal fastcc ptr @TypeChecker_create_scope(ptr nocapture readonly %0) unnamed_addr {
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %2 = load i64, ptr %memberidx.i, align 4
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %5, i64 %2
  %6 = load ptr, ptr %ptridx.i.i.i, align 8
  %7 = tail call ptr @malloc(i32 56)
  %8 = load i64, ptr %memberidx.i, align 4
  %memberidx1 = getelementptr inbounds %Module, ptr %6, i64 0, i32 7
  %9 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Scope_, ptr %9, i64 0, i32 2
  %10 = load i64, ptr %memberidx2, align 4
  %11 = tail call ptr @malloc(i32 16)
  store i64 %8, ptr %11, align 4
  %memberidx1.i.i8 = getelementptr inbounds %ScopeId, ptr %11, i64 0, i32 1
  store i64 %10, ptr %memberidx1.i.i8, align 4
  store ptr %11, ptr %7, align 8
  %12 = tail call ptr @malloc(i32 24)
  %13 = tail call ptr @malloc(i32 2048)
  store ptr %13, ptr %12, align 8
  br label %for.body.i16.i

for.body.i16.i:                                   ; preds = %1, %for.body.i16.i
  %i.0.i13.i16 = phi i64 [ 0, %1 ], [ %15, %for.body.i16.i ]
  %14 = load ptr, ptr %12, align 8
  %ptridx.i15.i = getelementptr inbounds ptr, ptr %14, i64 %i.0.i13.i16
  store ptr null, ptr %ptridx.i15.i, align 8
  %15 = add nuw nsw i64 %i.0.i13.i16, 1
  %16 = icmp ult i64 %i.0.i13.i16, 255
  br i1 %16, label %for.body.i16.i, label %Map_string_VarId__constructor.exit.i

Map_string_VarId__constructor.exit.i:             ; preds = %for.body.i16.i
  %memberidx1.i9 = getelementptr inbounds %Scope, ptr %7, i64 0, i32 1
  %memberidx2.i17.i = getelementptr inbounds %Map_string_VarId_, ptr %12, i64 0, i32 1
  store i64 256, ptr %memberidx2.i17.i, align 4
  %memberidx3.i18.i = getelementptr inbounds %Map_string_VarId_, ptr %12, i64 0, i32 2
  store i64 0, ptr %memberidx3.i18.i, align 4
  store ptr %12, ptr %memberidx1.i9, align 8
  %17 = tail call ptr @malloc(i32 24)
  %18 = tail call ptr @malloc(i32 2048)
  store ptr %18, ptr %17, align 8
  br label %for.body.i22.i

for.body.i22.i:                                   ; preds = %Map_string_VarId__constructor.exit.i, %for.body.i22.i
  %i.0.i19.i15 = phi i64 [ 0, %Map_string_VarId__constructor.exit.i ], [ %20, %for.body.i22.i ]
  %19 = load ptr, ptr %17, align 8
  %ptridx.i21.i = getelementptr inbounds ptr, ptr %19, i64 %i.0.i19.i15
  store ptr null, ptr %ptridx.i21.i, align 8
  %20 = add nuw nsw i64 %i.0.i19.i15, 1
  %21 = icmp ult i64 %i.0.i19.i15, 255
  br i1 %21, label %for.body.i22.i, label %Map_string_ClassId__constructor.exit.i

Map_string_ClassId__constructor.exit.i:           ; preds = %for.body.i22.i
  %memberidx2.i = getelementptr inbounds %Scope, ptr %7, i64 0, i32 2
  %memberidx2.i23.i = getelementptr inbounds %Map_string_ClassId_, ptr %17, i64 0, i32 1
  store i64 256, ptr %memberidx2.i23.i, align 4
  %memberidx3.i24.i = getelementptr inbounds %Map_string_ClassId_, ptr %17, i64 0, i32 2
  store i64 0, ptr %memberidx3.i24.i, align 4
  store ptr %17, ptr %memberidx2.i, align 8
  %22 = tail call ptr @malloc(i32 24)
  %23 = tail call ptr @malloc(i32 2048)
  store ptr %23, ptr %22, align 8
  br label %for.body.i28.i

for.body.i28.i:                                   ; preds = %Map_string_ClassId__constructor.exit.i, %for.body.i28.i
  %i.0.i25.i14 = phi i64 [ 0, %Map_string_ClassId__constructor.exit.i ], [ %25, %for.body.i28.i ]
  %24 = load ptr, ptr %22, align 8
  %ptridx.i27.i = getelementptr inbounds ptr, ptr %24, i64 %i.0.i25.i14
  store ptr null, ptr %ptridx.i27.i, align 8
  %25 = add nuw nsw i64 %i.0.i25.i14, 1
  %26 = icmp ult i64 %i.0.i25.i14, 255
  br i1 %26, label %for.body.i28.i, label %Map_string_VarId__constructor.exit31.i

Map_string_VarId__constructor.exit31.i:           ; preds = %for.body.i28.i
  %memberidx3.i = getelementptr inbounds %Scope, ptr %7, i64 0, i32 3
  %memberidx2.i29.i = getelementptr inbounds %Map_string_VarId_, ptr %22, i64 0, i32 1
  store i64 256, ptr %memberidx2.i29.i, align 4
  %memberidx3.i30.i = getelementptr inbounds %Map_string_VarId_, ptr %22, i64 0, i32 2
  store i64 0, ptr %memberidx3.i30.i, align 4
  store ptr %22, ptr %memberidx3.i, align 8
  %27 = tail call ptr @malloc(i32 24)
  %28 = tail call ptr @malloc(i32 2048)
  store ptr %28, ptr %27, align 8
  br label %for.body.i35.i

for.body.i35.i:                                   ; preds = %Map_string_VarId__constructor.exit31.i, %for.body.i35.i
  %i.0.i32.i13 = phi i64 [ 0, %Map_string_VarId__constructor.exit31.i ], [ %30, %for.body.i35.i ]
  %29 = load ptr, ptr %27, align 8
  %ptridx.i34.i = getelementptr inbounds ptr, ptr %29, i64 %i.0.i32.i13
  store ptr null, ptr %ptridx.i34.i, align 8
  %30 = add nuw nsw i64 %i.0.i32.i13, 1
  %31 = icmp ult i64 %i.0.i32.i13, 255
  br i1 %31, label %for.body.i35.i, label %Map_string_EnumId__constructor.exit.i

Map_string_EnumId__constructor.exit.i:            ; preds = %for.body.i35.i
  %memberidx4.i10 = getelementptr inbounds %Scope, ptr %7, i64 0, i32 4
  %memberidx2.i36.i = getelementptr inbounds %Map_string_EnumId_, ptr %27, i64 0, i32 1
  store i64 256, ptr %memberidx2.i36.i, align 4
  %memberidx3.i37.i = getelementptr inbounds %Map_string_EnumId_, ptr %27, i64 0, i32 2
  store i64 0, ptr %memberidx3.i37.i, align 4
  store ptr %27, ptr %memberidx4.i10, align 8
  %32 = tail call ptr @malloc(i32 24)
  %33 = tail call ptr @malloc(i32 2048)
  store ptr %33, ptr %32, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %Map_string_EnumId__constructor.exit.i, %for.body.i.i
  %i.0.i.i12 = phi i64 [ 0, %Map_string_EnumId__constructor.exit.i ], [ %35, %for.body.i.i ]
  %34 = load ptr, ptr %32, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %34, i64 %i.0.i.i12
  store ptr null, ptr %ptridx.i.i, align 8
  %35 = add nuw nsw i64 %i.0.i.i12, 1
  %36 = icmp ult i64 %i.0.i.i12, 255
  br i1 %36, label %for.body.i.i, label %Scope_constructor.exit

Scope_constructor.exit:                           ; preds = %for.body.i.i
  %memberidx5.i = getelementptr inbounds %Scope, ptr %7, i64 0, i32 6
  %memberidx2.i.i11 = getelementptr inbounds %Map_string_Type_, ptr %32, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i11, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_string_Type_, ptr %32, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %32, ptr %memberidx5.i, align 8
  %memberidx6.i = getelementptr inbounds %Scope, ptr %7, i64 0, i32 5
  store ptr null, ptr %memberidx6.i, align 8
  %37 = load ptr, ptr %memberidx1, align 8
  %memberidx.i7 = getelementptr inbounds %Array_Scope_, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx.i7, align 4
  %memberidx1.i = getelementptr inbounds %Array_Scope_, ptr %37, i64 0, i32 3
  %39 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %38, %39
  br i1 %.not.i, label %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge, label %if.entry.i

Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge: ; preds = %Scope_constructor.exit
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Scope_, ptr %37, i64 0, i32 1
  %.pre17 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Scope____sl__.exit

if.entry.i:                                       ; preds = %Scope_constructor.exit
  %40 = shl i64 %39, 1
  store i64 %40, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Scope_, ptr %37, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2.i.i, align 8
  %42 = shl i64 %39, 4
  %43 = tail call ptr @realloc(ptr %41, i64 %42)
  store ptr %43, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i7, align 4
  br label %Array_Scope____sl__.exit

Array_Scope____sl__.exit:                         ; preds = %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge, %if.entry.i
  %44 = phi ptr [ %.pre17, %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge ], [ %43, %if.entry.i ]
  %45 = phi i64 [ %38, %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %46 = add i64 %45, 1
  store i64 %46, ptr %memberidx.i7, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %7, ptr %ptridx.i, align 8
  ret ptr %7
}

define internal fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %6 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %5)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend23, %ifend34, %TypeChecker_error.exit141, %if.entry28, %TypeChecker_error.exit114, %if.entry9, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %89, %if.entry9 ], [ null, %TypeChecker_error.exit114 ], [ %133, %if.entry28 ], [ null, %TypeChecker_error.exit141 ], [ %167, %ifend34 ], [ null, %ifend23 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %8 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %9 = load ptr, ptr %8, align 8
  %memberidx1 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %9, i64 0, i32 5
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = tail call ptr %10(ptr nonnull %8)
  %12 = alloca ptr, align 8
  %13 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %12, ptr nonnull @155, ptr %11)
  %14 = load ptr, ptr %12, align 8
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 %13, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 %13, ptr %memberidx2.i, align 4
  tail call void @free(ptr %11)
  %16 = load ptr, ptr %2, align 8
  %memberidx.i77 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %17 = load ptr, ptr %memberidx.i77, align 8
  %memberidx1.i78 = getelementptr inbounds %Compiler, ptr %17, i64 0, i32 6
  %18 = load ptr, ptr %memberidx1.i78, align 8
  %19 = call ptr @malloc(i32 24)
  store i64 4, ptr %19, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 2
  store ptr %16, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 1
  store ptr %15, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 3
  %21 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %20, %21
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %.pre177 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %22 = shl i64 %21, 1
  store i64 %22, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i.i, align 8
  %24 = shl i64 %21, 4
  %25 = call ptr @realloc(ptr %23, i64 %24)
  store ptr %25, ptr %memberidx2.i.i.i, align 8
  %.pre176 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %26 = phi ptr [ %.pre177, %if.entry.TypeChecker_error.exit_crit_edge ], [ %25, %if.entry.i.i ]
  %27 = phi i64 [ %20, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre176, %if.entry.i.i ]
  %28 = add i64 %27, 1
  store i64 %28, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %26, i64 %27
  store ptr %19, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %4
  %29 = load ptr, ptr %0, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i160, %ifend
  %.tr11.i.in = phi ptr [ %memberidx4, %ifend ], [ %memberidx1.i159, %if.entry.i160 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %30 = load i64, ptr %.tr11.i, align 4
  switch i64 %30, label %get_class_from_type.exit [
    i64 21, label %if.entry.i160
    i64 13, label %if.entry3.i
  ]

if.entry.i160:                                    ; preds = %tailrecurse.i
  %memberidx1.i159 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i161 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %31 = load ptr, ptr %memberidx6.i161, align 8
  %memberidx.i.i162 = getelementptr inbounds %Program, ptr %29, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i.i162, align 8
  %33 = load i64, ptr %31, align 4
  %memberidx.i.i.i163 = getelementptr inbounds %Array_Module_, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i.i.i163, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %34, i64 %33
  %35 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i164 = getelementptr inbounds %Module, ptr %35, i64 0, i32 4
  %36 = load ptr, ptr %memberidx2.i.i164, align 8
  %memberidx3.i.i165 = getelementptr inbounds %TypeId, ptr %31, i64 0, i32 2
  %37 = load i64, ptr %memberidx3.i.i165, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %38, i64 %37
  %39 = load ptr, ptr %ptridx.i6.i.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i158 = phi ptr [ %39, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx5 = getelementptr inbounds %Class, ptr %common.ret.op.i158, i64 0, i32 6
  %40 = load ptr, ptr %memberidx5, align 8
  %41 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %6)
  %memberidx.i79 = getelementptr inbounds %Map_string_PropId_, ptr %40, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i79, align 4
  %43 = srem i64 %41, %42
  %44 = load ptr, ptr %40, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %45, null
  br i1 %.not.i, label %if.entry6, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %get_class_from_type.exit
  %memberidx1.i.i81 = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %46 = phi ptr [ %56, %else.i ], [ %44, %while.entry.i.preheader ]
  %47 = phi i64 [ %57, %else.i ], [ %42, %while.entry.i.preheader ]
  %48 = phi ptr [ %60, %else.i ], [ %45, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %59, %else.i ], [ %43, %while.entry.i.preheader ]
  %49 = load ptr, ptr %48, align 8
  %memberidx.i.i80 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx.i.i80, align 4
  %51 = load i64, ptr %memberidx1.i.i81, align 4
  %.not.i.i82 = icmp eq i64 %50, %51
  br i1 %.not.i.i82, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i83 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i83, align 8
  %53 = load ptr, ptr %memberidx3.i.i, align 8
  %54 = tail call i64 @memcmp(ptr %52, ptr %53, i64 %50)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i79, align 4
  %.pre169 = load ptr, ptr %40, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre170.pre = load ptr, ptr %40, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre170.pre, i64 %hash.0.i
  %.pre171.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre171.pre, null
  br i1 %.not29.i, label %if.entry6, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %56 = phi ptr [ %.pre169, %ifend.i.i.else.i_crit_edge ], [ %46, %while.entry.i ]
  %57 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %47, %while.entry.i ]
  %58 = add i64 %hash.0.i, 1
  %59 = srem i64 %58, %57
  %ptridx7.i = getelementptr inbounds ptr, ptr %56, i64 %59
  %60 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %60, null
  br i1 %.not30.i, label %if.entry6, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre171.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx15.i, align 8
  %62 = icmp eq ptr %61, null
  br i1 %62, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_string_PropId____getitem__.exit
  %63 = add i64 %5, -11
  %64 = icmp ult i64 %63, 2
  br i1 %64, label %if.entry9, label %ifend11

ifend8:                                           ; preds = %Map_string_PropId____getitem__.exit
  %65 = load ptr, ptr %0, align 8
  %memberidx.i.i84 = getelementptr inbounds %PropId, ptr %61, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i84, align 8
  %memberidx.i.i.i85 = getelementptr inbounds %Program, ptr %65, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i.i.i85, align 8
  %68 = load i64, ptr %66, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %69, i64 %68
  %70 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i86 = getelementptr inbounds %Module, ptr %70, i64 0, i32 4
  %71 = load ptr, ptr %memberidx2.i.i.i86, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %66, i64 0, i32 2
  %72 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %71, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %73, i64 %72
  %74 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %75 = load i64, ptr %61, align 4
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend8
  %memberidx1.i88 = getelementptr inbounds %Class, ptr %74, i64 0, i32 5
  %77 = load ptr, ptr %memberidx1.i88, align 8
  %memberidx2.i89 = getelementptr inbounds %PropId, ptr %61, i64 0, i32 2
  %78 = load i64, ptr %memberidx2.i89, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %79, i64 %78
  %80 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %80, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend8
  %memberidx4.i = getelementptr inbounds %Class, ptr %74, i64 0, i32 4
  %81 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %61, i64 0, i32 2
  %82 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %81, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i90 = getelementptr inbounds ptr, ptr %83, i64 %82
  %84 = load ptr, ptr %ptridx.i.i90, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %84, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i87 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx20 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i87, i64 0, i32 1
  %85 = load ptr, ptr %memberidx20, align 8
  %memberidx.i91 = getelementptr inbounds %Array_Type_, ptr %85, i64 0, i32 1
  %86 = load ptr, ptr %memberidx.i91, align 8
  %87 = load ptr, ptr %86, align 8
  %88 = icmp eq ptr %3, null
  br i1 %88, label %if.entry21, label %ifend23

if.entry9:                                        ; preds = %if.entry6
  %89 = tail call ptr @malloc(i32 49)
  %90 = load ptr, ptr %memberidx4, align 8
  %memberidx13 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %91 = load ptr, ptr %memberidx13, align 8
  %92 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %90, ptr %91)
  %93 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %93, align 4
  store i64 8, ptr %89, align 4
  %memberidx.i.i92 = getelementptr inbounds %Expression, ptr %89, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i92, align 4
  %memberidx1.i.i93 = getelementptr inbounds %Expression, ptr %89, i64 0, i32 1
  %memberidx.i94 = getelementptr inbounds %BinaryExpression, ptr %89, i64 0, i32 4
  store ptr %1, ptr %memberidx.i94, align 8
  %memberidx1.i95 = getelementptr inbounds %BinaryExpression, ptr %89, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i95, align 4
  %memberidx2.i96 = getelementptr inbounds %BinaryExpression, ptr %89, i64 0, i32 6
  store ptr %92, ptr %memberidx2.i96, align 8
  %memberidx3.i97 = getelementptr inbounds %Expression, ptr %89, i64 0, i32 3
  store ptr %93, ptr %memberidx3.i97, align 8
  store i1 false, ptr %memberidx1.i.i93, align 1
  br label %common.ret

ifend11:                                          ; preds = %if.entry6
  %94 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %95 = load ptr, ptr %94, align 8
  %memberidx14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %95, i64 0, i32 5
  %96 = load ptr, ptr %memberidx14, align 8
  %97 = tail call ptr %96(ptr nonnull %94)
  %memberidx15 = getelementptr inbounds %Class, ptr %common.ret.op.i158, i64 0, i32 1
  %98 = load ptr, ptr %memberidx15, align 8
  %99 = load ptr, ptr %98, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %99, i64 0, i32 5
  %100 = load ptr, ptr %memberidx16, align 8
  %101 = tail call ptr %100(ptr nonnull %98)
  %102 = load ptr, ptr %6, align 8
  %memberidx17 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %102, i64 0, i32 5
  %103 = load ptr, ptr %memberidx17, align 8
  %104 = tail call ptr %103(ptr nonnull %6)
  %105 = alloca ptr, align 8
  %106 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %105, ptr nonnull @156, ptr %97, ptr %101, ptr %104)
  %107 = load ptr, ptr %105, align 8
  %108 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %108, align 8
  %memberidx.i99 = getelementptr inbounds %string, ptr %108, i64 0, i32 1
  store ptr %107, ptr %memberidx.i99, align 8
  %memberidx1.i100 = getelementptr inbounds %string, ptr %108, i64 0, i32 2
  store i64 %106, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %string, ptr %108, i64 0, i32 3
  store i64 %106, ptr %memberidx2.i101, align 4
  tail call void @free(ptr %97)
  tail call void @free(ptr %101)
  tail call void @free(ptr %104)
  %109 = load ptr, ptr %2, align 8
  %memberidx.i102 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %110 = load ptr, ptr %memberidx.i102, align 8
  %memberidx1.i103 = getelementptr inbounds %Compiler, ptr %110, i64 0, i32 6
  %111 = load ptr, ptr %memberidx1.i103, align 8
  %112 = call ptr @malloc(i32 24)
  store i64 1, ptr %112, align 4
  %memberidx1.i.i104 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 2
  store ptr %109, ptr %memberidx1.i.i104, align 8
  %memberidx2.i.i105 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 1
  store ptr %108, ptr %memberidx2.i.i105, align 8
  %memberidx.i.i106 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 2
  %113 = load i64, ptr %memberidx.i.i106, align 4
  %memberidx1.i2.i107 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 3
  %114 = load i64, ptr %memberidx1.i2.i107, align 4
  %.not.i.i108 = icmp slt i64 %113, %114
  br i1 %.not.i.i108, label %ifend11.TypeChecker_error.exit114_crit_edge, label %if.entry.i.i111

ifend11.TypeChecker_error.exit114_crit_edge:      ; preds = %ifend11
  %memberidx4.i.i112.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 1
  %.pre175 = load ptr, ptr %memberidx4.i.i112.phi.trans.insert, align 8
  br label %TypeChecker_error.exit114

if.entry.i.i111:                                  ; preds = %ifend11
  %115 = shl i64 %114, 1
  store i64 %115, ptr %memberidx1.i2.i107, align 4
  %memberidx2.i.i.i110 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 1
  %116 = load ptr, ptr %memberidx2.i.i.i110, align 8
  %117 = shl i64 %114, 4
  %118 = call ptr @realloc(ptr %116, i64 %117)
  store ptr %118, ptr %memberidx2.i.i.i110, align 8
  %.pre174 = load i64, ptr %memberidx.i.i106, align 4
  br label %TypeChecker_error.exit114

TypeChecker_error.exit114:                        ; preds = %ifend11.TypeChecker_error.exit114_crit_edge, %if.entry.i.i111
  %119 = phi ptr [ %.pre175, %ifend11.TypeChecker_error.exit114_crit_edge ], [ %118, %if.entry.i.i111 ]
  %120 = phi i64 [ %113, %ifend11.TypeChecker_error.exit114_crit_edge ], [ %.pre174, %if.entry.i.i111 ]
  %121 = add i64 %120, 1
  store i64 %121, ptr %memberidx.i.i106, align 4
  %ptridx.i.i113 = getelementptr inbounds ptr, ptr %119, i64 %120
  store ptr %112, ptr %ptridx.i.i113, align 8
  br label %common.ret

if.entry21:                                       ; preds = %get_class_prop_type.exit
  %memberidx24 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %122 = load ptr, ptr %memberidx24, align 8
  %123 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %87, ptr %122)
  br label %ifend23

ifend23:                                          ; preds = %get_class_prop_type.exit, %if.entry21
  %right.0 = phi ptr [ %123, %if.entry21 ], [ %3, %get_class_prop_type.exit ]
  %memberidx.i115 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %124 = load ptr, ptr %memberidx.i115, align 8
  %memberidx1.i116 = getelementptr inbounds %Compiler, ptr %124, i64 0, i32 6
  %125 = load ptr, ptr %memberidx1.i116, align 8
  %memberidx2.i117 = getelementptr inbounds %Array_FloError_, ptr %125, i64 0, i32 2
  %126 = load i64, ptr %memberidx2.i117, align 4
  %127 = icmp sgt i64 %126, 0
  br i1 %127, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend23
  %memberidx.i118 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 2
  %128 = load i64, ptr %memberidx.i118, align 4
  %129 = icmp eq i64 %128, 5
  %130 = add i64 %5, -11
  %131 = icmp ult i64 %130, 2
  %132 = and i1 %131, %129
  br i1 %132, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend27
  %133 = tail call ptr @malloc(i32 49)
  %134 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %134, align 4
  store i64 8, ptr %133, align 4
  %memberidx.i.i119 = getelementptr inbounds %Expression, ptr %133, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i119, align 4
  %memberidx1.i.i120 = getelementptr inbounds %Expression, ptr %133, i64 0, i32 1
  %memberidx.i121 = getelementptr inbounds %BinaryExpression, ptr %133, i64 0, i32 4
  store ptr %1, ptr %memberidx.i121, align 8
  %memberidx1.i122 = getelementptr inbounds %BinaryExpression, ptr %133, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i122, align 4
  %memberidx2.i123 = getelementptr inbounds %BinaryExpression, ptr %133, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i123, align 8
  %memberidx3.i124 = getelementptr inbounds %Expression, ptr %133, i64 0, i32 3
  store ptr %134, ptr %memberidx3.i124, align 8
  store i1 false, ptr %memberidx1.i.i120, align 1
  br label %common.ret

ifend30:                                          ; preds = %ifend27
  %memberidx31 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %135 = load ptr, ptr %memberidx31, align 8
  %136 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %87, ptr %135)
  br i1 %136, label %ifend34, label %if.entry32

if.entry32:                                       ; preds = %ifend30
  %137 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %87)
  %138 = load ptr, ptr %137, align 8
  %memberidx35 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %138, i64 0, i32 5
  %139 = load ptr, ptr %memberidx35, align 8
  %140 = tail call ptr %139(ptr nonnull %137)
  %141 = load ptr, ptr %memberidx31, align 8
  %142 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %141)
  %143 = load ptr, ptr %142, align 8
  %memberidx37 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %143, i64 0, i32 5
  %144 = load ptr, ptr %memberidx37, align 8
  %145 = tail call ptr %144(ptr nonnull %142)
  %146 = alloca ptr, align 8
  %147 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %146, ptr nonnull @154, ptr %140, ptr %145)
  %148 = load ptr, ptr %146, align 8
  %149 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %149, align 8
  %memberidx.i126 = getelementptr inbounds %string, ptr %149, i64 0, i32 1
  store ptr %148, ptr %memberidx.i126, align 8
  %memberidx1.i127 = getelementptr inbounds %string, ptr %149, i64 0, i32 2
  store i64 %147, ptr %memberidx1.i127, align 4
  %memberidx2.i128 = getelementptr inbounds %string, ptr %149, i64 0, i32 3
  store i64 %147, ptr %memberidx2.i128, align 4
  tail call void @free(ptr %140)
  tail call void @free(ptr %145)
  %memberidx38 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %150 = load ptr, ptr %memberidx38, align 8
  %151 = load ptr, ptr %150, align 8
  %152 = load ptr, ptr %memberidx.i115, align 8
  %memberidx1.i130 = getelementptr inbounds %Compiler, ptr %152, i64 0, i32 6
  %153 = load ptr, ptr %memberidx1.i130, align 8
  %154 = call ptr @malloc(i32 24)
  store i64 5, ptr %154, align 4
  %memberidx1.i.i131 = getelementptr inbounds %FloError, ptr %154, i64 0, i32 2
  store ptr %151, ptr %memberidx1.i.i131, align 8
  %memberidx2.i.i132 = getelementptr inbounds %FloError, ptr %154, i64 0, i32 1
  store ptr %149, ptr %memberidx2.i.i132, align 8
  %memberidx.i.i133 = getelementptr inbounds %Array_FloError_, ptr %153, i64 0, i32 2
  %155 = load i64, ptr %memberidx.i.i133, align 4
  %memberidx1.i2.i134 = getelementptr inbounds %Array_FloError_, ptr %153, i64 0, i32 3
  %156 = load i64, ptr %memberidx1.i2.i134, align 4
  %.not.i.i135 = icmp slt i64 %155, %156
  br i1 %.not.i.i135, label %if.entry32.TypeChecker_error.exit141_crit_edge, label %if.entry.i.i138

if.entry32.TypeChecker_error.exit141_crit_edge:   ; preds = %if.entry32
  %memberidx4.i.i139.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %153, i64 0, i32 1
  %.pre173 = load ptr, ptr %memberidx4.i.i139.phi.trans.insert, align 8
  br label %TypeChecker_error.exit141

if.entry.i.i138:                                  ; preds = %if.entry32
  %157 = shl i64 %156, 1
  store i64 %157, ptr %memberidx1.i2.i134, align 4
  %memberidx2.i.i.i137 = getelementptr inbounds %Array_FloError_, ptr %153, i64 0, i32 1
  %158 = load ptr, ptr %memberidx2.i.i.i137, align 8
  %159 = shl i64 %156, 4
  %160 = call ptr @realloc(ptr %158, i64 %159)
  store ptr %160, ptr %memberidx2.i.i.i137, align 8
  %.pre172 = load i64, ptr %memberidx.i.i133, align 4
  br label %TypeChecker_error.exit141

TypeChecker_error.exit141:                        ; preds = %if.entry32.TypeChecker_error.exit141_crit_edge, %if.entry.i.i138
  %161 = phi ptr [ %.pre173, %if.entry32.TypeChecker_error.exit141_crit_edge ], [ %160, %if.entry.i.i138 ]
  %162 = phi i64 [ %155, %if.entry32.TypeChecker_error.exit141_crit_edge ], [ %.pre172, %if.entry.i.i138 ]
  %163 = add i64 %162, 1
  store i64 %163, ptr %memberidx.i.i133, align 4
  %ptridx.i.i140 = getelementptr inbounds ptr, ptr %161, i64 %162
  store ptr %154, ptr %ptridx.i.i140, align 8
  br label %common.ret

ifend34:                                          ; preds = %ifend30
  %164 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %164, align 4
  %memberidx.i.i142 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i142, align 4
  %memberidx1.i.i143 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i143, align 1
  %memberidx.i144 = getelementptr inbounds %MemberExpression, ptr %164, i64 0, i32 4
  store ptr %1, ptr %memberidx.i144, align 8
  %memberidx1.i145 = getelementptr inbounds %MemberExpression, ptr %164, i64 0, i32 5
  store ptr %61, ptr %memberidx1.i145, align 8
  %memberidx2.i146 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 3
  store ptr %common.ret.op.i87, ptr %memberidx2.i146, align 8
  %165 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %165, align 8
  %memberidx.i147 = getelementptr inbounds %Array_Expression_, ptr %165, i64 0, i32 2
  store i64 0, ptr %memberidx.i147, align 4
  %memberidx1.i148 = getelementptr inbounds %Array_Expression_, ptr %165, i64 0, i32 3
  store i64 8, ptr %memberidx1.i148, align 4
  %memberidx2.i149 = getelementptr inbounds %Array_Expression_, ptr %165, i64 0, i32 1
  %166 = tail call ptr @malloc(i32 64)
  store ptr %166, ptr %memberidx2.i149, align 8
  store ptr %right.0, ptr %166, align 8
  store i64 1, ptr %memberidx.i147, align 4
  %167 = tail call ptr @malloc(i32 41)
  %memberidx42 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i87, i64 0, i32 2
  %168 = load ptr, ptr %memberidx42, align 8
  store i64 8, ptr %167, align 4
  %memberidx.i.i150 = getelementptr inbounds %Expression, ptr %167, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i150, align 4
  %memberidx1.i.i151 = getelementptr inbounds %Expression, ptr %167, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i151, align 1
  %memberidx.i152 = getelementptr inbounds %CallExpression, ptr %167, i64 0, i32 4
  store ptr %164, ptr %memberidx.i152, align 8
  %memberidx1.i153 = getelementptr inbounds %CallExpression, ptr %167, i64 0, i32 5
  store ptr %165, ptr %memberidx1.i153, align 8
  %memberidx2.i154 = getelementptr inbounds %Expression, ptr %167, i64 0, i32 3
  store ptr %168, ptr %memberidx2.i154, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %5)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %7 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 6
  %8 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %if.entry38, %TypeChecker_error.exit127, %if.entry31, %ifend24, %TypeChecker_error.exit, %if.entry13, %if.entry7
  %common.ret.op = phi ptr [ %16, %if.entry7 ], [ %21, %if.entry13 ], [ null, %TypeChecker_error.exit ], [ %56, %ifend24 ], [ %65, %if.entry31 ], [ null, %TypeChecker_error.exit127 ], [ %102, %if.entry38 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %memberidx2 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %12 = load i1, ptr %memberidx3, align 1
  switch i64 %4, label %ifend12 [
    i64 6, label %if.entry4
    i64 7, label %if.entry10
  ]

if.entry4:                                        ; preds = %ifend
  %13 = load i64, ptr %11, align 4
  %14 = add i64 %13, -1
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %if.entry7, label %ifend30.split

if.entry7:                                        ; preds = %if.entry4
  %16 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %16, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %16, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %16, i64 0, i32 1
  %memberidx.i72 = getelementptr inbounds %UnaryExpression, ptr %16, i64 0, i32 4
  store i64 6, ptr %memberidx.i72, align 4
  %memberidx1.i73 = getelementptr inbounds %UnaryExpression, ptr %16, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i73, align 8
  %memberidx2.i74 = getelementptr inbounds %Expression, ptr %16, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i74, align 8
  store i1 %12, ptr %memberidx1.i.i, align 1
  br label %common.ret

if.entry10:                                       ; preds = %ifend
  %17 = load i64, ptr %11, align 4
  %18 = icmp ult i64 %17, 12
  br i1 %18, label %if.entry13, label %ifend30.split

ifend12:                                          ; preds = %ifend
  %19 = add i64 %4, -2
  %20 = icmp ult i64 %19, 4
  br i1 %20, label %if.entry16, label %ifend18

if.entry13:                                       ; preds = %if.entry10
  %21 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %21, align 4
  %memberidx.i.i75 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i75, align 4
  %memberidx1.i.i76 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %memberidx.i77 = getelementptr inbounds %UnaryExpression, ptr %21, i64 0, i32 4
  store i64 7, ptr %memberidx.i77, align 4
  %memberidx1.i78 = getelementptr inbounds %UnaryExpression, ptr %21, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i78, align 8
  %memberidx2.i79 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i79, align 8
  store i1 %12, ptr %memberidx1.i.i76, align 1
  br label %common.ret

if.entry16:                                       ; preds = %ifend12
  %22 = load i64, ptr %11, align 4
  %23 = add i64 %22, -1
  %24 = icmp ult i64 %23, 11
  %25 = icmp eq i64 %22, 15
  %26 = or i1 %25, %24
  br i1 %26, label %if.entry19, label %ifend18

ifend18:                                          ; preds = %if.entry16, %ifend12
  switch i64 %4, label %ifend30.split [
    i64 8, label %if.entry28
    i64 1, label %if.entry35
  ]

if.entry19:                                       ; preds = %if.entry16
  %memberidx.i81 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i81, align 4
  switch i64 %27, label %if.entry22 [
    i64 7, label %if.entry.i
    i64 12, label %check_is_var.exit
    i64 13, label %ifend24
  ]

if.entry.i:                                       ; preds = %if.entry19
  %memberidx1.i82 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %28 = load ptr, ptr %memberidx1.i82, align 8
  %29 = load i64, ptr %28, align 4
  %30 = icmp eq i64 %29, 1
  br i1 %30, label %ifend24, label %if.entry22

check_is_var.exit:                                ; preds = %if.entry19
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %31 = load ptr, ptr %memberidx7.i, align 8
  %32 = load i64, ptr %31, align 4
  %33 = icmp eq i64 %32, 1
  br i1 %33, label %ifend24, label %if.entry22

if.entry22:                                       ; preds = %if.entry.i, %if.entry19, %check_is_var.exit
  %34 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %35 = load ptr, ptr %34, align 8
  %memberidx25 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %35, i64 0, i32 5
  %36 = load ptr, ptr %memberidx25, align 8
  %37 = tail call ptr %36(ptr nonnull %34)
  %38 = alloca ptr, align 8
  %39 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %38, ptr nonnull @162, ptr %37)
  %40 = load ptr, ptr %38, align 8
  %41 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %41, align 8
  %memberidx.i83 = getelementptr inbounds %string, ptr %41, i64 0, i32 1
  store ptr %40, ptr %memberidx.i83, align 8
  %memberidx1.i84 = getelementptr inbounds %string, ptr %41, i64 0, i32 2
  store i64 %39, ptr %memberidx1.i84, align 4
  %memberidx2.i85 = getelementptr inbounds %string, ptr %41, i64 0, i32 3
  store i64 %39, ptr %memberidx2.i85, align 4
  tail call void @free(ptr %37)
  %42 = load ptr, ptr %memberidx1, align 8
  %43 = load ptr, ptr %42, align 8
  %44 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i87 = getelementptr inbounds %Compiler, ptr %44, i64 0, i32 6
  %45 = load ptr, ptr %memberidx1.i87, align 8
  %46 = call ptr @malloc(i32 24)
  store i64 4, ptr %46, align 4
  %memberidx1.i.i88 = getelementptr inbounds %FloError, ptr %46, i64 0, i32 2
  store ptr %43, ptr %memberidx1.i.i88, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %46, i64 0, i32 1
  store ptr %41, ptr %memberidx2.i.i, align 8
  %memberidx.i.i89 = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 2
  %47 = load i64, ptr %memberidx.i.i89, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 3
  %48 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %47, %48
  br i1 %.not.i.i, label %if.entry22.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry22.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry22
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 1
  %.pre142 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry22
  %49 = shl i64 %48, 1
  store i64 %49, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 1
  %50 = load ptr, ptr %memberidx2.i.i.i, align 8
  %51 = shl i64 %48, 4
  %52 = call ptr @realloc(ptr %50, i64 %51)
  store ptr %52, ptr %memberidx2.i.i.i, align 8
  %.pre141 = load i64, ptr %memberidx.i.i89, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry22.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %53 = phi ptr [ %.pre142, %if.entry22.TypeChecker_error.exit_crit_edge ], [ %52, %if.entry.i.i ]
  %54 = phi i64 [ %47, %if.entry22.TypeChecker_error.exit_crit_edge ], [ %.pre141, %if.entry.i.i ]
  %55 = add i64 %54, 1
  store i64 %55, ptr %memberidx.i.i89, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %53, i64 %54
  store ptr %46, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend24:                                          ; preds = %if.entry.i, %if.entry19, %check_is_var.exit
  %56 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %56, align 4
  %memberidx.i.i90 = getelementptr inbounds %Expression, ptr %56, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i90, align 4
  %memberidx1.i.i91 = getelementptr inbounds %Expression, ptr %56, i64 0, i32 1
  %memberidx.i92 = getelementptr inbounds %UnaryExpression, ptr %56, i64 0, i32 4
  store i64 %4, ptr %memberidx.i92, align 4
  %memberidx1.i93 = getelementptr inbounds %UnaryExpression, ptr %56, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i93, align 8
  %memberidx2.i94 = getelementptr inbounds %Expression, ptr %56, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i94, align 8
  store i1 false, ptr %memberidx1.i.i91, align 1
  br label %common.ret

if.entry28:                                       ; preds = %ifend18
  %memberidx.i96 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %57 = load i64, ptr %memberidx.i96, align 4
  switch i64 %57, label %ifend30.split [
    i64 7, label %if.entry.i99
    i64 12, label %check_is_var.exit104
    i64 13, label %if.entry31
  ]

if.entry.i99:                                     ; preds = %if.entry28
  %memberidx1.i98 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %58 = load ptr, ptr %memberidx1.i98, align 8
  %59 = load i64, ptr %58, align 4
  %60 = icmp eq i64 %59, 1
  br i1 %60, label %if.entry31, label %ifend30.split

check_is_var.exit104:                             ; preds = %if.entry28
  %memberidx7.i101 = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %61 = load ptr, ptr %memberidx7.i101, align 8
  %62 = load i64, ptr %61, align 4
  %63 = icmp eq i64 %62, 1
  br i1 %63, label %if.entry31, label %ifend30.split

ifend30.split:                                    ; preds = %if.entry4, %if.entry10, %check_is_var.exit104, %if.entry28, %if.entry.i99, %ifend18
  %64 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %.pre = load ptr, ptr %64, align 8
  br label %ifend37

if.entry31:                                       ; preds = %if.entry.i99, %if.entry28, %check_is_var.exit104
  %65 = tail call ptr @malloc(i32 41)
  %66 = tail call ptr @malloc(i32 16)
  %67 = load ptr, ptr %memberidx2, align 8
  store i64 15, ptr %66, align 4
  %memberidx.i105 = getelementptr inbounds %PointerType, ptr %66, i64 0, i32 1
  store ptr %67, ptr %memberidx.i105, align 8
  store i64 8, ptr %65, align 4
  %memberidx.i.i106 = getelementptr inbounds %Expression, ptr %65, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i106, align 4
  %memberidx1.i.i107 = getelementptr inbounds %Expression, ptr %65, i64 0, i32 1
  %memberidx.i108 = getelementptr inbounds %UnaryExpression, ptr %65, i64 0, i32 4
  store i64 8, ptr %memberidx.i108, align 4
  %memberidx1.i109 = getelementptr inbounds %UnaryExpression, ptr %65, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i109, align 8
  %memberidx2.i110 = getelementptr inbounds %Expression, ptr %65, i64 0, i32 3
  store ptr %66, ptr %memberidx2.i110, align 8
  store i1 false, ptr %memberidx1.i.i107, align 1
  br label %common.ret

if.entry35:                                       ; preds = %ifend18
  %68 = load i64, ptr %11, align 4
  %69 = icmp eq i64 %68, 21
  br i1 %69, label %if.entry.i138, label %is_object.exit

if.entry.i138:                                    ; preds = %if.entry35, %if.entry.i138
  %.tr5.i = phi ptr [ %70, %if.entry.i138 ], [ %11, %if.entry35 ]
  %memberidx1.i137 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %70 = load ptr, ptr %memberidx1.i137, align 8
  %71 = load i64, ptr %70, align 4
  %72 = icmp eq i64 %71, 21
  br i1 %72, label %if.entry.i138, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i138, %if.entry35
  %.lcssa.i = phi i64 [ %68, %if.entry35 ], [ %71, %if.entry.i138 ]
  %73 = icmp eq i64 %.lcssa.i, 13
  %74 = icmp eq i64 %68, 15
  %75 = or i1 %74, %73
  br i1 %75, label %if.entry38, label %if.entry35.split

if.entry35.split:                                 ; preds = %is_object.exit
  %76 = tail call ptr @malloc(i32 8)
  store i8 38, ptr %76, align 8
  %77 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %77, align 8
  %memberidx.i.i36.i = getelementptr inbounds %string, ptr %77, i64 0, i32 1
  store ptr %76, ptr %memberidx.i.i36.i, align 8
  %memberidx1.i.i37.i = getelementptr inbounds %string, ptr %77, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i37.i, align 4
  %memberidx2.i.i38.i = getelementptr inbounds %string, ptr %77, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i38.i, align 4
  br label %ifend37

ifend37:                                          ; preds = %if.entry35.split, %ifend30.split
  %78 = phi ptr [ %.pre, %ifend30.split ], [ @VTablestring, %if.entry35.split ]
  %phi.call = phi ptr [ %64, %ifend30.split ], [ %77, %if.entry35.split ]
  %memberidx41 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %78, i64 0, i32 5
  %79 = load ptr, ptr %memberidx41, align 8
  %80 = tail call ptr %79(ptr nonnull %phi.call)
  %81 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %11)
  %82 = load ptr, ptr %81, align 8
  %memberidx42 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %82, i64 0, i32 5
  %83 = load ptr, ptr %memberidx42, align 8
  %84 = tail call ptr %83(ptr nonnull %81)
  %85 = alloca ptr, align 8
  %86 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %85, ptr nonnull @163, ptr %80, ptr %84)
  %87 = load ptr, ptr %85, align 8
  %88 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %88, align 8
  %memberidx.i112 = getelementptr inbounds %string, ptr %88, i64 0, i32 1
  store ptr %87, ptr %memberidx.i112, align 8
  %memberidx1.i113 = getelementptr inbounds %string, ptr %88, i64 0, i32 2
  store i64 %86, ptr %memberidx1.i113, align 4
  %memberidx2.i114 = getelementptr inbounds %string, ptr %88, i64 0, i32 3
  store i64 %86, ptr %memberidx2.i114, align 4
  tail call void @free(ptr %80)
  tail call void @free(ptr %84)
  %89 = load ptr, ptr %2, align 8
  %90 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i116 = getelementptr inbounds %Compiler, ptr %90, i64 0, i32 6
  %91 = load ptr, ptr %memberidx1.i116, align 8
  %92 = call ptr @malloc(i32 24)
  store i64 5, ptr %92, align 4
  %memberidx1.i.i117 = getelementptr inbounds %FloError, ptr %92, i64 0, i32 2
  store ptr %89, ptr %memberidx1.i.i117, align 8
  %memberidx2.i.i118 = getelementptr inbounds %FloError, ptr %92, i64 0, i32 1
  store ptr %88, ptr %memberidx2.i.i118, align 8
  %memberidx.i.i119 = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 2
  %93 = load i64, ptr %memberidx.i.i119, align 4
  %memberidx1.i2.i120 = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 3
  %94 = load i64, ptr %memberidx1.i2.i120, align 4
  %.not.i.i121 = icmp slt i64 %93, %94
  br i1 %.not.i.i121, label %ifend37.TypeChecker_error.exit127_crit_edge, label %if.entry.i.i124

ifend37.TypeChecker_error.exit127_crit_edge:      ; preds = %ifend37
  %memberidx4.i.i125.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 1
  %.pre140 = load ptr, ptr %memberidx4.i.i125.phi.trans.insert, align 8
  br label %TypeChecker_error.exit127

if.entry.i.i124:                                  ; preds = %ifend37
  %95 = shl i64 %94, 1
  store i64 %95, ptr %memberidx1.i2.i120, align 4
  %memberidx2.i.i.i123 = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 1
  %96 = load ptr, ptr %memberidx2.i.i.i123, align 8
  %97 = shl i64 %94, 4
  %98 = call ptr @realloc(ptr %96, i64 %97)
  store ptr %98, ptr %memberidx2.i.i.i123, align 8
  %.pre139 = load i64, ptr %memberidx.i.i119, align 4
  br label %TypeChecker_error.exit127

TypeChecker_error.exit127:                        ; preds = %ifend37.TypeChecker_error.exit127_crit_edge, %if.entry.i.i124
  %99 = phi ptr [ %.pre140, %ifend37.TypeChecker_error.exit127_crit_edge ], [ %98, %if.entry.i.i124 ]
  %100 = phi i64 [ %93, %ifend37.TypeChecker_error.exit127_crit_edge ], [ %.pre139, %if.entry.i.i124 ]
  %101 = add i64 %100, 1
  store i64 %101, ptr %memberidx.i.i119, align 4
  %ptridx.i.i126 = getelementptr inbounds ptr, ptr %99, i64 %100
  store ptr %92, ptr %ptridx.i.i126, align 8
  br label %common.ret

if.entry38:                                       ; preds = %is_object.exit
  %102 = tail call ptr @malloc(i32 41)
  %103 = tail call ptr @malloc(i32 8)
  store i64 12, ptr %103, align 4
  store i64 8, ptr %102, align 4
  %memberidx.i.i128 = getelementptr inbounds %Expression, ptr %102, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i128, align 4
  %memberidx1.i.i129 = getelementptr inbounds %Expression, ptr %102, i64 0, i32 1
  %memberidx.i130 = getelementptr inbounds %UnaryExpression, ptr %102, i64 0, i32 4
  store i64 1, ptr %memberidx.i130, align 4
  %memberidx1.i131 = getelementptr inbounds %UnaryExpression, ptr %102, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i131, align 8
  %memberidx2.i132 = getelementptr inbounds %Expression, ptr %102, i64 0, i32 3
  store ptr %103, ptr %memberidx2.i132, align 8
  store i1 false, ptr %memberidx1.i.i129, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 3
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %3)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %5 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %5, i64 0, i32 6
  %6 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend29, %ifend4, %2, %TypeChecker_error.exit139, %TypeChecker_error.exit118, %TypeChecker_error.exit102, %TypeChecker_error.exit, %ifend13
  %common.ret.op = phi ptr [ %42, %ifend13 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit102 ], [ null, %TypeChecker_error.exit118 ], [ null, %TypeChecker_error.exit139 ], [ null, %2 ], [ null, %ifend4 ], [ null, %ifend29 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %9 = load i64, ptr %4, align 4
  %10 = icmp eq i64 %9, 21
  br i1 %10, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx5 = getelementptr inbounds %GenericType, ptr %4, i64 0, i32 3
  %11 = load ptr, ptr %memberidx5, align 8
  br label %ifend4

ifend4:                                           ; preds = %ifend, %if.entry2
  %12 = phi ptr [ %4, %ifend ], [ %11, %if.entry2 ]
  %args = alloca ptr, align 8
  %13 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %13, align 8
  %memberidx.i74 = getelementptr inbounds %Array_Expression_, ptr %13, i64 0, i32 2
  store i64 0, ptr %memberidx.i74, align 4
  %memberidx1.i75 = getelementptr inbounds %Array_Expression_, ptr %13, i64 0, i32 3
  store i64 8, ptr %memberidx1.i75, align 4
  %memberidx2.i76 = getelementptr inbounds %Array_Expression_, ptr %13, i64 0, i32 1
  %14 = tail call ptr @malloc(i32 64)
  store ptr %14, ptr %memberidx2.i76, align 8
  store i64 0, ptr %memberidx.i74, align 4
  store ptr %13, ptr %args, align 8
  %15 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i78 = getelementptr inbounds %Compiler, ptr %15, i64 0, i32 6
  %16 = load ptr, ptr %memberidx1.i78, align 8
  %memberidx2.i79 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %17 = load i64, ptr %memberidx2.i79, align 4
  %18 = icmp sgt i64 %17, 0
  br i1 %18, label %common.ret, label %ifend10

ifend10:                                          ; preds = %ifend4
  %19 = load i64, ptr %4, align 4
  %20 = icmp eq i64 %19, 21
  br i1 %20, label %if.entry.i146, label %is_object.exit.thread

if.entry.i146:                                    ; preds = %ifend10, %if.entry.i146
  %.tr5.i = phi ptr [ %21, %if.entry.i146 ], [ %4, %ifend10 ]
  %memberidx1.i145 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %21 = load ptr, ptr %memberidx1.i145, align 8
  %22 = load i64, ptr %21, align 4
  switch i64 %22, label %else12 [
    i64 21, label %if.entry.i146
    i64 13, label %if.entry11
  ]

is_object.exit.thread:                            ; preds = %ifend10
  switch i64 %19, label %else23 [
    i64 13, label %if.entry11.thread
    i64 15, label %if.entry22
  ]

if.entry11.thread:                                ; preds = %is_object.exit.thread
  %23 = load ptr, ptr %0, align 8
  br label %if.entry3.i

if.entry11:                                       ; preds = %if.entry.i146
  %24 = load ptr, ptr %0, align 8
  br i1 %20, label %if.entry.i148, label %if.entry3.i

if.entry.i148:                                    ; preds = %if.entry11, %if.entry.i148
  %.tr11.i153 = phi ptr [ %25, %if.entry.i148 ], [ %4, %if.entry11 ]
  %memberidx1.i147 = getelementptr inbounds %GenericType, ptr %.tr11.i153, i64 0, i32 3
  %25 = load ptr, ptr %memberidx1.i147, align 8
  %26 = load i64, ptr %25, align 4
  %switch = icmp eq i64 %26, 21
  br i1 %switch, label %if.entry.i148, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i148, %if.entry11.thread, %if.entry11
  %27 = phi ptr [ %24, %if.entry11 ], [ %23, %if.entry11.thread ], [ %24, %if.entry.i148 ]
  %.tr11.i.lcssa = phi ptr [ %4, %if.entry11 ], [ %4, %if.entry11.thread ], [ %25, %if.entry.i148 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %28 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i149 = getelementptr inbounds %Program, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i.i149, align 8
  %30 = load i64, ptr %28, align 4
  %memberidx.i.i.i150 = getelementptr inbounds %Array_Module_, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i.i.i150, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %31, i64 %30
  %32 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i151 = getelementptr inbounds %Module, ptr %32, i64 0, i32 4
  %33 = load ptr, ptr %memberidx2.i.i151, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %28, i64 0, i32 2
  %34 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %35, i64 %34
  %36 = load ptr, ptr %ptridx.i6.i.i, align 8
  %37 = load ptr, ptr %36, align 8
  %memberidx16 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %38 = load ptr, ptr %memberidx16, align 8
  %39 = call fastcc ptr @TypeChecker_check_constructor_call(ptr nonnull %0, ptr %37, ptr %38, ptr nonnull %args)
  %.not73 = icmp eq ptr %39, null
  br i1 %.not73, label %if.entry3.i.ifend13_crit_edge, label %if.entry17

if.entry3.i.ifend13_crit_edge:                    ; preds = %if.entry3.i
  %.pre164 = load ptr, ptr %args, align 8
  br label %ifend13

else12:                                           ; preds = %if.entry.i146
  %40 = icmp eq i64 %19, 15
  br i1 %40, label %if.entry22, label %else23

ifend13:                                          ; preds = %if.entry3.i.ifend13_crit_edge, %Array_Expression____sl__.exit
  %41 = phi ptr [ %.pre164, %if.entry3.i.ifend13_crit_edge ], [ %13, %Array_Expression____sl__.exit ]
  %42 = tail call ptr @malloc(i32 42)
  %memberidx46 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 4
  %43 = load i1, ptr %memberidx46, align 1
  store i64 8, ptr %42, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %42, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %42, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i80 = getelementptr inbounds %NewExpression, ptr %42, i64 0, i32 6
  store ptr %12, ptr %memberidx.i80, align 8
  %memberidx1.i81 = getelementptr inbounds %NewExpression, ptr %42, i64 0, i32 5
  store i1 %43, ptr %memberidx1.i81, align 1
  %memberidx2.i82 = getelementptr inbounds %NewExpression, ptr %42, i64 0, i32 4
  store ptr %41, ptr %memberidx2.i82, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %42, i64 0, i32 3
  store ptr %4, ptr %memberidx3.i, align 8
  br label %common.ret

if.entry17:                                       ; preds = %if.entry3.i
  %44 = load ptr, ptr %1, align 8
  %45 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i84 = getelementptr inbounds %Compiler, ptr %45, i64 0, i32 6
  %46 = load ptr, ptr %memberidx1.i84, align 8
  %47 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %47, align 4
  %memberidx1.i.i85 = getelementptr inbounds %FloError, ptr %47, i64 0, i32 2
  store ptr %44, ptr %memberidx1.i.i85, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %47, i64 0, i32 1
  store ptr %39, ptr %memberidx2.i.i, align 8
  %memberidx.i.i86 = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 2
  %48 = load i64, ptr %memberidx.i.i86, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 3
  %49 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %48, %49
  br i1 %.not.i.i, label %if.entry17.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry17.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry17
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 1
  %.pre163 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry17
  %50 = shl i64 %49, 1
  store i64 %50, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 1
  %51 = load ptr, ptr %memberidx2.i.i.i, align 8
  %52 = shl i64 %49, 4
  %53 = tail call ptr @realloc(ptr %51, i64 %52)
  store ptr %53, ptr %memberidx2.i.i.i, align 8
  %.pre162 = load i64, ptr %memberidx.i.i86, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry17.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %54 = phi ptr [ %.pre163, %if.entry17.TypeChecker_error.exit_crit_edge ], [ %53, %if.entry.i.i ]
  %55 = phi i64 [ %48, %if.entry17.TypeChecker_error.exit_crit_edge ], [ %.pre162, %if.entry.i.i ]
  %56 = add i64 %55, 1
  store i64 %56, ptr %memberidx.i.i86, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %54, i64 %55
  store ptr %47, ptr %ptridx.i.i, align 8
  br label %common.ret

if.entry22:                                       ; preds = %is_object.exit.thread, %else12
  %memberidx25 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %57 = load ptr, ptr %memberidx25, align 8
  %memberidx26 = getelementptr inbounds %Array_ExpressionNode_, ptr %57, i64 0, i32 2
  %58 = load i64, ptr %memberidx26, align 4
  %.not = icmp eq i64 %58, 1
  br i1 %.not, label %ifend29, label %if.entry27

else23:                                           ; preds = %is_object.exit.thread, %else12
  %59 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %4)
  %60 = load ptr, ptr %59, align 8
  %memberidx44 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %60, i64 0, i32 5
  %61 = load ptr, ptr %memberidx44, align 8
  %62 = tail call ptr %61(ptr nonnull %59)
  %63 = alloca ptr, align 8
  %64 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %63, ptr nonnull @172, ptr %62)
  %65 = load ptr, ptr %63, align 8
  %66 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %66, align 8
  %memberidx.i87 = getelementptr inbounds %string, ptr %66, i64 0, i32 1
  store ptr %65, ptr %memberidx.i87, align 8
  %memberidx1.i88 = getelementptr inbounds %string, ptr %66, i64 0, i32 2
  store i64 %64, ptr %memberidx1.i88, align 4
  %memberidx2.i89 = getelementptr inbounds %string, ptr %66, i64 0, i32 3
  store i64 %64, ptr %memberidx2.i89, align 4
  tail call void @free(ptr %62)
  %67 = load ptr, ptr %1, align 8
  %68 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i91 = getelementptr inbounds %Compiler, ptr %68, i64 0, i32 6
  %69 = load ptr, ptr %memberidx1.i91, align 8
  %70 = call ptr @malloc(i32 24)
  store i64 5, ptr %70, align 4
  %memberidx1.i.i92 = getelementptr inbounds %FloError, ptr %70, i64 0, i32 2
  store ptr %67, ptr %memberidx1.i.i92, align 8
  %memberidx2.i.i93 = getelementptr inbounds %FloError, ptr %70, i64 0, i32 1
  store ptr %66, ptr %memberidx2.i.i93, align 8
  %memberidx.i.i94 = getelementptr inbounds %Array_FloError_, ptr %69, i64 0, i32 2
  %71 = load i64, ptr %memberidx.i.i94, align 4
  %memberidx1.i2.i95 = getelementptr inbounds %Array_FloError_, ptr %69, i64 0, i32 3
  %72 = load i64, ptr %memberidx1.i2.i95, align 4
  %.not.i.i96 = icmp slt i64 %71, %72
  br i1 %.not.i.i96, label %else23.TypeChecker_error.exit102_crit_edge, label %if.entry.i.i99

else23.TypeChecker_error.exit102_crit_edge:       ; preds = %else23
  %memberidx4.i.i100.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %69, i64 0, i32 1
  %.pre155 = load ptr, ptr %memberidx4.i.i100.phi.trans.insert, align 8
  br label %TypeChecker_error.exit102

if.entry.i.i99:                                   ; preds = %else23
  %73 = shl i64 %72, 1
  store i64 %73, ptr %memberidx1.i2.i95, align 4
  %memberidx2.i.i.i98 = getelementptr inbounds %Array_FloError_, ptr %69, i64 0, i32 1
  %74 = load ptr, ptr %memberidx2.i.i.i98, align 8
  %75 = shl i64 %72, 4
  %76 = call ptr @realloc(ptr %74, i64 %75)
  store ptr %76, ptr %memberidx2.i.i.i98, align 8
  %.pre = load i64, ptr %memberidx.i.i94, align 4
  br label %TypeChecker_error.exit102

TypeChecker_error.exit102:                        ; preds = %else23.TypeChecker_error.exit102_crit_edge, %if.entry.i.i99
  %77 = phi ptr [ %.pre155, %else23.TypeChecker_error.exit102_crit_edge ], [ %76, %if.entry.i.i99 ]
  %78 = phi i64 [ %71, %else23.TypeChecker_error.exit102_crit_edge ], [ %.pre, %if.entry.i.i99 ]
  %79 = add i64 %78, 1
  store i64 %79, ptr %memberidx.i.i94, align 4
  %ptridx.i.i101 = getelementptr inbounds ptr, ptr %77, i64 %78
  store ptr %70, ptr %ptridx.i.i101, align 8
  br label %common.ret

if.entry27:                                       ; preds = %if.entry22
  %80 = alloca ptr, align 8
  %81 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %80, ptr nonnull @169, i64 %58)
  %82 = load ptr, ptr %80, align 8
  %83 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %83, align 8
  %memberidx.i103 = getelementptr inbounds %string, ptr %83, i64 0, i32 1
  store ptr %82, ptr %memberidx.i103, align 8
  %memberidx1.i104 = getelementptr inbounds %string, ptr %83, i64 0, i32 2
  store i64 %81, ptr %memberidx1.i104, align 4
  %memberidx2.i105 = getelementptr inbounds %string, ptr %83, i64 0, i32 3
  store i64 %81, ptr %memberidx2.i105, align 4
  %84 = load ptr, ptr %1, align 8
  %85 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i107 = getelementptr inbounds %Compiler, ptr %85, i64 0, i32 6
  %86 = load ptr, ptr %memberidx1.i107, align 8
  %87 = call ptr @malloc(i32 24)
  store i64 4, ptr %87, align 4
  %memberidx1.i.i108 = getelementptr inbounds %FloError, ptr %87, i64 0, i32 2
  store ptr %84, ptr %memberidx1.i.i108, align 8
  %memberidx2.i.i109 = getelementptr inbounds %FloError, ptr %87, i64 0, i32 1
  store ptr %83, ptr %memberidx2.i.i109, align 8
  %memberidx.i.i110 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 2
  %88 = load i64, ptr %memberidx.i.i110, align 4
  %memberidx1.i2.i111 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 3
  %89 = load i64, ptr %memberidx1.i2.i111, align 4
  %.not.i.i112 = icmp slt i64 %88, %89
  br i1 %.not.i.i112, label %if.entry27.TypeChecker_error.exit118_crit_edge, label %if.entry.i.i115

if.entry27.TypeChecker_error.exit118_crit_edge:   ; preds = %if.entry27
  %memberidx4.i.i116.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 1
  %.pre157 = load ptr, ptr %memberidx4.i.i116.phi.trans.insert, align 8
  br label %TypeChecker_error.exit118

if.entry.i.i115:                                  ; preds = %if.entry27
  %90 = shl i64 %89, 1
  store i64 %90, ptr %memberidx1.i2.i111, align 4
  %memberidx2.i.i.i114 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 1
  %91 = load ptr, ptr %memberidx2.i.i.i114, align 8
  %92 = shl i64 %89, 4
  %93 = call ptr @realloc(ptr %91, i64 %92)
  store ptr %93, ptr %memberidx2.i.i.i114, align 8
  %.pre156 = load i64, ptr %memberidx.i.i110, align 4
  br label %TypeChecker_error.exit118

TypeChecker_error.exit118:                        ; preds = %if.entry27.TypeChecker_error.exit118_crit_edge, %if.entry.i.i115
  %94 = phi ptr [ %.pre157, %if.entry27.TypeChecker_error.exit118_crit_edge ], [ %93, %if.entry.i.i115 ]
  %95 = phi i64 [ %88, %if.entry27.TypeChecker_error.exit118_crit_edge ], [ %.pre156, %if.entry.i.i115 ]
  %96 = add i64 %95, 1
  store i64 %96, ptr %memberidx.i.i110, align 4
  %ptridx.i.i117 = getelementptr inbounds ptr, ptr %94, i64 %95
  store ptr %87, ptr %ptridx.i.i117, align 8
  br label %common.ret

ifend29:                                          ; preds = %if.entry22
  %97 = tail call ptr @malloc(i32 8)
  store i64 7, ptr %97, align 4
  %98 = load ptr, ptr %memberidx25, align 8
  %memberidx.i119 = getelementptr inbounds %Array_ExpressionNode_, ptr %98, i64 0, i32 1
  %99 = load ptr, ptr %memberidx.i119, align 8
  %100 = load ptr, ptr %99, align 8
  %101 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %97, ptr %100)
  %102 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i121 = getelementptr inbounds %Compiler, ptr %102, i64 0, i32 6
  %103 = load ptr, ptr %memberidx1.i121, align 8
  %memberidx2.i122 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 2
  %104 = load i64, ptr %memberidx2.i122, align 4
  %105 = icmp sgt i64 %104, 0
  br i1 %105, label %common.ret, label %ifend34

ifend34:                                          ; preds = %ifend29
  %memberidx35 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 3
  %106 = load ptr, ptr %memberidx35, align 8
  %107 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %97, ptr %106)
  br i1 %107, label %ifend38, label %if.entry36

if.entry36:                                       ; preds = %ifend34
  %108 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %97)
  %109 = load ptr, ptr %108, align 8
  %memberidx39 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %109, i64 0, i32 5
  %110 = load ptr, ptr %memberidx39, align 8
  %111 = tail call ptr %110(ptr nonnull %108)
  %112 = load ptr, ptr %memberidx35, align 8
  %113 = load i64, ptr %112, align 4
  %114 = alloca ptr, align 8
  %115 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %114, ptr nonnull @170, i64 %113)
  %116 = load ptr, ptr %114, align 8
  %117 = alloca ptr, align 8
  %118 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %117, ptr nonnull @171, ptr %111, ptr %116)
  %119 = load ptr, ptr %117, align 8
  %120 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %120, align 8
  %memberidx.i123 = getelementptr inbounds %string, ptr %120, i64 0, i32 1
  store ptr %119, ptr %memberidx.i123, align 8
  %memberidx1.i124 = getelementptr inbounds %string, ptr %120, i64 0, i32 2
  store i64 %118, ptr %memberidx1.i124, align 4
  %memberidx2.i125 = getelementptr inbounds %string, ptr %120, i64 0, i32 3
  store i64 %118, ptr %memberidx2.i125, align 4
  tail call void @free(ptr %111)
  tail call void @free(ptr %116)
  %121 = load ptr, ptr %memberidx25, align 8
  %memberidx.i126 = getelementptr inbounds %Array_ExpressionNode_, ptr %121, i64 0, i32 1
  %122 = load ptr, ptr %memberidx.i126, align 8
  %123 = load ptr, ptr %122, align 8
  %124 = load ptr, ptr %123, align 8
  %125 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i128 = getelementptr inbounds %Compiler, ptr %125, i64 0, i32 6
  %126 = load ptr, ptr %memberidx1.i128, align 8
  %127 = call ptr @malloc(i32 24)
  store i64 4, ptr %127, align 4
  %memberidx1.i.i129 = getelementptr inbounds %FloError, ptr %127, i64 0, i32 2
  store ptr %124, ptr %memberidx1.i.i129, align 8
  %memberidx2.i.i130 = getelementptr inbounds %FloError, ptr %127, i64 0, i32 1
  store ptr %120, ptr %memberidx2.i.i130, align 8
  %memberidx.i.i131 = getelementptr inbounds %Array_FloError_, ptr %126, i64 0, i32 2
  %128 = load i64, ptr %memberidx.i.i131, align 4
  %memberidx1.i2.i132 = getelementptr inbounds %Array_FloError_, ptr %126, i64 0, i32 3
  %129 = load i64, ptr %memberidx1.i2.i132, align 4
  %.not.i.i133 = icmp slt i64 %128, %129
  br i1 %.not.i.i133, label %if.entry36.TypeChecker_error.exit139_crit_edge, label %if.entry.i.i136

if.entry36.TypeChecker_error.exit139_crit_edge:   ; preds = %if.entry36
  %memberidx4.i.i137.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %126, i64 0, i32 1
  %.pre159 = load ptr, ptr %memberidx4.i.i137.phi.trans.insert, align 8
  br label %TypeChecker_error.exit139

if.entry.i.i136:                                  ; preds = %if.entry36
  %130 = shl i64 %129, 1
  store i64 %130, ptr %memberidx1.i2.i132, align 4
  %memberidx2.i.i.i135 = getelementptr inbounds %Array_FloError_, ptr %126, i64 0, i32 1
  %131 = load ptr, ptr %memberidx2.i.i.i135, align 8
  %132 = shl i64 %129, 4
  %133 = call ptr @realloc(ptr %131, i64 %132)
  store ptr %133, ptr %memberidx2.i.i.i135, align 8
  %.pre158 = load i64, ptr %memberidx.i.i131, align 4
  br label %TypeChecker_error.exit139

TypeChecker_error.exit139:                        ; preds = %if.entry36.TypeChecker_error.exit139_crit_edge, %if.entry.i.i136
  %134 = phi ptr [ %.pre159, %if.entry36.TypeChecker_error.exit139_crit_edge ], [ %133, %if.entry.i.i136 ]
  %135 = phi i64 [ %128, %if.entry36.TypeChecker_error.exit139_crit_edge ], [ %.pre158, %if.entry.i.i136 ]
  %136 = add i64 %135, 1
  store i64 %136, ptr %memberidx.i.i131, align 4
  %ptridx.i.i138 = getelementptr inbounds ptr, ptr %134, i64 %135
  store ptr %127, ptr %ptridx.i.i138, align 8
  br label %common.ret

ifend38:                                          ; preds = %ifend34
  %137 = load i64, ptr %memberidx.i74, align 4
  %138 = load i64, ptr %memberidx1.i75, align 4
  %.not.i = icmp slt i64 %137, %138
  br i1 %.not.i, label %ifend38.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

ifend38.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend38
  %.pre161 = load ptr, ptr %memberidx2.i76, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %ifend38
  %139 = shl i64 %138, 1
  store i64 %139, ptr %memberidx1.i75, align 4
  %140 = load ptr, ptr %memberidx2.i76, align 8
  %141 = shl i64 %138, 4
  %142 = tail call ptr @realloc(ptr %140, i64 %141)
  store ptr %142, ptr %memberidx2.i76, align 8
  %.pre160 = load i64, ptr %memberidx.i74, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend38.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %143 = phi ptr [ %.pre161, %ifend38.Array_Expression____sl__.exit_crit_edge ], [ %142, %if.entry.i ]
  %144 = phi i64 [ %137, %ifend38.Array_Expression____sl__.exit_crit_edge ], [ %.pre160, %if.entry.i ]
  %145 = add i64 %144, 1
  store i64 %145, ptr %memberidx.i74, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %143, i64 %144
  store ptr %101, ptr %ptridx.i, align 8
  br label %ifend13
}

define internal fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %5, align 4
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %5, ptr %4)
  %memberidx.i.i45 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %7 = load ptr, ptr %memberidx.i.i45, align 8
  %memberidx1.i.i46 = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 6
  %8 = load ptr, ptr %memberidx1.i.i46, align 8
  %memberidx2.i.i47 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i.i47, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend.i

ifend.i:                                          ; preds = %3
  %memberidx.i48 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx.i48, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %ifend, label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i
  %14 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %14, align 4
  %15 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %15, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  %memberidx.i.i.i49 = getelementptr inbounds %TypeCastExpression, ptr %15, i64 0, i32 4
  store ptr %6, ptr %memberidx.i.i.i49, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %14, ptr %memberidx1.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %16 = load i1, ptr %memberidx3.i.i.i, align 1
  store i1 %16, ptr %memberidx1.i.i.i.i, align 1
  %.pre = load ptr, ptr %memberidx.i.i45, align 8
  %memberidx1.i.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre, i64 0, i32 6
  %.pre51 = load ptr, ptr %memberidx1.i.phi.trans.insert, align 8
  %memberidx2.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre51, i64 0, i32 2
  %.pre52 = load i64, ptr %memberidx2.i.phi.trans.insert, align 4
  %17 = icmp sgt i64 %.pre52, 0
  br i1 %17, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %ifend4, %ifend, %TypeChecker_check_condition.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %58, %ifend13 ], [ null, %TypeChecker_check_condition.exit ], [ null, %ifend ], [ null, %ifend4 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %ifend.i, %TypeChecker_check_condition.exit
  %common.ret.op.i58 = phi ptr [ %15, %TypeChecker_check_condition.exit ], [ %6, %ifend.i ]
  %memberidx1 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 4
  %18 = load ptr, ptr %memberidx1, align 8
  %19 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %1, ptr %18)
  %20 = load ptr, ptr %memberidx.i.i45, align 8
  %memberidx1.i30 = getelementptr inbounds %Compiler, ptr %20, i64 0, i32 6
  %21 = load ptr, ptr %memberidx1.i30, align 8
  %memberidx2.i31 = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i31, align 4
  %23 = icmp sgt i64 %22, 0
  br i1 %23, label %common.ret, label %ifend4

ifend4:                                           ; preds = %ifend
  %memberidx5 = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  %24 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 5
  %25 = load ptr, ptr %memberidx6, align 8
  %26 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %24, ptr %25)
  %27 = load ptr, ptr %memberidx.i.i45, align 8
  %memberidx1.i33 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i33, align 8
  %memberidx2.i34 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i34, align 4
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend4
  %memberidx10 = getelementptr inbounds %Expression, ptr %26, i64 0, i32 3
  %31 = load ptr, ptr %memberidx10, align 8
  %32 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %24, ptr %31)
  br i1 %32, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %33 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %24)
  %34 = load ptr, ptr %33, align 8
  %memberidx14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %34, i64 0, i32 5
  %35 = load ptr, ptr %memberidx14, align 8
  %36 = tail call ptr %35(ptr nonnull %33)
  %37 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %31)
  %38 = load ptr, ptr %37, align 8
  %memberidx15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %38, i64 0, i32 5
  %39 = load ptr, ptr %memberidx15, align 8
  %40 = tail call ptr %39(ptr nonnull %37)
  %41 = alloca ptr, align 8
  %42 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %41, ptr nonnull @185, ptr %36, ptr %40)
  %43 = load ptr, ptr %41, align 8
  %44 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %44, align 8
  %memberidx.i35 = getelementptr inbounds %string, ptr %44, i64 0, i32 1
  store ptr %43, ptr %memberidx.i35, align 8
  %memberidx1.i36 = getelementptr inbounds %string, ptr %44, i64 0, i32 2
  store i64 %42, ptr %memberidx1.i36, align 4
  %memberidx2.i37 = getelementptr inbounds %string, ptr %44, i64 0, i32 3
  store i64 %42, ptr %memberidx2.i37, align 4
  tail call void @free(ptr %36)
  tail call void @free(ptr %40)
  %45 = load ptr, ptr %2, align 8
  %46 = load ptr, ptr %memberidx.i.i45, align 8
  %memberidx1.i39 = getelementptr inbounds %Compiler, ptr %46, i64 0, i32 6
  %47 = load ptr, ptr %memberidx1.i39, align 8
  %48 = call ptr @malloc(i32 24)
  store i64 5, ptr %48, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %48, i64 0, i32 2
  store ptr %45, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %48, i64 0, i32 1
  store ptr %44, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %49 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 3
  %50 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %49, %50
  br i1 %.not.i.i, label %if.entry11.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry11.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry11
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %.pre54 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry11
  %51 = shl i64 %50, 1
  store i64 %51, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i.i, align 8
  %53 = shl i64 %50, 4
  %54 = call ptr @realloc(ptr %52, i64 %53)
  store ptr %54, ptr %memberidx2.i.i.i, align 8
  %.pre53 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %55 = phi ptr [ %.pre54, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %54, %if.entry.i.i ]
  %56 = phi i64 [ %49, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %.pre53, %if.entry.i.i ]
  %57 = add i64 %56, 1
  store i64 %57, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %55, i64 %56
  store ptr %48, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %58 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %58, align 4
  %memberidx.i.i40 = getelementptr inbounds %Expression, ptr %58, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i40, align 4
  %memberidx1.i.i41 = getelementptr inbounds %Expression, ptr %58, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i41, align 1
  %memberidx.i42 = getelementptr inbounds %TernaryExpression, ptr %58, i64 0, i32 4
  store ptr %common.ret.op.i58, ptr %memberidx.i42, align 8
  %memberidx1.i43 = getelementptr inbounds %TernaryExpression, ptr %58, i64 0, i32 5
  store ptr %19, ptr %memberidx1.i43, align 8
  %memberidx2.i44 = getelementptr inbounds %TernaryExpression, ptr %58, i64 0, i32 6
  store ptr %26, ptr %memberidx2.i44, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %58, i64 0, i32 3
  %59 = load ptr, ptr %memberidx5, align 8
  store ptr %59, ptr %memberidx3.i, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %1) unnamed_addr {
  %3 = load i64, ptr %1, align 4
  switch i64 %3, label %ifend40 [
    i64 17, label %if.entry
    i64 15, label %if.entry12
    i64 13, label %if.entry18
    i64 14, label %if.entry24
    i64 16, label %if.entry31
    i64 21, label %if.entry38
  ]

if.entry:                                         ; preds = %2
  %4 = tail call ptr @malloc(i32 0)
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %5, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  store ptr %4, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  %memberidx = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1119 = getelementptr inbounds %Array_Type_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx1119, align 4
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %for.body, label %for.end

for.body:                                         ; preds = %if.entry, %ifend7
  %9 = phi ptr [ %46, %ifend7 ], [ %4, %if.entry ]
  %10 = phi i64 [ %47, %ifend7 ], [ 0, %if.entry ]
  %11 = phi ptr [ %45, %ifend7 ], [ %6, %if.entry ]
  %storemerge68120 = phi i64 [ %48, %ifend7 ], [ 0, %if.entry ]
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %11, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %12, i64 %storemerge68120
  %13 = load ptr, ptr %ptridx.i, align 8
  %14 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %13)
  %memberidx1.i74 = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx1.i74, align 4
  %16 = add i64 %15, %10
  %17 = tail call ptr @realloc(ptr %9, i64 %16)
  store ptr %17, ptr %memberidx.i.i, align 8
  %18 = load i64, ptr %memberidx1.i.i, align 4
  %19 = getelementptr inbounds i8, ptr %17, i64 %18
  %memberidx6.i = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  %20 = load ptr, ptr %memberidx6.i, align 8
  %21 = load i64, ptr %memberidx1.i74, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %19, ptr align 8 %20, i64 %21, i1 false)
  store i64 %16, ptr %memberidx1.i.i, align 4
  %22 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Array_Type_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx4, align 4
  %24 = add i64 %23, -1
  %25 = icmp slt i64 %storemerge68120, %24
  br i1 %25, label %if.entry5, label %ifend7

common.ret:                                       ; preds = %for.end46, %ifend40, %if.entry31, %if.entry24, %if.entry18, %if.entry12, %for.end
  %common.ret.op = phi ptr [ %37, %for.end ], [ %58, %if.entry12 ], [ %69, %if.entry18 ], [ %80, %if.entry24 ], [ %90, %if.entry31 ], [ %106, %ifend40 ], [ %132, %for.end46 ]
  ret ptr %common.ret.op

for.end.loopexit:                                 ; preds = %ifend7
  %.pre125 = load ptr, ptr %5, align 8
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.entry
  %26 = phi ptr [ %.pre125, %for.end.loopexit ], [ @VTablestring, %if.entry ]
  %memberidx8 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %26, i64 0, i32 5
  %27 = load ptr, ptr %memberidx8, align 8
  %28 = tail call ptr %27(ptr nonnull %5)
  %memberidx9 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 2
  %29 = load ptr, ptr %memberidx9, align 8
  %30 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %29)
  %31 = load ptr, ptr %30, align 8
  %memberidx10 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %31, i64 0, i32 5
  %32 = load ptr, ptr %memberidx10, align 8
  %33 = tail call ptr %32(ptr nonnull %30)
  %34 = alloca ptr, align 8
  %35 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %34, ptr nonnull @76, ptr %28, ptr %33)
  %36 = load ptr, ptr %34, align 8
  %37 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %37, align 8
  %memberidx.i79 = getelementptr inbounds %string, ptr %37, i64 0, i32 1
  store ptr %36, ptr %memberidx.i79, align 8
  %memberidx1.i80 = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  store i64 %35, ptr %memberidx1.i80, align 4
  %memberidx2.i81 = getelementptr inbounds %string, ptr %37, i64 0, i32 3
  store i64 %35, ptr %memberidx2.i81, align 4
  tail call void @free(ptr %28)
  tail call void @free(ptr %33)
  br label %common.ret

if.entry5:                                        ; preds = %for.body
  %38 = tail call ptr @malloc(i32 16)
  store i16 8236, ptr %38, align 8
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i82 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i82, align 8
  %memberidx1.i.i83 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i83, align 4
  %memberidx2.i.i84 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i84, align 4
  %40 = add i64 %16, 2
  %41 = tail call ptr @realloc(ptr %17, i64 %40)
  store ptr %41, ptr %memberidx.i.i, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %16
  %43 = load i16, ptr %38, align 8
  store i16 %43, ptr %42, align 1073741824
  store i64 %40, ptr %memberidx1.i.i, align 4
  %.pre = load ptr, ptr %memberidx, align 8
  %memberidx1.phi.trans.insert = getelementptr inbounds %Array_Type_, ptr %.pre, i64 0, i32 2
  %.pre124 = load i64, ptr %memberidx1.phi.trans.insert, align 4
  br label %ifend7

ifend7:                                           ; preds = %for.body, %if.entry5
  %44 = phi i64 [ %23, %for.body ], [ %.pre124, %if.entry5 ]
  %45 = phi ptr [ %22, %for.body ], [ %.pre, %if.entry5 ]
  %46 = phi ptr [ %17, %for.body ], [ %41, %if.entry5 ]
  %47 = phi i64 [ %16, %for.body ], [ %40, %if.entry5 ]
  %48 = add nuw nsw i64 %storemerge68120, 1
  %49 = icmp slt i64 %48, %44
  br i1 %49, label %for.body, label %for.end.loopexit

if.entry12:                                       ; preds = %2
  %memberidx15 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %50 = load ptr, ptr %memberidx15, align 8
  %51 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %50)
  %52 = load ptr, ptr %51, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %52, i64 0, i32 5
  %53 = load ptr, ptr %memberidx16, align 8
  %54 = tail call ptr %53(ptr nonnull %51)
  %55 = alloca ptr, align 8
  %56 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %55, ptr nonnull @77, ptr %54)
  %57 = load ptr, ptr %55, align 8
  %58 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i93 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i93, align 8
  %memberidx1.i94 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i94, align 4
  %memberidx2.i95 = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 %56, ptr %memberidx2.i95, align 4
  tail call void @free(ptr %54)
  br label %common.ret

if.entry18:                                       ; preds = %2
  %59 = load ptr, ptr %0, align 8
  %memberidx6.i116 = getelementptr inbounds %ObjectType, ptr %1, i64 0, i32 1
  %60 = load ptr, ptr %memberidx6.i116, align 8
  %memberidx.i.i117 = getelementptr inbounds %Program, ptr %59, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i.i117, align 8
  %62 = load i64, ptr %60, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %61, i64 0, i32 1
  %63 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %63, i64 %62
  %64 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i118 = getelementptr inbounds %Module, ptr %64, i64 0, i32 4
  %65 = load ptr, ptr %memberidx2.i.i118, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %60, i64 0, i32 2
  %66 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %65, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %67, i64 %66
  %68 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx22 = getelementptr inbounds %Class, ptr %68, i64 0, i32 1
  %69 = load ptr, ptr %memberidx22, align 8
  br label %common.ret

if.entry24:                                       ; preds = %2
  %70 = load ptr, ptr %0, align 8
  %memberidx28 = getelementptr inbounds %EnumType, ptr %1, i64 0, i32 1
  %71 = load ptr, ptr %memberidx28, align 8
  %memberidx.i96 = getelementptr inbounds %Program, ptr %70, i64 0, i32 1
  %72 = load ptr, ptr %memberidx.i96, align 8
  %73 = load i64, ptr %71, align 4
  %memberidx.i.i97 = getelementptr inbounds %Array_Module_, ptr %72, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i.i97, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %74, i64 %73
  %75 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i98 = getelementptr inbounds %Module, ptr %75, i64 0, i32 6
  %76 = load ptr, ptr %memberidx2.i98, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %71, i64 0, i32 2
  %77 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Enum_, ptr %76, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %78, i64 %77
  %79 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx29 = getelementptr inbounds %Enum, ptr %79, i64 0, i32 1
  %80 = load ptr, ptr %memberidx29, align 8
  br label %common.ret

if.entry31:                                       ; preds = %2
  %memberidx34 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %81 = load ptr, ptr %memberidx34, align 8
  %82 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %81)
  %83 = load ptr, ptr %82, align 8
  %memberidx35 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %83, i64 0, i32 5
  %84 = load ptr, ptr %memberidx35, align 8
  %85 = tail call ptr %84(ptr nonnull %82)
  %memberidx36 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %86 = load i64, ptr %memberidx36, align 4
  %87 = alloca ptr, align 8
  %88 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %87, ptr nonnull @78, ptr %85, i64 %86)
  %89 = load ptr, ptr %87, align 8
  %90 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %90, align 8
  %memberidx.i101 = getelementptr inbounds %string, ptr %90, i64 0, i32 1
  store ptr %89, ptr %memberidx.i101, align 8
  %memberidx1.i102 = getelementptr inbounds %string, ptr %90, i64 0, i32 2
  store i64 %88, ptr %memberidx1.i102, align 4
  %memberidx2.i103 = getelementptr inbounds %string, ptr %90, i64 0, i32 3
  store i64 %88, ptr %memberidx2.i103, align 4
  tail call void @free(ptr %85)
  br label %common.ret

if.entry38:                                       ; preds = %2
  %memberidx41 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %91 = load ptr, ptr %memberidx41, align 8
  %92 = tail call ptr @malloc(i32 8)
  store i8 60, ptr %92, align 8
  %93 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %93, align 8
  %memberidx.i.i104 = getelementptr inbounds %string, ptr %93, i64 0, i32 1
  store ptr %92, ptr %memberidx.i.i104, align 8
  %memberidx1.i.i105 = getelementptr inbounds %string, ptr %93, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i105, align 4
  %memberidx2.i.i106 = getelementptr inbounds %string, ptr %93, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i106, align 4
  %memberidx.i107 = getelementptr inbounds %string, ptr %91, i64 0, i32 2
  %94 = load i64, ptr %memberidx.i107, align 4
  %95 = add i64 %94, 1
  %96 = trunc i64 %95 to i32
  %mallocsize.i109 = shl i32 %96, 3
  %97 = tail call ptr @malloc(i32 %mallocsize.i109)
  %memberidx2.i110 = getelementptr inbounds %string, ptr %91, i64 0, i32 1
  %98 = load ptr, ptr %memberidx2.i110, align 8
  %99 = load i64, ptr %memberidx.i107, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %97, ptr align 8 %98, i64 %99, i1 false)
  %100 = getelementptr inbounds i8, ptr %97, i64 %99
  %101 = load i8, ptr %92, align 8
  store i8 %101, ptr %100, align 8
  %102 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %102, align 8
  %memberidx.i.i112 = getelementptr inbounds %string, ptr %102, i64 0, i32 1
  store ptr %97, ptr %memberidx.i.i112, align 8
  %memberidx1.i.i113 = getelementptr inbounds %string, ptr %102, i64 0, i32 2
  store i64 %95, ptr %memberidx1.i.i113, align 4
  %memberidx2.i.i114 = getelementptr inbounds %string, ptr %102, i64 0, i32 3
  store i64 %95, ptr %memberidx2.i.i114, align 4
  %memberidx47 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %103 = load ptr, ptr %memberidx47, align 8
  %memberidx48122 = getelementptr inbounds %Array_Type_, ptr %103, i64 0, i32 2
  %104 = load i64, ptr %memberidx48122, align 4
  %105 = icmp sgt i64 %104, 0
  br i1 %105, label %for.body44, label %for.end46

ifend40:                                          ; preds = %2
  %106 = tail call fastcc ptr @dump_type(ptr nonnull %1, i1 false)
  br label %common.ret

for.body44:                                       ; preds = %if.entry38, %for.body44
  %107 = phi ptr [ %115, %for.body44 ], [ %97, %if.entry38 ]
  %108 = phi i64 [ %114, %for.body44 ], [ %95, %if.entry38 ]
  %109 = phi ptr [ %120, %for.body44 ], [ %103, %if.entry38 ]
  %storemerge123 = phi i64 [ %119, %for.body44 ], [ 0, %if.entry38 ]
  %memberidx.i99 = getelementptr inbounds %Array_Type_, ptr %109, i64 0, i32 1
  %110 = load ptr, ptr %memberidx.i99, align 8
  %ptridx.i100 = getelementptr inbounds ptr, ptr %110, i64 %storemerge123
  %111 = load ptr, ptr %ptridx.i100, align 8
  %112 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %111)
  %memberidx1.i90 = getelementptr inbounds %string, ptr %112, i64 0, i32 2
  %113 = load i64, ptr %memberidx1.i90, align 4
  %114 = add i64 %113, %108
  %115 = tail call ptr @realloc(ptr %107, i64 %114)
  store ptr %115, ptr %memberidx.i.i112, align 8
  %116 = getelementptr inbounds i8, ptr %115, i64 %108
  %memberidx6.i92 = getelementptr inbounds %string, ptr %112, i64 0, i32 1
  %117 = load ptr, ptr %memberidx6.i92, align 8
  %118 = load i64, ptr %memberidx1.i90, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %116, ptr align 8 %117, i64 %118, i1 false)
  store i64 %114, ptr %memberidx1.i.i113, align 4
  %119 = add nuw nsw i64 %storemerge123, 1
  %120 = load ptr, ptr %memberidx47, align 8
  %memberidx48 = getelementptr inbounds %Array_Type_, ptr %120, i64 0, i32 2
  %121 = load i64, ptr %memberidx48, align 4
  %122 = icmp slt i64 %119, %121
  br i1 %122, label %for.body44, label %for.end46

for.end46:                                        ; preds = %for.body44, %if.entry38
  %123 = phi ptr [ %97, %if.entry38 ], [ %115, %for.body44 ]
  %124 = phi i64 [ %95, %if.entry38 ], [ %114, %for.body44 ]
  %125 = tail call ptr @malloc(i32 8)
  store i8 62, ptr %125, align 8
  %126 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %126, align 8
  %memberidx.i.i76 = getelementptr inbounds %string, ptr %126, i64 0, i32 1
  store ptr %125, ptr %memberidx.i.i76, align 8
  %memberidx1.i.i77 = getelementptr inbounds %string, ptr %126, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i77, align 4
  %memberidx2.i.i78 = getelementptr inbounds %string, ptr %126, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i78, align 4
  %127 = add i64 %124, 1
  %128 = trunc i64 %127 to i32
  %mallocsize.i = shl i32 %128, 3
  %129 = tail call ptr @malloc(i32 %mallocsize.i)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %129, ptr align 8 %123, i64 %124, i1 false)
  %130 = getelementptr inbounds i8, ptr %129, i64 %124
  %131 = load i8, ptr %125, align 8
  store i8 %131, ptr %130, align 8
  %132 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %132, align 8
  %memberidx.i.i70 = getelementptr inbounds %string, ptr %132, i64 0, i32 1
  store ptr %129, ptr %memberidx.i.i70, align 8
  %memberidx1.i.i71 = getelementptr inbounds %string, ptr %132, i64 0, i32 2
  store i64 %127, ptr %memberidx1.i.i71, align 4
  %memberidx2.i.i72 = getelementptr inbounds %string, ptr %132, i64 0, i32 3
  store i64 %127, ptr %memberidx2.i.i72, align 4
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 9
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_string_Generic_, ptr %4, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = srem i64 %5, %6
  %8 = load ptr, ptr %4, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %8, i64 %7
  %9 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %9, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %3
  %memberidx1.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %10 = phi ptr [ %20, %else.i ], [ %8, %while.entry.i.preheader ]
  %11 = phi i64 [ %21, %else.i ], [ %6, %while.entry.i.preheader ]
  %12 = phi ptr [ %24, %else.i ], [ %9, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %23, %else.i ], [ %7, %while.entry.i.preheader ]
  %13 = load ptr, ptr %12, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  %14 = load i64, ptr %memberidx.i.i, align 4
  %15 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %14, %15
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  %16 = load ptr, ptr %memberidx2.i.i, align 8
  %17 = load ptr, ptr %memberidx3.i.i, align 8
  %18 = tail call i64 @memcmp(ptr %16, ptr %17, i64 %14)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre123 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre124.pre = load ptr, ptr %4, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre124.pre, i64 %hash.0.i
  %.pre125.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre125.pre, null
  br i1 %.not29.i, label %common.ret, label %Map_string_Generic____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %20 = phi ptr [ %.pre123, %ifend.i.i.else.i_crit_edge ], [ %10, %while.entry.i ]
  %21 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %11, %while.entry.i ]
  %22 = add i64 %hash.0.i, 1
  %23 = srem i64 %22, %21
  %ptridx7.i = getelementptr inbounds ptr, ptr %20, i64 %23
  %24 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %24, null
  br i1 %.not30.i, label %common.ret, label %while.entry.i

Map_string_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_Generic_, ptr %.pre125.pre, i64 0, i32 1
  %25 = load ptr, ptr %memberidx15.i, align 8
  %26 = icmp eq ptr %25, null
  br i1 %26, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %3, %while.end.i, %Map_string_Generic____getitem__.exit, %ifend24, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %135, %ifend24 ], [ null, %Map_string_Generic____getitem__.exit ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_string_Generic____getitem__.exit
  %memberidx1 = getelementptr inbounds %Generic, ptr %25, i64 0, i32 1
  %27 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ClassDeclarationNode, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_GenericParameterNode_, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx3, align 4
  %memberidx4 = getelementptr inbounds %Array_Type_, ptr %2, i64 0, i32 2
  %30 = load i64, ptr %memberidx4, align 4
  %.not = icmp eq i64 %29, %30
  br i1 %.not, label %ifend7, label %if.entry5

if.entry5:                                        ; preds = %ifend
  %31 = alloca ptr, align 8
  %32 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %31, ptr nonnull @86, i64 %29, i64 %30)
  %33 = load ptr, ptr %31, align 8
  %34 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i67 = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i67, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 %32, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 %32, ptr %memberidx2.i, align 4
  %memberidx.i68 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %35 = load ptr, ptr %memberidx.i68, align 8
  %memberidx1.i69 = getelementptr inbounds %Compiler, ptr %35, i64 0, i32 6
  %36 = load ptr, ptr %memberidx1.i69, align 8
  %37 = call ptr @malloc(i32 24)
  store i64 5, ptr %37, align 4
  %memberidx1.i.i70 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 2
  store ptr null, ptr %memberidx1.i.i70, align 8
  %memberidx2.i.i71 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 1
  store ptr %34, ptr %memberidx2.i.i71, align 8
  %memberidx.i.i72 = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 2
  %38 = load i64, ptr %memberidx.i.i72, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 3
  %39 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i73 = icmp slt i64 %38, %39
  br i1 %.not.i.i73, label %if.entry5.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry5.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry5
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 1
  %.pre127 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry5
  %40 = shl i64 %39, 1
  store i64 %40, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2.i.i.i, align 8
  %42 = shl i64 %39, 4
  %43 = call ptr @realloc(ptr %41, i64 %42)
  store ptr %43, ptr %memberidx2.i.i.i, align 8
  %.pre126 = load i64, ptr %memberidx.i.i72, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry5.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %44 = phi ptr [ %.pre127, %if.entry5.TypeChecker_error.exit_crit_edge ], [ %43, %if.entry.i.i ]
  %45 = phi i64 [ %38, %if.entry5.TypeChecker_error.exit_crit_edge ], [ %.pre126, %if.entry.i.i ]
  %46 = add i64 %45, 1
  store i64 %46, ptr %memberidx.i.i72, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %37, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend7:                                           ; preds = %ifend
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %47 = load i64, ptr %memberidx10, align 4
  %memberidx11 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %48 = load ptr, ptr %memberidx11, align 8
  store i64 0, ptr %memberidx10, align 4
  %49 = load ptr, ptr %0, align 8
  %memberidx1.i.i76 = getelementptr inbounds %Program, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx1.i.i76, align 8
  %memberidx.i.i.i77 = getelementptr inbounds %Array_Module_, ptr %50, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i.i.i77, align 8
  %52 = load ptr, ptr %51, align 8
  %memberidx2.i78 = getelementptr inbounds %Module, ptr %52, i64 0, i32 7
  %53 = load ptr, ptr %memberidx2.i78, align 8
  %memberidx.i.i79 = getelementptr inbounds %Array_Scope_, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i.i79, align 8
  %55 = load ptr, ptr %54, align 8
  %56 = load ptr, ptr %55, align 8
  store ptr %56, ptr %memberidx11, align 8
  %57 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0)
  %memberidx.i80 = getelementptr inbounds %Scope, ptr %57, i64 0, i32 5
  %58 = load ptr, ptr %memberidx11, align 8
  store ptr %58, ptr %memberidx.i80, align 8
  %59 = tail call ptr @malloc(i32 0)
  %60 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %60, align 8
  %memberidx.i.i82 = getelementptr inbounds %string, ptr %60, i64 0, i32 1
  store ptr %59, ptr %memberidx.i.i82, align 8
  %memberidx1.i.i83 = getelementptr inbounds %string, ptr %60, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i83, i8 0, i64 16, i1 false)
  %61 = load i64, ptr %memberidx3, align 4
  %62 = icmp sgt i64 %61, 0
  br i1 %62, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %ifend7
  %memberidx.i85 = getelementptr inbounds %Array_GenericParameterNode_, ptr %28, i64 0, i32 1
  %memberidx.i87 = getelementptr inbounds %Array_Type_, ptr %2, i64 0, i32 1
  %memberidx18 = getelementptr inbounds %Scope, ptr %57, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %storemerge122 = phi i64 [ 0, %for.body.lr.ph ], [ %88, %for.body ]
  %63 = load ptr, ptr %memberidx.i85, align 8
  %ptridx.i86 = getelementptr inbounds ptr, ptr %63, i64 %storemerge122
  %64 = load ptr, ptr %ptridx.i86, align 8
  %65 = load ptr, ptr %64, align 8
  %memberidx14 = getelementptr inbounds %IdentifierToken, ptr %65, i64 0, i32 2
  %66 = load ptr, ptr %memberidx14, align 8
  %67 = load ptr, ptr %memberidx.i87, align 8
  %ptridx.i88 = getelementptr inbounds ptr, ptr %67, i64 %storemerge122
  %68 = load ptr, ptr %ptridx.i88, align 8
  %69 = load i64, ptr %68, align 4
  %70 = icmp eq i64 %69, 21
  %memberidx16 = getelementptr inbounds %GenericType, ptr %68, i64 0, i32 3
  %spec.select = select i1 %70, ptr %memberidx16, ptr %ptridx.i88
  %ternary = load ptr, ptr %spec.select, align 8
  %71 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %ternary)
  %72 = load ptr, ptr %71, align 8
  %memberidx17 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %72, i64 0, i32 5
  %73 = load ptr, ptr %memberidx17, align 8
  %74 = call ptr %73(ptr nonnull %71)
  %75 = alloca ptr, align 8
  %76 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %75, ptr nonnull @87, ptr %74)
  %77 = load ptr, ptr %75, align 8
  %78 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %78, align 8
  %memberidx.i96 = getelementptr inbounds %string, ptr %78, i64 0, i32 1
  store ptr %77, ptr %memberidx.i96, align 8
  %memberidx1.i97 = getelementptr inbounds %string, ptr %78, i64 0, i32 2
  store i64 %76, ptr %memberidx1.i97, align 4
  %memberidx2.i98 = getelementptr inbounds %string, ptr %78, i64 0, i32 3
  store i64 %76, ptr %memberidx2.i98, align 4
  tail call void @free(ptr %74)
  %79 = load i64, ptr %memberidx1.i.i83, align 4
  %80 = add i64 %79, %76
  %81 = load ptr, ptr %memberidx.i.i82, align 8
  %82 = call ptr @realloc(ptr %81, i64 %80)
  store ptr %82, ptr %memberidx.i.i82, align 8
  %83 = load i64, ptr %memberidx1.i.i83, align 4
  %84 = getelementptr inbounds i8, ptr %82, i64 %83
  call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %84, ptr align 8 %77, i64 %76, i1 false)
  store i64 %80, ptr %memberidx1.i.i83, align 4
  %85 = load ptr, ptr %memberidx18, align 8
  %86 = load ptr, ptr %memberidx.i87, align 8
  %ptridx.i103 = getelementptr inbounds ptr, ptr %86, i64 %storemerge122
  %87 = load ptr, ptr %ptridx.i103, align 8
  call fastcc void @Map_string_Type____setitem__(ptr %85, ptr %66, ptr %87)
  %88 = add nuw nsw i64 %storemerge122, 1
  %89 = load i64, ptr %memberidx3, align 4
  %90 = icmp slt i64 %88, %89
  br i1 %90, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend7
  %91 = load ptr, ptr %1, align 8
  %memberidx19 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %91, i64 0, i32 5
  %92 = load ptr, ptr %memberidx19, align 8
  %93 = call ptr %92(ptr nonnull %1)
  %94 = load ptr, ptr %60, align 8
  %memberidx20 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %94, i64 0, i32 5
  %95 = load ptr, ptr %memberidx20, align 8
  %96 = call ptr %95(ptr nonnull %60)
  %97 = alloca ptr, align 8
  %98 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %97, ptr nonnull @88, ptr %93, ptr %96)
  %99 = load ptr, ptr %97, align 8
  %100 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %100, align 8
  %memberidx.i89 = getelementptr inbounds %string, ptr %100, i64 0, i32 1
  store ptr %99, ptr %memberidx.i89, align 8
  %memberidx1.i90 = getelementptr inbounds %string, ptr %100, i64 0, i32 2
  store i64 %98, ptr %memberidx1.i90, align 4
  %memberidx2.i91 = getelementptr inbounds %string, ptr %100, i64 0, i32 3
  store i64 %98, ptr %memberidx2.i91, align 4
  tail call void @free(ptr %93)
  tail call void @free(ptr %96)
  %101 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %100)
  %102 = load i64, ptr %101, align 4
  %103 = icmp eq i64 %102, 22
  br i1 %103, label %if.entry22, label %else23

if.entry22:                                       ; preds = %for.end
  %104 = alloca %IdentifierToken, align 8
  %105 = load ptr, ptr %memberidx1, align 8
  %106 = load ptr, ptr %105, align 8
  %memberidx27 = getelementptr inbounds %Token, ptr %106, i64 0, i32 1
  %107 = load ptr, ptr %memberidx27, align 8
  store i64 51, ptr %104, align 8
  %memberidx1.i.i104 = getelementptr inbounds %Token, ptr %104, i64 0, i32 1
  store ptr %107, ptr %memberidx1.i.i104, align 8
  %memberidx.i105 = getelementptr inbounds %IdentifierToken, ptr %104, i64 0, i32 2
  store ptr %100, ptr %memberidx.i105, align 8
  %108 = alloca %ClassDeclarationNode, align 8
  store ptr %104, ptr %108, align 8
  %memberidx1.i106 = getelementptr inbounds %ClassDeclarationNode, ptr %108, i64 0, i32 3
  %109 = call ptr @malloc(i32 32)
  store ptr @VTableArray_FieldNode_, ptr %109, align 8
  %memberidx.i.i107 = getelementptr inbounds %Array_FieldNode_, ptr %109, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i107, align 4
  %memberidx1.i.i108 = getelementptr inbounds %Array_FieldNode_, ptr %109, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i108, align 4
  %memberidx2.i.i109 = getelementptr inbounds %Array_FieldNode_, ptr %109, i64 0, i32 1
  %110 = call ptr @malloc(i32 64)
  store ptr %110, ptr %memberidx2.i.i109, align 8
  store i64 0, ptr %memberidx.i.i107, align 4
  %memberidx4.i = getelementptr inbounds %ClassDeclarationNode, ptr %108, i64 0, i32 4
  %111 = call ptr @malloc(i32 32)
  store ptr @VTableArray_MethodNode_, ptr %111, align 8
  %memberidx.i15.i = getelementptr inbounds %Array_MethodNode_, ptr %111, i64 0, i32 2
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx1.i16.i = getelementptr inbounds %Array_MethodNode_, ptr %111, i64 0, i32 3
  store i64 8, ptr %memberidx1.i16.i, align 4
  %memberidx2.i17.i = getelementptr inbounds %Array_MethodNode_, ptr %111, i64 0, i32 1
  %112 = call ptr @malloc(i32 64)
  store ptr %112, ptr %memberidx2.i17.i, align 8
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx7.i = getelementptr inbounds %ClassDeclarationNode, ptr %108, i64 0, i32 1
  %113 = call ptr @malloc(i32 32)
  store ptr @VTableArray_GenericParameterNode_, ptr %113, align 8
  %memberidx.i18.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %113, i64 0, i32 2
  store i64 0, ptr %memberidx.i18.i, align 4
  %memberidx1.i19.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %113, i64 0, i32 3
  store i64 8, ptr %memberidx1.i19.i, align 4
  %memberidx2.i20.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %113, i64 0, i32 1
  %114 = call ptr @malloc(i32 64)
  store ptr %114, ptr %memberidx2.i20.i, align 8
  store i64 0, ptr %memberidx.i18.i, align 4
  store ptr %113, ptr %memberidx7.i, align 8
  %memberidx10.i = getelementptr inbounds %ClassDeclarationNode, ptr %108, i64 0, i32 2
  %115 = load ptr, ptr %memberidx1, align 8
  %memberidx30 = getelementptr inbounds %ClassDeclarationNode, ptr %115, i64 0, i32 2
  %116 = load ptr, ptr %memberidx30, align 8
  store ptr %116, ptr %memberidx10.i, align 8
  %117 = load ptr, ptr %memberidx1, align 8
  %memberidx33 = getelementptr inbounds %ClassDeclarationNode, ptr %117, i64 0, i32 3
  %118 = load ptr, ptr %memberidx33, align 8
  store ptr %118, ptr %memberidx1.i106, align 8
  %119 = load ptr, ptr %memberidx1, align 8
  %memberidx36 = getelementptr inbounds %ClassDeclarationNode, ptr %119, i64 0, i32 4
  %120 = load ptr, ptr %memberidx36, align 8
  store ptr %120, ptr %memberidx4.i, align 8
  %121 = load ptr, ptr %57, align 8
  store ptr %121, ptr %memberidx11, align 8
  call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr nonnull %108)
  call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr nonnull %108)
  %122 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %100)
  br label %ifend24

else23:                                           ; preds = %for.end
  %123 = load ptr, ptr %57, align 8
  call void @free(ptr %123)
  %memberidx1.i111 = getelementptr inbounds %Scope, ptr %57, i64 0, i32 1
  %124 = load ptr, ptr %memberidx1.i111, align 8
  %125 = load ptr, ptr %124, align 8
  call void @free(ptr %125)
  call void @free(ptr %124)
  %memberidx2.i112 = getelementptr inbounds %Scope, ptr %57, i64 0, i32 2
  %126 = load ptr, ptr %memberidx2.i112, align 8
  %127 = load ptr, ptr %126, align 8
  call void @free(ptr %127)
  call void @free(ptr %126)
  %memberidx3.i113 = getelementptr inbounds %Scope, ptr %57, i64 0, i32 3
  %128 = load ptr, ptr %memberidx3.i113, align 8
  %129 = load ptr, ptr %128, align 8
  call void @free(ptr %129)
  call void @free(ptr %128)
  %memberidx4.i114 = getelementptr inbounds %Scope, ptr %57, i64 0, i32 4
  %130 = load ptr, ptr %memberidx4.i114, align 8
  %131 = load ptr, ptr %130, align 8
  call void @free(ptr %131)
  call void @free(ptr %130)
  %memberidx5.i = getelementptr inbounds %Scope, ptr %57, i64 0, i32 6
  %132 = load ptr, ptr %memberidx5.i, align 8
  %133 = load ptr, ptr %132, align 8
  call void @free(ptr %133)
  call void @free(ptr %132)
  tail call void @free(ptr nonnull %57)
  br label %ifend24

ifend24:                                          ; preds = %else23, %if.entry22
  %134 = phi ptr [ %101, %else23 ], [ %122, %if.entry22 ]
  store i64 %47, ptr %memberidx10, align 4
  store ptr %48, ptr %memberidx11, align 8
  %135 = tail call ptr @malloc(i32 32)
  store i64 21, ptr %135, align 4
  %memberidx.i115 = getelementptr inbounds %GenericType, ptr %135, i64 0, i32 1
  store ptr %1, ptr %memberidx.i115, align 8
  %memberidx1.i116 = getelementptr inbounds %GenericType, ptr %135, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i116, align 8
  %memberidx2.i117 = getelementptr inbounds %GenericType, ptr %135, i64 0, i32 3
  store ptr %134, ptr %memberidx2.i117, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_enum_within_module(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 32)
  %memberidx.i = getelementptr inbounds %Enum, ptr %3, i64 0, i32 2
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_EnumField_, ptr %4, align 8
  %memberidx.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %4, ptr %memberidx.i, align 8
  %6 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %6, i64 0, i32 2
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx.i.i39 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i.i39, align 4
  %9 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Program, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx1.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %10, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %11, i64 %8
  %12 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx.i40 = getelementptr inbounds %Module, ptr %12, i64 0, i32 7
  %13 = load ptr, ptr %memberidx.i40, align 8
  %memberidx.i1.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i1.i, align 8
  %15 = load ptr, ptr %14, align 8
  %memberidx2 = getelementptr inbounds %Enum, ptr %3, i64 0, i32 1
  store ptr %7, ptr %memberidx2, align 8
  %16 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %7)
  %17 = load i64, ptr %16, align 4
  %.not = icmp eq i64 %17, 22
  br i1 %.not, label %ifend, label %if.entry

common.ret:                                       ; preds = %Array_Enum____sl__.exit, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %2
  %18 = load ptr, ptr %7, align 8
  %memberidx4 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %18, i64 0, i32 5
  %19 = load ptr, ptr %memberidx4, align 8
  %20 = tail call ptr %19(ptr nonnull %7)
  %21 = alloca ptr, align 8
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %21, ptr nonnull @85, ptr %20)
  %23 = load ptr, ptr %21, align 8
  %24 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %24, align 8
  %memberidx.i41 = getelementptr inbounds %string, ptr %24, i64 0, i32 1
  store ptr %23, ptr %memberidx.i41, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %24, i64 0, i32 2
  store i64 %22, ptr %memberidx1.i, align 4
  %memberidx2.i42 = getelementptr inbounds %string, ptr %24, i64 0, i32 3
  store i64 %22, ptr %memberidx2.i42, align 4
  tail call void @free(ptr %20)
  %25 = load ptr, ptr %1, align 8
  %memberidx6 = getelementptr inbounds %Token, ptr %25, i64 0, i32 1
  %26 = load ptr, ptr %memberidx6, align 8
  %memberidx.i43 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %27 = load ptr, ptr %memberidx.i43, align 8
  %memberidx1.i44 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i44, align 8
  %29 = call ptr @malloc(i32 24)
  store i64 1, ptr %29, align 4
  %memberidx1.i.i45 = getelementptr inbounds %FloError, ptr %29, i64 0, i32 2
  store ptr %26, ptr %memberidx1.i.i45, align 8
  %memberidx2.i.i46 = getelementptr inbounds %FloError, ptr %29, i64 0, i32 1
  store ptr %24, ptr %memberidx2.i.i46, align 8
  %memberidx.i.i47 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i47, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 3
  %31 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %30, %31
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %.pre70 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %32 = shl i64 %31, 1
  store i64 %32, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %33 = load ptr, ptr %memberidx2.i.i.i, align 8
  %34 = shl i64 %31, 4
  %35 = call ptr @realloc(ptr %33, i64 %34)
  store ptr %35, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i47, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %36 = phi ptr [ %.pre70, %if.entry.TypeChecker_error.exit_crit_edge ], [ %35, %if.entry.i.i ]
  %37 = phi i64 [ %30, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %38 = add i64 %37, 1
  store i64 %38, ptr %memberidx.i.i47, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %36, i64 %37
  store ptr %29, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %2
  %39 = tail call ptr @malloc(i32 24)
  %40 = tail call ptr @malloc(i32 2048)
  store ptr %40, ptr %39, align 8
  br label %for.body.i

for.body.i:                                       ; preds = %ifend, %for.body.i
  %i.0.i69 = phi i64 [ 0, %ifend ], [ %42, %for.body.i ]
  %41 = load ptr, ptr %39, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %41, i64 %i.0.i69
  store ptr null, ptr %ptridx.i, align 8
  %42 = add nuw nsw i64 %i.0.i69, 1
  %43 = icmp ult i64 %i.0.i69, 255
  br i1 %43, label %for.body.i, label %Map_string_PropId__constructor.exit

Map_string_PropId__constructor.exit:              ; preds = %for.body.i
  %memberidx7 = getelementptr inbounds %Enum, ptr %3, i64 0, i32 3
  %memberidx2.i48 = getelementptr inbounds %Map_string_PropId_, ptr %39, i64 0, i32 1
  store i64 256, ptr %memberidx2.i48, align 4
  %memberidx3.i = getelementptr inbounds %Map_string_PropId_, ptr %39, i64 0, i32 2
  store i64 0, ptr %memberidx3.i, align 4
  store ptr %39, ptr %memberidx7, align 8
  %44 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_EnumField_, ptr %44, align 8
  %memberidx.i49 = getelementptr inbounds %Array_EnumField_, ptr %44, i64 0, i32 2
  store i64 0, ptr %memberidx.i49, align 4
  %memberidx1.i50 = getelementptr inbounds %Array_EnumField_, ptr %44, i64 0, i32 3
  store i64 8, ptr %memberidx1.i50, align 4
  %memberidx2.i51 = getelementptr inbounds %Array_EnumField_, ptr %44, i64 0, i32 1
  %45 = tail call ptr @malloc(i32 64)
  store ptr %45, ptr %memberidx2.i51, align 8
  store i64 0, ptr %memberidx.i49, align 4
  store ptr %44, ptr %memberidx.i, align 8
  %46 = tail call ptr @malloc(i32 24)
  %47 = load i64, ptr %memberidx.i.i39, align 4
  %48 = load ptr, ptr %0, align 8
  %memberidx1.i.i53 = getelementptr inbounds %Program, ptr %48, i64 0, i32 1
  %49 = load ptr, ptr %memberidx1.i.i53, align 8
  %memberidx.i.i.i54 = getelementptr inbounds %Array_Module_, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i.i.i54, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %50, i64 %47
  %51 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx13 = getelementptr inbounds %Module, ptr %51, i64 0, i32 6
  %52 = load ptr, ptr %memberidx13, align 8
  %memberidx14 = getelementptr inbounds %Array_Enum_, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx14, align 4
  store i64 %47, ptr %46, align 4
  %memberidx1.i.i55 = getelementptr inbounds %TypeId, ptr %46, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i55, align 4
  %memberidx2.i.i56 = getelementptr inbounds %TypeId, ptr %46, i64 0, i32 2
  store i64 %53, ptr %memberidx2.i.i56, align 4
  store ptr %46, ptr %3, align 8
  %54 = load ptr, ptr %memberidx1.i.i53, align 8
  %memberidx.i.i.i62 = getelementptr inbounds %Array_Module_, ptr %54, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i.i.i62, align 8
  %ptridx.i.i.i63 = getelementptr inbounds ptr, ptr %55, i64 %47
  %56 = load ptr, ptr %ptridx.i.i.i63, align 8
  %memberidx15 = getelementptr inbounds %Module, ptr %56, i64 0, i32 6
  %57 = load ptr, ptr %memberidx15, align 8
  %memberidx.i64 = getelementptr inbounds %Array_Enum_, ptr %57, i64 0, i32 2
  %58 = load i64, ptr %memberidx.i64, align 4
  %memberidx1.i65 = getelementptr inbounds %Array_Enum_, ptr %57, i64 0, i32 3
  %59 = load i64, ptr %memberidx1.i65, align 4
  %.not.i = icmp slt i64 %58, %59
  br i1 %.not.i, label %Map_string_PropId__constructor.exit.Array_Enum____sl__.exit_crit_edge, label %if.entry.i

Map_string_PropId__constructor.exit.Array_Enum____sl__.exit_crit_edge: ; preds = %Map_string_PropId__constructor.exit
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Enum_, ptr %57, i64 0, i32 1
  %.pre72 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Enum____sl__.exit

if.entry.i:                                       ; preds = %Map_string_PropId__constructor.exit
  %60 = shl i64 %59, 1
  store i64 %60, ptr %memberidx1.i65, align 4
  %memberidx2.i.i67 = getelementptr inbounds %Array_Enum_, ptr %57, i64 0, i32 1
  %61 = load ptr, ptr %memberidx2.i.i67, align 8
  %62 = shl i64 %59, 4
  %63 = tail call ptr @realloc(ptr %61, i64 %62)
  store ptr %63, ptr %memberidx2.i.i67, align 8
  %.pre71 = load i64, ptr %memberidx.i64, align 4
  br label %Array_Enum____sl__.exit

Array_Enum____sl__.exit:                          ; preds = %Map_string_PropId__constructor.exit.Array_Enum____sl__.exit_crit_edge, %if.entry.i
  %64 = phi ptr [ %.pre72, %Map_string_PropId__constructor.exit.Array_Enum____sl__.exit_crit_edge ], [ %63, %if.entry.i ]
  %65 = phi i64 [ %58, %Map_string_PropId__constructor.exit.Array_Enum____sl__.exit_crit_edge ], [ %.pre71, %if.entry.i ]
  %66 = add i64 %65, 1
  store i64 %66, ptr %memberidx.i64, align 4
  %ptridx.i68 = getelementptr inbounds ptr, ptr %64, i64 %65
  store ptr %3, ptr %ptridx.i68, align 8
  %memberidx16 = getelementptr inbounds %Scope, ptr %15, i64 0, i32 4
  %67 = load ptr, ptr %memberidx16, align 8
  %68 = load ptr, ptr %memberidx2, align 8
  %69 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %67, ptr %68, ptr %69)
  %memberidx19 = getelementptr inbounds %Scope, ptr %15, i64 0, i32 1
  %70 = load ptr, ptr %memberidx19, align 8
  %71 = load ptr, ptr %memberidx2, align 8
  %72 = tail call ptr @malloc(i32 24)
  %73 = load ptr, ptr %3, align 8
  %74 = load i64, ptr %73, align 4
  %memberidx1.i57 = getelementptr inbounds %TypeId, ptr %73, i64 0, i32 2
  %75 = load i64, ptr %memberidx1.i57, align 4
  store i64 4, ptr %72, align 4
  %memberidx1.i.i58 = getelementptr inbounds %VarId, ptr %72, i64 0, i32 1
  store i64 %74, ptr %memberidx1.i.i58, align 4
  %memberidx2.i.i59 = getelementptr inbounds %VarId, ptr %72, i64 0, i32 2
  store i64 %75, ptr %memberidx2.i.i59, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %70, ptr %71, ptr nonnull %72)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_within_module(ptr %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp ne i64 %6, 22
  %memberidx3 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 9
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %4)
  %memberidx.i99 = getelementptr inbounds %Map_string_Generic_, ptr %8, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i99, align 4
  %11 = srem i64 %9, %10
  %12 = load ptr, ptr %8, align 8
  %ptridx.i100 = getelementptr inbounds ptr, ptr %12, i64 %11
  %13 = load ptr, ptr %ptridx.i100, align 8
  %.not.i101 = icmp eq ptr %13, null
  br i1 %.not.i101, label %Map_string_Generic____getitem__.exit, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %2
  %memberidx1.i.i103 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %14 = phi ptr [ %24, %else.i ], [ %12, %while.entry.i.preheader ]
  %15 = phi i64 [ %25, %else.i ], [ %10, %while.entry.i.preheader ]
  %16 = phi ptr [ %28, %else.i ], [ %13, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %27, %else.i ], [ %11, %while.entry.i.preheader ]
  %17 = load ptr, ptr %16, align 8
  %memberidx.i.i102 = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx.i.i102, align 4
  %19 = load i64, ptr %memberidx1.i.i103, align 4
  %.not.i.i104 = icmp eq i64 %18, %19
  br i1 %.not.i.i104, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i105 = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  %20 = load ptr, ptr %memberidx2.i.i105, align 8
  %21 = load ptr, ptr %memberidx3.i.i, align 8
  %22 = tail call i64 @memcmp(ptr %20, ptr %21, i64 %18)
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i99, align 4
  %.pre110 = load ptr, ptr %8, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre111.pre = load ptr, ptr %8, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre111.pre, i64 %hash.0.i
  %.pre112.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre112.pre, null
  br i1 %.not29.i, label %Map_string_Generic____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %24 = phi ptr [ %.pre110, %ifend.i.i.else.i_crit_edge ], [ %14, %while.entry.i ]
  %25 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %15, %while.entry.i ]
  %26 = add i64 %hash.0.i, 1
  %27 = srem i64 %26, %25
  %ptridx7.i = getelementptr inbounds ptr, ptr %24, i64 %27
  %28 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %28, null
  br i1 %.not30.i, label %Map_string_Generic____getitem__.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_Generic_, ptr %.pre112.pre, i64 0, i32 1
  %29 = load ptr, ptr %memberidx15.i, align 8
  %phi.cmp = icmp ne ptr %29, null
  br label %Map_string_Generic____getitem__.exit

Map_string_Generic____getitem__.exit:             ; preds = %else.i, %2, %while.end.i, %if.entry10.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry10.i ], [ false, %while.end.i ], [ false, %2 ], [ false, %else.i ]
  %30 = or i1 %7, %common.ret.op.i
  br i1 %30, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry16, %Array_Class____sl__.exit, %if.entry9, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %Map_string_Generic____getitem__.exit
  %31 = load ptr, ptr %4, align 8
  %memberidx4 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %31, i64 0, i32 5
  %32 = load ptr, ptr %memberidx4, align 8
  %33 = tail call ptr %32(ptr nonnull %4)
  %34 = alloca ptr, align 8
  %35 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %34, ptr nonnull @85, ptr %33)
  %36 = load ptr, ptr %34, align 8
  %37 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %37, align 8
  %memberidx.i96 = getelementptr inbounds %string, ptr %37, i64 0, i32 1
  store ptr %36, ptr %memberidx.i96, align 8
  %memberidx1.i97 = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  store i64 %35, ptr %memberidx1.i97, align 4
  %memberidx2.i98 = getelementptr inbounds %string, ptr %37, i64 0, i32 3
  store i64 %35, ptr %memberidx2.i98, align 4
  tail call void @free(ptr %33)
  %38 = load ptr, ptr %1, align 8
  %memberidx6 = getelementptr inbounds %Token, ptr %38, i64 0, i32 1
  %39 = load ptr, ptr %memberidx6, align 8
  %memberidx.i90 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %40 = load ptr, ptr %memberidx.i90, align 8
  %memberidx1.i91 = getelementptr inbounds %Compiler, ptr %40, i64 0, i32 6
  %41 = load ptr, ptr %memberidx1.i91, align 8
  %42 = call ptr @malloc(i32 24)
  store i64 1, ptr %42, align 4
  %memberidx1.i.i92 = getelementptr inbounds %FloError, ptr %42, i64 0, i32 2
  store ptr %39, ptr %memberidx1.i.i92, align 8
  %memberidx2.i.i93 = getelementptr inbounds %FloError, ptr %42, i64 0, i32 1
  store ptr %37, ptr %memberidx2.i.i93, align 8
  %memberidx.i.i94 = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 2
  %43 = load i64, ptr %memberidx.i.i94, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 3
  %44 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %43, %44
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %.pre116 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %45 = shl i64 %44, 1
  store i64 %45, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i.i, align 8
  %47 = shl i64 %44, 4
  %48 = call ptr @realloc(ptr %46, i64 %47)
  store ptr %48, ptr %memberidx2.i.i.i, align 8
  %.pre115 = load i64, ptr %memberidx.i.i94, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %49 = phi ptr [ %.pre116, %if.entry.TypeChecker_error.exit_crit_edge ], [ %48, %if.entry.i.i ]
  %50 = phi i64 [ %43, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre115, %if.entry.i.i ]
  %51 = add i64 %50, 1
  store i64 %51, ptr %memberidx.i.i94, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %49, i64 %50
  store ptr %42, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_Generic____getitem__.exit
  %memberidx7 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 1
  %52 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_GenericParameterNode_, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx8, align 4
  %54 = icmp sgt i64 %53, 0
  br i1 %54, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend
  %memberidx12 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  store i1 true, ptr %memberidx12, align 1
  %55 = load ptr, ptr %memberidx3, align 8
  %56 = tail call ptr @malloc(i32 16)
  %memberidx14 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %57 = load i64, ptr %memberidx14, align 4
  store i64 %57, ptr %56, align 4
  %memberidx1.i89 = getelementptr inbounds %Generic, ptr %56, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i89, align 8
  tail call fastcc void @Map_string_Generic____setitem__(ptr %55, ptr %4, ptr nonnull %56)
  br label %common.ret

ifend11:                                          ; preds = %ifend
  %58 = tail call ptr @malloc(i32 81)
  %memberidx.i82 = getelementptr inbounds %Class, ptr %58, i64 0, i32 3
  store ptr null, ptr %memberidx.i82, align 8
  %memberidx2.i84 = getelementptr inbounds %Class, ptr %58, i64 0, i32 8
  %memberidx3.i85 = getelementptr inbounds %Class, ptr %58, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx2.i84, i8 0, i64 16, i1 false)
  %59 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ClassField_, ptr %59, align 8
  %memberidx.i.i86 = getelementptr inbounds %Array_ClassField_, ptr %59, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i86, align 4
  %memberidx1.i.i87 = getelementptr inbounds %Array_ClassField_, ptr %59, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i87, align 4
  %memberidx2.i.i88 = getelementptr inbounds %Array_ClassField_, ptr %59, i64 0, i32 1
  %60 = tail call ptr @malloc(i32 64)
  store ptr %60, ptr %memberidx2.i.i88, align 8
  store i64 0, ptr %memberidx.i.i86, align 4
  store ptr %59, ptr %memberidx3.i85, align 8
  %memberidx6.i = getelementptr inbounds %Class, ptr %58, i64 0, i32 5
  %61 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ClassMethod_, ptr %61, align 8
  %memberidx.i15.i = getelementptr inbounds %Array_ClassMethod_, ptr %61, i64 0, i32 2
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx1.i16.i = getelementptr inbounds %Array_ClassMethod_, ptr %61, i64 0, i32 3
  store i64 8, ptr %memberidx1.i16.i, align 4
  %memberidx2.i17.i = getelementptr inbounds %Array_ClassMethod_, ptr %61, i64 0, i32 1
  %62 = tail call ptr @malloc(i32 64)
  store ptr %62, ptr %memberidx2.i17.i, align 8
  store i64 0, ptr %memberidx.i15.i, align 4
  store ptr %61, ptr %memberidx6.i, align 8
  %memberidx9.i = getelementptr inbounds %Class, ptr %58, i64 0, i32 10
  store i1 false, ptr %memberidx9.i, align 1
  %memberidx.i.i80 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %63 = load i64, ptr %memberidx.i.i80, align 4
  %64 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Program, ptr %64, i64 0, i32 1
  %65 = load ptr, ptr %memberidx1.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %65, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %66, i64 %63
  %67 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx.i81 = getelementptr inbounds %Module, ptr %67, i64 0, i32 7
  %68 = load ptr, ptr %memberidx.i81, align 8
  %memberidx.i1.i = getelementptr inbounds %Array_Scope_, ptr %68, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i1.i, align 8
  %70 = load ptr, ptr %69, align 8
  %memberidx15 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 2
  %71 = load ptr, ptr %memberidx15, align 8
  %.not = icmp eq ptr %71, null
  %memberidx24 = getelementptr inbounds %Class, ptr %58, i64 0, i32 2
  br i1 %.not, label %else17, label %if.entry16

if.entry16:                                       ; preds = %ifend11
  %72 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %71)
  store ptr %72, ptr %memberidx24, align 8
  %memberidx.i77 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %73 = load ptr, ptr %memberidx.i77, align 8
  %memberidx1.i78 = getelementptr inbounds %Compiler, ptr %73, i64 0, i32 6
  %74 = load ptr, ptr %memberidx1.i78, align 8
  %memberidx2.i79 = getelementptr inbounds %Array_FloError_, ptr %74, i64 0, i32 2
  %75 = load i64, ptr %memberidx2.i79, align 4
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %common.ret, label %ifend18

else17:                                           ; preds = %ifend11
  store ptr null, ptr %memberidx24, align 8
  br label %ifend18

ifend18:                                          ; preds = %if.entry16, %else17
  %77 = tail call ptr @malloc(i32 24)
  %78 = tail call ptr @malloc(i32 2048)
  store ptr %78, ptr %77, align 8
  br label %for.body.i73

for.body.i73:                                     ; preds = %ifend18, %for.body.i73
  %i.0.i70109 = phi i64 [ 0, %ifend18 ], [ %80, %for.body.i73 ]
  %79 = load ptr, ptr %77, align 8
  %ptridx.i72 = getelementptr inbounds ptr, ptr %79, i64 %i.0.i70109
  store ptr null, ptr %ptridx.i72, align 8
  %80 = add nuw nsw i64 %i.0.i70109, 1
  %81 = icmp ult i64 %i.0.i70109, 255
  br i1 %81, label %for.body.i73, label %Map_string_PropId__constructor.exit76

Map_string_PropId__constructor.exit76:            ; preds = %for.body.i73
  %memberidx25 = getelementptr inbounds %Class, ptr %58, i64 0, i32 6
  %memberidx2.i74 = getelementptr inbounds %Map_string_PropId_, ptr %77, i64 0, i32 1
  store i64 256, ptr %memberidx2.i74, align 4
  %memberidx3.i75 = getelementptr inbounds %Map_string_PropId_, ptr %77, i64 0, i32 2
  store i64 0, ptr %memberidx3.i75, align 4
  store ptr %77, ptr %memberidx25, align 8
  %82 = tail call ptr @malloc(i32 24)
  %83 = tail call ptr @malloc(i32 2048)
  store ptr %83, ptr %82, align 8
  br label %for.body.i

for.body.i:                                       ; preds = %Map_string_PropId__constructor.exit76, %for.body.i
  %i.0.i108 = phi i64 [ 0, %Map_string_PropId__constructor.exit76 ], [ %85, %for.body.i ]
  %84 = load ptr, ptr %82, align 8
  %ptridx.i69 = getelementptr inbounds ptr, ptr %84, i64 %i.0.i108
  store ptr null, ptr %ptridx.i69, align 8
  %85 = add nuw nsw i64 %i.0.i108, 1
  %86 = icmp ult i64 %i.0.i108, 255
  br i1 %86, label %for.body.i, label %Map_string_PropId__constructor.exit

Map_string_PropId__constructor.exit:              ; preds = %for.body.i
  %memberidx26 = getelementptr inbounds %Class, ptr %58, i64 0, i32 7
  %memberidx2.i = getelementptr inbounds %Map_string_PropId_, ptr %82, i64 0, i32 1
  store i64 256, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %Map_string_PropId_, ptr %82, i64 0, i32 2
  store i64 0, ptr %memberidx3.i, align 4
  store ptr %82, ptr %memberidx26, align 8
  %memberidx27 = getelementptr inbounds %Class, ptr %58, i64 0, i32 1
  store ptr %4, ptr %memberidx27, align 8
  %87 = tail call ptr @malloc(i32 24)
  %88 = load i64, ptr %memberidx.i.i80, align 4
  %89 = load ptr, ptr %0, align 8
  %memberidx1.i.i66 = getelementptr inbounds %Program, ptr %89, i64 0, i32 1
  %90 = load ptr, ptr %memberidx1.i.i66, align 8
  %memberidx.i.i.i67 = getelementptr inbounds %Array_Module_, ptr %90, i64 0, i32 1
  %91 = load ptr, ptr %memberidx.i.i.i67, align 8
  %ptridx.i.i.i68 = getelementptr inbounds ptr, ptr %91, i64 %88
  %92 = load ptr, ptr %ptridx.i.i.i68, align 8
  %memberidx30 = getelementptr inbounds %Module, ptr %92, i64 0, i32 4
  %93 = load ptr, ptr %memberidx30, align 8
  %memberidx31 = getelementptr inbounds %Array_Class_, ptr %93, i64 0, i32 2
  %94 = load i64, ptr %memberidx31, align 4
  store i64 %88, ptr %87, align 4
  %memberidx1.i.i63 = getelementptr inbounds %TypeId, ptr %87, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i63, align 4
  %memberidx2.i.i64 = getelementptr inbounds %TypeId, ptr %87, i64 0, i32 2
  store i64 %94, ptr %memberidx2.i.i64, align 4
  store ptr %87, ptr %58, align 8
  %95 = load ptr, ptr %memberidx1.i.i66, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %95, i64 0, i32 1
  %96 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %96, i64 %88
  %97 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx32 = getelementptr inbounds %Module, ptr %97, i64 0, i32 4
  %98 = load ptr, ptr %memberidx32, align 8
  %memberidx.i = getelementptr inbounds %Array_Class_, ptr %98, i64 0, i32 2
  %99 = load i64, ptr %memberidx.i, align 4
  %memberidx1.i59 = getelementptr inbounds %Array_Class_, ptr %98, i64 0, i32 3
  %100 = load i64, ptr %memberidx1.i59, align 4
  %.not.i = icmp slt i64 %99, %100
  br i1 %.not.i, label %Map_string_PropId__constructor.exit.Array_Class____sl__.exit_crit_edge, label %if.entry.i

Map_string_PropId__constructor.exit.Array_Class____sl__.exit_crit_edge: ; preds = %Map_string_PropId__constructor.exit
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Class_, ptr %98, i64 0, i32 1
  %.pre114 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Class____sl__.exit

if.entry.i:                                       ; preds = %Map_string_PropId__constructor.exit
  %101 = shl i64 %100, 1
  store i64 %101, ptr %memberidx1.i59, align 4
  %memberidx2.i.i60 = getelementptr inbounds %Array_Class_, ptr %98, i64 0, i32 1
  %102 = load ptr, ptr %memberidx2.i.i60, align 8
  %103 = shl i64 %100, 4
  %104 = tail call ptr @realloc(ptr %102, i64 %103)
  store ptr %104, ptr %memberidx2.i.i60, align 8
  %.pre113 = load i64, ptr %memberidx.i, align 4
  br label %Array_Class____sl__.exit

Array_Class____sl__.exit:                         ; preds = %Map_string_PropId__constructor.exit.Array_Class____sl__.exit_crit_edge, %if.entry.i
  %105 = phi ptr [ %.pre114, %Map_string_PropId__constructor.exit.Array_Class____sl__.exit_crit_edge ], [ %104, %if.entry.i ]
  %106 = phi i64 [ %99, %Map_string_PropId__constructor.exit.Array_Class____sl__.exit_crit_edge ], [ %.pre113, %if.entry.i ]
  %107 = add i64 %106, 1
  store i64 %107, ptr %memberidx.i, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %105, i64 %106
  store ptr %58, ptr %ptridx.i, align 8
  %memberidx33 = getelementptr inbounds %Scope, ptr %70, i64 0, i32 2
  %108 = load ptr, ptr %memberidx33, align 8
  %109 = load ptr, ptr %58, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %108, ptr %4, ptr %109)
  %memberidx35 = getelementptr inbounds %Scope, ptr %70, i64 0, i32 1
  %110 = load ptr, ptr %memberidx35, align 8
  %111 = tail call ptr @malloc(i32 24)
  %112 = load ptr, ptr %58, align 8
  %113 = load i64, ptr %112, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %112, i64 0, i32 2
  %114 = load i64, ptr %memberidx1.i, align 4
  store i64 3, ptr %111, align 4
  %memberidx1.i.i = getelementptr inbounds %VarId, ptr %111, i64 0, i32 1
  store i64 %113, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %111, i64 0, i32 2
  store i64 %114, ptr %memberidx2.i.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %110, ptr %4, ptr nonnull %111)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_function_within_module(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 49)
  %memberidx.i = getelementptr inbounds %Function, ptr %3, i64 0, i32 6
  %memberidx1 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 4
  %4 = load i1, ptr %memberidx1, align 1
  store i1 %4, ptr %memberidx.i, align 1
  %5 = load ptr, ptr %1, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %5, i64 0, i32 2
  %6 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Function, ptr %3, i64 0, i32 1
  store ptr %6, ptr %memberidx4, align 8
  %7 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %6)
  %.not.i = icmp eq ptr %7, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 2
  br i1 %9, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend11, %Array_Function____sl__.exit, %TypeChecker_error.exit93, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %if.entry.i
  %10 = load ptr, ptr %6, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx5, align 8
  %12 = tail call ptr %11(ptr nonnull %6)
  %13 = alloca ptr, align 8
  %14 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %13, ptr nonnull @93, ptr %12)
  %15 = load ptr, ptr %13, align 8
  %16 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %16, align 8
  %memberidx.i69 = getelementptr inbounds %string, ptr %16, i64 0, i32 1
  store ptr %15, ptr %memberidx.i69, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  store i64 %14, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %16, i64 0, i32 3
  store i64 %14, ptr %memberidx2.i, align 4
  tail call void @free(ptr %12)
  %17 = load ptr, ptr %1, align 8
  %memberidx7 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx7, align 8
  %memberidx.i74 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %19 = load ptr, ptr %memberidx.i74, align 8
  %memberidx1.i75 = getelementptr inbounds %Compiler, ptr %19, i64 0, i32 6
  %20 = load ptr, ptr %memberidx1.i75, align 8
  %21 = call ptr @malloc(i32 24)
  store i64 1, ptr %21, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %21, i64 0, i32 2
  store ptr %18, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i76 = getelementptr inbounds %FloError, ptr %21, i64 0, i32 1
  store ptr %16, ptr %memberidx2.i.i76, align 8
  %memberidx.i.i77 = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i.i77, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 3
  %23 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %22, %23
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 1
  %.pre113 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %24 = shl i64 %23, 1
  store i64 %24, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i.i.i, align 8
  %26 = shl i64 %23, 4
  %27 = call ptr @realloc(ptr %25, i64 %26)
  store ptr %27, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i77, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %28 = phi ptr [ %.pre113, %if.entry.TypeChecker_error.exit_crit_edge ], [ %27, %if.entry.i.i ]
  %29 = phi i64 [ %22, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %30 = add i64 %29, 1
  store i64 %30, ptr %memberidx.i.i77, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %28, i64 %29
  store ptr %21, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %31 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %6)
  %32 = load i64, ptr %31, align 4
  %.not = icmp eq i64 %32, 22
  br i1 %.not, label %ifend11, label %if.entry9

if.entry9:                                        ; preds = %ifend
  %33 = load ptr, ptr %6, align 8
  %memberidx12 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %33, i64 0, i32 5
  %34 = load ptr, ptr %memberidx12, align 8
  %35 = tail call ptr %34(ptr nonnull %6)
  %36 = alloca ptr, align 8
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %36, ptr nonnull @94, ptr %35)
  %38 = load ptr, ptr %36, align 8
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i78 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i78, align 8
  %memberidx1.i79 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx1.i79, align 4
  %memberidx2.i80 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 %37, ptr %memberidx2.i80, align 4
  tail call void @free(ptr %35)
  %40 = load ptr, ptr %1, align 8
  %memberidx14 = getelementptr inbounds %Token, ptr %40, i64 0, i32 1
  %41 = load ptr, ptr %memberidx14, align 8
  %memberidx.i81 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %42 = load ptr, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %Compiler, ptr %42, i64 0, i32 6
  %43 = load ptr, ptr %memberidx1.i82, align 8
  %44 = call ptr @malloc(i32 24)
  store i64 1, ptr %44, align 4
  %memberidx1.i.i83 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 2
  store ptr %41, ptr %memberidx1.i.i83, align 8
  %memberidx2.i.i84 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 1
  store ptr %39, ptr %memberidx2.i.i84, align 8
  %memberidx.i.i85 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %45 = load i64, ptr %memberidx.i.i85, align 4
  %memberidx1.i2.i86 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 3
  %46 = load i64, ptr %memberidx1.i2.i86, align 4
  %.not.i.i87 = icmp slt i64 %45, %46
  br i1 %.not.i.i87, label %if.entry9.TypeChecker_error.exit93_crit_edge, label %if.entry.i.i90

if.entry9.TypeChecker_error.exit93_crit_edge:     ; preds = %if.entry9
  %memberidx4.i.i91.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %.pre115 = load ptr, ptr %memberidx4.i.i91.phi.trans.insert, align 8
  br label %TypeChecker_error.exit93

if.entry.i.i90:                                   ; preds = %if.entry9
  %47 = shl i64 %46, 1
  store i64 %47, ptr %memberidx1.i2.i86, align 4
  %memberidx2.i.i.i89 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %48 = load ptr, ptr %memberidx2.i.i.i89, align 8
  %49 = shl i64 %46, 4
  %50 = call ptr @realloc(ptr %48, i64 %49)
  store ptr %50, ptr %memberidx2.i.i.i89, align 8
  %.pre114 = load i64, ptr %memberidx.i.i85, align 4
  br label %TypeChecker_error.exit93

TypeChecker_error.exit93:                         ; preds = %if.entry9.TypeChecker_error.exit93_crit_edge, %if.entry.i.i90
  %51 = phi ptr [ %.pre115, %if.entry9.TypeChecker_error.exit93_crit_edge ], [ %50, %if.entry.i.i90 ]
  %52 = phi i64 [ %45, %if.entry9.TypeChecker_error.exit93_crit_edge ], [ %.pre114, %if.entry.i.i90 ]
  %53 = add i64 %52, 1
  store i64 %53, ptr %memberidx.i.i85, align 4
  %ptridx.i.i92 = getelementptr inbounds ptr, ptr %51, i64 %52
  store ptr %44, ptr %ptridx.i.i92, align 8
  br label %common.ret

ifend11:                                          ; preds = %ifend
  %54 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0)
  %memberidx.i94 = getelementptr inbounds %Scope, ptr %54, i64 0, i32 5
  %memberidx1.i95 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %55 = load ptr, ptr %memberidx1.i95, align 8
  store ptr %55, ptr %memberidx.i94, align 8
  %56 = load ptr, ptr %54, align 8
  store ptr %56, ptr %memberidx1.i95, align 8
  %memberidx17 = getelementptr inbounds %Function, ptr %3, i64 0, i32 2
  %57 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FunctionArg_, ptr %57, align 8
  %memberidx.i96 = getelementptr inbounds %Array_FunctionArg_, ptr %57, i64 0, i32 2
  store i64 0, ptr %memberidx.i96, align 4
  %memberidx1.i97 = getelementptr inbounds %Array_FunctionArg_, ptr %57, i64 0, i32 3
  store i64 8, ptr %memberidx1.i97, align 4
  %memberidx2.i98 = getelementptr inbounds %Array_FunctionArg_, ptr %57, i64 0, i32 1
  %58 = tail call ptr @malloc(i32 64)
  store ptr %58, ptr %memberidx2.i98, align 8
  store i64 0, ptr %memberidx.i96, align 4
  store ptr %57, ptr %memberidx17, align 8
  %memberidx20 = getelementptr inbounds %Function, ptr %3, i64 0, i32 4
  %memberidx21 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 1
  %59 = load ptr, ptr %memberidx21, align 8
  %memberidx22 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 3
  %60 = load ptr, ptr %memberidx22, align 8
  %61 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr %0, ptr %59, ptr %60, ptr nonnull %57)
  store ptr %61, ptr %memberidx20, align 8
  %memberidx.i99 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %62 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i100 = getelementptr inbounds %Compiler, ptr %62, i64 0, i32 6
  %63 = load ptr, ptr %memberidx1.i100, align 8
  %memberidx2.i101 = getelementptr inbounds %Array_FloError_, ptr %63, i64 0, i32 2
  %64 = load i64, ptr %memberidx2.i101, align 4
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %common.ret, label %ifend26

ifend26:                                          ; preds = %ifend11
  %66 = tail call ptr @malloc(i32 24)
  %memberidx28 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %67 = load i64, ptr %memberidx28, align 4
  %68 = load ptr, ptr %0, align 8
  %memberidx1.i.i103 = getelementptr inbounds %Program, ptr %68, i64 0, i32 1
  %69 = load ptr, ptr %memberidx1.i.i103, align 8
  %memberidx.i.i.i104 = getelementptr inbounds %Array_Module_, ptr %69, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i.i104, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %70, i64 %67
  %71 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx29 = getelementptr inbounds %Module, ptr %71, i64 0, i32 5
  %72 = load ptr, ptr %memberidx29, align 8
  %memberidx30 = getelementptr inbounds %Array_Function_, ptr %72, i64 0, i32 2
  %73 = load i64, ptr %memberidx30, align 4
  store i64 0, ptr %66, align 4
  %memberidx1.i111 = getelementptr inbounds %VarId, ptr %66, i64 0, i32 1
  store i64 %67, ptr %memberidx1.i111, align 4
  %memberidx2.i112 = getelementptr inbounds %VarId, ptr %66, i64 0, i32 2
  store i64 %73, ptr %memberidx2.i112, align 4
  store ptr %66, ptr %3, align 8
  %74 = load ptr, ptr %memberidx.i94, align 8
  store ptr %74, ptr %memberidx1.i95, align 8
  %memberidx33 = getelementptr inbounds %Function, ptr %3, i64 0, i32 5
  %75 = load ptr, ptr %54, align 8
  store ptr %75, ptr %memberidx33, align 8
  %76 = load ptr, ptr %memberidx1.i.i103, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %76, i64 0, i32 1
  %77 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %77, i64 %67
  %78 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx.i110 = getelementptr inbounds %Module, ptr %78, i64 0, i32 7
  %79 = load ptr, ptr %memberidx.i110, align 8
  %memberidx.i1.i = getelementptr inbounds %Array_Scope_, ptr %79, i64 0, i32 1
  %80 = load ptr, ptr %memberidx.i1.i, align 8
  %81 = load ptr, ptr %80, align 8
  %memberidx35 = getelementptr inbounds %Module, ptr %78, i64 0, i32 5
  %82 = load ptr, ptr %memberidx35, align 8
  %memberidx.i70 = getelementptr inbounds %Array_Function_, ptr %82, i64 0, i32 2
  %83 = load i64, ptr %memberidx.i70, align 4
  %memberidx1.i71 = getelementptr inbounds %Array_Function_, ptr %82, i64 0, i32 3
  %84 = load i64, ptr %memberidx1.i71, align 4
  %.not.i72 = icmp slt i64 %83, %84
  br i1 %.not.i72, label %ifend26.Array_Function____sl__.exit_crit_edge, label %if.entry.i73

ifend26.Array_Function____sl__.exit_crit_edge:    ; preds = %ifend26
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Function_, ptr %82, i64 0, i32 1
  %.pre117 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Function____sl__.exit

if.entry.i73:                                     ; preds = %ifend26
  %85 = shl i64 %84, 1
  store i64 %85, ptr %memberidx1.i71, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Function_, ptr %82, i64 0, i32 1
  %86 = load ptr, ptr %memberidx2.i.i, align 8
  %87 = shl i64 %84, 4
  %88 = tail call ptr @realloc(ptr %86, i64 %87)
  store ptr %88, ptr %memberidx2.i.i, align 8
  %.pre116 = load i64, ptr %memberidx.i70, align 4
  br label %Array_Function____sl__.exit

Array_Function____sl__.exit:                      ; preds = %ifend26.Array_Function____sl__.exit_crit_edge, %if.entry.i73
  %89 = phi ptr [ %.pre117, %ifend26.Array_Function____sl__.exit_crit_edge ], [ %88, %if.entry.i73 ]
  %90 = phi i64 [ %83, %ifend26.Array_Function____sl__.exit_crit_edge ], [ %.pre116, %if.entry.i73 ]
  %91 = add i64 %90, 1
  store i64 %91, ptr %memberidx.i70, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %89, i64 %90
  store ptr %3, ptr %ptridx.i, align 8
  %memberidx36 = getelementptr inbounds %Scope, ptr %81, i64 0, i32 3
  %92 = load ptr, ptr %memberidx36, align 8
  %93 = load ptr, ptr %memberidx4, align 8
  %94 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %92, ptr %93, ptr %94)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %4)
  %6 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %tailrecurse.i, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i67, %tailrecurse.i ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %7 = load i64, ptr %.tr11.i, align 4
  %switch = icmp eq i64 %7, 21
  %memberidx1.i67 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br i1 %switch, label %tailrecurse.i, label %if.entry3.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i69 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %8 = load ptr, ptr %memberidx6.i69, align 8
  %memberidx.i.i70 = getelementptr inbounds %Program, ptr %6, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i70, align 8
  %10 = load i64, ptr %8, align 4
  %memberidx.i.i.i71 = getelementptr inbounds %Array_Module_, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i.i71, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %12 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i72 = getelementptr inbounds %Module, ptr %12, i64 0, i32 4
  %13 = load ptr, ptr %memberidx2.i.i72, align 8
  %memberidx3.i.i73 = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i.i73, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %15, i64 %14
  %16 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx3 = getelementptr inbounds %Class, ptr %16, i64 0, i32 6
  %17 = load ptr, ptr %memberidx3, align 8
  %18 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %5)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %17, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = srem i64 %18, %19
  %21 = load ptr, ptr %17, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %21, i64 %20
  %22 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %22, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %23 = phi ptr [ %33, %else.i ], [ %21, %while.entry.i.preheader ]
  %24 = phi i64 [ %34, %else.i ], [ %19, %while.entry.i.preheader ]
  %25 = phi ptr [ %37, %else.i ], [ %22, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %36, %else.i ], [ %20, %while.entry.i.preheader ]
  %26 = load ptr, ptr %25, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i.i, align 4
  %28 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %27, %28
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  %29 = load ptr, ptr %memberidx2.i.i, align 8
  %30 = load ptr, ptr %memberidx3.i.i, align 8
  %31 = tail call i64 @memcmp(ptr %29, ptr %30, i64 %27)
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre75 = load ptr, ptr %17, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre76.pre = load ptr, ptr %17, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre76.pre, i64 %hash.0.i
  %.pre77.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre77.pre, null
  br i1 %.not29.i, label %common.ret, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %33 = phi ptr [ %.pre75, %ifend.i.i.else.i_crit_edge ], [ %23, %while.entry.i ]
  %34 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %24, %while.entry.i ]
  %35 = add i64 %hash.0.i, 1
  %36 = srem i64 %35, %34
  %ptridx7.i = getelementptr inbounds ptr, ptr %33, i64 %36
  %37 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %37, null
  br i1 %.not30.i, label %common.ret, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre77.pre, i64 0, i32 1
  %38 = load ptr, ptr %memberidx15.i, align 8
  %39 = icmp eq ptr %38, null
  br i1 %39, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %get_class_prop_type.exit, %Map_string_PropId____getitem__.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %101, %ifend13 ], [ null, %Map_string_PropId____getitem__.exit ], [ null, %get_class_prop_type.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %40 = load ptr, ptr %0, align 8
  %memberidx.i.i34 = getelementptr inbounds %PropId, ptr %38, i64 0, i32 1
  %41 = load ptr, ptr %memberidx.i.i34, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %40, i64 0, i32 1
  %42 = load ptr, ptr %memberidx.i.i.i, align 8
  %43 = load i64, ptr %41, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %45, i64 0, i32 4
  %46 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %41, i64 0, i32 2
  %47 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %48, i64 %47
  %49 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %50 = load i64, ptr %38, align 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %49, i64 0, i32 5
  %52 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %38, i64 0, i32 2
  %53 = load i64, ptr %memberidx2.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %54, i64 %53
  %55 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %55, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %49, i64 0, i32 4
  %56 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %38, i64 0, i32 2
  %57 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %56, i64 0, i32 1
  %58 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %58, i64 %57
  %59 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %59, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i35 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx5 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i35, i64 0, i32 1
  %60 = load ptr, ptr %memberidx5, align 8
  %memberidx.i36 = getelementptr inbounds %Array_Type_, ptr %60, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i36, align 8
  %62 = load ptr, ptr %61, align 8
  %memberidx6 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %63 = load ptr, ptr %memberidx6, align 8
  %64 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %62, ptr %63)
  %memberidx.i37 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %65 = load ptr, ptr %memberidx.i37, align 8
  %memberidx1.i38 = getelementptr inbounds %Compiler, ptr %65, i64 0, i32 6
  %66 = load ptr, ptr %memberidx1.i38, align 8
  %memberidx2.i39 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 2
  %67 = load i64, ptr %memberidx2.i39, align 4
  %68 = icmp sgt i64 %67, 0
  br i1 %68, label %common.ret, label %ifend9

ifend9:                                           ; preds = %get_class_prop_type.exit
  %memberidx10 = getelementptr inbounds %Expression, ptr %64, i64 0, i32 3
  %69 = load ptr, ptr %memberidx10, align 8
  %70 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %62, ptr %69)
  br i1 %70, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %71 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %62)
  %72 = load ptr, ptr %71, align 8
  %memberidx14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %72, i64 0, i32 5
  %73 = load ptr, ptr %memberidx14, align 8
  %74 = tail call ptr %73(ptr nonnull %71)
  %75 = load ptr, ptr %memberidx10, align 8
  %76 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %75)
  %77 = load ptr, ptr %76, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %77, i64 0, i32 5
  %78 = load ptr, ptr %memberidx16, align 8
  %79 = tail call ptr %78(ptr nonnull %76)
  %80 = alloca ptr, align 8
  %81 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %80, ptr nonnull @154, ptr %74, ptr %79)
  %82 = load ptr, ptr %80, align 8
  %83 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %83, align 8
  %memberidx.i40 = getelementptr inbounds %string, ptr %83, i64 0, i32 1
  store ptr %82, ptr %memberidx.i40, align 8
  %memberidx1.i41 = getelementptr inbounds %string, ptr %83, i64 0, i32 2
  store i64 %81, ptr %memberidx1.i41, align 4
  %memberidx2.i42 = getelementptr inbounds %string, ptr %83, i64 0, i32 3
  store i64 %81, ptr %memberidx2.i42, align 4
  tail call void @free(ptr %74)
  tail call void @free(ptr %79)
  %84 = load ptr, ptr %memberidx6, align 8
  %85 = load ptr, ptr %84, align 8
  %86 = load ptr, ptr %memberidx.i37, align 8
  %memberidx1.i44 = getelementptr inbounds %Compiler, ptr %86, i64 0, i32 6
  %87 = load ptr, ptr %memberidx1.i44, align 8
  %88 = call ptr @malloc(i32 24)
  store i64 5, ptr %88, align 4
  %memberidx1.i.i45 = getelementptr inbounds %FloError, ptr %88, i64 0, i32 2
  store ptr %85, ptr %memberidx1.i.i45, align 8
  %memberidx2.i.i46 = getelementptr inbounds %FloError, ptr %88, i64 0, i32 1
  store ptr %83, ptr %memberidx2.i.i46, align 8
  %memberidx.i.i47 = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 2
  %89 = load i64, ptr %memberidx.i.i47, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 3
  %90 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i48 = icmp slt i64 %89, %90
  br i1 %.not.i.i48, label %if.entry11.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry11.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry11
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 1
  %.pre79 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry11
  %91 = shl i64 %90, 1
  store i64 %91, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i50 = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 1
  %92 = load ptr, ptr %memberidx2.i.i.i50, align 8
  %93 = shl i64 %90, 4
  %94 = call ptr @realloc(ptr %92, i64 %93)
  store ptr %94, ptr %memberidx2.i.i.i50, align 8
  %.pre78 = load i64, ptr %memberidx.i.i47, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %95 = phi ptr [ %.pre79, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %94, %if.entry.i.i ]
  %96 = phi i64 [ %89, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %.pre78, %if.entry.i.i ]
  %97 = add i64 %96, 1
  store i64 %97, ptr %memberidx.i.i47, align 4
  %ptridx.i.i51 = getelementptr inbounds ptr, ptr %95, i64 %96
  store ptr %88, ptr %ptridx.i.i51, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %98 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %98, align 4
  %memberidx.i.i52 = getelementptr inbounds %Expression, ptr %98, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i52, align 4
  %memberidx1.i.i53 = getelementptr inbounds %Expression, ptr %98, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i53, align 1
  %memberidx.i54 = getelementptr inbounds %MemberExpression, ptr %98, i64 0, i32 4
  store ptr %1, ptr %memberidx.i54, align 8
  %memberidx1.i55 = getelementptr inbounds %MemberExpression, ptr %98, i64 0, i32 5
  store ptr %38, ptr %memberidx1.i55, align 8
  %memberidx2.i56 = getelementptr inbounds %Expression, ptr %98, i64 0, i32 3
  store ptr %common.ret.op.i35, ptr %memberidx2.i56, align 8
  %99 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %99, align 8
  %memberidx.i57 = getelementptr inbounds %Array_Expression_, ptr %99, i64 0, i32 2
  store i64 0, ptr %memberidx.i57, align 4
  %memberidx1.i58 = getelementptr inbounds %Array_Expression_, ptr %99, i64 0, i32 3
  store i64 8, ptr %memberidx1.i58, align 4
  %memberidx2.i59 = getelementptr inbounds %Array_Expression_, ptr %99, i64 0, i32 1
  %100 = tail call ptr @malloc(i32 64)
  store ptr %100, ptr %memberidx2.i59, align 8
  store ptr %64, ptr %100, align 8
  store i64 1, ptr %memberidx.i57, align 4
  %101 = tail call ptr @malloc(i32 41)
  %memberidx21 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i35, i64 0, i32 2
  %102 = load ptr, ptr %memberidx21, align 8
  store i64 8, ptr %101, align 4
  %memberidx.i.i60 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i60, align 4
  %memberidx1.i.i61 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i61, align 1
  %memberidx.i62 = getelementptr inbounds %CallExpression, ptr %101, i64 0, i32 4
  store ptr %98, ptr %memberidx.i62, align 8
  %memberidx1.i63 = getelementptr inbounds %CallExpression, ptr %101, i64 0, i32 5
  store ptr %99, ptr %memberidx1.i63, align 8
  %memberidx2.i64 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 3
  store ptr %102, ptr %memberidx2.i64, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = load ptr, ptr %0, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i91, %3
  %.tr11.i.in = phi ptr [ %memberidx1, %3 ], [ %memberidx1.i90, %if.entry.i91 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %5 = load i64, ptr %.tr11.i, align 4
  switch i64 %5, label %get_class_from_type.exit [
    i64 21, label %if.entry.i91
    i64 13, label %if.entry3.i
  ]

if.entry.i91:                                     ; preds = %tailrecurse.i
  %memberidx1.i90 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i92 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %6 = load ptr, ptr %memberidx6.i92, align 8
  %memberidx.i.i93 = getelementptr inbounds %Program, ptr %4, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i93, align 8
  %8 = load i64, ptr %6, align 4
  %memberidx.i.i.i94 = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i94, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %9, i64 %8
  %10 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i95 = getelementptr inbounds %Module, ptr %10, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2.i.i95, align 8
  %memberidx3.i.i96 = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %12 = load i64, ptr %memberidx3.i.i96, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i6.i.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i89 = phi ptr [ %14, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx2 = getelementptr inbounds %Class, ptr %common.ret.op.i89, i64 0, i32 6
  %15 = load ptr, ptr %memberidx2, align 8
  %16 = tail call ptr @malloc(i32 88)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %16, ptr noundef nonnull align 8 dereferenceable(11) @105, i64 11, i1 false)
  %17 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %17, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  store ptr %16, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i, align 4
  %18 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %17)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %15, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = srem i64 %18, %19
  %21 = load ptr, ptr %15, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %21, i64 %20
  %22 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %22, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %get_class_from_type.exit, %else.i
  %23 = phi ptr [ %33, %else.i ], [ %21, %get_class_from_type.exit ]
  %24 = phi i64 [ %34, %else.i ], [ %19, %get_class_from_type.exit ]
  %25 = phi ptr [ %37, %else.i ], [ %22, %get_class_from_type.exit ]
  %hash.0.i = phi i64 [ %36, %else.i ], [ %20, %get_class_from_type.exit ]
  %26 = load ptr, ptr %25, align 8
  %memberidx.i.i38 = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i.i38, align 4
  %28 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %27, %28
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i40 = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  %29 = load ptr, ptr %memberidx2.i.i40, align 8
  %30 = load ptr, ptr %memberidx.i.i, align 8
  %31 = tail call i64 @memcmp(ptr %29, ptr %30, i64 %27)
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre100 = load ptr, ptr %15, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre101.pre = load ptr, ptr %15, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre101.pre, i64 %hash.0.i
  %.pre102.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre102.pre, null
  br i1 %.not29.i, label %if.entry, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %33 = phi ptr [ %.pre100, %ifend.i.i.else.i_crit_edge ], [ %23, %while.entry.i ]
  %34 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %24, %while.entry.i ]
  %35 = add i64 %hash.0.i, 1
  %36 = srem i64 %35, %34
  %ptridx7.i = getelementptr inbounds ptr, ptr %33, i64 %36
  %37 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %37, null
  br i1 %.not30.i, label %if.entry, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre102.pre, i64 0, i32 1
  %38 = load ptr, ptr %memberidx15.i, align 8
  %39 = icmp eq ptr %38, null
  br i1 %39, label %if.entry, label %ifend

common.ret:                                       ; preds = %get_class_prop_type.exit, %ifend15, %TypeChecker_error.exit74, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit74 ], [ %120, %ifend15 ], [ null, %get_class_prop_type.exit ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_string_PropId____getitem__.exit
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i89, i64 0, i32 1
  %40 = load ptr, ptr %memberidx3, align 8
  %41 = load ptr, ptr %40, align 8
  %memberidx4 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %41, i64 0, i32 5
  %42 = load ptr, ptr %memberidx4, align 8
  %43 = tail call ptr %42(ptr nonnull %40)
  %44 = alloca ptr, align 8
  %45 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %44, ptr nonnull @186, ptr %43)
  %46 = load ptr, ptr %44, align 8
  %47 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %47, align 8
  %memberidx.i41 = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  store ptr %46, ptr %memberidx.i41, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  store i64 %45, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %47, i64 0, i32 3
  store i64 %45, ptr %memberidx2.i, align 4
  tail call void @free(ptr %43)
  %48 = load ptr, ptr %2, align 8
  %memberidx.i42 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %49 = load ptr, ptr %memberidx.i42, align 8
  %memberidx1.i43 = getelementptr inbounds %Compiler, ptr %49, i64 0, i32 6
  %50 = load ptr, ptr %memberidx1.i43, align 8
  %51 = call ptr @malloc(i32 24)
  store i64 4, ptr %51, align 4
  %memberidx1.i.i44 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 2
  store ptr %48, ptr %memberidx1.i.i44, align 8
  %memberidx2.i.i45 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 1
  store ptr %47, ptr %memberidx2.i.i45, align 8
  %memberidx.i.i46 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 2
  %52 = load i64, ptr %memberidx.i.i46, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 3
  %53 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i47 = icmp slt i64 %52, %53
  br i1 %.not.i.i47, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %.pre106 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %54 = shl i64 %53, 1
  store i64 %54, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %55 = load ptr, ptr %memberidx2.i.i.i, align 8
  %56 = shl i64 %53, 4
  %57 = call ptr @realloc(ptr %55, i64 %56)
  store ptr %57, ptr %memberidx2.i.i.i, align 8
  %.pre105 = load i64, ptr %memberidx.i.i46, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %58 = phi ptr [ %.pre106, %if.entry.TypeChecker_error.exit_crit_edge ], [ %57, %if.entry.i.i ]
  %59 = phi i64 [ %52, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre105, %if.entry.i.i ]
  %60 = add i64 %59, 1
  store i64 %60, ptr %memberidx.i.i46, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %58, i64 %59
  store ptr %51, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %61 = load ptr, ptr %0, align 8
  %memberidx.i.i48 = getelementptr inbounds %PropId, ptr %38, i64 0, i32 1
  %62 = load ptr, ptr %memberidx.i.i48, align 8
  %memberidx.i.i.i49 = getelementptr inbounds %Program, ptr %61, i64 0, i32 1
  %63 = load ptr, ptr %memberidx.i.i.i49, align 8
  %64 = load i64, ptr %62, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %63, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %65, i64 %64
  %66 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i50 = getelementptr inbounds %Module, ptr %66, i64 0, i32 4
  %67 = load ptr, ptr %memberidx2.i.i.i50, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %62, i64 0, i32 2
  %68 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %69, i64 %68
  %70 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %71 = load i64, ptr %38, align 4
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i52 = getelementptr inbounds %Class, ptr %70, i64 0, i32 5
  %73 = load ptr, ptr %memberidx1.i52, align 8
  %memberidx2.i53 = getelementptr inbounds %PropId, ptr %38, i64 0, i32 2
  %74 = load i64, ptr %memberidx2.i53, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %75, i64 %74
  %76 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %76, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 4
  %77 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %38, i64 0, i32 2
  %78 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i54 = getelementptr inbounds ptr, ptr %79, i64 %78
  %80 = load ptr, ptr %ptridx.i.i54, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %80, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i51 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx7 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i51, i64 0, i32 1
  %81 = load ptr, ptr %memberidx7, align 8
  %memberidx.i55 = getelementptr inbounds %Array_Type_, ptr %81, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i55, align 8
  %83 = load ptr, ptr %82, align 8
  %memberidx8 = getelementptr inbounds %ExpressionIndexNode, ptr %2, i64 0, i32 4
  %84 = load ptr, ptr %memberidx8, align 8
  %85 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %83, ptr %84)
  %memberidx.i56 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %86 = load ptr, ptr %memberidx.i56, align 8
  %memberidx1.i57 = getelementptr inbounds %Compiler, ptr %86, i64 0, i32 6
  %87 = load ptr, ptr %memberidx1.i57, align 8
  %memberidx2.i58 = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 2
  %88 = load i64, ptr %memberidx2.i58, align 4
  %89 = icmp sgt i64 %88, 0
  br i1 %89, label %common.ret, label %ifend11

ifend11:                                          ; preds = %get_class_prop_type.exit
  %memberidx12 = getelementptr inbounds %Expression, ptr %85, i64 0, i32 3
  %90 = load ptr, ptr %memberidx12, align 8
  %91 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %83, ptr %90)
  br i1 %91, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend11
  %92 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %83)
  %93 = load ptr, ptr %92, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx16, align 8
  %95 = tail call ptr %94(ptr nonnull %92)
  %96 = load ptr, ptr %memberidx12, align 8
  %97 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %96)
  %98 = load ptr, ptr %97, align 8
  %memberidx18 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %98, i64 0, i32 5
  %99 = load ptr, ptr %memberidx18, align 8
  %100 = tail call ptr %99(ptr nonnull %97)
  %101 = alloca ptr, align 8
  %102 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %101, ptr nonnull @154, ptr %95, ptr %100)
  %103 = load ptr, ptr %101, align 8
  %104 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %104, align 8
  %memberidx.i59 = getelementptr inbounds %string, ptr %104, i64 0, i32 1
  store ptr %103, ptr %memberidx.i59, align 8
  %memberidx1.i60 = getelementptr inbounds %string, ptr %104, i64 0, i32 2
  store i64 %102, ptr %memberidx1.i60, align 4
  %memberidx2.i61 = getelementptr inbounds %string, ptr %104, i64 0, i32 3
  store i64 %102, ptr %memberidx2.i61, align 4
  tail call void @free(ptr %95)
  tail call void @free(ptr %100)
  %105 = load ptr, ptr %memberidx8, align 8
  %106 = load ptr, ptr %105, align 8
  %107 = load ptr, ptr %memberidx.i56, align 8
  %memberidx1.i63 = getelementptr inbounds %Compiler, ptr %107, i64 0, i32 6
  %108 = load ptr, ptr %memberidx1.i63, align 8
  %109 = call ptr @malloc(i32 24)
  store i64 5, ptr %109, align 4
  %memberidx1.i.i64 = getelementptr inbounds %FloError, ptr %109, i64 0, i32 2
  store ptr %106, ptr %memberidx1.i.i64, align 8
  %memberidx2.i.i65 = getelementptr inbounds %FloError, ptr %109, i64 0, i32 1
  store ptr %104, ptr %memberidx2.i.i65, align 8
  %memberidx.i.i66 = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 2
  %110 = load i64, ptr %memberidx.i.i66, align 4
  %memberidx1.i2.i67 = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 3
  %111 = load i64, ptr %memberidx1.i2.i67, align 4
  %.not.i.i68 = icmp slt i64 %110, %111
  br i1 %.not.i.i68, label %if.entry13.TypeChecker_error.exit74_crit_edge, label %if.entry.i.i71

if.entry13.TypeChecker_error.exit74_crit_edge:    ; preds = %if.entry13
  %memberidx4.i.i72.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 1
  %.pre104 = load ptr, ptr %memberidx4.i.i72.phi.trans.insert, align 8
  br label %TypeChecker_error.exit74

if.entry.i.i71:                                   ; preds = %if.entry13
  %112 = shl i64 %111, 1
  store i64 %112, ptr %memberidx1.i2.i67, align 4
  %memberidx2.i.i.i70 = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 1
  %113 = load ptr, ptr %memberidx2.i.i.i70, align 8
  %114 = shl i64 %111, 4
  %115 = call ptr @realloc(ptr %113, i64 %114)
  store ptr %115, ptr %memberidx2.i.i.i70, align 8
  %.pre103 = load i64, ptr %memberidx.i.i66, align 4
  br label %TypeChecker_error.exit74

TypeChecker_error.exit74:                         ; preds = %if.entry13.TypeChecker_error.exit74_crit_edge, %if.entry.i.i71
  %116 = phi ptr [ %.pre104, %if.entry13.TypeChecker_error.exit74_crit_edge ], [ %115, %if.entry.i.i71 ]
  %117 = phi i64 [ %110, %if.entry13.TypeChecker_error.exit74_crit_edge ], [ %.pre103, %if.entry.i.i71 ]
  %118 = add i64 %117, 1
  store i64 %118, ptr %memberidx.i.i66, align 4
  %ptridx.i.i73 = getelementptr inbounds ptr, ptr %116, i64 %117
  store ptr %109, ptr %ptridx.i.i73, align 8
  br label %common.ret

ifend15:                                          ; preds = %ifend11
  %119 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %119, align 4
  %memberidx.i.i75 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i75, align 4
  %memberidx1.i.i76 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i76, align 1
  %memberidx.i77 = getelementptr inbounds %MemberExpression, ptr %119, i64 0, i32 4
  store ptr %1, ptr %memberidx.i77, align 8
  %memberidx1.i78 = getelementptr inbounds %MemberExpression, ptr %119, i64 0, i32 5
  store ptr %38, ptr %memberidx1.i78, align 8
  %memberidx2.i79 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  store ptr %common.ret.op.i51, ptr %memberidx2.i79, align 8
  %120 = tail call ptr @malloc(i32 41)
  %121 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %121, align 8
  %memberidx.i80 = getelementptr inbounds %Array_Expression_, ptr %121, i64 0, i32 2
  store i64 0, ptr %memberidx.i80, align 4
  %memberidx1.i81 = getelementptr inbounds %Array_Expression_, ptr %121, i64 0, i32 3
  store i64 8, ptr %memberidx1.i81, align 4
  %memberidx2.i82 = getelementptr inbounds %Array_Expression_, ptr %121, i64 0, i32 1
  %122 = tail call ptr @malloc(i32 64)
  store ptr %122, ptr %memberidx2.i82, align 8
  store ptr %85, ptr %122, align 8
  store i64 1, ptr %memberidx.i80, align 4
  %memberidx23 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i51, i64 0, i32 2
  %123 = load ptr, ptr %memberidx23, align 8
  store i64 8, ptr %120, align 4
  %memberidx.i.i83 = getelementptr inbounds %Expression, ptr %120, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i83, align 4
  %memberidx1.i.i84 = getelementptr inbounds %Expression, ptr %120, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i84, align 1
  %memberidx.i85 = getelementptr inbounds %CallExpression, ptr %120, i64 0, i32 4
  store ptr %119, ptr %memberidx.i85, align 8
  %memberidx1.i86 = getelementptr inbounds %CallExpression, ptr %120, i64 0, i32 5
  store ptr %121, ptr %memberidx1.i86, align 8
  %memberidx2.i87 = getelementptr inbounds %Expression, ptr %120, i64 0, i32 3
  store ptr %123, ptr %memberidx2.i87, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %3, align 4
  %memberidx = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 6
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend4, %2, %TypeChecker_error.exit70, %ifend19, %TypeChecker_error.exit, %if.entry2
  %common.ret.op = phi ptr [ %17, %if.entry2 ], [ null, %TypeChecker_error.exit ], [ %48, %ifend19 ], [ null, %TypeChecker_error.exit70 ], [ null, %2 ], [ null, %ifend4 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = load i64, ptr %10, align 4
  %12 = icmp eq i64 %11, 21
  br i1 %12, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend, %if.entry.i
  %.tr5.i = phi ptr [ %13, %if.entry.i ], [ %10, %ifend ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %13 = load ptr, ptr %memberidx1.i1, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 21
  br i1 %15, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend
  %.lcssa.i = phi i64 [ %11, %ifend ], [ %14, %if.entry.i ]
  %16 = icmp eq i64 %.lcssa.i, 13
  br i1 %16, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %is_object.exit
  %17 = tail call fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %5, ptr %1)
  br label %common.ret

ifend4:                                           ; preds = %is_object.exit
  %18 = tail call ptr @malloc(i32 8)
  store i64 7, ptr %18, align 4
  %memberidx5 = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 4
  %19 = load ptr, ptr %memberidx5, align 8
  %20 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %18, ptr %19)
  %21 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i43 = getelementptr inbounds %Compiler, ptr %21, i64 0, i32 6
  %22 = load ptr, ptr %memberidx1.i43, align 8
  %memberidx2.i44 = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx2.i44, align 4
  %24 = icmp sgt i64 %23, 0
  br i1 %24, label %common.ret, label %ifend8

ifend8:                                           ; preds = %ifend4
  %memberidx9 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  %25 = load ptr, ptr %memberidx9, align 8
  %26 = load i64, ptr %25, align 4
  %27 = add i64 %26, -1
  %28 = icmp ult i64 %27, 7
  br i1 %28, label %ifend12, label %if.entry10

if.entry10:                                       ; preds = %ifend8
  %29 = tail call ptr @malloc(i32 272)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(34) %29, ptr noundef nonnull align 8 dereferenceable(34) @187, i64 34, i1 false)
  %30 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %30, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 1
  store ptr %29, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 2
  store i64 34, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 3
  store i64 34, ptr %memberidx2.i.i, align 4
  %31 = load ptr, ptr %memberidx5, align 8
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i46 = getelementptr inbounds %Compiler, ptr %33, i64 0, i32 6
  %34 = load ptr, ptr %memberidx1.i46, align 8
  %35 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %35, align 4
  %memberidx1.i.i47 = getelementptr inbounds %FloError, ptr %35, i64 0, i32 2
  store ptr %32, ptr %memberidx1.i.i47, align 8
  %memberidx2.i.i48 = getelementptr inbounds %FloError, ptr %35, i64 0, i32 1
  store ptr %30, ptr %memberidx2.i.i48, align 8
  %memberidx.i.i49 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 2
  %36 = load i64, ptr %memberidx.i.i49, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 3
  %37 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %36, %37
  br i1 %.not.i.i, label %if.entry10.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry10.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry10
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 1
  %.pre2 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry10
  %38 = shl i64 %37, 1
  store i64 %38, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 1
  %39 = load ptr, ptr %memberidx2.i.i.i, align 8
  %40 = shl i64 %37, 4
  %41 = tail call ptr @realloc(ptr %39, i64 %40)
  store ptr %41, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i49, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry10.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %42 = phi ptr [ %.pre2, %if.entry10.TypeChecker_error.exit_crit_edge ], [ %41, %if.entry.i.i ]
  %43 = phi i64 [ %36, %if.entry10.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %44 = add i64 %43, 1
  store i64 %44, ptr %memberidx.i.i49, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %42, i64 %43
  store ptr %35, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend12:                                          ; preds = %ifend8
  %45 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %45, align 4
  %46 = load ptr, ptr %memberidx1, align 8
  %47 = load i64, ptr %46, align 4
  switch i64 %47, label %else23 [
    i64 15, label %if.entry17
    i64 16, label %if.entry22
  ]

if.entry17:                                       ; preds = %ifend12
  %memberidx20 = getelementptr inbounds %PointerType, ptr %46, i64 0, i32 1
  br label %ifend19

ifend19:                                          ; preds = %if.entry22, %if.entry17
  %storemerge.in = phi ptr [ %memberidx25, %if.entry22 ], [ %memberidx20, %if.entry17 ]
  %storemerge = load ptr, ptr %storemerge.in, align 8
  %48 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %48, align 4
  %memberidx.i.i50 = getelementptr inbounds %Expression, ptr %48, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i50, align 4
  %memberidx1.i.i51 = getelementptr inbounds %Expression, ptr %48, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i51, align 1
  %memberidx.i52 = getelementptr inbounds %IndexExpression, ptr %48, i64 0, i32 4
  store ptr %5, ptr %memberidx.i52, align 8
  %memberidx1.i53 = getelementptr inbounds %IndexExpression, ptr %48, i64 0, i32 5
  store ptr %20, ptr %memberidx1.i53, align 8
  %memberidx2.i54 = getelementptr inbounds %Expression, ptr %48, i64 0, i32 3
  store ptr %storemerge, ptr %memberidx2.i54, align 8
  br label %common.ret

if.entry22:                                       ; preds = %ifend12
  %memberidx25 = getelementptr inbounds %ArrayType, ptr %46, i64 0, i32 1
  br label %ifend19

else23:                                           ; preds = %ifend12
  %49 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %46)
  %50 = load ptr, ptr %49, align 8
  %memberidx26 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %50, i64 0, i32 5
  %51 = load ptr, ptr %memberidx26, align 8
  %52 = tail call ptr %51(ptr nonnull %49)
  %53 = alloca ptr, align 8
  %54 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %53, ptr nonnull @188, ptr %52)
  %55 = load ptr, ptr %53, align 8
  %56 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %56, align 8
  %memberidx.i55 = getelementptr inbounds %string, ptr %56, i64 0, i32 1
  store ptr %55, ptr %memberidx.i55, align 8
  %memberidx1.i56 = getelementptr inbounds %string, ptr %56, i64 0, i32 2
  store i64 %54, ptr %memberidx1.i56, align 4
  %memberidx2.i57 = getelementptr inbounds %string, ptr %56, i64 0, i32 3
  store i64 %54, ptr %memberidx2.i57, align 4
  tail call void @free(ptr %52)
  %57 = load ptr, ptr %1, align 8
  %58 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i59 = getelementptr inbounds %Compiler, ptr %58, i64 0, i32 6
  %59 = load ptr, ptr %memberidx1.i59, align 8
  %60 = call ptr @malloc(i32 24)
  store i64 5, ptr %60, align 4
  %memberidx1.i.i60 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 2
  store ptr %57, ptr %memberidx1.i.i60, align 8
  %memberidx2.i.i61 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 1
  store ptr %56, ptr %memberidx2.i.i61, align 8
  %memberidx.i.i62 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %61 = load i64, ptr %memberidx.i.i62, align 4
  %memberidx1.i2.i63 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 3
  %62 = load i64, ptr %memberidx1.i2.i63, align 4
  %.not.i.i64 = icmp slt i64 %61, %62
  br i1 %.not.i.i64, label %else23.TypeChecker_error.exit70_crit_edge, label %if.entry.i.i67

else23.TypeChecker_error.exit70_crit_edge:        ; preds = %else23
  %memberidx4.i.i68.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %.pre4 = load ptr, ptr %memberidx4.i.i68.phi.trans.insert, align 8
  br label %TypeChecker_error.exit70

if.entry.i.i67:                                   ; preds = %else23
  %63 = shl i64 %62, 1
  store i64 %63, ptr %memberidx1.i2.i63, align 4
  %memberidx2.i.i.i66 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %64 = load ptr, ptr %memberidx2.i.i.i66, align 8
  %65 = shl i64 %62, 4
  %66 = call ptr @realloc(ptr %64, i64 %65)
  store ptr %66, ptr %memberidx2.i.i.i66, align 8
  %.pre3 = load i64, ptr %memberidx.i.i62, align 4
  br label %TypeChecker_error.exit70

TypeChecker_error.exit70:                         ; preds = %else23.TypeChecker_error.exit70_crit_edge, %if.entry.i.i67
  %67 = phi ptr [ %.pre4, %else23.TypeChecker_error.exit70_crit_edge ], [ %66, %if.entry.i.i67 ]
  %68 = phi i64 [ %61, %else23.TypeChecker_error.exit70_crit_edge ], [ %.pre3, %if.entry.i.i67 ]
  %69 = add i64 %68, 1
  store i64 %69, ptr %memberidx.i.i62, align 4
  %ptridx.i.i69 = getelementptr inbounds ptr, ptr %67, i64 %68
  store ptr %60, ptr %ptridx.i.i69, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_block(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %3 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %3, i64 0, i32 6
  %4 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %4, i64 0, i32 2
  %5 = load i64, ptr %memberidx2.i, align 4
  %6 = icmp sgt i64 %5, 0
  br i1 %6, label %common.ret, label %ifend

common.ret.loopexit:                              ; preds = %for.body
  store i1 false, ptr %14, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %2, %for.end
  %common.ret.op = phi ptr [ %7, %for.end ], [ null, %2 ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %7 = tail call ptr @malloc(i32 11)
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Statement_, ptr %8, align 8
  %memberidx.i.i = getelementptr inbounds %Array_Statement_, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Statement_, ptr %8, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Statement_, ptr %8, i64 0, i32 1
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %8, ptr %7, align 8
  %memberidx3.i = getelementptr inbounds %Block, ptr %7, i64 0, i32 1
  store i1 false, ptr %memberidx3.i, align 1
  %memberidx4.i = getelementptr inbounds %Block, ptr %7, i64 0, i32 2
  store i1 false, ptr %memberidx4.i, align 1
  %memberidx5.i = getelementptr inbounds %Block, ptr %7, i64 0, i32 3
  store i1 false, ptr %memberidx5.i, align 1
  %10 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0)
  %memberidx.i47 = getelementptr inbounds %Scope, ptr %10, i64 0, i32 5
  %memberidx1.i48 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %11 = load ptr, ptr %memberidx1.i48, align 8
  store ptr %11, ptr %memberidx.i47, align 8
  %12 = load ptr, ptr %10, align 8
  store ptr %12, ptr %memberidx1.i48, align 8
  %memberidx2 = getelementptr inbounds %BlockNode, ptr %1, i64 0, i32 1
  %13 = load ptr, ptr %memberidx2, align 8
  %14 = tail call ptr @malloc(i32 25)
  %memberidx.i49 = getelementptr inbounds %Array_StatementNode_, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i49, align 8
  %memberidx1.i50 = getelementptr inbounds %Array_StatementNode_, ptr %13, i64 0, i32 2
  %16 = load i64, ptr %memberidx1.i50, align 4
  store i1 false, ptr %14, align 1
  %memberidx1.i.i51 = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %14, i64 0, i32 1
  %memberidx2.i.i52 = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %14, i64 0, i32 3
  store ptr %15, ptr %memberidx2.i.i52, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %14, i64 0, i32 2
  store i64 %16, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i51, align 4
  %17 = icmp slt i64 %16, 1
  br i1 %17, label %for.end, label %for.body

for.body:                                         ; preds = %ifend, %ifend37
  %18 = phi i64 [ %40, %ifend37 ], [ 1, %ifend ]
  %storemerge79.in = phi ptr [ %ptridx.i67, %ifend37 ], [ %15, %ifend ]
  %storemerge79 = load ptr, ptr %storemerge79.in, align 8
  %19 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr %storemerge79)
  %20 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i57 = getelementptr inbounds %Compiler, ptr %20, i64 0, i32 6
  %21 = load ptr, ptr %memberidx1.i57, align 8
  %memberidx2.i58 = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i58, align 4
  %23 = icmp sgt i64 %22, 0
  br i1 %23, label %common.ret.loopexit, label %ifend6

for.end.sink.split:                               ; preds = %if.entry18, %Array_Statement____sl__.exit, %if.entry30, %if.entry35
  %.sink.ph = phi ptr [ %memberidx4.i, %if.entry30 ], [ %memberidx5.i, %if.entry35 ], [ %memberidx3.i, %Array_Statement____sl__.exit ], [ %memberidx3.i, %if.entry18 ]
  store i1 false, ptr %14, align 1
  br label %for.end

for.end:                                          ; preds = %ifend37, %for.end.sink.split, %ifend
  %.sink = phi ptr [ %14, %ifend ], [ %.sink.ph, %for.end.sink.split ], [ %14, %ifend37 ]
  store i1 true, ptr %.sink, align 1
  tail call void @free(ptr nonnull %14)
  %24 = load ptr, ptr %memberidx.i47, align 8
  store ptr %24, ptr %memberidx1.i48, align 8
  br label %common.ret

ifend6:                                           ; preds = %for.body
  %25 = load i64, ptr %memberidx.i.i, align 4
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i = icmp slt i64 %25, %26
  br i1 %.not.i, label %ifend6.Array_Statement____sl__.exit_crit_edge, label %if.entry.i

ifend6.Array_Statement____sl__.exit_crit_edge:    ; preds = %ifend6
  %.pre85 = load ptr, ptr %memberidx2.i.i, align 8
  br label %Array_Statement____sl__.exit

if.entry.i:                                       ; preds = %ifend6
  %27 = shl i64 %26, 1
  store i64 %27, ptr %memberidx1.i.i, align 4
  %28 = load ptr, ptr %memberidx2.i.i, align 8
  %29 = shl i64 %26, 4
  %30 = tail call ptr @realloc(ptr %28, i64 %29)
  store ptr %30, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %ifend6.Array_Statement____sl__.exit_crit_edge, %if.entry.i
  %31 = phi ptr [ %.pre85, %ifend6.Array_Statement____sl__.exit_crit_edge ], [ %30, %if.entry.i ]
  %32 = phi i64 [ %25, %ifend6.Array_Statement____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %33 = add i64 %32, 1
  store i64 %33, ptr %memberidx.i.i, align 4
  %ptridx.i64 = getelementptr inbounds ptr, ptr %31, i64 %32
  store ptr %19, ptr %ptridx.i64, align 8
  %34 = load i64, ptr %19, align 4
  switch i64 %34, label %ifend37 [
    i64 7, label %for.end.sink.split
    i64 0, label %if.entry14
    i64 5, label %if.entry30
    i64 6, label %if.entry35
  ]

if.entry14:                                       ; preds = %Array_Statement____sl__.exit
  %memberidx17 = getelementptr inbounds %IfStatement, ptr %19, i64 0, i32 3
  %35 = load ptr, ptr %memberidx17, align 8
  %.not = icmp eq ptr %35, null
  br i1 %.not, label %ifend37, label %if.entry18

if.entry18:                                       ; preds = %if.entry14
  %memberidx21 = getelementptr inbounds %IfStatement, ptr %19, i64 0, i32 2
  %36 = load ptr, ptr %memberidx21, align 8
  %memberidx22 = getelementptr inbounds %Block, ptr %36, i64 0, i32 1
  %37 = load i1, ptr %memberidx22, align 1
  %memberidx24 = getelementptr inbounds %Block, ptr %35, i64 0, i32 1
  %38 = load i1, ptr %memberidx24, align 1
  %39 = and i1 %37, %38
  br i1 %39, label %for.end.sink.split, label %ifend37

if.entry30:                                       ; preds = %Array_Statement____sl__.exit
  br label %for.end.sink.split

if.entry35:                                       ; preds = %Array_Statement____sl__.exit
  br label %for.end.sink.split

ifend37:                                          ; preds = %Array_Statement____sl__.exit, %if.entry14, %if.entry18
  %40 = add i64 %18, 1
  store i64 %40, ptr %memberidx1.i.i51, align 4
  %ptridx.i67 = getelementptr inbounds ptr, ptr %15, i64 %18
  %41 = icmp sgt i64 %40, %16
  br i1 %41, label %for.end, label %for.body
}

define internal fastcc void @Map_string_Generic__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx6 = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx6, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.037 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.037
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.037, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %storemerge36 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %storemerge36
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_Generic_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_Generic____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %storemerge36, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_Generic____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_Generic__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = srem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i34 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %13, %while.entry.preheader ], [ %26, %ifend9 ]
  %16 = phi i64 [ %11, %while.entry.preheader ], [ %27, %ifend9 ]
  %17 = phi ptr [ %14, %while.entry.preheader ], [ %30, %ifend9 ]
  %18 = phi i64 [ %12, %while.entry.preheader ], [ %29, %ifend9 ]
  %19 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i34, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.thread35, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend9

while.end.thread35:                               ; preds = %ifend.i
  %.pre40 = load ptr, ptr %0, align 8
  br label %ifend15

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %26 = phi ptr [ %.pre39, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %28 = add i64 %18, 1
  %29 = srem i64 %28, %27
  %ptridx12 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx12, align 8
  %.not33 = icmp eq ptr %30, null
  br i1 %.not33, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %31 = phi ptr [ %13, %ifend ], [ %26, %ifend9 ]
  %32 = phi i64 [ %12, %ifend ], [ %29, %ifend9 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend15

ifend15:                                          ; preds = %while.end.thread35, %if.entry13
  %35 = phi ptr [ %.pre40, %while.end.thread35 ], [ %31, %if.entry13 ]
  %36 = phi i64 [ %18, %while.end.thread35 ], [ %32, %if.entry13 ]
  %ptridx19 = getelementptr inbounds ptr, ptr %35, i64 %36
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_Generic_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_Generic__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @21, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = sext i8 %13 to i64
  %15 = add i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  %20 = call i64 @llvm.abs.i64(i64 %hash.0.lcssa, i1 false)
  ret i64 %20
}

define internal fastcc void @TypeChecker_check_class_body(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 22
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend54, %ifend13, %ifend10, %2, %TypeChecker_error.exit171, %for.end42, %TypeChecker_error.exit
  ret void

ifend:                                            ; preds = %2
  %8 = load ptr, ptr %0, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i174, %ifend
  %9 = phi i64 [ %.pr, %if.entry.i174 ], [ %6, %ifend ]
  %.tr11.i = phi ptr [ %10, %if.entry.i174 ], [ %5, %ifend ]
  switch i64 %9, label %get_class_from_type.exit [
    i64 21, label %if.entry.i174
    i64 13, label %if.entry3.i
  ]

if.entry.i174:                                    ; preds = %tailrecurse.i
  %memberidx1.i173 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1.i173, align 8
  %.pr = load i64, ptr %10, align 4
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i175 = getelementptr inbounds %Program, ptr %8, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i.i175, align 8
  %13 = load i64, ptr %11, align 4
  %memberidx.i.i.i176 = getelementptr inbounds %Array_Module_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i.i.i176, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i177 = getelementptr inbounds %Module, ptr %15, i64 0, i32 4
  %16 = load ptr, ptr %memberidx2.i.i177, align 8
  %memberidx3.i.i178 = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i178, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i6.i.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i = phi ptr [ %19, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx4 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %20 = load ptr, ptr %memberidx4, align 8
  %21 = load ptr, ptr %common.ret.op.i, align 8
  store ptr %21, ptr %memberidx4, align 8
  %memberidx7 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 2
  %22 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %22, null
  br i1 %.not, label %ifend10, label %if.entry8

if.entry8:                                        ; preds = %get_class_from_type.exit
  tail call fastcc void @TypeChecker_add_inherited_props_to_class(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  br label %ifend10

ifend10:                                          ; preds = %get_class_from_type.exit, %if.entry8
  tail call fastcc void @TypeChecker_declare_class_fields(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %23 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 6
  %24 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %25 = load i64, ptr %memberidx2.i, align 4
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend10
  tail call fastcc void @TypeChecker_declare_class_methods(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %27 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i109 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i109, align 8
  %memberidx2.i110 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i110, align 4
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %common.ret, label %for.entry

for.entry:                                        ; preds = %ifend13
  %memberidx17 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 6
  %31 = load ptr, ptr %memberidx17, align 8
  %32 = tail call ptr @malloc(i32 25)
  %33 = load ptr, ptr %31, align 8
  %memberidx1.i111 = getelementptr inbounds %Map_string_PropId_, ptr %31, i64 0, i32 1
  %34 = load i64, ptr %memberidx1.i111, align 4
  %memberidx2.i112 = getelementptr inbounds %Map_string_PropId_, ptr %31, i64 0, i32 2
  %35 = load i64, ptr %memberidx2.i112, align 4
  store i1 false, ptr %32, align 1
  %memberidx1.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %32, i64 0, i32 1
  store ptr %33, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %32, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %32, i64 0, i32 3
  store i64 %35, ptr %memberidx3.i.i, align 4
  %36 = add i64 %34, -1
  store i64 %36, ptr %memberidx2.i.i, align 4
  %37 = icmp sgt i64 %34, 0
  br i1 %37, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %38 = phi i64 [ %41, %ifend.i ], [ %36, %for.entry ]
  %39 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %33, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %39, i64 1
  %40 = load ptr, ptr %39, align 8
  %.not.i = icmp eq ptr %40, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %41 = add i64 %38, -1
  store i64 %41, ptr %memberidx2.i.i, align 4
  %42 = icmp sgt i64 %38, 0
  br i1 %42, label %while.entry.i, label %MapIterator_string_PropId__next.exit.loopexit

MapIterator_string_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %43 = phi i64 [ %41, %ifend.i ], [ %38, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_PropId__next.exit

MapIterator_string_PropId__next.exit:             ; preds = %MapIterator_string_PropId__next.exit.loopexit, %for.entry
  %44 = phi i64 [ %43, %MapIterator_string_PropId__next.exit.loopexit ], [ %36, %for.entry ]
  %.pn.in.promoted = phi ptr [ %incdec.ptr.i, %MapIterator_string_PropId__next.exit.loopexit ], [ %33, %for.entry ]
  %storemerge180187 = add i64 %35, -1
  %storemerge179188 = icmp slt i64 %35, 1
  store i1 %storemerge179188, ptr %32, align 1
  br i1 %storemerge179188, label %for.end.loopexit, label %for.body

for.body:                                         ; preds = %MapIterator_string_PropId__next.exit, %MapIterator_string_PropId__next.exit126
  %45 = phi i64 [ %75, %MapIterator_string_PropId__next.exit126 ], [ %44, %MapIterator_string_PropId__next.exit ]
  %.pn191 = phi ptr [ %.pn190, %MapIterator_string_PropId__next.exit126 ], [ %.pn.in.promoted, %MapIterator_string_PropId__next.exit ]
  %storemerge180189 = phi i64 [ %storemerge180, %MapIterator_string_PropId__next.exit126 ], [ %storemerge180187, %MapIterator_string_PropId__next.exit ]
  %storemerge.in = getelementptr inbounds ptr, ptr %.pn191, i64 -1
  %storemerge = load ptr, ptr %storemerge.in, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_PropId_, ptr %storemerge, i64 0, i32 1
  %46 = load ptr, ptr %memberidx19, align 8
  %47 = load i64, ptr %46, align 4
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %if.entry22, label %ifend24

for.cond.for.end.loopexit_crit_edge:              ; preds = %MapIterator_string_PropId__next.exit126
  store ptr %.pn190, ptr %memberidx1.i.i, align 8
  br label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.cond.for.end.loopexit_crit_edge, %MapIterator_string_PropId__next.exit
  %storemerge180.lcssa = phi i64 [ -1, %for.cond.for.end.loopexit_crit_edge ], [ %storemerge180187, %MapIterator_string_PropId__next.exit ]
  store i64 %storemerge180.lcssa, ptr %memberidx3.i.i, align 4
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %ifend33
  tail call void @free(ptr nonnull %32)
  %memberidx43 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 5
  %49 = load ptr, ptr %memberidx43, align 8
  %memberidx44183 = getelementptr inbounds %Array_ClassMethod_, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx44183, align 4
  %51 = icmp sgt i64 %50, 0
  br i1 %51, label %for.body40.lr.ph, label %for.end42

for.body40.lr.ph:                                 ; preds = %for.end
  %memberidx46 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %memberidx48 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 4
  %memberidx49 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body40

if.entry22:                                       ; preds = %for.body
  %52 = load ptr, ptr %storemerge, align 8
  %53 = load ptr, ptr %0, align 8
  %memberidx.i.i = getelementptr inbounds %PropId, ptr %46, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %53, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i.i.i, align 8
  %56 = load i64, ptr %54, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %57, i64 %56
  %58 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %58, i64 0, i32 4
  %59 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %54, i64 0, i32 2
  %60 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %59, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %61, i64 %60
  %62 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %memberidx.i115 = getelementptr inbounds %Class, ptr %62, i64 0, i32 5
  %63 = load ptr, ptr %memberidx.i115, align 8
  %memberidx1.i116 = getelementptr inbounds %PropId, ptr %46, i64 0, i32 2
  %64 = load i64, ptr %memberidx1.i116, align 4
  %memberidx.i3.i = getelementptr inbounds %Array_ClassMethod_, ptr %63, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i3.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %65, i64 %64
  %66 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx26 = getelementptr inbounds %ClassMethod, ptr %66, i64 0, i32 7
  %67 = load i1, ptr %memberidx26, align 1
  br i1 %67, label %if.entry27, label %ifend24

ifend24:                                          ; preds = %if.entry22, %for.body
  %68 = add i64 %45, -1
  store i64 %68, ptr %memberidx2.i.i, align 4
  %69 = icmp sgt i64 %45, 0
  br i1 %69, label %while.entry.i121, label %MapIterator_string_PropId__next.exit126

while.entry.i121:                                 ; preds = %ifend24, %ifend.i125
  %70 = phi i64 [ %73, %ifend.i125 ], [ %68, %ifend24 ]
  %71 = phi ptr [ %incdec.ptr.i119, %ifend.i125 ], [ %.pn191, %ifend24 ]
  %incdec.ptr.i119 = getelementptr inbounds ptr, ptr %71, i64 1
  %72 = load ptr, ptr %71, align 8
  %.not.i120 = icmp eq ptr %72, null
  br i1 %.not.i120, label %ifend.i125, label %MapIterator_string_PropId__next.exit126

ifend.i125:                                       ; preds = %while.entry.i121
  %73 = add i64 %70, -1
  store i64 %73, ptr %memberidx2.i.i, align 4
  %74 = icmp sgt i64 %70, 0
  br i1 %74, label %while.entry.i121, label %MapIterator_string_PropId__next.exit126

MapIterator_string_PropId__next.exit126:          ; preds = %while.entry.i121, %ifend.i125, %ifend24
  %75 = phi i64 [ %68, %ifend24 ], [ %70, %while.entry.i121 ], [ %73, %ifend.i125 ]
  %.pn190 = phi ptr [ %.pn191, %ifend24 ], [ %incdec.ptr.i119, %ifend.i125 ], [ %incdec.ptr.i119, %while.entry.i121 ]
  %storemerge180 = add i64 %storemerge180189, -1
  %storemerge179 = icmp slt i64 %storemerge180189, 1
  store i1 %storemerge179, ptr %32, align 1
  br i1 %storemerge179, label %for.cond.for.end.loopexit_crit_edge, label %for.body

if.entry27:                                       ; preds = %if.entry22
  store ptr %.pn191, ptr %memberidx1.i.i, align 8
  store i64 %storemerge180189, ptr %memberidx3.i.i, align 4
  %memberidx30 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 3
  %76 = load ptr, ptr %memberidx30, align 8
  %.not107 = icmp eq ptr %76, null
  br i1 %.not107, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %if.entry27
  %77 = load ptr, ptr %52, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %77, i64 0, i32 5
  %78 = load ptr, ptr %memberidx34, align 8
  %79 = tail call ptr %78(ptr nonnull %52)
  %80 = alloca ptr, align 8
  %81 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %80, ptr nonnull @139, ptr %79)
  %82 = load ptr, ptr %80, align 8
  %83 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %83, align 8
  %memberidx.i127 = getelementptr inbounds %string, ptr %83, i64 0, i32 1
  store ptr %82, ptr %memberidx.i127, align 8
  %memberidx1.i128 = getelementptr inbounds %string, ptr %83, i64 0, i32 2
  store i64 %81, ptr %memberidx1.i128, align 4
  %memberidx2.i129 = getelementptr inbounds %string, ptr %83, i64 0, i32 3
  store i64 %81, ptr %memberidx2.i129, align 4
  tail call void @free(ptr %79)
  %84 = load ptr, ptr %1, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %84, i64 0, i32 1
  %85 = load ptr, ptr %memberidx36, align 8
  %86 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i131 = getelementptr inbounds %Compiler, ptr %86, i64 0, i32 6
  %87 = load ptr, ptr %memberidx1.i131, align 8
  %88 = call ptr @malloc(i32 24)
  store i64 4, ptr %88, align 4
  %memberidx1.i.i132 = getelementptr inbounds %FloError, ptr %88, i64 0, i32 2
  store ptr %85, ptr %memberidx1.i.i132, align 8
  %memberidx2.i.i133 = getelementptr inbounds %FloError, ptr %88, i64 0, i32 1
  store ptr %83, ptr %memberidx2.i.i133, align 8
  %memberidx.i.i134 = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 2
  %89 = load i64, ptr %memberidx.i.i134, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 3
  %90 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %89, %90
  br i1 %.not.i.i, label %if.entry31.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry31.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry31
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 1
  %.pre199 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry31
  %91 = shl i64 %90, 1
  store i64 %91, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i136 = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 1
  %92 = load ptr, ptr %memberidx2.i.i.i136, align 8
  %93 = shl i64 %90, 4
  %94 = call ptr @realloc(ptr %92, i64 %93)
  store ptr %94, ptr %memberidx2.i.i.i136, align 8
  %.pre = load i64, ptr %memberidx.i.i134, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry31.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %95 = phi ptr [ %.pre199, %if.entry31.TypeChecker_error.exit_crit_edge ], [ %94, %if.entry.i.i ]
  %96 = phi i64 [ %89, %if.entry31.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %97 = add i64 %96, 1
  store i64 %97, ptr %memberidx.i.i134, align 4
  %ptridx.i.i137 = getelementptr inbounds ptr, ptr %95, i64 %96
  store ptr %88, ptr %ptridx.i.i137, align 8
  br label %common.ret

ifend33:                                          ; preds = %if.entry27
  %memberidx37 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 10
  store i1 true, ptr %memberidx37, align 1
  br label %for.end

for.body40:                                       ; preds = %for.body40.lr.ph, %for.incr41
  %98 = phi ptr [ %49, %for.body40.lr.ph ], [ %108, %for.incr41 ]
  %storemerge106184 = phi i64 [ 0, %for.body40.lr.ph ], [ %107, %for.incr41 ]
  %memberidx.i138 = getelementptr inbounds %Array_ClassMethod_, ptr %98, i64 0, i32 1
  %99 = load ptr, ptr %memberidx.i138, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %99, i64 %storemerge106184
  %100 = load ptr, ptr %ptridx.i, align 8
  %101 = load ptr, ptr %100, align 8
  store ptr %101, ptr %memberidx46, align 8
  %102 = load ptr, ptr %memberidx48, align 8
  %memberidx.i139 = getelementptr inbounds %Array_MethodNode_, ptr %102, i64 0, i32 1
  %103 = load ptr, ptr %memberidx.i139, align 8
  %ptridx.i140 = getelementptr inbounds ptr, ptr %103, i64 %storemerge106184
  %104 = load ptr, ptr %ptridx.i140, align 8
  %memberidx50 = getelementptr inbounds %ClassMethod, ptr %100, i64 0, i32 8
  %105 = load ptr, ptr %memberidx50, align 8
  store ptr %105, ptr %memberidx49, align 8
  %memberidx51 = getelementptr inbounds %ClassMethod, ptr %100, i64 0, i32 7
  %106 = load i1, ptr %memberidx51, align 1
  br i1 %106, label %for.incr41, label %ifend54

for.incr41:                                       ; preds = %for.body40, %ifend64
  %107 = add nuw nsw i64 %storemerge106184, 1
  %108 = load ptr, ptr %memberidx43, align 8
  %memberidx44 = getelementptr inbounds %Array_ClassMethod_, ptr %108, i64 0, i32 2
  %109 = load i64, ptr %memberidx44, align 4
  %110 = icmp slt i64 %107, %109
  br i1 %110, label %for.body40, label %for.end42

for.end42:                                        ; preds = %for.incr41, %for.end
  store ptr %20, ptr %memberidx4, align 8
  br label %common.ret

ifend54:                                          ; preds = %for.body40
  %memberidx55 = getelementptr inbounds %ClassMethod, ptr %100, i64 0, i32 5
  %memberidx56 = getelementptr inbounds %MethodNode, ptr %104, i64 0, i32 2
  %111 = load ptr, ptr %memberidx56, align 8
  %112 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %111)
  store ptr %112, ptr %memberidx55, align 8
  %113 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i142 = getelementptr inbounds %Compiler, ptr %113, i64 0, i32 6
  %114 = load ptr, ptr %memberidx1.i142, align 8
  %memberidx2.i143 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 2
  %115 = load i64, ptr %memberidx2.i143, align 4
  %116 = icmp sgt i64 %115, 0
  br i1 %116, label %common.ret, label %ifend59

ifend59:                                          ; preds = %ifend54
  %memberidx61 = getelementptr inbounds %Block, ptr %112, i64 0, i32 1
  %117 = load i1, ptr %memberidx61, align 1
  br i1 %117, label %ifend64, label %if.entry62

if.entry62:                                       ; preds = %ifend59
  %memberidx65 = getelementptr inbounds %ClassMethod, ptr %100, i64 0, i32 4
  %118 = load ptr, ptr %memberidx65, align 8
  %memberidx66 = getelementptr inbounds %FunctionType, ptr %118, i64 0, i32 2
  %119 = load ptr, ptr %memberidx66, align 8
  %120 = load i64, ptr %119, align 4
  %121 = icmp eq i64 %120, 12
  br i1 %121, label %if.entry68, label %else69

ifend64:                                          ; preds = %ifend59, %Array_Statement____sl__.exit
  store ptr null, ptr %memberidx46, align 8
  %122 = load ptr, ptr %0, align 8
  %123 = load ptr, ptr %memberidx50, align 8
  %memberidx.i144 = getelementptr inbounds %Program, ptr %122, i64 0, i32 1
  %124 = load ptr, ptr %memberidx.i144, align 8
  %125 = load i64, ptr %123, align 4
  %memberidx.i.i145 = getelementptr inbounds %Array_Module_, ptr %124, i64 0, i32 1
  %126 = load ptr, ptr %memberidx.i.i145, align 8
  %ptridx.i.i146 = getelementptr inbounds ptr, ptr %126, i64 %125
  %127 = load ptr, ptr %ptridx.i.i146, align 8
  %memberidx2.i147 = getelementptr inbounds %Module, ptr %127, i64 0, i32 7
  %128 = load ptr, ptr %memberidx2.i147, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %123, i64 0, i32 1
  %129 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %128, i64 0, i32 1
  %130 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %130, i64 %129
  %131 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx79 = getelementptr inbounds %Scope, ptr %131, i64 0, i32 5
  %132 = load ptr, ptr %memberidx79, align 8
  store ptr %132, ptr %memberidx49, align 8
  br label %for.incr41

if.entry68:                                       ; preds = %if.entry62
  %133 = load ptr, ptr %112, align 8
  %134 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %134, align 4
  %memberidx.i148 = getelementptr inbounds %ReturnStatement, ptr %134, i64 0, i32 1
  store ptr null, ptr %memberidx.i148, align 8
  %memberidx.i149 = getelementptr inbounds %Array_Statement_, ptr %133, i64 0, i32 2
  %135 = load i64, ptr %memberidx.i149, align 4
  %memberidx1.i150 = getelementptr inbounds %Array_Statement_, ptr %133, i64 0, i32 3
  %136 = load i64, ptr %memberidx1.i150, align 4
  %.not.i151 = icmp slt i64 %135, %136
  br i1 %.not.i151, label %if.entry68.Array_Statement____sl__.exit_crit_edge, label %if.entry.i

if.entry68.Array_Statement____sl__.exit_crit_edge: ; preds = %if.entry68
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Statement_, ptr %133, i64 0, i32 1
  %.pre203 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Statement____sl__.exit

if.entry.i:                                       ; preds = %if.entry68
  %137 = shl i64 %136, 1
  store i64 %137, ptr %memberidx1.i150, align 4
  %memberidx2.i.i153 = getelementptr inbounds %Array_Statement_, ptr %133, i64 0, i32 1
  %138 = load ptr, ptr %memberidx2.i.i153, align 8
  %139 = shl i64 %136, 4
  %140 = tail call ptr @realloc(ptr %138, i64 %139)
  store ptr %140, ptr %memberidx2.i.i153, align 8
  %.pre202 = load i64, ptr %memberidx.i149, align 4
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %if.entry68.Array_Statement____sl__.exit_crit_edge, %if.entry.i
  %141 = phi ptr [ %.pre203, %if.entry68.Array_Statement____sl__.exit_crit_edge ], [ %140, %if.entry.i ]
  %142 = phi i64 [ %135, %if.entry68.Array_Statement____sl__.exit_crit_edge ], [ %.pre202, %if.entry.i ]
  %143 = add i64 %142, 1
  store i64 %143, ptr %memberidx.i149, align 4
  %ptridx.i154 = getelementptr inbounds ptr, ptr %141, i64 %142
  store ptr %134, ptr %ptridx.i154, align 8
  br label %ifend64

else69:                                           ; preds = %if.entry62
  %144 = tail call ptr @malloc(i32 304)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(38) %144, ptr noundef nonnull align 8 dereferenceable(38) @140, i64 38, i1 false)
  %145 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %145, align 8
  %memberidx.i.i156 = getelementptr inbounds %string, ptr %145, i64 0, i32 1
  store ptr %144, ptr %memberidx.i.i156, align 8
  %memberidx1.i.i157 = getelementptr inbounds %string, ptr %145, i64 0, i32 2
  store i64 38, ptr %memberidx1.i.i157, align 4
  %memberidx2.i.i158 = getelementptr inbounds %string, ptr %145, i64 0, i32 3
  store i64 38, ptr %memberidx2.i.i158, align 4
  %memberidx73 = getelementptr inbounds %MethodNode, ptr %104, i64 0, i32 4
  %146 = load ptr, ptr %memberidx73, align 8
  %147 = load ptr, ptr %146, align 8
  %148 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i160 = getelementptr inbounds %Compiler, ptr %148, i64 0, i32 6
  %149 = load ptr, ptr %memberidx1.i160, align 8
  %150 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %150, align 4
  %memberidx1.i.i161 = getelementptr inbounds %FloError, ptr %150, i64 0, i32 2
  store ptr %147, ptr %memberidx1.i.i161, align 8
  %memberidx2.i.i162 = getelementptr inbounds %FloError, ptr %150, i64 0, i32 1
  store ptr %145, ptr %memberidx2.i.i162, align 8
  %memberidx.i.i163 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 2
  %151 = load i64, ptr %memberidx.i.i163, align 4
  %memberidx1.i2.i164 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 3
  %152 = load i64, ptr %memberidx1.i2.i164, align 4
  %.not.i.i165 = icmp slt i64 %151, %152
  br i1 %.not.i.i165, label %else69.TypeChecker_error.exit171_crit_edge, label %if.entry.i.i168

else69.TypeChecker_error.exit171_crit_edge:       ; preds = %else69
  %memberidx4.i.i169.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 1
  %.pre201 = load ptr, ptr %memberidx4.i.i169.phi.trans.insert, align 8
  br label %TypeChecker_error.exit171

if.entry.i.i168:                                  ; preds = %else69
  %153 = shl i64 %152, 1
  store i64 %153, ptr %memberidx1.i2.i164, align 4
  %memberidx2.i.i.i167 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 1
  %154 = load ptr, ptr %memberidx2.i.i.i167, align 8
  %155 = shl i64 %152, 4
  %156 = tail call ptr @realloc(ptr %154, i64 %155)
  store ptr %156, ptr %memberidx2.i.i.i167, align 8
  %.pre200 = load i64, ptr %memberidx.i.i163, align 4
  br label %TypeChecker_error.exit171

TypeChecker_error.exit171:                        ; preds = %else69.TypeChecker_error.exit171_crit_edge, %if.entry.i.i168
  %157 = phi ptr [ %.pre201, %else69.TypeChecker_error.exit171_crit_edge ], [ %156, %if.entry.i.i168 ]
  %158 = phi i64 [ %151, %else69.TypeChecker_error.exit171_crit_edge ], [ %.pre200, %if.entry.i.i168 ]
  %159 = add i64 %158, 1
  store i64 %159, ptr %memberidx.i.i163, align 4
  %ptridx.i.i170 = getelementptr inbounds ptr, ptr %157, i64 %158
  store ptr %150, ptr %ptridx.i.i170, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %5 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Compiler, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = icmp eq ptr %2, null
  %8 = load ptr, ptr %1, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = tail call ptr @malloc(i32 8)
  store i8 64, ptr %10, align 8
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %11, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 1
  store ptr %10, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i, align 4
  %12 = tail call i1 %9(ptr nonnull %1, ptr nonnull %11)
  %13 = or i1 %7, %12
  br i1 %13, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %14 = load i64, ptr %memberidx.i, align 4
  %15 = load ptr, ptr %0, align 8
  %memberidx1.i.i57 = getelementptr inbounds %Program, ptr %15, i64 0, i32 1
  %16 = load ptr, ptr %memberidx1.i.i57, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %16, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %17, i64 %14
  %18 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx3 = getelementptr inbounds %Module, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx3, align 8
  %20 = load ptr, ptr %19, align 8
  %memberidx.i58 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx.i58, align 8
  %22 = tail call ptr %21(ptr nonnull %19)
  %23 = tail call ptr @dirname(ptr %22)
  %24 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %23)
  %25 = trunc i64 %24 to i32
  %mallocsize.i.i = shl i32 %25, 3
  %26 = tail call ptr @malloc(i32 %mallocsize.i.i)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %23, i64 %24, i1 false)
  %27 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %27, align 8
  %memberidx.i.i.i59 = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  store ptr %26, ptr %memberidx.i.i.i59, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  store i64 %24, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %27, i64 0, i32 3
  store i64 %24, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %28 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %29 = tail call ptr %28(ptr nonnull %27)
  %30 = load ptr, ptr %1, align 8
  %memberidx1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %30, i64 0, i32 5
  %31 = load ptr, ptr %memberidx1.i, align 8
  %32 = tail call ptr %31(ptr nonnull %1)
  %33 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @22, ptr %29, ptr %32)
  %34 = load ptr, ptr %4, align 8
  %35 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %35, align 8
  %memberidx.i.i61 = getelementptr inbounds %string, ptr %35, i64 0, i32 1
  store ptr %34, ptr %memberidx.i.i61, align 8
  %memberidx1.i.i62 = getelementptr inbounds %string, ptr %35, i64 0, i32 2
  store i64 %33, ptr %memberidx1.i.i62, align 4
  %memberidx2.i.i63 = getelementptr inbounds %string, ptr %35, i64 0, i32 3
  store i64 %33, ptr %memberidx2.i.i63, align 4
  call void @free(ptr %29)
  call void @free(ptr %32)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %filepath.0 = phi ptr [ %35, %if.entry ], [ %1, %3 ]
  %36 = load ptr, ptr %memberidx, align 8
  %37 = load ptr, ptr %36, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr }>, ptr %37, i64 0, i32 1
  %38 = load ptr, ptr %memberidx5, align 8
  %39 = call ptr %38(ptr nonnull %36, ptr nonnull %filepath.0)
  %40 = load i64, ptr %39, align 4
  %41 = load ptr, ptr %0, align 8
  %memberidx8 = getelementptr inbounds %Program, ptr %41, i64 0, i32 1
  %42 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %Array_Module_, ptr %42, i64 0, i32 2
  %43 = load i64, ptr %memberidx9, align 4
  %44 = icmp slt i64 %40, %43
  br i1 %44, label %if.entry10, label %ifend12

common.ret:                                       ; preds = %ifend31, %ifend26, %ifend18, %ifend34, %TypeChecker_error.exit, %if.entry10
  %common.ret.op = phi ptr [ %46, %if.entry10 ], [ null, %TypeChecker_error.exit ], [ %83, %ifend34 ], [ null, %ifend18 ], [ null, %ifend26 ], [ null, %ifend31 ]
  ret ptr %common.ret.op

if.entry10:                                       ; preds = %ifend
  %memberidx.i.i65 = getelementptr inbounds %Array_Module_, ptr %42, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i65, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %45, i64 %40
  %46 = load ptr, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend12:                                          ; preds = %ifend
  %47 = load ptr, ptr %memberidx, align 8
  %48 = load ptr, ptr %47, align 8
  %memberidx15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr }>, ptr %48, i64 0, i32 2
  %49 = load ptr, ptr %memberidx15, align 8
  %50 = call i1 %49(ptr nonnull %47, ptr nonnull %39)
  br i1 %50, label %ifend18, label %if.entry16

if.entry16:                                       ; preds = %ifend12
  %51 = load ptr, ptr %1, align 8
  %memberidx19 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %51, i64 0, i32 5
  %52 = load ptr, ptr %memberidx19, align 8
  %53 = call ptr %52(ptr nonnull %1)
  %54 = alloca ptr, align 8
  %55 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %54, ptr nonnull @27, ptr %53)
  %56 = load ptr, ptr %54, align 8
  %57 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %57, align 8
  %memberidx.i66 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  store ptr %56, ptr %memberidx.i66, align 8
  %memberidx1.i67 = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  store i64 %55, ptr %memberidx1.i67, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %57, i64 0, i32 3
  store i64 %55, ptr %memberidx2.i, align 4
  tail call void @free(ptr %53)
  %58 = load ptr, ptr %memberidx, align 8
  %memberidx1.i69 = getelementptr inbounds %Compiler, ptr %58, i64 0, i32 6
  %59 = load ptr, ptr %memberidx1.i69, align 8
  %60 = call ptr @malloc(i32 24)
  store i64 3, ptr %60, align 4
  %memberidx1.i.i70 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i.i70, align 8
  %memberidx2.i.i71 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 1
  store ptr %57, ptr %memberidx2.i.i71, align 8
  %memberidx.i.i72 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %61 = load i64, ptr %memberidx.i.i72, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 3
  %62 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %61, %62
  br i1 %.not.i.i, label %if.entry16.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry16.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry16
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %.pre85 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry16
  %63 = shl i64 %62, 1
  store i64 %63, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i74 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %64 = load ptr, ptr %memberidx2.i.i.i74, align 8
  %65 = shl i64 %62, 4
  %66 = call ptr @realloc(ptr %64, i64 %65)
  store ptr %66, ptr %memberidx2.i.i.i74, align 8
  %.pre = load i64, ptr %memberidx.i.i72, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry16.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %67 = phi ptr [ %.pre85, %if.entry16.TypeChecker_error.exit_crit_edge ], [ %66, %if.entry.i.i ]
  %68 = phi i64 [ %61, %if.entry16.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %69 = add i64 %68, 1
  store i64 %69, ptr %memberidx.i.i72, align 4
  %ptridx.i.i75 = getelementptr inbounds ptr, ptr %67, i64 %68
  store ptr %60, ptr %ptridx.i.i75, align 8
  br label %common.ret

ifend18:                                          ; preds = %ifend12
  %70 = load ptr, ptr %memberidx, align 8
  %memberidx21 = getelementptr inbounds %Compiler, ptr %70, i64 0, i32 3
  %71 = load ptr, ptr %memberidx21, align 8
  %memberidx23 = getelementptr inbounds %Compiler, ptr %70, i64 0, i32 6
  %72 = load ptr, ptr %memberidx23, align 8
  %73 = call fastcc ptr @Lexer_tokenize(ptr %71, ptr %72)
  %74 = load ptr, ptr %memberidx, align 8
  %memberidx1.i77 = getelementptr inbounds %Compiler, ptr %74, i64 0, i32 6
  %75 = load ptr, ptr %memberidx1.i77, align 8
  %memberidx2.i78 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 2
  %76 = load i64, ptr %memberidx2.i78, align 4
  %77 = icmp sgt i64 %76, 0
  br i1 %77, label %common.ret, label %ifend26

ifend26:                                          ; preds = %ifend18
  %78 = call fastcc ptr @Parser_parse(ptr %73, ptr nonnull %75)
  %79 = load ptr, ptr %memberidx, align 8
  %memberidx1.i80 = getelementptr inbounds %Compiler, ptr %79, i64 0, i32 6
  %80 = load ptr, ptr %memberidx1.i80, align 8
  %memberidx2.i81 = getelementptr inbounds %Array_FloError_, ptr %80, i64 0, i32 2
  %81 = load i64, ptr %memberidx2.i81, align 4
  %82 = icmp sgt i64 %81, 0
  br i1 %82, label %common.ret, label %ifend31

ifend31:                                          ; preds = %ifend26
  %83 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %0, ptr %78, ptr nonnull %filepath.0)
  %84 = load ptr, ptr %memberidx, align 8
  %memberidx1.i83 = getelementptr inbounds %Compiler, ptr %84, i64 0, i32 6
  %85 = load ptr, ptr %memberidx1.i83, align 8
  %memberidx2.i84 = getelementptr inbounds %Array_FloError_, ptr %85, i64 0, i32 2
  %86 = load i64, ptr %memberidx2.i84, align 4
  %87 = icmp sgt i64 %86, 0
  br i1 %87, label %common.ret, label %ifend34

ifend34:                                          ; preds = %ifend31
  %88 = load ptr, ptr %84, align 8
  %memberidx36 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr }>, ptr %88, i64 0, i32 2
  %89 = load ptr, ptr %memberidx36, align 8
  %90 = call i1 %89(ptr nonnull %84, ptr %6)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_fields(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 3
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx2309 = getelementptr inbounds %Array_FieldNode_, ptr %3, i64 0, i32 2
  %4 = load i64, ptr %memberidx2309, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %6 = load i64, ptr %memberidx, align 4
  %memberidx.i137 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %memberidx21 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx92 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx99 = getelementptr inbounds %Class, ptr %1, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassField____sl__.exit
  %7 = phi ptr [ %3, %for.body.lr.ph ], [ %206, %Array_ClassField____sl__.exit ]
  %i.0311 = phi i64 [ 0, %for.body.lr.ph ], [ %205, %Array_ClassField____sl__.exit ]
  %current_vtable_index.0310 = phi i64 [ %6, %for.body.lr.ph ], [ %current_vtable_index.1, %Array_ClassField____sl__.exit ]
  %memberidx.i = getelementptr inbounds %Array_FieldNode_, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %8, i64 %i.0311
  %9 = load ptr, ptr %ptridx.i, align 8
  %10 = tail call ptr @malloc(i32 49)
  %memberidx.i132 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 1
  store i1 false, ptr %memberidx.i132, align 1
  %memberidx4 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 3
  %11 = load ptr, ptr %9, align 8
  %memberidx6 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx6, align 8
  store ptr %12, ptr %memberidx4, align 8
  %13 = call fastcc i1 @is_operator_overload_name(ptr %12)
  br i1 %13, label %if.entry, label %ifend

common.ret:                                       ; preds = %Array_ClassField____sl__.exit, %ifend, %if.entry62, %for.entry, %TypeChecker_error.exit279, %TypeChecker_error.exit235, %TypeChecker_error.exit214, %TypeChecker_error.exit168
  ret void

if.entry:                                         ; preds = %for.body
  %14 = load ptr, ptr %memberidx4, align 8
  %15 = call ptr @malloc(i32 600)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %15, ptr noundef nonnull align 8 dereferenceable(75) @120, i64 75, i1 false)
  %16 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %16, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 1
  store ptr %15, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  store i64 75, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 3
  store i64 75, ptr %memberidx2.i.i, align 4
  %memberidx.i133 = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  %17 = load i64, ptr %memberidx.i133, align 4
  %18 = add i64 %17, 75
  %19 = trunc i64 %18 to i32
  %mallocsize.i = shl i32 %19, 3
  %20 = call ptr @malloc(i32 %mallocsize.i)
  %memberidx2.i = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load i64, ptr %memberidx.i133, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %21, i64 %22, i1 false)
  %23 = getelementptr inbounds i8, ptr %20, i64 %22
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %23, ptr noundef nonnull align 8 dereferenceable(75) %15, i64 75, i1 false)
  %24 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %24, align 8
  %memberidx.i.i134 = getelementptr inbounds %string, ptr %24, i64 0, i32 1
  store ptr %20, ptr %memberidx.i.i134, align 8
  %memberidx1.i.i135 = getelementptr inbounds %string, ptr %24, i64 0, i32 2
  store i64 %18, ptr %memberidx1.i.i135, align 4
  %memberidx2.i.i136 = getelementptr inbounds %string, ptr %24, i64 0, i32 3
  store i64 %18, ptr %memberidx2.i.i136, align 4
  %25 = load ptr, ptr %9, align 8
  %memberidx10 = getelementptr inbounds %Token, ptr %25, i64 0, i32 1
  %26 = load ptr, ptr %memberidx10, align 8
  %27 = load ptr, ptr %memberidx.i137, align 8
  %memberidx1.i138 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i138, align 8
  %29 = call ptr @malloc(i32 24)
  store i64 1, ptr %29, align 4
  %memberidx1.i.i139 = getelementptr inbounds %FloError, ptr %29, i64 0, i32 2
  store ptr %26, ptr %memberidx1.i.i139, align 8
  %memberidx2.i.i140 = getelementptr inbounds %FloError, ptr %29, i64 0, i32 1
  store ptr %24, ptr %memberidx2.i.i140, align 8
  %memberidx.i.i141 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i141, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 3
  %31 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %30, %31
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %.pre326 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %32 = shl i64 %31, 1
  store i64 %32, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %33 = load ptr, ptr %memberidx2.i.i.i, align 8
  %34 = shl i64 %31, 4
  %35 = call ptr @realloc(ptr %33, i64 %34)
  store ptr %35, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i141, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %36 = phi ptr [ %.pre326, %if.entry.TypeChecker_error.exit_crit_edge ], [ %35, %if.entry.i.i ]
  %37 = phi i64 [ %30, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %38 = add i64 %37, 1
  store i64 %38, ptr %memberidx.i.i141, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %36, i64 %37
  store ptr %29, ptr %ptridx.i.i, align 8
  br label %ifend

ifend:                                            ; preds = %for.body, %TypeChecker_error.exit
  %memberidx11 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 2
  %memberidx12 = getelementptr inbounds %FieldNode, ptr %9, i64 0, i32 1
  %39 = load i64, ptr %memberidx12, align 4
  store i64 %39, ptr %memberidx11, align 4
  %40 = tail call ptr @malloc(i32 24)
  %41 = load ptr, ptr %1, align 8
  store i64 1, ptr %40, align 4
  %memberidx1.i142 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 1
  store ptr %41, ptr %memberidx1.i142, align 8
  %memberidx2.i143 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  store i64 %i.0311, ptr %memberidx2.i143, align 4
  store ptr %40, ptr %10, align 8
  %memberidx15 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 4
  %memberidx16 = getelementptr inbounds %FieldNode, ptr %9, i64 0, i32 3
  %42 = load ptr, ptr %memberidx16, align 8
  %43 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %42)
  store ptr %43, ptr %memberidx15, align 8
  %memberidx17 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 6
  store i64 %current_vtable_index.0310, ptr %memberidx17, align 4
  %44 = load ptr, ptr %memberidx.i137, align 8
  %memberidx1.i145 = getelementptr inbounds %Compiler, ptr %44, i64 0, i32 6
  %45 = load ptr, ptr %memberidx1.i145, align 8
  %memberidx2.i146 = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 2
  %46 = load i64, ptr %memberidx2.i146, align 4
  %47 = icmp sgt i64 %46, 0
  br i1 %47, label %common.ret, label %ifend20

ifend20:                                          ; preds = %ifend
  %48 = load ptr, ptr %memberidx21, align 8
  %49 = load ptr, ptr %memberidx4, align 8
  %50 = call fastcc i64 @Map_string_PropId__hash_fnc(ptr %49)
  %memberidx.i147 = getelementptr inbounds %Map_string_PropId_, ptr %48, i64 0, i32 1
  %51 = load i64, ptr %memberidx.i147, align 4
  %52 = srem i64 %50, %51
  %53 = load ptr, ptr %48, align 8
  %ptridx.i148 = getelementptr inbounds ptr, ptr %53, i64 %52
  %54 = load ptr, ptr %ptridx.i148, align 8
  %.not.i = icmp eq ptr %54, null
  br i1 %.not.i, label %ifend25, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend20
  %memberidx1.i.i150 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %55 = phi ptr [ %65, %else.i ], [ %53, %while.entry.i.preheader ]
  %56 = phi i64 [ %66, %else.i ], [ %51, %while.entry.i.preheader ]
  %57 = phi ptr [ %69, %else.i ], [ %54, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %68, %else.i ], [ %52, %while.entry.i.preheader ]
  %58 = load ptr, ptr %57, align 8
  %memberidx.i.i149 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  %59 = load i64, ptr %memberidx.i.i149, align 4
  %60 = load i64, ptr %memberidx1.i.i150, align 4
  %.not.i.i151 = icmp eq i64 %59, %60
  br i1 %.not.i.i151, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i152 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  %61 = load ptr, ptr %memberidx2.i.i152, align 8
  %62 = load ptr, ptr %memberidx3.i.i, align 8
  %63 = call i64 @memcmp(ptr %61, ptr %62, i64 %59)
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre327 = load i64, ptr %memberidx.i147, align 4
  %.pre328 = load ptr, ptr %48, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre329.pre = load ptr, ptr %48, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre329.pre, i64 %hash.0.i
  %.pre330.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre330.pre, null
  br i1 %.not29.i, label %ifend25, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %65 = phi ptr [ %.pre328, %ifend.i.i.else.i_crit_edge ], [ %55, %while.entry.i ]
  %66 = phi i64 [ %.pre327, %ifend.i.i.else.i_crit_edge ], [ %56, %while.entry.i ]
  %67 = add i64 %hash.0.i, 1
  %68 = srem i64 %67, %66
  %ptridx7.i = getelementptr inbounds ptr, ptr %65, i64 %68
  %69 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %69, null
  br i1 %.not30.i, label %ifend25, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre330.pre, i64 0, i32 1
  %70 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %70, null
  br i1 %.not, label %ifend25, label %if.entry23

if.entry23:                                       ; preds = %Map_string_PropId____getitem__.exit
  %memberidx26 = getelementptr inbounds %PropId, ptr %70, i64 0, i32 1
  %71 = load ptr, ptr %memberidx26, align 8
  %72 = load ptr, ptr %1, align 8
  %73 = icmp eq ptr %71, %72
  br i1 %73, label %if.entry28, label %ifend30

ifend25:                                          ; preds = %else.i, %ifend20, %while.end.i, %ifend42, %Map_string_PropId____getitem__.exit
  %memberidx61 = getelementptr inbounds %FieldNode, ptr %9, i64 0, i32 2
  %74 = load ptr, ptr %memberidx61, align 8
  %.not130 = icmp eq ptr %74, null
  br i1 %.not130, label %else63, label %if.entry62

if.entry28:                                       ; preds = %if.entry23
  %75 = load ptr, ptr %memberidx4, align 8
  %76 = load ptr, ptr %75, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %76, i64 0, i32 5
  %77 = load ptr, ptr %memberidx32, align 8
  %78 = call ptr %77(ptr nonnull %75)
  %memberidx33 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %79 = load ptr, ptr %memberidx33, align 8
  %80 = load ptr, ptr %79, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %80, i64 0, i32 5
  %81 = load ptr, ptr %memberidx34, align 8
  %82 = call ptr %81(ptr nonnull %79)
  %83 = alloca ptr, align 8
  %84 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %83, ptr nonnull @121, ptr %78, ptr %82)
  %85 = load ptr, ptr %83, align 8
  %86 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %86, align 8
  %memberidx.i153 = getelementptr inbounds %string, ptr %86, i64 0, i32 1
  store ptr %85, ptr %memberidx.i153, align 8
  %memberidx1.i154 = getelementptr inbounds %string, ptr %86, i64 0, i32 2
  store i64 %84, ptr %memberidx1.i154, align 4
  %memberidx2.i155 = getelementptr inbounds %string, ptr %86, i64 0, i32 3
  store i64 %84, ptr %memberidx2.i155, align 4
  tail call void @free(ptr %78)
  tail call void @free(ptr %82)
  %87 = load ptr, ptr %9, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %87, i64 0, i32 1
  %88 = load ptr, ptr %memberidx36, align 8
  %89 = load ptr, ptr %memberidx.i137, align 8
  %memberidx1.i157 = getelementptr inbounds %Compiler, ptr %89, i64 0, i32 6
  %90 = load ptr, ptr %memberidx1.i157, align 8
  %91 = call ptr @malloc(i32 24)
  store i64 1, ptr %91, align 4
  %memberidx1.i.i158 = getelementptr inbounds %FloError, ptr %91, i64 0, i32 2
  store ptr %88, ptr %memberidx1.i.i158, align 8
  %memberidx2.i.i159 = getelementptr inbounds %FloError, ptr %91, i64 0, i32 1
  store ptr %86, ptr %memberidx2.i.i159, align 8
  %memberidx.i.i160 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 2
  %92 = load i64, ptr %memberidx.i.i160, align 4
  %memberidx1.i2.i161 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 3
  %93 = load i64, ptr %memberidx1.i2.i161, align 4
  %.not.i.i162 = icmp slt i64 %92, %93
  br i1 %.not.i.i162, label %if.entry28.TypeChecker_error.exit168_crit_edge, label %if.entry.i.i165

if.entry28.TypeChecker_error.exit168_crit_edge:   ; preds = %if.entry28
  %memberidx4.i.i166.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 1
  %.pre336 = load ptr, ptr %memberidx4.i.i166.phi.trans.insert, align 8
  br label %TypeChecker_error.exit168

if.entry.i.i165:                                  ; preds = %if.entry28
  %94 = shl i64 %93, 1
  store i64 %94, ptr %memberidx1.i2.i161, align 4
  %memberidx2.i.i.i164 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 1
  %95 = load ptr, ptr %memberidx2.i.i.i164, align 8
  %96 = shl i64 %93, 4
  %97 = call ptr @realloc(ptr %95, i64 %96)
  store ptr %97, ptr %memberidx2.i.i.i164, align 8
  %.pre335 = load i64, ptr %memberidx.i.i160, align 4
  br label %TypeChecker_error.exit168

TypeChecker_error.exit168:                        ; preds = %if.entry28.TypeChecker_error.exit168_crit_edge, %if.entry.i.i165
  %98 = phi ptr [ %.pre336, %if.entry28.TypeChecker_error.exit168_crit_edge ], [ %97, %if.entry.i.i165 ]
  %99 = phi i64 [ %92, %if.entry28.TypeChecker_error.exit168_crit_edge ], [ %.pre335, %if.entry.i.i165 ]
  %100 = add i64 %99, 1
  store i64 %100, ptr %memberidx.i.i160, align 4
  %ptridx.i.i167 = getelementptr inbounds ptr, ptr %98, i64 %99
  store ptr %91, ptr %ptridx.i.i167, align 8
  br label %common.ret

ifend30:                                          ; preds = %if.entry23
  %101 = load ptr, ptr %0, align 8
  %memberidx.i.i.i170 = getelementptr inbounds %Program, ptr %101, i64 0, i32 1
  %102 = load ptr, ptr %memberidx.i.i.i170, align 8
  %103 = load i64, ptr %71, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %102, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %104, i64 %103
  %105 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i171 = getelementptr inbounds %Module, ptr %105, i64 0, i32 4
  %106 = load ptr, ptr %memberidx2.i.i.i171, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %71, i64 0, i32 2
  %107 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %106, i64 0, i32 1
  %108 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %108, i64 %107
  %109 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %110 = load i64, ptr %70, align 4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %if.entry.i192, label %ifend.i198

if.entry.i192:                                    ; preds = %ifend30
  %memberidx1.i173 = getelementptr inbounds %Class, ptr %109, i64 0, i32 5
  %112 = load ptr, ptr %memberidx1.i173, align 8
  %memberidx2.i174 = getelementptr inbounds %PropId, ptr %70, i64 0, i32 2
  %113 = load i64, ptr %memberidx2.i174, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %112, i64 0, i32 1
  %114 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %114, i64 %113
  %115 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %115, i64 0, i32 4
  %parent_prop_visibility290 = alloca i64, align 8
  %memberidx3.i191 = getelementptr inbounds %ClassMethod, ptr %115, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i198:                                       ; preds = %ifend30
  %memberidx4.i = getelementptr inbounds %Class, ptr %109, i64 0, i32 4
  %116 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i175 = getelementptr inbounds %PropId, ptr %70, i64 0, i32 2
  %117 = load i64, ptr %memberidx5.i175, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %116, i64 0, i32 1
  %118 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i176 = getelementptr inbounds ptr, ptr %118, i64 %117
  %119 = load ptr, ptr %ptridx.i.i176, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %119, i64 0, i32 4
  %parent_prop_visibility = alloca i64, align 8
  %memberidx6.i197 = getelementptr inbounds %ClassField, ptr %119, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i192, %ifend.i198
  %parent_prop_visibility293 = phi ptr [ %parent_prop_visibility290, %if.entry.i192 ], [ %parent_prop_visibility, %ifend.i198 ]
  %common.ret.op.i172291.in = phi ptr [ %memberidx3.i, %if.entry.i192 ], [ %memberidx6.i, %ifend.i198 ]
  %common.ret.op.in.i185 = phi ptr [ %memberidx3.i191, %if.entry.i192 ], [ %memberidx6.i197, %ifend.i198 ]
  %common.ret.op.i172291 = load ptr, ptr %common.ret.op.i172291.in, align 8
  %common.ret.op.i186 = load i64, ptr %common.ret.op.in.i185, align 4
  store i64 %common.ret.op.i186, ptr %parent_prop_visibility293, align 8
  %120 = load ptr, ptr %memberidx15, align 8
  %121 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i172291, ptr %120)
  br i1 %121, label %ifend42, label %if.entry40

if.entry40:                                       ; preds = %get_class_prop_visibility.exit
  %122 = load ptr, ptr %memberidx4, align 8
  %123 = load ptr, ptr %122, align 8
  %memberidx44 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %123, i64 0, i32 5
  %124 = load ptr, ptr %memberidx44, align 8
  %125 = call ptr %124(ptr nonnull %122)
  %memberidx45 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %126 = load ptr, ptr %memberidx45, align 8
  %127 = load ptr, ptr %126, align 8
  %memberidx46 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %127, i64 0, i32 5
  %128 = load ptr, ptr %memberidx46, align 8
  %129 = call ptr %128(ptr nonnull %126)
  %130 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i172291)
  %131 = load ptr, ptr %130, align 8
  %memberidx47 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %131, i64 0, i32 5
  %132 = load ptr, ptr %memberidx47, align 8
  %133 = call ptr %132(ptr nonnull %130)
  %134 = alloca ptr, align 8
  %135 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %134, ptr nonnull @122, ptr %125, ptr %129, ptr %133)
  %136 = load ptr, ptr %134, align 8
  %137 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %137, align 8
  %memberidx.i199 = getelementptr inbounds %string, ptr %137, i64 0, i32 1
  store ptr %136, ptr %memberidx.i199, align 8
  %memberidx1.i200 = getelementptr inbounds %string, ptr %137, i64 0, i32 2
  store i64 %135, ptr %memberidx1.i200, align 4
  %memberidx2.i201 = getelementptr inbounds %string, ptr %137, i64 0, i32 3
  store i64 %135, ptr %memberidx2.i201, align 4
  tail call void @free(ptr %125)
  tail call void @free(ptr %129)
  tail call void @free(ptr %133)
  %138 = load ptr, ptr %9, align 8
  %memberidx49 = getelementptr inbounds %Token, ptr %138, i64 0, i32 1
  %139 = load ptr, ptr %memberidx49, align 8
  %140 = load ptr, ptr %memberidx.i137, align 8
  %memberidx1.i203 = getelementptr inbounds %Compiler, ptr %140, i64 0, i32 6
  %141 = load ptr, ptr %memberidx1.i203, align 8
  %142 = call ptr @malloc(i32 24)
  store i64 5, ptr %142, align 4
  %memberidx1.i.i204 = getelementptr inbounds %FloError, ptr %142, i64 0, i32 2
  store ptr %139, ptr %memberidx1.i.i204, align 8
  %memberidx2.i.i205 = getelementptr inbounds %FloError, ptr %142, i64 0, i32 1
  store ptr %137, ptr %memberidx2.i.i205, align 8
  %memberidx.i.i206 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 2
  %143 = load i64, ptr %memberidx.i.i206, align 4
  %memberidx1.i2.i207 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 3
  %144 = load i64, ptr %memberidx1.i2.i207, align 4
  %.not.i.i208 = icmp slt i64 %143, %144
  br i1 %.not.i.i208, label %if.entry40.TypeChecker_error.exit214_crit_edge, label %if.entry.i.i211

if.entry40.TypeChecker_error.exit214_crit_edge:   ; preds = %if.entry40
  %memberidx4.i.i212.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 1
  %.pre332 = load ptr, ptr %memberidx4.i.i212.phi.trans.insert, align 8
  br label %TypeChecker_error.exit214

if.entry.i.i211:                                  ; preds = %if.entry40
  %145 = shl i64 %144, 1
  store i64 %145, ptr %memberidx1.i2.i207, align 4
  %memberidx2.i.i.i210 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 1
  %146 = load ptr, ptr %memberidx2.i.i.i210, align 8
  %147 = shl i64 %144, 4
  %148 = call ptr @realloc(ptr %146, i64 %147)
  store ptr %148, ptr %memberidx2.i.i.i210, align 8
  %.pre331 = load i64, ptr %memberidx.i.i206, align 4
  br label %TypeChecker_error.exit214

TypeChecker_error.exit214:                        ; preds = %if.entry40.TypeChecker_error.exit214_crit_edge, %if.entry.i.i211
  %149 = phi ptr [ %.pre332, %if.entry40.TypeChecker_error.exit214_crit_edge ], [ %148, %if.entry.i.i211 ]
  %150 = phi i64 [ %143, %if.entry40.TypeChecker_error.exit214_crit_edge ], [ %.pre331, %if.entry.i.i211 ]
  %151 = add i64 %150, 1
  store i64 %151, ptr %memberidx.i.i206, align 4
  %ptridx.i.i213 = getelementptr inbounds ptr, ptr %149, i64 %150
  store ptr %142, ptr %ptridx.i.i213, align 8
  br label %common.ret

ifend42:                                          ; preds = %get_class_prop_visibility.exit
  %152 = load i64, ptr %memberidx11, align 4
  %.not131 = icmp eq i64 %152, %common.ret.op.i186
  br i1 %.not131, label %ifend25, label %if.entry51

if.entry51:                                       ; preds = %ifend42
  %153 = load ptr, ptr %memberidx4, align 8
  %154 = load ptr, ptr %153, align 8
  %memberidx55 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %154, i64 0, i32 5
  %155 = load ptr, ptr %memberidx55, align 8
  %156 = call ptr %155(ptr nonnull %153)
  %memberidx56 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %157 = load ptr, ptr %memberidx56, align 8
  %158 = load ptr, ptr %157, align 8
  %memberidx57 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %158, i64 0, i32 5
  %159 = load ptr, ptr %memberidx57, align 8
  %160 = call ptr %159(ptr nonnull %157)
  switch i64 %common.ret.op.i186, label %ifend3.i [
    i64 1, label %if.entry.i218
    i64 2, label %if.entry1.i
  ]

if.entry.i218:                                    ; preds = %if.entry51
  %161 = call ptr @malloc(i32 56)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %161, ptr noundef nonnull align 8 dereferenceable(7) @47, i64 7, i1 false)
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry51
  %162 = call ptr @malloc(i32 48)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %162, ptr noundef nonnull align 8 dereferenceable(6) @48, i64 6, i1 false)
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry51
  %163 = call ptr @malloc(i32 72)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %163, ptr noundef nonnull align 8 dereferenceable(9) @49, i64 9, i1 false)
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i218, %if.entry1.i, %ifend3.i
  %.sink360 = phi ptr [ %161, %if.entry.i218 ], [ %162, %if.entry1.i ], [ %163, %ifend3.i ]
  %.sink358 = phi i64 [ 7, %if.entry.i218 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %164 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %164, align 8
  %memberidx.i.i.i216 = getelementptr inbounds %string, ptr %164, i64 0, i32 1
  store ptr %.sink360, ptr %memberidx.i.i.i216, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %164, i64 0, i32 2
  store i64 %.sink358, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i217 = getelementptr inbounds %string, ptr %164, i64 0, i32 3
  store i64 %.sink358, ptr %memberidx2.i.i.i217, align 4
  %165 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %166 = call ptr %165(ptr nonnull %164)
  %167 = alloca ptr, align 8
  %168 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %167, ptr nonnull @123, ptr %156, ptr %160, ptr %166)
  %169 = load ptr, ptr %167, align 8
  %170 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %170, align 8
  %memberidx.i220 = getelementptr inbounds %string, ptr %170, i64 0, i32 1
  store ptr %169, ptr %memberidx.i220, align 8
  %memberidx1.i221 = getelementptr inbounds %string, ptr %170, i64 0, i32 2
  store i64 %168, ptr %memberidx1.i221, align 4
  %memberidx2.i222 = getelementptr inbounds %string, ptr %170, i64 0, i32 3
  store i64 %168, ptr %memberidx2.i222, align 4
  tail call void @free(ptr %156)
  tail call void @free(ptr %160)
  tail call void @free(ptr %166)
  %171 = load ptr, ptr %9, align 8
  %memberidx60 = getelementptr inbounds %Token, ptr %171, i64 0, i32 1
  %172 = load ptr, ptr %memberidx60, align 8
  %173 = load ptr, ptr %memberidx.i137, align 8
  %memberidx1.i224 = getelementptr inbounds %Compiler, ptr %173, i64 0, i32 6
  %174 = load ptr, ptr %memberidx1.i224, align 8
  %175 = call ptr @malloc(i32 24)
  store i64 4, ptr %175, align 4
  %memberidx1.i.i225 = getelementptr inbounds %FloError, ptr %175, i64 0, i32 2
  store ptr %172, ptr %memberidx1.i.i225, align 8
  %memberidx2.i.i226 = getelementptr inbounds %FloError, ptr %175, i64 0, i32 1
  store ptr %170, ptr %memberidx2.i.i226, align 8
  %memberidx.i.i227 = getelementptr inbounds %Array_FloError_, ptr %174, i64 0, i32 2
  %176 = load i64, ptr %memberidx.i.i227, align 4
  %memberidx1.i2.i228 = getelementptr inbounds %Array_FloError_, ptr %174, i64 0, i32 3
  %177 = load i64, ptr %memberidx1.i2.i228, align 4
  %.not.i.i229 = icmp slt i64 %176, %177
  br i1 %.not.i.i229, label %dump_access.exit.TypeChecker_error.exit235_crit_edge, label %if.entry.i.i232

dump_access.exit.TypeChecker_error.exit235_crit_edge: ; preds = %dump_access.exit
  %memberidx4.i.i233.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %174, i64 0, i32 1
  %.pre334 = load ptr, ptr %memberidx4.i.i233.phi.trans.insert, align 8
  br label %TypeChecker_error.exit235

if.entry.i.i232:                                  ; preds = %dump_access.exit
  %178 = shl i64 %177, 1
  store i64 %178, ptr %memberidx1.i2.i228, align 4
  %memberidx2.i.i.i231 = getelementptr inbounds %Array_FloError_, ptr %174, i64 0, i32 1
  %179 = load ptr, ptr %memberidx2.i.i.i231, align 8
  %180 = shl i64 %177, 4
  %181 = call ptr @realloc(ptr %179, i64 %180)
  store ptr %181, ptr %memberidx2.i.i.i231, align 8
  %.pre333 = load i64, ptr %memberidx.i.i227, align 4
  br label %TypeChecker_error.exit235

TypeChecker_error.exit235:                        ; preds = %dump_access.exit.TypeChecker_error.exit235_crit_edge, %if.entry.i.i232
  %182 = phi ptr [ %.pre334, %dump_access.exit.TypeChecker_error.exit235_crit_edge ], [ %181, %if.entry.i.i232 ]
  %183 = phi i64 [ %176, %dump_access.exit.TypeChecker_error.exit235_crit_edge ], [ %.pre333, %if.entry.i.i232 ]
  %184 = add i64 %183, 1
  store i64 %184, ptr %memberidx.i.i227, align 4
  %ptridx.i.i234 = getelementptr inbounds ptr, ptr %182, i64 %183
  store ptr %175, ptr %ptridx.i.i234, align 8
  br label %common.ret

if.entry62:                                       ; preds = %ifend25
  %memberidx65 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 5
  %185 = load ptr, ptr %memberidx15, align 8
  %186 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %185, ptr nonnull %74)
  store ptr %186, ptr %memberidx65, align 8
  %187 = load ptr, ptr %memberidx.i137, align 8
  %memberidx1.i237 = getelementptr inbounds %Compiler, ptr %187, i64 0, i32 6
  %188 = load ptr, ptr %memberidx1.i237, align 8
  %memberidx2.i238 = getelementptr inbounds %Array_FloError_, ptr %188, i64 0, i32 2
  %189 = load i64, ptr %memberidx2.i238, align 4
  %190 = icmp sgt i64 %189, 0
  br i1 %190, label %common.ret, label %ifend70

else63:                                           ; preds = %ifend25
  store i1 false, ptr %memberidx.i132, align 1
  %191 = load ptr, ptr %memberidx21, align 8
  %192 = load ptr, ptr %memberidx4, align 8
  %193 = load ptr, ptr %10, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %191, ptr %192, ptr %193)
  %194 = add i64 %current_vtable_index.0310, 1
  br label %ifend64

ifend64:                                          ; preds = %else63, %ifend88
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.0310, %ifend88 ], [ %194, %else63 ]
  %195 = load ptr, ptr %memberidx99, align 8
  %memberidx.i239 = getelementptr inbounds %Array_ClassField_, ptr %195, i64 0, i32 2
  %196 = load i64, ptr %memberidx.i239, align 4
  %memberidx1.i240 = getelementptr inbounds %Array_ClassField_, ptr %195, i64 0, i32 3
  %197 = load i64, ptr %memberidx1.i240, align 4
  %.not.i241 = icmp slt i64 %196, %197
  br i1 %.not.i241, label %ifend64.Array_ClassField____sl__.exit_crit_edge, label %if.entry.i244

ifend64.Array_ClassField____sl__.exit_crit_edge:  ; preds = %ifend64
  %memberidx4.i245.phi.trans.insert = getelementptr inbounds %Array_ClassField_, ptr %195, i64 0, i32 1
  %.pre342 = load ptr, ptr %memberidx4.i245.phi.trans.insert, align 8
  br label %Array_ClassField____sl__.exit

if.entry.i244:                                    ; preds = %ifend64
  %198 = shl i64 %197, 1
  store i64 %198, ptr %memberidx1.i240, align 4
  %memberidx2.i.i243 = getelementptr inbounds %Array_ClassField_, ptr %195, i64 0, i32 1
  %199 = load ptr, ptr %memberidx2.i.i243, align 8
  %200 = shl i64 %197, 4
  %201 = call ptr @realloc(ptr %199, i64 %200)
  store ptr %201, ptr %memberidx2.i.i243, align 8
  %.pre341 = load i64, ptr %memberidx.i239, align 4
  br label %Array_ClassField____sl__.exit

Array_ClassField____sl__.exit:                    ; preds = %ifend64.Array_ClassField____sl__.exit_crit_edge, %if.entry.i244
  %202 = phi ptr [ %.pre342, %ifend64.Array_ClassField____sl__.exit_crit_edge ], [ %201, %if.entry.i244 ]
  %203 = phi i64 [ %196, %ifend64.Array_ClassField____sl__.exit_crit_edge ], [ %.pre341, %if.entry.i244 ]
  %204 = add i64 %203, 1
  store i64 %204, ptr %memberidx.i239, align 4
  %ptridx.i246 = getelementptr inbounds ptr, ptr %202, i64 %203
  store ptr %10, ptr %ptridx.i246, align 8
  %205 = add nuw nsw i64 %i.0311, 1
  %206 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FieldNode_, ptr %206, i64 0, i32 2
  %207 = load i64, ptr %memberidx2, align 4
  %208 = icmp slt i64 %205, %207
  br i1 %208, label %for.body, label %common.ret

ifend70:                                          ; preds = %if.entry62
  %209 = load ptr, ptr %memberidx15, align 8
  %memberidx73 = getelementptr inbounds %Expression, ptr %186, i64 0, i32 3
  %210 = load ptr, ptr %memberidx73, align 8
  %211 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %209, ptr %210)
  br i1 %211, label %ifend76, label %if.entry74

if.entry74:                                       ; preds = %ifend70
  %212 = load ptr, ptr %memberidx15, align 8
  %213 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %212)
  %214 = load ptr, ptr %213, align 8
  %memberidx78 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %214, i64 0, i32 5
  %215 = load ptr, ptr %memberidx78, align 8
  %216 = call ptr %215(ptr nonnull %213)
  %217 = load ptr, ptr %memberidx65, align 8
  %memberidx80 = getelementptr inbounds %Expression, ptr %217, i64 0, i32 3
  %218 = load ptr, ptr %memberidx80, align 8
  %219 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %218)
  %220 = load ptr, ptr %219, align 8
  %memberidx81 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %220, i64 0, i32 5
  %221 = load ptr, ptr %memberidx81, align 8
  %222 = call ptr %221(ptr nonnull %219)
  %223 = alloca ptr, align 8
  %224 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %223, ptr nonnull @124, ptr %216, ptr %222)
  %225 = load ptr, ptr %223, align 8
  %226 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %226, align 8
  %memberidx.i248 = getelementptr inbounds %string, ptr %226, i64 0, i32 1
  store ptr %225, ptr %memberidx.i248, align 8
  %memberidx1.i249 = getelementptr inbounds %string, ptr %226, i64 0, i32 2
  store i64 %224, ptr %memberidx1.i249, align 4
  %memberidx2.i250 = getelementptr inbounds %string, ptr %226, i64 0, i32 3
  store i64 %224, ptr %memberidx2.i250, align 4
  tail call void @free(ptr %216)
  tail call void @free(ptr %222)
  %227 = load ptr, ptr %memberidx61, align 8
  %228 = load ptr, ptr %227, align 8
  %229 = load ptr, ptr %memberidx.i137, align 8
  %memberidx1.i252 = getelementptr inbounds %Compiler, ptr %229, i64 0, i32 6
  %230 = load ptr, ptr %memberidx1.i252, align 8
  %231 = call ptr @malloc(i32 24)
  store i64 5, ptr %231, align 4
  %memberidx1.i.i253 = getelementptr inbounds %FloError, ptr %231, i64 0, i32 2
  store ptr %228, ptr %memberidx1.i.i253, align 8
  %memberidx2.i.i254 = getelementptr inbounds %FloError, ptr %231, i64 0, i32 1
  store ptr %226, ptr %memberidx2.i.i254, align 8
  %memberidx.i.i255 = getelementptr inbounds %Array_FloError_, ptr %230, i64 0, i32 2
  %232 = load i64, ptr %memberidx.i.i255, align 4
  %memberidx1.i2.i256 = getelementptr inbounds %Array_FloError_, ptr %230, i64 0, i32 3
  %233 = load i64, ptr %memberidx1.i2.i256, align 4
  %.not.i.i257 = icmp slt i64 %232, %233
  br i1 %.not.i.i257, label %if.entry74.TypeChecker_error.exit263_crit_edge, label %if.entry.i.i260

if.entry74.TypeChecker_error.exit263_crit_edge:   ; preds = %if.entry74
  %memberidx4.i.i261.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %230, i64 0, i32 1
  %.pre338 = load ptr, ptr %memberidx4.i.i261.phi.trans.insert, align 8
  br label %TypeChecker_error.exit263

if.entry.i.i260:                                  ; preds = %if.entry74
  %234 = shl i64 %233, 1
  store i64 %234, ptr %memberidx1.i2.i256, align 4
  %memberidx2.i.i.i259 = getelementptr inbounds %Array_FloError_, ptr %230, i64 0, i32 1
  %235 = load ptr, ptr %memberidx2.i.i.i259, align 8
  %236 = shl i64 %233, 4
  %237 = call ptr @realloc(ptr %235, i64 %236)
  store ptr %237, ptr %memberidx2.i.i.i259, align 8
  %.pre337 = load i64, ptr %memberidx.i.i255, align 4
  br label %TypeChecker_error.exit263

TypeChecker_error.exit263:                        ; preds = %if.entry74.TypeChecker_error.exit263_crit_edge, %if.entry.i.i260
  %238 = phi ptr [ %.pre338, %if.entry74.TypeChecker_error.exit263_crit_edge ], [ %237, %if.entry.i.i260 ]
  %239 = phi i64 [ %232, %if.entry74.TypeChecker_error.exit263_crit_edge ], [ %.pre337, %if.entry.i.i260 ]
  %240 = add i64 %239, 1
  store i64 %240, ptr %memberidx.i.i255, align 4
  %ptridx.i.i262 = getelementptr inbounds ptr, ptr %238, i64 %239
  store ptr %231, ptr %ptridx.i.i262, align 8
  br label %ifend76

ifend76:                                          ; preds = %ifend70, %TypeChecker_error.exit263
  %241 = load ptr, ptr %memberidx65, align 8
  %memberidx85 = getelementptr inbounds %Expression, ptr %241, i64 0, i32 1
  %242 = load i1, ptr %memberidx85, align 1
  br i1 %242, label %ifend88, label %if.entry86

if.entry86:                                       ; preds = %ifend76
  %243 = call ptr @malloc(i32 360)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %243, ptr noundef nonnull align 8 dereferenceable(45) @125, i64 45, i1 false)
  %244 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %244, align 8
  %memberidx.i.i264 = getelementptr inbounds %string, ptr %244, i64 0, i32 1
  store ptr %243, ptr %memberidx.i.i264, align 8
  %memberidx1.i.i265 = getelementptr inbounds %string, ptr %244, i64 0, i32 2
  store i64 45, ptr %memberidx1.i.i265, align 4
  %memberidx2.i.i266 = getelementptr inbounds %string, ptr %244, i64 0, i32 3
  store i64 45, ptr %memberidx2.i.i266, align 4
  %245 = load ptr, ptr %memberidx61, align 8
  %246 = load ptr, ptr %245, align 8
  %247 = load ptr, ptr %memberidx.i137, align 8
  %memberidx1.i268 = getelementptr inbounds %Compiler, ptr %247, i64 0, i32 6
  %248 = load ptr, ptr %memberidx1.i268, align 8
  %249 = call ptr @malloc(i32 24)
  store i64 4, ptr %249, align 4
  %memberidx1.i.i269 = getelementptr inbounds %FloError, ptr %249, i64 0, i32 2
  store ptr %246, ptr %memberidx1.i.i269, align 8
  %memberidx2.i.i270 = getelementptr inbounds %FloError, ptr %249, i64 0, i32 1
  store ptr %244, ptr %memberidx2.i.i270, align 8
  %memberidx.i.i271 = getelementptr inbounds %Array_FloError_, ptr %248, i64 0, i32 2
  %250 = load i64, ptr %memberidx.i.i271, align 4
  %memberidx1.i2.i272 = getelementptr inbounds %Array_FloError_, ptr %248, i64 0, i32 3
  %251 = load i64, ptr %memberidx1.i2.i272, align 4
  %.not.i.i273 = icmp slt i64 %250, %251
  br i1 %.not.i.i273, label %if.entry86.TypeChecker_error.exit279_crit_edge, label %if.entry.i.i276

if.entry86.TypeChecker_error.exit279_crit_edge:   ; preds = %if.entry86
  %memberidx4.i.i277.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %248, i64 0, i32 1
  %.pre340 = load ptr, ptr %memberidx4.i.i277.phi.trans.insert, align 8
  br label %TypeChecker_error.exit279

if.entry.i.i276:                                  ; preds = %if.entry86
  %252 = shl i64 %251, 1
  store i64 %252, ptr %memberidx1.i2.i272, align 4
  %memberidx2.i.i.i275 = getelementptr inbounds %Array_FloError_, ptr %248, i64 0, i32 1
  %253 = load ptr, ptr %memberidx2.i.i.i275, align 8
  %254 = shl i64 %251, 4
  %255 = call ptr @realloc(ptr %253, i64 %254)
  store ptr %255, ptr %memberidx2.i.i.i275, align 8
  %.pre339 = load i64, ptr %memberidx.i.i271, align 4
  br label %TypeChecker_error.exit279

TypeChecker_error.exit279:                        ; preds = %if.entry86.TypeChecker_error.exit279_crit_edge, %if.entry.i.i276
  %256 = phi ptr [ %.pre340, %if.entry86.TypeChecker_error.exit279_crit_edge ], [ %255, %if.entry.i.i276 ]
  %257 = phi i64 [ %250, %if.entry86.TypeChecker_error.exit279_crit_edge ], [ %.pre339, %if.entry.i.i276 ]
  %258 = add i64 %257, 1
  store i64 %258, ptr %memberidx.i.i271, align 4
  %ptridx.i.i278 = getelementptr inbounds ptr, ptr %256, i64 %257
  store ptr %249, ptr %ptridx.i.i278, align 8
  br label %common.ret

ifend88:                                          ; preds = %ifend76
  store i1 true, ptr %memberidx.i132, align 1
  %259 = load ptr, ptr %memberidx92, align 8
  %260 = load ptr, ptr %memberidx4, align 8
  %261 = load ptr, ptr %10, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %259, ptr %260, ptr %261)
  br label %ifend64
}

define internal fastcc void @TypeChecker_check_module_import(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Array_Token__, ptr %4, i64 0, i32 2
  %5 = load i64, ptr %memberidx2, align 4
  %6 = icmp sgt i64 %5, 0
  br i1 %6, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry54, %else55, %for.end, %ifend, %TypeChecker_error.exit283, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %2
  %7 = tail call ptr @malloc(i32 408)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(51) %7, ptr noundef nonnull align 8 dereferenceable(51) @91, i64 51, i1 false)
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %8, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  store ptr %7, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  store i64 51, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 3
  store i64 51, ptr %memberidx2.i.i, align 4
  %9 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %11 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %11, i64 0, i32 6
  %12 = load ptr, ptr %memberidx1.i, align 8
  %13 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %13, align 4
  %memberidx1.i.i86 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 2
  store ptr %10, ptr %memberidx1.i.i86, align 8
  %memberidx2.i.i87 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 1
  store ptr %8, ptr %memberidx2.i.i87, align 8
  %memberidx.i.i88 = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 2
  %14 = load i64, ptr %memberidx.i.i88, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 3
  %15 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %14, %15
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %.pre352 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %16 = shl i64 %15, 1
  store i64 %16, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i.i.i, align 8
  %18 = shl i64 %15, 4
  %19 = tail call ptr @realloc(ptr %17, i64 %18)
  store ptr %19, ptr %memberidx2.i.i.i, align 8
  %.pre351 = load i64, ptr %memberidx.i.i88, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %20 = phi ptr [ %.pre352, %if.entry.TypeChecker_error.exit_crit_edge ], [ %19, %if.entry.i.i ]
  %21 = phi i64 [ %14, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre351, %if.entry.i.i ]
  %22 = add i64 %21, 1
  store i64 %22, ptr %memberidx.i.i88, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %20, i64 %21
  store ptr %13, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %2
  %memberidx6 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 2
  %23 = load ptr, ptr %memberidx6, align 8
  %memberidx8 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %24 = load ptr, ptr %memberidx8, align 8
  %25 = tail call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %23, ptr %24)
  %memberidx.i89 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %26 = load ptr, ptr %memberidx.i89, align 8
  %memberidx1.i90 = getelementptr inbounds %Compiler, ptr %26, i64 0, i32 6
  %27 = load ptr, ptr %memberidx1.i90, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %27, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i, align 4
  %29 = icmp sgt i64 %28, 0
  br i1 %29, label %common.ret, label %ifend11

ifend11:                                          ; preds = %ifend
  %memberidx12 = getelementptr inbounds %Module, ptr %25, i64 0, i32 7
  %30 = load ptr, ptr %memberidx12, align 8
  %memberidx.i91 = getelementptr inbounds %Array_Scope_, ptr %30, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i91, align 8
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr %1, align 8
  %memberidx14 = getelementptr inbounds %Array_ImportClause_, ptr %33, i64 0, i32 2
  %34 = load i64, ptr %memberidx14, align 4
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %for.entry, label %else16

else16:                                           ; preds = %ifend11
  %memberidx53 = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 2
  %36 = load ptr, ptr %memberidx53, align 8
  %.not = icmp eq ptr %36, null
  br i1 %.not, label %else55, label %if.entry54

for.entry:                                        ; preds = %ifend11
  %37 = tail call ptr @malloc(i32 25)
  %memberidx.i92 = getelementptr inbounds %Array_ImportClause_, ptr %33, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i92, align 8
  %39 = load i64, ptr %memberidx14, align 4
  store i1 false, ptr %37, align 1
  %memberidx1.i.i94 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %37, i64 0, i32 1
  %memberidx2.i.i95 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %37, i64 0, i32 3
  store ptr %38, ptr %memberidx2.i.i95, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %37, i64 0, i32 2
  store i64 %39, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i94, align 4
  %40 = icmp slt i64 %39, 1
  br i1 %40, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx25 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 9
  %memberidx29 = getelementptr inbounds %Scope, ptr %32, i64 0, i32 2
  %memberidx.i.i.i133 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %memberidx33 = getelementptr inbounds %Scope, ptr %32, i64 0, i32 4
  %memberidx37 = getelementptr inbounds %Scope, ptr %32, i64 0, i32 1
  %memberidx41 = getelementptr inbounds %Scope, ptr %32, i64 0, i32 3
  %memberidx45 = getelementptr inbounds %Scope, ptr %32, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %41 = phi i64 [ 1, %for.body.lr.ph ], [ %45, %for.incr ]
  %storemerge321.in = phi ptr [ %38, %for.body.lr.ph ], [ %ptridx.i100, %for.incr ]
  %storemerge321 = load ptr, ptr %storemerge321.in, align 8
  %42 = load ptr, ptr %storemerge321, align 8
  %memberidx21 = getelementptr inbounds %IdentifierToken, ptr %42, i64 0, i32 2
  %43 = load ptr, ptr %memberidx21, align 8
  %memberidx22 = getelementptr inbounds %ImportClause, ptr %storemerge321, i64 0, i32 1
  %44 = load ptr, ptr %memberidx22, align 8
  %.not79 = icmp eq ptr %44, null
  br i1 %.not79, label %end, label %true_block

for.incr:                                         ; preds = %Map_string_Generic____getitem__.exit, %if.entry46, %if.entry42, %if.entry38, %if.entry34, %if.entry30
  %45 = add i64 %41, 1
  store i64 %45, ptr %memberidx1.i.i94, align 4
  %ptridx.i100 = getelementptr inbounds ptr, ptr %38, i64 %41
  %46 = icmp sgt i64 %45, %39
  br i1 %46, label %for.end, label %for.body

for.end:                                          ; preds = %for.incr, %for.entry
  tail call void @free(ptr nonnull %37)
  br label %common.ret

true_block:                                       ; preds = %for.body
  %memberidx24 = getelementptr inbounds %IdentifierToken, ptr %44, i64 0, i32 2
  %47 = load ptr, ptr %memberidx24, align 8
  br label %end

end:                                              ; preds = %for.body, %true_block
  %ternary = phi ptr [ %47, %true_block ], [ %43, %for.body ]
  %48 = load ptr, ptr %memberidx25, align 8
  %49 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %43)
  %memberidx.i102 = getelementptr inbounds %Map_string_Generic_, ptr %48, i64 0, i32 1
  %50 = load i64, ptr %memberidx.i102, align 4
  %51 = srem i64 %49, %50
  %52 = load ptr, ptr %48, align 8
  %ptridx.i103 = getelementptr inbounds ptr, ptr %52, i64 %51
  %53 = load ptr, ptr %ptridx.i103, align 8
  %.not.i = icmp eq ptr %53, null
  br i1 %.not.i, label %ifend28, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %end
  %memberidx1.i.i105 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  %memberidx3.i.i108 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %54 = phi ptr [ %64, %else.i ], [ %52, %while.entry.i.preheader ]
  %55 = phi i64 [ %65, %else.i ], [ %50, %while.entry.i.preheader ]
  %56 = phi ptr [ %68, %else.i ], [ %53, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %67, %else.i ], [ %51, %while.entry.i.preheader ]
  %57 = load ptr, ptr %56, align 8
  %memberidx.i.i104 = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  %58 = load i64, ptr %memberidx.i.i104, align 4
  %59 = load i64, ptr %memberidx1.i.i105, align 4
  %.not.i.i106 = icmp eq i64 %58, %59
  br i1 %.not.i.i106, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i107 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  %60 = load ptr, ptr %memberidx2.i.i107, align 8
  %61 = load ptr, ptr %memberidx3.i.i108, align 8
  %62 = tail call i64 @memcmp(ptr %60, ptr %61, i64 %58)
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i102, align 4
  %.pre326 = load ptr, ptr %48, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre327.pre = load ptr, ptr %48, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre327.pre, i64 %hash.0.i
  %.pre328.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre328.pre, null
  br i1 %.not29.i, label %ifend28, label %Map_string_Generic____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %64 = phi ptr [ %.pre326, %ifend.i.i.else.i_crit_edge ], [ %54, %while.entry.i ]
  %65 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %55, %while.entry.i ]
  %66 = add i64 %hash.0.i, 1
  %67 = srem i64 %66, %65
  %ptridx7.i = getelementptr inbounds ptr, ptr %64, i64 %67
  %68 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %68, null
  br i1 %.not30.i, label %ifend28, label %while.entry.i

Map_string_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_Generic_, ptr %.pre328.pre, i64 0, i32 1
  %69 = load ptr, ptr %memberidx15.i, align 8
  %.not80 = icmp eq ptr %69, null
  br i1 %.not80, label %ifend28, label %for.incr

ifend28:                                          ; preds = %else.i, %end, %while.end.i, %Map_string_Generic____getitem__.exit
  %70 = load ptr, ptr %memberidx29, align 8
  %71 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr %43)
  %memberidx.i109 = getelementptr inbounds %Map_string_ClassId_, ptr %70, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i109, align 4
  %73 = srem i64 %71, %72
  %74 = load ptr, ptr %70, align 8
  %ptridx.i110 = getelementptr inbounds ptr, ptr %74, i64 %73
  %75 = load ptr, ptr %ptridx.i110, align 8
  %.not.i111 = icmp eq ptr %75, null
  br i1 %.not.i111, label %ifend32, label %while.entry.i117.preheader

while.entry.i117.preheader:                       ; preds = %ifend28
  %memberidx1.i.i115 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  %memberidx3.i.i119 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  br label %while.entry.i117

while.entry.i117:                                 ; preds = %while.entry.i117.preheader, %else.i129
  %76 = phi ptr [ %86, %else.i129 ], [ %74, %while.entry.i117.preheader ]
  %77 = phi i64 [ %87, %else.i129 ], [ %72, %while.entry.i117.preheader ]
  %78 = phi ptr [ %90, %else.i129 ], [ %75, %while.entry.i117.preheader ]
  %hash.0.i112 = phi i64 [ %89, %else.i129 ], [ %73, %while.entry.i117.preheader ]
  %79 = load ptr, ptr %78, align 8
  %memberidx.i.i114 = getelementptr inbounds %string, ptr %79, i64 0, i32 2
  %80 = load i64, ptr %memberidx.i.i114, align 4
  %81 = load i64, ptr %memberidx1.i.i115, align 4
  %.not.i.i116 = icmp eq i64 %80, %81
  br i1 %.not.i.i116, label %ifend.i.i120, label %else.i129

ifend.i.i120:                                     ; preds = %while.entry.i117
  %memberidx2.i.i118 = getelementptr inbounds %string, ptr %79, i64 0, i32 1
  %82 = load ptr, ptr %memberidx2.i.i118, align 8
  %83 = load ptr, ptr %memberidx3.i.i119, align 8
  %84 = tail call i64 @memcmp(ptr %82, ptr %83, i64 %80)
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %while.end.i126, label %ifend.i.i120.else.i129_crit_edge

ifend.i.i120.else.i129_crit_edge:                 ; preds = %ifend.i.i120
  %.pre329 = load i64, ptr %memberidx.i109, align 4
  %.pre330 = load ptr, ptr %70, align 8
  br label %else.i129

while.end.i126:                                   ; preds = %ifend.i.i120
  %.pre331.pre = load ptr, ptr %70, align 8
  %ptridx9.i124.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre331.pre, i64 %hash.0.i112
  %.pre332.pre = load ptr, ptr %ptridx9.i124.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i125 = icmp eq ptr %.pre332.pre, null
  br i1 %.not29.i125, label %ifend32, label %Map_string_ClassId____getitem__.exit

else.i129:                                        ; preds = %ifend.i.i120.else.i129_crit_edge, %while.entry.i117
  %86 = phi ptr [ %.pre330, %ifend.i.i120.else.i129_crit_edge ], [ %76, %while.entry.i117 ]
  %87 = phi i64 [ %.pre329, %ifend.i.i120.else.i129_crit_edge ], [ %77, %while.entry.i117 ]
  %88 = add i64 %hash.0.i112, 1
  %89 = srem i64 %88, %87
  %ptridx7.i127 = getelementptr inbounds ptr, ptr %86, i64 %89
  %90 = load ptr, ptr %ptridx7.i127, align 8
  %.not30.i128 = icmp eq ptr %90, null
  br i1 %.not30.i128, label %ifend32, label %while.entry.i117

Map_string_ClassId____getitem__.exit:             ; preds = %while.end.i126
  %memberidx15.i131 = getelementptr inbounds %MapEntry_string_ClassId_, ptr %.pre332.pre, i64 0, i32 1
  %91 = load ptr, ptr %memberidx15.i131, align 8
  %.not81 = icmp eq ptr %91, null
  br i1 %.not81, label %ifend32, label %if.entry30

if.entry30:                                       ; preds = %Map_string_ClassId____getitem__.exit
  %92 = load i64, ptr %memberidx.i.i.i133, align 4
  %93 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %93, i64 0, i32 1
  %94 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %94, i64 0, i32 1
  %95 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %95, i64 %92
  %96 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx.i.i134 = getelementptr inbounds %Module, ptr %96, i64 0, i32 7
  %97 = load ptr, ptr %memberidx.i.i134, align 8
  %memberidx.i1.i.i = getelementptr inbounds %Array_Scope_, ptr %97, i64 0, i32 1
  %98 = load ptr, ptr %memberidx.i1.i.i, align 8
  %99 = load ptr, ptr %98, align 8
  %memberidx.i135 = getelementptr inbounds %Scope, ptr %99, i64 0, i32 2
  %100 = load ptr, ptr %memberidx.i135, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %100, ptr %ternary, ptr nonnull %91)
  %memberidx1.i136 = getelementptr inbounds %Scope, ptr %99, i64 0, i32 1
  %101 = load ptr, ptr %memberidx1.i136, align 8
  %102 = tail call ptr @malloc(i32 24)
  %103 = load i64, ptr %91, align 4
  %memberidx1.i.i137 = getelementptr inbounds %TypeId, ptr %91, i64 0, i32 2
  %104 = load i64, ptr %memberidx1.i.i137, align 4
  store i64 3, ptr %102, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %102, i64 0, i32 1
  store i64 %103, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i138 = getelementptr inbounds %VarId, ptr %102, i64 0, i32 2
  store i64 %104, ptr %memberidx2.i.i.i138, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %101, ptr %ternary, ptr nonnull %102)
  br label %for.incr

ifend32:                                          ; preds = %else.i129, %ifend28, %while.end.i126, %Map_string_ClassId____getitem__.exit
  %105 = load ptr, ptr %memberidx33, align 8
  %106 = tail call fastcc i64 @Map_string_EnumId__hash_fnc(ptr %43)
  %memberidx.i139 = getelementptr inbounds %Map_string_EnumId_, ptr %105, i64 0, i32 1
  %107 = load i64, ptr %memberidx.i139, align 4
  %108 = srem i64 %106, %107
  %109 = load ptr, ptr %105, align 8
  %ptridx.i140 = getelementptr inbounds ptr, ptr %109, i64 %108
  %110 = load ptr, ptr %ptridx.i140, align 8
  %.not.i141 = icmp eq ptr %110, null
  br i1 %.not.i141, label %ifend36, label %while.entry.i147.preheader

while.entry.i147.preheader:                       ; preds = %ifend32
  %memberidx1.i.i145 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  %memberidx3.i.i149 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  br label %while.entry.i147

while.entry.i147:                                 ; preds = %while.entry.i147.preheader, %else.i159
  %111 = phi ptr [ %121, %else.i159 ], [ %109, %while.entry.i147.preheader ]
  %112 = phi i64 [ %122, %else.i159 ], [ %107, %while.entry.i147.preheader ]
  %113 = phi ptr [ %125, %else.i159 ], [ %110, %while.entry.i147.preheader ]
  %hash.0.i142 = phi i64 [ %124, %else.i159 ], [ %108, %while.entry.i147.preheader ]
  %114 = load ptr, ptr %113, align 8
  %memberidx.i.i144 = getelementptr inbounds %string, ptr %114, i64 0, i32 2
  %115 = load i64, ptr %memberidx.i.i144, align 4
  %116 = load i64, ptr %memberidx1.i.i145, align 4
  %.not.i.i146 = icmp eq i64 %115, %116
  br i1 %.not.i.i146, label %ifend.i.i150, label %else.i159

ifend.i.i150:                                     ; preds = %while.entry.i147
  %memberidx2.i.i148 = getelementptr inbounds %string, ptr %114, i64 0, i32 1
  %117 = load ptr, ptr %memberidx2.i.i148, align 8
  %118 = load ptr, ptr %memberidx3.i.i149, align 8
  %119 = tail call i64 @memcmp(ptr %117, ptr %118, i64 %115)
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %while.end.i156, label %ifend.i.i150.else.i159_crit_edge

ifend.i.i150.else.i159_crit_edge:                 ; preds = %ifend.i.i150
  %.pre333 = load i64, ptr %memberidx.i139, align 4
  %.pre334 = load ptr, ptr %105, align 8
  br label %else.i159

while.end.i156:                                   ; preds = %ifend.i.i150
  %.pre335.pre = load ptr, ptr %105, align 8
  %ptridx9.i154.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre335.pre, i64 %hash.0.i142
  %.pre336.pre = load ptr, ptr %ptridx9.i154.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i155 = icmp eq ptr %.pre336.pre, null
  br i1 %.not29.i155, label %ifend36, label %Map_string_EnumId____getitem__.exit

else.i159:                                        ; preds = %ifend.i.i150.else.i159_crit_edge, %while.entry.i147
  %121 = phi ptr [ %.pre334, %ifend.i.i150.else.i159_crit_edge ], [ %111, %while.entry.i147 ]
  %122 = phi i64 [ %.pre333, %ifend.i.i150.else.i159_crit_edge ], [ %112, %while.entry.i147 ]
  %123 = add i64 %hash.0.i142, 1
  %124 = srem i64 %123, %122
  %ptridx7.i157 = getelementptr inbounds ptr, ptr %121, i64 %124
  %125 = load ptr, ptr %ptridx7.i157, align 8
  %.not30.i158 = icmp eq ptr %125, null
  br i1 %.not30.i158, label %ifend36, label %while.entry.i147

Map_string_EnumId____getitem__.exit:              ; preds = %while.end.i156
  %memberidx15.i161 = getelementptr inbounds %MapEntry_string_EnumId_, ptr %.pre336.pre, i64 0, i32 1
  %126 = load ptr, ptr %memberidx15.i161, align 8
  %.not82 = icmp eq ptr %126, null
  br i1 %.not82, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %Map_string_EnumId____getitem__.exit
  %127 = load i64, ptr %memberidx.i.i.i133, align 4
  %128 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i164 = getelementptr inbounds %Program, ptr %128, i64 0, i32 1
  %129 = load ptr, ptr %memberidx1.i.i.i.i164, align 8
  %memberidx.i.i.i.i.i165 = getelementptr inbounds %Array_Module_, ptr %129, i64 0, i32 1
  %130 = load ptr, ptr %memberidx.i.i.i.i.i165, align 8
  %ptridx.i.i.i.i.i166 = getelementptr inbounds ptr, ptr %130, i64 %127
  %131 = load ptr, ptr %ptridx.i.i.i.i.i166, align 8
  %memberidx.i.i167 = getelementptr inbounds %Module, ptr %131, i64 0, i32 7
  %132 = load ptr, ptr %memberidx.i.i167, align 8
  %memberidx.i1.i.i168 = getelementptr inbounds %Array_Scope_, ptr %132, i64 0, i32 1
  %133 = load ptr, ptr %memberidx.i1.i.i168, align 8
  %134 = load ptr, ptr %133, align 8
  %memberidx.i169 = getelementptr inbounds %Scope, ptr %134, i64 0, i32 4
  %135 = load ptr, ptr %memberidx.i169, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %135, ptr %ternary, ptr nonnull %126)
  %memberidx1.i170 = getelementptr inbounds %Scope, ptr %134, i64 0, i32 1
  %136 = load ptr, ptr %memberidx1.i170, align 8
  %137 = tail call ptr @malloc(i32 24)
  %138 = load i64, ptr %126, align 4
  %memberidx1.i.i171 = getelementptr inbounds %TypeId, ptr %126, i64 0, i32 2
  %139 = load i64, ptr %memberidx1.i.i171, align 4
  store i64 4, ptr %137, align 4
  %memberidx1.i.i.i172 = getelementptr inbounds %VarId, ptr %137, i64 0, i32 1
  store i64 %138, ptr %memberidx1.i.i.i172, align 4
  %memberidx2.i.i.i173 = getelementptr inbounds %VarId, ptr %137, i64 0, i32 2
  store i64 %139, ptr %memberidx2.i.i.i173, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %136, ptr %ternary, ptr nonnull %137)
  br label %for.incr

ifend36:                                          ; preds = %else.i159, %ifend32, %while.end.i156, %Map_string_EnumId____getitem__.exit
  %140 = load ptr, ptr %memberidx37, align 8
  %141 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %43)
  %memberidx.i174 = getelementptr inbounds %Map_string_VarId_, ptr %140, i64 0, i32 1
  %142 = load i64, ptr %memberidx.i174, align 4
  %143 = srem i64 %141, %142
  %144 = load ptr, ptr %140, align 8
  %ptridx.i175 = getelementptr inbounds ptr, ptr %144, i64 %143
  %145 = load ptr, ptr %ptridx.i175, align 8
  %.not.i176 = icmp eq ptr %145, null
  br i1 %.not.i176, label %ifend40, label %while.entry.i182.preheader

while.entry.i182.preheader:                       ; preds = %ifend36
  %memberidx1.i.i180 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  %memberidx3.i.i184 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  br label %while.entry.i182

while.entry.i182:                                 ; preds = %while.entry.i182.preheader, %else.i194
  %146 = phi ptr [ %156, %else.i194 ], [ %144, %while.entry.i182.preheader ]
  %147 = phi i64 [ %157, %else.i194 ], [ %142, %while.entry.i182.preheader ]
  %148 = phi ptr [ %160, %else.i194 ], [ %145, %while.entry.i182.preheader ]
  %hash.0.i177 = phi i64 [ %159, %else.i194 ], [ %143, %while.entry.i182.preheader ]
  %149 = load ptr, ptr %148, align 8
  %memberidx.i.i179 = getelementptr inbounds %string, ptr %149, i64 0, i32 2
  %150 = load i64, ptr %memberidx.i.i179, align 4
  %151 = load i64, ptr %memberidx1.i.i180, align 4
  %.not.i.i181 = icmp eq i64 %150, %151
  br i1 %.not.i.i181, label %ifend.i.i185, label %else.i194

ifend.i.i185:                                     ; preds = %while.entry.i182
  %memberidx2.i.i183 = getelementptr inbounds %string, ptr %149, i64 0, i32 1
  %152 = load ptr, ptr %memberidx2.i.i183, align 8
  %153 = load ptr, ptr %memberidx3.i.i184, align 8
  %154 = tail call i64 @memcmp(ptr %152, ptr %153, i64 %150)
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %while.end.i191, label %ifend.i.i185.else.i194_crit_edge

ifend.i.i185.else.i194_crit_edge:                 ; preds = %ifend.i.i185
  %.pre337 = load i64, ptr %memberidx.i174, align 4
  %.pre338 = load ptr, ptr %140, align 8
  br label %else.i194

while.end.i191:                                   ; preds = %ifend.i.i185
  %.pre339.pre = load ptr, ptr %140, align 8
  %ptridx9.i189.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre339.pre, i64 %hash.0.i177
  %.pre340.pre = load ptr, ptr %ptridx9.i189.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i190 = icmp eq ptr %.pre340.pre, null
  br i1 %.not29.i190, label %ifend40, label %Map_string_VarId____getitem__.exit

else.i194:                                        ; preds = %ifend.i.i185.else.i194_crit_edge, %while.entry.i182
  %156 = phi ptr [ %.pre338, %ifend.i.i185.else.i194_crit_edge ], [ %146, %while.entry.i182 ]
  %157 = phi i64 [ %.pre337, %ifend.i.i185.else.i194_crit_edge ], [ %147, %while.entry.i182 ]
  %158 = add i64 %hash.0.i177, 1
  %159 = srem i64 %158, %157
  %ptridx7.i192 = getelementptr inbounds ptr, ptr %156, i64 %159
  %160 = load ptr, ptr %ptridx7.i192, align 8
  %.not30.i193 = icmp eq ptr %160, null
  br i1 %.not30.i193, label %ifend40, label %while.entry.i182

Map_string_VarId____getitem__.exit:               ; preds = %while.end.i191
  %memberidx15.i196 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre340.pre, i64 0, i32 1
  %161 = load ptr, ptr %memberidx15.i196, align 8
  %.not83 = icmp eq ptr %161, null
  br i1 %.not83, label %ifend40, label %if.entry38

if.entry38:                                       ; preds = %Map_string_VarId____getitem__.exit
  %162 = load i64, ptr %memberidx.i.i.i133, align 4
  %163 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i199 = getelementptr inbounds %Program, ptr %163, i64 0, i32 1
  %164 = load ptr, ptr %memberidx1.i.i.i.i199, align 8
  %memberidx.i.i.i.i.i200 = getelementptr inbounds %Array_Module_, ptr %164, i64 0, i32 1
  %165 = load ptr, ptr %memberidx.i.i.i.i.i200, align 8
  %ptridx.i.i.i.i.i201 = getelementptr inbounds ptr, ptr %165, i64 %162
  %166 = load ptr, ptr %ptridx.i.i.i.i.i201, align 8
  %memberidx.i.i202 = getelementptr inbounds %Module, ptr %166, i64 0, i32 7
  %167 = load ptr, ptr %memberidx.i.i202, align 8
  %memberidx.i1.i.i203 = getelementptr inbounds %Array_Scope_, ptr %167, i64 0, i32 1
  %168 = load ptr, ptr %memberidx.i1.i.i203, align 8
  %169 = load ptr, ptr %168, align 8
  %memberidx.i204 = getelementptr inbounds %Scope, ptr %169, i64 0, i32 1
  %170 = load ptr, ptr %memberidx.i204, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %170, ptr %ternary, ptr nonnull %161)
  br label %for.incr

ifend40:                                          ; preds = %else.i194, %ifend36, %while.end.i191, %Map_string_VarId____getitem__.exit
  %171 = load ptr, ptr %memberidx41, align 8
  %172 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %43)
  %memberidx.i205 = getelementptr inbounds %Map_string_VarId_, ptr %171, i64 0, i32 1
  %173 = load i64, ptr %memberidx.i205, align 4
  %174 = srem i64 %172, %173
  %175 = load ptr, ptr %171, align 8
  %ptridx.i206 = getelementptr inbounds ptr, ptr %175, i64 %174
  %176 = load ptr, ptr %ptridx.i206, align 8
  %.not.i207 = icmp eq ptr %176, null
  br i1 %.not.i207, label %ifend44, label %while.entry.i213.preheader

while.entry.i213.preheader:                       ; preds = %ifend40
  %memberidx1.i.i211 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  %memberidx3.i.i215 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  br label %while.entry.i213

while.entry.i213:                                 ; preds = %while.entry.i213.preheader, %else.i225
  %177 = phi ptr [ %187, %else.i225 ], [ %175, %while.entry.i213.preheader ]
  %178 = phi i64 [ %188, %else.i225 ], [ %173, %while.entry.i213.preheader ]
  %179 = phi ptr [ %191, %else.i225 ], [ %176, %while.entry.i213.preheader ]
  %hash.0.i208 = phi i64 [ %190, %else.i225 ], [ %174, %while.entry.i213.preheader ]
  %180 = load ptr, ptr %179, align 8
  %memberidx.i.i210 = getelementptr inbounds %string, ptr %180, i64 0, i32 2
  %181 = load i64, ptr %memberidx.i.i210, align 4
  %182 = load i64, ptr %memberidx1.i.i211, align 4
  %.not.i.i212 = icmp eq i64 %181, %182
  br i1 %.not.i.i212, label %ifend.i.i216, label %else.i225

ifend.i.i216:                                     ; preds = %while.entry.i213
  %memberidx2.i.i214 = getelementptr inbounds %string, ptr %180, i64 0, i32 1
  %183 = load ptr, ptr %memberidx2.i.i214, align 8
  %184 = load ptr, ptr %memberidx3.i.i215, align 8
  %185 = tail call i64 @memcmp(ptr %183, ptr %184, i64 %181)
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %while.end.i222, label %ifend.i.i216.else.i225_crit_edge

ifend.i.i216.else.i225_crit_edge:                 ; preds = %ifend.i.i216
  %.pre341 = load i64, ptr %memberidx.i205, align 4
  %.pre342 = load ptr, ptr %171, align 8
  br label %else.i225

while.end.i222:                                   ; preds = %ifend.i.i216
  %.pre343.pre = load ptr, ptr %171, align 8
  %ptridx9.i220.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre343.pre, i64 %hash.0.i208
  %.pre344.pre = load ptr, ptr %ptridx9.i220.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i221 = icmp eq ptr %.pre344.pre, null
  br i1 %.not29.i221, label %ifend44, label %Map_string_VarId____getitem__.exit229

else.i225:                                        ; preds = %ifend.i.i216.else.i225_crit_edge, %while.entry.i213
  %187 = phi ptr [ %.pre342, %ifend.i.i216.else.i225_crit_edge ], [ %177, %while.entry.i213 ]
  %188 = phi i64 [ %.pre341, %ifend.i.i216.else.i225_crit_edge ], [ %178, %while.entry.i213 ]
  %189 = add i64 %hash.0.i208, 1
  %190 = srem i64 %189, %188
  %ptridx7.i223 = getelementptr inbounds ptr, ptr %187, i64 %190
  %191 = load ptr, ptr %ptridx7.i223, align 8
  %.not30.i224 = icmp eq ptr %191, null
  br i1 %.not30.i224, label %ifend44, label %while.entry.i213

Map_string_VarId____getitem__.exit229:            ; preds = %while.end.i222
  %memberidx15.i227 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre344.pre, i64 0, i32 1
  %192 = load ptr, ptr %memberidx15.i227, align 8
  %.not84 = icmp eq ptr %192, null
  br i1 %.not84, label %ifend44, label %if.entry42

if.entry42:                                       ; preds = %Map_string_VarId____getitem__.exit229
  %193 = load i64, ptr %memberidx.i.i.i133, align 4
  %194 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i231 = getelementptr inbounds %Program, ptr %194, i64 0, i32 1
  %195 = load ptr, ptr %memberidx1.i.i.i.i231, align 8
  %memberidx.i.i.i.i.i232 = getelementptr inbounds %Array_Module_, ptr %195, i64 0, i32 1
  %196 = load ptr, ptr %memberidx.i.i.i.i.i232, align 8
  %ptridx.i.i.i.i.i233 = getelementptr inbounds ptr, ptr %196, i64 %193
  %197 = load ptr, ptr %ptridx.i.i.i.i.i233, align 8
  %memberidx.i.i234 = getelementptr inbounds %Module, ptr %197, i64 0, i32 7
  %198 = load ptr, ptr %memberidx.i.i234, align 8
  %memberidx.i1.i.i235 = getelementptr inbounds %Array_Scope_, ptr %198, i64 0, i32 1
  %199 = load ptr, ptr %memberidx.i1.i.i235, align 8
  %200 = load ptr, ptr %199, align 8
  %memberidx.i236 = getelementptr inbounds %Scope, ptr %200, i64 0, i32 3
  %201 = load ptr, ptr %memberidx.i236, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %201, ptr %ternary, ptr nonnull %192)
  br label %for.incr

ifend44:                                          ; preds = %else.i225, %ifend40, %while.end.i222, %Map_string_VarId____getitem__.exit229
  %202 = load ptr, ptr %memberidx45, align 8
  %203 = tail call fastcc i64 @Map_string_Type__hash_fnc(ptr %43)
  %memberidx.i237 = getelementptr inbounds %Map_string_Type_, ptr %202, i64 0, i32 1
  %204 = load i64, ptr %memberidx.i237, align 4
  %205 = srem i64 %203, %204
  %206 = load ptr, ptr %202, align 8
  %ptridx.i238 = getelementptr inbounds ptr, ptr %206, i64 %205
  %207 = load ptr, ptr %ptridx.i238, align 8
  %.not.i239 = icmp eq ptr %207, null
  br i1 %.not.i239, label %else47, label %while.entry.i245.preheader

while.entry.i245.preheader:                       ; preds = %ifend44
  %memberidx1.i.i243 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  %memberidx3.i.i247 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  br label %while.entry.i245

while.entry.i245:                                 ; preds = %while.entry.i245.preheader, %else.i257
  %208 = phi ptr [ %218, %else.i257 ], [ %206, %while.entry.i245.preheader ]
  %209 = phi i64 [ %219, %else.i257 ], [ %204, %while.entry.i245.preheader ]
  %210 = phi ptr [ %222, %else.i257 ], [ %207, %while.entry.i245.preheader ]
  %hash.0.i240 = phi i64 [ %221, %else.i257 ], [ %205, %while.entry.i245.preheader ]
  %211 = load ptr, ptr %210, align 8
  %memberidx.i.i242 = getelementptr inbounds %string, ptr %211, i64 0, i32 2
  %212 = load i64, ptr %memberidx.i.i242, align 4
  %213 = load i64, ptr %memberidx1.i.i243, align 4
  %.not.i.i244 = icmp eq i64 %212, %213
  br i1 %.not.i.i244, label %ifend.i.i248, label %else.i257

ifend.i.i248:                                     ; preds = %while.entry.i245
  %memberidx2.i.i246 = getelementptr inbounds %string, ptr %211, i64 0, i32 1
  %214 = load ptr, ptr %memberidx2.i.i246, align 8
  %215 = load ptr, ptr %memberidx3.i.i247, align 8
  %216 = tail call i64 @memcmp(ptr %214, ptr %215, i64 %212)
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %while.end.i254, label %ifend.i.i248.else.i257_crit_edge

ifend.i.i248.else.i257_crit_edge:                 ; preds = %ifend.i.i248
  %.pre345 = load i64, ptr %memberidx.i237, align 4
  %.pre346 = load ptr, ptr %202, align 8
  br label %else.i257

while.end.i254:                                   ; preds = %ifend.i.i248
  %.pre347.pre = load ptr, ptr %202, align 8
  %ptridx9.i252.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre347.pre, i64 %hash.0.i240
  %.pre348.pre = load ptr, ptr %ptridx9.i252.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i253 = icmp eq ptr %.pre348.pre, null
  br i1 %.not29.i253, label %else47, label %Map_string_Type____getitem__.exit

else.i257:                                        ; preds = %ifend.i.i248.else.i257_crit_edge, %while.entry.i245
  %218 = phi ptr [ %.pre346, %ifend.i.i248.else.i257_crit_edge ], [ %208, %while.entry.i245 ]
  %219 = phi i64 [ %.pre345, %ifend.i.i248.else.i257_crit_edge ], [ %209, %while.entry.i245 ]
  %220 = add i64 %hash.0.i240, 1
  %221 = srem i64 %220, %219
  %ptridx7.i255 = getelementptr inbounds ptr, ptr %218, i64 %221
  %222 = load ptr, ptr %ptridx7.i255, align 8
  %.not30.i256 = icmp eq ptr %222, null
  br i1 %.not30.i256, label %else47, label %while.entry.i245

Map_string_Type____getitem__.exit:                ; preds = %while.end.i254
  %memberidx15.i259 = getelementptr inbounds %MapEntry_string_Type_, ptr %.pre348.pre, i64 0, i32 1
  %223 = load ptr, ptr %memberidx15.i259, align 8
  %.not85 = icmp eq ptr %223, null
  br i1 %.not85, label %else47, label %if.entry46

if.entry46:                                       ; preds = %Map_string_Type____getitem__.exit
  %224 = load i64, ptr %memberidx.i.i.i133, align 4
  %225 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i262 = getelementptr inbounds %Program, ptr %225, i64 0, i32 1
  %226 = load ptr, ptr %memberidx1.i.i.i.i262, align 8
  %memberidx.i.i.i.i.i263 = getelementptr inbounds %Array_Module_, ptr %226, i64 0, i32 1
  %227 = load ptr, ptr %memberidx.i.i.i.i.i263, align 8
  %ptridx.i.i.i.i.i264 = getelementptr inbounds ptr, ptr %227, i64 %224
  %228 = load ptr, ptr %ptridx.i.i.i.i.i264, align 8
  %memberidx.i.i265 = getelementptr inbounds %Module, ptr %228, i64 0, i32 7
  %229 = load ptr, ptr %memberidx.i.i265, align 8
  %memberidx.i1.i.i266 = getelementptr inbounds %Array_Scope_, ptr %229, i64 0, i32 1
  %230 = load ptr, ptr %memberidx.i1.i.i266, align 8
  %231 = load ptr, ptr %230, align 8
  %memberidx.i267 = getelementptr inbounds %Scope, ptr %231, i64 0, i32 6
  %232 = load ptr, ptr %memberidx.i267, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr %232, ptr %ternary, ptr nonnull %223)
  br label %for.incr

else47:                                           ; preds = %ifend44, %while.end.i254, %Map_string_Type____getitem__.exit, %else.i257
  store i1 false, ptr %37, align 1
  %233 = load ptr, ptr %43, align 8
  %memberidx49 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %233, i64 0, i32 5
  %234 = load ptr, ptr %memberidx49, align 8
  %235 = tail call ptr %234(ptr nonnull %43)
  %236 = load ptr, ptr %23, align 8
  %memberidx50 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %236, i64 0, i32 5
  %237 = load ptr, ptr %memberidx50, align 8
  %238 = tail call ptr %237(ptr nonnull %23)
  %239 = alloca ptr, align 8
  %240 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %239, ptr nonnull @92, ptr %235, ptr %238)
  %241 = load ptr, ptr %239, align 8
  %242 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %242, align 8
  %memberidx.i268 = getelementptr inbounds %string, ptr %242, i64 0, i32 1
  store ptr %241, ptr %memberidx.i268, align 8
  %memberidx1.i269 = getelementptr inbounds %string, ptr %242, i64 0, i32 2
  store i64 %240, ptr %memberidx1.i269, align 4
  %memberidx2.i270 = getelementptr inbounds %string, ptr %242, i64 0, i32 3
  store i64 %240, ptr %memberidx2.i270, align 4
  tail call void @free(ptr %235)
  tail call void @free(ptr %238)
  %243 = load ptr, ptr %storemerge321, align 8
  %memberidx52 = getelementptr inbounds %Token, ptr %243, i64 0, i32 1
  %244 = load ptr, ptr %memberidx52, align 8
  %245 = load ptr, ptr %memberidx.i89, align 8
  %memberidx1.i272 = getelementptr inbounds %Compiler, ptr %245, i64 0, i32 6
  %246 = load ptr, ptr %memberidx1.i272, align 8
  %247 = call ptr @malloc(i32 24)
  store i64 1, ptr %247, align 4
  %memberidx1.i.i273 = getelementptr inbounds %FloError, ptr %247, i64 0, i32 2
  store ptr %244, ptr %memberidx1.i.i273, align 8
  %memberidx2.i.i274 = getelementptr inbounds %FloError, ptr %247, i64 0, i32 1
  store ptr %242, ptr %memberidx2.i.i274, align 8
  %memberidx.i.i275 = getelementptr inbounds %Array_FloError_, ptr %246, i64 0, i32 2
  %248 = load i64, ptr %memberidx.i.i275, align 4
  %memberidx1.i2.i276 = getelementptr inbounds %Array_FloError_, ptr %246, i64 0, i32 3
  %249 = load i64, ptr %memberidx1.i2.i276, align 4
  %.not.i.i277 = icmp slt i64 %248, %249
  br i1 %.not.i.i277, label %else47.TypeChecker_error.exit283_crit_edge, label %if.entry.i.i280

else47.TypeChecker_error.exit283_crit_edge:       ; preds = %else47
  %memberidx4.i.i281.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %246, i64 0, i32 1
  %.pre350 = load ptr, ptr %memberidx4.i.i281.phi.trans.insert, align 8
  br label %TypeChecker_error.exit283

if.entry.i.i280:                                  ; preds = %else47
  %250 = shl i64 %249, 1
  store i64 %250, ptr %memberidx1.i2.i276, align 4
  %memberidx2.i.i.i279 = getelementptr inbounds %Array_FloError_, ptr %246, i64 0, i32 1
  %251 = load ptr, ptr %memberidx2.i.i.i279, align 8
  %252 = shl i64 %249, 4
  %253 = call ptr @realloc(ptr %251, i64 %252)
  store ptr %253, ptr %memberidx2.i.i.i279, align 8
  %.pre349 = load i64, ptr %memberidx.i.i275, align 4
  br label %TypeChecker_error.exit283

TypeChecker_error.exit283:                        ; preds = %else47.TypeChecker_error.exit283_crit_edge, %if.entry.i.i280
  %254 = phi ptr [ %.pre350, %else47.TypeChecker_error.exit283_crit_edge ], [ %253, %if.entry.i.i280 ]
  %255 = phi i64 [ %248, %else47.TypeChecker_error.exit283_crit_edge ], [ %.pre349, %if.entry.i.i280 ]
  %256 = add i64 %255, 1
  store i64 %256, ptr %memberidx.i.i275, align 4
  %ptridx.i.i282 = getelementptr inbounds ptr, ptr %254, i64 %255
  store ptr %247, ptr %ptridx.i.i282, align 8
  br label %common.ret

if.entry54:                                       ; preds = %else16
  %memberidx58 = getelementptr inbounds %IdentifierToken, ptr %36, i64 0, i32 2
  %257 = load ptr, ptr %memberidx58, align 8
  %memberidx.i.i284 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %258 = load i64, ptr %memberidx.i.i284, align 4
  %259 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i285 = getelementptr inbounds %Program, ptr %259, i64 0, i32 1
  %260 = load ptr, ptr %memberidx1.i.i.i285, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %260, i64 0, i32 1
  %261 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %261, i64 %258
  %262 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx.i286 = getelementptr inbounds %Module, ptr %262, i64 0, i32 7
  %263 = load ptr, ptr %memberidx.i286, align 8
  %memberidx.i1.i = getelementptr inbounds %Array_Scope_, ptr %263, i64 0, i32 1
  %264 = load ptr, ptr %memberidx.i1.i, align 8
  %265 = load ptr, ptr %264, align 8
  %memberidx59 = getelementptr inbounds %Scope, ptr %265, i64 0, i32 1
  %266 = load ptr, ptr %memberidx59, align 8
  %267 = tail call ptr @malloc(i32 32)
  %268 = load ptr, ptr %32, align 8
  %269 = load i64, ptr %268, align 4
  %memberidx1.i287 = getelementptr inbounds %ScopeId, ptr %268, i64 0, i32 1
  %270 = load i64, ptr %memberidx1.i287, align 4
  store i64 5, ptr %267, align 4
  %memberidx1.i.i288 = getelementptr inbounds %VarId, ptr %267, i64 0, i32 1
  store i64 %269, ptr %memberidx1.i.i288, align 4
  %memberidx2.i.i289 = getelementptr inbounds %VarId, ptr %267, i64 0, i32 2
  store i64 %270, ptr %memberidx2.i.i289, align 4
  %memberidx2.i290 = getelementptr inbounds %ModuleVarId, ptr %267, i64 0, i32 3
  store ptr %268, ptr %memberidx2.i290, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %266, ptr %257, ptr nonnull %267)
  br label %common.ret

else55:                                           ; preds = %else16
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr nonnull %25)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %3, align 4
  %memberidx = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 6
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %TypeChecker_error.exit412, %if.entry83, %TypeChecker_error.exit392, %Array_Expression____sl__.exit, %TypeChecker_error.exit305, %TypeChecker_error.exit266, %TypeChecker_error.exit253, %TypeChecker_error.exit165, %TypeChecker_error.exit, %ifend6
  %common.ret.op = phi ptr [ %19, %ifend6 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit165 ], [ null, %TypeChecker_error.exit253 ], [ null, %TypeChecker_error.exit266 ], [ null, %TypeChecker_error.exit305 ], [ %281, %Array_Expression____sl__.exit ], [ null, %TypeChecker_error.exit392 ], [ %341, %if.entry83 ], [ null, %TypeChecker_error.exit412 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx3, align 8
  %13 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %13, align 4
  %14 = load i64, ptr %10, align 4
  switch i64 %14, label %else84 [
    i64 21, label %if.entry.i2
    i64 13, label %while.end
    i64 18, label %if.entry27
    i64 15, label %if.entry60
    i64 19, label %if.entry83
  ]

if.entry.i2:                                      ; preds = %ifend, %if.entry.i2
  %.tr5.i = phi ptr [ %15, %if.entry.i2 ], [ %10, %ifend ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %15 = load ptr, ptr %memberidx1.i1, align 8
  %16 = load i64, ptr %15, align 4
  switch i64 %16, label %else84 [
    i64 21, label %if.entry.i2
    i64 13, label %while.entry
  ]

ifend6:                                           ; preds = %get_class_prop_type.exit289, %ifend53, %get_class_prop_type.exit
  %17 = phi ptr [ %common.ret.op.i276, %get_class_prop_type.exit289 ], [ %266, %ifend53 ], [ %common.ret.op.i169, %get_class_prop_type.exit ]
  %18 = phi ptr [ %152, %get_class_prop_type.exit289 ], [ %179, %ifend53 ], [ %57, %get_class_prop_type.exit ]
  %19 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %19, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %19, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %19, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i138 = getelementptr inbounds %MemberExpression, ptr %19, i64 0, i32 4
  store ptr %5, ptr %memberidx.i138, align 8
  %memberidx1.i139 = getelementptr inbounds %MemberExpression, ptr %19, i64 0, i32 5
  store ptr %18, ptr %memberidx1.i139, align 8
  %memberidx2.i140 = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  store ptr %17, ptr %memberidx2.i140, align 8
  br label %common.ret

while.entry:                                      ; preds = %if.entry.i2, %while.entry
  %20 = phi ptr [ %21, %while.entry ], [ %10, %if.entry.i2 ]
  %memberidx8 = getelementptr inbounds %GenericType, ptr %20, i64 0, i32 3
  %21 = load ptr, ptr %memberidx8, align 8
  %22 = load i64, ptr %21, align 4
  %23 = icmp eq i64 %22, 21
  br i1 %23, label %while.entry, label %while.end

while.end:                                        ; preds = %while.entry, %ifend
  %24 = phi i64 [ %14, %ifend ], [ %22, %while.entry ]
  %.tr11.i20 = phi ptr [ %10, %ifend ], [ %21, %while.entry ]
  %25 = load ptr, ptr %0, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i6, %while.end
  %26 = phi i64 [ %24, %while.end ], [ %.pre, %if.entry.i6 ]
  %.tr11.i = phi ptr [ %.tr11.i20, %while.end ], [ %.tr11.i.pre, %if.entry.i6 ]
  switch i64 %26, label %get_class_from_type.exit [
    i64 21, label %if.entry.i6
    i64 13, label %if.entry3.i
  ]

if.entry.i6:                                      ; preds = %tailrecurse.i
  %memberidx1.i5 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %.tr11.i.pre = load ptr, ptr %memberidx1.i5, align 8
  %.pre = load i64, ptr %.tr11.i.pre, align 4
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i7 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %27 = load ptr, ptr %memberidx6.i7, align 8
  %memberidx.i.i8 = getelementptr inbounds %Program, ptr %25, i64 0, i32 1
  %28 = load ptr, ptr %memberidx.i.i8, align 8
  %29 = load i64, ptr %27, align 4
  %memberidx.i.i.i9 = getelementptr inbounds %Array_Module_, ptr %28, i64 0, i32 1
  %30 = load ptr, ptr %memberidx.i.i.i9, align 8
  %ptridx.i.i.i10 = getelementptr inbounds ptr, ptr %30, i64 %29
  %31 = load ptr, ptr %ptridx.i.i.i10, align 8
  %memberidx2.i.i11 = getelementptr inbounds %Module, ptr %31, i64 0, i32 4
  %32 = load ptr, ptr %memberidx2.i.i11, align 8
  %memberidx3.i.i12 = getelementptr inbounds %TypeId, ptr %27, i64 0, i32 2
  %33 = load i64, ptr %memberidx3.i.i12, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %34, i64 %33
  %35 = load ptr, ptr %ptridx.i6.i.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i4 = phi ptr [ %35, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx11 = getelementptr inbounds %Class, ptr %common.ret.op.i4, i64 0, i32 6
  %36 = load ptr, ptr %memberidx11, align 8
  %37 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %12)
  %memberidx.i141 = getelementptr inbounds %Map_string_PropId_, ptr %36, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i141, align 4
  %39 = srem i64 %37, %38
  %40 = load ptr, ptr %36, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %40, i64 %39
  %41 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %41, null
  br i1 %.not.i, label %if.entry12, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %get_class_from_type.exit
  %memberidx1.i.i143 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %42 = phi ptr [ %52, %else.i ], [ %40, %while.entry.i.preheader ]
  %43 = phi i64 [ %53, %else.i ], [ %38, %while.entry.i.preheader ]
  %44 = phi ptr [ %56, %else.i ], [ %41, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %55, %else.i ], [ %39, %while.entry.i.preheader ]
  %45 = load ptr, ptr %44, align 8
  %memberidx.i.i142 = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  %46 = load i64, ptr %memberidx.i.i142, align 4
  %47 = load i64, ptr %memberidx1.i.i143, align 4
  %.not.i.i = icmp eq i64 %46, %47
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  %48 = load ptr, ptr %memberidx2.i.i, align 8
  %49 = load ptr, ptr %memberidx3.i.i, align 8
  %50 = tail call i64 @memcmp(ptr %48, ptr %49, i64 %46)
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre21 = load i64, ptr %memberidx.i141, align 4
  %.pre22 = load ptr, ptr %36, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre23.pre = load ptr, ptr %36, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre23.pre, i64 %hash.0.i
  %.pre24.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre24.pre, null
  br i1 %.not29.i, label %if.entry12, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %52 = phi ptr [ %.pre22, %ifend.i.i.else.i_crit_edge ], [ %42, %while.entry.i ]
  %53 = phi i64 [ %.pre21, %ifend.i.i.else.i_crit_edge ], [ %43, %while.entry.i ]
  %54 = add i64 %hash.0.i, 1
  %55 = srem i64 %54, %53
  %ptridx7.i = getelementptr inbounds ptr, ptr %52, i64 %55
  %56 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %56, null
  br i1 %.not30.i, label %if.entry12, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre24.pre, i64 0, i32 1
  %57 = load ptr, ptr %memberidx15.i, align 8
  %58 = icmp eq ptr %57, null
  br i1 %58, label %if.entry12, label %ifend14

if.entry12:                                       ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_string_PropId____getitem__.exit
  %59 = load ptr, ptr %12, align 8
  %memberidx15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %59, i64 0, i32 5
  %60 = load ptr, ptr %memberidx15, align 8
  %61 = tail call ptr %60(ptr nonnull %12)
  %memberidx16 = getelementptr inbounds %Class, ptr %common.ret.op.i4, i64 0, i32 1
  %62 = load ptr, ptr %memberidx16, align 8
  %63 = load ptr, ptr %62, align 8
  %memberidx17 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %63, i64 0, i32 5
  %64 = load ptr, ptr %memberidx17, align 8
  %65 = tail call ptr %64(ptr nonnull %62)
  %66 = alloca ptr, align 8
  %67 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %66, ptr nonnull @175, ptr %61, ptr %65)
  %68 = load ptr, ptr %66, align 8
  %69 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %69, align 8
  %memberidx.i144 = getelementptr inbounds %string, ptr %69, i64 0, i32 1
  store ptr %68, ptr %memberidx.i144, align 8
  %memberidx1.i145 = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  store i64 %67, ptr %memberidx1.i145, align 4
  %memberidx2.i146 = getelementptr inbounds %string, ptr %69, i64 0, i32 3
  store i64 %67, ptr %memberidx2.i146, align 4
  tail call void @free(ptr %61)
  tail call void @free(ptr %65)
  %70 = load ptr, ptr %memberidx2, align 8
  %memberidx19 = getelementptr inbounds %Token, ptr %70, i64 0, i32 1
  %71 = load ptr, ptr %memberidx19, align 8
  %72 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i148 = getelementptr inbounds %Compiler, ptr %72, i64 0, i32 6
  %73 = load ptr, ptr %memberidx1.i148, align 8
  %74 = call ptr @malloc(i32 24)
  store i64 1, ptr %74, align 4
  %memberidx1.i.i149 = getelementptr inbounds %FloError, ptr %74, i64 0, i32 2
  store ptr %71, ptr %memberidx1.i.i149, align 8
  %memberidx2.i.i150 = getelementptr inbounds %FloError, ptr %74, i64 0, i32 1
  store ptr %69, ptr %memberidx2.i.i150, align 8
  %memberidx.i.i151 = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 2
  %75 = load i64, ptr %memberidx.i.i151, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 3
  %76 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i152 = icmp slt i64 %75, %76
  br i1 %.not.i.i152, label %if.entry12.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry12.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry12
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 1
  %.pre28 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry12
  %77 = shl i64 %76, 1
  store i64 %77, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 1
  %78 = load ptr, ptr %memberidx2.i.i.i, align 8
  %79 = shl i64 %76, 4
  %80 = call ptr @realloc(ptr %78, i64 %79)
  store ptr %80, ptr %memberidx2.i.i.i, align 8
  %.pre27 = load i64, ptr %memberidx.i.i151, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry12.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %81 = phi ptr [ %.pre28, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %80, %if.entry.i.i ]
  %82 = phi i64 [ %75, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %.pre27, %if.entry.i.i ]
  %83 = add i64 %82, 1
  store i64 %83, ptr %memberidx.i.i151, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %81, i64 %82
  store ptr %74, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend14:                                          ; preds = %Map_string_PropId____getitem__.exit
  %84 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %57)
  %.not137 = icmp eq ptr %84, null
  br i1 %.not137, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %ifend14
  %85 = load ptr, ptr %memberidx2, align 8
  %memberidx24 = getelementptr inbounds %Token, ptr %85, i64 0, i32 1
  %86 = load ptr, ptr %memberidx24, align 8
  %87 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i154 = getelementptr inbounds %Compiler, ptr %87, i64 0, i32 6
  %88 = load ptr, ptr %memberidx1.i154, align 8
  %89 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %89, align 4
  %memberidx1.i.i155 = getelementptr inbounds %FloError, ptr %89, i64 0, i32 2
  store ptr %86, ptr %memberidx1.i.i155, align 8
  %memberidx2.i.i156 = getelementptr inbounds %FloError, ptr %89, i64 0, i32 1
  store ptr %84, ptr %memberidx2.i.i156, align 8
  %memberidx.i.i157 = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 2
  %90 = load i64, ptr %memberidx.i.i157, align 4
  %memberidx1.i2.i158 = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 3
  %91 = load i64, ptr %memberidx1.i2.i158, align 4
  %.not.i.i159 = icmp slt i64 %90, %91
  br i1 %.not.i.i159, label %if.entry20.TypeChecker_error.exit165_crit_edge, label %if.entry.i.i162

if.entry20.TypeChecker_error.exit165_crit_edge:   ; preds = %if.entry20
  %memberidx4.i.i163.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 1
  %.pre26 = load ptr, ptr %memberidx4.i.i163.phi.trans.insert, align 8
  br label %TypeChecker_error.exit165

if.entry.i.i162:                                  ; preds = %if.entry20
  %92 = shl i64 %91, 1
  store i64 %92, ptr %memberidx1.i2.i158, align 4
  %memberidx2.i.i.i161 = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 1
  %93 = load ptr, ptr %memberidx2.i.i.i161, align 8
  %94 = shl i64 %91, 4
  %95 = tail call ptr @realloc(ptr %93, i64 %94)
  store ptr %95, ptr %memberidx2.i.i.i161, align 8
  %.pre25 = load i64, ptr %memberidx.i.i157, align 4
  br label %TypeChecker_error.exit165

TypeChecker_error.exit165:                        ; preds = %if.entry20.TypeChecker_error.exit165_crit_edge, %if.entry.i.i162
  %96 = phi ptr [ %.pre26, %if.entry20.TypeChecker_error.exit165_crit_edge ], [ %95, %if.entry.i.i162 ]
  %97 = phi i64 [ %90, %if.entry20.TypeChecker_error.exit165_crit_edge ], [ %.pre25, %if.entry.i.i162 ]
  %98 = add i64 %97, 1
  store i64 %98, ptr %memberidx.i.i157, align 4
  %ptridx.i.i164 = getelementptr inbounds ptr, ptr %96, i64 %97
  store ptr %89, ptr %ptridx.i.i164, align 8
  br label %common.ret

ifend22:                                          ; preds = %ifend14
  %99 = load ptr, ptr %0, align 8
  %memberidx.i.i166 = getelementptr inbounds %PropId, ptr %57, i64 0, i32 1
  %100 = load ptr, ptr %memberidx.i.i166, align 8
  %memberidx.i.i.i167 = getelementptr inbounds %Program, ptr %99, i64 0, i32 1
  %101 = load ptr, ptr %memberidx.i.i.i167, align 8
  %102 = load i64, ptr %100, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %101, i64 0, i32 1
  %103 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %103, i64 %102
  %104 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i168 = getelementptr inbounds %Module, ptr %104, i64 0, i32 4
  %105 = load ptr, ptr %memberidx2.i.i.i168, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %100, i64 0, i32 2
  %106 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %105, i64 0, i32 1
  %107 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %107, i64 %106
  %108 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %109 = load i64, ptr %57, align 4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend22
  %memberidx1.i170 = getelementptr inbounds %Class, ptr %108, i64 0, i32 5
  %111 = load ptr, ptr %memberidx1.i170, align 8
  %memberidx2.i171 = getelementptr inbounds %PropId, ptr %57, i64 0, i32 2
  %112 = load i64, ptr %memberidx2.i171, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %111, i64 0, i32 1
  %113 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %113, i64 %112
  %114 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %114, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend22
  %memberidx4.i = getelementptr inbounds %Class, ptr %108, i64 0, i32 4
  %115 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %57, i64 0, i32 2
  %116 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %115, i64 0, i32 1
  %117 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i172 = getelementptr inbounds ptr, ptr %117, i64 %116
  %118 = load ptr, ptr %ptridx.i.i172, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %118, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i169 = load ptr, ptr %common.ret.op.in.i, align 8
  br label %ifend6

if.entry27:                                       ; preds = %ifend
  %memberidx30 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %119 = load ptr, ptr %memberidx30, align 8
  %120 = load i64, ptr %119, align 4
  %121 = icmp eq i64 %120, 3
  %memberidx.i173 = getelementptr inbounds %VarId, ptr %119, i64 0, i32 1
  %122 = load i64, ptr %memberidx.i173, align 4
  %123 = load ptr, ptr %0, align 8
  %memberidx1.i.i174 = getelementptr inbounds %Program, ptr %123, i64 0, i32 1
  %124 = load ptr, ptr %memberidx1.i.i174, align 8
  %memberidx.i.i.i175 = getelementptr inbounds %Array_Module_, ptr %124, i64 0, i32 1
  %125 = load ptr, ptr %memberidx.i.i.i175, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %125, i64 %122
  %126 = load ptr, ptr %ptridx.i.i.i, align 8
  br i1 %121, label %if.entry32, label %else33

if.entry32:                                       ; preds = %if.entry27
  %memberidx1.i176 = getelementptr inbounds %Module, ptr %126, i64 0, i32 4
  %127 = load ptr, ptr %memberidx1.i176, align 8
  %memberidx2.i177 = getelementptr inbounds %VarId, ptr %119, i64 0, i32 2
  %128 = load i64, ptr %memberidx2.i177, align 4
  %memberidx.i.i178 = getelementptr inbounds %Array_Class_, ptr %127, i64 0, i32 1
  %129 = load ptr, ptr %memberidx.i.i178, align 8
  %ptridx.i.i179 = getelementptr inbounds ptr, ptr %129, i64 %128
  %130 = load ptr, ptr %ptridx.i.i179, align 8
  %memberidx35 = getelementptr inbounds %Class, ptr %130, i64 0, i32 7
  %131 = load ptr, ptr %memberidx35, align 8
  %132 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %12)
  %memberidx.i180 = getelementptr inbounds %Map_string_PropId_, ptr %131, i64 0, i32 1
  %133 = load i64, ptr %memberidx.i180, align 4
  %134 = srem i64 %132, %133
  %135 = load ptr, ptr %131, align 8
  %ptridx.i181 = getelementptr inbounds ptr, ptr %135, i64 %134
  %136 = load ptr, ptr %ptridx.i181, align 8
  %.not.i182 = icmp eq ptr %136, null
  br i1 %.not.i182, label %if.entry36, label %while.entry.i188.preheader

while.entry.i188.preheader:                       ; preds = %if.entry32
  %memberidx1.i.i186 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %memberidx3.i.i190 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  br label %while.entry.i188

while.entry.i188:                                 ; preds = %while.entry.i188.preheader, %else.i200
  %137 = phi ptr [ %147, %else.i200 ], [ %135, %while.entry.i188.preheader ]
  %138 = phi i64 [ %148, %else.i200 ], [ %133, %while.entry.i188.preheader ]
  %139 = phi ptr [ %151, %else.i200 ], [ %136, %while.entry.i188.preheader ]
  %hash.0.i183 = phi i64 [ %150, %else.i200 ], [ %134, %while.entry.i188.preheader ]
  %140 = load ptr, ptr %139, align 8
  %memberidx.i.i185 = getelementptr inbounds %string, ptr %140, i64 0, i32 2
  %141 = load i64, ptr %memberidx.i.i185, align 4
  %142 = load i64, ptr %memberidx1.i.i186, align 4
  %.not.i.i187 = icmp eq i64 %141, %142
  br i1 %.not.i.i187, label %ifend.i.i191, label %else.i200

ifend.i.i191:                                     ; preds = %while.entry.i188
  %memberidx2.i.i189 = getelementptr inbounds %string, ptr %140, i64 0, i32 1
  %143 = load ptr, ptr %memberidx2.i.i189, align 8
  %144 = load ptr, ptr %memberidx3.i.i190, align 8
  %145 = tail call i64 @memcmp(ptr %143, ptr %144, i64 %141)
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %while.end.i197, label %ifend.i.i191.else.i200_crit_edge

ifend.i.i191.else.i200_crit_edge:                 ; preds = %ifend.i.i191
  %.pre39 = load i64, ptr %memberidx.i180, align 4
  %.pre40 = load ptr, ptr %131, align 8
  br label %else.i200

while.end.i197:                                   ; preds = %ifend.i.i191
  %.pre41.pre = load ptr, ptr %131, align 8
  %ptridx9.i195.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre41.pre, i64 %hash.0.i183
  %.pre42.pre = load ptr, ptr %ptridx9.i195.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i196 = icmp eq ptr %.pre42.pre, null
  br i1 %.not29.i196, label %if.entry36, label %Map_string_PropId____getitem__.exit204

else.i200:                                        ; preds = %ifend.i.i191.else.i200_crit_edge, %while.entry.i188
  %147 = phi ptr [ %.pre40, %ifend.i.i191.else.i200_crit_edge ], [ %137, %while.entry.i188 ]
  %148 = phi i64 [ %.pre39, %ifend.i.i191.else.i200_crit_edge ], [ %138, %while.entry.i188 ]
  %149 = add i64 %hash.0.i183, 1
  %150 = srem i64 %149, %148
  %ptridx7.i198 = getelementptr inbounds ptr, ptr %147, i64 %150
  %151 = load ptr, ptr %ptridx7.i198, align 8
  %.not30.i199 = icmp eq ptr %151, null
  br i1 %.not30.i199, label %if.entry36, label %while.entry.i188

Map_string_PropId____getitem__.exit204:           ; preds = %while.end.i197
  %memberidx15.i202 = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre42.pre, i64 0, i32 1
  %152 = load ptr, ptr %memberidx15.i202, align 8
  %153 = icmp eq ptr %152, null
  br i1 %153, label %if.entry36, label %ifend38

else33:                                           ; preds = %if.entry27
  %memberidx1.i209 = getelementptr inbounds %Module, ptr %126, i64 0, i32 6
  %154 = load ptr, ptr %memberidx1.i209, align 8
  %memberidx2.i210 = getelementptr inbounds %VarId, ptr %119, i64 0, i32 2
  %155 = load i64, ptr %memberidx2.i210, align 4
  %memberidx.i.i211 = getelementptr inbounds %Array_Enum_, ptr %154, i64 0, i32 1
  %156 = load ptr, ptr %memberidx.i.i211, align 8
  %ptridx.i.i212 = getelementptr inbounds ptr, ptr %156, i64 %155
  %157 = load ptr, ptr %ptridx.i.i212, align 8
  %memberidx50 = getelementptr inbounds %Enum, ptr %157, i64 0, i32 3
  %158 = load ptr, ptr %memberidx50, align 8
  %159 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %12)
  %memberidx.i213 = getelementptr inbounds %Map_string_PropId_, ptr %158, i64 0, i32 1
  %160 = load i64, ptr %memberidx.i213, align 4
  %161 = srem i64 %159, %160
  %162 = load ptr, ptr %158, align 8
  %ptridx.i214 = getelementptr inbounds ptr, ptr %162, i64 %161
  %163 = load ptr, ptr %ptridx.i214, align 8
  %.not.i215 = icmp eq ptr %163, null
  br i1 %.not.i215, label %if.entry51, label %while.entry.i221.preheader

while.entry.i221.preheader:                       ; preds = %else33
  %memberidx1.i.i219 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %memberidx3.i.i223 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  br label %while.entry.i221

while.entry.i221:                                 ; preds = %while.entry.i221.preheader, %else.i233
  %164 = phi ptr [ %174, %else.i233 ], [ %162, %while.entry.i221.preheader ]
  %165 = phi i64 [ %175, %else.i233 ], [ %160, %while.entry.i221.preheader ]
  %166 = phi ptr [ %178, %else.i233 ], [ %163, %while.entry.i221.preheader ]
  %hash.0.i216 = phi i64 [ %177, %else.i233 ], [ %161, %while.entry.i221.preheader ]
  %167 = load ptr, ptr %166, align 8
  %memberidx.i.i218 = getelementptr inbounds %string, ptr %167, i64 0, i32 2
  %168 = load i64, ptr %memberidx.i.i218, align 4
  %169 = load i64, ptr %memberidx1.i.i219, align 4
  %.not.i.i220 = icmp eq i64 %168, %169
  br i1 %.not.i.i220, label %ifend.i.i224, label %else.i233

ifend.i.i224:                                     ; preds = %while.entry.i221
  %memberidx2.i.i222 = getelementptr inbounds %string, ptr %167, i64 0, i32 1
  %170 = load ptr, ptr %memberidx2.i.i222, align 8
  %171 = load ptr, ptr %memberidx3.i.i223, align 8
  %172 = tail call i64 @memcmp(ptr %170, ptr %171, i64 %168)
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %while.end.i230, label %ifend.i.i224.else.i233_crit_edge

ifend.i.i224.else.i233_crit_edge:                 ; preds = %ifend.i.i224
  %.pre33 = load i64, ptr %memberidx.i213, align 4
  %.pre34 = load ptr, ptr %158, align 8
  br label %else.i233

while.end.i230:                                   ; preds = %ifend.i.i224
  %.pre35.pre = load ptr, ptr %158, align 8
  %ptridx9.i228.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre35.pre, i64 %hash.0.i216
  %.pre36.pre = load ptr, ptr %ptridx9.i228.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i229 = icmp eq ptr %.pre36.pre, null
  br i1 %.not29.i229, label %if.entry51, label %Map_string_PropId____getitem__.exit237

else.i233:                                        ; preds = %ifend.i.i224.else.i233_crit_edge, %while.entry.i221
  %174 = phi ptr [ %.pre34, %ifend.i.i224.else.i233_crit_edge ], [ %164, %while.entry.i221 ]
  %175 = phi i64 [ %.pre33, %ifend.i.i224.else.i233_crit_edge ], [ %165, %while.entry.i221 ]
  %176 = add i64 %hash.0.i216, 1
  %177 = srem i64 %176, %175
  %ptridx7.i231 = getelementptr inbounds ptr, ptr %174, i64 %177
  %178 = load ptr, ptr %ptridx7.i231, align 8
  %.not30.i232 = icmp eq ptr %178, null
  br i1 %.not30.i232, label %if.entry51, label %while.entry.i221

Map_string_PropId____getitem__.exit237:           ; preds = %while.end.i230
  %memberidx15.i235 = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre36.pre, i64 0, i32 1
  %179 = load ptr, ptr %memberidx15.i235, align 8
  %180 = icmp eq ptr %179, null
  br i1 %180, label %if.entry51, label %ifend53

if.entry36:                                       ; preds = %else.i200, %if.entry32, %while.end.i197, %Map_string_PropId____getitem__.exit204
  %181 = load ptr, ptr %12, align 8
  %memberidx39 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %181, i64 0, i32 5
  %182 = load ptr, ptr %memberidx39, align 8
  %183 = tail call ptr %182(ptr nonnull %12)
  %memberidx40 = getelementptr inbounds %Class, ptr %130, i64 0, i32 1
  %184 = load ptr, ptr %memberidx40, align 8
  %185 = load ptr, ptr %184, align 8
  %memberidx41 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %185, i64 0, i32 5
  %186 = load ptr, ptr %memberidx41, align 8
  %187 = tail call ptr %186(ptr nonnull %184)
  %188 = alloca ptr, align 8
  %189 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %188, ptr nonnull @176, ptr %183, ptr %187)
  %190 = load ptr, ptr %188, align 8
  %191 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %191, align 8
  %memberidx.i238 = getelementptr inbounds %string, ptr %191, i64 0, i32 1
  store ptr %190, ptr %memberidx.i238, align 8
  %memberidx1.i239 = getelementptr inbounds %string, ptr %191, i64 0, i32 2
  store i64 %189, ptr %memberidx1.i239, align 4
  %memberidx2.i240 = getelementptr inbounds %string, ptr %191, i64 0, i32 3
  store i64 %189, ptr %memberidx2.i240, align 4
  tail call void @free(ptr %183)
  tail call void @free(ptr %187)
  %192 = load ptr, ptr %memberidx2, align 8
  %memberidx43 = getelementptr inbounds %Token, ptr %192, i64 0, i32 1
  %193 = load ptr, ptr %memberidx43, align 8
  %194 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i242 = getelementptr inbounds %Compiler, ptr %194, i64 0, i32 6
  %195 = load ptr, ptr %memberidx1.i242, align 8
  %196 = call ptr @malloc(i32 24)
  store i64 1, ptr %196, align 4
  %memberidx1.i.i243 = getelementptr inbounds %FloError, ptr %196, i64 0, i32 2
  store ptr %193, ptr %memberidx1.i.i243, align 8
  %memberidx2.i.i244 = getelementptr inbounds %FloError, ptr %196, i64 0, i32 1
  store ptr %191, ptr %memberidx2.i.i244, align 8
  %memberidx.i.i245 = getelementptr inbounds %Array_FloError_, ptr %195, i64 0, i32 2
  %197 = load i64, ptr %memberidx.i.i245, align 4
  %memberidx1.i2.i246 = getelementptr inbounds %Array_FloError_, ptr %195, i64 0, i32 3
  %198 = load i64, ptr %memberidx1.i2.i246, align 4
  %.not.i.i247 = icmp slt i64 %197, %198
  br i1 %.not.i.i247, label %if.entry36.TypeChecker_error.exit253_crit_edge, label %if.entry.i.i250

if.entry36.TypeChecker_error.exit253_crit_edge:   ; preds = %if.entry36
  %memberidx4.i.i251.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %195, i64 0, i32 1
  %.pre46 = load ptr, ptr %memberidx4.i.i251.phi.trans.insert, align 8
  br label %TypeChecker_error.exit253

if.entry.i.i250:                                  ; preds = %if.entry36
  %199 = shl i64 %198, 1
  store i64 %199, ptr %memberidx1.i2.i246, align 4
  %memberidx2.i.i.i249 = getelementptr inbounds %Array_FloError_, ptr %195, i64 0, i32 1
  %200 = load ptr, ptr %memberidx2.i.i.i249, align 8
  %201 = shl i64 %198, 4
  %202 = call ptr @realloc(ptr %200, i64 %201)
  store ptr %202, ptr %memberidx2.i.i.i249, align 8
  %.pre45 = load i64, ptr %memberidx.i.i245, align 4
  br label %TypeChecker_error.exit253

TypeChecker_error.exit253:                        ; preds = %if.entry36.TypeChecker_error.exit253_crit_edge, %if.entry.i.i250
  %203 = phi ptr [ %.pre46, %if.entry36.TypeChecker_error.exit253_crit_edge ], [ %202, %if.entry.i.i250 ]
  %204 = phi i64 [ %197, %if.entry36.TypeChecker_error.exit253_crit_edge ], [ %.pre45, %if.entry.i.i250 ]
  %205 = add i64 %204, 1
  store i64 %205, ptr %memberidx.i.i245, align 4
  %ptridx.i.i252 = getelementptr inbounds ptr, ptr %203, i64 %204
  store ptr %196, ptr %ptridx.i.i252, align 8
  br label %common.ret

ifend38:                                          ; preds = %Map_string_PropId____getitem__.exit204
  %206 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %152)
  %.not = icmp eq ptr %206, null
  br i1 %.not, label %ifend46, label %if.entry44

if.entry44:                                       ; preds = %ifend38
  %207 = load ptr, ptr %memberidx2, align 8
  %memberidx48 = getelementptr inbounds %Token, ptr %207, i64 0, i32 1
  %208 = load ptr, ptr %memberidx48, align 8
  %209 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i255 = getelementptr inbounds %Compiler, ptr %209, i64 0, i32 6
  %210 = load ptr, ptr %memberidx1.i255, align 8
  %211 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %211, align 4
  %memberidx1.i.i256 = getelementptr inbounds %FloError, ptr %211, i64 0, i32 2
  store ptr %208, ptr %memberidx1.i.i256, align 8
  %memberidx2.i.i257 = getelementptr inbounds %FloError, ptr %211, i64 0, i32 1
  store ptr %206, ptr %memberidx2.i.i257, align 8
  %memberidx.i.i258 = getelementptr inbounds %Array_FloError_, ptr %210, i64 0, i32 2
  %212 = load i64, ptr %memberidx.i.i258, align 4
  %memberidx1.i2.i259 = getelementptr inbounds %Array_FloError_, ptr %210, i64 0, i32 3
  %213 = load i64, ptr %memberidx1.i2.i259, align 4
  %.not.i.i260 = icmp slt i64 %212, %213
  br i1 %.not.i.i260, label %if.entry44.TypeChecker_error.exit266_crit_edge, label %if.entry.i.i263

if.entry44.TypeChecker_error.exit266_crit_edge:   ; preds = %if.entry44
  %memberidx4.i.i264.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %210, i64 0, i32 1
  %.pre44 = load ptr, ptr %memberidx4.i.i264.phi.trans.insert, align 8
  br label %TypeChecker_error.exit266

if.entry.i.i263:                                  ; preds = %if.entry44
  %214 = shl i64 %213, 1
  store i64 %214, ptr %memberidx1.i2.i259, align 4
  %memberidx2.i.i.i262 = getelementptr inbounds %Array_FloError_, ptr %210, i64 0, i32 1
  %215 = load ptr, ptr %memberidx2.i.i.i262, align 8
  %216 = shl i64 %213, 4
  %217 = tail call ptr @realloc(ptr %215, i64 %216)
  store ptr %217, ptr %memberidx2.i.i.i262, align 8
  %.pre43 = load i64, ptr %memberidx.i.i258, align 4
  br label %TypeChecker_error.exit266

TypeChecker_error.exit266:                        ; preds = %if.entry44.TypeChecker_error.exit266_crit_edge, %if.entry.i.i263
  %218 = phi ptr [ %.pre44, %if.entry44.TypeChecker_error.exit266_crit_edge ], [ %217, %if.entry.i.i263 ]
  %219 = phi i64 [ %212, %if.entry44.TypeChecker_error.exit266_crit_edge ], [ %.pre43, %if.entry.i.i263 ]
  %220 = add i64 %219, 1
  store i64 %220, ptr %memberidx.i.i258, align 4
  %ptridx.i.i265 = getelementptr inbounds ptr, ptr %218, i64 %219
  store ptr %211, ptr %ptridx.i.i265, align 8
  br label %common.ret

ifend46:                                          ; preds = %ifend38
  %221 = load ptr, ptr %0, align 8
  %memberidx.i.i267 = getelementptr inbounds %PropId, ptr %152, i64 0, i32 1
  %222 = load ptr, ptr %memberidx.i.i267, align 8
  %memberidx.i.i.i268 = getelementptr inbounds %Program, ptr %221, i64 0, i32 1
  %223 = load ptr, ptr %memberidx.i.i.i268, align 8
  %224 = load i64, ptr %222, align 4
  %memberidx.i.i.i.i269 = getelementptr inbounds %Array_Module_, ptr %223, i64 0, i32 1
  %225 = load ptr, ptr %memberidx.i.i.i.i269, align 8
  %ptridx.i.i.i.i270 = getelementptr inbounds ptr, ptr %225, i64 %224
  %226 = load ptr, ptr %ptridx.i.i.i.i270, align 8
  %memberidx2.i.i.i271 = getelementptr inbounds %Module, ptr %226, i64 0, i32 4
  %227 = load ptr, ptr %memberidx2.i.i.i271, align 8
  %memberidx3.i.i.i272 = getelementptr inbounds %TypeId, ptr %222, i64 0, i32 2
  %228 = load i64, ptr %memberidx3.i.i.i272, align 4
  %memberidx.i5.i.i.i273 = getelementptr inbounds %Array_Class_, ptr %227, i64 0, i32 1
  %229 = load ptr, ptr %memberidx.i5.i.i.i273, align 8
  %ptridx.i6.i.i.i274 = getelementptr inbounds ptr, ptr %229, i64 %228
  %230 = load ptr, ptr %ptridx.i6.i.i.i274, align 8
  %231 = load i64, ptr %152, align 4
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %if.entry.i282, label %ifend.i288

if.entry.i282:                                    ; preds = %ifend46
  %memberidx1.i277 = getelementptr inbounds %Class, ptr %230, i64 0, i32 5
  %233 = load ptr, ptr %memberidx1.i277, align 8
  %memberidx2.i278 = getelementptr inbounds %PropId, ptr %152, i64 0, i32 2
  %234 = load i64, ptr %memberidx2.i278, align 4
  %memberidx.i12.i279 = getelementptr inbounds %Array_ClassMethod_, ptr %233, i64 0, i32 1
  %235 = load ptr, ptr %memberidx.i12.i279, align 8
  %ptridx.i13.i280 = getelementptr inbounds ptr, ptr %235, i64 %234
  %236 = load ptr, ptr %ptridx.i13.i280, align 8
  %memberidx3.i281 = getelementptr inbounds %ClassMethod, ptr %236, i64 0, i32 4
  br label %get_class_prop_type.exit289

ifend.i288:                                       ; preds = %ifend46
  %memberidx4.i283 = getelementptr inbounds %Class, ptr %230, i64 0, i32 4
  %237 = load ptr, ptr %memberidx4.i283, align 8
  %memberidx5.i284 = getelementptr inbounds %PropId, ptr %152, i64 0, i32 2
  %238 = load i64, ptr %memberidx5.i284, align 4
  %memberidx.i11.i285 = getelementptr inbounds %Array_ClassField_, ptr %237, i64 0, i32 1
  %239 = load ptr, ptr %memberidx.i11.i285, align 8
  %ptridx.i.i286 = getelementptr inbounds ptr, ptr %239, i64 %238
  %240 = load ptr, ptr %ptridx.i.i286, align 8
  %memberidx6.i287 = getelementptr inbounds %ClassField, ptr %240, i64 0, i32 4
  br label %get_class_prop_type.exit289

get_class_prop_type.exit289:                      ; preds = %if.entry.i282, %ifend.i288
  %common.ret.op.in.i275 = phi ptr [ %memberidx3.i281, %if.entry.i282 ], [ %memberidx6.i287, %ifend.i288 ]
  %common.ret.op.i276 = load ptr, ptr %common.ret.op.in.i275, align 8
  br label %ifend6

if.entry51:                                       ; preds = %else.i233, %else33, %while.end.i230, %Map_string_PropId____getitem__.exit237
  %241 = load ptr, ptr %12, align 8
  %memberidx54 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %241, i64 0, i32 5
  %242 = load ptr, ptr %memberidx54, align 8
  %243 = tail call ptr %242(ptr nonnull %12)
  %memberidx55 = getelementptr inbounds %Enum, ptr %157, i64 0, i32 1
  %244 = load ptr, ptr %memberidx55, align 8
  %245 = load ptr, ptr %244, align 8
  %memberidx56 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %245, i64 0, i32 5
  %246 = load ptr, ptr %memberidx56, align 8
  %247 = tail call ptr %246(ptr nonnull %244)
  %248 = alloca ptr, align 8
  %249 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %248, ptr nonnull @177, ptr %243, ptr %247)
  %250 = load ptr, ptr %248, align 8
  %251 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %251, align 8
  %memberidx.i290 = getelementptr inbounds %string, ptr %251, i64 0, i32 1
  store ptr %250, ptr %memberidx.i290, align 8
  %memberidx1.i291 = getelementptr inbounds %string, ptr %251, i64 0, i32 2
  store i64 %249, ptr %memberidx1.i291, align 4
  %memberidx2.i292 = getelementptr inbounds %string, ptr %251, i64 0, i32 3
  store i64 %249, ptr %memberidx2.i292, align 4
  tail call void @free(ptr %243)
  tail call void @free(ptr %247)
  %252 = load ptr, ptr %memberidx2, align 8
  %memberidx58 = getelementptr inbounds %Token, ptr %252, i64 0, i32 1
  %253 = load ptr, ptr %memberidx58, align 8
  %254 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i294 = getelementptr inbounds %Compiler, ptr %254, i64 0, i32 6
  %255 = load ptr, ptr %memberidx1.i294, align 8
  %256 = call ptr @malloc(i32 24)
  store i64 1, ptr %256, align 4
  %memberidx1.i.i295 = getelementptr inbounds %FloError, ptr %256, i64 0, i32 2
  store ptr %253, ptr %memberidx1.i.i295, align 8
  %memberidx2.i.i296 = getelementptr inbounds %FloError, ptr %256, i64 0, i32 1
  store ptr %251, ptr %memberidx2.i.i296, align 8
  %memberidx.i.i297 = getelementptr inbounds %Array_FloError_, ptr %255, i64 0, i32 2
  %257 = load i64, ptr %memberidx.i.i297, align 4
  %memberidx1.i2.i298 = getelementptr inbounds %Array_FloError_, ptr %255, i64 0, i32 3
  %258 = load i64, ptr %memberidx1.i2.i298, align 4
  %.not.i.i299 = icmp slt i64 %257, %258
  br i1 %.not.i.i299, label %if.entry51.TypeChecker_error.exit305_crit_edge, label %if.entry.i.i302

if.entry51.TypeChecker_error.exit305_crit_edge:   ; preds = %if.entry51
  %memberidx4.i.i303.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %255, i64 0, i32 1
  %.pre38 = load ptr, ptr %memberidx4.i.i303.phi.trans.insert, align 8
  br label %TypeChecker_error.exit305

if.entry.i.i302:                                  ; preds = %if.entry51
  %259 = shl i64 %258, 1
  store i64 %259, ptr %memberidx1.i2.i298, align 4
  %memberidx2.i.i.i301 = getelementptr inbounds %Array_FloError_, ptr %255, i64 0, i32 1
  %260 = load ptr, ptr %memberidx2.i.i.i301, align 8
  %261 = shl i64 %258, 4
  %262 = call ptr @realloc(ptr %260, i64 %261)
  store ptr %262, ptr %memberidx2.i.i.i301, align 8
  %.pre37 = load i64, ptr %memberidx.i.i297, align 4
  br label %TypeChecker_error.exit305

TypeChecker_error.exit305:                        ; preds = %if.entry51.TypeChecker_error.exit305_crit_edge, %if.entry.i.i302
  %263 = phi ptr [ %.pre38, %if.entry51.TypeChecker_error.exit305_crit_edge ], [ %262, %if.entry.i.i302 ]
  %264 = phi i64 [ %257, %if.entry51.TypeChecker_error.exit305_crit_edge ], [ %.pre37, %if.entry.i.i302 ]
  %265 = add i64 %264, 1
  store i64 %265, ptr %memberidx.i.i297, align 4
  %ptridx.i.i304 = getelementptr inbounds ptr, ptr %263, i64 %264
  store ptr %256, ptr %ptridx.i.i304, align 8
  br label %common.ret

ifend53:                                          ; preds = %Map_string_PropId____getitem__.exit237
  %266 = tail call ptr @malloc(i32 16)
  %267 = load ptr, ptr %157, align 8
  store i64 14, ptr %266, align 4
  %memberidx.i306 = getelementptr inbounds %EnumType, ptr %266, i64 0, i32 1
  store ptr %267, ptr %memberidx.i306, align 8
  br label %ifend6

if.entry60:                                       ; preds = %ifend
  %268 = tail call ptr @malloc(i32 72)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %268, ptr noundef nonnull align 8 dereferenceable(9) @178, i64 9, i1 false)
  %269 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %269, align 8
  %memberidx.i.i307 = getelementptr inbounds %string, ptr %269, i64 0, i32 1
  store ptr %268, ptr %memberidx.i.i307, align 8
  %memberidx1.i.i308 = getelementptr inbounds %string, ptr %269, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i308, align 4
  %memberidx2.i.i309 = getelementptr inbounds %string, ptr %269, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i309, align 4
  %memberidx.i310 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %270 = load i64, ptr %memberidx.i310, align 4
  %.not.i312 = icmp eq i64 %270, 9
  br i1 %.not.i312, label %ifend.i316, label %else64

ifend.i316:                                       ; preds = %if.entry60
  %memberidx2.i314 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %271 = load ptr, ptr %memberidx2.i314, align 8
  %272 = tail call i64 @memcmp(ptr %271, ptr nonnull %268, i64 9)
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %ifend65, label %else64

else64:                                           ; preds = %if.entry60, %ifend.i316
  %274 = tail call ptr @malloc(i32 72)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %274, ptr noundef nonnull align 8 dereferenceable(9) @179, i64 9, i1 false)
  %275 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %275, align 8
  %memberidx.i.i317 = getelementptr inbounds %string, ptr %275, i64 0, i32 1
  store ptr %274, ptr %memberidx.i.i317, align 8
  %memberidx1.i.i318 = getelementptr inbounds %string, ptr %275, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i318, align 4
  %memberidx2.i.i319 = getelementptr inbounds %string, ptr %275, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i319, align 4
  %276 = load i64, ptr %memberidx.i310, align 4
  %.not.i322 = icmp eq i64 %276, 9
  br i1 %.not.i322, label %ifend.i326, label %else67

ifend.i326:                                       ; preds = %else64
  %memberidx2.i324 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %277 = load ptr, ptr %memberidx2.i324, align 8
  %278 = tail call i64 @memcmp(ptr %277, ptr nonnull %274, i64 9)
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %ifend65, label %else67

ifend65:                                          ; preds = %ifend.i375, %ifend.i364, %ifend.i353, %ifend.i326, %ifend.i316
  %280 = phi i64 [ 3, %ifend.i316 ], [ 4, %ifend.i326 ], [ 5, %ifend.i353 ], [ 6, %ifend.i364 ], [ 7, %ifend.i375 ]
  %281 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %281, align 4
  %memberidx.i.i328 = getelementptr inbounds %Expression, ptr %281, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i328, align 4
  %memberidx1.i.i329 = getelementptr inbounds %Expression, ptr %281, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i329, align 1
  %memberidx.i330 = getelementptr inbounds %IntrinsicCall, ptr %281, i64 0, i32 4
  store i64 %280, ptr %memberidx.i330, align 4
  %memberidx1.i331 = getelementptr inbounds %IntrinsicCall, ptr %281, i64 0, i32 5
  %282 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %282, align 8
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %282, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %282, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i, align 4
  %memberidx2.i.i332 = getelementptr inbounds %Array_Expression_, ptr %282, i64 0, i32 1
  %283 = tail call ptr @malloc(i32 64)
  store ptr %283, ptr %memberidx2.i.i332, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %282, ptr %memberidx1.i331, align 8
  %memberidx4.i334 = getelementptr inbounds %Expression, ptr %281, i64 0, i32 3
  %284 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %284, align 4
  store ptr %284, ptr %memberidx4.i334, align 8
  %285 = load i64, ptr %memberidx.i7.i, align 4
  %286 = load i64, ptr %memberidx1.i8.i, align 4
  %.not.i337 = icmp slt i64 %285, %286
  br i1 %.not.i337, label %ifend65.Array_Expression____sl__.exit_crit_edge, label %if.entry.i340

ifend65.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend65
  %.pre32 = load ptr, ptr %memberidx2.i.i332, align 8
  br label %Array_Expression____sl__.exit

if.entry.i340:                                    ; preds = %ifend65
  %287 = shl i64 %286, 1
  store i64 %287, ptr %memberidx1.i8.i, align 4
  %288 = load ptr, ptr %memberidx2.i.i332, align 8
  %289 = shl i64 %286, 4
  %290 = tail call ptr @realloc(ptr %288, i64 %289)
  store ptr %290, ptr %memberidx2.i.i332, align 8
  %.pre31 = load i64, ptr %memberidx.i7.i, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend65.Array_Expression____sl__.exit_crit_edge, %if.entry.i340
  %291 = phi ptr [ %.pre32, %ifend65.Array_Expression____sl__.exit_crit_edge ], [ %290, %if.entry.i340 ]
  %292 = phi i64 [ %285, %ifend65.Array_Expression____sl__.exit_crit_edge ], [ %.pre31, %if.entry.i340 ]
  %293 = add i64 %292, 1
  store i64 %293, ptr %memberidx.i7.i, align 4
  %ptridx.i342 = getelementptr inbounds ptr, ptr %291, i64 %292
  store ptr %5, ptr %ptridx.i342, align 8
  br label %common.ret

else67:                                           ; preds = %else64, %ifend.i326
  %294 = tail call ptr @malloc(i32 72)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %294, ptr noundef nonnull align 8 dereferenceable(9) @180, i64 9, i1 false)
  %295 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %295, align 8
  %memberidx.i.i344 = getelementptr inbounds %string, ptr %295, i64 0, i32 1
  store ptr %294, ptr %memberidx.i.i344, align 8
  %memberidx1.i.i345 = getelementptr inbounds %string, ptr %295, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i345, align 4
  %memberidx2.i.i346 = getelementptr inbounds %string, ptr %295, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i346, align 4
  %296 = load i64, ptr %memberidx.i310, align 4
  %.not.i349 = icmp eq i64 %296, 9
  br i1 %.not.i349, label %ifend.i353, label %else70

ifend.i353:                                       ; preds = %else67
  %memberidx2.i351 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %297 = load ptr, ptr %memberidx2.i351, align 8
  %298 = tail call i64 @memcmp(ptr %297, ptr nonnull %294, i64 9)
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %ifend65, label %else70

else70:                                           ; preds = %else67, %ifend.i353
  %300 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %300, ptr noundef nonnull align 8 dereferenceable(6) @181, i64 6, i1 false)
  %301 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %301, align 8
  %memberidx.i.i355 = getelementptr inbounds %string, ptr %301, i64 0, i32 1
  store ptr %300, ptr %memberidx.i.i355, align 8
  %memberidx1.i.i356 = getelementptr inbounds %string, ptr %301, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i356, align 4
  %memberidx2.i.i357 = getelementptr inbounds %string, ptr %301, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i357, align 4
  %302 = load i64, ptr %memberidx.i310, align 4
  %.not.i360 = icmp eq i64 %302, 6
  br i1 %.not.i360, label %ifend.i364, label %else73

ifend.i364:                                       ; preds = %else70
  %memberidx2.i362 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %303 = load ptr, ptr %memberidx2.i362, align 8
  %304 = tail call i64 @memcmp(ptr %303, ptr nonnull %300, i64 6)
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %ifend65, label %else73

else73:                                           ; preds = %else70, %ifend.i364
  %306 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %306, ptr noundef nonnull align 8 dereferenceable(7) @182, i64 7, i1 false)
  %307 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %307, align 8
  %memberidx.i.i366 = getelementptr inbounds %string, ptr %307, i64 0, i32 1
  store ptr %306, ptr %memberidx.i.i366, align 8
  %memberidx1.i.i367 = getelementptr inbounds %string, ptr %307, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i367, align 4
  %memberidx2.i.i368 = getelementptr inbounds %string, ptr %307, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i368, align 4
  %308 = load i64, ptr %memberidx.i310, align 4
  %.not.i371 = icmp eq i64 %308, 7
  br i1 %.not.i371, label %ifend.i375, label %else76

ifend.i375:                                       ; preds = %else73
  %memberidx2.i373 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %309 = load ptr, ptr %memberidx2.i373, align 8
  %310 = tail call i64 @memcmp(ptr %309, ptr nonnull %306, i64 7)
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %ifend65, label %else76

else76:                                           ; preds = %else73, %ifend.i375
  %312 = load ptr, ptr %12, align 8
  %memberidx78 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %312, i64 0, i32 5
  %313 = load ptr, ptr %memberidx78, align 8
  %314 = tail call ptr %313(ptr nonnull %12)
  %315 = alloca ptr, align 8
  %316 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %315, ptr nonnull @183, ptr %314)
  %317 = load ptr, ptr %315, align 8
  %318 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %318, align 8
  %memberidx.i377 = getelementptr inbounds %string, ptr %318, i64 0, i32 1
  store ptr %317, ptr %memberidx.i377, align 8
  %memberidx1.i378 = getelementptr inbounds %string, ptr %318, i64 0, i32 2
  store i64 %316, ptr %memberidx1.i378, align 4
  %memberidx2.i379 = getelementptr inbounds %string, ptr %318, i64 0, i32 3
  store i64 %316, ptr %memberidx2.i379, align 4
  tail call void @free(ptr %314)
  %319 = load ptr, ptr %memberidx2, align 8
  %memberidx80 = getelementptr inbounds %Token, ptr %319, i64 0, i32 1
  %320 = load ptr, ptr %memberidx80, align 8
  %321 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i381 = getelementptr inbounds %Compiler, ptr %321, i64 0, i32 6
  %322 = load ptr, ptr %memberidx1.i381, align 8
  %323 = call ptr @malloc(i32 24)
  store i64 1, ptr %323, align 4
  %memberidx1.i.i382 = getelementptr inbounds %FloError, ptr %323, i64 0, i32 2
  store ptr %320, ptr %memberidx1.i.i382, align 8
  %memberidx2.i.i383 = getelementptr inbounds %FloError, ptr %323, i64 0, i32 1
  store ptr %318, ptr %memberidx2.i.i383, align 8
  %memberidx.i.i384 = getelementptr inbounds %Array_FloError_, ptr %322, i64 0, i32 2
  %324 = load i64, ptr %memberidx.i.i384, align 4
  %memberidx1.i2.i385 = getelementptr inbounds %Array_FloError_, ptr %322, i64 0, i32 3
  %325 = load i64, ptr %memberidx1.i2.i385, align 4
  %.not.i.i386 = icmp slt i64 %324, %325
  br i1 %.not.i.i386, label %else76.TypeChecker_error.exit392_crit_edge, label %if.entry.i.i389

else76.TypeChecker_error.exit392_crit_edge:       ; preds = %else76
  %memberidx4.i.i390.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %322, i64 0, i32 1
  %.pre30 = load ptr, ptr %memberidx4.i.i390.phi.trans.insert, align 8
  br label %TypeChecker_error.exit392

if.entry.i.i389:                                  ; preds = %else76
  %326 = shl i64 %325, 1
  store i64 %326, ptr %memberidx1.i2.i385, align 4
  %memberidx2.i.i.i388 = getelementptr inbounds %Array_FloError_, ptr %322, i64 0, i32 1
  %327 = load ptr, ptr %memberidx2.i.i.i388, align 8
  %328 = shl i64 %325, 4
  %329 = call ptr @realloc(ptr %327, i64 %328)
  store ptr %329, ptr %memberidx2.i.i.i388, align 8
  %.pre29 = load i64, ptr %memberidx.i.i384, align 4
  br label %TypeChecker_error.exit392

TypeChecker_error.exit392:                        ; preds = %else76.TypeChecker_error.exit392_crit_edge, %if.entry.i.i389
  %330 = phi ptr [ %.pre30, %else76.TypeChecker_error.exit392_crit_edge ], [ %329, %if.entry.i.i389 ]
  %331 = phi i64 [ %324, %else76.TypeChecker_error.exit392_crit_edge ], [ %.pre29, %if.entry.i.i389 ]
  %332 = add i64 %331, 1
  store i64 %332, ptr %memberidx.i.i384, align 4
  %ptridx.i.i391 = getelementptr inbounds ptr, ptr %330, i64 %331
  store ptr %323, ptr %ptridx.i.i391, align 8
  br label %common.ret

if.entry83:                                       ; preds = %ifend
  %memberidx86 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %333 = load ptr, ptr %memberidx86, align 8
  %memberidx87 = getelementptr inbounds %ModuleVarId, ptr %333, i64 0, i32 3
  %334 = load ptr, ptr %memberidx87, align 8
  %memberidx88 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %335 = load ptr, ptr %memberidx88, align 8
  %memberidx89 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %336 = load i64, ptr %334, align 4
  store i64 %336, ptr %memberidx89, align 4
  store ptr %334, ptr %memberidx88, align 8
  %337 = alloca %VarAccessExpressionNode, align 8
  %338 = load ptr, ptr %memberidx2, align 8
  %memberidx.i393 = getelementptr inbounds %Token, ptr %338, i64 0, i32 1
  %339 = load ptr, ptr %memberidx.i393, align 8
  store ptr %339, ptr %337, align 8
  %memberidx.i.i.i394 = getelementptr inbounds %StatementNode, ptr %337, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i394, align 8
  %memberidx.i.i395 = getelementptr inbounds %ExpressionNode, ptr %337, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i395, align 8
  %memberidx1.i396 = getelementptr inbounds %VarAccessExpressionNode, ptr %337, i64 0, i32 3
  store ptr %338, ptr %memberidx1.i396, align 8
  %340 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %340, align 4
  %341 = call fastcc ptr @TypeChecker_check_var_access_expr(ptr nonnull %0, ptr nonnull %340, ptr nonnull %337)
  %342 = load i64, ptr %335, align 4
  store i64 %342, ptr %memberidx89, align 4
  store ptr %335, ptr %memberidx88, align 8
  br label %common.ret

else84:                                           ; preds = %if.entry.i2, %ifend
  %343 = load ptr, ptr %12, align 8
  %memberidx96 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %343, i64 0, i32 5
  %344 = load ptr, ptr %memberidx96, align 8
  %345 = tail call ptr %344(ptr nonnull %12)
  %346 = load ptr, ptr %memberidx1, align 8
  %347 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %346)
  %348 = load ptr, ptr %347, align 8
  %memberidx98 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %348, i64 0, i32 5
  %349 = load ptr, ptr %memberidx98, align 8
  %350 = tail call ptr %349(ptr nonnull %347)
  %351 = alloca ptr, align 8
  %352 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %351, ptr nonnull @184, ptr %345, ptr %350)
  %353 = load ptr, ptr %351, align 8
  %354 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %354, align 8
  %memberidx.i397 = getelementptr inbounds %string, ptr %354, i64 0, i32 1
  store ptr %353, ptr %memberidx.i397, align 8
  %memberidx1.i398 = getelementptr inbounds %string, ptr %354, i64 0, i32 2
  store i64 %352, ptr %memberidx1.i398, align 4
  %memberidx2.i399 = getelementptr inbounds %string, ptr %354, i64 0, i32 3
  store i64 %352, ptr %memberidx2.i399, align 4
  tail call void @free(ptr %345)
  tail call void @free(ptr %350)
  %355 = load ptr, ptr %memberidx, align 8
  %356 = load ptr, ptr %355, align 8
  %357 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i401 = getelementptr inbounds %Compiler, ptr %357, i64 0, i32 6
  %358 = load ptr, ptr %memberidx1.i401, align 8
  %359 = call ptr @malloc(i32 24)
  store i64 4, ptr %359, align 4
  %memberidx1.i.i402 = getelementptr inbounds %FloError, ptr %359, i64 0, i32 2
  store ptr %356, ptr %memberidx1.i.i402, align 8
  %memberidx2.i.i403 = getelementptr inbounds %FloError, ptr %359, i64 0, i32 1
  store ptr %354, ptr %memberidx2.i.i403, align 8
  %memberidx.i.i404 = getelementptr inbounds %Array_FloError_, ptr %358, i64 0, i32 2
  %360 = load i64, ptr %memberidx.i.i404, align 4
  %memberidx1.i2.i405 = getelementptr inbounds %Array_FloError_, ptr %358, i64 0, i32 3
  %361 = load i64, ptr %memberidx1.i2.i405, align 4
  %.not.i.i406 = icmp slt i64 %360, %361
  br i1 %.not.i.i406, label %else84.TypeChecker_error.exit412_crit_edge, label %if.entry.i.i409

else84.TypeChecker_error.exit412_crit_edge:       ; preds = %else84
  %memberidx4.i.i410.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %358, i64 0, i32 1
  %.pre48 = load ptr, ptr %memberidx4.i.i410.phi.trans.insert, align 8
  br label %TypeChecker_error.exit412

if.entry.i.i409:                                  ; preds = %else84
  %362 = shl i64 %361, 1
  store i64 %362, ptr %memberidx1.i2.i405, align 4
  %memberidx2.i.i.i408 = getelementptr inbounds %Array_FloError_, ptr %358, i64 0, i32 1
  %363 = load ptr, ptr %memberidx2.i.i.i408, align 8
  %364 = shl i64 %361, 4
  %365 = call ptr @realloc(ptr %363, i64 %364)
  store ptr %365, ptr %memberidx2.i.i.i408, align 8
  %.pre47 = load i64, ptr %memberidx.i.i404, align 4
  br label %TypeChecker_error.exit412

TypeChecker_error.exit412:                        ; preds = %else84.TypeChecker_error.exit412_crit_edge, %if.entry.i.i409
  %366 = phi ptr [ %.pre48, %else84.TypeChecker_error.exit412_crit_edge ], [ %365, %if.entry.i.i409 ]
  %367 = phi i64 [ %360, %else84.TypeChecker_error.exit412_crit_edge ], [ %.pre47, %if.entry.i.i409 ]
  %368 = add i64 %367, 1
  store i64 %368, ptr %memberidx.i.i404, align 4
  %ptridx.i.i411 = getelementptr inbounds ptr, ptr %366, i64 %367
  store ptr %359, ptr %ptridx.i.i411, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %.not = icmp eq i64 %5, 19
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %6, align 4
  %8 = icmp eq i64 %7, 21
  br i1 %8, label %if.entry.i103, label %is_object.exit

if.entry.i103:                                    ; preds = %if.entry, %if.entry.i103
  %.tr5.i = phi ptr [ %9, %if.entry.i103 ], [ %6, %if.entry ]
  %memberidx1.i102 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %9 = load ptr, ptr %memberidx1.i102, align 8
  %10 = load i64, ptr %9, align 4
  %11 = icmp eq i64 %10, 21
  br i1 %11, label %if.entry.i103, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i103, %if.entry
  %.lcssa.i = phi i64 [ %7, %if.entry ], [ %10, %if.entry.i103 ]
  %12 = icmp eq i64 %.lcssa.i, 13
  br i1 %12, label %if.entry2, label %ifend4

ifend:                                            ; preds = %4, %ifend4
  %right.0 = phi ptr [ %45, %ifend4 ], [ %2, %4 ]
  %memberidx9 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %memberidx9, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 18
  br i1 %15, label %if.entry11, label %ifend13

if.entry2:                                        ; preds = %is_object.exit
  %16 = tail call fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr %3)
  %17 = icmp ne ptr %16, null
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %18 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %18, i64 0, i32 6
  %19 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i, align 4
  %21 = icmp sgt i64 %20, 0
  %22 = or i1 %17, %21
  br i1 %22, label %common.ret, label %if.entry2.ifend4_crit_edge

if.entry2.ifend4_crit_edge:                       ; preds = %if.entry2
  %.pre = load ptr, ptr %memberidx1, align 8
  %.pre104 = load i64, ptr %memberidx, align 4
  br label %ifend4

ifend4:                                           ; preds = %if.entry2.ifend4_crit_edge, %is_object.exit
  %23 = phi i64 [ %.pre104, %if.entry2.ifend4_crit_edge ], [ %5, %is_object.exit ]
  %24 = phi ptr [ %.pre, %if.entry2.ifend4_crit_edge ], [ %6, %is_object.exit ]
  %25 = icmp eq i64 %23, 20
  %spec.store.select.i = select i1 %25, i64 1, i64 %23
  %26 = icmp eq i64 %spec.store.select.i, 21
  %spec.store.select34.i = select i1 %26, i64 2, i64 %spec.store.select.i
  %27 = icmp eq i64 %spec.store.select34.i, 22
  %spec.store.select30.i = select i1 %27, i64 3, i64 %spec.store.select34.i
  %28 = icmp eq i64 %spec.store.select30.i, 23
  %spec.store.select37.i = select i1 %28, i64 4, i64 %spec.store.select30.i
  %29 = icmp eq i64 %spec.store.select37.i, 24
  %spec.store.select31.i = select i1 %29, i64 5, i64 %spec.store.select37.i
  %30 = icmp eq i64 %spec.store.select31.i, 25
  %spec.store.select35.i = select i1 %30, i64 6, i64 %spec.store.select31.i
  %31 = icmp eq i64 %spec.store.select35.i, 26
  %spec.store.select32.i = select i1 %31, i64 16, i64 %spec.store.select35.i
  %32 = icmp eq i64 %spec.store.select32.i, 27
  %spec.store.select38.i = select i1 %32, i64 15, i64 %spec.store.select32.i
  %33 = icmp eq i64 %spec.store.select38.i, 29
  %spec.store.select33.i = select i1 %33, i64 13, i64 %spec.store.select38.i
  %34 = icmp eq i64 %spec.store.select33.i, 30
  %spec.store.select36.i = select i1 %34, i64 14, i64 %spec.store.select33.i
  %35 = tail call ptr @malloc(i32 48)
  %memberidx28.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 3
  %36 = load ptr, ptr %memberidx28.i, align 8
  %memberidx29.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 5
  %37 = load ptr, ptr %memberidx29.i, align 8
  %38 = load ptr, ptr %36, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call ptr @malloc(i32 32)
  %41 = load i64, ptr %38, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %39, i64 0, i32 1
  %42 = load i64, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %38, i64 0, i32 2
  %43 = load i64, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %39, i64 0, i32 3
  %44 = load i64, ptr %memberidx3.i.i.i, align 4
  store i64 %41, ptr %40, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %40, i64 0, i32 1
  store i64 %42, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %40, i64 0, i32 2
  store i64 %43, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %40, i64 0, i32 3
  store i64 %44, ptr %memberidx3.i.i.i.i, align 4
  store ptr %40, ptr %35, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %35, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i.i = getelementptr inbounds %ExpressionNode, ptr %35, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %35, i64 0, i32 3
  store ptr %36, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %35, i64 0, i32 4
  store i64 %spec.store.select36.i, ptr %memberidx3.i.i, align 4
  %memberidx4.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %35, i64 0, i32 5
  store ptr %37, ptr %memberidx4.i.i, align 8
  %45 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %24, ptr nonnull %35)
  br label %ifend

common.ret:                                       ; preds = %if.entry2, %ifend23, %TypeChecker_error.exit96, %TypeChecker_error.exit80, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit80 ], [ null, %TypeChecker_error.exit96 ], [ %112, %ifend23 ], [ %16, %if.entry2 ]
  ret ptr %common.ret.op

if.entry11:                                       ; preds = %ifend
  %46 = tail call ptr @malloc(i32 264)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %46, ptr noundef nonnull align 8 dereferenceable(33) @148, i64 33, i1 false)
  %47 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %47, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  store ptr %46, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  store i64 33, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i54 = getelementptr inbounds %string, ptr %47, i64 0, i32 3
  store i64 33, ptr %memberidx2.i.i54, align 4
  %48 = load ptr, ptr %3, align 8
  %memberidx.i55 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %49 = load ptr, ptr %memberidx.i55, align 8
  %memberidx1.i56 = getelementptr inbounds %Compiler, ptr %49, i64 0, i32 6
  %50 = load ptr, ptr %memberidx1.i56, align 8
  %51 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %51, align 4
  %memberidx1.i.i57 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 2
  store ptr %48, ptr %memberidx1.i.i57, align 8
  %memberidx2.i.i58 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 1
  store ptr %47, ptr %memberidx2.i.i58, align 8
  %memberidx.i.i59 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 2
  %52 = load i64, ptr %memberidx.i.i59, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 3
  %53 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %52, %53
  br i1 %.not.i.i, label %if.entry11.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry11.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry11
  %memberidx4.i.i62.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %.pre110 = load ptr, ptr %memberidx4.i.i62.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry11
  %54 = shl i64 %53, 1
  store i64 %54, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i61 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %55 = load ptr, ptr %memberidx2.i.i.i61, align 8
  %56 = shl i64 %53, 4
  %57 = tail call ptr @realloc(ptr %55, i64 %56)
  store ptr %57, ptr %memberidx2.i.i.i61, align 8
  %.pre109 = load i64, ptr %memberidx.i.i59, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %58 = phi ptr [ %.pre110, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %57, %if.entry.i.i ]
  %59 = phi i64 [ %52, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %.pre109, %if.entry.i.i ]
  %60 = add i64 %59, 1
  store i64 %60, ptr %memberidx.i.i59, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %58, i64 %59
  store ptr %51, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend
  %memberidx.i63 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 2
  %61 = load i64, ptr %memberidx.i63, align 4
  switch i64 %61, label %if.entry15 [
    i64 7, label %if.entry.i
    i64 12, label %check_is_var.exit
    i64 13, label %ifend17
  ]

if.entry.i:                                       ; preds = %ifend13
  %memberidx1.i64 = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %62 = load ptr, ptr %memberidx1.i64, align 8
  %63 = load i64, ptr %62, align 4
  %64 = icmp eq i64 %63, 1
  br i1 %64, label %ifend17, label %if.entry15

check_is_var.exit:                                ; preds = %ifend13
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %1, i64 0, i32 5
  %65 = load ptr, ptr %memberidx7.i, align 8
  %66 = load i64, ptr %65, align 4
  %67 = icmp eq i64 %66, 1
  br i1 %67, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %if.entry.i, %ifend13, %check_is_var.exit
  %68 = tail call ptr @malloc(i32 280)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %68, ptr noundef nonnull align 8 dereferenceable(35) @149, i64 35, i1 false)
  %69 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %69, align 8
  %memberidx.i.i65 = getelementptr inbounds %string, ptr %69, i64 0, i32 1
  store ptr %68, ptr %memberidx.i.i65, align 8
  %memberidx1.i.i66 = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  store i64 35, ptr %memberidx1.i.i66, align 4
  %memberidx2.i.i67 = getelementptr inbounds %string, ptr %69, i64 0, i32 3
  store i64 35, ptr %memberidx2.i.i67, align 4
  %70 = load ptr, ptr %3, align 8
  %memberidx.i68 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %71 = load ptr, ptr %memberidx.i68, align 8
  %memberidx1.i69 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 6
  %72 = load ptr, ptr %memberidx1.i69, align 8
  %73 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %73, align 4
  %memberidx1.i.i70 = getelementptr inbounds %FloError, ptr %73, i64 0, i32 2
  store ptr %70, ptr %memberidx1.i.i70, align 8
  %memberidx2.i.i71 = getelementptr inbounds %FloError, ptr %73, i64 0, i32 1
  store ptr %69, ptr %memberidx2.i.i71, align 8
  %memberidx.i.i72 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i72, align 4
  %memberidx1.i2.i73 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 3
  %75 = load i64, ptr %memberidx1.i2.i73, align 4
  %.not.i.i74 = icmp slt i64 %74, %75
  br i1 %.not.i.i74, label %if.entry15.TypeChecker_error.exit80_crit_edge, label %if.entry.i.i77

if.entry15.TypeChecker_error.exit80_crit_edge:    ; preds = %if.entry15
  %memberidx4.i.i78.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %.pre108 = load ptr, ptr %memberidx4.i.i78.phi.trans.insert, align 8
  br label %TypeChecker_error.exit80

if.entry.i.i77:                                   ; preds = %if.entry15
  %76 = shl i64 %75, 1
  store i64 %76, ptr %memberidx1.i2.i73, align 4
  %memberidx2.i.i.i76 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %77 = load ptr, ptr %memberidx2.i.i.i76, align 8
  %78 = shl i64 %75, 4
  %79 = tail call ptr @realloc(ptr %77, i64 %78)
  store ptr %79, ptr %memberidx2.i.i.i76, align 8
  %.pre107 = load i64, ptr %memberidx.i.i72, align 4
  br label %TypeChecker_error.exit80

TypeChecker_error.exit80:                         ; preds = %if.entry15.TypeChecker_error.exit80_crit_edge, %if.entry.i.i77
  %80 = phi ptr [ %.pre108, %if.entry15.TypeChecker_error.exit80_crit_edge ], [ %79, %if.entry.i.i77 ]
  %81 = phi i64 [ %74, %if.entry15.TypeChecker_error.exit80_crit_edge ], [ %.pre107, %if.entry.i.i77 ]
  %82 = add i64 %81, 1
  store i64 %82, ptr %memberidx.i.i72, align 4
  %ptridx.i.i79 = getelementptr inbounds ptr, ptr %80, i64 %81
  store ptr %73, ptr %ptridx.i.i79, align 8
  br label %common.ret

ifend17:                                          ; preds = %if.entry.i, %ifend13, %check_is_var.exit
  %memberidx20 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %83 = load ptr, ptr %memberidx20, align 8
  %84 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nonnull %13, ptr %83)
  br i1 %84, label %ifend23, label %if.entry21

if.entry21:                                       ; preds = %ifend17
  %85 = load ptr, ptr %memberidx20, align 8
  %86 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %85)
  %87 = load ptr, ptr %86, align 8
  %memberidx25 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %87, i64 0, i32 5
  %88 = load ptr, ptr %memberidx25, align 8
  %89 = tail call ptr %88(ptr nonnull %86)
  %90 = load ptr, ptr %memberidx9, align 8
  %91 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %90)
  %92 = load ptr, ptr %91, align 8
  %memberidx27 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %92, i64 0, i32 5
  %93 = load ptr, ptr %memberidx27, align 8
  %94 = tail call ptr %93(ptr nonnull %91)
  %95 = alloca ptr, align 8
  %96 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %95, ptr nonnull @150, ptr %89, ptr %94)
  %97 = load ptr, ptr %95, align 8
  %98 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %98, align 8
  %memberidx.i81 = getelementptr inbounds %string, ptr %98, i64 0, i32 1
  store ptr %97, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %string, ptr %98, i64 0, i32 2
  store i64 %96, ptr %memberidx1.i82, align 4
  %memberidx2.i83 = getelementptr inbounds %string, ptr %98, i64 0, i32 3
  store i64 %96, ptr %memberidx2.i83, align 4
  tail call void @free(ptr %89)
  tail call void @free(ptr %94)
  %99 = load ptr, ptr %3, align 8
  %memberidx.i84 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %100 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i85 = getelementptr inbounds %Compiler, ptr %100, i64 0, i32 6
  %101 = load ptr, ptr %memberidx1.i85, align 8
  %102 = call ptr @malloc(i32 24)
  store i64 5, ptr %102, align 4
  %memberidx1.i.i86 = getelementptr inbounds %FloError, ptr %102, i64 0, i32 2
  store ptr %99, ptr %memberidx1.i.i86, align 8
  %memberidx2.i.i87 = getelementptr inbounds %FloError, ptr %102, i64 0, i32 1
  store ptr %98, ptr %memberidx2.i.i87, align 8
  %memberidx.i.i88 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 2
  %103 = load i64, ptr %memberidx.i.i88, align 4
  %memberidx1.i2.i89 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 3
  %104 = load i64, ptr %memberidx1.i2.i89, align 4
  %.not.i.i90 = icmp slt i64 %103, %104
  br i1 %.not.i.i90, label %if.entry21.TypeChecker_error.exit96_crit_edge, label %if.entry.i.i93

if.entry21.TypeChecker_error.exit96_crit_edge:    ; preds = %if.entry21
  %memberidx4.i.i94.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 1
  %.pre106 = load ptr, ptr %memberidx4.i.i94.phi.trans.insert, align 8
  br label %TypeChecker_error.exit96

if.entry.i.i93:                                   ; preds = %if.entry21
  %105 = shl i64 %104, 1
  store i64 %105, ptr %memberidx1.i2.i89, align 4
  %memberidx2.i.i.i92 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 1
  %106 = load ptr, ptr %memberidx2.i.i.i92, align 8
  %107 = shl i64 %104, 4
  %108 = call ptr @realloc(ptr %106, i64 %107)
  store ptr %108, ptr %memberidx2.i.i.i92, align 8
  %.pre105 = load i64, ptr %memberidx.i.i88, align 4
  br label %TypeChecker_error.exit96

TypeChecker_error.exit96:                         ; preds = %if.entry21.TypeChecker_error.exit96_crit_edge, %if.entry.i.i93
  %109 = phi ptr [ %.pre106, %if.entry21.TypeChecker_error.exit96_crit_edge ], [ %108, %if.entry.i.i93 ]
  %110 = phi i64 [ %103, %if.entry21.TypeChecker_error.exit96_crit_edge ], [ %.pre105, %if.entry.i.i93 ]
  %111 = add i64 %110, 1
  store i64 %111, ptr %memberidx.i.i88, align 4
  %ptridx.i.i95 = getelementptr inbounds ptr, ptr %109, i64 %110
  store ptr %102, ptr %ptridx.i.i95, align 8
  br label %common.ret

ifend23:                                          ; preds = %ifend17
  %112 = tail call ptr @malloc(i32 49)
  %113 = load ptr, ptr %memberidx20, align 8
  store i64 8, ptr %112, align 4
  %memberidx.i.i97 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i97, align 4
  %memberidx1.i.i98 = getelementptr inbounds %Expression, ptr %112, i64 0, i32 1
  %memberidx.i99 = getelementptr inbounds %BinaryExpression, ptr %112, i64 0, i32 4
  store ptr %1, ptr %memberidx.i99, align 8
  %memberidx1.i100 = getelementptr inbounds %BinaryExpression, ptr %112, i64 0, i32 5
  store i64 19, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %BinaryExpression, ptr %112, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i101, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %112, i64 0, i32 3
  store ptr %113, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i98, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_init_function_signature(ptr %0, ptr nocapture readonly %1, ptr %2, ptr nocapture %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %4, align 8
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 2
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %6 = tail call ptr @malloc(i32 25)
  %memberidx.i53 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i53, align 8
  %memberidx1.i54 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 2
  %8 = load i64, ptr %memberidx1.i54, align 4
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 2
  store i64 %8, ptr %memberidx3.i.i, align 4
  %9 = icmp slt i64 %8, 1
  br i1 %9, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i80 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %memberidx.i60 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 2
  %memberidx1.i61 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 3
  %memberidx2.i.i63 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Type____sl__.exit
  %10 = phi i64 [ 1, %for.body.lr.ph ], [ %47, %Array_Type____sl__.exit ]
  %arg.087.in = phi ptr [ %7, %for.body.lr.ph ], [ %ptridx.i75, %Array_Type____sl__.exit ]
  %arg.087 = load ptr, ptr %arg.087.in, align 8
  %11 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %11, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %11, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i, align 4
  %memberidx1.i.i57 = getelementptr inbounds %Expression, ptr %11, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i57, align 1
  %memberidx3 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 5
  %12 = load ptr, ptr %arg.087, align 8
  %memberidx5 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx5, align 8
  store ptr %13, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 6
  store ptr null, ptr %memberidx6, align 8
  %14 = call ptr @malloc(i32 8)
  store i64 22, ptr %14, align 4
  %memberidx7 = getelementptr inbounds %ArgNode, ptr %arg.087, i64 0, i32 1
  %15 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end:                                          ; preds = %Array_Type____sl__.exit, %for.entry
  tail call void @free(ptr nonnull %6)
  %16 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %2)
  %17 = tail call ptr @malloc(i32 25)
  store i64 17, ptr %17, align 4
  %memberidx.i58 = getelementptr inbounds %FunctionType, ptr %17, i64 0, i32 1
  store ptr %4, ptr %memberidx.i58, align 8
  %memberidx1.i59 = getelementptr inbounds %FunctionType, ptr %17, i64 0, i32 2
  store ptr %16, ptr %memberidx1.i59, align 8
  ret ptr %17

if.entry:                                         ; preds = %for.body
  %18 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %15)
  br label %ifend

ifend:                                            ; preds = %for.body, %if.entry
  %19 = phi ptr [ %14, %for.body ], [ %18, %if.entry ]
  %memberidx9 = getelementptr inbounds %ArgNode, ptr %arg.087, i64 0, i32 2
  %20 = load ptr, ptr %memberidx9, align 8
  %.not52 = icmp eq ptr %20, null
  br i1 %.not52, label %ifend12, label %if.entry10

if.entry10:                                       ; preds = %ifend
  %21 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %19, ptr nonnull %20)
  store ptr %21, ptr %memberidx6, align 8
  %22 = load i64, ptr %19, align 4
  %23 = icmp eq i64 %22, 22
  %memberidx20 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  %24 = load ptr, ptr %memberidx20, align 8
  br i1 %23, label %ifend12, label %else17

ifend12:                                          ; preds = %if.entry10, %TypeChecker_error.exit, %else17, %ifend
  %25 = phi ptr [ %19, %TypeChecker_error.exit ], [ %19, %else17 ], [ %19, %ifend ], [ %24, %if.entry10 ]
  %26 = load i64, ptr %memberidx.i60, align 4
  %27 = load i64, ptr %memberidx1.i61, align 4
  %.not.i = icmp slt i64 %26, %27
  br i1 %.not.i, label %ifend12.Array_FunctionArg____sl__.exit_crit_edge, label %if.entry.i

ifend12.Array_FunctionArg____sl__.exit_crit_edge: ; preds = %ifend12
  %.pre90 = load ptr, ptr %memberidx2.i.i63, align 8
  br label %Array_FunctionArg____sl__.exit

if.entry.i:                                       ; preds = %ifend12
  %28 = shl i64 %27, 1
  store i64 %28, ptr %memberidx1.i61, align 4
  %29 = load ptr, ptr %memberidx2.i.i63, align 8
  %30 = shl i64 %27, 4
  %31 = call ptr @realloc(ptr %29, i64 %30)
  store ptr %31, ptr %memberidx2.i.i63, align 8
  %.pre89 = load i64, ptr %memberidx.i60, align 4
  br label %Array_FunctionArg____sl__.exit

Array_FunctionArg____sl__.exit:                   ; preds = %ifend12.Array_FunctionArg____sl__.exit_crit_edge, %if.entry.i
  %32 = phi ptr [ %.pre90, %ifend12.Array_FunctionArg____sl__.exit_crit_edge ], [ %31, %if.entry.i ]
  %33 = phi i64 [ %26, %ifend12.Array_FunctionArg____sl__.exit_crit_edge ], [ %.pre89, %if.entry.i ]
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx.i60, align 4
  %ptridx.i64 = getelementptr inbounds ptr, ptr %32, i64 %33
  store ptr %11, ptr %ptridx.i64, align 8
  %memberidx32 = getelementptr inbounds %Expression, ptr %11, i64 0, i32 3
  store ptr %25, ptr %memberidx32, align 8
  %35 = load ptr, ptr %memberidx3, align 8
  %36 = call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr %0, ptr %35, ptr nonnull %11, ptr %25)
  %memberidx34 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 4
  %memberidx35 = getelementptr inbounds %Var, ptr %36, i64 0, i32 1
  %37 = load ptr, ptr %memberidx35, align 8
  store ptr %37, ptr %memberidx34, align 8
  %38 = load i64, ptr %memberidx.i, align 4
  %39 = load i64, ptr %memberidx1.i, align 4
  %.not.i67 = icmp slt i64 %38, %39
  br i1 %.not.i67, label %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge, label %if.entry.i70

Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge: ; preds = %Array_FunctionArg____sl__.exit
  %.pre92 = load ptr, ptr %memberidx2.i, align 8
  br label %Array_Type____sl__.exit

if.entry.i70:                                     ; preds = %Array_FunctionArg____sl__.exit
  %40 = shl i64 %39, 1
  store i64 %40, ptr %memberidx1.i, align 4
  %41 = load ptr, ptr %memberidx2.i, align 8
  %42 = shl i64 %39, 4
  %43 = call ptr @realloc(ptr %41, i64 %42)
  store ptr %43, ptr %memberidx2.i, align 8
  %.pre91 = load i64, ptr %memberidx.i, align 4
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge, %if.entry.i70
  %44 = phi ptr [ %.pre92, %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge ], [ %43, %if.entry.i70 ]
  %45 = phi i64 [ %38, %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge ], [ %.pre91, %if.entry.i70 ]
  %46 = add i64 %45, 1
  store i64 %46, ptr %memberidx.i, align 4
  %ptridx.i72 = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %25, ptr %ptridx.i72, align 8
  %47 = add i64 %10, 1
  store i64 %47, ptr %memberidx1.i.i, align 4
  %ptridx.i75 = getelementptr inbounds ptr, ptr %7, i64 %10
  %48 = icmp sgt i64 %47, %8
  br i1 %48, label %for.end, label %for.body

else17:                                           ; preds = %if.entry10
  %49 = call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nonnull %19, ptr %24)
  br i1 %49, label %ifend12, label %if.entry23

if.entry23:                                       ; preds = %else17
  %50 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %19)
  %51 = load ptr, ptr %50, align 8
  %memberidx26 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %51, i64 0, i32 5
  %52 = load ptr, ptr %memberidx26, align 8
  %53 = call ptr %52(ptr nonnull %50)
  %54 = load ptr, ptr %memberidx6, align 8
  %memberidx28 = getelementptr inbounds %Expression, ptr %54, i64 0, i32 3
  %55 = load ptr, ptr %memberidx28, align 8
  %56 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %55)
  %57 = load ptr, ptr %56, align 8
  %memberidx29 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %57, i64 0, i32 5
  %58 = load ptr, ptr %memberidx29, align 8
  %59 = call ptr %58(ptr nonnull %56)
  %60 = alloca ptr, align 8
  %61 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %60, ptr nonnull @90, ptr %53, ptr %59)
  %62 = load ptr, ptr %60, align 8
  %63 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %63, align 8
  %memberidx.i77 = getelementptr inbounds %string, ptr %63, i64 0, i32 1
  store ptr %62, ptr %memberidx.i77, align 8
  %memberidx1.i78 = getelementptr inbounds %string, ptr %63, i64 0, i32 2
  store i64 %61, ptr %memberidx1.i78, align 4
  %memberidx2.i79 = getelementptr inbounds %string, ptr %63, i64 0, i32 3
  store i64 %61, ptr %memberidx2.i79, align 4
  tail call void @free(ptr %53)
  tail call void @free(ptr %59)
  %64 = load ptr, ptr %memberidx9, align 8
  %65 = load ptr, ptr %64, align 8
  %66 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i81 = getelementptr inbounds %Compiler, ptr %66, i64 0, i32 6
  %67 = load ptr, ptr %memberidx1.i81, align 8
  %68 = call ptr @malloc(i32 24)
  store i64 5, ptr %68, align 4
  %memberidx1.i.i82 = getelementptr inbounds %FloError, ptr %68, i64 0, i32 2
  store ptr %65, ptr %memberidx1.i.i82, align 8
  %memberidx2.i.i83 = getelementptr inbounds %FloError, ptr %68, i64 0, i32 1
  store ptr %63, ptr %memberidx2.i.i83, align 8
  %memberidx.i.i84 = getelementptr inbounds %Array_FloError_, ptr %67, i64 0, i32 2
  %69 = load i64, ptr %memberidx.i.i84, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %67, i64 0, i32 3
  %70 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %69, %70
  br i1 %.not.i.i, label %if.entry23.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry23.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry23
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %67, i64 0, i32 1
  %.pre88 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry23
  %71 = shl i64 %70, 1
  store i64 %71, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %67, i64 0, i32 1
  %72 = load ptr, ptr %memberidx2.i.i.i, align 8
  %73 = shl i64 %70, 4
  %74 = call ptr @realloc(ptr %72, i64 %73)
  store ptr %74, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i84, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry23.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %75 = phi ptr [ %.pre88, %if.entry23.TypeChecker_error.exit_crit_edge ], [ %74, %if.entry.i.i ]
  %76 = phi i64 [ %69, %if.entry23.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %77 = add i64 %76, 1
  store i64 %77, ptr %memberidx.i.i84, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %75, i64 %76
  store ptr %68, ptr %ptridx.i.i, align 8
  br label %ifend12
}

define internal fastcc ptr @TypeChecker_check_constructor_call(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2, ptr nocapture writeonly %3) unnamed_addr {
  %5 = load ptr, ptr %0, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i, align 8
  %7 = load i64, ptr %1, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %6, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %8, i64 %7
  %9 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 4
  %10 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %11 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Class_, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %12, i64 %11
  %13 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx1, align 8
  %15 = icmp eq ptr %14, null
  br i1 %15, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend, %else13, %if.entry12, %ifend11, %if.entry
  %common.ret.op = phi ptr [ %17, %if.entry ], [ null, %ifend11 ], [ %47, %if.entry12 ], [ %65, %else13 ], [ null, %ifend ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %16 = tail call ptr @malloc(i32 352)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(44) %16, ptr noundef nonnull align 8 dereferenceable(44) @166, i64 44, i1 false)
  %17 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %17, align 8
  %memberidx.i.i30 = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  store ptr %16, ptr %memberidx.i.i30, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  store i64 44, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 3
  store i64 44, ptr %memberidx2.i.i, align 4
  br label %common.ret

ifend:                                            ; preds = %4
  %memberidx2 = getelementptr inbounds %Class, ptr %13, i64 0, i32 5
  %18 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %14, i64 0, i32 2
  %19 = load i64, ptr %memberidx3, align 4
  %memberidx.i31 = getelementptr inbounds %Array_ClassMethod_, ptr %18, i64 0, i32 1
  %20 = load ptr, ptr %memberidx.i31, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %20, i64 %19
  %21 = load ptr, ptr %ptridx.i, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %21, i64 0, i32 4
  %22 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %21, i64 0, i32 6
  %23 = load ptr, ptr %memberidx5, align 8
  %24 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr %22, ptr %23, ptr %2)
  %memberidx.i32 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %25 = load ptr, ptr %memberidx.i32, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 6
  %26 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i33 = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i33, align 4
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %common.ret, label %ifend8

ifend8:                                           ; preds = %ifend
  %memberidx.i45 = getelementptr inbounds %FunctionType, ptr %22, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i45, align 8
  %memberidx1.i46 = getelementptr inbounds %Array_Type_, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx1.i46, align 4
  %memberidx2.i47 = getelementptr inbounds %Array_Expression_, ptr %24, i64 0, i32 2
  %31 = load i64, ptr %memberidx2.i47, align 4
  %.not.i = icmp eq i64 %30, %31
  br i1 %.not.i, label %for.cond.preheader.i, label %if.entry12

for.cond.preheader.i:                             ; preds = %ifend8
  %32 = icmp sgt i64 %30, 0
  br i1 %32, label %for.body.lr.ph.i, label %ifend11

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %memberidx.i12.i = getelementptr inbounds %Array_Expression_, ptr %24, i64 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %ifend8.i, %for.body.lr.ph.i
  %storemerge14.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %40, %ifend8.i ]
  %33 = load ptr, ptr %memberidx.i45, align 8
  %memberidx.i.i48 = getelementptr inbounds %Array_Type_, ptr %33, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i.i48, align 8
  %ptridx.i.i49 = getelementptr inbounds ptr, ptr %34, i64 %storemerge14.i
  %35 = load ptr, ptr %ptridx.i.i49, align 8
  %36 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %36, i64 %storemerge14.i
  %37 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %37, i64 0, i32 3
  %38 = load ptr, ptr %memberidx5.i, align 8
  %39 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %35, ptr %38)
  br i1 %39, label %ifend8.i, label %else13

ifend8.i:                                         ; preds = %for.body.i
  %40 = add nuw nsw i64 %storemerge14.i, 1
  %41 = load i64, ptr %memberidx2.i47, align 4
  %42 = icmp slt i64 %40, %41
  br i1 %42, label %for.body.i, label %ifend11

ifend11:                                          ; preds = %ifend8.i, %for.cond.preheader.i
  store ptr %24, ptr %3, align 8
  br label %common.ret

if.entry12:                                       ; preds = %ifend8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %2, i64 0, i32 2
  %43 = load i64, ptr %memberidx17, align 4
  %44 = alloca ptr, align 8
  %45 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %44, ptr nonnull @167, i64 %30, i64 %43)
  %46 = load ptr, ptr %44, align 8
  %47 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %47, align 8
  %memberidx.i34 = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  store ptr %46, ptr %memberidx.i34, align 8
  %memberidx1.i35 = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  store i64 %45, ptr %memberidx1.i35, align 4
  %memberidx2.i36 = getelementptr inbounds %string, ptr %47, i64 0, i32 3
  store i64 %45, ptr %memberidx2.i36, align 4
  br label %common.ret

else13:                                           ; preds = %for.body.i
  %48 = load ptr, ptr %memberidx.i45, align 8
  %memberidx.i37 = getelementptr inbounds %Array_Type_, ptr %48, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i37, align 8
  %ptridx.i38 = getelementptr inbounds ptr, ptr %49, i64 %storemerge14.i
  %50 = load ptr, ptr %ptridx.i38, align 8
  %51 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %50)
  %52 = load ptr, ptr %51, align 8
  %memberidx19 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %52, i64 0, i32 5
  %53 = load ptr, ptr %memberidx19, align 8
  %54 = tail call ptr %53(ptr nonnull %51)
  %55 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i40 = getelementptr inbounds ptr, ptr %55, i64 %storemerge14.i
  %56 = load ptr, ptr %ptridx.i40, align 8
  %memberidx20 = getelementptr inbounds %Expression, ptr %56, i64 0, i32 3
  %57 = load ptr, ptr %memberidx20, align 8
  %58 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %57)
  %59 = load ptr, ptr %58, align 8
  %memberidx21 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %59, i64 0, i32 5
  %60 = load ptr, ptr %memberidx21, align 8
  %61 = tail call ptr %60(ptr nonnull %58)
  %62 = alloca ptr, align 8
  %63 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %62, ptr nonnull @168, ptr %54, ptr %61, i64 %storemerge14.i)
  %64 = load ptr, ptr %62, align 8
  %65 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %65, align 8
  %memberidx.i41 = getelementptr inbounds %string, ptr %65, i64 0, i32 1
  store ptr %64, ptr %memberidx.i41, align 8
  %memberidx1.i42 = getelementptr inbounds %string, ptr %65, i64 0, i32 2
  store i64 %63, ptr %memberidx1.i42, align 4
  %memberidx2.i43 = getelementptr inbounds %string, ptr %65, i64 0, i32 3
  store i64 %63, ptr %memberidx2.i43, align 4
  tail call void @free(ptr %54)
  tail call void @free(ptr %61)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_methods(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx2630 = getelementptr inbounds %Array_MethodNode_, ptr %3, i64 0, i32 2
  %4 = load i64, ptr %memberidx2630, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 8
  %6 = load i64, ptr %memberidx, align 4
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %memberidx55 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx124 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %memberidx139 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx112 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx152 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassMethod____sl__.exit
  %7 = phi ptr [ %3, %for.body.lr.ph ], [ %405, %Array_ClassMethod____sl__.exit ]
  %i.0632 = phi i64 [ 0, %for.body.lr.ph ], [ %404, %Array_ClassMethod____sl__.exit ]
  %current_vtable_index.0631 = phi i64 [ %6, %for.body.lr.ph ], [ %current_vtable_index.1, %Array_ClassMethod____sl__.exit ]
  %memberidx.i = getelementptr inbounds %Array_MethodNode_, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %8, i64 %i.0632
  %9 = load ptr, ptr %ptridx.i, align 8
  %10 = tail call ptr @malloc(i32 66)
  %memberidx.i201 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 7
  store i1 false, ptr %memberidx.i201, align 1
  %11 = load ptr, ptr %9, align 8
  %memberidx5 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 3
  store ptr %12, ptr %memberidx6, align 8
  %13 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0)
  %memberidx.i202 = getelementptr inbounds %Scope, ptr %13, i64 0, i32 5
  %14 = load ptr, ptr %memberidx1.i, align 8
  store ptr %14, ptr %memberidx.i202, align 8
  %15 = load ptr, ptr %13, align 8
  store ptr %15, ptr %memberidx1.i, align 8
  %memberidx9 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 6
  %16 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FunctionArg_, ptr %16, align 8
  %memberidx.i203 = getelementptr inbounds %Array_FunctionArg_, ptr %16, i64 0, i32 2
  store i64 0, ptr %memberidx.i203, align 4
  %memberidx1.i204 = getelementptr inbounds %Array_FunctionArg_, ptr %16, i64 0, i32 3
  store i64 8, ptr %memberidx1.i204, align 4
  %memberidx2.i = getelementptr inbounds %Array_FunctionArg_, ptr %16, i64 0, i32 1
  %17 = tail call ptr @malloc(i32 64)
  store ptr %17, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i203, align 4
  store ptr %16, ptr %memberidx9, align 8
  %18 = tail call fastcc i1 @is_operator_overload_name(ptr %12)
  br i1 %18, label %if.entry, label %ifend

common.ret:                                       ; preds = %Array_ClassMethod____sl__.exit, %for.entry, %TypeChecker_error.exit495, %TypeChecker_error.exit479, %TypeChecker_error.exit459, %TypeChecker_error.exit432, %TypeChecker_error.exit374, %TypeChecker_error.exit353, %TypeChecker_error.exit306, %TypeChecker_error.exit288, %TypeChecker_error.exit264, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %for.body
  %19 = tail call ptr @malloc(i32 64)
  store i64 6872337336460992351, ptr %19, align 8
  %20 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i, align 4
  %memberidx.i205 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %21 = load i64, ptr %memberidx.i205, align 4
  %.not.i = icmp eq i64 %21, 8
  br i1 %.not.i, label %ifend.i, label %string___eq__.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx2.i207 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i207, align 8
  %23 = tail call i64 @memcmp(ptr %22, ptr nonnull %19, i64 8)
  %24 = icmp eq i64 %23, 0
  br label %string___eq__.exit

string___eq__.exit:                               ; preds = %if.entry, %ifend.i
  %common.ret.op.i = phi i1 [ %24, %ifend.i ], [ false, %if.entry ]
  %25 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %25, ptr noundef nonnull align 8 dereferenceable(7) @119, i64 7, i1 false)
  %26 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %26, align 8
  %memberidx.i.i208 = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  store ptr %25, ptr %memberidx.i.i208, align 8
  %memberidx1.i.i209 = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i209, align 4
  %memberidx2.i.i210 = getelementptr inbounds %string, ptr %26, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i210, align 4
  %27 = load i64, ptr %memberidx.i205, align 4
  %.not.i213 = icmp eq i64 %27, 7
  br i1 %.not.i213, label %ifend.i217, label %string___eq__.exit218

ifend.i217:                                       ; preds = %string___eq__.exit
  %memberidx2.i215 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %28 = load ptr, ptr %memberidx2.i215, align 8
  %29 = tail call i64 @memcmp(ptr %28, ptr nonnull %25, i64 7)
  %30 = icmp eq i64 %29, 0
  br label %string___eq__.exit218

string___eq__.exit218:                            ; preds = %string___eq__.exit, %ifend.i217
  %common.ret.op.i214 = phi i1 [ %30, %ifend.i217 ], [ false, %string___eq__.exit ]
  %31 = or i1 %common.ret.op.i, %common.ret.op.i214
  br i1 %31, label %ifend14, label %else13

ifend:                                            ; preds = %ifend22, %for.body
  %memberidx36 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 6
  %32 = load i1, ptr %memberidx36, align 1
  store i1 %32, ptr %memberidx.i201, align 1
  %memberidx37 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 1
  %memberidx38 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 5
  %33 = load i1, ptr %memberidx38, align 1
  store i1 %33, ptr %memberidx37, align 1
  %memberidx39 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 2
  %memberidx40 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 3
  %34 = load i64, ptr %memberidx40, align 4
  store i64 %34, ptr %memberidx39, align 4
  %memberidx41 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 4
  %memberidx42 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 1
  %35 = load ptr, ptr %memberidx42, align 8
  %memberidx43 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 4
  %36 = load ptr, ptr %memberidx43, align 8
  %37 = load ptr, ptr %memberidx9, align 8
  %38 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr nonnull %0, ptr %35, ptr %36, ptr %37)
  store ptr %38, ptr %memberidx41, align 8
  %39 = tail call ptr @malloc(i32 64)
  store i64 6872337336460992351, ptr %39, align 8
  %40 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i.i219 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i.i219, align 8
  %memberidx1.i.i220 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i220, align 4
  %memberidx2.i.i221 = getelementptr inbounds %string, ptr %40, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i221, align 4
  %memberidx.i222 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %41 = load i64, ptr %memberidx.i222, align 4
  %.not.i224 = icmp eq i64 %41, 8
  br i1 %.not.i224, label %ifend.i228, label %ifend47

ifend.i228:                                       ; preds = %ifend
  %memberidx2.i226 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %42 = load ptr, ptr %memberidx2.i226, align 8
  %43 = tail call i64 @memcmp(ptr %42, ptr nonnull %39, i64 8)
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %if.entry45, label %ifend47

else13:                                           ; preds = %string___eq__.exit218
  %45 = tail call ptr @malloc(i32 88)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %45, ptr noundef nonnull align 8 dereferenceable(11) @106, i64 11, i1 false)
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i230 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i230, align 8
  %memberidx1.i.i231 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i231, align 4
  %memberidx2.i.i232 = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i232, align 4
  %47 = load i64, ptr %memberidx.i205, align 4
  %.not.i235 = icmp eq i64 %47, 11
  br i1 %.not.i235, label %ifend.i239, label %ifend14

ifend.i239:                                       ; preds = %else13
  %memberidx2.i237 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %48 = load ptr, ptr %memberidx2.i237, align 8
  %49 = tail call i64 @memcmp(ptr %48, ptr nonnull %45, i64 11)
  %50 = icmp eq i64 %49, 0
  %spec.select = select i1 %50, i64 2, i64 1
  br label %ifend14

ifend14:                                          ; preds = %ifend.i239, %string___eq__.exit218, %else13
  %51 = phi i64 [ 1, %else13 ], [ 0, %string___eq__.exit218 ], [ %spec.select, %ifend.i239 ]
  %memberidx18 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 1
  %52 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %Array_ArgNode_, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx19, align 4
  %.not200 = icmp eq i64 %53, %51
  br i1 %.not200, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %ifend14
  %54 = load ptr, ptr %12, align 8
  %memberidx23 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %54, i64 0, i32 5
  %55 = load ptr, ptr %memberidx23, align 8
  %56 = tail call ptr %55(ptr nonnull %12)
  %57 = load ptr, ptr %memberidx18, align 8
  %memberidx25 = getelementptr inbounds %Array_ArgNode_, ptr %57, i64 0, i32 2
  %58 = load i64, ptr %memberidx25, align 4
  %59 = alloca ptr, align 8
  %60 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %59, ptr nonnull @126, i64 %51, ptr %56, i64 %58)
  %61 = load ptr, ptr %59, align 8
  %62 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %62, align 8
  %memberidx.i241 = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i241, align 8
  %memberidx1.i242 = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  store i64 %60, ptr %memberidx1.i242, align 4
  %memberidx2.i243 = getelementptr inbounds %string, ptr %62, i64 0, i32 3
  store i64 %60, ptr %memberidx2.i243, align 4
  tail call void @free(ptr %56)
  %63 = load ptr, ptr %9, align 8
  %memberidx27 = getelementptr inbounds %Token, ptr %63, i64 0, i32 1
  %64 = load ptr, ptr %memberidx27, align 8
  %memberidx.i244 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %65 = load ptr, ptr %memberidx.i244, align 8
  %memberidx1.i245 = getelementptr inbounds %Compiler, ptr %65, i64 0, i32 6
  %66 = load ptr, ptr %memberidx1.i245, align 8
  %67 = call ptr @malloc(i32 24)
  store i64 4, ptr %67, align 4
  %memberidx1.i.i246 = getelementptr inbounds %FloError, ptr %67, i64 0, i32 2
  store ptr %64, ptr %memberidx1.i.i246, align 8
  %memberidx2.i.i247 = getelementptr inbounds %FloError, ptr %67, i64 0, i32 1
  store ptr %62, ptr %memberidx2.i.i247, align 8
  %memberidx.i.i248 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 2
  %68 = load i64, ptr %memberidx.i.i248, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 3
  %69 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %68, %69
  br i1 %.not.i.i, label %if.entry20.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry20.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry20
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 1
  %.pre691 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry20
  %70 = shl i64 %69, 1
  store i64 %70, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 1
  %71 = load ptr, ptr %memberidx2.i.i.i, align 8
  %72 = shl i64 %69, 4
  %73 = call ptr @realloc(ptr %71, i64 %72)
  store ptr %73, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i248, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry20.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %74 = phi ptr [ %.pre691, %if.entry20.TypeChecker_error.exit_crit_edge ], [ %73, %if.entry.i.i ]
  %75 = phi i64 [ %68, %if.entry20.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %76 = add i64 %75, 1
  store i64 %76, ptr %memberidx.i.i248, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %74, i64 %75
  store ptr %67, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend22:                                          ; preds = %ifend14
  %memberidx28 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 5
  %77 = load i1, ptr %memberidx28, align 1
  br i1 %77, label %if.entry29, label %ifend

if.entry29:                                       ; preds = %ifend22
  %78 = load ptr, ptr %12, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %78, i64 0, i32 5
  %79 = load ptr, ptr %memberidx32, align 8
  %80 = tail call ptr %79(ptr nonnull %12)
  %81 = alloca ptr, align 8
  %82 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %81, ptr nonnull @127, ptr %80)
  %83 = load ptr, ptr %81, align 8
  %84 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %84, align 8
  %memberidx.i249 = getelementptr inbounds %string, ptr %84, i64 0, i32 1
  store ptr %83, ptr %memberidx.i249, align 8
  %memberidx1.i250 = getelementptr inbounds %string, ptr %84, i64 0, i32 2
  store i64 %82, ptr %memberidx1.i250, align 4
  %memberidx2.i251 = getelementptr inbounds %string, ptr %84, i64 0, i32 3
  store i64 %82, ptr %memberidx2.i251, align 4
  tail call void @free(ptr %80)
  %85 = load ptr, ptr %9, align 8
  %memberidx34 = getelementptr inbounds %Token, ptr %85, i64 0, i32 1
  %86 = load ptr, ptr %memberidx34, align 8
  %memberidx.i252 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %87 = load ptr, ptr %memberidx.i252, align 8
  %memberidx1.i253 = getelementptr inbounds %Compiler, ptr %87, i64 0, i32 6
  %88 = load ptr, ptr %memberidx1.i253, align 8
  %89 = call ptr @malloc(i32 24)
  store i64 4, ptr %89, align 4
  %memberidx1.i.i254 = getelementptr inbounds %FloError, ptr %89, i64 0, i32 2
  store ptr %86, ptr %memberidx1.i.i254, align 8
  %memberidx2.i.i255 = getelementptr inbounds %FloError, ptr %89, i64 0, i32 1
  store ptr %84, ptr %memberidx2.i.i255, align 8
  %memberidx.i.i256 = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 2
  %90 = load i64, ptr %memberidx.i.i256, align 4
  %memberidx1.i2.i257 = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 3
  %91 = load i64, ptr %memberidx1.i2.i257, align 4
  %.not.i.i258 = icmp slt i64 %90, %91
  br i1 %.not.i.i258, label %if.entry29.TypeChecker_error.exit264_crit_edge, label %if.entry.i.i261

if.entry29.TypeChecker_error.exit264_crit_edge:   ; preds = %if.entry29
  %memberidx4.i.i262.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 1
  %.pre715 = load ptr, ptr %memberidx4.i.i262.phi.trans.insert, align 8
  br label %TypeChecker_error.exit264

if.entry.i.i261:                                  ; preds = %if.entry29
  %92 = shl i64 %91, 1
  store i64 %92, ptr %memberidx1.i2.i257, align 4
  %memberidx2.i.i.i260 = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 1
  %93 = load ptr, ptr %memberidx2.i.i.i260, align 8
  %94 = shl i64 %91, 4
  %95 = call ptr @realloc(ptr %93, i64 %94)
  store ptr %95, ptr %memberidx2.i.i.i260, align 8
  %.pre714 = load i64, ptr %memberidx.i.i256, align 4
  br label %TypeChecker_error.exit264

TypeChecker_error.exit264:                        ; preds = %if.entry29.TypeChecker_error.exit264_crit_edge, %if.entry.i.i261
  %96 = phi ptr [ %.pre715, %if.entry29.TypeChecker_error.exit264_crit_edge ], [ %95, %if.entry.i.i261 ]
  %97 = phi i64 [ %90, %if.entry29.TypeChecker_error.exit264_crit_edge ], [ %.pre714, %if.entry.i.i261 ]
  %98 = add i64 %97, 1
  store i64 %98, ptr %memberidx.i.i256, align 4
  %ptridx.i.i263 = getelementptr inbounds ptr, ptr %96, i64 %97
  store ptr %89, ptr %ptridx.i.i263, align 8
  br label %common.ret

if.entry45:                                       ; preds = %ifend.i228
  %99 = load ptr, ptr %memberidx41, align 8
  %memberidx49 = getelementptr inbounds %FunctionType, ptr %99, i64 0, i32 2
  %100 = load ptr, ptr %memberidx49, align 8
  %101 = load i64, ptr %100, align 4
  %102 = icmp eq i64 %101, 21
  br i1 %102, label %if.entry.i89.i, label %is_object.exit.i

if.entry.i89.i:                                   ; preds = %if.entry45, %if.entry.i89.i
  %.tr5.i.i = phi ptr [ %103, %if.entry.i89.i ], [ %100, %if.entry45 ]
  %memberidx1.i88.i = getelementptr inbounds %GenericType, ptr %.tr5.i.i, i64 0, i32 3
  %103 = load ptr, ptr %memberidx1.i88.i, align 8
  %104 = load i64, ptr %103, align 4
  %105 = icmp eq i64 %104, 21
  br i1 %105, label %if.entry.i89.i, label %is_object.exit.i

is_object.exit.i:                                 ; preds = %if.entry.i89.i, %if.entry45
  %.lcssa.i.i = phi i64 [ %101, %if.entry45 ], [ %104, %if.entry.i89.i ]
  %106 = icmp eq i64 %.lcssa.i.i, 13
  br i1 %106, label %ifend.i545, label %if.entry50

ifend.i545:                                       ; preds = %is_object.exit.i
  %107 = load ptr, ptr %0, align 8
  br label %tailrecurse.i.i

tailrecurse.i.i:                                  ; preds = %if.entry.i93.i, %ifend.i545
  %108 = phi i64 [ %101, %ifend.i545 ], [ %.pre.i, %if.entry.i93.i ]
  %.tr11.i.i = phi ptr [ %100, %ifend.i545 ], [ %109, %if.entry.i93.i ]
  switch i64 %108, label %get_class_from_type.exit.i [
    i64 21, label %if.entry.i93.i
    i64 13, label %if.entry3.i.i
  ]

if.entry.i93.i:                                   ; preds = %tailrecurse.i.i
  %memberidx1.i92.i = getelementptr inbounds %GenericType, ptr %.tr11.i.i, i64 0, i32 3
  %109 = load ptr, ptr %memberidx1.i92.i, align 8
  %.pre.i = load i64, ptr %109, align 4
  br label %tailrecurse.i.i

if.entry3.i.i:                                    ; preds = %tailrecurse.i.i
  %memberidx6.i94.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.i, i64 0, i32 1
  %110 = load ptr, ptr %memberidx6.i94.i, align 8
  %memberidx.i.i95.i = getelementptr inbounds %Program, ptr %107, i64 0, i32 1
  %111 = load ptr, ptr %memberidx.i.i95.i, align 8
  %112 = load i64, ptr %110, align 4
  %memberidx.i.i.i96.i = getelementptr inbounds %Array_Module_, ptr %111, i64 0, i32 1
  %113 = load ptr, ptr %memberidx.i.i.i96.i, align 8
  %ptridx.i.i.i.i546 = getelementptr inbounds ptr, ptr %113, i64 %112
  %114 = load ptr, ptr %ptridx.i.i.i.i546, align 8
  %memberidx2.i.i97.i = getelementptr inbounds %Module, ptr %114, i64 0, i32 4
  %115 = load ptr, ptr %memberidx2.i.i97.i, align 8
  %memberidx3.i.i98.i = getelementptr inbounds %TypeId, ptr %110, i64 0, i32 2
  %116 = load i64, ptr %memberidx3.i.i98.i, align 4
  %memberidx.i5.i.i.i547 = getelementptr inbounds %Array_Class_, ptr %115, i64 0, i32 1
  %117 = load ptr, ptr %memberidx.i5.i.i.i547, align 8
  %ptridx.i6.i.i.i548 = getelementptr inbounds ptr, ptr %117, i64 %116
  %118 = load ptr, ptr %ptridx.i6.i.i.i548, align 8
  br label %get_class_from_type.exit.i

get_class_from_type.exit.i:                       ; preds = %tailrecurse.i.i, %if.entry3.i.i
  %common.ret.op.i91.i = phi ptr [ %118, %if.entry3.i.i ], [ null, %tailrecurse.i.i ]
  %memberidx1.i549 = getelementptr inbounds %Class, ptr %common.ret.op.i91.i, i64 0, i32 6
  %119 = load ptr, ptr %memberidx1.i549, align 8
  %120 = tail call ptr @malloc(i32 32)
  store i32 1701736292, ptr %120, align 8
  %121 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %121, align 8
  %memberidx.i.i.i550 = getelementptr inbounds %string, ptr %121, i64 0, i32 1
  store ptr %120, ptr %memberidx.i.i.i550, align 8
  %memberidx1.i.i.i551 = getelementptr inbounds %string, ptr %121, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i551, align 4
  %memberidx2.i.i.i552 = getelementptr inbounds %string, ptr %121, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i552, align 4
  %122 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %121)
  %memberidx.i.i553 = getelementptr inbounds %Map_string_PropId_, ptr %119, i64 0, i32 1
  %123 = load i64, ptr %memberidx.i.i553, align 4
  %124 = srem i64 %122, %123
  %125 = load ptr, ptr %119, align 8
  %ptridx.i.i554 = getelementptr inbounds ptr, ptr %125, i64 %124
  %126 = load ptr, ptr %ptridx.i.i554, align 8
  %.not.i.i555 = icmp eq ptr %126, null
  br i1 %.not.i.i555, label %if.entry50, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %get_class_from_type.exit.i, %else.i.i
  %127 = phi ptr [ %137, %else.i.i ], [ %125, %get_class_from_type.exit.i ]
  %128 = phi i64 [ %138, %else.i.i ], [ %123, %get_class_from_type.exit.i ]
  %129 = phi ptr [ %141, %else.i.i ], [ %126, %get_class_from_type.exit.i ]
  %hash.0.i.i = phi i64 [ %140, %else.i.i ], [ %124, %get_class_from_type.exit.i ]
  %130 = load ptr, ptr %129, align 8
  %memberidx.i.i29.i = getelementptr inbounds %string, ptr %130, i64 0, i32 2
  %131 = load i64, ptr %memberidx.i.i29.i, align 4
  %132 = load i64, ptr %memberidx1.i.i.i551, align 4
  %.not.i.i.i = icmp eq i64 %131, %132
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %memberidx2.i.i31.i = getelementptr inbounds %string, ptr %130, i64 0, i32 1
  %133 = load ptr, ptr %memberidx2.i.i31.i, align 8
  %134 = load ptr, ptr %memberidx.i.i.i550, align 8
  %135 = tail call i64 @memcmp(ptr %133, ptr %134, i64 %131)
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %while.end.i.i, label %ifend.i.i.else.i_crit_edge.i

ifend.i.i.else.i_crit_edge.i:                     ; preds = %ifend.i.i.i
  %.pre103.i = load i64, ptr %memberidx.i.i553, align 4
  %.pre104.i = load ptr, ptr %119, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre105.pre.i = load ptr, ptr %119, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert.i = getelementptr inbounds ptr, ptr %.pre105.pre.i, i64 %hash.0.i.i
  %.pre106.pre.i = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert.i, align 8
  %.not29.i.i = icmp eq ptr %.pre106.pre.i, null
  br i1 %.not29.i.i, label %if.entry50, label %Map_string_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.else.i_crit_edge.i, %while.entry.i.i
  %137 = phi ptr [ %.pre104.i, %ifend.i.i.else.i_crit_edge.i ], [ %127, %while.entry.i.i ]
  %138 = phi i64 [ %.pre103.i, %ifend.i.i.else.i_crit_edge.i ], [ %128, %while.entry.i.i ]
  %139 = add i64 %hash.0.i.i, 1
  %140 = srem i64 %139, %138
  %ptridx7.i.i = getelementptr inbounds ptr, ptr %137, i64 %140
  %141 = load ptr, ptr %ptridx7.i.i, align 8
  %.not30.i.i = icmp eq ptr %141, null
  br i1 %.not30.i.i, label %if.entry50, label %while.entry.i.i

Map_string_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx15.i.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre106.pre.i, i64 0, i32 1
  %142 = load ptr, ptr %memberidx15.i.i, align 8
  %143 = icmp eq ptr %142, null
  br i1 %143, label %if.entry50, label %ifend4.i

ifend4.i:                                         ; preds = %Map_string_PropId____getitem__.exit.i
  %144 = load ptr, ptr %0, align 8
  %memberidx.i.i32.i = getelementptr inbounds %PropId, ptr %142, i64 0, i32 1
  %145 = load ptr, ptr %memberidx.i.i32.i, align 8
  %memberidx.i.i.i.i556 = getelementptr inbounds %Program, ptr %144, i64 0, i32 1
  %146 = load ptr, ptr %memberidx.i.i.i.i556, align 8
  %147 = load i64, ptr %145, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %146, i64 0, i32 1
  %148 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %148, i64 %147
  %149 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %149, i64 0, i32 4
  %150 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %145, i64 0, i32 2
  %151 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %150, i64 0, i32 1
  %152 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %ptridx.i6.i.i.i.i = getelementptr inbounds ptr, ptr %152, i64 %151
  %153 = load ptr, ptr %ptridx.i6.i.i.i.i, align 8
  %154 = load i64, ptr %142, align 4
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %if.entry.i.i560, label %ifend.i.i563

if.entry.i.i560:                                  ; preds = %ifend4.i
  %memberidx1.i.i557 = getelementptr inbounds %Class, ptr %153, i64 0, i32 5
  %156 = load ptr, ptr %memberidx1.i.i557, align 8
  %memberidx2.i.i558 = getelementptr inbounds %PropId, ptr %142, i64 0, i32 2
  %157 = load i64, ptr %memberidx2.i.i558, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %156, i64 0, i32 1
  %158 = load ptr, ptr %memberidx.i12.i.i, align 8
  %ptridx.i13.i.i = getelementptr inbounds ptr, ptr %158, i64 %157
  %159 = load ptr, ptr %ptridx.i13.i.i, align 8
  %memberidx3.i.i559 = getelementptr inbounds %ClassMethod, ptr %159, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i563:                                     ; preds = %ifend4.i
  %memberidx4.i.i561 = getelementptr inbounds %Class, ptr %153, i64 0, i32 4
  %160 = load ptr, ptr %memberidx4.i.i561, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %142, i64 0, i32 2
  %161 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %160, i64 0, i32 1
  %162 = load ptr, ptr %memberidx.i11.i.i, align 8
  %ptridx.i.i.i562 = getelementptr inbounds ptr, ptr %162, i64 %161
  %163 = load ptr, ptr %ptridx.i.i.i562, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %163, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i563, %if.entry.i.i560
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i559, %if.entry.i.i560 ], [ %memberidx6.i.i, %ifend.i.i563 ]
  %common.ret.op.i33.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  %164 = load i64, ptr %common.ret.op.i33.i, align 4
  %.not.i564 = icmp eq i64 %164, 0
  br i1 %.not.i564, label %ifend9.i, label %if.entry50

ifend9.i:                                         ; preds = %get_class_prop_type.exit.i
  %165 = load ptr, ptr %memberidx1.i549, align 8
  %166 = tail call ptr @malloc(i32 32)
  store i32 1954047342, ptr %166, align 8
  %167 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %167, align 8
  %memberidx.i.i34.i = getelementptr inbounds %string, ptr %167, i64 0, i32 1
  store ptr %166, ptr %memberidx.i.i34.i, align 8
  %memberidx1.i.i35.i = getelementptr inbounds %string, ptr %167, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i35.i, align 4
  %memberidx2.i.i36.i = getelementptr inbounds %string, ptr %167, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i36.i, align 4
  %168 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %167)
  %memberidx.i37.i = getelementptr inbounds %Map_string_PropId_, ptr %165, i64 0, i32 1
  %169 = load i64, ptr %memberidx.i37.i, align 4
  %170 = srem i64 %168, %169
  %171 = load ptr, ptr %165, align 8
  %ptridx.i38.i = getelementptr inbounds ptr, ptr %171, i64 %170
  %172 = load ptr, ptr %ptridx.i38.i, align 8
  %.not.i39.i = icmp eq ptr %172, null
  br i1 %.not.i39.i, label %if.entry50, label %while.entry.i45.i

while.entry.i45.i:                                ; preds = %ifend9.i, %else.i57.i
  %173 = phi ptr [ %183, %else.i57.i ], [ %171, %ifend9.i ]
  %174 = phi i64 [ %184, %else.i57.i ], [ %169, %ifend9.i ]
  %175 = phi ptr [ %187, %else.i57.i ], [ %172, %ifend9.i ]
  %hash.0.i40.i = phi i64 [ %186, %else.i57.i ], [ %170, %ifend9.i ]
  %176 = load ptr, ptr %175, align 8
  %memberidx.i.i42.i = getelementptr inbounds %string, ptr %176, i64 0, i32 2
  %177 = load i64, ptr %memberidx.i.i42.i, align 4
  %178 = load i64, ptr %memberidx1.i.i35.i, align 4
  %.not.i.i44.i = icmp eq i64 %177, %178
  br i1 %.not.i.i44.i, label %ifend.i.i48.i, label %else.i57.i

ifend.i.i48.i:                                    ; preds = %while.entry.i45.i
  %memberidx2.i.i46.i = getelementptr inbounds %string, ptr %176, i64 0, i32 1
  %179 = load ptr, ptr %memberidx2.i.i46.i, align 8
  %180 = load ptr, ptr %memberidx.i.i34.i, align 8
  %181 = tail call i64 @memcmp(ptr %179, ptr %180, i64 %177)
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %while.end.i54.i, label %ifend.i.i48.else.i57_crit_edge.i

ifend.i.i48.else.i57_crit_edge.i:                 ; preds = %ifend.i.i48.i
  %.pre107.i = load i64, ptr %memberidx.i37.i, align 4
  %.pre108.i = load ptr, ptr %165, align 8
  br label %else.i57.i

while.end.i54.i:                                  ; preds = %ifend.i.i48.i
  %.pre109.pre.i = load ptr, ptr %165, align 8
  %ptridx9.i52.phi.trans.insert.phi.trans.insert.i = getelementptr inbounds ptr, ptr %.pre109.pre.i, i64 %hash.0.i40.i
  %.pre110.pre.i = load ptr, ptr %ptridx9.i52.phi.trans.insert.phi.trans.insert.i, align 8
  %.not29.i53.i = icmp eq ptr %.pre110.pre.i, null
  br i1 %.not29.i53.i, label %if.entry50, label %Map_string_PropId____getitem__.exit61.i

else.i57.i:                                       ; preds = %ifend.i.i48.else.i57_crit_edge.i, %while.entry.i45.i
  %183 = phi ptr [ %.pre108.i, %ifend.i.i48.else.i57_crit_edge.i ], [ %173, %while.entry.i45.i ]
  %184 = phi i64 [ %.pre107.i, %ifend.i.i48.else.i57_crit_edge.i ], [ %174, %while.entry.i45.i ]
  %185 = add i64 %hash.0.i40.i, 1
  %186 = srem i64 %185, %184
  %ptridx7.i55.i = getelementptr inbounds ptr, ptr %183, i64 %186
  %187 = load ptr, ptr %ptridx7.i55.i, align 8
  %.not30.i56.i = icmp eq ptr %187, null
  br i1 %.not30.i56.i, label %if.entry50, label %while.entry.i45.i

Map_string_PropId____getitem__.exit61.i:          ; preds = %while.end.i54.i
  %memberidx15.i59.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre110.pre.i, i64 0, i32 1
  %188 = load ptr, ptr %memberidx15.i59.i, align 8
  %189 = icmp eq ptr %188, null
  br i1 %189, label %if.entry50, label %ifend13.i

ifend13.i:                                        ; preds = %Map_string_PropId____getitem__.exit61.i
  %190 = load ptr, ptr %0, align 8
  %memberidx.i.i62.i = getelementptr inbounds %PropId, ptr %188, i64 0, i32 1
  %191 = load ptr, ptr %memberidx.i.i62.i, align 8
  %memberidx.i.i.i63.i = getelementptr inbounds %Program, ptr %190, i64 0, i32 1
  %192 = load ptr, ptr %memberidx.i.i.i63.i, align 8
  %193 = load i64, ptr %191, align 4
  %memberidx.i.i.i.i64.i = getelementptr inbounds %Array_Module_, ptr %192, i64 0, i32 1
  %194 = load ptr, ptr %memberidx.i.i.i.i64.i, align 8
  %ptridx.i.i.i.i65.i = getelementptr inbounds ptr, ptr %194, i64 %193
  %195 = load ptr, ptr %ptridx.i.i.i.i65.i, align 8
  %memberidx2.i.i.i66.i = getelementptr inbounds %Module, ptr %195, i64 0, i32 4
  %196 = load ptr, ptr %memberidx2.i.i.i66.i, align 8
  %memberidx3.i.i.i67.i = getelementptr inbounds %TypeId, ptr %191, i64 0, i32 2
  %197 = load i64, ptr %memberidx3.i.i.i67.i, align 4
  %memberidx.i5.i.i.i68.i = getelementptr inbounds %Array_Class_, ptr %196, i64 0, i32 1
  %198 = load ptr, ptr %memberidx.i5.i.i.i68.i, align 8
  %ptridx.i6.i.i.i69.i = getelementptr inbounds ptr, ptr %198, i64 %197
  %199 = load ptr, ptr %ptridx.i6.i.i.i69.i, align 8
  %200 = load i64, ptr %188, align 4
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %if.entry.i77.i, label %ifend.i83.i

if.entry.i77.i:                                   ; preds = %ifend13.i
  %memberidx1.i72.i = getelementptr inbounds %Class, ptr %199, i64 0, i32 5
  %202 = load ptr, ptr %memberidx1.i72.i, align 8
  %memberidx2.i73.i = getelementptr inbounds %PropId, ptr %188, i64 0, i32 2
  %203 = load i64, ptr %memberidx2.i73.i, align 4
  %memberidx.i12.i74.i = getelementptr inbounds %Array_ClassMethod_, ptr %202, i64 0, i32 1
  %204 = load ptr, ptr %memberidx.i12.i74.i, align 8
  %ptridx.i13.i75.i = getelementptr inbounds ptr, ptr %204, i64 %203
  %205 = load ptr, ptr %ptridx.i13.i75.i, align 8
  %memberidx3.i76.i = getelementptr inbounds %ClassMethod, ptr %205, i64 0, i32 4
  br label %get_class_prop_type.exit84.i

ifend.i83.i:                                      ; preds = %ifend13.i
  %memberidx4.i78.i = getelementptr inbounds %Class, ptr %199, i64 0, i32 4
  %206 = load ptr, ptr %memberidx4.i78.i, align 8
  %memberidx5.i79.i = getelementptr inbounds %PropId, ptr %188, i64 0, i32 2
  %207 = load i64, ptr %memberidx5.i79.i, align 4
  %memberidx.i11.i80.i = getelementptr inbounds %Array_ClassField_, ptr %206, i64 0, i32 1
  %208 = load ptr, ptr %memberidx.i11.i80.i, align 8
  %ptridx.i.i81.i = getelementptr inbounds ptr, ptr %208, i64 %207
  %209 = load ptr, ptr %ptridx.i.i81.i, align 8
  %memberidx6.i82.i = getelementptr inbounds %ClassField, ptr %209, i64 0, i32 4
  br label %get_class_prop_type.exit84.i

get_class_prop_type.exit84.i:                     ; preds = %ifend.i83.i, %if.entry.i77.i
  %common.ret.op.in.i70.i = phi ptr [ %memberidx3.i76.i, %if.entry.i77.i ], [ %memberidx6.i82.i, %ifend.i83.i ]
  %common.ret.op.i71.i = load ptr, ptr %common.ret.op.in.i70.i, align 8
  %210 = load i64, ptr %common.ret.op.i71.i, align 4
  %.not27.i = icmp eq i64 %210, 17
  br i1 %.not27.i, label %TypeChecker_is_iteratable.exit, label %if.entry50

TypeChecker_is_iteratable.exit:                   ; preds = %get_class_prop_type.exit84.i
  %memberidx19.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i71.i, i64 0, i32 1
  %211 = load ptr, ptr %memberidx19.i, align 8
  %memberidx20.i = getelementptr inbounds %Array_Type_, ptr %211, i64 0, i32 2
  %212 = load i64, ptr %memberidx20.i, align 4
  %.not28.i = icmp eq i64 %212, 0
  br i1 %.not28.i, label %ifend47, label %if.entry50

ifend47:                                          ; preds = %ifend, %TypeChecker_is_iteratable.exit, %ifend.i228
  %213 = load ptr, ptr %memberidx55, align 8
  %214 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %12)
  %memberidx.i265 = getelementptr inbounds %Map_string_PropId_, ptr %213, i64 0, i32 1
  %215 = load i64, ptr %memberidx.i265, align 4
  %216 = srem i64 %214, %215
  %217 = load ptr, ptr %213, align 8
  %ptridx.i266 = getelementptr inbounds ptr, ptr %217, i64 %216
  %218 = load ptr, ptr %ptridx.i266, align 8
  %.not.i267 = icmp eq ptr %218, null
  br i1 %.not.i267, label %else57, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend47
  %memberidx3.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %219 = phi ptr [ %229, %else.i ], [ %217, %while.entry.i.preheader ]
  %220 = phi i64 [ %230, %else.i ], [ %215, %while.entry.i.preheader ]
  %221 = phi ptr [ %233, %else.i ], [ %218, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %232, %else.i ], [ %216, %while.entry.i.preheader ]
  %222 = load ptr, ptr %221, align 8
  %memberidx.i.i268 = getelementptr inbounds %string, ptr %222, i64 0, i32 2
  %223 = load i64, ptr %memberidx.i.i268, align 4
  %224 = load i64, ptr %memberidx.i222, align 4
  %.not.i.i270 = icmp eq i64 %223, %224
  br i1 %.not.i.i270, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i271 = getelementptr inbounds %string, ptr %222, i64 0, i32 1
  %225 = load ptr, ptr %memberidx2.i.i271, align 8
  %226 = load ptr, ptr %memberidx3.i.i, align 8
  %227 = tail call i64 @memcmp(ptr %225, ptr %226, i64 %223)
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre692 = load i64, ptr %memberidx.i265, align 4
  %.pre693 = load ptr, ptr %213, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre694.pre = load ptr, ptr %213, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre694.pre, i64 %hash.0.i
  %.pre695.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre695.pre, null
  br i1 %.not29.i, label %else57, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %229 = phi ptr [ %.pre693, %ifend.i.i.else.i_crit_edge ], [ %219, %while.entry.i ]
  %230 = phi i64 [ %.pre692, %ifend.i.i.else.i_crit_edge ], [ %220, %while.entry.i ]
  %231 = add i64 %hash.0.i, 1
  %232 = srem i64 %231, %230
  %ptridx7.i = getelementptr inbounds ptr, ptr %229, i64 %232
  %233 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %233, null
  br i1 %.not30.i, label %else57, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre695.pre, i64 0, i32 1
  %234 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %234, null
  br i1 %.not, label %else57, label %if.entry56

if.entry50:                                       ; preds = %ifend9.i, %get_class_from_type.exit.i, %while.end.i54.i, %while.end.i.i, %get_class_prop_type.exit84.i, %Map_string_PropId____getitem__.exit61.i, %get_class_prop_type.exit.i, %Map_string_PropId____getitem__.exit.i, %is_object.exit.i, %TypeChecker_is_iteratable.exit, %else.i.i, %else.i57.i
  %235 = tail call ptr @malloc(i32 592)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(74) %235, ptr noundef nonnull align 8 dereferenceable(74) @128, i64 74, i1 false)
  %236 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %236, align 8
  %memberidx.i.i273 = getelementptr inbounds %string, ptr %236, i64 0, i32 1
  store ptr %235, ptr %memberidx.i.i273, align 8
  %memberidx1.i.i274 = getelementptr inbounds %string, ptr %236, i64 0, i32 2
  store i64 74, ptr %memberidx1.i.i274, align 4
  %memberidx2.i.i275 = getelementptr inbounds %string, ptr %236, i64 0, i32 3
  store i64 74, ptr %memberidx2.i.i275, align 4
  %237 = load ptr, ptr %9, align 8
  %memberidx54 = getelementptr inbounds %Token, ptr %237, i64 0, i32 1
  %238 = load ptr, ptr %memberidx54, align 8
  %memberidx.i276 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %239 = load ptr, ptr %memberidx.i276, align 8
  %memberidx1.i277 = getelementptr inbounds %Compiler, ptr %239, i64 0, i32 6
  %240 = load ptr, ptr %memberidx1.i277, align 8
  %241 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %241, align 4
  %memberidx1.i.i278 = getelementptr inbounds %FloError, ptr %241, i64 0, i32 2
  store ptr %238, ptr %memberidx1.i.i278, align 8
  %memberidx2.i.i279 = getelementptr inbounds %FloError, ptr %241, i64 0, i32 1
  store ptr %236, ptr %memberidx2.i.i279, align 8
  %memberidx.i.i280 = getelementptr inbounds %Array_FloError_, ptr %240, i64 0, i32 2
  %242 = load i64, ptr %memberidx.i.i280, align 4
  %memberidx1.i2.i281 = getelementptr inbounds %Array_FloError_, ptr %240, i64 0, i32 3
  %243 = load i64, ptr %memberidx1.i2.i281, align 4
  %.not.i.i282 = icmp slt i64 %242, %243
  br i1 %.not.i.i282, label %if.entry50.TypeChecker_error.exit288_crit_edge, label %if.entry.i.i285

if.entry50.TypeChecker_error.exit288_crit_edge:   ; preds = %if.entry50
  %memberidx4.i.i286.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %240, i64 0, i32 1
  %.pre713 = load ptr, ptr %memberidx4.i.i286.phi.trans.insert, align 8
  br label %TypeChecker_error.exit288

if.entry.i.i285:                                  ; preds = %if.entry50
  %244 = shl i64 %243, 1
  store i64 %244, ptr %memberidx1.i2.i281, align 4
  %memberidx2.i.i.i284 = getelementptr inbounds %Array_FloError_, ptr %240, i64 0, i32 1
  %245 = load ptr, ptr %memberidx2.i.i.i284, align 8
  %246 = shl i64 %243, 4
  %247 = tail call ptr @realloc(ptr %245, i64 %246)
  store ptr %247, ptr %memberidx2.i.i.i284, align 8
  %.pre712 = load i64, ptr %memberidx.i.i280, align 4
  br label %TypeChecker_error.exit288

TypeChecker_error.exit288:                        ; preds = %if.entry50.TypeChecker_error.exit288_crit_edge, %if.entry.i.i285
  %248 = phi ptr [ %.pre713, %if.entry50.TypeChecker_error.exit288_crit_edge ], [ %247, %if.entry.i.i285 ]
  %249 = phi i64 [ %242, %if.entry50.TypeChecker_error.exit288_crit_edge ], [ %.pre712, %if.entry.i.i285 ]
  %250 = add i64 %249, 1
  store i64 %250, ptr %memberidx.i.i280, align 4
  %ptridx.i.i287 = getelementptr inbounds ptr, ptr %248, i64 %249
  store ptr %241, ptr %ptridx.i.i287, align 8
  br label %common.ret

if.entry56:                                       ; preds = %Map_string_PropId____getitem__.exit
  %memberidx59 = getelementptr inbounds %PropId, ptr %234, i64 0, i32 1
  %251 = load ptr, ptr %memberidx59, align 8
  %252 = load ptr, ptr %1, align 8
  %253 = icmp eq ptr %251, %252
  br i1 %253, label %if.entry61, label %ifend63

else57:                                           ; preds = %else.i, %ifend47, %while.end.i, %Map_string_PropId____getitem__.exit
  %memberidx93 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 9
  store i64 %current_vtable_index.0631, ptr %memberidx93, align 4
  br label %ifend58

ifend58:                                          ; preds = %else57, %get_vtable_index.exit
  %254 = tail call ptr @malloc(i32 24)
  %255 = load ptr, ptr %1, align 8
  store i64 0, ptr %254, align 4
  %memberidx1.i289 = getelementptr inbounds %PropId, ptr %254, i64 0, i32 1
  store ptr %255, ptr %memberidx1.i289, align 8
  %memberidx2.i290 = getelementptr inbounds %PropId, ptr %254, i64 0, i32 2
  store i64 %i.0632, ptr %memberidx2.i290, align 4
  store ptr %254, ptr %10, align 8
  %256 = load i1, ptr %memberidx38, align 1
  br i1 %256, label %if.entry97, label %else98

if.entry61:                                       ; preds = %if.entry56
  %257 = load ptr, ptr %12, align 8
  %memberidx64 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %257, i64 0, i32 5
  %258 = load ptr, ptr %memberidx64, align 8
  %259 = tail call ptr %258(ptr nonnull %12)
  %memberidx65 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %260 = load ptr, ptr %memberidx65, align 8
  %261 = load ptr, ptr %260, align 8
  %memberidx66 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %261, i64 0, i32 5
  %262 = load ptr, ptr %memberidx66, align 8
  %263 = tail call ptr %262(ptr nonnull %260)
  %264 = alloca ptr, align 8
  %265 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %264, ptr nonnull @129, ptr %259, ptr %263)
  %266 = load ptr, ptr %264, align 8
  %267 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %267, align 8
  %memberidx.i291 = getelementptr inbounds %string, ptr %267, i64 0, i32 1
  store ptr %266, ptr %memberidx.i291, align 8
  %memberidx1.i292 = getelementptr inbounds %string, ptr %267, i64 0, i32 2
  store i64 %265, ptr %memberidx1.i292, align 4
  %memberidx2.i293 = getelementptr inbounds %string, ptr %267, i64 0, i32 3
  store i64 %265, ptr %memberidx2.i293, align 4
  tail call void @free(ptr %259)
  tail call void @free(ptr %263)
  %268 = load ptr, ptr %9, align 8
  %memberidx68 = getelementptr inbounds %Token, ptr %268, i64 0, i32 1
  %269 = load ptr, ptr %memberidx68, align 8
  %memberidx.i294 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %270 = load ptr, ptr %memberidx.i294, align 8
  %memberidx1.i295 = getelementptr inbounds %Compiler, ptr %270, i64 0, i32 6
  %271 = load ptr, ptr %memberidx1.i295, align 8
  %272 = call ptr @malloc(i32 24)
  store i64 1, ptr %272, align 4
  %memberidx1.i.i296 = getelementptr inbounds %FloError, ptr %272, i64 0, i32 2
  store ptr %269, ptr %memberidx1.i.i296, align 8
  %memberidx2.i.i297 = getelementptr inbounds %FloError, ptr %272, i64 0, i32 1
  store ptr %267, ptr %memberidx2.i.i297, align 8
  %memberidx.i.i298 = getelementptr inbounds %Array_FloError_, ptr %271, i64 0, i32 2
  %273 = load i64, ptr %memberidx.i.i298, align 4
  %memberidx1.i2.i299 = getelementptr inbounds %Array_FloError_, ptr %271, i64 0, i32 3
  %274 = load i64, ptr %memberidx1.i2.i299, align 4
  %.not.i.i300 = icmp slt i64 %273, %274
  br i1 %.not.i.i300, label %if.entry61.TypeChecker_error.exit306_crit_edge, label %if.entry.i.i303

if.entry61.TypeChecker_error.exit306_crit_edge:   ; preds = %if.entry61
  %memberidx4.i.i304.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %271, i64 0, i32 1
  %.pre701 = load ptr, ptr %memberidx4.i.i304.phi.trans.insert, align 8
  br label %TypeChecker_error.exit306

if.entry.i.i303:                                  ; preds = %if.entry61
  %275 = shl i64 %274, 1
  store i64 %275, ptr %memberidx1.i2.i299, align 4
  %memberidx2.i.i.i302 = getelementptr inbounds %Array_FloError_, ptr %271, i64 0, i32 1
  %276 = load ptr, ptr %memberidx2.i.i.i302, align 8
  %277 = shl i64 %274, 4
  %278 = call ptr @realloc(ptr %276, i64 %277)
  store ptr %278, ptr %memberidx2.i.i.i302, align 8
  %.pre700 = load i64, ptr %memberidx.i.i298, align 4
  br label %TypeChecker_error.exit306

TypeChecker_error.exit306:                        ; preds = %if.entry61.TypeChecker_error.exit306_crit_edge, %if.entry.i.i303
  %279 = phi ptr [ %.pre701, %if.entry61.TypeChecker_error.exit306_crit_edge ], [ %278, %if.entry.i.i303 ]
  %280 = phi i64 [ %273, %if.entry61.TypeChecker_error.exit306_crit_edge ], [ %.pre700, %if.entry.i.i303 ]
  %281 = add i64 %280, 1
  store i64 %281, ptr %memberidx.i.i298, align 4
  %ptridx.i.i305 = getelementptr inbounds ptr, ptr %279, i64 %280
  store ptr %272, ptr %ptridx.i.i305, align 8
  br label %common.ret

ifend63:                                          ; preds = %if.entry56
  %282 = load ptr, ptr %0, align 8
  %memberidx.i.i.i308 = getelementptr inbounds %Program, ptr %282, i64 0, i32 1
  %283 = load ptr, ptr %memberidx.i.i.i308, align 8
  %284 = load i64, ptr %251, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %283, i64 0, i32 1
  %285 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %285, i64 %284
  %286 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i309 = getelementptr inbounds %Module, ptr %286, i64 0, i32 4
  %287 = load ptr, ptr %memberidx2.i.i.i309, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %251, i64 0, i32 2
  %288 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %287, i64 0, i32 1
  %289 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %289, i64 %288
  %290 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %291 = load i64, ptr %234, align 4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %if.entry.i331, label %ifend.i337

if.entry.i331:                                    ; preds = %ifend63
  %memberidx1.i311 = getelementptr inbounds %Class, ptr %290, i64 0, i32 5
  %293 = load ptr, ptr %memberidx1.i311, align 8
  %memberidx2.i312 = getelementptr inbounds %PropId, ptr %234, i64 0, i32 2
  %294 = load i64, ptr %memberidx2.i312, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %293, i64 0, i32 1
  %295 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %295, i64 %294
  %296 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i313 = getelementptr inbounds %ClassMethod, ptr %296, i64 0, i32 4
  %parent_prop_visibility570 = alloca i64, align 8
  %memberidx3.i330 = getelementptr inbounds %ClassMethod, ptr %296, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i337:                                       ; preds = %ifend63
  %memberidx4.i = getelementptr inbounds %Class, ptr %290, i64 0, i32 4
  %297 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %234, i64 0, i32 2
  %298 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %297, i64 0, i32 1
  %299 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i314 = getelementptr inbounds ptr, ptr %299, i64 %298
  %300 = load ptr, ptr %ptridx.i.i314, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %300, i64 0, i32 4
  %parent_prop_visibility = alloca i64, align 8
  %memberidx6.i336 = getelementptr inbounds %ClassField, ptr %300, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i331, %ifend.i337
  %parent_prop_visibility573 = phi ptr [ %parent_prop_visibility570, %if.entry.i331 ], [ %parent_prop_visibility, %ifend.i337 ]
  %common.ret.op.i310571.in = phi ptr [ %memberidx3.i313, %if.entry.i331 ], [ %memberidx6.i, %ifend.i337 ]
  %common.ret.op.in.i324 = phi ptr [ %memberidx3.i330, %if.entry.i331 ], [ %memberidx6.i336, %ifend.i337 ]
  %common.ret.op.i310571 = load ptr, ptr %common.ret.op.i310571.in, align 8
  %common.ret.op.i325 = load i64, ptr %common.ret.op.in.i324, align 4
  store i64 %common.ret.op.i325, ptr %parent_prop_visibility573, align 8
  %301 = load ptr, ptr %memberidx41, align 8
  %302 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i310571, ptr %301)
  br i1 %302, label %ifend74, label %if.entry72

if.entry72:                                       ; preds = %get_class_prop_visibility.exit
  %303 = load ptr, ptr %12, align 8
  %memberidx75 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %303, i64 0, i32 5
  %304 = load ptr, ptr %memberidx75, align 8
  %305 = tail call ptr %304(ptr nonnull %12)
  %memberidx76 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %306 = load ptr, ptr %memberidx76, align 8
  %307 = load ptr, ptr %306, align 8
  %memberidx77 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %307, i64 0, i32 5
  %308 = load ptr, ptr %memberidx77, align 8
  %309 = tail call ptr %308(ptr nonnull %306)
  %310 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i310571)
  %311 = load ptr, ptr %310, align 8
  %memberidx78 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %311, i64 0, i32 5
  %312 = load ptr, ptr %memberidx78, align 8
  %313 = tail call ptr %312(ptr nonnull %310)
  %314 = alloca ptr, align 8
  %315 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %314, ptr nonnull @130, ptr %305, ptr %309, ptr %313)
  %316 = load ptr, ptr %314, align 8
  %317 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %317, align 8
  %memberidx.i338 = getelementptr inbounds %string, ptr %317, i64 0, i32 1
  store ptr %316, ptr %memberidx.i338, align 8
  %memberidx1.i339 = getelementptr inbounds %string, ptr %317, i64 0, i32 2
  store i64 %315, ptr %memberidx1.i339, align 4
  %memberidx2.i340 = getelementptr inbounds %string, ptr %317, i64 0, i32 3
  store i64 %315, ptr %memberidx2.i340, align 4
  tail call void @free(ptr %305)
  tail call void @free(ptr %309)
  tail call void @free(ptr %313)
  %318 = load ptr, ptr %9, align 8
  %memberidx80 = getelementptr inbounds %Token, ptr %318, i64 0, i32 1
  %319 = load ptr, ptr %memberidx80, align 8
  %memberidx.i341 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %320 = load ptr, ptr %memberidx.i341, align 8
  %memberidx1.i342 = getelementptr inbounds %Compiler, ptr %320, i64 0, i32 6
  %321 = load ptr, ptr %memberidx1.i342, align 8
  %322 = call ptr @malloc(i32 24)
  store i64 5, ptr %322, align 4
  %memberidx1.i.i343 = getelementptr inbounds %FloError, ptr %322, i64 0, i32 2
  store ptr %319, ptr %memberidx1.i.i343, align 8
  %memberidx2.i.i344 = getelementptr inbounds %FloError, ptr %322, i64 0, i32 1
  store ptr %317, ptr %memberidx2.i.i344, align 8
  %memberidx.i.i345 = getelementptr inbounds %Array_FloError_, ptr %321, i64 0, i32 2
  %323 = load i64, ptr %memberidx.i.i345, align 4
  %memberidx1.i2.i346 = getelementptr inbounds %Array_FloError_, ptr %321, i64 0, i32 3
  %324 = load i64, ptr %memberidx1.i2.i346, align 4
  %.not.i.i347 = icmp slt i64 %323, %324
  br i1 %.not.i.i347, label %if.entry72.TypeChecker_error.exit353_crit_edge, label %if.entry.i.i350

if.entry72.TypeChecker_error.exit353_crit_edge:   ; preds = %if.entry72
  %memberidx4.i.i351.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %321, i64 0, i32 1
  %.pre697 = load ptr, ptr %memberidx4.i.i351.phi.trans.insert, align 8
  br label %TypeChecker_error.exit353

if.entry.i.i350:                                  ; preds = %if.entry72
  %325 = shl i64 %324, 1
  store i64 %325, ptr %memberidx1.i2.i346, align 4
  %memberidx2.i.i.i349 = getelementptr inbounds %Array_FloError_, ptr %321, i64 0, i32 1
  %326 = load ptr, ptr %memberidx2.i.i.i349, align 8
  %327 = shl i64 %324, 4
  %328 = call ptr @realloc(ptr %326, i64 %327)
  store ptr %328, ptr %memberidx2.i.i.i349, align 8
  %.pre696 = load i64, ptr %memberidx.i.i345, align 4
  br label %TypeChecker_error.exit353

TypeChecker_error.exit353:                        ; preds = %if.entry72.TypeChecker_error.exit353_crit_edge, %if.entry.i.i350
  %329 = phi ptr [ %.pre697, %if.entry72.TypeChecker_error.exit353_crit_edge ], [ %328, %if.entry.i.i350 ]
  %330 = phi i64 [ %323, %if.entry72.TypeChecker_error.exit353_crit_edge ], [ %.pre696, %if.entry.i.i350 ]
  %331 = add i64 %330, 1
  store i64 %331, ptr %memberidx.i.i345, align 4
  %ptridx.i.i352 = getelementptr inbounds ptr, ptr %329, i64 %330
  store ptr %322, ptr %ptridx.i.i352, align 8
  br label %common.ret

ifend74:                                          ; preds = %get_class_prop_visibility.exit
  %332 = load i64, ptr %memberidx39, align 4
  %.not199 = icmp eq i64 %332, %common.ret.op.i325
  br i1 %.not199, label %ifend84, label %if.entry82

if.entry82:                                       ; preds = %ifend74
  %333 = load ptr, ptr %12, align 8
  %memberidx85 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %333, i64 0, i32 5
  %334 = load ptr, ptr %memberidx85, align 8
  %335 = tail call ptr %334(ptr nonnull %12)
  %memberidx86 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %336 = load ptr, ptr %memberidx86, align 8
  %337 = load ptr, ptr %336, align 8
  %memberidx87 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %337, i64 0, i32 5
  %338 = load ptr, ptr %memberidx87, align 8
  %339 = tail call ptr %338(ptr nonnull %336)
  switch i64 %common.ret.op.i325, label %ifend3.i [
    i64 1, label %if.entry.i357
    i64 2, label %if.entry1.i
  ]

if.entry.i357:                                    ; preds = %if.entry82
  %340 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %340, ptr noundef nonnull align 8 dereferenceable(7) @47, i64 7, i1 false)
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry82
  %341 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %341, ptr noundef nonnull align 8 dereferenceable(6) @48, i64 6, i1 false)
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry82
  %342 = tail call ptr @malloc(i32 72)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %342, ptr noundef nonnull align 8 dereferenceable(9) @49, i64 9, i1 false)
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i357, %if.entry1.i, %ifend3.i
  %.sink760 = phi ptr [ %340, %if.entry.i357 ], [ %341, %if.entry1.i ], [ %342, %ifend3.i ]
  %.sink758 = phi i64 [ 7, %if.entry.i357 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %343 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %343, align 8
  %memberidx.i.i.i355 = getelementptr inbounds %string, ptr %343, i64 0, i32 1
  store ptr %.sink760, ptr %memberidx.i.i.i355, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %343, i64 0, i32 2
  store i64 %.sink758, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i356 = getelementptr inbounds %string, ptr %343, i64 0, i32 3
  store i64 %.sink758, ptr %memberidx2.i.i.i356, align 4
  %344 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %345 = tail call ptr %344(ptr nonnull %343)
  %346 = alloca ptr, align 8
  %347 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %346, ptr nonnull @131, ptr %335, ptr %339, ptr %345)
  %348 = load ptr, ptr %346, align 8
  %349 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %349, align 8
  %memberidx.i359 = getelementptr inbounds %string, ptr %349, i64 0, i32 1
  store ptr %348, ptr %memberidx.i359, align 8
  %memberidx1.i360 = getelementptr inbounds %string, ptr %349, i64 0, i32 2
  store i64 %347, ptr %memberidx1.i360, align 4
  %memberidx2.i361 = getelementptr inbounds %string, ptr %349, i64 0, i32 3
  store i64 %347, ptr %memberidx2.i361, align 4
  tail call void @free(ptr %335)
  tail call void @free(ptr %339)
  tail call void @free(ptr %345)
  %350 = load ptr, ptr %9, align 8
  %memberidx90 = getelementptr inbounds %Token, ptr %350, i64 0, i32 1
  %351 = load ptr, ptr %memberidx90, align 8
  %memberidx.i362 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %352 = load ptr, ptr %memberidx.i362, align 8
  %memberidx1.i363 = getelementptr inbounds %Compiler, ptr %352, i64 0, i32 6
  %353 = load ptr, ptr %memberidx1.i363, align 8
  %354 = call ptr @malloc(i32 24)
  store i64 4, ptr %354, align 4
  %memberidx1.i.i364 = getelementptr inbounds %FloError, ptr %354, i64 0, i32 2
  store ptr %351, ptr %memberidx1.i.i364, align 8
  %memberidx2.i.i365 = getelementptr inbounds %FloError, ptr %354, i64 0, i32 1
  store ptr %349, ptr %memberidx2.i.i365, align 8
  %memberidx.i.i366 = getelementptr inbounds %Array_FloError_, ptr %353, i64 0, i32 2
  %355 = load i64, ptr %memberidx.i.i366, align 4
  %memberidx1.i2.i367 = getelementptr inbounds %Array_FloError_, ptr %353, i64 0, i32 3
  %356 = load i64, ptr %memberidx1.i2.i367, align 4
  %.not.i.i368 = icmp slt i64 %355, %356
  br i1 %.not.i.i368, label %dump_access.exit.TypeChecker_error.exit374_crit_edge, label %if.entry.i.i371

dump_access.exit.TypeChecker_error.exit374_crit_edge: ; preds = %dump_access.exit
  %memberidx4.i.i372.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %353, i64 0, i32 1
  %.pre699 = load ptr, ptr %memberidx4.i.i372.phi.trans.insert, align 8
  br label %TypeChecker_error.exit374

if.entry.i.i371:                                  ; preds = %dump_access.exit
  %357 = shl i64 %356, 1
  store i64 %357, ptr %memberidx1.i2.i367, align 4
  %memberidx2.i.i.i370 = getelementptr inbounds %Array_FloError_, ptr %353, i64 0, i32 1
  %358 = load ptr, ptr %memberidx2.i.i.i370, align 8
  %359 = shl i64 %356, 4
  %360 = call ptr @realloc(ptr %358, i64 %359)
  store ptr %360, ptr %memberidx2.i.i.i370, align 8
  %.pre698 = load i64, ptr %memberidx.i.i366, align 4
  br label %TypeChecker_error.exit374

TypeChecker_error.exit374:                        ; preds = %dump_access.exit.TypeChecker_error.exit374_crit_edge, %if.entry.i.i371
  %361 = phi ptr [ %.pre699, %dump_access.exit.TypeChecker_error.exit374_crit_edge ], [ %360, %if.entry.i.i371 ]
  %362 = phi i64 [ %355, %dump_access.exit.TypeChecker_error.exit374_crit_edge ], [ %.pre698, %if.entry.i.i371 ]
  %363 = add i64 %362, 1
  store i64 %363, ptr %memberidx.i.i366, align 4
  %ptridx.i.i373 = getelementptr inbounds ptr, ptr %361, i64 %362
  store ptr %354, ptr %ptridx.i.i373, align 8
  br label %common.ret

ifend84:                                          ; preds = %ifend74
  %memberidx91 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 9
  %364 = load ptr, ptr %0, align 8
  %365 = load ptr, ptr %memberidx59, align 8
  %memberidx.i.i.i376 = getelementptr inbounds %Program, ptr %364, i64 0, i32 1
  %366 = load ptr, ptr %memberidx.i.i.i376, align 8
  %367 = load i64, ptr %365, align 4
  %memberidx.i.i.i.i377 = getelementptr inbounds %Array_Module_, ptr %366, i64 0, i32 1
  %368 = load ptr, ptr %memberidx.i.i.i.i377, align 8
  %ptridx.i.i.i.i378 = getelementptr inbounds ptr, ptr %368, i64 %367
  %369 = load ptr, ptr %ptridx.i.i.i.i378, align 8
  %memberidx2.i.i.i379 = getelementptr inbounds %Module, ptr %369, i64 0, i32 4
  %370 = load ptr, ptr %memberidx2.i.i.i379, align 8
  %memberidx3.i.i.i380 = getelementptr inbounds %TypeId, ptr %365, i64 0, i32 2
  %371 = load i64, ptr %memberidx3.i.i.i380, align 4
  %memberidx.i5.i.i.i381 = getelementptr inbounds %Array_Class_, ptr %370, i64 0, i32 1
  %372 = load ptr, ptr %memberidx.i5.i.i.i381, align 8
  %ptridx.i6.i.i.i382 = getelementptr inbounds ptr, ptr %372, i64 %371
  %373 = load ptr, ptr %ptridx.i6.i.i.i382, align 8
  %374 = load i64, ptr %234, align 4
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %if.entry.i390, label %ifend.i396

if.entry.i390:                                    ; preds = %ifend84
  %memberidx1.i385 = getelementptr inbounds %Class, ptr %373, i64 0, i32 5
  %376 = load ptr, ptr %memberidx1.i385, align 8
  %memberidx2.i386 = getelementptr inbounds %PropId, ptr %234, i64 0, i32 2
  %377 = load i64, ptr %memberidx2.i386, align 4
  %memberidx.i12.i387 = getelementptr inbounds %Array_ClassMethod_, ptr %376, i64 0, i32 1
  %378 = load ptr, ptr %memberidx.i12.i387, align 8
  %ptridx.i13.i388 = getelementptr inbounds ptr, ptr %378, i64 %377
  %379 = load ptr, ptr %ptridx.i13.i388, align 8
  %memberidx3.i389 = getelementptr inbounds %ClassMethod, ptr %379, i64 0, i32 9
  br label %get_vtable_index.exit

ifend.i396:                                       ; preds = %ifend84
  %memberidx4.i391 = getelementptr inbounds %Class, ptr %373, i64 0, i32 4
  %380 = load ptr, ptr %memberidx4.i391, align 8
  %memberidx5.i392 = getelementptr inbounds %PropId, ptr %234, i64 0, i32 2
  %381 = load i64, ptr %memberidx5.i392, align 4
  %memberidx.i11.i393 = getelementptr inbounds %Array_ClassField_, ptr %380, i64 0, i32 1
  %382 = load ptr, ptr %memberidx.i11.i393, align 8
  %ptridx.i.i394 = getelementptr inbounds ptr, ptr %382, i64 %381
  %383 = load ptr, ptr %ptridx.i.i394, align 8
  %memberidx6.i395 = getelementptr inbounds %ClassField, ptr %383, i64 0, i32 6
  br label %get_vtable_index.exit

get_vtable_index.exit:                            ; preds = %if.entry.i390, %ifend.i396
  %common.ret.op.in.i383 = phi ptr [ %memberidx3.i389, %if.entry.i390 ], [ %memberidx6.i395, %ifend.i396 ]
  %common.ret.op.i384 = load i64, ptr %common.ret.op.in.i383, align 4
  store i64 %common.ret.op.i384, ptr %memberidx91, align 4
  br label %ifend58

if.entry97:                                       ; preds = %ifend58
  %384 = load i1, ptr %memberidx36, align 1
  br i1 %384, label %if.entry101, label %ifend103

else98:                                           ; preds = %ifend58
  %385 = load ptr, ptr %memberidx6, align 8
  %386 = tail call ptr @malloc(i32 88)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %386, ptr noundef nonnull align 8 dereferenceable(11) @133, i64 11, i1 false)
  %387 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %387, align 8
  %memberidx.i.i397 = getelementptr inbounds %string, ptr %387, i64 0, i32 1
  store ptr %386, ptr %memberidx.i.i397, align 8
  %memberidx1.i.i398 = getelementptr inbounds %string, ptr %387, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i398, align 4
  %memberidx2.i.i399 = getelementptr inbounds %string, ptr %387, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i399, align 4
  %memberidx.i400 = getelementptr inbounds %string, ptr %385, i64 0, i32 2
  %388 = load i64, ptr %memberidx.i400, align 4
  %.not.i402 = icmp eq i64 %388, 11
  br i1 %.not.i402, label %ifend.i406, label %else116

ifend.i406:                                       ; preds = %else98
  %memberidx2.i404 = getelementptr inbounds %string, ptr %385, i64 0, i32 1
  %389 = load ptr, ptr %memberidx2.i404, align 8
  %390 = tail call i64 @memcmp(ptr %389, ptr nonnull %386, i64 11)
  %391 = icmp eq i64 %390, 0
  br i1 %391, label %if.entry115, label %else116

ifend99:                                          ; preds = %get_class_prop_type.exit518, %if.entry3.i, %ifend117, %ifend109
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.0631, %ifend109 ], [ %current_vtable_index.2, %get_class_prop_type.exit518 ], [ %current_vtable_index.2, %if.entry3.i ], [ %current_vtable_index.2, %ifend117 ]
  %memberidx150 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 8
  %392 = load ptr, ptr %13, align 8
  store ptr %392, ptr %memberidx150, align 8
  %393 = load ptr, ptr %memberidx152, align 8
  %memberidx.i408 = getelementptr inbounds %Array_ClassMethod_, ptr %393, i64 0, i32 2
  %394 = load i64, ptr %memberidx.i408, align 4
  %memberidx1.i409 = getelementptr inbounds %Array_ClassMethod_, ptr %393, i64 0, i32 3
  %395 = load i64, ptr %memberidx1.i409, align 4
  %.not.i410 = icmp slt i64 %394, %395
  br i1 %.not.i410, label %ifend99.Array_ClassMethod____sl__.exit_crit_edge, label %if.entry.i413

ifend99.Array_ClassMethod____sl__.exit_crit_edge: ; preds = %ifend99
  %memberidx4.i414.phi.trans.insert = getelementptr inbounds %Array_ClassMethod_, ptr %393, i64 0, i32 1
  %.pre707 = load ptr, ptr %memberidx4.i414.phi.trans.insert, align 8
  br label %Array_ClassMethod____sl__.exit

if.entry.i413:                                    ; preds = %ifend99
  %396 = shl i64 %395, 1
  store i64 %396, ptr %memberidx1.i409, align 4
  %memberidx2.i.i412 = getelementptr inbounds %Array_ClassMethod_, ptr %393, i64 0, i32 1
  %397 = load ptr, ptr %memberidx2.i.i412, align 8
  %398 = shl i64 %395, 4
  %399 = tail call ptr @realloc(ptr %397, i64 %398)
  store ptr %399, ptr %memberidx2.i.i412, align 8
  %.pre706 = load i64, ptr %memberidx.i408, align 4
  br label %Array_ClassMethod____sl__.exit

Array_ClassMethod____sl__.exit:                   ; preds = %ifend99.Array_ClassMethod____sl__.exit_crit_edge, %if.entry.i413
  %400 = phi ptr [ %.pre707, %ifend99.Array_ClassMethod____sl__.exit_crit_edge ], [ %399, %if.entry.i413 ]
  %401 = phi i64 [ %394, %ifend99.Array_ClassMethod____sl__.exit_crit_edge ], [ %.pre706, %if.entry.i413 ]
  %402 = add i64 %401, 1
  store i64 %402, ptr %memberidx.i408, align 4
  %ptridx.i415 = getelementptr inbounds ptr, ptr %400, i64 %401
  store ptr %10, ptr %ptridx.i415, align 8
  %403 = load ptr, ptr %memberidx.i202, align 8
  store ptr %403, ptr %memberidx1.i, align 8
  %404 = add nuw nsw i64 %i.0632, 1
  %405 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_MethodNode_, ptr %405, i64 0, i32 2
  %406 = load i64, ptr %memberidx2, align 4
  %407 = icmp slt i64 %404, %406
  br i1 %407, label %for.body, label %common.ret

if.entry101:                                      ; preds = %if.entry97
  %408 = tail call ptr @malloc(i32 248)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(31) %408, ptr noundef nonnull align 8 dereferenceable(31) @132, i64 31, i1 false)
  %409 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %409, align 8
  %memberidx.i.i417 = getelementptr inbounds %string, ptr %409, i64 0, i32 1
  store ptr %408, ptr %memberidx.i.i417, align 8
  %memberidx1.i.i418 = getelementptr inbounds %string, ptr %409, i64 0, i32 2
  store i64 31, ptr %memberidx1.i.i418, align 4
  %memberidx2.i.i419 = getelementptr inbounds %string, ptr %409, i64 0, i32 3
  store i64 31, ptr %memberidx2.i.i419, align 4
  %410 = load ptr, ptr %9, align 8
  %memberidx105 = getelementptr inbounds %Token, ptr %410, i64 0, i32 1
  %411 = load ptr, ptr %memberidx105, align 8
  %memberidx.i420 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %412 = load ptr, ptr %memberidx.i420, align 8
  %memberidx1.i421 = getelementptr inbounds %Compiler, ptr %412, i64 0, i32 6
  %413 = load ptr, ptr %memberidx1.i421, align 8
  %414 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %414, align 4
  %memberidx1.i.i422 = getelementptr inbounds %FloError, ptr %414, i64 0, i32 2
  store ptr %411, ptr %memberidx1.i.i422, align 8
  %memberidx2.i.i423 = getelementptr inbounds %FloError, ptr %414, i64 0, i32 1
  store ptr %409, ptr %memberidx2.i.i423, align 8
  %memberidx.i.i424 = getelementptr inbounds %Array_FloError_, ptr %413, i64 0, i32 2
  %415 = load i64, ptr %memberidx.i.i424, align 4
  %memberidx1.i2.i425 = getelementptr inbounds %Array_FloError_, ptr %413, i64 0, i32 3
  %416 = load i64, ptr %memberidx1.i2.i425, align 4
  %.not.i.i426 = icmp slt i64 %415, %416
  br i1 %.not.i.i426, label %if.entry101.TypeChecker_error.exit432_crit_edge, label %if.entry.i.i429

if.entry101.TypeChecker_error.exit432_crit_edge:  ; preds = %if.entry101
  %memberidx4.i.i430.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %413, i64 0, i32 1
  %.pre711 = load ptr, ptr %memberidx4.i.i430.phi.trans.insert, align 8
  br label %TypeChecker_error.exit432

if.entry.i.i429:                                  ; preds = %if.entry101
  %417 = shl i64 %416, 1
  store i64 %417, ptr %memberidx1.i2.i425, align 4
  %memberidx2.i.i.i428 = getelementptr inbounds %Array_FloError_, ptr %413, i64 0, i32 1
  %418 = load ptr, ptr %memberidx2.i.i.i428, align 8
  %419 = shl i64 %416, 4
  %420 = tail call ptr @realloc(ptr %418, i64 %419)
  store ptr %420, ptr %memberidx2.i.i.i428, align 8
  %.pre710 = load i64, ptr %memberidx.i.i424, align 4
  br label %TypeChecker_error.exit432

TypeChecker_error.exit432:                        ; preds = %if.entry101.TypeChecker_error.exit432_crit_edge, %if.entry.i.i429
  %421 = phi ptr [ %.pre711, %if.entry101.TypeChecker_error.exit432_crit_edge ], [ %420, %if.entry.i.i429 ]
  %422 = phi i64 [ %415, %if.entry101.TypeChecker_error.exit432_crit_edge ], [ %.pre710, %if.entry.i.i429 ]
  %423 = add i64 %422, 1
  store i64 %423, ptr %memberidx.i.i424, align 4
  %ptridx.i.i431 = getelementptr inbounds ptr, ptr %421, i64 %422
  store ptr %414, ptr %ptridx.i.i431, align 8
  br label %common.ret

ifend103:                                         ; preds = %if.entry97
  %424 = load ptr, ptr %memberidx6, align 8
  %425 = tail call ptr @malloc(i32 88)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %425, ptr noundef nonnull align 8 dereferenceable(11) @133, i64 11, i1 false)
  %426 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %426, align 8
  %memberidx.i.i433 = getelementptr inbounds %string, ptr %426, i64 0, i32 1
  store ptr %425, ptr %memberidx.i.i433, align 8
  %memberidx1.i.i434 = getelementptr inbounds %string, ptr %426, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i434, align 4
  %memberidx2.i.i435 = getelementptr inbounds %string, ptr %426, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i435, align 4
  %memberidx.i436 = getelementptr inbounds %string, ptr %424, i64 0, i32 2
  %427 = load i64, ptr %memberidx.i436, align 4
  %.not.i438 = icmp eq i64 %427, 11
  br i1 %.not.i438, label %ifend.i442, label %ifend109

ifend.i442:                                       ; preds = %ifend103
  %memberidx2.i440 = getelementptr inbounds %string, ptr %424, i64 0, i32 1
  %428 = load ptr, ptr %memberidx2.i440, align 8
  %429 = tail call i64 @memcmp(ptr %428, ptr nonnull %425, i64 11)
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %if.entry107, label %ifend109

if.entry107:                                      ; preds = %ifend.i442
  %431 = tail call ptr @malloc(i32 264)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %431, ptr noundef nonnull align 8 dereferenceable(33) @134, i64 33, i1 false)
  %432 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %432, align 8
  %memberidx.i.i444 = getelementptr inbounds %string, ptr %432, i64 0, i32 1
  store ptr %431, ptr %memberidx.i.i444, align 8
  %memberidx1.i.i445 = getelementptr inbounds %string, ptr %432, i64 0, i32 2
  store i64 33, ptr %memberidx1.i.i445, align 4
  %memberidx2.i.i446 = getelementptr inbounds %string, ptr %432, i64 0, i32 3
  store i64 33, ptr %memberidx2.i.i446, align 4
  %433 = load ptr, ptr %9, align 8
  %memberidx111 = getelementptr inbounds %Token, ptr %433, i64 0, i32 1
  %434 = load ptr, ptr %memberidx111, align 8
  %memberidx.i447 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %435 = load ptr, ptr %memberidx.i447, align 8
  %memberidx1.i448 = getelementptr inbounds %Compiler, ptr %435, i64 0, i32 6
  %436 = load ptr, ptr %memberidx1.i448, align 8
  %437 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %437, align 4
  %memberidx1.i.i449 = getelementptr inbounds %FloError, ptr %437, i64 0, i32 2
  store ptr %434, ptr %memberidx1.i.i449, align 8
  %memberidx2.i.i450 = getelementptr inbounds %FloError, ptr %437, i64 0, i32 1
  store ptr %432, ptr %memberidx2.i.i450, align 8
  %memberidx.i.i451 = getelementptr inbounds %Array_FloError_, ptr %436, i64 0, i32 2
  %438 = load i64, ptr %memberidx.i.i451, align 4
  %memberidx1.i2.i452 = getelementptr inbounds %Array_FloError_, ptr %436, i64 0, i32 3
  %439 = load i64, ptr %memberidx1.i2.i452, align 4
  %.not.i.i453 = icmp slt i64 %438, %439
  br i1 %.not.i.i453, label %if.entry107.TypeChecker_error.exit459_crit_edge, label %if.entry.i.i456

if.entry107.TypeChecker_error.exit459_crit_edge:  ; preds = %if.entry107
  %memberidx4.i.i457.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %436, i64 0, i32 1
  %.pre709 = load ptr, ptr %memberidx4.i.i457.phi.trans.insert, align 8
  br label %TypeChecker_error.exit459

if.entry.i.i456:                                  ; preds = %if.entry107
  %440 = shl i64 %439, 1
  store i64 %440, ptr %memberidx1.i2.i452, align 4
  %memberidx2.i.i.i455 = getelementptr inbounds %Array_FloError_, ptr %436, i64 0, i32 1
  %441 = load ptr, ptr %memberidx2.i.i.i455, align 8
  %442 = shl i64 %439, 4
  %443 = tail call ptr @realloc(ptr %441, i64 %442)
  store ptr %443, ptr %memberidx2.i.i.i455, align 8
  %.pre708 = load i64, ptr %memberidx.i.i451, align 4
  br label %TypeChecker_error.exit459

TypeChecker_error.exit459:                        ; preds = %if.entry107.TypeChecker_error.exit459_crit_edge, %if.entry.i.i456
  %444 = phi ptr [ %.pre709, %if.entry107.TypeChecker_error.exit459_crit_edge ], [ %443, %if.entry.i.i456 ]
  %445 = phi i64 [ %438, %if.entry107.TypeChecker_error.exit459_crit_edge ], [ %.pre708, %if.entry.i.i456 ]
  %446 = add i64 %445, 1
  store i64 %446, ptr %memberidx.i.i451, align 4
  %ptridx.i.i458 = getelementptr inbounds ptr, ptr %444, i64 %445
  store ptr %437, ptr %ptridx.i.i458, align 8
  br label %common.ret

ifend109:                                         ; preds = %ifend103, %ifend.i442
  %447 = load ptr, ptr %memberidx112, align 8
  %448 = load ptr, ptr %10, align 8
  tail call fastcc void @Map_string_PropId____setitem__(ptr %447, ptr %12, ptr %448)
  br label %ifend99

if.entry115:                                      ; preds = %ifend.i406
  %449 = load i1, ptr %memberidx36, align 1
  br i1 %449, label %if.entry119, label %ifend121

else116:                                          ; preds = %else98, %ifend.i406
  %450 = load i64, ptr %memberidx39, align 4
  %.not196 = icmp eq i64 %450, 1
  br i1 %.not196, label %else128, label %if.entry127

ifend117:                                         ; preds = %ifend129, %ifend121
  %current_vtable_index.2 = phi i64 [ %current_vtable_index.0631, %ifend121 ], [ %current_vtable_index.3, %ifend129 ]
  %451 = tail call ptr @malloc(i32 16)
  %452 = load ptr, ptr %1, align 8
  store i64 13, ptr %451, align 4
  %memberidx.i460 = getelementptr inbounds %ObjectType, ptr %451, i64 0, i32 1
  store ptr %452, ptr %memberidx.i460, align 8
  %453 = tail call ptr @malloc(i32 32)
  store i32 1936287860, ptr %453, align 8
  %454 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %454, align 8
  %memberidx.i.i461 = getelementptr inbounds %string, ptr %454, i64 0, i32 1
  store ptr %453, ptr %memberidx.i.i461, align 8
  %memberidx1.i.i462 = getelementptr inbounds %string, ptr %454, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i462, align 4
  %memberidx2.i.i463 = getelementptr inbounds %string, ptr %454, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i463, align 4
  %455 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr %0, ptr nonnull %454, ptr null, ptr nonnull %451)
  %456 = load ptr, ptr %memberidx139, align 8
  %.not197 = icmp eq ptr %456, null
  br i1 %.not197, label %ifend99, label %if.entry140

if.entry119:                                      ; preds = %if.entry115
  %457 = tail call ptr @malloc(i32 280)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %457, ptr noundef nonnull align 8 dereferenceable(35) @135, i64 35, i1 false)
  %458 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %458, align 8
  %memberidx.i.i464 = getelementptr inbounds %string, ptr %458, i64 0, i32 1
  store ptr %457, ptr %memberidx.i.i464, align 8
  %memberidx1.i.i465 = getelementptr inbounds %string, ptr %458, i64 0, i32 2
  store i64 35, ptr %memberidx1.i.i465, align 4
  %memberidx2.i.i466 = getelementptr inbounds %string, ptr %458, i64 0, i32 3
  store i64 35, ptr %memberidx2.i.i466, align 4
  %459 = load ptr, ptr %9, align 8
  %memberidx123 = getelementptr inbounds %Token, ptr %459, i64 0, i32 1
  %460 = load ptr, ptr %memberidx123, align 8
  %memberidx.i467 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %461 = load ptr, ptr %memberidx.i467, align 8
  %memberidx1.i468 = getelementptr inbounds %Compiler, ptr %461, i64 0, i32 6
  %462 = load ptr, ptr %memberidx1.i468, align 8
  %463 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %463, align 4
  %memberidx1.i.i469 = getelementptr inbounds %FloError, ptr %463, i64 0, i32 2
  store ptr %460, ptr %memberidx1.i.i469, align 8
  %memberidx2.i.i470 = getelementptr inbounds %FloError, ptr %463, i64 0, i32 1
  store ptr %458, ptr %memberidx2.i.i470, align 8
  %memberidx.i.i471 = getelementptr inbounds %Array_FloError_, ptr %462, i64 0, i32 2
  %464 = load i64, ptr %memberidx.i.i471, align 4
  %memberidx1.i2.i472 = getelementptr inbounds %Array_FloError_, ptr %462, i64 0, i32 3
  %465 = load i64, ptr %memberidx1.i2.i472, align 4
  %.not.i.i473 = icmp slt i64 %464, %465
  br i1 %.not.i.i473, label %if.entry119.TypeChecker_error.exit479_crit_edge, label %if.entry.i.i476

if.entry119.TypeChecker_error.exit479_crit_edge:  ; preds = %if.entry119
  %memberidx4.i.i477.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %462, i64 0, i32 1
  %.pre705 = load ptr, ptr %memberidx4.i.i477.phi.trans.insert, align 8
  br label %TypeChecker_error.exit479

if.entry.i.i476:                                  ; preds = %if.entry119
  %466 = shl i64 %465, 1
  store i64 %466, ptr %memberidx1.i2.i472, align 4
  %memberidx2.i.i.i475 = getelementptr inbounds %Array_FloError_, ptr %462, i64 0, i32 1
  %467 = load ptr, ptr %memberidx2.i.i.i475, align 8
  %468 = shl i64 %465, 4
  %469 = tail call ptr @realloc(ptr %467, i64 %468)
  store ptr %469, ptr %memberidx2.i.i.i475, align 8
  %.pre704 = load i64, ptr %memberidx.i.i471, align 4
  br label %TypeChecker_error.exit479

TypeChecker_error.exit479:                        ; preds = %if.entry119.TypeChecker_error.exit479_crit_edge, %if.entry.i.i476
  %470 = phi ptr [ %.pre705, %if.entry119.TypeChecker_error.exit479_crit_edge ], [ %469, %if.entry.i.i476 ]
  %471 = phi i64 [ %464, %if.entry119.TypeChecker_error.exit479_crit_edge ], [ %.pre704, %if.entry.i.i476 ]
  %472 = add i64 %471, 1
  store i64 %472, ptr %memberidx.i.i471, align 4
  %ptridx.i.i478 = getelementptr inbounds ptr, ptr %470, i64 %471
  store ptr %463, ptr %ptridx.i.i478, align 8
  br label %common.ret

ifend121:                                         ; preds = %if.entry115
  %473 = load ptr, ptr %10, align 8
  store ptr %473, ptr %memberidx124, align 8
  br label %ifend117

if.entry127:                                      ; preds = %else116
  %474 = add i64 %current_vtable_index.0631, 1
  br label %ifend129

else128:                                          ; preds = %else116
  %475 = load i1, ptr %memberidx36, align 1
  br i1 %475, label %if.entry131, label %ifend129

ifend129:                                         ; preds = %else128, %if.entry127
  %current_vtable_index.3 = phi i64 [ %474, %if.entry127 ], [ %current_vtable_index.0631, %else128 ]
  %476 = load ptr, ptr %memberidx55, align 8
  %477 = load ptr, ptr %10, align 8
  tail call fastcc void @Map_string_PropId____setitem__(ptr %476, ptr %12, ptr %477)
  br label %ifend117

if.entry131:                                      ; preds = %else128
  %478 = tail call ptr @malloc(i32 464)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(58) %478, ptr noundef nonnull align 8 dereferenceable(58) @136, i64 58, i1 false)
  %479 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %479, align 8
  %memberidx.i.i480 = getelementptr inbounds %string, ptr %479, i64 0, i32 1
  store ptr %478, ptr %memberidx.i.i480, align 8
  %memberidx1.i.i481 = getelementptr inbounds %string, ptr %479, i64 0, i32 2
  store i64 58, ptr %memberidx1.i.i481, align 4
  %memberidx2.i.i482 = getelementptr inbounds %string, ptr %479, i64 0, i32 3
  store i64 58, ptr %memberidx2.i.i482, align 4
  %480 = load ptr, ptr %9, align 8
  %memberidx135 = getelementptr inbounds %Token, ptr %480, i64 0, i32 1
  %481 = load ptr, ptr %memberidx135, align 8
  %memberidx.i483 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %482 = load ptr, ptr %memberidx.i483, align 8
  %memberidx1.i484 = getelementptr inbounds %Compiler, ptr %482, i64 0, i32 6
  %483 = load ptr, ptr %memberidx1.i484, align 8
  %484 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %484, align 4
  %memberidx1.i.i485 = getelementptr inbounds %FloError, ptr %484, i64 0, i32 2
  store ptr %481, ptr %memberidx1.i.i485, align 8
  %memberidx2.i.i486 = getelementptr inbounds %FloError, ptr %484, i64 0, i32 1
  store ptr %479, ptr %memberidx2.i.i486, align 8
  %memberidx.i.i487 = getelementptr inbounds %Array_FloError_, ptr %483, i64 0, i32 2
  %485 = load i64, ptr %memberidx.i.i487, align 4
  %memberidx1.i2.i488 = getelementptr inbounds %Array_FloError_, ptr %483, i64 0, i32 3
  %486 = load i64, ptr %memberidx1.i2.i488, align 4
  %.not.i.i489 = icmp slt i64 %485, %486
  br i1 %.not.i.i489, label %if.entry131.TypeChecker_error.exit495_crit_edge, label %if.entry.i.i492

if.entry131.TypeChecker_error.exit495_crit_edge:  ; preds = %if.entry131
  %memberidx4.i.i493.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %483, i64 0, i32 1
  %.pre703 = load ptr, ptr %memberidx4.i.i493.phi.trans.insert, align 8
  br label %TypeChecker_error.exit495

if.entry.i.i492:                                  ; preds = %if.entry131
  %487 = shl i64 %486, 1
  store i64 %487, ptr %memberidx1.i2.i488, align 4
  %memberidx2.i.i.i491 = getelementptr inbounds %Array_FloError_, ptr %483, i64 0, i32 1
  %488 = load ptr, ptr %memberidx2.i.i.i491, align 8
  %489 = shl i64 %486, 4
  %490 = tail call ptr @realloc(ptr %488, i64 %489)
  store ptr %490, ptr %memberidx2.i.i.i491, align 8
  %.pre702 = load i64, ptr %memberidx.i.i487, align 4
  br label %TypeChecker_error.exit495

TypeChecker_error.exit495:                        ; preds = %if.entry131.TypeChecker_error.exit495_crit_edge, %if.entry.i.i492
  %491 = phi ptr [ %.pre703, %if.entry131.TypeChecker_error.exit495_crit_edge ], [ %490, %if.entry.i.i492 ]
  %492 = phi i64 [ %485, %if.entry131.TypeChecker_error.exit495_crit_edge ], [ %.pre702, %if.entry.i.i492 ]
  %493 = add i64 %492, 1
  store i64 %493, ptr %memberidx.i.i487, align 4
  %ptridx.i.i494 = getelementptr inbounds ptr, ptr %491, i64 %492
  store ptr %484, ptr %ptridx.i.i494, align 8
  br label %common.ret

if.entry140:                                      ; preds = %ifend117
  %494 = load ptr, ptr %0, align 8
  %495 = load i64, ptr %456, align 4
  %switch628 = icmp eq i64 %495, 21
  br i1 %switch628, label %if.entry.i538, label %if.entry3.i

if.entry.i538:                                    ; preds = %if.entry140, %if.entry.i538
  %.tr11.i629 = phi ptr [ %496, %if.entry.i538 ], [ %456, %if.entry140 ]
  %memberidx1.i537 = getelementptr inbounds %GenericType, ptr %.tr11.i629, i64 0, i32 3
  %496 = load ptr, ptr %memberidx1.i537, align 8
  %497 = load i64, ptr %496, align 4
  %switch = icmp eq i64 %497, 21
  br i1 %switch, label %if.entry.i538, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i538, %if.entry140
  %.tr11.i.lcssa = phi ptr [ %456, %if.entry140 ], [ %496, %if.entry.i538 ]
  %memberidx6.i539 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %498 = load ptr, ptr %memberidx6.i539, align 8
  %memberidx.i.i540 = getelementptr inbounds %Program, ptr %494, i64 0, i32 1
  %499 = load ptr, ptr %memberidx.i.i540, align 8
  %500 = load i64, ptr %498, align 4
  %memberidx.i.i.i541 = getelementptr inbounds %Array_Module_, ptr %499, i64 0, i32 1
  %501 = load ptr, ptr %memberidx.i.i.i541, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %501, i64 %500
  %502 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i542 = getelementptr inbounds %Module, ptr %502, i64 0, i32 4
  %503 = load ptr, ptr %memberidx2.i.i542, align 8
  %memberidx3.i.i543 = getelementptr inbounds %TypeId, ptr %498, i64 0, i32 2
  %504 = load i64, ptr %memberidx3.i.i543, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %503, i64 0, i32 1
  %505 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %505, i64 %504
  %506 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx145 = getelementptr inbounds %Class, ptr %506, i64 0, i32 3
  %507 = load ptr, ptr %memberidx145, align 8
  %.not198 = icmp eq ptr %507, null
  br i1 %.not198, label %ifend99, label %if.entry146

if.entry146:                                      ; preds = %if.entry3.i
  %memberidx.i.i496 = getelementptr inbounds %PropId, ptr %507, i64 0, i32 1
  %508 = load ptr, ptr %memberidx.i.i496, align 8
  %509 = load i64, ptr %508, align 4
  %ptridx.i.i.i.i499 = getelementptr inbounds ptr, ptr %501, i64 %509
  %510 = load ptr, ptr %ptridx.i.i.i.i499, align 8
  %memberidx2.i.i.i500 = getelementptr inbounds %Module, ptr %510, i64 0, i32 4
  %511 = load ptr, ptr %memberidx2.i.i.i500, align 8
  %memberidx3.i.i.i501 = getelementptr inbounds %TypeId, ptr %508, i64 0, i32 2
  %512 = load i64, ptr %memberidx3.i.i.i501, align 4
  %memberidx.i5.i.i.i502 = getelementptr inbounds %Array_Class_, ptr %511, i64 0, i32 1
  %513 = load ptr, ptr %memberidx.i5.i.i.i502, align 8
  %ptridx.i6.i.i.i503 = getelementptr inbounds ptr, ptr %513, i64 %512
  %514 = load ptr, ptr %ptridx.i6.i.i.i503, align 8
  %515 = load i64, ptr %507, align 4
  %516 = icmp eq i64 %515, 0
  br i1 %516, label %if.entry.i511, label %ifend.i517

if.entry.i511:                                    ; preds = %if.entry146
  %memberidx1.i506 = getelementptr inbounds %Class, ptr %514, i64 0, i32 5
  %517 = load ptr, ptr %memberidx1.i506, align 8
  %memberidx2.i507 = getelementptr inbounds %PropId, ptr %507, i64 0, i32 2
  %518 = load i64, ptr %memberidx2.i507, align 4
  %memberidx.i12.i508 = getelementptr inbounds %Array_ClassMethod_, ptr %517, i64 0, i32 1
  %519 = load ptr, ptr %memberidx.i12.i508, align 8
  %ptridx.i13.i509 = getelementptr inbounds ptr, ptr %519, i64 %518
  %520 = load ptr, ptr %ptridx.i13.i509, align 8
  %memberidx3.i510 = getelementptr inbounds %ClassMethod, ptr %520, i64 0, i32 4
  br label %get_class_prop_type.exit518

ifend.i517:                                       ; preds = %if.entry146
  %memberidx4.i512 = getelementptr inbounds %Class, ptr %514, i64 0, i32 4
  %521 = load ptr, ptr %memberidx4.i512, align 8
  %memberidx5.i513 = getelementptr inbounds %PropId, ptr %507, i64 0, i32 2
  %522 = load i64, ptr %memberidx5.i513, align 4
  %memberidx.i11.i514 = getelementptr inbounds %Array_ClassField_, ptr %521, i64 0, i32 1
  %523 = load ptr, ptr %memberidx.i11.i514, align 8
  %ptridx.i.i515 = getelementptr inbounds ptr, ptr %523, i64 %522
  %524 = load ptr, ptr %ptridx.i.i515, align 8
  %memberidx6.i516 = getelementptr inbounds %ClassField, ptr %524, i64 0, i32 4
  br label %get_class_prop_type.exit518

get_class_prop_type.exit518:                      ; preds = %if.entry.i511, %ifend.i517
  %common.ret.op.in.i504 = phi ptr [ %memberidx3.i510, %if.entry.i511 ], [ %memberidx6.i516, %ifend.i517 ]
  %common.ret.op.i505 = load ptr, ptr %common.ret.op.in.i504, align 8
  %525 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %525, ptr noundef nonnull align 8 dereferenceable(5) @137, i64 5, i1 false)
  %526 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %526, align 8
  %memberidx.i.i519 = getelementptr inbounds %string, ptr %526, i64 0, i32 1
  store ptr %525, ptr %memberidx.i.i519, align 8
  %memberidx1.i.i520 = getelementptr inbounds %string, ptr %526, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i520, align 4
  %memberidx2.i.i521 = getelementptr inbounds %string, ptr %526, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i521, align 4
  %527 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr nonnull %526, ptr null, ptr %common.ret.op.i505)
  br label %ifend99
}

define internal fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx.i72 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %4 = load ptr, ptr %memberidx.i72, align 8
  %memberidx1.i73 = getelementptr inbounds %Compiler, ptr %4, i64 0, i32 6
  %5 = load ptr, ptr %memberidx1.i73, align 8
  %memberidx2.i74 = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx2.i74, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %for.body, %3, %ifend45, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %102, %ifend45 ], [ null, %3 ], [ null, %for.body ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %8, align 8
  %memberidx.i75 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i75, align 4
  %memberidx1.i76 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 3
  store i64 8, ptr %memberidx1.i76, align 4
  %memberidx2.i77 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 1
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %memberidx2.i77, align 8
  store i64 0, ptr %memberidx.i75, align 4
  %10 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %10, align 4
  %11 = load i64, ptr %1, align 4
  switch i64 %11, label %ifend5 [
    i64 16, label %if.entry3
    i64 21, label %if.entry.i111
  ]

if.entry3:                                        ; preds = %ifend
  %memberidx6 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  br label %ifend5.sink.split

ifend5.sink.split:                                ; preds = %if.entry3, %if.entry12
  %.sink = phi ptr [ %29, %if.entry12 ], [ %memberidx6, %if.entry3 ]
  %is_constant.promoted.ph = phi i1 [ false, %if.entry12 ], [ true, %if.entry3 ]
  %12 = load ptr, ptr %.sink, align 8
  br label %ifend5

ifend5:                                           ; preds = %ifend5.sink.split, %is_object.exit, %ifend, %string___eq__.exit
  %is_constant.promoted = phi i1 [ false, %is_object.exit ], [ true, %ifend ], [ false, %string___eq__.exit ], [ %is_constant.promoted.ph, %ifend5.sink.split ]
  %element_type.promoted = phi ptr [ %10, %is_object.exit ], [ %10, %ifend ], [ %10, %string___eq__.exit ], [ %12, %ifend5.sink.split ]
  %memberidx16 = getelementptr inbounds %ArrayExpressionNode, ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %memberidx16, align 8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %13, i64 0, i32 2
  %14 = load i64, ptr %memberidx17, align 4
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %for.body, label %ifend20

if.entry.i111:                                    ; preds = %ifend, %if.entry.i111
  %.tr5.i = phi ptr [ %16, %if.entry.i111 ], [ %1, %ifend ]
  %memberidx1.i110 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i110, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 21
  br i1 %18, label %if.entry.i111, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i111
  %memberidx11 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %19 = load ptr, ptr %memberidx11, align 8
  %20 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %20, ptr noundef nonnull align 8 dereferenceable(5) @70, i64 5, i1 false)
  %21 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i.i78 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i.i78, align 8
  %memberidx1.i.i79 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i79, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i, align 4
  %memberidx.i80 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i80, align 4
  %.not.i = icmp eq i64 %22, 5
  br i1 %.not.i, label %string___eq__.exit, label %ifend5

string___eq__.exit:                               ; preds = %is_object.exit
  %23 = icmp eq i64 %17, 13
  %memberidx2.i82 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %24 = load ptr, ptr %memberidx2.i82, align 8
  %25 = tail call i64 @memcmp(ptr %24, ptr nonnull %20, i64 5)
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  br i1 %27, label %if.entry12, label %ifend5

if.entry12:                                       ; preds = %string___eq__.exit
  %memberidx15 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %28 = load ptr, ptr %memberidx15, align 8
  %memberidx.i83 = getelementptr inbounds %Array_Type_, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i83, align 8
  br label %ifend5.sink.split

ifend20:                                          ; preds = %Array_Expression____sl__.exit, %ifend5
  %30 = phi i1 [ %is_constant.promoted, %ifend5 ], [ %49, %Array_Expression____sl__.exit ]
  %31 = phi ptr [ %element_type.promoted, %ifend5 ], [ %., %Array_Expression____sl__.exit ]
  %32 = load i64, ptr %1, align 4
  %.not = icmp eq i64 %32, 16
  br i1 %.not, label %else44, label %if.entry43

for.body:                                         ; preds = %ifend5, %Array_Expression____sl__.exit
  %33 = phi ptr [ %61, %Array_Expression____sl__.exit ], [ %13, %ifend5 ]
  %storemerge124 = phi i64 [ %60, %Array_Expression____sl__.exit ], [ 0, %ifend5 ]
  %34 = phi ptr [ %., %Array_Expression____sl__.exit ], [ %element_type.promoted, %ifend5 ]
  %35 = phi i1 [ %49, %Array_Expression____sl__.exit ], [ %is_constant.promoted, %ifend5 ]
  %memberidx.i84 = getelementptr inbounds %Array_ExpressionNode_, ptr %33, i64 0, i32 1
  %36 = load ptr, ptr %memberidx.i84, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %36, i64 %storemerge124
  %37 = load ptr, ptr %ptridx.i, align 8
  %38 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %34, ptr %37)
  %39 = load ptr, ptr %memberidx.i72, align 8
  %memberidx1.i89 = getelementptr inbounds %Compiler, ptr %39, i64 0, i32 6
  %40 = load ptr, ptr %memberidx1.i89, align 8
  %memberidx2.i90 = getelementptr inbounds %Array_FloError_, ptr %40, i64 0, i32 2
  %41 = load i64, ptr %memberidx2.i90, align 4
  %42 = icmp sgt i64 %41, 0
  br i1 %42, label %common.ret, label %ifend26

ifend26:                                          ; preds = %for.body
  %43 = icmp eq i64 %storemerge124, 0
  %44 = load i64, ptr %34, align 4
  %45 = icmp eq i64 %44, 22
  %46 = and i1 %43, %45
  %memberidx31 = getelementptr inbounds %Expression, ptr %38, i64 0, i32 3
  %47 = load ptr, ptr %memberidx31, align 8
  %. = select i1 %46, ptr %47, ptr %34
  %memberidx32 = getelementptr inbounds %Expression, ptr %38, i64 0, i32 1
  %48 = load i1, ptr %memberidx32, align 1
  %49 = and i1 %35, %48
  %50 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %., ptr %47)
  br i1 %50, label %if.entry34, label %else35

if.entry34:                                       ; preds = %ifend26
  %51 = load i64, ptr %memberidx.i75, align 4
  %52 = load i64, ptr %memberidx1.i76, align 4
  %.not.i93 = icmp slt i64 %51, %52
  br i1 %.not.i93, label %if.entry34.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

if.entry34.Array_Expression____sl__.exit_crit_edge: ; preds = %if.entry34
  %.pre144 = load ptr, ptr %memberidx2.i77, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %if.entry34
  %53 = shl i64 %52, 1
  store i64 %53, ptr %memberidx1.i76, align 4
  %54 = load ptr, ptr %memberidx2.i77, align 8
  %55 = shl i64 %52, 4
  %56 = tail call ptr @realloc(ptr %54, i64 %55)
  store ptr %56, ptr %memberidx2.i77, align 8
  %.pre143 = load i64, ptr %memberidx.i75, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %if.entry34.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %57 = phi ptr [ %.pre144, %if.entry34.Array_Expression____sl__.exit_crit_edge ], [ %56, %if.entry.i ]
  %58 = phi i64 [ %51, %if.entry34.Array_Expression____sl__.exit_crit_edge ], [ %.pre143, %if.entry.i ]
  %59 = add i64 %58, 1
  store i64 %59, ptr %memberidx.i75, align 4
  %ptridx.i96 = getelementptr inbounds ptr, ptr %57, i64 %58
  store ptr %38, ptr %ptridx.i96, align 8
  %60 = add nuw nsw i64 %storemerge124, 1
  %61 = load ptr, ptr %memberidx16, align 8
  %memberidx22 = getelementptr inbounds %Array_ExpressionNode_, ptr %61, i64 0, i32 2
  %62 = load i64, ptr %memberidx22, align 4
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %for.body, label %ifend20

else35:                                           ; preds = %ifend26
  %memberidx33 = getelementptr inbounds %Expression, ptr %38, i64 0, i32 3
  %64 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %.)
  %65 = load ptr, ptr %64, align 8
  %memberidx37 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %65, i64 0, i32 5
  %66 = load ptr, ptr %memberidx37, align 8
  %67 = tail call ptr %66(ptr nonnull %64)
  %68 = load ptr, ptr %memberidx33, align 8
  %69 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %68)
  %70 = load ptr, ptr %69, align 8
  %memberidx39 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %70, i64 0, i32 5
  %71 = load ptr, ptr %memberidx39, align 8
  %72 = tail call ptr %71(ptr nonnull %69)
  %73 = alloca ptr, align 8
  %74 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %73, ptr nonnull @146, ptr %67, ptr %72)
  %75 = load ptr, ptr %73, align 8
  %76 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %76, align 8
  %memberidx.i98 = getelementptr inbounds %string, ptr %76, i64 0, i32 1
  store ptr %75, ptr %memberidx.i98, align 8
  %memberidx1.i99 = getelementptr inbounds %string, ptr %76, i64 0, i32 2
  store i64 %74, ptr %memberidx1.i99, align 4
  %memberidx2.i100 = getelementptr inbounds %string, ptr %76, i64 0, i32 3
  store i64 %74, ptr %memberidx2.i100, align 4
  tail call void @free(ptr %67)
  tail call void @free(ptr %72)
  %77 = load ptr, ptr %memberidx16, align 8
  %memberidx.i101 = getelementptr inbounds %Array_ExpressionNode_, ptr %77, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i101, align 8
  %ptridx.i102 = getelementptr inbounds ptr, ptr %78, i64 %storemerge124
  %79 = load ptr, ptr %ptridx.i102, align 8
  %80 = load ptr, ptr %79, align 8
  %81 = load ptr, ptr %memberidx.i72, align 8
  %memberidx1.i104 = getelementptr inbounds %Compiler, ptr %81, i64 0, i32 6
  %82 = load ptr, ptr %memberidx1.i104, align 8
  %83 = call ptr @malloc(i32 24)
  store i64 5, ptr %83, align 4
  %memberidx1.i.i105 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 2
  store ptr %80, ptr %memberidx1.i.i105, align 8
  %memberidx2.i.i106 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 1
  store ptr %76, ptr %memberidx2.i.i106, align 8
  %memberidx.i.i107 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 2
  %84 = load i64, ptr %memberidx.i.i107, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 3
  %85 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %84, %85
  br i1 %.not.i.i, label %else35.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

else35.TypeChecker_error.exit_crit_edge:          ; preds = %else35
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 1
  %.pre142 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %else35
  %86 = shl i64 %85, 1
  store i64 %86, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 1
  %87 = load ptr, ptr %memberidx2.i.i.i, align 8
  %88 = shl i64 %85, 4
  %89 = call ptr @realloc(ptr %87, i64 %88)
  store ptr %89, ptr %memberidx2.i.i.i, align 8
  %.pre141 = load i64, ptr %memberidx.i.i107, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %else35.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %90 = phi ptr [ %.pre142, %else35.TypeChecker_error.exit_crit_edge ], [ %89, %if.entry.i.i ]
  %91 = phi i64 [ %84, %else35.TypeChecker_error.exit_crit_edge ], [ %.pre141, %if.entry.i.i ]
  %92 = add i64 %91, 1
  store i64 %92, ptr %memberidx.i.i107, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %90, i64 %91
  store ptr %83, ptr %ptridx.i.i, align 8
  br label %common.ret

if.entry43:                                       ; preds = %ifend20
  %93 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %93, ptr noundef nonnull align 8 dereferenceable(5) @70, i64 5, i1 false)
  %94 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %94, align 8
  %memberidx.i.i85 = getelementptr inbounds %string, ptr %94, i64 0, i32 1
  store ptr %93, ptr %memberidx.i.i85, align 8
  %memberidx1.i.i86 = getelementptr inbounds %string, ptr %94, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i86, align 4
  %memberidx2.i.i87 = getelementptr inbounds %string, ptr %94, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i87, align 4
  %95 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %95, align 8
  %memberidx.i70 = getelementptr inbounds %Array_Type_, ptr %95, i64 0, i32 2
  store i64 0, ptr %memberidx.i70, align 4
  %memberidx1.i71 = getelementptr inbounds %Array_Type_, ptr %95, i64 0, i32 3
  store i64 8, ptr %memberidx1.i71, align 4
  %memberidx2.i = getelementptr inbounds %Array_Type_, ptr %95, i64 0, i32 1
  %96 = tail call ptr @malloc(i32 64)
  store ptr %96, ptr %memberidx2.i, align 8
  store ptr %31, ptr %96, align 8
  store i64 1, ptr %memberidx.i70, align 4
  %97 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr nonnull %94, ptr nonnull %95)
  %.not68 = icmp eq ptr %97, null
  %spec.select = select i1 %.not68, ptr %1, ptr %97
  %spec.select153 = select i1 %.not68, i1 %30, i1 false
  br label %ifend45

else44:                                           ; preds = %ifend20
  %98 = tail call ptr @malloc(i32 24)
  %99 = load i64, ptr %memberidx.i75, align 4
  store i64 16, ptr %98, align 4
  %memberidx.i69 = getelementptr inbounds %ArrayType, ptr %98, i64 0, i32 1
  store ptr %31, ptr %memberidx.i69, align 8
  %memberidx1.i = getelementptr inbounds %ArrayType, ptr %98, i64 0, i32 2
  store i64 %99, ptr %memberidx1.i, align 4
  br label %ifend45

ifend45:                                          ; preds = %if.entry43, %else44
  %100 = phi ptr [ %98, %else44 ], [ %spec.select, %if.entry43 ]
  %101 = phi i1 [ %30, %else44 ], [ %spec.select153, %if.entry43 ]
  %102 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %102, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %102, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %102, i64 0, i32 1
  %memberidx.i = getelementptr inbounds %ArrayExpression, ptr %102, i64 0, i32 4
  store ptr %8, ptr %memberidx.i, align 8
  store i1 %101, ptr %memberidx1.i.i, align 1
  %memberidx53 = getelementptr inbounds %Expression, ptr %102, i64 0, i32 3
  store ptr %100, ptr %memberidx53, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_check_enum_body(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %6 = tail call ptr @malloc(i32 8)
  store i64 7, ptr %6, align 4
  br label %ifend

else:                                             ; preds = %3
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %4)
  %8 = load i64, ptr %7, align 4
  %9 = add i64 %8, -1
  %10 = icmp ult i64 %9, 7
  br i1 %10, label %ifend, label %if.entry2

ifend:                                            ; preds = %TypeChecker_error.exit82, %else, %if.entry
  %enum_variant.0 = phi ptr [ %6, %if.entry ], [ %7, %TypeChecker_error.exit82 ], [ %7, %else ]
  %memberidx8 = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 1
  %11 = load ptr, ptr %memberidx8, align 8
  %memberidx9122 = getelementptr inbounds %Array_EnumNodeField_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx9122, align 4
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %ifend
  %memberidx44 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 3
  %memberidx46 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  br label %for.body

if.entry2:                                        ; preds = %else
  %14 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %7)
  %15 = load ptr, ptr %14, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx5, align 8
  %17 = tail call ptr %16(ptr nonnull %14)
  %18 = alloca ptr, align 8
  %19 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %18, ptr nonnull @95, ptr %17)
  %20 = load ptr, ptr %18, align 8
  %21 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i68 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i68, align 8
  %memberidx1.i69 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 %19, ptr %memberidx1.i69, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 %19, ptr %memberidx2.i, align 4
  tail call void @free(ptr %17)
  %22 = load ptr, ptr %memberidx, align 8
  %23 = load ptr, ptr %22, align 8
  %memberidx.i70 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %24 = load ptr, ptr %memberidx.i70, align 8
  %memberidx1.i71 = getelementptr inbounds %Compiler, ptr %24, i64 0, i32 6
  %25 = load ptr, ptr %memberidx1.i71, align 8
  %26 = call ptr @malloc(i32 24)
  store i64 5, ptr %26, align 4
  %memberidx1.i.i72 = getelementptr inbounds %FloError, ptr %26, i64 0, i32 2
  store ptr %23, ptr %memberidx1.i.i72, align 8
  %memberidx2.i.i73 = getelementptr inbounds %FloError, ptr %26, i64 0, i32 1
  store ptr %21, ptr %memberidx2.i.i73, align 8
  %memberidx.i.i74 = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i.i74, align 4
  %memberidx1.i2.i75 = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 3
  %28 = load i64, ptr %memberidx1.i2.i75, align 4
  %.not.i.i76 = icmp slt i64 %27, %28
  br i1 %.not.i.i76, label %if.entry2.TypeChecker_error.exit82_crit_edge, label %if.entry.i.i79

if.entry2.TypeChecker_error.exit82_crit_edge:     ; preds = %if.entry2
  %memberidx4.i.i80.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 1
  %.pre128 = load ptr, ptr %memberidx4.i.i80.phi.trans.insert, align 8
  br label %TypeChecker_error.exit82

if.entry.i.i79:                                   ; preds = %if.entry2
  %29 = shl i64 %28, 1
  store i64 %29, ptr %memberidx1.i2.i75, align 4
  %memberidx2.i.i.i78 = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2.i.i.i78, align 8
  %31 = shl i64 %28, 4
  %32 = call ptr @realloc(ptr %30, i64 %31)
  store ptr %32, ptr %memberidx2.i.i.i78, align 8
  %.pre = load i64, ptr %memberidx.i.i74, align 4
  br label %TypeChecker_error.exit82

TypeChecker_error.exit82:                         ; preds = %if.entry2.TypeChecker_error.exit82_crit_edge, %if.entry.i.i79
  %33 = phi ptr [ %.pre128, %if.entry2.TypeChecker_error.exit82_crit_edge ], [ %32, %if.entry.i.i79 ]
  %34 = phi i64 [ %27, %if.entry2.TypeChecker_error.exit82_crit_edge ], [ %.pre, %if.entry.i.i79 ]
  %35 = add i64 %34, 1
  store i64 %35, ptr %memberidx.i.i74, align 4
  %ptridx.i.i81 = getelementptr inbounds ptr, ptr %33, i64 %34
  store ptr %26, ptr %ptridx.i.i81, align 8
  br label %ifend

for.body:                                         ; preds = %for.body.lr.ph, %Array_EnumField____sl__.exit
  %36 = phi ptr [ %11, %for.body.lr.ph ], [ %62, %Array_EnumField____sl__.exit ]
  %storemerge124 = phi i64 [ 0, %for.body.lr.ph ], [ %61, %Array_EnumField____sl__.exit ]
  %storemerge67119123 = phi i64 [ 0, %for.body.lr.ph ], [ %storemerge67, %Array_EnumField____sl__.exit ]
  %memberidx.i83 = getelementptr inbounds %Array_EnumNodeField_, ptr %36, i64 0, i32 1
  %37 = load ptr, ptr %memberidx.i83, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %37, i64 %storemerge124
  %38 = load ptr, ptr %ptridx.i, align 8
  %39 = load ptr, ptr %38, align 8
  %memberidx12 = getelementptr inbounds %IdentifierToken, ptr %39, i64 0, i32 2
  %40 = load ptr, ptr %memberidx12, align 8
  %41 = tail call ptr @malloc(i32 24)
  %memberidx.i84 = getelementptr inbounds %EnumField, ptr %41, i64 0, i32 1
  store ptr %40, ptr %memberidx.i84, align 8
  %42 = tail call ptr @malloc(i32 24)
  %43 = load ptr, ptr %1, align 8
  store i64 1, ptr %42, align 4
  %memberidx1.i88 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 1
  store ptr %43, ptr %memberidx1.i88, align 8
  %memberidx2.i89 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  store i64 %storemerge124, ptr %memberidx2.i89, align 4
  store ptr %42, ptr %41, align 8
  %memberidx15 = getelementptr inbounds %EnumNodeField, ptr %38, i64 0, i32 1
  %44 = load ptr, ptr %memberidx15, align 8
  %.not = icmp eq ptr %44, null
  %memberidx41 = getelementptr inbounds %EnumField, ptr %41, i64 0, i32 2
  br i1 %.not, label %else17, label %if.entry16

common.ret:                                       ; preds = %Array_EnumField____sl__.exit, %ifend, %TypeChecker_error.exit, %TypeChecker_error.exit115
  ret void

if.entry16:                                       ; preds = %for.body
  %45 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %enum_variant.0, ptr nonnull %44)
  store ptr %45, ptr %memberidx41, align 8
  %memberidx22 = getelementptr inbounds %Expression, ptr %45, i64 0, i32 1
  %46 = load i1, ptr %memberidx22, align 1
  br i1 %46, label %ifend25, label %if.entry23

else17:                                           ; preds = %for.body
  %47 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %47, align 4
  %memberidx.i.i90 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i90, align 4
  %memberidx1.i.i91 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i91, align 1
  %memberidx.i92 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 3
  %48 = call ptr @malloc(i32 8)
  store i64 7, ptr %48, align 4
  %memberidx1.i93 = getelementptr inbounds %IntExpression, ptr %47, i64 0, i32 4
  store i64 %storemerge67119123, ptr %memberidx1.i93, align 4
  store i1 true, ptr %memberidx1.i.i91, align 1
  store ptr %47, ptr %memberidx41, align 8
  store ptr %enum_variant.0, ptr %memberidx.i92, align 8
  br label %ifend18

ifend18:                                          ; preds = %else17, %ifend32
  %storemerge67.in = phi i64 [ %113, %ifend32 ], [ %storemerge67119123, %else17 ]
  %storemerge67 = add i64 %storemerge67.in, 1
  %49 = load ptr, ptr %memberidx44, align 8
  %50 = load ptr, ptr %41, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %49, ptr %40, ptr %50)
  %51 = load ptr, ptr %memberidx46, align 8
  %memberidx.i95 = getelementptr inbounds %Array_EnumField_, ptr %51, i64 0, i32 2
  %52 = load i64, ptr %memberidx.i95, align 4
  %memberidx1.i96 = getelementptr inbounds %Array_EnumField_, ptr %51, i64 0, i32 3
  %53 = load i64, ptr %memberidx1.i96, align 4
  %.not.i = icmp slt i64 %52, %53
  br i1 %.not.i, label %ifend18.Array_EnumField____sl__.exit_crit_edge, label %if.entry.i

ifend18.Array_EnumField____sl__.exit_crit_edge:   ; preds = %ifend18
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_EnumField_, ptr %51, i64 0, i32 1
  %.pre134 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_EnumField____sl__.exit

if.entry.i:                                       ; preds = %ifend18
  %54 = shl i64 %53, 1
  store i64 %54, ptr %memberidx1.i96, align 4
  %memberidx2.i.i98 = getelementptr inbounds %Array_EnumField_, ptr %51, i64 0, i32 1
  %55 = load ptr, ptr %memberidx2.i.i98, align 8
  %56 = shl i64 %53, 4
  %57 = call ptr @realloc(ptr %55, i64 %56)
  store ptr %57, ptr %memberidx2.i.i98, align 8
  %.pre133 = load i64, ptr %memberidx.i95, align 4
  br label %Array_EnumField____sl__.exit

Array_EnumField____sl__.exit:                     ; preds = %ifend18.Array_EnumField____sl__.exit_crit_edge, %if.entry.i
  %58 = phi ptr [ %.pre134, %ifend18.Array_EnumField____sl__.exit_crit_edge ], [ %57, %if.entry.i ]
  %59 = phi i64 [ %52, %ifend18.Array_EnumField____sl__.exit_crit_edge ], [ %.pre133, %if.entry.i ]
  %60 = add i64 %59, 1
  store i64 %60, ptr %memberidx.i95, align 4
  %ptridx.i99 = getelementptr inbounds ptr, ptr %58, i64 %59
  store ptr %41, ptr %ptridx.i99, align 8
  %61 = add nuw nsw i64 %storemerge124, 1
  %62 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %Array_EnumNodeField_, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx9, align 4
  %64 = icmp slt i64 %61, %63
  br i1 %64, label %for.body, label %common.ret

if.entry23:                                       ; preds = %if.entry16
  %65 = call ptr @malloc(i32 296)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %65, ptr noundef nonnull align 8 dereferenceable(37) @96, i64 37, i1 false)
  %66 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %66, align 8
  %memberidx.i.i100 = getelementptr inbounds %string, ptr %66, i64 0, i32 1
  store ptr %65, ptr %memberidx.i.i100, align 8
  %memberidx1.i.i101 = getelementptr inbounds %string, ptr %66, i64 0, i32 2
  store i64 37, ptr %memberidx1.i.i101, align 4
  %memberidx2.i.i102 = getelementptr inbounds %string, ptr %66, i64 0, i32 3
  store i64 37, ptr %memberidx2.i.i102, align 4
  %67 = load ptr, ptr %memberidx15, align 8
  %68 = load ptr, ptr %67, align 8
  %memberidx.i103 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %69 = load ptr, ptr %memberidx.i103, align 8
  %memberidx1.i104 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 6
  %70 = load ptr, ptr %memberidx1.i104, align 8
  %71 = call ptr @malloc(i32 24)
  store i64 5, ptr %71, align 4
  %memberidx1.i.i105 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 2
  store ptr %68, ptr %memberidx1.i.i105, align 8
  %memberidx2.i.i106 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 1
  store ptr %66, ptr %memberidx2.i.i106, align 8
  %memberidx.i.i107 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 2
  %72 = load i64, ptr %memberidx.i.i107, align 4
  %memberidx1.i2.i108 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 3
  %73 = load i64, ptr %memberidx1.i2.i108, align 4
  %.not.i.i109 = icmp slt i64 %72, %73
  br i1 %.not.i.i109, label %if.entry23.TypeChecker_error.exit115_crit_edge, label %if.entry.i.i112

if.entry23.TypeChecker_error.exit115_crit_edge:   ; preds = %if.entry23
  %memberidx4.i.i113.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %.pre130 = load ptr, ptr %memberidx4.i.i113.phi.trans.insert, align 8
  br label %TypeChecker_error.exit115

if.entry.i.i112:                                  ; preds = %if.entry23
  %74 = shl i64 %73, 1
  store i64 %74, ptr %memberidx1.i2.i108, align 4
  %memberidx2.i.i.i111 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %75 = load ptr, ptr %memberidx2.i.i.i111, align 8
  %76 = shl i64 %73, 4
  %77 = call ptr @realloc(ptr %75, i64 %76)
  store ptr %77, ptr %memberidx2.i.i.i111, align 8
  %.pre129 = load i64, ptr %memberidx.i.i107, align 4
  br label %TypeChecker_error.exit115

TypeChecker_error.exit115:                        ; preds = %if.entry23.TypeChecker_error.exit115_crit_edge, %if.entry.i.i112
  %78 = phi ptr [ %.pre130, %if.entry23.TypeChecker_error.exit115_crit_edge ], [ %77, %if.entry.i.i112 ]
  %79 = phi i64 [ %72, %if.entry23.TypeChecker_error.exit115_crit_edge ], [ %.pre129, %if.entry.i.i112 ]
  %80 = add i64 %79, 1
  store i64 %80, ptr %memberidx.i.i107, align 4
  %ptridx.i.i114 = getelementptr inbounds ptr, ptr %78, i64 %79
  store ptr %71, ptr %ptridx.i.i114, align 8
  br label %common.ret

ifend25:                                          ; preds = %if.entry16
  %memberidx29 = getelementptr inbounds %Expression, ptr %45, i64 0, i32 3
  %81 = load ptr, ptr %memberidx29, align 8
  %82 = call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nonnull %enum_variant.0, ptr %81)
  br i1 %82, label %ifend32, label %if.entry30

if.entry30:                                       ; preds = %ifend25
  %83 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %enum_variant.0)
  %84 = load ptr, ptr %83, align 8
  %memberidx33 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %84, i64 0, i32 5
  %85 = load ptr, ptr %memberidx33, align 8
  %86 = call ptr %85(ptr nonnull %83)
  %87 = load ptr, ptr %memberidx41, align 8
  %memberidx35 = getelementptr inbounds %Expression, ptr %87, i64 0, i32 3
  %88 = load ptr, ptr %memberidx35, align 8
  %89 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %88)
  %90 = load ptr, ptr %89, align 8
  %memberidx36 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %90, i64 0, i32 5
  %91 = load ptr, ptr %memberidx36, align 8
  %92 = call ptr %91(ptr nonnull %89)
  %93 = alloca ptr, align 8
  %94 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %93, ptr nonnull @97, ptr %86, ptr %92)
  %95 = load ptr, ptr %93, align 8
  %96 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %96, align 8
  %memberidx.i85 = getelementptr inbounds %string, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i85, align 8
  %memberidx1.i86 = getelementptr inbounds %string, ptr %96, i64 0, i32 2
  store i64 %94, ptr %memberidx1.i86, align 4
  %memberidx2.i87 = getelementptr inbounds %string, ptr %96, i64 0, i32 3
  store i64 %94, ptr %memberidx2.i87, align 4
  tail call void @free(ptr %86)
  tail call void @free(ptr %92)
  %97 = load ptr, ptr %memberidx15, align 8
  %98 = load ptr, ptr %97, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %99 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %99, i64 0, i32 6
  %100 = load ptr, ptr %memberidx1.i, align 8
  %101 = call ptr @malloc(i32 24)
  store i64 5, ptr %101, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %101, i64 0, i32 2
  store ptr %98, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %101, i64 0, i32 1
  store ptr %96, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 2
  %102 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 3
  %103 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %102, %103
  br i1 %.not.i.i, label %if.entry30.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry30.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry30
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 1
  %.pre132 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry30
  %104 = shl i64 %103, 1
  store i64 %104, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 1
  %105 = load ptr, ptr %memberidx2.i.i.i, align 8
  %106 = shl i64 %103, 4
  %107 = call ptr @realloc(ptr %105, i64 %106)
  store ptr %107, ptr %memberidx2.i.i.i, align 8
  %.pre131 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry30.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %108 = phi ptr [ %.pre132, %if.entry30.TypeChecker_error.exit_crit_edge ], [ %107, %if.entry.i.i ]
  %109 = phi i64 [ %102, %if.entry30.TypeChecker_error.exit_crit_edge ], [ %.pre131, %if.entry.i.i ]
  %110 = add i64 %109, 1
  store i64 %110, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %108, i64 %109
  store ptr %101, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend32:                                          ; preds = %ifend25
  %111 = load ptr, ptr %0, align 8
  %112 = load ptr, ptr %memberidx41, align 8
  %113 = call fastcc i64 @evaluate_const_int_expression(ptr %111, ptr %112)
  br label %ifend18
}

define internal fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %ExpressionNode, ptr %2, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  switch i64 %4, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 3, label %if.entry6
    i64 2, label %if.entry10
    i64 6, label %if.entry14
    i64 7, label %if.entry18
    i64 8, label %if.entry22
    i64 9, label %if.entry26
    i64 15, label %if.entry30
    i64 10, label %if.entry34
    i64 11, label %if.entry38
    i64 12, label %if.entry42
    i64 13, label %if.entry46
    i64 14, label %if.entry50
  ]

common.ret:                                       ; preds = %3, %if.entry.i, %if.entry2, %if.entry.i119, %if.entry, %if.entry50, %if.entry46, %if.entry42, %if.entry38, %if.entry34, %if.entry30, %if.entry26, %if.entry22, %if.entry18, %if.entry14, %TypeChecker_check_string_expression.exit, %if.entry6
  %common.ret.op = phi ptr [ %19, %if.entry6 ], [ %53, %TypeChecker_check_string_expression.exit ], [ %57, %if.entry14 ], [ %58, %if.entry18 ], [ %59, %if.entry22 ], [ %60, %if.entry26 ], [ %61, %if.entry30 ], [ %62, %if.entry34 ], [ %63, %if.entry38 ], [ %64, %if.entry42 ], [ %65, %if.entry46 ], [ %66, %if.entry50 ], [ %5, %if.entry ], [ %5, %if.entry.i119 ], [ %12, %if.entry2 ], [ %12, %if.entry.i ], [ null, %3 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %5 = tail call ptr @malloc(i32 33)
  %memberidx.i111 = getelementptr inbounds %IntExpressionNode, ptr %2, i64 0, i32 3
  %6 = load ptr, ptr %memberidx.i111, align 8
  %memberidx1.i112 = getelementptr inbounds %IntToken, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx1.i112, align 4
  store i64 8, ptr %5, align 4
  %memberidx.i.i.i113 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i113, align 4
  %memberidx1.i.i.i114 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 1
  %memberidx.i.i115 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %8 = tail call ptr @malloc(i32 8)
  store i64 7, ptr %8, align 4
  store ptr %8, ptr %memberidx.i.i115, align 8
  %memberidx1.i.i116 = getelementptr inbounds %IntExpression, ptr %5, i64 0, i32 4
  store i64 %7, ptr %memberidx1.i.i116, align 4
  store i1 true, ptr %memberidx1.i.i.i114, align 1
  %9 = load i64, ptr %1, align 4
  %10 = add i64 %9, -1
  %11 = icmp ult i64 %10, 7
  br i1 %11, label %if.entry.i119, label %common.ret

if.entry.i119:                                    ; preds = %if.entry
  store ptr %1, ptr %memberidx.i.i115, align 8
  br label %common.ret

if.entry2:                                        ; preds = %3
  %12 = tail call ptr @malloc(i32 33)
  %memberidx.i103 = getelementptr inbounds %FloatExpressionNode, ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %memberidx.i103, align 8
  %memberidx1.i104 = getelementptr inbounds %FloatToken, ptr %13, i64 0, i32 2
  %14 = load double, ptr %memberidx1.i104, align 8
  store i64 8, ptr %12, align 4
  %memberidx.i.i.i105 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i.i105, align 4
  %memberidx1.i.i.i106 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 1
  %memberidx.i.i107 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 3
  %15 = tail call ptr @malloc(i32 8)
  store i64 11, ptr %15, align 4
  store ptr %15, ptr %memberidx.i.i107, align 8
  %memberidx1.i.i108 = getelementptr inbounds %FloatExpression, ptr %12, i64 0, i32 4
  store double %14, ptr %memberidx1.i.i108, align 8
  store i1 true, ptr %memberidx1.i.i.i106, align 1
  %16 = load i64, ptr %1, align 4
  %17 = and i64 %16, -4
  %18 = icmp eq i64 %17, 8
  br i1 %18, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %if.entry2
  store ptr %1, ptr %memberidx.i.i107, align 8
  br label %common.ret

if.entry6:                                        ; preds = %3
  %19 = tail call ptr @malloc(i32 33)
  %memberidx.i = getelementptr inbounds %CharExpressionNode, ptr %2, i64 0, i32 3
  %20 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %CharToken, ptr %20, i64 0, i32 2
  %21 = load i8, ptr %memberidx1.i, align 1
  %22 = sext i8 %21 to i64
  store i64 8, ptr %19, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %19, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %19, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  %23 = tail call ptr @malloc(i32 8)
  store ptr %23, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %IntExpression, ptr %19, i64 0, i32 4
  store i64 %22, ptr %memberidx1.i.i, align 4
  store i1 true, ptr %memberidx1.i.i.i, align 1
  store i64 2, ptr %23, align 4
  br label %common.ret

if.entry10:                                       ; preds = %3
  %24 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %24, align 8
  %memberidx.i38.i = getelementptr inbounds %Array_Expression_, ptr %24, i64 0, i32 2
  store i64 0, ptr %memberidx.i38.i, align 4
  %memberidx1.i39.i = getelementptr inbounds %Array_Expression_, ptr %24, i64 0, i32 3
  store i64 8, ptr %memberidx1.i39.i, align 4
  %memberidx2.i40.i = getelementptr inbounds %Array_Expression_, ptr %24, i64 0, i32 1
  %25 = tail call ptr @malloc(i32 64)
  store ptr %25, ptr %memberidx2.i40.i, align 8
  store i64 0, ptr %memberidx.i38.i, align 4
  %memberidx2.i121 = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 4
  %26 = load ptr, ptr %memberidx2.i121, align 8
  %27 = tail call ptr @malloc(i32 25)
  %memberidx.i34.i = getelementptr inbounds %Array_ExpressionNode_, ptr %26, i64 0, i32 1
  %28 = load ptr, ptr %memberidx.i34.i, align 8
  %memberidx1.i35.i = getelementptr inbounds %Array_ExpressionNode_, ptr %26, i64 0, i32 2
  %29 = load i64, ptr %memberidx1.i35.i, align 4
  store i1 false, ptr %27, align 1
  %memberidx1.i.i36.i = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %27, i64 0, i32 1
  %memberidx2.i.i37.i = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %27, i64 0, i32 3
  store ptr %28, ptr %memberidx2.i.i37.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %27, i64 0, i32 2
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i36.i, align 4
  %30 = icmp slt i64 %29, 1
  br i1 %30, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.entry10, %Array_Expression____sl__.exit.i
  %31 = phi i64 [ %43, %Array_Expression____sl__.exit.i ], [ 1, %if.entry10 ]
  %arg.0.i129.in = phi ptr [ %ptridx.i.i, %Array_Expression____sl__.exit.i ], [ %28, %if.entry10 ]
  %arg.0.i129 = load ptr, ptr %arg.0.i129.in, align 8
  %32 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %32, align 4
  %33 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %32, ptr %arg.0.i129)
  %34 = load i64, ptr %memberidx.i38.i, align 4
  %35 = load i64, ptr %memberidx1.i39.i, align 4
  %.not.i.i = icmp slt i64 %34, %35
  br i1 %.not.i.i, label %for.body.i.Array_Expression____sl__.exit.i_crit_edge, label %if.entry.i27.i

for.body.i.Array_Expression____sl__.exit.i_crit_edge: ; preds = %for.body.i
  %.pre130 = load ptr, ptr %memberidx2.i40.i, align 8
  br label %Array_Expression____sl__.exit.i

if.entry.i27.i:                                   ; preds = %for.body.i
  %36 = shl i64 %35, 1
  store i64 %36, ptr %memberidx1.i39.i, align 4
  %37 = load ptr, ptr %memberidx2.i40.i, align 8
  %38 = shl i64 %35, 4
  %39 = tail call ptr @realloc(ptr %37, i64 %38)
  store ptr %39, ptr %memberidx2.i40.i, align 8
  %.pre = load i64, ptr %memberidx.i38.i, align 4
  br label %Array_Expression____sl__.exit.i

Array_Expression____sl__.exit.i:                  ; preds = %for.body.i.Array_Expression____sl__.exit.i_crit_edge, %if.entry.i27.i
  %40 = phi ptr [ %39, %if.entry.i27.i ], [ %.pre130, %for.body.i.Array_Expression____sl__.exit.i_crit_edge ]
  %41 = phi i64 [ %.pre, %if.entry.i27.i ], [ %34, %for.body.i.Array_Expression____sl__.exit.i_crit_edge ]
  %42 = add i64 %41, 1
  store i64 %42, ptr %memberidx.i38.i, align 4
  %ptridx.i29.i = getelementptr inbounds ptr, ptr %40, i64 %41
  store ptr %33, ptr %ptridx.i29.i, align 8
  %43 = add i64 %31, 1
  store i64 %43, ptr %memberidx1.i.i36.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %28, i64 %31
  %44 = icmp sgt i64 %43, %29
  br i1 %44, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %Array_Expression____sl__.exit.i, %if.entry10
  tail call void @free(ptr nonnull %27)
  %45 = load i64, ptr %1, align 4
  %46 = icmp eq i64 %45, 15
  br i1 %46, label %if.entry.i.i, label %if.entry.i122

if.entry.i.i:                                     ; preds = %for.end.i
  %memberidx1.i20.i = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %47 = load ptr, ptr %memberidx1.i20.i, align 8
  %48 = load i64, ptr %47, align 4
  %49 = icmp eq i64 %48, 2
  br i1 %49, label %TypeChecker_check_string_expression.exit, label %if.entry.i122

if.entry.i122:                                    ; preds = %for.end.i, %if.entry.i.i
  %50 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %50, ptr noundef nonnull align 8 dereferenceable(6) @164, i64 6, i1 false)
  %51 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %51, align 8
  %memberidx.i.i18.i = getelementptr inbounds %string, ptr %51, i64 0, i32 1
  store ptr %50, ptr %memberidx.i.i18.i, align 8
  %memberidx1.i.i19.i = getelementptr inbounds %string, ptr %51, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i19.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %51, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i.i, align 4
  %52 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %51)
  br label %TypeChecker_check_string_expression.exit

TypeChecker_check_string_expression.exit:         ; preds = %if.entry.i.i, %if.entry.i122
  %expected_type.0.i = phi ptr [ %52, %if.entry.i122 ], [ %1, %if.entry.i.i ]
  %53 = tail call ptr @malloc(i32 49)
  %memberidx4.i = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 3
  %54 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %StrToken, ptr %54, i64 0, i32 2
  %55 = load ptr, ptr %memberidx5.i, align 8
  %memberidx7.i = getelementptr inbounds %StrToken, ptr %54, i64 0, i32 3
  %56 = load ptr, ptr %memberidx7.i, align 8
  store i64 8, ptr %53, align 4
  %memberidx.i.i.i123 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i.i123, align 4
  %memberidx1.i.i.i124 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 1
  %memberidx.i.i125 = getelementptr inbounds %StringExpression, ptr %53, i64 0, i32 6
  store ptr %24, ptr %memberidx.i.i125, align 8
  %memberidx1.i.i126 = getelementptr inbounds %StringExpression, ptr %53, i64 0, i32 5
  store ptr %56, ptr %memberidx1.i.i126, align 8
  %memberidx2.i.i127 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 3
  %memberidx3.i.i = getelementptr inbounds %StringExpression, ptr %53, i64 0, i32 4
  store ptr %55, ptr %memberidx3.i.i, align 8
  store i1 true, ptr %memberidx1.i.i.i124, align 1
  store ptr %expected_type.0.i, ptr %memberidx2.i.i127, align 8
  br label %common.ret

if.entry14:                                       ; preds = %3
  %57 = tail call fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry18:                                       ; preds = %3
  %58 = tail call fastcc ptr @TypeChecker_check_var_access_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry22:                                       ; preds = %3
  %59 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry26:                                       ; preds = %3
  %60 = tail call fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry30:                                       ; preds = %3
  %61 = tail call fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry34:                                       ; preds = %3
  %62 = tail call fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry38:                                       ; preds = %3
  %63 = tail call fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry42:                                       ; preds = %3
  %64 = tail call fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry46:                                       ; preds = %3
  %65 = tail call fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry50:                                       ; preds = %3
  %66 = tail call fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nonnull %2)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_var_access_expr(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %4, i64 0, i32 2
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call ptr @malloc(i32 32)
  store i32 1702195828, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  %8 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %8, 4
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %3
  %memberidx2.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  %9 = load ptr, ptr %memberidx2.i, align 8
  %10 = tail call i64 @memcmp(ptr %9, ptr nonnull %6, i64 4)
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend14, %TypeChecker_error.exit, %if.entry5, %if.entry2, %if.entry
  %common.ret.op = phi ptr [ %12, %if.entry ], [ %20, %if.entry2 ], [ %28, %if.entry5 ], [ null, %TypeChecker_error.exit ], [ %63, %ifend14 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %ifend.i
  %12 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %12, align 4
  %memberidx.i.i50 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i50, align 4
  %memberidx1.i.i51 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %13, align 4
  %memberidx.i52 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 3
  store ptr %13, ptr %memberidx.i52, align 8
  %memberidx1.i53 = getelementptr inbounds %BooleanExpression, ptr %12, i64 0, i32 4
  store i1 true, ptr %memberidx1.i53, align 1
  store i1 true, ptr %memberidx1.i.i51, align 1
  br label %common.ret

ifend:                                            ; preds = %3, %ifend.i
  %14 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %14, ptr noundef nonnull align 8 dereferenceable(5) @84, i64 5, i1 false)
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i.i55 = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i.i55, align 8
  %memberidx1.i.i56 = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i56, align 4
  %memberidx2.i.i57 = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i57, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i60 = icmp eq i64 %16, 5
  br i1 %.not.i60, label %ifend.i64, label %ifend4

ifend.i64:                                        ; preds = %ifend
  %memberidx2.i62 = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i62, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 5)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend.i64
  %20 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %20, align 4
  %memberidx.i.i66 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i66, align 4
  %memberidx1.i.i67 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 1
  %21 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %21, align 4
  %memberidx.i68 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  store ptr %21, ptr %memberidx.i68, align 8
  %memberidx1.i69 = getelementptr inbounds %BooleanExpression, ptr %20, i64 0, i32 4
  store i1 false, ptr %memberidx1.i69, align 1
  store i1 true, ptr %memberidx1.i.i67, align 1
  br label %common.ret

ifend4:                                           ; preds = %ifend, %ifend.i64
  %22 = tail call ptr @malloc(i32 32)
  store i32 1819047278, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %23, align 8
  %memberidx.i.i71 = getelementptr inbounds %string, ptr %23, i64 0, i32 1
  store ptr %22, ptr %memberidx.i.i71, align 8
  %memberidx1.i.i72 = getelementptr inbounds %string, ptr %23, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i72, align 4
  %memberidx2.i.i73 = getelementptr inbounds %string, ptr %23, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i73, align 4
  %24 = load i64, ptr %memberidx.i, align 4
  %.not.i76 = icmp eq i64 %24, 4
  br i1 %.not.i76, label %ifend.i80, label %ifend7

ifend.i80:                                        ; preds = %ifend4
  %memberidx2.i78 = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i78, align 8
  %26 = tail call i64 @memcmp(ptr %25, ptr nonnull %22, i64 4)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend.i80
  %28 = tail call ptr @malloc(i32 25)
  store i64 8, ptr %28, align 4
  %memberidx.i.i82 = getelementptr inbounds %Expression, ptr %28, i64 0, i32 2
  store i64 5, ptr %memberidx.i.i82, align 4
  %memberidx1.i.i83 = getelementptr inbounds %Expression, ptr %28, i64 0, i32 1
  %memberidx.i84 = getelementptr inbounds %Expression, ptr %28, i64 0, i32 3
  store ptr %1, ptr %memberidx.i84, align 8
  store i1 true, ptr %memberidx1.i.i83, align 1
  br label %common.ret

ifend7:                                           ; preds = %ifend4, %ifend.i80
  %29 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr nonnull %5)
  %30 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %30, align 4
  %.not = icmp eq ptr %29, null
  br i1 %.not, label %ifend10, label %if.entry8

if.entry8:                                        ; preds = %ifend7
  %31 = load i64, ptr %29, align 4
  switch i64 %31, label %else25 [
    i64 0, label %if.entry12
    i64 1, label %if.entry18
    i64 2, label %if.entry24
  ]

ifend10:                                          ; preds = %ifend7
  %32 = load ptr, ptr %5, align 8
  %memberidx38 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %32, i64 0, i32 5
  %33 = load ptr, ptr %memberidx38, align 8
  %34 = tail call ptr %33(ptr nonnull %5)
  %35 = alloca ptr, align 8
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %35, ptr nonnull @147, ptr %34)
  %37 = load ptr, ptr %35, align 8
  %38 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %38, align 8
  %memberidx.i89 = getelementptr inbounds %string, ptr %38, i64 0, i32 1
  store ptr %37, ptr %memberidx.i89, align 8
  %memberidx1.i90 = getelementptr inbounds %string, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx1.i90, align 4
  %memberidx2.i91 = getelementptr inbounds %string, ptr %38, i64 0, i32 3
  store i64 %36, ptr %memberidx2.i91, align 4
  tail call void @free(ptr %34)
  %39 = load ptr, ptr %2, align 8
  %memberidx.i92 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %40 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i93 = getelementptr inbounds %Compiler, ptr %40, i64 0, i32 6
  %41 = load ptr, ptr %memberidx1.i93, align 8
  %42 = call ptr @malloc(i32 24)
  store i64 1, ptr %42, align 4
  %memberidx1.i.i94 = getelementptr inbounds %FloError, ptr %42, i64 0, i32 2
  store ptr %39, ptr %memberidx1.i.i94, align 8
  %memberidx2.i.i95 = getelementptr inbounds %FloError, ptr %42, i64 0, i32 1
  store ptr %38, ptr %memberidx2.i.i95, align 8
  %memberidx.i.i96 = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 2
  %43 = load i64, ptr %memberidx.i.i96, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 3
  %44 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %43, %44
  br i1 %.not.i.i, label %ifend10.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

ifend10.TypeChecker_error.exit_crit_edge:         ; preds = %ifend10
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %.pre129 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %ifend10
  %45 = shl i64 %44, 1
  store i64 %45, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i.i, align 8
  %47 = shl i64 %44, 4
  %48 = call ptr @realloc(ptr %46, i64 %47)
  store ptr %48, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i96, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %ifend10.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %49 = phi ptr [ %.pre129, %ifend10.TypeChecker_error.exit_crit_edge ], [ %48, %if.entry.i.i ]
  %50 = phi i64 [ %43, %ifend10.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %51 = add i64 %50, 1
  store i64 %51, ptr %memberidx.i.i96, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %49, i64 %50
  store ptr %42, ptr %ptridx.i.i, align 8
  br label %common.ret

if.entry12:                                       ; preds = %if.entry8
  %52 = load ptr, ptr %0, align 8
  %memberidx.i98 = getelementptr inbounds %Program, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i98, align 8
  %memberidx1.i99 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 1
  %54 = load i64, ptr %memberidx1.i99, align 4
  %memberidx.i.i100 = getelementptr inbounds %Array_Module_, ptr %53, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i.i100, align 8
  %ptridx.i.i101 = getelementptr inbounds ptr, ptr %55, i64 %54
  %56 = load ptr, ptr %ptridx.i.i101, align 8
  %memberidx2.i102 = getelementptr inbounds %Module, ptr %56, i64 0, i32 5
  %57 = load ptr, ptr %memberidx2.i102, align 8
  %memberidx3.i103 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 2
  %58 = load i64, ptr %memberidx3.i103, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Function_, ptr %57, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %59, i64 %58
  %60 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx16 = getelementptr inbounds %Function, ptr %60, i64 0, i32 4
  %61 = load ptr, ptr %memberidx16, align 8
  br label %ifend14

ifend14:                                          ; preds = %if.entry35, %else32, %if.entry31, %if.entry24, %if.entry18, %if.entry12
  %62 = phi ptr [ %90, %if.entry35 ], [ %30, %else32 ], [ %88, %if.entry31 ], [ %85, %if.entry24 ], [ %75, %if.entry18 ], [ %61, %if.entry12 ]
  %63 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %63, align 4
  %memberidx.i.i104 = getelementptr inbounds %Expression, ptr %63, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i104, align 4
  %memberidx1.i.i105 = getelementptr inbounds %Expression, ptr %63, i64 0, i32 1
  %memberidx.i106 = getelementptr inbounds %VarAccessExpression, ptr %63, i64 0, i32 4
  store ptr %29, ptr %memberidx.i106, align 8
  %memberidx1.i107 = getelementptr inbounds %Expression, ptr %63, i64 0, i32 3
  store ptr %62, ptr %memberidx1.i107, align 8
  %64 = load i64, ptr %29, align 4
  %65 = icmp eq i64 %64, 2
  store i1 %65, ptr %memberidx1.i.i105, align 1
  br label %common.ret

if.entry18:                                       ; preds = %if.entry8
  %66 = load ptr, ptr %0, align 8
  %memberidx.i117 = getelementptr inbounds %Program, ptr %66, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i117, align 8
  %memberidx1.i118 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 1
  %68 = load i64, ptr %memberidx1.i118, align 4
  %memberidx.i.i119 = getelementptr inbounds %Array_Module_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i.i119, align 8
  %ptridx.i.i120 = getelementptr inbounds ptr, ptr %69, i64 %68
  %70 = load ptr, ptr %ptridx.i.i120, align 8
  %memberidx2.i121 = getelementptr inbounds %Module, ptr %70, i64 0, i32 2
  %71 = load ptr, ptr %memberidx2.i121, align 8
  %memberidx3.i122 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 2
  %72 = load i64, ptr %memberidx3.i122, align 4
  %memberidx.i5.i123 = getelementptr inbounds %Array_Var_, ptr %71, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i5.i123, align 8
  %ptridx.i6.i124 = getelementptr inbounds ptr, ptr %73, i64 %72
  %74 = load ptr, ptr %ptridx.i6.i124, align 8
  %75 = load ptr, ptr %74, align 8
  br label %ifend14

if.entry24:                                       ; preds = %if.entry8
  %76 = load ptr, ptr %0, align 8
  %memberidx.i109 = getelementptr inbounds %Program, ptr %76, i64 0, i32 1
  %77 = load ptr, ptr %memberidx.i109, align 8
  %memberidx1.i110 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 1
  %78 = load i64, ptr %memberidx1.i110, align 4
  %memberidx.i.i111 = getelementptr inbounds %Array_Module_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i.i111, align 8
  %ptridx.i.i112 = getelementptr inbounds ptr, ptr %79, i64 %78
  %80 = load ptr, ptr %ptridx.i.i112, align 8
  %memberidx2.i113 = getelementptr inbounds %Module, ptr %80, i64 0, i32 3
  %81 = load ptr, ptr %memberidx2.i113, align 8
  %memberidx3.i114 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 2
  %82 = load i64, ptr %memberidx3.i114, align 4
  %memberidx.i5.i115 = getelementptr inbounds %Array_Const_, ptr %81, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i5.i115, align 8
  %ptridx.i6.i116 = getelementptr inbounds ptr, ptr %83, i64 %82
  %84 = load ptr, ptr %ptridx.i6.i116, align 8
  %85 = load ptr, ptr %84, align 8
  br label %ifend14

else25:                                           ; preds = %if.entry8
  %86 = add i64 %31, -3
  %87 = icmp ult i64 %86, 2
  br i1 %87, label %if.entry31, label %else32

if.entry31:                                       ; preds = %else25
  %88 = tail call ptr @malloc(i32 8)
  store i64 18, ptr %88, align 4
  br label %ifend14

else32:                                           ; preds = %else25
  %89 = icmp eq i64 %31, 5
  br i1 %89, label %if.entry35, label %ifend14

if.entry35:                                       ; preds = %else32
  %90 = tail call ptr @malloc(i32 8)
  store i64 19, ptr %90, align 4
  br label %ifend14
}

define internal fastcc ptr @TypeChecker_check_intrinsic_call(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  %5 = add i64 %4, -3
  %6 = icmp ult i64 %5, 2
  %7 = icmp eq i64 %4, 7
  %8 = or i1 %7, %6
  %memberidx2 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 2
  %9 = load i64, ptr %memberidx2, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx3 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %memberidx.i135 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  %memberidx.i138 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  br label %for.body

for.cond:                                         ; preds = %Array_Expression____sl__.exit
  %11 = add nuw nsw i64 %i.0248, 1
  %12 = load i64, ptr %memberidx2, align 4
  %13 = icmp slt i64 %11, %12
  br i1 %13, label %for.body, label %for.end

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %i.0248 = phi i64 [ 0, %for.body.lr.ph ], [ %11, %for.cond ]
  %14 = icmp eq i64 %i.0248, 1
  %15 = and i1 %8, %14
  br i1 %15, label %true_block, label %false_block

for.end:                                          ; preds = %for.cond, %for.entry
  %memberidx6 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %16 = load ptr, ptr %memberidx6, align 8
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %16, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i, align 8
  %18 = load ptr, ptr %17, align 8
  %memberidx7 = getelementptr inbounds %Expression, ptr %18, i64 0, i32 3
  %19 = load ptr, ptr %memberidx7, align 8
  %20 = load i64, ptr %19, align 4
  %21 = icmp eq i64 %20, 15
  br i1 %21, label %ifend10, label %if.entry8

true_block:                                       ; preds = %for.body
  %22 = tail call ptr @malloc(i32 8)
  store i64 22, ptr %22, align 4
  %.pre = load ptr, ptr %memberidx3, align 8
  br label %end

false_block:                                      ; preds = %for.body
  %23 = load ptr, ptr %memberidx3, align 8
  %memberidx.i134 = getelementptr inbounds %Array_Expression_, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i134, align 8
  %25 = load ptr, ptr %24, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx4, align 8
  br label %end

end:                                              ; preds = %false_block, %true_block
  %27 = phi ptr [ %.pre, %true_block ], [ %23, %false_block ]
  %ternary = phi ptr [ %22, %true_block ], [ %26, %false_block ]
  %28 = load ptr, ptr %memberidx.i135, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %28, i64 %i.0248
  %29 = load ptr, ptr %ptridx.i, align 8
  %30 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %ternary, ptr %29)
  %memberidx.i136 = getelementptr inbounds %Array_Expression_, ptr %27, i64 0, i32 2
  %31 = load i64, ptr %memberidx.i136, align 4
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %27, i64 0, i32 3
  %32 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %31, %32
  br i1 %.not.i, label %end.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

end.Array_Expression____sl__.exit_crit_edge:      ; preds = %end
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Expression_, ptr %27, i64 0, i32 1
  %.pre250 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %end
  %33 = shl i64 %32, 1
  store i64 %33, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Expression_, ptr %27, i64 0, i32 1
  %34 = load ptr, ptr %memberidx2.i.i, align 8
  %35 = shl i64 %32, 4
  %36 = tail call ptr @realloc(ptr %34, i64 %35)
  store ptr %36, ptr %memberidx2.i.i, align 8
  %.pre249 = load i64, ptr %memberidx.i136, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %end.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %37 = phi ptr [ %.pre250, %end.Array_Expression____sl__.exit_crit_edge ], [ %36, %if.entry.i ]
  %38 = phi i64 [ %31, %end.Array_Expression____sl__.exit_crit_edge ], [ %.pre249, %if.entry.i ]
  %39 = add i64 %38, 1
  store i64 %39, ptr %memberidx.i136, align 4
  %ptridx.i137 = getelementptr inbounds ptr, ptr %37, i64 %38
  store ptr %30, ptr %ptridx.i137, align 8
  %40 = load ptr, ptr %memberidx.i138, align 8
  %memberidx1.i139 = getelementptr inbounds %Compiler, ptr %40, i64 0, i32 6
  %41 = load ptr, ptr %memberidx1.i139, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 2
  %42 = load i64, ptr %memberidx2.i, align 4
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %common.ret, label %for.cond

common.ret:                                       ; preds = %Array_Expression____sl__.exit, %ifend23, %ifend73, %if.entry79, %else17, %TypeChecker_error.exit245, %TypeChecker_error.exit223, %TypeChecker_error.exit201, %TypeChecker_error.exit185, %TypeChecker_error.exit163, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit163 ], [ null, %TypeChecker_error.exit185 ], [ null, %TypeChecker_error.exit201 ], [ null, %TypeChecker_error.exit223 ], [ null, %TypeChecker_error.exit245 ], [ %1, %else17 ], [ %1, %if.entry79 ], [ %1, %ifend73 ], [ %1, %ifend23 ], [ null, %Array_Expression____sl__.exit ]
  ret ptr %common.ret.op

if.entry8:                                        ; preds = %for.end
  %44 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %19)
  %45 = load ptr, ptr %44, align 8
  %memberidx13 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %45, i64 0, i32 5
  %46 = load ptr, ptr %memberidx13, align 8
  %47 = tail call ptr %46(ptr nonnull %44)
  %48 = alloca ptr, align 8
  %49 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %48, ptr nonnull @192, ptr %47)
  %50 = load ptr, ptr %48, align 8
  %51 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %51, align 8
  %memberidx.i141 = getelementptr inbounds %string, ptr %51, i64 0, i32 1
  store ptr %50, ptr %memberidx.i141, align 8
  %memberidx1.i142 = getelementptr inbounds %string, ptr %51, i64 0, i32 2
  store i64 %49, ptr %memberidx1.i142, align 4
  %memberidx2.i143 = getelementptr inbounds %string, ptr %51, i64 0, i32 3
  store i64 %49, ptr %memberidx2.i143, align 4
  tail call void @free(ptr %47)
  %memberidx14 = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 3
  %52 = load ptr, ptr %memberidx14, align 8
  %53 = load ptr, ptr %52, align 8
  %memberidx.i144 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %54 = load ptr, ptr %memberidx.i144, align 8
  %memberidx1.i145 = getelementptr inbounds %Compiler, ptr %54, i64 0, i32 6
  %55 = load ptr, ptr %memberidx1.i145, align 8
  %56 = call ptr @malloc(i32 24)
  store i64 5, ptr %56, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 2
  store ptr %53, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i146 = getelementptr inbounds %FloError, ptr %56, i64 0, i32 1
  store ptr %51, ptr %memberidx2.i.i146, align 8
  %memberidx.i.i147 = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %57 = load i64, ptr %memberidx.i.i147, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 3
  %58 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %57, %58
  br i1 %.not.i.i, label %if.entry8.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry8.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry8
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %.pre252 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry8
  %59 = shl i64 %58, 1
  store i64 %59, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %60 = load ptr, ptr %memberidx2.i.i.i, align 8
  %61 = shl i64 %58, 4
  %62 = call ptr @realloc(ptr %60, i64 %61)
  store ptr %62, ptr %memberidx2.i.i.i, align 8
  %.pre251 = load i64, ptr %memberidx.i.i147, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry8.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %63 = phi ptr [ %.pre252, %if.entry8.TypeChecker_error.exit_crit_edge ], [ %62, %if.entry.i.i ]
  %64 = phi i64 [ %57, %if.entry8.TypeChecker_error.exit_crit_edge ], [ %.pre251, %if.entry.i.i ]
  %65 = add i64 %64, 1
  store i64 %65, ptr %memberidx.i.i147, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %63, i64 %64
  store ptr %56, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend10:                                          ; preds = %for.end
  %66 = icmp eq i64 %4, 6
  br i1 %66, label %if.entry16, label %else17

if.entry16:                                       ; preds = %ifend10
  %memberidx20 = getelementptr inbounds %Array_Expression_, ptr %16, i64 0, i32 2
  %67 = load i64, ptr %memberidx20, align 4
  %.not133 = icmp eq i64 %67, 2
  br i1 %.not133, label %ifend23, label %if.entry21

else17:                                           ; preds = %ifend10
  %68 = icmp eq i64 %4, 5
  switch i64 %4, label %common.ret [
    i64 7, label %if.entry40
    i64 5, label %if.entry40
    i64 4, label %if.entry40
    i64 3, label %if.entry40
  ]

if.entry21:                                       ; preds = %if.entry16
  %69 = alloca ptr, align 8
  %70 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %69, ptr nonnull @193, i64 %67)
  %71 = load ptr, ptr %69, align 8
  %72 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %72, align 8
  %memberidx.i148 = getelementptr inbounds %string, ptr %72, i64 0, i32 1
  store ptr %71, ptr %memberidx.i148, align 8
  %memberidx1.i149 = getelementptr inbounds %string, ptr %72, i64 0, i32 2
  store i64 %70, ptr %memberidx1.i149, align 4
  %memberidx2.i150 = getelementptr inbounds %string, ptr %72, i64 0, i32 3
  store i64 %70, ptr %memberidx2.i150, align 4
  %73 = load ptr, ptr %2, align 8
  %memberidx.i151 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %74 = load ptr, ptr %memberidx.i151, align 8
  %memberidx1.i152 = getelementptr inbounds %Compiler, ptr %74, i64 0, i32 6
  %75 = load ptr, ptr %memberidx1.i152, align 8
  %76 = call ptr @malloc(i32 24)
  store i64 4, ptr %76, align 4
  %memberidx1.i.i153 = getelementptr inbounds %FloError, ptr %76, i64 0, i32 2
  store ptr %73, ptr %memberidx1.i.i153, align 8
  %memberidx2.i.i154 = getelementptr inbounds %FloError, ptr %76, i64 0, i32 1
  store ptr %72, ptr %memberidx2.i.i154, align 8
  %memberidx.i.i155 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 2
  %77 = load i64, ptr %memberidx.i.i155, align 4
  %memberidx1.i2.i156 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 3
  %78 = load i64, ptr %memberidx1.i2.i156, align 4
  %.not.i.i157 = icmp slt i64 %77, %78
  br i1 %.not.i.i157, label %if.entry21.TypeChecker_error.exit163_crit_edge, label %if.entry.i.i160

if.entry21.TypeChecker_error.exit163_crit_edge:   ; preds = %if.entry21
  %memberidx4.i.i161.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 1
  %.pre260 = load ptr, ptr %memberidx4.i.i161.phi.trans.insert, align 8
  br label %TypeChecker_error.exit163

if.entry.i.i160:                                  ; preds = %if.entry21
  %79 = shl i64 %78, 1
  store i64 %79, ptr %memberidx1.i2.i156, align 4
  %memberidx2.i.i.i159 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 1
  %80 = load ptr, ptr %memberidx2.i.i.i159, align 8
  %81 = shl i64 %78, 4
  %82 = call ptr @realloc(ptr %80, i64 %81)
  store ptr %82, ptr %memberidx2.i.i.i159, align 8
  %.pre259 = load i64, ptr %memberidx.i.i155, align 4
  br label %TypeChecker_error.exit163

TypeChecker_error.exit163:                        ; preds = %if.entry21.TypeChecker_error.exit163_crit_edge, %if.entry.i.i160
  %83 = phi ptr [ %.pre260, %if.entry21.TypeChecker_error.exit163_crit_edge ], [ %82, %if.entry.i.i160 ]
  %84 = phi i64 [ %77, %if.entry21.TypeChecker_error.exit163_crit_edge ], [ %.pre259, %if.entry.i.i160 ]
  %85 = add i64 %84, 1
  store i64 %85, ptr %memberidx.i.i155, align 4
  %ptridx.i.i162 = getelementptr inbounds ptr, ptr %83, i64 %84
  store ptr %76, ptr %ptridx.i.i162, align 8
  br label %common.ret

ifend23:                                          ; preds = %if.entry16
  %memberidx27 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %19, ptr %memberidx27, align 8
  %86 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i166 = getelementptr inbounds ptr, ptr %86, i64 1
  %87 = load ptr, ptr %ptridx.i166, align 8
  %memberidx31 = getelementptr inbounds %Expression, ptr %87, i64 0, i32 3
  %88 = load ptr, ptr %memberidx31, align 8
  %89 = load i64, ptr %88, align 4
  %90 = add i64 %89, -1
  %91 = icmp ult i64 %90, 7
  br i1 %91, label %common.ret, label %if.entry32

if.entry32:                                       ; preds = %ifend23
  %92 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %88)
  %93 = load ptr, ptr %92, align 8
  %memberidx37 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx37, align 8
  %95 = tail call ptr %94(ptr nonnull %92)
  %96 = alloca ptr, align 8
  %97 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %96, ptr nonnull @194, ptr %95)
  %98 = load ptr, ptr %96, align 8
  %99 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %99, align 8
  %memberidx.i169 = getelementptr inbounds %string, ptr %99, i64 0, i32 1
  store ptr %98, ptr %memberidx.i169, align 8
  %memberidx1.i170 = getelementptr inbounds %string, ptr %99, i64 0, i32 2
  store i64 %97, ptr %memberidx1.i170, align 4
  %memberidx2.i171 = getelementptr inbounds %string, ptr %99, i64 0, i32 3
  store i64 %97, ptr %memberidx2.i171, align 4
  tail call void @free(ptr %95)
  %100 = load ptr, ptr %memberidx, align 8
  %memberidx.i172 = getelementptr inbounds %Array_ExpressionNode_, ptr %100, i64 0, i32 1
  %101 = load ptr, ptr %memberidx.i172, align 8
  %102 = load ptr, ptr %101, align 8
  %103 = load ptr, ptr %102, align 8
  %memberidx.i173 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %104 = load ptr, ptr %memberidx.i173, align 8
  %memberidx1.i174 = getelementptr inbounds %Compiler, ptr %104, i64 0, i32 6
  %105 = load ptr, ptr %memberidx1.i174, align 8
  %106 = call ptr @malloc(i32 24)
  store i64 5, ptr %106, align 4
  %memberidx1.i.i175 = getelementptr inbounds %FloError, ptr %106, i64 0, i32 2
  store ptr %103, ptr %memberidx1.i.i175, align 8
  %memberidx2.i.i176 = getelementptr inbounds %FloError, ptr %106, i64 0, i32 1
  store ptr %99, ptr %memberidx2.i.i176, align 8
  %memberidx.i.i177 = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 2
  %107 = load i64, ptr %memberidx.i.i177, align 4
  %memberidx1.i2.i178 = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 3
  %108 = load i64, ptr %memberidx1.i2.i178, align 4
  %.not.i.i179 = icmp slt i64 %107, %108
  br i1 %.not.i.i179, label %if.entry32.TypeChecker_error.exit185_crit_edge, label %if.entry.i.i182

if.entry32.TypeChecker_error.exit185_crit_edge:   ; preds = %if.entry32
  %memberidx4.i.i183.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 1
  %.pre262 = load ptr, ptr %memberidx4.i.i183.phi.trans.insert, align 8
  br label %TypeChecker_error.exit185

if.entry.i.i182:                                  ; preds = %if.entry32
  %109 = shl i64 %108, 1
  store i64 %109, ptr %memberidx1.i2.i178, align 4
  %memberidx2.i.i.i181 = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 1
  %110 = load ptr, ptr %memberidx2.i.i.i181, align 8
  %111 = shl i64 %108, 4
  %112 = call ptr @realloc(ptr %110, i64 %111)
  store ptr %112, ptr %memberidx2.i.i.i181, align 8
  %.pre261 = load i64, ptr %memberidx.i.i177, align 4
  br label %TypeChecker_error.exit185

TypeChecker_error.exit185:                        ; preds = %if.entry32.TypeChecker_error.exit185_crit_edge, %if.entry.i.i182
  %113 = phi ptr [ %.pre262, %if.entry32.TypeChecker_error.exit185_crit_edge ], [ %112, %if.entry.i.i182 ]
  %114 = phi i64 [ %107, %if.entry32.TypeChecker_error.exit185_crit_edge ], [ %.pre261, %if.entry.i.i182 ]
  %115 = add i64 %114, 1
  store i64 %115, ptr %memberidx.i.i177, align 4
  %ptridx.i.i184 = getelementptr inbounds ptr, ptr %113, i64 %114
  store ptr %106, ptr %ptridx.i.i184, align 8
  br label %common.ret

if.entry40:                                       ; preds = %else17, %else17, %else17, %else17
  %memberidx44 = getelementptr inbounds %Array_Expression_, ptr %16, i64 0, i32 2
  %116 = load i64, ptr %memberidx44, align 4
  %.not = icmp eq i64 %116, 3
  br i1 %.not, label %ifend47, label %if.entry45

if.entry45:                                       ; preds = %if.entry40
  %117 = alloca ptr, align 8
  %118 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %117, ptr nonnull @195, i64 %116)
  %119 = load ptr, ptr %117, align 8
  %120 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %120, align 8
  %memberidx.i186 = getelementptr inbounds %string, ptr %120, i64 0, i32 1
  store ptr %119, ptr %memberidx.i186, align 8
  %memberidx1.i187 = getelementptr inbounds %string, ptr %120, i64 0, i32 2
  store i64 %118, ptr %memberidx1.i187, align 4
  %memberidx2.i188 = getelementptr inbounds %string, ptr %120, i64 0, i32 3
  store i64 %118, ptr %memberidx2.i188, align 4
  %121 = load ptr, ptr %2, align 8
  %memberidx.i189 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %122 = load ptr, ptr %memberidx.i189, align 8
  %memberidx1.i190 = getelementptr inbounds %Compiler, ptr %122, i64 0, i32 6
  %123 = load ptr, ptr %memberidx1.i190, align 8
  %124 = call ptr @malloc(i32 24)
  store i64 4, ptr %124, align 4
  %memberidx1.i.i191 = getelementptr inbounds %FloError, ptr %124, i64 0, i32 2
  store ptr %121, ptr %memberidx1.i.i191, align 8
  %memberidx2.i.i192 = getelementptr inbounds %FloError, ptr %124, i64 0, i32 1
  store ptr %120, ptr %memberidx2.i.i192, align 8
  %memberidx.i.i193 = getelementptr inbounds %Array_FloError_, ptr %123, i64 0, i32 2
  %125 = load i64, ptr %memberidx.i.i193, align 4
  %memberidx1.i2.i194 = getelementptr inbounds %Array_FloError_, ptr %123, i64 0, i32 3
  %126 = load i64, ptr %memberidx1.i2.i194, align 4
  %.not.i.i195 = icmp slt i64 %125, %126
  br i1 %.not.i.i195, label %if.entry45.TypeChecker_error.exit201_crit_edge, label %if.entry.i.i198

if.entry45.TypeChecker_error.exit201_crit_edge:   ; preds = %if.entry45
  %memberidx4.i.i199.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %123, i64 0, i32 1
  %.pre254 = load ptr, ptr %memberidx4.i.i199.phi.trans.insert, align 8
  br label %TypeChecker_error.exit201

if.entry.i.i198:                                  ; preds = %if.entry45
  %127 = shl i64 %126, 1
  store i64 %127, ptr %memberidx1.i2.i194, align 4
  %memberidx2.i.i.i197 = getelementptr inbounds %Array_FloError_, ptr %123, i64 0, i32 1
  %128 = load ptr, ptr %memberidx2.i.i.i197, align 8
  %129 = shl i64 %126, 4
  %130 = call ptr @realloc(ptr %128, i64 %129)
  store ptr %130, ptr %memberidx2.i.i.i197, align 8
  %.pre253 = load i64, ptr %memberidx.i.i193, align 4
  br label %TypeChecker_error.exit201

TypeChecker_error.exit201:                        ; preds = %if.entry45.TypeChecker_error.exit201_crit_edge, %if.entry.i.i198
  %131 = phi ptr [ %.pre254, %if.entry45.TypeChecker_error.exit201_crit_edge ], [ %130, %if.entry.i.i198 ]
  %132 = phi i64 [ %125, %if.entry45.TypeChecker_error.exit201_crit_edge ], [ %.pre253, %if.entry.i.i198 ]
  %133 = add i64 %132, 1
  store i64 %133, ptr %memberidx.i.i193, align 4
  %ptridx.i.i200 = getelementptr inbounds ptr, ptr %131, i64 %132
  store ptr %124, ptr %ptridx.i.i200, align 8
  br label %common.ret

ifend47:                                          ; preds = %if.entry40
  %memberidx53 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %19, ptr %memberidx53, align 8
  br i1 %68, label %if.entry54, label %ifend56

if.entry54:                                       ; preds = %ifend47
  %memberidx57 = getelementptr inbounds %PointerType, ptr %19, i64 0, i32 1
  %134 = load ptr, ptr %memberidx57, align 8
  br label %ifend56

ifend56:                                          ; preds = %ifend47, %if.entry54
  %135 = phi ptr [ %19, %ifend47 ], [ %134, %if.entry54 ]
  %136 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i204 = getelementptr inbounds ptr, ptr %136, i64 1
  %137 = load ptr, ptr %ptridx.i204, align 8
  %memberidx59 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 3
  %138 = load ptr, ptr %memberidx59, align 8
  %139 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %135, ptr %138)
  br i1 %139, label %ifend62, label %if.entry60

if.entry60:                                       ; preds = %ifend56
  %140 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %135)
  %141 = load ptr, ptr %140, align 8
  %memberidx63 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %141, i64 0, i32 5
  %142 = load ptr, ptr %memberidx63, align 8
  %143 = tail call ptr %142(ptr nonnull %140)
  %144 = load ptr, ptr %memberidx6, align 8
  %memberidx.i205 = getelementptr inbounds %Array_Expression_, ptr %144, i64 0, i32 1
  %145 = load ptr, ptr %memberidx.i205, align 8
  %ptridx.i206 = getelementptr inbounds ptr, ptr %145, i64 1
  %146 = load ptr, ptr %ptridx.i206, align 8
  %memberidx65 = getelementptr inbounds %Expression, ptr %146, i64 0, i32 3
  %147 = load ptr, ptr %memberidx65, align 8
  %148 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %147)
  %149 = load ptr, ptr %148, align 8
  %memberidx66 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %149, i64 0, i32 5
  %150 = load ptr, ptr %memberidx66, align 8
  %151 = tail call ptr %150(ptr nonnull %148)
  %152 = alloca ptr, align 8
  %153 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %152, ptr nonnull @196, ptr %143, ptr %151)
  %154 = load ptr, ptr %152, align 8
  %155 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %155, align 8
  %memberidx.i207 = getelementptr inbounds %string, ptr %155, i64 0, i32 1
  store ptr %154, ptr %memberidx.i207, align 8
  %memberidx1.i208 = getelementptr inbounds %string, ptr %155, i64 0, i32 2
  store i64 %153, ptr %memberidx1.i208, align 4
  %memberidx2.i209 = getelementptr inbounds %string, ptr %155, i64 0, i32 3
  store i64 %153, ptr %memberidx2.i209, align 4
  tail call void @free(ptr %143)
  tail call void @free(ptr %151)
  %156 = load ptr, ptr %memberidx, align 8
  %memberidx.i210 = getelementptr inbounds %Array_ExpressionNode_, ptr %156, i64 0, i32 1
  %157 = load ptr, ptr %memberidx.i210, align 8
  %158 = load ptr, ptr %157, align 8
  %159 = load ptr, ptr %158, align 8
  %memberidx.i211 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %160 = load ptr, ptr %memberidx.i211, align 8
  %memberidx1.i212 = getelementptr inbounds %Compiler, ptr %160, i64 0, i32 6
  %161 = load ptr, ptr %memberidx1.i212, align 8
  %162 = call ptr @malloc(i32 24)
  store i64 5, ptr %162, align 4
  %memberidx1.i.i213 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 2
  store ptr %159, ptr %memberidx1.i.i213, align 8
  %memberidx2.i.i214 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 1
  store ptr %155, ptr %memberidx2.i.i214, align 8
  %memberidx.i.i215 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 2
  %163 = load i64, ptr %memberidx.i.i215, align 4
  %memberidx1.i2.i216 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 3
  %164 = load i64, ptr %memberidx1.i2.i216, align 4
  %.not.i.i217 = icmp slt i64 %163, %164
  br i1 %.not.i.i217, label %if.entry60.TypeChecker_error.exit223_crit_edge, label %if.entry.i.i220

if.entry60.TypeChecker_error.exit223_crit_edge:   ; preds = %if.entry60
  %memberidx4.i.i221.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 1
  %.pre256 = load ptr, ptr %memberidx4.i.i221.phi.trans.insert, align 8
  br label %TypeChecker_error.exit223

if.entry.i.i220:                                  ; preds = %if.entry60
  %165 = shl i64 %164, 1
  store i64 %165, ptr %memberidx1.i2.i216, align 4
  %memberidx2.i.i.i219 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 1
  %166 = load ptr, ptr %memberidx2.i.i.i219, align 8
  %167 = shl i64 %164, 4
  %168 = call ptr @realloc(ptr %166, i64 %167)
  store ptr %168, ptr %memberidx2.i.i.i219, align 8
  %.pre255 = load i64, ptr %memberidx.i.i215, align 4
  br label %TypeChecker_error.exit223

TypeChecker_error.exit223:                        ; preds = %if.entry60.TypeChecker_error.exit223_crit_edge, %if.entry.i.i220
  %169 = phi ptr [ %.pre256, %if.entry60.TypeChecker_error.exit223_crit_edge ], [ %168, %if.entry.i.i220 ]
  %170 = phi i64 [ %163, %if.entry60.TypeChecker_error.exit223_crit_edge ], [ %.pre255, %if.entry.i.i220 ]
  %171 = add i64 %170, 1
  store i64 %171, ptr %memberidx.i.i215, align 4
  %ptridx.i.i222 = getelementptr inbounds ptr, ptr %169, i64 %170
  store ptr %162, ptr %ptridx.i.i222, align 8
  br label %common.ret

ifend62:                                          ; preds = %ifend56
  %172 = load ptr, ptr %memberidx6, align 8
  %memberidx.i224 = getelementptr inbounds %Array_Expression_, ptr %172, i64 0, i32 1
  %173 = load ptr, ptr %memberidx.i224, align 8
  %ptridx.i225 = getelementptr inbounds ptr, ptr %173, i64 2
  %174 = load ptr, ptr %ptridx.i225, align 8
  %memberidx70 = getelementptr inbounds %Expression, ptr %174, i64 0, i32 3
  %175 = load ptr, ptr %memberidx70, align 8
  %176 = load i64, ptr %175, align 4
  %177 = add i64 %176, -1
  %178 = icmp ult i64 %177, 7
  br i1 %178, label %ifend73, label %if.entry71

if.entry71:                                       ; preds = %ifend62
  %179 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %175)
  %180 = load ptr, ptr %179, align 8
  %memberidx76 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %180, i64 0, i32 5
  %181 = load ptr, ptr %memberidx76, align 8
  %182 = tail call ptr %181(ptr nonnull %179)
  %183 = alloca ptr, align 8
  %184 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %183, ptr nonnull @194, ptr %182)
  %185 = load ptr, ptr %183, align 8
  %186 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %186, align 8
  %memberidx.i228 = getelementptr inbounds %string, ptr %186, i64 0, i32 1
  store ptr %185, ptr %memberidx.i228, align 8
  %memberidx1.i229 = getelementptr inbounds %string, ptr %186, i64 0, i32 2
  store i64 %184, ptr %memberidx1.i229, align 4
  %memberidx2.i230 = getelementptr inbounds %string, ptr %186, i64 0, i32 3
  store i64 %184, ptr %memberidx2.i230, align 4
  tail call void @free(ptr %182)
  %187 = load ptr, ptr %memberidx, align 8
  %memberidx.i231 = getelementptr inbounds %Array_ExpressionNode_, ptr %187, i64 0, i32 1
  %188 = load ptr, ptr %memberidx.i231, align 8
  %ptridx.i232 = getelementptr inbounds ptr, ptr %188, i64 1
  %189 = load ptr, ptr %ptridx.i232, align 8
  %190 = load ptr, ptr %189, align 8
  %memberidx.i233 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %191 = load ptr, ptr %memberidx.i233, align 8
  %memberidx1.i234 = getelementptr inbounds %Compiler, ptr %191, i64 0, i32 6
  %192 = load ptr, ptr %memberidx1.i234, align 8
  %193 = call ptr @malloc(i32 24)
  store i64 5, ptr %193, align 4
  %memberidx1.i.i235 = getelementptr inbounds %FloError, ptr %193, i64 0, i32 2
  store ptr %190, ptr %memberidx1.i.i235, align 8
  %memberidx2.i.i236 = getelementptr inbounds %FloError, ptr %193, i64 0, i32 1
  store ptr %186, ptr %memberidx2.i.i236, align 8
  %memberidx.i.i237 = getelementptr inbounds %Array_FloError_, ptr %192, i64 0, i32 2
  %194 = load i64, ptr %memberidx.i.i237, align 4
  %memberidx1.i2.i238 = getelementptr inbounds %Array_FloError_, ptr %192, i64 0, i32 3
  %195 = load i64, ptr %memberidx1.i2.i238, align 4
  %.not.i.i239 = icmp slt i64 %194, %195
  br i1 %.not.i.i239, label %if.entry71.TypeChecker_error.exit245_crit_edge, label %if.entry.i.i242

if.entry71.TypeChecker_error.exit245_crit_edge:   ; preds = %if.entry71
  %memberidx4.i.i243.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %192, i64 0, i32 1
  %.pre258 = load ptr, ptr %memberidx4.i.i243.phi.trans.insert, align 8
  br label %TypeChecker_error.exit245

if.entry.i.i242:                                  ; preds = %if.entry71
  %196 = shl i64 %195, 1
  store i64 %196, ptr %memberidx1.i2.i238, align 4
  %memberidx2.i.i.i241 = getelementptr inbounds %Array_FloError_, ptr %192, i64 0, i32 1
  %197 = load ptr, ptr %memberidx2.i.i.i241, align 8
  %198 = shl i64 %195, 4
  %199 = call ptr @realloc(ptr %197, i64 %198)
  store ptr %199, ptr %memberidx2.i.i.i241, align 8
  %.pre257 = load i64, ptr %memberidx.i.i237, align 4
  br label %TypeChecker_error.exit245

TypeChecker_error.exit245:                        ; preds = %if.entry71.TypeChecker_error.exit245_crit_edge, %if.entry.i.i242
  %200 = phi ptr [ %.pre258, %if.entry71.TypeChecker_error.exit245_crit_edge ], [ %199, %if.entry.i.i242 ]
  %201 = phi i64 [ %194, %if.entry71.TypeChecker_error.exit245_crit_edge ], [ %.pre257, %if.entry.i.i242 ]
  %202 = add i64 %201, 1
  store i64 %202, ptr %memberidx.i.i237, align 4
  %ptridx.i.i244 = getelementptr inbounds ptr, ptr %200, i64 %201
  store ptr %193, ptr %ptridx.i.i244, align 8
  br label %common.ret

ifend73:                                          ; preds = %ifend62
  br i1 %7, label %if.entry79, label %common.ret

if.entry79:                                       ; preds = %ifend73
  %203 = tail call ptr @malloc(i32 8)
  store i64 7, ptr %203, align 4
  store ptr %203, ptr %memberidx53, align 8
  br label %common.ret
}

define internal fastcc noalias ptr @dump_type(ptr nocapture readonly %0, i1 %1) unnamed_addr {
  %3 = load i64, ptr %0, align 4
  switch i64 %3, label %ifend56 [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 2, label %if.entry6
    i64 3, label %if.entry10
    i64 4, label %if.entry14
    i64 5, label %if.entry18
    i64 6, label %if.entry22
    i64 7, label %if.entry26
    i64 8, label %if.entry30
    i64 9, label %if.entry34
    i64 10, label %if.entry38
    i64 11, label %if.entry42
    i64 12, label %if.entry50
    i64 18, label %if.entry54
  ]

common.ret:                                       ; preds = %true_block45, %false_block46, %true_block, %false_block, %ifend56, %if.entry54, %if.entry50, %if.entry38, %if.entry34, %if.entry30, %if.entry22, %if.entry18, %if.entry14, %if.entry10, %if.entry6, %if.entry2, %if.entry
  %.sink119 = phi ptr [ %21, %true_block45 ], [ %22, %false_block46 ], [ %14, %true_block ], [ %15, %false_block ], [ %25, %ifend56 ], [ %24, %if.entry54 ], [ %23, %if.entry50 ], [ %18, %if.entry38 ], [ %17, %if.entry34 ], [ %16, %if.entry30 ], [ %11, %if.entry22 ], [ %10, %if.entry18 ], [ %9, %if.entry14 ], [ %8, %if.entry10 ], [ %7, %if.entry6 ], [ %6, %if.entry2 ], [ %5, %if.entry ]
  %.sink117 = phi i64 [ %20, %true_block45 ], [ 5, %false_block46 ], [ %13, %true_block ], [ 3, %false_block ], [ 7, %ifend56 ], [ 6, %if.entry54 ], [ 4, %if.entry50 ], [ 3, %if.entry38 ], [ 3, %if.entry34 ], [ 3, %if.entry30 ], [ 4, %if.entry22 ], [ 3, %if.entry18 ], [ 3, %if.entry14 ], [ 3, %if.entry10 ], [ 2, %if.entry6 ], [ 2, %if.entry2 ], [ 4, %if.entry ]
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %4, align 8
  %memberidx.i101 = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  store ptr %.sink119, ptr %memberidx.i101, align 8
  %memberidx1.i102 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  store i64 %.sink117, ptr %memberidx1.i102, align 4
  %memberidx2.i103 = getelementptr inbounds %string, ptr %4, i64 0, i32 3
  store i64 %.sink117, ptr %memberidx2.i103, align 4
  ret ptr %4

if.entry:                                         ; preds = %2
  %5 = tail call ptr @malloc(i32 32)
  store i32 1819242338, ptr %5, align 8
  br label %common.ret

if.entry2:                                        ; preds = %2
  %6 = tail call ptr @malloc(i32 16)
  store i16 13417, ptr %6, align 8
  br label %common.ret

if.entry6:                                        ; preds = %2
  %7 = tail call ptr @malloc(i32 16)
  store i16 14441, ptr %7, align 8
  br label %common.ret

if.entry10:                                       ; preds = %2
  %8 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %8, ptr noundef nonnull align 8 dereferenceable(3) @33, i64 3, i1 false)
  br label %common.ret

if.entry14:                                       ; preds = %2
  %9 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %9, ptr noundef nonnull align 8 dereferenceable(3) @34, i64 3, i1 false)
  br label %common.ret

if.entry18:                                       ; preds = %2
  %10 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %10, ptr noundef nonnull align 8 dereferenceable(3) @35, i64 3, i1 false)
  br label %common.ret

if.entry22:                                       ; preds = %2
  %11 = tail call ptr @malloc(i32 32)
  store i32 942813545, ptr %11, align 8
  br label %common.ret

if.entry26:                                       ; preds = %2
  br i1 %1, label %true_block, label %false_block

true_block:                                       ; preds = %if.entry26
  %12 = alloca ptr, align 8
  %13 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %12, ptr nonnull @79, i64 64)
  %14 = load ptr, ptr %12, align 8
  br label %common.ret

false_block:                                      ; preds = %if.entry26
  %15 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %15, ptr noundef nonnull align 8 dereferenceable(3) @36, i64 3, i1 false)
  br label %common.ret

if.entry30:                                       ; preds = %2
  %16 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %16, ptr noundef nonnull align 8 dereferenceable(3) @37, i64 3, i1 false)
  br label %common.ret

if.entry34:                                       ; preds = %2
  %17 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %17, ptr noundef nonnull align 8 dereferenceable(3) @38, i64 3, i1 false)
  br label %common.ret

if.entry38:                                       ; preds = %2
  %18 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %18, ptr noundef nonnull align 8 dereferenceable(3) @39, i64 3, i1 false)
  br label %common.ret

if.entry42:                                       ; preds = %2
  br i1 %1, label %true_block45, label %false_block46

true_block45:                                     ; preds = %if.entry42
  %19 = alloca ptr, align 8
  %20 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %19, ptr nonnull @80, i64 64)
  %21 = load ptr, ptr %19, align 8
  br label %common.ret

false_block46:                                    ; preds = %if.entry42
  %22 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %22, ptr noundef nonnull align 8 dereferenceable(5) @40, i64 5, i1 false)
  br label %common.ret

if.entry50:                                       ; preds = %2
  %23 = tail call ptr @malloc(i32 32)
  store i32 1684631414, ptr %23, align 8
  br label %common.ret

if.entry54:                                       ; preds = %2
  %24 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %24, ptr noundef nonnull align 8 dereferenceable(6) @81, i64 6, i1 false)
  br label %common.ret

ifend56:                                          ; preds = %2
  %25 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %25, ptr noundef nonnull align 8 dereferenceable(7) @82, i64 7, i1 false)
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind readonly
define internal fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %1) unnamed_addr #12 {
  %memberidx.i = getelementptr inbounds %Program, ptr %0, i64 0, i32 1
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry12, %2
  %accumulator.tr.ph = phi i64 [ %11, %if.entry12 ], [ 0, %2 ]
  %.tr125.ph = phi ptr [ %10, %if.entry12 ], [ %1, %2 ]
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer, %if.entry86
  %.tr125 = phi ptr [ %72, %if.entry86 ], [ %.tr125.ph, %tailrecurse.outer ]
  %memberidx = getelementptr inbounds %Expression, ptr %.tr125, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry3
    i64 8, label %if.entry8
    i64 9, label %if.entry72
    i64 7, label %if.entry86
  ]

common.ret137:                                    ; preds = %if.entry81, %if.entry76, %if.entry66, %if.entry60, %if.entry54, %if.entry48, %if.entry42, %if.entry36, %if.entry30, %if.entry24, %if.entry18, %common.ret
  %common.ret137.op = phi i64 [ %accumulator.ret.tr, %common.ret ], [ %accumulator.ret.tr126, %if.entry18 ], [ %accumulator.ret.tr127, %if.entry24 ], [ %accumulator.ret.tr128, %if.entry30 ], [ %accumulator.ret.tr129, %if.entry36 ], [ %accumulator.ret.tr130, %if.entry42 ], [ %accumulator.ret.tr131, %if.entry48 ], [ %accumulator.ret.tr132, %if.entry54 ], [ %accumulator.ret.tr133, %if.entry60 ], [ %accumulator.ret.tr134, %if.entry66 ], [ %accumulator.ret.tr135, %if.entry76 ], [ %accumulator.ret.tr136, %if.entry81 ]
  ret i64 %common.ret137.op

common.ret:                                       ; preds = %if.entry8, %tailrecurse, %if.entry72, %if.entry3, %if.entry
  %common.ret.op = phi i64 [ %4, %if.entry ], [ %6, %if.entry3 ], [ -99999999, %if.entry72 ], [ -99999999, %tailrecurse ], [ -99999999, %if.entry8 ]
  %accumulator.ret.tr = add i64 %common.ret.op, %accumulator.tr.ph
  br label %common.ret137

if.entry:                                         ; preds = %tailrecurse
  %memberidx1 = getelementptr inbounds %IntExpression, ptr %.tr125, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  br label %common.ret

if.entry3:                                        ; preds = %tailrecurse
  %memberidx6 = getelementptr inbounds %FloatExpression, ptr %.tr125, i64 0, i32 4
  %5 = load double, ptr %memberidx6, align 8
  %6 = fptosi double %5 to i64
  br label %common.ret

if.entry8:                                        ; preds = %tailrecurse
  %memberidx11 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 5
  %7 = load i64, ptr %memberidx11, align 4
  switch i64 %7, label %common.ret [
    i64 1, label %if.entry12
    i64 2, label %if.entry18
    i64 3, label %if.entry24
    i64 4, label %if.entry30
    i64 5, label %if.entry36
    i64 13, label %if.entry42
    i64 14, label %if.entry48
    i64 15, label %if.entry54
    i64 16, label %if.entry60
    i64 17, label %if.entry66
  ]

if.entry12:                                       ; preds = %if.entry8
  %memberidx15 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 4
  %8 = load ptr, ptr %memberidx15, align 8
  %9 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %8)
  %memberidx16 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 6
  %10 = load ptr, ptr %memberidx16, align 8
  %11 = add i64 %9, %accumulator.tr.ph
  br label %tailrecurse.outer

if.entry18:                                       ; preds = %if.entry8
  %memberidx21 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 4
  %12 = load ptr, ptr %memberidx21, align 8
  %13 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %12)
  %memberidx22 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 6
  %14 = load ptr, ptr %memberidx22, align 8
  %15 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %14)
  %16 = add i64 %13, %accumulator.tr.ph
  %accumulator.ret.tr126 = sub i64 %16, %15
  br label %common.ret137

if.entry24:                                       ; preds = %if.entry8
  %memberidx27 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 4
  %17 = load ptr, ptr %memberidx27, align 8
  %18 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %17)
  %memberidx28 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 6
  %19 = load ptr, ptr %memberidx28, align 8
  %20 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %19)
  %21 = mul i64 %20, %18
  %accumulator.ret.tr127 = add i64 %21, %accumulator.tr.ph
  br label %common.ret137

if.entry30:                                       ; preds = %if.entry8
  %memberidx33 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 4
  %22 = load ptr, ptr %memberidx33, align 8
  %23 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %22)
  %memberidx34 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 6
  %24 = load ptr, ptr %memberidx34, align 8
  %25 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %24)
  %26 = sdiv i64 %23, %25
  %accumulator.ret.tr128 = add i64 %26, %accumulator.tr.ph
  br label %common.ret137

if.entry36:                                       ; preds = %if.entry8
  %memberidx39 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 4
  %27 = load ptr, ptr %memberidx39, align 8
  %28 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %27)
  %memberidx40 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 6
  %29 = load ptr, ptr %memberidx40, align 8
  %30 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %29)
  %31 = srem i64 %28, %30
  %accumulator.ret.tr129 = add i64 %31, %accumulator.tr.ph
  br label %common.ret137

if.entry42:                                       ; preds = %if.entry8
  %memberidx45 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 4
  %32 = load ptr, ptr %memberidx45, align 8
  %33 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %32)
  %memberidx46 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 6
  %34 = load ptr, ptr %memberidx46, align 8
  %35 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %34)
  %36 = shl i64 %33, %35
  %accumulator.ret.tr130 = add i64 %36, %accumulator.tr.ph
  br label %common.ret137

if.entry48:                                       ; preds = %if.entry8
  %memberidx51 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 4
  %37 = load ptr, ptr %memberidx51, align 8
  %38 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %37)
  %memberidx52 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 6
  %39 = load ptr, ptr %memberidx52, align 8
  %40 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %39)
  %41 = ashr i64 %38, %40
  %accumulator.ret.tr131 = add i64 %41, %accumulator.tr.ph
  br label %common.ret137

if.entry54:                                       ; preds = %if.entry8
  %memberidx57 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 4
  %42 = load ptr, ptr %memberidx57, align 8
  %43 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %42)
  %memberidx58 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 6
  %44 = load ptr, ptr %memberidx58, align 8
  %45 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %44)
  %46 = or i64 %45, %43
  %accumulator.ret.tr132 = add i64 %46, %accumulator.tr.ph
  br label %common.ret137

if.entry60:                                       ; preds = %if.entry8
  %memberidx63 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 4
  %47 = load ptr, ptr %memberidx63, align 8
  %48 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %47)
  %memberidx64 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 6
  %49 = load ptr, ptr %memberidx64, align 8
  %50 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %49)
  %51 = and i64 %50, %48
  %accumulator.ret.tr133 = add i64 %51, %accumulator.tr.ph
  br label %common.ret137

if.entry66:                                       ; preds = %if.entry8
  %memberidx69 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 4
  %52 = load ptr, ptr %memberidx69, align 8
  %53 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %52)
  %memberidx70 = getelementptr inbounds %BinaryExpression, ptr %.tr125, i64 0, i32 6
  %54 = load ptr, ptr %memberidx70, align 8
  %55 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %54)
  %56 = xor i64 %55, %53
  %accumulator.ret.tr134 = add i64 %56, %accumulator.tr.ph
  br label %common.ret137

if.entry72:                                       ; preds = %tailrecurse
  %memberidx75 = getelementptr inbounds %UnaryExpression, ptr %.tr125, i64 0, i32 4
  %57 = load i64, ptr %memberidx75, align 4
  switch i64 %57, label %common.ret [
    i64 6, label %if.entry76
    i64 7, label %if.entry81
  ]

if.entry76:                                       ; preds = %if.entry72
  %memberidx79 = getelementptr inbounds %UnaryExpression, ptr %.tr125, i64 0, i32 5
  %58 = load ptr, ptr %memberidx79, align 8
  %59 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %58)
  %accumulator.ret.tr135 = sub i64 %accumulator.tr.ph, %59
  br label %common.ret137

if.entry81:                                       ; preds = %if.entry72
  %memberidx84 = getelementptr inbounds %UnaryExpression, ptr %.tr125, i64 0, i32 5
  %60 = load ptr, ptr %memberidx84, align 8
  %61 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %60)
  %62 = xor i64 %61, -1
  %accumulator.ret.tr136 = add i64 %accumulator.tr.ph, %62
  br label %common.ret137

if.entry86:                                       ; preds = %tailrecurse
  %memberidx89 = getelementptr inbounds %VarAccessExpression, ptr %.tr125, i64 0, i32 4
  %63 = load ptr, ptr %memberidx89, align 8
  %64 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %66, i64 %65
  %67 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %67, i64 0, i32 3
  %68 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 2
  %69 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Const_, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %70, i64 %69
  %71 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx90 = getelementptr inbounds %Const, ptr %71, i64 0, i32 2
  %72 = load ptr, ptr %memberidx90, align 8
  br label %tailrecurse
}

define internal fastcc i1 @is_operator_overload_name(ptr readonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %2, ptr noundef nonnull align 8 dereferenceable(6) @98, i64 6, i1 false)
  %3 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %3, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %3, i64 0, i32 1
  store ptr %2, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %3, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %3, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %4, 6
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %1
  %memberidx2.i = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx2.i, align 8
  %6 = tail call i64 @memcmp(ptr %5, ptr nonnull %2, i64 6)
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend.i449, %ifend87, %ifend.i438, %ifend.i427, %ifend.i416, %ifend.i405, %ifend.i394, %ifend.i383, %ifend.i372, %ifend.i361, %ifend.i350, %ifend.i339, %ifend.i328, %ifend.i317, %ifend.i306, %ifend.i295, %ifend.i284, %ifend.i273, %ifend.i262, %ifend.i251, %ifend.i240, %ifend.i229, %ifend.i218, %ifend.i207, %ifend.i196, %ifend.i185, %ifend.i174, %ifend.i163, %ifend.i152, %ifend.i141, %ifend.i130, %ifend.i
  %common.ret.op = phi i1 [ true, %ifend.i ], [ true, %ifend.i130 ], [ true, %ifend.i141 ], [ true, %ifend.i152 ], [ true, %ifend.i163 ], [ true, %ifend.i174 ], [ true, %ifend.i185 ], [ true, %ifend.i196 ], [ true, %ifend.i207 ], [ true, %ifend.i218 ], [ true, %ifend.i229 ], [ true, %ifend.i240 ], [ true, %ifend.i251 ], [ true, %ifend.i262 ], [ true, %ifend.i273 ], [ true, %ifend.i284 ], [ true, %ifend.i295 ], [ true, %ifend.i306 ], [ true, %ifend.i317 ], [ true, %ifend.i328 ], [ true, %ifend.i339 ], [ true, %ifend.i350 ], [ true, %ifend.i361 ], [ true, %ifend.i372 ], [ true, %ifend.i383 ], [ true, %ifend.i394 ], [ true, %ifend.i405 ], [ true, %ifend.i416 ], [ true, %ifend.i427 ], [ true, %ifend.i438 ], [ %187, %ifend.i449 ], [ false, %ifend87 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %1, %ifend.i
  %8 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @99, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %9, align 8
  %memberidx.i.i121 = getelementptr inbounds %string, ptr %9, i64 0, i32 1
  store ptr %8, ptr %memberidx.i.i121, align 8
  %memberidx1.i.i122 = getelementptr inbounds %string, ptr %9, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i122, align 4
  %memberidx2.i.i123 = getelementptr inbounds %string, ptr %9, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i123, align 4
  %10 = load i64, ptr %memberidx.i, align 4
  %.not.i126 = icmp eq i64 %10, 7
  br i1 %.not.i126, label %ifend.i130, label %ifend3

ifend.i130:                                       ; preds = %ifend
  %memberidx2.i128 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %memberidx2.i128, align 8
  %12 = tail call i64 @memcmp(ptr %11, ptr nonnull %8, i64 7)
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %common.ret, label %ifend3

ifend3:                                           ; preds = %ifend, %ifend.i130
  %14 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %14, ptr noundef nonnull align 8 dereferenceable(7) @100, i64 7, i1 false)
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i.i132 = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i.i132, align 8
  %memberidx1.i.i133 = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i133, align 4
  %memberidx2.i.i134 = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i134, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i137 = icmp eq i64 %16, 7
  br i1 %.not.i137, label %ifend.i141, label %ifend6

ifend.i141:                                       ; preds = %ifend3
  %memberidx2.i139 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i139, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 7)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %common.ret, label %ifend6

ifend6:                                           ; preds = %ifend3, %ifend.i141
  %20 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %20, ptr noundef nonnull align 8 dereferenceable(7) @101, i64 7, i1 false)
  %21 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i.i143 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i.i143, align 8
  %memberidx1.i.i144 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i144, align 4
  %memberidx2.i.i145 = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i145, align 4
  %22 = load i64, ptr %memberidx.i, align 4
  %.not.i148 = icmp eq i64 %22, 7
  br i1 %.not.i148, label %ifend.i152, label %ifend9

ifend.i152:                                       ; preds = %ifend6
  %memberidx2.i150 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i150, align 8
  %24 = tail call i64 @memcmp(ptr %23, ptr nonnull %20, i64 7)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend6, %ifend.i152
  %26 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %26, ptr noundef nonnull align 8 dereferenceable(7) @102, i64 7, i1 false)
  %27 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %27, align 8
  %memberidx.i.i154 = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  store ptr %26, ptr %memberidx.i.i154, align 8
  %memberidx1.i.i155 = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i155, align 4
  %memberidx2.i.i156 = getelementptr inbounds %string, ptr %27, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i156, align 4
  %28 = load i64, ptr %memberidx.i, align 4
  %.not.i159 = icmp eq i64 %28, 7
  br i1 %.not.i159, label %ifend.i163, label %ifend12

ifend.i163:                                       ; preds = %ifend9
  %memberidx2.i161 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %29 = load ptr, ptr %memberidx2.i161, align 8
  %30 = tail call i64 @memcmp(ptr %29, ptr nonnull %26, i64 7)
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %common.ret, label %ifend12

ifend12:                                          ; preds = %ifend9, %ifend.i163
  %32 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %32, ptr noundef nonnull align 8 dereferenceable(6) @103, i64 6, i1 false)
  %33 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %33, align 8
  %memberidx.i.i165 = getelementptr inbounds %string, ptr %33, i64 0, i32 1
  store ptr %32, ptr %memberidx.i.i165, align 8
  %memberidx1.i.i166 = getelementptr inbounds %string, ptr %33, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i166, align 4
  %memberidx2.i.i167 = getelementptr inbounds %string, ptr %33, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i167, align 4
  %34 = load i64, ptr %memberidx.i, align 4
  %.not.i170 = icmp eq i64 %34, 6
  br i1 %.not.i170, label %ifend.i174, label %ifend15

ifend.i174:                                       ; preds = %ifend12
  %memberidx2.i172 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %35 = load ptr, ptr %memberidx2.i172, align 8
  %36 = tail call i64 @memcmp(ptr %35, ptr nonnull %32, i64 6)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %common.ret, label %ifend15

ifend15:                                          ; preds = %ifend12, %ifend.i174
  %38 = tail call ptr @malloc(i32 64)
  store i64 6872318640199393119, ptr %38, align 8
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i176 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i176, align 8
  %memberidx1.i.i177 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i177, align 4
  %memberidx2.i.i178 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i178, align 4
  %40 = load i64, ptr %memberidx.i, align 4
  %.not.i181 = icmp eq i64 %40, 8
  br i1 %.not.i181, label %ifend.i185, label %ifend18

ifend.i185:                                       ; preds = %ifend15
  %memberidx2.i183 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2.i183, align 8
  %42 = tail call i64 @memcmp(ptr %41, ptr nonnull %38, i64 8)
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %common.ret, label %ifend18

ifend18:                                          ; preds = %ifend15, %ifend.i185
  %44 = tail call ptr @malloc(i32 64)
  store i64 6872318631895850847, ptr %44, align 8
  %45 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %45, align 8
  %memberidx.i.i187 = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  store ptr %44, ptr %memberidx.i.i187, align 8
  %memberidx1.i.i188 = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i188, align 4
  %memberidx2.i.i189 = getelementptr inbounds %string, ptr %45, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i189, align 4
  %46 = load i64, ptr %memberidx.i, align 4
  %.not.i192 = icmp eq i64 %46, 8
  br i1 %.not.i192, label %ifend.i196, label %ifend21

ifend.i196:                                       ; preds = %ifend18
  %memberidx2.i194 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %47 = load ptr, ptr %memberidx2.i194, align 8
  %48 = tail call i64 @memcmp(ptr %47, ptr nonnull %44, i64 8)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %common.ret, label %ifend21

ifend21:                                          ; preds = %ifend18, %ifend.i196
  %50 = tail call ptr @malloc(i32 64)
  store i64 6872318674845130591, ptr %50, align 8
  %51 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %51, align 8
  %memberidx.i.i198 = getelementptr inbounds %string, ptr %51, i64 0, i32 1
  store ptr %50, ptr %memberidx.i.i198, align 8
  %memberidx1.i.i199 = getelementptr inbounds %string, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i199, align 4
  %memberidx2.i.i200 = getelementptr inbounds %string, ptr %51, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i200, align 4
  %52 = load i64, ptr %memberidx.i, align 4
  %.not.i203 = icmp eq i64 %52, 8
  br i1 %.not.i203, label %ifend.i207, label %ifend24

ifend.i207:                                       ; preds = %ifend21
  %memberidx2.i205 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %53 = load ptr, ptr %memberidx2.i205, align 8
  %54 = tail call i64 @memcmp(ptr %53, ptr nonnull %50, i64 8)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend21, %ifend.i207
  %56 = tail call ptr @malloc(i32 64)
  store i64 6872318717592887135, ptr %56, align 8
  %57 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %57, align 8
  %memberidx.i.i209 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  store ptr %56, ptr %memberidx.i.i209, align 8
  %memberidx1.i.i210 = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i210, align 4
  %memberidx2.i.i211 = getelementptr inbounds %string, ptr %57, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i211, align 4
  %58 = load i64, ptr %memberidx.i, align 4
  %.not.i214 = icmp eq i64 %58, 8
  br i1 %.not.i214, label %ifend.i218, label %ifend27

ifend.i218:                                       ; preds = %ifend24
  %memberidx2.i216 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %59 = load ptr, ptr %memberidx2.i216, align 8
  %60 = tail call i64 @memcmp(ptr %59, ptr nonnull %56, i64 8)
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend24, %ifend.i218
  %62 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %62, ptr noundef nonnull align 8 dereferenceable(7) @104, i64 7, i1 false)
  %63 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %63, align 8
  %memberidx.i.i220 = getelementptr inbounds %string, ptr %63, i64 0, i32 1
  store ptr %62, ptr %memberidx.i.i220, align 8
  %memberidx1.i.i221 = getelementptr inbounds %string, ptr %63, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i221, align 4
  %memberidx2.i.i222 = getelementptr inbounds %string, ptr %63, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i222, align 4
  %64 = load i64, ptr %memberidx.i, align 4
  %.not.i225 = icmp eq i64 %64, 7
  br i1 %.not.i225, label %ifend.i229, label %ifend30

ifend.i229:                                       ; preds = %ifend27
  %memberidx2.i227 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i227, align 8
  %66 = tail call i64 @memcmp(ptr %65, ptr nonnull %62, i64 7)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %common.ret, label %ifend30

ifend30:                                          ; preds = %ifend27, %ifend.i229
  %68 = tail call ptr @malloc(i32 64)
  store i64 6872318640367165279, ptr %68, align 8
  %69 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %69, align 8
  %memberidx.i.i231 = getelementptr inbounds %string, ptr %69, i64 0, i32 1
  store ptr %68, ptr %memberidx.i.i231, align 8
  %memberidx1.i.i232 = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i232, align 4
  %memberidx2.i.i233 = getelementptr inbounds %string, ptr %69, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i233, align 4
  %70 = load i64, ptr %memberidx.i, align 4
  %.not.i236 = icmp eq i64 %70, 8
  br i1 %.not.i236, label %ifend.i240, label %ifend33

ifend.i240:                                       ; preds = %ifend30
  %memberidx2.i238 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %71 = load ptr, ptr %memberidx2.i238, align 8
  %72 = tail call i64 @memcmp(ptr %71, ptr nonnull %68, i64 8)
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %common.ret, label %ifend33

ifend33:                                          ; preds = %ifend30, %ifend.i240
  %74 = tail call ptr @malloc(i32 64)
  store i64 6872318700514991967, ptr %74, align 8
  %75 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %75, align 8
  %memberidx.i.i242 = getelementptr inbounds %string, ptr %75, i64 0, i32 1
  store ptr %74, ptr %memberidx.i.i242, align 8
  %memberidx1.i.i243 = getelementptr inbounds %string, ptr %75, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i243, align 4
  %memberidx2.i.i244 = getelementptr inbounds %string, ptr %75, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i244, align 4
  %76 = load i64, ptr %memberidx.i, align 4
  %.not.i247 = icmp eq i64 %76, 8
  br i1 %.not.i247, label %ifend.i251, label %ifend36

ifend.i251:                                       ; preds = %ifend33
  %memberidx2.i249 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %77 = load ptr, ptr %memberidx2.i249, align 8
  %78 = tail call i64 @memcmp(ptr %77, ptr nonnull %74, i64 8)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %common.ret, label %ifend36

ifend36:                                          ; preds = %ifend33, %ifend.i251
  %80 = tail call ptr @malloc(i32 88)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %80, ptr noundef nonnull align 8 dereferenceable(11) @105, i64 11, i1 false)
  %81 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %81, align 8
  %memberidx.i.i253 = getelementptr inbounds %string, ptr %81, i64 0, i32 1
  store ptr %80, ptr %memberidx.i.i253, align 8
  %memberidx1.i.i254 = getelementptr inbounds %string, ptr %81, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i254, align 4
  %memberidx2.i.i255 = getelementptr inbounds %string, ptr %81, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i255, align 4
  %82 = load i64, ptr %memberidx.i, align 4
  %.not.i258 = icmp eq i64 %82, 11
  br i1 %.not.i258, label %ifend.i262, label %ifend39

ifend.i262:                                       ; preds = %ifend36
  %memberidx2.i260 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %83 = load ptr, ptr %memberidx2.i260, align 8
  %84 = tail call i64 @memcmp(ptr %83, ptr nonnull %80, i64 11)
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %common.ret, label %ifend39

ifend39:                                          ; preds = %ifend36, %ifend.i262
  %86 = tail call ptr @malloc(i32 88)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %86, ptr noundef nonnull align 8 dereferenceable(11) @106, i64 11, i1 false)
  %87 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %87, align 8
  %memberidx.i.i264 = getelementptr inbounds %string, ptr %87, i64 0, i32 1
  store ptr %86, ptr %memberidx.i.i264, align 8
  %memberidx1.i.i265 = getelementptr inbounds %string, ptr %87, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i265, align 4
  %memberidx2.i.i266 = getelementptr inbounds %string, ptr %87, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i266, align 4
  %88 = load i64, ptr %memberidx.i, align 4
  %.not.i269 = icmp eq i64 %88, 11
  br i1 %.not.i269, label %ifend.i273, label %ifend42

ifend.i273:                                       ; preds = %ifend39
  %memberidx2.i271 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %89 = load ptr, ptr %memberidx2.i271, align 8
  %90 = tail call i64 @memcmp(ptr %89, ptr nonnull %86, i64 11)
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %common.ret, label %ifend42

ifend42:                                          ; preds = %ifend39, %ifend.i273
  %92 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %92, ptr noundef nonnull align 8 dereferenceable(6) @107, i64 6, i1 false)
  %93 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %93, align 8
  %memberidx.i.i275 = getelementptr inbounds %string, ptr %93, i64 0, i32 1
  store ptr %92, ptr %memberidx.i.i275, align 8
  %memberidx1.i.i276 = getelementptr inbounds %string, ptr %93, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i276, align 4
  %memberidx2.i.i277 = getelementptr inbounds %string, ptr %93, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i277, align 4
  %94 = load i64, ptr %memberidx.i, align 4
  %.not.i280 = icmp eq i64 %94, 6
  br i1 %.not.i280, label %ifend.i284, label %ifend45

ifend.i284:                                       ; preds = %ifend42
  %memberidx2.i282 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %95 = load ptr, ptr %memberidx2.i282, align 8
  %96 = tail call i64 @memcmp(ptr %95, ptr nonnull %92, i64 6)
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %common.ret, label %ifend45

ifend45:                                          ; preds = %ifend42, %ifend.i284
  %98 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %98, ptr noundef nonnull align 8 dereferenceable(6) @108, i64 6, i1 false)
  %99 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %99, align 8
  %memberidx.i.i286 = getelementptr inbounds %string, ptr %99, i64 0, i32 1
  store ptr %98, ptr %memberidx.i.i286, align 8
  %memberidx1.i.i287 = getelementptr inbounds %string, ptr %99, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i287, align 4
  %memberidx2.i.i288 = getelementptr inbounds %string, ptr %99, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i288, align 4
  %100 = load i64, ptr %memberidx.i, align 4
  %.not.i291 = icmp eq i64 %100, 6
  br i1 %.not.i291, label %ifend.i295, label %ifend48

ifend.i295:                                       ; preds = %ifend45
  %memberidx2.i293 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %101 = load ptr, ptr %memberidx2.i293, align 8
  %102 = tail call i64 @memcmp(ptr %101, ptr nonnull %98, i64 6)
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %common.ret, label %ifend48

ifend48:                                          ; preds = %ifend45, %ifend.i295
  %104 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %104, ptr noundef nonnull align 8 dereferenceable(7) @109, i64 7, i1 false)
  %105 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %105, align 8
  %memberidx.i.i297 = getelementptr inbounds %string, ptr %105, i64 0, i32 1
  store ptr %104, ptr %memberidx.i.i297, align 8
  %memberidx1.i.i298 = getelementptr inbounds %string, ptr %105, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i298, align 4
  %memberidx2.i.i299 = getelementptr inbounds %string, ptr %105, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i299, align 4
  %106 = load i64, ptr %memberidx.i, align 4
  %.not.i302 = icmp eq i64 %106, 7
  br i1 %.not.i302, label %ifend.i306, label %ifend51

ifend.i306:                                       ; preds = %ifend48
  %memberidx2.i304 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %107 = load ptr, ptr %memberidx2.i304, align 8
  %108 = tail call i64 @memcmp(ptr %107, ptr nonnull %104, i64 7)
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %common.ret, label %ifend51

ifend51:                                          ; preds = %ifend48, %ifend.i306
  %110 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %110, ptr noundef nonnull align 8 dereferenceable(7) @110, i64 7, i1 false)
  %111 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %111, align 8
  %memberidx.i.i308 = getelementptr inbounds %string, ptr %111, i64 0, i32 1
  store ptr %110, ptr %memberidx.i.i308, align 8
  %memberidx1.i.i309 = getelementptr inbounds %string, ptr %111, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i309, align 4
  %memberidx2.i.i310 = getelementptr inbounds %string, ptr %111, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i310, align 4
  %112 = load i64, ptr %memberidx.i, align 4
  %.not.i313 = icmp eq i64 %112, 7
  br i1 %.not.i313, label %ifend.i317, label %ifend54

ifend.i317:                                       ; preds = %ifend51
  %memberidx2.i315 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %113 = load ptr, ptr %memberidx2.i315, align 8
  %114 = tail call i64 @memcmp(ptr %113, ptr nonnull %110, i64 7)
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %common.ret, label %ifend54

ifend54:                                          ; preds = %ifend51, %ifend.i317
  %116 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %116, ptr noundef nonnull align 8 dereferenceable(6) @111, i64 6, i1 false)
  %117 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %117, align 8
  %memberidx.i.i319 = getelementptr inbounds %string, ptr %117, i64 0, i32 1
  store ptr %116, ptr %memberidx.i.i319, align 8
  %memberidx1.i.i320 = getelementptr inbounds %string, ptr %117, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i320, align 4
  %memberidx2.i.i321 = getelementptr inbounds %string, ptr %117, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i321, align 4
  %118 = load i64, ptr %memberidx.i, align 4
  %.not.i324 = icmp eq i64 %118, 6
  br i1 %.not.i324, label %ifend.i328, label %ifend57

ifend.i328:                                       ; preds = %ifend54
  %memberidx2.i326 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %119 = load ptr, ptr %memberidx2.i326, align 8
  %120 = tail call i64 @memcmp(ptr %119, ptr nonnull %116, i64 6)
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %common.ret, label %ifend57

ifend57:                                          ; preds = %ifend54, %ifend.i328
  %122 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %122, ptr noundef nonnull align 8 dereferenceable(6) @112, i64 6, i1 false)
  %123 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %123, align 8
  %memberidx.i.i330 = getelementptr inbounds %string, ptr %123, i64 0, i32 1
  store ptr %122, ptr %memberidx.i.i330, align 8
  %memberidx1.i.i331 = getelementptr inbounds %string, ptr %123, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i331, align 4
  %memberidx2.i.i332 = getelementptr inbounds %string, ptr %123, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i332, align 4
  %124 = load i64, ptr %memberidx.i, align 4
  %.not.i335 = icmp eq i64 %124, 6
  br i1 %.not.i335, label %ifend.i339, label %ifend60

ifend.i339:                                       ; preds = %ifend57
  %memberidx2.i337 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %125 = load ptr, ptr %memberidx2.i337, align 8
  %126 = tail call i64 @memcmp(ptr %125, ptr nonnull %122, i64 6)
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %common.ret, label %ifend60

ifend60:                                          ; preds = %ifend57, %ifend.i339
  %128 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %128, ptr noundef nonnull align 8 dereferenceable(6) @113, i64 6, i1 false)
  %129 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %129, align 8
  %memberidx.i.i341 = getelementptr inbounds %string, ptr %129, i64 0, i32 1
  store ptr %128, ptr %memberidx.i.i341, align 8
  %memberidx1.i.i342 = getelementptr inbounds %string, ptr %129, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i342, align 4
  %memberidx2.i.i343 = getelementptr inbounds %string, ptr %129, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i343, align 4
  %130 = load i64, ptr %memberidx.i, align 4
  %.not.i346 = icmp eq i64 %130, 6
  br i1 %.not.i346, label %ifend.i350, label %ifend63

ifend.i350:                                       ; preds = %ifend60
  %memberidx2.i348 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %131 = load ptr, ptr %memberidx2.i348, align 8
  %132 = tail call i64 @memcmp(ptr %131, ptr nonnull %128, i64 6)
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %common.ret, label %ifend63

ifend63:                                          ; preds = %ifend60, %ifend.i350
  %134 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %134, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  %135 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %135, align 8
  %memberidx.i.i352 = getelementptr inbounds %string, ptr %135, i64 0, i32 1
  store ptr %134, ptr %memberidx.i.i352, align 8
  %memberidx1.i.i353 = getelementptr inbounds %string, ptr %135, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i353, align 4
  %memberidx2.i.i354 = getelementptr inbounds %string, ptr %135, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i354, align 4
  %136 = load i64, ptr %memberidx.i, align 4
  %.not.i357 = icmp eq i64 %136, 6
  br i1 %.not.i357, label %ifend.i361, label %ifend66

ifend.i361:                                       ; preds = %ifend63
  %memberidx2.i359 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %137 = load ptr, ptr %memberidx2.i359, align 8
  %138 = tail call i64 @memcmp(ptr %137, ptr nonnull %134, i64 6)
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %common.ret, label %ifend66

ifend66:                                          ; preds = %ifend63, %ifend.i361
  %140 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %140, ptr noundef nonnull align 8 dereferenceable(6) @115, i64 6, i1 false)
  %141 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %141, align 8
  %memberidx.i.i363 = getelementptr inbounds %string, ptr %141, i64 0, i32 1
  store ptr %140, ptr %memberidx.i.i363, align 8
  %memberidx1.i.i364 = getelementptr inbounds %string, ptr %141, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i364, align 4
  %memberidx2.i.i365 = getelementptr inbounds %string, ptr %141, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i365, align 4
  %142 = load i64, ptr %memberidx.i, align 4
  %.not.i368 = icmp eq i64 %142, 6
  br i1 %.not.i368, label %ifend.i372, label %ifend69

ifend.i372:                                       ; preds = %ifend66
  %memberidx2.i370 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %143 = load ptr, ptr %memberidx2.i370, align 8
  %144 = tail call i64 @memcmp(ptr %143, ptr nonnull %140, i64 6)
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %common.ret, label %ifend69

ifend69:                                          ; preds = %ifend66, %ifend.i372
  %146 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %146, ptr noundef nonnull align 8 dereferenceable(6) @116, i64 6, i1 false)
  %147 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %147, align 8
  %memberidx.i.i374 = getelementptr inbounds %string, ptr %147, i64 0, i32 1
  store ptr %146, ptr %memberidx.i.i374, align 8
  %memberidx1.i.i375 = getelementptr inbounds %string, ptr %147, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i375, align 4
  %memberidx2.i.i376 = getelementptr inbounds %string, ptr %147, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i376, align 4
  %148 = load i64, ptr %memberidx.i, align 4
  %.not.i379 = icmp eq i64 %148, 6
  br i1 %.not.i379, label %ifend.i383, label %ifend72

ifend.i383:                                       ; preds = %ifend69
  %memberidx2.i381 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %149 = load ptr, ptr %memberidx2.i381, align 8
  %150 = tail call i64 @memcmp(ptr %149, ptr nonnull %146, i64 6)
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %common.ret, label %ifend72

ifend72:                                          ; preds = %ifend69, %ifend.i383
  %152 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %152, ptr noundef nonnull align 8 dereferenceable(7) @117, i64 7, i1 false)
  %153 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %153, align 8
  %memberidx.i.i385 = getelementptr inbounds %string, ptr %153, i64 0, i32 1
  store ptr %152, ptr %memberidx.i.i385, align 8
  %memberidx1.i.i386 = getelementptr inbounds %string, ptr %153, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i386, align 4
  %memberidx2.i.i387 = getelementptr inbounds %string, ptr %153, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i387, align 4
  %154 = load i64, ptr %memberidx.i, align 4
  %.not.i390 = icmp eq i64 %154, 7
  br i1 %.not.i390, label %ifend.i394, label %ifend75

ifend.i394:                                       ; preds = %ifend72
  %memberidx2.i392 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %155 = load ptr, ptr %memberidx2.i392, align 8
  %156 = tail call i64 @memcmp(ptr %155, ptr nonnull %152, i64 7)
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %common.ret, label %ifend75

ifend75:                                          ; preds = %ifend72, %ifend.i394
  %158 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %158, ptr noundef nonnull align 8 dereferenceable(7) @118, i64 7, i1 false)
  %159 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %159, align 8
  %memberidx.i.i396 = getelementptr inbounds %string, ptr %159, i64 0, i32 1
  store ptr %158, ptr %memberidx.i.i396, align 8
  %memberidx1.i.i397 = getelementptr inbounds %string, ptr %159, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i397, align 4
  %memberidx2.i.i398 = getelementptr inbounds %string, ptr %159, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i398, align 4
  %160 = load i64, ptr %memberidx.i, align 4
  %.not.i401 = icmp eq i64 %160, 7
  br i1 %.not.i401, label %ifend.i405, label %ifend78

ifend.i405:                                       ; preds = %ifend75
  %memberidx2.i403 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %161 = load ptr, ptr %memberidx2.i403, align 8
  %162 = tail call i64 @memcmp(ptr %161, ptr nonnull %158, i64 7)
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %common.ret, label %ifend78

ifend78:                                          ; preds = %ifend75, %ifend.i405
  %164 = tail call ptr @malloc(i32 64)
  store i64 6872318721989304159, ptr %164, align 8
  %165 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %165, align 8
  %memberidx.i.i407 = getelementptr inbounds %string, ptr %165, i64 0, i32 1
  store ptr %164, ptr %memberidx.i.i407, align 8
  %memberidx1.i.i408 = getelementptr inbounds %string, ptr %165, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i408, align 4
  %memberidx2.i.i409 = getelementptr inbounds %string, ptr %165, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i409, align 4
  %166 = load i64, ptr %memberidx.i, align 4
  %.not.i412 = icmp eq i64 %166, 8
  br i1 %.not.i412, label %ifend.i416, label %ifend81

ifend.i416:                                       ; preds = %ifend78
  %memberidx2.i414 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %167 = load ptr, ptr %memberidx2.i414, align 8
  %168 = tail call i64 @memcmp(ptr %167, ptr nonnull %164, i64 8)
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %common.ret, label %ifend81

ifend81:                                          ; preds = %ifend78, %ifend.i416
  %170 = tail call ptr @malloc(i32 64)
  store i64 6872318640384728927, ptr %170, align 8
  %171 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %171, align 8
  %memberidx.i.i418 = getelementptr inbounds %string, ptr %171, i64 0, i32 1
  store ptr %170, ptr %memberidx.i.i418, align 8
  %memberidx1.i.i419 = getelementptr inbounds %string, ptr %171, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i419, align 4
  %memberidx2.i.i420 = getelementptr inbounds %string, ptr %171, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i420, align 4
  %172 = load i64, ptr %memberidx.i, align 4
  %.not.i423 = icmp eq i64 %172, 8
  br i1 %.not.i423, label %ifend.i427, label %ifend84

ifend.i427:                                       ; preds = %ifend81
  %memberidx2.i425 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %173 = load ptr, ptr %memberidx2.i425, align 8
  %174 = tail call i64 @memcmp(ptr %173, ptr nonnull %170, i64 8)
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %common.ret, label %ifend84

ifend84:                                          ; preds = %ifend81, %ifend.i427
  %176 = tail call ptr @malloc(i32 64)
  store i64 6872337336460992351, ptr %176, align 8
  %177 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %177, align 8
  %memberidx.i.i429 = getelementptr inbounds %string, ptr %177, i64 0, i32 1
  store ptr %176, ptr %memberidx.i.i429, align 8
  %memberidx1.i.i430 = getelementptr inbounds %string, ptr %177, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i430, align 4
  %memberidx2.i.i431 = getelementptr inbounds %string, ptr %177, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i431, align 4
  %178 = load i64, ptr %memberidx.i, align 4
  %.not.i434 = icmp eq i64 %178, 8
  br i1 %.not.i434, label %ifend.i438, label %ifend87

ifend.i438:                                       ; preds = %ifend84
  %memberidx2.i436 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %179 = load ptr, ptr %memberidx2.i436, align 8
  %180 = tail call i64 @memcmp(ptr %179, ptr nonnull %176, i64 8)
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %common.ret, label %ifend87

ifend87:                                          ; preds = %ifend84, %ifend.i438
  %182 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %182, ptr noundef nonnull align 8 dereferenceable(7) @119, i64 7, i1 false)
  %183 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %183, align 8
  %memberidx.i.i440 = getelementptr inbounds %string, ptr %183, i64 0, i32 1
  store ptr %182, ptr %memberidx.i.i440, align 8
  %memberidx1.i.i441 = getelementptr inbounds %string, ptr %183, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i441, align 4
  %memberidx2.i.i442 = getelementptr inbounds %string, ptr %183, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i442, align 4
  %184 = load i64, ptr %memberidx.i, align 4
  %.not.i445 = icmp eq i64 %184, 7
  br i1 %.not.i445, label %ifend.i449, label %common.ret

ifend.i449:                                       ; preds = %ifend87
  %memberidx2.i447 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %185 = load ptr, ptr %memberidx2.i447, align 8
  %186 = tail call i64 @memcmp(ptr %185, ptr nonnull %182, i64 7)
  %187 = icmp eq i64 %186, 0
  br label %common.ret
}

define internal fastcc noalias ptr @bin_op_to_op_overload_name(i64 %0) unnamed_addr {
  switch i64 %0, label %common.ret [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 20, label %if.entry16
    i64 21, label %if.entry19
    i64 22, label %if.entry22
    i64 23, label %if.entry25
    i64 24, label %if.entry28
    i64 25, label %if.entry31
    i64 7, label %if.entry34
    i64 8, label %if.entry37
    i64 9, label %if.entry40
    i64 10, label %if.entry43
    i64 11, label %if.entry46
    i64 12, label %if.entry49
    i64 13, label %if.entry52
    i64 14, label %if.entry55
    i64 29, label %if.entry58
    i64 30, label %if.entry61
    i64 15, label %if.entry64
    i64 16, label %if.entry67
    i64 17, label %if.entry70
    i64 26, label %if.entry73
    i64 28, label %if.entry76
    i64 18, label %if.entry79
  ]

common.ret.sink.split:                            ; preds = %if.entry, %if.entry1, %if.entry4, %if.entry7, %if.entry10, %if.entry13, %if.entry16, %if.entry19, %if.entry22, %if.entry25, %if.entry28, %if.entry31, %if.entry34, %if.entry37, %if.entry40, %if.entry43, %if.entry46, %if.entry49, %if.entry52, %if.entry55, %if.entry58, %if.entry61, %if.entry64, %if.entry67, %if.entry70, %if.entry73, %if.entry76, %if.entry79
  %.sink193 = phi ptr [ %30, %if.entry79 ], [ %29, %if.entry76 ], [ %28, %if.entry73 ], [ %27, %if.entry70 ], [ %26, %if.entry67 ], [ %25, %if.entry64 ], [ %24, %if.entry61 ], [ %23, %if.entry58 ], [ %22, %if.entry55 ], [ %21, %if.entry52 ], [ %20, %if.entry49 ], [ %19, %if.entry46 ], [ %18, %if.entry43 ], [ %17, %if.entry40 ], [ %16, %if.entry37 ], [ %15, %if.entry34 ], [ %14, %if.entry31 ], [ %13, %if.entry28 ], [ %12, %if.entry25 ], [ %11, %if.entry22 ], [ %10, %if.entry19 ], [ %9, %if.entry16 ], [ %8, %if.entry13 ], [ %7, %if.entry10 ], [ %6, %if.entry7 ], [ %5, %if.entry4 ], [ %4, %if.entry1 ], [ %3, %if.entry ]
  %.sink191 = phi i64 [ 6, %if.entry79 ], [ 8, %if.entry76 ], [ 8, %if.entry73 ], [ 7, %if.entry70 ], [ 7, %if.entry67 ], [ 6, %if.entry64 ], [ 7, %if.entry61 ], [ 7, %if.entry58 ], [ 6, %if.entry55 ], [ 6, %if.entry52 ], [ 6, %if.entry49 ], [ 6, %if.entry46 ], [ 6, %if.entry43 ], [ 6, %if.entry40 ], [ 6, %if.entry37 ], [ 6, %if.entry34 ], [ 8, %if.entry31 ], [ 8, %if.entry28 ], [ 8, %if.entry25 ], [ 8, %if.entry22 ], [ 8, %if.entry19 ], [ 8, %if.entry16 ], [ 7, %if.entry13 ], [ 7, %if.entry10 ], [ 7, %if.entry7 ], [ 7, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i.i187 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %.sink193, ptr %memberidx.i.i187, align 8
  %memberidx1.i.i188 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %.sink191, ptr %memberidx1.i.i188, align 4
  %memberidx2.i.i189 = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %.sink191, ptr %memberidx2.i.i189, align 4
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %1
  %common.ret.op = phi ptr [ null, %1 ], [ %2, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %3 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @99, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @100, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry4:                                        ; preds = %1
  %5 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %5, ptr noundef nonnull align 8 dereferenceable(7) @101, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry7:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %6, ptr noundef nonnull align 8 dereferenceable(7) @102, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry10:                                       ; preds = %1
  %7 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %7, ptr noundef nonnull align 8 dereferenceable(7) @118, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry13:                                       ; preds = %1
  %8 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @117, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry16:                                       ; preds = %1
  %9 = tail call ptr @malloc(i32 64)
  store i64 6872318640199393119, ptr %9, align 8
  br label %common.ret.sink.split

if.entry19:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 64)
  store i64 6872318631895850847, ptr %10, align 8
  br label %common.ret.sink.split

if.entry22:                                       ; preds = %1
  %11 = tail call ptr @malloc(i32 64)
  store i64 6872318674845130591, ptr %11, align 8
  br label %common.ret.sink.split

if.entry25:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 64)
  store i64 6872318717592887135, ptr %12, align 8
  br label %common.ret.sink.split

if.entry28:                                       ; preds = %1
  %13 = tail call ptr @malloc(i32 64)
  store i64 6872318640384728927, ptr %13, align 8
  br label %common.ret.sink.split

if.entry31:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 64)
  store i64 6872318721989304159, ptr %14, align 8
  br label %common.ret.sink.split

if.entry34:                                       ; preds = %1
  %15 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %15, ptr noundef nonnull align 8 dereferenceable(6) @151, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry37:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %16, ptr noundef nonnull align 8 dereferenceable(6) @116, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry40:                                       ; preds = %1
  %17 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %17, ptr noundef nonnull align 8 dereferenceable(6) @112, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry43:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %18, ptr noundef nonnull align 8 dereferenceable(6) @115, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry46:                                       ; preds = %1
  %19 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %19, ptr noundef nonnull align 8 dereferenceable(6) @98, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry49:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %20, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry52:                                       ; preds = %1
  %21 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %21, ptr noundef nonnull align 8 dereferenceable(6) @107, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry55:                                       ; preds = %1
  %22 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %22, ptr noundef nonnull align 8 dereferenceable(6) @108, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry58:                                       ; preds = %1
  %23 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %23, ptr noundef nonnull align 8 dereferenceable(7) @109, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry61:                                       ; preds = %1
  %24 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %24, ptr noundef nonnull align 8 dereferenceable(7) @110, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry64:                                       ; preds = %1
  %25 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %25, ptr noundef nonnull align 8 dereferenceable(6) @103, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry67:                                       ; preds = %1
  %26 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %26, ptr noundef nonnull align 8 dereferenceable(7) @152, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry70:                                       ; preds = %1
  %27 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %27, ptr noundef nonnull align 8 dereferenceable(7) @153, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry73:                                       ; preds = %1
  %28 = tail call ptr @malloc(i32 64)
  store i64 6872318640367165279, ptr %28, align 8
  br label %common.ret.sink.split

if.entry76:                                       ; preds = %1
  %29 = tail call ptr @malloc(i32 64)
  store i64 6872318700514991967, ptr %29, align 8
  br label %common.ret.sink.split

if.entry79:                                       ; preds = %1
  %30 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %30, ptr noundef nonnull align 8 dereferenceable(6) @111, i64 6, i1 false)
  br label %common.ret.sink.split
}

define internal fastcc noalias ptr @dump_bin_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend54 [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 7, label %if.entry16
    i64 8, label %if.entry19
    i64 9, label %if.entry22
    i64 10, label %if.entry25
    i64 11, label %if.entry28
    i64 12, label %if.entry31
    i64 13, label %if.entry34
    i64 14, label %if.entry37
    i64 15, label %if.entry40
    i64 16, label %if.entry43
    i64 17, label %if.entry46
    i64 18, label %if.entry49
    i64 19, label %if.entry52
  ]

common.ret:                                       ; preds = %ifend54, %if.entry52, %if.entry49, %if.entry46, %if.entry43, %if.entry40, %if.entry37, %if.entry34, %if.entry31, %if.entry28, %if.entry25, %if.entry22, %if.entry19, %if.entry16, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink133 = phi ptr [ %22, %ifend54 ], [ %21, %if.entry52 ], [ %20, %if.entry49 ], [ %19, %if.entry46 ], [ %18, %if.entry43 ], [ %17, %if.entry40 ], [ %16, %if.entry37 ], [ %15, %if.entry34 ], [ %14, %if.entry31 ], [ %13, %if.entry28 ], [ %12, %if.entry25 ], [ %11, %if.entry22 ], [ %10, %if.entry19 ], [ %9, %if.entry16 ], [ %8, %if.entry13 ], [ %7, %if.entry10 ], [ %6, %if.entry7 ], [ %5, %if.entry4 ], [ %4, %if.entry1 ], [ %3, %if.entry ]
  %.sink131 = phi i64 [ 2, %ifend54 ], [ 1, %if.entry52 ], [ 2, %if.entry49 ], [ 3, %if.entry46 ], [ 3, %if.entry43 ], [ 2, %if.entry40 ], [ 2, %if.entry37 ], [ 2, %if.entry34 ], [ 2, %if.entry31 ], [ 2, %if.entry28 ], [ 2, %if.entry25 ], [ 1, %if.entry22 ], [ 2, %if.entry19 ], [ 1, %if.entry16 ], [ 1, %if.entry13 ], [ 1, %if.entry10 ], [ 1, %if.entry7 ], [ 1, %if.entry4 ], [ 1, %if.entry1 ], [ 1, %if.entry ]
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i.i127 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %.sink133, ptr %memberidx.i.i127, align 8
  %memberidx1.i.i128 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %.sink131, ptr %memberidx1.i.i128, align 4
  %memberidx2.i.i129 = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %.sink131, ptr %memberidx2.i.i129, align 4
  ret ptr %2

if.entry:                                         ; preds = %1
  %3 = tail call ptr @malloc(i32 8)
  store i8 43, ptr %3, align 8
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 8)
  store i8 45, ptr %4, align 8
  br label %common.ret

if.entry4:                                        ; preds = %1
  %5 = tail call ptr @malloc(i32 8)
  store i8 42, ptr %5, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 8)
  store i8 47, ptr %6, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %7 = tail call ptr @malloc(i32 8)
  store i8 37, ptr %7, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %8 = tail call ptr @malloc(i32 8)
  store i8 94, ptr %8, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %9 = tail call ptr @malloc(i32 8)
  store i8 62, ptr %9, align 8
  br label %common.ret

if.entry19:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 16)
  store i16 15678, ptr %10, align 8
  br label %common.ret

if.entry22:                                       ; preds = %1
  %11 = tail call ptr @malloc(i32 8)
  store i8 60, ptr %11, align 8
  br label %common.ret

if.entry25:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 16)
  store i16 15676, ptr %12, align 8
  br label %common.ret

if.entry28:                                       ; preds = %1
  %13 = tail call ptr @malloc(i32 16)
  store i16 15677, ptr %13, align 8
  br label %common.ret

if.entry31:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 16)
  store i16 15649, ptr %14, align 8
  br label %common.ret

if.entry34:                                       ; preds = %1
  %15 = tail call ptr @malloc(i32 16)
  store i16 15420, ptr %15, align 8
  br label %common.ret

if.entry37:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 16)
  store i16 15934, ptr %16, align 8
  br label %common.ret

if.entry40:                                       ; preds = %1
  %17 = tail call ptr @malloc(i32 16)
  store i16 29295, ptr %17, align 8
  br label %common.ret

if.entry43:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %18, ptr noundef nonnull align 8 dereferenceable(3) @28, i64 3, i1 false)
  br label %common.ret

if.entry46:                                       ; preds = %1
  %19 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %19, ptr noundef nonnull align 8 dereferenceable(3) @29, i64 3, i1 false)
  br label %common.ret

if.entry49:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 16)
  store i16 28265, ptr %20, align 8
  br label %common.ret

if.entry52:                                       ; preds = %1
  %21 = tail call ptr @malloc(i32 8)
  store i8 61, ptr %21, align 8
  br label %common.ret

ifend54:                                          ; preds = %1
  %22 = tail call ptr @malloc(i32 16)
  store i16 11822, ptr %22, align 8
  br label %common.ret
}

define internal fastcc noalias ptr @dump_unary_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend15 [
    i64 2, label %if.entry
    i64 3, label %if.entry1
    i64 4, label %if.entry4
    i64 5, label %if.entry7
    i64 6, label %if.entry10
    i64 7, label %if.entry13
  ]

common.ret:                                       ; preds = %ifend15, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink42 = phi ptr [ %9, %ifend15 ], [ %8, %if.entry13 ], [ %7, %if.entry10 ], [ %6, %if.entry7 ], [ %5, %if.entry4 ], [ %4, %if.entry1 ], [ %3, %if.entry ]
  %.sink40 = phi i64 [ 1, %ifend15 ], [ 1, %if.entry13 ], [ 1, %if.entry10 ], [ 8, %if.entry7 ], [ 8, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i.i36 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %.sink42, ptr %memberidx.i.i36, align 8
  %memberidx1.i.i37 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %.sink40, ptr %memberidx1.i.i37, align 4
  %memberidx2.i.i38 = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %.sink40, ptr %memberidx2.i.i38, align 4
  ret ptr %2

if.entry:                                         ; preds = %1
  %3 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @160, i64 7, i1 false)
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @161, i64 7, i1 false)
  br label %common.ret

if.entry4:                                        ; preds = %1
  %5 = tail call ptr @malloc(i32 64)
  store i64 3110625547759087656, ptr %5, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 64)
  store i64 3255303685788364840, ptr %6, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %7 = tail call ptr @malloc(i32 8)
  store i8 45, ptr %7, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %8 = tail call ptr @malloc(i32 8)
  store i8 33, ptr %8, align 8
  br label %common.ret

ifend15:                                          ; preds = %1
  %9 = tail call ptr @malloc(i32 8)
  store i8 38, ptr %9, align 8
  br label %common.ret
}

define internal fastcc void @GeneratedModule_print_errors(ptr nocapture readonly %0) unnamed_addr {
  %2 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %3)
  %5 = trunc i64 %4 to i32
  %mallocsize.i = shl i32 %5, 3
  %6 = tail call ptr @malloc(i32 %mallocsize.i)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %3, i64 %4, i1 false)
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i.i5 = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i.i5, align 8
  %memberidx1.i.i6 = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %4, ptr %memberidx1.i.i6, align 4
  %memberidx2.i.i7 = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %4, ptr %memberidx2.i.i7, align 4
  %8 = load ptr, ptr %memberidx, align 8
  tail call void @LLVMDisposeMessage(ptr %8)
  %9 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %10 = tail call ptr %9(ptr nonnull %7)
  %11 = alloca ptr, align 8
  %12 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %11, ptr nonnull @211, ptr %10)
  %13 = load ptr, ptr %11, align 8
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 %12, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 %12, ptr %memberidx2.i, align 4
  tail call void @free(ptr %10)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %15 = load ptr, ptr %14, align 8
  %memberidx.i4 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx.i4, align 8
  %17 = call ptr %16(ptr nonnull %14)
  %18 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @210, ptr %17)
  %19 = load ptr, ptr %2, align 8
  %20 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 %18, ptr %memberidx2.i.i, align 4
  call void @free(ptr %17)
  %21 = load ptr, ptr %20, align 8
  %memberidx.i.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %21, i64 0, i32 3
  %22 = load ptr, ptr %memberidx.i.i.i, align 8
  %23 = call ptr %22(ptr nonnull %20)
  %24 = load i64, ptr %memberidx1.i.i, align 4
  call void @write(i64 1, ptr %23, i64 %24)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  ret void
}

define internal i64 @GeneratedModule_exec(ptr %0) {
  tail call void @LLVMLinkInMCJIT()
  %engine = alloca ptr, align 8
  store ptr null, ptr %engine, align 8
  %memberidx = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %3 = call i1 @LLVMCreateExecutionEngineForModule(ptr nonnull %engine, ptr %2, ptr nonnull %memberidx1)
  br i1 %3, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  call fastcc void @GeneratedModule_print_errors(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %1, %if.entry
  %4 = load ptr, ptr %memberidx, align 8
  %5 = call ptr @LLVMGetNamedFunction(ptr %4, ptr nonnull @212)
  %6 = icmp eq ptr %5, null
  br i1 %6, label %if.entry4, label %ifend6

common.ret:                                       ; preds = %if.entry12, %ifend6, %if.entry4
  %common.ret.op = phi i64 [ 1, %if.entry4 ], [ %13, %ifend6 ], [ %13, %if.entry12 ]
  %.sink = load ptr, ptr %engine, align 8
  call void @LLVMDisposeExecutionEngine(ptr %.sink)
  ret i64 %common.ret.op

if.entry4:                                        ; preds = %ifend
  %7 = call ptr @malloc(i32 384)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %7, ptr noundef nonnull align 8 dereferenceable(48) @213, i64 48, i1 false)
  %8 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %8, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  store ptr %7, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  store i64 48, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 3
  store i64 48, ptr %memberidx2.i.i, align 4
  %9 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %10 = call ptr %9(ptr nonnull %8)
  %11 = load i64, ptr %memberidx1.i.i, align 4
  call void @write(i64 1, ptr %10, i64 %11)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  br label %common.ret

ifend6:                                           ; preds = %ifend
  %12 = load ptr, ptr %engine, align 8
  %13 = call i64 @LLVMRunFunctionAsMain(ptr %12, ptr nonnull %5, i64 0, ptr null, ptr null)
  %14 = load ptr, ptr %engine, align 8
  %15 = load ptr, ptr %memberidx, align 8
  %16 = call i1 @LLVMRemoveModule(ptr %14, ptr %15, ptr nonnull %memberidx, ptr nonnull %memberidx1)
  br i1 %16, label %if.entry12, label %common.ret

if.entry12:                                       ; preds = %ifend6
  call fastcc void @GeneratedModule_print_errors(ptr nonnull %0)
  br label %common.ret
}

define internal fastcc ptr @GeneratedModule_create_target_machine(ptr %0, ptr %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 0)
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %4, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  store ptr %3, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %5 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %5, 0
  br i1 %.not.i, label %ifend.i, label %false_block

ifend.i:                                          ; preds = %2
  %memberidx2.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2.i, align 8
  %7 = tail call i64 @memcmp(ptr %6, ptr %3, i64 0)
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %true_block, label %false_block

true_block:                                       ; preds = %ifend.i
  %9 = tail call ptr @LLVMGetDefaultTargetTriple()
  br label %end

false_block:                                      ; preds = %2, %ifend.i
  %10 = load ptr, ptr %1, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx, align 8
  %12 = tail call ptr %11(ptr nonnull %1)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %9, %true_block ], [ %12, %false_block ]
  %target = alloca ptr, align 8
  store ptr null, ptr %target, align 8
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %13 = call i1 @LLVMGetTargetFromTriple(ptr %ternary, ptr nonnull %target, ptr nonnull %memberidx1)
  br i1 %13, label %if.entry, label %ifend

if.entry:                                         ; preds = %end
  call fastcc void @GeneratedModule_print_errors(ptr %0)
  br label %ifend

ifend:                                            ; preds = %end, %if.entry
  %14 = load ptr, ptr %target, align 8
  %15 = call ptr @LLVMGetHostCPUFeatures()
  %16 = call ptr @LLVMCreateTargetMachine(ptr %14, ptr %ternary, ptr nonnull @214, ptr %15, i64 3, i64 0, i64 0)
  ret ptr %16
}

define internal void @GeneratedModule_write_object(ptr %0, ptr %1, ptr %2) {
  %4 = tail call fastcc ptr @GeneratedModule_create_target_machine(ptr %0, ptr %2)
  %memberidx = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr @LLVMCreateTargetDataLayout(ptr %4)
  tail call void @LLVMSetDataLayout(ptr %5, ptr %6)
  %7 = load ptr, ptr %memberidx, align 8
  %8 = tail call ptr @LLVMGetTargetMachineTriple(ptr %4)
  tail call void @LLVMSetTarget(ptr %7, ptr %8)
  %9 = load ptr, ptr %memberidx, align 8
  %10 = load ptr, ptr %1, align 8
  %memberidx3 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx3, align 8
  %12 = tail call ptr %11(ptr nonnull %1)
  %memberidx4 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %13 = tail call i1 @LLVMTargetMachineEmitToFile(ptr %4, ptr %9, ptr %12, i64 1, ptr nonnull %memberidx4)
  br i1 %13, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @GeneratedModule_print_errors(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  tail call void @LLVMDisposeTargetMachine(ptr %4)
  ret void
}

define internal void @GeneratedModule_run_passes(ptr nocapture readonly %0, i64 %1) {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %while.end
  ret void

ifend:                                            ; preds = %2
  %4 = tail call ptr @LLVMCreatePassManager()
  %memberidx = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr @LLVMCreateFunctionPassManagerForModule(ptr %5)
  %7 = tail call ptr @LLVMPassManagerBuilderCreate()
  tail call void @LLVMAddInternalizePass(ptr %4, i64 1)
  tail call void @LLVMAddGlobalDCEPass(ptr %4)
  tail call void @LLVMAddGlobalOptimizerPass(ptr %4)
  tail call void @LLVMAddInstructionCombiningPass(ptr %4)
  tail call void @LLVMAddScalarReplAggregatesPass(ptr %4)
  tail call void @LLVMAddFunctionInliningPass(ptr %4)
  tail call void @LLVMPassManagerBuilderSetOptLevel(ptr %7, i64 %1)
  tail call void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr %7, i64 255)
  tail call void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr %7, ptr %6)
  %8 = load ptr, ptr %memberidx, align 8
  %9 = tail call ptr @LLVMGetFirstFunction(ptr %8)
  %.not = icmp eq ptr %9, null
  br i1 %.not, label %while.end, label %while.entry

while.entry:                                      ; preds = %ifend, %while.entry
  %10 = phi ptr [ %12, %while.entry ], [ %9, %ifend ]
  %11 = tail call i1 @LLVMRunFunctionPassManager(ptr %6, ptr nonnull %10)
  %12 = tail call ptr @LLVMGetNextFunction(ptr nonnull %10)
  %.not6 = icmp eq ptr %12, null
  br i1 %.not6, label %while.end, label %while.entry

while.end:                                        ; preds = %while.entry, %ifend
  tail call void @LLVMPassManagerBuilderPopulateModulePassManager(ptr %7, ptr %4)
  %13 = load ptr, ptr %memberidx, align 8
  %14 = tail call i1 @LLVMRunPassManager(ptr %4, ptr %13)
  tail call void @LLVMDisposePassManager(ptr %6)
  tail call void @LLVMPassManagerBuilderDispose(ptr %7)
  tail call void @LLVMDisposePassManager(ptr %4)
  br label %common.ret
}

define internal void @GeneratedModule_print(ptr %0) {
  %memberidx = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %3 = tail call i1 @LLVMPrintModuleToFile(ptr %2, ptr nonnull @215, ptr nonnull %memberidx1)
  br i1 %3, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  tail call fastcc void @GeneratedModule_print_errors(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %1, %if.entry
  ret void
}

declare i1 @LLVMVerifyModule(ptr, i64, ptr) local_unnamed_addr

declare void @LLVM_InitializeAllTargetInfos() local_unnamed_addr

declare void @LLVM_InitializeAllTargets() local_unnamed_addr

declare void @LLVM_InitializeAllTargetMCs() local_unnamed_addr

declare void @LLVM_InitializeAllAsmParsers() local_unnamed_addr

declare void @LLVM_InitializeAllAsmPrinters() local_unnamed_addr

declare void @LLVMDisposeMessage(ptr) local_unnamed_addr

declare void @exit(i64) local_unnamed_addr

declare ptr @LLVMCreatePassManager() local_unnamed_addr

declare ptr @LLVMCreateFunctionPassManagerForModule(ptr) local_unnamed_addr

declare ptr @LLVMPassManagerBuilderCreate() local_unnamed_addr

declare void @LLVMAddInternalizePass(ptr, i64) local_unnamed_addr

declare void @LLVMAddGlobalDCEPass(ptr) local_unnamed_addr

declare void @LLVMAddGlobalOptimizerPass(ptr) local_unnamed_addr

declare void @LLVMAddInstructionCombiningPass(ptr) local_unnamed_addr

declare void @LLVMAddScalarReplAggregatesPass(ptr) local_unnamed_addr

declare void @LLVMAddFunctionInliningPass(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderSetOptLevel(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetFirstFunction(ptr) local_unnamed_addr

declare i1 @LLVMRunFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNextFunction(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateModulePassManager(ptr, ptr) local_unnamed_addr

declare i1 @LLVMRunPassManager(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposePassManager(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderDispose(ptr) local_unnamed_addr

declare void @LLVMLinkInMCJIT() local_unnamed_addr

declare i1 @LLVMCreateExecutionEngineForModule(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNamedFunction(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposeExecutionEngine(ptr) local_unnamed_addr

declare i64 @LLVMRunFunctionAsMain(ptr, ptr, i64, ptr, ptr) local_unnamed_addr

declare i1 @LLVMRemoveModule(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetDefaultTargetTriple() local_unnamed_addr

declare i1 @LLVMGetTargetFromTriple(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetMachine(ptr, ptr, ptr, ptr, i64, i64, i64) local_unnamed_addr

declare ptr @LLVMGetHostCPUFeatures() local_unnamed_addr

declare void @LLVMSetDataLayout(ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetDataLayout(ptr) local_unnamed_addr

declare void @LLVMSetTarget(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetTargetMachineTriple(ptr) local_unnamed_addr

declare i1 @LLVMTargetMachineEmitToFile(ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare void @LLVMDisposeTargetMachine(ptr) local_unnamed_addr

declare i1 @LLVMPrintModuleToFile(ptr, ptr, ptr) local_unnamed_addr

define internal fastcc ptr @CodeGen_store_expr_to_mem(ptr nocapture %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %memberidx = getelementptr inbounds %Expression, ptr %3, i64 0, i32 2
  %5 = load i64, ptr %memberidx, align 4
  %6 = icmp ne i64 %5, 6
  %memberidx1 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 1
  %7 = load i1, ptr %memberidx1, align 1
  %8 = or i1 %7, %6
  br i1 %8, label %else, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx2 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = load i64, ptr %9, align 4
  %.not = icmp eq i64 %10, 21
  br i1 %.not, label %ifend6, label %if.entry4

else:                                             ; preds = %4
  %11 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %3)
  br label %ifend

common.ret:                                       ; preds = %if.entry4, %ifend
  %common.ret.op = phi ptr [ %value.0, %ifend ], [ %18, %if.entry4 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else, %ifend6
  %value.0 = phi ptr [ %19, %ifend6 ], [ %11, %else ]
  %12 = tail call ptr @LLVMBuildStore(ptr %1, ptr %value.0, ptr %2)
  br label %common.ret

if.entry4:                                        ; preds = %if.entry
  %13 = tail call ptr @LLVMIntType(i64 64)
  %14 = tail call ptr @LLVMConstInt(ptr %13, i64 0, i1 false)
  %args = alloca [2 x ptr], align 8
  store ptr %14, ptr %args, align 8
  %15 = getelementptr inbounds ptr, ptr %args, i64 1
  store ptr %14, ptr %15, align 8
  %16 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %9, i1 true)
  %17 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %16, ptr %2, ptr nonnull %args, i64 2, ptr nonnull @26)
  %18 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %17, ptr nonnull %3)
  br label %common.ret

ifend6:                                           ; preds = %if.entry
  %19 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %9, ptr nonnull %3)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_array_exp(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 21
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %for.end, %if.entry
  %common.ret.op = phi ptr [ %8, %if.entry ], [ %39, %for.end ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %8 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %5, ptr nonnull %2)
  br label %common.ret

ifend:                                            ; preds = %3
  %memberidx3 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 1
  %9 = load i1, ptr %memberidx3, align 1
  br i1 %9, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend
  %10 = tail call ptr @malloc(i32 432)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %10, ptr noundef nonnull align 8 dereferenceable(54) @228, i64 54, i1 false)
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %11, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 1
  store ptr %10, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %12 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %13 = tail call ptr %12(ptr nonnull %11)
  %14 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @210, ptr %13)
  %15 = load ptr, ptr %4, align 8
  %16 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %16, align 8
  %memberidx.i.i25 = getelementptr inbounds %string, ptr %16, i64 0, i32 1
  store ptr %15, ptr %memberidx.i.i25, align 8
  %memberidx1.i.i26 = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  store i64 %14, ptr %memberidx1.i.i26, align 4
  %memberidx2.i.i27 = getelementptr inbounds %string, ptr %16, i64 0, i32 3
  store i64 %14, ptr %memberidx2.i.i27, align 4
  call void @free(ptr %13)
  %17 = load ptr, ptr %16, align 8
  %memberidx.i.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %17, i64 0, i32 3
  %18 = load ptr, ptr %memberidx.i.i.i, align 8
  %19 = call ptr %18(ptr nonnull %16)
  %20 = load i64, ptr %memberidx1.i.i26, align 4
  call void @write(i64 1, ptr %19, i64 %20)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %.pre = load ptr, ptr %memberidx, align 8
  br label %ifend6

ifend6:                                           ; preds = %ifend, %if.entry4
  %21 = phi ptr [ %5, %ifend ], [ %.pre, %if.entry4 ]
  %memberidx8 = getelementptr inbounds %ArrayType, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx8, align 8
  %23 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %22, i1 true)
  %memberidx9 = getelementptr inbounds %ArrayExpression, ptr %2, i64 0, i32 4
  %24 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Expression_, ptr %24, i64 0, i32 2
  %25 = load i64, ptr %memberidx10, align 4
  %26 = alloca ptr, i64 %25, align 8
  %27 = call ptr @malloc(i32 25)
  %memberidx.i28 = getelementptr inbounds %Array_Expression_, ptr %24, i64 0, i32 1
  %28 = load ptr, ptr %memberidx.i28, align 8
  %29 = load i64, ptr %memberidx10, align 4
  store i1 false, ptr %27, align 1
  %memberidx1.i.i29 = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 1
  %memberidx2.i.i30 = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 3
  store ptr %28, ptr %memberidx2.i.i30, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 2
  store i64 %29, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i29, align 4
  %30 = icmp slt i64 %29, 1
  br i1 %30, label %for.end, label %for.body

for.body:                                         ; preds = %ifend6, %for.body
  %31 = phi i64 [ %35, %for.body ], [ 1, %ifend6 ]
  %storemerge38.in = phi ptr [ %ptridx.i34, %for.body ], [ %28, %ifend6 ]
  %32 = phi i64 [ %33, %for.body ], [ 0, %ifend6 ]
  %storemerge38 = load ptr, ptr %storemerge38.in, align 8
  %33 = add i64 %32, 1
  %ptridx = getelementptr inbounds ptr, ptr %26, i64 %32
  %34 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %storemerge38)
  store ptr %34, ptr %ptridx, align 8
  %35 = add i64 %31, 1
  store i64 %35, ptr %memberidx1.i.i29, align 4
  %ptridx.i34 = getelementptr inbounds ptr, ptr %28, i64 %31
  %36 = icmp sgt i64 %35, %29
  br i1 %36, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %ifend6
  tail call void @free(ptr nonnull %27)
  %37 = load ptr, ptr %memberidx9, align 8
  %memberidx14 = getelementptr inbounds %Array_Expression_, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx14, align 4
  %39 = call ptr @LLVMConstArray(ptr %23, ptr nonnull %26, i64 %38)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_var_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 2
  %5 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %9, i64 %8
  %10 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 2
  %11 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %5, i64 0, i32 2
  %12 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Var_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx2 = getelementptr inbounds %Var, ptr %14, i64 0, i32 2
  %15 = load ptr, ptr %memberidx2, align 8
  %16 = load ptr, ptr %14, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %16, i1 true)
  %memberidx4 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 1
  %18 = load ptr, ptr %memberidx4, align 8
  %19 = load ptr, ptr %18, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %19, i64 0, i32 5
  %20 = load ptr, ptr %memberidx5, align 8
  %21 = tail call ptr %20(ptr nonnull %18)
  %memberidx6 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 3
  %22 = load i1, ptr %memberidx6, align 1
  br i1 %22, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %23 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %15)
  %24 = load ptr, ptr %0, align 8
  %25 = tail call ptr @LLVMAddGlobal(ptr %24, ptr %17, ptr %21)
  tail call void @LLVMSetInitializer(ptr %25, ptr %23)
  br label %ifend

else:                                             ; preds = %3
  %26 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %17, ptr %21)
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry8

ifend:                                            ; preds = %if.entry8, %else, %if.entry
  %ptr.0 = phi ptr [ %25, %if.entry ], [ %26, %if.entry8 ], [ %26, %else ]
  %memberidx.i28 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %27 = load ptr, ptr %memberidx.i28, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %28 = load i64, ptr %memberidx1.i, align 4
  %29 = load i64, ptr %5, align 4
  %30 = load i64, ptr %memberidx3.i, align 4
  %31 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @216, i64 %28, i64 %29, i64 %30)
  %32 = load ptr, ptr %4, align 8
  %33 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %33, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %33, i64 0, i32 1
  store ptr %32, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %33, i64 0, i32 2
  store i64 %31, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %33, i64 0, i32 3
  store i64 %31, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %27, ptr nonnull %33, ptr %ptr.0)
  ret void

if.entry8:                                        ; preds = %else
  %34 = tail call fastcc ptr @CodeGen_store_expr_to_mem(ptr nonnull %0, ptr %1, ptr %26, ptr nonnull %15)
  br label %ifend
}

define internal fastcc void @CodeGen_codegen_const_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 2
  %5 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %9, i64 %8
  %10 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %5, i64 0, i32 2
  %12 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Const_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx2 = getelementptr inbounds %Const, ptr %14, i64 0, i32 2
  %15 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx3, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %16, i1 true)
  %memberidx4 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 1
  %18 = load ptr, ptr %memberidx4, align 8
  %19 = load ptr, ptr %18, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %19, i64 0, i32 5
  %20 = load ptr, ptr %memberidx5, align 8
  %21 = tail call ptr %20(ptr nonnull %18)
  %memberidx6 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 3
  %22 = load i1, ptr %memberidx6, align 1
  br i1 %22, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %23 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %15)
  %24 = load ptr, ptr %0, align 8
  %25 = tail call ptr @LLVMAddGlobal(ptr %24, ptr %17, ptr %21)
  tail call void @LLVMSetInitializer(ptr %25, ptr %23)
  tail call void @LLVMSetGlobalConstant(ptr %25, i1 true)
  br label %ifend

else:                                             ; preds = %3
  %26 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %17, ptr %21)
  %27 = tail call fastcc ptr @CodeGen_store_expr_to_mem(ptr nonnull %0, ptr %1, ptr %26, ptr nonnull %15)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %ptr.0 = phi ptr [ %25, %if.entry ], [ %26, %else ]
  %memberidx.i25 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %28 = load ptr, ptr %memberidx.i25, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %29 = load i64, ptr %memberidx1.i, align 4
  %30 = load i64, ptr %5, align 4
  %31 = load i64, ptr %memberidx3.i, align 4
  %32 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @216, i64 %29, i64 %30, i64 %31)
  %33 = load ptr, ptr %4, align 8
  %34 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 %32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 %32, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %28, ptr nonnull %34, ptr %ptr.0)
  ret void
}

define internal fastcc void @CodeGen_codegen_if_stmt(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %4)
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call ptr @LLVMAppendBasicBlock(ptr %6, ptr nonnull @249)
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = tail call ptr @LLVMAppendBasicBlock(ptr %8, ptr nonnull @32)
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = tail call ptr @LLVMAppendBasicBlock(ptr %10, ptr nonnull @250)
  %12 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %5, ptr %7, ptr %9)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %7)
  %memberidx4 = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 2
  %13 = load ptr, ptr %memberidx4, align 8
  %memberidx.i46 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %14 = load i1, ptr %memberidx.i46, align 1
  store i1 false, ptr %memberidx.i46, align 1
  %15 = load ptr, ptr %13, align 8
  %16 = tail call ptr @malloc(i32 25)
  %memberidx.i.i47 = getelementptr inbounds %Array_Statement_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i.i47, align 8
  %memberidx1.i.i48 = getelementptr inbounds %Array_Statement_, ptr %15, i64 0, i32 2
  %18 = load i64, ptr %memberidx1.i.i48, align 4
  %19 = icmp slt i64 %18, 1
  br i1 %19, label %CodeGen_codegen_block.exit63, label %for.body.i62

for.body.i62:                                     ; preds = %3, %for.body.i62
  %20 = phi i64 [ %21, %for.body.i62 ], [ 1, %3 ]
  %statement.0.i5668.in = phi ptr [ %ptridx.i14.i60, %for.body.i62 ], [ %17, %3 ]
  %statement.0.i5668 = load ptr, ptr %statement.0.i5668.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i5668)
  %21 = add i64 %20, 1
  %ptridx.i14.i60 = getelementptr inbounds ptr, ptr %17, i64 %20
  %22 = icmp sgt i64 %21, %18
  br i1 %22, label %CodeGen_codegen_block.exit63, label %for.body.i62

CodeGen_codegen_block.exit63:                     ; preds = %for.body.i62, %3
  tail call void @free(ptr nonnull %16)
  store i1 %14, ptr %memberidx.i46, align 1
  %23 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %Block, ptr %23, i64 0, i32 1
  %24 = load i1, ptr %memberidx.i, align 1
  %memberidx1.i = getelementptr inbounds %Block, ptr %23, i64 0, i32 2
  %25 = load i1, ptr %memberidx1.i, align 1
  %26 = or i1 %24, %25
  %memberidx2.i = getelementptr inbounds %Block, ptr %23, i64 0, i32 3
  %27 = load i1, ptr %memberidx2.i, align 1
  %28 = or i1 %26, %27
  br i1 %28, label %ifend, label %if.entry

if.entry:                                         ; preds = %CodeGen_codegen_block.exit63
  %29 = tail call ptr @LLVMBuildBr(ptr %1, ptr %11)
  br label %ifend

ifend:                                            ; preds = %CodeGen_codegen_block.exit63, %if.entry
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %9)
  %memberidx6 = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 3
  %30 = load ptr, ptr %memberidx6, align 8
  %.not = icmp eq ptr %30, null
  br i1 %.not, label %if.entry12, label %if.entry7

if.entry7:                                        ; preds = %ifend
  %31 = load i1, ptr %memberidx.i46, align 1
  store i1 false, ptr %memberidx.i46, align 1
  %32 = load ptr, ptr %30, align 8
  %33 = tail call ptr @malloc(i32 25)
  %memberidx.i.i = getelementptr inbounds %Array_Statement_, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Statement_, ptr %32, i64 0, i32 2
  %35 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %33, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %33, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %33, i64 0, i32 3
  store ptr %34, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %33, i64 0, i32 2
  store i64 %35, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %36 = icmp slt i64 %35, 1
  br i1 %36, label %ifend9, label %for.body.i

for.body.i:                                       ; preds = %if.entry7, %for.body.i
  %37 = phi i64 [ %38, %for.body.i ], [ 1, %if.entry7 ]
  %statement.0.i66.in = phi ptr [ %ptridx.i14.i, %for.body.i ], [ %34, %if.entry7 ]
  %statement.0.i66 = load ptr, ptr %statement.0.i66.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i66)
  %38 = add i64 %37, 1
  store i64 %38, ptr %memberidx1.i.i.i, align 4
  %ptridx.i14.i = getelementptr inbounds ptr, ptr %34, i64 %37
  %39 = icmp sgt i64 %38, %35
  br i1 %39, label %ifend9, label %for.body.i

ifend9:                                           ; preds = %for.body.i, %if.entry7
  tail call void @free(ptr nonnull %33)
  store i1 %31, ptr %memberidx.i46, align 1
  %40 = load ptr, ptr %memberidx6, align 8
  %memberidx.i42 = getelementptr inbounds %Block, ptr %40, i64 0, i32 1
  %41 = load i1, ptr %memberidx.i42, align 1
  %memberidx1.i43 = getelementptr inbounds %Block, ptr %40, i64 0, i32 2
  %42 = load i1, ptr %memberidx1.i43, align 1
  %43 = or i1 %41, %42
  %memberidx2.i44 = getelementptr inbounds %Block, ptr %40, i64 0, i32 3
  %44 = load i1, ptr %memberidx2.i44, align 1
  %45 = or i1 %43, %44
  br i1 %45, label %else13, label %if.entry12

if.entry12:                                       ; preds = %ifend, %ifend9
  %46 = tail call ptr @LLVMBuildBr(ptr %1, ptr %11)
  br label %ifend14

else13:                                           ; preds = %ifend9
  br i1 %28, label %if.entry15, label %ifend14

ifend14:                                          ; preds = %if.entry15, %else13, %if.entry12
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %11)
  ret void

if.entry15:                                       ; preds = %else13
  tail call void @LLVMDeleteBasicBlock(ptr %11)
  br label %ifend14
}

define internal fastcc void @Map_string_LLVMValueRef__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx6 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx6, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.037 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.037
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.037, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %storemerge36 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %storemerge36
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %storemerge36, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_LLVMValueRef____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_LLVMValueRef__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = srem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i34 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %13, %while.entry.preheader ], [ %26, %ifend9 ]
  %16 = phi i64 [ %11, %while.entry.preheader ], [ %27, %ifend9 ]
  %17 = phi ptr [ %14, %while.entry.preheader ], [ %30, %ifend9 ]
  %18 = phi i64 [ %12, %while.entry.preheader ], [ %29, %ifend9 ]
  %19 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i34, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.thread35, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend9

while.end.thread35:                               ; preds = %ifend.i
  %.pre40 = load ptr, ptr %0, align 8
  br label %ifend15

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %26 = phi ptr [ %.pre39, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %28 = add i64 %18, 1
  %29 = srem i64 %28, %27
  %ptridx12 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx12, align 8
  %.not33 = icmp eq ptr %30, null
  br i1 %.not33, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %31 = phi ptr [ %13, %ifend ], [ %26, %ifend9 ]
  %32 = phi i64 [ %12, %ifend ], [ %29, %ifend9 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend15

ifend15:                                          ; preds = %while.end.thread35, %if.entry13
  %35 = phi ptr [ %.pre40, %while.end.thread35 ], [ %31, %if.entry13 ]
  %36 = phi i64 [ %18, %while.end.thread35 ], [ %32, %if.entry13 ]
  %ptridx19 = getelementptr inbounds ptr, ptr %35, i64 %36
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @21, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = sext i8 %13 to i64
  %15 = add i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  %20 = call i64 @llvm.abs.i64(i64 %hash.0.lcssa, i1 false)
  ret i64 %20
}

define internal fastcc ptr @CodeGen_store_array_elements(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %next_args = alloca [1 x ptr], align 8
  %4 = tail call ptr @LLVMIntType(i64 64)
  %5 = tail call ptr @LLVMConstInt(ptr %4, i64 1, i1 false)
  store ptr %5, ptr %next_args, align 8
  %6 = tail call ptr @LLVMTypeOf(ptr %2)
  %memberidx = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %8 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 2
  %10 = load i64, ptr %memberidx1.i, align 4
  %11 = icmp slt i64 %10, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %value.019.in = phi ptr [ %ptridx.i15, %for.body ], [ %9, %for.entry ]
  %addr.018 = phi ptr [ %15, %for.body ], [ %2, %for.entry ]
  %value.019 = load ptr, ptr %value.019.in, align 8
  %13 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.019)
  %14 = call ptr @LLVMBuildStore(ptr %1, ptr %13, ptr %addr.018)
  %15 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %6, ptr %addr.018, ptr nonnull %next_args, i64 1, ptr nonnull @26)
  %16 = add i64 %12, 1
  %ptridx.i15 = getelementptr inbounds ptr, ptr %9, i64 %12
  %17 = icmp sgt i64 %16, %10
  br i1 %17, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %for.entry
  %addr.0.lcssa = phi ptr [ %2, %for.entry ], [ %15, %for.body ]
  tail call void @free(ptr nonnull %8)
  ret ptr %addr.0.lcssa
}

define internal fastcc ptr @CodeGen_codegen_type(ptr nocapture %0, ptr %1, i1 %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %5 = load i64, ptr %1, align 4
  switch i64 %5, label %ifend40 [
    i64 12, label %if.entry
    i64 0, label %if.entry2
    i64 1, label %if.entry6
    i64 2, label %if.entry10
    i64 3, label %if.entry14
    i64 4, label %if.entry18
    i64 7, label %if.entry22
    i64 5, label %if.entry26
    i64 6, label %if.entry30
    i64 8, label %if.entry34
    i64 9, label %if.entry38
  ]

common.ret:                                       ; preds = %if.entry77, %for.end, %true_block80, %true_block, %if.entry91, %ifend89, %if.entry52, %if.entry47, %if.entry43, %if.entry38, %if.entry34, %if.entry30, %if.entry26, %if.entry22, %if.entry18, %if.entry14, %if.entry10, %if.entry6, %if.entry2, %if.entry
  %common.ret.op = phi ptr [ %6, %if.entry ], [ %7, %if.entry2 ], [ %8, %if.entry6 ], [ %9, %if.entry10 ], [ %10, %if.entry14 ], [ %11, %if.entry18 ], [ %12, %if.entry22 ], [ %13, %if.entry26 ], [ %14, %if.entry30 ], [ %15, %if.entry34 ], [ %16, %if.entry38 ], [ %19, %if.entry43 ], [ %22, %if.entry47 ], [ %26, %if.entry52 ], [ null, %ifend89 ], [ %89, %if.entry91 ], [ %47, %true_block ], [ %64, %true_block80 ], [ %46, %for.end ], [ %63, %if.entry77 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %6 = tail call ptr @LLVMVoidType()
  br label %common.ret

if.entry2:                                        ; preds = %3
  %7 = tail call ptr @LLVMInt1Type()
  br label %common.ret

if.entry6:                                        ; preds = %3
  %8 = tail call ptr @LLVMIntType(i64 4)
  br label %common.ret

if.entry10:                                       ; preds = %3
  %9 = tail call ptr @LLVMInt8Type()
  br label %common.ret

if.entry14:                                       ; preds = %3
  %10 = tail call ptr @LLVMInt16Type()
  br label %common.ret

if.entry18:                                       ; preds = %3
  %11 = tail call ptr @LLVMInt32Type()
  br label %common.ret

if.entry22:                                       ; preds = %3
  %12 = tail call ptr @LLVMIntType(i64 64)
  br label %common.ret

if.entry26:                                       ; preds = %3
  %13 = tail call ptr @LLVMInt64Type()
  br label %common.ret

if.entry30:                                       ; preds = %3
  %14 = tail call ptr @LLVMInt128Type()
  br label %common.ret

if.entry34:                                       ; preds = %3
  %15 = tail call ptr @LLVMHalfType()
  br label %common.ret

if.entry38:                                       ; preds = %3
  %16 = tail call ptr @LLVMFloatType()
  br label %common.ret

ifend40:                                          ; preds = %3
  %17 = and i64 %5, -2
  %18 = icmp eq i64 %17, 10
  br i1 %18, label %if.entry43, label %ifend45

if.entry43:                                       ; preds = %ifend40
  %19 = tail call ptr @LLVMDoubleType()
  br label %common.ret

ifend45:                                          ; preds = %ifend40
  switch i64 %5, label %ifend60 [
    i64 15, label %if.entry47
    i64 16, label %if.entry52
    i64 21, label %if.entry58
  ]

if.entry47:                                       ; preds = %ifend45
  %memberidx50 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %20 = load ptr, ptr %memberidx50, align 8
  %21 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %20, i1 true)
  %22 = tail call ptr @LLVMPointerType(ptr %21, i64 0)
  br label %common.ret

if.entry52:                                       ; preds = %ifend45
  %memberidx55 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %23 = load ptr, ptr %memberidx55, align 8
  %24 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %23, i1 true)
  %memberidx56 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %25 = load i64, ptr %memberidx56, align 4
  %26 = tail call ptr @LLVMArrayType(ptr %24, i64 %25)
  br label %common.ret

if.entry58:                                       ; preds = %ifend45
  %memberidx61 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %memberidx61, align 8
  %.pr = load i64, ptr %27, align 4
  br label %ifend60

ifend60:                                          ; preds = %ifend45, %if.entry58
  %28 = phi i64 [ %5, %ifend45 ], [ %.pr, %if.entry58 ]
  %tt.0 = phi ptr [ %1, %ifend45 ], [ %27, %if.entry58 ]
  switch i64 %28, label %ifend75 [
    i64 17, label %if.entry62
    i64 13, label %if.entry73
  ]

if.entry62:                                       ; preds = %ifend60
  %memberidx65 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 1
  %29 = load ptr, ptr %memberidx65, align 8
  %memberidx66 = getelementptr inbounds %Array_Type_, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx66, align 4
  %31 = alloca ptr, i64 %30, align 8
  %32 = tail call ptr @malloc(i32 25)
  %memberidx.i134 = getelementptr inbounds %Array_Type_, ptr %29, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i134, align 8
  %34 = load i64, ptr %memberidx66, align 4
  store i1 false, ptr %32, align 1
  %memberidx1.i.i135 = getelementptr inbounds %ArrayIterator_Type_, ptr %32, i64 0, i32 1
  %memberidx2.i.i136 = getelementptr inbounds %ArrayIterator_Type_, ptr %32, i64 0, i32 3
  store ptr %33, ptr %memberidx2.i.i136, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Type_, ptr %32, i64 0, i32 2
  store i64 %34, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i135, align 4
  %35 = icmp slt i64 %34, 1
  br i1 %35, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry62, %for.body
  %36 = phi i64 [ %40, %for.body ], [ 1, %if.entry62 ]
  %storemerge164.in = phi ptr [ %ptridx.i, %for.body ], [ %33, %if.entry62 ]
  %37 = phi i64 [ %38, %for.body ], [ 0, %if.entry62 ]
  %storemerge164 = load ptr, ptr %storemerge164.in, align 8
  %38 = add i64 %37, 1
  %ptridx = getelementptr inbounds ptr, ptr %31, i64 %37
  %39 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %storemerge164, i1 true)
  store ptr %39, ptr %ptridx, align 8
  %40 = add i64 %36, 1
  store i64 %40, ptr %memberidx1.i.i135, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %33, i64 %36
  %41 = icmp sgt i64 %40, %34
  br i1 %41, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.entry62
  tail call void @free(ptr nonnull %32)
  %memberidx69 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 2
  %42 = load ptr, ptr %memberidx69, align 8
  %43 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %42, i1 true)
  %44 = load ptr, ptr %memberidx65, align 8
  %memberidx71 = getelementptr inbounds %Array_Type_, ptr %44, i64 0, i32 2
  %45 = load i64, ptr %memberidx71, align 4
  %46 = call ptr @LLVMFunctionType(ptr %43, ptr nonnull %31, i64 %45, i1 false)
  br i1 %2, label %true_block, label %common.ret

true_block:                                       ; preds = %for.end
  %47 = call ptr @LLVMPointerType(ptr %46, i64 0)
  br label %common.ret

if.entry73:                                       ; preds = %ifend60
  %memberidx76 = getelementptr inbounds %ObjectType, ptr %tt.0, i64 0, i32 1
  %48 = load ptr, ptr %memberidx76, align 8
  %49 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %48)
  %.not.i = icmp eq ptr %49, null
  br i1 %.not.i, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %if.entry77

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry73
  %memberidx.i137 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %50 = load ptr, ptr %memberidx.i137, align 8
  %memberidx.i.i138 = getelementptr inbounds %Program, ptr %50, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i.i138, align 8
  %52 = load i64, ptr %48, align 4
  %memberidx.i.i.i139 = getelementptr inbounds %Array_Module_, ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i.i.i139, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %53, i64 %52
  %54 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i140 = getelementptr inbounds %Module, ptr %54, i64 0, i32 4
  %55 = load ptr, ptr %memberidx2.i.i140, align 8
  %memberidx3.i.i141 = getelementptr inbounds %TypeId, ptr %48, i64 0, i32 2
  %56 = load i64, ptr %memberidx3.i.i141, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %57, i64 %56
  %58 = load ptr, ptr %ptridx.i6.i.i, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %58)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %58)
  %59 = load ptr, ptr %58, align 8
  %60 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %59)
  %.not125 = icmp eq ptr %60, null
  br i1 %.not125, label %CodeGen_get_or_codegen_class_from_typeid.exit.ifend75_crit_edge, label %if.entry77

CodeGen_get_or_codegen_class_from_typeid.exit.ifend75_crit_edge: ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %.pre = load i64, ptr %tt.0, align 4
  br label %ifend75

ifend75:                                          ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit.ifend75_crit_edge, %ifend60
  %61 = phi i64 [ %.pre, %CodeGen_get_or_codegen_class_from_typeid.exit.ifend75_crit_edge ], [ %28, %ifend60 ]
  %62 = icmp eq i64 %61, 14
  br i1 %62, label %if.entry87, label %ifend89

if.entry77:                                       ; preds = %if.entry73, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i158 = phi ptr [ %60, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %49, %if.entry73 ]
  %63 = load ptr, ptr %common.ret.op.i158, align 8
  br i1 %2, label %true_block80, label %common.ret

true_block80:                                     ; preds = %if.entry77
  %64 = tail call ptr @LLVMPointerType(ptr %63, i64 0)
  br label %common.ret

if.entry87:                                       ; preds = %ifend75
  %memberidx90 = getelementptr inbounds %EnumType, ptr %tt.0, i64 0, i32 1
  %65 = load ptr, ptr %memberidx90, align 8
  %66 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %65)
  %.not.i142 = icmp eq ptr %66, null
  br i1 %.not.i142, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %if.entry91

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry87
  %memberidx.i145 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %67 = load ptr, ptr %memberidx.i145, align 8
  %memberidx.i.i146 = getelementptr inbounds %Program, ptr %67, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i.i146, align 8
  %69 = load i64, ptr %65, align 4
  %memberidx.i.i.i147 = getelementptr inbounds %Array_Module_, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i.i147, align 8
  %ptridx.i.i.i148 = getelementptr inbounds ptr, ptr %70, i64 %69
  %71 = load ptr, ptr %ptridx.i.i.i148, align 8
  %memberidx2.i.i149 = getelementptr inbounds %Module, ptr %71, i64 0, i32 6
  %72 = load ptr, ptr %memberidx2.i.i149, align 8
  %memberidx3.i.i150 = getelementptr inbounds %TypeId, ptr %65, i64 0, i32 2
  %73 = load i64, ptr %memberidx3.i.i150, align 4
  %memberidx.i5.i.i151 = getelementptr inbounds %Array_Enum_, ptr %72, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i5.i.i151, align 8
  %ptridx.i6.i.i152 = getelementptr inbounds ptr, ptr %74, i64 %73
  %75 = load ptr, ptr %ptridx.i6.i.i152, align 8
  tail call fastcc void @CodeGen_declare_enum(ptr %0, ptr %75)
  %76 = load ptr, ptr %75, align 8
  %77 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %76)
  %.not = icmp eq ptr %77, null
  br i1 %.not, label %ifend89, label %if.entry91

ifend89:                                          ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit, %ifend75
  %78 = tail call ptr @malloc(i32 256)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %78, ptr noundef nonnull align 8 dereferenceable(32) @217, i64 32, i1 false)
  %79 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %79, align 8
  %memberidx.i.i126 = getelementptr inbounds %string, ptr %79, i64 0, i32 1
  store ptr %78, ptr %memberidx.i.i126, align 8
  %memberidx1.i.i127 = getelementptr inbounds %string, ptr %79, i64 0, i32 2
  store i64 32, ptr %memberidx1.i.i127, align 4
  %memberidx2.i.i128 = getelementptr inbounds %string, ptr %79, i64 0, i32 3
  store i64 32, ptr %memberidx2.i.i128, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %80 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %81 = tail call ptr %80(ptr nonnull %79)
  %82 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @210, ptr %81)
  %83 = load ptr, ptr %4, align 8
  %84 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %84, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %84, i64 0, i32 1
  store ptr %83, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %84, i64 0, i32 2
  store i64 %82, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %84, i64 0, i32 3
  store i64 %82, ptr %memberidx2.i.i, align 4
  call void @free(ptr %81)
  %85 = load ptr, ptr %84, align 8
  %memberidx.i.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %85, i64 0, i32 3
  %86 = load ptr, ptr %memberidx.i.i.i, align 8
  %87 = call ptr %86(ptr nonnull %84)
  %88 = load i64, ptr %memberidx1.i.i, align 4
  call void @write(i64 1, ptr %87, i64 %88)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %common.ret

if.entry91:                                       ; preds = %if.entry87, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i143161 = phi ptr [ %77, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %66, %if.entry87 ]
  %89 = load ptr, ptr %common.ret.op.i143161, align 8
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_var_access_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %VarAccessExpression, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %5)
  %memberidx1 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %7, i1 true)
  %9 = icmp eq ptr %6, null
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %10 = tail call ptr @malloc(i32 400)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %10, ptr noundef nonnull align 8 dereferenceable(50) @239, i64 50, i1 false)
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %11, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 1
  store ptr %10, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 2
  store i64 50, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 3
  store i64 50, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %12 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %13 = tail call ptr %12(ptr nonnull %11)
  %14 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @210, ptr %13)
  %15 = load ptr, ptr %4, align 8
  %16 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %16, align 8
  %memberidx.i.i18 = getelementptr inbounds %string, ptr %16, i64 0, i32 1
  store ptr %15, ptr %memberidx.i.i18, align 8
  %memberidx1.i.i19 = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  store i64 %14, ptr %memberidx1.i.i19, align 4
  %memberidx2.i.i20 = getelementptr inbounds %string, ptr %16, i64 0, i32 3
  store i64 %14, ptr %memberidx2.i.i20, align 4
  call void @free(ptr %13)
  %17 = load ptr, ptr %16, align 8
  %memberidx.i.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %17, i64 0, i32 3
  %18 = load ptr, ptr %memberidx.i.i.i, align 8
  %19 = call ptr %18(ptr nonnull %16)
  %20 = load i64, ptr %memberidx1.i.i19, align 4
  call void @write(i64 1, ptr %19, i64 %20)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %21 = load ptr, ptr %memberidx, align 8
  %22 = load i64, ptr %21, align 4
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %common.ret, label %ifend6

common.ret:                                       ; preds = %ifend, %ifend10, %if.entry8
  %common.ret.op = phi ptr [ %25, %if.entry8 ], [ %26, %ifend10 ], [ %6, %ifend ]
  ret ptr %common.ret.op

ifend6:                                           ; preds = %ifend
  %memberidx7 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %24 = load i1, ptr %memberidx7, align 1
  br i1 %24, label %if.entry8, label %ifend10

if.entry8:                                        ; preds = %ifend6
  %25 = call ptr @LLVMGetInitializer(ptr %6)
  br label %common.ret

ifend10:                                          ; preds = %ifend6
  %26 = call ptr @LLVMBuildLoad2(ptr %1, ptr %8, ptr %6, ptr nonnull @26)
  br label %common.ret
}

define internal fastcc void @Map_string_int__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_int_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx6 = getelementptr inbounds %Map_string_int_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx6, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.037 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.037
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.037, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %storemerge36 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %storemerge36
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_int_, ptr %15, i64 0, i32 1
  %17 = load i64, ptr %memberidx20, align 4
  tail call fastcc void @Map_string_int____setitem__(ptr nonnull %0, ptr %16, i64 %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %storemerge36, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_int____setitem__(ptr nocapture %0, ptr %1, i64 %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_int_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_int_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_int__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_int__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = srem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i34 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %13, %while.entry.preheader ], [ %26, %ifend9 ]
  %16 = phi i64 [ %11, %while.entry.preheader ], [ %27, %ifend9 ]
  %17 = phi ptr [ %14, %while.entry.preheader ], [ %30, %ifend9 ]
  %18 = phi i64 [ %12, %while.entry.preheader ], [ %29, %ifend9 ]
  %19 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i34, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.thread35, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend9

while.end.thread35:                               ; preds = %ifend.i
  %.pre40 = load ptr, ptr %0, align 8
  br label %ifend15

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %26 = phi ptr [ %.pre39, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %28 = add i64 %18, 1
  %29 = srem i64 %28, %27
  %ptridx12 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx12, align 8
  %.not33 = icmp eq ptr %30, null
  br i1 %.not33, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %31 = phi ptr [ %13, %ifend ], [ %26, %ifend9 ]
  %32 = phi i64 [ %12, %ifend ], [ %29, %ifend9 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend15

ifend15:                                          ; preds = %while.end.thread35, %if.entry13
  %35 = phi ptr [ %.pre40, %while.end.thread35 ], [ %31, %if.entry13 ]
  %36 = phi i64 [ %18, %while.end.thread35 ], [ %32, %if.entry13 ]
  %ptridx19 = getelementptr inbounds ptr, ptr %35, i64 %36
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_int_, ptr %37, i64 0, i32 1
  store i64 %2, ptr %memberidx1.i, align 4
  store ptr %37, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_int__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @21, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = sext i8 %13 to i64
  %15 = add i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  %20 = call i64 @llvm.abs.i64(i64 %hash.0.lcssa, i1 false)
  ret i64 %20
}

define internal fastcc void @CodeGen_codegen_class(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = load ptr, ptr %1, align 8
  %9 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %8)
  %memberidx1 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_ClassMethod_, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Array_ClassMethod_, ptr %10, i64 0, i32 2
  %13 = load i64, ptr %memberidx1.i, align 4
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 3
  store ptr %12, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 2
  store i64 %13, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %14 = icmp slt i64 %13, 1
  %method.0241 = load ptr, ptr %12, align 8
  store i1 %14, ptr %11, align 1
  br i1 %14, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx5 = getelementptr inbounds %CGClassType, ptr %9, i64 0, i32 3
  %memberidx8 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %memberidx18 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx.i151 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %memberidx24 = getelementptr inbounds %CGClassType, ptr %9, i64 0, i32 4
  %memberidx30 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx42 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %memberidx55 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %memberidx.i211 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %15 = phi i64 [ 1, %for.body.lr.ph ], [ %17, %for.incr ]
  %method.0242 = phi ptr [ %method.0241, %for.body.lr.ph ], [ %method.0, %for.incr ]
  %memberidx3 = getelementptr inbounds %ClassMethod, ptr %method.0242, i64 0, i32 7
  %16 = load i1, ptr %memberidx3, align 1
  br i1 %16, label %for.incr, label %ifend

for.incr:                                         ; preds = %for.body, %CodeGen_codegen_block.exit
  %17 = add i64 %15, 1
  store i64 %17, ptr %memberidx1.i.i, align 4
  %ptridx.i96 = getelementptr inbounds ptr, ptr %12, i64 %15
  %18 = icmp sgt i64 %17, %13
  %method.0 = load ptr, ptr %ptridx.i96, align 8
  store i1 %18, ptr %11, align 1
  br i1 %18, label %for.end, label %for.body

for.end:                                          ; preds = %for.incr, %for.entry
  tail call void @free(ptr nonnull %11)
  ret void

ifend:                                            ; preds = %for.body
  %19 = load ptr, ptr %method.0242, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  %memberidx.i98 = getelementptr inbounds %PropId, ptr %19, i64 0, i32 1
  %20 = load ptr, ptr %memberidx.i98, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %21 = load i64, ptr %20, align 4
  %memberidx1.i.i99 = getelementptr inbounds %TypeId, ptr %20, i64 0, i32 1
  %22 = load i64, ptr %memberidx1.i.i99, align 4
  %memberidx2.i.i100 = getelementptr inbounds %TypeId, ptr %20, i64 0, i32 2
  %23 = load i64, ptr %memberidx2.i.i100, align 4
  %24 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @216, i64 %21, i64 %22, i64 %23)
  %25 = load ptr, ptr %6, align 8
  %26 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %26, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  store ptr %25, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  store i64 %24, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 3
  store i64 %24, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %27 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %28 = call ptr %27(ptr nonnull %26)
  %29 = load i64, ptr %19, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %19, i64 0, i32 2
  %30 = load i64, ptr %memberidx3.i, align 4
  %31 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %7, ptr nonnull @232, ptr %28, i64 %29, i64 %30)
  %32 = load ptr, ptr %7, align 8
  %33 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %33, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %33, i64 0, i32 1
  store ptr %32, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %33, i64 0, i32 2
  store i64 %31, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %33, i64 0, i32 3
  store i64 %31, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %28)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  %34 = load ptr, ptr %memberidx5, align 8
  %35 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %33)
  %memberidx.i102 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %34, i64 0, i32 1
  %36 = load i64, ptr %memberidx.i102, align 4
  %37 = srem i64 %35, %36
  %38 = load ptr, ptr %34, align 8
  %ptridx.i103 = getelementptr inbounds ptr, ptr %38, i64 %37
  %39 = load ptr, ptr %ptridx.i103, align 8
  %.not.i = icmp eq ptr %39, null
  br i1 %.not.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %ifend, %else.i
  %40 = phi ptr [ %50, %else.i ], [ %38, %ifend ]
  %41 = phi i64 [ %51, %else.i ], [ %36, %ifend ]
  %42 = phi ptr [ %54, %else.i ], [ %39, %ifend ]
  %hash.0.i = phi i64 [ %53, %else.i ], [ %37, %ifend ]
  %43 = load ptr, ptr %42, align 8
  %memberidx.i.i104 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i.i104, align 4
  %45 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i = icmp eq i64 %44, %45
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i106 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i106, align 8
  %47 = load ptr, ptr %memberidx.i.i, align 8
  %48 = call i64 @memcmp(ptr %46, ptr %47, i64 %44)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %Map_string_LLVMValueRef____getitem__.exit, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i102, align 4
  %.pre243 = load ptr, ptr %34, align 8
  br label %else.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %50 = phi ptr [ %.pre243, %ifend.i.i.else.i_crit_edge ], [ %40, %while.entry.i ]
  %51 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %41, %while.entry.i ]
  %52 = add i64 %hash.0.i, 1
  %53 = srem i64 %52, %51
  %ptridx7.i = getelementptr inbounds ptr, ptr %50, i64 %53
  %54 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %54, null
  br i1 %.not30.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %ifend.i.i, %ifend
  %memberidx6 = getelementptr inbounds %ClassMethod, ptr %method.0242, i64 0, i32 3
  %55 = load ptr, ptr %memberidx6, align 8
  %56 = call ptr @malloc(i32 88)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %56, ptr noundef nonnull align 8 dereferenceable(11) @133, i64 11, i1 false)
  %57 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %57, align 8
  %memberidx.i.i108 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  store ptr %56, ptr %memberidx.i.i108, align 8
  %memberidx1.i.i109 = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i109, align 4
  %memberidx2.i.i110 = getelementptr inbounds %string, ptr %57, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i110, align 4
  %memberidx.i111 = getelementptr inbounds %string, ptr %55, i64 0, i32 2
  %58 = load i64, ptr %memberidx.i111, align 4
  %.not.i113 = icmp eq i64 %58, 11
  br i1 %.not.i113, label %ifend.i, label %string___eq__.exit

ifend.i:                                          ; preds = %Map_string_LLVMValueRef____getitem__.exit
  %memberidx2.i115 = getelementptr inbounds %string, ptr %55, i64 0, i32 1
  %59 = load ptr, ptr %memberidx2.i115, align 8
  %60 = call i64 @memcmp(ptr %59, ptr nonnull %56, i64 11)
  %61 = icmp eq i64 %60, 0
  br label %string___eq__.exit

string___eq__.exit:                               ; preds = %Map_string_LLVMValueRef____getitem__.exit, %ifend.i
  %common.ret.op.i114 = phi i1 [ %61, %ifend.i ], [ false, %Map_string_LLVMValueRef____getitem__.exit ]
  %62 = load ptr, ptr %0, align 8
  %63 = load ptr, ptr %memberidx8, align 8
  %64 = load ptr, ptr %63, align 8
  %memberidx9 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %64, i64 0, i32 5
  %65 = load ptr, ptr %memberidx9, align 8
  %66 = call ptr %65(ptr nonnull %63)
  %67 = load ptr, ptr %memberidx6, align 8
  %68 = load ptr, ptr %67, align 8
  %memberidx11 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %68, i64 0, i32 5
  %69 = load ptr, ptr %memberidx11, align 8
  %70 = call ptr %69(ptr nonnull %67)
  %71 = alloca ptr, align 8
  %72 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %71, ptr nonnull @88, ptr %66, ptr %70)
  %73 = load ptr, ptr %71, align 8
  %74 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %74, align 8
  %memberidx.i117 = getelementptr inbounds %string, ptr %74, i64 0, i32 1
  store ptr %73, ptr %memberidx.i117, align 8
  %memberidx1.i118 = getelementptr inbounds %string, ptr %74, i64 0, i32 2
  store i64 %72, ptr %memberidx1.i118, align 4
  %memberidx2.i119 = getelementptr inbounds %string, ptr %74, i64 0, i32 3
  store i64 %72, ptr %memberidx2.i119, align 4
  tail call void @free(ptr %66)
  tail call void @free(ptr %70)
  %75 = load ptr, ptr %74, align 8
  %memberidx12 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %75, i64 0, i32 5
  %76 = load ptr, ptr %memberidx12, align 8
  %77 = call ptr %76(ptr nonnull %74)
  %78 = call ptr @LLVMGetNamedFunction(ptr %62, ptr %77)
  %79 = call ptr @LLVMAppendBasicBlock(ptr %78, ptr nonnull @26)
  %80 = call ptr @LLVMCreateBuilder()
  call void @LLVMPositionBuilderAtEnd(ptr %80, ptr %79)
  %memberidx13 = getelementptr inbounds %ClassMethod, ptr %method.0242, i64 0, i32 1
  %81 = load i1, ptr %memberidx13, align 1
  br i1 %81, label %for.entry43, label %if.entry14

if.entry14:                                       ; preds = %string___eq__.exit
  %82 = load ptr, ptr %9, align 8
  %83 = call ptr @LLVMPointerType(ptr %82, i64 0)
  %84 = call ptr @LLVMGetParam(ptr %78, i64 0)
  %85 = call ptr @LLVMBuildAlloca(ptr %80, ptr %83, ptr nonnull @73)
  %86 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %ClassMethod, ptr %method.0242, i64 0, i32 8
  %87 = load ptr, ptr %memberidx19, align 8
  %memberidx.i120 = getelementptr inbounds %Program, ptr %86, i64 0, i32 1
  %88 = load ptr, ptr %memberidx.i120, align 8
  %89 = load i64, ptr %87, align 4
  %memberidx.i.i121 = getelementptr inbounds %Array_Module_, ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %memberidx.i.i121, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %90, i64 %89
  %91 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i122 = getelementptr inbounds %Module, ptr %91, i64 0, i32 7
  %92 = load ptr, ptr %memberidx2.i122, align 8
  %memberidx3.i123 = getelementptr inbounds %ScopeId, ptr %87, i64 0, i32 1
  %93 = load i64, ptr %memberidx3.i123, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %92, i64 0, i32 1
  %94 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %94, i64 %93
  %95 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx20 = getelementptr inbounds %Scope, ptr %95, i64 0, i32 1
  %96 = load ptr, ptr %memberidx20, align 8
  %97 = call ptr @malloc(i32 32)
  store i32 1936287860, ptr %97, align 8
  %98 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %98, align 8
  %memberidx.i.i124 = getelementptr inbounds %string, ptr %98, i64 0, i32 1
  store ptr %97, ptr %memberidx.i.i124, align 8
  %memberidx1.i.i125 = getelementptr inbounds %string, ptr %98, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i125, align 4
  %memberidx2.i.i126 = getelementptr inbounds %string, ptr %98, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i126, align 4
  %99 = call fastcc i64 @Map_string_VarId__hash_fnc(ptr nonnull %98)
  %memberidx.i127 = getelementptr inbounds %Map_string_VarId_, ptr %96, i64 0, i32 1
  %100 = load i64, ptr %memberidx.i127, align 4
  %101 = srem i64 %99, %100
  %102 = load ptr, ptr %96, align 8
  %ptridx.i128 = getelementptr inbounds ptr, ptr %102, i64 %101
  %103 = load ptr, ptr %ptridx.i128, align 8
  %.not.i129 = icmp eq ptr %103, null
  br i1 %.not.i129, label %Map_string_VarId____getitem__.exit, label %while.entry.i135

while.entry.i135:                                 ; preds = %if.entry14, %else.i147
  %104 = phi ptr [ %114, %else.i147 ], [ %102, %if.entry14 ]
  %105 = phi i64 [ %115, %else.i147 ], [ %100, %if.entry14 ]
  %106 = phi ptr [ %118, %else.i147 ], [ %103, %if.entry14 ]
  %hash.0.i130 = phi i64 [ %117, %else.i147 ], [ %101, %if.entry14 ]
  %107 = load ptr, ptr %106, align 8
  %memberidx.i.i132 = getelementptr inbounds %string, ptr %107, i64 0, i32 2
  %108 = load i64, ptr %memberidx.i.i132, align 4
  %109 = load i64, ptr %memberidx1.i.i125, align 4
  %.not.i.i134 = icmp eq i64 %108, %109
  br i1 %.not.i.i134, label %ifend.i.i138, label %else.i147

ifend.i.i138:                                     ; preds = %while.entry.i135
  %memberidx2.i.i136 = getelementptr inbounds %string, ptr %107, i64 0, i32 1
  %110 = load ptr, ptr %memberidx2.i.i136, align 8
  %111 = load ptr, ptr %memberidx.i.i124, align 8
  %112 = call i64 @memcmp(ptr %110, ptr %111, i64 %108)
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %while.end.i144, label %ifend.i.i138.else.i147_crit_edge

ifend.i.i138.else.i147_crit_edge:                 ; preds = %ifend.i.i138
  %.pre246 = load i64, ptr %memberidx.i127, align 4
  %.pre247 = load ptr, ptr %96, align 8
  br label %else.i147

while.end.i144:                                   ; preds = %ifend.i.i138
  %.pre248.pre = load ptr, ptr %96, align 8
  %ptridx9.i142.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre248.pre, i64 %hash.0.i130
  %.pre249.pre = load ptr, ptr %ptridx9.i142.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i143 = icmp eq ptr %.pre249.pre, null
  br i1 %.not29.i143, label %Map_string_VarId____getitem__.exit, label %if.entry10.i150

else.i147:                                        ; preds = %ifend.i.i138.else.i147_crit_edge, %while.entry.i135
  %114 = phi ptr [ %.pre247, %ifend.i.i138.else.i147_crit_edge ], [ %104, %while.entry.i135 ]
  %115 = phi i64 [ %.pre246, %ifend.i.i138.else.i147_crit_edge ], [ %105, %while.entry.i135 ]
  %116 = add i64 %hash.0.i130, 1
  %117 = srem i64 %116, %115
  %ptridx7.i145 = getelementptr inbounds ptr, ptr %114, i64 %117
  %118 = load ptr, ptr %ptridx7.i145, align 8
  %.not30.i146 = icmp eq ptr %118, null
  br i1 %.not30.i146, label %Map_string_VarId____getitem__.exit, label %while.entry.i135

if.entry10.i150:                                  ; preds = %while.end.i144
  %memberidx15.i149 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre249.pre, i64 0, i32 1
  %119 = load ptr, ptr %memberidx15.i149, align 8
  br label %Map_string_VarId____getitem__.exit

Map_string_VarId____getitem__.exit:               ; preds = %else.i147, %if.entry14, %while.end.i144, %if.entry10.i150
  %common.ret.op.i148 = phi ptr [ %119, %if.entry10.i150 ], [ null, %while.end.i144 ], [ null, %if.entry14 ], [ null, %else.i147 ]
  %120 = call ptr @LLVMBuildStore(ptr %80, ptr %84, ptr %85)
  %121 = load ptr, ptr %memberidx.i151, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %memberidx.i.i152 = getelementptr inbounds %VarId, ptr %common.ret.op.i148, i64 0, i32 1
  %122 = load i64, ptr %memberidx.i.i152, align 4
  %123 = load i64, ptr %common.ret.op.i148, align 4
  %memberidx2.i.i153 = getelementptr inbounds %VarId, ptr %common.ret.op.i148, i64 0, i32 2
  %124 = load i64, ptr %memberidx2.i.i153, align 4
  %125 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @216, i64 %122, i64 %123, i64 %124)
  %126 = load ptr, ptr %5, align 8
  %127 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %127, align 8
  %memberidx.i.i.i154 = getelementptr inbounds %string, ptr %127, i64 0, i32 1
  store ptr %126, ptr %memberidx.i.i.i154, align 8
  %memberidx1.i.i.i155 = getelementptr inbounds %string, ptr %127, i64 0, i32 2
  store i64 %125, ptr %memberidx1.i.i.i155, align 4
  %memberidx2.i.i.i156 = getelementptr inbounds %string, ptr %127, i64 0, i32 3
  store i64 %125, ptr %memberidx2.i.i.i156, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %121, ptr nonnull %127, ptr %85)
  br i1 %common.ret.op.i114, label %if.entry21, label %for.entry43

if.entry21:                                       ; preds = %Map_string_VarId____getitem__.exit
  %128 = load ptr, ptr %memberidx24, align 8
  %.not = icmp eq ptr %128, null
  br i1 %.not, label %ifend27, label %if.entry25

if.entry25:                                       ; preds = %if.entry21
  %index = alloca [1 x ptr], align 8
  %129 = call ptr @LLVMIntType(i64 64)
  %130 = call ptr @LLVMConstInt(ptr %129, i64 0, i1 false)
  store ptr %130, ptr %index, align 8
  %131 = call ptr @LLVMBuildInBoundsGEP2(ptr %80, ptr %83, ptr %84, ptr nonnull %index, i64 1, ptr nonnull @26)
  %132 = load ptr, ptr %memberidx24, align 8
  %133 = call ptr @LLVMBuildStore(ptr %80, ptr %132, ptr %131)
  br label %ifend27

ifend27:                                          ; preds = %if.entry21, %if.entry25
  %134 = load ptr, ptr %memberidx30, align 8
  %.not91 = icmp eq ptr %134, null
  br i1 %.not91, label %for.entry43, label %if.entry31

if.entry31:                                       ; preds = %ifend27
  %135 = load ptr, ptr %memberidx18, align 8
  %136 = load ptr, ptr %memberidx19, align 8
  %memberidx.i157 = getelementptr inbounds %Program, ptr %135, i64 0, i32 1
  %137 = load ptr, ptr %memberidx.i157, align 8
  %138 = load i64, ptr %136, align 4
  %memberidx.i.i158 = getelementptr inbounds %Array_Module_, ptr %137, i64 0, i32 1
  %139 = load ptr, ptr %memberidx.i.i158, align 8
  %ptridx.i.i159 = getelementptr inbounds ptr, ptr %139, i64 %138
  %140 = load ptr, ptr %ptridx.i.i159, align 8
  %memberidx2.i160 = getelementptr inbounds %Module, ptr %140, i64 0, i32 7
  %141 = load ptr, ptr %memberidx2.i160, align 8
  %memberidx3.i161 = getelementptr inbounds %ScopeId, ptr %136, i64 0, i32 1
  %142 = load i64, ptr %memberidx3.i161, align 4
  %memberidx.i5.i162 = getelementptr inbounds %Array_Scope_, ptr %141, i64 0, i32 1
  %143 = load ptr, ptr %memberidx.i5.i162, align 8
  %ptridx.i6.i163 = getelementptr inbounds ptr, ptr %143, i64 %142
  %144 = load ptr, ptr %ptridx.i6.i163, align 8
  %memberidx36 = getelementptr inbounds %Scope, ptr %144, i64 0, i32 1
  %145 = load ptr, ptr %memberidx36, align 8
  %146 = call ptr @malloc(i32 40)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %146, ptr noundef nonnull align 8 dereferenceable(5) @137, i64 5, i1 false)
  %147 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %147, align 8
  %memberidx.i.i164 = getelementptr inbounds %string, ptr %147, i64 0, i32 1
  store ptr %146, ptr %memberidx.i.i164, align 8
  %memberidx1.i.i165 = getelementptr inbounds %string, ptr %147, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i165, align 4
  %memberidx2.i.i166 = getelementptr inbounds %string, ptr %147, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i166, align 4
  %148 = call fastcc i64 @Map_string_VarId__hash_fnc(ptr nonnull %147)
  %memberidx.i167 = getelementptr inbounds %Map_string_VarId_, ptr %145, i64 0, i32 1
  %149 = load i64, ptr %memberidx.i167, align 4
  %150 = srem i64 %148, %149
  %151 = load ptr, ptr %145, align 8
  %ptridx.i168 = getelementptr inbounds ptr, ptr %151, i64 %150
  %152 = load ptr, ptr %ptridx.i168, align 8
  %.not.i169 = icmp eq ptr %152, null
  br i1 %.not.i169, label %for.entry43, label %while.entry.i175

while.entry.i175:                                 ; preds = %if.entry31, %else.i187
  %153 = phi ptr [ %163, %else.i187 ], [ %151, %if.entry31 ]
  %154 = phi i64 [ %164, %else.i187 ], [ %149, %if.entry31 ]
  %155 = phi ptr [ %167, %else.i187 ], [ %152, %if.entry31 ]
  %hash.0.i170 = phi i64 [ %166, %else.i187 ], [ %150, %if.entry31 ]
  %156 = load ptr, ptr %155, align 8
  %memberidx.i.i172 = getelementptr inbounds %string, ptr %156, i64 0, i32 2
  %157 = load i64, ptr %memberidx.i.i172, align 4
  %158 = load i64, ptr %memberidx1.i.i165, align 4
  %.not.i.i174 = icmp eq i64 %157, %158
  br i1 %.not.i.i174, label %ifend.i.i178, label %else.i187

ifend.i.i178:                                     ; preds = %while.entry.i175
  %memberidx2.i.i176 = getelementptr inbounds %string, ptr %156, i64 0, i32 1
  %159 = load ptr, ptr %memberidx2.i.i176, align 8
  %160 = load ptr, ptr %memberidx.i.i164, align 8
  %161 = call i64 @memcmp(ptr %159, ptr %160, i64 %157)
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %while.end.i184, label %ifend.i.i178.else.i187_crit_edge

ifend.i.i178.else.i187_crit_edge:                 ; preds = %ifend.i.i178
  %.pre250 = load i64, ptr %memberidx.i167, align 4
  %.pre251 = load ptr, ptr %145, align 8
  br label %else.i187

while.end.i184:                                   ; preds = %ifend.i.i178
  %.pre252.pre = load ptr, ptr %145, align 8
  %ptridx9.i182.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre252.pre, i64 %hash.0.i170
  %.pre253.pre = load ptr, ptr %ptridx9.i182.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i183 = icmp eq ptr %.pre253.pre, null
  br i1 %.not29.i183, label %for.entry43, label %Map_string_VarId____getitem__.exit191

else.i187:                                        ; preds = %ifend.i.i178.else.i187_crit_edge, %while.entry.i175
  %163 = phi ptr [ %.pre251, %ifend.i.i178.else.i187_crit_edge ], [ %153, %while.entry.i175 ]
  %164 = phi i64 [ %.pre250, %ifend.i.i178.else.i187_crit_edge ], [ %154, %while.entry.i175 ]
  %165 = add i64 %hash.0.i170, 1
  %166 = srem i64 %165, %164
  %ptridx7.i185 = getelementptr inbounds ptr, ptr %163, i64 %166
  %167 = load ptr, ptr %ptridx7.i185, align 8
  %.not30.i186 = icmp eq ptr %167, null
  br i1 %.not30.i186, label %for.entry43, label %while.entry.i175

Map_string_VarId____getitem__.exit191:            ; preds = %while.end.i184
  %memberidx15.i189 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre253.pre, i64 0, i32 1
  %168 = load ptr, ptr %memberidx15.i189, align 8
  %.not92 = icmp eq ptr %168, null
  br i1 %.not92, label %for.entry43, label %if.entry37

if.entry37:                                       ; preds = %Map_string_VarId____getitem__.exit191
  %memberidx40 = getelementptr inbounds %ObjectType, ptr %134, i64 0, i32 1
  %169 = load ptr, ptr %memberidx40, align 8
  %170 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %169)
  %.not.i218 = icmp eq ptr %170, null
  br i1 %.not.i218, label %ifend.i225, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i225:                                       ; preds = %if.entry37
  %171 = load ptr, ptr %memberidx18, align 8
  %memberidx.i.i221 = getelementptr inbounds %Program, ptr %171, i64 0, i32 1
  %172 = load ptr, ptr %memberidx.i.i221, align 8
  %173 = load i64, ptr %169, align 4
  %memberidx.i.i.i222 = getelementptr inbounds %Array_Module_, ptr %172, i64 0, i32 1
  %174 = load ptr, ptr %memberidx.i.i.i222, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %174, i64 %173
  %175 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i223 = getelementptr inbounds %Module, ptr %175, i64 0, i32 4
  %176 = load ptr, ptr %memberidx2.i.i223, align 8
  %memberidx3.i.i224 = getelementptr inbounds %TypeId, ptr %169, i64 0, i32 2
  %177 = load i64, ptr %memberidx3.i.i224, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %176, i64 0, i32 1
  %178 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %178, i64 %177
  %179 = load ptr, ptr %ptridx.i6.i.i, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %179)
  call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %179)
  %180 = load ptr, ptr %179, align 8
  %181 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %180)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry37, %ifend.i225
  %common.ret.op.i219 = phi ptr [ %181, %ifend.i225 ], [ %170, %if.entry37 ]
  %memberidx41 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i219, i64 0, i32 6
  %182 = load ptr, ptr %memberidx41, align 8
  %183 = call ptr @LLVMBuildAlloca(ptr %80, ptr %83, ptr nonnull @137)
  %184 = call ptr @LLVMBuildStore(ptr %80, ptr %182, ptr %183)
  %185 = load ptr, ptr %memberidx.i151, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i.i193 = getelementptr inbounds %VarId, ptr %168, i64 0, i32 1
  %186 = load i64, ptr %memberidx.i.i193, align 4
  %187 = load i64, ptr %168, align 4
  %memberidx2.i.i194 = getelementptr inbounds %VarId, ptr %168, i64 0, i32 2
  %188 = load i64, ptr %memberidx2.i.i194, align 4
  %189 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @216, i64 %186, i64 %187, i64 %188)
  %190 = load ptr, ptr %4, align 8
  %191 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %191, align 8
  %memberidx.i.i.i195 = getelementptr inbounds %string, ptr %191, i64 0, i32 1
  store ptr %190, ptr %memberidx.i.i.i195, align 8
  %memberidx1.i.i.i196 = getelementptr inbounds %string, ptr %191, i64 0, i32 2
  store i64 %189, ptr %memberidx1.i.i.i196, align 4
  %memberidx2.i.i.i197 = getelementptr inbounds %string, ptr %191, i64 0, i32 3
  store i64 %189, ptr %memberidx2.i.i.i197, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %185, ptr nonnull %191, ptr %183)
  %192 = load ptr, ptr %memberidx42, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %193 = load i64, ptr %memberidx.i.i193, align 4
  %194 = load i64, ptr %168, align 4
  %195 = load i64, ptr %memberidx2.i.i194, align 4
  %196 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @216, i64 %193, i64 %194, i64 %195)
  %197 = load ptr, ptr %3, align 8
  %198 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %198, align 8
  %memberidx.i.i200 = getelementptr inbounds %string, ptr %198, i64 0, i32 1
  store ptr %197, ptr %memberidx.i.i200, align 8
  %memberidx1.i.i201 = getelementptr inbounds %string, ptr %198, i64 0, i32 2
  store i64 %196, ptr %memberidx1.i.i201, align 4
  %memberidx2.i.i202 = getelementptr inbounds %string, ptr %198, i64 0, i32 3
  store i64 %196, ptr %memberidx2.i.i202, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %192, ptr nonnull %198, ptr %84)
  br label %for.entry43

for.entry43:                                      ; preds = %else.i187, %if.entry31, %Map_string_VarId____getitem__.exit, %ifend27, %Map_string_VarId____getitem__.exit191, %CodeGen_get_or_codegen_class_from_typeid.exit, %while.end.i184, %string___eq__.exit
  %199 = phi i64 [ 0, %string___eq__.exit ], [ 1, %while.end.i184 ], [ 1, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ 1, %Map_string_VarId____getitem__.exit191 ], [ 1, %ifend27 ], [ 1, %Map_string_VarId____getitem__.exit ], [ 1, %if.entry31 ], [ 1, %else.i187 ]
  %memberidx48 = getelementptr inbounds %ClassMethod, ptr %method.0242, i64 0, i32 6
  %200 = load ptr, ptr %memberidx48, align 8
  %memberidx49237 = getelementptr inbounds %Array_FunctionArg_, ptr %200, i64 0, i32 2
  %201 = load i64, ptr %memberidx49237, align 4
  %202 = icmp sgt i64 %201, 0
  br i1 %202, label %for.body45, label %for.end47

for.body45:                                       ; preds = %for.entry43, %for.body45
  %203 = phi ptr [ %225, %for.body45 ], [ %200, %for.entry43 ]
  %storemerge238 = phi i64 [ %224, %for.body45 ], [ 0, %for.entry43 ]
  %memberidx.i203 = getelementptr inbounds %Array_FunctionArg_, ptr %203, i64 0, i32 1
  %204 = load ptr, ptr %memberidx.i203, align 8
  %ptridx.i204 = getelementptr inbounds ptr, ptr %204, i64 %storemerge238
  %205 = load ptr, ptr %ptridx.i204, align 8
  %206 = add nuw i64 %199, %storemerge238
  %207 = call ptr @LLVMGetParam(ptr %78, i64 %206)
  %memberidx51 = getelementptr inbounds %Expression, ptr %205, i64 0, i32 3
  %208 = load ptr, ptr %memberidx51, align 8
  %209 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %208, i1 true)
  %memberidx52 = getelementptr inbounds %FunctionArg, ptr %205, i64 0, i32 5
  %210 = load ptr, ptr %memberidx52, align 8
  %211 = load ptr, ptr %210, align 8
  %memberidx53 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %211, i64 0, i32 5
  %212 = load ptr, ptr %memberidx53, align 8
  %213 = call ptr %212(ptr nonnull %210)
  %214 = call ptr @LLVMBuildAlloca(ptr %80, ptr %209, ptr %213)
  %215 = call ptr @LLVMBuildStore(ptr %80, ptr %207, ptr %214)
  %memberidx54 = getelementptr inbounds %FunctionArg, ptr %205, i64 0, i32 4
  %216 = load ptr, ptr %memberidx54, align 8
  %217 = load ptr, ptr %memberidx.i151, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %memberidx.i.i206 = getelementptr inbounds %VarId, ptr %216, i64 0, i32 1
  %218 = load i64, ptr %memberidx.i.i206, align 4
  %219 = load i64, ptr %216, align 4
  %memberidx2.i.i207 = getelementptr inbounds %VarId, ptr %216, i64 0, i32 2
  %220 = load i64, ptr %memberidx2.i.i207, align 4
  %221 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @216, i64 %218, i64 %219, i64 %220)
  %222 = load ptr, ptr %2, align 8
  %223 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %223, align 8
  %memberidx.i.i.i208 = getelementptr inbounds %string, ptr %223, i64 0, i32 1
  store ptr %222, ptr %memberidx.i.i.i208, align 8
  %memberidx1.i.i.i209 = getelementptr inbounds %string, ptr %223, i64 0, i32 2
  store i64 %221, ptr %memberidx1.i.i.i209, align 4
  %memberidx2.i.i.i210 = getelementptr inbounds %string, ptr %223, i64 0, i32 3
  store i64 %221, ptr %memberidx2.i.i.i210, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %217, ptr nonnull %223, ptr %214)
  %224 = add nuw nsw i64 %storemerge238, 1
  %225 = load ptr, ptr %memberidx48, align 8
  %memberidx49 = getelementptr inbounds %Array_FunctionArg_, ptr %225, i64 0, i32 2
  %226 = load i64, ptr %memberidx49, align 4
  %227 = icmp slt i64 %224, %226
  br i1 %227, label %for.body45, label %for.end47

for.end47:                                        ; preds = %for.body45, %for.entry43
  %228 = load ptr, ptr %memberidx55, align 8
  store ptr %78, ptr %memberidx55, align 8
  %memberidx57 = getelementptr inbounds %ClassMethod, ptr %method.0242, i64 0, i32 5
  %229 = load ptr, ptr %memberidx57, align 8
  %230 = load i1, ptr %memberidx.i211, align 1
  store i1 false, ptr %memberidx.i211, align 1
  %231 = load ptr, ptr %229, align 8
  %232 = call ptr @malloc(i32 25)
  %memberidx.i.i212 = getelementptr inbounds %Array_Statement_, ptr %231, i64 0, i32 1
  %233 = load ptr, ptr %memberidx.i.i212, align 8
  %memberidx1.i.i213 = getelementptr inbounds %Array_Statement_, ptr %231, i64 0, i32 2
  %234 = load i64, ptr %memberidx1.i.i213, align 4
  %memberidx1.i.i.i214 = getelementptr inbounds %ArrayIterator_Statement_, ptr %232, i64 0, i32 1
  %235 = icmp slt i64 %234, 1
  br i1 %235, label %CodeGen_codegen_block.exit, label %for.body.i

for.body.i:                                       ; preds = %for.end47, %for.body.i
  %236 = phi i64 [ %237, %for.body.i ], [ 1, %for.end47 ]
  %statement.0.i240.in = phi ptr [ %ptridx.i14.i, %for.body.i ], [ %233, %for.end47 ]
  %statement.0.i240 = load ptr, ptr %statement.0.i240.in, align 8
  call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %80, ptr %statement.0.i240)
  %237 = add i64 %236, 1
  store i64 %237, ptr %memberidx1.i.i.i214, align 4
  %ptridx.i14.i = getelementptr inbounds ptr, ptr %233, i64 %236
  %238 = icmp sgt i64 %237, %234
  br i1 %238, label %CodeGen_codegen_block.exit, label %for.body.i

CodeGen_codegen_block.exit:                       ; preds = %for.body.i, %for.end47
  call void @free(ptr nonnull %232)
  store i1 %230, ptr %memberidx.i211, align 1
  store ptr %228, ptr %memberidx55, align 8
  call void @LLVMDisposeBuilder(ptr %80)
  br label %for.incr
}

define internal fastcc ptr @CodeGen_codegen_string_to_cstring(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Program, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %memberidx1, align 8
  %memberidx.i30 = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i30, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx2 = getelementptr inbounds %Module, ptr %7, i64 0, i32 7
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx.i29 = getelementptr inbounds %Array_Scope_, ptr %8, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i29, align 8
  %10 = load ptr, ptr %9, align 8
  %memberidx3 = getelementptr inbounds %Scope, ptr %10, i64 0, i32 2
  %11 = load ptr, ptr %memberidx3, align 8
  %12 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %12, ptr noundef nonnull align 8 dereferenceable(6) @164, i64 6, i1 false)
  %13 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i26 = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i26, align 8
  %memberidx1.i.i27 = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i27, align 4
  %memberidx2.i.i28 = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i28, align 4
  %14 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr nonnull %13)
  %memberidx.i18 = getelementptr inbounds %Map_string_ClassId_, ptr %11, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i18, align 4
  %16 = srem i64 %14, %15
  %17 = load ptr, ptr %11, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %17, i64 %16
  %18 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %18, null
  br i1 %.not.i, label %get_class_from_type.exit, label %while.entry.i

while.entry.i:                                    ; preds = %3, %else.i
  %19 = phi ptr [ %29, %else.i ], [ %17, %3 ]
  %20 = phi i64 [ %30, %else.i ], [ %15, %3 ]
  %21 = phi ptr [ %33, %else.i ], [ %18, %3 ]
  %hash.0.i = phi i64 [ %32, %else.i ], [ %16, %3 ]
  %22 = load ptr, ptr %21, align 8
  %memberidx.i.i19 = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx.i.i19, align 4
  %24 = load i64, ptr %memberidx1.i.i27, align 4
  %.not.i.i = icmp eq i64 %23, %24
  br i1 %.not.i.i, label %ifend.i.i23, label %else.i

ifend.i.i23:                                      ; preds = %while.entry.i
  %memberidx2.i.i21 = getelementptr inbounds %string, ptr %22, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i.i21, align 8
  %26 = load ptr, ptr %memberidx.i.i26, align 8
  %27 = tail call i64 @memcmp(ptr %25, ptr %26, i64 %23)
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %while.end.i, label %ifend.i.i23.else.i_crit_edge

ifend.i.i23.else.i_crit_edge:                     ; preds = %ifend.i.i23
  %.pre = load i64, ptr %memberidx.i18, align 4
  %.pre69 = load ptr, ptr %11, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i23
  %.pre70.pre = load ptr, ptr %11, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre70.pre, i64 %hash.0.i
  %.pre71.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre71.pre, null
  br i1 %.not29.i, label %get_class_from_type.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i23.else.i_crit_edge, %while.entry.i
  %29 = phi ptr [ %.pre69, %ifend.i.i23.else.i_crit_edge ], [ %19, %while.entry.i ]
  %30 = phi i64 [ %.pre, %ifend.i.i23.else.i_crit_edge ], [ %20, %while.entry.i ]
  %31 = add i64 %hash.0.i, 1
  %32 = srem i64 %31, %30
  %ptridx7.i = getelementptr inbounds ptr, ptr %29, i64 %32
  %33 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %33, null
  br i1 %.not30.i, label %get_class_from_type.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_ClassId_, ptr %.pre71.pre, i64 0, i32 1
  %34 = load ptr, ptr %memberidx15.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %else.i, %3, %while.end.i, %if.entry10.i
  %common.ret.op.i25 = phi ptr [ %34, %if.entry10.i ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  %35 = alloca %ObjectType, align 8
  store i64 13, ptr %35, align 8
  %memberidx.i17 = getelementptr inbounds %ObjectType, ptr %35, i64 0, i32 1
  store ptr %common.ret.op.i25, ptr %memberidx.i17, align 8
  %36 = load ptr, ptr %memberidx, align 8
  %37 = tail call ptr @malloc(i32 80)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %37, ptr noundef nonnull align 8 dereferenceable(10) @247, i64 10, i1 false)
  %38 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %38, align 8
  %memberidx.i.i14 = getelementptr inbounds %string, ptr %38, i64 0, i32 1
  store ptr %37, ptr %memberidx.i.i14, align 8
  %memberidx1.i.i15 = getelementptr inbounds %string, ptr %38, i64 0, i32 2
  store i64 10, ptr %memberidx1.i.i15, align 4
  %memberidx2.i.i16 = getelementptr inbounds %string, ptr %38, i64 0, i32 3
  store i64 10, ptr %memberidx2.i.i16, align 4
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %35, i64 0, i32 1
  %39 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i60 = getelementptr inbounds %Program, ptr %36, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i.i60, align 8
  %41 = load i64, ptr %39, align 4
  %memberidx.i.i.i61 = getelementptr inbounds %Array_Module_, ptr %40, i64 0, i32 1
  %42 = load ptr, ptr %memberidx.i.i.i61, align 8
  %ptridx.i.i.i62 = getelementptr inbounds ptr, ptr %42, i64 %41
  %43 = load ptr, ptr %ptridx.i.i.i62, align 8
  %memberidx2.i.i63 = getelementptr inbounds %Module, ptr %43, i64 0, i32 4
  %44 = load ptr, ptr %memberidx2.i.i63, align 8
  %memberidx3.i.i64 = getelementptr inbounds %TypeId, ptr %39, i64 0, i32 2
  %45 = load i64, ptr %memberidx3.i.i64, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %46, i64 %45
  %47 = load ptr, ptr %ptridx.i6.i.i, align 8
  %48 = icmp eq ptr %47, null
  br i1 %48, label %get_class_prop_type_with_name.exit, label %ifend.i

ifend.i:                                          ; preds = %get_class_from_type.exit
  %memberidx.i = getelementptr inbounds %Class, ptr %47, i64 0, i32 6
  %49 = load ptr, ptr %memberidx.i, align 8
  %50 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %38)
  %memberidx.i31 = getelementptr inbounds %Map_string_PropId_, ptr %49, i64 0, i32 1
  %51 = load i64, ptr %memberidx.i31, align 4
  %52 = srem i64 %50, %51
  %53 = load ptr, ptr %49, align 8
  %ptridx.i32 = getelementptr inbounds ptr, ptr %53, i64 %52
  %54 = load ptr, ptr %ptridx.i32, align 8
  %.not.i33 = icmp eq ptr %54, null
  br i1 %.not.i33, label %get_class_prop_type_with_name.exit, label %while.entry.i39

while.entry.i39:                                  ; preds = %ifend.i, %else.i51
  %55 = phi ptr [ %65, %else.i51 ], [ %53, %ifend.i ]
  %56 = phi i64 [ %66, %else.i51 ], [ %51, %ifend.i ]
  %57 = phi ptr [ %69, %else.i51 ], [ %54, %ifend.i ]
  %hash.0.i34 = phi i64 [ %68, %else.i51 ], [ %52, %ifend.i ]
  %58 = load ptr, ptr %57, align 8
  %memberidx.i.i36 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  %59 = load i64, ptr %memberidx.i.i36, align 4
  %60 = load i64, ptr %memberidx1.i.i15, align 4
  %.not.i.i38 = icmp eq i64 %59, %60
  br i1 %.not.i.i38, label %ifend.i.i42, label %else.i51

ifend.i.i42:                                      ; preds = %while.entry.i39
  %memberidx2.i.i40 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  %61 = load ptr, ptr %memberidx2.i.i40, align 8
  %62 = load ptr, ptr %memberidx.i.i14, align 8
  %63 = tail call i64 @memcmp(ptr %61, ptr %62, i64 %59)
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %while.end.i48, label %ifend.i.i42.else.i51_crit_edge

ifend.i.i42.else.i51_crit_edge:                   ; preds = %ifend.i.i42
  %.pre73 = load i64, ptr %memberidx.i31, align 4
  %.pre74 = load ptr, ptr %49, align 8
  br label %else.i51

while.end.i48:                                    ; preds = %ifend.i.i42
  %.pre75.pre = load ptr, ptr %49, align 8
  %ptridx9.i46.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre75.pre, i64 %hash.0.i34
  %.pre76.pre = load ptr, ptr %ptridx9.i46.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i47 = icmp eq ptr %.pre76.pre, null
  br i1 %.not29.i47, label %get_class_prop_type_with_name.exit, label %Map_string_PropId____getitem__.exit

else.i51:                                         ; preds = %ifend.i.i42.else.i51_crit_edge, %while.entry.i39
  %65 = phi ptr [ %.pre74, %ifend.i.i42.else.i51_crit_edge ], [ %55, %while.entry.i39 ]
  %66 = phi i64 [ %.pre73, %ifend.i.i42.else.i51_crit_edge ], [ %56, %while.entry.i39 ]
  %67 = add i64 %hash.0.i34, 1
  %68 = srem i64 %67, %66
  %ptridx7.i49 = getelementptr inbounds ptr, ptr %65, i64 %68
  %69 = load ptr, ptr %ptridx7.i49, align 8
  %.not30.i50 = icmp eq ptr %69, null
  br i1 %.not30.i50, label %get_class_prop_type_with_name.exit, label %while.entry.i39

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i48
  %memberidx15.i53 = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre76.pre, i64 0, i32 1
  %70 = load ptr, ptr %memberidx15.i53, align 8
  %71 = icmp eq ptr %70, null
  br i1 %71, label %get_class_prop_type_with_name.exit, label %ifend3.i

ifend3.i:                                         ; preds = %Map_string_PropId____getitem__.exit
  %memberidx.i.i.i = getelementptr inbounds %PropId, ptr %70, i64 0, i32 1
  %72 = load ptr, ptr %memberidx.i.i.i, align 8
  %73 = load ptr, ptr %memberidx.i.i60, align 8
  %74 = load i64, ptr %72, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %75, i64 %74
  %76 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %76, i64 0, i32 4
  %77 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %72, i64 0, i32 2
  %78 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %ptridx.i6.i.i.i.i = getelementptr inbounds ptr, ptr %79, i64 %78
  %80 = load ptr, ptr %ptridx.i6.i.i.i.i, align 8
  %81 = load i64, ptr %70, align 4
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend3.i
  %memberidx1.i.i12 = getelementptr inbounds %Class, ptr %80, i64 0, i32 5
  %83 = load ptr, ptr %memberidx1.i.i12, align 8
  %memberidx2.i.i13 = getelementptr inbounds %PropId, ptr %70, i64 0, i32 2
  %84 = load i64, ptr %memberidx2.i.i13, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %83, i64 0, i32 1
  %85 = load ptr, ptr %memberidx.i12.i.i, align 8
  %ptridx.i13.i.i = getelementptr inbounds ptr, ptr %85, i64 %84
  %86 = load ptr, ptr %ptridx.i13.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %86, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend3.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %80, i64 0, i32 4
  %87 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %70, i64 0, i32 2
  %88 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %87, i64 0, i32 1
  %89 = load ptr, ptr %memberidx.i11.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %89, i64 %88
  %90 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %90, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  br label %get_class_prop_type_with_name.exit

get_class_prop_type_with_name.exit:               ; preds = %else.i51, %ifend.i, %while.end.i48, %get_class_from_type.exit, %Map_string_PropId____getitem__.exit, %get_class_prop_type.exit.i
  %common.ret.op.i = phi ptr [ %common.ret.op.i.i, %get_class_prop_type.exit.i ], [ null, %get_class_from_type.exit ], [ null, %Map_string_PropId____getitem__.exit ], [ null, %while.end.i48 ], [ null, %ifend.i ], [ null, %else.i51 ]
  %91 = tail call ptr @malloc(i32 80)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %91, ptr noundef nonnull align 8 dereferenceable(10) @247, i64 10, i1 false)
  %92 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %92, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  store ptr %91, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %92, i64 0, i32 3
  store i64 10, ptr %memberidx2.i.i, align 4
  %93 = call fastcc ptr @CodeGen_get_member_with_name(ptr %0, ptr %1, ptr %2, ptr nonnull %35, ptr nonnull %92)
  %args = alloca [1 x ptr], align 8
  store ptr %2, ptr %args, align 8
  %94 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %common.ret.op.i, i1 false)
  %95 = call ptr @LLVMBuildCall2(ptr %1, ptr %94, ptr %93, ptr nonnull %args, i64 1, ptr nonnull @26)
  ret ptr %95
}

define internal fastcc void @CodeGen_codegen_statement(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %4 = load i64, ptr %2, align 4
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @CodeGen_codegen_if_stmt(ptr %0, ptr %1, ptr nonnull %2)
  %.pr = load i64, ptr %2, align 4
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %6 = phi i64 [ %4, %3 ], [ %.pr, %if.entry ]
  %7 = icmp eq i64 %6, 3
  br i1 %7, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  tail call fastcc void @CodeGen_codegen_for_stmt(ptr %0, ptr %1, ptr nonnull %2)
  %.pre = load i64, ptr %2, align 4
  br label %ifend4

ifend4:                                           ; preds = %ifend, %if.entry2
  %8 = phi i64 [ %6, %ifend ], [ %.pre, %if.entry2 ]
  %9 = icmp eq i64 %8, 4
  br i1 %9, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend4
  %memberidx.i66 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i66, align 8
  %11 = tail call ptr @LLVMAppendBasicBlock(ptr %10, ptr nonnull @256)
  %12 = load ptr, ptr %memberidx.i66, align 8
  %13 = tail call ptr @LLVMAppendBasicBlock(ptr %12, ptr nonnull @257)
  %memberidx2.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %14 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %15 = load ptr, ptr %memberidx3.i, align 8
  store ptr %13, ptr %memberidx2.i, align 8
  store ptr %11, ptr %memberidx3.i, align 8
  %memberidx6.i = getelementptr inbounds %WhileStatement, ptr %2, i64 0, i32 1
  %16 = load ptr, ptr %memberidx6.i, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %16)
  %18 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %17, ptr %11, ptr %13)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %11)
  %memberidx7.i = getelementptr inbounds %WhileStatement, ptr %2, i64 0, i32 2
  %19 = load ptr, ptr %memberidx7.i, align 8
  %memberidx.i68 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %20 = load i1, ptr %memberidx.i68, align 1
  store i1 false, ptr %memberidx.i68, align 1
  %21 = load ptr, ptr %19, align 8
  %22 = tail call ptr @malloc(i32 25)
  %memberidx.i.i69 = getelementptr inbounds %Array_Statement_, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i.i69, align 8
  %memberidx1.i.i70 = getelementptr inbounds %Array_Statement_, ptr %21, i64 0, i32 2
  %24 = load i64, ptr %memberidx1.i.i70, align 4
  store i1 false, ptr %22, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %22, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %22, i64 0, i32 3
  store ptr %23, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %22, i64 0, i32 2
  store i64 %24, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %25 = icmp slt i64 %24, 1
  br i1 %25, label %CodeGen_codegen_block.exit, label %for.body.i

for.body.i:                                       ; preds = %if.entry6, %for.body.i
  %26 = phi i64 [ %27, %for.body.i ], [ 1, %if.entry6 ]
  %statement.0.i76.in = phi ptr [ %ptridx.i14.i, %for.body.i ], [ %23, %if.entry6 ]
  %statement.0.i76 = load ptr, ptr %statement.0.i76.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i76)
  %27 = add i64 %26, 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %ptridx.i14.i = getelementptr inbounds ptr, ptr %23, i64 %26
  %28 = icmp sgt i64 %27, %24
  br i1 %28, label %CodeGen_codegen_block.exit, label %for.body.i

CodeGen_codegen_block.exit:                       ; preds = %for.body.i, %if.entry6
  tail call void @free(ptr nonnull %22)
  store i1 %20, ptr %memberidx.i68, align 1
  %29 = load ptr, ptr %memberidx7.i, align 8
  %memberidx.i.i = getelementptr inbounds %Block, ptr %29, i64 0, i32 1
  %30 = load i1, ptr %memberidx.i.i, align 1
  %memberidx1.i.i = getelementptr inbounds %Block, ptr %29, i64 0, i32 2
  %31 = load i1, ptr %memberidx1.i.i, align 1
  %32 = or i1 %30, %31
  %memberidx2.i.i = getelementptr inbounds %Block, ptr %29, i64 0, i32 3
  %33 = load i1, ptr %memberidx2.i.i, align 1
  %34 = or i1 %32, %33
  br i1 %34, label %CodeGen_codegen_while_stmt.exit, label %if.entry.i67

if.entry.i67:                                     ; preds = %CodeGen_codegen_block.exit
  %35 = load ptr, ptr %memberidx6.i, align 8
  %36 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %35)
  %37 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %36, ptr %11, ptr %13)
  br label %CodeGen_codegen_while_stmt.exit

CodeGen_codegen_while_stmt.exit:                  ; preds = %CodeGen_codegen_block.exit, %if.entry.i67
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %13)
  store ptr %14, ptr %memberidx2.i, align 8
  store ptr %15, ptr %memberidx3.i, align 8
  %.pr72 = load i64, ptr %2, align 4
  br label %ifend8

ifend8:                                           ; preds = %ifend4, %CodeGen_codegen_while_stmt.exit
  %38 = phi i64 [ %8, %ifend4 ], [ %.pr72, %CodeGen_codegen_while_stmt.exit ]
  %39 = icmp eq i64 %38, 5
  br i1 %39, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %ifend8
  %memberidx13 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %40 = load ptr, ptr %memberidx13, align 8
  %41 = tail call ptr @LLVMBuildBr(ptr %1, ptr %40)
  %.pre77 = load i64, ptr %2, align 4
  br label %ifend12

ifend12:                                          ; preds = %ifend8, %if.entry10
  %42 = phi i64 [ %38, %ifend8 ], [ %.pre77, %if.entry10 ]
  %43 = icmp eq i64 %42, 6
  br i1 %43, label %if.entry15, label %ifend17

if.entry15:                                       ; preds = %ifend12
  %memberidx18 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %44 = load ptr, ptr %memberidx18, align 8
  %45 = tail call ptr @LLVMBuildBr(ptr %1, ptr %44)
  %.pr73 = load i64, ptr %2, align 4
  br label %ifend17

ifend17:                                          ; preds = %ifend12, %if.entry15
  %46 = phi i64 [ %42, %ifend12 ], [ %.pr73, %if.entry15 ]
  %47 = icmp eq i64 %46, 1
  br i1 %47, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %ifend17
  tail call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr %1, ptr nonnull %2)
  %.pre78 = load i64, ptr %2, align 4
  br label %ifend22

ifend22:                                          ; preds = %ifend17, %if.entry20
  %48 = phi i64 [ %46, %ifend17 ], [ %.pre78, %if.entry20 ]
  %49 = icmp eq i64 %48, 2
  br i1 %49, label %if.entry24, label %ifend26

if.entry24:                                       ; preds = %ifend22
  tail call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr %1, ptr nonnull %2)
  %.pr74 = load i64, ptr %2, align 4
  br label %ifend26

ifend26:                                          ; preds = %ifend22, %if.entry24
  %50 = phi i64 [ %48, %ifend22 ], [ %.pr74, %if.entry24 ]
  %51 = icmp eq i64 %50, 7
  br i1 %51, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend26
  %memberidx.i = getelementptr inbounds %ReturnStatement, ptr %2, i64 0, i32 1
  %52 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %52, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry28
  %53 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %52)
  %54 = tail call ptr @LLVMBuildRet(ptr %1, ptr %53)
  br label %ifend30

else.i:                                           ; preds = %if.entry28
  %55 = tail call ptr @LLVMBuildRetVoid(ptr %1)
  br label %ifend30

ifend30:                                          ; preds = %else.i, %if.entry.i, %ifend26
  %56 = load i64, ptr %2, align 4
  %57 = icmp eq i64 %56, 8
  br i1 %57, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend30
  %58 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %2)
  br label %ifend34

ifend34:                                          ; preds = %ifend30, %if.entry32
  ret void
}

define internal fastcc void @Map_string_CGClassType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx6 = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx6, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.037 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.037
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.037, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %storemerge36 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %storemerge36
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_CGClassType____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %storemerge36, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_CGClassType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_CGClassType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_CGClassType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = srem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i34 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %13, %while.entry.preheader ], [ %26, %ifend9 ]
  %16 = phi i64 [ %11, %while.entry.preheader ], [ %27, %ifend9 ]
  %17 = phi ptr [ %14, %while.entry.preheader ], [ %30, %ifend9 ]
  %18 = phi i64 [ %12, %while.entry.preheader ], [ %29, %ifend9 ]
  %19 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i34, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.thread35, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend9

while.end.thread35:                               ; preds = %ifend.i
  %.pre40 = load ptr, ptr %0, align 8
  br label %ifend15

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %26 = phi ptr [ %.pre39, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %28 = add i64 %18, 1
  %29 = srem i64 %28, %27
  %ptridx12 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx12, align 8
  %.not33 = icmp eq ptr %30, null
  br i1 %.not33, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %31 = phi ptr [ %13, %ifend ], [ %26, %ifend9 ]
  %32 = phi i64 [ %12, %ifend ], [ %29, %ifend9 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend15

ifend15:                                          ; preds = %while.end.thread35, %if.entry13
  %35 = phi ptr [ %.pre40, %while.end.thread35 ], [ %31, %if.entry13 ]
  %36 = phi i64 [ %18, %while.end.thread35 ], [ %32, %if.entry13 ]
  %ptridx19 = getelementptr inbounds ptr, ptr %35, i64 %36
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_CGClassType__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @21, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = sext i8 %13 to i64
  %15 = add i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  %20 = call i64 @llvm.abs.i64(i64 %hash.0.lcssa, i1 false)
  ret i64 %20
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_LLVMValueRef__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_LLVMValueRef__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc ptr @CodeGen_get_string_val(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3, ptr nocapture %4, i64 %5) unnamed_addr {
  %7 = load i64, ptr %3, align 4
  switch i64 %7, label %is_object.exit302 [
    i64 0, label %if.entry
    i64 21, label %if.entry.i299
  ]

common.ret:                                       ; preds = %ifend3, %if.entry.i, %Map_string_LLVMValueRef____getitem__.exit, %if.entry.i115, %Map_string_LLVMValueRef____getitem__.exit204, %Array_LLVMValueRef____sl__.exit89, %Array_LLVMValueRef____sl__.exit138, %CodeGen_createGlobalLLVMString.exit154
  %common.ret.op = phi ptr [ %68, %CodeGen_createGlobalLLVMString.exit154 ], [ %102, %Array_LLVMValueRef____sl__.exit138 ], [ %237, %Array_LLVMValueRef____sl__.exit89 ], [ %173, %if.entry.i115 ], [ %168, %Map_string_LLVMValueRef____getitem__.exit204 ], [ %307, %if.entry.i ], [ %302, %Map_string_LLVMValueRef____getitem__.exit ], [ %2, %ifend3 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %6
  %8 = tail call ptr @malloc(i32 32)
  store i32 1702195828, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %9, align 8
  %memberidx.i.i164 = getelementptr inbounds %string, ptr %9, i64 0, i32 1
  store ptr %8, ptr %memberidx.i.i164, align 8
  %memberidx1.i.i165 = getelementptr inbounds %string, ptr %9, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i165, align 4
  %memberidx2.i.i166 = getelementptr inbounds %string, ptr %9, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i166, align 4
  %memberidx.i158 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %memberidx.i158, align 8
  %11 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %9)
  %memberidx.i230 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %10, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i230, align 4
  %13 = srem i64 %11, %12
  %14 = load ptr, ptr %10, align 8
  %ptridx.i231 = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i231, align 8
  %.not.i232 = icmp eq ptr %15, null
  br i1 %.not.i232, label %if.entry.i160, label %while.entry.i238

while.entry.i238:                                 ; preds = %if.entry, %else.i250
  %16 = phi ptr [ %26, %else.i250 ], [ %14, %if.entry ]
  %17 = phi i64 [ %27, %else.i250 ], [ %12, %if.entry ]
  %18 = phi ptr [ %30, %else.i250 ], [ %15, %if.entry ]
  %hash.0.i233 = phi i64 [ %29, %else.i250 ], [ %13, %if.entry ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i.i235 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i235, align 4
  %21 = load i64, ptr %memberidx1.i.i165, align 4
  %.not.i.i237 = icmp eq i64 %20, %21
  br i1 %.not.i.i237, label %ifend.i.i241, label %else.i250

ifend.i.i241:                                     ; preds = %while.entry.i238
  %memberidx2.i.i239 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i.i239, align 8
  %23 = load ptr, ptr %memberidx.i.i164, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.i247, label %ifend.i.i241.else.i250_crit_edge

ifend.i.i241.else.i250_crit_edge:                 ; preds = %ifend.i.i241
  %.pre = load i64, ptr %memberidx.i230, align 4
  %.pre337 = load ptr, ptr %10, align 8
  br label %else.i250

while.end.i247:                                   ; preds = %ifend.i.i241
  %.pre338.pre = load ptr, ptr %10, align 8
  %ptridx9.i245.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre338.pre, i64 %hash.0.i233
  %.pre339.pre = load ptr, ptr %ptridx9.i245.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i246 = icmp eq ptr %.pre339.pre, null
  br i1 %.not29.i246, label %if.entry.i160, label %Map_string_LLVMValueRef____getitem__.exit254

else.i250:                                        ; preds = %ifend.i.i241.else.i250_crit_edge, %while.entry.i238
  %26 = phi ptr [ %.pre337, %ifend.i.i241.else.i250_crit_edge ], [ %16, %while.entry.i238 ]
  %27 = phi i64 [ %.pre, %ifend.i.i241.else.i250_crit_edge ], [ %17, %while.entry.i238 ]
  %28 = add i64 %hash.0.i233, 1
  %29 = srem i64 %28, %27
  %ptridx7.i248 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx7.i248, align 8
  %.not30.i249 = icmp eq ptr %30, null
  br i1 %.not30.i249, label %if.entry.i160, label %while.entry.i238

Map_string_LLVMValueRef____getitem__.exit254:     ; preds = %while.end.i247
  %memberidx15.i252 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre339.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx15.i252, align 8
  %32 = icmp eq ptr %31, null
  br i1 %32, label %if.entry.i160, label %CodeGen_createGlobalLLVMString.exit163

if.entry.i160:                                    ; preds = %else.i250, %if.entry, %while.end.i247, %Map_string_LLVMValueRef____getitem__.exit254
  %33 = load ptr, ptr %9, align 8
  %memberidx1.i159 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %33, i64 0, i32 5
  %34 = load ptr, ptr %memberidx1.i159, align 8
  %35 = tail call ptr %34(ptr nonnull %9)
  %36 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %35, ptr nonnull @26)
  %37 = load ptr, ptr %memberidx.i158, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %37, ptr nonnull %9, ptr %36)
  br label %CodeGen_createGlobalLLVMString.exit163

CodeGen_createGlobalLLVMString.exit163:           ; preds = %Map_string_LLVMValueRef____getitem__.exit254, %if.entry.i160
  %str.0.i161 = phi ptr [ %36, %if.entry.i160 ], [ %31, %Map_string_LLVMValueRef____getitem__.exit254 ]
  %38 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %38, ptr noundef nonnull align 8 dereferenceable(5) @84, i64 5, i1 false)
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i155 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i155, align 8
  %memberidx1.i.i156 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i156, align 4
  %memberidx2.i.i157 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i157, align 4
  %40 = load ptr, ptr %memberidx.i158, align 8
  %41 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %39)
  %memberidx.i205 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %40, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i205, align 4
  %43 = srem i64 %41, %42
  %44 = load ptr, ptr %40, align 8
  %ptridx.i206 = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i206, align 8
  %.not.i207 = icmp eq ptr %45, null
  br i1 %.not.i207, label %if.entry.i151, label %while.entry.i213

while.entry.i213:                                 ; preds = %CodeGen_createGlobalLLVMString.exit163, %else.i225
  %46 = phi ptr [ %56, %else.i225 ], [ %44, %CodeGen_createGlobalLLVMString.exit163 ]
  %47 = phi i64 [ %57, %else.i225 ], [ %42, %CodeGen_createGlobalLLVMString.exit163 ]
  %48 = phi ptr [ %60, %else.i225 ], [ %45, %CodeGen_createGlobalLLVMString.exit163 ]
  %hash.0.i208 = phi i64 [ %59, %else.i225 ], [ %43, %CodeGen_createGlobalLLVMString.exit163 ]
  %49 = load ptr, ptr %48, align 8
  %memberidx.i.i210 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx.i.i210, align 4
  %51 = load i64, ptr %memberidx1.i.i156, align 4
  %.not.i.i212 = icmp eq i64 %50, %51
  br i1 %.not.i.i212, label %ifend.i.i216, label %else.i225

ifend.i.i216:                                     ; preds = %while.entry.i213
  %memberidx2.i.i214 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i214, align 8
  %53 = load ptr, ptr %memberidx.i.i155, align 8
  %54 = tail call i64 @memcmp(ptr %52, ptr %53, i64 %50)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %while.end.i222, label %ifend.i.i216.else.i225_crit_edge

ifend.i.i216.else.i225_crit_edge:                 ; preds = %ifend.i.i216
  %.pre340 = load i64, ptr %memberidx.i205, align 4
  %.pre341 = load ptr, ptr %40, align 8
  br label %else.i225

while.end.i222:                                   ; preds = %ifend.i.i216
  %.pre342.pre = load ptr, ptr %40, align 8
  %ptridx9.i220.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre342.pre, i64 %hash.0.i208
  %.pre343.pre = load ptr, ptr %ptridx9.i220.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i221 = icmp eq ptr %.pre343.pre, null
  br i1 %.not29.i221, label %if.entry.i151, label %Map_string_LLVMValueRef____getitem__.exit229

else.i225:                                        ; preds = %ifend.i.i216.else.i225_crit_edge, %while.entry.i213
  %56 = phi ptr [ %.pre341, %ifend.i.i216.else.i225_crit_edge ], [ %46, %while.entry.i213 ]
  %57 = phi i64 [ %.pre340, %ifend.i.i216.else.i225_crit_edge ], [ %47, %while.entry.i213 ]
  %58 = add i64 %hash.0.i208, 1
  %59 = srem i64 %58, %57
  %ptridx7.i223 = getelementptr inbounds ptr, ptr %56, i64 %59
  %60 = load ptr, ptr %ptridx7.i223, align 8
  %.not30.i224 = icmp eq ptr %60, null
  br i1 %.not30.i224, label %if.entry.i151, label %while.entry.i213

Map_string_LLVMValueRef____getitem__.exit229:     ; preds = %while.end.i222
  %memberidx15.i227 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre343.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx15.i227, align 8
  %62 = icmp eq ptr %61, null
  br i1 %62, label %if.entry.i151, label %CodeGen_createGlobalLLVMString.exit154

if.entry.i151:                                    ; preds = %else.i225, %CodeGen_createGlobalLLVMString.exit163, %while.end.i222, %Map_string_LLVMValueRef____getitem__.exit229
  %63 = load ptr, ptr %39, align 8
  %memberidx1.i150 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %63, i64 0, i32 5
  %64 = load ptr, ptr %memberidx1.i150, align 8
  %65 = tail call ptr %64(ptr nonnull %39)
  %66 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %65, ptr nonnull @26)
  %67 = load ptr, ptr %memberidx.i158, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %67, ptr nonnull %39, ptr %66)
  br label %CodeGen_createGlobalLLVMString.exit154

CodeGen_createGlobalLLVMString.exit154:           ; preds = %Map_string_LLVMValueRef____getitem__.exit229, %if.entry.i151
  %str.0.i152 = phi ptr [ %66, %if.entry.i151 ], [ %61, %Map_string_LLVMValueRef____getitem__.exit229 ]
  %68 = tail call ptr @LLVMBuildSelect(ptr %1, ptr %2, ptr %str.0.i161, ptr %str.0.i152, ptr nonnull @26)
  br label %common.ret

if.entry.i299:                                    ; preds = %6, %if.entry.i299
  %.tr5.i297 = phi ptr [ %69, %if.entry.i299 ], [ %3, %6 ]
  %memberidx1.i298 = getelementptr inbounds %GenericType, ptr %.tr5.i297, i64 0, i32 3
  %69 = load ptr, ptr %memberidx1.i298, align 8
  %70 = load i64, ptr %69, align 4
  %71 = icmp eq i64 %70, 21
  br i1 %71, label %if.entry.i299, label %is_object.exit302

is_object.exit302:                                ; preds = %if.entry.i299, %6
  %.lcssa.i300 = phi i64 [ %7, %6 ], [ %70, %if.entry.i299 ]
  %72 = icmp eq i64 %.lcssa.i300, 13
  br i1 %72, label %if.entry1, label %ifend3

if.entry1:                                        ; preds = %is_object.exit302
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %73 = load ptr, ptr %memberidx, align 8
  %74 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %74, ptr noundef nonnull align 8 dereferenceable(6) @164, i64 6, i1 false)
  %75 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %75, align 8
  %memberidx.i.i146 = getelementptr inbounds %string, ptr %75, i64 0, i32 1
  store ptr %74, ptr %memberidx.i.i146, align 8
  %memberidx1.i.i147 = getelementptr inbounds %string, ptr %75, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i147, align 4
  %memberidx2.i.i148 = getelementptr inbounds %string, ptr %75, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i148, align 4
  %76 = load i64, ptr %3, align 4
  %77 = icmp eq i64 %76, 21
  br i1 %77, label %if.entry.i293, label %is_object.exit296.thread

if.entry.i293:                                    ; preds = %if.entry1, %if.entry.i293
  %.tr5.i291 = phi ptr [ %78, %if.entry.i293 ], [ %3, %if.entry1 ]
  %memberidx1.i292 = getelementptr inbounds %GenericType, ptr %.tr5.i291, i64 0, i32 3
  %78 = load ptr, ptr %memberidx1.i292, align 8
  %79 = load i64, ptr %78, align 4
  switch i64 %79, label %ifend6 [
    i64 21, label %if.entry.i293
    i64 13, label %tailrecurse.i277.preheader
  ]

is_object.exit296.thread:                         ; preds = %if.entry1
  %80 = icmp eq i64 %76, 13
  br i1 %80, label %if.entry3.i289, label %ifend6

tailrecurse.i277.preheader:                       ; preds = %if.entry.i293
  br i1 %77, label %if.entry.i280, label %if.entry3.i289

if.entry.i280:                                    ; preds = %tailrecurse.i277.preheader, %if.entry.i280
  %.tr11.i276328 = phi ptr [ %81, %if.entry.i280 ], [ %3, %tailrecurse.i277.preheader ]
  %memberidx1.i279 = getelementptr inbounds %GenericType, ptr %.tr11.i276328, i64 0, i32 3
  %81 = load ptr, ptr %memberidx1.i279, align 8
  %82 = load i64, ptr %81, align 4
  %switch = icmp eq i64 %82, 21
  br i1 %switch, label %if.entry.i280, label %if.entry3.i289

if.entry3.i289:                                   ; preds = %if.entry.i280, %is_object.exit296.thread, %tailrecurse.i277.preheader
  %.tr11.i276.lcssa = phi ptr [ %3, %tailrecurse.i277.preheader ], [ %3, %is_object.exit296.thread ], [ %81, %if.entry.i280 ]
  %memberidx6.i281 = getelementptr inbounds %ObjectType, ptr %.tr11.i276.lcssa, i64 0, i32 1
  %83 = load ptr, ptr %memberidx6.i281, align 8
  %memberidx.i.i282 = getelementptr inbounds %Program, ptr %73, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i.i282, align 8
  %85 = load i64, ptr %83, align 4
  %memberidx.i.i.i283 = getelementptr inbounds %Array_Module_, ptr %84, i64 0, i32 1
  %86 = load ptr, ptr %memberidx.i.i.i283, align 8
  %ptridx.i.i.i284 = getelementptr inbounds ptr, ptr %86, i64 %85
  %87 = load ptr, ptr %ptridx.i.i.i284, align 8
  %memberidx2.i.i285 = getelementptr inbounds %Module, ptr %87, i64 0, i32 4
  %88 = load ptr, ptr %memberidx2.i.i285, align 8
  %memberidx3.i.i286 = getelementptr inbounds %TypeId, ptr %83, i64 0, i32 2
  %89 = load i64, ptr %memberidx3.i.i286, align 4
  %memberidx.i5.i.i287 = getelementptr inbounds %Array_Class_, ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %memberidx.i5.i.i287, align 8
  %ptridx.i6.i.i288 = getelementptr inbounds ptr, ptr %90, i64 %89
  %91 = load ptr, ptr %ptridx.i6.i.i288, align 8
  %memberidx.i140 = getelementptr inbounds %Class, ptr %91, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i140, align 8
  %memberidx.i.i141 = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  %93 = load i64, ptr %memberidx.i.i141, align 4
  %.not.i.i = icmp eq i64 %93, 6
  br i1 %.not.i.i, label %string___eq__.exit.i, label %ifend6

string___eq__.exit.i:                             ; preds = %if.entry3.i289
  %memberidx2.i.i144 = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  %94 = load ptr, ptr %memberidx2.i.i144, align 8
  %95 = tail call i64 @memcmp(ptr %94, ptr %74, i64 6)
  %96 = icmp eq i64 %95, 0
  %97 = load ptr, ptr %91, align 8
  %98 = load i64, ptr %97, align 4
  %99 = icmp eq i64 %98, 1
  %100 = and i1 %96, %99
  br i1 %100, label %if.entry4, label %ifend6

ifend3:                                           ; preds = %is_object.exit302
  %101 = icmp eq i64 %7, 17
  br i1 %101, label %if.entry35, label %common.ret

if.entry4:                                        ; preds = %string___eq__.exit.i
  %102 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %2)
  %memberidx.i129 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %103 = load i64, ptr %memberidx.i129, align 4
  %memberidx1.i130 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 3
  %104 = load i64, ptr %memberidx1.i130, align 4
  %.not.i131 = icmp slt i64 %103, %104
  br i1 %.not.i131, label %if.entry4.Array_LLVMValueRef____sl__.exit138_crit_edge, label %if.entry.i134

if.entry4.Array_LLVMValueRef____sl__.exit138_crit_edge: ; preds = %if.entry4
  %memberidx4.i135.phi.trans.insert = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %.pre358 = load ptr, ptr %memberidx4.i135.phi.trans.insert, align 8
  br label %Array_LLVMValueRef____sl__.exit138

if.entry.i134:                                    ; preds = %if.entry4
  %105 = shl i64 %104, 1
  store i64 %105, ptr %memberidx1.i130, align 4
  %memberidx2.i.i133 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %106 = load ptr, ptr %memberidx2.i.i133, align 8
  %107 = shl i64 %104, 4
  %108 = tail call ptr @realloc(ptr %106, i64 %107)
  store ptr %108, ptr %memberidx2.i.i133, align 8
  %.pre357 = load i64, ptr %memberidx.i129, align 4
  br label %Array_LLVMValueRef____sl__.exit138

Array_LLVMValueRef____sl__.exit138:               ; preds = %if.entry4.Array_LLVMValueRef____sl__.exit138_crit_edge, %if.entry.i134
  %109 = phi ptr [ %.pre358, %if.entry4.Array_LLVMValueRef____sl__.exit138_crit_edge ], [ %108, %if.entry.i134 ]
  %110 = phi i64 [ %103, %if.entry4.Array_LLVMValueRef____sl__.exit138_crit_edge ], [ %.pre357, %if.entry.i134 ]
  %111 = add i64 %110, 1
  store i64 %111, ptr %memberidx.i129, align 4
  %ptridx.i136 = getelementptr inbounds ptr, ptr %109, i64 %110
  store ptr %102, ptr %ptridx.i136, align 8
  br label %common.ret

ifend6:                                           ; preds = %if.entry.i293, %is_object.exit296.thread, %if.entry3.i289, %string___eq__.exit.i
  %112 = load ptr, ptr %memberidx, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i270, %ifend6
  %.tr11.i = phi ptr [ %3, %ifend6 ], [ %114, %if.entry.i270 ]
  %113 = load i64, ptr %.tr11.i, align 4
  switch i64 %113, label %get_class_from_type.exit [
    i64 21, label %if.entry.i270
    i64 13, label %if.entry3.i
  ]

if.entry.i270:                                    ; preds = %tailrecurse.i
  %memberidx1.i269 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %114 = load ptr, ptr %memberidx1.i269, align 8
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i271 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %115 = load ptr, ptr %memberidx6.i271, align 8
  %memberidx.i.i272 = getelementptr inbounds %Program, ptr %112, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i.i272, align 8
  %117 = load i64, ptr %115, align 4
  %memberidx.i.i.i273 = getelementptr inbounds %Array_Module_, ptr %116, i64 0, i32 1
  %118 = load ptr, ptr %memberidx.i.i.i273, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %118, i64 %117
  %119 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i274 = getelementptr inbounds %Module, ptr %119, i64 0, i32 4
  %120 = load ptr, ptr %memberidx2.i.i274, align 8
  %memberidx3.i.i275 = getelementptr inbounds %TypeId, ptr %115, i64 0, i32 2
  %121 = load i64, ptr %memberidx3.i.i275, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %120, i64 0, i32 1
  %122 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %122, i64 %121
  %123 = load ptr, ptr %ptridx.i6.i.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i268 = phi ptr [ %123, %if.entry3.i ], [ null, %tailrecurse.i ]
  %124 = alloca %StringBuilder, align 8
  %memberidx8 = getelementptr inbounds %Class, ptr %common.ret.op.i268, i64 0, i32 1
  %125 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %string, ptr %125, i64 0, i32 2
  %126 = load i64, ptr %memberidx9, align 4
  %127 = add i64 %126, 14
  store ptr @VTableStringBuilder, ptr %124, align 8
  %memberidx.i125 = getelementptr inbounds %StringBuilder, ptr %124, i64 0, i32 2
  store i64 %127, ptr %memberidx.i125, align 8
  %memberidx1.i126 = getelementptr inbounds %StringBuilder, ptr %124, i64 0, i32 1
  %128 = trunc i64 %127 to i32
  %mallocsize.i = shl i32 %128, 3
  %129 = tail call ptr @malloc(i32 %mallocsize.i)
  store ptr %129, ptr %memberidx1.i126, align 8
  %memberidx3.i127 = getelementptr inbounds %StringBuilder, ptr %124, i64 0, i32 3
  store ptr %129, ptr %memberidx3.i127, align 8
  %memberidx5.i128 = getelementptr inbounds %StringBuilder, ptr %124, i64 0, i32 4
  store i64 0, ptr %memberidx5.i128, align 8
  %130 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr }>, ptr @VTableStringBuilder, i64 0, i32 1), align 8
  %131 = load ptr, ptr %memberidx8, align 8
  %132 = load ptr, ptr %131, align 8
  %memberidx12 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %132, i64 0, i32 5
  %133 = load ptr, ptr %memberidx12, align 8
  %134 = tail call ptr %133(ptr nonnull %131)
  %135 = alloca ptr, align 8
  %136 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %135, ptr nonnull @220, ptr %134)
  %137 = load ptr, ptr %135, align 8
  %138 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %138, align 8
  %memberidx.i122 = getelementptr inbounds %string, ptr %138, i64 0, i32 1
  store ptr %137, ptr %memberidx.i122, align 8
  %memberidx1.i123 = getelementptr inbounds %string, ptr %138, i64 0, i32 2
  store i64 %136, ptr %memberidx1.i123, align 4
  %memberidx2.i124 = getelementptr inbounds %string, ptr %138, i64 0, i32 3
  store i64 %136, ptr %memberidx2.i124, align 4
  tail call void @free(ptr %134)
  call void %130(ptr nonnull %124, ptr nonnull %138)
  %139 = icmp eq i64 %5, 3
  br i1 %139, label %if.entry13, label %ifend15

if.entry13:                                       ; preds = %get_class_from_type.exit
  %140 = load ptr, ptr %124, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %140, i64 0, i32 1
  %141 = load ptr, ptr %memberidx16, align 8
  %142 = call ptr @malloc(i32 48)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %142, ptr noundef nonnull align 8 dereferenceable(6) @221, i64 6, i1 false)
  %143 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %143, align 8
  %memberidx.i.i119 = getelementptr inbounds %string, ptr %143, i64 0, i32 1
  store ptr %142, ptr %memberidx.i.i119, align 8
  %memberidx1.i.i120 = getelementptr inbounds %string, ptr %143, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i120, align 4
  %memberidx2.i.i121 = getelementptr inbounds %string, ptr %143, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i121, align 4
  call void %141(ptr nonnull %124, ptr nonnull %143)
  %144 = load ptr, ptr %124, align 8
  %memberidx17 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %144, i64 0, i32 3
  %145 = load ptr, ptr %memberidx17, align 8
  %146 = call ptr %145(ptr nonnull %124)
  %memberidx.i113 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %147 = load ptr, ptr %memberidx.i113, align 8
  %148 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %146)
  %memberidx.i180 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %147, i64 0, i32 1
  %149 = load i64, ptr %memberidx.i180, align 4
  %150 = srem i64 %148, %149
  %151 = load ptr, ptr %147, align 8
  %ptridx.i181 = getelementptr inbounds ptr, ptr %151, i64 %150
  %152 = load ptr, ptr %ptridx.i181, align 8
  %.not.i182 = icmp eq ptr %152, null
  br i1 %.not.i182, label %if.entry.i115, label %while.entry.i188.preheader

while.entry.i188.preheader:                       ; preds = %if.entry13
  %memberidx1.i.i186 = getelementptr inbounds %string, ptr %146, i64 0, i32 2
  %memberidx3.i.i190 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  br label %while.entry.i188

while.entry.i188:                                 ; preds = %while.entry.i188.preheader, %else.i200
  %153 = phi ptr [ %163, %else.i200 ], [ %151, %while.entry.i188.preheader ]
  %154 = phi i64 [ %164, %else.i200 ], [ %149, %while.entry.i188.preheader ]
  %155 = phi ptr [ %167, %else.i200 ], [ %152, %while.entry.i188.preheader ]
  %hash.0.i183 = phi i64 [ %166, %else.i200 ], [ %150, %while.entry.i188.preheader ]
  %156 = load ptr, ptr %155, align 8
  %memberidx.i.i185 = getelementptr inbounds %string, ptr %156, i64 0, i32 2
  %157 = load i64, ptr %memberidx.i.i185, align 4
  %158 = load i64, ptr %memberidx1.i.i186, align 4
  %.not.i.i187 = icmp eq i64 %157, %158
  br i1 %.not.i.i187, label %ifend.i.i191, label %else.i200

ifend.i.i191:                                     ; preds = %while.entry.i188
  %memberidx2.i.i189 = getelementptr inbounds %string, ptr %156, i64 0, i32 1
  %159 = load ptr, ptr %memberidx2.i.i189, align 8
  %160 = load ptr, ptr %memberidx3.i.i190, align 8
  %161 = call i64 @memcmp(ptr %159, ptr %160, i64 %157)
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %while.end.i197, label %ifend.i.i191.else.i200_crit_edge

ifend.i.i191.else.i200_crit_edge:                 ; preds = %ifend.i.i191
  %.pre353 = load i64, ptr %memberidx.i180, align 4
  %.pre354 = load ptr, ptr %147, align 8
  br label %else.i200

while.end.i197:                                   ; preds = %ifend.i.i191
  %.pre355.pre = load ptr, ptr %147, align 8
  %ptridx9.i195.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre355.pre, i64 %hash.0.i183
  %.pre356.pre = load ptr, ptr %ptridx9.i195.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i196 = icmp eq ptr %.pre356.pre, null
  br i1 %.not29.i196, label %if.entry.i115, label %Map_string_LLVMValueRef____getitem__.exit204

else.i200:                                        ; preds = %ifend.i.i191.else.i200_crit_edge, %while.entry.i188
  %163 = phi ptr [ %.pre354, %ifend.i.i191.else.i200_crit_edge ], [ %153, %while.entry.i188 ]
  %164 = phi i64 [ %.pre353, %ifend.i.i191.else.i200_crit_edge ], [ %154, %while.entry.i188 ]
  %165 = add i64 %hash.0.i183, 1
  %166 = srem i64 %165, %164
  %ptridx7.i198 = getelementptr inbounds ptr, ptr %163, i64 %166
  %167 = load ptr, ptr %ptridx7.i198, align 8
  %.not30.i199 = icmp eq ptr %167, null
  br i1 %.not30.i199, label %if.entry.i115, label %while.entry.i188

Map_string_LLVMValueRef____getitem__.exit204:     ; preds = %while.end.i197
  %memberidx15.i202 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre356.pre, i64 0, i32 1
  %168 = load ptr, ptr %memberidx15.i202, align 8
  %169 = icmp eq ptr %168, null
  br i1 %169, label %if.entry.i115, label %common.ret

if.entry.i115:                                    ; preds = %else.i200, %if.entry13, %while.end.i197, %Map_string_LLVMValueRef____getitem__.exit204
  %170 = load ptr, ptr %146, align 8
  %memberidx1.i114 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %170, i64 0, i32 5
  %171 = load ptr, ptr %memberidx1.i114, align 8
  %172 = call ptr %171(ptr nonnull %146)
  %173 = call ptr @LLVMBuildGlobalString(ptr %1, ptr %172, ptr nonnull @26)
  %174 = load ptr, ptr %memberidx.i113, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %174, ptr nonnull %146, ptr %173)
  br label %common.ret

ifend15:                                          ; preds = %get_class_from_type.exit
  %memberidx18 = getelementptr inbounds %Class, ptr %common.ret.op.i268, i64 0, i32 6
  %175 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %Map_string_PropId_, ptr %175, i64 0, i32 2
  %176 = load i64, ptr %memberidx19, align 4
  %177 = alloca ptr, i64 %176, align 8
  %178 = call ptr @malloc(i32 25)
  %179 = load ptr, ptr %175, align 8
  %memberidx1.i109 = getelementptr inbounds %Map_string_PropId_, ptr %175, i64 0, i32 1
  %180 = load i64, ptr %memberidx1.i109, align 4
  %181 = load i64, ptr %memberidx19, align 4
  store i1 false, ptr %178, align 1
  %memberidx1.i.i111 = getelementptr inbounds %MapIterator_string_PropId_, ptr %178, i64 0, i32 1
  store ptr %179, ptr %memberidx1.i.i111, align 8
  %memberidx2.i.i112 = getelementptr inbounds %MapIterator_string_PropId_, ptr %178, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %178, i64 0, i32 3
  store i64 %181, ptr %memberidx3.i.i, align 4
  %182 = add i64 %180, -1
  store i64 %182, ptr %memberidx2.i.i112, align 4
  %183 = icmp sgt i64 %180, 0
  br i1 %183, label %while.entry.i103, label %MapIterator_string_PropId__next.exit108

while.entry.i103:                                 ; preds = %ifend15, %ifend.i107
  %184 = phi i64 [ %187, %ifend.i107 ], [ %182, %ifend15 ]
  %185 = phi ptr [ %incdec.ptr.i101, %ifend.i107 ], [ %179, %ifend15 ]
  %incdec.ptr.i101 = getelementptr inbounds ptr, ptr %185, i64 1
  %186 = load ptr, ptr %185, align 8
  %.not.i102 = icmp eq ptr %186, null
  br i1 %.not.i102, label %ifend.i107, label %MapIterator_string_PropId__next.exit108.loopexit

ifend.i107:                                       ; preds = %while.entry.i103
  %187 = add i64 %184, -1
  store i64 %187, ptr %memberidx2.i.i112, align 4
  %188 = icmp sgt i64 %184, 0
  br i1 %188, label %while.entry.i103, label %MapIterator_string_PropId__next.exit108.loopexit

MapIterator_string_PropId__next.exit108.loopexit: ; preds = %ifend.i107, %while.entry.i103
  %189 = phi i64 [ %187, %ifend.i107 ], [ %184, %while.entry.i103 ]
  store ptr %incdec.ptr.i101, ptr %memberidx1.i.i111, align 8
  br label %MapIterator_string_PropId__next.exit108

MapIterator_string_PropId__next.exit108:          ; preds = %MapIterator_string_PropId__next.exit108.loopexit, %ifend15
  %190 = phi i64 [ %189, %MapIterator_string_PropId__next.exit108.loopexit ], [ %182, %ifend15 ]
  %.pn.in.promoted = phi ptr [ %incdec.ptr.i101, %MapIterator_string_PropId__next.exit108.loopexit ], [ %179, %ifend15 ]
  %storemerge308318 = icmp slt i64 %181, 1
  br i1 %storemerge308318, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit108
  %191 = add i64 %5, 1
  %memberidx.i73 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %memberidx1.i74 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 3
  %memberidx2.i.i77 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit
  %192 = phi i64 [ %190, %for.body.lr.ph ], [ %278, %MapIterator_string_PropId__next.exit ]
  %storemerge309322.in = phi i64 [ %181, %for.body.lr.ph ], [ %storemerge309322, %MapIterator_string_PropId__next.exit ]
  %.pn315321 = phi ptr [ %.pn.in.promoted, %for.body.lr.ph ], [ %.pn314, %MapIterator_string_PropId__next.exit ]
  %193 = phi i64 [ 0, %for.body.lr.ph ], [ %256, %MapIterator_string_PropId__next.exit ]
  %storemerge309322 = add i64 %storemerge309322.in, -1
  %storemerge323.in = getelementptr inbounds ptr, ptr %.pn315321, i64 -1
  %storemerge323 = load ptr, ptr %storemerge323.in, align 8
  %194 = load ptr, ptr %memberidx, align 8
  %memberidx23 = getelementptr inbounds %MapEntry_string_PropId_, ptr %storemerge323, i64 0, i32 1
  %195 = load ptr, ptr %memberidx23, align 8
  %memberidx.i.i93 = getelementptr inbounds %PropId, ptr %195, i64 0, i32 1
  %196 = load ptr, ptr %memberidx.i.i93, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %194, i64 0, i32 1
  %197 = load ptr, ptr %memberidx.i.i.i, align 8
  %198 = load i64, ptr %196, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %197, i64 0, i32 1
  %199 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %199, i64 %198
  %200 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %200, i64 0, i32 4
  %201 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %196, i64 0, i32 2
  %202 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %201, i64 0, i32 1
  %203 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %203, i64 %202
  %204 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %205 = load i64, ptr %195, align 4
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %if.entry.i96, label %ifend.i98

if.entry.i96:                                     ; preds = %for.body
  %memberidx1.i94 = getelementptr inbounds %Class, ptr %204, i64 0, i32 5
  %207 = load ptr, ptr %memberidx1.i94, align 8
  %memberidx2.i95 = getelementptr inbounds %PropId, ptr %195, i64 0, i32 2
  %208 = load i64, ptr %memberidx2.i95, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %207, i64 0, i32 1
  %209 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %209, i64 %208
  %210 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %210, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i98:                                        ; preds = %for.body
  %memberidx4.i97 = getelementptr inbounds %Class, ptr %204, i64 0, i32 4
  %211 = load ptr, ptr %memberidx4.i97, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %195, i64 0, i32 2
  %212 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %211, i64 0, i32 1
  %213 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %213, i64 %212
  %214 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %214, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i96, %ifend.i98
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i96 ], [ %memberidx6.i, %ifend.i98 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %215 = load ptr, ptr %storemerge323, align 8
  %216 = call fastcc ptr @CodeGen_get_member_with_name(ptr nonnull %0, ptr %1, ptr %2, ptr nonnull %3, ptr %215)
  %217 = call fastcc ptr @CodeGen_get_string_val(ptr nonnull %0, ptr %1, ptr %216, ptr %common.ret.op.i, ptr %4, i64 %191)
  %218 = load i64, ptr %common.ret.op.i, align 4
  %219 = icmp eq i64 %218, 21
  br i1 %219, label %if.entry.i266, label %is_object.exit

if.entry.i266:                                    ; preds = %get_class_prop_type.exit, %if.entry.i266
  %.tr5.i = phi ptr [ %220, %if.entry.i266 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i265 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %220 = load ptr, ptr %memberidx1.i265, align 8
  %221 = load i64, ptr %220, align 4
  %222 = icmp eq i64 %221, 21
  br i1 %222, label %if.entry.i266, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i266, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %218, %get_class_prop_type.exit ], [ %221, %if.entry.i266 ]
  %223 = icmp eq i64 %.lcssa.i, 13
  %224 = call ptr @LLVMTypeOf(ptr %217)
  %225 = call i64 @LLVMGetTypeKind(ptr %224)
  %226 = icmp ne i64 %225, 12
  %227 = call i1 @LLVMIsGlobalConstant(ptr %217)
  %228 = or i1 %223, %227
  %229 = or i1 %226, %228
  br i1 %229, label %ifend27, label %if.entry25

for.end:                                          ; preds = %MapIterator_string_PropId__next.exit, %MapIterator_string_PropId__next.exit108
  tail call void @free(ptr nonnull %178)
  %230 = load ptr, ptr %124, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %230, i64 0, i32 1
  %231 = load ptr, ptr %memberidx32, align 8
  %232 = call ptr @malloc(i32 8)
  store i8 125, ptr %232, align 8
  %233 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %233, align 8
  %memberidx.i.i90 = getelementptr inbounds %string, ptr %233, i64 0, i32 1
  store ptr %232, ptr %memberidx.i.i90, align 8
  %memberidx1.i.i91 = getelementptr inbounds %string, ptr %233, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i91, align 4
  %memberidx2.i.i92 = getelementptr inbounds %string, ptr %233, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i92, align 4
  call void %231(ptr nonnull %124, ptr nonnull %233)
  %234 = load ptr, ptr %124, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %234, i64 0, i32 3
  %235 = load ptr, ptr %memberidx34, align 8
  %236 = call ptr %235(ptr nonnull %124)
  %237 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr %236, ptr nonnull %177, i64 %176, ptr null)
  %memberidx.i80 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %238 = load i64, ptr %memberidx.i80, align 4
  %memberidx1.i81 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 3
  %239 = load i64, ptr %memberidx1.i81, align 4
  %.not.i82 = icmp slt i64 %238, %239
  br i1 %.not.i82, label %for.end.Array_LLVMValueRef____sl__.exit89_crit_edge, label %if.entry.i85

for.end.Array_LLVMValueRef____sl__.exit89_crit_edge: ; preds = %for.end
  %memberidx4.i86.phi.trans.insert = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %.pre352 = load ptr, ptr %memberidx4.i86.phi.trans.insert, align 8
  br label %Array_LLVMValueRef____sl__.exit89

if.entry.i85:                                     ; preds = %for.end
  %240 = shl i64 %239, 1
  store i64 %240, ptr %memberidx1.i81, align 4
  %memberidx2.i.i84 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %241 = load ptr, ptr %memberidx2.i.i84, align 8
  %242 = shl i64 %239, 4
  %243 = call ptr @realloc(ptr %241, i64 %242)
  store ptr %243, ptr %memberidx2.i.i84, align 8
  %.pre351 = load i64, ptr %memberidx.i80, align 4
  br label %Array_LLVMValueRef____sl__.exit89

Array_LLVMValueRef____sl__.exit89:                ; preds = %for.end.Array_LLVMValueRef____sl__.exit89_crit_edge, %if.entry.i85
  %244 = phi ptr [ %.pre352, %for.end.Array_LLVMValueRef____sl__.exit89_crit_edge ], [ %243, %if.entry.i85 ]
  %245 = phi i64 [ %238, %for.end.Array_LLVMValueRef____sl__.exit89_crit_edge ], [ %.pre351, %if.entry.i85 ]
  %246 = add i64 %245, 1
  store i64 %246, ptr %memberidx.i80, align 4
  %ptridx.i87 = getelementptr inbounds ptr, ptr %244, i64 %245
  store ptr %237, ptr %ptridx.i87, align 8
  br label %common.ret

if.entry25:                                       ; preds = %is_object.exit
  %247 = load i64, ptr %memberidx.i73, align 4
  %248 = load i64, ptr %memberidx1.i74, align 4
  %.not.i75 = icmp slt i64 %247, %248
  br i1 %.not.i75, label %if.entry25.Array_LLVMValueRef____sl__.exit_crit_edge, label %if.entry.i78

if.entry25.Array_LLVMValueRef____sl__.exit_crit_edge: ; preds = %if.entry25
  %.pre350 = load ptr, ptr %memberidx2.i.i77, align 8
  br label %Array_LLVMValueRef____sl__.exit

if.entry.i78:                                     ; preds = %if.entry25
  %249 = shl i64 %248, 1
  store i64 %249, ptr %memberidx1.i74, align 4
  %250 = load ptr, ptr %memberidx2.i.i77, align 8
  %251 = shl i64 %248, 4
  %252 = call ptr @realloc(ptr %250, i64 %251)
  store ptr %252, ptr %memberidx2.i.i77, align 8
  %.pre349 = load i64, ptr %memberidx.i73, align 4
  br label %Array_LLVMValueRef____sl__.exit

Array_LLVMValueRef____sl__.exit:                  ; preds = %if.entry25.Array_LLVMValueRef____sl__.exit_crit_edge, %if.entry.i78
  %253 = phi ptr [ %.pre350, %if.entry25.Array_LLVMValueRef____sl__.exit_crit_edge ], [ %252, %if.entry.i78 ]
  %254 = phi i64 [ %247, %if.entry25.Array_LLVMValueRef____sl__.exit_crit_edge ], [ %.pre349, %if.entry.i78 ]
  %255 = add i64 %254, 1
  store i64 %255, ptr %memberidx.i73, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %253, i64 %254
  store ptr %217, ptr %ptridx.i, align 8
  br label %ifend27

ifend27:                                          ; preds = %is_object.exit, %Array_LLVMValueRef____sl__.exit
  %256 = add i64 %193, 1
  %ptridx = getelementptr inbounds ptr, ptr %177, i64 %193
  store ptr %217, ptr %ptridx, align 8
  %257 = load ptr, ptr %124, align 8
  %memberidx28 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %257, i64 0, i32 1
  %258 = load ptr, ptr %memberidx28, align 8
  %259 = load ptr, ptr %storemerge323, align 8
  %260 = load ptr, ptr %259, align 8
  %memberidx30 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %260, i64 0, i32 5
  %261 = load ptr, ptr %memberidx30, align 8
  %262 = call ptr %261(ptr nonnull %259)
  %263 = call fastcc ptr @get_format_from_type(ptr nonnull %common.ret.op.i)
  %264 = load ptr, ptr %263, align 8
  %memberidx31 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %264, i64 0, i32 5
  %265 = load ptr, ptr %memberidx31, align 8
  %266 = call ptr %265(ptr nonnull %263)
  %267 = alloca ptr, align 8
  %268 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %267, ptr nonnull @224, ptr %262, ptr %266)
  %269 = load ptr, ptr %267, align 8
  %270 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %270, align 8
  %memberidx.i70 = getelementptr inbounds %string, ptr %270, i64 0, i32 1
  store ptr %269, ptr %memberidx.i70, align 8
  %memberidx1.i71 = getelementptr inbounds %string, ptr %270, i64 0, i32 2
  store i64 %268, ptr %memberidx1.i71, align 4
  %memberidx2.i72 = getelementptr inbounds %string, ptr %270, i64 0, i32 3
  store i64 %268, ptr %memberidx2.i72, align 4
  tail call void @free(ptr %262)
  tail call void @free(ptr %266)
  call void %258(ptr nonnull %124, ptr nonnull %270)
  %271 = add i64 %192, -1
  store i64 %271, ptr %memberidx2.i.i112, align 4
  %272 = icmp sgt i64 %192, 0
  br i1 %272, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %ifend27, %ifend.i
  %273 = phi i64 [ %276, %ifend.i ], [ %271, %ifend27 ]
  %274 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %.pn315321, %ifend27 ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %274, i64 1
  %275 = load ptr, ptr %274, align 8
  %.not.i = icmp eq ptr %275, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %276 = add i64 %273, -1
  store i64 %276, ptr %memberidx2.i.i112, align 4
  %277 = icmp sgt i64 %273, 0
  br i1 %277, label %while.entry.i, label %MapIterator_string_PropId__next.exit

MapIterator_string_PropId__next.exit:             ; preds = %while.entry.i, %ifend.i, %ifend27
  %278 = phi i64 [ %271, %ifend27 ], [ %273, %while.entry.i ], [ %276, %ifend.i ]
  %.pn314 = phi ptr [ %.pn315321, %ifend27 ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge308 = icmp slt i64 %storemerge309322, 1
  br i1 %storemerge308, label %for.end, label %for.body

if.entry35:                                       ; preds = %ifend3
  %279 = tail call ptr @malloc(i32 80)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %279, ptr noundef nonnull align 8 dereferenceable(10) @225, i64 10, i1 false)
  %280 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %280, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %280, i64 0, i32 1
  store ptr %279, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %280, i64 0, i32 2
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %280, i64 0, i32 3
  store i64 10, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %281 = load ptr, ptr %memberidx.i, align 8
  %282 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %280)
  %memberidx.i167 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %281, i64 0, i32 1
  %283 = load i64, ptr %memberidx.i167, align 4
  %284 = srem i64 %282, %283
  %285 = load ptr, ptr %281, align 8
  %ptridx.i168 = getelementptr inbounds ptr, ptr %285, i64 %284
  %286 = load ptr, ptr %ptridx.i168, align 8
  %.not.i169 = icmp eq ptr %286, null
  br i1 %.not.i169, label %if.entry.i, label %while.entry.i173

while.entry.i173:                                 ; preds = %if.entry35, %else.i
  %287 = phi ptr [ %297, %else.i ], [ %285, %if.entry35 ]
  %288 = phi i64 [ %298, %else.i ], [ %283, %if.entry35 ]
  %289 = phi ptr [ %301, %else.i ], [ %286, %if.entry35 ]
  %hash.0.i = phi i64 [ %300, %else.i ], [ %284, %if.entry35 ]
  %290 = load ptr, ptr %289, align 8
  %memberidx.i.i170 = getelementptr inbounds %string, ptr %290, i64 0, i32 2
  %291 = load i64, ptr %memberidx.i.i170, align 4
  %292 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i172 = icmp eq i64 %291, %292
  br i1 %.not.i.i172, label %ifend.i.i176, label %else.i

ifend.i.i176:                                     ; preds = %while.entry.i173
  %memberidx2.i.i174 = getelementptr inbounds %string, ptr %290, i64 0, i32 1
  %293 = load ptr, ptr %memberidx2.i.i174, align 8
  %294 = load ptr, ptr %memberidx.i.i, align 8
  %295 = tail call i64 @memcmp(ptr %293, ptr %294, i64 %291)
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %while.end.i, label %ifend.i.i176.else.i_crit_edge

ifend.i.i176.else.i_crit_edge:                    ; preds = %ifend.i.i176
  %.pre344 = load i64, ptr %memberidx.i167, align 4
  %.pre345 = load ptr, ptr %281, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i176
  %.pre346.pre = load ptr, ptr %281, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre346.pre, i64 %hash.0.i
  %.pre347.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre347.pre, null
  br i1 %.not29.i, label %if.entry.i, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i176.else.i_crit_edge, %while.entry.i173
  %297 = phi ptr [ %.pre345, %ifend.i.i176.else.i_crit_edge ], [ %287, %while.entry.i173 ]
  %298 = phi i64 [ %.pre344, %ifend.i.i176.else.i_crit_edge ], [ %288, %while.entry.i173 ]
  %299 = add i64 %hash.0.i, 1
  %300 = srem i64 %299, %298
  %ptridx7.i = getelementptr inbounds ptr, ptr %297, i64 %300
  %301 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %301, null
  br i1 %.not30.i, label %if.entry.i, label %while.entry.i173

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre347.pre, i64 0, i32 1
  %302 = load ptr, ptr %memberidx15.i, align 8
  %303 = icmp eq ptr %302, null
  br i1 %303, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %else.i, %if.entry35, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %304 = load ptr, ptr %280, align 8
  %memberidx1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %304, i64 0, i32 5
  %305 = load ptr, ptr %memberidx1.i, align 8
  %306 = tail call ptr %305(ptr nonnull %280)
  %307 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %306, ptr nonnull @26)
  %308 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %308, ptr nonnull %280, ptr %307)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_var_expr_mem(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %4)
  %6 = icmp eq ptr %5, null
  br i1 %6, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  %7 = tail call ptr @malloc(i32 360)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %7, ptr noundef nonnull align 8 dereferenceable(45) @229, i64 45, i1 false)
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %8, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  store ptr %7, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  store i64 45, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 3
  store i64 45, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %9 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %10 = tail call ptr %9(ptr nonnull %8)
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @210, ptr %10)
  %12 = load ptr, ptr %3, align 8
  %13 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i2 = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i2, align 8
  %memberidx1.i.i3 = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i.i3, align 4
  %memberidx2.i.i4 = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i.i4, align 4
  call void @free(ptr %10)
  %14 = load ptr, ptr %13, align 8
  %memberidx.i.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %14, i64 0, i32 3
  %15 = load ptr, ptr %memberidx.i.i.i, align 8
  %16 = call ptr %15(ptr nonnull %13)
  %17 = load i64, ptr %memberidx1.i.i3, align 4
  call void @write(i64 1, ptr %16, i64 %17)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  ret ptr %5
}

define internal fastcc ptr @CodeGen_get_index_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 5
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %4)
  %memberidx1 = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %7 = load ptr, ptr %memberidx2, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 15
  br i1 %9, label %true_block, label %false_block

true_block:                                       ; preds = %3
  %memberidx3 = getelementptr inbounds %PointerType, ptr %7, i64 0, i32 1
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %10, i1 true)
  br label %end

false_block:                                      ; preds = %3
  %12 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %7, i1 true)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %11, %true_block ], [ %12, %false_block ]
  %13 = load i64, ptr %7, align 4
  %14 = icmp eq i64 %13, 16
  br i1 %14, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend, %CodeGen_get_expr_mem.exit
  %common.ret.op = phi ptr [ %24, %CodeGen_get_expr_mem.exit ], [ %27, %ifend ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %end
  %indices = alloca [2 x ptr], align 8
  %15 = tail call ptr @LLVMIntType(i64 64)
  %16 = tail call ptr @LLVMConstInt(ptr %15, i64 0, i1 false)
  store ptr %16, ptr %indices, align 8
  %17 = getelementptr inbounds ptr, ptr %indices, i64 1
  store ptr %5, ptr %17, align 8
  %18 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Expression, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  switch i64 %19, label %ifend8.i [
    i64 7, label %if.entry.i
    i64 13, label %if.entry2.i
    i64 12, label %if.entry6.i
  ]

if.entry.i:                                       ; preds = %if.entry
  %20 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %18)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry
  %21 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %18)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry
  %22 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %18, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry
  %23 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %18)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i = phi ptr [ %20, %if.entry.i ], [ %21, %if.entry2.i ], [ %22, %if.entry6.i ], [ %23, %ifend8.i ]
  %24 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %common.ret.op.i, ptr nonnull %indices, i64 2, ptr nonnull @230)
  br label %common.ret

ifend:                                            ; preds = %end
  %indices_1 = alloca [1 x ptr], align 8
  store ptr %5, ptr %indices_1, align 8
  %25 = load ptr, ptr %memberidx1, align 8
  %26 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %25)
  %27 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %26, ptr nonnull %indices_1, i64 1, ptr nonnull @231)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_member_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %7 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %PropId, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %8)
  %.not.i97 = icmp eq ptr %9, null
  br i1 %.not.i97, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %4
  %memberidx.i99 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %10 = load ptr, ptr %memberidx.i99, align 8
  %memberidx.i.i100 = getelementptr inbounds %Program, ptr %10, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i100, align 8
  %12 = load i64, ptr %8, align 4
  %memberidx.i.i.i101 = getelementptr inbounds %Array_Module_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i.i.i101, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i102 = getelementptr inbounds %Module, ptr %14, i64 0, i32 4
  %15 = load ptr, ptr %memberidx2.i.i102, align 8
  %memberidx3.i.i103 = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %16 = load i64, ptr %memberidx3.i.i103, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %17, i64 %16
  %18 = load ptr, ptr %ptridx.i6.i.i, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %18)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %18)
  %19 = load ptr, ptr %18, align 8
  %20 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %19)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %4, %ifend.i
  %common.ret.op.i98 = phi ptr [ %20, %ifend.i ], [ %9, %4 ]
  %21 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i = getelementptr inbounds %PropId, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %23 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %25 = load i64, ptr %memberidx2.i.i, align 4
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @216, i64 %23, i64 %24, i64 %25)
  %27 = load ptr, ptr %5, align 8
  %28 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %28, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 1
  store ptr %27, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 3
  store i64 %26, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %29 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %30 = call ptr %29(ptr nonnull %28)
  %31 = load i64, ptr %21, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %21, i64 0, i32 2
  %32 = load i64, ptr %memberidx3.i, align 4
  %33 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @232, ptr %30, i64 %31, i64 %32)
  %34 = load ptr, ptr %6, align 8
  %35 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %35, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %35, i64 0, i32 1
  store ptr %34, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %35, i64 0, i32 2
  store i64 %33, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %35, i64 0, i32 3
  store i64 %33, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %30)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %36 = load ptr, ptr %common.ret.op.i98, align 8
  %memberidx4 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i98, i64 0, i32 3
  %37 = load ptr, ptr %memberidx4, align 8
  %38 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %35)
  %memberidx.i44 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %37, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i44, align 4
  %40 = srem i64 %38, %39
  %41 = load ptr, ptr %37, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %41, i64 %40
  %42 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %42, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit, %else.i
  %43 = phi ptr [ %53, %else.i ], [ %41, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %44 = phi i64 [ %54, %else.i ], [ %39, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %45 = phi ptr [ %57, %else.i ], [ %42, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %hash.0.i = phi i64 [ %56, %else.i ], [ %40, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %46 = load ptr, ptr %45, align 8
  %memberidx.i.i45 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  %47 = load i64, ptr %memberidx.i.i45, align 4
  %48 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i = icmp eq i64 %47, %48
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i47 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  %49 = load ptr, ptr %memberidx2.i.i47, align 8
  %50 = load ptr, ptr %memberidx.i.i, align 8
  %51 = call i64 @memcmp(ptr %49, ptr %50, i64 %47)
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i44, align 4
  %.pre113 = load ptr, ptr %37, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre114.pre = load ptr, ptr %37, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre114.pre, i64 %hash.0.i
  %.pre115.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre115.pre, null
  br i1 %.not29.i, label %ifend, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %53 = phi ptr [ %.pre113, %ifend.i.i.else.i_crit_edge ], [ %43, %while.entry.i ]
  %54 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %44, %while.entry.i ]
  %55 = add i64 %hash.0.i, 1
  %56 = srem i64 %55, %54
  %ptridx7.i = getelementptr inbounds ptr, ptr %53, i64 %56
  %57 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %57, null
  br i1 %.not30.i, label %ifend, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre115.pre, i64 0, i32 1
  %58 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %58, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_string_LLVMValueRef____getitem__.exit, %ifend12
  %common.ret.op = phi ptr [ %126, %ifend12 ], [ %58, %Map_string_LLVMValueRef____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %CodeGen_get_or_codegen_class_from_typeid.exit, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %59 = icmp eq ptr %3, null
  br i1 %59, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend
  %memberidx8 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %60 = load ptr, ptr %memberidx8, align 8
  %61 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %60)
  br label %ifend7

ifend7:                                           ; preds = %ifend, %if.entry5
  %ptr.0 = phi ptr [ %61, %if.entry5 ], [ %3, %ifend ]
  %indices_buffer = alloca [2 x ptr], align 8
  %62 = call ptr @LLVMInt32Type()
  %63 = call ptr @LLVMConstInt(ptr %62, i64 0, i1 false)
  store ptr %63, ptr %indices_buffer, align 8
  %64 = getelementptr inbounds ptr, ptr %indices_buffer, i64 1
  store ptr null, ptr %64, align 8
  %memberidx9 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %memberidx9, align 8
  %66 = load i64, ptr %65, align 4
  %67 = icmp eq i64 %66, 17
  br i1 %67, label %else11, label %if.entry10

if.entry10:                                       ; preds = %ifend7
  %memberidx13 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i98, i64 0, i32 5
  %68 = load ptr, ptr %memberidx13, align 8
  %69 = icmp ne ptr %68, null
  %. = zext i1 %69 to i64
  %70 = call ptr @LLVMInt32Type()
  %memberidx14 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i98, i64 0, i32 2
  %71 = load ptr, ptr %memberidx14, align 8
  %72 = call fastcc i64 @Map_string_int__hash_fnc(ptr nonnull %35)
  %memberidx.i48 = getelementptr inbounds %Map_string_int_, ptr %71, i64 0, i32 1
  %73 = load i64, ptr %memberidx.i48, align 4
  %74 = srem i64 %72, %73
  %75 = load ptr, ptr %71, align 8
  %ptridx.i49 = getelementptr inbounds ptr, ptr %75, i64 %74
  %76 = load ptr, ptr %ptridx.i49, align 8
  %.not.i50 = icmp eq ptr %76, null
  br i1 %.not.i50, label %Map_string_int____getitem__.exit, label %while.entry.i56

while.entry.i56:                                  ; preds = %if.entry10, %else.i68
  %77 = phi ptr [ %87, %else.i68 ], [ %75, %if.entry10 ]
  %78 = phi i64 [ %88, %else.i68 ], [ %73, %if.entry10 ]
  %79 = phi ptr [ %91, %else.i68 ], [ %76, %if.entry10 ]
  %hash.0.i51 = phi i64 [ %90, %else.i68 ], [ %74, %if.entry10 ]
  %80 = load ptr, ptr %79, align 8
  %memberidx.i.i53 = getelementptr inbounds %string, ptr %80, i64 0, i32 2
  %81 = load i64, ptr %memberidx.i.i53, align 4
  %82 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i55 = icmp eq i64 %81, %82
  br i1 %.not.i.i55, label %ifend.i.i59, label %else.i68

ifend.i.i59:                                      ; preds = %while.entry.i56
  %memberidx2.i.i57 = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %83 = load ptr, ptr %memberidx2.i.i57, align 8
  %84 = load ptr, ptr %memberidx.i.i, align 8
  %85 = call i64 @memcmp(ptr %83, ptr %84, i64 %81)
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %while.end.i65, label %ifend.i.i59.else.i68_crit_edge

ifend.i.i59.else.i68_crit_edge:                   ; preds = %ifend.i.i59
  %.pre116 = load i64, ptr %memberidx.i48, align 4
  %.pre117 = load ptr, ptr %71, align 8
  br label %else.i68

while.end.i65:                                    ; preds = %ifend.i.i59
  %.pre118.pre = load ptr, ptr %71, align 8
  %ptridx9.i63.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre118.pre, i64 %hash.0.i51
  %.pre119.pre = load ptr, ptr %ptridx9.i63.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i64 = icmp eq ptr %.pre119.pre, null
  br i1 %.not29.i64, label %Map_string_int____getitem__.exit, label %if.entry10.i71

else.i68:                                         ; preds = %ifend.i.i59.else.i68_crit_edge, %while.entry.i56
  %87 = phi ptr [ %.pre117, %ifend.i.i59.else.i68_crit_edge ], [ %77, %while.entry.i56 ]
  %88 = phi i64 [ %.pre116, %ifend.i.i59.else.i68_crit_edge ], [ %78, %while.entry.i56 ]
  %89 = add i64 %hash.0.i51, 1
  %90 = srem i64 %89, %88
  %ptridx7.i66 = getelementptr inbounds ptr, ptr %87, i64 %90
  %91 = load ptr, ptr %ptridx7.i66, align 8
  %.not30.i67 = icmp eq ptr %91, null
  br i1 %.not30.i67, label %Map_string_int____getitem__.exit, label %while.entry.i56

if.entry10.i71:                                   ; preds = %while.end.i65
  %memberidx15.i70 = getelementptr inbounds %MapEntry_string_int_, ptr %.pre119.pre, i64 0, i32 1
  %92 = load i64, ptr %memberidx15.i70, align 4
  br label %Map_string_int____getitem__.exit

Map_string_int____getitem__.exit:                 ; preds = %else.i68, %if.entry10, %while.end.i65, %if.entry10.i71
  %common.ret.op.i69 = phi i64 [ %92, %if.entry10.i71 ], [ 0, %while.end.i65 ], [ 0, %if.entry10 ], [ 0, %else.i68 ]
  %93 = add i64 %common.ret.op.i69, %.
  %94 = call ptr @LLVMConstInt(ptr %70, i64 %93, i1 false)
  store ptr %94, ptr %64, align 8
  br label %ifend12

else11:                                           ; preds = %ifend7
  %95 = call ptr @LLVMInt32Type()
  %96 = call ptr @LLVMConstInt(ptr %95, i64 0, i1 false)
  store ptr %96, ptr %64, align 8
  %97 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %36, ptr %ptr.0, ptr nonnull %indices_buffer, i64 2, ptr nonnull @26)
  %memberidx18 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i98, i64 0, i32 5
  %98 = load ptr, ptr %memberidx18, align 8
  %99 = call ptr @LLVMPointerType(ptr %98, i64 0)
  %100 = call ptr @LLVMBuildLoad2(ptr %1, ptr %99, ptr %97, ptr nonnull @26)
  %101 = call ptr @LLVMInt32Type()
  %memberidx20 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i98, i64 0, i32 1
  %102 = load ptr, ptr %memberidx20, align 8
  %103 = call fastcc i64 @Map_string_int__hash_fnc(ptr nonnull %35)
  %memberidx.i72 = getelementptr inbounds %Map_string_int_, ptr %102, i64 0, i32 1
  %104 = load i64, ptr %memberidx.i72, align 4
  %105 = srem i64 %103, %104
  %106 = load ptr, ptr %102, align 8
  %ptridx.i73 = getelementptr inbounds ptr, ptr %106, i64 %105
  %107 = load ptr, ptr %ptridx.i73, align 8
  %.not.i74 = icmp eq ptr %107, null
  br i1 %.not.i74, label %Map_string_int____getitem__.exit96, label %while.entry.i80

while.entry.i80:                                  ; preds = %else11, %else.i92
  %108 = phi ptr [ %118, %else.i92 ], [ %106, %else11 ]
  %109 = phi i64 [ %119, %else.i92 ], [ %104, %else11 ]
  %110 = phi ptr [ %122, %else.i92 ], [ %107, %else11 ]
  %hash.0.i75 = phi i64 [ %121, %else.i92 ], [ %105, %else11 ]
  %111 = load ptr, ptr %110, align 8
  %memberidx.i.i77 = getelementptr inbounds %string, ptr %111, i64 0, i32 2
  %112 = load i64, ptr %memberidx.i.i77, align 4
  %113 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i79 = icmp eq i64 %112, %113
  br i1 %.not.i.i79, label %ifend.i.i83, label %else.i92

ifend.i.i83:                                      ; preds = %while.entry.i80
  %memberidx2.i.i81 = getelementptr inbounds %string, ptr %111, i64 0, i32 1
  %114 = load ptr, ptr %memberidx2.i.i81, align 8
  %115 = load ptr, ptr %memberidx.i.i, align 8
  %116 = call i64 @memcmp(ptr %114, ptr %115, i64 %112)
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %while.end.i89, label %ifend.i.i83.else.i92_crit_edge

ifend.i.i83.else.i92_crit_edge:                   ; preds = %ifend.i.i83
  %.pre120 = load i64, ptr %memberidx.i72, align 4
  %.pre121 = load ptr, ptr %102, align 8
  br label %else.i92

while.end.i89:                                    ; preds = %ifend.i.i83
  %.pre122.pre = load ptr, ptr %102, align 8
  %ptridx9.i87.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre122.pre, i64 %hash.0.i75
  %.pre123.pre = load ptr, ptr %ptridx9.i87.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i88 = icmp eq ptr %.pre123.pre, null
  br i1 %.not29.i88, label %Map_string_int____getitem__.exit96, label %if.entry10.i95

else.i92:                                         ; preds = %ifend.i.i83.else.i92_crit_edge, %while.entry.i80
  %118 = phi ptr [ %.pre121, %ifend.i.i83.else.i92_crit_edge ], [ %108, %while.entry.i80 ]
  %119 = phi i64 [ %.pre120, %ifend.i.i83.else.i92_crit_edge ], [ %109, %while.entry.i80 ]
  %120 = add i64 %hash.0.i75, 1
  %121 = srem i64 %120, %119
  %ptridx7.i90 = getelementptr inbounds ptr, ptr %118, i64 %121
  %122 = load ptr, ptr %ptridx7.i90, align 8
  %.not30.i91 = icmp eq ptr %122, null
  br i1 %.not30.i91, label %Map_string_int____getitem__.exit96, label %while.entry.i80

if.entry10.i95:                                   ; preds = %while.end.i89
  %memberidx15.i94 = getelementptr inbounds %MapEntry_string_int_, ptr %.pre123.pre, i64 0, i32 1
  %123 = load i64, ptr %memberidx15.i94, align 4
  br label %Map_string_int____getitem__.exit96

Map_string_int____getitem__.exit96:               ; preds = %else.i92, %else11, %while.end.i89, %if.entry10.i95
  %common.ret.op.i93 = phi i64 [ %123, %if.entry10.i95 ], [ 0, %while.end.i89 ], [ 0, %else11 ], [ 0, %else.i92 ]
  %124 = call ptr @LLVMConstInt(ptr %101, i64 %common.ret.op.i93, i1 false)
  store ptr %124, ptr %64, align 8
  %125 = load ptr, ptr %memberidx18, align 8
  br label %ifend12

ifend12:                                          ; preds = %Map_string_int____getitem__.exit96, %Map_string_int____getitem__.exit
  %struct_type.0 = phi ptr [ %36, %Map_string_int____getitem__.exit ], [ %125, %Map_string_int____getitem__.exit96 ]
  %ptr.1 = phi ptr [ %ptr.0, %Map_string_int____getitem__.exit ], [ %100, %Map_string_int____getitem__.exit96 ]
  %126 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %struct_type.0, ptr %ptr.1, ptr nonnull %indices_buffer, i64 2, ptr nonnull @233)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_builtin_array(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
end:
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 3
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %5, i1 false)
  %memberidx1 = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 2
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %9, i1 true)
  %11 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %6, ptr nonnull @26)
  %memberidx2 = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %12 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 2
  %13 = load i64, ptr %memberidx3, align 4
  %14 = tail call i64 @llvm.smax.i64(i64 %13, i64 1)
  %15 = tail call ptr @LLVMIntType(i64 64)
  %16 = tail call ptr @LLVMConstInt(ptr %15, i64 %14, i1 false)
  %17 = tail call ptr @LLVMIntType(i64 64)
  %18 = tail call ptr @LLVMConstInt(ptr %17, i64 %13, i1 false)
  %args = alloca [2 x ptr], align 8
  store ptr %11, ptr %args, align 8
  %19 = getelementptr inbounds ptr, ptr %args, i64 1
  %20 = tail call ptr @LLVMSizeOf(ptr %10)
  %21 = tail call ptr @LLVMConstMul(ptr %16, ptr %20)
  store ptr %21, ptr %19, align 8
  %memberidx.i32 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %22 = load i64, ptr %5, align 4
  %cond57 = icmp eq i64 %22, 21
  br i1 %cond57, label %if.entry.i49, label %get_class_from_type.exit

if.entry.i49:                                     ; preds = %end, %if.entry.i49
  %.tr11.i58 = phi ptr [ %23, %if.entry.i49 ], [ %5, %end ]
  %memberidx1.i48 = getelementptr inbounds %GenericType, ptr %.tr11.i58, i64 0, i32 3
  %23 = load ptr, ptr %memberidx1.i48, align 8
  %24 = load i64, ptr %23, align 4
  %cond = icmp eq i64 %24, 21
  br i1 %cond, label %if.entry.i49, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i49, %end
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %5, i64 0, i32 1
  %25 = load ptr, ptr %memberidx1.i, align 8
  %26 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %25)
  %.not.i33 = icmp eq ptr %26, null
  br i1 %.not.i33, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %27 = load ptr, ptr %memberidx.i32, align 8
  %memberidx.i.i36 = getelementptr inbounds %Program, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx.i.i36, align 8
  %29 = load i64, ptr %25, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %28, i64 0, i32 1
  %30 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %30, i64 %29
  %31 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i37 = getelementptr inbounds %Module, ptr %31, i64 0, i32 4
  %32 = load ptr, ptr %memberidx2.i.i37, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %25, i64 0, i32 2
  %33 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %34, i64 %33
  %35 = load ptr, ptr %ptridx.i6.i.i, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %35)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %35)
  %36 = load ptr, ptr %35, align 8
  %37 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %36)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %37, %ifend.i ], [ %26, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 6
  %38 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %38, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %39 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %38)
  %40 = call ptr @LLVMBuildCall2(ptr %1, ptr %39, ptr nonnull %38, ptr nonnull %args, i64 2, ptr nonnull @26)
  br label %CodeGen_build_constructor_call.exit

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %41 = tail call ptr @malloc(i32 376)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %41, ptr noundef nonnull align 8 dereferenceable(47) @258, i64 47, i1 false)
  %42 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %42, align 8
  %memberidx.i.i38 = getelementptr inbounds %string, ptr %42, i64 0, i32 1
  store ptr %41, ptr %memberidx.i.i38, align 8
  %memberidx1.i.i39 = getelementptr inbounds %string, ptr %42, i64 0, i32 2
  store i64 47, ptr %memberidx1.i.i39, align 4
  %memberidx2.i.i40 = getelementptr inbounds %string, ptr %42, i64 0, i32 3
  store i64 47, ptr %memberidx2.i.i40, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %43 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %44 = tail call ptr %43(ptr nonnull %42)
  %45 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @210, ptr %44)
  %46 = load ptr, ptr %4, align 8
  %47 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %47, align 8
  %memberidx.i.i42 = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  store ptr %46, ptr %memberidx.i.i42, align 8
  %memberidx1.i.i43 = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  store i64 %45, ptr %memberidx1.i.i43, align 4
  %memberidx2.i.i44 = getelementptr inbounds %string, ptr %47, i64 0, i32 3
  store i64 %45, ptr %memberidx2.i.i44, align 4
  call void @free(ptr %44)
  %48 = load ptr, ptr %47, align 8
  %memberidx.i.i.i45 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %48, i64 0, i32 3
  %49 = load ptr, ptr %memberidx.i.i.i45, align 8
  %50 = call ptr %49(ptr nonnull %47)
  %51 = load i64, ptr %memberidx1.i.i43, align 4
  call void @write(i64 1, ptr %50, i64 %51)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %CodeGen_build_constructor_call.exit

CodeGen_build_constructor_call.exit:              ; preds = %if.entry.i, %else.i
  %52 = call ptr @malloc(i32 48)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %52, ptr noundef nonnull align 8 dereferenceable(6) @234, i64 6, i1 false)
  %53 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %53, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  store ptr %52, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %53, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i, align 4
  %54 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %11, ptr nonnull %5, ptr nonnull %53)
  %55 = call ptr @LLVMPointerType(ptr %10, i64 0)
  %56 = call ptr @LLVMBuildLoad2(ptr %1, ptr %55, ptr %54, ptr nonnull @26)
  %57 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %56, ptr %3)
  %58 = call ptr @malloc(i32 48)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %58, ptr noundef nonnull align 8 dereferenceable(6) @235, i64 6, i1 false)
  %59 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %59, align 8
  %memberidx.i.i29 = getelementptr inbounds %string, ptr %59, i64 0, i32 1
  store ptr %58, ptr %memberidx.i.i29, align 8
  %memberidx1.i.i30 = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i30, align 4
  %memberidx2.i.i31 = getelementptr inbounds %string, ptr %59, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i31, align 4
  %60 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %11, ptr nonnull %5, ptr nonnull %59)
  %61 = call ptr @LLVMBuildStore(ptr %1, ptr %18, ptr %60)
  ret ptr %11
}

define internal fastcc void @CodeGen_declare_class(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = tail call ptr @malloc(i32 56)
  %5 = tail call ptr @malloc(i32 24)
  %6 = tail call ptr @malloc(i32 2048)
  store ptr %6, ptr %5, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i92 = phi i64 [ 0, %2 ], [ %8, %for.body.i.i ]
  %7 = load ptr, ptr %5, align 8
  %ptridx.i.i80 = getelementptr inbounds ptr, ptr %7, i64 %i.0.i.i92
  store ptr null, ptr %ptridx.i.i80, align 8
  %8 = add nuw nsw i64 %i.0.i.i92, 1
  %9 = icmp ult i64 %i.0.i.i92, 255
  br i1 %9, label %for.body.i.i, label %Map_string_int__constructor.exit.i

Map_string_int__constructor.exit.i:               ; preds = %for.body.i.i
  %memberidx.i79 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 1
  %memberidx2.i.i81 = getelementptr inbounds %Map_string_int_, ptr %5, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i81, align 4
  %memberidx3.i.i82 = getelementptr inbounds %Map_string_int_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i82, align 4
  store ptr %5, ptr %memberidx.i79, align 8
  %10 = tail call ptr @malloc(i32 24)
  %11 = tail call ptr @malloc(i32 2048)
  store ptr %11, ptr %10, align 8
  br label %for.body.i12.i

for.body.i12.i:                                   ; preds = %Map_string_int__constructor.exit.i, %for.body.i12.i
  %i.0.i9.i91 = phi i64 [ 0, %Map_string_int__constructor.exit.i ], [ %13, %for.body.i12.i ]
  %12 = load ptr, ptr %10, align 8
  %ptridx.i11.i = getelementptr inbounds ptr, ptr %12, i64 %i.0.i9.i91
  store ptr null, ptr %ptridx.i11.i, align 8
  %13 = add nuw nsw i64 %i.0.i9.i91, 1
  %14 = icmp ult i64 %i.0.i9.i91, 255
  br i1 %14, label %for.body.i12.i, label %Map_string_int__constructor.exit15.i

Map_string_int__constructor.exit15.i:             ; preds = %for.body.i12.i
  %memberidx1.i83 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 2
  %memberidx2.i13.i = getelementptr inbounds %Map_string_int_, ptr %10, i64 0, i32 1
  store i64 256, ptr %memberidx2.i13.i, align 4
  %memberidx3.i14.i = getelementptr inbounds %Map_string_int_, ptr %10, i64 0, i32 2
  store i64 0, ptr %memberidx3.i14.i, align 4
  store ptr %10, ptr %memberidx1.i83, align 8
  %15 = tail call ptr @malloc(i32 24)
  %16 = tail call ptr @malloc(i32 2048)
  store ptr %16, ptr %15, align 8
  br label %for.body.i19.i

for.body.i19.i:                                   ; preds = %Map_string_int__constructor.exit15.i, %for.body.i19.i
  %i.0.i16.i90 = phi i64 [ 0, %Map_string_int__constructor.exit15.i ], [ %18, %for.body.i19.i ]
  %17 = load ptr, ptr %15, align 8
  %ptridx.i18.i = getelementptr inbounds ptr, ptr %17, i64 %i.0.i16.i90
  store ptr null, ptr %ptridx.i18.i, align 8
  %18 = add nuw nsw i64 %i.0.i16.i90, 1
  %19 = icmp ult i64 %i.0.i16.i90, 255
  br i1 %19, label %for.body.i19.i, label %CGClassType_constructor.exit

CGClassType_constructor.exit:                     ; preds = %for.body.i19.i
  %memberidx2.i84 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 3
  %memberidx2.i20.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %15, i64 0, i32 1
  store i64 256, ptr %memberidx2.i20.i, align 4
  %memberidx3.i21.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %15, i64 0, i32 2
  store i64 0, ptr %memberidx3.i21.i, align 4
  store ptr %15, ptr %memberidx2.i84, align 8
  %memberidx3.i85 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx3.i85, i8 0, i64 16, i1 false)
  %20 = load ptr, ptr %0, align 8
  %21 = tail call ptr @LLVMGetModuleContext(ptr %20)
  %memberidx2 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2, align 8
  %23 = load ptr, ptr %22, align 8
  %memberidx3 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx3, align 8
  %25 = tail call ptr %24(ptr nonnull %22)
  %26 = tail call ptr @LLVMStructCreateNamed(ptr %21, ptr %25)
  store ptr %26, ptr %4, align 8
  %27 = load ptr, ptr %1, align 8
  %memberidx.i74 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %28 = load ptr, ptr %memberidx.i74, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %29 = load i64, ptr %27, align 4
  %memberidx1.i.i75 = getelementptr inbounds %TypeId, ptr %27, i64 0, i32 1
  %30 = load i64, ptr %memberidx1.i.i75, align 4
  %memberidx2.i.i76 = getelementptr inbounds %TypeId, ptr %27, i64 0, i32 2
  %31 = load i64, ptr %memberidx2.i.i76, align 4
  %32 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @216, i64 %29, i64 %30, i64 %31)
  %33 = load ptr, ptr %3, align 8
  %34 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i.i.i77 = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i.i.i77, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 %32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i78 = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 %32, ptr %memberidx2.i.i.i78, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_string_CGClassType____setitem__(ptr %28, ptr nonnull %34, ptr nonnull %4)
  %35 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMTypeRef_, ptr %35, align 8
  %memberidx.i71 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %35, i64 0, i32 2
  %memberidx1.i72 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %35, i64 0, i32 3
  store i64 8, ptr %memberidx1.i72, align 4
  %memberidx2.i73 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %35, i64 0, i32 1
  %36 = call ptr @malloc(i32 64)
  store ptr %36, ptr %memberidx2.i73, align 8
  store i64 0, ptr %memberidx.i71, align 4
  call fastcc void @CodeGen_declare_static_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1)
  call fastcc void @CodeGen_declare_class_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1, ptr nonnull %35)
  %37 = load ptr, ptr %4, align 8
  %38 = load ptr, ptr %memberidx2.i73, align 8
  %39 = load i64, ptr %memberidx.i71, align 4
  call void @LLVMStructSetBody(ptr %37, ptr %38, i64 %39, i1 true)
  call void @free(ptr %38)
  tail call void @free(ptr %35)
  %memberidx10 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %40 = load ptr, ptr %memberidx10, align 8
  %.not = icmp eq ptr %40, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %CGClassType_constructor.exit
  %memberidx11 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %41 = load ptr, ptr %memberidx11, align 8
  %memberidx.i.i64 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 1
  %42 = load ptr, ptr %memberidx.i.i64, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %41, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i.i.i, align 8
  %44 = load i64, ptr %42, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %43, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %45, i64 %44
  %46 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %46, i64 0, i32 4
  %47 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %42, i64 0, i32 2
  %48 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %49, i64 %48
  %50 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %51 = load i64, ptr %40, align 4
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %if.entry.i67, label %ifend.i

if.entry.i67:                                     ; preds = %if.entry
  %memberidx1.i65 = getelementptr inbounds %Class, ptr %50, i64 0, i32 5
  %53 = load ptr, ptr %memberidx1.i65, align 8
  %memberidx2.i66 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %54 = load i64, ptr %memberidx2.i66, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %53, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %55, i64 %54
  %56 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %56, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx4.i68 = getelementptr inbounds %Class, ptr %50, i64 0, i32 4
  %57 = load ptr, ptr %memberidx4.i68, align 8
  %memberidx5.i69 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %58 = load i64, ptr %memberidx5.i69, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %57, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %59, i64 %58
  %60 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %60, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i67, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i67 ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %61 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %61, align 8
  %memberidx.i61 = getelementptr inbounds %Array_Type_, ptr %61, i64 0, i32 2
  store i64 0, ptr %memberidx.i61, align 4
  %memberidx1.i62 = getelementptr inbounds %Array_Type_, ptr %61, i64 0, i32 3
  store i64 8, ptr %memberidx1.i62, align 4
  %memberidx2.i63 = getelementptr inbounds %Array_Type_, ptr %61, i64 0, i32 1
  %62 = call ptr @malloc(i32 64)
  store ptr %62, ptr %memberidx2.i63, align 8
  %63 = tail call ptr @malloc(i32 16)
  %64 = load ptr, ptr %1, align 8
  store i64 13, ptr %63, align 4
  %memberidx.i60 = getelementptr inbounds %ObjectType, ptr %63, i64 0, i32 1
  store ptr %64, ptr %memberidx.i60, align 8
  store ptr %63, ptr %62, align 8
  store i64 1, ptr %memberidx.i61, align 4
  %memberidx16 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 1
  %65 = load ptr, ptr %memberidx16, align 8
  %66 = call ptr @malloc(i32 25)
  %memberidx.i57 = getelementptr inbounds %Array_Type_, ptr %65, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i57, align 8
  %memberidx1.i58 = getelementptr inbounds %Array_Type_, ptr %65, i64 0, i32 2
  %68 = load i64, ptr %memberidx1.i58, align 4
  store i1 false, ptr %66, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_Type_, ptr %66, i64 0, i32 1
  %memberidx2.i.i59 = getelementptr inbounds %ArrayIterator_Type_, ptr %66, i64 0, i32 3
  store ptr %67, ptr %memberidx2.i.i59, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Type_, ptr %66, i64 0, i32 2
  store i64 %68, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %69 = icmp slt i64 %68, 1
  br i1 %69, label %for.end, label %for.body

else:                                             ; preds = %CGClassType_constructor.exit
  %memberidx23 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 6
  store ptr null, ptr %memberidx23, align 8
  br label %ifend

ifend:                                            ; preds = %else, %for.end
  ret void

for.body:                                         ; preds = %get_class_prop_type.exit, %Array_Type____sl__.exit
  %70 = phi i64 [ %80, %Array_Type____sl__.exit ], [ 1, %get_class_prop_type.exit ]
  %storemerge89.in = phi ptr [ %ptridx.i, %Array_Type____sl__.exit ], [ %67, %get_class_prop_type.exit ]
  %storemerge89 = load ptr, ptr %storemerge89.in, align 8
  %71 = load i64, ptr %memberidx.i61, align 4
  %72 = load i64, ptr %memberidx1.i62, align 4
  %.not.i = icmp slt i64 %71, %72
  br i1 %.not.i, label %for.body.Array_Type____sl__.exit_crit_edge, label %if.entry.i

for.body.Array_Type____sl__.exit_crit_edge:       ; preds = %for.body
  %.pre94 = load ptr, ptr %memberidx2.i63, align 8
  br label %Array_Type____sl__.exit

if.entry.i:                                       ; preds = %for.body
  %73 = shl i64 %72, 1
  store i64 %73, ptr %memberidx1.i62, align 4
  %74 = load ptr, ptr %memberidx2.i63, align 8
  %75 = shl i64 %72, 4
  %76 = call ptr @realloc(ptr %74, i64 %75)
  store ptr %76, ptr %memberidx2.i63, align 8
  %.pre = load i64, ptr %memberidx.i61, align 4
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %for.body.Array_Type____sl__.exit_crit_edge, %if.entry.i
  %77 = phi ptr [ %.pre94, %for.body.Array_Type____sl__.exit_crit_edge ], [ %76, %if.entry.i ]
  %78 = phi i64 [ %71, %for.body.Array_Type____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %79 = add i64 %78, 1
  store i64 %79, ptr %memberidx.i61, align 4
  %ptridx.i52 = getelementptr inbounds ptr, ptr %77, i64 %78
  store ptr %storemerge89, ptr %ptridx.i52, align 8
  %80 = add i64 %70, 1
  %ptridx.i = getelementptr inbounds ptr, ptr %67, i64 %70
  %81 = icmp sgt i64 %80, %68
  br i1 %81, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %Array_Type____sl__.exit
  store i64 %80, ptr %memberidx1.i.i, align 4
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %get_class_prop_type.exit
  tail call void @free(ptr nonnull %66)
  %82 = load ptr, ptr %memberidx16, align 8
  %memberidx.i47 = getelementptr inbounds %Array_Type_, ptr %82, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i47, align 8
  call void @free(ptr %83)
  tail call void @free(ptr %82)
  store ptr %61, ptr %memberidx16, align 8
  %84 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 false)
  %memberidx20 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 6
  %85 = load ptr, ptr %memberidx2, align 8
  %86 = load ptr, ptr %85, align 8
  %memberidx22 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %86, i64 0, i32 5
  %87 = load ptr, ptr %memberidx22, align 8
  %88 = call ptr %87(ptr nonnull %85)
  %89 = alloca ptr, align 8
  %90 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %89, ptr nonnull @261, ptr %88)
  %91 = load ptr, ptr %89, align 8
  %92 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %92, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  store ptr %91, ptr %memberidx.i, align 8
  %memberidx1.i46 = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  store i64 %90, ptr %memberidx1.i46, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %92, i64 0, i32 3
  store i64 %90, ptr %memberidx2.i, align 4
  tail call void @free(ptr %88)
  %93 = load ptr, ptr %0, align 8
  %94 = load ptr, ptr %92, align 8
  %memberidx1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %94, i64 0, i32 5
  %95 = load ptr, ptr %memberidx1.i, align 8
  %96 = call ptr %95(ptr nonnull %92)
  %97 = call ptr @LLVMAddFunction(ptr %93, ptr %96, ptr %84)
  store ptr %97, ptr %memberidx20, align 8
  br label %ifend
}

define internal fastcc void @CodeGen_codegen_del_call(ptr nocapture %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %5, ptr noundef nonnull align 8 dereferenceable(7) @119, i64 7, i1 false)
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %6, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  store ptr %5, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i, align 4
  %7 = tail call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %2, ptr %3, ptr nonnull %6)
  %8 = icmp eq ptr %7, null
  br i1 %8, label %common.ret, label %ifend

common.ret:                                       ; preds = %4, %ifend
  ret void

ifend:                                            ; preds = %4
  %args = alloca [1 x ptr], align 8
  store ptr %2, ptr %args, align 8
  %9 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %7)
  %10 = call ptr @LLVMBuildCall2(ptr %1, ptr %9, ptr nonnull %7, ptr nonnull %args, i64 1, ptr nonnull @26)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_class_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @216, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_string_CGClassType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_string_CGClassType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = srem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %15, null
  br i1 %.not.i, label %Map_string_CGClassType____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %16 = phi ptr [ %26, %else.i ], [ %14, %2 ]
  %17 = phi i64 [ %27, %else.i ], [ %12, %2 ]
  %18 = phi ptr [ %30, %else.i ], [ %15, %2 ]
  %hash.0.i = phi i64 [ %29, %else.i ], [ %13, %2 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i.i1 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i1, align 4
  %21 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %20, %21
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i3 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i.i3, align 8
  %23 = load ptr, ptr %memberidx.i.i, align 8
  %24 = call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre5 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre6.pre = load ptr, ptr %4, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre6.pre, i64 %hash.0.i
  %.pre7.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre7.pre, null
  br i1 %.not29.i, label %Map_string_CGClassType____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %26 = phi ptr [ %.pre5, %ifend.i.i.else.i_crit_edge ], [ %16, %while.entry.i ]
  %27 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %17, %while.entry.i ]
  %28 = add i64 %hash.0.i, 1
  %29 = srem i64 %28, %27
  %ptridx7.i = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %30, null
  br i1 %.not30.i, label %Map_string_CGClassType____getitem__.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %.pre7.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx15.i, align 8
  br label %Map_string_CGClassType____getitem__.exit

Map_string_CGClassType____getitem__.exit:         ; preds = %else.i, %2, %while.end.i, %if.entry10.i
  %common.ret.op.i = phi ptr [ %31, %if.entry10.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_enum_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @216, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_string_CGEnumType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = srem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %15, null
  br i1 %.not.i, label %Map_string_CGEnumType____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %16 = phi ptr [ %26, %else.i ], [ %14, %2 ]
  %17 = phi i64 [ %27, %else.i ], [ %12, %2 ]
  %18 = phi ptr [ %30, %else.i ], [ %15, %2 ]
  %hash.0.i = phi i64 [ %29, %else.i ], [ %13, %2 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i.i1 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i1, align 4
  %21 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %20, %21
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i3 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i.i3, align 8
  %23 = load ptr, ptr %memberidx.i.i, align 8
  %24 = call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre5 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre6.pre = load ptr, ptr %4, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre6.pre, i64 %hash.0.i
  %.pre7.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre7.pre, null
  br i1 %.not29.i, label %Map_string_CGEnumType____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %26 = phi ptr [ %.pre5, %ifend.i.i.else.i_crit_edge ], [ %16, %while.entry.i ]
  %27 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %17, %while.entry.i ]
  %28 = add i64 %hash.0.i, 1
  %29 = srem i64 %28, %27
  %ptridx7.i = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %30, null
  br i1 %.not30.i, label %Map_string_CGEnumType____getitem__.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %.pre7.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx15.i, align 8
  br label %Map_string_CGEnumType____getitem__.exit

Map_string_CGEnumType____getitem__.exit:          ; preds = %else.i, %2, %while.end.i, %if.entry10.i
  %common.ret.op.i = phi ptr [ %31, %if.entry10.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_member_mem_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3, ptr %4) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx, align 8
  %7 = load i64, ptr %3, align 4
  %switch24 = icmp eq i64 %7, 21
  br i1 %switch24, label %if.entry.i17, label %if.entry3.i

if.entry.i17:                                     ; preds = %5, %if.entry.i17
  %.tr11.i25 = phi ptr [ %8, %if.entry.i17 ], [ %3, %5 ]
  %memberidx1.i16 = getelementptr inbounds %GenericType, ptr %.tr11.i25, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1.i16, align 8
  %9 = load i64, ptr %8, align 4
  %switch = icmp eq i64 %9, 21
  br i1 %switch, label %if.entry.i17, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i17, %5
  %.tr11.i.lcssa = phi ptr [ %3, %5 ], [ %8, %if.entry.i17 ]
  %memberidx6.i18 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %10 = load ptr, ptr %memberidx6.i18, align 8
  %memberidx.i.i19 = getelementptr inbounds %Program, ptr %6, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i19, align 8
  %12 = load i64, ptr %10, align 4
  %memberidx.i.i.i20 = getelementptr inbounds %Array_Module_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i.i.i20, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i21 = getelementptr inbounds %Module, ptr %14, i64 0, i32 4
  %15 = load ptr, ptr %memberidx2.i.i21, align 8
  %memberidx3.i.i22 = getelementptr inbounds %TypeId, ptr %10, i64 0, i32 2
  %16 = load i64, ptr %memberidx3.i.i22, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %17, i64 %16
  %18 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %18, i64 0, i32 6
  %19 = load ptr, ptr %memberidx1, align 8
  %20 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %19, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = srem i64 %20, %21
  %23 = load ptr, ptr %19, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %23, i64 %22
  %24 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %24, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %25 = phi ptr [ %35, %else.i ], [ %23, %while.entry.i.preheader ]
  %26 = phi i64 [ %36, %else.i ], [ %21, %while.entry.i.preheader ]
  %27 = phi ptr [ %39, %else.i ], [ %24, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %38, %else.i ], [ %22, %while.entry.i.preheader ]
  %28 = load ptr, ptr %27, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx.i.i, align 4
  %30 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %29, %30
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 1
  %31 = load ptr, ptr %memberidx2.i.i, align 8
  %32 = load ptr, ptr %memberidx3.i.i, align 8
  %33 = tail call i64 @memcmp(ptr %31, ptr %32, i64 %29)
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre26 = load ptr, ptr %19, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre27.pre = load ptr, ptr %19, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre27.pre, i64 %hash.0.i
  %.pre28.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre28.pre, null
  br i1 %.not29.i, label %common.ret, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %35 = phi ptr [ %.pre26, %ifend.i.i.else.i_crit_edge ], [ %25, %while.entry.i ]
  %36 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %26, %while.entry.i ]
  %37 = add i64 %hash.0.i, 1
  %38 = srem i64 %37, %36
  %ptridx7.i = getelementptr inbounds ptr, ptr %35, i64 %38
  %39 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %39, null
  br i1 %.not30.i, label %common.ret, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre28.pre, i64 0, i32 1
  %40 = load ptr, ptr %memberidx15.i, align 8
  %41 = icmp eq ptr %40, null
  br i1 %41, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_string_PropId____getitem__.exit, %get_class_prop_type.exit
  %common.ret.op = phi ptr [ %63, %get_class_prop_type.exit ], [ null, %Map_string_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %42 = load ptr, ptr %memberidx, align 8
  %memberidx.i.i7 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i.i7, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i.i.i, align 8
  %45 = load i64, ptr %43, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %46, i64 %45
  %47 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %47, i64 0, i32 4
  %48 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %43, i64 0, i32 2
  %49 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %50, i64 %49
  %51 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %52 = load i64, ptr %40, align 4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %51, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %55 = load i64, ptr %memberidx2.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %56, i64 %55
  %57 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %57, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %51, i64 0, i32 4
  %58 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %59 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %58, i64 0, i32 1
  %60 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %60, i64 %59
  %61 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %61, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i8 = load ptr, ptr %common.ret.op.in.i, align 8
  %62 = alloca %MemberExpression, align 8
  store i64 8, ptr %62, align 8
  %memberidx.i.i9 = getelementptr inbounds %Expression, ptr %62, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i9, align 4
  %memberidx1.i.i10 = getelementptr inbounds %Expression, ptr %62, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i10, align 8
  %memberidx.i11 = getelementptr inbounds %MemberExpression, ptr %62, i64 0, i32 4
  store ptr null, ptr %memberidx.i11, align 8
  %memberidx1.i12 = getelementptr inbounds %MemberExpression, ptr %62, i64 0, i32 5
  store ptr %40, ptr %memberidx1.i12, align 8
  %memberidx2.i13 = getelementptr inbounds %Expression, ptr %62, i64 0, i32 3
  store ptr %common.ret.op.i8, ptr %memberidx2.i13, align 8
  %63 = call fastcc ptr @CodeGen_get_member_expr_mem(ptr nonnull %0, ptr %1, ptr nonnull %62, ptr %2)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_member_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3, ptr %4) unnamed_addr {
  %6 = tail call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %2, ptr %3, ptr %4)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %5, %get_class_prop_type_with_name.exit
  %common.ret.op = phi ptr [ %64, %get_class_prop_type_with_name.exit ], [ null, %5 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %5
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %memberidx, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i, %ifend
  %.tr11.i = phi ptr [ %3, %ifend ], [ %10, %if.entry.i ]
  %9 = load i64, ptr %.tr11.i, align 4
  switch i64 %9, label %get_class_prop_type_with_name.exit [
    i64 21, label %if.entry.i
    i64 13, label %get_class_from_type.exit
  ]

if.entry.i:                                       ; preds = %tailrecurse.i
  %memberidx1.i = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1.i, align 8
  br label %tailrecurse.i

get_class_from_type.exit:                         ; preds = %tailrecurse.i
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i18 = getelementptr inbounds %Program, ptr %8, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i.i18, align 8
  %13 = load i64, ptr %11, align 4
  %memberidx.i.i.i19 = getelementptr inbounds %Array_Module_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i.i.i19, align 8
  %ptridx.i.i.i20 = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i.i.i20, align 8
  %memberidx2.i.i21 = getelementptr inbounds %Module, ptr %15, i64 0, i32 4
  %16 = load ptr, ptr %memberidx2.i.i21, align 8
  %memberidx3.i.i22 = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i22, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i6.i.i, align 8
  %20 = icmp eq ptr %19, null
  br i1 %20, label %get_class_prop_type_with_name.exit, label %ifend.i

ifend.i:                                          ; preds = %get_class_from_type.exit
  %memberidx.i = getelementptr inbounds %Class, ptr %19, i64 0, i32 6
  %21 = load ptr, ptr %memberidx.i, align 8
  %22 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %4)
  %memberidx.i7 = getelementptr inbounds %Map_string_PropId_, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i7, align 4
  %24 = srem i64 %22, %23
  %25 = load ptr, ptr %21, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %25, i64 %24
  %26 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %26, null
  br i1 %.not.i, label %get_class_prop_type_with_name.exit, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend.i
  %memberidx1.i.i8 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i10 = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %27 = phi ptr [ %37, %else.i ], [ %25, %while.entry.i.preheader ]
  %28 = phi i64 [ %38, %else.i ], [ %23, %while.entry.i.preheader ]
  %29 = phi ptr [ %41, %else.i ], [ %26, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %40, %else.i ], [ %24, %while.entry.i.preheader ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 2
  %31 = load i64, ptr %memberidx.i.i, align 4
  %32 = load i64, ptr %memberidx1.i.i8, align 4
  %.not.i.i = icmp eq i64 %31, %32
  br i1 %.not.i.i, label %ifend.i.i11, label %else.i

ifend.i.i11:                                      ; preds = %while.entry.i
  %memberidx2.i.i9 = getelementptr inbounds %string, ptr %30, i64 0, i32 1
  %33 = load ptr, ptr %memberidx2.i.i9, align 8
  %34 = load ptr, ptr %memberidx3.i.i10, align 8
  %35 = tail call i64 @memcmp(ptr %33, ptr %34, i64 %31)
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %while.end.i, label %ifend.i.i11.else.i_crit_edge

ifend.i.i11.else.i_crit_edge:                     ; preds = %ifend.i.i11
  %.pre = load i64, ptr %memberidx.i7, align 4
  %.pre27 = load ptr, ptr %21, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i11
  %.pre28.pre = load ptr, ptr %21, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre28.pre, i64 %hash.0.i
  %.pre29.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre29.pre, null
  br i1 %.not29.i, label %get_class_prop_type_with_name.exit, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i11.else.i_crit_edge, %while.entry.i
  %37 = phi ptr [ %.pre27, %ifend.i.i11.else.i_crit_edge ], [ %27, %while.entry.i ]
  %38 = phi i64 [ %.pre, %ifend.i.i11.else.i_crit_edge ], [ %28, %while.entry.i ]
  %39 = add i64 %hash.0.i, 1
  %40 = srem i64 %39, %38
  %ptridx7.i = getelementptr inbounds ptr, ptr %37, i64 %40
  %41 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %41, null
  br i1 %.not30.i, label %get_class_prop_type_with_name.exit, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre29.pre, i64 0, i32 1
  %42 = load ptr, ptr %memberidx15.i, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %get_class_prop_type_with_name.exit, label %ifend3.i

ifend3.i:                                         ; preds = %Map_string_PropId____getitem__.exit
  %memberidx.i.i.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i.i.i, align 8
  %45 = load ptr, ptr %memberidx.i.i18, align 8
  %46 = load i64, ptr %44, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %45, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %47, i64 %46
  %48 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %48, i64 0, i32 4
  %49 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %44, i64 0, i32 2
  %50 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %49, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %ptridx.i6.i.i.i.i = getelementptr inbounds ptr, ptr %51, i64 %50
  %52 = load ptr, ptr %ptridx.i6.i.i.i.i, align 8
  %53 = load i64, ptr %42, align 4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend3.i
  %memberidx1.i.i = getelementptr inbounds %Class, ptr %52, i64 0, i32 5
  %55 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %56 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i12.i.i, align 8
  %ptridx.i13.i.i = getelementptr inbounds ptr, ptr %57, i64 %56
  %58 = load ptr, ptr %ptridx.i13.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %58, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend3.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %52, i64 0, i32 4
  %59 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %60 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %59, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i11.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %61, i64 %60
  %62 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %62, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  br label %get_class_prop_type_with_name.exit

get_class_prop_type_with_name.exit:               ; preds = %tailrecurse.i, %else.i, %ifend.i, %while.end.i, %get_class_from_type.exit, %Map_string_PropId____getitem__.exit, %get_class_prop_type.exit.i
  %common.ret.op.i = phi ptr [ %common.ret.op.i.i, %get_class_prop_type.exit.i ], [ null, %get_class_from_type.exit ], [ null, %Map_string_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %ifend.i ], [ null, %else.i ], [ null, %tailrecurse.i ]
  %63 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %common.ret.op.i, i1 true)
  %64 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %63, ptr nonnull %6, ptr nonnull @26)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_for_stmt(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @LLVMAppendBasicBlock(ptr %4, ptr nonnull @251)
  %6 = tail call ptr @LLVMBuildBr(ptr %1, ptr %5)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %5)
  %memberidx1 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1, align 8
  %.not = icmp eq ptr %7, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %7)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %memberidx3 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 2
  %8 = load ptr, ptr %memberidx3, align 8
  %.not87 = icmp eq ptr %8, null
  br i1 %.not87, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %8)
  br label %ifend6

ifend6:                                           ; preds = %ifend, %if.entry4
  %9 = load ptr, ptr %memberidx, align 8
  %10 = tail call ptr @LLVMAppendBasicBlock(ptr %9, ptr nonnull @252)
  %11 = load ptr, ptr %memberidx, align 8
  %12 = tail call ptr @LLVMAppendBasicBlock(ptr %11, ptr nonnull @253)
  %13 = load ptr, ptr %memberidx, align 8
  %14 = tail call ptr @LLVMAppendBasicBlock(ptr %13, ptr nonnull @254)
  %15 = load ptr, ptr %memberidx, align 8
  %16 = tail call ptr @LLVMAppendBasicBlock(ptr %15, ptr nonnull @255)
  %memberidx12 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %memberidx12, align 8
  %memberidx13 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %memberidx13, align 8
  store ptr %16, ptr %memberidx12, align 8
  store ptr %14, ptr %memberidx13, align 8
  %19 = tail call ptr @LLVMBuildBr(ptr %1, ptr %10)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %10)
  %20 = tail call ptr @LLVMInt1Type()
  %21 = tail call ptr @LLVMConstInt(ptr %20, i64 1, i1 false)
  %memberidx16 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %memberidx16, align 8
  %.not88 = icmp eq ptr %22, null
  br i1 %.not88, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend6
  %23 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %22)
  br label %ifend19

ifend19:                                          ; preds = %ifend6, %if.entry17
  %24 = phi ptr [ %21, %ifend6 ], [ %23, %if.entry17 ]
  %25 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %24, ptr %12, ptr %16)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %12)
  %memberidx21 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 5
  %26 = load ptr, ptr %memberidx21, align 8
  %memberidx.i98 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %27 = load i1, ptr %memberidx.i98, align 1
  store i1 false, ptr %memberidx.i98, align 1
  %28 = load ptr, ptr %26, align 8
  %29 = tail call ptr @malloc(i32 25)
  %memberidx.i.i99 = getelementptr inbounds %Array_Statement_, ptr %28, i64 0, i32 1
  %30 = load ptr, ptr %memberidx.i.i99, align 8
  %memberidx1.i.i100 = getelementptr inbounds %Array_Statement_, ptr %28, i64 0, i32 2
  %31 = load i64, ptr %memberidx1.i.i100, align 4
  store i1 false, ptr %29, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %29, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %29, i64 0, i32 3
  store ptr %30, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %29, i64 0, i32 2
  store i64 %31, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %32 = icmp slt i64 %31, 1
  br i1 %32, label %CodeGen_codegen_block.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend19, %for.body.i
  %33 = phi i64 [ %34, %for.body.i ], [ 1, %ifend19 ]
  %statement.0.i107.in = phi ptr [ %ptridx.i14.i, %for.body.i ], [ %30, %ifend19 ]
  %statement.0.i107 = load ptr, ptr %statement.0.i107.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i107)
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx1.i.i.i, align 4
  %ptridx.i14.i = getelementptr inbounds ptr, ptr %30, i64 %33
  %35 = icmp sgt i64 %34, %31
  br i1 %35, label %CodeGen_codegen_block.exit, label %for.body.i

CodeGen_codegen_block.exit:                       ; preds = %for.body.i, %ifend19
  tail call void @free(ptr nonnull %29)
  store i1 %27, ptr %memberidx.i98, align 1
  %36 = load ptr, ptr %memberidx21, align 8
  %memberidx.i = getelementptr inbounds %Block, ptr %36, i64 0, i32 1
  %37 = load i1, ptr %memberidx.i, align 1
  %memberidx1.i = getelementptr inbounds %Block, ptr %36, i64 0, i32 2
  %38 = load i1, ptr %memberidx1.i, align 1
  %39 = or i1 %37, %38
  %memberidx2.i = getelementptr inbounds %Block, ptr %36, i64 0, i32 3
  %40 = load i1, ptr %memberidx2.i, align 1
  %41 = or i1 %39, %40
  br i1 %41, label %ifend25, label %if.entry23

if.entry23:                                       ; preds = %CodeGen_codegen_block.exit
  %42 = tail call ptr @LLVMBuildBr(ptr %1, ptr %14)
  br label %ifend25

ifend25:                                          ; preds = %CodeGen_codegen_block.exit, %if.entry23
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %14)
  %memberidx26 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 4
  %43 = load ptr, ptr %memberidx26, align 8
  %.not89 = icmp eq ptr %43, null
  br i1 %.not89, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend25
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %43)
  br label %ifend29

ifend29:                                          ; preds = %ifend25, %if.entry27
  %44 = tail call ptr @LLVMBuildBr(ptr %1, ptr %10)
  store ptr %17, ptr %memberidx12, align 8
  store ptr %18, ptr %memberidx13, align 8
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %16)
  %45 = load ptr, ptr %memberidx1, align 8
  %.not90 = icmp eq ptr %45, null
  br i1 %.not90, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %ifend29
  %memberidx38 = getelementptr inbounds %VarDeclaration, ptr %45, i64 0, i32 2
  %46 = load ptr, ptr %memberidx38, align 8
  %47 = alloca %VarAccessExpression, align 8
  %memberidx39 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %48 = load ptr, ptr %memberidx39, align 8
  %memberidx.i91 = getelementptr inbounds %Program, ptr %48, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i92 = getelementptr inbounds %VarId, ptr %46, i64 0, i32 1
  %50 = load i64, ptr %memberidx1.i92, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %49, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %51, i64 %50
  %52 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i93 = getelementptr inbounds %Module, ptr %52, i64 0, i32 2
  %53 = load ptr, ptr %memberidx2.i93, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %46, i64 0, i32 2
  %54 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Var_, ptr %53, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %55, i64 %54
  %56 = load ptr, ptr %ptridx.i6.i, align 8
  %57 = load ptr, ptr %56, align 8
  store i64 8, ptr %47, align 8
  %memberidx.i.i94 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i94, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %47, i64 0, i32 1
  %memberidx.i95 = getelementptr inbounds %VarAccessExpression, ptr %47, i64 0, i32 4
  store ptr %46, ptr %memberidx.i95, align 8
  %memberidx1.i96 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 3
  store ptr %57, ptr %memberidx1.i96, align 8
  %58 = load i64, ptr %46, align 4
  %59 = icmp eq i64 %58, 2
  store i1 %59, ptr %memberidx1.i.i, align 8
  %60 = call fastcc ptr @CodeGen_codegen_var_access_exp(ptr nonnull %0, ptr %1, ptr nonnull %47)
  %61 = tail call ptr @LLVMBuildFree(ptr %1, ptr %60)
  br label %ifend36

ifend36:                                          ; preds = %ifend29, %if.entry34
  ret void
}

define internal fastcc ptr @CodeGen_codegen_member_exp(ptr nocapture %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %10 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %VarAccessExpression, ptr %10, i64 0, i32 4
  %11 = load ptr, ptr %memberidx1, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %10, i64 0, i32 3
  %12 = load ptr, ptr %memberidx3, align 8
  %13 = load i64, ptr %12, align 4
  %14 = icmp eq i64 %13, 21
  br i1 %14, label %if.entry.i152, label %is_object.exit

if.entry.i152:                                    ; preds = %4, %if.entry.i152
  %.tr5.i = phi ptr [ %15, %if.entry.i152 ], [ %12, %4 ]
  %memberidx1.i151 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %15 = load ptr, ptr %memberidx1.i151, align 8
  %16 = load i64, ptr %15, align 4
  %17 = icmp eq i64 %16, 21
  br i1 %17, label %if.entry.i152, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i152, %4
  %.lcssa.i = phi i64 [ %13, %4 ], [ %16, %if.entry.i152 ]
  %18 = icmp eq i64 %.lcssa.i, 13
  br i1 %18, label %if.entry, label %ifend

if.entry:                                         ; preds = %is_object.exit
  %19 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr %2, ptr %3)
  %memberidx4 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %20 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %21 = load ptr, ptr %memberidx5, align 8
  %memberidx.i.i = getelementptr inbounds %PropId, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %20, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i.i.i, align 8
  %24 = load i64, ptr %22, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %25, i64 %24
  %26 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %26, i64 0, i32 4
  %27 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %28 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %29, i64 %28
  %30 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %31 = load i64, ptr %21, align 4
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %if.entry
  %memberidx1.i = getelementptr inbounds %Class, ptr %30, i64 0, i32 5
  %33 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %21, i64 0, i32 2
  %34 = load i64, ptr %memberidx2.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %35, i64 %34
  %36 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %36, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx4.i = getelementptr inbounds %Class, ptr %30, i64 0, i32 4
  %37 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %21, i64 0, i32 2
  %38 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %37, i64 0, i32 1
  %39 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %39, i64 %38
  %40 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %40, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load i64, ptr %common.ret.op.in.i, align 4
  %41 = icmp eq i64 %common.ret.op.i, 1
  %memberidx6 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %42 = load ptr, ptr %memberidx6, align 8
  %43 = load i64, ptr %42, align 4
  %44 = icmp eq i64 %43, 17
  %45 = and i1 %41, %44
  br i1 %45, label %common.ret, label %ifend9

ifend:                                            ; preds = %is_object.exit
  %memberidx11 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %46 = load ptr, ptr %memberidx11, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9)
  %memberidx.i = getelementptr inbounds %PropId, ptr %46, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  %48 = load i64, ptr %47, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %47, i64 0, i32 1
  %49 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %47, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i.i, align 4
  %51 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @216, i64 %48, i64 %49, i64 %50)
  %52 = load ptr, ptr %8, align 8
  %53 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %53, align 8
  %memberidx.i.i.i54 = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  store ptr %52, ptr %memberidx.i.i.i54, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  store i64 %51, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i55 = getelementptr inbounds %string, ptr %53, i64 0, i32 3
  store i64 %51, ptr %memberidx2.i.i.i55, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  %54 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %55 = call ptr %54(ptr nonnull %53)
  %56 = load i64, ptr %46, align 4
  %memberidx3.i57 = getelementptr inbounds %PropId, ptr %46, i64 0, i32 2
  %57 = load i64, ptr %memberidx3.i57, align 4
  %58 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %9, ptr nonnull @232, ptr %55, i64 %56, i64 %57)
  %59 = load ptr, ptr %9, align 8
  %60 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %60, align 8
  %memberidx.i.i58 = getelementptr inbounds %string, ptr %60, i64 0, i32 1
  store ptr %59, ptr %memberidx.i.i58, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %60, i64 0, i32 2
  store i64 %58, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %60, i64 0, i32 3
  store i64 %58, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %55)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9)
  %61 = load i64, ptr %11, align 4
  switch i64 %61, label %common.ret [
    i64 3, label %if.entry13
    i64 4, label %if.entry29
  ]

common.ret:                                       ; preds = %else.i119, %ifend34, %ifend22, %get_class_prop_visibility.exit, %if.entry10.i122, %while.end.i116, %ifend, %ifend26, %ifend9
  %common.ret.op = phi ptr [ %63, %ifend9 ], [ %127, %ifend26 ], [ null, %ifend ], [ %174, %if.entry10.i122 ], [ null, %while.end.i116 ], [ %19, %get_class_prop_visibility.exit ], [ %common.ret.op.i76157, %ifend22 ], [ null, %ifend34 ], [ null, %else.i119 ]
  ret ptr %common.ret.op

ifend9:                                           ; preds = %get_class_prop_visibility.exit
  %62 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr nonnull %42, i1 true)
  %63 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %62, ptr %19, ptr nonnull @26)
  br label %common.ret

if.entry13:                                       ; preds = %ifend
  %64 = call ptr @malloc(i32 24)
  %memberidx.i59 = getelementptr inbounds %VarId, ptr %11, i64 0, i32 1
  %65 = load i64, ptr %memberidx.i59, align 4
  %memberidx1.i60 = getelementptr inbounds %VarId, ptr %11, i64 0, i32 2
  %66 = load i64, ptr %memberidx1.i60, align 4
  store i64 %65, ptr %64, align 4
  %memberidx1.i.i.i61 = getelementptr inbounds %TypeId, ptr %64, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i61, align 4
  %memberidx2.i.i.i62 = getelementptr inbounds %TypeId, ptr %64, i64 0, i32 2
  store i64 %66, ptr %memberidx2.i.i.i62, align 4
  %67 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr nonnull %64)
  %.not.i133 = icmp eq ptr %67, null
  br i1 %.not.i133, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %ifend18

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry13
  %memberidx.i136 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %68 = load ptr, ptr %memberidx.i136, align 8
  %memberidx.i.i137 = getelementptr inbounds %Program, ptr %68, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i.i137, align 8
  %memberidx.i.i.i138 = getelementptr inbounds %Array_Module_, ptr %69, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i.i138, align 8
  %ptridx.i.i.i139 = getelementptr inbounds ptr, ptr %70, i64 %65
  %71 = load ptr, ptr %ptridx.i.i.i139, align 8
  %memberidx2.i.i140 = getelementptr inbounds %Module, ptr %71, i64 0, i32 4
  %72 = load ptr, ptr %memberidx2.i.i140, align 8
  %memberidx.i5.i.i142 = getelementptr inbounds %Array_Class_, ptr %72, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i5.i.i142, align 8
  %ptridx.i6.i.i143 = getelementptr inbounds ptr, ptr %73, i64 %66
  %74 = load ptr, ptr %ptridx.i6.i.i143, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %74)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %74)
  %75 = load ptr, ptr %74, align 8
  %76 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %75)
  %77 = icmp eq ptr %76, null
  br i1 %77, label %if.entry16, label %ifend18

if.entry16:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %78 = call ptr @malloc(i32 408)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(51) %78, ptr noundef nonnull align 8 dereferenceable(51) @244, i64 51, i1 false)
  %79 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %79, align 8
  %memberidx.i.i63 = getelementptr inbounds %string, ptr %79, i64 0, i32 1
  store ptr %78, ptr %memberidx.i.i63, align 8
  %memberidx1.i.i64 = getelementptr inbounds %string, ptr %79, i64 0, i32 2
  store i64 51, ptr %memberidx1.i.i64, align 4
  %memberidx2.i.i65 = getelementptr inbounds %string, ptr %79, i64 0, i32 3
  store i64 51, ptr %memberidx2.i.i65, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  %80 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %81 = call ptr %80(ptr nonnull %79)
  %82 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %7, ptr nonnull @210, ptr %81)
  %83 = load ptr, ptr %7, align 8
  %84 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %84, align 8
  %memberidx.i.i67 = getelementptr inbounds %string, ptr %84, i64 0, i32 1
  store ptr %83, ptr %memberidx.i.i67, align 8
  %memberidx1.i.i68 = getelementptr inbounds %string, ptr %84, i64 0, i32 2
  store i64 %82, ptr %memberidx1.i.i68, align 4
  %memberidx2.i.i69 = getelementptr inbounds %string, ptr %84, i64 0, i32 3
  store i64 %82, ptr %memberidx2.i.i69, align 4
  call void @free(ptr %81)
  %85 = load ptr, ptr %84, align 8
  %memberidx.i.i.i70 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %85, i64 0, i32 3
  %86 = load ptr, ptr %memberidx.i.i.i70, align 8
  %87 = call ptr %86(ptr nonnull %84)
  %88 = load i64, ptr %memberidx1.i.i68, align 4
  call void @write(i64 1, ptr %87, i64 %88)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  unreachable

ifend18:                                          ; preds = %if.entry13, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i134155 = phi ptr [ %76, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %67, %if.entry13 ]
  %memberidx19 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i134155, i64 0, i32 3
  %89 = load ptr, ptr %memberidx19, align 8
  %90 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %60)
  %memberidx.i72 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %89, i64 0, i32 1
  %91 = load i64, ptr %memberidx.i72, align 4
  %92 = srem i64 %90, %91
  %93 = load ptr, ptr %89, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %93, i64 %92
  %94 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %94, null
  br i1 %.not.i, label %if.entry20, label %while.entry.i

while.entry.i:                                    ; preds = %ifend18, %else.i
  %95 = phi ptr [ %105, %else.i ], [ %93, %ifend18 ]
  %96 = phi i64 [ %106, %else.i ], [ %91, %ifend18 ]
  %97 = phi ptr [ %109, %else.i ], [ %94, %ifend18 ]
  %hash.0.i = phi i64 [ %108, %else.i ], [ %92, %ifend18 ]
  %98 = load ptr, ptr %97, align 8
  %memberidx.i.i73 = getelementptr inbounds %string, ptr %98, i64 0, i32 2
  %99 = load i64, ptr %memberidx.i.i73, align 4
  %100 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i = icmp eq i64 %99, %100
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i75 = getelementptr inbounds %string, ptr %98, i64 0, i32 1
  %101 = load ptr, ptr %memberidx2.i.i75, align 8
  %102 = load ptr, ptr %memberidx.i.i58, align 8
  %103 = call i64 @memcmp(ptr %101, ptr %102, i64 %99)
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre164 = load i64, ptr %memberidx.i72, align 4
  %.pre165 = load ptr, ptr %89, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre166.pre = load ptr, ptr %89, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre166.pre, i64 %hash.0.i
  %.pre167.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre167.pre, null
  br i1 %.not29.i, label %if.entry20, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %105 = phi ptr [ %.pre165, %ifend.i.i.else.i_crit_edge ], [ %95, %while.entry.i ]
  %106 = phi i64 [ %.pre164, %ifend.i.i.else.i_crit_edge ], [ %96, %while.entry.i ]
  %107 = add i64 %hash.0.i, 1
  %108 = srem i64 %107, %106
  %ptridx7.i = getelementptr inbounds ptr, ptr %105, i64 %108
  %109 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %109, null
  br i1 %.not30.i, label %if.entry20, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre167.pre, i64 0, i32 1
  %110 = load ptr, ptr %memberidx15.i, align 8
  %111 = icmp eq ptr %110, null
  br i1 %111, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %else.i, %ifend18, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %112 = call ptr @malloc(i32 472)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(59) %112, ptr noundef nonnull align 8 dereferenceable(59) @245, i64 59, i1 false)
  %113 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %113, align 8
  %memberidx.i.i77 = getelementptr inbounds %string, ptr %113, i64 0, i32 1
  store ptr %112, ptr %memberidx.i.i77, align 8
  %memberidx1.i.i78 = getelementptr inbounds %string, ptr %113, i64 0, i32 2
  store i64 59, ptr %memberidx1.i.i78, align 4
  %memberidx2.i.i79 = getelementptr inbounds %string, ptr %113, i64 0, i32 3
  store i64 59, ptr %memberidx2.i.i79, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %114 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %115 = call ptr %114(ptr nonnull %113)
  %116 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @210, ptr %115)
  %117 = load ptr, ptr %6, align 8
  %118 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %118, align 8
  %memberidx.i.i81 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  store ptr %117, ptr %memberidx.i.i81, align 8
  %memberidx1.i.i82 = getelementptr inbounds %string, ptr %118, i64 0, i32 2
  store i64 %116, ptr %memberidx1.i.i82, align 4
  %memberidx2.i.i83 = getelementptr inbounds %string, ptr %118, i64 0, i32 3
  store i64 %116, ptr %memberidx2.i.i83, align 4
  call void @free(ptr %115)
  %119 = load ptr, ptr %118, align 8
  %memberidx.i.i.i84 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %119, i64 0, i32 3
  %120 = load ptr, ptr %memberidx.i.i.i84, align 8
  %121 = call ptr %120(ptr nonnull %118)
  %122 = load i64, ptr %memberidx1.i.i82, align 4
  call void @write(i64 1, ptr %121, i64 %122)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  br label %ifend22

ifend22:                                          ; preds = %Map_string_LLVMValueRef____getitem__.exit, %if.entry20
  %common.ret.op.i76157 = phi ptr [ %110, %Map_string_LLVMValueRef____getitem__.exit ], [ null, %if.entry20 ]
  %memberidx23 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %123 = load ptr, ptr %memberidx23, align 8
  %124 = load i64, ptr %123, align 4
  %125 = icmp eq i64 %124, 17
  br i1 %125, label %common.ret, label %ifend26

ifend26:                                          ; preds = %ifend22
  %126 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %123, i1 true)
  %127 = call ptr @LLVMBuildLoad2(ptr %1, ptr %126, ptr %common.ret.op.i76157, ptr nonnull @26)
  br label %common.ret

if.entry29:                                       ; preds = %ifend
  %128 = call ptr @malloc(i32 24)
  %memberidx.i86 = getelementptr inbounds %VarId, ptr %11, i64 0, i32 1
  %129 = load i64, ptr %memberidx.i86, align 4
  %memberidx1.i87 = getelementptr inbounds %VarId, ptr %11, i64 0, i32 2
  %130 = load i64, ptr %memberidx1.i87, align 4
  store i64 %129, ptr %128, align 4
  %memberidx1.i.i.i88 = getelementptr inbounds %TypeId, ptr %128, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i88, align 4
  %memberidx2.i.i.i89 = getelementptr inbounds %TypeId, ptr %128, i64 0, i32 2
  store i64 %130, ptr %memberidx2.i.i.i89, align 4
  %131 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr nonnull %128)
  %.not.i124 = icmp eq ptr %131, null
  br i1 %.not.i124, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %ifend34

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry29
  %memberidx.i127 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %132 = load ptr, ptr %memberidx.i127, align 8
  %memberidx.i.i128 = getelementptr inbounds %Program, ptr %132, i64 0, i32 1
  %133 = load ptr, ptr %memberidx.i.i128, align 8
  %memberidx.i.i.i129 = getelementptr inbounds %Array_Module_, ptr %133, i64 0, i32 1
  %134 = load ptr, ptr %memberidx.i.i.i129, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %134, i64 %129
  %135 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i130 = getelementptr inbounds %Module, ptr %135, i64 0, i32 6
  %136 = load ptr, ptr %memberidx2.i.i130, align 8
  %memberidx.i5.i.i = getelementptr inbounds %Array_Enum_, ptr %136, i64 0, i32 1
  %137 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %137, i64 %130
  %138 = load ptr, ptr %ptridx.i6.i.i, align 8
  call fastcc void @CodeGen_declare_enum(ptr %0, ptr %138)
  %139 = load ptr, ptr %138, align 8
  %140 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %139)
  %141 = icmp eq ptr %140, null
  br i1 %141, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit
  %142 = call ptr @malloc(i32 400)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %142, ptr noundef nonnull align 8 dereferenceable(50) @246, i64 50, i1 false)
  %143 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %143, align 8
  %memberidx.i.i90 = getelementptr inbounds %string, ptr %143, i64 0, i32 1
  store ptr %142, ptr %memberidx.i.i90, align 8
  %memberidx1.i.i91 = getelementptr inbounds %string, ptr %143, i64 0, i32 2
  store i64 50, ptr %memberidx1.i.i91, align 4
  %memberidx2.i.i92 = getelementptr inbounds %string, ptr %143, i64 0, i32 3
  store i64 50, ptr %memberidx2.i.i92, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %144 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %145 = call ptr %144(ptr nonnull %143)
  %146 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @210, ptr %145)
  %147 = load ptr, ptr %5, align 8
  %148 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %148, align 8
  %memberidx.i.i94 = getelementptr inbounds %string, ptr %148, i64 0, i32 1
  store ptr %147, ptr %memberidx.i.i94, align 8
  %memberidx1.i.i95 = getelementptr inbounds %string, ptr %148, i64 0, i32 2
  store i64 %146, ptr %memberidx1.i.i95, align 4
  %memberidx2.i.i96 = getelementptr inbounds %string, ptr %148, i64 0, i32 3
  store i64 %146, ptr %memberidx2.i.i96, align 4
  call void @free(ptr %145)
  %149 = load ptr, ptr %148, align 8
  %memberidx.i.i.i97 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %149, i64 0, i32 3
  %150 = load ptr, ptr %memberidx.i.i.i97, align 8
  %151 = call ptr %150(ptr nonnull %148)
  %152 = load i64, ptr %memberidx1.i.i95, align 4
  call void @write(i64 1, ptr %151, i64 %152)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  unreachable

ifend34:                                          ; preds = %if.entry29, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i125160 = phi ptr [ %140, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %131, %if.entry29 ]
  %memberidx35 = getelementptr inbounds %CGEnumType, ptr %common.ret.op.i125160, i64 0, i32 1
  %153 = load ptr, ptr %memberidx35, align 8
  %154 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %60)
  %memberidx.i99 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %153, i64 0, i32 1
  %155 = load i64, ptr %memberidx.i99, align 4
  %156 = srem i64 %154, %155
  %157 = load ptr, ptr %153, align 8
  %ptridx.i100 = getelementptr inbounds ptr, ptr %157, i64 %156
  %158 = load ptr, ptr %ptridx.i100, align 8
  %.not.i101 = icmp eq ptr %158, null
  br i1 %.not.i101, label %common.ret, label %while.entry.i107

while.entry.i107:                                 ; preds = %ifend34, %else.i119
  %159 = phi ptr [ %169, %else.i119 ], [ %157, %ifend34 ]
  %160 = phi i64 [ %170, %else.i119 ], [ %155, %ifend34 ]
  %161 = phi ptr [ %173, %else.i119 ], [ %158, %ifend34 ]
  %hash.0.i102 = phi i64 [ %172, %else.i119 ], [ %156, %ifend34 ]
  %162 = load ptr, ptr %161, align 8
  %memberidx.i.i104 = getelementptr inbounds %string, ptr %162, i64 0, i32 2
  %163 = load i64, ptr %memberidx.i.i104, align 4
  %164 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i106 = icmp eq i64 %163, %164
  br i1 %.not.i.i106, label %ifend.i.i110, label %else.i119

ifend.i.i110:                                     ; preds = %while.entry.i107
  %memberidx2.i.i108 = getelementptr inbounds %string, ptr %162, i64 0, i32 1
  %165 = load ptr, ptr %memberidx2.i.i108, align 8
  %166 = load ptr, ptr %memberidx.i.i58, align 8
  %167 = call i64 @memcmp(ptr %165, ptr %166, i64 %163)
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %while.end.i116, label %ifend.i.i110.else.i119_crit_edge

ifend.i.i110.else.i119_crit_edge:                 ; preds = %ifend.i.i110
  %.pre = load i64, ptr %memberidx.i99, align 4
  %.pre161 = load ptr, ptr %153, align 8
  br label %else.i119

while.end.i116:                                   ; preds = %ifend.i.i110
  %.pre162.pre = load ptr, ptr %153, align 8
  %ptridx9.i114.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre162.pre, i64 %hash.0.i102
  %.pre163.pre = load ptr, ptr %ptridx9.i114.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i115 = icmp eq ptr %.pre163.pre, null
  br i1 %.not29.i115, label %common.ret, label %if.entry10.i122

else.i119:                                        ; preds = %ifend.i.i110.else.i119_crit_edge, %while.entry.i107
  %169 = phi ptr [ %.pre161, %ifend.i.i110.else.i119_crit_edge ], [ %159, %while.entry.i107 ]
  %170 = phi i64 [ %.pre, %ifend.i.i110.else.i119_crit_edge ], [ %160, %while.entry.i107 ]
  %171 = add i64 %hash.0.i102, 1
  %172 = srem i64 %171, %170
  %ptridx7.i117 = getelementptr inbounds ptr, ptr %169, i64 %172
  %173 = load ptr, ptr %ptridx7.i117, align 8
  %.not30.i118 = icmp eq ptr %173, null
  br i1 %.not30.i118, label %common.ret, label %while.entry.i107

if.entry10.i122:                                  ; preds = %while.end.i116
  %memberidx15.i121 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre163.pre, i64 0, i32 1
  %174 = load ptr, ptr %memberidx15.i121, align 8
  br label %common.ret
}

define internal fastcc void @CodeGen_declare_static_props(ptr nocapture %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Class, ptr %2, i64 0, i32 7
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr @malloc(i32 25)
  %7 = load ptr, ptr %5, align 8
  %memberidx1.i48 = getelementptr inbounds %Map_string_PropId_, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i48, align 4
  %memberidx2.i49 = getelementptr inbounds %Map_string_PropId_, ptr %5, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i49, align 4
  store i1 false, ptr %6, align 1
  %memberidx1.i.i50 = getelementptr inbounds %MapIterator_string_PropId_, ptr %6, i64 0, i32 1
  store ptr %7, ptr %memberidx1.i.i50, align 8
  %memberidx2.i.i51 = getelementptr inbounds %MapIterator_string_PropId_, ptr %6, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %6, i64 0, i32 3
  store i64 %9, ptr %memberidx3.i.i, align 4
  %10 = add i64 %8, -1
  store i64 %10, ptr %memberidx2.i.i51, align 4
  %11 = icmp sgt i64 %8, 0
  br i1 %11, label %while.entry.i42, label %MapIterator_string_PropId__next.exit47

while.entry.i42:                                  ; preds = %for.entry, %ifend.i46
  %12 = phi i64 [ %15, %ifend.i46 ], [ %10, %for.entry ]
  %13 = phi ptr [ %incdec.ptr.i40, %ifend.i46 ], [ %7, %for.entry ]
  %incdec.ptr.i40 = getelementptr inbounds ptr, ptr %13, i64 1
  %14 = load ptr, ptr %13, align 8
  %.not.i41 = icmp eq ptr %14, null
  br i1 %.not.i41, label %ifend.i46, label %MapIterator_string_PropId__next.exit47.loopexit

ifend.i46:                                        ; preds = %while.entry.i42
  %15 = add i64 %12, -1
  store i64 %15, ptr %memberidx2.i.i51, align 4
  %16 = icmp sgt i64 %12, 0
  br i1 %16, label %while.entry.i42, label %MapIterator_string_PropId__next.exit47.loopexit

MapIterator_string_PropId__next.exit47.loopexit:  ; preds = %ifend.i46, %while.entry.i42
  %17 = phi i64 [ %15, %ifend.i46 ], [ %12, %while.entry.i42 ]
  store ptr %incdec.ptr.i40, ptr %memberidx1.i.i50, align 8
  br label %MapIterator_string_PropId__next.exit47

MapIterator_string_PropId__next.exit47:           ; preds = %MapIterator_string_PropId__next.exit47.loopexit, %for.entry
  %18 = phi i64 [ %17, %MapIterator_string_PropId__next.exit47.loopexit ], [ %10, %for.entry ]
  %memberidx1.i.i50.promoted60 = phi ptr [ %incdec.ptr.i40, %MapIterator_string_PropId__next.exit47.loopexit ], [ %7, %for.entry ]
  %storemerge57 = icmp slt i64 %9, 1
  br i1 %storemerge57, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit47
  %memberidx4 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx5 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx11 = getelementptr inbounds %Class, ptr %2, i64 0, i32 4
  %memberidx14 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit
  %19 = phi i64 [ %18, %for.body.lr.ph ], [ %97, %MapIterator_string_PropId__next.exit ]
  %incdec.ptr.i.lcssa62 = phi ptr [ %memberidx1.i.i50.promoted60, %for.body.lr.ph ], [ %incdec.ptr.i.lcssa61, %MapIterator_string_PropId__next.exit ]
  %storemerge5558.in = phi i64 [ %9, %for.body.lr.ph ], [ %storemerge5558, %MapIterator_string_PropId__next.exit ]
  %storemerge5558 = add i64 %storemerge5558.in, -1
  %entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa62, i64 -1
  %entry.0 = load ptr, ptr %entry.0.in, align 8
  %memberidx2 = getelementptr inbounds %MapEntry_string_PropId_, ptr %entry.0, i64 0, i32 1
  %20 = load ptr, ptr %memberidx2, align 8
  %21 = load ptr, ptr %entry.0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i32 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i32, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %23 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %25 = load i64, ptr %memberidx2.i.i, align 4
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @216, i64 %23, i64 %24, i64 %25)
  %27 = load ptr, ptr %3, align 8
  %28 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %28, align 8
  %memberidx.i.i.i33 = getelementptr inbounds %string, ptr %28, i64 0, i32 1
  store ptr %27, ptr %memberidx.i.i.i33, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i34 = getelementptr inbounds %string, ptr %28, i64 0, i32 3
  store i64 %26, ptr %memberidx2.i.i.i34, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %29 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %30 = call ptr %29(ptr nonnull %28)
  %31 = load i64, ptr %20, align 4
  %memberidx3.i36 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 2
  %32 = load i64, ptr %memberidx3.i36, align 4
  %33 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @232, ptr %30, i64 %31, i64 %32)
  %34 = load ptr, ptr %4, align 8
  %35 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %35, align 8
  %memberidx.i.i37 = getelementptr inbounds %string, ptr %35, i64 0, i32 1
  store ptr %34, ptr %memberidx.i.i37, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %35, i64 0, i32 2
  store i64 %33, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %35, i64 0, i32 3
  store i64 %33, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %30)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %36 = load ptr, ptr %memberidx4, align 8
  %37 = load ptr, ptr %memberidx.i32, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i.i.i, align 8
  %39 = load i64, ptr %37, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %40, i64 %39
  %41 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %41, i64 0, i32 4
  %42 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %37, i64 0, i32 2
  %43 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %46 = load i64, ptr %20, align 4
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %if.entry.i, label %ifend.i31

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i29 = getelementptr inbounds %Class, ptr %45, i64 0, i32 5
  %48 = load ptr, ptr %memberidx1.i29, align 8
  %49 = load i64, ptr %memberidx3.i36, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %50, i64 %49
  %51 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %51, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i31:                                        ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %45, i64 0, i32 4
  %52 = load ptr, ptr %memberidx4.i, align 8
  %53 = load i64, ptr %memberidx3.i36, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %54, i64 %53
  %55 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %55, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i31
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i31 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %56 = load i64, ptr %common.ret.op.i, align 4
  %57 = icmp eq i64 %56, 21
  br i1 %57, label %if.entry.i53, label %is_object.exit

if.entry.i53:                                     ; preds = %get_class_prop_type.exit, %if.entry.i53
  %.tr5.i = phi ptr [ %58, %if.entry.i53 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i52 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %58 = load ptr, ptr %memberidx1.i52, align 8
  %59 = load i64, ptr %58, align 4
  %60 = icmp eq i64 %59, 21
  br i1 %60, label %if.entry.i53, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i53, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %56, %get_class_prop_type.exit ], [ %59, %if.entry.i53 ]
  %61 = icmp eq i64 %.lcssa.i, 13
  %62 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %common.ret.op.i, i1 %61)
  %63 = load ptr, ptr %memberidx5, align 8
  %64 = load ptr, ptr %63, align 8
  %memberidx6 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %64, i64 0, i32 5
  %65 = load ptr, ptr %memberidx6, align 8
  %66 = call ptr %65(ptr nonnull %63)
  %67 = load ptr, ptr %21, align 8
  %memberidx7 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %67, i64 0, i32 5
  %68 = load ptr, ptr %memberidx7, align 8
  %69 = call ptr %68(ptr nonnull %21)
  %70 = alloca ptr, align 8
  %71 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %70, ptr nonnull @88, ptr %66, ptr %69)
  %72 = load ptr, ptr %70, align 8
  %73 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %73, align 8
  %memberidx.i26 = getelementptr inbounds %string, ptr %73, i64 0, i32 1
  store ptr %72, ptr %memberidx.i26, align 8
  %memberidx1.i27 = getelementptr inbounds %string, ptr %73, i64 0, i32 2
  store i64 %71, ptr %memberidx1.i27, align 4
  %memberidx2.i28 = getelementptr inbounds %string, ptr %73, i64 0, i32 3
  store i64 %71, ptr %memberidx2.i28, align 4
  tail call void @free(ptr %66)
  tail call void @free(ptr %69)
  %74 = load i64, ptr %20, align 4
  %75 = icmp eq i64 %74, 0
  %76 = load ptr, ptr %0, align 8
  %77 = load ptr, ptr %73, align 8
  %memberidx1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %77, i64 0, i32 5
  %78 = load ptr, ptr %memberidx1.i, align 8
  %79 = call ptr %78(ptr nonnull %73)
  br i1 %75, label %if.entry, label %else

for.end:                                          ; preds = %MapIterator_string_PropId__next.exit, %MapIterator_string_PropId__next.exit47
  tail call void @free(ptr nonnull %6)
  ret void

if.entry:                                         ; preds = %is_object.exit
  %80 = call ptr @LLVMAddFunction(ptr %76, ptr %79, ptr %62)
  br label %ifend

else:                                             ; preds = %is_object.exit
  %81 = call ptr @LLVMAddGlobal(ptr %76, ptr %62, ptr %79)
  %82 = load ptr, ptr %memberidx11, align 8
  %83 = load i64, ptr %memberidx3.i36, align 4
  %memberidx.i25 = getelementptr inbounds %Array_ClassField_, ptr %82, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i25, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %84, i64 %83
  %85 = load ptr, ptr %ptridx.i, align 8
  %memberidx13 = getelementptr inbounds %ClassField, ptr %85, i64 0, i32 5
  %86 = load ptr, ptr %memberidx13, align 8
  %87 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr null, ptr %86)
  call void @LLVMSetInitializer(ptr %81, ptr %87)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %88 = phi ptr [ %81, %else ], [ %80, %if.entry ]
  %89 = load ptr, ptr %memberidx14, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %89, ptr nonnull %35, ptr %88)
  %90 = add i64 %19, -1
  store i64 %90, ptr %memberidx2.i.i51, align 4
  %91 = icmp sgt i64 %19, 0
  br i1 %91, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %ifend, %ifend.i
  %92 = phi i64 [ %95, %ifend.i ], [ %90, %ifend ]
  %93 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa62, %ifend ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %93, i64 1
  %94 = load ptr, ptr %93, align 8
  %.not.i = icmp eq ptr %94, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %95 = add i64 %92, -1
  store i64 %95, ptr %memberidx2.i.i51, align 4
  %96 = icmp sgt i64 %92, 0
  br i1 %96, label %while.entry.i, label %MapIterator_string_PropId__next.exit

MapIterator_string_PropId__next.exit:             ; preds = %while.entry.i, %ifend.i, %ifend
  %97 = phi i64 [ %90, %ifend ], [ %92, %while.entry.i ], [ %95, %ifend.i ]
  %incdec.ptr.i.lcssa61 = phi ptr [ %incdec.ptr.i.lcssa62, %ifend ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge = icmp slt i64 %storemerge5558, 1
  br i1 %storemerge, label %for.end, label %for.body
}

define internal fastcc void @CodeGen_codegen_function(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Function, ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load ptr, ptr %5, align 8
  %memberidx1 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = tail call ptr %7(ptr nonnull %5)
  %9 = load ptr, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %Function, ptr %1, i64 0, i32 4
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %10, i1 false)
  %12 = tail call ptr @LLVMAddFunction(ptr %9, ptr %8, ptr %11)
  %13 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %14 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %13, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i.i, align 4
  %16 = load i64, ptr %13, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %13, i64 0, i32 2
  %17 = load i64, ptr %memberidx2.i.i, align 4
  %18 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @216, i64 %15, i64 %16, i64 %17)
  %19 = load ptr, ptr %4, align 8
  %20 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 %18, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %14, ptr nonnull %20, ptr %12)
  %memberidx5 = getelementptr inbounds %Function, ptr %1, i64 0, i32 6
  %21 = load i1, ptr %memberidx5, align 1
  br i1 %21, label %if.entry, label %ifend

common.ret:                                       ; preds = %CodeGen_codegen_block.exit, %if.entry
  ret void

if.entry:                                         ; preds = %2
  call void @LLVMSetLinkage(ptr %12, i64 0)
  br label %common.ret

ifend:                                            ; preds = %2
  %22 = call ptr @LLVMCreateBuilder()
  %23 = call ptr @LLVMAppendBasicBlock(ptr %12, ptr nonnull @26)
  call void @LLVMPositionBuilderAtEnd(ptr %22, ptr %23)
  %memberidx6 = getelementptr inbounds %Function, ptr %1, i64 0, i32 2
  %24 = load ptr, ptr %memberidx6, align 8
  %memberidx750 = getelementptr inbounds %Array_FunctionArg_, ptr %24, i64 0, i32 2
  %25 = load i64, ptr %memberidx750, align 4
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %for.body, label %for.end

for.body:                                         ; preds = %ifend, %for.body
  %27 = phi ptr [ %48, %for.body ], [ %24, %ifend ]
  %storemerge51 = phi i64 [ %47, %for.body ], [ 0, %ifend ]
  %memberidx.i35 = getelementptr inbounds %Array_FunctionArg_, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx.i35, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %28, i64 %storemerge51
  %29 = load ptr, ptr %ptridx.i, align 8
  %30 = call ptr @LLVMGetParam(ptr %12, i64 %storemerge51)
  %memberidx9 = getelementptr inbounds %Expression, ptr %29, i64 0, i32 3
  %31 = load ptr, ptr %memberidx9, align 8
  %32 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %31, i1 true)
  %memberidx10 = getelementptr inbounds %FunctionArg, ptr %29, i64 0, i32 5
  %33 = load ptr, ptr %memberidx10, align 8
  %34 = load ptr, ptr %33, align 8
  %memberidx11 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %34, i64 0, i32 5
  %35 = load ptr, ptr %memberidx11, align 8
  %36 = call ptr %35(ptr nonnull %33)
  %37 = call ptr @LLVMBuildAlloca(ptr %22, ptr %32, ptr %36)
  %38 = call ptr @LLVMBuildStore(ptr %22, ptr %30, ptr %37)
  %memberidx12 = getelementptr inbounds %FunctionArg, ptr %29, i64 0, i32 4
  %39 = load ptr, ptr %memberidx12, align 8
  %40 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i.i37 = getelementptr inbounds %VarId, ptr %39, i64 0, i32 1
  %41 = load i64, ptr %memberidx.i.i37, align 4
  %42 = load i64, ptr %39, align 4
  %memberidx2.i.i38 = getelementptr inbounds %VarId, ptr %39, i64 0, i32 2
  %43 = load i64, ptr %memberidx2.i.i38, align 4
  %44 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @216, i64 %41, i64 %42, i64 %43)
  %45 = load ptr, ptr %3, align 8
  %46 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i.i39 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i.i39, align 8
  %memberidx1.i.i.i40 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 %44, ptr %memberidx1.i.i.i40, align 4
  %memberidx2.i.i.i41 = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 %44, ptr %memberidx2.i.i.i41, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %40, ptr nonnull %46, ptr %37)
  %47 = add nuw nsw i64 %storemerge51, 1
  %48 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Array_FunctionArg_, ptr %48, i64 0, i32 2
  %49 = load i64, ptr %memberidx7, align 4
  %50 = icmp slt i64 %47, %49
  br i1 %50, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend
  %memberidx13 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %51 = load ptr, ptr %memberidx13, align 8
  store ptr %12, ptr %memberidx13, align 8
  %memberidx15 = getelementptr inbounds %Function, ptr %1, i64 0, i32 3
  %52 = load ptr, ptr %memberidx15, align 8
  %memberidx.i42 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %53 = load i1, ptr %memberidx.i42, align 1
  store i1 false, ptr %memberidx.i42, align 1
  %54 = load ptr, ptr %52, align 8
  %55 = call ptr @malloc(i32 25)
  %memberidx.i.i43 = getelementptr inbounds %Array_Statement_, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i.i43, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Statement_, ptr %54, i64 0, i32 2
  %57 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %55, align 1
  %memberidx1.i.i.i44 = getelementptr inbounds %ArrayIterator_Statement_, ptr %55, i64 0, i32 1
  %memberidx2.i.i.i45 = getelementptr inbounds %ArrayIterator_Statement_, ptr %55, i64 0, i32 3
  store ptr %56, ptr %memberidx2.i.i.i45, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %55, i64 0, i32 2
  store i64 %57, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i44, align 4
  %58 = icmp slt i64 %57, 1
  br i1 %58, label %CodeGen_codegen_block.exit, label %for.body.i

for.body.i:                                       ; preds = %for.end, %for.body.i
  %59 = phi i64 [ %60, %for.body.i ], [ 1, %for.end ]
  %statement.0.i49.in = phi ptr [ %ptridx.i14.i, %for.body.i ], [ %56, %for.end ]
  %statement.0.i49 = load ptr, ptr %statement.0.i49.in, align 8
  call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %22, ptr %statement.0.i49)
  %60 = add i64 %59, 1
  store i64 %60, ptr %memberidx1.i.i.i44, align 4
  %ptridx.i14.i = getelementptr inbounds ptr, ptr %56, i64 %59
  %61 = icmp sgt i64 %60, %57
  br i1 %61, label %CodeGen_codegen_block.exit, label %for.body.i

CodeGen_codegen_block.exit:                       ; preds = %for.body.i, %for.end
  call void @free(ptr nonnull %55)
  store i1 %53, ptr %memberidx.i42, align 1
  call void @LLVMDisposeBuilder(ptr %22)
  store ptr %51, ptr %memberidx13, align 8
  br label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_LLVMTypeRef__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_LLVMTypeRef__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc void @CodeGen_declare_class_props(ptr nocapture %0, ptr nocapture %1, ptr %2, ptr nocapture %3) unnamed_addr {
for.entry:
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMValueRef_, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %7, i64 0, i32 2
  %memberidx1.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %7, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %7, i64 0, i32 1
  %8 = tail call ptr @malloc(i32 64)
  store ptr %8, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMTypeRef_, ptr %9, align 8
  %memberidx.i130 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %9, i64 0, i32 2
  %memberidx1.i131 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %9, i64 0, i32 3
  store i64 8, ptr %memberidx1.i131, align 4
  %memberidx2.i132 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %9, i64 0, i32 1
  %10 = tail call ptr @malloc(i32 64)
  store ptr %10, ptr %memberidx2.i132, align 8
  store i64 0, ptr %memberidx.i130, align 4
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMTypeRef_, ptr %11, align 8
  %memberidx.i133 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %11, i64 0, i32 2
  %memberidx1.i134 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %11, i64 0, i32 3
  store i64 8, ptr %memberidx1.i134, align 4
  %memberidx2.i135 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %11, i64 0, i32 1
  %12 = tail call ptr @malloc(i32 64)
  store ptr %12, ptr %memberidx2.i135, align 8
  store i64 0, ptr %memberidx.i133, align 4
  %memberidx6 = getelementptr inbounds %Class, ptr %2, i64 0, i32 6
  %13 = load ptr, ptr %memberidx6, align 8
  %14 = tail call ptr @malloc(i32 25)
  %15 = load ptr, ptr %13, align 8
  %memberidx1.i136 = getelementptr inbounds %Map_string_PropId_, ptr %13, i64 0, i32 1
  %16 = load i64, ptr %memberidx1.i136, align 4
  %memberidx2.i137 = getelementptr inbounds %Map_string_PropId_, ptr %13, i64 0, i32 2
  %17 = load i64, ptr %memberidx2.i137, align 4
  %memberidx1.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %14, i64 0, i32 1
  store ptr %15, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %14, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %14, i64 0, i32 3
  %18 = add i64 %16, -1
  store i64 %18, ptr %memberidx2.i.i, align 4
  %19 = icmp sgt i64 %16, 0
  br i1 %19, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %20 = phi i64 [ %23, %ifend.i ], [ %18, %for.entry ]
  %21 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %15, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %21, i64 1
  %22 = load ptr, ptr %21, align 8
  %.not.i = icmp eq ptr %22, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %23 = add i64 %20, -1
  store i64 %23, ptr %memberidx2.i.i, align 4
  %24 = icmp sgt i64 %20, 0
  br i1 %24, label %while.entry.i, label %MapIterator_string_PropId__next.exit.loopexit

MapIterator_string_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_PropId__next.exit

MapIterator_string_PropId__next.exit:             ; preds = %MapIterator_string_PropId__next.exit.loopexit, %for.entry
  %storemerge351375 = add i64 %17, -1
  store i64 %storemerge351375, ptr %memberidx3.i.i, align 4
  %storemerge337376 = icmp slt i64 %17, 1
  store i1 %storemerge337376, ptr %14, align 1
  br i1 %storemerge337376, label %for.end.thread, label %for.body.lr.ph

for.end.thread:                                   ; preds = %MapIterator_string_PropId__next.exit
  tail call void @free(ptr nonnull %14)
  br label %for.entry83

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit
  %memberidx10 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx13 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 2
  %memberidx31 = getelementptr inbounds %Class, ptr %2, i64 0, i32 5
  %memberidx37 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx57 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 1
  %memberidx44 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit182
  %.pn = load ptr, ptr %memberidx1.i.i, align 8
  %entry.0.in = getelementptr inbounds ptr, ptr %.pn, i64 -1
  %entry.0 = load ptr, ptr %entry.0.in, align 8
  %memberidx8 = getelementptr inbounds %MapEntry_string_PropId_, ptr %entry.0, i64 0, i32 1
  %25 = load ptr, ptr %memberidx8, align 8
  %26 = load ptr, ptr %entry.0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i140 = getelementptr inbounds %PropId, ptr %25, i64 0, i32 1
  %27 = load ptr, ptr %memberidx.i140, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %28 = load i64, ptr %27, align 4
  %memberidx1.i.i141 = getelementptr inbounds %TypeId, ptr %27, i64 0, i32 1
  %29 = load i64, ptr %memberidx1.i.i141, align 4
  %memberidx2.i.i142 = getelementptr inbounds %TypeId, ptr %27, i64 0, i32 2
  %30 = load i64, ptr %memberidx2.i.i142, align 4
  %31 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @216, i64 %28, i64 %29, i64 %30)
  %32 = load ptr, ptr %5, align 8
  %33 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %33, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %33, i64 0, i32 1
  store ptr %32, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %33, i64 0, i32 2
  store i64 %31, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %33, i64 0, i32 3
  store i64 %31, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %34 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %35 = call ptr %34(ptr nonnull %33)
  %36 = load i64, ptr %25, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %25, i64 0, i32 2
  %37 = load i64, ptr %memberidx3.i, align 4
  %38 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @232, ptr %35, i64 %36, i64 %37)
  %39 = load ptr, ptr %6, align 8
  %40 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 %38, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %40, i64 0, i32 3
  store i64 %38, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %35)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %41 = load ptr, ptr %memberidx10, align 8
  %42 = load ptr, ptr %memberidx.i140, align 8
  %memberidx.i.i.i145 = getelementptr inbounds %Program, ptr %41, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i.i.i145, align 8
  %44 = load i64, ptr %42, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %43, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %45, i64 %44
  %46 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i146 = getelementptr inbounds %Module, ptr %46, i64 0, i32 4
  %47 = load ptr, ptr %memberidx2.i.i.i146, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %42, i64 0, i32 2
  %48 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %49, i64 %48
  %50 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %51 = load i64, ptr %25, align 4
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %get_vtable_index.exit.thread, label %get_vtable_index.exit

get_vtable_index.exit.thread:                     ; preds = %for.body
  %memberidx1.i147 = getelementptr inbounds %Class, ptr %50, i64 0, i32 5
  %53 = load ptr, ptr %memberidx1.i147, align 8
  %54 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %53, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %55, i64 %54
  %56 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i149 = getelementptr inbounds %ClassMethod, ptr %56, i64 0, i32 4
  %common.ret.op.i339 = load ptr, ptr %memberidx3.i149, align 8
  %prop_index340 = alloca i64, align 8
  %memberidx3.i165 = getelementptr inbounds %ClassMethod, ptr %56, i64 0, i32 9
  %common.ret.op.i160348 = load i64, ptr %memberidx3.i165, align 4
  store i64 %common.ret.op.i160348, ptr %prop_index340, align 8
  br label %else

get_vtable_index.exit:                            ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %50, i64 0, i32 4
  %57 = load ptr, ptr %memberidx4.i, align 8
  %58 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %57, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %59, i64 %58
  %60 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %60, i64 0, i32 4
  %common.ret.op.i = load ptr, ptr %memberidx6.i, align 8
  %prop_index = alloca i64, align 8
  %memberidx6.i171 = getelementptr inbounds %ClassField, ptr %60, i64 0, i32 6
  %common.ret.op.i160 = load i64, ptr %memberidx6.i171, align 4
  store i64 %common.ret.op.i160, ptr %prop_index, align 8
  %61 = icmp eq i64 %51, 1
  br i1 %61, label %if.entry, label %else

for.incr:                                         ; preds = %resize_type_array.exit, %resize_type_array.exit293, %if.entry41
  %62 = load i64, ptr %memberidx2.i.i, align 4
  %63 = add i64 %62, -1
  store i64 %63, ptr %memberidx2.i.i, align 4
  %64 = icmp sgt i64 %62, 0
  br i1 %64, label %while.entry.i177.preheader, label %MapIterator_string_PropId__next.exit182

while.entry.i177.preheader:                       ; preds = %for.incr
  %memberidx1.i.i.promoted = load ptr, ptr %memberidx1.i.i, align 8
  br label %while.entry.i177

while.entry.i177:                                 ; preds = %while.entry.i177.preheader, %ifend.i181
  %65 = phi i64 [ %63, %while.entry.i177.preheader ], [ %68, %ifend.i181 ]
  %66 = phi ptr [ %memberidx1.i.i.promoted, %while.entry.i177.preheader ], [ %incdec.ptr.i175, %ifend.i181 ]
  %incdec.ptr.i175 = getelementptr inbounds ptr, ptr %66, i64 1
  %67 = load ptr, ptr %66, align 8
  %.not.i176 = icmp eq ptr %67, null
  br i1 %.not.i176, label %ifend.i181, label %MapIterator_string_PropId__next.exit182.loopexit

ifend.i181:                                       ; preds = %while.entry.i177
  %68 = add i64 %65, -1
  store i64 %68, ptr %memberidx2.i.i, align 4
  %69 = icmp sgt i64 %65, 0
  br i1 %69, label %while.entry.i177, label %MapIterator_string_PropId__next.exit182.loopexit

MapIterator_string_PropId__next.exit182.loopexit: ; preds = %ifend.i181, %while.entry.i177
  store ptr %incdec.ptr.i175, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_PropId__next.exit182

MapIterator_string_PropId__next.exit182:          ; preds = %MapIterator_string_PropId__next.exit182.loopexit, %for.incr
  %70 = load i64, ptr %memberidx3.i.i, align 4
  %storemerge351 = add i64 %70, -1
  store i64 %storemerge351, ptr %memberidx3.i.i, align 4
  %storemerge337 = icmp slt i64 %70, 1
  store i1 %storemerge337, ptr %14, align 1
  br i1 %storemerge337, label %for.end, label %for.body

for.end:                                          ; preds = %MapIterator_string_PropId__next.exit182
  %.pre394 = load i64, ptr %memberidx.i130, align 4
  tail call void @free(ptr nonnull %14)
  %71 = icmp sgt i64 %.pre394, 0
  br i1 %71, label %if.entry65, label %for.entry83

if.entry:                                         ; preds = %get_vtable_index.exit
  %72 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 true)
  %73 = load ptr, ptr %memberidx13, align 8
  call fastcc void @Map_string_int____setitem__(ptr %73, ptr nonnull %40, i64 %common.ret.op.i160)
  %74 = load i64, ptr %memberidx.i133, align 4
  %.not.i184356 = icmp sgt i64 %74, %common.ret.op.i160
  br i1 %.not.i184356, label %if.entry.resize_type_array.exit_crit_edge, label %for.body.i.lr.ph

if.entry.resize_type_array.exit_crit_edge:        ; preds = %if.entry
  %.pre = load ptr, ptr %memberidx2.i135, align 8
  br label %resize_type_array.exit

for.body.i.lr.ph:                                 ; preds = %if.entry
  %memberidx1.i134.promoted = load i64, ptr %memberidx1.i134, align 4
  %memberidx2.i135.promoted = load ptr, ptr %memberidx2.i135, align 8
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %Array_LLVMTypeRef____sl__.exit.i
  %75 = phi ptr [ %memberidx2.i135.promoted, %for.body.i.lr.ph ], [ %81, %Array_LLVMTypeRef____sl__.exit.i ]
  %76 = phi i64 [ %memberidx1.i134.promoted, %for.body.i.lr.ph ], [ %82, %Array_LLVMTypeRef____sl__.exit.i ]
  %77 = phi i64 [ %74, %for.body.i.lr.ph ], [ %83, %Array_LLVMTypeRef____sl__.exit.i ]
  %i.0.i357 = phi i64 [ %74, %for.body.i.lr.ph ], [ %84, %Array_LLVMTypeRef____sl__.exit.i ]
  %.not.i.i = icmp slt i64 %77, %76
  br i1 %.not.i.i, label %Array_LLVMTypeRef____sl__.exit.i, label %if.entry.i.i

if.entry.i.i:                                     ; preds = %for.body.i
  %78 = shl i64 %76, 1
  %79 = shl i64 %76, 4
  %80 = call ptr @realloc(ptr %75, i64 %79)
  br label %Array_LLVMTypeRef____sl__.exit.i

Array_LLVMTypeRef____sl__.exit.i:                 ; preds = %if.entry.i.i, %for.body.i
  %81 = phi ptr [ %80, %if.entry.i.i ], [ %75, %for.body.i ]
  %82 = phi i64 [ %78, %if.entry.i.i ], [ %76, %for.body.i ]
  %83 = add i64 %77, 1
  %ptridx.i.i189 = getelementptr inbounds ptr, ptr %81, i64 %77
  store ptr null, ptr %ptridx.i.i189, align 8
  %84 = add i64 %i.0.i357, 1
  %.not.i184 = icmp sgt i64 %84, %common.ret.op.i160
  br i1 %.not.i184, label %for.cond.i.resize_type_array.exit_crit_edge, label %for.body.i

for.cond.i.resize_type_array.exit_crit_edge:      ; preds = %Array_LLVMTypeRef____sl__.exit.i
  store i64 %83, ptr %memberidx.i133, align 4
  store i64 %82, ptr %memberidx1.i134, align 4
  store ptr %81, ptr %memberidx2.i135, align 8
  br label %resize_type_array.exit

resize_type_array.exit:                           ; preds = %if.entry.resize_type_array.exit_crit_edge, %for.cond.i.resize_type_array.exit_crit_edge
  %85 = phi ptr [ %.pre, %if.entry.resize_type_array.exit_crit_edge ], [ %81, %for.cond.i.resize_type_array.exit_crit_edge ]
  %ptridx.i = getelementptr inbounds ptr, ptr %85, i64 %common.ret.op.i160
  store ptr %72, ptr %ptridx.i, align 8
  br label %for.incr

else:                                             ; preds = %get_vtable_index.exit.thread, %get_vtable_index.exit
  %common.ret.op.i341350 = phi ptr [ %common.ret.op.i339, %get_vtable_index.exit.thread ], [ %common.ret.op.i, %get_vtable_index.exit ]
  %prop_index343349 = phi ptr [ %prop_index340, %get_vtable_index.exit.thread ], [ %prop_index, %get_vtable_index.exit ]
  %llvm_method_val = alloca ptr, align 8
  store ptr null, ptr %llvm_method_val, align 8
  %llvm_method_type = alloca ptr, align 8
  %86 = load ptr, ptr %2, align 8
  %87 = icmp eq ptr %42, %86
  br i1 %87, label %if.entry16, label %else17

if.entry16:                                       ; preds = %else
  %88 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %88, align 8
  %memberidx.i191 = getelementptr inbounds %Array_Type_, ptr %88, i64 0, i32 2
  store i64 0, ptr %memberidx.i191, align 4
  %memberidx1.i192 = getelementptr inbounds %Array_Type_, ptr %88, i64 0, i32 3
  store i64 8, ptr %memberidx1.i192, align 4
  %memberidx2.i193 = getelementptr inbounds %Array_Type_, ptr %88, i64 0, i32 1
  %89 = call ptr @malloc(i32 64)
  store ptr %89, ptr %memberidx2.i193, align 8
  %90 = tail call ptr @malloc(i32 16)
  %91 = load ptr, ptr %2, align 8
  store i64 13, ptr %90, align 4
  %memberidx.i194 = getelementptr inbounds %ObjectType, ptr %90, i64 0, i32 1
  store ptr %91, ptr %memberidx.i194, align 8
  store ptr %90, ptr %89, align 8
  store i64 1, ptr %memberidx.i191, align 4
  %memberidx24 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i341350, i64 0, i32 1
  %92 = load ptr, ptr %memberidx24, align 8
  %93 = call ptr @malloc(i32 25)
  %memberidx.i195 = getelementptr inbounds %Array_Type_, ptr %92, i64 0, i32 1
  %94 = load ptr, ptr %memberidx.i195, align 8
  %memberidx1.i196 = getelementptr inbounds %Array_Type_, ptr %92, i64 0, i32 2
  %95 = load i64, ptr %memberidx1.i196, align 4
  %96 = icmp slt i64 %95, 1
  br i1 %96, label %for.end28, label %for.body26

else17:                                           ; preds = %else
  %97 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i341350, i1 false)
  store ptr %97, ptr %llvm_method_type, align 8
  %98 = load ptr, ptr %memberidx10, align 8
  %99 = load ptr, ptr %memberidx.i140, align 8
  %memberidx.i.i205 = getelementptr inbounds %Program, ptr %98, i64 0, i32 1
  %100 = load ptr, ptr %memberidx.i.i205, align 8
  %101 = load i64, ptr %99, align 4
  %memberidx.i.i.i206 = getelementptr inbounds %Array_Module_, ptr %100, i64 0, i32 1
  %102 = load ptr, ptr %memberidx.i.i.i206, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %102, i64 %101
  %103 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i207 = getelementptr inbounds %Module, ptr %103, i64 0, i32 4
  %104 = load ptr, ptr %memberidx2.i.i207, align 8
  %memberidx3.i.i208 = getelementptr inbounds %TypeId, ptr %99, i64 0, i32 2
  %105 = load i64, ptr %memberidx3.i.i208, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %104, i64 0, i32 1
  %106 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %106, i64 %105
  %107 = load ptr, ptr %ptridx.i6.i.i, align 8
  %108 = load ptr, ptr %0, align 8
  %memberidx47 = getelementptr inbounds %Class, ptr %107, i64 0, i32 1
  %109 = load ptr, ptr %memberidx47, align 8
  %110 = load ptr, ptr %109, align 8
  %memberidx48 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx48, align 8
  %112 = call ptr %111(ptr nonnull %109)
  %113 = load ptr, ptr %26, align 8
  %memberidx49 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %113, i64 0, i32 5
  %114 = load ptr, ptr %memberidx49, align 8
  %115 = call ptr %114(ptr nonnull %26)
  %116 = alloca ptr, align 8
  %117 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %116, ptr nonnull @88, ptr %112, ptr %115)
  %118 = load ptr, ptr %116, align 8
  %119 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %119, align 8
  %memberidx.i209 = getelementptr inbounds %string, ptr %119, i64 0, i32 1
  store ptr %118, ptr %memberidx.i209, align 8
  %memberidx1.i210 = getelementptr inbounds %string, ptr %119, i64 0, i32 2
  store i64 %117, ptr %memberidx1.i210, align 4
  %memberidx2.i211 = getelementptr inbounds %string, ptr %119, i64 0, i32 3
  store i64 %117, ptr %memberidx2.i211, align 4
  tail call void @free(ptr %112)
  tail call void @free(ptr %115)
  %120 = load ptr, ptr %119, align 8
  %memberidx50 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %120, i64 0, i32 5
  %121 = load ptr, ptr %memberidx50, align 8
  %122 = call ptr %121(ptr nonnull %119)
  %123 = call ptr @LLVMGetNamedFunction(ptr %108, ptr %122)
  store ptr %123, ptr %llvm_method_val, align 8
  %124 = icmp eq ptr %123, null
  br i1 %124, label %if.entry51, label %ifend18

ifend18:                                          ; preds = %if.entry51, %else17, %get_class_prop_visibility.exit
  %125 = phi ptr [ null, %if.entry51 ], [ %123, %else17 ], [ %168, %get_class_prop_visibility.exit ]
  %126 = phi ptr [ %107, %if.entry51 ], [ %107, %else17 ], [ %2, %get_class_prop_visibility.exit ]
  %127 = load ptr, ptr %memberidx57, align 8
  %128 = load i64, ptr %prop_index343349, align 8
  call fastcc void @Map_string_int____setitem__(ptr %127, ptr nonnull %40, i64 %128)
  %memberidx58 = getelementptr inbounds %Class, ptr %126, i64 0, i32 5
  %129 = load ptr, ptr %memberidx58, align 8
  %130 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i212 = getelementptr inbounds %Array_ClassMethod_, ptr %129, i64 0, i32 1
  %131 = load ptr, ptr %memberidx.i212, align 8
  %ptridx.i213 = getelementptr inbounds ptr, ptr %131, i64 %130
  %132 = load ptr, ptr %ptridx.i213, align 8
  %memberidx60 = getelementptr inbounds %ClassMethod, ptr %132, i64 0, i32 7
  %133 = load i1, ptr %memberidx60, align 1
  br i1 %133, label %ifend63, label %if.entry61

for.body26:                                       ; preds = %if.entry16, %Array_Type____sl__.exit
  %134 = phi i64 [ %144, %Array_Type____sl__.exit ], [ 1, %if.entry16 ]
  %storemerge129362.in = phi ptr [ %ptridx.i225, %Array_Type____sl__.exit ], [ %94, %if.entry16 ]
  %storemerge129362 = load ptr, ptr %storemerge129362.in, align 8
  %135 = load i64, ptr %memberidx.i191, align 4
  %136 = load i64, ptr %memberidx1.i192, align 4
  %.not.i216 = icmp slt i64 %135, %136
  br i1 %.not.i216, label %for.body26.Array_Type____sl__.exit_crit_edge, label %if.entry.i219

for.body26.Array_Type____sl__.exit_crit_edge:     ; preds = %for.body26
  %.pre391 = load ptr, ptr %memberidx2.i193, align 8
  br label %Array_Type____sl__.exit

if.entry.i219:                                    ; preds = %for.body26
  %137 = shl i64 %136, 1
  store i64 %137, ptr %memberidx1.i192, align 4
  %138 = load ptr, ptr %memberidx2.i193, align 8
  %139 = shl i64 %136, 4
  %140 = call ptr @realloc(ptr %138, i64 %139)
  store ptr %140, ptr %memberidx2.i193, align 8
  %.pre390 = load i64, ptr %memberidx.i191, align 4
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %for.body26.Array_Type____sl__.exit_crit_edge, %if.entry.i219
  %141 = phi ptr [ %.pre391, %for.body26.Array_Type____sl__.exit_crit_edge ], [ %140, %if.entry.i219 ]
  %142 = phi i64 [ %135, %for.body26.Array_Type____sl__.exit_crit_edge ], [ %.pre390, %if.entry.i219 ]
  %143 = add i64 %142, 1
  store i64 %143, ptr %memberidx.i191, align 4
  %ptridx.i221 = getelementptr inbounds ptr, ptr %141, i64 %142
  store ptr %storemerge129362, ptr %ptridx.i221, align 8
  %144 = add i64 %134, 1
  %ptridx.i225 = getelementptr inbounds ptr, ptr %94, i64 %134
  %145 = icmp sgt i64 %144, %95
  br i1 %145, label %for.end28, label %for.body26

for.end28:                                        ; preds = %Array_Type____sl__.exit, %if.entry16
  tail call void @free(ptr nonnull %93)
  store ptr %88, ptr %memberidx24, align 8
  %146 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %common.ret.op.i341350, i1 false)
  store ptr %146, ptr %llvm_method_type, align 8
  %147 = load ptr, ptr %memberidx31, align 8
  %148 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i227 = getelementptr inbounds %Array_ClassMethod_, ptr %147, i64 0, i32 1
  %149 = load ptr, ptr %memberidx.i227, align 8
  %ptridx.i228 = getelementptr inbounds ptr, ptr %149, i64 %148
  %150 = load ptr, ptr %ptridx.i228, align 8
  %memberidx33 = getelementptr inbounds %ClassMethod, ptr %150, i64 0, i32 7
  %151 = load i1, ptr %memberidx33, align 1
  br i1 %151, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %for.end28
  %152 = load ptr, ptr %memberidx37, align 8
  %153 = load ptr, ptr %152, align 8
  %memberidx38 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %153, i64 0, i32 5
  %154 = load ptr, ptr %memberidx38, align 8
  %155 = call ptr %154(ptr nonnull %152)
  %156 = load ptr, ptr %26, align 8
  %memberidx39 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %156, i64 0, i32 5
  %157 = load ptr, ptr %memberidx39, align 8
  %158 = call ptr %157(ptr nonnull %26)
  %159 = alloca ptr, align 8
  %160 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %159, ptr nonnull @88, ptr %155, ptr %158)
  %161 = load ptr, ptr %159, align 8
  %162 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %162, align 8
  %memberidx.i229 = getelementptr inbounds %string, ptr %162, i64 0, i32 1
  store ptr %161, ptr %memberidx.i229, align 8
  %memberidx1.i230 = getelementptr inbounds %string, ptr %162, i64 0, i32 2
  store i64 %160, ptr %memberidx1.i230, align 4
  %memberidx2.i231 = getelementptr inbounds %string, ptr %162, i64 0, i32 3
  store i64 %160, ptr %memberidx2.i231, align 4
  tail call void @free(ptr %155)
  tail call void @free(ptr %158)
  %163 = load ptr, ptr %0, align 8
  %164 = load ptr, ptr %162, align 8
  %memberidx1.i232 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %164, i64 0, i32 5
  %165 = load ptr, ptr %memberidx1.i232, align 8
  %166 = call ptr %165(ptr nonnull %162)
  %167 = call ptr @LLVMAddFunction(ptr %163, ptr %166, ptr %146)
  store ptr %167, ptr %llvm_method_val, align 8
  br label %ifend36

ifend36:                                          ; preds = %for.end28, %if.entry34
  %168 = phi ptr [ null, %for.end28 ], [ %167, %if.entry34 ]
  %169 = load ptr, ptr %memberidx10, align 8
  %170 = load ptr, ptr %memberidx.i140, align 8
  %memberidx.i.i.i234 = getelementptr inbounds %Program, ptr %169, i64 0, i32 1
  %171 = load ptr, ptr %memberidx.i.i.i234, align 8
  %172 = load i64, ptr %170, align 4
  %memberidx.i.i.i.i235 = getelementptr inbounds %Array_Module_, ptr %171, i64 0, i32 1
  %173 = load ptr, ptr %memberidx.i.i.i.i235, align 8
  %ptridx.i.i.i.i236 = getelementptr inbounds ptr, ptr %173, i64 %172
  %174 = load ptr, ptr %ptridx.i.i.i.i236, align 8
  %memberidx2.i.i.i237 = getelementptr inbounds %Module, ptr %174, i64 0, i32 4
  %175 = load ptr, ptr %memberidx2.i.i.i237, align 8
  %memberidx3.i.i.i238 = getelementptr inbounds %TypeId, ptr %170, i64 0, i32 2
  %176 = load i64, ptr %memberidx3.i.i.i238, align 4
  %memberidx.i5.i.i.i239 = getelementptr inbounds %Array_Class_, ptr %175, i64 0, i32 1
  %177 = load ptr, ptr %memberidx.i5.i.i.i239, align 8
  %ptridx.i6.i.i.i240 = getelementptr inbounds ptr, ptr %177, i64 %176
  %178 = load ptr, ptr %ptridx.i6.i.i.i240, align 8
  %179 = load i64, ptr %25, align 4
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %if.entry.i248, label %ifend.i254

if.entry.i248:                                    ; preds = %ifend36
  %memberidx1.i243 = getelementptr inbounds %Class, ptr %178, i64 0, i32 5
  %181 = load ptr, ptr %memberidx1.i243, align 8
  %182 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i12.i245 = getelementptr inbounds %Array_ClassMethod_, ptr %181, i64 0, i32 1
  %183 = load ptr, ptr %memberidx.i12.i245, align 8
  %ptridx.i13.i246 = getelementptr inbounds ptr, ptr %183, i64 %182
  %184 = load ptr, ptr %ptridx.i13.i246, align 8
  %memberidx3.i247 = getelementptr inbounds %ClassMethod, ptr %184, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i254:                                       ; preds = %ifend36
  %memberidx4.i249 = getelementptr inbounds %Class, ptr %178, i64 0, i32 4
  %185 = load ptr, ptr %memberidx4.i249, align 8
  %186 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i11.i251 = getelementptr inbounds %Array_ClassField_, ptr %185, i64 0, i32 1
  %187 = load ptr, ptr %memberidx.i11.i251, align 8
  %ptridx.i.i252 = getelementptr inbounds ptr, ptr %187, i64 %186
  %188 = load ptr, ptr %ptridx.i.i252, align 8
  %memberidx6.i253 = getelementptr inbounds %ClassField, ptr %188, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i248, %ifend.i254
  %common.ret.op.in.i241 = phi ptr [ %memberidx3.i247, %if.entry.i248 ], [ %memberidx6.i253, %ifend.i254 ]
  %common.ret.op.i242 = load i64, ptr %common.ret.op.in.i241, align 4
  %189 = icmp eq i64 %common.ret.op.i242, 1
  br i1 %189, label %if.entry41, label %ifend18

if.entry41:                                       ; preds = %get_class_prop_visibility.exit
  %190 = load ptr, ptr %memberidx44, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %190, ptr nonnull %40, ptr %168)
  br label %for.incr

if.entry51:                                       ; preds = %else17
  %191 = load ptr, ptr %memberidx47, align 8
  %192 = load ptr, ptr %191, align 8
  %memberidx55 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %192, i64 0, i32 5
  %193 = load ptr, ptr %memberidx55, align 8
  %194 = call ptr %193(ptr nonnull %191)
  %195 = load ptr, ptr %26, align 8
  %memberidx56 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %195, i64 0, i32 5
  %196 = load ptr, ptr %memberidx56, align 8
  %197 = call ptr %196(ptr nonnull %26)
  %198 = alloca ptr, align 8
  %199 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %198, ptr nonnull @259, ptr %194, ptr %197)
  %200 = load ptr, ptr %198, align 8
  %201 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %201, align 8
  %memberidx.i255 = getelementptr inbounds %string, ptr %201, i64 0, i32 1
  store ptr %200, ptr %memberidx.i255, align 8
  %memberidx1.i256 = getelementptr inbounds %string, ptr %201, i64 0, i32 2
  store i64 %199, ptr %memberidx1.i256, align 4
  %memberidx2.i257 = getelementptr inbounds %string, ptr %201, i64 0, i32 3
  store i64 %199, ptr %memberidx2.i257, align 4
  tail call void @free(ptr %194)
  tail call void @free(ptr %197)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %202 = load ptr, ptr %201, align 8
  %memberidx.i258 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %202, i64 0, i32 5
  %203 = load ptr, ptr %memberidx.i258, align 8
  %204 = call ptr %203(ptr nonnull %201)
  %205 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @210, ptr %204)
  %206 = load ptr, ptr %4, align 8
  %207 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %207, align 8
  %memberidx.i.i259 = getelementptr inbounds %string, ptr %207, i64 0, i32 1
  store ptr %206, ptr %memberidx.i.i259, align 8
  %memberidx1.i.i260 = getelementptr inbounds %string, ptr %207, i64 0, i32 2
  store i64 %205, ptr %memberidx1.i.i260, align 4
  %memberidx2.i.i261 = getelementptr inbounds %string, ptr %207, i64 0, i32 3
  store i64 %205, ptr %memberidx2.i.i261, align 4
  call void @free(ptr %204)
  %208 = load ptr, ptr %207, align 8
  %memberidx.i.i.i262 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %208, i64 0, i32 3
  %209 = load ptr, ptr %memberidx.i.i.i262, align 8
  %210 = call ptr %209(ptr nonnull %207)
  %211 = load i64, ptr %memberidx1.i.i260, align 4
  call void @write(i64 1, ptr %210, i64 %211)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %ifend18

if.entry61:                                       ; preds = %ifend18
  %212 = load i64, ptr %memberidx.i, align 4
  %.not.i266365 = icmp sgt i64 %212, %128
  br i1 %.not.i266365, label %if.entry61.resize_value_array.exit_crit_edge, label %for.body.i271.lr.ph

if.entry61.resize_value_array.exit_crit_edge:     ; preds = %if.entry61
  %.pre393 = load ptr, ptr %memberidx2.i, align 8
  br label %resize_value_array.exit

for.body.i271.lr.ph:                              ; preds = %if.entry61
  %memberidx1.i.promoted = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i.promoted = load ptr, ptr %memberidx2.i, align 8
  br label %for.body.i271

for.body.i271:                                    ; preds = %for.body.i271.lr.ph, %Array_LLVMValueRef____sl__.exit.i
  %213 = phi ptr [ %memberidx2.i.promoted, %for.body.i271.lr.ph ], [ %219, %Array_LLVMValueRef____sl__.exit.i ]
  %214 = phi i64 [ %memberidx1.i.promoted, %for.body.i271.lr.ph ], [ %220, %Array_LLVMValueRef____sl__.exit.i ]
  %215 = phi i64 [ %212, %for.body.i271.lr.ph ], [ %221, %Array_LLVMValueRef____sl__.exit.i ]
  %i.0.i265366 = phi i64 [ %212, %for.body.i271.lr.ph ], [ %222, %Array_LLVMValueRef____sl__.exit.i ]
  %.not.i.i270 = icmp slt i64 %215, %214
  br i1 %.not.i.i270, label %Array_LLVMValueRef____sl__.exit.i, label %if.entry.i.i274

if.entry.i.i274:                                  ; preds = %for.body.i271
  %216 = shl i64 %214, 1
  %217 = shl i64 %214, 4
  %218 = call ptr @realloc(ptr %213, i64 %217)
  br label %Array_LLVMValueRef____sl__.exit.i

Array_LLVMValueRef____sl__.exit.i:                ; preds = %if.entry.i.i274, %for.body.i271
  %219 = phi ptr [ %218, %if.entry.i.i274 ], [ %213, %for.body.i271 ]
  %220 = phi i64 [ %216, %if.entry.i.i274 ], [ %214, %for.body.i271 ]
  %221 = add i64 %215, 1
  %ptridx.i.i276 = getelementptr inbounds ptr, ptr %219, i64 %215
  store ptr null, ptr %ptridx.i.i276, align 8
  %222 = add i64 %i.0.i265366, 1
  %.not.i266 = icmp sgt i64 %222, %128
  br i1 %.not.i266, label %for.cond.i267.resize_value_array.exit_crit_edge, label %for.body.i271

for.cond.i267.resize_value_array.exit_crit_edge:  ; preds = %Array_LLVMValueRef____sl__.exit.i
  store i64 %221, ptr %memberidx.i, align 4
  store i64 %220, ptr %memberidx1.i, align 4
  store ptr %219, ptr %memberidx2.i, align 8
  %.pre392 = load ptr, ptr %llvm_method_val, align 8
  br label %resize_value_array.exit

resize_value_array.exit:                          ; preds = %if.entry61.resize_value_array.exit_crit_edge, %for.cond.i267.resize_value_array.exit_crit_edge
  %223 = phi ptr [ %219, %for.cond.i267.resize_value_array.exit_crit_edge ], [ %.pre393, %if.entry61.resize_value_array.exit_crit_edge ]
  %224 = phi ptr [ %.pre392, %for.cond.i267.resize_value_array.exit_crit_edge ], [ %125, %if.entry61.resize_value_array.exit_crit_edge ]
  %ptridx.i278 = getelementptr inbounds ptr, ptr %223, i64 %128
  store ptr %224, ptr %ptridx.i278, align 8
  br label %ifend63

ifend63:                                          ; preds = %ifend18, %resize_value_array.exit
  %225 = load i64, ptr %memberidx.i130, align 4
  %.not.i281370 = icmp sgt i64 %225, %128
  br i1 %.not.i281370, label %resize_type_array.exit293, label %for.body.i286.lr.ph

for.body.i286.lr.ph:                              ; preds = %ifend63
  %memberidx1.i131.promoted = load i64, ptr %memberidx1.i131, align 4
  %memberidx2.i132.promoted = load ptr, ptr %memberidx2.i132, align 8
  br label %for.body.i286

for.body.i286:                                    ; preds = %for.body.i286.lr.ph, %Array_LLVMTypeRef____sl__.exit.i292
  %226 = phi ptr [ %memberidx2.i132.promoted, %for.body.i286.lr.ph ], [ %232, %Array_LLVMTypeRef____sl__.exit.i292 ]
  %227 = phi i64 [ %memberidx1.i131.promoted, %for.body.i286.lr.ph ], [ %233, %Array_LLVMTypeRef____sl__.exit.i292 ]
  %228 = phi i64 [ %225, %for.body.i286.lr.ph ], [ %234, %Array_LLVMTypeRef____sl__.exit.i292 ]
  %i.0.i280371 = phi i64 [ %225, %for.body.i286.lr.ph ], [ %235, %Array_LLVMTypeRef____sl__.exit.i292 ]
  %.not.i.i285 = icmp slt i64 %228, %227
  br i1 %.not.i.i285, label %Array_LLVMTypeRef____sl__.exit.i292, label %if.entry.i.i289

if.entry.i.i289:                                  ; preds = %for.body.i286
  %229 = shl i64 %227, 1
  %230 = shl i64 %227, 4
  %231 = call ptr @realloc(ptr %226, i64 %230)
  br label %Array_LLVMTypeRef____sl__.exit.i292

Array_LLVMTypeRef____sl__.exit.i292:              ; preds = %if.entry.i.i289, %for.body.i286
  %232 = phi ptr [ %231, %if.entry.i.i289 ], [ %226, %for.body.i286 ]
  %233 = phi i64 [ %229, %if.entry.i.i289 ], [ %227, %for.body.i286 ]
  %234 = add i64 %228, 1
  %ptridx.i.i291 = getelementptr inbounds ptr, ptr %232, i64 %228
  store ptr null, ptr %ptridx.i.i291, align 8
  %235 = add i64 %i.0.i280371, 1
  %.not.i281 = icmp sgt i64 %235, %128
  br i1 %.not.i281, label %for.cond.i282.resize_type_array.exit293_crit_edge, label %for.body.i286

for.cond.i282.resize_type_array.exit293_crit_edge: ; preds = %Array_LLVMTypeRef____sl__.exit.i292
  store i64 %234, ptr %memberidx.i130, align 4
  store i64 %233, ptr %memberidx1.i131, align 4
  store ptr %232, ptr %memberidx2.i132, align 8
  br label %resize_type_array.exit293

resize_type_array.exit293:                        ; preds = %for.cond.i282.resize_type_array.exit293_crit_edge, %ifend63
  %236 = load ptr, ptr %llvm_method_type, align 8
  %237 = call ptr @LLVMPointerType(ptr %236, i64 0)
  %238 = load ptr, ptr %memberidx2.i132, align 8
  %ptridx.i295 = getelementptr inbounds ptr, ptr %238, i64 %128
  store ptr %237, ptr %ptridx.i295, align 8
  br label %for.incr

if.entry65:                                       ; preds = %for.end
  %239 = load ptr, ptr %memberidx2.i132, align 8
  %240 = call ptr @LLVMStructType(ptr %239, i64 %.pre394, i1 true)
  %memberidx70 = getelementptr inbounds %Class, ptr %2, i64 0, i32 10
  %241 = load i1, ptr %memberidx70, align 1
  br i1 %241, label %ifend73, label %if.entry71

if.entry71:                                       ; preds = %if.entry65
  %memberidx74 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 4
  %242 = load ptr, ptr %0, align 8
  %memberidx76 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %243 = load ptr, ptr %memberidx76, align 8
  %244 = load ptr, ptr %243, align 8
  %memberidx77 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %244, i64 0, i32 5
  %245 = load ptr, ptr %memberidx77, align 8
  %246 = call ptr %245(ptr nonnull %243)
  %247 = alloca ptr, align 8
  %248 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %247, ptr nonnull @260, ptr %246)
  %249 = load ptr, ptr %247, align 8
  %250 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %250, align 8
  %memberidx.i296 = getelementptr inbounds %string, ptr %250, i64 0, i32 1
  store ptr %249, ptr %memberidx.i296, align 8
  %memberidx1.i297 = getelementptr inbounds %string, ptr %250, i64 0, i32 2
  store i64 %248, ptr %memberidx1.i297, align 4
  %memberidx2.i298 = getelementptr inbounds %string, ptr %250, i64 0, i32 3
  store i64 %248, ptr %memberidx2.i298, align 4
  tail call void @free(ptr %246)
  %251 = load ptr, ptr %250, align 8
  %memberidx78 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %251, i64 0, i32 5
  %252 = load ptr, ptr %memberidx78, align 8
  %253 = call ptr %252(ptr nonnull %250)
  %254 = call ptr @LLVMAddGlobal(ptr %242, ptr %240, ptr %253)
  store ptr %254, ptr %memberidx74, align 8
  %255 = load ptr, ptr %memberidx2.i, align 8
  %256 = load i64, ptr %memberidx.i, align 4
  %257 = call ptr @LLVMConstStruct(ptr %255, i64 %256, i1 true)
  %258 = load ptr, ptr %memberidx74, align 8
  call void @LLVMSetInitializer(ptr %258, ptr %257)
  br label %ifend73

ifend73:                                          ; preds = %if.entry65, %if.entry71
  %memberidx82 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 5
  store ptr %240, ptr %memberidx82, align 8
  %259 = call ptr @LLVMPointerType(ptr %240, i64 0)
  %memberidx.i299 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 2
  %260 = load i64, ptr %memberidx.i299, align 4
  %memberidx1.i300 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 3
  %261 = load i64, ptr %memberidx1.i300, align 4
  %.not.i301 = icmp slt i64 %260, %261
  br i1 %.not.i301, label %ifend73.Array_LLVMTypeRef____sl__.exit_crit_edge, label %if.entry.i304

ifend73.Array_LLVMTypeRef____sl__.exit_crit_edge: ; preds = %ifend73
  %memberidx4.i305.phi.trans.insert = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  %.pre396 = load ptr, ptr %memberidx4.i305.phi.trans.insert, align 8
  br label %Array_LLVMTypeRef____sl__.exit

if.entry.i304:                                    ; preds = %ifend73
  %262 = shl i64 %261, 1
  store i64 %262, ptr %memberidx1.i300, align 4
  %memberidx2.i.i303 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  %263 = load ptr, ptr %memberidx2.i.i303, align 8
  %264 = shl i64 %261, 4
  %265 = call ptr @realloc(ptr %263, i64 %264)
  store ptr %265, ptr %memberidx2.i.i303, align 8
  %.pre395 = load i64, ptr %memberidx.i299, align 4
  br label %Array_LLVMTypeRef____sl__.exit

Array_LLVMTypeRef____sl__.exit:                   ; preds = %ifend73.Array_LLVMTypeRef____sl__.exit_crit_edge, %if.entry.i304
  %266 = phi ptr [ %.pre396, %ifend73.Array_LLVMTypeRef____sl__.exit_crit_edge ], [ %265, %if.entry.i304 ]
  %267 = phi i64 [ %260, %ifend73.Array_LLVMTypeRef____sl__.exit_crit_edge ], [ %.pre395, %if.entry.i304 ]
  %268 = add i64 %267, 1
  store i64 %268, ptr %memberidx.i299, align 4
  %ptridx.i306 = getelementptr inbounds ptr, ptr %266, i64 %267
  store ptr %259, ptr %ptridx.i306, align 8
  br label %for.entry83

for.entry83:                                      ; preds = %for.end.thread, %Array_LLVMTypeRef____sl__.exit, %for.end
  %269 = call ptr @malloc(i32 25)
  %270 = load ptr, ptr %memberidx2.i135, align 8
  %271 = load i64, ptr %memberidx.i133, align 4
  store i1 false, ptr %269, align 1
  %memberidx1.i.i310 = getelementptr inbounds %ArrayIterator_LLVMTypeRef_, ptr %269, i64 0, i32 1
  %memberidx2.i.i311 = getelementptr inbounds %ArrayIterator_LLVMTypeRef_, ptr %269, i64 0, i32 3
  store ptr %270, ptr %memberidx2.i.i311, align 8
  %memberidx3.i.i312 = getelementptr inbounds %ArrayIterator_LLVMTypeRef_, ptr %269, i64 0, i32 2
  store i64 %271, ptr %memberidx3.i.i312, align 4
  store i64 1, ptr %memberidx1.i.i310, align 4
  %272 = icmp slt i64 %271, 1
  br i1 %272, label %for.end89, label %for.body87.lr.ph

for.body87.lr.ph:                                 ; preds = %for.entry83
  %memberidx.i317 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 2
  %memberidx1.i318 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 3
  %memberidx2.i.i321 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  br label %for.body87

for.body87:                                       ; preds = %for.body87.lr.ph, %Array_LLVMTypeRef____sl__.exit326
  %273 = phi i64 [ 1, %for.body87.lr.ph ], [ %283, %Array_LLVMTypeRef____sl__.exit326 ]
  %storemerge355.in = phi ptr [ %270, %for.body87.lr.ph ], [ %ptridx.i329, %Array_LLVMTypeRef____sl__.exit326 ]
  %storemerge355 = load ptr, ptr %storemerge355.in, align 8
  %274 = load i64, ptr %memberidx.i317, align 4
  %275 = load i64, ptr %memberidx1.i318, align 4
  %.not.i319 = icmp slt i64 %274, %275
  br i1 %.not.i319, label %for.body87.Array_LLVMTypeRef____sl__.exit326_crit_edge, label %if.entry.i322

for.body87.Array_LLVMTypeRef____sl__.exit326_crit_edge: ; preds = %for.body87
  %.pre398 = load ptr, ptr %memberidx2.i.i321, align 8
  br label %Array_LLVMTypeRef____sl__.exit326

if.entry.i322:                                    ; preds = %for.body87
  %276 = shl i64 %275, 1
  store i64 %276, ptr %memberidx1.i318, align 4
  %277 = load ptr, ptr %memberidx2.i.i321, align 8
  %278 = shl i64 %275, 4
  %279 = call ptr @realloc(ptr %277, i64 %278)
  store ptr %279, ptr %memberidx2.i.i321, align 8
  %.pre397 = load i64, ptr %memberidx.i317, align 4
  br label %Array_LLVMTypeRef____sl__.exit326

Array_LLVMTypeRef____sl__.exit326:                ; preds = %for.body87.Array_LLVMTypeRef____sl__.exit326_crit_edge, %if.entry.i322
  %280 = phi ptr [ %.pre398, %for.body87.Array_LLVMTypeRef____sl__.exit326_crit_edge ], [ %279, %if.entry.i322 ]
  %281 = phi i64 [ %274, %for.body87.Array_LLVMTypeRef____sl__.exit326_crit_edge ], [ %.pre397, %if.entry.i322 ]
  %282 = add i64 %281, 1
  store i64 %282, ptr %memberidx.i317, align 4
  %ptridx.i324 = getelementptr inbounds ptr, ptr %280, i64 %281
  store ptr %storemerge355, ptr %ptridx.i324, align 8
  %283 = add i64 %273, 1
  %ptridx.i329 = getelementptr inbounds ptr, ptr %270, i64 %273
  %284 = icmp sgt i64 %283, %271
  br i1 %284, label %for.cond86.for.end89_crit_edge, label %for.body87

for.cond86.for.end89_crit_edge:                   ; preds = %Array_LLVMTypeRef____sl__.exit326
  store i64 %283, ptr %memberidx1.i.i310, align 4
  br label %for.end89

for.end89:                                        ; preds = %for.cond86.for.end89_crit_edge, %for.entry83
  tail call void @free(ptr nonnull %269)
  call void @free(ptr %270)
  tail call void @free(ptr %11)
  %285 = load ptr, ptr %memberidx2.i132, align 8
  call void @free(ptr %285)
  tail call void @free(ptr %9)
  %286 = load ptr, ptr %memberidx2.i, align 8
  call void @free(ptr %286)
  tail call void @free(ptr %7)
  ret void
}

define internal fastcc ptr @CodeGen_get_or_codegen_var(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %7 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i.i, align 4
  %9 = load i64, ptr %1, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 2
  %10 = load i64, ptr %memberidx2.i.i, align 4
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @216, i64 %8, i64 %9, i64 %10)
  %12 = load ptr, ptr %6, align 8
  %13 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %14 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %13)
  %memberidx.i124 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %7, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i124, align 4
  %16 = srem i64 %14, %15
  %17 = load ptr, ptr %7, align 8
  %ptridx.i125 = getelementptr inbounds ptr, ptr %17, i64 %16
  %18 = load ptr, ptr %ptridx.i125, align 8
  %.not.i = icmp eq ptr %18, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %19 = phi ptr [ %29, %else.i ], [ %17, %2 ]
  %20 = phi i64 [ %30, %else.i ], [ %15, %2 ]
  %21 = phi ptr [ %33, %else.i ], [ %18, %2 ]
  %hash.0.i = phi i64 [ %32, %else.i ], [ %16, %2 ]
  %22 = load ptr, ptr %21, align 8
  %memberidx.i.i126 = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx.i.i126, align 4
  %24 = load i64, ptr %memberidx1.i.i.i, align 4
  %.not.i.i = icmp eq i64 %23, %24
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i128 = getelementptr inbounds %string, ptr %22, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i.i128, align 8
  %26 = load ptr, ptr %memberidx.i.i.i, align 8
  %27 = call i64 @memcmp(ptr %25, ptr %26, i64 %23)
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i124, align 4
  %.pre242 = load ptr, ptr %7, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre243.pre = load ptr, ptr %7, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre243.pre, i64 %hash.0.i
  %.pre244.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre244.pre, null
  br i1 %.not29.i, label %ifend, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %29 = phi ptr [ %.pre242, %ifend.i.i.else.i_crit_edge ], [ %19, %while.entry.i ]
  %30 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %20, %while.entry.i ]
  %31 = add i64 %hash.0.i, 1
  %32 = srem i64 %31, %30
  %ptridx7.i = getelementptr inbounds ptr, ptr %29, i64 %32
  %33 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %33, null
  br i1 %.not30.i, label %ifend, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre244.pre, i64 0, i32 1
  %34 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %34, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %else.i150, %else.i175, %else.i200, %if.entry48, %if.entry30, %if.entry12, %if.entry10.i203, %while.end.i197, %if.entry10.i178, %while.end.i172, %if.entry10.i153, %while.end.i147, %Map_string_LLVMValueRef____getitem__.exit, %for.end43, %ifend18
  %common.ret.op = phi ptr [ null, %ifend18 ], [ null, %for.end43 ], [ %34, %Map_string_LLVMValueRef____getitem__.exit ], [ %81, %if.entry10.i153 ], [ null, %while.end.i147 ], [ %123, %if.entry10.i178 ], [ null, %while.end.i172 ], [ %163, %if.entry10.i203 ], [ null, %while.end.i197 ], [ null, %if.entry12 ], [ null, %if.entry30 ], [ null, %if.entry48 ], [ null, %else.i200 ], [ null, %else.i175 ], [ null, %else.i150 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %2, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %35 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Program, ptr %35, i64 0, i32 1
  %36 = load ptr, ptr %memberidx1, align 8
  %37 = load i64, ptr %memberidx.i.i, align 4
  %memberidx.i71 = getelementptr inbounds %Array_Module_, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i71, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %38, i64 %37
  %39 = load ptr, ptr %ptridx.i, align 8
  %40 = load i64, ptr %1, align 4
  %41 = icmp eq i64 %40, 2
  br i1 %41, label %for.entry, label %ifend6

ifend6:                                           ; preds = %ifend, %for.end
  %42 = phi i64 [ %40, %ifend ], [ %.pr, %for.end ]
  %43 = icmp eq i64 %42, 1
  br i1 %43, label %for.entry19, label %ifend18

for.entry:                                        ; preds = %ifend
  %memberidx7 = getelementptr inbounds %Module, ptr %39, i64 0, i32 8
  %44 = load ptr, ptr %memberidx7, align 8
  %45 = call ptr @malloc(i32 25)
  %memberidx.i72 = getelementptr inbounds %Array_ConstDeclaration_, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i72, align 8
  %memberidx1.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %44, i64 0, i32 2
  %47 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %45, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %45, i64 0, i32 1
  %memberidx2.i.i73 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %45, i64 0, i32 3
  store ptr %46, ptr %memberidx2.i.i73, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %45, i64 0, i32 2
  store i64 %47, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %48 = icmp slt i64 %47, 1
  br i1 %48, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %49 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend14
  %50 = phi i64 [ 1, %for.body.lr.ph ], [ %82, %ifend14 ]
  %storemerge70232.in = phi ptr [ %46, %for.body.lr.ph ], [ %ptridx.i84, %ifend14 ]
  %storemerge70232 = load ptr, ptr %storemerge70232.in, align 8
  %memberidx9 = getelementptr inbounds %ConstDeclaration, ptr %storemerge70232, i64 0, i32 2
  %51 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %VarId, ptr %51, i64 0, i32 2
  %52 = load i64, ptr %memberidx10, align 4
  %53 = icmp eq i64 %52, %49
  br i1 %53, label %if.entry12, label %ifend14

for.end:                                          ; preds = %ifend14, %for.entry
  tail call void @free(ptr nonnull %45)
  %.pr = load i64, ptr %1, align 4
  br label %ifend6

if.entry12:                                       ; preds = %for.body
  store i1 false, ptr %45, align 1
  call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr null, ptr nonnull %storemerge70232)
  %54 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %55 = load i64, ptr %memberidx.i.i, align 4
  %56 = load i64, ptr %1, align 4
  %57 = load i64, ptr %memberidx2.i.i, align 4
  %58 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @216, i64 %55, i64 %56, i64 %57)
  %59 = load ptr, ptr %5, align 8
  %60 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %60, align 8
  %memberidx.i.i.i79 = getelementptr inbounds %string, ptr %60, i64 0, i32 1
  store ptr %59, ptr %memberidx.i.i.i79, align 8
  %memberidx1.i.i.i80 = getelementptr inbounds %string, ptr %60, i64 0, i32 2
  store i64 %58, ptr %memberidx1.i.i.i80, align 4
  %memberidx2.i.i.i81 = getelementptr inbounds %string, ptr %60, i64 0, i32 3
  store i64 %58, ptr %memberidx2.i.i.i81, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %61 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %60)
  %memberidx.i130 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %54, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i130, align 4
  %63 = srem i64 %61, %62
  %64 = load ptr, ptr %54, align 8
  %ptridx.i131 = getelementptr inbounds ptr, ptr %64, i64 %63
  %65 = load ptr, ptr %ptridx.i131, align 8
  %.not.i132 = icmp eq ptr %65, null
  br i1 %.not.i132, label %common.ret, label %while.entry.i138

while.entry.i138:                                 ; preds = %if.entry12, %else.i150
  %66 = phi ptr [ %76, %else.i150 ], [ %64, %if.entry12 ]
  %67 = phi i64 [ %77, %else.i150 ], [ %62, %if.entry12 ]
  %68 = phi ptr [ %80, %else.i150 ], [ %65, %if.entry12 ]
  %hash.0.i133 = phi i64 [ %79, %else.i150 ], [ %63, %if.entry12 ]
  %69 = load ptr, ptr %68, align 8
  %memberidx.i.i135 = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  %70 = load i64, ptr %memberidx.i.i135, align 4
  %71 = load i64, ptr %memberidx1.i.i.i80, align 4
  %.not.i.i137 = icmp eq i64 %70, %71
  br i1 %.not.i.i137, label %ifend.i.i141, label %else.i150

ifend.i.i141:                                     ; preds = %while.entry.i138
  %memberidx2.i.i139 = getelementptr inbounds %string, ptr %69, i64 0, i32 1
  %72 = load ptr, ptr %memberidx2.i.i139, align 8
  %73 = load ptr, ptr %memberidx.i.i.i79, align 8
  %74 = call i64 @memcmp(ptr %72, ptr %73, i64 %70)
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %while.end.i147, label %ifend.i.i141.else.i150_crit_edge

ifend.i.i141.else.i150_crit_edge:                 ; preds = %ifend.i.i141
  %.pre245 = load i64, ptr %memberidx.i130, align 4
  %.pre246 = load ptr, ptr %54, align 8
  br label %else.i150

while.end.i147:                                   ; preds = %ifend.i.i141
  %.pre247.pre = load ptr, ptr %54, align 8
  %ptridx9.i145.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre247.pre, i64 %hash.0.i133
  %.pre248.pre = load ptr, ptr %ptridx9.i145.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i146 = icmp eq ptr %.pre248.pre, null
  br i1 %.not29.i146, label %common.ret, label %if.entry10.i153

else.i150:                                        ; preds = %ifend.i.i141.else.i150_crit_edge, %while.entry.i138
  %76 = phi ptr [ %.pre246, %ifend.i.i141.else.i150_crit_edge ], [ %66, %while.entry.i138 ]
  %77 = phi i64 [ %.pre245, %ifend.i.i141.else.i150_crit_edge ], [ %67, %while.entry.i138 ]
  %78 = add i64 %hash.0.i133, 1
  %79 = srem i64 %78, %77
  %ptridx7.i148 = getelementptr inbounds ptr, ptr %76, i64 %79
  %80 = load ptr, ptr %ptridx7.i148, align 8
  %.not30.i149 = icmp eq ptr %80, null
  br i1 %.not30.i149, label %common.ret, label %while.entry.i138

if.entry10.i153:                                  ; preds = %while.end.i147
  %memberidx15.i152 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre248.pre, i64 0, i32 1
  %81 = load ptr, ptr %memberidx15.i152, align 8
  br label %common.ret

ifend14:                                          ; preds = %for.body
  %82 = add i64 %50, 1
  store i64 %82, ptr %memberidx1.i.i, align 4
  %ptridx.i84 = getelementptr inbounds ptr, ptr %46, i64 %50
  %83 = icmp sgt i64 %82, %47
  br i1 %83, label %for.end, label %for.body

ifend18:                                          ; preds = %ifend6, %for.end25
  %84 = phi i64 [ %42, %ifend6 ], [ %.pre253, %for.end25 ]
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %for.entry37, label %common.ret

for.entry19:                                      ; preds = %ifend6
  %memberidx21 = getelementptr inbounds %Module, ptr %39, i64 0, i32 9
  %86 = load ptr, ptr %memberidx21, align 8
  %87 = call ptr @malloc(i32 25)
  %memberidx.i86 = getelementptr inbounds %Array_VarDeclaration_, ptr %86, i64 0, i32 1
  %88 = load ptr, ptr %memberidx.i86, align 8
  %memberidx1.i87 = getelementptr inbounds %Array_VarDeclaration_, ptr %86, i64 0, i32 2
  %89 = load i64, ptr %memberidx1.i87, align 4
  store i1 false, ptr %87, align 1
  %memberidx1.i.i88 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %87, i64 0, i32 1
  %memberidx2.i.i89 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %87, i64 0, i32 3
  store ptr %88, ptr %memberidx2.i.i89, align 8
  %memberidx3.i.i90 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %87, i64 0, i32 2
  store i64 %89, ptr %memberidx3.i.i90, align 4
  store i64 1, ptr %memberidx1.i.i88, align 4
  %90 = icmp slt i64 %89, 1
  br i1 %90, label %for.end25, label %for.body23.lr.ph

for.body23.lr.ph:                                 ; preds = %for.entry19
  %91 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body23

for.body23:                                       ; preds = %for.body23.lr.ph, %ifend32
  %92 = phi i64 [ 1, %for.body23.lr.ph ], [ %124, %ifend32 ]
  %storemerge69227.in = phi ptr [ %88, %for.body23.lr.ph ], [ %ptridx.i103, %ifend32 ]
  %storemerge69227 = load ptr, ptr %storemerge69227.in, align 8
  %memberidx27 = getelementptr inbounds %VarDeclaration, ptr %storemerge69227, i64 0, i32 2
  %93 = load ptr, ptr %memberidx27, align 8
  %memberidx28 = getelementptr inbounds %VarId, ptr %93, i64 0, i32 2
  %94 = load i64, ptr %memberidx28, align 4
  %95 = icmp eq i64 %94, %91
  br i1 %95, label %if.entry30, label %ifend32

for.end25:                                        ; preds = %ifend32, %for.entry19
  tail call void @free(ptr nonnull %87)
  %.pre253 = load i64, ptr %1, align 4
  br label %ifend18

if.entry30:                                       ; preds = %for.body23
  store i1 false, ptr %87, align 1
  call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr null, ptr nonnull %storemerge69227)
  %96 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %97 = load i64, ptr %memberidx.i.i, align 4
  %98 = load i64, ptr %1, align 4
  %99 = load i64, ptr %memberidx2.i.i, align 4
  %100 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @216, i64 %97, i64 %98, i64 %99)
  %101 = load ptr, ptr %4, align 8
  %102 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %102, align 8
  %memberidx.i.i.i98 = getelementptr inbounds %string, ptr %102, i64 0, i32 1
  store ptr %101, ptr %memberidx.i.i.i98, align 8
  %memberidx1.i.i.i99 = getelementptr inbounds %string, ptr %102, i64 0, i32 2
  store i64 %100, ptr %memberidx1.i.i.i99, align 4
  %memberidx2.i.i.i100 = getelementptr inbounds %string, ptr %102, i64 0, i32 3
  store i64 %100, ptr %memberidx2.i.i.i100, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %103 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %102)
  %memberidx.i155 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %96, i64 0, i32 1
  %104 = load i64, ptr %memberidx.i155, align 4
  %105 = srem i64 %103, %104
  %106 = load ptr, ptr %96, align 8
  %ptridx.i156 = getelementptr inbounds ptr, ptr %106, i64 %105
  %107 = load ptr, ptr %ptridx.i156, align 8
  %.not.i157 = icmp eq ptr %107, null
  br i1 %.not.i157, label %common.ret, label %while.entry.i163

while.entry.i163:                                 ; preds = %if.entry30, %else.i175
  %108 = phi ptr [ %118, %else.i175 ], [ %106, %if.entry30 ]
  %109 = phi i64 [ %119, %else.i175 ], [ %104, %if.entry30 ]
  %110 = phi ptr [ %122, %else.i175 ], [ %107, %if.entry30 ]
  %hash.0.i158 = phi i64 [ %121, %else.i175 ], [ %105, %if.entry30 ]
  %111 = load ptr, ptr %110, align 8
  %memberidx.i.i160 = getelementptr inbounds %string, ptr %111, i64 0, i32 2
  %112 = load i64, ptr %memberidx.i.i160, align 4
  %113 = load i64, ptr %memberidx1.i.i.i99, align 4
  %.not.i.i162 = icmp eq i64 %112, %113
  br i1 %.not.i.i162, label %ifend.i.i166, label %else.i175

ifend.i.i166:                                     ; preds = %while.entry.i163
  %memberidx2.i.i164 = getelementptr inbounds %string, ptr %111, i64 0, i32 1
  %114 = load ptr, ptr %memberidx2.i.i164, align 8
  %115 = load ptr, ptr %memberidx.i.i.i98, align 8
  %116 = call i64 @memcmp(ptr %114, ptr %115, i64 %112)
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %while.end.i172, label %ifend.i.i166.else.i175_crit_edge

ifend.i.i166.else.i175_crit_edge:                 ; preds = %ifend.i.i166
  %.pre249 = load i64, ptr %memberidx.i155, align 4
  %.pre250 = load ptr, ptr %96, align 8
  br label %else.i175

while.end.i172:                                   ; preds = %ifend.i.i166
  %.pre251.pre = load ptr, ptr %96, align 8
  %ptridx9.i170.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre251.pre, i64 %hash.0.i158
  %.pre252.pre = load ptr, ptr %ptridx9.i170.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i171 = icmp eq ptr %.pre252.pre, null
  br i1 %.not29.i171, label %common.ret, label %if.entry10.i178

else.i175:                                        ; preds = %ifend.i.i166.else.i175_crit_edge, %while.entry.i163
  %118 = phi ptr [ %.pre250, %ifend.i.i166.else.i175_crit_edge ], [ %108, %while.entry.i163 ]
  %119 = phi i64 [ %.pre249, %ifend.i.i166.else.i175_crit_edge ], [ %109, %while.entry.i163 ]
  %120 = add i64 %hash.0.i158, 1
  %121 = srem i64 %120, %119
  %ptridx7.i173 = getelementptr inbounds ptr, ptr %118, i64 %121
  %122 = load ptr, ptr %ptridx7.i173, align 8
  %.not30.i174 = icmp eq ptr %122, null
  br i1 %.not30.i174, label %common.ret, label %while.entry.i163

if.entry10.i178:                                  ; preds = %while.end.i172
  %memberidx15.i177 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre252.pre, i64 0, i32 1
  %123 = load ptr, ptr %memberidx15.i177, align 8
  br label %common.ret

ifend32:                                          ; preds = %for.body23
  %124 = add i64 %92, 1
  store i64 %124, ptr %memberidx1.i.i88, align 4
  %ptridx.i103 = getelementptr inbounds ptr, ptr %88, i64 %92
  %125 = icmp sgt i64 %124, %89
  br i1 %125, label %for.end25, label %for.body23

for.entry37:                                      ; preds = %ifend18
  %memberidx39 = getelementptr inbounds %Module, ptr %39, i64 0, i32 5
  %126 = load ptr, ptr %memberidx39, align 8
  %127 = call ptr @malloc(i32 25)
  %memberidx.i105 = getelementptr inbounds %Array_Function_, ptr %126, i64 0, i32 1
  %128 = load ptr, ptr %memberidx.i105, align 8
  %memberidx1.i106 = getelementptr inbounds %Array_Function_, ptr %126, i64 0, i32 2
  %129 = load i64, ptr %memberidx1.i106, align 4
  store i1 false, ptr %127, align 1
  %memberidx1.i.i107 = getelementptr inbounds %ArrayIterator_Function_, ptr %127, i64 0, i32 1
  %memberidx2.i.i108 = getelementptr inbounds %ArrayIterator_Function_, ptr %127, i64 0, i32 3
  store ptr %128, ptr %memberidx2.i.i108, align 8
  %memberidx3.i.i109 = getelementptr inbounds %ArrayIterator_Function_, ptr %127, i64 0, i32 2
  store i64 %129, ptr %memberidx3.i.i109, align 4
  store i64 1, ptr %memberidx1.i.i107, align 4
  %130 = icmp slt i64 %129, 1
  br i1 %130, label %for.end43, label %for.body41.lr.ph

for.body41.lr.ph:                                 ; preds = %for.entry37
  %131 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body41

for.body41:                                       ; preds = %for.body41.lr.ph, %ifend50
  %132 = phi i64 [ 1, %for.body41.lr.ph ], [ %164, %ifend50 ]
  %storemerge223.in = phi ptr [ %128, %for.body41.lr.ph ], [ %ptridx.i122, %ifend50 ]
  %storemerge223 = load ptr, ptr %storemerge223.in, align 8
  %133 = load ptr, ptr %storemerge223, align 8
  %memberidx46 = getelementptr inbounds %VarId, ptr %133, i64 0, i32 2
  %134 = load i64, ptr %memberidx46, align 4
  %135 = icmp eq i64 %134, %131
  br i1 %135, label %if.entry48, label %ifend50

for.end43:                                        ; preds = %ifend50, %for.entry37
  tail call void @free(ptr nonnull %127)
  br label %common.ret

if.entry48:                                       ; preds = %for.body41
  store i1 false, ptr %127, align 1
  call fastcc void @CodeGen_codegen_function(ptr %0, ptr nonnull %storemerge223)
  %136 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %137 = load i64, ptr %memberidx.i.i, align 4
  %138 = load i64, ptr %1, align 4
  %139 = load i64, ptr %memberidx2.i.i, align 4
  %140 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @216, i64 %137, i64 %138, i64 %139)
  %141 = load ptr, ptr %3, align 8
  %142 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %142, align 8
  %memberidx.i.i.i117 = getelementptr inbounds %string, ptr %142, i64 0, i32 1
  store ptr %141, ptr %memberidx.i.i.i117, align 8
  %memberidx1.i.i.i118 = getelementptr inbounds %string, ptr %142, i64 0, i32 2
  store i64 %140, ptr %memberidx1.i.i.i118, align 4
  %memberidx2.i.i.i119 = getelementptr inbounds %string, ptr %142, i64 0, i32 3
  store i64 %140, ptr %memberidx2.i.i.i119, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %143 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %142)
  %memberidx.i180 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %136, i64 0, i32 1
  %144 = load i64, ptr %memberidx.i180, align 4
  %145 = srem i64 %143, %144
  %146 = load ptr, ptr %136, align 8
  %ptridx.i181 = getelementptr inbounds ptr, ptr %146, i64 %145
  %147 = load ptr, ptr %ptridx.i181, align 8
  %.not.i182 = icmp eq ptr %147, null
  br i1 %.not.i182, label %common.ret, label %while.entry.i188

while.entry.i188:                                 ; preds = %if.entry48, %else.i200
  %148 = phi ptr [ %158, %else.i200 ], [ %146, %if.entry48 ]
  %149 = phi i64 [ %159, %else.i200 ], [ %144, %if.entry48 ]
  %150 = phi ptr [ %162, %else.i200 ], [ %147, %if.entry48 ]
  %hash.0.i183 = phi i64 [ %161, %else.i200 ], [ %145, %if.entry48 ]
  %151 = load ptr, ptr %150, align 8
  %memberidx.i.i185 = getelementptr inbounds %string, ptr %151, i64 0, i32 2
  %152 = load i64, ptr %memberidx.i.i185, align 4
  %153 = load i64, ptr %memberidx1.i.i.i118, align 4
  %.not.i.i187 = icmp eq i64 %152, %153
  br i1 %.not.i.i187, label %ifend.i.i191, label %else.i200

ifend.i.i191:                                     ; preds = %while.entry.i188
  %memberidx2.i.i189 = getelementptr inbounds %string, ptr %151, i64 0, i32 1
  %154 = load ptr, ptr %memberidx2.i.i189, align 8
  %155 = load ptr, ptr %memberidx.i.i.i117, align 8
  %156 = call i64 @memcmp(ptr %154, ptr %155, i64 %152)
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %while.end.i197, label %ifend.i.i191.else.i200_crit_edge

ifend.i.i191.else.i200_crit_edge:                 ; preds = %ifend.i.i191
  %.pre254 = load i64, ptr %memberidx.i180, align 4
  %.pre255 = load ptr, ptr %136, align 8
  br label %else.i200

while.end.i197:                                   ; preds = %ifend.i.i191
  %.pre256.pre = load ptr, ptr %136, align 8
  %ptridx9.i195.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre256.pre, i64 %hash.0.i183
  %.pre257.pre = load ptr, ptr %ptridx9.i195.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i196 = icmp eq ptr %.pre257.pre, null
  br i1 %.not29.i196, label %common.ret, label %if.entry10.i203

else.i200:                                        ; preds = %ifend.i.i191.else.i200_crit_edge, %while.entry.i188
  %158 = phi ptr [ %.pre255, %ifend.i.i191.else.i200_crit_edge ], [ %148, %while.entry.i188 ]
  %159 = phi i64 [ %.pre254, %ifend.i.i191.else.i200_crit_edge ], [ %149, %while.entry.i188 ]
  %160 = add i64 %hash.0.i183, 1
  %161 = srem i64 %160, %159
  %ptridx7.i198 = getelementptr inbounds ptr, ptr %158, i64 %161
  %162 = load ptr, ptr %ptridx7.i198, align 8
  %.not30.i199 = icmp eq ptr %162, null
  br i1 %.not30.i199, label %common.ret, label %while.entry.i188

if.entry10.i203:                                  ; preds = %while.end.i197
  %memberidx15.i202 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre257.pre, i64 0, i32 1
  %163 = load ptr, ptr %memberidx15.i202, align 8
  br label %common.ret

ifend50:                                          ; preds = %for.body41
  %164 = add i64 %132, 1
  store i64 %164, ptr %memberidx1.i.i107, align 4
  %ptridx.i122 = getelementptr inbounds ptr, ptr %128, i64 %132
  %165 = icmp sgt i64 %164, %129
  br i1 %165, label %for.end43, label %for.body41
}

define internal fastcc void @CodeGen_declare_enum(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = tail call ptr @malloc(i32 16)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call ptr @malloc(i32 2048)
  store ptr %8, ptr %7, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i44 = phi i64 [ 0, %2 ], [ %10, %for.body.i.i ]
  %9 = load ptr, ptr %7, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %9, i64 %i.0.i.i44
  store ptr null, ptr %ptridx.i.i, align 8
  %10 = add nuw nsw i64 %i.0.i.i44, 1
  %11 = icmp ult i64 %i.0.i.i44, 255
  br i1 %11, label %for.body.i.i, label %CGEnumType_constructor.exit

CGEnumType_constructor.exit:                      ; preds = %for.body.i.i
  %memberidx.i38 = getelementptr inbounds %CGEnumType, ptr %6, i64 0, i32 1
  %memberidx2.i.i39 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %7, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i39, align 4
  %memberidx3.i.i40 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %7, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i40, align 4
  store ptr %7, ptr %memberidx.i38, align 8
  %memberidx = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  %12 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_EnumField_, ptr %12, i64 0, i32 2
  %13 = load i64, ptr %memberidx1, align 4
  %14 = icmp sgt i64 %13, 0
  br i1 %14, label %if.entry, label %else

if.entry:                                         ; preds = %CGEnumType_constructor.exit
  %memberidx.i37 = getelementptr inbounds %Array_EnumField_, ptr %12, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i37, align 8
  %16 = load ptr, ptr %15, align 8
  %memberidx4 = getelementptr inbounds %EnumField, ptr %16, i64 0, i32 2
  %17 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  %18 = load ptr, ptr %memberidx5, align 8
  %19 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %18, i1 true)
  br label %for.entry

else:                                             ; preds = %CGEnumType_constructor.exit
  %20 = tail call ptr @LLVMIntType(i64 64)
  br label %for.entry

for.entry:                                        ; preds = %if.entry, %else
  %storemerge = phi ptr [ %20, %else ], [ %19, %if.entry ]
  store ptr %storemerge, ptr %6, align 8
  %21 = load ptr, ptr %memberidx, align 8
  %22 = tail call ptr @malloc(i32 25)
  %memberidx.i33 = getelementptr inbounds %Array_EnumField_, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i33, align 8
  %memberidx1.i34 = getelementptr inbounds %Array_EnumField_, ptr %21, i64 0, i32 2
  %24 = load i64, ptr %memberidx1.i34, align 4
  store i1 false, ptr %22, align 1
  %memberidx1.i.i35 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %22, i64 0, i32 1
  %memberidx2.i.i36 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %22, i64 0, i32 3
  store ptr %23, ptr %memberidx2.i.i36, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_EnumField_, ptr %22, i64 0, i32 2
  store i64 %24, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i35, align 4
  %25 = icmp slt i64 %24, 1
  br i1 %25, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %26 = phi i64 [ %45, %for.body ], [ 1, %for.entry ]
  %storemerge2143.in = phi ptr [ %ptridx.i, %for.body ], [ %23, %for.entry ]
  %storemerge2143 = load ptr, ptr %storemerge2143.in, align 8
  %27 = load ptr, ptr %storemerge2143, align 8
  %28 = load ptr, ptr %memberidx.i38, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i23 = getelementptr inbounds %PropId, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i23, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %30 = load i64, ptr %29, align 4
  %memberidx1.i.i24 = getelementptr inbounds %TypeId, ptr %29, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i.i24, align 4
  %memberidx2.i.i25 = getelementptr inbounds %TypeId, ptr %29, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i.i25, align 4
  %33 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @216, i64 %30, i64 %31, i64 %32)
  %34 = load ptr, ptr %3, align 8
  %35 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %35, align 8
  %memberidx.i.i.i26 = getelementptr inbounds %string, ptr %35, i64 0, i32 1
  store ptr %34, ptr %memberidx.i.i.i26, align 8
  %memberidx1.i.i.i27 = getelementptr inbounds %string, ptr %35, i64 0, i32 2
  store i64 %33, ptr %memberidx1.i.i.i27, align 4
  %memberidx2.i.i.i28 = getelementptr inbounds %string, ptr %35, i64 0, i32 3
  store i64 %33, ptr %memberidx2.i.i.i28, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %36 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %37 = call ptr %36(ptr nonnull %35)
  %38 = load i64, ptr %27, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %27, i64 0, i32 2
  %39 = load i64, ptr %memberidx3.i, align 4
  %40 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @232, ptr %37, i64 %38, i64 %39)
  %41 = load ptr, ptr %4, align 8
  %42 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %42, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %42, i64 0, i32 1
  store ptr %41, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %42, i64 0, i32 2
  store i64 %40, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %42, i64 0, i32 3
  store i64 %40, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %37)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %memberidx11 = getelementptr inbounds %EnumField, ptr %storemerge2143, i64 0, i32 2
  %43 = load ptr, ptr %memberidx11, align 8
  %44 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr null, ptr %43)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %28, ptr nonnull %42, ptr %44)
  %45 = add i64 %26, 1
  store i64 %45, ptr %memberidx1.i.i35, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %23, i64 %26
  %46 = icmp sgt i64 %45, %24
  br i1 %46, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %22)
  %47 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %48 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %49 = load i64, ptr %47, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %47, i64 0, i32 1
  %50 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %47, i64 0, i32 2
  %51 = load i64, ptr %memberidx2.i.i, align 4
  %52 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @216, i64 %49, i64 %50, i64 %51)
  %53 = load ptr, ptr %5, align 8
  %54 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %54, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %54, i64 0, i32 1
  store ptr %53, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %54, i64 0, i32 2
  store i64 %52, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %54, i64 0, i32 3
  store i64 %52, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call fastcc void @Map_string_CGEnumType____setitem__(ptr %48, ptr nonnull %54, ptr nonnull %6)
  ret void
}

define internal fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr nocapture readonly %0, ptr %1, ptr %2, ptr nocapture readonly %3, i64 %4, ptr writeonly %5) unnamed_addr {
  %7 = tail call ptr @LLVMInt8Type()
  %8 = tail call ptr @LLVMPointerType(ptr %7, i64 0)
  %9 = tail call ptr @LLVMIntType(i64 64)
  %10 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %8, ptr nonnull @26)
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %11 = load ptr, ptr %memberidx.i, align 8
  %12 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %2)
  %memberidx.i25 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %11, i64 0, i32 1
  %13 = load i64, ptr %memberidx.i25, align 4
  %14 = srem i64 %12, %13
  %15 = load ptr, ptr %11, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %15, i64 %14
  %16 = load ptr, ptr %ptridx.i, align 8
  %.not.i26 = icmp eq ptr %16, null
  br i1 %.not.i26, label %if.entry.i, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %6
  %memberidx1.i.i28 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i30
  %17 = phi ptr [ %27, %else.i30 ], [ %15, %while.entry.i.preheader ]
  %18 = phi i64 [ %28, %else.i30 ], [ %13, %while.entry.i.preheader ]
  %19 = phi ptr [ %31, %else.i30 ], [ %16, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %30, %else.i30 ], [ %14, %while.entry.i.preheader ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i27 = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  %21 = load i64, ptr %memberidx.i.i27, align 4
  %22 = load i64, ptr %memberidx1.i.i28, align 4
  %.not.i.i = icmp eq i64 %21, %22
  br i1 %.not.i.i, label %ifend.i.i, label %else.i30

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i29 = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i29, align 8
  %24 = load ptr, ptr %memberidx3.i.i, align 8
  %25 = tail call i64 @memcmp(ptr %23, ptr %24, i64 %21)
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %while.end.i, label %ifend.i.i.else.i30_crit_edge

ifend.i.i.else.i30_crit_edge:                     ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i25, align 4
  %.pre35 = load ptr, ptr %11, align 8
  br label %else.i30

while.end.i:                                      ; preds = %ifend.i.i
  %.pre36.pre = load ptr, ptr %11, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre36.pre, i64 %hash.0.i
  %.pre37.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre37.pre, null
  br i1 %.not29.i, label %if.entry.i, label %Map_string_LLVMValueRef____getitem__.exit

else.i30:                                         ; preds = %ifend.i.i.else.i30_crit_edge, %while.entry.i
  %27 = phi ptr [ %.pre35, %ifend.i.i.else.i30_crit_edge ], [ %17, %while.entry.i ]
  %28 = phi i64 [ %.pre, %ifend.i.i.else.i30_crit_edge ], [ %18, %while.entry.i ]
  %29 = add i64 %hash.0.i, 1
  %30 = srem i64 %29, %28
  %ptridx7.i = getelementptr inbounds ptr, ptr %27, i64 %30
  %31 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %31, null
  br i1 %.not30.i, label %if.entry.i, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre37.pre, i64 0, i32 1
  %32 = load ptr, ptr %memberidx15.i, align 8
  %33 = icmp eq ptr %32, null
  br i1 %33, label %if.entry.i, label %CodeGen_createGlobalLLVMString.exit

if.entry.i:                                       ; preds = %else.i30, %6, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %34 = load ptr, ptr %2, align 8
  %memberidx1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %34, i64 0, i32 5
  %35 = load ptr, ptr %memberidx1.i, align 8
  %36 = tail call ptr %35(ptr nonnull %2)
  %37 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %36, ptr nonnull @26)
  %38 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %38, ptr nonnull %2, ptr %37)
  br label %CodeGen_createGlobalLLVMString.exit

CodeGen_createGlobalLLVMString.exit:              ; preds = %Map_string_LLVMValueRef____getitem__.exit, %if.entry.i
  %str.0.i = phi ptr [ %37, %if.entry.i ], [ %32, %Map_string_LLVMValueRef____getitem__.exit ]
  %39 = add i64 %4, 2
  %40 = alloca ptr, i64 %39, align 8
  store ptr %10, ptr %40, align 8
  %ptridx1 = getelementptr inbounds ptr, ptr %40, i64 1
  store ptr %str.0.i, ptr %ptridx1, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 2
  %42 = shl i64 %4, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1073741824 %41, ptr align 8 %3, i64 %42, i1 false)
  %arg_types = alloca [2 x ptr], align 8
  store ptr %8, ptr %arg_types, align 8
  %43 = getelementptr inbounds ptr, ptr %arg_types, i64 1
  store ptr %8, ptr %43, align 8
  %44 = load ptr, ptr %0, align 8
  %45 = tail call ptr @malloc(i32 64)
  store i64 7382647088337679201, ptr %45, align 8
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i, align 4
  %47 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i21 = getelementptr inbounds %IntrinsicResult, ptr %47, i64 0, i32 1
  store i64 0, ptr %47, align 8
  %48 = call ptr @LLVMFunctionType(ptr %9, ptr nonnull %arg_types, i64 2, i1 true)
  store ptr %48, ptr %memberidx1.i.i21, align 8
  %49 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %50 = call ptr %49(ptr nonnull %46)
  %51 = call ptr @LLVMGetNamedFunction(ptr %44, ptr %50)
  %.not.i = icmp eq ptr %51, null
  br i1 %.not.i, label %else.i, label %get_intrinsic.exit

else.i:                                           ; preds = %CodeGen_createGlobalLLVMString.exit
  %52 = call ptr @LLVMAddFunction(ptr %44, ptr %50, ptr %48)
  br label %get_intrinsic.exit

get_intrinsic.exit:                               ; preds = %CodeGen_createGlobalLLVMString.exit, %else.i
  %storemerge.i = phi ptr [ %52, %else.i ], [ %51, %CodeGen_createGlobalLLVMString.exit ]
  store ptr %storemerge.i, ptr %47, align 8
  %53 = call ptr @LLVMBuildCall2(ptr %1, ptr %48, ptr %storemerge.i, ptr nonnull %40, i64 %39, ptr nonnull @26)
  %.not = icmp eq ptr %5, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %get_intrinsic.exit
  store ptr %53, ptr %5, align 8
  br label %ifend

ifend:                                            ; preds = %get_intrinsic.exit, %if.entry
  %54 = call ptr @LLVMBuildLoad2(ptr %1, ptr %8, ptr %10, ptr nonnull @26)
  ret ptr %54
}

define internal fastcc ptr @CodeGen_codegen_string(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx, align 8
  %6 = alloca %StringBuilder, align 8
  %memberidx1 = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  %7 = load i64, ptr %memberidx1, align 4
  %memberidx2 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 5
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_int_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx3, align 4
  %10 = shl i64 %9, 1
  %11 = add i64 %10, %7
  store ptr @VTableStringBuilder, ptr %6, align 8
  %memberidx.i102 = getelementptr inbounds %StringBuilder, ptr %6, i64 0, i32 2
  store i64 %11, ptr %memberidx.i102, align 8
  %memberidx1.i103 = getelementptr inbounds %StringBuilder, ptr %6, i64 0, i32 1
  %12 = trunc i64 %11 to i32
  %mallocsize.i = shl i32 %12, 3
  %13 = tail call ptr @malloc(i32 %mallocsize.i)
  store ptr %13, ptr %memberidx1.i103, align 8
  %memberidx3.i = getelementptr inbounds %StringBuilder, ptr %6, i64 0, i32 3
  store ptr %13, ptr %memberidx3.i, align 8
  %memberidx5.i104 = getelementptr inbounds %StringBuilder, ptr %6, i64 0, i32 4
  store i64 0, ptr %memberidx5.i104, align 8
  %14 = load ptr, ptr %5, align 8
  %memberidx4 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %14, i64 0, i32 3
  %15 = load ptr, ptr %memberidx4, align 8
  %16 = tail call ptr %15(ptr nonnull %5)
  %17 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMValueRef_, ptr %17, align 8
  %memberidx.i99 = getelementptr inbounds %Array_LLVMValueRef_, ptr %17, i64 0, i32 2
  %memberidx1.i100 = getelementptr inbounds %Array_LLVMValueRef_, ptr %17, i64 0, i32 3
  store i64 8, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %Array_LLVMValueRef_, ptr %17, i64 0, i32 1
  %18 = tail call ptr @malloc(i32 64)
  store ptr %18, ptr %memberidx2.i101, align 8
  store i64 0, ptr %memberidx.i99, align 4
  %memberidx7 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 6
  %19 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_Expression_, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx8, align 4
  %21 = alloca ptr, i64 %20, align 8
  %22 = icmp sgt i64 %20, 0
  br i1 %22, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.0159 = phi i64 [ %39, %for.body ], [ 0, %for.entry ]
  %chars.0158 = phi ptr [ %36, %for.body ], [ %16, %for.entry ]
  %curr_ind.0157 = phi i64 [ %30, %for.body ], [ 0, %for.entry ]
  %23 = load ptr, ptr %memberidx7, align 8
  %memberidx.i97 = getelementptr inbounds %Array_Expression_, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i97, align 8
  %ptridx.i98 = getelementptr inbounds ptr, ptr %24, i64 %i.0159
  %25 = load ptr, ptr %ptridx.i98, align 8
  %memberidx10 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx10, align 8
  %27 = call fastcc ptr @get_format_from_type(ptr %26)
  %28 = load ptr, ptr %memberidx2, align 8
  %memberidx.i95 = getelementptr inbounds %Array_int_, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i95, align 8
  %ptridx.i96 = getelementptr inbounds i64, ptr %29, i64 %i.0159
  %30 = load i64, ptr %ptridx.i96, align 4
  %31 = sub i64 %30, %curr_ind.0157
  %32 = load ptr, ptr %6, align 8
  %33 = load ptr, ptr %32, align 8
  call void %33(ptr nonnull %6, ptr %chars.0158, i64 %31)
  %34 = load ptr, ptr %6, align 8
  %memberidx13 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %34, i64 0, i32 1
  %35 = load ptr, ptr %memberidx13, align 8
  call void %35(ptr nonnull %6, ptr %27)
  %36 = getelementptr inbounds i8, ptr %chars.0158, i64 %31
  %37 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %25)
  %ptridx = getelementptr inbounds ptr, ptr %21, i64 %i.0159
  %38 = call fastcc ptr @CodeGen_get_string_val(ptr %0, ptr %1, ptr %37, ptr %26, ptr nonnull %17, i64 0)
  store ptr %38, ptr %ptridx, align 8
  %39 = add nuw nsw i64 %i.0159, 1
  %40 = icmp slt i64 %39, %20
  br i1 %40, label %for.body, label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.body
  %.pre = load ptr, ptr %6, align 8
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.entry
  %41 = phi ptr [ @VTableStringBuilder, %for.entry ], [ %.pre, %for.end.loopexit ]
  %curr_ind.0.lcssa = phi i64 [ 0, %for.entry ], [ %30, %for.end.loopexit ]
  %chars.0.lcssa = phi ptr [ %16, %for.entry ], [ %36, %for.end.loopexit ]
  %42 = load ptr, ptr %41, align 8
  %43 = load i64, ptr %memberidx1, align 4
  %44 = sub i64 %43, %curr_ind.0.lcssa
  call void %42(ptr nonnull %6, ptr %chars.0.lcssa, i64 %44)
  %45 = load ptr, ptr %6, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %45, i64 0, i32 3
  %46 = load ptr, ptr %memberidx16, align 8
  %47 = call ptr %46(ptr nonnull %6)
  %str_len = alloca ptr, align 8
  %memberidx17 = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  %48 = load i64, ptr %memberidx17, align 4
  %49 = call ptr @LLVMIntType(i64 64)
  %50 = call ptr @LLVMConstInt(ptr %49, i64 %48, i1 false)
  store ptr %50, ptr %str_len, align 8
  br i1 %22, label %true_block, label %false_block

true_block:                                       ; preds = %for.end
  %51 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr nonnull %47, ptr nonnull %21, i64 %20, ptr nonnull %str_len)
  br label %end

false_block:                                      ; preds = %for.end
  %memberidx.i93 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %52 = load ptr, ptr %memberidx.i93, align 8
  %53 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %47)
  %memberidx.i109 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %52, i64 0, i32 1
  %54 = load i64, ptr %memberidx.i109, align 4
  %55 = srem i64 %53, %54
  %56 = load ptr, ptr %52, align 8
  %ptridx.i110 = getelementptr inbounds ptr, ptr %56, i64 %55
  %57 = load ptr, ptr %ptridx.i110, align 8
  %.not.i111 = icmp eq ptr %57, null
  br i1 %.not.i111, label %if.entry.i, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %false_block
  %memberidx3.i.i115 = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i116
  %58 = phi ptr [ %68, %else.i116 ], [ %56, %while.entry.i.preheader ]
  %59 = phi i64 [ %69, %else.i116 ], [ %54, %while.entry.i.preheader ]
  %60 = phi ptr [ %72, %else.i116 ], [ %57, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %71, %else.i116 ], [ %55, %while.entry.i.preheader ]
  %61 = load ptr, ptr %60, align 8
  %memberidx.i.i112 = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  %62 = load i64, ptr %memberidx.i.i112, align 4
  %63 = load i64, ptr %memberidx17, align 4
  %.not.i.i = icmp eq i64 %62, %63
  br i1 %.not.i.i, label %ifend.i.i, label %else.i116

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i114 = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  %64 = load ptr, ptr %memberidx2.i.i114, align 8
  %65 = load ptr, ptr %memberidx3.i.i115, align 8
  %66 = call i64 @memcmp(ptr %64, ptr %65, i64 %62)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %while.end.i, label %ifend.i.i.else.i116_crit_edge

ifend.i.i.else.i116_crit_edge:                    ; preds = %ifend.i.i
  %.pre165 = load i64, ptr %memberidx.i109, align 4
  %.pre166 = load ptr, ptr %52, align 8
  br label %else.i116

while.end.i:                                      ; preds = %ifend.i.i
  %.pre167.pre = load ptr, ptr %52, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre167.pre, i64 %hash.0.i
  %.pre168.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre168.pre, null
  br i1 %.not29.i, label %if.entry.i, label %Map_string_LLVMValueRef____getitem__.exit

else.i116:                                        ; preds = %ifend.i.i.else.i116_crit_edge, %while.entry.i
  %68 = phi ptr [ %.pre166, %ifend.i.i.else.i116_crit_edge ], [ %58, %while.entry.i ]
  %69 = phi i64 [ %.pre165, %ifend.i.i.else.i116_crit_edge ], [ %59, %while.entry.i ]
  %70 = add i64 %hash.0.i, 1
  %71 = srem i64 %70, %69
  %ptridx7.i = getelementptr inbounds ptr, ptr %68, i64 %71
  %72 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %72, null
  br i1 %.not30.i, label %if.entry.i, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre168.pre, i64 0, i32 1
  %73 = load ptr, ptr %memberidx15.i, align 8
  %74 = icmp eq ptr %73, null
  br i1 %74, label %if.entry.i, label %end

if.entry.i:                                       ; preds = %else.i116, %false_block, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %75 = load ptr, ptr %47, align 8
  %memberidx1.i94 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %75, i64 0, i32 5
  %76 = load ptr, ptr %memberidx1.i94, align 8
  %77 = call ptr %76(ptr nonnull %47)
  %78 = call ptr @LLVMBuildGlobalString(ptr %1, ptr %77, ptr nonnull @26)
  %79 = load ptr, ptr %memberidx.i93, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %79, ptr nonnull %47, ptr %78)
  br label %end

end:                                              ; preds = %if.entry.i, %Map_string_LLVMValueRef____getitem__.exit, %true_block
  %ternary = phi ptr [ %51, %true_block ], [ %78, %if.entry.i ], [ %73, %Map_string_LLVMValueRef____getitem__.exit ]
  %memberidx18 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %80 = load ptr, ptr %memberidx18, align 8
  %81 = load i64, ptr %80, align 4
  %82 = icmp eq i64 %81, 21
  br i1 %82, label %if.entry.i149, label %is_object.exit

if.entry.i149:                                    ; preds = %end, %if.entry.i149
  %.tr5.i = phi ptr [ %83, %if.entry.i149 ], [ %80, %end ]
  %memberidx1.i148 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %83 = load ptr, ptr %memberidx1.i148, align 8
  %84 = load i64, ptr %83, align 4
  %85 = icmp eq i64 %84, 21
  br i1 %85, label %if.entry.i149, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i149, %end
  %.lcssa.i = phi i64 [ %81, %end ], [ %84, %if.entry.i149 ]
  %86 = icmp eq i64 %.lcssa.i, 13
  br i1 %86, label %if.entry, label %for.entry32

if.entry:                                         ; preds = %is_object.exit
  %87 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %80, i1 false)
  %88 = call i1 @LLVMIsConstant(ptr %ternary)
  %89 = call i1 @LLVMIsGlobalConstant(ptr %ternary)
  %90 = and i1 %88, %89
  br i1 %90, label %if.entry20, label %else21

if.entry20:                                       ; preds = %if.entry
  %91 = load ptr, ptr %0, align 8
  %92 = call ptr @LLVMGetNamedFunction(ptr %91, ptr nonnull @226)
  %93 = icmp eq ptr %92, null
  br i1 %93, label %if.entry24, label %ifend26

else21:                                           ; preds = %if.entry
  %94 = call ptr @LLVMBuildMalloc(ptr %1, ptr %87, ptr nonnull @26)
  %args28 = alloca [3 x ptr], align 8
  store ptr %94, ptr %args28, align 8
  %95 = getelementptr inbounds ptr, ptr %args28, i64 1
  store ptr %ternary, ptr %95, align 8
  %96 = getelementptr inbounds ptr, ptr %args28, i64 2
  %97 = load ptr, ptr %str_len, align 8
  store ptr %97, ptr %96, align 8
  %98 = load ptr, ptr %memberidx18, align 8
  %memberidx.i105 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %99 = load i64, ptr %98, align 4
  %cond155 = icmp eq i64 %99, 21
  br i1 %cond155, label %if.entry.i140, label %get_class_from_type.exit

if.entry.i140:                                    ; preds = %else21, %if.entry.i140
  %.tr11.i156 = phi ptr [ %100, %if.entry.i140 ], [ %98, %else21 ]
  %memberidx1.i139 = getelementptr inbounds %GenericType, ptr %.tr11.i156, i64 0, i32 3
  %100 = load ptr, ptr %memberidx1.i139, align 8
  %101 = load i64, ptr %100, align 4
  %cond = icmp eq i64 %101, 21
  br i1 %cond, label %if.entry.i140, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i140, %else21
  %memberidx1.i106 = getelementptr inbounds %ObjectType, ptr %98, i64 0, i32 1
  %102 = load ptr, ptr %memberidx1.i106, align 8
  %103 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %102)
  %.not.i117 = icmp eq ptr %103, null
  br i1 %.not.i117, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %104 = load ptr, ptr %memberidx.i105, align 8
  %memberidx.i.i121 = getelementptr inbounds %Program, ptr %104, i64 0, i32 1
  %105 = load ptr, ptr %memberidx.i.i121, align 8
  %106 = load i64, ptr %102, align 4
  %memberidx.i.i.i122 = getelementptr inbounds %Array_Module_, ptr %105, i64 0, i32 1
  %107 = load ptr, ptr %memberidx.i.i.i122, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %107, i64 %106
  %108 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i123 = getelementptr inbounds %Module, ptr %108, i64 0, i32 4
  %109 = load ptr, ptr %memberidx2.i.i123, align 8
  %memberidx3.i.i124 = getelementptr inbounds %TypeId, ptr %102, i64 0, i32 2
  %110 = load i64, ptr %memberidx3.i.i124, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %109, i64 0, i32 1
  %111 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %111, i64 %110
  %112 = load ptr, ptr %ptridx.i6.i.i, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %112)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %112)
  %113 = load ptr, ptr %112, align 8
  %114 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %113)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i118 = phi ptr [ %114, %ifend.i ], [ %103, %get_class_from_type.exit ]
  %memberidx2.i107 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i118, i64 0, i32 6
  %115 = load ptr, ptr %memberidx2.i107, align 8
  %.not.i = icmp eq ptr %115, null
  br i1 %.not.i, label %else.i, label %if.entry.i108

if.entry.i108:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %116 = call ptr @LLVM_GetFunctionType(ptr nonnull %115)
  %117 = call ptr @LLVMBuildCall2(ptr %1, ptr %116, ptr nonnull %115, ptr nonnull %args28, i64 3, ptr nonnull @26)
  br label %for.entry32

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %118 = call ptr @malloc(i32 376)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %118, ptr noundef nonnull align 8 dereferenceable(47) @258, i64 47, i1 false)
  %119 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %119, align 8
  %memberidx.i.i125 = getelementptr inbounds %string, ptr %119, i64 0, i32 1
  store ptr %118, ptr %memberidx.i.i125, align 8
  %memberidx1.i.i126 = getelementptr inbounds %string, ptr %119, i64 0, i32 2
  store i64 47, ptr %memberidx1.i.i126, align 4
  %memberidx2.i.i127 = getelementptr inbounds %string, ptr %119, i64 0, i32 3
  store i64 47, ptr %memberidx2.i.i127, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %120 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %121 = call ptr %120(ptr nonnull %119)
  %122 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @210, ptr %121)
  %123 = load ptr, ptr %3, align 8
  %124 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %124, align 8
  %memberidx.i.i129 = getelementptr inbounds %string, ptr %124, i64 0, i32 1
  store ptr %123, ptr %memberidx.i.i129, align 8
  %memberidx1.i.i130 = getelementptr inbounds %string, ptr %124, i64 0, i32 2
  store i64 %122, ptr %memberidx1.i.i130, align 4
  %memberidx2.i.i131 = getelementptr inbounds %string, ptr %124, i64 0, i32 3
  store i64 %122, ptr %memberidx2.i.i131, align 4
  call void @free(ptr %121)
  %125 = load ptr, ptr %124, align 8
  %memberidx.i.i.i132 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %125, i64 0, i32 3
  %126 = load ptr, ptr %memberidx.i.i.i132, align 8
  %127 = call ptr %126(ptr nonnull %124)
  %128 = load i64, ptr %memberidx1.i.i130, align 4
  call void @write(i64 1, ptr %127, i64 %128)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %for.entry32

if.entry24:                                       ; preds = %if.entry20
  %129 = call ptr @malloc(i32 432)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %129, ptr noundef nonnull align 8 dereferenceable(54) @227, i64 54, i1 false)
  %130 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %130, align 8
  %memberidx.i.i90 = getelementptr inbounds %string, ptr %130, i64 0, i32 1
  store ptr %129, ptr %memberidx.i.i90, align 8
  %memberidx1.i.i91 = getelementptr inbounds %string, ptr %130, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i91, align 4
  %memberidx2.i.i92 = getelementptr inbounds %string, ptr %130, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i92, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %131 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %132 = call ptr %131(ptr nonnull %130)
  %133 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @210, ptr %132)
  %134 = load ptr, ptr %4, align 8
  %135 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %135, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %135, i64 0, i32 1
  store ptr %134, ptr %memberidx.i.i, align 8
  %memberidx1.i.i88 = getelementptr inbounds %string, ptr %135, i64 0, i32 2
  store i64 %133, ptr %memberidx1.i.i88, align 4
  %memberidx2.i.i89 = getelementptr inbounds %string, ptr %135, i64 0, i32 3
  store i64 %133, ptr %memberidx2.i.i89, align 4
  call void @free(ptr %132)
  %136 = load ptr, ptr %135, align 8
  %memberidx.i.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %136, i64 0, i32 3
  %137 = load ptr, ptr %memberidx.i.i.i, align 8
  %138 = call ptr %137(ptr nonnull %135)
  %139 = load i64, ptr %memberidx1.i.i88, align 4
  call void @write(i64 1, ptr %138, i64 %139)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %ifend26

ifend26:                                          ; preds = %if.entry20, %if.entry24
  %args = alloca [2 x ptr], align 8
  store ptr %ternary, ptr %args, align 8
  %140 = getelementptr inbounds ptr, ptr %args, i64 1
  %141 = load ptr, ptr %str_len, align 8
  store ptr %141, ptr %140, align 8
  %142 = call ptr @LLVM_GetFunctionType(ptr %92)
  %143 = call ptr @LLVMBuildCall2(ptr %1, ptr %142, ptr %92, ptr nonnull %args, i64 2, ptr nonnull @26)
  br label %for.entry32

for.entry32:                                      ; preds = %else.i, %if.entry.i108, %ifend26, %is_object.exit
  %144 = phi ptr [ %143, %ifend26 ], [ %ternary, %is_object.exit ], [ %94, %if.entry.i108 ], [ %94, %else.i ]
  %145 = call ptr @malloc(i32 25)
  %146 = load ptr, ptr %memberidx2.i101, align 8
  %147 = load i64, ptr %memberidx.i99, align 4
  store i1 false, ptr %145, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %145, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %145, i64 0, i32 3
  store ptr %146, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %145, i64 0, i32 2
  store i64 %147, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %148 = icmp slt i64 %147, 1
  br i1 %148, label %for.end36, label %for.body34

for.body34:                                       ; preds = %for.entry32, %for.body34
  %149 = phi i64 [ %151, %for.body34 ], [ 1, %for.entry32 ]
  %storemerge154.in = phi ptr [ %ptridx.i, %for.body34 ], [ %146, %for.entry32 ]
  %storemerge154 = load ptr, ptr %storemerge154.in, align 8
  %150 = call ptr @LLVMBuildFree(ptr %1, ptr %storemerge154)
  %151 = add i64 %149, 1
  store i64 %151, ptr %memberidx1.i.i, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %146, i64 %149
  %152 = icmp sgt i64 %151, %147
  br i1 %152, label %for.end36, label %for.body34

for.end36:                                        ; preds = %for.body34, %for.entry32
  tail call void @free(ptr nonnull %145)
  call void @free(ptr %146)
  tail call void @free(ptr %17)
  ret ptr %144
}

define internal fastcc ptr @CodeGen_codegen_expression(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %incomming_vals.i = alloca [2 x ptr], align 8
  %blocks.i = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  switch i64 %4, label %common.ret132 [
    i64 4, label %if.entry
    i64 0, label %if.entry2
    i64 1, label %if.entry6
    i64 5, label %if.entry10
    i64 2, label %if.entry14
    i64 7, label %if.entry18
    i64 8, label %if.entry22
    i64 9, label %if.entry26
    i64 14, label %if.entry30
    i64 13, label %CodeGen_get_expr_mem.exit
    i64 12, label %if.entry38
    i64 11, label %if.entry42
    i64 15, label %if.entry46
    i64 10, label %if.entry50
    i64 6, label %if.entry54
    i64 16, label %if.entry58
  ]

common.ret132:                                    ; preds = %if.entry, %if.entry2, %if.entry6, %if.entry10, %if.entry14, %if.entry18, %if.entry22, %if.entry26, %if.entry30, %CodeGen_get_expr_mem.exit, %if.entry38, %if.entry42, %if.entry54, %if.entry58, %true_block.i, %false_block.i, %true_block6.i, %false_block7.i, %true_block14.i, %false_block15.i, %true_block22.i, %false_block23.i, %true_block30.i, %false_block31.i, %true_block34.i, %false_block35.i, %3, %if.entry46
  %common.ret132.op = phi ptr [ %48, %if.entry46 ], [ %7, %if.entry ], [ %11, %if.entry2 ], [ %15, %if.entry6 ], [ %18, %if.entry10 ], [ %19, %if.entry14 ], [ %20, %if.entry18 ], [ %21, %if.entry22 ], [ %22, %if.entry26 ], [ %23, %if.entry30 ], [ %27, %CodeGen_get_expr_mem.exit ], [ %28, %if.entry38 ], [ %29, %if.entry42 ], [ %87, %if.entry54 ], [ %88, %if.entry58 ], [ %68, %true_block.i ], [ %69, %false_block.i ], [ %75, %true_block6.i ], [ %76, %false_block7.i ], [ %78, %true_block14.i ], [ %79, %false_block15.i ], [ %81, %true_block22.i ], [ %82, %false_block23.i ], [ %83, %true_block30.i ], [ %84, %false_block31.i ], [ %85, %true_block34.i ], [ %86, %false_block35.i ], [ null, %3 ]
  ret ptr %common.ret132.op

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %BooleanExpression, ptr %2, i64 0, i32 4
  %5 = load i1, ptr %memberidx.i, align 1
  %6 = tail call ptr @LLVMInt1Type()
  %..i.i = zext i1 %5 to i64
  %7 = tail call ptr @LLVMConstInt(ptr %6, i64 %..i.i, i1 false)
  br label %common.ret132

if.entry2:                                        ; preds = %3
  %memberidx.i118 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %8 = load ptr, ptr %memberidx.i118, align 8
  %9 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %8, i1 true)
  %memberidx1.i = getelementptr inbounds %IntExpression, ptr %2, i64 0, i32 4
  %10 = load i64, ptr %memberidx1.i, align 4
  %11 = tail call ptr @LLVMConstInt(ptr %9, i64 %10, i1 true)
  br label %common.ret132

if.entry6:                                        ; preds = %3
  %memberidx.i119 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %12 = load ptr, ptr %memberidx.i119, align 8
  %13 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %12, i1 true)
  %memberidx1.i120 = getelementptr inbounds %FloatExpression, ptr %2, i64 0, i32 4
  %14 = load double, ptr %memberidx1.i120, align 8
  %15 = tail call ptr @LLVMConstReal(ptr %13, double %14)
  br label %common.ret132

if.entry10:                                       ; preds = %3
  %memberidx.i121 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %memberidx.i121, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %16, i1 true)
  %18 = tail call ptr @LLVMConstNull(ptr %17)
  br label %common.ret132

if.entry14:                                       ; preds = %3
  %19 = tail call fastcc ptr @CodeGen_codegen_string(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret132

if.entry18:                                       ; preds = %3
  %20 = tail call fastcc ptr @CodeGen_codegen_var_access_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret132

if.entry22:                                       ; preds = %3
  %21 = tail call fastcc ptr @CodeGen_codegen_bin_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret132

if.entry26:                                       ; preds = %3
  %22 = tail call fastcc ptr @CodeGen_codegen_unary_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret132

if.entry30:                                       ; preds = %3
  %23 = tail call fastcc ptr @CodeGen_codegen_call_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret132

CodeGen_get_expr_mem.exit:                        ; preds = %3
  %24 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %2)
  %memberidx.i122 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %25 = load ptr, ptr %memberidx.i122, align 8
  %26 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %25, i1 true)
  %27 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %26, ptr %24, ptr nonnull @26)
  br label %common.ret132

if.entry38:                                       ; preds = %3
  %28 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr %0, ptr %1, ptr nonnull %2, ptr null)
  br label %common.ret132

if.entry42:                                       ; preds = %3
  %29 = tail call fastcc ptr @CodeGen_codegen_new_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret132

if.entry46:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %incomming_vals.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %blocks.i)
  %memberidx.i123 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %30 = load ptr, ptr %memberidx.i123, align 8
  %31 = tail call ptr @LLVMAppendBasicBlock(ptr %30, ptr nonnull @240)
  %32 = load ptr, ptr %memberidx.i123, align 8
  %33 = tail call ptr @LLVMAppendBasicBlock(ptr %32, ptr nonnull @241)
  %34 = load ptr, ptr %memberidx.i123, align 8
  %35 = tail call ptr @LLVMAppendBasicBlock(ptr %34, ptr nonnull @242)
  %memberidx3.i = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 4
  %36 = load ptr, ptr %memberidx3.i, align 8
  %37 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %36)
  %38 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %37, ptr %31, ptr %33)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %31)
  %memberidx4.i = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 5
  %39 = load ptr, ptr %memberidx4.i, align 8
  %40 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %39)
  %41 = tail call ptr @LLVMBuildBr(ptr %1, ptr %35)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %33)
  %memberidx5.i = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 6
  %42 = load ptr, ptr %memberidx5.i, align 8
  %43 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %42)
  %44 = tail call ptr @LLVMBuildBr(ptr %1, ptr %35)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %35)
  %45 = load ptr, ptr %memberidx4.i, align 8
  %memberidx7.i = getelementptr inbounds %Expression, ptr %45, i64 0, i32 3
  %46 = load ptr, ptr %memberidx7.i, align 8
  %47 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %46, i1 true)
  %48 = tail call ptr @LLVMBuildPhi(ptr %1, ptr %47, ptr nonnull @243)
  store ptr %40, ptr %incomming_vals.i, align 8
  %49 = getelementptr inbounds ptr, ptr %incomming_vals.i, i64 1
  store ptr %43, ptr %49, align 8
  store ptr %31, ptr %blocks.i, align 8
  %50 = getelementptr inbounds ptr, ptr %blocks.i, i64 1
  store ptr %33, ptr %50, align 8
  call void @LLVMAddIncoming(ptr %48, ptr nonnull %incomming_vals.i, ptr nonnull %blocks.i, i64 2)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %incomming_vals.i)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %blocks.i)
  br label %common.ret132

if.entry50:                                       ; preds = %3
  %memberidx.i124 = getelementptr inbounds %TypeCastExpression, ptr %2, i64 0, i32 4
  %51 = load ptr, ptr %memberidx.i124, align 8
  %memberidx1.i125 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %52 = load ptr, ptr %memberidx1.i125, align 8
  %53 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %51)
  %54 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %52, i1 true)
  %55 = tail call i1 @LLVMIsConstant(ptr %53)
  %56 = load i64, ptr %52, align 4
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %if.entry50
  br i1 %55, label %true_block.i, label %false_block.i

ifend.i:                                          ; preds = %if.entry50
  %memberidx2.i = getelementptr inbounds %Expression, ptr %51, i64 0, i32 3
  %58 = load ptr, ptr %memberidx2.i, align 8
  %59 = load i64, ptr %58, align 4
  %60 = add i64 %59, -1
  %61 = icmp ult i64 %60, 7
  %62 = and i64 %56, -4
  %63 = icmp eq i64 %62, 8
  %64 = and i1 %63, %61
  br i1 %64, label %if.entry3.i, label %else4.i

true_block.i:                                     ; preds = %if.entry.i
  %65 = tail call i1 @LLVMIsNull(ptr %53)
  %66 = xor i1 %65, true
  %67 = tail call ptr @LLVMInt1Type()
  %..i.i126 = zext i1 %66 to i64
  %68 = tail call ptr @LLVMConstInt(ptr %67, i64 %..i.i126, i1 false)
  br label %common.ret132

false_block.i:                                    ; preds = %if.entry.i
  %69 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %53, ptr nonnull @26)
  br label %common.ret132

if.entry3.i:                                      ; preds = %ifend.i
  br i1 %55, label %true_block6.i, label %false_block7.i

else4.i:                                          ; preds = %ifend.i
  %70 = and i64 %59, -4
  %71 = icmp eq i64 %70, 8
  %72 = add i64 %56, -1
  %73 = icmp ult i64 %72, 7
  %74 = and i1 %73, %71
  br i1 %74, label %if.entry11.i, label %else12.i

true_block6.i:                                    ; preds = %if.entry3.i
  %75 = tail call ptr @LLVMConstSIToFP(ptr %53, ptr %54)
  br label %common.ret132

false_block7.i:                                   ; preds = %if.entry3.i
  %76 = tail call ptr @LLVMBuildSIToFP(ptr %1, ptr %53, ptr %54, ptr nonnull @26)
  br label %common.ret132

if.entry11.i:                                     ; preds = %else4.i
  br i1 %55, label %true_block14.i, label %false_block15.i

else12.i:                                         ; preds = %else4.i
  %77 = and i1 %73, %61
  br i1 %77, label %if.entry19.i, label %else20.i

true_block14.i:                                   ; preds = %if.entry11.i
  %78 = tail call ptr @LLVMConstFPToSI(ptr %53, ptr %54)
  br label %common.ret132

false_block15.i:                                  ; preds = %if.entry11.i
  %79 = tail call ptr @LLVMBuildFPToSI(ptr %1, ptr %53, ptr %54, ptr nonnull @26)
  br label %common.ret132

if.entry19.i:                                     ; preds = %else12.i
  br i1 %55, label %true_block22.i, label %false_block23.i

else20.i:                                         ; preds = %else12.i
  %80 = and i1 %63, %71
  br i1 %80, label %if.entry27.i, label %ifend29.i

true_block22.i:                                   ; preds = %if.entry19.i
  %81 = tail call ptr @LLVMConstIntCast(ptr %53, ptr %54, i1 true)
  br label %common.ret132

false_block23.i:                                  ; preds = %if.entry19.i
  %82 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %53, ptr %54, i1 true, ptr nonnull @26)
  br label %common.ret132

if.entry27.i:                                     ; preds = %else20.i
  br i1 %55, label %true_block30.i, label %false_block31.i

ifend29.i:                                        ; preds = %else20.i
  br i1 %55, label %true_block34.i, label %false_block35.i

true_block30.i:                                   ; preds = %if.entry27.i
  %83 = tail call ptr @LLVMConstFPCast(ptr %53, ptr %54)
  br label %common.ret132

false_block31.i:                                  ; preds = %if.entry27.i
  %84 = tail call ptr @LLVMBuildFPCast(ptr %1, ptr %53, ptr %54, ptr nonnull @26)
  br label %common.ret132

true_block34.i:                                   ; preds = %ifend29.i
  %85 = tail call ptr @LLVMConstBitCast(ptr %53, ptr %54)
  br label %common.ret132

false_block35.i:                                  ; preds = %ifend29.i
  %86 = tail call ptr @LLVMBuildBitCast(ptr %1, ptr %53, ptr %54, ptr nonnull @26)
  br label %common.ret132

if.entry54:                                       ; preds = %3
  %87 = tail call fastcc ptr @CodeGen_codegen_array_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret132

if.entry58:                                       ; preds = %3
  %88 = tail call fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret132
}

define internal fastcc void @Map_string_CGEnumType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx6 = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx6, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.037 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.037
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.037, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %storemerge36 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %storemerge36
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_CGEnumType____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %storemerge36, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_CGEnumType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_CGEnumType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_CGEnumType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = srem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i34 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %13, %while.entry.preheader ], [ %26, %ifend9 ]
  %16 = phi i64 [ %11, %while.entry.preheader ], [ %27, %ifend9 ]
  %17 = phi ptr [ %14, %while.entry.preheader ], [ %30, %ifend9 ]
  %18 = phi i64 [ %12, %while.entry.preheader ], [ %29, %ifend9 ]
  %19 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i34, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx3.i, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.thread35, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre39 = load ptr, ptr %0, align 8
  br label %ifend9

while.end.thread35:                               ; preds = %ifend.i
  %.pre40 = load ptr, ptr %0, align 8
  br label %ifend15

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %26 = phi ptr [ %.pre39, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %28 = add i64 %18, 1
  %29 = srem i64 %28, %27
  %ptridx12 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx12, align 8
  %.not33 = icmp eq ptr %30, null
  br i1 %.not33, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %31 = phi ptr [ %13, %ifend ], [ %26, %ifend9 ]
  %32 = phi i64 [ %12, %ifend ], [ %29, %ifend9 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend15

ifend15:                                          ; preds = %while.end.thread35, %if.entry13
  %35 = phi ptr [ %.pre40, %while.end.thread35 ], [ %31, %if.entry13 ]
  %36 = phi i64 [ %18, %while.end.thread35 ], [ %32, %if.entry13 ]
  %ptridx19 = getelementptr inbounds ptr, ptr %35, i64 %36
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_CGEnumType__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @21, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = sext i8 %13 to i64
  %15 = add i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  %20 = call i64 @llvm.abs.i64(i64 %hash.0.lcssa, i1 false)
  ret i64 %20
}

define internal fastcc ptr @CodeGen_codegen_bin_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %args.i = alloca [2 x ptr], align 8
  %4 = alloca ptr, align 8
  %arg_types.i = alloca [2 x ptr], align 8
  %5 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 5
  %6 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 4
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %7, i64 0, i32 3
  %8 = load ptr, ptr %memberidx2, align 8
  %9 = load i64, ptr %8, align 4
  %memberidx4 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 6
  %10 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Expression, ptr %10, i64 0, i32 3
  %11 = load ptr, ptr %memberidx5, align 8
  %12 = load i64, ptr %11, align 4
  %.not = icmp eq i64 %9, %12
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  switch i64 %6, label %ifend15 [
    i64 11, label %if.entry7
    i64 12, label %if.entry10
    i64 19, label %if.entry13
  ]

ifend:                                            ; preds = %3
  %13 = icmp eq i64 %6, 19
  br i1 %13, label %if.entry13, label %ifend15

common.ret:                                       ; preds = %true_block181, %false_block182, %true_block174, %false_block175, %true_block167, %false_block168, %true_block157, %false_block158, %true_block146, %false_block147, %true_block121, %false_block122, %true_block114, %false_block115, %true_block107, %false_block108, %true_block100, %false_block101, %true_block93, %false_block94, %true_block86, %false_block87, %true_block79, %false_block80, %true_block66, %false_block67, %true_block59, %false_block60, %true_block52, %false_block53, %true_block25, %false_block26, %if.entry140, %if.entry137, %if.entry134, %if.entry131, %if.entry128, %if.entry73, %if.entry70, %ifend48, %end41, %CodeGen_codegen_pow_expr.exit, %if.entry22, %CodeGen_get_expr_mem.exit, %if.entry10, %if.entry7
  %common.ret.op = phi ptr [ %15, %if.entry7 ], [ %17, %if.entry10 ], [ %24, %CodeGen_get_expr_mem.exit ], [ %47, %if.entry22 ], [ %68, %CodeGen_codegen_pow_expr.exit ], [ %95, %end41 ], [ null, %ifend48 ], [ %123, %if.entry70 ], [ %124, %if.entry73 ], [ %144, %if.entry128 ], [ %145, %if.entry131 ], [ %146, %if.entry134 ], [ %147, %if.entry137 ], [ %148, %if.entry140 ], [ %48, %true_block25 ], [ %49, %false_block26 ], [ %117, %true_block52 ], [ %118, %false_block53 ], [ %119, %true_block59 ], [ %120, %false_block60 ], [ %121, %true_block66 ], [ %122, %false_block67 ], [ %128, %true_block79 ], [ %129, %false_block80 ], [ %131, %true_block86 ], [ %132, %false_block87 ], [ %133, %true_block93 ], [ %134, %false_block94 ], [ %135, %true_block100 ], [ %136, %false_block101 ], [ %137, %true_block107 ], [ %138, %false_block108 ], [ %139, %true_block114 ], [ %140, %false_block115 ], [ %141, %true_block121 ], [ %142, %false_block122 ], [ %152, %true_block146 ], [ %153, %false_block147 ], [ %154, %true_block157 ], [ %155, %false_block158 ], [ %156, %true_block167 ], [ %157, %false_block168 ], [ %158, %true_block174 ], [ %159, %false_block175 ], [ %160, %true_block181 ], [ %161, %false_block182 ]
  ret ptr %common.ret.op

if.entry7:                                        ; preds = %if.entry
  %14 = tail call ptr @LLVMInt1Type()
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 0, i1 false)
  br label %common.ret

if.entry10:                                       ; preds = %if.entry
  %16 = tail call ptr @LLVMInt1Type()
  %17 = tail call ptr @LLVMConstInt(ptr %16, i64 1, i1 false)
  br label %common.ret

if.entry13:                                       ; preds = %if.entry, %ifend
  %memberidx.i283 = getelementptr inbounds %Expression, ptr %7, i64 0, i32 2
  %18 = load i64, ptr %memberidx.i283, align 4
  switch i64 %18, label %ifend8.i [
    i64 7, label %if.entry.i
    i64 13, label %if.entry2.i
    i64 12, label %if.entry6.i
  ]

if.entry.i:                                       ; preds = %if.entry13
  %19 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %7)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry13
  %20 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %7)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry13
  %21 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %7, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry13
  %22 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %7)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i = phi ptr [ %19, %if.entry.i ], [ %20, %if.entry2.i ], [ %21, %if.entry6.i ], [ %22, %ifend8.i ]
  %23 = load ptr, ptr %memberidx4, align 8
  %24 = tail call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i, ptr %23)
  br label %common.ret

ifend15:                                          ; preds = %if.entry, %ifend
  %25 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %7)
  %26 = load ptr, ptr %memberidx4, align 8
  %27 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %26)
  %28 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %Expression, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx.i, align 4
  %30 = icmp eq i64 %29, 5
  %31 = icmp eq i64 %6, 11
  %32 = icmp eq i64 %6, 12
  %33 = add i64 %6, -11
  %34 = icmp ult i64 %33, 2
  %35 = and i1 %34, %30
  br i1 %35, label %if.entry19, label %ifend21

if.entry19:                                       ; preds = %ifend15
  %36 = tail call i1 @LLVMIsConstant(ptr %25)
  br i1 %36, label %if.entry22, label %ifend24

ifend21:                                          ; preds = %ifend15
  %37 = load ptr, ptr %memberidx1, align 8
  %memberidx30 = getelementptr inbounds %Expression, ptr %37, i64 0, i32 3
  %38 = load ptr, ptr %memberidx30, align 8
  %memberidx32 = getelementptr inbounds %Expression, ptr %28, i64 0, i32 3
  %39 = load ptr, ptr %memberidx32, align 8
  %40 = load i64, ptr %39, align 4
  %41 = add i64 %40, -1
  %42 = icmp ult i64 %41, 11
  %43 = icmp eq i64 %6, 6
  %44 = and i1 %43, %42
  br i1 %44, label %if.entry33, label %ifend35

if.entry22:                                       ; preds = %if.entry19
  %45 = tail call i1 @LLVMIsNull(ptr %25)
  %46 = tail call ptr @LLVMInt1Type()
  %..i = zext i1 %45 to i64
  %47 = tail call ptr @LLVMConstInt(ptr %46, i64 %..i, i1 false)
  br label %common.ret

ifend24:                                          ; preds = %if.entry19
  br i1 %31, label %true_block25, label %false_block26

true_block25:                                     ; preds = %ifend24
  %48 = tail call ptr @LLVMBuildIsNull(ptr %1, ptr %25, ptr nonnull @26)
  br label %common.ret

false_block26:                                    ; preds = %ifend24
  %49 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %25, ptr nonnull @26)
  br label %common.ret

if.entry33:                                       ; preds = %ifend21
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i)
  store ptr %25, ptr %args.i, align 8
  %50 = getelementptr inbounds ptr, ptr %args.i, i64 1
  store ptr %27, ptr %50, align 8
  %51 = tail call fastcc ptr @dump_type(ptr nonnull %39, i1 true)
  %52 = load ptr, ptr %51, align 8
  %memberidx.i276 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %52, i64 0, i32 5
  %53 = load ptr, ptr %memberidx.i276, align 8
  %54 = tail call ptr %53(ptr nonnull %51)
  %55 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @236, ptr %54)
  %56 = load ptr, ptr %4, align 8
  %57 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %57, align 8
  %memberidx.i.i277 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  store ptr %56, ptr %memberidx.i.i277, align 8
  %memberidx1.i.i278 = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  store i64 %55, ptr %memberidx1.i.i278, align 4
  %memberidx2.i.i279 = getelementptr inbounds %string, ptr %57, i64 0, i32 3
  store i64 %55, ptr %memberidx2.i.i279, align 4
  call void @free(ptr %54)
  %58 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %39, i1 true)
  store ptr %58, ptr %arg_types.i, align 8
  %59 = getelementptr inbounds ptr, ptr %arg_types.i, i64 1
  store ptr %58, ptr %59, align 8
  %60 = load ptr, ptr %0, align 8
  %61 = call ptr @malloc(i32 16)
  %memberidx1.i.i.i280 = getelementptr inbounds %IntrinsicResult, ptr %61, i64 0, i32 1
  store i64 0, ptr %61, align 8
  %62 = call ptr @LLVMFunctionType(ptr %58, ptr nonnull %arg_types.i, i64 2, i1 false)
  store ptr %62, ptr %memberidx1.i.i.i280, align 8
  %63 = load ptr, ptr %57, align 8
  %memberidx1.i13.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %63, i64 0, i32 5
  %64 = load ptr, ptr %memberidx1.i13.i, align 8
  %65 = call ptr %64(ptr nonnull %57)
  %66 = call ptr @LLVMGetNamedFunction(ptr %60, ptr %65)
  %.not.i.i = icmp eq ptr %66, null
  br i1 %.not.i.i, label %else.i.i, label %CodeGen_codegen_pow_expr.exit

else.i.i:                                         ; preds = %if.entry33
  %67 = call ptr @LLVMAddFunction(ptr %60, ptr %65, ptr %62)
  br label %CodeGen_codegen_pow_expr.exit

CodeGen_codegen_pow_expr.exit:                    ; preds = %if.entry33, %else.i.i
  %storemerge.i.i = phi ptr [ %67, %else.i.i ], [ %66, %if.entry33 ]
  store ptr %storemerge.i.i, ptr %61, align 8
  %68 = call ptr @LLVMBuildCall2(ptr %1, ptr %62, ptr %storemerge.i.i, ptr nonnull %args.i, i64 2, ptr nonnull @26)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i)
  br label %common.ret

ifend35:                                          ; preds = %ifend21
  %69 = load i64, ptr %38, align 4
  %70 = icmp eq i64 %69, 15
  br i1 %70, label %if.entry36, label %ifend38

if.entry36:                                       ; preds = %ifend35
  %indices = alloca [1 x ptr], align 8
  %71 = icmp eq i64 %6, 1
  br i1 %71, label %end41, label %false_block40

ifend38:                                          ; preds = %ifend35
  %72 = tail call i1 @LLVMIsConstant(ptr %25)
  %73 = tail call i1 @LLVMIsConstant(ptr %27)
  %74 = and i1 %72, %73
  %75 = load i64, ptr %39, align 4
  %76 = load i64, ptr %38, align 4
  %77 = icmp eq i64 %76, 21
  br i1 %77, label %if.entry.i287, label %is_object.exit

if.entry.i287:                                    ; preds = %ifend38, %if.entry.i287
  %.tr5.i = phi ptr [ %78, %if.entry.i287 ], [ %38, %ifend38 ]
  %memberidx1.i286 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %78 = load ptr, ptr %memberidx1.i286, align 8
  %79 = load i64, ptr %78, align 4
  %80 = icmp eq i64 %79, 21
  br i1 %80, label %if.entry.i287, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i287, %ifend38
  %.lcssa.i = phi i64 [ %76, %ifend38 ], [ %79, %if.entry.i287 ]
  %81 = icmp eq i64 %.lcssa.i, 13
  %82 = icmp eq i64 %75, 21
  br i1 %82, label %if.entry.i290, label %is_object.exit292

if.entry.i290:                                    ; preds = %is_object.exit, %if.entry.i290
  %.tr5.i288 = phi ptr [ %83, %if.entry.i290 ], [ %39, %is_object.exit ]
  %memberidx1.i289 = getelementptr inbounds %GenericType, ptr %.tr5.i288, i64 0, i32 3
  %83 = load ptr, ptr %memberidx1.i289, align 8
  %84 = load i64, ptr %83, align 4
  %85 = icmp eq i64 %84, 21
  br i1 %85, label %if.entry.i290, label %is_object.exit292

is_object.exit292:                                ; preds = %if.entry.i290, %is_object.exit
  %.lcssa.i291 = phi i64 [ %75, %is_object.exit ], [ %84, %if.entry.i290 ]
  %86 = icmp eq i64 %.lcssa.i291, 13
  %87 = and i1 %81, %86
  %88 = and i1 %34, %87
  %89 = freeze i1 %88
  br i1 %89, label %if.entry46, label %switch.early.test

switch.early.test:                                ; preds = %is_object.exit292
  switch i64 %75, label %else47 [
    i64 14, label %if.entry46
    i64 7, label %if.entry46
    i64 6, label %if.entry46
    i64 5, label %if.entry46
    i64 4, label %if.entry46
    i64 3, label %if.entry46
    i64 2, label %if.entry46
    i64 1, label %if.entry46
  ]

false_block40:                                    ; preds = %if.entry36
  %90 = tail call i1 @LLVMIsConstant(ptr %27)
  br i1 %90, label %true_block.i, label %false_block.i

true_block.i:                                     ; preds = %false_block40
  %91 = tail call ptr @LLVMConstNeg(ptr %27)
  br label %end41

false_block.i:                                    ; preds = %false_block40
  %92 = tail call ptr @LLVMBuildNeg(ptr %1, ptr %27, ptr nonnull @26)
  br label %end41

end41:                                            ; preds = %if.entry36, %false_block.i, %true_block.i
  %ternary42 = phi ptr [ %91, %true_block.i ], [ %92, %false_block.i ], [ %27, %if.entry36 ]
  store ptr %ternary42, ptr %indices, align 8
  %memberidx43 = getelementptr inbounds %PointerType, ptr %38, i64 0, i32 1
  %93 = load ptr, ptr %memberidx43, align 8
  %94 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %93, i1 true)
  %95 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %94, ptr %25, ptr nonnull %indices, i64 1, ptr nonnull @26)
  br label %common.ret

if.entry46:                                       ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %is_object.exit292
  switch i64 %6, label %else74 [
    i64 1, label %if.entry49
    i64 2, label %if.entry56
    i64 3, label %if.entry63
    i64 4, label %if.entry70
    i64 5, label %if.entry73
  ]

else47:                                           ; preds = %switch.early.test
  %96 = and i64 %75, -4
  %97 = icmp eq i64 %96, 8
  br i1 %97, label %if.entry125, label %else126

ifend48:                                          ; preds = %else84, %else172, %else126, %else144
  %98 = tail call fastcc ptr @dump_bin_op(i64 %6)
  %99 = load ptr, ptr %98, align 8
  %memberidx186 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %99, i64 0, i32 5
  %100 = load ptr, ptr %memberidx186, align 8
  %101 = tail call ptr %100(ptr nonnull %98)
  %102 = load i64, ptr %39, align 4
  %103 = alloca ptr, align 8
  %104 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %103, ptr nonnull @237, i64 %76, ptr %101, i64 %102)
  %105 = load ptr, ptr %103, align 8
  %106 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %106, align 8
  %memberidx.i274 = getelementptr inbounds %string, ptr %106, i64 0, i32 1
  store ptr %105, ptr %memberidx.i274, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %106, i64 0, i32 2
  store i64 %104, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %106, i64 0, i32 3
  store i64 %104, ptr %memberidx2.i, align 4
  tail call void @free(ptr %101)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %107 = load ptr, ptr %106, align 8
  %memberidx.i275 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %107, i64 0, i32 5
  %108 = load ptr, ptr %memberidx.i275, align 8
  %109 = call ptr %108(ptr nonnull %106)
  %110 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @210, ptr %109)
  %111 = load ptr, ptr %5, align 8
  %112 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %112, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %112, i64 0, i32 1
  store ptr %111, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %112, i64 0, i32 2
  store i64 %110, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %112, i64 0, i32 3
  store i64 %110, ptr %memberidx2.i.i, align 4
  call void @free(ptr %109)
  %113 = load ptr, ptr %112, align 8
  %memberidx.i.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %113, i64 0, i32 3
  %114 = load ptr, ptr %memberidx.i.i.i, align 8
  %115 = call ptr %114(ptr nonnull %112)
  %116 = load i64, ptr %memberidx1.i.i, align 4
  call void @write(i64 1, ptr %115, i64 %116)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  br label %common.ret

if.entry49:                                       ; preds = %if.entry46
  br i1 %74, label %true_block52, label %false_block53

true_block52:                                     ; preds = %if.entry49
  %117 = tail call ptr @LLVMConstAdd(ptr %25, ptr %27)
  br label %common.ret

false_block53:                                    ; preds = %if.entry49
  %118 = tail call ptr @LLVMBuildAdd(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry56:                                       ; preds = %if.entry46
  br i1 %74, label %true_block59, label %false_block60

true_block59:                                     ; preds = %if.entry56
  %119 = tail call ptr @LLVMConstSub(ptr %25, ptr %27)
  br label %common.ret

false_block60:                                    ; preds = %if.entry56
  %120 = tail call ptr @LLVMBuildSub(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry63:                                       ; preds = %if.entry46
  br i1 %74, label %true_block66, label %false_block67

true_block66:                                     ; preds = %if.entry63
  %121 = tail call ptr @LLVMConstMul(ptr %25, ptr %27)
  br label %common.ret

false_block67:                                    ; preds = %if.entry63
  %122 = tail call ptr @LLVMBuildMul(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry70:                                       ; preds = %if.entry46
  %123 = tail call ptr @LLVMBuildSDiv(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry73:                                       ; preds = %if.entry46
  %124 = tail call ptr @LLVMBuildSRem(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

else74:                                           ; preds = %if.entry46
  %125 = add i64 %6, -7
  %126 = icmp ult i64 %125, 4
  br i1 %126, label %if.entry76, label %else77

if.entry76:                                       ; preds = %else74
  %127 = add nuw nsw i64 %6, 31
  br i1 %74, label %true_block79, label %false_block80

else77:                                           ; preds = %else74
  br i1 %34, label %if.entry83, label %else84

true_block79:                                     ; preds = %if.entry76
  %128 = tail call ptr @LLVMConstICmp(i64 %127, ptr %25, ptr %27)
  br label %common.ret

false_block80:                                    ; preds = %if.entry76
  %129 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %127, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry83:                                       ; preds = %else77
  %130 = add nuw nsw i64 %6, 21
  br i1 %74, label %true_block86, label %false_block87

else84:                                           ; preds = %else77
  switch i64 %6, label %ifend48 [
    i64 13, label %if.entry90
    i64 14, label %if.entry97
    i64 15, label %if.entry104
    i64 16, label %if.entry111
    i64 17, label %if.entry118
  ]

true_block86:                                     ; preds = %if.entry83
  %131 = tail call ptr @LLVMConstICmp(i64 %130, ptr %25, ptr %27)
  br label %common.ret

false_block87:                                    ; preds = %if.entry83
  %132 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %130, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry90:                                       ; preds = %else84
  br i1 %74, label %true_block93, label %false_block94

true_block93:                                     ; preds = %if.entry90
  %133 = tail call ptr @LLVMConstShl(ptr %25, ptr %27)
  br label %common.ret

false_block94:                                    ; preds = %if.entry90
  %134 = tail call ptr @LLVMBuildShl(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry97:                                       ; preds = %else84
  br i1 %74, label %true_block100, label %false_block101

true_block100:                                    ; preds = %if.entry97
  %135 = tail call ptr @LLVMConstAShr(ptr %25, ptr %27)
  br label %common.ret

false_block101:                                   ; preds = %if.entry97
  %136 = tail call ptr @LLVMBuildAShr(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry104:                                      ; preds = %else84
  br i1 %74, label %true_block107, label %false_block108

true_block107:                                    ; preds = %if.entry104
  %137 = tail call ptr @LLVMConstOr(ptr %25, ptr %27)
  br label %common.ret

false_block108:                                   ; preds = %if.entry104
  %138 = tail call ptr @LLVMBuildOr(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry111:                                      ; preds = %else84
  br i1 %74, label %true_block114, label %false_block115

true_block114:                                    ; preds = %if.entry111
  %139 = tail call ptr @LLVMConstAnd(ptr %25, ptr %27)
  br label %common.ret

false_block115:                                   ; preds = %if.entry111
  %140 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry118:                                      ; preds = %else84
  br i1 %74, label %true_block121, label %false_block122

true_block121:                                    ; preds = %if.entry118
  %141 = tail call ptr @LLVMConstXor(ptr %25, ptr %27)
  br label %common.ret

false_block122:                                   ; preds = %if.entry118
  %142 = tail call ptr @LLVMBuildXor(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry125:                                      ; preds = %else47
  switch i64 %6, label %else141 [
    i64 1, label %if.entry128
    i64 2, label %if.entry131
    i64 3, label %if.entry134
    i64 4, label %if.entry137
    i64 5, label %if.entry140
  ]

else126:                                          ; preds = %else47
  %143 = icmp eq i64 %75, 0
  br i1 %143, label %if.entry161, label %ifend48

if.entry128:                                      ; preds = %if.entry125
  %144 = tail call ptr @LLVMBuildFAdd(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry131:                                      ; preds = %if.entry125
  %145 = tail call ptr @LLVMBuildFSub(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry134:                                      ; preds = %if.entry125
  %146 = tail call ptr @LLVMBuildFMul(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry137:                                      ; preds = %if.entry125
  %147 = tail call ptr @LLVMBuildFDiv(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry140:                                      ; preds = %if.entry125
  %148 = tail call ptr @LLVMBuildFRem(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

else141:                                          ; preds = %if.entry125
  %149 = add i64 %6, -7
  %150 = icmp ult i64 %149, 4
  br i1 %150, label %if.entry143, label %else144

if.entry143:                                      ; preds = %else141
  %151 = add nsw i64 %6, -5
  br i1 %74, label %true_block146, label %false_block147

else144:                                          ; preds = %else141
  br i1 %34, label %if.entry150, label %ifend48

true_block146:                                    ; preds = %if.entry143
  %152 = tail call ptr @LLVMConstFCmp(i64 %151, ptr %25, ptr %27)
  br label %common.ret

false_block147:                                   ; preds = %if.entry143
  %153 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %151, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry150:                                      ; preds = %else144
  %. = select i1 %32, i64 6, i64 1
  br i1 %74, label %true_block157, label %false_block158

true_block157:                                    ; preds = %if.entry150
  %154 = tail call ptr @LLVMConstFCmp(i64 %., ptr %25, ptr %27)
  br label %common.ret

false_block158:                                   ; preds = %if.entry150
  %155 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %., ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry161:                                      ; preds = %else126
  switch i64 %6, label %else172 [
    i64 16, label %if.entry164
    i64 11, label %if.entry164
    i64 15, label %if.entry171
  ]

if.entry164:                                      ; preds = %if.entry161, %if.entry161
  br i1 %74, label %true_block167, label %false_block168

true_block167:                                    ; preds = %if.entry164
  %156 = tail call ptr @LLVMConstAnd(ptr %25, ptr %27)
  br label %common.ret

false_block168:                                   ; preds = %if.entry164
  %157 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry171:                                      ; preds = %if.entry161
  br i1 %74, label %true_block174, label %false_block175

else172:                                          ; preds = %if.entry161
  br i1 %32, label %if.entry178, label %ifend48

true_block174:                                    ; preds = %if.entry171
  %158 = tail call ptr @LLVMConstOr(ptr %25, ptr %27)
  br label %common.ret

false_block175:                                   ; preds = %if.entry171
  %159 = tail call ptr @LLVMBuildOr(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret

if.entry178:                                      ; preds = %else172
  br i1 %74, label %true_block181, label %false_block182

true_block181:                                    ; preds = %if.entry178
  %160 = tail call ptr @LLVMConstXor(ptr %25, ptr %27)
  br label %common.ret

false_block182:                                   ; preds = %if.entry178
  %161 = tail call ptr @LLVMBuildXor(ptr %1, ptr %25, ptr %27, ptr nonnull @26)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_call_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMValueRef_, ptr %5, align 8
  %memberidx.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %5, i64 0, i32 2
  %memberidx1.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %memberidx2 = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 4
  %7 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx3, align 4
  %9 = icmp eq i64 %8, 12
  br i1 %9, label %if.entry, label %if.entry14

if.entry:                                         ; preds = %3
  %memberidx5 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %10 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %MemberExpression, ptr %7, i64 0, i32 5
  %11 = load ptr, ptr %memberidx6, align 8
  %memberidx.i.i = getelementptr inbounds %PropId, ptr %11, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %10, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i.i.i, align 8
  %14 = load i64, ptr %12, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %15, i64 %14
  %16 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %16, i64 0, i32 4
  %17 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %12, i64 0, i32 2
  %18 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %19, i64 %18
  %20 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %memberidx.i57 = getelementptr inbounds %Class, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx.i57, align 8
  %memberidx1.i58 = getelementptr inbounds %PropId, ptr %11, i64 0, i32 2
  %22 = load i64, ptr %memberidx1.i58, align 4
  %memberidx.i3.i = getelementptr inbounds %Array_ClassMethod_, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i3.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %23, i64 %22
  %24 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx7 = getelementptr inbounds %ClassMethod, ptr %24, i64 0, i32 1
  %25 = load i1, ptr %memberidx7, align 1
  br i1 %25, label %ifend21, label %if.entry8

ifend:                                            ; preds = %ifend.i, %if.entry8
  %memberidx13 = getelementptr inbounds %MemberExpression, ptr %7, i64 0, i32 4
  %26 = load ptr, ptr %memberidx13, align 8
  %27 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %26)
  %28 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr nonnull %0, ptr %1, ptr nonnull %7, ptr %27)
  store i64 1, ptr %memberidx.i, align 4
  store ptr %27, ptr %6, align 8
  %29 = icmp eq ptr %28, null
  br i1 %29, label %ifend.if.entry14_crit_edge, label %for.entry

ifend.if.entry14_crit_edge:                       ; preds = %ifend
  %.pre = load ptr, ptr %memberidx2, align 8
  %memberidx18.phi.trans.insert = getelementptr inbounds %Expression, ptr %.pre, i64 0, i32 2
  %.pre118 = load i64, ptr %memberidx18.phi.trans.insert, align 4
  br label %if.entry14

if.entry8:                                        ; preds = %if.entry
  %30 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr nonnull %12)
  %.not.i102 = icmp eq ptr %30, null
  br i1 %.not.i102, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %if.entry8
  %31 = load ptr, ptr %memberidx5, align 8
  %memberidx.i.i106 = getelementptr inbounds %Program, ptr %31, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i.i106, align 8
  %33 = load i64, ptr %12, align 4
  %memberidx.i.i.i107 = getelementptr inbounds %Array_Module_, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i.i.i107, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %34, i64 %33
  %35 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i108 = getelementptr inbounds %Module, ptr %35, i64 0, i32 4
  %36 = load ptr, ptr %memberidx2.i.i108, align 8
  %37 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %38, i64 %37
  %39 = load ptr, ptr %ptridx.i6.i.i, align 8
  tail call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %39)
  tail call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %39)
  %40 = load ptr, ptr %39, align 8
  %41 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %40)
  br label %ifend

if.entry14:                                       ; preds = %ifend.if.entry14_crit_edge, %3
  %42 = phi i64 [ 1, %ifend.if.entry14_crit_edge ], [ 0, %3 ]
  %43 = phi i64 [ %.pre118, %ifend.if.entry14_crit_edge ], [ %8, %3 ]
  %44 = phi ptr [ %.pre, %ifend.if.entry14_crit_edge ], [ %7, %3 ]
  %45 = icmp eq i64 %43, 7
  br i1 %45, label %if.entry19, label %ifend21

if.entry19:                                       ; preds = %if.entry14
  %memberidx23 = getelementptr inbounds %VarAccessExpression, ptr %44, i64 0, i32 4
  %46 = load ptr, ptr %memberidx23, align 8
  %memberidx24 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %47 = load ptr, ptr %memberidx24, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i62 = getelementptr inbounds %VarId, ptr %46, i64 0, i32 1
  %48 = load i64, ptr %memberidx.i62, align 4
  %49 = load i64, ptr %46, align 4
  %memberidx2.i63 = getelementptr inbounds %VarId, ptr %46, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i63, align 4
  %51 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @216, i64 %48, i64 %49, i64 %50)
  %52 = load ptr, ptr %4, align 8
  %53 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %53, align 8
  %memberidx.i.i64 = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  store ptr %52, ptr %memberidx.i.i64, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  store i64 %51, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i65 = getelementptr inbounds %string, ptr %53, i64 0, i32 3
  store i64 %51, ptr %memberidx2.i.i65, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %54 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %53)
  %memberidx.i66 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %47, i64 0, i32 1
  %55 = load i64, ptr %memberidx.i66, align 4
  %56 = srem i64 %54, %55
  %57 = load ptr, ptr %47, align 8
  %ptridx.i67 = getelementptr inbounds ptr, ptr %57, i64 %56
  %58 = load ptr, ptr %ptridx.i67, align 8
  %.not.i68 = icmp eq ptr %58, null
  br i1 %.not.i68, label %ifend21, label %while.entry.i

while.entry.i:                                    ; preds = %if.entry19, %else.i
  %59 = phi ptr [ %69, %else.i ], [ %57, %if.entry19 ]
  %60 = phi i64 [ %70, %else.i ], [ %55, %if.entry19 ]
  %61 = phi ptr [ %73, %else.i ], [ %58, %if.entry19 ]
  %hash.0.i = phi i64 [ %72, %else.i ], [ %56, %if.entry19 ]
  %62 = load ptr, ptr %61, align 8
  %memberidx.i.i69 = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i.i69, align 4
  %64 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %63, %64
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i71 = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i.i71, align 8
  %66 = load ptr, ptr %memberidx.i.i64, align 8
  %67 = call i64 @memcmp(ptr %65, ptr %66, i64 %63)
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre119 = load i64, ptr %memberidx.i66, align 4
  %.pre120 = load ptr, ptr %47, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre121.pre = load ptr, ptr %47, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre121.pre, i64 %hash.0.i
  %.pre122.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre122.pre, null
  br i1 %.not29.i, label %ifend21, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %69 = phi ptr [ %.pre120, %ifend.i.i.else.i_crit_edge ], [ %59, %while.entry.i ]
  %70 = phi i64 [ %.pre119, %ifend.i.i.else.i_crit_edge ], [ %60, %while.entry.i ]
  %71 = add i64 %hash.0.i, 1
  %72 = srem i64 %71, %70
  %ptridx7.i = getelementptr inbounds ptr, ptr %69, i64 %72
  %73 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %73, null
  br i1 %.not30.i, label %ifend21, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre122.pre, i64 0, i32 1
  %74 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %74, null
  br i1 %.not, label %ifend21, label %Array_LLVMValueRef____sl__.exit80

ifend21:                                          ; preds = %else.i, %if.entry19, %if.entry, %while.end.i, %Array_LLVMValueRef____sl__.exit80, %Map_string_LLVMValueRef____getitem__.exit, %if.entry14
  %75 = phi i64 [ %42, %while.end.i ], [ %78, %Array_LLVMValueRef____sl__.exit80 ], [ %42, %Map_string_LLVMValueRef____getitem__.exit ], [ %42, %if.entry14 ], [ 0, %if.entry ], [ %42, %if.entry19 ], [ %42, %else.i ]
  %76 = load ptr, ptr %memberidx2, align 8
  %77 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %76)
  br label %for.entry

Array_LLVMValueRef____sl__.exit80:                ; preds = %Map_string_LLVMValueRef____getitem__.exit
  %78 = add nuw nsw i64 %42, 1
  store i64 %78, ptr %memberidx.i, align 4
  %ptridx.i79 = getelementptr inbounds ptr, ptr %6, i64 %42
  store ptr %74, ptr %ptridx.i79, align 8
  br label %ifend21

for.entry:                                        ; preds = %ifend21, %ifend
  %79 = phi i64 [ %75, %ifend21 ], [ 1, %ifend ]
  %func.1 = phi ptr [ %77, %ifend21 ], [ %28, %ifend ]
  %memberidx29 = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 5
  %80 = load ptr, ptr %memberidx29, align 8
  %81 = call ptr @malloc(i32 25)
  %memberidx.i81 = getelementptr inbounds %Array_Expression_, ptr %80, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %Array_Expression_, ptr %80, i64 0, i32 2
  %83 = load i64, ptr %memberidx1.i82, align 4
  store i1 false, ptr %81, align 1
  %memberidx1.i.i83 = getelementptr inbounds %ArrayIterator_Expression_, ptr %81, i64 0, i32 1
  %memberidx2.i.i84 = getelementptr inbounds %ArrayIterator_Expression_, ptr %81, i64 0, i32 3
  store ptr %82, ptr %memberidx2.i.i84, align 8
  %memberidx3.i.i85 = getelementptr inbounds %ArrayIterator_Expression_, ptr %81, i64 0, i32 2
  store i64 %83, ptr %memberidx3.i.i85, align 4
  store i64 1, ptr %memberidx1.i.i83, align 4
  %84 = icmp slt i64 %83, 1
  br i1 %84, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %Array_LLVMValueRef____sl__.exit97
  %85 = phi ptr [ %92, %Array_LLVMValueRef____sl__.exit97 ], [ %6, %for.entry ]
  %86 = phi i64 [ %93, %Array_LLVMValueRef____sl__.exit97 ], [ 8, %for.entry ]
  %87 = phi i64 [ %94, %Array_LLVMValueRef____sl__.exit97 ], [ %79, %for.entry ]
  %storemerge117.in = phi ptr [ %ptridx.i100, %Array_LLVMValueRef____sl__.exit97 ], [ %82, %for.entry ]
  %storemerge117 = load ptr, ptr %storemerge117.in, align 8
  %88 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %storemerge117)
  %.not.i91 = icmp slt i64 %87, %86
  br i1 %.not.i91, label %Array_LLVMValueRef____sl__.exit97, label %if.entry.i94

if.entry.i94:                                     ; preds = %for.body
  %89 = shl i64 %86, 1
  store i64 %89, ptr %memberidx1.i, align 4
  %90 = shl i64 %86, 4
  %91 = call ptr @realloc(ptr %85, i64 %90)
  store ptr %91, ptr %memberidx2.i, align 8
  br label %Array_LLVMValueRef____sl__.exit97

Array_LLVMValueRef____sl__.exit97:                ; preds = %for.body, %if.entry.i94
  %92 = phi ptr [ %85, %for.body ], [ %91, %if.entry.i94 ]
  %93 = phi i64 [ %86, %for.body ], [ %89, %if.entry.i94 ]
  %94 = add i64 %87, 1
  store i64 %94, ptr %memberidx.i, align 4
  %ptridx.i96 = getelementptr inbounds ptr, ptr %92, i64 %87
  store ptr %88, ptr %ptridx.i96, align 8
  %95 = load i64, ptr %memberidx1.i.i83, align 4
  %96 = add i64 %95, 1
  store i64 %96, ptr %memberidx1.i.i83, align 4
  %97 = load ptr, ptr %memberidx2.i.i84, align 8
  %ptridx.i100 = getelementptr inbounds ptr, ptr %97, i64 %95
  %98 = load i64, ptr %memberidx3.i.i85, align 4
  %99 = icmp sgt i64 %96, %98
  br i1 %99, label %for.end, label %for.body

for.end:                                          ; preds = %Array_LLVMValueRef____sl__.exit97, %for.entry
  %100 = phi i64 [ %79, %for.entry ], [ %94, %Array_LLVMValueRef____sl__.exit97 ]
  %101 = phi ptr [ %6, %for.entry ], [ %92, %Array_LLVMValueRef____sl__.exit97 ]
  tail call void @free(ptr nonnull %81)
  %102 = load ptr, ptr %memberidx2, align 8
  %memberidx32 = getelementptr inbounds %Expression, ptr %102, i64 0, i32 3
  %103 = load ptr, ptr %memberidx32, align 8
  %104 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %103, i1 false)
  %105 = call ptr @LLVMBuildCall2(ptr %1, ptr %104, ptr %func.1, ptr %101, i64 %100, ptr nonnull @26)
  ret ptr %105
}

define internal fastcc ptr @CodeGen_codegen_unary_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 5
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %5)
  switch i64 %4, label %ifend20 [
    i64 1, label %if.entry
    i64 6, label %if.entry7
    i64 7, label %if.entry18
  ]

if.entry:                                         ; preds = %3
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %memberidx2, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 21
  br i1 %9, label %if.entry.i97, label %is_object.exit

if.entry.i97:                                     ; preds = %if.entry, %if.entry.i97
  %.tr5.i = phi ptr [ %10, %if.entry.i97 ], [ %7, %if.entry ]
  %memberidx1.i = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1.i, align 8
  %11 = load i64, ptr %10, align 4
  %12 = icmp eq i64 %11, 21
  br i1 %12, label %if.entry.i97, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i97, %if.entry
  %.lcssa.i = phi i64 [ %8, %if.entry ], [ %11, %if.entry.i97 ]
  %13 = icmp eq i64 %.lcssa.i, 13
  br i1 %13, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %is_object.exit
  tail call fastcc void @CodeGen_codegen_del_call(ptr %0, ptr %1, ptr %6, ptr nonnull %7)
  br label %ifend5

common.ret:                                       ; preds = %else12, %CodeGen_get_expr_mem.exit, %ifend20, %false_block.i, %true_block.i, %true_block, %false_block, %ifend35, %if.entry15, %ifend5
  %common.ret.op = phi ptr [ null, %ifend5 ], [ %24, %if.entry15 ], [ %ternary51, %ifend35 ], [ %27, %true_block ], [ %28, %false_block ], [ %20, %true_block.i ], [ %21, %false_block.i ], [ %6, %ifend20 ], [ %common.ret.op.i, %CodeGen_get_expr_mem.exit ], [ %6, %else12 ]
  ret ptr %common.ret.op

ifend5:                                           ; preds = %is_object.exit, %if.entry3
  %14 = tail call ptr @LLVMBuildFree(ptr %1, ptr %6)
  br label %common.ret

if.entry7:                                        ; preds = %3
  %memberidx10 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %15 = load ptr, ptr %memberidx10, align 8
  %16 = load i64, ptr %15, align 4
  %17 = add i64 %16, -1
  %18 = icmp ult i64 %17, 7
  br i1 %18, label %if.entry11, label %else12

if.entry11:                                       ; preds = %if.entry7
  %19 = tail call i1 @LLVMIsConstant(ptr %6)
  br i1 %19, label %true_block.i, label %false_block.i

true_block.i:                                     ; preds = %if.entry11
  %20 = tail call ptr @LLVMConstNeg(ptr %6)
  br label %common.ret

false_block.i:                                    ; preds = %if.entry11
  %21 = tail call ptr @LLVMBuildNeg(ptr %1, ptr %6, ptr nonnull @26)
  br label %common.ret

else12:                                           ; preds = %if.entry7
  %22 = and i64 %16, -4
  %23 = icmp eq i64 %22, 8
  br i1 %23, label %if.entry15, label %common.ret

if.entry15:                                       ; preds = %else12
  %24 = tail call ptr @LLVMBuildFNeg(ptr %1, ptr %6, ptr nonnull @26)
  br label %common.ret

if.entry18:                                       ; preds = %3
  %25 = tail call i1 @LLVMIsConstant(ptr %6)
  br i1 %25, label %true_block, label %false_block

ifend20:                                          ; preds = %3
  %26 = icmp eq i64 %4, 8
  switch i64 %4, label %common.ret [
    i64 8, label %if.entry21
    i64 5, label %if.entry21
    i64 4, label %if.entry21
    i64 3, label %if.entry21
    i64 2, label %if.entry21
  ]

true_block:                                       ; preds = %if.entry18
  %27 = tail call ptr @LLVMConstNot(ptr %6)
  br label %common.ret

false_block:                                      ; preds = %if.entry18
  %28 = tail call ptr @LLVMBuildNot(ptr %1, ptr %6, ptr nonnull @26)
  br label %common.ret

if.entry21:                                       ; preds = %ifend20, %ifend20, %ifend20, %ifend20, %ifend20
  %memberidx.i = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  %29 = load i64, ptr %memberidx.i, align 4
  switch i64 %29, label %ifend8.i [
    i64 7, label %if.entry.i
    i64 13, label %if.entry2.i
    i64 12, label %if.entry6.i
  ]

if.entry.i:                                       ; preds = %if.entry21
  %30 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %5)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry21
  %31 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %5)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry21
  %32 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %5, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry21
  %33 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %5)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i = phi ptr [ %30, %if.entry.i ], [ %31, %if.entry2.i ], [ %32, %if.entry6.i ], [ %33, %ifend8.i ]
  br i1 %26, label %common.ret, label %ifend26

ifend26:                                          ; preds = %CodeGen_get_expr_mem.exit
  %memberidx27 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %34 = load ptr, ptr %memberidx27, align 8
  %35 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %34, i1 true)
  %36 = icmp eq i64 %4, 2
  %37 = icmp eq i64 %4, 4
  %38 = or i1 %36, %37
  %. = select i1 %38, i64 1, i64 -1
  %39 = load ptr, ptr %memberidx27, align 8
  %40 = load i64, ptr %39, align 4
  %41 = icmp eq i64 %40, 15
  br i1 %41, label %if.entry33, label %else34

if.entry33:                                       ; preds = %ifend26
  %memberidx37 = getelementptr inbounds %PointerType, ptr %39, i64 0, i32 1
  %42 = load ptr, ptr %memberidx37, align 8
  %43 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %42, i1 true)
  %indices = alloca [1 x ptr], align 8
  %44 = tail call ptr @LLVMIntType(i64 64)
  %45 = tail call ptr @LLVMConstInt(ptr %44, i64 %., i1 false)
  store ptr %45, ptr %indices, align 8
  %46 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %43, ptr %6, ptr nonnull %indices, i64 1, ptr nonnull @238)
  br label %ifend35

else34:                                           ; preds = %ifend26
  %47 = add i64 %40, -1
  %48 = icmp ult i64 %47, 11
  br i1 %48, label %if.entry40, label %ifend35

ifend35:                                          ; preds = %end45, %else34, %if.entry33
  %49 = phi ptr [ %56, %end45 ], [ null, %else34 ], [ %46, %if.entry33 ]
  %50 = call ptr @LLVMBuildStore(ptr %1, ptr %49, ptr %common.ret.op.i)
  %51 = icmp ugt i64 %4, 2
  %ternary51 = select i1 %51, ptr %6, ptr %49
  br label %common.ret

if.entry40:                                       ; preds = %else34
  %52 = icmp ult i64 %47, 7
  br i1 %52, label %true_block43, label %false_block44

true_block43:                                     ; preds = %if.entry40
  %53 = tail call ptr @LLVMConstInt(ptr %35, i64 %., i1 false)
  br label %end45

false_block44:                                    ; preds = %if.entry40
  %54 = sitofp i64 %. to double
  %55 = tail call ptr @LLVMConstReal(ptr %35, double %54)
  br label %end45

end45:                                            ; preds = %false_block44, %true_block43
  %ternary47 = phi ptr [ %53, %true_block43 ], [ %55, %false_block44 ]
  %56 = tail call ptr @LLVMBuildAdd(ptr %1, ptr %6, ptr %ternary47, ptr nonnull @26)
  br label %ifend35
}

define internal fastcc ptr @CodeGen_codegen_new_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 6
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load i64, ptr %5, align 4
  switch i64 %6, label %is_object.exit [
    i64 15, label %if.entry
    i64 21, label %if.entry.i56
  ]

if.entry:                                         ; preds = %3
  %7 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %5, i1 true)
  %memberidx1 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %8 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %10)
  %memberidx2 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %12 = load i1, ptr %memberidx2, align 1
  br i1 %12, label %if.entry3, label %else4

if.entry.i56:                                     ; preds = %3, %if.entry.i56
  %.tr5.i = phi ptr [ %13, %if.entry.i56 ], [ %5, %3 ]
  %memberidx1.i55 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %13 = load ptr, ptr %memberidx1.i55, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 21
  br i1 %15, label %if.entry.i56, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i56, %3
  %.lcssa.i = phi i64 [ %6, %3 ], [ %14, %if.entry.i56 ]
  %16 = icmp eq i64 %.lcssa.i, 13
  br i1 %16, label %if.entry6, label %ifend

ifend:                                            ; preds = %else.i, %if.entry.i, %is_object.exit, %if.entry3, %else4
  %ptr.0 = phi ptr [ %17, %if.entry3 ], [ %18, %else4 ], [ null, %is_object.exit ], [ %ptr.1, %if.entry.i ], [ %ptr.1, %else.i ]
  ret ptr %ptr.0

if.entry3:                                        ; preds = %if.entry
  %17 = tail call ptr @LLVMBuildArrayMalloc(ptr %1, ptr %7, ptr %11, ptr nonnull @26)
  br label %ifend

else4:                                            ; preds = %if.entry
  %18 = tail call ptr @LLVMBuildArrayAlloca(ptr %1, ptr %7, ptr %11, ptr nonnull @26)
  br label %ifend

if.entry6:                                        ; preds = %is_object.exit
  %memberidx9 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %19 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Expression_, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx10, align 4
  %21 = add i64 %20, 1
  %22 = alloca ptr, i64 %21, align 8
  %23 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %5, i1 false)
  %memberidx11 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %24 = load i1, ptr %memberidx11, align 1
  br i1 %24, label %if.entry12, label %else13

if.entry12:                                       ; preds = %if.entry6
  %25 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %23, ptr nonnull @26)
  br label %ifend14

else13:                                           ; preds = %if.entry6
  %26 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %23, ptr nonnull @26)
  br label %ifend14

ifend14:                                          ; preds = %else13, %if.entry12
  %ptr.1 = phi ptr [ %25, %if.entry12 ], [ %26, %else13 ]
  store ptr %ptr.1, ptr %22, align 8
  %27 = load ptr, ptr %memberidx9, align 8
  %28 = tail call ptr @malloc(i32 25)
  %memberidx.i.i = getelementptr inbounds %Array_Expression_, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Expression_, ptr %27, i64 0, i32 2
  %30 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %28, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %28, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %28, i64 0, i32 3
  store ptr %29, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %28, i64 0, i32 2
  store i64 %30, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend14, %for.body.i
  %32 = phi i64 [ %35, %for.body.i ], [ 1, %ifend14 ]
  %item.0.i71.in = phi ptr [ %ptridx.i7.i, %for.body.i ], [ %29, %ifend14 ]
  %start.0.i70 = phi i64 [ %33, %for.body.i ], [ 1, %ifend14 ]
  %item.0.i71 = load ptr, ptr %item.0.i71.in, align 8
  %33 = add i64 %start.0.i70, 1
  %ptridx.i = getelementptr inbounds ptr, ptr %22, i64 %start.0.i70
  %34 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %item.0.i71)
  store ptr %34, ptr %ptridx.i, align 8
  %35 = add i64 %32, 1
  store i64 %35, ptr %memberidx1.i.i.i, align 4
  %ptridx.i7.i = getelementptr inbounds ptr, ptr %29, i64 %32
  %36 = icmp sgt i64 %35, %30
  br i1 %36, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend14
  tail call void @free(ptr nonnull %28)
  %memberidx.i39 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %37 = load i64, ptr %5, align 4
  %cond67 = icmp eq i64 %37, 21
  br i1 %cond67, label %if.entry.i60, label %get_class_from_type.exit

if.entry.i60:                                     ; preds = %CodeGen_evaluate_expression_list.exit, %if.entry.i60
  %.tr11.i68 = phi ptr [ %38, %if.entry.i60 ], [ %5, %CodeGen_evaluate_expression_list.exit ]
  %memberidx1.i59 = getelementptr inbounds %GenericType, ptr %.tr11.i68, i64 0, i32 3
  %38 = load ptr, ptr %memberidx1.i59, align 8
  %39 = load i64, ptr %38, align 4
  %cond = icmp eq i64 %39, 21
  br i1 %cond, label %if.entry.i60, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i60, %CodeGen_evaluate_expression_list.exit
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %5, i64 0, i32 1
  %40 = load ptr, ptr %memberidx1.i, align 8
  %41 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %40)
  %.not.i40 = icmp eq ptr %41, null
  br i1 %.not.i40, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %42 = load ptr, ptr %memberidx.i39, align 8
  %memberidx.i.i43 = getelementptr inbounds %Program, ptr %42, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i.i43, align 8
  %44 = load i64, ptr %40, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %43, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %45, i64 %44
  %46 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i44 = getelementptr inbounds %Module, ptr %46, i64 0, i32 4
  %47 = load ptr, ptr %memberidx2.i.i44, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %40, i64 0, i32 2
  %48 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %49, i64 %48
  %50 = load ptr, ptr %ptridx.i6.i.i, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %50)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %50)
  %51 = load ptr, ptr %50, align 8
  %52 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %51)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %52, %ifend.i ], [ %41, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 6
  %53 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %53, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %54 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %53)
  %55 = call ptr @LLVMBuildCall2(ptr %1, ptr %54, ptr nonnull %53, ptr nonnull %22, i64 %21, ptr nonnull @26)
  br label %ifend

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %56 = tail call ptr @malloc(i32 376)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %56, ptr noundef nonnull align 8 dereferenceable(47) @258, i64 47, i1 false)
  %57 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %57, align 8
  %memberidx.i.i45 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  store ptr %56, ptr %memberidx.i.i45, align 8
  %memberidx1.i.i46 = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  store i64 47, ptr %memberidx1.i.i46, align 4
  %memberidx2.i.i47 = getelementptr inbounds %string, ptr %57, i64 0, i32 3
  store i64 47, ptr %memberidx2.i.i47, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %58 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %59 = tail call ptr %58(ptr nonnull %57)
  %60 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @210, ptr %59)
  %61 = load ptr, ptr %4, align 8
  %62 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %62, align 8
  %memberidx.i.i49 = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i.i49, align 8
  %memberidx1.i.i50 = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  store i64 %60, ptr %memberidx1.i.i50, align 4
  %memberidx2.i.i51 = getelementptr inbounds %string, ptr %62, i64 0, i32 3
  store i64 %60, ptr %memberidx2.i.i51, align 4
  call void @free(ptr %59)
  %63 = load ptr, ptr %62, align 8
  %memberidx.i.i.i52 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %63, i64 0, i32 3
  %64 = load ptr, ptr %memberidx.i.i.i52, align 8
  %65 = call ptr %64(ptr nonnull %62)
  %66 = load i64, ptr %memberidx1.i.i50, align 4
  call void @write(i64 1, ptr %65, i64 %66)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %arg_types.i118 = alloca [3 x ptr], align 8
  %arg_types.i107 = alloca [2 x ptr], align 8
  %arg_types.i = alloca [1 x ptr], align 8
  %args.i = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %6 = icmp slt i64 %5, 3
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1, align 8
  br i1 %6, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %9)
  %11 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %10)
  switch i64 %5, label %ifend10 [
    i64 0, label %if.entry2
    i64 1, label %if.entry5
    i64 2, label %if.entry8
  ]

ifend:                                            ; preds = %3
  %memberidx12 = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 2
  %12 = load i64, ptr %memberidx12, align 4
  %13 = alloca ptr, i64 %12, align 8
  %14 = tail call ptr @malloc(i32 25)
  %memberidx.i.i138 = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i.i138, align 8
  %16 = load i64, ptr %memberidx12, align 4
  store i1 false, ptr %14, align 1
  %memberidx1.i.i.i140 = getelementptr inbounds %ArrayIterator_Expression_, ptr %14, i64 0, i32 1
  %memberidx2.i.i.i141 = getelementptr inbounds %ArrayIterator_Expression_, ptr %14, i64 0, i32 3
  store ptr %15, ptr %memberidx2.i.i.i141, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %14, i64 0, i32 2
  store i64 %16, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i140, align 4
  %17 = icmp slt i64 %16, 1
  br i1 %17, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend, %for.body.i
  %18 = phi i64 [ %21, %for.body.i ], [ 1, %ifend ]
  %item.0.i150.in = phi ptr [ %ptridx.i7.i, %for.body.i ], [ %15, %ifend ]
  %start.0.i149 = phi i64 [ %19, %for.body.i ], [ 0, %ifend ]
  %item.0.i150 = load ptr, ptr %item.0.i150.in, align 8
  %19 = add i64 %start.0.i149, 1
  %ptridx.i = getelementptr inbounds ptr, ptr %13, i64 %start.0.i149
  %20 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %item.0.i150)
  store ptr %20, ptr %ptridx.i, align 8
  %21 = add i64 %18, 1
  store i64 %21, ptr %memberidx1.i.i.i140, align 4
  %ptridx.i7.i = getelementptr inbounds ptr, ptr %15, i64 %18
  %22 = icmp sgt i64 %21, %16
  br i1 %22, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend
  tail call void @free(ptr nonnull %14)
  %23 = load ptr, ptr %memberidx1, align 8
  %memberidx.i80 = getelementptr inbounds %Array_Expression_, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i80, align 8
  %25 = load ptr, ptr %24, align 8
  %memberidx15 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx15, align 8
  %memberidx16 = getelementptr inbounds %PointerType, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx16, align 8
  %28 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %27, i1 true)
  %29 = tail call ptr @LLVMSizeOf(ptr %28)
  %30 = icmp eq i64 %5, 6
  br i1 %30, label %if.entry17, label %ifend19

if.entry2:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  %31 = tail call ptr @LLVMInt8Type()
  %32 = tail call ptr @LLVMPointerType(ptr %31, i64 0)
  store ptr %32, ptr %arg_types.i, align 8
  store ptr %11, ptr %args.i, align 8
  %33 = tail call ptr @LLVMDoubleType()
  %34 = load ptr, ptr %0, align 8
  %35 = tail call ptr @malloc(i32 32)
  store i32 1718580321, ptr %35, align 8
  %36 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %36, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %36, i64 0, i32 1
  store ptr %35, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %36, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %36, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i, align 4
  %37 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i7.i = getelementptr inbounds %IntrinsicResult, ptr %37, i64 0, i32 1
  store i64 0, ptr %37, align 8
  %38 = call ptr @LLVMFunctionType(ptr %33, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %38, ptr %memberidx1.i.i7.i, align 8
  %39 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %40 = call ptr %39(ptr nonnull %36)
  %41 = call ptr @LLVMGetNamedFunction(ptr %34, ptr %40)
  %.not.i.i = icmp eq ptr %41, null
  br i1 %.not.i.i, label %else.i.i, label %CodeGen_codegen_atof_call.exit

else.i.i:                                         ; preds = %if.entry2
  %42 = call ptr @LLVMAddFunction(ptr %34, ptr %40, ptr %38)
  br label %CodeGen_codegen_atof_call.exit

CodeGen_codegen_atof_call.exit:                   ; preds = %if.entry2, %else.i.i
  %storemerge.i.i = phi ptr [ %42, %else.i.i ], [ %41, %if.entry2 ]
  store ptr %storemerge.i.i, ptr %37, align 8
  %43 = call ptr @LLVMBuildCall2(ptr %1, ptr %38, ptr %storemerge.i.i, ptr nonnull %args.i, i64 1, ptr nonnull @26)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  br label %ifend10

if.entry5:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  %44 = tail call ptr @LLVMInt8Type()
  %45 = tail call ptr @LLVMPointerType(ptr %44, i64 0)
  store ptr %45, ptr %arg_types.i, align 8
  store ptr %11, ptr %args.i, align 8
  %46 = tail call ptr @LLVMInt32Type()
  %47 = load ptr, ptr %0, align 8
  %48 = tail call ptr @malloc(i32 32)
  store i32 1768911969, ptr %48, align 8
  %49 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %49, align 8
  %memberidx.i.i.i83 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  store ptr %48, ptr %memberidx.i.i.i83, align 8
  %memberidx1.i.i.i84 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i84, align 4
  %memberidx2.i.i.i85 = getelementptr inbounds %string, ptr %49, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i85, align 4
  %50 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i7.i86 = getelementptr inbounds %IntrinsicResult, ptr %50, i64 0, i32 1
  store i64 0, ptr %50, align 8
  %51 = call ptr @LLVMFunctionType(ptr %46, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %51, ptr %memberidx1.i.i7.i86, align 8
  %52 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %53 = call ptr %52(ptr nonnull %49)
  %54 = call ptr @LLVMGetNamedFunction(ptr %47, ptr %53)
  %.not.i.i89 = icmp eq ptr %54, null
  br i1 %.not.i.i89, label %else.i.i91, label %CodeGen_codegen_atoi_call.exit

else.i.i91:                                       ; preds = %if.entry5
  %55 = call ptr @LLVMAddFunction(ptr %47, ptr %53, ptr %51)
  br label %CodeGen_codegen_atoi_call.exit

CodeGen_codegen_atoi_call.exit:                   ; preds = %if.entry5, %else.i.i91
  %storemerge.i.i92 = phi ptr [ %55, %else.i.i91 ], [ %54, %if.entry5 ]
  store ptr %storemerge.i.i92, ptr %50, align 8
  %56 = call ptr @LLVMBuildCall2(ptr %1, ptr %51, ptr %storemerge.i.i92, ptr nonnull %args.i, i64 1, ptr nonnull @26)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  br label %ifend10

if.entry8:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  %57 = tail call ptr @LLVMInt8Type()
  %58 = tail call ptr @LLVMPointerType(ptr %57, i64 0)
  store ptr %58, ptr %arg_types.i, align 8
  store ptr %11, ptr %args.i, align 8
  %59 = tail call ptr @LLVMInt64Type()
  %60 = load ptr, ptr %0, align 8
  %61 = tail call ptr @malloc(i32 32)
  store i32 1819243617, ptr %61, align 8
  %62 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %62, align 8
  %memberidx.i.i.i96 = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i.i.i96, align 8
  %memberidx1.i.i.i97 = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i97, align 4
  %memberidx2.i.i.i98 = getelementptr inbounds %string, ptr %62, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i98, align 4
  %63 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i7.i99 = getelementptr inbounds %IntrinsicResult, ptr %63, i64 0, i32 1
  store i64 0, ptr %63, align 8
  %64 = call ptr @LLVMFunctionType(ptr %59, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %64, ptr %memberidx1.i.i7.i99, align 8
  %65 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %66 = call ptr %65(ptr nonnull %62)
  %67 = call ptr @LLVMGetNamedFunction(ptr %60, ptr %66)
  %.not.i.i102 = icmp eq ptr %67, null
  br i1 %.not.i.i102, label %else.i.i104, label %CodeGen_codegen_atol_call.exit

else.i.i104:                                      ; preds = %if.entry8
  %68 = call ptr @LLVMAddFunction(ptr %60, ptr %66, ptr %64)
  br label %CodeGen_codegen_atol_call.exit

CodeGen_codegen_atol_call.exit:                   ; preds = %if.entry8, %else.i.i104
  %storemerge.i.i105 = phi ptr [ %68, %else.i.i104 ], [ %67, %if.entry8 ]
  store ptr %storemerge.i.i105, ptr %63, align 8
  %69 = call ptr @LLVMBuildCall2(ptr %1, ptr %64, ptr %storemerge.i.i105, ptr nonnull %args.i, i64 1, ptr nonnull @26)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  br label %ifend10

common.ret:                                       ; preds = %ifend42, %if.entry40, %if.entry34, %if.entry27, %CodeGen_codegen_memcmp_call.exit, %CodeGen_codegen_realloc_call.exit, %ifend10
  %common.ret.op = phi ptr [ %70, %ifend10 ], [ %87, %CodeGen_codegen_realloc_call.exit ], [ %105, %CodeGen_codegen_memcmp_call.exit ], [ %112, %if.entry27 ], [ %114, %if.entry34 ], [ %115, %if.entry40 ], [ null, %ifend42 ]
  ret ptr %common.ret.op

ifend10:                                          ; preds = %CodeGen_codegen_atoi_call.exit, %CodeGen_codegen_atof_call.exit, %if.entry, %CodeGen_codegen_atol_call.exit
  %70 = phi ptr [ %56, %CodeGen_codegen_atoi_call.exit ], [ %43, %CodeGen_codegen_atof_call.exit ], [ null, %if.entry ], [ %69, %CodeGen_codegen_atol_call.exit ]
  %71 = call ptr @LLVMBuildFree(ptr %1, ptr %11)
  br label %common.ret

if.entry17:                                       ; preds = %CodeGen_evaluate_expression_list.exit
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 1
  %72 = load ptr, ptr %ptridx, align 8
  %73 = tail call ptr @LLVMBuildMul(ptr %1, ptr %72, ptr %29, ptr nonnull @26)
  store ptr %73, ptr %ptridx, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i107)
  %74 = tail call ptr @LLVMInt8Type()
  %75 = tail call ptr @LLVMPointerType(ptr %74, i64 0)
  store ptr %75, ptr %arg_types.i107, align 8
  %76 = getelementptr inbounds ptr, ptr %arg_types.i107, i64 1
  %77 = tail call ptr @LLVMIntType(i64 64)
  store ptr %77, ptr %76, align 8
  %78 = load ptr, ptr %0, align 8
  %79 = tail call ptr @malloc(i32 56)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %79, ptr noundef nonnull align 8 dereferenceable(7) @218, i64 7, i1 false)
  %80 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %80, align 8
  %memberidx.i.i.i108 = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  store ptr %79, ptr %memberidx.i.i.i108, align 8
  %memberidx1.i.i.i109 = getelementptr inbounds %string, ptr %80, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i109, align 4
  %memberidx2.i.i.i110 = getelementptr inbounds %string, ptr %80, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i110, align 4
  %81 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i6.i = getelementptr inbounds %IntrinsicResult, ptr %81, i64 0, i32 1
  store i64 0, ptr %81, align 8
  %82 = call ptr @LLVMFunctionType(ptr %75, ptr nonnull %arg_types.i107, i64 2, i1 false)
  store ptr %82, ptr %memberidx1.i.i6.i, align 8
  %83 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %84 = call ptr %83(ptr nonnull %80)
  %85 = call ptr @LLVMGetNamedFunction(ptr %78, ptr %84)
  %.not.i.i113 = icmp eq ptr %85, null
  br i1 %.not.i.i113, label %else.i.i115, label %CodeGen_codegen_realloc_call.exit

else.i.i115:                                      ; preds = %if.entry17
  %86 = call ptr @LLVMAddFunction(ptr %78, ptr %84, ptr %82)
  br label %CodeGen_codegen_realloc_call.exit

CodeGen_codegen_realloc_call.exit:                ; preds = %if.entry17, %else.i.i115
  %storemerge.i.i116 = phi ptr [ %86, %else.i.i115 ], [ %85, %if.entry17 ]
  store ptr %storemerge.i.i116, ptr %81, align 8
  %87 = call ptr @LLVMBuildCall2(ptr %1, ptr %82, ptr %storemerge.i.i116, ptr nonnull %13, i64 2, ptr nonnull @26)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i107)
  br label %common.ret

ifend19:                                          ; preds = %CodeGen_evaluate_expression_list.exit
  %ptridx21 = getelementptr inbounds ptr, ptr %13, i64 2
  %88 = load ptr, ptr %ptridx21, align 8
  %89 = tail call ptr @LLVMBuildMul(ptr %1, ptr %88, ptr %29, ptr nonnull @26)
  store ptr %89, ptr %ptridx21, align 8
  %90 = icmp eq i64 %5, 7
  br i1 %90, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %ifend19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %arg_types.i118)
  %91 = tail call ptr @LLVMInt8Type()
  %92 = tail call ptr @LLVMPointerType(ptr %91, i64 0)
  %93 = tail call ptr @LLVMIntType(i64 64)
  store ptr %92, ptr %arg_types.i118, align 8
  %94 = getelementptr inbounds ptr, ptr %arg_types.i118, i64 1
  store ptr %92, ptr %94, align 8
  %95 = getelementptr inbounds ptr, ptr %arg_types.i118, i64 2
  store ptr %93, ptr %95, align 8
  %96 = load ptr, ptr %0, align 8
  %97 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %97, ptr noundef nonnull align 8 dereferenceable(6) @219, i64 6, i1 false)
  %98 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %98, align 8
  %memberidx.i.i.i119 = getelementptr inbounds %string, ptr %98, i64 0, i32 1
  store ptr %97, ptr %memberidx.i.i.i119, align 8
  %memberidx1.i.i.i120 = getelementptr inbounds %string, ptr %98, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i.i120, align 4
  %memberidx2.i.i.i121 = getelementptr inbounds %string, ptr %98, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i.i121, align 4
  %99 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i7.i122 = getelementptr inbounds %IntrinsicResult, ptr %99, i64 0, i32 1
  store i64 0, ptr %99, align 8
  %100 = call ptr @LLVMFunctionType(ptr %93, ptr nonnull %arg_types.i118, i64 3, i1 false)
  store ptr %100, ptr %memberidx1.i.i7.i122, align 8
  %101 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %102 = call ptr %101(ptr nonnull %98)
  %103 = call ptr @LLVMGetNamedFunction(ptr %96, ptr %102)
  %.not.i.i125 = icmp eq ptr %103, null
  br i1 %.not.i.i125, label %else.i.i127, label %CodeGen_codegen_memcmp_call.exit

else.i.i127:                                      ; preds = %if.entry23
  %104 = call ptr @LLVMAddFunction(ptr %96, ptr %102, ptr %100)
  br label %CodeGen_codegen_memcmp_call.exit

CodeGen_codegen_memcmp_call.exit:                 ; preds = %if.entry23, %else.i.i127
  %storemerge.i.i128 = phi ptr [ %104, %else.i.i127 ], [ %103, %if.entry23 ]
  store ptr %storemerge.i.i128, ptr %99, align 8
  %105 = call ptr @LLVMBuildCall2(ptr %1, ptr %100, ptr %storemerge.i.i128, ptr nonnull %13, i64 3, ptr nonnull @26)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %arg_types.i118)
  br label %common.ret

ifend25:                                          ; preds = %ifend19
  %106 = load ptr, ptr %13, align 8
  %107 = tail call i64 @LLVMGetAlignment(ptr %106)
  %108 = icmp eq i64 %5, 5
  %ptridx31 = getelementptr inbounds ptr, ptr %13, i64 1
  %109 = load ptr, ptr %ptridx31, align 8
  br i1 %108, label %if.entry27, label %ifend29

if.entry27:                                       ; preds = %ifend25
  %110 = tail call ptr @LLVMInt8Type()
  %111 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %109, ptr %110, i1 false, ptr nonnull @26)
  %112 = tail call ptr @LLVMBuildMemSet(ptr %1, ptr %106, ptr %111, ptr %89, i64 %107)
  br label %common.ret

ifend29:                                          ; preds = %ifend25
  %113 = tail call i64 @LLVMGetAlignment(ptr %109)
  switch i64 %5, label %ifend42 [
    i64 3, label %if.entry34
    i64 4, label %if.entry40
  ]

if.entry34:                                       ; preds = %ifend29
  %114 = tail call ptr @LLVMBuildMemCpy(ptr %1, ptr %106, i64 %107, ptr %109, i64 %113, ptr %89)
  br label %common.ret

if.entry40:                                       ; preds = %ifend29
  %115 = tail call ptr @LLVMBuildMemMove(ptr %1, ptr %106, i64 %107, ptr %109, i64 %113, ptr %89)
  br label %common.ret

ifend42:                                          ; preds = %ifend29
  %116 = tail call ptr @malloc(i32 168)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %116, ptr noundef nonnull align 8 dereferenceable(21) @248, i64 21, i1 false)
  %117 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %117, align 8
  %memberidx.i.i130 = getelementptr inbounds %string, ptr %117, i64 0, i32 1
  store ptr %116, ptr %memberidx.i.i130, align 8
  %memberidx1.i.i131 = getelementptr inbounds %string, ptr %117, i64 0, i32 2
  store i64 21, ptr %memberidx1.i.i131, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %117, i64 0, i32 3
  store i64 21, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %118 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %119 = tail call ptr %118(ptr nonnull %117)
  %120 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @210, ptr %119)
  %121 = load ptr, ptr %4, align 8
  %122 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %122, align 8
  %memberidx.i.i133 = getelementptr inbounds %string, ptr %122, i64 0, i32 1
  store ptr %121, ptr %memberidx.i.i133, align 8
  %memberidx1.i.i134 = getelementptr inbounds %string, ptr %122, i64 0, i32 2
  store i64 %120, ptr %memberidx1.i.i134, align 4
  %memberidx2.i.i135 = getelementptr inbounds %string, ptr %122, i64 0, i32 3
  store i64 %120, ptr %memberidx2.i.i135, align 4
  call void @free(ptr %119)
  %123 = load ptr, ptr %122, align 8
  %memberidx.i.i.i136 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %123, i64 0, i32 3
  %124 = load ptr, ptr %memberidx.i.i.i136, align 8
  %125 = call ptr %124(ptr nonnull %122)
  %126 = load i64, ptr %memberidx1.i.i134, align 4
  call void @write(i64 1, ptr %125, i64 %126)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %common.ret
}

declare ptr @LLVMModuleCreateWithName(ptr) local_unnamed_addr

declare i1 @LLVMIsConstant(ptr) local_unnamed_addr

declare ptr @LLVMConstNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstInt(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMInt1Type() local_unnamed_addr

declare ptr @LLVMIntType(i64) local_unnamed_addr

declare ptr @LLVMVoidType() local_unnamed_addr

declare ptr @LLVMInt8Type() local_unnamed_addr

declare ptr @LLVMInt16Type() local_unnamed_addr

declare ptr @LLVMInt32Type() local_unnamed_addr

declare ptr @LLVMInt64Type() local_unnamed_addr

declare ptr @LLVMInt128Type() local_unnamed_addr

declare ptr @LLVMHalfType() local_unnamed_addr

declare ptr @LLVMFloatType() local_unnamed_addr

declare ptr @LLVMDoubleType() local_unnamed_addr

declare ptr @LLVMPointerType(ptr, i64) local_unnamed_addr

declare ptr @LLVMArrayType(ptr, i64) local_unnamed_addr

declare ptr @LLVMFunctionType(ptr, ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMBuildRet(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildRetVoid(ptr) local_unnamed_addr

declare ptr @LLVMConstReal(ptr, double) local_unnamed_addr

declare ptr @LLVMAddFunction(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCall2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVM_GetFunctionType(ptr) local_unnamed_addr

declare ptr @LLVMBuildGlobalString(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAlloca(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildLoad2(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSelect(ptr, ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetTypeKind(ptr) local_unnamed_addr

declare ptr @LLVMTypeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsGlobalConstant(ptr) local_unnamed_addr

define internal fastcc noalias ptr @get_format_from_type(ptr nocapture readonly %0) unnamed_addr {
  %2 = load i64, ptr %0, align 4
  %3 = add i64 %2, -1
  %4 = icmp ult i64 %3, 7
  br i1 %4, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  switch i64 %2, label %ifend7 [
    i64 6, label %if.entry1
    i64 5, label %if.entry5
  ]

ifend:                                            ; preds = %1
  %5 = and i64 %2, -2
  switch i64 %5, label %ifend17 [
    i64 8, label %if.entry10
    i64 10, label %if.entry15
  ]

common.ret:                                       ; preds = %ifend20, %if.entry18, %if.entry15, %if.entry10, %ifend7, %if.entry5, %if.entry1
  %.sink49 = phi ptr [ %14, %ifend20 ], [ %13, %if.entry18 ], [ %11, %if.entry15 ], [ %10, %if.entry10 ], [ %9, %ifend7 ], [ %8, %if.entry5 ], [ %7, %if.entry1 ]
  %.sink47 = phi i64 [ 2, %ifend20 ], [ 4, %if.entry18 ], [ 3, %if.entry15 ], [ 2, %if.entry10 ], [ 2, %ifend7 ], [ 2, %if.entry5 ], [ 3, %if.entry1 ]
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %6, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  store ptr %.sink49, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  store i64 %.sink47, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 3
  store i64 %.sink47, ptr %memberidx2.i.i, align 4
  ret ptr %6

if.entry1:                                        ; preds = %if.entry
  %7 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %7, ptr noundef nonnull align 8 dereferenceable(3) @222, i64 3, i1 false)
  br label %common.ret

if.entry5:                                        ; preds = %if.entry
  %8 = tail call ptr @malloc(i32 16)
  store i16 25708, ptr %8, align 8
  br label %common.ret

ifend7:                                           ; preds = %if.entry
  %9 = tail call ptr @malloc(i32 16)
  store i16 25637, ptr %9, align 8
  br label %common.ret

if.entry10:                                       ; preds = %ifend
  %10 = tail call ptr @malloc(i32 16)
  store i16 26149, ptr %10, align 8
  br label %common.ret

if.entry15:                                       ; preds = %ifend
  %11 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %11, ptr noundef nonnull align 8 dereferenceable(3) @223, i64 3, i1 false)
  br label %common.ret

ifend17:                                          ; preds = %ifend
  %12 = icmp eq i64 %2, 15
  br i1 %12, label %if.entry18, label %ifend20

if.entry18:                                       ; preds = %ifend17
  %13 = tail call ptr @malloc(i32 32)
  store i32 1478850608, ptr %13, align 8
  br label %common.ret

ifend20:                                          ; preds = %ifend17
  %14 = tail call ptr @malloc(i32 16)
  store i16 29477, ptr %14, align 8
  br label %common.ret
}

declare ptr @LLVMBuildMalloc(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFree(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildStore(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildInBoundsGEP2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMConstArray(ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMConstMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMSizeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsNull(ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNotNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstAdd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstSub(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstICmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildICmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstShl(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildShl(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstAShr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAShr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstOr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildOr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstAnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAnd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstXor(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildXor(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFCmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFCmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstSIToFP(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSIToFP(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFPToSI(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPToSI(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstIntCast(ptr, ptr, i1) local_unnamed_addr

declare ptr @LLVMBuildIntCast2(ptr, ptr, ptr, i1, ptr) local_unnamed_addr

declare ptr @LLVMConstFPCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstBitCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBitCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNot(ptr) local_unnamed_addr

declare ptr @LLVMBuildNot(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetInitializer(ptr) local_unnamed_addr

declare ptr @LLVMConstNull(ptr) local_unnamed_addr

declare ptr @LLVMAppendBasicBlock(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCondBr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMPositionBuilderAtEnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildPhi(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMAddIncoming(ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildArrayMalloc(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildArrayAlloca(ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetAlignment(ptr) local_unnamed_addr

declare ptr @LLVMBuildMemSet(ptr, ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildMemCpy(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMBuildMemMove(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare void @LLVMDeleteBasicBlock(ptr) local_unnamed_addr

declare ptr @LLVMAddGlobal(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMSetInitializer(ptr, ptr) local_unnamed_addr

declare void @LLVMSetGlobalConstant(ptr, i1) local_unnamed_addr

declare void @LLVMSetLinkage(ptr, i64) local_unnamed_addr

declare ptr @LLVMCreateBuilder() local_unnamed_addr

declare ptr @LLVMGetParam(ptr, i64) local_unnamed_addr

declare void @LLVMDisposeBuilder(ptr) local_unnamed_addr

declare ptr @LLVMStructType(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMConstStruct(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMStructCreateNamed(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetModuleContext(ptr) local_unnamed_addr

declare void @LLVMStructSetBody(ptr, ptr, i64, i1) local_unnamed_addr

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.abs.i64(i64, i1 immarg) #13

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #13

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #14

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #14

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #15

attributes #0 = { nofree norecurse nosync nounwind readonly }
attributes #1 = { argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn }
attributes #2 = { mustprogress nofree norecurse nosync nounwind readonly willreturn }
attributes #3 = { argmemonly mustprogress nocallback nofree nounwind willreturn }
attributes #4 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1) "alloc-family"="malloc" }
attributes #5 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free") "alloc-family"="malloc" }
attributes #6 = { argmemonly mustprogress nofree nounwind readonly willreturn }
attributes #7 = { mustprogress nofree norecurse nosync nounwind willreturn }
attributes #8 = { nofree }
attributes #9 = { nofree nounwind }
attributes #10 = { mustprogress nofree nounwind readonly willreturn }
attributes #11 = { mustprogress nounwind willreturn }
attributes #12 = { nofree nosync nounwind readonly }
attributes #13 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #14 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }
attributes #15 = { argmemonly nocallback nofree nounwind willreturn writeonly }
