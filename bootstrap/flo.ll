; ModuleID = 'src/main.flo'
source_filename = "src/main.flo"
target triple = "x86_64-pc-linux-gnu"

%string = type <{ ptr, ptr, i64, i64 }>
%Array_string_ = type <{ ptr, ptr, i64, i64 }>
%CodeGen = type <{ ptr, ptr, ptr, ptr, ptr, i1, ptr, ptr, ptr, ptr, ptr }>
%TypeChecker = type <{ ptr, ptr, ptr, ptr, ptr, ptr, i1, i1, ptr }>
%Compiler = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_FloFile_ = type <{ ptr, ptr, i64, i64 }>
%Array_FloError_ = type <{ ptr, ptr, i64, i64 }>
%Map_string_FileId_ = type <{ ptr, i64, i64 }>
%Program = type <{ i1, ptr }>
%Array_Module_ = type <{ ptr, ptr, i64, i64 }>
%Map_string_Generic_ = type <{ ptr, i64, i64 }>
%Module = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Map_string_LLVMValueRef_ = type <{ ptr, i64, i64 }>
%Map_string_CGClassType_ = type <{ ptr, i64, i64 }>
%Map_string_CGEnumType_ = type <{ ptr, i64, i64 }>
%Array_Enum_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_Enum_ = type <{ i1, i64, i64, ptr }>
%Array_Class_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_Class_ = type <{ i1, i64, i64, ptr }>
%Array_ConstDeclaration_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_ConstDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_VarDeclaration_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_VarDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_Function_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_Function_ = type <{ i1, i64, i64, ptr }>
%MapIterator_string_LLVMValueRef_ = type <{ i1, ptr, i64, i64 }>
%MapIterator_string_CGClassType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_string_CGClassType_ = type <{ ptr, ptr }>
%MapIterator_string_CGEnumType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_string_CGEnumType_ = type <{ ptr, ptr }>
%ArrayIterator_Module_ = type <{ i1, i64, i64, ptr }>
%Array_Var_ = type <{ ptr, ptr, i64, i64 }>
%Class = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, i1 }>
%Array_ClassField_ = type <{ ptr, ptr, i64, i64 }>
%Array_ClassMethod_ = type <{ ptr, ptr, i64, i64 }>
%Enum = type <{ ptr, ptr, ptr, ptr }>
%Array_EnumField_ = type <{ ptr, ptr, i64, i64 }>
%EnumField = type <{ ptr, ptr, ptr }>
%ScopeId = type <{ i64, i64 }>
%Array_Scope_ = type <{ ptr, ptr, i64, i64 }>
%Array_Const_ = type <{ ptr, ptr, i64, i64 }>
%GeneratedModule = type <{ ptr, ptr, ptr, ptr }>
%FloFile = type <{ ptr, ptr }>
%FloError = type <{ i64, ptr, ptr }>
%FloRange = type <{ i64, i64, i64, i64 }>
%Range = type <{ i64, i64 }>
%RangeIterator = type <{ i1, i64, i64 }>
%MapEntry_string_FileId_ = type <{ ptr, ptr }>
%File = type <{ ptr, i64 }>
%ArrayIterator_FloError_ = type <{ i1, i64, i64, ptr }>
%MapIterator_string_FileId_ = type <{ i1, ptr, i64, i64 }>
%Array_ScopeId_ = type <{ ptr, ptr, i64, i64 }>
%Map_string_VarId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_VarId_ = type <{ ptr, ptr }>
%Scope = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Map_string_EnumId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_EnumId_ = type <{ ptr, ptr }>
%Map_string_Type_ = type <{ ptr, i64, i64 }>
%MapEntry_string_Type_ = type <{ ptr, ptr }>
%Map_string_ClassId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_ClassId_ = type <{ ptr, ptr }>
%Map_string_PropId_ = type <{ ptr, i64, i64 }>
%MapEntry_string_PropId_ = type <{ ptr, ptr }>
%Array_FunctionArg_ = type <{ ptr, ptr, i64, i64 }>
%Array_Statement_ = type <{ ptr, ptr, i64, i64 }>
%Array_Type_ = type <{ ptr, ptr, i64, i64 }>
%Array_Token_ = type <{ ptr, ptr, i64, i64 }>
%Array_Array_Token__ = type <{ ptr, ptr, i64, i64 }>
%Array_uint_ = type <{ ptr, ptr, i64, i64 }>
%Array_ImportClause_ = type <{ ptr, ptr, i64, i64 }>
%Array_ImportNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_VarDeclarationStatement_ = type <{ ptr, ptr, i64, i64 }>
%Array_EnumNodeField_ = type <{ ptr, ptr, i64, i64 }>
%Array_EnumNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_TypeAliasNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_ConstDeclarationStatement_ = type <{ ptr, ptr, i64, i64 }>
%Array_ArgNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_StatementNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_MethodNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_FieldNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_TypeNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_GenericParameterNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_ClassDeclarationNode_ = type <{ ptr, ptr, i64, i64 }>
%Array_FunctionDeclarationNode_ = type <{ ptr, ptr, i64, i64 }>
%ModuleAST = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Lexer = type <{ i8, ptr, ptr, i64, i64, i64 }>
%Token = type <{ i64, ptr }>
%StringBuilder = type <{ ptr, ptr, i64, ptr, i64 }>
%StrToken = type <{ i64, ptr, ptr, ptr, ptr }>
%IntToken = type <{ i64, ptr, i64 }>
%IdentifierToken = type <{ i64, ptr, ptr }>
%FloatToken = type <{ i64, ptr, double }>
%CharToken = type <{ i64, ptr, i8 }>
%Parser = type <{ ptr, ptr, ptr, i64 }>
%FunctionDeclarationNode = type <{ ptr, ptr, ptr, ptr, i1 }>
%TypeNode = type <{ ptr, i64 }>
%RecordTypeNode = type <{ ptr, i64, ptr, ptr }>
%ClassDeclarationNode = type <{ ptr, ptr, ptr, ptr, ptr }>
%FieldNode = type <{ ptr, i64, ptr, ptr }>
%MethodNode = type <{ ptr, ptr, ptr, i64, ptr, i1, i1 }>
%EnumNode = type <{ ptr, ptr, ptr }>
%EnumNodeField = type <{ ptr, ptr }>
%ImportNode = type <{ ptr, ptr, ptr }>
%ImportClause = type <{ ptr, ptr }>
%TypeAliasNode = type <{ ptr, ptr }>
%BlockNode = type <{ ptr, ptr }>
%FunctionTypeNode = type <{ ptr, i64, ptr, ptr }>
%PointerTypeNode = type <{ ptr, i64, ptr }>
%ArrayTypeNode = type <{ ptr, i64, ptr, ptr }>
%Array_ExpressionNode_ = type <{ ptr, ptr, i64, i64 }>
%StatementNode = type <{ ptr, i64 }>
%ExpressionNode = type <{ ptr, i64, i64 }>
%StringExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%VarDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%NewExpressionNode = type <{ ptr, i64, i64, ptr, i1, ptr }>
%IfStatementNode = type <{ ptr, i64, ptr, ptr, ptr }>
%WhileStatementNode = type <{ ptr, i64, ptr, ptr }>
%ForStatementNode = type <{ ptr, i64, ptr, ptr, ptr, ptr, i64, ptr, ptr }>
%ReturnStatementNode = type <{ ptr, i64, ptr }>
%ConstDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%ArgNode = type <{ ptr, ptr, ptr }>
%IntExpressionNode = type <{ ptr, i64, i64, ptr }>
%FloatExpressionNode = type <{ ptr, i64, i64, ptr }>
%CharExpressionNode = type <{ ptr, i64, i64, ptr }>
%VarAccessExpressionNode = type <{ ptr, i64, i64, ptr }>
%ArrayExpressionNode = type <{ ptr, i64, i64, ptr }>
%CallExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%ExpressionIndexNode = type <{ ptr, i64, i64, ptr, ptr }>
%MemberExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%UnaryExpressionNode = type <{ ptr, i64, i64, i64, ptr }>
%BinaryExpressionNode = type <{ ptr, i64, i64, ptr, i64, ptr }>
%TypeCastExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%TernaryExpressionNode = type <{ ptr, i64, i64, ptr, ptr, ptr }>
%ArrayIterator_ImportNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_EnumNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ClassDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_TypeAliasNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ConstDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%ConstDeclaration = type <{ i64, ptr, ptr, i1 }>
%ArrayIterator_VarDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%VarDeclaration = type <{ i64, ptr, ptr, i1 }>
%VarId = type <{ i64, i64, i64 }>
%Var = type <{ ptr, ptr, ptr }>
%Expression = type <{ i64, i1, i64, ptr }>
%ArrayIterator_FunctionDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%Function = type <{ ptr, ptr, ptr, ptr, ptr, ptr, i1 }>
%Block = type <{ ptr, i1, i1, i1 }>
%FunctionType = type <{ i64, ptr, ptr, i1 }>
%ReturnStatement = type <{ i64, ptr }>
%TypeId = type <{ i64, i64, i64 }>
%MapIterator_string_Type_ = type <{ i1, ptr, i64, i64 }>
%GenericType = type <{ i64, ptr, ptr, ptr }>
%ObjectType = type <{ i64, ptr }>
%Array_Expression_ = type <{ ptr, ptr, i64, i64 }>
%StringExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%IntrinsicCall = type <{ i64, i1, i64, ptr, i64, ptr }>
%TypeCastExpression = type <{ i64, i1, i64, ptr, ptr }>
%FunctionArg = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%MapIterator_string_PropId_ = type <{ i1, ptr, i64, i64 }>
%PropId = type <{ i64, ptr, i64 }>
%ClassMethod = type <{ ptr, i1, i64, ptr, ptr, ptr, ptr, i1, ptr, i64 }>
%ClassField = type <{ ptr, i1, i64, ptr, ptr, ptr, i64 }>
%Const = type <{ ptr, ptr, ptr }>
%EnumType = type <{ i64, ptr }>
%MemberExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%CallExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%BinaryExpression = type <{ i64, i1, i64, ptr, ptr, i64, ptr }>
%IntType = type <{ i64, i1 }>
%NewExpression = type <{ i64, i1, i64, ptr, ptr, i1, ptr }>
%VarAccessExpression = type <{ i64, i1, i64, ptr, ptr }>
%PointerType = type <{ i64, ptr }>
%ArrayType = type <{ i64, ptr, i64 }>
%ArrayIterator_TypeNode_ = type <{ i1, i64, i64, ptr }>
%IfStatement = type <{ i64, ptr, ptr, ptr }>
%ForStatement = type <{ i64, ptr, ptr, ptr, ptr, ptr }>
%UnaryExpression = type <{ i64, i1, i64, ptr, i64, ptr }>
%WhileStatement = type <{ i64, ptr, ptr }>
%TernaryExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%MapEntry_string_Generic_ = type <{ ptr, ptr }>
%Generic = type <{ i64, ptr }>
%IndexExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%ArrayIterator_StatementNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ImportClause_ = type <{ i1, i64, i64, ptr }>
%ModuleVarId = type <{ i64, i64, i64, ptr }>
%IntExpression = type <{ i64, i1, i64, ptr, i64 }>
%ArrayIterator_ArgNode_ = type <{ i1, i64, i64, ptr }>
%ArrayExpression = type <{ i64, i1, i64, ptr, ptr }>
%FloatExpression = type <{ i64, i1, i64, ptr, double }>
%ArrayIterator_ExpressionNode_ = type <{ i1, i64, i64, ptr }>
%BooleanExpression = type <{ i64, i1, i64, ptr, i1 }>
%Type = type <{ i64 }>
%ArrayIterator_Expression_ = type <{ i1, i64, i64, ptr }>
%MapEntry_string_LLVMValueRef_ = type <{ ptr, ptr }>
%MapIterator_string_VarId_ = type <{ i1, ptr, i64, i64 }>
%ArrayIterator_ScopeId_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_Type_ = type <{ i1, i64, i64, ptr }>
%Map_string_uint_ = type <{ ptr, i64, i64 }>
%MapEntry_string_uint_ = type <{ ptr, i64 }>
%ArrayIterator_ClassMethod_ = type <{ i1, i64, i64, ptr }>
%CGClassType = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%ArrayIterator_Statement_ = type <{ i1, i64, i64, ptr }>
%Array_LLVMValueRef_ = type <{ ptr, ptr, i64, i64 }>
%CGEnumType = type <{ ptr, ptr, ptr }>
%Array_LLVMTypeRef_ = type <{ ptr, ptr, i64, i64 }>
%ArrayIterator_EnumField_ = type <{ i1, i64, i64, ptr }>
%IntrinsicResult = type <{ ptr, ptr }>
%ArrayIterator_LLVMValueRef_ = type <{ i1, i64, i64, ptr }>

@VTablestring = internal global <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }> <{ ptr @string_find, ptr @string_substring, ptr @string_get_byte, ptr @string_get_bytes, ptr @string_replace, ptr @string_to_cstring, ptr @string_ends_with, ptr @string_starts_with }>
@VTableArray_string_ = internal global <{ ptr, ptr }> <{ ptr @Array_string__pop, ptr @Array_string__find }>
@0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@1 = private unnamed_addr constant [28 x i8] c"Usage: %s <path> [OPTIONS]\0A\00", align 1
@2 = private unnamed_addr constant [38 x i8] c" -h, --help\09\09\09Show this help message.\00", align 1
@3 = private unnamed_addr constant [36 x i8] c" --print-ast\09\09\09Print generated AST.\00", align 1
@4 = private unnamed_addr constant [294 x i8] c" --emit <format>\09\09Emit output in a particular format. Options are:\0A  \09\09\09\09\09exe - Generates an executable.\0A  \09\09\09\09\09llvm-ir - Generates a file containing LLVM IR.\0A  \09\09\09\09\09llvm-bc - Generates a file containing LLVM bitcode.\0A  \09\09\09\09\09obj - Generates an object file\0A  \09\09\09\09\09asm - Generates Assembly code.\00", align 1
@5 = private unnamed_addr constant [50 x i8] c" -o <file>\09\09\09Specify file to put the output into.\00", align 1
@6 = private unnamed_addr constant [55 x i8] c" --target <triple>\09\09Compile to specific target triple.\00", align 1
@7 = private unnamed_addr constant [47 x i8] c" -l <lib>\09\09\09Specify a library to link against.\00", align 1
@8 = private unnamed_addr constant [34 x i8] c" -I\09\09\09\09Specify runtime directory.\00", align 1
@9 = private unnamed_addr constant [91 x i8] c" -O OPT_LEVEL \09\09\09Specify the compiler's optimization level which is a\0A \09\09\09\09value from 0-3.\00", align 1
@10 = private unnamed_addr constant [31 x i8] c" -v, --version\09\09\09Show version.\00", align 1
@11 = private unnamed_addr constant [8 x i8] c"\1B[1;31m\00", align 1
@12 = private unnamed_addr constant [22 x i8] c"[Illegal Character]: \00", align 1
@13 = private unnamed_addr constant [17 x i8] c"[Syntax Error]: \00", align 1
@14 = private unnamed_addr constant [13 x i8] c"[IO Error]: \00", align 1
@15 = private unnamed_addr constant [15 x i8] c"[Type Error]: \00", align 1
@16 = private unnamed_addr constant [15 x i8] c"[Name Error]: \00", align 1
@17 = private unnamed_addr constant [10 x i8] c"[Error]: \00", align 1
@18 = private unnamed_addr constant [35 x i8] c"Missing value after '%s' argument.\00", align 1
@VTableGeneratedModule = internal global <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }> <{ ptr @GeneratedModule_run_passes, ptr @GeneratedModule_exec, ptr @GeneratedModule_set_target_machine, ptr @GeneratedModule_write_obj, ptr @GeneratedModule_write_ir, ptr @GeneratedModule_write_bc, ptr @GeneratedModule_write_asm }>
@19 = private unnamed_addr constant [8 x i8] c"Panic: \00", align 1
@20 = private unnamed_addr constant [10 x i8] c"error: %s\00", align 1
@21 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@22 = private unnamed_addr constant [49 x i8] c"Main function not found in module; can't execute\00", align 1
@23 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@VTableArray_FloError_ = internal global <{ ptr, ptr }> <{ ptr @Array_FloError__pop, ptr @Array_FloError__find }>
@VTableArray_FloFile_ = internal global <{ ptr, ptr }> <{ ptr @Array_FloFile__pop, ptr @Array_FloFile__find }>
@24 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@VTableCompiler = internal global <{ ptr, ptr, ptr, ptr, ptr, ptr }> <{ ptr @Compiler_set_std_path, ptr @Compiler_register_file, ptr @Compiler_set_current_file, ptr @Compiler_print_errors, ptr @Compiler_add_builtins, ptr @Compiler___del__ }>
@25 = private unnamed_addr constant [20 x i8] c"/usr/local/flo/lib/\00", align 1
@26 = private unnamed_addr constant [22 x i8] c"builtins/builtins.flo\00", align 1
@27 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@VTableFile = internal global <{ ptr, ptr, ptr, ptr }> <{ ptr @File_read_all, ptr @File_write_bytes_length, ptr @File_write_string, ptr @File_close }>
@28 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@29 = private unnamed_addr constant [19 x i8] c"File '%s', line %d\00", align 1
@VTableArray_ScopeId_ = internal global <{ ptr, ptr }> <{ ptr @Array_ScopeId__pop, ptr @Array_ScopeId__find }>
@VTableArray_Scope_ = internal global <{ ptr, ptr }> <{ ptr @Array_Scope__pop, ptr @Array_Scope__find }>
@VTableArray_VarDeclaration_ = internal global <{ ptr, ptr }> <{ ptr @Array_VarDeclaration__pop, ptr @Array_VarDeclaration__find }>
@VTableArray_Var_ = internal global <{ ptr, ptr }> <{ ptr @Array_Var__pop, ptr @Array_Var__find }>
@VTableArray_ConstDeclaration_ = internal global <{ ptr, ptr }> <{ ptr @Array_ConstDeclaration__pop, ptr @Array_ConstDeclaration__find }>
@VTableArray_EnumField_ = internal global <{ ptr, ptr }> <{ ptr @Array_EnumField__pop, ptr @Array_EnumField__find }>
@VTableArray_Enum_ = internal global <{ ptr, ptr }> <{ ptr @Array_Enum__pop, ptr @Array_Enum__find }>
@VTableArray_Const_ = internal global <{ ptr, ptr }> <{ ptr @Array_Const__pop, ptr @Array_Const__find }>
@VTableArray_FunctionArg_ = internal global <{ ptr, ptr }> <{ ptr @Array_FunctionArg__pop, ptr @Array_FunctionArg__find }>
@VTableArray_Statement_ = internal global <{ ptr, ptr }> <{ ptr @Array_Statement__pop, ptr @Array_Statement__find }>
@VTableArray_Type_ = internal global <{ ptr, ptr }> <{ ptr @Array_Type__pop, ptr @Array_Type__find }>
@VTableArray_ClassMethod_ = internal global <{ ptr, ptr }> <{ ptr @Array_ClassMethod__pop, ptr @Array_ClassMethod__find }>
@VTableArray_ClassField_ = internal global <{ ptr, ptr }> <{ ptr @Array_ClassField__pop, ptr @Array_ClassField__find }>
@VTableArray_Class_ = internal global <{ ptr, ptr }> <{ ptr @Array_Class__pop, ptr @Array_Class__find }>
@VTableArray_Function_ = internal global <{ ptr, ptr }> <{ ptr @Array_Function__pop, ptr @Array_Function__find }>
@VTableArray_Module_ = internal global <{ ptr, ptr }> <{ ptr @Array_Module__pop, ptr @Array_Module__find }>
@VTableArray_Token_ = internal global <{ ptr, ptr }> <{ ptr @Array_Token__pop, ptr @Array_Token__find }>
@VTableArray_Array_Token__ = internal global <{ ptr, ptr }> <{ ptr @Array_Array_Token___pop, ptr @Array_Array_Token___find }>
@VTableArray_uint_ = internal global <{ ptr, ptr }> <{ ptr @Array_uint__pop, ptr @Array_uint__find }>
@VTableArray_ImportClause_ = internal global <{ ptr, ptr }> <{ ptr @Array_ImportClause__pop, ptr @Array_ImportClause__find }>
@VTableArray_ImportNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_ImportNode__pop, ptr @Array_ImportNode__find }>
@VTableArray_VarDeclarationStatement_ = internal global <{ ptr, ptr }> <{ ptr @Array_VarDeclarationStatement__pop, ptr @Array_VarDeclarationStatement__find }>
@VTableArray_EnumNodeField_ = internal global <{ ptr, ptr }> <{ ptr @Array_EnumNodeField__pop, ptr @Array_EnumNodeField__find }>
@VTableArray_EnumNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_EnumNode__pop, ptr @Array_EnumNode__find }>
@VTableArray_TypeAliasNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_TypeAliasNode__pop, ptr @Array_TypeAliasNode__find }>
@VTableArray_ConstDeclarationStatement_ = internal global <{ ptr, ptr }> <{ ptr @Array_ConstDeclarationStatement__pop, ptr @Array_ConstDeclarationStatement__find }>
@VTableArray_ArgNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_ArgNode__pop, ptr @Array_ArgNode__find }>
@VTableArray_StatementNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_StatementNode__pop, ptr @Array_StatementNode__find }>
@VTableArray_MethodNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_MethodNode__pop, ptr @Array_MethodNode__find }>
@VTableArray_FieldNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_FieldNode__pop, ptr @Array_FieldNode__find }>
@VTableArray_TypeNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_TypeNode__pop, ptr @Array_TypeNode__find }>
@VTableArray_GenericParameterNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_GenericParameterNode__pop, ptr @Array_GenericParameterNode__find }>
@VTableArray_ClassDeclarationNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_ClassDeclarationNode__pop, ptr @Array_ClassDeclarationNode__find }>
@VTableArray_FunctionDeclarationNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_FunctionDeclarationNode__pop, ptr @Array_FunctionDeclarationNode__find }>
@30 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@31 = private unnamed_addr constant [15 x i8] c"v0.01@selfhost\00", align 1
@32 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@33 = private unnamed_addr constant [32 x i8] c"No such file or directory: '%s'\00", align 1
@34 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@35 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@36 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@37 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@38 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@39 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@40 = private unnamed_addr constant [4 x i8] c"fnc\00", align 1
@41 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@42 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@43 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@44 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@45 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@46 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@47 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@48 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@49 = private unnamed_addr constant [4 x i8] c"del\00", align 1
@VTableStringBuilder = internal global <{ ptr, ptr, ptr, ptr }> <{ ptr @StringBuilder_add_bytes_length, ptr @StringBuilder_append_string, ptr @StringBuilder_add_byte, ptr @StringBuilder_get_string }>
@50 = private unnamed_addr constant [4 x i8] c"033\00", align 1
@51 = private unnamed_addr constant [4 x i8] c"x1b\00", align 1
@52 = private unnamed_addr constant [6 x i8] c"u001b\00", align 1
@53 = private unnamed_addr constant [24 x i8] c"Illegal character: '%s'\00", align 1
@VTableArray_ExpressionNode_ = internal global <{ ptr, ptr }> <{ ptr @Array_ExpressionNode__pop, ptr @Array_ExpressionNode__find }>
@54 = private unnamed_addr constant [23 x i8] c"Expected an Identifier\00", align 1
@55 = private unnamed_addr constant [13 x i8] c"Expected '='\00", align 1
@56 = private unnamed_addr constant [13 x i8] c"Expected ':'\00", align 1
@57 = private unnamed_addr constant [13 x i8] c"Expected '('\00", align 1
@58 = private unnamed_addr constant [13 x i8] c"Expected ')'\00", align 1
@59 = private unnamed_addr constant [13 x i8] c"Expected '{'\00", align 1
@60 = private unnamed_addr constant [13 x i8] c"Expected '}'\00", align 1
@61 = private unnamed_addr constant [13 x i8] c"Expected ','\00", align 1
@62 = private unnamed_addr constant [13 x i8] c"Expected '<'\00", align 1
@63 = private unnamed_addr constant [13 x i8] c"Expected '>'\00", align 1
@64 = private unnamed_addr constant [14 x i8] c"Expected '->'\00", align 1
@65 = private unnamed_addr constant [4 x i8] c"Map\00", align 1
@66 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@67 = private unnamed_addr constant [29 x i8] c"Expected an Expression value\00", align 1
@68 = private unnamed_addr constant [29 x i8] c"'%s' has no type information\00", align 1
@69 = private unnamed_addr constant [20 x i8] c"Expected ':' or '('\00", align 1
@70 = private unnamed_addr constant [80 x i8] c"Illegal expression expected: 'fnc', 'class', 'enum', 'import', 'const' or 'let'\00", align 1
@VTableArray_Expression_ = internal global <{ ptr, ptr }> <{ ptr @Array_Expression__pop, ptr @Array_Expression__find }>
@71 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@72 = private unnamed_addr constant [11 x i8] c"(%s) => %s\00", align 1
@73 = private unnamed_addr constant [4 x i8] c"%s*\00", align 1
@74 = private unnamed_addr constant [7 x i8] c"%s[%d]\00", align 1
@75 = private unnamed_addr constant [10 x i8] c"Namespace\00", align 1
@76 = private unnamed_addr constant [7 x i8] c"Record\00", align 1
@77 = private unnamed_addr constant [4 x i8] c"i%d\00", align 1
@78 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@79 = private unnamed_addr constant [4 x i8] c"%s4\00", align 1
@80 = private unnamed_addr constant [4 x i8] c"%s8\00", align 1
@81 = private unnamed_addr constant [5 x i8] c"%s16\00", align 1
@82 = private unnamed_addr constant [5 x i8] c"%s32\00", align 1
@83 = private unnamed_addr constant [5 x i8] c"%s64\00", align 1
@84 = private unnamed_addr constant [6 x i8] c"%s128\00", align 1
@85 = private unnamed_addr constant [4 x i8] c"f32\00", align 1
@86 = private unnamed_addr constant [4 x i8] c"f64\00", align 1
@87 = private unnamed_addr constant [7 x i8] c"record\00", align 1
@88 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@89 = private unnamed_addr constant [13 x i8] c"__generics__\00", align 1
@90 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@91 = private unnamed_addr constant [68 x i8] c"Name '%s' has already been used for another type. consider renaming\00", align 1
@92 = private unnamed_addr constant [41 x i8] c"Generic expects %d parameters but got %d\00", align 1
@93 = private unnamed_addr constant [4 x i8] c"%s_\00", align 1
@94 = private unnamed_addr constant [6 x i8] c"%s_%s\00", align 1
@95 = private unnamed_addr constant [55 x i8] c"Initilializer for global variable has to be a constant\00", align 1
@96 = private unnamed_addr constant [56 x i8] c"Expected type of '%s' but got type of '%s' on signature\00", align 1
@97 = private unnamed_addr constant [52 x i8] c"Import statement path can't be a a formatted string\00", align 1
@98 = private unnamed_addr constant [28 x i8] c"%s not found in module \22\22%s\00", align 1
@99 = private unnamed_addr constant [37 x i8] c"Illegal re-declaration of const '%s'\00", align 1
@100 = private unnamed_addr constant [48 x i8] c"Illegal re-declaration of type '%s' as function\00", align 1
@101 = private unnamed_addr constant [53 x i8] c"Expected an int type for enum type but got type '%s'\00", align 1
@102 = private unnamed_addr constant [38 x i8] c"Enum initializer has to be a constant\00", align 1
@103 = private unnamed_addr constant [36 x i8] c"Expected type '%s' but got type '%s\00", align 1
@104 = private unnamed_addr constant [7 x i8] c"__eq__\00", align 1
@105 = private unnamed_addr constant [8 x i8] c"__add__\00", align 1
@106 = private unnamed_addr constant [8 x i8] c"__sub__\00", align 1
@107 = private unnamed_addr constant [8 x i8] c"__mul__\00", align 1
@108 = private unnamed_addr constant [8 x i8] c"__div__\00", align 1
@109 = private unnamed_addr constant [7 x i8] c"__or__\00", align 1
@110 = private unnamed_addr constant [8 x i8] c"__ora__\00", align 1
@111 = private unnamed_addr constant [12 x i8] c"__getitem__\00", align 1
@112 = private unnamed_addr constant [12 x i8] c"__setitem__\00", align 1
@113 = private unnamed_addr constant [7 x i8] c"__sl__\00", align 1
@114 = private unnamed_addr constant [7 x i8] c"__sr__\00", align 1
@115 = private unnamed_addr constant [8 x i8] c"__sla__\00", align 1
@116 = private unnamed_addr constant [8 x i8] c"__sra__\00", align 1
@117 = private unnamed_addr constant [7 x i8] c"__in__\00", align 1
@118 = private unnamed_addr constant [7 x i8] c"__lt__\00", align 1
@119 = private unnamed_addr constant [7 x i8] c"__lg__\00", align 1
@120 = private unnamed_addr constant [7 x i8] c"__ne__\00", align 1
@121 = private unnamed_addr constant [7 x i8] c"__le__\00", align 1
@122 = private unnamed_addr constant [7 x i8] c"__ge__\00", align 1
@123 = private unnamed_addr constant [8 x i8] c"__pow__\00", align 1
@124 = private unnamed_addr constant [8 x i8] c"__mod__\00", align 1
@125 = private unnamed_addr constant [8 x i8] c"__del__\00", align 1
@126 = private unnamed_addr constant [76 x i8] c" is reserved only for operator overloads and cannot be used as a field name\00", align 1
@127 = private unnamed_addr constant [36 x i8] c"Field %s in class %s already exists\00", align 1
@128 = private unnamed_addr constant [89 x i8] c"Signature of inherited field %s in class %s does not match expected parent signature '%s\00", align 1
@129 = private unnamed_addr constant [49 x i8] c"Expected inherited field %s in class %s to be %s\00", align 1
@130 = private unnamed_addr constant [68 x i8] c"Expected type '%s' but got type '%s' on static field initialization\00", align 1
@131 = private unnamed_addr constant [46 x i8] c"Static field initializer has to be a constant\00", align 1
@132 = private unnamed_addr constant [65 x i8] c"Expected %d arguments for binary operator overload %s but got %d\00", align 1
@133 = private unnamed_addr constant [45 x i8] c"Binary operator overload %s cannot be static\00", align 1
@134 = private unnamed_addr constant [75 x i8] c"__iter__ method must return an iteratable object {done: bool, next(): any}\00", align 1
@135 = private unnamed_addr constant [37 x i8] c"Method %s in class %s already exists\00", align 1
@136 = private unnamed_addr constant [91 x i8] c"Signature of inherited method %s in class %s does not match expected parent signature '%s'\00", align 1
@137 = private unnamed_addr constant [50 x i8] c"Expected inherited method %s in class %s to be %s\00", align 1
@138 = private unnamed_addr constant [32 x i8] c"Static method can't be abstract\00", align 1
@139 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@140 = private unnamed_addr constant [34 x i8] c"Class constructor can't be static\00", align 1
@141 = private unnamed_addr constant [36 x i8] c"Class constructor can't be abstract\00", align 1
@142 = private unnamed_addr constant [59 x i8] c"Can't have a abstract private method use protected instead\00", align 1
@143 = private unnamed_addr constant [6 x i8] c"super\00", align 1
@144 = private unnamed_addr constant [42 x i8] c"Can only inherit from class not type '%s'\00", align 1
@145 = private unnamed_addr constant [81 x i8] c"Class with constructor must implement all it's methods missing %s implementation\00", align 1
@146 = private unnamed_addr constant [39 x i8] c"Method missing ending return statement\00", align 1
@147 = private unnamed_addr constant [41 x i8] c"Function missing ending return statement\00", align 1
@148 = private unnamed_addr constant [24 x i8] c"length has to be an int\00", align 1
@149 = private unnamed_addr constant [24 x i8] c"length has to be a uint\00", align 1
@150 = private unnamed_addr constant [31 x i8] c"length is a non-constant value\00", align 1
@151 = private unnamed_addr constant [29 x i8] c"length should be an unsigned\00", align 1
@152 = private unnamed_addr constant [4 x i8] c"u16\00", align 1
@153 = private unnamed_addr constant [4 x i8] c"u32\00", align 1
@154 = private unnamed_addr constant [4 x i8] c"u64\00", align 1
@155 = private unnamed_addr constant [4 x i8] c"i16\00", align 1
@156 = private unnamed_addr constant [4 x i8] c"i32\00", align 1
@157 = private unnamed_addr constant [4 x i8] c"i64\00", align 1
@158 = private unnamed_addr constant [20 x i8] c"Undefined type '%s'\00", align 1
@159 = private unnamed_addr constant [48 x i8] c"Expected element type of '%s' but got type '%s'\00", align 1
@160 = private unnamed_addr constant [24 x i8] c"Undefined variable '%s'\00", align 1
@161 = private unnamed_addr constant [34 x i8] c"Cannot assign a value to a record\00", align 1
@162 = private unnamed_addr constant [36 x i8] c"Cannot assign a value to a constant\00", align 1
@163 = private unnamed_addr constant [52 x i8] c"Illegal assignment of variable of type '%s' to '%s'\00", align 1
@164 = private unnamed_addr constant [7 x i8] c"__gt__\00", align 1
@165 = private unnamed_addr constant [8 x i8] c"__and__\00", align 1
@166 = private unnamed_addr constant [8 x i8] c"__xor__\00", align 1
@167 = private unnamed_addr constant [37 x i8] c"Expected type '%s' but got type '%s'\00", align 1
@168 = private unnamed_addr constant [55 x i8] c"Unsupported binary operator overload for operator '%s'\00", align 1
@169 = private unnamed_addr constant [108 x i8] c"No binary operator overload for '%s' in object of class '%s' please implement the method %s to support this\00", align 1
@170 = private unnamed_addr constant [114 x i8] c"No operator overload for index set operator on %s object please implement method __setitem__ to use in this class\00", align 1
@171 = private unnamed_addr constant [6 x i8] c"Range\00", align 1
@172 = private unnamed_addr constant [58 x i8] c"Illegal binary operation '%s' between types '%s' and '%s'\00", align 1
@173 = private unnamed_addr constant [8 x i8] c"++(pre)\00", align 1
@174 = private unnamed_addr constant [8 x i8] c"--(pre)\00", align 1
@175 = private unnamed_addr constant [39 x i8] c"Illegal unary operation %s on constant\00", align 1
@176 = private unnamed_addr constant [40 x i8] c"Illegal unary operation %s on type '%s'\00", align 1
@177 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@178 = private unnamed_addr constant [30 x i8] c"Cannot cast type '%s' to '%s'\00", align 1
@179 = private unnamed_addr constant [45 x i8] c"Cannot construct an object of abstract class\00", align 1
@180 = private unnamed_addr constant [55 x i8] c"Expected %d argument(s) on constructor call but got %d\00", align 1
@181 = private unnamed_addr constant [71 x i8] c"Expected type '%s' but got type '%s' as constructor call argument (%d)\00", align 1
@182 = private unnamed_addr constant [68 x i8] c"New operator expects 1 argument for pointers but got %d argument(s)\00", align 1
@183 = private unnamed_addr constant [74 x i8] c"New operator for pointers expects argument of type '%s' but got type '%s'\00", align 1
@184 = private unnamed_addr constant [65 x i8] c"New operator expects either an a pointer or an object not a '%s'\00", align 1
@185 = private unnamed_addr constant [76 x i8] c"Property '%s' is defined as private and only accessible within the class %s\00", align 1
@186 = private unnamed_addr constant [71 x i8] c"Property '%s' is defined as %s and only accessible within the class %s\00", align 1
@187 = private unnamed_addr constant [52 x i8] c"Property '%s' doesn't exist in object of class '%s'\00", align 1
@188 = private unnamed_addr constant [50 x i8] c"Property '%s' is not a static member in class '%s\00", align 1
@189 = private unnamed_addr constant [40 x i8] c"'%s' is not an element of enum the '%s'\00", align 1
@190 = private unnamed_addr constant [10 x i8] c"copy_from\00", align 1
@191 = private unnamed_addr constant [10 x i8] c"move_from\00", align 1
@192 = private unnamed_addr constant [10 x i8] c"fill_with\00", align 1
@193 = private unnamed_addr constant [7 x i8] c"resize\00", align 1
@194 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@195 = private unnamed_addr constant [28 x i8] c"intrinsic %s is not defined\00", align 1
@196 = private unnamed_addr constant [38 x i8] c"Cannot get property '%s' of type '%s'\00", align 1
@197 = private unnamed_addr constant [53 x i8] c"Expected type '%s' from first case but got type '%s'\00", align 1
@198 = private unnamed_addr constant [122 x i8] c"No operator overload for indexing operator on %s object please implement method __getitem__ to use indexing in this class\00", align 1
@199 = private unnamed_addr constant [35 x i8] c"Expected an integer type for index\00", align 1
@200 = private unnamed_addr constant [39 x i8] c"Cannot index into a value of type '%s'\00", align 1
@201 = private unnamed_addr constant [47 x i8] c"Expected a function type for call but got '%s'\00", align 1
@202 = private unnamed_addr constant [52 x i8] c"Expected %d argument(s) on function call but got %d\00", align 1
@203 = private unnamed_addr constant [63 x i8] c"Expected type '%s' but got type '%s' as function call argument\00", align 1
@204 = private unnamed_addr constant [58 x i8] c"Expected argument %d to be of type '%s' but got type '%s'\00", align 1
@205 = private unnamed_addr constant [66 x i8] c"Expected argument 1 to be of type to be of a pointer but got '%s'\00", align 1
@206 = private unnamed_addr constant [49 x i8] c"Expected 2 arguments on function call but got %d\00", align 1
@207 = private unnamed_addr constant [49 x i8] c"Expected 3 arguments on function call but got %d\00", align 1
@208 = private unnamed_addr constant [7 x i8] c"3.4E38\00", align 1
@209 = private unnamed_addr constant [26 x i8] c"Variable '%s' has no type\00", align 1
@210 = private unnamed_addr constant [70 x i8] c"Cannot declare a value as null without any type hint for future usage\00", align 1
@211 = private unnamed_addr constant [61 x i8] c"Expected type '%s' but got type '%s' on variable declaration\00", align 1
@212 = private unnamed_addr constant [57 x i8] c"Illegal re-declaration of already declared variable '%s'\00", align 1
@213 = private unnamed_addr constant [49 x i8] c"Cannot assign a non-constant value to a constant\00", align 1
@214 = private unnamed_addr constant [58 x i8] c"Expected type '%s' but got type '%s' on const declaration\00", align 1
@215 = private unnamed_addr constant [29 x i8] c"Iterator has to be an object\00", align 1
@216 = private unnamed_addr constant [47 x i8] c"Iterator type has to have __iter__ as property\00", align 1
@217 = private unnamed_addr constant [7 x i8] c"tmp_it\00", align 1
@218 = private unnamed_addr constant [30 x i8] c"Illegal break outside of loop\00", align 1
@219 = private unnamed_addr constant [33 x i8] c"Illegal continue outside of loop\00", align 1
@220 = private unnamed_addr constant [57 x i8] c"Expected return type of '%s' but got return type of '%s'\00", align 1
@221 = private unnamed_addr constant [33 x i8] c"Function return type is not void\00", align 1
@VTableArray_LLVMValueRef_ = internal global <{ ptr, ptr }> <{ ptr @Array_LLVMValueRef__pop, ptr @Array_LLVMValueRef__find }>
@VTableArray_LLVMTypeRef_ = internal global <{ ptr, ptr }> <{ ptr @Array_LLVMTypeRef__pop, ptr @Array_LLVMTypeRef__find }>
@222 = private unnamed_addr constant [9 x i8] c"%d;%d;%d\00", align 1
@223 = private unnamed_addr constant [33 x i8] c"Type could not be code generated\00", align 1
@224 = private unnamed_addr constant [8 x i8] c"realloc\00", align 1
@225 = private unnamed_addr constant [7 x i8] c"memcmp\00", align 1
@226 = private unnamed_addr constant [6 x i8] c"%s {\0A\00", align 1
@227 = private unnamed_addr constant [7 x i8] c" ... }\00", align 1
@228 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@229 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@230 = private unnamed_addr constant [13 x i8] c" '%s': %s, \0A\00", align 1
@231 = private unnamed_addr constant [11 x i8] c"<function>\00", align 1
@232 = private unnamed_addr constant [18 x i8] c"string_from_bytes\00", align 1
@233 = private unnamed_addr constant [55 x i8] c"Could not find function 'string.from_bytes' in program\00", align 1
@234 = private unnamed_addr constant [55 x i8] c"Array expression is not a constant (codegen_array_exp)\00", align 1
@235 = private unnamed_addr constant [46 x i8] c"This should never happen! (get_expr_mem: var)\00", align 1
@236 = private unnamed_addr constant [9 x i8] c"arrayidx\00", align 1
@237 = private unnamed_addr constant [7 x i8] c"ptridx\00", align 1
@238 = private unnamed_addr constant [9 x i8] c"%s;%d;%d\00", align 1
@239 = private unnamed_addr constant [10 x i8] c"memberidx\00", align 1
@240 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@241 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@242 = private unnamed_addr constant [12 x i8] c"llvm.pow.%s\00", align 1
@243 = private unnamed_addr constant [34 x i8] c"Unknown bin expression case case!\00", align 1
@244 = private unnamed_addr constant [11 x i8] c"incdec.ptr\00", align 1
@245 = private unnamed_addr constant [51 x i8] c"This should never happen; (codegen_var_access_exp)\00", align 1
@246 = private unnamed_addr constant [11 x i8] c"true_block\00", align 1
@247 = private unnamed_addr constant [12 x i8] c"false_block\00", align 1
@248 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@249 = private unnamed_addr constant [8 x i8] c"ternary\00", align 1
@250 = private unnamed_addr constant [52 x i8] c"this should not happen; (codegen_member_exp); class\00", align 1
@251 = private unnamed_addr constant [60 x i8] c"This should never happen; (codegen_member_expr; class prop)\00", align 1
@252 = private unnamed_addr constant [51 x i8] c"this should not happen; (codegen_member_exp); enum\00", align 1
@253 = private unnamed_addr constant [11 x i8] c"to_cstring\00", align 1
@254 = private unnamed_addr constant [22 x i8] c"instrinsic not found!\00", align 1
@255 = private unnamed_addr constant [9 x i8] c"if.entry\00", align 1
@256 = private unnamed_addr constant [6 x i8] c"ifend\00", align 1
@257 = private unnamed_addr constant [10 x i8] c"for.entry\00", align 1
@258 = private unnamed_addr constant [9 x i8] c"for.cond\00", align 1
@259 = private unnamed_addr constant [9 x i8] c"for.body\00", align 1
@260 = private unnamed_addr constant [9 x i8] c"for.incr\00", align 1
@261 = private unnamed_addr constant [8 x i8] c"for.end\00", align 1
@262 = private unnamed_addr constant [12 x i8] c"while.entry\00", align 1
@263 = private unnamed_addr constant [10 x i8] c"while.end\00", align 1
@264 = private unnamed_addr constant [48 x i8] c"Could not find constructor for constructor call\00", align 1
@265 = private unnamed_addr constant [76 x i8] c"This should not happen: could not find function %s_%s (declare_class_props)\00", align 1
@266 = private unnamed_addr constant [9 x i8] c"VTable%s\00", align 1
@267 = private unnamed_addr constant [15 x i8] c"%s_constructor\00", align 1
@268 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@269 = private unnamed_addr constant [9 x i8] c"%s_names\00", align 1
@270 = private unnamed_addr constant [7 x i8] c"--emit\00", align 1
@271 = private unnamed_addr constant [4 x i8] c"exe\00", align 1
@272 = private unnamed_addr constant [14 x i8] c"/tmp/output.o\00", align 1
@273 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@274 = private unnamed_addr constant [5 x i8] c"-l%s\00", align 1
@275 = private unnamed_addr constant [34 x i8] c"%s -no-pie /tmp/output.o %s -o %s\00", align 1
@276 = private unnamed_addr constant [8 x i8] c"llvm-ir\00", align 1
@277 = private unnamed_addr constant [10 x i8] c"output.ll\00", align 1
@278 = private unnamed_addr constant [8 x i8] c"llvm-bc\00", align 1
@279 = private unnamed_addr constant [10 x i8] c"output.bc\00", align 1
@280 = private unnamed_addr constant [4 x i8] c"obj\00", align 1
@281 = private unnamed_addr constant [4 x i8] c"asm\00", align 1
@282 = private unnamed_addr constant [25 x i8] c"No input file specified.\00", align 1

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @string_find(ptr nocapture readonly %0, ptr nocapture readonly %1, i64 %2) #0 {
for.entry:
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %4 = icmp sgt i64 %3, %2
  br i1 %4, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = load i8, ptr %5, align 1
  %memberidx2 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.030 = phi i64 [ %2, %for.body.lr.ph ], [ %13, %ifend ]
  %ptridx3 = getelementptr inbounds i8, ptr %7, i64 %i.030
  %8 = load i8, ptr %ptridx3, align 1
  %9 = icmp eq i8 %6, %8
  br i1 %9, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend, %ifend11, %while.entry, %for.entry, %if.entry
  %common.ret.op = phi i64 [ %i.030, %if.entry ], [ -1, %for.entry ], [ %i.030, %ifend11 ], [ -1, %while.entry ], [ -1, %ifend ]
  ret i64 %common.ret.op

if.entry:                                         ; preds = %for.body
  %memberidx4 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %10 = load i64, ptr %memberidx4, align 4
  %11 = add i64 %10, -1
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %while.entry, label %common.ret

ifend:                                            ; preds = %for.body
  %13 = add nsw i64 %i.030, 1
  %14 = icmp slt i64 %13, %3
  br i1 %14, label %for.body, label %common.ret

while.entry:                                      ; preds = %if.entry, %ifend11
  %x.0 = phi i64 [ %18, %ifend11 ], [ %11, %if.entry ]
  %ptridx6 = getelementptr inbounds i8, ptr %5, i64 %x.0
  %15 = load i8, ptr %ptridx6, align 1
  %16 = add nuw i64 %x.0, %i.030
  %ptridx8 = getelementptr inbounds i8, ptr %7, i64 %16
  %17 = load i8, ptr %ptridx8, align 1
  %.not = icmp eq i8 %15, %17
  br i1 %.not, label %ifend11, label %common.ret

ifend11:                                          ; preds = %while.entry
  %18 = add nsw i64 %x.0, -1
  %19 = icmp sgt i64 %x.0, 1
  br i1 %19, label %while.entry, label %common.ret
}

define internal noalias ptr @string_substring(ptr nocapture readonly %0, i64 %1, i64 %2) {
  %4 = trunc i64 %2 to i32
  %5 = tail call ptr @malloc(i32 %4)
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 %1
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 1073741824 %7, i64 %2, i1 false)
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %8, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  store ptr %5, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  store i64 %2, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %8, i64 0, i32 3
  store i64 %2, ptr %memberidx2.i, align 4
  ret ptr %8
}

define internal ptr @string_replace(ptr %0, ptr %1, ptr nocapture readonly %2) {
  %4 = load ptr, ptr %0, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = tail call i64 %5(ptr nonnull %0, ptr %1, i64 0)
  %7 = icmp sgt i64 %6, -1
  br i1 %7, label %if.entry, label %common.ret

common.ret:                                       ; preds = %3, %if.entry
  %common.ret.op = phi ptr [ %23, %if.entry ], [ %0, %3 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %memberidx1 = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %8 = load i64, ptr %memberidx1, align 4
  %memberidx2 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %9 = load i64, ptr %memberidx2, align 4
  %10 = sub nuw i64 %8, %9
  %memberidx3 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  %11 = load i64, ptr %memberidx3, align 4
  %12 = add nuw i64 %10, %11
  %13 = trunc i64 %12 to i32
  %14 = tail call ptr @malloc(i32 %13)
  %memberidx4 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %memberidx4, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %15, i64 %6, i1 false)
  %ptridx = getelementptr inbounds i8, ptr %14, i64 %6
  %memberidx6 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  %16 = load ptr, ptr %memberidx6, align 8
  %17 = load i64, ptr %memberidx3, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %ptridx, ptr align 8 %16, i64 %17, i1 false)
  %18 = add nsw i64 %17, %6
  %ptridx9 = getelementptr inbounds i8, ptr %14, i64 %18
  %19 = load i64, ptr %memberidx2, align 4
  %20 = add nsw i64 %19, %6
  %ptridx14 = getelementptr inbounds i8, ptr %15, i64 %20
  %21 = load i64, ptr %memberidx1, align 4
  %22 = sub nuw i64 %21, %20
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %ptridx9, ptr align 1073741824 %ptridx14, i64 %22, i1 false)
  %23 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %23, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %23, i64 0, i32 1
  store ptr %14, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %23, i64 0, i32 2
  store i64 %12, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %23, i64 0, i32 3
  store i64 %12, ptr %memberidx2.i, align 4
  br label %common.ret
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn
define internal ptr @string_get_bytes(ptr nocapture readonly %0) #1 {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %2 = load ptr, ptr %memberidx, align 8
  ret ptr %2
}

define internal noalias ptr @string_to_cstring(ptr nocapture readonly %0) {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = trunc i64 %2 to i32
  %4 = add i32 %3, 1
  %5 = tail call ptr @malloc(i32 %4)
  %memberidx1 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %memberidx, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %6, i64 %7, i1 false)
  %ptridx = getelementptr inbounds i8, ptr %5, i64 %7
  store i8 0, ptr %ptridx, align 1
  ret ptr %5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readonly willreturn
define internal i8 @string_get_byte(ptr nocapture readonly %0, i64 %1) #2 {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %ptridx = getelementptr inbounds i8, ptr %3, i64 %1
  %4 = load i8, ptr %ptridx, align 1
  ret i8 %4
}

define internal i1 @string_ends_with(ptr nocapture readonly %0, ptr nocapture readonly %1) {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp slt i64 %3, %4
  br i1 %5, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend
  %common.ret.op = phi i1 [ %12, %ifend ], [ false, %2 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %2
  %memberidx2 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 %3
  %8 = sub i64 0, %4
  %9 = getelementptr inbounds i8, ptr %7, i64 %8
  %memberidx5 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %10 = load ptr, ptr %memberidx5, align 8
  %11 = tail call i64 @memcmp(ptr %9, ptr %10, i64 %4)
  %12 = icmp eq i64 %11, 0
  br label %common.ret
}

define internal i1 @string_starts_with(ptr nocapture readonly %0, ptr nocapture readonly %1) {
  %memberidx = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp slt i64 %3, %4
  br i1 %5, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend
  %common.ret.op = phi i1 [ %9, %ifend ], [ false, %2 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %2
  %memberidx2 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = tail call i64 @memcmp(ptr %6, ptr %7, i64 %4)
  %9 = icmp eq i64 %8, 0
  br label %common.ret
}

declare noalias ptr @malloc(i32) local_unnamed_addr

; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1)
declare noalias noundef ptr @realloc(ptr allocptr nocapture, i64 noundef) local_unnamed_addr #4

declare i64 @memcmp(ptr, ptr, i64) local_unnamed_addr

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free")
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(ptr nocapture) local_unnamed_addr #6

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_string__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

define internal i64 @Array_string__find(ptr nocapture readonly %0, ptr nocapture readonly %1) {
for.entry:
  %memberidx = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 1
  %memberidx1.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %4 = phi i64 [ %2, %for.body.lr.ph ], [ %13, %ifend ]
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %14, %ifend ]
  %5 = load ptr, ptr %memberidx1, align 8
  %ptridx = getelementptr inbounds ptr, ptr %5, i64 %i.06
  %6 = load ptr, ptr %ptridx, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx.i, align 4
  %8 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp eq i64 %7, %8
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %for.body
  %memberidx2.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  %9 = load ptr, ptr %memberidx2.i, align 8
  %10 = load ptr, ptr %memberidx3.i, align 8
  %11 = tail call i64 @memcmp(ptr %9, ptr %10, i64 %7)
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %common.ret, label %ifend.i.ifend_crit_edge

ifend.i.ifend_crit_edge:                          ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx, align 4
  br label %ifend

common.ret:                                       ; preds = %ifend, %ifend.i, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %ifend.i ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %ifend.i.ifend_crit_edge, %for.body
  %13 = phi i64 [ %.pre, %ifend.i.ifend_crit_edge ], [ %4, %for.body ]
  %14 = add nuw nsw i64 %i.06, 1
  %15 = icmp slt i64 %14, %13
  br i1 %15, label %for.body, label %common.ret
}

; Function Attrs: nofree
declare void @system(ptr nocapture noundef readonly) local_unnamed_addr #8

; Function Attrs: nofree
declare void @write(i64 noundef, ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #8

declare i64 @asprintf(ptr, ptr, ...) local_unnamed_addr

define internal fastcc ptr @flag_value_or(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %4 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr }>, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call i64 %5(ptr nonnull %0, ptr %1)
  %.not = icmp eq i64 %6, -1
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  %memberidx1 = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 2
  %7 = load i64, ptr %memberidx1, align 4
  %8 = add nuw nsw i64 %6, 1
  %9 = icmp sgt i64 %7, %8
  br i1 %9, label %if.entry2, label %else3

common.ret:                                       ; preds = %ifend7, %ifend
  %common.ret.op = phi ptr [ %2, %ifend ], [ %20, %ifend7 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3, %else3
  %memberidx.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %10)
  tail call void @free(ptr %1)
  br label %common.ret

if.entry2:                                        ; preds = %if.entry
  %.not17 = icmp eq ptr %2, null
  br i1 %.not17, label %ifend7, label %if.entry5

else3:                                            ; preds = %if.entry
  %11 = load ptr, ptr %1, align 8
  %memberidx8 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 5
  %12 = load ptr, ptr %memberidx8, align 8
  %13 = tail call ptr %12(ptr nonnull %1)
  %14 = alloca ptr, align 8
  %15 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %14, ptr nonnull @18, ptr %13)
  %16 = load ptr, ptr %14, align 8
  %17 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %17, align 8
  %memberidx.i18 = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  store ptr %16, ptr %memberidx.i18, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  store i64 %15, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %17, i64 0, i32 3
  store i64 %15, ptr %memberidx2.i, align 4
  tail call void @free(ptr %13)
  call fastcc void @print_message_error(i64 4, ptr nonnull %17)
  br label %ifend

if.entry5:                                        ; preds = %if.entry2
  %memberidx.i20 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i20, align 8
  tail call void @free(ptr %18)
  tail call void @free(ptr nonnull %2)
  br label %ifend7

ifend7:                                           ; preds = %if.entry2, %if.entry5
  %memberidx.i19 = getelementptr inbounds %Array_string_, ptr %0, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i19, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %19, i64 %8
  %20 = load ptr, ptr %ptridx.i, align 8
  br label %common.ret
}

define internal fastcc void @print_message_error(i64 %0, ptr %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @11, i64 7, i1 false)
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %4, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  store ptr %3, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %5 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %6 = tail call ptr %5(ptr nonnull %4)
  %7 = load i64, ptr %memberidx1.i.i.i, align 4
  tail call void @write(i64 1, ptr %6, i64 %7)
  %8 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %8)
  tail call void @free(ptr %4)
  switch i64 %0, label %else11 [
    i64 0, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 5, label %if.entry7
    i64 1, label %if.entry10
  ]

if.entry:                                         ; preds = %2
  %9 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %9, ptr noundef nonnull align 8 dereferenceable(21) @12, i64 21, i1 false)
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 21, ptr %memberidx1.i.i, align 4
  br label %ifend

ifend:                                            ; preds = %if.entry10, %else11, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink61 = phi ptr [ %33, %if.entry10 ], [ %35, %else11 ], [ %31, %if.entry7 ], [ %29, %if.entry4 ], [ %27, %if.entry1 ], [ %10, %if.entry ]
  %.sink60 = phi i64 [ 14, %if.entry10 ], [ 9, %else11 ], [ 14, %if.entry7 ], [ 12, %if.entry4 ], [ 16, %if.entry1 ], [ 21, %if.entry ]
  %memberidx1.i.i44.sink = phi ptr [ %memberidx1.i.i44, %if.entry10 ], [ %memberidx1.i.i50, %else11 ], [ %memberidx1.i.i38, %if.entry7 ], [ %memberidx1.i.i32, %if.entry4 ], [ %memberidx1.i.i26, %if.entry1 ], [ %memberidx1.i.i, %if.entry ]
  %memberidx.i.i43.sink = phi ptr [ %memberidx.i.i43, %if.entry10 ], [ %memberidx.i.i49, %else11 ], [ %memberidx.i.i37, %if.entry7 ], [ %memberidx.i.i31, %if.entry4 ], [ %memberidx.i.i25, %if.entry1 ], [ %memberidx.i.i, %if.entry ]
  %memberidx2.i.i45 = getelementptr inbounds %string, ptr %.sink61, i64 0, i32 3
  store i64 %.sink60, ptr %memberidx2.i.i45, align 4
  %11 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %12 = tail call ptr %11(ptr nonnull %.sink61)
  %13 = load i64, ptr %memberidx1.i.i44.sink, align 4
  tail call void @write(i64 1, ptr %12, i64 %13)
  %14 = load ptr, ptr %memberidx.i.i43.sink, align 8
  tail call void @free(ptr %14)
  tail call void @free(ptr %.sink61)
  %15 = tail call ptr @malloc(i32 4)
  store i32 1831885595, ptr %15, align 8
  %16 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %16, align 8
  %memberidx.i.i1.i = getelementptr inbounds %string, ptr %16, i64 0, i32 1
  store ptr %15, ptr %memberidx.i.i1.i, align 8
  %memberidx1.i.i2.i = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i2.i, align 4
  %memberidx2.i.i3.i = getelementptr inbounds %string, ptr %16, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i3.i, align 4
  %17 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %18 = tail call ptr %17(ptr nonnull %16)
  %19 = load i64, ptr %memberidx1.i.i2.i, align 4
  tail call void @write(i64 1, ptr %18, i64 %19)
  %20 = load ptr, ptr %memberidx.i.i1.i, align 8
  tail call void @free(ptr %20)
  tail call void @free(ptr %16)
  %21 = load ptr, ptr %1, align 8
  %memberidx.i.i.i22 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %21, i64 0, i32 3
  %22 = load ptr, ptr %memberidx.i.i.i22, align 8
  %23 = tail call ptr %22(ptr nonnull %1)
  %memberidx1.i.i.i23 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %24 = load i64, ptr %memberidx1.i.i.i23, align 4
  tail call void @write(i64 1, ptr %23, i64 %24)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  %memberidx.i.i24 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i.i24, align 8
  tail call void @free(ptr %25)
  tail call void @free(ptr %1)
  ret void

if.entry1:                                        ; preds = %2
  %26 = tail call ptr @malloc(i32 16)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %26, ptr noundef nonnull align 8 dereferenceable(16) @13, i64 16, i1 false)
  %27 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %27, align 8
  %memberidx.i.i25 = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  store ptr %26, ptr %memberidx.i.i25, align 8
  %memberidx1.i.i26 = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  store i64 16, ptr %memberidx1.i.i26, align 4
  br label %ifend

if.entry4:                                        ; preds = %2
  %28 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %28, ptr noundef nonnull align 8 dereferenceable(12) @14, i64 12, i1 false)
  %29 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %29, align 8
  %memberidx.i.i31 = getelementptr inbounds %string, ptr %29, i64 0, i32 1
  store ptr %28, ptr %memberidx.i.i31, align 8
  %memberidx1.i.i32 = getelementptr inbounds %string, ptr %29, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i32, align 4
  br label %ifend

if.entry7:                                        ; preds = %2
  %30 = tail call ptr @malloc(i32 14)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %30, ptr noundef nonnull align 8 dereferenceable(14) @15, i64 14, i1 false)
  %31 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %31, align 8
  %memberidx.i.i37 = getelementptr inbounds %string, ptr %31, i64 0, i32 1
  store ptr %30, ptr %memberidx.i.i37, align 8
  %memberidx1.i.i38 = getelementptr inbounds %string, ptr %31, i64 0, i32 2
  store i64 14, ptr %memberidx1.i.i38, align 4
  br label %ifend

if.entry10:                                       ; preds = %2
  %32 = tail call ptr @malloc(i32 14)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %32, ptr noundef nonnull align 8 dereferenceable(14) @16, i64 14, i1 false)
  %33 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %33, align 8
  %memberidx.i.i43 = getelementptr inbounds %string, ptr %33, i64 0, i32 1
  store ptr %32, ptr %memberidx.i.i43, align 8
  %memberidx1.i.i44 = getelementptr inbounds %string, ptr %33, i64 0, i32 2
  store i64 14, ptr %memberidx1.i.i44, align 4
  br label %ifend

else11:                                           ; preds = %2
  %34 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %34, ptr noundef nonnull align 8 dereferenceable(9) @17, i64 9, i1 false)
  %35 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %35, align 8
  %memberidx.i.i49 = getelementptr inbounds %string, ptr %35, i64 0, i32 1
  store ptr %34, ptr %memberidx.i.i49, align 8
  %memberidx1.i.i50 = getelementptr inbounds %string, ptr %35, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i50, align 4
  br label %ifend
}

define i64 @main(i64 %0, ptr nocapture readonly %1) local_unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca %CodeGen, align 8
  %5 = alloca %TypeChecker, align 8
  %6 = alloca ptr, align 8
  %7 = icmp sgt i64 %0, 1
  br i1 %7, label %for.body.i.preheader, label %else

for.body.i.preheader:                             ; preds = %2
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_string_, ptr %8, align 8
  %memberidx.i.i = getelementptr inbounds %Array_string_, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_string_, ptr %8, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_string_, ptr %8, i64 0, i32 1
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader, %Array_string____sl__.exit.i
  %i.0.i484 = phi i64 [ %24, %Array_string____sl__.exit.i ], [ 0, %for.body.i.preheader ]
  %ptridx.i = getelementptr inbounds ptr, ptr %1, i64 %i.0.i484
  %10 = load ptr, ptr %ptridx.i, align 8
  %11 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %10)
  %12 = trunc i64 %11 to i32
  %13 = tail call ptr @malloc(i32 %12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %10, i64 %11, i1 false)
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i.i.i, align 4
  %15 = load i64, ptr %memberidx.i.i, align 4
  %16 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp slt i64 %15, %16
  br i1 %.not.i.i, label %for.body.i.Array_string____sl__.exit.i_crit_edge, label %if.entry.i.i

for.body.i.Array_string____sl__.exit.i_crit_edge: ; preds = %for.body.i
  %.pre529 = load ptr, ptr %memberidx2.i.i, align 8
  br label %Array_string____sl__.exit.i

if.entry.i.i:                                     ; preds = %for.body.i
  %17 = shl nuw i64 %16, 1
  store i64 %17, ptr %memberidx1.i.i, align 4
  %18 = load ptr, ptr %memberidx2.i.i, align 8
  %19 = shl i64 %16, 4
  %20 = tail call ptr @realloc(ptr %18, i64 %19)
  store ptr %20, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %Array_string____sl__.exit.i

Array_string____sl__.exit.i:                      ; preds = %for.body.i.Array_string____sl__.exit.i_crit_edge, %if.entry.i.i
  %21 = phi ptr [ %20, %if.entry.i.i ], [ %.pre529, %for.body.i.Array_string____sl__.exit.i_crit_edge ]
  %22 = phi i64 [ %.pre, %if.entry.i.i ], [ %15, %for.body.i.Array_string____sl__.exit.i_crit_edge ]
  %23 = add nsw i64 %22, 1
  store i64 %23, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %21, i64 %22
  store ptr %14, ptr %ptridx.i.i, align 8
  %24 = add nuw nsw i64 %i.0.i484, 1
  %25 = icmp slt i64 %24, %0
  br i1 %25, label %for.body.i, label %parse_args.exit

parse_args.exit:                                  ; preds = %Array_string____sl__.exit.i
  %26 = tail call ptr @malloc(i32 2)
  store i16 30253, ptr %26, align 8
  %27 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %27, align 8
  %memberidx.i.i143 = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  store ptr %26, ptr %memberidx.i.i143, align 8
  %memberidx1.i.i144 = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i144, align 4
  %memberidx2.i.i145 = getelementptr inbounds %string, ptr %27, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i145, align 4
  %28 = load ptr, ptr %8, align 8
  %memberidx.i.i146 = getelementptr inbounds <{ ptr, ptr }>, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i.i146, align 8
  %30 = tail call i64 %29(ptr nonnull %8, ptr nonnull %27)
  %31 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %31, ptr noundef nonnull align 8 dereferenceable(9) @30, i64 9, i1 false)
  %32 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %32, align 8
  %memberidx.i.i147 = getelementptr inbounds %string, ptr %32, i64 0, i32 1
  store ptr %31, ptr %memberidx.i.i147, align 8
  %memberidx1.i.i148 = getelementptr inbounds %string, ptr %32, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i148, align 4
  %memberidx2.i.i149 = getelementptr inbounds %string, ptr %32, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i149, align 4
  %33 = load ptr, ptr %8, align 8
  %memberidx.i.i150 = getelementptr inbounds <{ ptr, ptr }>, ptr %33, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i.i150, align 8
  %35 = tail call i64 %34(ptr nonnull %8, ptr nonnull %32)
  %36 = and i64 %35, %30
  %.not343 = icmp eq i64 %36, -1
  br i1 %.not343, label %ifend3, label %if.entry1

common.ret:                                       ; preds = %TypeChecker_check.exit, %ifend24, %ifend17, %if.entry15, %if.entry4, %if.entry1, %ifend39, %else
  %common.ret.op = phi i64 [ 1, %else ], [ %code.0, %ifend39 ], [ 0, %if.entry1 ], [ 0, %if.entry4 ], [ 1, %if.entry15 ], [ 1, %ifend17 ], [ 1, %ifend24 ], [ 1, %TypeChecker_check.exit ]
  ret i64 %common.ret.op

else:                                             ; preds = %2
  %37 = tail call ptr @malloc(i32 24)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %37, ptr noundef nonnull align 8 dereferenceable(24) @282, i64 24, i1 false)
  %38 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %38, align 8
  %memberidx.i.i151 = getelementptr inbounds %string, ptr %38, i64 0, i32 1
  store ptr %37, ptr %memberidx.i.i151, align 8
  %memberidx1.i.i152 = getelementptr inbounds %string, ptr %38, i64 0, i32 2
  store i64 24, ptr %memberidx1.i.i152, align 4
  %memberidx2.i.i153 = getelementptr inbounds %string, ptr %38, i64 0, i32 3
  store i64 24, ptr %memberidx2.i.i153, align 4
  tail call fastcc void @print_message_error(i64 4, ptr nonnull %38)
  br label %common.ret

if.entry1:                                        ; preds = %parse_args.exit
  %39 = tail call ptr @malloc(i32 14)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %39, ptr noundef nonnull align 8 dereferenceable(14) @31, i64 14, i1 false)
  %40 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i.i154 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i.i154, align 8
  %memberidx1.i.i155 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 14, ptr %memberidx1.i.i155, align 4
  %memberidx2.i.i156 = getelementptr inbounds %string, ptr %40, i64 0, i32 3
  store i64 14, ptr %memberidx2.i.i156, align 4
  %41 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %42 = tail call ptr %41(ptr nonnull %40)
  %43 = load i64, ptr %memberidx1.i.i155, align 4
  tail call void @write(i64 1, ptr %42, i64 %43)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  %44 = load ptr, ptr %memberidx.i.i154, align 8
  tail call void @free(ptr %44)
  tail call void @free(ptr %40)
  br label %common.ret

ifend3:                                           ; preds = %parse_args.exit
  %45 = tail call ptr @malloc(i32 2)
  store i16 26669, ptr %45, align 8
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i160 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i160, align 8
  %memberidx1.i.i161 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i161, align 4
  %memberidx2.i.i162 = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i162, align 4
  %47 = load ptr, ptr %8, align 8
  %memberidx.i.i163 = getelementptr inbounds <{ ptr, ptr }>, ptr %47, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i.i163, align 8
  %49 = tail call i64 %48(ptr nonnull %8, ptr nonnull %46)
  %50 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %50, ptr noundef nonnull align 8 dereferenceable(6) @32, i64 6, i1 false)
  %51 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %51, align 8
  %memberidx.i.i164 = getelementptr inbounds %string, ptr %51, i64 0, i32 1
  store ptr %50, ptr %memberidx.i.i164, align 8
  %memberidx1.i.i165 = getelementptr inbounds %string, ptr %51, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i165, align 4
  %memberidx2.i.i166 = getelementptr inbounds %string, ptr %51, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i166, align 4
  %52 = load ptr, ptr %8, align 8
  %memberidx.i.i167 = getelementptr inbounds <{ ptr, ptr }>, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i.i167, align 8
  %54 = tail call i64 %53(ptr nonnull %8, ptr nonnull %51)
  %55 = and i64 %54, %49
  %.not344 = icmp eq i64 %55, -1
  %56 = load ptr, ptr %memberidx2.i.i, align 8
  br i1 %.not344, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend3
  %57 = load ptr, ptr %56, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %58 = load ptr, ptr %57, align 8
  %memberidx.i168 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx.i168, align 8
  %60 = tail call ptr %59(ptr nonnull %57)
  %61 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @1, ptr %60)
  %62 = load ptr, ptr %6, align 8
  %63 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %63, align 8
  %memberidx.i.i169 = getelementptr inbounds %string, ptr %63, i64 0, i32 1
  store ptr %62, ptr %memberidx.i.i169, align 8
  %memberidx1.i.i170 = getelementptr inbounds %string, ptr %63, i64 0, i32 2
  store i64 %61, ptr %memberidx1.i.i170, align 4
  %memberidx2.i.i171 = getelementptr inbounds %string, ptr %63, i64 0, i32 3
  store i64 %61, ptr %memberidx2.i.i171, align 4
  call void @free(ptr %60)
  %64 = load ptr, ptr %63, align 8
  %memberidx.i.i.i1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %64, i64 0, i32 3
  %65 = load ptr, ptr %memberidx.i.i.i1.i, align 8
  %66 = call ptr %65(ptr nonnull %63)
  %67 = load i64, ptr %memberidx1.i.i170, align 4
  call void @write(i64 1, ptr %66, i64 %67)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %68 = load ptr, ptr %memberidx.i.i169, align 8
  call void @free(ptr %68)
  call void @free(ptr %63)
  %69 = call ptr @malloc(i32 8)
  store i64 4202788979706449999, ptr %69, align 8
  %70 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %70, align 8
  %memberidx.i.i4.i = getelementptr inbounds %string, ptr %70, i64 0, i32 1
  store ptr %69, ptr %memberidx.i.i4.i, align 8
  %memberidx1.i.i.i172 = getelementptr inbounds %string, ptr %70, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i172, align 4
  %memberidx2.i.i.i173 = getelementptr inbounds %string, ptr %70, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i.i173, align 4
  %71 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %72 = call ptr %71(ptr nonnull %70)
  %73 = load i64, ptr %memberidx1.i.i.i172, align 4
  call void @write(i64 1, ptr %72, i64 %73)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %74 = load ptr, ptr %memberidx.i.i4.i, align 8
  call void @free(ptr %74)
  call void @free(ptr %70)
  %75 = call ptr @malloc(i32 37)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %75, ptr noundef nonnull align 8 dereferenceable(37) @2, i64 37, i1 false)
  %76 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %76, align 8
  %memberidx.i.i8.i = getelementptr inbounds %string, ptr %76, i64 0, i32 1
  store ptr %75, ptr %memberidx.i.i8.i, align 8
  %memberidx1.i.i9.i = getelementptr inbounds %string, ptr %76, i64 0, i32 2
  store i64 37, ptr %memberidx1.i.i9.i, align 4
  %memberidx2.i.i10.i = getelementptr inbounds %string, ptr %76, i64 0, i32 3
  store i64 37, ptr %memberidx2.i.i10.i, align 4
  %77 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %78 = call ptr %77(ptr nonnull %76)
  %79 = load i64, ptr %memberidx1.i.i9.i, align 4
  call void @write(i64 1, ptr %78, i64 %79)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %80 = load ptr, ptr %memberidx.i.i8.i, align 8
  call void @free(ptr %80)
  call void @free(ptr %76)
  %81 = call ptr @malloc(i32 35)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %81, ptr noundef nonnull align 8 dereferenceable(35) @3, i64 35, i1 false)
  %82 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %82, align 8
  %memberidx.i.i14.i = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  store ptr %81, ptr %memberidx.i.i14.i, align 8
  %memberidx1.i.i15.i = getelementptr inbounds %string, ptr %82, i64 0, i32 2
  store i64 35, ptr %memberidx1.i.i15.i, align 4
  %memberidx2.i.i16.i = getelementptr inbounds %string, ptr %82, i64 0, i32 3
  store i64 35, ptr %memberidx2.i.i16.i, align 4
  %83 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %84 = call ptr %83(ptr nonnull %82)
  %85 = load i64, ptr %memberidx1.i.i15.i, align 4
  call void @write(i64 1, ptr %84, i64 %85)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %86 = load ptr, ptr %memberidx.i.i14.i, align 8
  call void @free(ptr %86)
  call void @free(ptr %82)
  %87 = call ptr @malloc(i32 293)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(293) %87, ptr noundef nonnull align 8 dereferenceable(293) @4, i64 293, i1 false)
  %88 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %88, align 8
  %memberidx.i.i20.i = getelementptr inbounds %string, ptr %88, i64 0, i32 1
  store ptr %87, ptr %memberidx.i.i20.i, align 8
  %memberidx1.i.i21.i = getelementptr inbounds %string, ptr %88, i64 0, i32 2
  store i64 293, ptr %memberidx1.i.i21.i, align 4
  %memberidx2.i.i22.i = getelementptr inbounds %string, ptr %88, i64 0, i32 3
  store i64 293, ptr %memberidx2.i.i22.i, align 4
  %89 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %90 = call ptr %89(ptr nonnull %88)
  %91 = load i64, ptr %memberidx1.i.i21.i, align 4
  call void @write(i64 1, ptr %90, i64 %91)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %92 = load ptr, ptr %memberidx.i.i20.i, align 8
  call void @free(ptr %92)
  call void @free(ptr %88)
  %93 = call ptr @malloc(i32 49)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(49) %93, ptr noundef nonnull align 8 dereferenceable(49) @5, i64 49, i1 false)
  %94 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %94, align 8
  %memberidx.i.i26.i = getelementptr inbounds %string, ptr %94, i64 0, i32 1
  store ptr %93, ptr %memberidx.i.i26.i, align 8
  %memberidx1.i.i27.i = getelementptr inbounds %string, ptr %94, i64 0, i32 2
  store i64 49, ptr %memberidx1.i.i27.i, align 4
  %memberidx2.i.i28.i = getelementptr inbounds %string, ptr %94, i64 0, i32 3
  store i64 49, ptr %memberidx2.i.i28.i, align 4
  %95 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %96 = call ptr %95(ptr nonnull %94)
  %97 = load i64, ptr %memberidx1.i.i27.i, align 4
  call void @write(i64 1, ptr %96, i64 %97)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %98 = load ptr, ptr %memberidx.i.i26.i, align 8
  call void @free(ptr %98)
  call void @free(ptr %94)
  %99 = call ptr @malloc(i32 54)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %99, ptr noundef nonnull align 8 dereferenceable(54) @6, i64 54, i1 false)
  %100 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %100, align 8
  %memberidx.i.i32.i = getelementptr inbounds %string, ptr %100, i64 0, i32 1
  store ptr %99, ptr %memberidx.i.i32.i, align 8
  %memberidx1.i.i33.i = getelementptr inbounds %string, ptr %100, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i33.i, align 4
  %memberidx2.i.i34.i = getelementptr inbounds %string, ptr %100, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i34.i, align 4
  %101 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %102 = call ptr %101(ptr nonnull %100)
  %103 = load i64, ptr %memberidx1.i.i33.i, align 4
  call void @write(i64 1, ptr %102, i64 %103)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %104 = load ptr, ptr %memberidx.i.i32.i, align 8
  call void @free(ptr %104)
  call void @free(ptr %100)
  %105 = call ptr @malloc(i32 46)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(46) %105, ptr noundef nonnull align 8 dereferenceable(46) @7, i64 46, i1 false)
  %106 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %106, align 8
  %memberidx.i.i38.i = getelementptr inbounds %string, ptr %106, i64 0, i32 1
  store ptr %105, ptr %memberidx.i.i38.i, align 8
  %memberidx1.i.i39.i = getelementptr inbounds %string, ptr %106, i64 0, i32 2
  store i64 46, ptr %memberidx1.i.i39.i, align 4
  %memberidx2.i.i40.i = getelementptr inbounds %string, ptr %106, i64 0, i32 3
  store i64 46, ptr %memberidx2.i.i40.i, align 4
  %107 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %108 = call ptr %107(ptr nonnull %106)
  %109 = load i64, ptr %memberidx1.i.i39.i, align 4
  call void @write(i64 1, ptr %108, i64 %109)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %110 = load ptr, ptr %memberidx.i.i38.i, align 8
  call void @free(ptr %110)
  call void @free(ptr %106)
  %111 = call ptr @malloc(i32 33)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %111, ptr noundef nonnull align 8 dereferenceable(33) @8, i64 33, i1 false)
  %112 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %112, align 8
  %memberidx.i.i44.i = getelementptr inbounds %string, ptr %112, i64 0, i32 1
  store ptr %111, ptr %memberidx.i.i44.i, align 8
  %memberidx1.i.i45.i = getelementptr inbounds %string, ptr %112, i64 0, i32 2
  store i64 33, ptr %memberidx1.i.i45.i, align 4
  %memberidx2.i.i46.i = getelementptr inbounds %string, ptr %112, i64 0, i32 3
  store i64 33, ptr %memberidx2.i.i46.i, align 4
  %113 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %114 = call ptr %113(ptr nonnull %112)
  %115 = load i64, ptr %memberidx1.i.i45.i, align 4
  call void @write(i64 1, ptr %114, i64 %115)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %116 = load ptr, ptr %memberidx.i.i44.i, align 8
  call void @free(ptr %116)
  call void @free(ptr %112)
  %117 = call ptr @malloc(i32 90)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(90) %117, ptr noundef nonnull align 8 dereferenceable(90) @9, i64 90, i1 false)
  %118 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %118, align 8
  %memberidx.i.i50.i = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  store ptr %117, ptr %memberidx.i.i50.i, align 8
  %memberidx1.i.i51.i = getelementptr inbounds %string, ptr %118, i64 0, i32 2
  store i64 90, ptr %memberidx1.i.i51.i, align 4
  %memberidx2.i.i52.i = getelementptr inbounds %string, ptr %118, i64 0, i32 3
  store i64 90, ptr %memberidx2.i.i52.i, align 4
  %119 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %120 = call ptr %119(ptr nonnull %118)
  %121 = load i64, ptr %memberidx1.i.i51.i, align 4
  call void @write(i64 1, ptr %120, i64 %121)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %122 = load ptr, ptr %memberidx.i.i50.i, align 8
  call void @free(ptr %122)
  call void @free(ptr %118)
  %123 = call ptr @malloc(i32 30)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(30) %123, ptr noundef nonnull align 8 dereferenceable(30) @10, i64 30, i1 false)
  %124 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %124, align 8
  %memberidx.i.i56.i = getelementptr inbounds %string, ptr %124, i64 0, i32 1
  store ptr %123, ptr %memberidx.i.i56.i, align 8
  %memberidx1.i.i57.i = getelementptr inbounds %string, ptr %124, i64 0, i32 2
  store i64 30, ptr %memberidx1.i.i57.i, align 4
  %memberidx2.i.i58.i = getelementptr inbounds %string, ptr %124, i64 0, i32 3
  store i64 30, ptr %memberidx2.i.i58.i, align 4
  %125 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %126 = call ptr %125(ptr nonnull %124)
  %127 = load i64, ptr %memberidx1.i.i57.i, align 4
  call void @write(i64 1, ptr %126, i64 %127)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %128 = load ptr, ptr %memberidx.i.i56.i, align 8
  call void @free(ptr %128)
  call void @free(ptr %124)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  br label %common.ret

ifend6:                                           ; preds = %ifend3
  %ptridx.i177 = getelementptr inbounds ptr, ptr %56, i64 1
  %129 = load ptr, ptr %ptridx.i177, align 8
  %130 = tail call ptr @malloc(i32 64)
  store ptr @VTableCompiler, ptr %130, align 8
  %memberidx.i178 = getelementptr inbounds %Compiler, ptr %130, i64 0, i32 5
  %131 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FloFile_, ptr %131, align 8
  %memberidx.i.i179 = getelementptr inbounds %Array_FloFile_, ptr %131, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i179, align 4
  %memberidx1.i.i180 = getelementptr inbounds %Array_FloFile_, ptr %131, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i180, align 4
  %memberidx2.i.i181 = getelementptr inbounds %Array_FloFile_, ptr %131, i64 0, i32 1
  %132 = tail call ptr @malloc(i32 64)
  store ptr %132, ptr %memberidx2.i.i181, align 8
  store i64 0, ptr %memberidx.i.i179, align 4
  store ptr %131, ptr %memberidx.i178, align 8
  %memberidx3.i = getelementptr inbounds %Compiler, ptr %130, i64 0, i32 1
  store ptr null, ptr %memberidx3.i, align 8
  %memberidx4.i = getelementptr inbounds %Compiler, ptr %130, i64 0, i32 3
  store ptr null, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Compiler, ptr %130, i64 0, i32 6
  %133 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FloError_, ptr %133, align 8
  %memberidx.i15.i = getelementptr inbounds %Array_FloError_, ptr %133, i64 0, i32 2
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx1.i16.i = getelementptr inbounds %Array_FloError_, ptr %133, i64 0, i32 3
  store i64 8, ptr %memberidx1.i16.i, align 4
  %memberidx2.i17.i = getelementptr inbounds %Array_FloError_, ptr %133, i64 0, i32 1
  %134 = tail call ptr @malloc(i32 64)
  store ptr %134, ptr %memberidx2.i17.i, align 8
  store i64 0, ptr %memberidx.i15.i, align 4
  store ptr %133, ptr %memberidx5.i, align 8
  %135 = tail call ptr @malloc(i32 24)
  %136 = tail call ptr @malloc(i32 2048)
  store ptr %136, ptr %135, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %ifend6, %for.body.i.i
  %i.0.i.i483 = phi i64 [ 0, %ifend6 ], [ %138, %for.body.i.i ]
  %137 = load ptr, ptr %135, align 8
  %ptridx.i.i182 = getelementptr inbounds ptr, ptr %137, i64 %i.0.i.i483
  store ptr null, ptr %ptridx.i.i182, align 8
  %138 = add nuw nsw i64 %i.0.i.i483, 1
  %139 = icmp ult i64 %i.0.i.i483, 255
  br i1 %139, label %for.body.i.i, label %Compiler_constructor.exit

Compiler_constructor.exit:                        ; preds = %for.body.i.i
  %memberidx8.i = getelementptr inbounds %Compiler, ptr %130, i64 0, i32 7
  %memberidx2.i18.i = getelementptr inbounds %Map_string_FileId_, ptr %135, i64 0, i32 1
  store i64 256, ptr %memberidx2.i18.i, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_string_FileId_, ptr %135, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %135, ptr %memberidx8.i, align 8
  %140 = load ptr, ptr %130, align 8
  %141 = load ptr, ptr %140, align 8
  %142 = tail call ptr @malloc(i32 19)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(19) %142, ptr noundef nonnull align 8 dereferenceable(19) @25, i64 19, i1 false)
  %143 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %143, align 8
  %memberidx.i.i.i183 = getelementptr inbounds %string, ptr %143, i64 0, i32 1
  store ptr %142, ptr %memberidx.i.i.i183, align 8
  %memberidx1.i.i.i184 = getelementptr inbounds %string, ptr %143, i64 0, i32 2
  store i64 19, ptr %memberidx1.i.i.i184, align 4
  %memberidx2.i.i.i185 = getelementptr inbounds %string, ptr %143, i64 0, i32 3
  store i64 19, ptr %memberidx2.i.i.i185, align 4
  tail call void %141(ptr nonnull %130, ptr nonnull %143)
  %144 = tail call ptr @malloc(i32 2)
  store i16 18733, ptr %144, align 8
  %145 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %145, align 8
  %memberidx.i.i186 = getelementptr inbounds %string, ptr %145, i64 0, i32 1
  store ptr %144, ptr %memberidx.i.i186, align 8
  %memberidx1.i.i187 = getelementptr inbounds %string, ptr %145, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i187, align 4
  %memberidx2.i.i188 = getelementptr inbounds %string, ptr %145, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i188, align 4
  %146 = load ptr, ptr %8, align 8
  %memberidx.i.i189 = getelementptr inbounds <{ ptr, ptr }>, ptr %146, i64 0, i32 1
  %147 = load ptr, ptr %memberidx.i.i189, align 8
  %148 = tail call i64 %147(ptr nonnull %8, ptr nonnull %145)
  %.not345 = icmp eq i64 %148, -1
  br i1 %.not345, label %ifend9, label %if.entry7

if.entry7:                                        ; preds = %Compiler_constructor.exit
  %149 = tail call ptr @malloc(i32 2)
  store i16 18733, ptr %149, align 8
  %150 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %150, align 8
  %memberidx.i.i190 = getelementptr inbounds %string, ptr %150, i64 0, i32 1
  store ptr %149, ptr %memberidx.i.i190, align 8
  %memberidx1.i.i191 = getelementptr inbounds %string, ptr %150, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i191, align 4
  %memberidx2.i.i192 = getelementptr inbounds %string, ptr %150, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i192, align 4
  %151 = tail call fastcc ptr @flag_value_or(ptr nonnull %8, ptr nonnull %150, ptr null)
  %.not142 = icmp eq ptr %151, null
  br i1 %.not142, label %ifend9, label %if.entry10

ifend9:                                           ; preds = %if.entry10, %if.entry7, %Compiler_constructor.exit
  %152 = load ptr, ptr %130, align 8
  %memberidx13 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %152, i64 0, i32 1
  %153 = load ptr, ptr %memberidx13, align 8
  %154 = tail call ptr %153(ptr nonnull %130, ptr %129)
  %155 = load ptr, ptr %130, align 8
  %memberidx14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %155, i64 0, i32 2
  %156 = load ptr, ptr %memberidx14, align 8
  %157 = tail call i1 %156(ptr nonnull %130, ptr %154)
  br i1 %157, label %ifend17, label %if.entry15

if.entry10:                                       ; preds = %if.entry7
  %158 = load ptr, ptr %130, align 8
  %159 = load ptr, ptr %158, align 8
  tail call void %159(ptr nonnull %130, ptr nonnull %151)
  br label %ifend9

if.entry15:                                       ; preds = %ifend9
  %160 = load ptr, ptr %129, align 8
  %memberidx18 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %160, i64 0, i32 5
  %161 = load ptr, ptr %memberidx18, align 8
  %162 = tail call ptr %161(ptr nonnull %129)
  %163 = alloca ptr, align 8
  %164 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %163, ptr nonnull @33, ptr %162)
  %165 = load ptr, ptr %163, align 8
  %166 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %166, align 8
  %memberidx.i193 = getelementptr inbounds %string, ptr %166, i64 0, i32 1
  store ptr %165, ptr %memberidx.i193, align 8
  %memberidx1.i194 = getelementptr inbounds %string, ptr %166, i64 0, i32 2
  store i64 %164, ptr %memberidx1.i194, align 4
  %memberidx2.i195 = getelementptr inbounds %string, ptr %166, i64 0, i32 3
  store i64 %164, ptr %memberidx2.i195, align 4
  tail call void @free(ptr %162)
  call fastcc void @print_message_error(i64 3, ptr nonnull %166)
  br label %common.ret

ifend17:                                          ; preds = %ifend9
  %167 = load ptr, ptr %memberidx4.i, align 8
  %168 = load ptr, ptr %memberidx5.i, align 8
  %169 = tail call fastcc ptr @Lexer_tokenize(ptr %167, ptr %168)
  %170 = load ptr, ptr %130, align 8
  %memberidx21 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %170, i64 0, i32 3
  %171 = load ptr, ptr %memberidx21, align 8
  %172 = tail call i1 %171(ptr nonnull %130)
  br i1 %172, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend17
  %173 = load ptr, ptr %memberidx5.i, align 8
  %174 = tail call fastcc ptr @Parser_parse(ptr %169, ptr %173)
  %175 = load ptr, ptr %130, align 8
  %memberidx26 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %175, i64 0, i32 3
  %176 = load ptr, ptr %memberidx26, align 8
  %177 = tail call i1 %176(ptr nonnull %130)
  br i1 %177, label %common.ret, label %ifend29

ifend29:                                          ; preds = %ifend24
  call void @llvm.lifetime.start.p0(i64 58, ptr nonnull %5)
  %memberidx.i.i196 = getelementptr inbounds %TypeChecker, ptr %5, i64 0, i32 5
  store ptr %130, ptr %memberidx.i.i196, align 8
  %memberidx1.i.i197 = getelementptr inbounds %TypeChecker, ptr %5, i64 0, i32 6
  store i1 false, ptr %memberidx1.i.i197, align 8
  %178 = tail call ptr @malloc(i32 9)
  store i1 false, ptr %178, align 1
  %memberidx1.i.i.i198 = getelementptr inbounds %Program, ptr %178, i64 0, i32 1
  %179 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Module_, ptr %179, align 8
  %memberidx.i.i.i.i199 = getelementptr inbounds %Array_Module_, ptr %179, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i.i199, align 4
  %memberidx1.i.i.i.i200 = getelementptr inbounds %Array_Module_, ptr %179, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i.i200, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %179, i64 0, i32 1
  %180 = tail call ptr @malloc(i32 64)
  store ptr %180, ptr %memberidx2.i.i.i.i, align 8
  store i64 0, ptr %memberidx.i.i.i.i199, align 4
  store ptr %179, ptr %memberidx1.i.i.i198, align 8
  store ptr %178, ptr %5, align 8
  %181 = tail call ptr @malloc(i32 24)
  %182 = tail call ptr @malloc(i32 2048)
  store ptr %182, ptr %181, align 8
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %ifend29, %for.body.i.i.i
  %i.0.i.i.i482 = phi i64 [ 0, %ifend29 ], [ %184, %for.body.i.i.i ]
  %183 = load ptr, ptr %181, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %183, i64 %i.0.i.i.i482
  store ptr null, ptr %ptridx.i.i.i, align 8
  %184 = add nuw nsw i64 %i.0.i.i.i482, 1
  %185 = icmp ult i64 %i.0.i.i.i482, 255
  br i1 %185, label %for.body.i.i.i, label %TypeChecker_constructor.exit.i

TypeChecker_constructor.exit.i:                   ; preds = %for.body.i.i.i
  %memberidx3.i.i201 = getelementptr inbounds %TypeChecker, ptr %5, i64 0, i32 8
  %memberidx2.i.i.i202 = getelementptr inbounds %Map_string_Generic_, ptr %181, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i.i202, align 4
  %memberidx3.i7.i.i = getelementptr inbounds %Map_string_Generic_, ptr %181, i64 0, i32 2
  store i64 0, ptr %memberidx3.i7.i.i, align 4
  store ptr %181, ptr %memberidx3.i.i201, align 8
  %186 = load ptr, ptr %memberidx.i.i196, align 8
  %187 = load ptr, ptr %186, align 8
  %memberidx1.i9.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %187, i64 0, i32 1
  %188 = load ptr, ptr %memberidx1.i9.i, align 8
  %189 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %189, ptr noundef nonnull align 8 dereferenceable(12) @89, i64 12, i1 false)
  %190 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %190, align 8
  %memberidx.i.i.i10.i = getelementptr inbounds %string, ptr %190, i64 0, i32 1
  store ptr %189, ptr %memberidx.i.i.i10.i, align 8
  %memberidx1.i.i.i11.i = getelementptr inbounds %string, ptr %190, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i.i11.i, align 4
  %memberidx2.i.i.i12.i = getelementptr inbounds %string, ptr %190, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i.i12.i, align 4
  %191 = tail call ptr %188(ptr nonnull %186, ptr nonnull %190)
  %192 = tail call ptr @malloc(i32 56)
  tail call fastcc void @ModuleAST_constructor(ptr %192)
  %193 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %193, ptr noundef nonnull align 8 dereferenceable(12) @89, i64 12, i1 false)
  %194 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %194, align 8
  %memberidx.i.i3.i.i = getelementptr inbounds %string, ptr %194, i64 0, i32 1
  store ptr %193, ptr %memberidx.i.i3.i.i, align 8
  %memberidx1.i.i4.i.i = getelementptr inbounds %string, ptr %194, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i4.i.i, align 4
  %memberidx2.i.i5.i.i = getelementptr inbounds %string, ptr %194, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i5.i.i, align 4
  %195 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %5, ptr %192, ptr nonnull %194)
  %196 = load ptr, ptr %memberidx.i.i196, align 8
  %memberidx1.i14.i = getelementptr inbounds %Compiler, ptr %196, i64 0, i32 4
  %197 = load ptr, ptr %memberidx1.i14.i, align 8
  %198 = call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr nonnull %5, ptr %197, ptr null)
  %memberidx.i15.i203 = getelementptr inbounds %TypeChecker, ptr %5, i64 0, i32 4
  %199 = load ptr, ptr %5, align 8
  %memberidx1.i.i16.i = getelementptr inbounds %Program, ptr %199, i64 0, i32 1
  %200 = load ptr, ptr %memberidx1.i.i16.i, align 8
  %memberidx.i.i.i17.i204 = getelementptr inbounds %Array_Module_, ptr %200, i64 0, i32 1
  %201 = load ptr, ptr %memberidx.i.i.i17.i204, align 8
  %202 = load ptr, ptr %201, align 8
  %memberidx1.i18.i = getelementptr inbounds %Module, ptr %202, i64 0, i32 5
  %203 = load ptr, ptr %memberidx1.i18.i, align 8
  store ptr %203, ptr %memberidx.i15.i203, align 8
  %204 = load ptr, ptr %memberidx1.i.i16.i, align 8
  %memberidx.i.i.i205 = getelementptr inbounds %Array_Module_, ptr %204, i64 0, i32 1
  %205 = load ptr, ptr %memberidx.i.i.i205, align 8
  %ptridx.i.i20.i = getelementptr inbounds ptr, ptr %205, i64 1
  %206 = load ptr, ptr %ptridx.i.i20.i, align 8
  call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %5, ptr %206)
  %207 = load ptr, ptr %memberidx.i.i196, align 8
  %memberidx1.i22.i = getelementptr inbounds %Compiler, ptr %207, i64 0, i32 6
  %208 = load ptr, ptr %memberidx1.i22.i, align 8
  %memberidx2.i.i206 = getelementptr inbounds %Array_FloError_, ptr %208, i64 0, i32 2
  %209 = load i64, ptr %memberidx2.i.i206, align 4
  %210 = icmp sgt i64 %209, 0
  br i1 %210, label %TypeChecker_check.exit, label %ifend.i

ifend.i:                                          ; preds = %TypeChecker_constructor.exit.i
  %211 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %5, ptr %174, ptr %129)
  %212 = load ptr, ptr %5, align 8
  br label %TypeChecker_check.exit

TypeChecker_check.exit:                           ; preds = %TypeChecker_constructor.exit.i, %ifend.i
  %common.ret.op.i = phi ptr [ %212, %ifend.i ], [ null, %TypeChecker_constructor.exit.i ]
  call void @llvm.lifetime.end.p0(i64 58, ptr nonnull %5)
  %213 = load ptr, ptr %130, align 8
  %memberidx30 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %213, i64 0, i32 3
  %214 = load ptr, ptr %memberidx30, align 8
  %215 = call i1 %214(ptr nonnull %130)
  br i1 %215, label %common.ret, label %ifend33

ifend33:                                          ; preds = %TypeChecker_check.exit
  call void @llvm.lifetime.start.p0(i64 81, ptr nonnull %4)
  %memberidx.i207 = getelementptr inbounds %Program, ptr %common.ret.op.i, i64 0, i32 1
  %216 = load ptr, ptr %memberidx.i207, align 8
  %memberidx.i.i208 = getelementptr inbounds %Array_Module_, ptr %216, i64 0, i32 1
  %217 = load ptr, ptr %memberidx.i.i208, align 8
  %ptridx.i.i209 = getelementptr inbounds ptr, ptr %217, i64 2
  %218 = load ptr, ptr %ptridx.i.i209, align 8
  %219 = load ptr, ptr %218, align 8
  %memberidx.i80.i = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 4
  store ptr %common.ret.op.i, ptr %memberidx.i80.i, align 8
  %220 = call ptr @malloc(i32 24)
  %221 = call ptr @malloc(i32 2048)
  store ptr %221, ptr %220, align 8
  br label %for.body.i.i.i213

for.body.i.i.i213:                                ; preds = %ifend33, %for.body.i.i.i213
  %i.0.i.i.i210481 = phi i64 [ 0, %ifend33 ], [ %223, %for.body.i.i.i213 ]
  %222 = load ptr, ptr %220, align 8
  %ptridx.i.i.i212 = getelementptr inbounds ptr, ptr %222, i64 %i.0.i.i.i210481
  store ptr null, ptr %ptridx.i.i.i212, align 8
  %223 = add nuw nsw i64 %i.0.i.i.i210481, 1
  %224 = icmp ult i64 %i.0.i.i.i210481, 255
  br i1 %224, label %for.body.i.i.i213, label %Map_string_LLVMValueRef__constructor.exit.i.i

Map_string_LLVMValueRef__constructor.exit.i.i:    ; preds = %for.body.i.i.i213
  %memberidx1.i81.i = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 6
  %memberidx2.i.i82.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %220, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i82.i, align 4
  %memberidx3.i.i.i214 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %220, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i.i214, align 4
  store ptr %220, ptr %memberidx1.i81.i, align 8
  %225 = call ptr @malloc(i32 24)
  %226 = call ptr @malloc(i32 2048)
  store ptr %226, ptr %225, align 8
  br label %for.body.i23.i.i

for.body.i23.i.i:                                 ; preds = %Map_string_LLVMValueRef__constructor.exit.i.i, %for.body.i23.i.i
  %i.0.i20.i.i480 = phi i64 [ 0, %Map_string_LLVMValueRef__constructor.exit.i.i ], [ %228, %for.body.i23.i.i ]
  %227 = load ptr, ptr %225, align 8
  %ptridx.i22.i.i = getelementptr inbounds ptr, ptr %227, i64 %i.0.i20.i.i480
  store ptr null, ptr %ptridx.i22.i.i, align 8
  %228 = add nuw nsw i64 %i.0.i20.i.i480, 1
  %229 = icmp ult i64 %i.0.i20.i.i480, 255
  br i1 %229, label %for.body.i23.i.i, label %Map_string_LLVMValueRef__constructor.exit26.i.i

Map_string_LLVMValueRef__constructor.exit26.i.i:  ; preds = %for.body.i23.i.i
  %memberidx2.i.i215 = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 7
  %memberidx2.i24.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %225, i64 0, i32 1
  store i64 256, ptr %memberidx2.i24.i.i, align 4
  %memberidx3.i25.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %225, i64 0, i32 2
  store i64 0, ptr %memberidx3.i25.i.i, align 4
  store ptr %225, ptr %memberidx2.i.i215, align 8
  %230 = call ptr @malloc(i32 24)
  %231 = call ptr @malloc(i32 2048)
  store ptr %231, ptr %230, align 8
  br label %for.body.i30.i.i

for.body.i30.i.i:                                 ; preds = %Map_string_LLVMValueRef__constructor.exit26.i.i, %for.body.i30.i.i
  %i.0.i27.i.i479 = phi i64 [ 0, %Map_string_LLVMValueRef__constructor.exit26.i.i ], [ %233, %for.body.i30.i.i ]
  %232 = load ptr, ptr %230, align 8
  %ptridx.i29.i.i = getelementptr inbounds ptr, ptr %232, i64 %i.0.i27.i.i479
  store ptr null, ptr %ptridx.i29.i.i, align 8
  %233 = add nuw nsw i64 %i.0.i27.i.i479, 1
  %234 = icmp ult i64 %i.0.i27.i.i479, 255
  br i1 %234, label %for.body.i30.i.i, label %Map_string_CGClassType__constructor.exit.i.i

Map_string_CGClassType__constructor.exit.i.i:     ; preds = %for.body.i30.i.i
  %memberidx3.i.i216 = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 8
  %memberidx2.i31.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %230, i64 0, i32 1
  store i64 256, ptr %memberidx2.i31.i.i, align 4
  %memberidx3.i32.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %230, i64 0, i32 2
  store i64 0, ptr %memberidx3.i32.i.i, align 4
  store ptr %230, ptr %memberidx3.i.i216, align 8
  %235 = call ptr @malloc(i32 24)
  %236 = call ptr @malloc(i32 2048)
  store ptr %236, ptr %235, align 8
  br label %for.body.i36.i.i

for.body.i36.i.i:                                 ; preds = %Map_string_CGClassType__constructor.exit.i.i, %for.body.i36.i.i
  %i.0.i33.i.i478 = phi i64 [ 0, %Map_string_CGClassType__constructor.exit.i.i ], [ %238, %for.body.i36.i.i ]
  %237 = load ptr, ptr %235, align 8
  %ptridx.i35.i.i = getelementptr inbounds ptr, ptr %237, i64 %i.0.i33.i.i478
  store ptr null, ptr %ptridx.i35.i.i, align 8
  %238 = add nuw nsw i64 %i.0.i33.i.i478, 1
  %239 = icmp ult i64 %i.0.i33.i.i478, 255
  br i1 %239, label %for.body.i36.i.i, label %Map_string_CGEnumType__constructor.exit.i.i

Map_string_CGEnumType__constructor.exit.i.i:      ; preds = %for.body.i36.i.i
  %memberidx4.i.i217 = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 9
  %memberidx2.i37.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %235, i64 0, i32 1
  store i64 256, ptr %memberidx2.i37.i.i, align 4
  %memberidx3.i38.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %235, i64 0, i32 2
  store i64 0, ptr %memberidx3.i38.i.i, align 4
  store ptr %235, ptr %memberidx4.i.i217, align 8
  %240 = call ptr @malloc(i32 24)
  %241 = call ptr @malloc(i32 2048)
  store ptr %241, ptr %240, align 8
  br label %for.body.i42.i.i

for.body.i42.i.i:                                 ; preds = %Map_string_CGEnumType__constructor.exit.i.i, %for.body.i42.i.i
  %i.0.i39.i.i477 = phi i64 [ 0, %Map_string_CGEnumType__constructor.exit.i.i ], [ %243, %for.body.i42.i.i ]
  %242 = load ptr, ptr %240, align 8
  %ptridx.i41.i.i = getelementptr inbounds ptr, ptr %242, i64 %i.0.i39.i.i477
  store ptr null, ptr %ptridx.i41.i.i, align 8
  %243 = add nuw nsw i64 %i.0.i39.i.i477, 1
  %244 = icmp ult i64 %i.0.i39.i.i477, 255
  br i1 %244, label %for.body.i42.i.i, label %CodeGen_constructor.exit.i

CodeGen_constructor.exit.i:                       ; preds = %for.body.i42.i.i
  %memberidx5.i83.i = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 10
  %memberidx2.i43.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %240, i64 0, i32 1
  store i64 256, ptr %memberidx2.i43.i.i, align 4
  %memberidx3.i44.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %240, i64 0, i32 2
  store i64 0, ptr %memberidx3.i44.i.i, align 4
  store ptr %240, ptr %memberidx5.i83.i, align 8
  %memberidx6.i.i = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 5
  store i1 true, ptr %memberidx6.i.i, align 8
  %memberidx8.i.i = getelementptr inbounds %CodeGen, ptr %4, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx8.i.i, i8 0, i64 16, i1 false)
  %245 = load ptr, ptr %219, align 8
  %memberidx10.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %245, i64 0, i32 5
  %246 = load ptr, ptr %memberidx10.i.i, align 8
  %247 = call ptr %246(ptr nonnull %219)
  %248 = call ptr @LLVMModuleCreateWithName(ptr %247)
  store ptr %248, ptr %4, align 8
  %memberidx8.i218 = getelementptr inbounds %Module, ptr %218, i64 0, i32 6
  %249 = load ptr, ptr %memberidx8.i218, align 8
  %250 = call ptr @malloc(i32 25)
  %memberidx.i84.i = getelementptr inbounds %Array_Enum_, ptr %249, i64 0, i32 1
  %251 = load ptr, ptr %memberidx.i84.i, align 8
  %memberidx1.i85.i = getelementptr inbounds %Array_Enum_, ptr %249, i64 0, i32 2
  %252 = load i64, ptr %memberidx1.i85.i, align 4
  store i1 false, ptr %250, align 1
  %memberidx1.i.i.i219 = getelementptr inbounds %ArrayIterator_Enum_, ptr %250, i64 0, i32 1
  %memberidx2.i.i86.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %250, i64 0, i32 3
  store ptr %251, ptr %memberidx2.i.i86.i, align 8
  %memberidx3.i.i87.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %250, i64 0, i32 2
  store i64 %252, ptr %memberidx3.i.i87.i, align 4
  store i64 1, ptr %memberidx1.i.i.i219, align 4
  %253 = icmp slt i64 %252, 1
  br i1 %253, label %for.end.i, label %for.body.i221

for.body.i221:                                    ; preds = %CodeGen_constructor.exit.i, %for.body.i221
  %254 = phi i64 [ %255, %for.body.i221 ], [ 1, %CodeGen_constructor.exit.i ]
  %enum_.0.i475.in = phi ptr [ %ptridx.i94.i, %for.body.i221 ], [ %251, %CodeGen_constructor.exit.i ]
  %enum_.0.i475 = load ptr, ptr %enum_.0.i475.in, align 8
  call fastcc void @CodeGen_declare_enum(ptr nonnull %4, ptr %enum_.0.i475)
  %255 = add nuw nsw i64 %254, 1
  store i64 %255, ptr %memberidx1.i.i.i219, align 4
  %ptridx.i94.i = getelementptr inbounds ptr, ptr %251, i64 %254
  %.not550 = icmp slt i64 %254, %252
  br i1 %.not550, label %for.body.i221, label %for.end.i

for.end.i:                                        ; preds = %for.body.i221, %CodeGen_constructor.exit.i
  call void @free(ptr nonnull %250)
  %memberidx11.i = getelementptr inbounds %Module, ptr %218, i64 0, i32 3
  %256 = load ptr, ptr %memberidx11.i, align 8
  %257 = call ptr @malloc(i32 25)
  %memberidx.i96.i = getelementptr inbounds %Array_Class_, ptr %256, i64 0, i32 1
  %258 = load ptr, ptr %memberidx.i96.i, align 8
  %memberidx1.i97.i = getelementptr inbounds %Array_Class_, ptr %256, i64 0, i32 2
  %259 = load i64, ptr %memberidx1.i97.i, align 4
  store i1 false, ptr %257, align 1
  %memberidx1.i.i98.i = getelementptr inbounds %ArrayIterator_Class_, ptr %257, i64 0, i32 1
  %memberidx2.i.i99.i = getelementptr inbounds %ArrayIterator_Class_, ptr %257, i64 0, i32 3
  store ptr %258, ptr %memberidx2.i.i99.i, align 8
  %memberidx3.i.i100.i = getelementptr inbounds %ArrayIterator_Class_, ptr %257, i64 0, i32 2
  store i64 %259, ptr %memberidx3.i.i100.i, align 4
  store i64 1, ptr %memberidx1.i.i98.i, align 4
  %260 = icmp slt i64 %259, 1
  br i1 %260, label %for.end15.i, label %for.body13.i

for.body13.i:                                     ; preds = %for.end.i, %for.body13.i
  %261 = phi i64 [ %262, %for.body13.i ], [ 1, %for.end.i ]
  %class_.0.i472.in = phi ptr [ %ptridx.i107.i, %for.body13.i ], [ %258, %for.end.i ]
  %class_.0.i472 = load ptr, ptr %class_.0.i472.in, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %4, ptr %class_.0.i472)
  %262 = add nuw nsw i64 %261, 1
  store i64 %262, ptr %memberidx1.i.i98.i, align 4
  %ptridx.i107.i = getelementptr inbounds ptr, ptr %258, i64 %261
  %.not551 = icmp slt i64 %261, %259
  br i1 %.not551, label %for.body13.i, label %for.end15.i

for.end15.i:                                      ; preds = %for.body13.i, %for.end.i
  call void @free(ptr nonnull %257)
  %memberidx18.i = getelementptr inbounds %Module, ptr %218, i64 0, i32 8
  %263 = load ptr, ptr %memberidx18.i, align 8
  %264 = call ptr @malloc(i32 25)
  %memberidx.i109.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %263, i64 0, i32 1
  %265 = load ptr, ptr %memberidx.i109.i, align 8
  %memberidx1.i110.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %263, i64 0, i32 2
  %266 = load i64, ptr %memberidx1.i110.i, align 4
  store i1 false, ptr %264, align 1
  %memberidx1.i.i111.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %264, i64 0, i32 1
  %memberidx2.i.i112.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %264, i64 0, i32 3
  store ptr %265, ptr %memberidx2.i.i112.i, align 8
  %memberidx3.i.i113.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %264, i64 0, i32 2
  store i64 %266, ptr %memberidx3.i.i113.i, align 4
  store i64 1, ptr %memberidx1.i.i111.i, align 4
  %267 = icmp slt i64 %266, 1
  br i1 %267, label %for.end22.i, label %for.body20.i

for.body20.i:                                     ; preds = %for.end15.i, %for.body20.i
  %268 = phi i64 [ %269, %for.body20.i ], [ 1, %for.end15.i ]
  %const_.0.i469.in = phi ptr [ %ptridx.i120.i, %for.body20.i ], [ %265, %for.end15.i ]
  %const_.0.i469 = load ptr, ptr %const_.0.i469.in, align 8
  call fastcc void @CodeGen_codegen_const_declaration(ptr nonnull %4, ptr null, ptr %const_.0.i469)
  %269 = add nuw nsw i64 %268, 1
  store i64 %269, ptr %memberidx1.i.i111.i, align 4
  %ptridx.i120.i = getelementptr inbounds ptr, ptr %265, i64 %268
  %.not552 = icmp slt i64 %268, %266
  br i1 %.not552, label %for.body20.i, label %for.end22.i

for.end22.i:                                      ; preds = %for.body20.i, %for.end15.i
  call void @free(ptr nonnull %264)
  %memberidx25.i = getelementptr inbounds %Module, ptr %218, i64 0, i32 9
  %270 = load ptr, ptr %memberidx25.i, align 8
  %271 = call ptr @malloc(i32 25)
  %memberidx.i122.i = getelementptr inbounds %Array_VarDeclaration_, ptr %270, i64 0, i32 1
  %272 = load ptr, ptr %memberidx.i122.i, align 8
  %memberidx1.i123.i = getelementptr inbounds %Array_VarDeclaration_, ptr %270, i64 0, i32 2
  %273 = load i64, ptr %memberidx1.i123.i, align 4
  store i1 false, ptr %271, align 1
  %memberidx1.i.i124.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %271, i64 0, i32 1
  %memberidx2.i.i125.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %271, i64 0, i32 3
  store ptr %272, ptr %memberidx2.i.i125.i, align 8
  %memberidx3.i.i126.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %271, i64 0, i32 2
  store i64 %273, ptr %memberidx3.i.i126.i, align 4
  store i64 1, ptr %memberidx1.i.i124.i, align 4
  %274 = icmp slt i64 %273, 1
  br i1 %274, label %for.end29.i, label %for.body27.i

for.body27.i:                                     ; preds = %for.end22.i, %for.body27.i
  %275 = phi i64 [ %276, %for.body27.i ], [ 1, %for.end22.i ]
  %var_.0.i466.in = phi ptr [ %ptridx.i133.i, %for.body27.i ], [ %272, %for.end22.i ]
  %var_.0.i466 = load ptr, ptr %var_.0.i466.in, align 8
  call fastcc void @CodeGen_codegen_var_declaration(ptr nonnull %4, ptr null, ptr %var_.0.i466)
  %276 = add nuw nsw i64 %275, 1
  store i64 %276, ptr %memberidx1.i.i124.i, align 4
  %ptridx.i133.i = getelementptr inbounds ptr, ptr %272, i64 %275
  %.not553 = icmp slt i64 %275, %273
  br i1 %.not553, label %for.body27.i, label %for.end29.i

for.end29.i:                                      ; preds = %for.body27.i, %for.end22.i
  call void @free(ptr nonnull %271)
  %277 = load ptr, ptr %memberidx11.i, align 8
  %278 = call ptr @malloc(i32 25)
  %memberidx.i135.i = getelementptr inbounds %Array_Class_, ptr %277, i64 0, i32 1
  %279 = load ptr, ptr %memberidx.i135.i, align 8
  %memberidx1.i136.i = getelementptr inbounds %Array_Class_, ptr %277, i64 0, i32 2
  %280 = load i64, ptr %memberidx1.i136.i, align 4
  store i1 false, ptr %278, align 1
  %memberidx1.i.i137.i = getelementptr inbounds %ArrayIterator_Class_, ptr %278, i64 0, i32 1
  %memberidx2.i.i138.i = getelementptr inbounds %ArrayIterator_Class_, ptr %278, i64 0, i32 3
  store ptr %279, ptr %memberidx2.i.i138.i, align 8
  %memberidx3.i.i139.i = getelementptr inbounds %ArrayIterator_Class_, ptr %278, i64 0, i32 2
  store i64 %280, ptr %memberidx3.i.i139.i, align 4
  store i64 1, ptr %memberidx1.i.i137.i, align 4
  %281 = icmp slt i64 %280, 1
  br i1 %281, label %for.end36.i, label %for.body34.i

for.body34.i:                                     ; preds = %for.end29.i, %for.body34.i
  %282 = phi i64 [ %283, %for.body34.i ], [ 1, %for.end29.i ]
  %class_4.0.i463.in = phi ptr [ %ptridx.i146.i, %for.body34.i ], [ %279, %for.end29.i ]
  %class_4.0.i463 = load ptr, ptr %class_4.0.i463.in, align 8
  call fastcc void @CodeGen_codegen_class(ptr nonnull %4, ptr %class_4.0.i463)
  %283 = add nuw nsw i64 %282, 1
  store i64 %283, ptr %memberidx1.i.i137.i, align 4
  %ptridx.i146.i = getelementptr inbounds ptr, ptr %279, i64 %282
  %.not554 = icmp slt i64 %282, %280
  br i1 %.not554, label %for.body34.i, label %for.end36.i

for.end36.i:                                      ; preds = %for.body34.i, %for.end29.i
  call void @free(ptr nonnull %278)
  %memberidx39.i = getelementptr inbounds %Module, ptr %218, i64 0, i32 4
  %284 = load ptr, ptr %memberidx39.i, align 8
  %285 = call ptr @malloc(i32 25)
  %memberidx.i148.i = getelementptr inbounds %Array_Function_, ptr %284, i64 0, i32 1
  %286 = load ptr, ptr %memberidx.i148.i, align 8
  %memberidx1.i149.i = getelementptr inbounds %Array_Function_, ptr %284, i64 0, i32 2
  %287 = load i64, ptr %memberidx1.i149.i, align 4
  store i1 false, ptr %285, align 1
  %memberidx1.i.i150.i = getelementptr inbounds %ArrayIterator_Function_, ptr %285, i64 0, i32 1
  %memberidx2.i.i151.i = getelementptr inbounds %ArrayIterator_Function_, ptr %285, i64 0, i32 3
  store ptr %286, ptr %memberidx2.i.i151.i, align 8
  %memberidx3.i.i152.i = getelementptr inbounds %ArrayIterator_Function_, ptr %285, i64 0, i32 2
  store i64 %287, ptr %memberidx3.i.i152.i, align 4
  store i64 1, ptr %memberidx1.i.i150.i, align 4
  %288 = icmp slt i64 %287, 1
  br i1 %288, label %for.end43.i, label %for.body41.i

for.body41.i:                                     ; preds = %for.end36.i, %for.body41.i
  %289 = phi i64 [ %290, %for.body41.i ], [ 1, %for.end36.i ]
  %func_.0.i460.in = phi ptr [ %ptridx.i159.i, %for.body41.i ], [ %286, %for.end36.i ]
  %func_.0.i460 = load ptr, ptr %func_.0.i460.in, align 8
  call fastcc void @CodeGen_codegen_function(ptr nonnull %4, ptr %func_.0.i460)
  %290 = add nuw nsw i64 %289, 1
  store i64 %290, ptr %memberidx1.i.i150.i, align 4
  %ptridx.i159.i = getelementptr inbounds ptr, ptr %286, i64 %289
  %.not555 = icmp slt i64 %289, %287
  br i1 %.not555, label %for.body41.i, label %for.end43.i

for.end43.i:                                      ; preds = %for.body41.i, %for.end36.i
  call void @free(ptr nonnull %285)
  %291 = load ptr, ptr %memberidx1.i81.i, align 8
  %292 = call ptr @malloc(i32 25)
  %293 = load ptr, ptr %291, align 8
  %memberidx1.i.i162.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %291, i64 0, i32 1
  %294 = load i64, ptr %memberidx1.i.i162.i, align 4
  %memberidx2.i.i163.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %291, i64 0, i32 2
  %295 = load i64, ptr %memberidx2.i.i163.i, align 4
  store i1 false, ptr %292, align 1
  %memberidx1.i.i.i164.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %292, i64 0, i32 1
  store ptr %293, ptr %memberidx1.i.i.i164.i, align 8
  %memberidx2.i.i.i165.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %292, i64 0, i32 2
  %memberidx3.i.i.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %292, i64 0, i32 3
  store i64 %295, ptr %memberidx3.i.i.i.i, align 4
  %296 = add nsw i64 %294, -1
  store i64 %296, ptr %memberidx2.i.i.i165.i, align 4
  %297 = icmp sgt i64 %294, 0
  br i1 %297, label %while.entry.i.i.i, label %MapIterator_string_LLVMValueRef__next.exit.i.i

while.entry.i.i.i:                                ; preds = %for.end43.i, %ifend.i.i.i
  %298 = phi i64 [ %301, %ifend.i.i.i ], [ %296, %for.end43.i ]
  %299 = phi ptr [ %incdec.ptr.i.i.i, %ifend.i.i.i ], [ %293, %for.end43.i ]
  %incdec.ptr.i.i.i = getelementptr inbounds ptr, ptr %299, i64 1
  %300 = load ptr, ptr %299, align 8
  %.not.i.i.i = icmp eq ptr %300, null
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit

ifend.i.i.i:                                      ; preds = %while.entry.i.i.i
  %301 = add nsw i64 %298, -1
  store i64 %301, ptr %memberidx2.i.i.i165.i, align 4
  %302 = icmp sgt i64 %298, 0
  br i1 %302, label %while.entry.i.i.i, label %MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit

MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit: ; preds = %while.entry.i.i.i, %ifend.i.i.i
  %memberidx2.i.i.i165.i.promoted532 = phi i64 [ %298, %while.entry.i.i.i ], [ %301, %ifend.i.i.i ]
  store ptr %incdec.ptr.i.i.i, ptr %memberidx1.i.i.i164.i, align 8
  br label %MapIterator_string_LLVMValueRef__next.exit.i.i

MapIterator_string_LLVMValueRef__next.exit.i.i:   ; preds = %MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit, %for.end43.i
  %memberidx2.i.i.i165.i.promoted = phi i64 [ %memberidx2.i.i.i165.i.promoted532, %MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit ], [ %296, %for.end43.i ]
  %memberidx1.i.i.i164.i.promoted455 = phi ptr [ %incdec.ptr.i.i.i, %MapIterator_string_LLVMValueRef__next.exit.i.i.loopexit ], [ %293, %for.end43.i ]
  %storemerge351451 = icmp slt i64 %295, 1
  br i1 %storemerge351451, label %for.end.i.i, label %for.body.i.i223

for.body.i.i223:                                  ; preds = %MapIterator_string_LLVMValueRef__next.exit.i.i, %MapIterator_string_LLVMValueRef__next.exit83.i.i
  %303 = phi i64 [ %314, %MapIterator_string_LLVMValueRef__next.exit83.i.i ], [ %memberidx2.i.i.i165.i.promoted, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  %incdec.ptr.i76.i.i.lcssa457 = phi ptr [ %incdec.ptr.i76.i.i.lcssa456, %MapIterator_string_LLVMValueRef__next.exit83.i.i ], [ %memberidx1.i.i.i164.i.promoted455, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  %storemerge370452.in = phi i64 [ %storemerge370452, %MapIterator_string_LLVMValueRef__next.exit83.i.i ], [ %295, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  %storemerge370452 = add nsw i64 %storemerge370452.in, -1
  %var_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i76.i.i.lcssa457, i64 -1
  %var_entry.0.i.i = load ptr, ptr %var_entry.0.i.i.in, align 8
  %304 = load ptr, ptr %var_entry.0.i.i, align 8
  %memberidx.i73.i.i = getelementptr inbounds %string, ptr %304, i64 0, i32 1
  %305 = load ptr, ptr %memberidx.i73.i.i, align 8
  call void @free(ptr %305)
  call void @free(ptr %304)
  %306 = add nsw i64 %303, -1
  %307 = icmp sgt i64 %303, 0
  br i1 %307, label %while.entry.i78.i.i.preheader, label %MapIterator_string_LLVMValueRef__next.exit83.i.i

while.entry.i78.i.i.preheader:                    ; preds = %for.body.i.i223
  %308 = shl i64 %303, 3
  %uglygep528 = getelementptr i8, ptr %incdec.ptr.i76.i.i.lcssa457, i64 %308
  br label %while.entry.i78.i.i

while.entry.i78.i.i:                              ; preds = %while.entry.i78.i.i.preheader, %ifend.i82.i.i
  %309 = phi i64 [ %312, %ifend.i82.i.i ], [ %306, %while.entry.i78.i.i.preheader ]
  %310 = phi ptr [ %incdec.ptr.i76.i.i, %ifend.i82.i.i ], [ %incdec.ptr.i76.i.i.lcssa457, %while.entry.i78.i.i.preheader ]
  %incdec.ptr.i76.i.i = getelementptr inbounds ptr, ptr %310, i64 1
  %311 = load ptr, ptr %310, align 8
  %.not.i77.i.i = icmp eq ptr %311, null
  br i1 %.not.i77.i.i, label %ifend.i82.i.i, label %MapIterator_string_LLVMValueRef__next.exit83.i.i

ifend.i82.i.i:                                    ; preds = %while.entry.i78.i.i
  %312 = add nsw i64 %309, -1
  %313 = icmp sgt i64 %309, 0
  br i1 %313, label %while.entry.i78.i.i, label %MapIterator_string_LLVMValueRef__next.exit83.i.i

MapIterator_string_LLVMValueRef__next.exit83.i.i: ; preds = %ifend.i82.i.i, %while.entry.i78.i.i, %for.body.i.i223
  %314 = phi i64 [ %306, %for.body.i.i223 ], [ -1, %ifend.i82.i.i ], [ %309, %while.entry.i78.i.i ]
  %incdec.ptr.i76.i.i.lcssa456 = phi ptr [ %incdec.ptr.i76.i.i.lcssa457, %for.body.i.i223 ], [ %uglygep528, %ifend.i82.i.i ], [ %incdec.ptr.i76.i.i, %while.entry.i78.i.i ]
  %storemerge351 = icmp slt i64 %storemerge370452.in, 2
  br i1 %storemerge351, label %for.cond.i.i222.for.end.i.i_crit_edge, label %for.body.i.i223

for.cond.i.i222.for.end.i.i_crit_edge:            ; preds = %MapIterator_string_LLVMValueRef__next.exit83.i.i
  store ptr %incdec.ptr.i76.i.i.lcssa456, ptr %memberidx1.i.i.i164.i, align 8
  store i64 %314, ptr %memberidx2.i.i.i165.i, align 4
  %.pre533 = load ptr, ptr %291, align 8
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i222.for.end.i.i_crit_edge, %MapIterator_string_LLVMValueRef__next.exit.i.i
  %315 = phi ptr [ %.pre533, %for.cond.i.i222.for.end.i.i_crit_edge ], [ %293, %MapIterator_string_LLVMValueRef__next.exit.i.i ]
  call void @free(ptr nonnull %292)
  call void @free(ptr %315)
  call void @free(ptr %291)
  %316 = load ptr, ptr %memberidx2.i.i215, align 8
  %317 = call ptr @malloc(i32 25)
  %318 = load ptr, ptr %316, align 8
  %memberidx1.i94.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %316, i64 0, i32 1
  %319 = load i64, ptr %memberidx1.i94.i.i, align 4
  %memberidx2.i95.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %316, i64 0, i32 2
  %320 = load i64, ptr %memberidx2.i95.i.i, align 4
  store i1 false, ptr %317, align 1
  %memberidx1.i.i96.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %317, i64 0, i32 1
  store ptr %318, ptr %memberidx1.i.i96.i.i, align 8
  %memberidx2.i.i97.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %317, i64 0, i32 2
  %memberidx3.i.i98.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %317, i64 0, i32 3
  store i64 %320, ptr %memberidx3.i.i98.i.i, align 4
  %321 = add nsw i64 %319, -1
  store i64 %321, ptr %memberidx2.i.i97.i.i, align 4
  %322 = icmp sgt i64 %319, 0
  br i1 %322, label %while.entry.i103.i.i, label %MapIterator_string_LLVMValueRef__next.exit108.i.i

while.entry.i103.i.i:                             ; preds = %for.end.i.i, %ifend.i107.i.i
  %323 = phi i64 [ %326, %ifend.i107.i.i ], [ %321, %for.end.i.i ]
  %324 = phi ptr [ %incdec.ptr.i101.i.i, %ifend.i107.i.i ], [ %318, %for.end.i.i ]
  %incdec.ptr.i101.i.i = getelementptr inbounds ptr, ptr %324, i64 1
  %325 = load ptr, ptr %324, align 8
  %.not.i102.i.i = icmp eq ptr %325, null
  br i1 %.not.i102.i.i, label %ifend.i107.i.i, label %MapIterator_string_LLVMValueRef__next.exit108.i.i.loopexit

ifend.i107.i.i:                                   ; preds = %while.entry.i103.i.i
  %326 = add nsw i64 %323, -1
  store i64 %326, ptr %memberidx2.i.i97.i.i, align 4
  %327 = icmp sgt i64 %323, 0
  br i1 %327, label %while.entry.i103.i.i, label %MapIterator_string_LLVMValueRef__next.exit108.i.i.loopexit

MapIterator_string_LLVMValueRef__next.exit108.i.i.loopexit: ; preds = %while.entry.i103.i.i, %ifend.i107.i.i
  %memberidx2.i.i97.i.i.promoted536 = phi i64 [ %323, %while.entry.i103.i.i ], [ %326, %ifend.i107.i.i ]
  store ptr %incdec.ptr.i101.i.i, ptr %memberidx1.i.i96.i.i, align 8
  br label %MapIterator_string_LLVMValueRef__next.exit108.i.i

MapIterator_string_LLVMValueRef__next.exit108.i.i: ; preds = %MapIterator_string_LLVMValueRef__next.exit108.i.i.loopexit, %for.end.i.i
  %memberidx2.i.i97.i.i.promoted = phi i64 [ %memberidx2.i.i97.i.i.promoted536, %MapIterator_string_LLVMValueRef__next.exit108.i.i.loopexit ], [ %321, %for.end.i.i ]
  %memberidx1.i.i96.i.i.promoted445 = phi ptr [ %incdec.ptr.i101.i.i, %MapIterator_string_LLVMValueRef__next.exit108.i.i.loopexit ], [ %318, %for.end.i.i ]
  %storemerge353441 = icmp slt i64 %320, 1
  br i1 %storemerge353441, label %for.end13.i.i, label %for.body11.i.i

for.body11.i.i:                                   ; preds = %MapIterator_string_LLVMValueRef__next.exit108.i.i, %MapIterator_string_LLVMValueRef__next.exit134.i.i
  %328 = phi i64 [ %339, %MapIterator_string_LLVMValueRef__next.exit134.i.i ], [ %memberidx2.i.i97.i.i.promoted, %MapIterator_string_LLVMValueRef__next.exit108.i.i ]
  %incdec.ptr.i127.i.i.lcssa447 = phi ptr [ %incdec.ptr.i127.i.i.lcssa446, %MapIterator_string_LLVMValueRef__next.exit134.i.i ], [ %memberidx1.i.i96.i.i.promoted445, %MapIterator_string_LLVMValueRef__next.exit108.i.i ]
  %storemerge371442.in = phi i64 [ %storemerge371442, %MapIterator_string_LLVMValueRef__next.exit134.i.i ], [ %320, %MapIterator_string_LLVMValueRef__next.exit108.i.i ]
  %storemerge371442 = add nsw i64 %storemerge371442.in, -1
  %string_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i127.i.i.lcssa447, i64 -1
  %string_entry.0.i.i = load ptr, ptr %string_entry.0.i.i.in, align 8
  %329 = load ptr, ptr %string_entry.0.i.i, align 8
  %memberidx.i124.i.i = getelementptr inbounds %string, ptr %329, i64 0, i32 1
  %330 = load ptr, ptr %memberidx.i124.i.i, align 8
  call void @free(ptr %330)
  call void @free(ptr %329)
  %331 = add nsw i64 %328, -1
  %332 = icmp sgt i64 %328, 0
  br i1 %332, label %while.entry.i129.i.i.preheader, label %MapIterator_string_LLVMValueRef__next.exit134.i.i

while.entry.i129.i.i.preheader:                   ; preds = %for.body11.i.i
  %333 = shl i64 %328, 3
  %uglygep527 = getelementptr i8, ptr %incdec.ptr.i127.i.i.lcssa447, i64 %333
  br label %while.entry.i129.i.i

while.entry.i129.i.i:                             ; preds = %while.entry.i129.i.i.preheader, %ifend.i133.i.i
  %334 = phi i64 [ %337, %ifend.i133.i.i ], [ %331, %while.entry.i129.i.i.preheader ]
  %335 = phi ptr [ %incdec.ptr.i127.i.i, %ifend.i133.i.i ], [ %incdec.ptr.i127.i.i.lcssa447, %while.entry.i129.i.i.preheader ]
  %incdec.ptr.i127.i.i = getelementptr inbounds ptr, ptr %335, i64 1
  %336 = load ptr, ptr %335, align 8
  %.not.i128.i.i = icmp eq ptr %336, null
  br i1 %.not.i128.i.i, label %ifend.i133.i.i, label %MapIterator_string_LLVMValueRef__next.exit134.i.i

ifend.i133.i.i:                                   ; preds = %while.entry.i129.i.i
  %337 = add nsw i64 %334, -1
  %338 = icmp sgt i64 %334, 0
  br i1 %338, label %while.entry.i129.i.i, label %MapIterator_string_LLVMValueRef__next.exit134.i.i

MapIterator_string_LLVMValueRef__next.exit134.i.i: ; preds = %ifend.i133.i.i, %while.entry.i129.i.i, %for.body11.i.i
  %339 = phi i64 [ %331, %for.body11.i.i ], [ -1, %ifend.i133.i.i ], [ %334, %while.entry.i129.i.i ]
  %incdec.ptr.i127.i.i.lcssa446 = phi ptr [ %incdec.ptr.i127.i.i.lcssa447, %for.body11.i.i ], [ %uglygep527, %ifend.i133.i.i ], [ %incdec.ptr.i127.i.i, %while.entry.i129.i.i ]
  %storemerge353 = icmp slt i64 %storemerge371442.in, 2
  br i1 %storemerge353, label %for.cond10.i.i.for.end13.i.i_crit_edge, label %for.body11.i.i

for.cond10.i.i.for.end13.i.i_crit_edge:           ; preds = %MapIterator_string_LLVMValueRef__next.exit134.i.i
  store ptr %incdec.ptr.i127.i.i.lcssa446, ptr %memberidx1.i.i96.i.i, align 8
  store i64 %339, ptr %memberidx2.i.i97.i.i, align 4
  %.pre537 = load ptr, ptr %316, align 8
  br label %for.end13.i.i

for.end13.i.i:                                    ; preds = %for.cond10.i.i.for.end13.i.i_crit_edge, %MapIterator_string_LLVMValueRef__next.exit108.i.i
  %340 = phi ptr [ %.pre537, %for.cond10.i.i.for.end13.i.i_crit_edge ], [ %318, %MapIterator_string_LLVMValueRef__next.exit108.i.i ]
  call void @free(ptr nonnull %317)
  call void @free(ptr %340)
  call void @free(ptr %316)
  %341 = load ptr, ptr %memberidx5.i83.i, align 8
  %342 = call ptr @malloc(i32 25)
  %343 = load ptr, ptr %341, align 8
  %memberidx1.i135.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %341, i64 0, i32 1
  %344 = load i64, ptr %memberidx1.i135.i.i, align 4
  %memberidx2.i136.i.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %341, i64 0, i32 2
  %345 = load i64, ptr %memberidx2.i136.i.i, align 4
  store i1 false, ptr %342, align 1
  %memberidx1.i.i137.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %342, i64 0, i32 1
  store ptr %343, ptr %memberidx1.i.i137.i.i, align 8
  %memberidx2.i.i138.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %342, i64 0, i32 2
  %memberidx3.i.i139.i.i = getelementptr inbounds %MapIterator_string_LLVMValueRef_, ptr %342, i64 0, i32 3
  store i64 %345, ptr %memberidx3.i.i139.i.i, align 4
  %346 = add nsw i64 %344, -1
  store i64 %346, ptr %memberidx2.i.i138.i.i, align 4
  %347 = icmp sgt i64 %344, 0
  br i1 %347, label %while.entry.i144.i.i, label %MapIterator_string_LLVMValueRef__next.exit149.i.i

while.entry.i144.i.i:                             ; preds = %for.end13.i.i, %ifend.i148.i.i
  %348 = phi i64 [ %351, %ifend.i148.i.i ], [ %346, %for.end13.i.i ]
  %349 = phi ptr [ %incdec.ptr.i142.i.i, %ifend.i148.i.i ], [ %343, %for.end13.i.i ]
  %incdec.ptr.i142.i.i = getelementptr inbounds ptr, ptr %349, i64 1
  %350 = load ptr, ptr %349, align 8
  %.not.i143.i.i = icmp eq ptr %350, null
  br i1 %.not.i143.i.i, label %ifend.i148.i.i, label %MapIterator_string_LLVMValueRef__next.exit149.i.i.loopexit

ifend.i148.i.i:                                   ; preds = %while.entry.i144.i.i
  %351 = add nsw i64 %348, -1
  store i64 %351, ptr %memberidx2.i.i138.i.i, align 4
  %352 = icmp sgt i64 %348, 0
  br i1 %352, label %while.entry.i144.i.i, label %MapIterator_string_LLVMValueRef__next.exit149.i.i.loopexit

MapIterator_string_LLVMValueRef__next.exit149.i.i.loopexit: ; preds = %while.entry.i144.i.i, %ifend.i148.i.i
  %memberidx2.i.i138.i.i.promoted540 = phi i64 [ %348, %while.entry.i144.i.i ], [ %351, %ifend.i148.i.i ]
  store ptr %incdec.ptr.i142.i.i, ptr %memberidx1.i.i137.i.i, align 8
  br label %MapIterator_string_LLVMValueRef__next.exit149.i.i

MapIterator_string_LLVMValueRef__next.exit149.i.i: ; preds = %MapIterator_string_LLVMValueRef__next.exit149.i.i.loopexit, %for.end13.i.i
  %memberidx2.i.i138.i.i.promoted = phi i64 [ %memberidx2.i.i138.i.i.promoted540, %MapIterator_string_LLVMValueRef__next.exit149.i.i.loopexit ], [ %346, %for.end13.i.i ]
  %memberidx1.i.i137.i.i.promoted435 = phi ptr [ %incdec.ptr.i142.i.i, %MapIterator_string_LLVMValueRef__next.exit149.i.i.loopexit ], [ %343, %for.end13.i.i ]
  %storemerge355431 = icmp slt i64 %345, 1
  br i1 %storemerge355431, label %for.end22.i.i, label %for.body20.i.i

for.body20.i.i:                                   ; preds = %MapIterator_string_LLVMValueRef__next.exit149.i.i, %MapIterator_string_LLVMValueRef__next.exit170.i.i
  %353 = phi i64 [ %364, %MapIterator_string_LLVMValueRef__next.exit170.i.i ], [ %memberidx2.i.i138.i.i.promoted, %MapIterator_string_LLVMValueRef__next.exit149.i.i ]
  %incdec.ptr.i163.i.i.lcssa437 = phi ptr [ %incdec.ptr.i163.i.i.lcssa436, %MapIterator_string_LLVMValueRef__next.exit170.i.i ], [ %memberidx1.i.i137.i.i.promoted435, %MapIterator_string_LLVMValueRef__next.exit149.i.i ]
  %storemerge372432.in = phi i64 [ %storemerge372432, %MapIterator_string_LLVMValueRef__next.exit170.i.i ], [ %345, %MapIterator_string_LLVMValueRef__next.exit149.i.i ]
  %storemerge372432 = add nsw i64 %storemerge372432.in, -1
  %func_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i163.i.i.lcssa437, i64 -1
  %func_entry.0.i.i = load ptr, ptr %func_entry.0.i.i.in, align 8
  %354 = load ptr, ptr %func_entry.0.i.i, align 8
  %memberidx.i160.i.i = getelementptr inbounds %string, ptr %354, i64 0, i32 1
  %355 = load ptr, ptr %memberidx.i160.i.i, align 8
  call void @free(ptr %355)
  call void @free(ptr %354)
  %356 = add nsw i64 %353, -1
  %357 = icmp sgt i64 %353, 0
  br i1 %357, label %while.entry.i165.i.i.preheader, label %MapIterator_string_LLVMValueRef__next.exit170.i.i

while.entry.i165.i.i.preheader:                   ; preds = %for.body20.i.i
  %358 = shl i64 %353, 3
  %uglygep526 = getelementptr i8, ptr %incdec.ptr.i163.i.i.lcssa437, i64 %358
  br label %while.entry.i165.i.i

while.entry.i165.i.i:                             ; preds = %while.entry.i165.i.i.preheader, %ifend.i169.i.i
  %359 = phi i64 [ %362, %ifend.i169.i.i ], [ %356, %while.entry.i165.i.i.preheader ]
  %360 = phi ptr [ %incdec.ptr.i163.i.i, %ifend.i169.i.i ], [ %incdec.ptr.i163.i.i.lcssa437, %while.entry.i165.i.i.preheader ]
  %incdec.ptr.i163.i.i = getelementptr inbounds ptr, ptr %360, i64 1
  %361 = load ptr, ptr %360, align 8
  %.not.i164.i.i = icmp eq ptr %361, null
  br i1 %.not.i164.i.i, label %ifend.i169.i.i, label %MapIterator_string_LLVMValueRef__next.exit170.i.i

ifend.i169.i.i:                                   ; preds = %while.entry.i165.i.i
  %362 = add nsw i64 %359, -1
  %363 = icmp sgt i64 %359, 0
  br i1 %363, label %while.entry.i165.i.i, label %MapIterator_string_LLVMValueRef__next.exit170.i.i

MapIterator_string_LLVMValueRef__next.exit170.i.i: ; preds = %ifend.i169.i.i, %while.entry.i165.i.i, %for.body20.i.i
  %364 = phi i64 [ %356, %for.body20.i.i ], [ -1, %ifend.i169.i.i ], [ %359, %while.entry.i165.i.i ]
  %incdec.ptr.i163.i.i.lcssa436 = phi ptr [ %incdec.ptr.i163.i.i.lcssa437, %for.body20.i.i ], [ %uglygep526, %ifend.i169.i.i ], [ %incdec.ptr.i163.i.i, %while.entry.i165.i.i ]
  %storemerge355 = icmp slt i64 %storemerge372432.in, 2
  br i1 %storemerge355, label %for.cond19.i.i.for.end22.i.i_crit_edge, label %for.body20.i.i

for.cond19.i.i.for.end22.i.i_crit_edge:           ; preds = %MapIterator_string_LLVMValueRef__next.exit170.i.i
  store ptr %incdec.ptr.i163.i.i.lcssa436, ptr %memberidx1.i.i137.i.i, align 8
  store i64 %364, ptr %memberidx2.i.i138.i.i, align 4
  %.pre541 = load ptr, ptr %341, align 8
  br label %for.end22.i.i

for.end22.i.i:                                    ; preds = %for.cond19.i.i.for.end22.i.i_crit_edge, %MapIterator_string_LLVMValueRef__next.exit149.i.i
  %365 = phi ptr [ %.pre541, %for.cond19.i.i.for.end22.i.i_crit_edge ], [ %343, %MapIterator_string_LLVMValueRef__next.exit149.i.i ]
  call void @free(ptr nonnull %342)
  call void @free(ptr %365)
  call void @free(ptr %341)
  %366 = load ptr, ptr %memberidx3.i.i216, align 8
  %367 = call ptr @malloc(i32 25)
  %368 = load ptr, ptr %366, align 8
  %memberidx1.i181.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %366, i64 0, i32 1
  %369 = load i64, ptr %memberidx1.i181.i.i, align 4
  %memberidx2.i182.i.i = getelementptr inbounds %Map_string_CGClassType_, ptr %366, i64 0, i32 2
  %370 = load i64, ptr %memberidx2.i182.i.i, align 4
  store i1 false, ptr %367, align 1
  %memberidx1.i.i183.i.i = getelementptr inbounds %MapIterator_string_CGClassType_, ptr %367, i64 0, i32 1
  store ptr %368, ptr %memberidx1.i.i183.i.i, align 8
  %memberidx2.i.i184.i.i = getelementptr inbounds %MapIterator_string_CGClassType_, ptr %367, i64 0, i32 2
  %memberidx3.i.i185.i.i = getelementptr inbounds %MapIterator_string_CGClassType_, ptr %367, i64 0, i32 3
  store i64 %370, ptr %memberidx3.i.i185.i.i, align 4
  %371 = add nsw i64 %369, -1
  store i64 %371, ptr %memberidx2.i.i184.i.i, align 4
  %372 = icmp sgt i64 %369, 0
  br i1 %372, label %while.entry.i175.i.i, label %MapIterator_string_CGClassType__next.exit180.i.i

while.entry.i175.i.i:                             ; preds = %for.end22.i.i, %ifend.i179.i.i
  %373 = phi i64 [ %376, %ifend.i179.i.i ], [ %371, %for.end22.i.i ]
  %374 = phi ptr [ %incdec.ptr.i173.i.i, %ifend.i179.i.i ], [ %368, %for.end22.i.i ]
  %incdec.ptr.i173.i.i = getelementptr inbounds ptr, ptr %374, i64 1
  %375 = load ptr, ptr %374, align 8
  %.not.i174.i.i = icmp eq ptr %375, null
  br i1 %.not.i174.i.i, label %ifend.i179.i.i, label %MapIterator_string_CGClassType__next.exit180.i.i.loopexit

ifend.i179.i.i:                                   ; preds = %while.entry.i175.i.i
  %376 = add nsw i64 %373, -1
  store i64 %376, ptr %memberidx2.i.i184.i.i, align 4
  %377 = icmp sgt i64 %373, 0
  br i1 %377, label %while.entry.i175.i.i, label %MapIterator_string_CGClassType__next.exit180.i.i.loopexit

MapIterator_string_CGClassType__next.exit180.i.i.loopexit: ; preds = %while.entry.i175.i.i, %ifend.i179.i.i
  %memberidx2.i.i184.i.i.promoted544 = phi i64 [ %373, %while.entry.i175.i.i ], [ %376, %ifend.i179.i.i ]
  store ptr %incdec.ptr.i173.i.i, ptr %memberidx1.i.i183.i.i, align 8
  br label %MapIterator_string_CGClassType__next.exit180.i.i

MapIterator_string_CGClassType__next.exit180.i.i: ; preds = %MapIterator_string_CGClassType__next.exit180.i.i.loopexit, %for.end22.i.i
  %memberidx2.i.i184.i.i.promoted = phi i64 [ %memberidx2.i.i184.i.i.promoted544, %MapIterator_string_CGClassType__next.exit180.i.i.loopexit ], [ %371, %for.end22.i.i ]
  %memberidx1.i.i183.i.i.promoted425 = phi ptr [ %incdec.ptr.i173.i.i, %MapIterator_string_CGClassType__next.exit180.i.i.loopexit ], [ %368, %for.end22.i.i ]
  %storemerge357421 = icmp slt i64 %370, 1
  br i1 %storemerge357421, label %for.end31.i.i, label %for.body29.i.i

for.body29.i.i:                                   ; preds = %MapIterator_string_CGClassType__next.exit180.i.i, %MapIterator_string_CGClassType__next.exit.i.i
  %378 = phi i64 [ %390, %MapIterator_string_CGClassType__next.exit.i.i ], [ %memberidx2.i.i184.i.i.promoted, %MapIterator_string_CGClassType__next.exit180.i.i ]
  %incdec.ptr.i152.i.i.lcssa427 = phi ptr [ %incdec.ptr.i152.i.i.lcssa426, %MapIterator_string_CGClassType__next.exit.i.i ], [ %memberidx1.i.i183.i.i.promoted425, %MapIterator_string_CGClassType__next.exit180.i.i ]
  %storemerge373422.in = phi i64 [ %storemerge373422, %MapIterator_string_CGClassType__next.exit.i.i ], [ %370, %MapIterator_string_CGClassType__next.exit180.i.i ]
  %storemerge373422 = add nsw i64 %storemerge373422.in, -1
  %class_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i152.i.i.lcssa427, i64 -1
  %class_entry.0.i.i = load ptr, ptr %class_entry.0.i.i.in, align 8
  %379 = load ptr, ptr %class_entry.0.i.i, align 8
  %memberidx.i159.i.i = getelementptr inbounds %string, ptr %379, i64 0, i32 1
  %380 = load ptr, ptr %memberidx.i159.i.i, align 8
  call void @free(ptr %380)
  call void @free(ptr %379)
  %memberidx34.i.i = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %class_entry.0.i.i, i64 0, i32 1
  %381 = load ptr, ptr %memberidx34.i.i, align 8
  call void @free(ptr %381)
  %382 = add nsw i64 %378, -1
  %383 = icmp sgt i64 %378, 0
  br i1 %383, label %while.entry.i154.i.i.preheader, label %MapIterator_string_CGClassType__next.exit.i.i

while.entry.i154.i.i.preheader:                   ; preds = %for.body29.i.i
  %384 = shl i64 %378, 3
  %uglygep525 = getelementptr i8, ptr %incdec.ptr.i152.i.i.lcssa427, i64 %384
  br label %while.entry.i154.i.i

while.entry.i154.i.i:                             ; preds = %while.entry.i154.i.i.preheader, %ifend.i158.i.i
  %385 = phi i64 [ %388, %ifend.i158.i.i ], [ %382, %while.entry.i154.i.i.preheader ]
  %386 = phi ptr [ %incdec.ptr.i152.i.i, %ifend.i158.i.i ], [ %incdec.ptr.i152.i.i.lcssa427, %while.entry.i154.i.i.preheader ]
  %incdec.ptr.i152.i.i = getelementptr inbounds ptr, ptr %386, i64 1
  %387 = load ptr, ptr %386, align 8
  %.not.i153.i.i = icmp eq ptr %387, null
  br i1 %.not.i153.i.i, label %ifend.i158.i.i, label %MapIterator_string_CGClassType__next.exit.i.i

ifend.i158.i.i:                                   ; preds = %while.entry.i154.i.i
  %388 = add nsw i64 %385, -1
  %389 = icmp sgt i64 %385, 0
  br i1 %389, label %while.entry.i154.i.i, label %MapIterator_string_CGClassType__next.exit.i.i

MapIterator_string_CGClassType__next.exit.i.i:    ; preds = %ifend.i158.i.i, %while.entry.i154.i.i, %for.body29.i.i
  %390 = phi i64 [ %382, %for.body29.i.i ], [ -1, %ifend.i158.i.i ], [ %385, %while.entry.i154.i.i ]
  %incdec.ptr.i152.i.i.lcssa426 = phi ptr [ %incdec.ptr.i152.i.i.lcssa427, %for.body29.i.i ], [ %uglygep525, %ifend.i158.i.i ], [ %incdec.ptr.i152.i.i, %while.entry.i154.i.i ]
  %storemerge357 = icmp slt i64 %storemerge373422.in, 2
  br i1 %storemerge357, label %for.cond28.i.i.for.end31.i.i_crit_edge, label %for.body29.i.i

for.cond28.i.i.for.end31.i.i_crit_edge:           ; preds = %MapIterator_string_CGClassType__next.exit.i.i
  store ptr %incdec.ptr.i152.i.i.lcssa426, ptr %memberidx1.i.i183.i.i, align 8
  store i64 %390, ptr %memberidx2.i.i184.i.i, align 4
  %.pre545 = load ptr, ptr %366, align 8
  br label %for.end31.i.i

for.end31.i.i:                                    ; preds = %for.cond28.i.i.for.end31.i.i_crit_edge, %MapIterator_string_CGClassType__next.exit180.i.i
  %391 = phi ptr [ %.pre545, %for.cond28.i.i.for.end31.i.i_crit_edge ], [ %368, %MapIterator_string_CGClassType__next.exit180.i.i ]
  call void @free(ptr nonnull %367)
  call void @free(ptr %391)
  call void @free(ptr %366)
  %392 = load ptr, ptr %memberidx4.i.i217, align 8
  %393 = call ptr @malloc(i32 25)
  %394 = load ptr, ptr %392, align 8
  %memberidx1.i119.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %392, i64 0, i32 1
  %395 = load i64, ptr %memberidx1.i119.i.i, align 4
  %memberidx2.i120.i.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %392, i64 0, i32 2
  %396 = load i64, ptr %memberidx2.i120.i.i, align 4
  store i1 false, ptr %393, align 1
  %memberidx1.i.i121.i.i = getelementptr inbounds %MapIterator_string_CGEnumType_, ptr %393, i64 0, i32 1
  store ptr %394, ptr %memberidx1.i.i121.i.i, align 8
  %memberidx2.i.i122.i.i = getelementptr inbounds %MapIterator_string_CGEnumType_, ptr %393, i64 0, i32 2
  %memberidx3.i.i123.i.i = getelementptr inbounds %MapIterator_string_CGEnumType_, ptr %393, i64 0, i32 3
  store i64 %396, ptr %memberidx3.i.i123.i.i, align 4
  %397 = add nsw i64 %395, -1
  store i64 %397, ptr %memberidx2.i.i122.i.i, align 4
  %398 = icmp sgt i64 %395, 0
  br i1 %398, label %while.entry.i113.i.i, label %MapIterator_string_CGEnumType__next.exit118.i.i

while.entry.i113.i.i:                             ; preds = %for.end31.i.i, %ifend.i117.i.i
  %399 = phi i64 [ %402, %ifend.i117.i.i ], [ %397, %for.end31.i.i ]
  %400 = phi ptr [ %incdec.ptr.i111.i.i, %ifend.i117.i.i ], [ %394, %for.end31.i.i ]
  %incdec.ptr.i111.i.i = getelementptr inbounds ptr, ptr %400, i64 1
  %401 = load ptr, ptr %400, align 8
  %.not.i112.i.i = icmp eq ptr %401, null
  br i1 %.not.i112.i.i, label %ifend.i117.i.i, label %MapIterator_string_CGEnumType__next.exit118.i.i.loopexit

ifend.i117.i.i:                                   ; preds = %while.entry.i113.i.i
  %402 = add nsw i64 %399, -1
  store i64 %402, ptr %memberidx2.i.i122.i.i, align 4
  %403 = icmp sgt i64 %399, 0
  br i1 %403, label %while.entry.i113.i.i, label %MapIterator_string_CGEnumType__next.exit118.i.i.loopexit

MapIterator_string_CGEnumType__next.exit118.i.i.loopexit: ; preds = %while.entry.i113.i.i, %ifend.i117.i.i
  %memberidx2.i.i122.i.i.promoted548 = phi i64 [ %399, %while.entry.i113.i.i ], [ %402, %ifend.i117.i.i ]
  store ptr %incdec.ptr.i111.i.i, ptr %memberidx1.i.i121.i.i, align 8
  br label %MapIterator_string_CGEnumType__next.exit118.i.i

MapIterator_string_CGEnumType__next.exit118.i.i:  ; preds = %MapIterator_string_CGEnumType__next.exit118.i.i.loopexit, %for.end31.i.i
  %memberidx2.i.i122.i.i.promoted = phi i64 [ %memberidx2.i.i122.i.i.promoted548, %MapIterator_string_CGEnumType__next.exit118.i.i.loopexit ], [ %397, %for.end31.i.i ]
  %memberidx1.i.i121.i.i.promoted415 = phi ptr [ %incdec.ptr.i111.i.i, %MapIterator_string_CGEnumType__next.exit118.i.i.loopexit ], [ %394, %for.end31.i.i ]
  %storemerge359411 = icmp slt i64 %396, 1
  br i1 %storemerge359411, label %CodeGen_destroy.exit.i, label %for.body39.i.i

for.body39.i.i:                                   ; preds = %MapIterator_string_CGEnumType__next.exit118.i.i, %MapIterator_string_CGEnumType__next.exit.i.i
  %404 = phi i64 [ %416, %MapIterator_string_CGEnumType__next.exit.i.i ], [ %memberidx2.i.i122.i.i.promoted, %MapIterator_string_CGEnumType__next.exit118.i.i ]
  %incdec.ptr.i86.i.i.lcssa417 = phi ptr [ %incdec.ptr.i86.i.i.lcssa416, %MapIterator_string_CGEnumType__next.exit.i.i ], [ %memberidx1.i.i121.i.i.promoted415, %MapIterator_string_CGEnumType__next.exit118.i.i ]
  %storemerge374412.in = phi i64 [ %storemerge374412, %MapIterator_string_CGEnumType__next.exit.i.i ], [ %396, %MapIterator_string_CGEnumType__next.exit118.i.i ]
  %storemerge374412 = add nsw i64 %storemerge374412.in, -1
  %enum_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i86.i.i.lcssa417, i64 -1
  %enum_entry.0.i.i = load ptr, ptr %enum_entry.0.i.i.in, align 8
  %405 = load ptr, ptr %enum_entry.0.i.i, align 8
  %memberidx.i93.i.i = getelementptr inbounds %string, ptr %405, i64 0, i32 1
  %406 = load ptr, ptr %memberidx.i93.i.i, align 8
  call void @free(ptr %406)
  call void @free(ptr %405)
  %memberidx44.i.i = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %enum_entry.0.i.i, i64 0, i32 1
  %407 = load ptr, ptr %memberidx44.i.i, align 8
  call void @free(ptr %407)
  %408 = add nsw i64 %404, -1
  %409 = icmp sgt i64 %404, 0
  br i1 %409, label %while.entry.i88.i.i.preheader, label %MapIterator_string_CGEnumType__next.exit.i.i

while.entry.i88.i.i.preheader:                    ; preds = %for.body39.i.i
  %410 = shl i64 %404, 3
  %uglygep = getelementptr i8, ptr %incdec.ptr.i86.i.i.lcssa417, i64 %410
  br label %while.entry.i88.i.i

while.entry.i88.i.i:                              ; preds = %while.entry.i88.i.i.preheader, %ifend.i92.i.i
  %411 = phi i64 [ %414, %ifend.i92.i.i ], [ %408, %while.entry.i88.i.i.preheader ]
  %412 = phi ptr [ %incdec.ptr.i86.i.i, %ifend.i92.i.i ], [ %incdec.ptr.i86.i.i.lcssa417, %while.entry.i88.i.i.preheader ]
  %incdec.ptr.i86.i.i = getelementptr inbounds ptr, ptr %412, i64 1
  %413 = load ptr, ptr %412, align 8
  %.not.i87.i.i = icmp eq ptr %413, null
  br i1 %.not.i87.i.i, label %ifend.i92.i.i, label %MapIterator_string_CGEnumType__next.exit.i.i

ifend.i92.i.i:                                    ; preds = %while.entry.i88.i.i
  %414 = add nsw i64 %411, -1
  %415 = icmp sgt i64 %411, 0
  br i1 %415, label %while.entry.i88.i.i, label %MapIterator_string_CGEnumType__next.exit.i.i

MapIterator_string_CGEnumType__next.exit.i.i:     ; preds = %ifend.i92.i.i, %while.entry.i88.i.i, %for.body39.i.i
  %416 = phi i64 [ %408, %for.body39.i.i ], [ -1, %ifend.i92.i.i ], [ %411, %while.entry.i88.i.i ]
  %incdec.ptr.i86.i.i.lcssa416 = phi ptr [ %incdec.ptr.i86.i.i.lcssa417, %for.body39.i.i ], [ %uglygep, %ifend.i92.i.i ], [ %incdec.ptr.i86.i.i, %while.entry.i88.i.i ]
  %storemerge359 = icmp slt i64 %storemerge374412.in, 2
  br i1 %storemerge359, label %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge, label %for.body39.i.i

for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge:  ; preds = %MapIterator_string_CGEnumType__next.exit.i.i
  store ptr %incdec.ptr.i86.i.i.lcssa416, ptr %memberidx1.i.i121.i.i, align 8
  store i64 %416, ptr %memberidx2.i.i122.i.i, align 4
  %.pre549 = load ptr, ptr %392, align 8
  br label %CodeGen_destroy.exit.i

CodeGen_destroy.exit.i:                           ; preds = %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge, %MapIterator_string_CGEnumType__next.exit118.i.i
  %417 = phi ptr [ %.pre549, %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge ], [ %394, %MapIterator_string_CGEnumType__next.exit118.i.i ]
  call void @free(ptr nonnull %393)
  call void @free(ptr %417)
  call void @free(ptr %392)
  %418 = load ptr, ptr %memberidx.i207, align 8
  %419 = call ptr @malloc(i32 25)
  %memberidx.i.i168.i = getelementptr inbounds %Array_Module_, ptr %418, i64 0, i32 1
  %420 = load ptr, ptr %memberidx.i.i168.i, align 8
  %memberidx1.i.i169.i = getelementptr inbounds %Array_Module_, ptr %418, i64 0, i32 2
  %421 = load i64, ptr %memberidx1.i.i169.i, align 4
  %memberidx1.i.i.i170.i = getelementptr inbounds %ArrayIterator_Module_, ptr %419, i64 0, i32 1
  %memberidx2.i.i.i171.i = getelementptr inbounds %ArrayIterator_Module_, ptr %419, i64 0, i32 3
  store ptr %420, ptr %memberidx2.i.i.i171.i, align 8
  %memberidx3.i.i.i172.i = getelementptr inbounds %ArrayIterator_Module_, ptr %419, i64 0, i32 2
  store i64 %421, ptr %memberidx3.i.i.i172.i, align 4
  store i64 1, ptr %memberidx1.i.i.i170.i, align 4
  %422 = icmp slt i64 %421, 1
  %module.0.i.i407 = load ptr, ptr %420, align 8
  store i1 %422, ptr %419, align 1
  br i1 %422, label %Program___del__.exit.i, label %for.body.i179.i

for.body.i179.i:                                  ; preds = %CodeGen_destroy.exit.i, %Module___del__.exit.i.i
  %423 = phi i64 [ %529, %Module___del__.exit.i.i ], [ 1, %CodeGen_destroy.exit.i ]
  %module.0.i.i408 = phi ptr [ %module.0.i.i, %Module___del__.exit.i.i ], [ %module.0.i.i407, %CodeGen_destroy.exit.i ]
  %memberidx.i9.i.i = getelementptr inbounds %Module, ptr %module.0.i.i408, i64 0, i32 4
  %424 = load ptr, ptr %memberidx.i9.i.i, align 8
  %425 = call ptr @malloc(i32 25)
  %memberidx.i.i.i176.i = getelementptr inbounds %Array_Function_, ptr %424, i64 0, i32 1
  %426 = load ptr, ptr %memberidx.i.i.i176.i, align 8
  %memberidx1.i.i10.i.i = getelementptr inbounds %Array_Function_, ptr %424, i64 0, i32 2
  %427 = load i64, ptr %memberidx1.i.i10.i.i, align 4
  %428 = icmp slt i64 %427, 1
  br i1 %428, label %for.end.i.i.i, label %for.body.i.i181.i

for.body.i.i181.i:                                ; preds = %for.body.i179.i, %for.body.i.i181.i
  %429 = phi i64 [ %430, %for.body.i.i181.i ], [ 1, %for.body.i179.i ]
  %func.0.i.i.i376.in = phi ptr [ %ptridx.i92.i.i.i, %for.body.i.i181.i ], [ %426, %for.body.i179.i ]
  %func.0.i.i.i376 = load ptr, ptr %func.0.i.i.i376.in, align 8
  call void @free(ptr %func.0.i.i.i376)
  %430 = add nuw nsw i64 %429, 1
  %ptridx.i92.i.i.i = getelementptr inbounds ptr, ptr %426, i64 %429
  %.not556 = icmp slt i64 %429, %427
  br i1 %.not556, label %for.body.i.i181.i, label %for.end.i.i.i

for.end.i.i.i:                                    ; preds = %for.body.i.i181.i, %for.body.i179.i
  call void @free(ptr nonnull %425)
  %memberidx8.i.i182.i = getelementptr inbounds %Module, ptr %module.0.i.i408, i64 0, i32 1
  %431 = load ptr, ptr %memberidx8.i.i182.i, align 8
  %432 = call ptr @malloc(i32 25)
  %memberidx.i95.i.i.i = getelementptr inbounds %Array_Var_, ptr %431, i64 0, i32 1
  %433 = load ptr, ptr %memberidx.i95.i.i.i, align 8
  %memberidx1.i96.i.i.i = getelementptr inbounds %Array_Var_, ptr %431, i64 0, i32 2
  %434 = load i64, ptr %memberidx1.i96.i.i.i, align 4
  %435 = icmp slt i64 %434, 1
  br i1 %435, label %for.end12.i.i.i, label %for.body10.i.i.i

for.body10.i.i.i:                                 ; preds = %for.end.i.i.i, %for.body10.i.i.i
  %436 = phi i64 [ %437, %for.body10.i.i.i ], [ 1, %for.end.i.i.i ]
  %var.0.i.i.i378.in = phi ptr [ %ptridx.i107.i.i.i, %for.body10.i.i.i ], [ %433, %for.end.i.i.i ]
  %var.0.i.i.i378 = load ptr, ptr %var.0.i.i.i378.in, align 8
  call void @free(ptr %var.0.i.i.i378)
  %437 = add nuw nsw i64 %436, 1
  %ptridx.i107.i.i.i = getelementptr inbounds ptr, ptr %433, i64 %436
  %.not557 = icmp slt i64 %436, %434
  br i1 %.not557, label %for.body10.i.i.i, label %for.end12.i.i.i

for.end12.i.i.i:                                  ; preds = %for.body10.i.i.i, %for.end.i.i.i
  call void @free(ptr nonnull %432)
  %memberidx15.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i408, i64 0, i32 3
  %438 = load ptr, ptr %memberidx15.i.i.i, align 8
  %439 = call ptr @malloc(i32 25)
  %memberidx.i110.i.i.i = getelementptr inbounds %Array_Class_, ptr %438, i64 0, i32 1
  %440 = load ptr, ptr %memberidx.i110.i.i.i, align 8
  %memberidx1.i111.i.i.i = getelementptr inbounds %Array_Class_, ptr %438, i64 0, i32 2
  %441 = load i64, ptr %memberidx1.i111.i.i.i, align 4
  %memberidx1.i.i112.i.i.i = getelementptr inbounds %ArrayIterator_Class_, ptr %439, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i112.i.i.i, align 4
  %memberidx2.i.i113.i.i.i = getelementptr inbounds %ArrayIterator_Class_, ptr %439, i64 0, i32 3
  store ptr %440, ptr %memberidx2.i.i113.i.i.i, align 8
  %442 = icmp slt i64 %441, 1
  br i1 %442, label %for.end19.i.i.i, label %for.body17.i.i.i

for.body17.i.i.i:                                 ; preds = %for.end12.i.i.i, %Class___del__.exit.i.i.i
  %443 = phi i64 [ %466, %Class___del__.exit.i.i.i ], [ 1, %for.end12.i.i.i ]
  %mod_class.0.i.i.i390.in = phi ptr [ %ptridx.i126.i.i.i, %Class___del__.exit.i.i.i ], [ %440, %for.end12.i.i.i ]
  %mod_class.0.i.i.i390 = load ptr, ptr %mod_class.0.i.i.i390.in, align 8
  %444 = load ptr, ptr %mod_class.0.i.i.i390, align 8
  call void @free(ptr %444)
  %memberidx2.i120.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i390, i64 0, i32 1
  %445 = load ptr, ptr %memberidx2.i120.i.i.i, align 8
  %memberidx.i.i.i.i183.i = getelementptr inbounds %string, ptr %445, i64 0, i32 1
  %446 = load ptr, ptr %memberidx.i.i.i.i183.i, align 8
  call void @free(ptr %446)
  call void @free(ptr %445)
  %memberidx3.i.i12.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i390, i64 0, i32 2
  %447 = load ptr, ptr %memberidx3.i.i12.i.i, align 8
  %.not.i.i.i.i = icmp eq ptr %447, null
  br i1 %.not.i.i.i.i, label %for.entry.i.i.i.i, label %if.entry.i.i.i.i

if.entry.i.i.i.i:                                 ; preds = %for.body17.i.i.i
  call void @free(ptr nonnull %447)
  br label %for.entry.i.i.i.i

for.entry.i.i.i.i:                                ; preds = %if.entry.i.i.i.i, %for.body17.i.i.i
  %memberidx5.i121.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i390, i64 0, i32 4
  %448 = load ptr, ptr %memberidx5.i121.i.i.i, align 8
  %449 = call ptr @malloc(i32 25)
  %memberidx.i29.i.i.i.i = getelementptr inbounds %Array_ClassField_, ptr %448, i64 0, i32 1
  %450 = load ptr, ptr %memberidx.i29.i.i.i.i, align 8
  %memberidx1.i.i122.i.i.i = getelementptr inbounds %Array_ClassField_, ptr %448, i64 0, i32 2
  %451 = load i64, ptr %memberidx1.i.i122.i.i.i, align 4
  %452 = icmp slt i64 %451, 1
  br i1 %452, label %for.end.i.i.i.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.entry.i.i.i.i, %for.body.i.i.i.i
  %453 = phi i64 [ %454, %for.body.i.i.i.i ], [ 1, %for.entry.i.i.i.i ]
  %field.0.i.i.i.i382.in = phi ptr [ %ptridx.i33.i.i.i.i, %for.body.i.i.i.i ], [ %450, %for.entry.i.i.i.i ]
  %field.0.i.i.i.i382 = load ptr, ptr %field.0.i.i.i.i382.in, align 8
  call void @free(ptr %field.0.i.i.i.i382)
  %454 = add nuw nsw i64 %453, 1
  %ptridx.i33.i.i.i.i = getelementptr inbounds ptr, ptr %450, i64 %453
  %.not558 = icmp slt i64 %453, %451
  br i1 %.not558, label %for.body.i.i.i.i, label %for.end.i.i.i.i

for.end.i.i.i.i:                                  ; preds = %for.body.i.i.i.i, %for.entry.i.i.i.i
  call void @free(ptr nonnull %449)
  %memberidx8.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i390, i64 0, i32 5
  %455 = load ptr, ptr %memberidx8.i.i.i.i, align 8
  %456 = call ptr @malloc(i32 25)
  %memberidx.i35.i.i.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %455, i64 0, i32 1
  %457 = load ptr, ptr %memberidx.i35.i.i.i.i, align 8
  %memberidx1.i36.i.i.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %455, i64 0, i32 2
  %458 = load i64, ptr %memberidx1.i36.i.i.i.i, align 4
  %459 = icmp slt i64 %458, 1
  br i1 %459, label %Class___del__.exit.i.i.i, label %for.body10.i.i.i.i

for.body10.i.i.i.i:                               ; preds = %for.end.i.i.i.i, %for.body10.i.i.i.i
  %460 = phi i64 [ %461, %for.body10.i.i.i.i ], [ 1, %for.end.i.i.i.i ]
  %method.0.i.i.i.i386.in = phi ptr [ %ptridx.i46.i.i.i.i, %for.body10.i.i.i.i ], [ %457, %for.end.i.i.i.i ]
  %method.0.i.i.i.i386 = load ptr, ptr %method.0.i.i.i.i386.in, align 8
  call void @free(ptr %method.0.i.i.i.i386)
  %461 = add nuw nsw i64 %460, 1
  %ptridx.i46.i.i.i.i = getelementptr inbounds ptr, ptr %457, i64 %460
  %.not559 = icmp slt i64 %460, %458
  br i1 %.not559, label %for.body10.i.i.i.i, label %Class___del__.exit.i.i.i

Class___del__.exit.i.i.i:                         ; preds = %for.body10.i.i.i.i, %for.end.i.i.i.i
  call void @free(ptr nonnull %456)
  %memberidx14.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i390, i64 0, i32 6
  %462 = load ptr, ptr %memberidx14.i.i.i.i, align 8
  %463 = load ptr, ptr %462, align 8
  call void @free(ptr %463)
  call void @free(ptr %462)
  %memberidx15.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i390, i64 0, i32 7
  %464 = load ptr, ptr %memberidx15.i.i.i.i, align 8
  %465 = load ptr, ptr %464, align 8
  call void @free(ptr %465)
  call void @free(ptr %464)
  call void @free(ptr %mod_class.0.i.i.i390)
  %466 = add nuw nsw i64 %443, 1
  store i64 %466, ptr %memberidx1.i.i112.i.i.i, align 4
  %ptridx.i126.i.i.i = getelementptr inbounds ptr, ptr %440, i64 %443
  %.not560 = icmp slt i64 %443, %441
  br i1 %.not560, label %for.body17.i.i.i, label %for.end19.i.i.i

for.end19.i.i.i:                                  ; preds = %Class___del__.exit.i.i.i, %for.end12.i.i.i
  call void @free(ptr nonnull %439)
  %memberidx22.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i408, i64 0, i32 6
  %467 = load ptr, ptr %memberidx22.i.i.i, align 8
  %468 = call ptr @malloc(i32 25)
  %memberidx.i128.i.i.i = getelementptr inbounds %Array_Enum_, ptr %467, i64 0, i32 1
  %469 = load ptr, ptr %memberidx.i128.i.i.i, align 8
  %memberidx1.i129.i.i.i = getelementptr inbounds %Array_Enum_, ptr %467, i64 0, i32 2
  %470 = load i64, ptr %memberidx1.i129.i.i.i, align 4
  %memberidx1.i.i130.i.i.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %468, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i130.i.i.i, align 4
  %memberidx2.i.i131.i.i.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %468, i64 0, i32 3
  store ptr %469, ptr %memberidx2.i.i131.i.i.i, align 8
  %471 = icmp slt i64 %470, 1
  br i1 %471, label %for.end26.i.i.i, label %for.body24.i.i.i

for.body24.i.i.i:                                 ; preds = %for.end19.i.i.i, %Enum___del__.exit.i.i.i
  %472 = phi i64 [ %491, %Enum___del__.exit.i.i.i ], [ 1, %for.end19.i.i.i ]
  %mod_enum.0.i.i.i397.in = phi ptr [ %ptridx.i155.i.i.i, %Enum___del__.exit.i.i.i ], [ %469, %for.end19.i.i.i ]
  %mod_enum.0.i.i.i397 = load ptr, ptr %mod_enum.0.i.i.i397.in, align 8
  %473 = load ptr, ptr %mod_enum.0.i.i.i397, align 8
  call void @free(ptr %473)
  %memberidx1.i137.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i397, i64 0, i32 1
  %474 = load ptr, ptr %memberidx1.i137.i.i.i, align 8
  %memberidx.i.i138.i.i.i = getelementptr inbounds %string, ptr %474, i64 0, i32 1
  %475 = load ptr, ptr %memberidx.i.i138.i.i.i, align 8
  call void @free(ptr %475)
  call void @free(ptr %474)
  %memberidx2.i139.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i397, i64 0, i32 2
  %476 = load ptr, ptr %memberidx2.i139.i.i.i, align 8
  %477 = call ptr @malloc(i32 25)
  %memberidx.i13.i.i.i.i = getelementptr inbounds %Array_EnumField_, ptr %476, i64 0, i32 1
  %478 = load ptr, ptr %memberidx.i13.i.i.i.i, align 8
  %memberidx1.i.i140.i.i.i = getelementptr inbounds %Array_EnumField_, ptr %476, i64 0, i32 2
  %479 = load i64, ptr %memberidx1.i.i140.i.i.i, align 4
  %480 = icmp slt i64 %479, 1
  br i1 %480, label %Enum___del__.exit.i.i.i, label %for.body.i150.i.i.i

for.body.i150.i.i.i:                              ; preds = %for.body24.i.i.i, %for.body.i150.i.i.i
  %481 = phi i64 [ %486, %for.body.i150.i.i.i ], [ 1, %for.body24.i.i.i ]
  %field.0.i148.i.i.i393.in = phi ptr [ %ptridx.i19.i.i.i.i, %for.body.i150.i.i.i ], [ %478, %for.body24.i.i.i ]
  %field.0.i148.i.i.i393 = load ptr, ptr %field.0.i148.i.i.i393.in, align 8
  %482 = load ptr, ptr %field.0.i148.i.i.i393, align 8
  call void @free(ptr %482)
  %memberidx1.i15.i.i.i.i = getelementptr inbounds %EnumField, ptr %field.0.i148.i.i.i393, i64 0, i32 1
  %483 = load ptr, ptr %memberidx1.i15.i.i.i.i, align 8
  %memberidx.i.i.i.i.i.i = getelementptr inbounds %string, ptr %483, i64 0, i32 1
  %484 = load ptr, ptr %memberidx.i.i.i.i.i.i, align 8
  call void @free(ptr %484)
  call void @free(ptr %483)
  %memberidx2.i16.i.i.i.i = getelementptr inbounds %EnumField, ptr %field.0.i148.i.i.i393, i64 0, i32 2
  %485 = load ptr, ptr %memberidx2.i16.i.i.i.i, align 8
  call void @free(ptr %485)
  call void @free(ptr %field.0.i148.i.i.i393)
  %486 = add nuw nsw i64 %481, 1
  %ptridx.i19.i.i.i.i = getelementptr inbounds ptr, ptr %478, i64 %481
  %.not561 = icmp slt i64 %481, %479
  br i1 %.not561, label %for.body.i150.i.i.i, label %Enum___del__.exit.i.i.i

Enum___del__.exit.i.i.i:                          ; preds = %for.body.i150.i.i.i, %for.body24.i.i.i
  call void @free(ptr nonnull %477)
  %487 = load ptr, ptr %memberidx2.i139.i.i.i, align 8
  %memberidx.i21.i.i.i.i = getelementptr inbounds %Array_EnumField_, ptr %487, i64 0, i32 1
  %488 = load ptr, ptr %memberidx.i21.i.i.i.i, align 8
  call void @free(ptr %488)
  call void @free(ptr %487)
  %memberidx5.i151.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i397, i64 0, i32 3
  %489 = load ptr, ptr %memberidx5.i151.i.i.i, align 8
  %490 = load ptr, ptr %489, align 8
  call void @free(ptr %490)
  call void @free(ptr %489)
  call void @free(ptr %mod_enum.0.i.i.i397)
  %491 = add nuw nsw i64 %472, 1
  store i64 %491, ptr %memberidx1.i.i130.i.i.i, align 4
  %ptridx.i155.i.i.i = getelementptr inbounds ptr, ptr %469, i64 %472
  %.not562 = icmp slt i64 %472, %470
  br i1 %.not562, label %for.body24.i.i.i, label %for.end26.i.i.i

for.end26.i.i.i:                                  ; preds = %Enum___del__.exit.i.i.i, %for.end19.i.i.i
  call void @free(ptr nonnull %468)
  %memberidx29.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i408, i64 0, i32 8
  %492 = load ptr, ptr %memberidx29.i.i.i, align 8
  %493 = call ptr @malloc(i32 25)
  %memberidx.i157.i.i.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %492, i64 0, i32 1
  %494 = load ptr, ptr %memberidx.i157.i.i.i, align 8
  %memberidx1.i158.i.i.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %492, i64 0, i32 2
  %495 = load i64, ptr %memberidx1.i158.i.i.i, align 4
  %496 = icmp slt i64 %495, 1
  br i1 %496, label %for.end33.i.i.i, label %for.body31.i.i.i

for.body31.i.i.i:                                 ; preds = %for.end26.i.i.i, %for.body31.i.i.i
  %497 = phi i64 [ %498, %for.body31.i.i.i ], [ 1, %for.end26.i.i.i ]
  %global_const.0.i.i.i400.in = phi ptr [ %ptridx.i168.i.i.i, %for.body31.i.i.i ], [ %494, %for.end26.i.i.i ]
  %global_const.0.i.i.i400 = load ptr, ptr %global_const.0.i.i.i400.in, align 8
  call void @free(ptr %global_const.0.i.i.i400)
  %498 = add nuw nsw i64 %497, 1
  %ptridx.i168.i.i.i = getelementptr inbounds ptr, ptr %494, i64 %497
  %.not563 = icmp slt i64 %497, %495
  br i1 %.not563, label %for.body31.i.i.i, label %for.end33.i.i.i

for.end33.i.i.i:                                  ; preds = %for.body31.i.i.i, %for.end26.i.i.i
  call void @free(ptr nonnull %493)
  %memberidx36.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i408, i64 0, i32 9
  %499 = load ptr, ptr %memberidx36.i.i.i, align 8
  %500 = call ptr @malloc(i32 25)
  %memberidx.i170.i.i.i = getelementptr inbounds %Array_VarDeclaration_, ptr %499, i64 0, i32 1
  %501 = load ptr, ptr %memberidx.i170.i.i.i, align 8
  %memberidx1.i171.i.i.i = getelementptr inbounds %Array_VarDeclaration_, ptr %499, i64 0, i32 2
  %502 = load i64, ptr %memberidx1.i171.i.i.i, align 4
  %503 = icmp slt i64 %502, 1
  br i1 %503, label %Module___del__.exit.i.i, label %for.body38.i.i.i

for.body38.i.i.i:                                 ; preds = %for.end33.i.i.i, %for.body38.i.i.i
  %504 = phi i64 [ %505, %for.body38.i.i.i ], [ 1, %for.end33.i.i.i ]
  %global_var.0.i.i.i404.in = phi ptr [ %ptridx.i181.i.i.i, %for.body38.i.i.i ], [ %501, %for.end33.i.i.i ]
  %global_var.0.i.i.i404 = load ptr, ptr %global_var.0.i.i.i404.in, align 8
  call void @free(ptr %global_var.0.i.i.i404)
  %505 = add nuw nsw i64 %504, 1
  %ptridx.i181.i.i.i = getelementptr inbounds ptr, ptr %501, i64 %504
  %.not564 = icmp slt i64 %504, %502
  br i1 %.not564, label %for.body38.i.i.i, label %Module___del__.exit.i.i

Module___del__.exit.i.i:                          ; preds = %for.body38.i.i.i, %for.end33.i.i.i
  call void @free(ptr nonnull %500)
  %memberidx42.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i408, i64 0, i32 7
  %506 = load ptr, ptr %memberidx42.i.i.i, align 8
  %memberidx43.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i408, i64 0, i32 5
  %507 = load ptr, ptr %memberidx43.i.i.i, align 8
  %memberidx44.i.i.i = getelementptr inbounds %ScopeId, ptr %507, i64 0, i32 1
  %508 = load i64, ptr %memberidx44.i.i.i, align 4
  %memberidx.i183.i.i.i = getelementptr inbounds %Array_Scope_, ptr %506, i64 0, i32 1
  %509 = load ptr, ptr %memberidx.i183.i.i.i, align 8
  %ptridx.i184.i.i.i = getelementptr inbounds ptr, ptr %509, i64 %508
  %510 = load ptr, ptr %ptridx.i184.i.i.i, align 8
  call fastcc void @Scope___del__(ptr %510)
  call void @free(ptr %510)
  %511 = load ptr, ptr %module.0.i.i408, align 8
  %memberidx.i185.i.i.i = getelementptr inbounds %string, ptr %511, i64 0, i32 1
  %512 = load ptr, ptr %memberidx.i185.i.i.i, align 8
  call void @free(ptr %512)
  call void @free(ptr %511)
  %513 = load ptr, ptr %memberidx.i9.i.i, align 8
  %memberidx.i186.i.i.i = getelementptr inbounds %Array_Function_, ptr %513, i64 0, i32 1
  %514 = load ptr, ptr %memberidx.i186.i.i.i, align 8
  call void @free(ptr %514)
  call void @free(ptr %513)
  %515 = load ptr, ptr %memberidx8.i.i182.i, align 8
  %memberidx.i187.i.i.i = getelementptr inbounds %Array_Var_, ptr %515, i64 0, i32 1
  %516 = load ptr, ptr %memberidx.i187.i.i.i, align 8
  call void @free(ptr %516)
  call void @free(ptr %515)
  %517 = load ptr, ptr %memberidx15.i.i.i, align 8
  %memberidx.i188.i.i.i = getelementptr inbounds %Array_Class_, ptr %517, i64 0, i32 1
  %518 = load ptr, ptr %memberidx.i188.i.i.i, align 8
  call void @free(ptr %518)
  call void @free(ptr %517)
  %519 = load ptr, ptr %memberidx22.i.i.i, align 8
  %memberidx.i119.i.i.i = getelementptr inbounds %Array_Enum_, ptr %519, i64 0, i32 1
  %520 = load ptr, ptr %memberidx.i119.i.i.i, align 8
  call void @free(ptr %520)
  call void @free(ptr %519)
  %521 = load ptr, ptr %memberidx42.i.i.i, align 8
  %memberidx.i109.i.i.i = getelementptr inbounds %Array_Scope_, ptr %521, i64 0, i32 1
  %522 = load ptr, ptr %memberidx.i109.i.i.i, align 8
  call void @free(ptr %522)
  call void @free(ptr %521)
  %523 = load ptr, ptr %memberidx29.i.i.i, align 8
  %memberidx.i104.i.i.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %523, i64 0, i32 1
  %524 = load ptr, ptr %memberidx.i104.i.i.i, align 8
  call void @free(ptr %524)
  call void @free(ptr %523)
  %525 = load ptr, ptr %memberidx36.i.i.i, align 8
  %memberidx.i94.i.i.i = getelementptr inbounds %Array_VarDeclaration_, ptr %525, i64 0, i32 1
  %526 = load ptr, ptr %memberidx.i94.i.i.i, align 8
  call void @free(ptr %526)
  call void @free(ptr %525)
  %memberidx53.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i408, i64 0, i32 2
  %527 = load ptr, ptr %memberidx53.i.i.i, align 8
  %memberidx.i89.i.i.i = getelementptr inbounds %Array_Const_, ptr %527, i64 0, i32 1
  %528 = load ptr, ptr %memberidx.i89.i.i.i, align 8
  call void @free(ptr %528)
  call void @free(ptr %527)
  call void @free(ptr %module.0.i.i408)
  %529 = add nuw nsw i64 %423, 1
  store i64 %529, ptr %memberidx1.i.i.i170.i, align 4
  %ptridx.i15.i.i = getelementptr inbounds ptr, ptr %420, i64 %423
  %530 = icmp sge i64 %423, %421
  %module.0.i.i = load ptr, ptr %ptridx.i15.i.i, align 8
  store i1 %530, ptr %419, align 1
  br i1 %530, label %Program___del__.exit.i, label %for.body.i179.i

Program___del__.exit.i:                           ; preds = %Module___del__.exit.i.i, %CodeGen_destroy.exit.i
  call void @free(ptr nonnull %419)
  %531 = load ptr, ptr %memberidx.i207, align 8
  %memberidx.i8.i.i = getelementptr inbounds %Array_Module_, ptr %531, i64 0, i32 1
  %532 = load ptr, ptr %memberidx.i8.i.i, align 8
  call void @free(ptr %532)
  call void @free(ptr %531)
  call void @free(ptr %common.ret.op.i)
  %533 = call ptr @malloc(i32 32)
  %534 = load ptr, ptr %4, align 8
  store ptr @VTableGeneratedModule, ptr %533, align 8
  %memberidx.i79.i = getelementptr inbounds %GeneratedModule, ptr %533, i64 0, i32 1
  store ptr %534, ptr %memberidx.i79.i, align 8
  %memberidx1.i.i224 = getelementptr inbounds %GeneratedModule, ptr %533, i64 0, i32 2
  store ptr null, ptr %memberidx1.i.i224, align 8
  %535 = call i1 @LLVMVerifyModule(ptr %534, i64 1, ptr nonnull %memberidx1.i.i224)
  br i1 %535, label %if.entry.i.i230, label %CodeGen_codegen.exit

if.entry.i.i230:                                  ; preds = %Program___del__.exit.i
  %536 = load ptr, ptr %533, align 8
  %memberidx5.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %536, i64 0, i32 4
  %537 = load ptr, ptr %memberidx5.i.i, align 8
  %538 = call ptr @malloc(i32 8)
  store i64 7812670522611888741, ptr %538, align 8
  %539 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %539, align 8
  %memberidx.i.i.i.i225 = getelementptr inbounds %string, ptr %539, i64 0, i32 1
  store ptr %538, ptr %memberidx.i.i.i.i225, align 8
  %memberidx1.i.i.i.i226 = getelementptr inbounds %string, ptr %539, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i.i226, align 4
  %memberidx2.i.i.i.i227 = getelementptr inbounds %string, ptr %539, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i.i.i227, align 4
  call void %537(ptr nonnull %533, ptr nonnull %539)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %540 = load ptr, ptr %memberidx1.i.i224, align 8
  %541 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %540)
  %542 = trunc i64 %541 to i32
  %543 = call ptr @malloc(i32 %542)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %543, ptr align 8 %540, i64 %541, i1 false)
  %544 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %544, align 8
  %memberidx.i.i15.i.i = getelementptr inbounds %string, ptr %544, i64 0, i32 1
  store ptr %543, ptr %memberidx.i.i15.i.i, align 8
  %memberidx1.i.i16.i.i = getelementptr inbounds %string, ptr %544, i64 0, i32 2
  store i64 %541, ptr %memberidx1.i.i16.i.i, align 4
  %memberidx2.i.i17.i.i = getelementptr inbounds %string, ptr %544, i64 0, i32 3
  store i64 %541, ptr %memberidx2.i.i17.i.i, align 4
  %545 = load ptr, ptr %memberidx1.i.i224, align 8
  call void @LLVMDisposeMessage(ptr %545)
  %546 = load ptr, ptr %544, align 8
  %memberidx2.i.i.i229 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %546, i64 0, i32 5
  %547 = load ptr, ptr %memberidx2.i.i.i229, align 8
  %548 = call ptr %547(ptr nonnull %544)
  %549 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @20, ptr %548)
  %550 = load ptr, ptr %3, align 8
  %551 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %551, align 8
  %memberidx.i.i12.i.i = getelementptr inbounds %string, ptr %551, i64 0, i32 1
  store ptr %550, ptr %memberidx.i.i12.i.i, align 8
  %memberidx1.i.i13.i.i = getelementptr inbounds %string, ptr %551, i64 0, i32 2
  store i64 %549, ptr %memberidx1.i.i13.i.i, align 4
  %memberidx2.i.i14.i.i = getelementptr inbounds %string, ptr %551, i64 0, i32 3
  store i64 %549, ptr %memberidx2.i.i14.i.i, align 4
  call void @free(ptr %548)
  %552 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %552, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %553 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %553, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %string, ptr %553, i64 0, i32 1
  store ptr %552, ptr %memberidx.i.i.i.i.i, align 8
  %memberidx1.i.i.i.i.i = getelementptr inbounds %string, ptr %553, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %string, ptr %553, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i.i.i, align 4
  %554 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %555 = call ptr %554(ptr nonnull %553)
  %556 = load i64, ptr %memberidx1.i.i.i.i.i, align 4
  call void @write(i64 1, ptr %555, i64 %556)
  %557 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  call void @free(ptr %557)
  call void @free(ptr %553)
  %558 = load ptr, ptr %551, align 8
  %memberidx.i.i.i18.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %558, i64 0, i32 3
  %559 = load ptr, ptr %memberidx.i.i.i18.i.i, align 8
  %560 = call ptr %559(ptr nonnull %551)
  %561 = load i64, ptr %memberidx1.i.i13.i.i, align 4
  call void @write(i64 1, ptr %560, i64 %561)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %562 = load ptr, ptr %memberidx.i.i12.i.i, align 8
  call void @free(ptr %562)
  call void @free(ptr %551)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %CodeGen_codegen.exit

CodeGen_codegen.exit:                             ; preds = %Program___del__.exit.i, %if.entry.i.i230
  call void @LLVM_InitializeAllTargetInfos()
  call void @LLVM_InitializeAllTargets()
  call void @LLVM_InitializeAllTargetMCs()
  call void @LLVM_InitializeAllAsmParsers()
  call void @LLVM_InitializeAllAsmPrinters()
  call void @llvm.lifetime.end.p0(i64 81, ptr nonnull %4)
  %563 = load ptr, ptr %533, align 8
  %564 = load ptr, ptr %563, align 8
  %565 = call ptr @malloc(i32 2)
  store i16 20269, ptr %565, align 8
  %566 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %566, align 8
  %memberidx.i.i231 = getelementptr inbounds %string, ptr %566, i64 0, i32 1
  store ptr %565, ptr %memberidx.i.i231, align 8
  %memberidx1.i.i232 = getelementptr inbounds %string, ptr %566, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i232, align 4
  %memberidx2.i.i233 = getelementptr inbounds %string, ptr %566, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i233, align 4
  %567 = call ptr @malloc(i32 1)
  store i8 49, ptr %567, align 8
  %568 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %568, align 8
  %memberidx.i.i234 = getelementptr inbounds %string, ptr %568, i64 0, i32 1
  store ptr %567, ptr %memberidx.i.i234, align 8
  %memberidx1.i.i235 = getelementptr inbounds %string, ptr %568, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i235, align 4
  %memberidx2.i.i236 = getelementptr inbounds %string, ptr %568, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i236, align 4
  %569 = call fastcc ptr @flag_value_or(ptr nonnull %8, ptr nonnull %566, ptr nonnull %568)
  %570 = load ptr, ptr %569, align 8
  %memberidx35 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %570, i64 0, i32 5
  %571 = load ptr, ptr %memberidx35, align 8
  %572 = call ptr %571(ptr nonnull %569)
  %573 = call i64 @atol(ptr nocapture %572)
  tail call void @free(ptr %572)
  call void %564(ptr nonnull %533, i64 %573)
  %574 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %574, ptr noundef nonnull align 8 dereferenceable(6) @270, i64 6, i1 false)
  %575 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %575, align 8
  %memberidx.i.i237 = getelementptr inbounds %string, ptr %575, i64 0, i32 1
  store ptr %574, ptr %memberidx.i.i237, align 8
  %memberidx1.i.i238 = getelementptr inbounds %string, ptr %575, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i238, align 4
  %memberidx2.i.i239 = getelementptr inbounds %string, ptr %575, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i239, align 4
  %576 = call fastcc ptr @flag_value_or(ptr nonnull %8, ptr nonnull %575, ptr null)
  %577 = call ptr @malloc(i32 2)
  store i16 28461, ptr %577, align 8
  %578 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %578, align 8
  %memberidx.i.i240 = getelementptr inbounds %string, ptr %578, i64 0, i32 1
  store ptr %577, ptr %memberidx.i.i240, align 8
  %memberidx1.i.i241 = getelementptr inbounds %string, ptr %578, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i241, align 4
  %memberidx2.i.i242 = getelementptr inbounds %string, ptr %578, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i242, align 4
  %579 = call fastcc ptr @flag_value_or(ptr nonnull %8, ptr nonnull %578, ptr null)
  %580 = call ptr @malloc(i32 2)
  store i16 27693, ptr %580, align 8
  %581 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %581, align 8
  %memberidx.i.i243 = getelementptr inbounds %string, ptr %581, i64 0, i32 1
  store ptr %580, ptr %memberidx.i.i243, align 8
  %memberidx1.i.i244 = getelementptr inbounds %string, ptr %581, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i244, align 4
  %memberidx2.i.i245 = getelementptr inbounds %string, ptr %581, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i245, align 4
  %582 = call fastcc ptr @flag_value_or(ptr nonnull %8, ptr nonnull %581, ptr null)
  %583 = load ptr, ptr %533, align 8
  %memberidx36 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %583, i64 0, i32 2
  %584 = load ptr, ptr %memberidx36, align 8
  %585 = call ptr @malloc(i32 8)
  store i64 8387223622006353197, ptr %585, align 8
  %586 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %586, align 8
  %memberidx.i.i246 = getelementptr inbounds %string, ptr %586, i64 0, i32 1
  store ptr %585, ptr %memberidx.i.i246, align 8
  %memberidx1.i.i247 = getelementptr inbounds %string, ptr %586, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i247, align 4
  %memberidx2.i.i248 = getelementptr inbounds %string, ptr %586, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i248, align 4
  %587 = call ptr @malloc(i32 0)
  %588 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %588, align 8
  %memberidx.i.i249 = getelementptr inbounds %string, ptr %588, i64 0, i32 1
  store ptr %587, ptr %memberidx.i.i249, align 8
  %memberidx1.i.i250 = getelementptr inbounds %string, ptr %588, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i250, i8 0, i64 16, i1 false)
  %589 = call fastcc ptr @flag_value_or(ptr nonnull %8, ptr nonnull %586, ptr nonnull %588)
  call void %584(ptr nonnull %533, ptr %589)
  %.not = icmp eq ptr %576, null
  br i1 %.not, label %else38, label %if.entry37

if.entry37:                                       ; preds = %CodeGen_codegen.exit
  %590 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %590, ptr noundef nonnull align 8 dereferenceable(3) @271, i64 3, i1 false)
  %591 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %591, align 8
  %memberidx.i.i252 = getelementptr inbounds %string, ptr %591, i64 0, i32 1
  store ptr %590, ptr %memberidx.i.i252, align 8
  %memberidx1.i.i253 = getelementptr inbounds %string, ptr %591, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i253, align 4
  %memberidx2.i.i254 = getelementptr inbounds %string, ptr %591, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i254, align 4
  %memberidx.i255 = getelementptr inbounds %string, ptr %576, i64 0, i32 2
  %592 = load i64, ptr %memberidx.i255, align 4
  %.not.i = icmp eq i64 %592, 3
  br i1 %.not.i, label %ifend.i260, label %else41

ifend.i260:                                       ; preds = %if.entry37
  %memberidx2.i258 = getelementptr inbounds %string, ptr %576, i64 0, i32 1
  %593 = load ptr, ptr %memberidx2.i258, align 8
  %594 = call i64 @memcmp(ptr %593, ptr nonnull %590, i64 3)
  %595 = icmp eq i64 %594, 0
  br i1 %595, label %if.entry40, label %else41

else38:                                           ; preds = %CodeGen_codegen.exit
  %596 = load ptr, ptr %533, align 8
  %memberidx84 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %596, i64 0, i32 1
  %597 = load ptr, ptr %memberidx84, align 8
  %598 = call i64 %597(ptr nonnull %533)
  br label %ifend39

ifend39:                                          ; preds = %else69, %end82, %ifend.i325, %end74, %end66, %end58, %end46, %else38
  %code.0 = phi i64 [ 0, %end46 ], [ 0, %end58 ], [ 0, %end66 ], [ 0, %end74 ], [ 0, %end82 ], [ 0, %ifend.i325 ], [ %598, %else38 ], [ 0, %else69 ]
  %599 = load ptr, ptr %memberidx2.i.i, align 8
  call void @free(ptr %599)
  tail call void @free(ptr %8)
  tail call void @free(ptr %174)
  br label %common.ret

if.entry40:                                       ; preds = %ifend.i260
  %600 = call ptr @malloc(i32 13)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %600, ptr noundef nonnull align 8 dereferenceable(13) @272, i64 13, i1 false)
  %601 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %601, align 8
  %memberidx.i.i262 = getelementptr inbounds %string, ptr %601, i64 0, i32 1
  store ptr %600, ptr %memberidx.i.i262, align 8
  %memberidx1.i.i263 = getelementptr inbounds %string, ptr %601, i64 0, i32 2
  store i64 13, ptr %memberidx1.i.i263, align 4
  %memberidx2.i.i264 = getelementptr inbounds %string, ptr %601, i64 0, i32 3
  store i64 13, ptr %memberidx2.i.i264, align 4
  %602 = load ptr, ptr %533, align 8
  %memberidx43 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %602, i64 0, i32 3
  %603 = load ptr, ptr %memberidx43, align 8
  call void %603(ptr nonnull %533, ptr nonnull %601)
  %.not140 = icmp eq ptr %579, null
  br i1 %.not140, label %false_block, label %end

else41:                                           ; preds = %if.entry37, %ifend.i260
  %604 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %604, ptr noundef nonnull align 8 dereferenceable(7) @276, i64 7, i1 false)
  %605 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %605, align 8
  %memberidx.i.i265 = getelementptr inbounds %string, ptr %605, i64 0, i32 1
  store ptr %604, ptr %memberidx.i.i265, align 8
  %memberidx1.i.i266 = getelementptr inbounds %string, ptr %605, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i266, align 4
  %memberidx2.i.i267 = getelementptr inbounds %string, ptr %605, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i267, align 4
  %606 = load i64, ptr %memberidx.i255, align 4
  %.not.i270 = icmp eq i64 %606, 7
  br i1 %.not.i270, label %ifend.i274, label %else53

ifend.i274:                                       ; preds = %else41
  %memberidx2.i272 = getelementptr inbounds %string, ptr %576, i64 0, i32 1
  %607 = load ptr, ptr %memberidx2.i272, align 8
  %608 = call i64 @memcmp(ptr %607, ptr nonnull %604, i64 7)
  %609 = icmp eq i64 %608, 0
  br i1 %609, label %if.entry52, label %else53

false_block:                                      ; preds = %if.entry40
  %610 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %610, ptr noundef nonnull align 8 dereferenceable(6) @273, i64 6, i1 false)
  %611 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %611, align 8
  %memberidx.i.i276 = getelementptr inbounds %string, ptr %611, i64 0, i32 1
  store ptr %610, ptr %memberidx.i.i276, align 8
  %memberidx1.i.i277 = getelementptr inbounds %string, ptr %611, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i277, align 4
  %memberidx2.i.i278 = getelementptr inbounds %string, ptr %611, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i278, align 4
  br label %end

end:                                              ; preds = %if.entry40, %false_block
  %ternary = phi ptr [ %611, %false_block ], [ %579, %if.entry40 ]
  %.not141 = icmp eq ptr %582, null
  br i1 %.not141, label %false_block45, label %true_block44

true_block44:                                     ; preds = %end
  %612 = load ptr, ptr %582, align 8
  %memberidx47 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %612, i64 0, i32 5
  %613 = load ptr, ptr %memberidx47, align 8
  %614 = call ptr %613(ptr nonnull %582)
  %615 = alloca ptr, align 8
  %616 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %615, ptr nonnull @274, ptr %614)
  %617 = load ptr, ptr %615, align 8
  %618 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %618, align 8
  %memberidx.i279 = getelementptr inbounds %string, ptr %618, i64 0, i32 1
  store ptr %617, ptr %memberidx.i279, align 8
  %memberidx1.i280 = getelementptr inbounds %string, ptr %618, i64 0, i32 2
  store i64 %616, ptr %memberidx1.i280, align 4
  %memberidx2.i281 = getelementptr inbounds %string, ptr %618, i64 0, i32 3
  store i64 %616, ptr %memberidx2.i281, align 4
  tail call void @free(ptr %614)
  br label %end46

false_block45:                                    ; preds = %end
  %619 = call ptr @malloc(i32 0)
  %620 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %620, align 8
  %memberidx.i.i282 = getelementptr inbounds %string, ptr %620, i64 0, i32 1
  store ptr %619, ptr %memberidx.i.i282, align 8
  %memberidx1.i.i283 = getelementptr inbounds %string, ptr %620, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i283, i8 0, i64 16, i1 false)
  br label %end46

end46:                                            ; preds = %false_block45, %true_block44
  %ternary48 = phi ptr [ %618, %true_block44 ], [ %620, %false_block45 ]
  %621 = call ptr @malloc(i32 8)
  store i64 3832894680125762659, ptr %621, align 8
  %622 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %622, align 8
  %memberidx.i.i285 = getelementptr inbounds %string, ptr %622, i64 0, i32 1
  store ptr %621, ptr %memberidx.i.i285, align 8
  %memberidx1.i.i286 = getelementptr inbounds %string, ptr %622, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i286, align 4
  %memberidx2.i.i287 = getelementptr inbounds %string, ptr %622, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i287, align 4
  %623 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %624 = call ptr %623(ptr nonnull %622)
  %625 = load ptr, ptr %ternary48, align 8
  %memberidx50 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %625, i64 0, i32 5
  %626 = load ptr, ptr %memberidx50, align 8
  %627 = call ptr %626(ptr nonnull %ternary48)
  %628 = load ptr, ptr %ternary, align 8
  %memberidx51 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %628, i64 0, i32 5
  %629 = load ptr, ptr %memberidx51, align 8
  %630 = call ptr %629(ptr nonnull %ternary)
  %631 = alloca ptr, align 8
  %632 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %631, ptr nonnull @275, ptr %624, ptr %627, ptr %630)
  %633 = load ptr, ptr %631, align 8
  tail call void @free(ptr %624)
  tail call void @free(ptr %627)
  tail call void @free(ptr %630)
  call void @system(ptr %633)
  br label %ifend39

if.entry52:                                       ; preds = %ifend.i274
  %634 = load ptr, ptr %533, align 8
  %memberidx55 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %634, i64 0, i32 4
  %635 = load ptr, ptr %memberidx55, align 8
  %.not139 = icmp eq ptr %579, null
  br i1 %.not139, label %false_block57, label %end58

else53:                                           ; preds = %else41, %ifend.i274
  %636 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %636, ptr noundef nonnull align 8 dereferenceable(7) @278, i64 7, i1 false)
  %637 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %637, align 8
  %memberidx.i.i288 = getelementptr inbounds %string, ptr %637, i64 0, i32 1
  store ptr %636, ptr %memberidx.i.i288, align 8
  %memberidx1.i.i289 = getelementptr inbounds %string, ptr %637, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i289, align 4
  %memberidx2.i.i290 = getelementptr inbounds %string, ptr %637, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i290, align 4
  %638 = load i64, ptr %memberidx.i255, align 4
  %.not.i293 = icmp eq i64 %638, 7
  br i1 %.not.i293, label %ifend.i297, label %else61

ifend.i297:                                       ; preds = %else53
  %memberidx2.i295 = getelementptr inbounds %string, ptr %576, i64 0, i32 1
  %639 = load ptr, ptr %memberidx2.i295, align 8
  %640 = call i64 @memcmp(ptr %639, ptr nonnull %636, i64 7)
  %641 = icmp eq i64 %640, 0
  br i1 %641, label %if.entry60, label %else61

false_block57:                                    ; preds = %if.entry52
  %642 = call ptr @malloc(i32 9)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %642, ptr noundef nonnull align 8 dereferenceable(9) @277, i64 9, i1 false)
  %643 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %643, align 8
  %memberidx.i.i299 = getelementptr inbounds %string, ptr %643, i64 0, i32 1
  store ptr %642, ptr %memberidx.i.i299, align 8
  %memberidx1.i.i300 = getelementptr inbounds %string, ptr %643, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i300, align 4
  %memberidx2.i.i301 = getelementptr inbounds %string, ptr %643, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i301, align 4
  br label %end58

end58:                                            ; preds = %if.entry52, %false_block57
  %ternary59 = phi ptr [ %643, %false_block57 ], [ %579, %if.entry52 ]
  call void %635(ptr nonnull %533, ptr nonnull %ternary59)
  br label %ifend39

if.entry60:                                       ; preds = %ifend.i297
  %644 = load ptr, ptr %533, align 8
  %memberidx63 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %644, i64 0, i32 5
  %645 = load ptr, ptr %memberidx63, align 8
  %.not138 = icmp eq ptr %579, null
  br i1 %.not138, label %false_block65, label %end66

else61:                                           ; preds = %else53, %ifend.i297
  %646 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %646, ptr noundef nonnull align 8 dereferenceable(3) @280, i64 3, i1 false)
  %647 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %647, align 8
  %memberidx.i.i302 = getelementptr inbounds %string, ptr %647, i64 0, i32 1
  store ptr %646, ptr %memberidx.i.i302, align 8
  %memberidx1.i.i303 = getelementptr inbounds %string, ptr %647, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i303, align 4
  %memberidx2.i.i304 = getelementptr inbounds %string, ptr %647, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i304, align 4
  %648 = load i64, ptr %memberidx.i255, align 4
  %.not.i307 = icmp eq i64 %648, 3
  br i1 %.not.i307, label %ifend.i311, label %else69

ifend.i311:                                       ; preds = %else61
  %memberidx2.i309 = getelementptr inbounds %string, ptr %576, i64 0, i32 1
  %649 = load ptr, ptr %memberidx2.i309, align 8
  %650 = call i64 @memcmp(ptr %649, ptr nonnull %646, i64 3)
  %651 = icmp eq i64 %650, 0
  br i1 %651, label %if.entry68, label %else69

false_block65:                                    ; preds = %if.entry60
  %652 = call ptr @malloc(i32 9)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %652, ptr noundef nonnull align 8 dereferenceable(9) @279, i64 9, i1 false)
  %653 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %653, align 8
  %memberidx.i.i313 = getelementptr inbounds %string, ptr %653, i64 0, i32 1
  store ptr %652, ptr %memberidx.i.i313, align 8
  %memberidx1.i.i314 = getelementptr inbounds %string, ptr %653, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i314, align 4
  %memberidx2.i.i315 = getelementptr inbounds %string, ptr %653, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i315, align 4
  br label %end66

end66:                                            ; preds = %if.entry60, %false_block65
  %ternary67 = phi ptr [ %653, %false_block65 ], [ %579, %if.entry60 ]
  call void %645(ptr nonnull %533, ptr nonnull %ternary67)
  br label %ifend39

if.entry68:                                       ; preds = %ifend.i311
  %654 = load ptr, ptr %533, align 8
  %memberidx71 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %654, i64 0, i32 3
  %655 = load ptr, ptr %memberidx71, align 8
  %.not137 = icmp eq ptr %579, null
  br i1 %.not137, label %false_block73, label %end74

else69:                                           ; preds = %else61, %ifend.i311
  %656 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %656, ptr noundef nonnull align 8 dereferenceable(3) @281, i64 3, i1 false)
  %657 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %657, align 8
  %memberidx.i.i316 = getelementptr inbounds %string, ptr %657, i64 0, i32 1
  store ptr %656, ptr %memberidx.i.i316, align 8
  %memberidx1.i.i317 = getelementptr inbounds %string, ptr %657, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i317, align 4
  %memberidx2.i.i318 = getelementptr inbounds %string, ptr %657, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i318, align 4
  %658 = load i64, ptr %memberidx.i255, align 4
  %.not.i321 = icmp eq i64 %658, 3
  br i1 %.not.i321, label %ifend.i325, label %ifend39

ifend.i325:                                       ; preds = %else69
  %memberidx2.i323 = getelementptr inbounds %string, ptr %576, i64 0, i32 1
  %659 = load ptr, ptr %memberidx2.i323, align 8
  %660 = call i64 @memcmp(ptr %659, ptr nonnull %656, i64 3)
  %661 = icmp eq i64 %660, 0
  br i1 %661, label %if.entry76, label %ifend39

false_block73:                                    ; preds = %if.entry68
  %662 = call ptr @malloc(i32 8)
  store i64 8011468834885367151, ptr %662, align 8
  %663 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %663, align 8
  %memberidx.i.i327 = getelementptr inbounds %string, ptr %663, i64 0, i32 1
  store ptr %662, ptr %memberidx.i.i327, align 8
  %memberidx1.i.i328 = getelementptr inbounds %string, ptr %663, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i328, align 4
  %memberidx2.i.i329 = getelementptr inbounds %string, ptr %663, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i329, align 4
  br label %end74

end74:                                            ; preds = %if.entry68, %false_block73
  %ternary75 = phi ptr [ %663, %false_block73 ], [ %579, %if.entry68 ]
  call void %655(ptr nonnull %533, ptr nonnull %ternary75)
  br label %ifend39

if.entry76:                                       ; preds = %ifend.i325
  %664 = load ptr, ptr %533, align 8
  %memberidx79 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %664, i64 0, i32 6
  %665 = load ptr, ptr %memberidx79, align 8
  %.not136 = icmp eq ptr %579, null
  br i1 %.not136, label %false_block81, label %end82

false_block81:                                    ; preds = %if.entry76
  %666 = call ptr @malloc(i32 8)
  store i64 8299699211037078895, ptr %666, align 8
  %667 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %667, align 8
  %memberidx.i.i330 = getelementptr inbounds %string, ptr %667, i64 0, i32 1
  store ptr %666, ptr %memberidx.i.i330, align 8
  %memberidx1.i.i331 = getelementptr inbounds %string, ptr %667, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i331, align 4
  %memberidx2.i.i332 = getelementptr inbounds %string, ptr %667, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i332, align 4
  br label %end82

end82:                                            ; preds = %if.entry76, %false_block81
  %ternary83 = phi ptr [ %667, %false_block81 ], [ %579, %if.entry76 ]
  call void %665(ptr nonnull %533, ptr nonnull %ternary83)
  br label %ifend39
}

define internal void @GeneratedModule_write_bc(ptr nocapture readonly %0, ptr %1) {
  %3 = load ptr, ptr %1, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %3, i64 0, i32 5
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr %4(ptr nonnull %1)
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call i64 @LLVMWriteBitcodeToFile(ptr %6, ptr %5)
  tail call void @free(ptr %5)
  %memberidx.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  tail call void @free(ptr %8)
  tail call void @free(ptr nonnull %1)
  ret void
}

define internal i64 @GeneratedModule_exec(ptr %0) {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %engine = alloca ptr, align 8
  tail call void @LLVMLinkInMCJIT()
  store ptr null, ptr %engine, align 8
  %memberidx = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %5 = call i1 @LLVMCreateExecutionEngineForModule(ptr nonnull %engine, ptr %4, ptr nonnull %memberidx1)
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %6)
  %8 = trunc i64 %7 to i32
  %9 = call ptr @malloc(i32 %8)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %6, i64 %7, i1 false)
  %10 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i34 = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i34, align 8
  %memberidx1.i.i35 = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 %7, ptr %memberidx1.i.i35, align 4
  %memberidx2.i.i36 = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 %7, ptr %memberidx2.i.i36, align 4
  %11 = load ptr, ptr %memberidx1, align 8
  call void @LLVMDisposeMessage(ptr %11)
  %12 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %13 = call ptr %12(ptr nonnull %10)
  %14 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @20, ptr %13)
  %15 = load ptr, ptr %3, align 8
  %16 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %16, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 1
  store ptr %15, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  store i64 %14, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 3
  store i64 %14, ptr %memberidx2.i.i, align 4
  call void @free(ptr %13)
  %17 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %17, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %18 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %18, align 8
  %memberidx.i.i.i37 = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  store ptr %17, ptr %memberidx.i.i.i37, align 8
  %memberidx1.i.i.i38 = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i38, align 4
  %memberidx2.i.i.i39 = getelementptr inbounds %string, ptr %18, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i39, align 4
  %19 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %20 = call ptr %19(ptr nonnull %18)
  %21 = load i64, ptr %memberidx1.i.i.i38, align 4
  call void @write(i64 1, ptr %20, i64 %21)
  %22 = load ptr, ptr %memberidx.i.i.i37, align 8
  call void @free(ptr %22)
  call void @free(ptr %18)
  %23 = load ptr, ptr %16, align 8
  %memberidx.i.i.i55 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %23, i64 0, i32 3
  %24 = load ptr, ptr %memberidx.i.i.i55, align 8
  %25 = call ptr %24(ptr nonnull %16)
  %26 = load i64, ptr %memberidx1.i.i, align 4
  call void @write(i64 1, ptr %25, i64 %26)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %27 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %27)
  call void @free(ptr %16)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %1, %if.entry
  %28 = load ptr, ptr %memberidx, align 8
  %29 = call ptr @LLVMGetNamedFunction(ptr %28, ptr nonnull @21)
  %30 = icmp eq ptr %29, null
  br i1 %30, label %if.entry4, label %ifend6

common.ret:                                       ; preds = %if.entry12, %ifend6, %if.entry4
  %common.ret.op = phi i64 [ 1, %if.entry4 ], [ %45, %ifend6 ], [ %45, %if.entry12 ]
  %.sink = load ptr, ptr %engine, align 8
  call void @LLVMDisposeExecutionEngine(ptr %.sink)
  ret i64 %common.ret.op

if.entry4:                                        ; preds = %ifend
  %31 = call ptr @malloc(i32 48)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %31, ptr noundef nonnull align 8 dereferenceable(48) @22, i64 48, i1 false)
  %32 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %32, align 8
  %memberidx.i.i26 = getelementptr inbounds %string, ptr %32, i64 0, i32 1
  store ptr %31, ptr %memberidx.i.i26, align 8
  %memberidx1.i.i27 = getelementptr inbounds %string, ptr %32, i64 0, i32 2
  store i64 48, ptr %memberidx1.i.i27, align 4
  %memberidx2.i.i28 = getelementptr inbounds %string, ptr %32, i64 0, i32 3
  store i64 48, ptr %memberidx2.i.i28, align 4
  %33 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %33, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %34 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %35 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %36 = call ptr %35(ptr nonnull %34)
  %37 = load i64, ptr %memberidx1.i.i.i, align 4
  call void @write(i64 1, ptr %36, i64 %37)
  %38 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %38)
  call void @free(ptr %34)
  %39 = load ptr, ptr %32, align 8
  %memberidx.i.i.i43 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %39, i64 0, i32 3
  %40 = load ptr, ptr %memberidx.i.i.i43, align 8
  %41 = call ptr %40(ptr nonnull %32)
  %42 = load i64, ptr %memberidx1.i.i27, align 4
  call void @write(i64 1, ptr %41, i64 %42)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %43 = load ptr, ptr %memberidx.i.i26, align 8
  call void @free(ptr %43)
  call void @free(ptr %32)
  call void @exit(i64 -1)
  br label %common.ret

ifend6:                                           ; preds = %ifend
  %44 = load ptr, ptr %engine, align 8
  %45 = call i64 @LLVMRunFunctionAsMain(ptr %44, ptr nonnull %29, i64 0, ptr null, ptr null)
  %46 = load ptr, ptr %engine, align 8
  %47 = load ptr, ptr %memberidx, align 8
  %48 = call i1 @LLVMRemoveModule(ptr %46, ptr %47, ptr nonnull %memberidx, ptr nonnull %memberidx1)
  br i1 %48, label %if.entry12, label %common.ret

if.entry12:                                       ; preds = %ifend6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %49 = load ptr, ptr %memberidx1, align 8
  %50 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %49)
  %51 = trunc i64 %50 to i32
  %52 = call ptr @malloc(i32 %51)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %52, ptr align 8 %49, i64 %50, i1 false)
  %53 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %53, align 8
  %memberidx.i.i46 = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  store ptr %52, ptr %memberidx.i.i46, align 8
  %memberidx1.i.i47 = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  store i64 %50, ptr %memberidx1.i.i47, align 4
  %memberidx2.i.i48 = getelementptr inbounds %string, ptr %53, i64 0, i32 3
  store i64 %50, ptr %memberidx2.i.i48, align 4
  %54 = load ptr, ptr %memberidx1, align 8
  call void @LLVMDisposeMessage(ptr %54)
  %55 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %56 = call ptr %55(ptr nonnull %53)
  %57 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @20, ptr %56)
  %58 = load ptr, ptr %2, align 8
  %59 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %59, align 8
  %memberidx.i.i31 = getelementptr inbounds %string, ptr %59, i64 0, i32 1
  store ptr %58, ptr %memberidx.i.i31, align 8
  %memberidx1.i.i32 = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  store i64 %57, ptr %memberidx1.i.i32, align 4
  %memberidx2.i.i33 = getelementptr inbounds %string, ptr %59, i64 0, i32 3
  store i64 %57, ptr %memberidx2.i.i33, align 4
  call void @free(ptr %56)
  %60 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %60, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %61 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %61, align 8
  %memberidx.i.i.i49 = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  store ptr %60, ptr %memberidx.i.i.i49, align 8
  %memberidx1.i.i.i50 = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i50, align 4
  %memberidx2.i.i.i51 = getelementptr inbounds %string, ptr %61, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i51, align 4
  %62 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %63 = call ptr %62(ptr nonnull %61)
  %64 = load i64, ptr %memberidx1.i.i.i50, align 4
  call void @write(i64 1, ptr %63, i64 %64)
  %65 = load ptr, ptr %memberidx.i.i.i49, align 8
  call void @free(ptr %65)
  call void @free(ptr %61)
  %66 = load ptr, ptr %59, align 8
  %memberidx.i.i.i58 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %66, i64 0, i32 3
  %67 = load ptr, ptr %memberidx.i.i.i58, align 8
  %68 = call ptr %67(ptr nonnull %59)
  %69 = load i64, ptr %memberidx1.i.i32, align 4
  call void @write(i64 1, ptr %68, i64 %69)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %70 = load ptr, ptr %memberidx.i.i31, align 8
  call void @free(ptr %70)
  call void @free(ptr %59)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  br label %common.ret
}

define internal void @GeneratedModule_set_target_machine(ptr %0, ptr %1) {
  %3 = alloca ptr, align 8
  %target = alloca ptr, align 8
  %memberidx = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = add nuw i64 %4, 1
  %6 = alloca i8, i64 %5, align 1
  %7 = icmp eq i64 %4, 0
  br i1 %7, label %if.entry, label %else

if.entry:                                         ; preds = %2
  %8 = tail call ptr @LLVMGetDefaultTargetTriple()
  br label %ifend

else:                                             ; preds = %2
  %9 = load ptr, ptr %1, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %9, i64 0, i32 3
  %10 = load ptr, ptr %memberidx2, align 8
  %11 = tail call ptr %10(ptr nonnull %1)
  %12 = load i64, ptr %memberidx, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %6, ptr align 1073741824 %11, i64 %12, i1 false)
  %ptridx = getelementptr inbounds i8, ptr %6, i64 %12
  store i8 0, ptr %ptridx, align 1
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %triple.0 = phi ptr [ %8, %if.entry ], [ %6, %else ]
  store ptr null, ptr %target, align 8
  %memberidx5 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %13 = call i1 @LLVMGetTargetFromTriple(ptr %triple.0, ptr nonnull %target, ptr nonnull %memberidx5)
  br i1 %13, label %if.entry7, label %ifend9

if.entry7:                                        ; preds = %ifend
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %14 = load ptr, ptr %memberidx5, align 8
  %15 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %14)
  %16 = trunc i64 %15 to i32
  %17 = call ptr @malloc(i32 %16)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %14, i64 %15, i1 false)
  %18 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %18, align 8
  %memberidx.i.i31 = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  store ptr %17, ptr %memberidx.i.i31, align 8
  %memberidx1.i.i32 = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  store i64 %15, ptr %memberidx1.i.i32, align 4
  %memberidx2.i.i33 = getelementptr inbounds %string, ptr %18, i64 0, i32 3
  store i64 %15, ptr %memberidx2.i.i33, align 4
  %19 = load ptr, ptr %memberidx5, align 8
  call void @LLVMDisposeMessage(ptr %19)
  %20 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %21 = call ptr %20(ptr nonnull %18)
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @20, ptr %21)
  %23 = load ptr, ptr %3, align 8
  %24 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %24, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %24, i64 0, i32 1
  store ptr %23, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %24, i64 0, i32 2
  store i64 %22, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %24, i64 0, i32 3
  store i64 %22, ptr %memberidx2.i.i, align 4
  call void @free(ptr %21)
  %25 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %25, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %26 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %26, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  store ptr %25, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %27 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %28 = call ptr %27(ptr nonnull %26)
  %29 = load i64, ptr %memberidx1.i.i.i, align 4
  call void @write(i64 1, ptr %28, i64 %29)
  %30 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %30)
  call void @free(ptr %26)
  %31 = load ptr, ptr %24, align 8
  %memberidx.i.i.i34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %31, i64 0, i32 3
  %32 = load ptr, ptr %memberidx.i.i.i34, align 8
  %33 = call ptr %32(ptr nonnull %24)
  %34 = load i64, ptr %memberidx1.i.i, align 4
  call void @write(i64 1, ptr %33, i64 %34)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %35 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %35)
  call void @free(ptr %24)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend9

ifend9:                                           ; preds = %ifend, %if.entry7
  %memberidx10 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 3
  %36 = load ptr, ptr %target, align 8
  %37 = call ptr @LLVMGetHostCPUFeatures()
  %38 = call ptr @LLVMCreateTargetMachine(ptr %36, ptr %triple.0, ptr nonnull @23, ptr %37, i64 3, i64 0, i64 0)
  store ptr %38, ptr %memberidx10, align 8
  %memberidx11 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %39 = load ptr, ptr %memberidx11, align 8
  %40 = call ptr @LLVMCreateTargetDataLayout(ptr %38)
  call void @LLVMSetDataLayout(ptr %39, ptr %40)
  %41 = load ptr, ptr %memberidx11, align 8
  %42 = load ptr, ptr %memberidx10, align 8
  %43 = call ptr @LLVMGetTargetMachineTriple(ptr %42)
  call void @LLVMSetTarget(ptr %41, ptr %43)
  %memberidx.i30 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i30, align 8
  call void @free(ptr %44)
  tail call void @free(ptr nonnull %1)
  ret void
}

define internal void @GeneratedModule_write_ir(ptr %0, ptr %1) {
  %3 = alloca ptr, align 8
  %4 = load ptr, ptr %1, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %4, i64 0, i32 5
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr %5(ptr nonnull %1)
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %8 = tail call i1 @LLVMPrintModuleToFile(ptr %7, ptr %6, ptr nonnull %memberidx2)
  br i1 %8, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %9)
  %11 = trunc i64 %10 to i32
  %12 = tail call ptr @malloc(i32 %11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %9, i64 %10, i1 false)
  %13 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i10 = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i10, align 8
  %memberidx1.i.i11 = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %10, ptr %memberidx1.i.i11, align 4
  %memberidx2.i.i12 = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %10, ptr %memberidx2.i.i12, align 4
  %14 = load ptr, ptr %memberidx2, align 8
  tail call void @LLVMDisposeMessage(ptr %14)
  %15 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %16 = tail call ptr %15(ptr nonnull %13)
  %17 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @20, ptr %16)
  %18 = load ptr, ptr %3, align 8
  %19 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  store ptr %18, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  store i64 %17, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %19, i64 0, i32 3
  store i64 %17, ptr %memberidx2.i.i, align 4
  call void @free(ptr %16)
  %20 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %20, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %21 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %22 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %23 = call ptr %22(ptr nonnull %21)
  %24 = load i64, ptr %memberidx1.i.i.i, align 4
  call void @write(i64 1, ptr %23, i64 %24)
  %25 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %25)
  call void @free(ptr %21)
  %26 = load ptr, ptr %19, align 8
  %memberidx.i.i.i13 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %26, i64 0, i32 3
  %27 = load ptr, ptr %memberidx.i.i.i13, align 8
  %28 = call ptr %27(ptr nonnull %19)
  %29 = load i64, ptr %memberidx1.i.i, align 4
  call void @write(i64 1, ptr %28, i64 %29)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %30 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %30)
  call void @free(ptr %19)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  tail call void @free(ptr %6)
  %memberidx.i9 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i9, align 8
  call void @free(ptr %31)
  tail call void @free(ptr nonnull %1)
  ret void
}

define internal void @GeneratedModule_run_passes(ptr nocapture readonly %0, i64 %1) {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %while.end
  ret void

ifend:                                            ; preds = %2
  %4 = tail call ptr @LLVMCreatePassManager()
  %memberidx = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr @LLVMCreateFunctionPassManagerForModule(ptr %5)
  %7 = tail call ptr @LLVMPassManagerBuilderCreate()
  tail call void @LLVMAddInternalizePass(ptr %4, i64 1)
  tail call void @LLVMAddGlobalDCEPass(ptr %4)
  tail call void @LLVMAddGlobalOptimizerPass(ptr %4)
  tail call void @LLVMAddInstructionCombiningPass(ptr %4)
  tail call void @LLVMAddScalarReplAggregatesPass(ptr %4)
  tail call void @LLVMAddFunctionInliningPass(ptr %4)
  tail call void @LLVMPassManagerBuilderSetOptLevel(ptr %7, i64 %1)
  tail call void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr %7, i64 255)
  tail call void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr %7, ptr %6)
  %8 = load ptr, ptr %memberidx, align 8
  %9 = tail call ptr @LLVMGetFirstFunction(ptr %8)
  %.not = icmp eq ptr %9, null
  br i1 %.not, label %while.end, label %while.entry

while.entry:                                      ; preds = %ifend, %while.entry
  %func.0 = phi ptr [ %11, %while.entry ], [ %9, %ifend ]
  %10 = tail call i1 @LLVMRunFunctionPassManager(ptr %6, ptr nonnull %func.0)
  %11 = tail call ptr @LLVMGetNextFunction(ptr nonnull %func.0)
  %.not23 = icmp eq ptr %11, null
  br i1 %.not23, label %while.end, label %while.entry

while.end:                                        ; preds = %while.entry, %ifend
  tail call void @LLVMPassManagerBuilderPopulateModulePassManager(ptr %7, ptr %4)
  %12 = load ptr, ptr %memberidx, align 8
  %13 = tail call i1 @LLVMRunPassManager(ptr %4, ptr %12)
  tail call void @LLVMDisposePassManager(ptr %6)
  tail call void @LLVMPassManagerBuilderDispose(ptr %7)
  tail call void @LLVMDisposePassManager(ptr %4)
  br label %common.ret
}

define internal void @GeneratedModule_write_asm(ptr %0, ptr %1) {
  %3 = alloca ptr, align 8
  %4 = load ptr, ptr %1, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %4, i64 0, i32 5
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr %5(ptr nonnull %1)
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %9 = tail call i1 @LLVMTargetMachineEmitToFile(ptr %7, ptr %8, ptr %6, i64 0, ptr nonnull %memberidx3)
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %10)
  %12 = trunc i64 %11 to i32
  %13 = tail call ptr @malloc(i32 %12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %10, i64 %11, i1 false)
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i.i12 = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i.i12, align 8
  %memberidx1.i.i13 = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i.i13, align 4
  %memberidx2.i.i14 = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i.i14, align 4
  %15 = load ptr, ptr %memberidx3, align 8
  tail call void @LLVMDisposeMessage(ptr %15)
  %16 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %17 = tail call ptr %16(ptr nonnull %14)
  %18 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @20, ptr %17)
  %19 = load ptr, ptr %3, align 8
  %20 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 %18, ptr %memberidx2.i.i, align 4
  call void @free(ptr %17)
  %21 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %21, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %22 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %22, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 1
  store ptr %21, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %23 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %24 = call ptr %23(ptr nonnull %22)
  %25 = load i64, ptr %memberidx1.i.i.i, align 4
  call void @write(i64 1, ptr %24, i64 %25)
  %26 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %26)
  call void @free(ptr %22)
  %27 = load ptr, ptr %20, align 8
  %memberidx.i.i.i15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx.i.i.i15, align 8
  %29 = call ptr %28(ptr nonnull %20)
  %30 = load i64, ptr %memberidx1.i.i, align 4
  call void @write(i64 1, ptr %29, i64 %30)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %31 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %31)
  call void @free(ptr %20)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  tail call void @free(ptr %6)
  %memberidx.i11 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i11, align 8
  call void @free(ptr %32)
  tail call void @free(ptr nonnull %1)
  ret void
}

define internal void @GeneratedModule_write_obj(ptr %0, ptr %1) {
  %3 = alloca ptr, align 8
  %4 = load ptr, ptr %1, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %4, i64 0, i32 5
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr %5(ptr nonnull %1)
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %9 = tail call i1 @LLVMTargetMachineEmitToFile(ptr %7, ptr %8, ptr %6, i64 1, ptr nonnull %memberidx3)
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %10)
  %12 = trunc i64 %11 to i32
  %13 = tail call ptr @malloc(i32 %12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %10, i64 %11, i1 false)
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i.i12 = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i.i12, align 8
  %memberidx1.i.i13 = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i.i13, align 4
  %memberidx2.i.i14 = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i.i14, align 4
  %15 = load ptr, ptr %memberidx3, align 8
  tail call void @LLVMDisposeMessage(ptr %15)
  %16 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %17 = tail call ptr %16(ptr nonnull %14)
  %18 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @20, ptr %17)
  %19 = load ptr, ptr %3, align 8
  %20 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 %18, ptr %memberidx2.i.i, align 4
  call void @free(ptr %17)
  %21 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %21, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %22 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %22, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 1
  store ptr %21, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %22, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %23 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %24 = call ptr %23(ptr nonnull %22)
  %25 = load i64, ptr %memberidx1.i.i.i, align 4
  call void @write(i64 1, ptr %24, i64 %25)
  %26 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %26)
  call void @free(ptr %22)
  %27 = load ptr, ptr %20, align 8
  %memberidx.i.i.i15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx.i.i.i15, align 8
  %29 = call ptr %28(ptr nonnull %20)
  %30 = load i64, ptr %memberidx1.i.i, align 4
  call void @write(i64 1, ptr %29, i64 %30)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %31 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %31)
  call void @free(ptr %20)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  tail call void @free(ptr %6)
  %memberidx.i11 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i11, align 8
  call void @free(ptr %32)
  tail call void @free(ptr nonnull %1)
  ret void
}

declare i1 @LLVMVerifyModule(ptr, i64, ptr) local_unnamed_addr

declare void @LLVM_InitializeAllTargetInfos() local_unnamed_addr

declare void @LLVM_InitializeAllTargets() local_unnamed_addr

declare void @LLVM_InitializeAllTargetMCs() local_unnamed_addr

declare void @LLVM_InitializeAllAsmParsers() local_unnamed_addr

declare void @LLVM_InitializeAllAsmPrinters() local_unnamed_addr

declare void @LLVMDisposeMessage(ptr) local_unnamed_addr

declare void @exit(i64) local_unnamed_addr

declare ptr @LLVMCreatePassManager() local_unnamed_addr

declare ptr @LLVMCreateFunctionPassManagerForModule(ptr) local_unnamed_addr

declare ptr @LLVMPassManagerBuilderCreate() local_unnamed_addr

declare void @LLVMAddInternalizePass(ptr, i64) local_unnamed_addr

declare void @LLVMAddGlobalDCEPass(ptr) local_unnamed_addr

declare void @LLVMAddGlobalOptimizerPass(ptr) local_unnamed_addr

declare void @LLVMAddInstructionCombiningPass(ptr) local_unnamed_addr

declare void @LLVMAddScalarReplAggregatesPass(ptr) local_unnamed_addr

declare void @LLVMAddFunctionInliningPass(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderSetOptLevel(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetFirstFunction(ptr) local_unnamed_addr

declare i1 @LLVMRunFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNextFunction(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateModulePassManager(ptr, ptr) local_unnamed_addr

declare i1 @LLVMRunPassManager(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposePassManager(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderDispose(ptr) local_unnamed_addr

declare void @LLVMLinkInMCJIT() local_unnamed_addr

declare i1 @LLVMCreateExecutionEngineForModule(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNamedFunction(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposeExecutionEngine(ptr) local_unnamed_addr

declare i64 @LLVMRunFunctionAsMain(ptr, ptr, i64, ptr, ptr) local_unnamed_addr

declare i1 @LLVMRemoveModule(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetDefaultTargetTriple() local_unnamed_addr

declare i1 @LLVMGetTargetFromTriple(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetMachine(ptr, ptr, ptr, ptr, i64, i64, i64) local_unnamed_addr

declare ptr @LLVMGetHostCPUFeatures() local_unnamed_addr

declare void @LLVMSetDataLayout(ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetDataLayout(ptr) local_unnamed_addr

declare void @LLVMSetTarget(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetTargetMachineTriple(ptr) local_unnamed_addr

declare i1 @LLVMTargetMachineEmitToFile(ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare i1 @LLVMPrintModuleToFile(ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMWriteBitcodeToFile(ptr, ptr) local_unnamed_addr

define internal i1 @Compiler_print_errors(ptr nocapture readonly %0) {
  %2 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 6
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_FloError_, ptr %3, i64 0, i32 2
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %if.entry, label %common.ret

common.ret:                                       ; preds = %1, %print_error.exit
  ret i1 %5

if.entry:                                         ; preds = %1
  %memberidx.i = getelementptr inbounds %Array_FloError_, ptr %3, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx3 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %8 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %memberidx4, align 8
  %10 = load i64, ptr %9, align 4
  %memberidx.i12 = getelementptr inbounds %Array_FloFile_, ptr %8, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i12, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %12 = load ptr, ptr %ptridx.i, align 8
  %memberidx6 = getelementptr inbounds %FloFile, ptr %12, i64 0, i32 1
  %13 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %memberidx7, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %15 = load i64, ptr %7, align 4
  %memberidx1.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 1
  %16 = load ptr, ptr %memberidx1.i, align 8
  tail call fastcc void @print_message_error(i64 %15, ptr %16)
  %17 = load ptr, ptr %13, align 8
  %memberidx2.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %17, i64 0, i32 5
  %18 = load ptr, ptr %memberidx2.i, align 8
  %19 = tail call ptr %18(ptr nonnull %13)
  %memberidx3.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 2
  %20 = load ptr, ptr %memberidx3.i, align 8
  %memberidx4.i = getelementptr inbounds %FloRange, ptr %20, i64 0, i32 3
  %21 = load i64, ptr %memberidx4.i, align 4
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @29, ptr %19, i64 %21)
  %23 = load ptr, ptr %2, align 8
  %24 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %24, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %24, i64 0, i32 1
  store ptr %23, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %24, i64 0, i32 2
  store i64 %22, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %24, i64 0, i32 3
  store i64 %22, ptr %memberidx2.i.i, align 4
  call void @free(ptr %19)
  %25 = load ptr, ptr %24, align 8
  %memberidx.i.i.i10.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx.i.i.i10.i, align 8
  %27 = call ptr %26(ptr nonnull %24)
  %28 = load i64, ptr %memberidx1.i.i, align 4
  call void @write(i64 1, ptr %27, i64 %28)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %29 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %29)
  call void @free(ptr %24)
  %30 = load ptr, ptr %memberidx3.i, align 8
  %memberidx.i9.i = getelementptr inbounds %FloRange, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i9.i, align 4
  %32 = load ptr, ptr %14, align 8
  %memberidx.i.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %32, i64 0, i32 2
  %33 = load ptr, ptr %memberidx.i.i.i, align 8
  %34 = call i8 %33(ptr nonnull %14, i64 %31)
  %35 = icmp ne i8 %34, 10
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  %36 = load i64, ptr %memberidx1.i.i.i, align 4
  %37 = icmp sgt i64 %36, %31
  %38 = and i1 %35, %37
  br i1 %38, label %while.entry.i.i.i, label %get_next_line_index.exit.i.i

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %start.0.i.i.i = phi i64 [ %39, %while.entry.i.i.i ], [ %31, %if.entry ]
  %39 = add nsw i64 %start.0.i.i.i, 1
  %40 = load ptr, ptr %14, align 8
  %memberidx2.i.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %40, i64 0, i32 2
  %41 = load ptr, ptr %memberidx2.i.i.i, align 8
  %42 = call i8 %41(ptr nonnull %14, i64 %39)
  %43 = icmp ne i8 %42, 10
  %44 = load i64, ptr %memberidx1.i.i.i, align 4
  %45 = icmp slt i64 %39, %44
  %46 = and i1 %43, %45
  br i1 %46, label %while.entry.i.i.i, label %get_next_line_index.exit.i.i

get_next_line_index.exit.i.i:                     ; preds = %while.entry.i.i.i, %if.entry
  %start.1.i.i.i = phi i64 [ %31, %if.entry ], [ %39, %while.entry.i.i.i ]
  %47 = load i64, ptr %30, align 4
  %memberidx4.i.i = getelementptr inbounds %FloRange, ptr %30, i64 0, i32 2
  %48 = load i64, ptr %memberidx4.i.i, align 4
  %49 = sub nsw i64 %47, %48
  %50 = load ptr, ptr %14, align 8
  %memberidx5.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %50, i64 0, i32 1
  %51 = load ptr, ptr %memberidx5.i.i, align 8
  %52 = sub nuw i64 %start.1.i.i.i, %49
  %53 = call ptr %51(ptr nonnull %14, i64 %49, i64 %52)
  %54 = load ptr, ptr %53, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %54, i64 0, i32 3
  %55 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %56 = call ptr %55(ptr nonnull %53)
  %memberidx1.i.i.i.i.i = getelementptr inbounds %string, ptr %53, i64 0, i32 2
  %57 = load i64, ptr %memberidx1.i.i.i.i.i, align 4
  call void @write(i64 1, ptr %56, i64 %57)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %memberidx.i.i.i.i = getelementptr inbounds %string, ptr %53, i64 0, i32 1
  %58 = load ptr, ptr %memberidx.i.i.i.i, align 8
  call void @free(ptr %58)
  call void @free(ptr %53)
  %59 = load i64, ptr %memberidx4.i.i, align 4
  %60 = load i64, ptr %memberidx.i9.i, align 4
  %61 = load i64, ptr %30, align 4
  %62 = sub nuw i64 %60, %61
  %63 = call ptr @malloc(i32 16)
  store i64 0, ptr %63, align 4
  %memberidx1.i29.i.i = getelementptr inbounds %Range, ptr %63, i64 0, i32 1
  store i64 %59, ptr %memberidx1.i29.i.i, align 4
  %64 = call ptr @malloc(i32 17)
  %memberidx.i.i31.i.i = getelementptr inbounds %RangeIterator, ptr %64, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i31.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %RangeIterator, ptr %64, i64 0, i32 2
  store i64 %59, ptr %memberidx1.i.i.i.i, align 4
  %65 = icmp slt i64 %59, 1
  store i1 %65, ptr %64, align 1
  br i1 %65, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %get_next_line_index.exit.i.i, %for.body.i.i
  %storemerge15 = phi i64 [ %73, %for.body.i.i ], [ 1, %get_next_line_index.exit.i.i ]
  %66 = call ptr @malloc(i32 1)
  store i8 32, ptr %66, align 8
  %67 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %67, align 8
  %memberidx.i.i34.i.i = getelementptr inbounds %string, ptr %67, i64 0, i32 1
  store ptr %66, ptr %memberidx.i.i34.i.i, align 8
  %memberidx1.i.i35.i.i = getelementptr inbounds %string, ptr %67, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i35.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %string, ptr %67, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i.i.i, align 4
  %68 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %69 = call ptr %68(ptr nonnull %67)
  %70 = load i64, ptr %memberidx1.i.i35.i.i, align 4
  call void @write(i64 1, ptr %69, i64 %70)
  %71 = load ptr, ptr %memberidx.i.i34.i.i, align 8
  call void @free(ptr %71)
  call void @free(ptr %67)
  %72 = icmp sge i64 %storemerge15, %59
  store i1 %72, ptr %64, align 1
  %73 = add nuw nsw i64 %storemerge15, 1
  br i1 %72, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.body.i.i, %get_next_line_index.exit.i.i
  call void @free(ptr nonnull %64)
  %74 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %74, ptr noundef nonnull align 8 dereferenceable(7) @11, i64 7, i1 false)
  %75 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %75, align 8
  %memberidx.i.i.i40.i.i = getelementptr inbounds %string, ptr %75, i64 0, i32 1
  store ptr %74, ptr %memberidx.i.i.i40.i.i, align 8
  %memberidx1.i.i.i41.i.i = getelementptr inbounds %string, ptr %75, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i41.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %string, ptr %75, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i.i.i, align 4
  %76 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %77 = call ptr %76(ptr nonnull %75)
  %78 = load i64, ptr %memberidx1.i.i.i41.i.i, align 4
  call void @write(i64 1, ptr %77, i64 %78)
  %79 = load ptr, ptr %memberidx.i.i.i40.i.i, align 8
  call void @free(ptr %79)
  call void @free(ptr %75)
  %80 = call ptr @malloc(i32 16)
  store i64 0, ptr %80, align 4
  %memberidx1.i42.i.i = getelementptr inbounds %Range, ptr %80, i64 0, i32 1
  store i64 %62, ptr %memberidx1.i42.i.i, align 4
  %81 = call ptr @malloc(i32 17)
  %memberidx.i.i44.i.i = getelementptr inbounds %RangeIterator, ptr %81, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i44.i.i, align 4
  %memberidx1.i.i45.i.i = getelementptr inbounds %RangeIterator, ptr %81, i64 0, i32 2
  store i64 %62, ptr %memberidx1.i.i45.i.i, align 4
  %82 = icmp slt i64 %62, 1
  store i1 %82, ptr %81, align 1
  br i1 %82, label %print_error.exit, label %for.body12.i.i

for.body12.i.i:                                   ; preds = %for.end.i.i, %for.body12.i.i
  %storemerge1314 = phi i64 [ %90, %for.body12.i.i ], [ 1, %for.end.i.i ]
  %83 = call ptr @malloc(i32 1)
  store i8 94, ptr %83, align 8
  %84 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %84, align 8
  %memberidx.i.i48.i.i = getelementptr inbounds %string, ptr %84, i64 0, i32 1
  store ptr %83, ptr %memberidx.i.i48.i.i, align 8
  %memberidx1.i.i49.i.i = getelementptr inbounds %string, ptr %84, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i49.i.i, align 4
  %memberidx2.i.i50.i.i = getelementptr inbounds %string, ptr %84, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i50.i.i, align 4
  %85 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %86 = call ptr %85(ptr nonnull %84)
  %87 = load i64, ptr %memberidx1.i.i49.i.i, align 4
  call void @write(i64 1, ptr %86, i64 %87)
  %88 = load ptr, ptr %memberidx.i.i48.i.i, align 8
  call void @free(ptr %88)
  call void @free(ptr %84)
  %89 = icmp sge i64 %storemerge1314, %62
  store i1 %89, ptr %81, align 1
  %90 = add nuw nsw i64 %storemerge1314, 1
  br i1 %89, label %print_error.exit, label %for.body12.i.i

print_error.exit:                                 ; preds = %for.body12.i.i, %for.end.i.i
  call void @free(ptr nonnull %81)
  %91 = call ptr @malloc(i32 4)
  store i32 1831885595, ptr %91, align 8
  %92 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %92, align 8
  %memberidx.i.i1.i.i.i = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  store ptr %91, ptr %memberidx.i.i1.i.i.i, align 8
  %memberidx1.i.i2.i.i.i = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i2.i.i.i, align 4
  %memberidx2.i.i3.i.i.i = getelementptr inbounds %string, ptr %92, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i3.i.i.i, align 4
  %93 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %94 = call ptr %93(ptr nonnull %92)
  %95 = load i64, ptr %memberidx1.i.i2.i.i.i, align 4
  call void @write(i64 1, ptr %94, i64 %95)
  %96 = load ptr, ptr %memberidx.i.i1.i.i.i, align 8
  call void @free(ptr %96)
  call void @free(ptr %92)
  %97 = call ptr @malloc(i32 1)
  store i8 10, ptr %97, align 8
  %98 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %98, align 8
  %memberidx.i.i59.i.i = getelementptr inbounds %string, ptr %98, i64 0, i32 1
  store ptr %97, ptr %memberidx.i.i59.i.i, align 8
  %memberidx1.i.i60.i.i = getelementptr inbounds %string, ptr %98, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i60.i.i, align 4
  %memberidx2.i.i61.i.i = getelementptr inbounds %string, ptr %98, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i61.i.i, align 4
  %99 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %100 = call ptr %99(ptr nonnull %98)
  %101 = load i64, ptr %memberidx1.i.i60.i.i, align 4
  call void @write(i64 1, ptr %100, i64 %101)
  %102 = load ptr, ptr %memberidx.i.i59.i.i, align 8
  call void @free(ptr %102)
  call void @free(ptr %98)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  br label %common.ret
}

define internal void @Compiler_set_std_path(ptr nocapture writeonly %0, ptr %1) {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  store ptr %1, ptr %memberidx, align 8
  %4 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %4, ptr noundef nonnull align 8 dereferenceable(21) @26, i64 21, i1 false)
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %5, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  store ptr %4, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  store i64 21, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 3
  store i64 21, ptr %memberidx2.i.i, align 4
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %6 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i, align 8
  %8 = tail call ptr %7(ptr nonnull %1)
  %9 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %10 = tail call ptr %9(ptr nonnull %5)
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @27, ptr %8, ptr %10)
  %12 = load ptr, ptr %3, align 8
  %13 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i5 = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i5, align 8
  %memberidx1.i.i6 = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i.i6, align 4
  %memberidx2.i.i7 = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i.i7, align 4
  call void @free(ptr %8)
  call void @free(ptr %10)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  store ptr %13, ptr %memberidx1, align 8
  %14 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %14)
  tail call void @free(ptr %5)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FloError__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FloError__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FloError_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal ptr @Compiler_register_file(ptr nocapture readonly %0, ptr %1) {
  %buf.i.i = alloca [400 x i8], align 1
  %3 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %3, i64 0, i32 4
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = tail call ptr @malloc(i32 1)
  store i8 64, ptr %5, align 8
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %6, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  store ptr %5, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i.i, align 4
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %memberidx1.i, align 8
  %8 = tail call ptr %4(ptr nonnull %1, ptr nonnull %6, ptr %7)
  %9 = tail call ptr @malloc(i32 4)
  store i32 1869375022, ptr %9, align 8
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i6.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i6.i, align 8
  %memberidx1.i.i7.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i7.i, align 4
  %memberidx2.i.i8.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i8.i, align 4
  %11 = load ptr, ptr %8, align 8
  %memberidx2.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 6
  %12 = load ptr, ptr %memberidx2.i, align 8
  %13 = tail call i1 %12(ptr nonnull %8, ptr nonnull %10)
  br i1 %13, label %Compiler_find_module_path.exit, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %memberidx.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  %14 = load i64, ptr %memberidx.i.i, align 4
  %15 = load i64, ptr %memberidx1.i.i7.i, align 4
  %16 = add nuw i64 %15, %14
  %memberidx2.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i.i, align 8
  %18 = tail call ptr @realloc(ptr %17, i64 %16)
  store ptr %18, ptr %memberidx2.i.i, align 8
  %19 = load i64, ptr %memberidx.i.i, align 4
  %20 = getelementptr inbounds i8, ptr %18, i64 %19
  %21 = load ptr, ptr %memberidx.i.i6.i, align 8
  %22 = load i64, ptr %memberidx1.i.i7.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %20, ptr align 8 %21, i64 %22, i1 false)
  store i64 %16, ptr %memberidx.i.i, align 4
  br label %Compiler_find_module_path.exit

Compiler_find_module_path.exit:                   ; preds = %2, %if.entry.i
  call void @llvm.lifetime.start.p0(i64 400, ptr nonnull %buf.i.i)
  %23 = load ptr, ptr %8, align 8
  %memberidx.i9.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx.i9.i, align 8
  %25 = tail call ptr %24(ptr nonnull %8)
  %26 = call ptr @realpath(ptr %25, ptr nonnull %buf.i.i)
  %27 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %buf.i.i)
  %28 = trunc i64 %27 to i32
  %29 = call ptr @malloc(i32 %28)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %29, ptr nonnull align 8 %buf.i.i, i64 %27, i1 false)
  %30 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %30, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 1
  store ptr %29, ptr %memberidx.i.i.i.i, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 2
  store i64 %27, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 3
  store i64 %27, ptr %memberidx2.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %buf.i.i)
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 7
  %31 = load ptr, ptr %memberidx, align 8
  %32 = call fastcc i64 @Map_string_FileId__hash_fnc(ptr nonnull %30)
  %memberidx.i15 = getelementptr inbounds %Map_string_FileId_, ptr %31, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i15, align 4
  %34 = urem i64 %32, %33
  %35 = load ptr, ptr %31, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %35, i64 %34
  %36 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %36, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %Compiler_find_module_path.exit, %else.i
  %37 = phi ptr [ %47, %else.i ], [ %35, %Compiler_find_module_path.exit ]
  %38 = phi i64 [ %48, %else.i ], [ %33, %Compiler_find_module_path.exit ]
  %39 = phi ptr [ %51, %else.i ], [ %36, %Compiler_find_module_path.exit ]
  %hash.0.i = phi i64 [ %50, %else.i ], [ %34, %Compiler_find_module_path.exit ]
  %40 = load ptr, ptr %39, align 8
  %memberidx.i.i16 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  %41 = load i64, ptr %memberidx.i.i16, align 4
  %42 = load i64, ptr %memberidx1.i.i.i.i, align 4
  %.not.i.i = icmp eq i64 %41, %42
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i18 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  %43 = load ptr, ptr %memberidx2.i.i18, align 8
  %44 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %45 = call i64 @memcmp(ptr %43, ptr %44, i64 %41)
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i15, align 4
  %.pre30 = load ptr, ptr %31, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre31.pre = load ptr, ptr %31, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre31.pre, i64 %hash.0.i
  %.pre32.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre32.pre, null
  br i1 %.not29.i, label %ifend, label %Map_string_FileId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %47 = phi ptr [ %.pre30, %ifend.i.i.else.i_crit_edge ], [ %37, %while.entry.i ]
  %48 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %38, %while.entry.i ]
  %49 = add nuw i64 %hash.0.i, 1
  %50 = urem i64 %49, %48
  %ptridx7.i = getelementptr inbounds ptr, ptr %47, i64 %50
  %51 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %51, null
  br i1 %.not30.i, label %ifend, label %while.entry.i

Map_string_FileId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_FileId_, ptr %.pre32.pre, i64 0, i32 1
  %52 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %52, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_string_FileId____getitem__.exit, %Array_FloFile____sl__.exit
  %common.ret.op = phi ptr [ %53, %Array_FloFile____sl__.exit ], [ %52, %Map_string_FileId____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %Compiler_find_module_path.exit, %while.end.i, %Map_string_FileId____getitem__.exit
  %53 = tail call ptr @malloc(i32 8)
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FloFile_, ptr %54, i64 0, i32 2
  %55 = load i64, ptr %memberidx2, align 4
  store i64 %55, ptr %53, align 4
  %56 = load ptr, ptr %memberidx, align 8
  call fastcc void @Map_string_FileId____setitem__(ptr %56, ptr nonnull %30, ptr nonnull %53)
  %57 = load ptr, ptr %memberidx1, align 8
  %58 = tail call ptr @malloc(i32 16)
  store ptr %30, ptr %58, align 8
  %memberidx1.i19 = getelementptr inbounds %FloFile, ptr %58, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i19, align 8
  %memberidx.i20 = getelementptr inbounds %Array_FloFile_, ptr %57, i64 0, i32 2
  %59 = load i64, ptr %memberidx.i20, align 4
  %memberidx1.i21 = getelementptr inbounds %Array_FloFile_, ptr %57, i64 0, i32 3
  %60 = load i64, ptr %memberidx1.i21, align 4
  %.not.i22 = icmp slt i64 %59, %60
  br i1 %.not.i22, label %ifend.Array_FloFile____sl__.exit_crit_edge, label %if.entry.i25

ifend.Array_FloFile____sl__.exit_crit_edge:       ; preds = %ifend
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_FloFile_, ptr %57, i64 0, i32 1
  %.pre34 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_FloFile____sl__.exit

if.entry.i25:                                     ; preds = %ifend
  %61 = shl nuw i64 %60, 1
  store i64 %61, ptr %memberidx1.i21, align 4
  %memberidx2.i.i24 = getelementptr inbounds %Array_FloFile_, ptr %57, i64 0, i32 1
  %62 = load ptr, ptr %memberidx2.i.i24, align 8
  %63 = shl i64 %60, 4
  %64 = call ptr @realloc(ptr %62, i64 %63)
  store ptr %64, ptr %memberidx2.i.i24, align 8
  %.pre33 = load i64, ptr %memberidx.i20, align 4
  br label %Array_FloFile____sl__.exit

Array_FloFile____sl__.exit:                       ; preds = %ifend.Array_FloFile____sl__.exit_crit_edge, %if.entry.i25
  %65 = phi ptr [ %.pre34, %ifend.Array_FloFile____sl__.exit_crit_edge ], [ %64, %if.entry.i25 ]
  %66 = phi i64 [ %59, %ifend.Array_FloFile____sl__.exit_crit_edge ], [ %.pre33, %if.entry.i25 ]
  %67 = add nsw i64 %66, 1
  store i64 %67, ptr %memberidx.i20, align 4
  %ptridx.i26 = getelementptr inbounds ptr, ptr %65, i64 %66
  store ptr %58, ptr %ptridx.i26, align 8
  br label %common.ret
}

define internal i1 @Compiler_set_current_file(ptr nocapture %0, ptr %1) {
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %3 = load ptr, ptr %memberidx, align 8
  %4 = load i64, ptr %1, align 4
  %memberidx.i = getelementptr inbounds %Array_FloFile_, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %5, i64 %4
  %6 = load ptr, ptr %ptridx.i, align 8
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %memberidx.i14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %8, i64 0, i32 5
  %9 = load ptr, ptr %memberidx.i14, align 8
  %10 = tail call ptr %9(ptr nonnull %7)
  %11 = tail call i64 @access(ptr %10, i64 0)
  %12 = icmp eq i64 %11, 0
  tail call void @free(ptr %10)
  br i1 %12, label %ifend, label %common.ret

common.ret:                                       ; preds = %2, %Compiler_unlink_current_file_contents.exit
  ret i1 %12

ifend:                                            ; preds = %2
  %13 = load ptr, ptr %6, align 8
  %14 = load ptr, ptr %13, align 8
  %memberidx.i15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %14, i64 0, i32 5
  %15 = load ptr, ptr %memberidx.i15, align 8
  %16 = tail call ptr %15(ptr nonnull %13)
  %17 = tail call i64 @fopen(ptr %16, ptr nonnull @28)
  tail call void @free(ptr %16)
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %File_open_for_reading.exit, label %ifend.i

ifend.i:                                          ; preds = %ifend
  %19 = tail call ptr @malloc(i32 16)
  store ptr @VTableFile, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %File, ptr %19, i64 0, i32 1
  store i64 %17, ptr %memberidx.i.i, align 4
  br label %File_open_for_reading.exit

File_open_for_reading.exit:                       ; preds = %ifend, %ifend.i
  %common.ret.op.i = phi ptr [ %19, %ifend.i ], [ null, %ifend ]
  %memberidx.i16 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 3
  %20 = load ptr, ptr %memberidx.i16, align 8
  %.not.i = icmp eq ptr %20, null
  br i1 %.not.i, label %Compiler_unlink_current_file_contents.exit, label %if.entry.i

if.entry.i:                                       ; preds = %File_open_for_reading.exit
  %memberidx.i.i17 = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i.i17, align 8
  tail call void @free(ptr %21)
  tail call void @free(ptr nonnull %20)
  br label %Compiler_unlink_current_file_contents.exit

Compiler_unlink_current_file_contents.exit:       ; preds = %File_open_for_reading.exit, %if.entry.i
  %22 = load ptr, ptr %common.ret.op.i, align 8
  %23 = load ptr, ptr %22, align 8
  %24 = tail call ptr %23(ptr nonnull %common.ret.op.i)
  store ptr %24, ptr %memberidx.i16, align 8
  %memberidx6 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 1
  store ptr %1, ptr %memberidx6, align 8
  %25 = load ptr, ptr %common.ret.op.i, align 8
  %memberidx7 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx7, align 8
  tail call void %26(ptr nonnull %common.ret.op.i)
  br label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FloFile__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FloFile__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FloFile_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal ptr @Compiler_add_builtins(ptr %0) {
  %2 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call ptr %3(ptr nonnull %0, ptr %4)
  ret ptr %5
}

define internal void @Compiler___del__(ptr nocapture readonly %0) {
for.entry:
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %1 = load ptr, ptr %memberidx, align 8
  %2 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_FloFile_, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Array_FloFile_, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx1.i, align 4
  %5 = icmp slt i64 %4, 1
  br i1 %5, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %6 = phi i64 [ %11, %for.body ], [ 1, %for.entry ]
  %file.093.in = phi ptr [ %ptridx.i42, %for.body ], [ %3, %for.entry ]
  %file.093 = load ptr, ptr %file.093.in, align 8
  %7 = load ptr, ptr %file.093, align 8
  %memberidx.i.i38 = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i.i38, align 8
  tail call void @free(ptr %8)
  tail call void @free(ptr %7)
  %memberidx1.i39 = getelementptr inbounds %FloFile, ptr %file.093, i64 0, i32 1
  %9 = load ptr, ptr %memberidx1.i39, align 8
  %memberidx.i3.i = getelementptr inbounds %string, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i3.i, align 8
  tail call void @free(ptr %10)
  tail call void @free(ptr %9)
  tail call void @free(ptr %file.093)
  %11 = add nuw nsw i64 %6, 1
  %ptridx.i42 = getelementptr inbounds ptr, ptr %3, i64 %6
  %.not = icmp slt i64 %6, %4
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %2)
  %12 = load ptr, ptr %memberidx, align 8
  %memberidx.i44 = getelementptr inbounds %Array_FloFile_, ptr %12, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i44, align 8
  tail call void @free(ptr %13)
  tail call void @free(ptr %12)
  %memberidx6 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 6
  %14 = load ptr, ptr %memberidx6, align 8
  %15 = tail call ptr @malloc(i32 25)
  %memberidx.i45 = getelementptr inbounds %Array_FloError_, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i45, align 8
  %memberidx1.i46 = getelementptr inbounds %Array_FloError_, ptr %14, i64 0, i32 2
  %17 = load i64, ptr %memberidx1.i46, align 4
  store i1 false, ptr %15, align 1
  %memberidx1.i.i47 = getelementptr inbounds %ArrayIterator_FloError_, ptr %15, i64 0, i32 1
  %memberidx2.i.i48 = getelementptr inbounds %ArrayIterator_FloError_, ptr %15, i64 0, i32 3
  store ptr %16, ptr %memberidx2.i.i48, align 8
  %memberidx3.i.i49 = getelementptr inbounds %ArrayIterator_FloError_, ptr %15, i64 0, i32 2
  store i64 %17, ptr %memberidx3.i.i49, align 4
  store i64 1, ptr %memberidx1.i.i47, align 4
  %18 = icmp slt i64 %17, 1
  br i1 %18, label %for.end10, label %for.body8

for.body8:                                        ; preds = %for.end, %for.body8
  %19 = phi i64 [ %20, %for.body8 ], [ 1, %for.end ]
  %error.089.in = phi ptr [ %ptridx.i56, %for.body8 ], [ %16, %for.end ]
  %error.089 = load ptr, ptr %error.089.in, align 8
  tail call void @free(ptr %error.089)
  %20 = add nuw nsw i64 %19, 1
  %ptridx.i56 = getelementptr inbounds ptr, ptr %16, i64 %19
  %.not105 = icmp slt i64 %19, %17
  br i1 %.not105, label %for.body8, label %for.cond7.for.end10_crit_edge

for.cond7.for.end10_crit_edge:                    ; preds = %for.body8
  store i64 %20, ptr %memberidx1.i.i47, align 4
  br label %for.end10

for.end10:                                        ; preds = %for.cond7.for.end10_crit_edge, %for.end
  tail call void @free(ptr nonnull %15)
  %21 = load ptr, ptr %memberidx6, align 8
  %memberidx.i58 = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i58, align 8
  tail call void @free(ptr %22)
  tail call void @free(ptr %21)
  %memberidx14 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 7
  %23 = load ptr, ptr %memberidx14, align 8
  %24 = tail call ptr @malloc(i32 25)
  %25 = load ptr, ptr %23, align 8
  %memberidx1.i59 = getelementptr inbounds %Map_string_FileId_, ptr %23, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i59, align 4
  %memberidx2.i60 = getelementptr inbounds %Map_string_FileId_, ptr %23, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i60, align 4
  store i1 false, ptr %24, align 1
  %memberidx1.i.i61 = getelementptr inbounds %MapIterator_string_FileId_, ptr %24, i64 0, i32 1
  store ptr %25, ptr %memberidx1.i.i61, align 8
  %memberidx2.i.i62 = getelementptr inbounds %MapIterator_string_FileId_, ptr %24, i64 0, i32 2
  %memberidx3.i.i63 = getelementptr inbounds %MapIterator_string_FileId_, ptr %24, i64 0, i32 3
  store i64 %27, ptr %memberidx3.i.i63, align 4
  %28 = add nsw i64 %26, -1
  store i64 %28, ptr %memberidx2.i.i62, align 4
  %29 = icmp sgt i64 %26, 0
  br i1 %29, label %while.entry.i, label %MapIterator_string_FileId__next.exit

while.entry.i:                                    ; preds = %for.end10, %ifend.i
  %30 = phi i64 [ %33, %ifend.i ], [ %28, %for.end10 ]
  %31 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %25, %for.end10 ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %31, i64 1
  %32 = load ptr, ptr %31, align 8
  %.not.i66 = icmp eq ptr %32, null
  br i1 %.not.i66, label %ifend.i, label %MapIterator_string_FileId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %33 = add nsw i64 %30, -1
  store i64 %33, ptr %memberidx2.i.i62, align 4
  %34 = icmp sgt i64 %30, 0
  br i1 %34, label %while.entry.i, label %MapIterator_string_FileId__next.exit.loopexit

MapIterator_string_FileId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %memberidx2.i.i62.promoted104 = phi i64 [ %33, %ifend.i ], [ %30, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i61, align 8
  br label %MapIterator_string_FileId__next.exit

MapIterator_string_FileId__next.exit:             ; preds = %MapIterator_string_FileId__next.exit.loopexit, %for.end10
  %memberidx2.i.i62.promoted = phi i64 [ %memberidx2.i.i62.promoted104, %MapIterator_string_FileId__next.exit.loopexit ], [ %28, %for.end10 ]
  %memberidx1.i.i61.promoted85 = phi ptr [ %incdec.ptr.i, %MapIterator_string_FileId__next.exit.loopexit ], [ %25, %for.end10 ]
  %storemerge7882 = icmp slt i64 %27, 1
  br i1 %storemerge7882, label %for.end18, label %for.body16

for.body16:                                       ; preds = %MapIterator_string_FileId__next.exit, %MapIterator_string_FileId__next.exit76
  %35 = phi i64 [ %44, %MapIterator_string_FileId__next.exit76 ], [ %memberidx2.i.i62.promoted, %MapIterator_string_FileId__next.exit ]
  %incdec.ptr.i69.lcssa87 = phi ptr [ %incdec.ptr.i69.lcssa86, %MapIterator_string_FileId__next.exit76 ], [ %memberidx1.i.i61.promoted85, %MapIterator_string_FileId__next.exit ]
  %storemerge7983.in = phi i64 [ %storemerge7983, %MapIterator_string_FileId__next.exit76 ], [ %27, %MapIterator_string_FileId__next.exit ]
  %storemerge7983 = add nsw i64 %storemerge7983.in, -1
  %file_id.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i69.lcssa87, i64 -1
  %file_id.0 = load ptr, ptr %file_id.0.in, align 8
  tail call void @free(ptr %file_id.0)
  %36 = add nsw i64 %35, -1
  %37 = icmp sgt i64 %35, 0
  br i1 %37, label %while.entry.i71.preheader, label %MapIterator_string_FileId__next.exit76

while.entry.i71.preheader:                        ; preds = %for.body16
  %38 = shl i64 %35, 3
  %uglygep = getelementptr i8, ptr %incdec.ptr.i69.lcssa87, i64 %38
  br label %while.entry.i71

while.entry.i71:                                  ; preds = %while.entry.i71.preheader, %ifend.i75
  %39 = phi i64 [ %42, %ifend.i75 ], [ %36, %while.entry.i71.preheader ]
  %40 = phi ptr [ %incdec.ptr.i69, %ifend.i75 ], [ %incdec.ptr.i69.lcssa87, %while.entry.i71.preheader ]
  %incdec.ptr.i69 = getelementptr inbounds ptr, ptr %40, i64 1
  %41 = load ptr, ptr %40, align 8
  %.not.i70 = icmp eq ptr %41, null
  br i1 %.not.i70, label %ifend.i75, label %MapIterator_string_FileId__next.exit76

ifend.i75:                                        ; preds = %while.entry.i71
  %42 = add nsw i64 %39, -1
  %43 = icmp sgt i64 %39, 0
  br i1 %43, label %while.entry.i71, label %MapIterator_string_FileId__next.exit76

MapIterator_string_FileId__next.exit76:           ; preds = %while.entry.i71, %ifend.i75, %for.body16
  %44 = phi i64 [ %36, %for.body16 ], [ %39, %while.entry.i71 ], [ -1, %ifend.i75 ]
  %incdec.ptr.i69.lcssa86 = phi ptr [ %incdec.ptr.i69.lcssa87, %for.body16 ], [ %incdec.ptr.i69, %while.entry.i71 ], [ %uglygep, %ifend.i75 ]
  %storemerge78 = icmp slt i64 %storemerge7983.in, 2
  br i1 %storemerge78, label %for.cond15.for.end18_crit_edge, label %for.body16

for.cond15.for.end18_crit_edge:                   ; preds = %MapIterator_string_FileId__next.exit76
  store ptr %incdec.ptr.i69.lcssa86, ptr %memberidx1.i.i61, align 8
  store i64 %44, ptr %memberidx2.i.i62, align 4
  br label %for.end18

for.end18:                                        ; preds = %for.cond15.for.end18_crit_edge, %MapIterator_string_FileId__next.exit
  tail call void @free(ptr nonnull %24)
  %45 = load ptr, ptr %memberidx14, align 8
  %46 = load ptr, ptr %45, align 8
  tail call void @free(ptr %46)
  tail call void @free(ptr %45)
  %memberidx.i37 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 3
  %47 = load ptr, ptr %memberidx.i37, align 8
  %.not.i = icmp eq ptr %47, null
  br i1 %.not.i, label %Compiler_unlink_current_file_contents.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end18
  %memberidx.i.i = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %48)
  tail call void @free(ptr nonnull %47)
  br label %Compiler_unlink_current_file_contents.exit

Compiler_unlink_current_file_contents.exit:       ; preds = %for.end18, %if.entry.i
  ret void
}

define internal fastcc void @Map_string_FileId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.041 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.041
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.041, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.040 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %i1.040
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_FileId_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_FileId____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %i1.040, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_FileId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_FileId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_FileId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_FileId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i38 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %25, %ifend9 ], [ %13, %while.entry.preheader ]
  %16 = phi i64 [ %26, %ifend9 ], [ %11, %while.entry.preheader ]
  %17 = phi ptr [ %29, %ifend9 ], [ %14, %while.entry.preheader ]
  %hash.0 = phi i64 [ %28, %ifend9 ], [ %12, %while.entry.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = load i64, ptr %memberidx1.i38, align 4
  %.not.i = icmp eq i64 %19, %20
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load ptr, ptr %memberidx3.i, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %ifend15.loopexit, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre45 = load ptr, ptr %0, align 8
  br label %ifend9

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %25 = phi ptr [ %.pre45, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %26 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %27 = add nuw i64 %hash.0, 1
  %28 = urem i64 %27, %26
  %ptridx12 = getelementptr inbounds ptr, ptr %25, i64 %28
  %29 = load ptr, ptr %ptridx12, align 8
  %.not37 = icmp eq ptr %29, null
  br i1 %.not37, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %30 = phi ptr [ %13, %ifend ], [ %25, %ifend9 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %28, %ifend9 ]
  %31 = load i64, ptr %memberidx, align 4
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx, align 4
  br label %ifend15

ifend15.loopexit:                                 ; preds = %ifend.i
  %.pre46 = load ptr, ptr %0, align 8
  br label %ifend15

ifend15:                                          ; preds = %ifend15.loopexit, %if.entry13
  %33 = phi ptr [ %30, %if.entry13 ], [ %.pre46, %ifend15.loopexit ]
  %hash.141 = phi i64 [ %hash.1.ph, %if.entry13 ], [ %hash.0, %ifend15.loopexit ]
  %ptridx19 = getelementptr inbounds ptr, ptr %33, i64 %hash.141
  %34 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %34, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_FileId_, ptr %34, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %34, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_FileId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @24, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

; Function Attrs: nofree nounwind
declare noundef ptr @realpath(ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #9

declare ptr @dirname(ptr) local_unnamed_addr

define internal i64 @File_write_string(ptr nocapture readonly %0, ptr %1) {
  %3 = load ptr, ptr %1, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %3, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr %4(ptr nonnull %1)
  %memberidx1 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %6 = load i64, ptr %memberidx1, align 4
  %memberidx2 = getelementptr inbounds %File, ptr %0, i64 0, i32 1
  %7 = load i64, ptr %memberidx2, align 4
  %8 = tail call i64 @fwrite(ptr %5, i64 1, i64 %6, i64 %7)
  ret i64 %8
}

define internal noalias ptr @File_read_all(ptr nocapture readonly %0) {
  %buffer = alloca [1024 x i8], align 1
  %2 = tail call ptr @malloc(i32 0)
  %memberidx = getelementptr inbounds %File, ptr %0, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  %4 = call i64 @fread(ptr nonnull %buffer, i64 1, i64 1024, i64 %3)
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %ifend, %1
  %size.0.lcssa = phi i64 [ 0, %1 ], [ %8, %ifend ]
  %allocated_mem.0.lcssa = phi ptr [ %2, %1 ], [ %9, %ifend ]
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %6, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  store ptr %allocated_mem.0.lcssa, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  store i64 %size.0.lcssa, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %6, i64 0, i32 3
  store i64 %size.0.lcssa, ptr %memberidx2.i, align 4
  ret ptr %6

ifend:                                            ; preds = %1, %ifend
  %7 = phi i64 [ %12, %ifend ], [ %4, %1 ]
  %allocated_mem.013 = phi ptr [ %9, %ifend ], [ %2, %1 ]
  %size.012 = phi i64 [ %8, %ifend ], [ 0, %1 ]
  %8 = add nuw i64 %7, %size.012
  %9 = call ptr @realloc(ptr %allocated_mem.013, i64 %8)
  %10 = getelementptr inbounds i8, ptr %9, i64 %size.012
  call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %10, ptr nonnull align 1073741824 %buffer, i64 %7, i1 false)
  %11 = load i64, ptr %memberidx, align 4
  %12 = call i64 @fread(ptr nonnull %buffer, i64 1, i64 1024, i64 %11)
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %if.entry, label %ifend
}

define internal i64 @File_write_bytes_length(ptr nocapture readonly %0, ptr %1, i64 %2) {
  %memberidx = getelementptr inbounds %File, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx, align 4
  %5 = tail call i64 @fwrite(ptr %1, i64 1, i64 %2, i64 %4)
  ret i64 %5
}

define internal void @File_close(ptr nocapture readonly %0) {
  %memberidx = getelementptr inbounds %File, ptr %0, i64 0, i32 1
  %2 = load i64, ptr %memberidx, align 4
  tail call void @fclose(i64 %2)
  ret void
}

declare i64 @fopen(ptr, ptr) local_unnamed_addr

declare i64 @fread(ptr, i64, i64, i64) local_unnamed_addr

declare i64 @fwrite(ptr, i64, i64, i64) local_unnamed_addr

; Function Attrs: nofree nounwind
declare noundef i64 @access(ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #9

declare void @fclose(i64) local_unnamed_addr

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ScopeId__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ScopeId_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ScopeId_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ScopeId__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ScopeId_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ScopeId_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc void @Map_string_VarId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.041 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.041
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.041, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.040 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %i1.040
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_VarId_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %i1.040, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_VarId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_VarId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_VarId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i38 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %25, %ifend9 ], [ %13, %while.entry.preheader ]
  %16 = phi i64 [ %26, %ifend9 ], [ %11, %while.entry.preheader ]
  %17 = phi ptr [ %29, %ifend9 ], [ %14, %while.entry.preheader ]
  %hash.0 = phi i64 [ %28, %ifend9 ], [ %12, %while.entry.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = load i64, ptr %memberidx1.i38, align 4
  %.not.i = icmp eq i64 %19, %20
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load ptr, ptr %memberidx3.i, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %ifend15.loopexit, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre45 = load ptr, ptr %0, align 8
  br label %ifend9

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %25 = phi ptr [ %.pre45, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %26 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %27 = add nuw i64 %hash.0, 1
  %28 = urem i64 %27, %26
  %ptridx12 = getelementptr inbounds ptr, ptr %25, i64 %28
  %29 = load ptr, ptr %ptridx12, align 8
  %.not37 = icmp eq ptr %29, null
  br i1 %.not37, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %30 = phi ptr [ %13, %ifend ], [ %25, %ifend9 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %28, %ifend9 ]
  %31 = load i64, ptr %memberidx, align 4
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx, align 4
  br label %ifend15

ifend15.loopexit:                                 ; preds = %ifend.i
  %.pre46 = load ptr, ptr %0, align 8
  br label %ifend15

ifend15:                                          ; preds = %ifend15.loopexit, %if.entry13
  %33 = phi ptr [ %30, %if.entry13 ], [ %.pre46, %ifend15.loopexit ]
  %hash.141 = phi i64 [ %hash.1.ph, %if.entry13 ], [ %hash.0, %ifend15.loopexit ]
  %ptridx19 = getelementptr inbounds ptr, ptr %33, i64 %hash.141
  %34 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %34, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %34, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %34, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_VarId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @24, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

; Function Attrs: mustprogress nounwind willreturn
define internal fastcc void @Scope___del__(ptr nocapture readonly %0) unnamed_addr #10 {
  %2 = load ptr, ptr %0, align 8
  tail call void @free(ptr %2)
  %memberidx1 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load ptr, ptr %3, align 8
  tail call void @free(ptr %4)
  tail call void @free(ptr %3)
  %memberidx2 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %memberidx2, align 8
  %6 = load ptr, ptr %5, align 8
  tail call void @free(ptr %6)
  tail call void @free(ptr %5)
  %memberidx3 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = load ptr, ptr %7, align 8
  tail call void @free(ptr %8)
  tail call void @free(ptr %7)
  %memberidx4 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 4
  %9 = load ptr, ptr %memberidx4, align 8
  %10 = load ptr, ptr %9, align 8
  tail call void @free(ptr %10)
  tail call void @free(ptr %9)
  %memberidx5 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 6
  %11 = load ptr, ptr %memberidx5, align 8
  %12 = load ptr, ptr %11, align 8
  tail call void @free(ptr %12)
  tail call void @free(ptr %11)
  ret void
}

define internal fastcc void @Map_string_EnumId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.041 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.041
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.041, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.040 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %i1.040
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_EnumId_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %i1.040, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_EnumId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_EnumId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_EnumId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_EnumId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i38 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %25, %ifend9 ], [ %13, %while.entry.preheader ]
  %16 = phi i64 [ %26, %ifend9 ], [ %11, %while.entry.preheader ]
  %17 = phi ptr [ %29, %ifend9 ], [ %14, %while.entry.preheader ]
  %hash.0 = phi i64 [ %28, %ifend9 ], [ %12, %while.entry.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = load i64, ptr %memberidx1.i38, align 4
  %.not.i = icmp eq i64 %19, %20
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load ptr, ptr %memberidx3.i, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %ifend15.loopexit, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre45 = load ptr, ptr %0, align 8
  br label %ifend9

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %25 = phi ptr [ %.pre45, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %26 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %27 = add nuw i64 %hash.0, 1
  %28 = urem i64 %27, %26
  %ptridx12 = getelementptr inbounds ptr, ptr %25, i64 %28
  %29 = load ptr, ptr %ptridx12, align 8
  %.not37 = icmp eq ptr %29, null
  br i1 %.not37, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %30 = phi ptr [ %13, %ifend ], [ %25, %ifend9 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %28, %ifend9 ]
  %31 = load i64, ptr %memberidx, align 4
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx, align 4
  br label %ifend15

ifend15.loopexit:                                 ; preds = %ifend.i
  %.pre46 = load ptr, ptr %0, align 8
  br label %ifend15

ifend15:                                          ; preds = %ifend15.loopexit, %if.entry13
  %33 = phi ptr [ %30, %if.entry13 ], [ %.pre46, %ifend15.loopexit ]
  %hash.141 = phi i64 [ %hash.1.ph, %if.entry13 ], [ %hash.0, %ifend15.loopexit ]
  %ptridx19 = getelementptr inbounds ptr, ptr %33, i64 %hash.141
  %34 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %34, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_EnumId_, ptr %34, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %34, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_EnumId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @24, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_string_Type__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.041 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.041
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.041, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.040 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %i1.040
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_Type_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %i1.040, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_Type____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_Type_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_Type__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_Type__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i38 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %25, %ifend9 ], [ %13, %while.entry.preheader ]
  %16 = phi i64 [ %26, %ifend9 ], [ %11, %while.entry.preheader ]
  %17 = phi ptr [ %29, %ifend9 ], [ %14, %while.entry.preheader ]
  %hash.0 = phi i64 [ %28, %ifend9 ], [ %12, %while.entry.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = load i64, ptr %memberidx1.i38, align 4
  %.not.i = icmp eq i64 %19, %20
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load ptr, ptr %memberidx3.i, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %ifend15.loopexit, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre45 = load ptr, ptr %0, align 8
  br label %ifend9

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %25 = phi ptr [ %.pre45, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %26 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %27 = add nuw i64 %hash.0, 1
  %28 = urem i64 %27, %26
  %ptridx12 = getelementptr inbounds ptr, ptr %25, i64 %28
  %29 = load ptr, ptr %ptridx12, align 8
  %.not37 = icmp eq ptr %29, null
  br i1 %.not37, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %30 = phi ptr [ %13, %ifend ], [ %25, %ifend9 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %28, %ifend9 ]
  %31 = load i64, ptr %memberidx, align 4
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx, align 4
  br label %ifend15

ifend15.loopexit:                                 ; preds = %ifend.i
  %.pre46 = load ptr, ptr %0, align 8
  br label %ifend15

ifend15:                                          ; preds = %ifend15.loopexit, %if.entry13
  %33 = phi ptr [ %30, %if.entry13 ], [ %.pre46, %ifend15.loopexit ]
  %hash.141 = phi i64 [ %hash.1.ph, %if.entry13 ], [ %hash.0, %ifend15.loopexit ]
  %ptridx19 = getelementptr inbounds ptr, ptr %33, i64 %hash.141
  %34 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %34, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_Type_, ptr %34, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %34, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_Type__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @24, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_string_ClassId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.041 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.041
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.041, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.040 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %i1.040
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_ClassId_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %i1.040, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_ClassId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_ClassId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_ClassId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i38 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %25, %ifend9 ], [ %13, %while.entry.preheader ]
  %16 = phi i64 [ %26, %ifend9 ], [ %11, %while.entry.preheader ]
  %17 = phi ptr [ %29, %ifend9 ], [ %14, %while.entry.preheader ]
  %hash.0 = phi i64 [ %28, %ifend9 ], [ %12, %while.entry.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = load i64, ptr %memberidx1.i38, align 4
  %.not.i = icmp eq i64 %19, %20
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load ptr, ptr %memberidx3.i, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %ifend15.loopexit, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre45 = load ptr, ptr %0, align 8
  br label %ifend9

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %25 = phi ptr [ %.pre45, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %26 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %27 = add nuw i64 %hash.0, 1
  %28 = urem i64 %27, %26
  %ptridx12 = getelementptr inbounds ptr, ptr %25, i64 %28
  %29 = load ptr, ptr %ptridx12, align 8
  %.not37 = icmp eq ptr %29, null
  br i1 %.not37, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %30 = phi ptr [ %13, %ifend ], [ %25, %ifend9 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %28, %ifend9 ]
  %31 = load i64, ptr %memberidx, align 4
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx, align 4
  br label %ifend15

ifend15.loopexit:                                 ; preds = %ifend.i
  %.pre46 = load ptr, ptr %0, align 8
  br label %ifend15

ifend15:                                          ; preds = %ifend15.loopexit, %if.entry13
  %33 = phi ptr [ %30, %if.entry13 ], [ %.pre46, %ifend15.loopexit ]
  %hash.141 = phi i64 [ %hash.1.ph, %if.entry13 ], [ %hash.0, %ifend15.loopexit ]
  %ptridx19 = getelementptr inbounds ptr, ptr %33, i64 %hash.141
  %34 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %34, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_ClassId_, ptr %34, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %34, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_ClassId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @24, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Scope__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Scope__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Scope_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_VarDeclaration__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_VarDeclaration__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_VarDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Var__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Var__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Var_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ConstDeclaration__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ConstDeclaration__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ConstDeclaration_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc void @Map_string_PropId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.041 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.041
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.041, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.040 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %i1.040
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_PropId_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_PropId____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %i1.040, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_PropId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_PropId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_PropId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i38 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %25, %ifend9 ], [ %13, %while.entry.preheader ]
  %16 = phi i64 [ %26, %ifend9 ], [ %11, %while.entry.preheader ]
  %17 = phi ptr [ %29, %ifend9 ], [ %14, %while.entry.preheader ]
  %hash.0 = phi i64 [ %28, %ifend9 ], [ %12, %while.entry.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = load i64, ptr %memberidx1.i38, align 4
  %.not.i = icmp eq i64 %19, %20
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load ptr, ptr %memberidx3.i, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %ifend15.loopexit, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre45 = load ptr, ptr %0, align 8
  br label %ifend9

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %25 = phi ptr [ %.pre45, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %26 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %27 = add nuw i64 %hash.0, 1
  %28 = urem i64 %27, %26
  %ptridx12 = getelementptr inbounds ptr, ptr %25, i64 %28
  %29 = load ptr, ptr %ptridx12, align 8
  %.not37 = icmp eq ptr %29, null
  br i1 %.not37, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %30 = phi ptr [ %13, %ifend ], [ %25, %ifend9 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %28, %ifend9 ]
  %31 = load i64, ptr %memberidx, align 4
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx, align 4
  br label %ifend15

ifend15.loopexit:                                 ; preds = %ifend.i
  %.pre46 = load ptr, ptr %0, align 8
  br label %ifend15

ifend15:                                          ; preds = %ifend15.loopexit, %if.entry13
  %33 = phi ptr [ %30, %if.entry13 ], [ %.pre46, %ifend15.loopexit ]
  %hash.141 = phi i64 [ %hash.1.ph, %if.entry13 ], [ %hash.0, %ifend15.loopexit ]
  %ptridx19 = getelementptr inbounds ptr, ptr %33, i64 %hash.141
  %34 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %34, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %34, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %34, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_PropId__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @24, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_EnumField__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_EnumField__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_EnumField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Enum__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Enum__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Enum_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Const__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Const__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Const_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FunctionArg__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FunctionArg__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FunctionArg_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Statement__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Statement__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Statement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Type__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Type__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Type_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ClassMethod__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ClassMethod__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ClassMethod_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ClassField__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ClassField__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ClassField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Class__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Class__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Class_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Function__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Function__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Function_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Module__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Module__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Module_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Token__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Token__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Array_Token___pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Array_Token___find(ptr nocapture readonly %0, ptr nocapture readonly %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Array_Token__, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx1.i = getelementptr inbounds %Array_Token_, ptr %1, i64 0, i32 2
  %5 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i13.i = getelementptr inbounds %Array_Token_, ptr %1, i64 0, i32 1
  %6 = icmp sgt i64 %5, 0
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.010 = phi i64 [ 0, %for.body.lr.ph ], [ %15, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.010
  %7 = load ptr, ptr %ptridx, align 8
  %memberidx.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %8, %5
  br i1 %.not.i, label %for.cond.i.preheader, label %ifend

for.cond.i.preheader:                             ; preds = %for.body
  br i1 %6, label %for.body.i.lr.ph, label %common.ret

for.body.i.lr.ph:                                 ; preds = %for.cond.i.preheader
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i, align 8
  %10 = load ptr, ptr %memberidx.i13.i, align 8
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %11 = add nuw nsw i64 %i.0.i8, 1
  %12 = icmp slt i64 %11, %5
  br i1 %12, label %for.body.i, label %common.ret

for.body.i:                                       ; preds = %for.body.i.lr.ph, %for.cond.i
  %i.0.i8 = phi i64 [ 0, %for.body.i.lr.ph ], [ %11, %for.cond.i ]
  %ptridx.i.i = getelementptr inbounds ptr, ptr %9, i64 %i.0.i8
  %13 = load ptr, ptr %ptridx.i.i, align 8
  %ptridx.i14.i = getelementptr inbounds ptr, ptr %10, i64 %i.0.i8
  %14 = load ptr, ptr %ptridx.i14.i, align 8
  %.not12.i = icmp eq ptr %13, %14
  br i1 %.not12.i, label %for.cond.i, label %ifend

common.ret:                                       ; preds = %ifend, %for.cond.i.preheader, %for.cond.i, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.010, %for.cond.i ], [ %i.010, %for.cond.i.preheader ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body.i, %for.body
  %15 = add nuw nsw i64 %i.010, 1
  %16 = icmp slt i64 %15, %2
  br i1 %16, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal i64 @Array_uint__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_uint_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_uint_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds i64, ptr %4, i64 %2
  %5 = load i64, ptr %ptridx, align 4
  ret i64 %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_uint__find(ptr nocapture readonly %0, i64 %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_uint_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_uint_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds i64, ptr %4, i64 %i.06
  %5 = load i64, ptr %ptridx, align 4
  %6 = icmp eq i64 %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ImportClause__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ImportClause__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ImportClause_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ImportNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ImportNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ImportNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_VarDeclarationStatement__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_VarDeclarationStatement__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_EnumNodeField__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_EnumNodeField__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_EnumNodeField_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_EnumNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_EnumNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_EnumNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_TypeAliasNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_TypeAliasNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_TypeAliasNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ConstDeclarationStatement__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ConstDeclarationStatement__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ArgNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ArgNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ArgNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_StatementNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_StatementNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_StatementNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_MethodNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_MethodNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_MethodNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FieldNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FieldNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FieldNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_TypeNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_TypeNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_TypeNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_GenericParameterNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_GenericParameterNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_GenericParameterNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ClassDeclarationNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ClassDeclarationNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_FunctionDeclarationNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_FunctionDeclarationNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc void @ModuleAST_constructor(ptr nocapture writeonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FunctionDeclarationNode_, ptr %2, align 8
  %memberidx.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 2
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 1
  %3 = tail call ptr @malloc(i32 64)
  store ptr %3, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  store ptr %2, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 1
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ClassDeclarationNode_, ptr %4, align 8
  %memberidx.i27 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 2
  store i64 0, ptr %memberidx.i27, align 4
  %memberidx1.i28 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i28, align 4
  %memberidx2.i29 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i29, align 8
  store i64 0, ptr %memberidx.i27, align 4
  store ptr %4, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 3
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ImportNode_, ptr %6, align 8
  %memberidx.i30 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx.i30, align 4
  %memberidx1.i31 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 3
  store i64 8, ptr %memberidx1.i31, align 4
  %memberidx2.i32 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %memberidx2.i32, align 8
  store i64 0, ptr %memberidx.i30, align 4
  store ptr %6, ptr %memberidx6, align 8
  %memberidx9 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 4
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ConstDeclarationStatement_, ptr %8, align 8
  %memberidx.i33 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i33, align 4
  %memberidx1.i34 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 3
  store i64 8, ptr %memberidx1.i34, align 4
  %memberidx2.i35 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 1
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %memberidx2.i35, align 8
  store i64 0, ptr %memberidx.i33, align 4
  store ptr %8, ptr %memberidx9, align 8
  %memberidx12 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 5
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_VarDeclarationStatement_, ptr %10, align 8
  %memberidx.i36 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 2
  store i64 0, ptr %memberidx.i36, align 4
  %memberidx1.i37 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 3
  store i64 8, ptr %memberidx1.i37, align 4
  %memberidx2.i38 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 1
  %11 = tail call ptr @malloc(i32 64)
  store ptr %11, ptr %memberidx2.i38, align 8
  store i64 0, ptr %memberidx.i36, align 4
  store ptr %10, ptr %memberidx12, align 8
  %memberidx15 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 2
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_EnumNode_, ptr %12, align 8
  %memberidx.i39 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 2
  store i64 0, ptr %memberidx.i39, align 4
  %memberidx1.i40 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 3
  store i64 8, ptr %memberidx1.i40, align 4
  %memberidx2.i41 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %memberidx2.i41, align 8
  store i64 0, ptr %memberidx.i39, align 4
  store ptr %12, ptr %memberidx15, align 8
  %memberidx18 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 6
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeAliasNode_, ptr %14, align 8
  %memberidx.i42 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 2
  store i64 0, ptr %memberidx.i42, align 4
  %memberidx1.i43 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 3
  store i64 8, ptr %memberidx1.i43, align 4
  %memberidx2.i44 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 1
  %15 = tail call ptr @malloc(i32 64)
  store ptr %15, ptr %memberidx2.i44, align 8
  store i64 0, ptr %memberidx.i42, align 4
  store ptr %14, ptr %memberidx18, align 8
  ret void
}

define internal fastcc ptr @Lexer_tokenize(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Lexer, align 8
  %memberidx.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 1
  store ptr %0, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 2
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 5
  store i64 1, ptr %memberidx3.i, align 4
  %memberidx4.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 4
  store i64 0, ptr %memberidx4.i, align 4
  %memberidx2.i.i24 = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx2.i.i24, align 4
  %5 = icmp slt i64 %4, 0
  br i1 %5, label %Lexer_advance.exit, label %ifend.i

ifend.i:                                          ; preds = %2
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %6, i64 0, i32 2
  %7 = load ptr, ptr %memberidx2.i26, align 8
  store i64 0, ptr %memberidx2.i, align 4
  %8 = tail call i8 %7(ptr nonnull %0, i64 0)
  store i8 %8, ptr %3, align 8
  %9 = icmp eq i8 %8, 10
  br i1 %9, label %if.entry6.i, label %else7.i

if.entry6.i:                                      ; preds = %ifend.i
  store i64 0, ptr %memberidx4.i, align 4
  store i64 2, ptr %memberidx3.i, align 4
  br label %Lexer_advance.exit

else7.i:                                          ; preds = %ifend.i
  store i64 1, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %2, %if.entry6.i, %else7.i
  %10 = phi i64 [ -1, %2 ], [ 0, %if.entry6.i ], [ 0, %else7.i ]
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Token_, ptr %11, align 8
  %memberidx.i28 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 2
  %memberidx1.i29 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 3
  store i64 8, ptr %memberidx1.i29, align 4
  %memberidx2.i30 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = tail call ptr @malloc(i32 64)
  store ptr %12, ptr %memberidx2.i30, align 8
  store i64 0, ptr %memberidx.i28, align 4
  %13 = load i64, ptr %memberidx2.i.i24, align 4
  %14 = icmp sge i64 %10, %13
  %memberidx3 = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 2
  %15 = load i64, ptr %memberidx3, align 4
  %16 = icmp ne i64 %15, 0
  %17 = or i1 %14, %16
  br i1 %17, label %while.end, label %while.entry

while.entry:                                      ; preds = %Lexer_advance.exit, %Lexer_advance.exit53
  %18 = phi ptr [ %25, %Lexer_advance.exit53 ], [ %12, %Lexer_advance.exit ]
  %19 = phi i64 [ %26, %Lexer_advance.exit53 ], [ 8, %Lexer_advance.exit ]
  %20 = phi i64 [ %27, %Lexer_advance.exit53 ], [ 0, %Lexer_advance.exit ]
  %21 = call fastcc ptr @Lexer_lex_token(ptr nonnull %3)
  %.not.i56 = icmp slt i64 %20, %19
  br i1 %.not.i56, label %Array_Token____sl__.exit63, label %if.entry.i59

if.entry.i59:                                     ; preds = %while.entry
  %22 = shl nuw i64 %19, 1
  store i64 %22, ptr %memberidx1.i29, align 4
  %23 = shl i64 %19, 4
  %24 = call ptr @realloc(ptr %18, i64 %23)
  store ptr %24, ptr %memberidx2.i30, align 8
  br label %Array_Token____sl__.exit63

Array_Token____sl__.exit63:                       ; preds = %while.entry, %if.entry.i59
  %25 = phi ptr [ %18, %while.entry ], [ %24, %if.entry.i59 ]
  %26 = phi i64 [ %19, %while.entry ], [ %22, %if.entry.i59 ]
  %27 = add nuw nsw i64 %20, 1
  store i64 %27, ptr %memberidx.i28, align 4
  %ptridx.i61 = getelementptr inbounds ptr, ptr %25, i64 %20
  store ptr %21, ptr %ptridx.i61, align 8
  %28 = load i64, ptr %memberidx2.i, align 4
  %29 = load ptr, ptr %memberidx.i, align 8
  %memberidx2.i.i43 = getelementptr inbounds %string, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx2.i.i43, align 4
  %.not = icmp slt i64 %28, %30
  br i1 %.not, label %ifend.i47, label %Lexer_advance.exit53

ifend.i47:                                        ; preds = %Array_Token____sl__.exit63
  %31 = load ptr, ptr %29, align 8
  %memberidx2.i45 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %31, i64 0, i32 2
  %32 = load ptr, ptr %memberidx2.i45, align 8
  %33 = add nsw i64 %28, 1
  store i64 %33, ptr %memberidx2.i, align 4
  %34 = call i8 %32(ptr nonnull %29, i64 %33)
  store i8 %34, ptr %3, align 8
  %35 = icmp eq i8 %34, 10
  br i1 %35, label %if.entry6.i50, label %Lexer_advance.exit53.sink.split

if.entry6.i50:                                    ; preds = %ifend.i47
  store i64 0, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit53.sink.split

Lexer_advance.exit53.sink.split:                  ; preds = %ifend.i47, %if.entry6.i50
  %memberidx3.i.sink67 = phi ptr [ %memberidx3.i, %if.entry6.i50 ], [ %memberidx4.i, %ifend.i47 ]
  %36 = load i64, ptr %memberidx3.i.sink67, align 4
  %37 = add nsw i64 %36, 1
  store i64 %37, ptr %memberidx3.i.sink67, align 4
  br label %Lexer_advance.exit53

Lexer_advance.exit53:                             ; preds = %Lexer_advance.exit53.sink.split, %Array_Token____sl__.exit63
  %38 = load i64, ptr %memberidx2.i, align 4
  %39 = load ptr, ptr %memberidx.i, align 8
  %memberidx2.i40 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  %40 = load i64, ptr %memberidx2.i40, align 4
  %41 = icmp sge i64 %38, %40
  %42 = load ptr, ptr %memberidx1.i, align 8
  %memberidx5 = getelementptr inbounds %Array_FloError_, ptr %42, i64 0, i32 2
  %43 = load i64, ptr %memberidx5, align 4
  %44 = icmp ne i64 %43, 0
  %45 = or i1 %41, %44
  br i1 %45, label %while.end, label %while.entry

while.end:                                        ; preds = %Lexer_advance.exit53, %Lexer_advance.exit
  %46 = phi ptr [ %12, %Lexer_advance.exit ], [ %25, %Lexer_advance.exit53 ]
  %47 = phi i64 [ 8, %Lexer_advance.exit ], [ %26, %Lexer_advance.exit53 ]
  %48 = phi i64 [ 0, %Lexer_advance.exit ], [ %27, %Lexer_advance.exit53 ]
  %49 = tail call ptr @malloc(i32 16)
  %50 = tail call ptr @malloc(i32 32)
  %51 = load i64, ptr %memberidx4.i, align 4
  %52 = load i64, ptr %memberidx3.i, align 4
  %memberidx2.i36 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %50, i8 0, i64 16, i1 false)
  store i64 %51, ptr %memberidx2.i36, align 4
  %memberidx3.i37 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 3
  store i64 %52, ptr %memberidx3.i37, align 4
  store i64 46, ptr %49, align 4
  %memberidx1.i34 = getelementptr inbounds %Token, ptr %49, i64 0, i32 1
  store ptr %50, ptr %memberidx1.i34, align 8
  %.not.i = icmp slt i64 %48, %47
  br i1 %.not.i, label %Array_Token____sl__.exit, label %if.entry.i

if.entry.i:                                       ; preds = %while.end
  %53 = shl nuw i64 %47, 1
  store i64 %53, ptr %memberidx1.i29, align 4
  %54 = shl i64 %47, 4
  %55 = call ptr @realloc(ptr %46, i64 %54)
  store ptr %55, ptr %memberidx2.i30, align 8
  %.pre = load i64, ptr %memberidx.i28, align 4
  br label %Array_Token____sl__.exit

Array_Token____sl__.exit:                         ; preds = %while.end, %if.entry.i
  %56 = phi ptr [ %46, %while.end ], [ %55, %if.entry.i ]
  %57 = phi i64 [ %48, %while.end ], [ %.pre, %if.entry.i ]
  %58 = add nsw i64 %57, 1
  store i64 %58, ptr %memberidx.i28, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %56, i64 %57
  store ptr %49, ptr %ptridx.i, align 8
  ret ptr %11
}

define internal fastcc ptr @Lexer_string_token(ptr %0) unnamed_addr {
  %2 = alloca %StringBuilder, align 8
  %3 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Array_Token__, ptr %3, align 8
  %memberidx.i = getelementptr inbounds %Array_Array_Token__, ptr %3, i64 0, i32 2
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_Array_Token__, ptr %3, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_Array_Token__, ptr %3, i64 0, i32 1
  %4 = tail call ptr @malloc(i32 64)
  store ptr %4, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_uint_, ptr %5, align 8
  %memberidx.i71 = getelementptr inbounds %Array_uint_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i71, align 4
  %memberidx1.i72 = getelementptr inbounds %Array_uint_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i72, align 4
  %memberidx2.i73 = getelementptr inbounds %Array_uint_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i73, align 8
  store i64 0, ptr %memberidx.i71, align 4
  %memberidx.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %7 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i.i, align 4
  %.not = icmp slt i64 %7, %9
  br i1 %.not, label %ifend.i, label %Lexer_advance.exit

ifend.i:                                          ; preds = %1
  %10 = load ptr, ptr %8, align 8
  %memberidx2.i75 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %10, i64 0, i32 2
  %11 = load ptr, ptr %memberidx2.i75, align 8
  %12 = add nsw i64 %7, 1
  store i64 %12, ptr %memberidx.i.i, align 4
  %13 = tail call i8 %11(ptr nonnull %8, i64 %12)
  store i8 %13, ptr %0, align 1
  %14 = icmp eq i8 %13, 10
  %memberidx9.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %14, label %if.entry6.i, label %Lexer_advance.exit.sink.split

if.entry6.i:                                      ; preds = %ifend.i
  store i64 0, ptr %memberidx9.i, align 4
  %memberidx10.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.sink.split

Lexer_advance.exit.sink.split:                    ; preds = %ifend.i, %if.entry6.i
  %memberidx10.i.sink271 = phi ptr [ %memberidx10.i, %if.entry6.i ], [ %memberidx9.i, %ifend.i ]
  %15 = load i64, ptr %memberidx10.i.sink271, align 4
  %16 = add nsw i64 %15, 1
  store i64 %16, ptr %memberidx10.i.sink271, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %Lexer_advance.exit.sink.split, %1
  %17 = alloca %StringBuilder, align 8
  store ptr @VTableStringBuilder, ptr %17, align 8
  %memberidx.i76 = getelementptr inbounds %StringBuilder, ptr %17, i64 0, i32 2
  store i64 1, ptr %memberidx.i76, align 8
  %memberidx1.i77 = getelementptr inbounds %StringBuilder, ptr %17, i64 0, i32 1
  %18 = tail call ptr @malloc(i32 1)
  store ptr %18, ptr %memberidx1.i77, align 8
  %memberidx3.i78 = getelementptr inbounds %StringBuilder, ptr %17, i64 0, i32 3
  store ptr %18, ptr %memberidx3.i78, align 8
  %memberidx5.i = getelementptr inbounds %StringBuilder, ptr %17, i64 0, i32 4
  store i64 0, ptr %memberidx5.i, align 8
  %19 = load i64, ptr %memberidx.i.i, align 4
  %20 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i81 = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  %21 = load i64, ptr %memberidx2.i81, align 4
  %.not224 = icmp slt i64 %19, %21
  br i1 %.not224, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Lexer_advance.exit
  %memberidx12.i113 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i111 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.outer

while.entry.outer:                                ; preds = %while.entry.preheader, %Lexer_advance.exit131
  %escape_next.0.ph = phi i1 [ false, %while.entry.preheader ], [ %113, %Lexer_advance.exit131 ]
  %length.0.ph = phi i64 [ 2, %while.entry.preheader ], [ %112, %Lexer_advance.exit131 ]
  %22 = load i8, ptr %0, align 1
  %23 = icmp ne i8 %22, 34
  %24 = or i1 %escape_next.0.ph, %23
  br i1 %24, label %ifend.lr.ph, label %while.end

ifend.lr.ph:                                      ; preds = %while.entry.outer
  %25 = add nsw i64 %length.0.ph, -2
  br label %ifend

while.end:                                        ; preds = %while.entry.outer, %Lexer_advance.exit131, %Array_Array_Token_____sl__.exit, %Lexer_advance.exit
  %length.1 = phi i64 [ 2, %Lexer_advance.exit ], [ %length.0.ph, %Array_Array_Token_____sl__.exit ], [ %length.0.ph, %while.entry.outer ], [ %112, %Lexer_advance.exit131 ]
  %26 = call ptr @malloc(i32 32)
  %27 = load i64, ptr %memberidx.i.i, align 4
  %28 = sub i64 1, %length.1
  %29 = add i64 %28, %27
  %30 = add nsw i64 %27, 1
  %memberidx2.i83 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %31 = load i64, ptr %memberidx2.i83, align 4
  %32 = sub nuw i64 %31, %length.1
  %memberidx3.i84 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %33 = load i64, ptr %memberidx3.i84, align 4
  store i64 %29, ptr %26, align 4
  %memberidx1.i.i85 = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 1
  store i64 %30, ptr %memberidx1.i.i85, align 4
  %memberidx2.i.i86 = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i86, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i, align 4
  %34 = load ptr, ptr %17, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %34, i64 0, i32 3
  %35 = load ptr, ptr %memberidx32, align 8
  %36 = call ptr %35(ptr nonnull %17)
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %2)
  %memberidx.i87 = getelementptr inbounds %string, ptr %36, i64 0, i32 2
  %37 = load i64, ptr %memberidx.i87, align 4
  store ptr @VTableStringBuilder, ptr %2, align 8
  %memberidx.i.i88 = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 2
  store i64 %37, ptr %memberidx.i.i88, align 8
  %memberidx1.i.i89 = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 1
  %38 = trunc i64 %37 to i32
  %39 = call ptr @malloc(i32 %38)
  store ptr %39, ptr %memberidx1.i.i89, align 8
  %memberidx3.i.i90 = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 3
  store ptr %39, ptr %memberidx3.i.i90, align 8
  %memberidx5.i.i = getelementptr inbounds %StringBuilder, ptr %2, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i, align 8
  %40 = load i64, ptr %memberidx.i87, align 4
  %41 = icmp sgt i64 %40, 0
  br i1 %41, label %for.body.i, label %unescape.exit

for.body.i:                                       ; preds = %while.end, %for.incr.i
  %i.0.i243 = phi i64 [ %46, %for.incr.i ], [ 0, %while.end ]
  %42 = load ptr, ptr %36, align 8
  %memberidx2.i91 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %42, i64 0, i32 2
  %43 = load ptr, ptr %memberidx2.i91, align 8
  %44 = call i8 %43(ptr nonnull %36, i64 %i.0.i243)
  %45 = icmp eq i8 %44, 92
  br i1 %45, label %if.entry.i, label %ifend.i92

for.incr.i:                                       ; preds = %if.entry16.i, %if.entry8.i, %ifend.i92
  %i.1.i = phi i64 [ %49, %if.entry8.i ], [ %81, %if.entry16.i ], [ %i.2.i, %ifend.i92 ]
  %46 = add nsw i64 %i.1.i, 1
  %47 = load i64, ptr %memberidx.i87, align 4
  %48 = icmp slt i64 %46, %47
  br i1 %48, label %for.body.i, label %unescape.exit.loopexit

if.entry.i:                                       ; preds = %for.body.i
  %49 = add nuw i64 %i.0.i243, 3
  %50 = load i64, ptr %memberidx.i87, align 4
  %51 = icmp slt i64 %49, %50
  br i1 %51, label %if.entry4.i, label %ifend6.i

ifend.i92:                                        ; preds = %ifend27.i.i, %get_escape_char.exit.i.fold.split, %get_escape_char.exit.i.fold.split232, %get_escape_char.exit.i.fold.split233, %get_escape_char.exit.i.fold.split234, %get_escape_char.exit.i.fold.split235, %get_escape_char.exit.i.fold.split236, %get_escape_char.exit.i.fold.split237, %get_escape_char.exit.i.fold.split238, %get_escape_char.exit.i.fold.split239, %ifend6.i, %for.body.i
  %char.0.i = phi i8 [ %44, %for.body.i ], [ 7, %ifend6.i ], [ %67, %ifend27.i.i ], [ 8, %get_escape_char.exit.i.fold.split ], [ 9, %get_escape_char.exit.i.fold.split232 ], [ 12, %get_escape_char.exit.i.fold.split233 ], [ 10, %get_escape_char.exit.i.fold.split234 ], [ 13, %get_escape_char.exit.i.fold.split235 ], [ 11, %get_escape_char.exit.i.fold.split236 ], [ 0, %get_escape_char.exit.i.fold.split237 ], [ %67, %get_escape_char.exit.i.fold.split238 ], [ %67, %get_escape_char.exit.i.fold.split239 ]
  %i.2.i = phi i64 [ %i.0.i243, %for.body.i ], [ %66, %ifend6.i ], [ %66, %ifend27.i.i ], [ %66, %get_escape_char.exit.i.fold.split ], [ %66, %get_escape_char.exit.i.fold.split232 ], [ %66, %get_escape_char.exit.i.fold.split233 ], [ %66, %get_escape_char.exit.i.fold.split234 ], [ %66, %get_escape_char.exit.i.fold.split235 ], [ %66, %get_escape_char.exit.i.fold.split236 ], [ %66, %get_escape_char.exit.i.fold.split237 ], [ %66, %get_escape_char.exit.i.fold.split238 ], [ %66, %get_escape_char.exit.i.fold.split239 ]
  %52 = load ptr, ptr %2, align 8
  %memberidx21.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %52, i64 0, i32 2
  %53 = load ptr, ptr %memberidx21.i, align 8
  call void %53(ptr nonnull %2, i8 %char.0.i)
  br label %for.incr.i

if.entry4.i:                                      ; preds = %if.entry.i
  %54 = load ptr, ptr %36, align 8
  %memberidx7.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %54, i64 0, i32 3
  %55 = load ptr, ptr %memberidx7.i, align 8
  %56 = call ptr %55(ptr nonnull %36)
  %57 = getelementptr i8, ptr %56, i64 1
  %58 = getelementptr i8, ptr %57, i64 %i.0.i243
  %59 = call i64 @memcmp(ptr %58, ptr nonnull @50, i64 3)
  %60 = icmp eq i64 %59, 0
  %61 = call i64 @memcmp(ptr %58, ptr nonnull @51, i64 3)
  %62 = icmp eq i64 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %if.entry8.i, label %ifend10.i

ifend6.i:                                         ; preds = %if.entry13.i, %ifend10.i, %if.entry.i
  %64 = load ptr, ptr %36, align 8
  %memberidx20.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %64, i64 0, i32 2
  %65 = load ptr, ptr %memberidx20.i, align 8
  %66 = add nsw i64 %i.0.i243, 1
  %67 = call i8 %65(ptr nonnull %36, i64 %66)
  switch i8 %67, label %ifend27.i.i [
    i8 97, label %ifend.i92
    i8 98, label %get_escape_char.exit.i.fold.split
    i8 116, label %get_escape_char.exit.i.fold.split232
    i8 102, label %get_escape_char.exit.i.fold.split233
    i8 110, label %get_escape_char.exit.i.fold.split234
    i8 114, label %get_escape_char.exit.i.fold.split235
    i8 118, label %get_escape_char.exit.i.fold.split236
    i8 48, label %get_escape_char.exit.i.fold.split237
    i8 39, label %get_escape_char.exit.i.fold.split238
    i8 34, label %get_escape_char.exit.i.fold.split239
  ]

ifend27.i.i:                                      ; preds = %ifend6.i
  br label %ifend.i92

get_escape_char.exit.i.fold.split:                ; preds = %ifend6.i
  br label %ifend.i92

get_escape_char.exit.i.fold.split232:             ; preds = %ifend6.i
  br label %ifend.i92

get_escape_char.exit.i.fold.split233:             ; preds = %ifend6.i
  br label %ifend.i92

get_escape_char.exit.i.fold.split234:             ; preds = %ifend6.i
  br label %ifend.i92

get_escape_char.exit.i.fold.split235:             ; preds = %ifend6.i
  br label %ifend.i92

get_escape_char.exit.i.fold.split236:             ; preds = %ifend6.i
  br label %ifend.i92

get_escape_char.exit.i.fold.split237:             ; preds = %ifend6.i
  br label %ifend.i92

get_escape_char.exit.i.fold.split238:             ; preds = %ifend6.i
  br label %ifend.i92

get_escape_char.exit.i.fold.split239:             ; preds = %ifend6.i
  br label %ifend.i92

if.entry8.i:                                      ; preds = %if.entry4.i
  %68 = load ptr, ptr %2, align 8
  %memberidx11.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %68, i64 0, i32 1
  %69 = load ptr, ptr %memberidx11.i, align 8
  %70 = call ptr @malloc(i32 1)
  store i8 27, ptr %70, align 8
  %71 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %71, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %71, i64 0, i32 1
  store ptr %70, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %71, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %71, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i.i, align 4
  call void %69(ptr nonnull %2, ptr nonnull %71)
  br label %for.incr.i

ifend10.i:                                        ; preds = %if.entry4.i
  %72 = add nuw i64 %i.0.i243, 6
  %73 = load i64, ptr %memberidx.i87, align 4
  %74 = icmp slt i64 %72, %73
  br i1 %74, label %if.entry13.i, label %ifend6.i

if.entry13.i:                                     ; preds = %ifend10.i
  %75 = call i64 @memcmp(ptr %58, ptr nonnull @52, i64 5)
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %if.entry16.i, label %ifend6.i

if.entry16.i:                                     ; preds = %if.entry13.i
  %77 = load ptr, ptr %2, align 8
  %memberidx19.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %77, i64 0, i32 1
  %78 = load ptr, ptr %memberidx19.i, align 8
  %79 = call ptr @malloc(i32 1)
  store i8 27, ptr %79, align 8
  %80 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %80, align 8
  %memberidx.i.i44.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  store ptr %79, ptr %memberidx.i.i44.i, align 8
  %memberidx1.i.i45.i = getelementptr inbounds %string, ptr %80, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i45.i, align 4
  %memberidx2.i.i46.i = getelementptr inbounds %string, ptr %80, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i46.i, align 4
  call void %78(ptr nonnull %2, ptr nonnull %80)
  %81 = add nuw i64 %i.0.i243, 5
  br label %for.incr.i

unescape.exit.loopexit:                           ; preds = %for.incr.i
  %.pre263 = load ptr, ptr %2, align 8
  br label %unescape.exit

unescape.exit:                                    ; preds = %unescape.exit.loopexit, %while.end
  %82 = phi ptr [ %.pre263, %unescape.exit.loopexit ], [ @VTableStringBuilder, %while.end ]
  %memberidx22.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %82, i64 0, i32 3
  %83 = load ptr, ptr %memberidx22.i, align 8
  %84 = call ptr %83(ptr nonnull %2)
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %2)
  %85 = tail call ptr @malloc(i32 40)
  store i64 34, ptr %85, align 4
  %memberidx1.i.i93 = getelementptr inbounds %Token, ptr %85, i64 0, i32 1
  store ptr %26, ptr %memberidx1.i.i93, align 8
  %memberidx.i94 = getelementptr inbounds %StrToken, ptr %85, i64 0, i32 2
  store ptr %84, ptr %memberidx.i94, align 8
  %memberidx1.i95 = getelementptr inbounds %StrToken, ptr %85, i64 0, i32 3
  store ptr %5, ptr %memberidx1.i95, align 8
  %memberidx2.i96 = getelementptr inbounds %StrToken, ptr %85, i64 0, i32 4
  store ptr %3, ptr %memberidx2.i96, align 8
  ret ptr %85

ifend:                                            ; preds = %ifend.lr.ph, %Array_Array_Token_____sl__.exit
  %86 = phi i8 [ %22, %ifend.lr.ph ], [ %188, %Array_Array_Token_____sl__.exit ]
  %escape_next.0244 = phi i1 [ %escape_next.0.ph, %ifend.lr.ph ], [ false, %Array_Array_Token_____sl__.exit ]
  %87 = icmp ne i8 %86, 36
  %88 = or i1 %escape_next.0244, %87
  br i1 %88, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %ifend
  %89 = load i64, ptr %memberidx.i71, align 4
  %90 = load i64, ptr %memberidx1.i72, align 4
  %.not.i = icmp slt i64 %89, %90
  br i1 %.not.i, label %if.entry6.Array_uint____sl__.exit_crit_edge, label %if.entry.i101

if.entry6.Array_uint____sl__.exit_crit_edge:      ; preds = %if.entry6
  %.pre250 = load ptr, ptr %memberidx2.i73, align 8
  br label %Array_uint____sl__.exit

if.entry.i101:                                    ; preds = %if.entry6
  %91 = shl nuw i64 %90, 1
  store i64 %91, ptr %memberidx1.i72, align 4
  %92 = load ptr, ptr %memberidx2.i73, align 8
  %93 = shl i64 %90, 4
  %94 = call ptr @realloc(ptr %92, i64 %93)
  store ptr %94, ptr %memberidx2.i73, align 8
  %.pre = load i64, ptr %memberidx.i71, align 4
  br label %Array_uint____sl__.exit

Array_uint____sl__.exit:                          ; preds = %if.entry6.Array_uint____sl__.exit_crit_edge, %if.entry.i101
  %95 = phi ptr [ %.pre250, %if.entry6.Array_uint____sl__.exit_crit_edge ], [ %94, %if.entry.i101 ]
  %96 = phi i64 [ %89, %if.entry6.Array_uint____sl__.exit_crit_edge ], [ %.pre, %if.entry.i101 ]
  %97 = add nsw i64 %96, 1
  store i64 %97, ptr %memberidx.i71, align 4
  %ptridx.i = getelementptr inbounds i64, ptr %95, i64 %96
  store i64 %25, ptr %ptridx.i, align 4
  %98 = load i64, ptr %memberidx.i.i, align 4
  %99 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i105 = getelementptr inbounds %string, ptr %99, i64 0, i32 2
  %100 = load i64, ptr %memberidx2.i.i105, align 4
  %.not225 = icmp slt i64 %98, %100
  br i1 %.not225, label %ifend.i109, label %Lexer_advance.exit115

ifend.i109:                                       ; preds = %Array_uint____sl__.exit
  %101 = load ptr, ptr %99, align 8
  %memberidx2.i107 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %101, i64 0, i32 2
  %102 = load ptr, ptr %memberidx2.i107, align 8
  %103 = add nsw i64 %98, 1
  store i64 %103, ptr %memberidx.i.i, align 4
  %104 = call i8 %102(ptr nonnull %99, i64 %103)
  store i8 %104, ptr %0, align 1
  %105 = icmp eq i8 %104, 10
  br i1 %105, label %if.entry6.i112, label %Lexer_advance.exit115.sink.split

if.entry6.i112:                                   ; preds = %ifend.i109
  store i64 0, ptr %memberidx12.i113, align 4
  br label %Lexer_advance.exit115.sink.split

Lexer_advance.exit115.sink.split:                 ; preds = %ifend.i109, %if.entry6.i112
  %memberidx10.i111.sink273 = phi ptr [ %memberidx10.i111, %if.entry6.i112 ], [ %memberidx12.i113, %ifend.i109 ]
  %106 = load i64, ptr %memberidx10.i111.sink273, align 4
  %107 = add nsw i64 %106, 1
  store i64 %107, ptr %memberidx10.i111.sink273, align 4
  br label %Lexer_advance.exit115

Lexer_advance.exit115:                            ; preds = %Lexer_advance.exit115.sink.split, %Array_uint____sl__.exit
  %108 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Token_, ptr %108, align 8
  %memberidx.i116 = getelementptr inbounds %Array_Token_, ptr %108, i64 0, i32 2
  store i64 0, ptr %memberidx.i116, align 4
  %memberidx1.i117 = getelementptr inbounds %Array_Token_, ptr %108, i64 0, i32 3
  store i64 8, ptr %memberidx1.i117, align 4
  %memberidx2.i118 = getelementptr inbounds %Array_Token_, ptr %108, i64 0, i32 1
  %109 = call ptr @malloc(i32 64)
  store ptr %109, ptr %memberidx2.i118, align 8
  store i64 0, ptr %memberidx.i116, align 4
  %110 = load i8, ptr %0, align 1
  %111 = icmp eq i8 %110, 40
  br i1 %111, label %if.entry12, label %else13

ifend8:                                           ; preds = %ifend
  %112 = add nuw nsw i64 %length.0.ph, 1
  %113 = icmp eq i8 %86, 92
  %114 = load ptr, ptr %17, align 8
  %memberidx30 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %114, i64 0, i32 2
  %115 = load ptr, ptr %memberidx30, align 8
  call void %115(ptr nonnull %17, i8 %86)
  %116 = load i64, ptr %memberidx.i.i, align 4
  %117 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i121 = getelementptr inbounds %string, ptr %117, i64 0, i32 2
  %118 = load i64, ptr %memberidx2.i.i121, align 4
  %.not230 = icmp slt i64 %116, %118
  br i1 %.not230, label %ifend.i125, label %Lexer_advance.exit131

ifend.i125:                                       ; preds = %ifend8
  %119 = load ptr, ptr %117, align 8
  %memberidx2.i123 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %119, i64 0, i32 2
  %120 = load ptr, ptr %memberidx2.i123, align 8
  %121 = add nsw i64 %116, 1
  store i64 %121, ptr %memberidx.i.i, align 4
  %122 = call i8 %120(ptr nonnull %117, i64 %121)
  store i8 %122, ptr %0, align 1
  %123 = icmp eq i8 %122, 10
  br i1 %123, label %if.entry6.i128, label %Lexer_advance.exit131.sink.split

if.entry6.i128:                                   ; preds = %ifend.i125
  store i64 0, ptr %memberidx12.i113, align 4
  br label %Lexer_advance.exit131.sink.split

Lexer_advance.exit131.sink.split:                 ; preds = %ifend.i125, %if.entry6.i128
  %memberidx10.i111.sink276 = phi ptr [ %memberidx10.i111, %if.entry6.i128 ], [ %memberidx12.i113, %ifend.i125 ]
  %124 = load i64, ptr %memberidx10.i111.sink276, align 4
  %125 = add nsw i64 %124, 1
  store i64 %125, ptr %memberidx10.i111.sink276, align 4
  br label %Lexer_advance.exit131

Lexer_advance.exit131:                            ; preds = %Lexer_advance.exit131.sink.split, %ifend8
  %126 = load i64, ptr %memberidx.i.i, align 4
  %127 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i134 = getelementptr inbounds %string, ptr %127, i64 0, i32 2
  %128 = load i64, ptr %memberidx2.i134, align 4
  %.not231 = icmp slt i64 %126, %128
  br i1 %.not231, label %while.entry.outer, label %while.end

if.entry12:                                       ; preds = %Lexer_advance.exit115
  %129 = load i64, ptr %memberidx.i.i, align 4
  %130 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i137 = getelementptr inbounds %string, ptr %130, i64 0, i32 2
  %131 = load i64, ptr %memberidx2.i.i137, align 4
  %.not227 = icmp slt i64 %129, %131
  br i1 %.not227, label %ifend.i141, label %Lexer_advance.exit147

ifend.i141:                                       ; preds = %if.entry12
  %132 = load ptr, ptr %130, align 8
  %memberidx2.i139 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %132, i64 0, i32 2
  %133 = load ptr, ptr %memberidx2.i139, align 8
  %134 = add nsw i64 %129, 1
  store i64 %134, ptr %memberidx.i.i, align 4
  %135 = call i8 %133(ptr nonnull %130, i64 %134)
  store i8 %135, ptr %0, align 1
  %136 = icmp eq i8 %135, 10
  br i1 %136, label %if.entry6.i144, label %Lexer_advance.exit147.sink.split

if.entry6.i144:                                   ; preds = %ifend.i141
  store i64 0, ptr %memberidx12.i113, align 4
  br label %Lexer_advance.exit147.sink.split

Lexer_advance.exit147.sink.split:                 ; preds = %ifend.i141, %if.entry6.i144
  %memberidx10.i111.sink279 = phi ptr [ %memberidx10.i111, %if.entry6.i144 ], [ %memberidx12.i113, %ifend.i141 ]
  %.ph = phi i8 [ 10, %if.entry6.i144 ], [ %135, %ifend.i141 ]
  %137 = load i64, ptr %memberidx10.i111.sink279, align 4
  %138 = add nsw i64 %137, 1
  store i64 %138, ptr %memberidx10.i111.sink279, align 4
  br label %Lexer_advance.exit147

Lexer_advance.exit147:                            ; preds = %Lexer_advance.exit147.sink.split, %if.entry12
  %139 = phi i8 [ 40, %if.entry12 ], [ %.ph, %Lexer_advance.exit147.sink.split ]
  %140 = icmp eq i8 %139, 41
  %141 = load i64, ptr %memberidx.i.i, align 4
  %142 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i150 = getelementptr inbounds %string, ptr %142, i64 0, i32 2
  %143 = load i64, ptr %memberidx2.i150, align 4
  %144 = icmp sge i64 %141, %143
  %145 = or i1 %140, %144
  br i1 %145, label %ifend14, label %while.entry15

else13:                                           ; preds = %Lexer_advance.exit115
  %146 = call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %147 = load i64, ptr %memberidx.i116, align 4
  %148 = load i64, ptr %memberidx1.i117, align 4
  %.not.i153 = icmp slt i64 %147, %148
  br i1 %.not.i153, label %else13.Array_Token____sl__.exit_crit_edge, label %if.entry.i156

else13.Array_Token____sl__.exit_crit_edge:        ; preds = %else13
  %.pre252 = load ptr, ptr %memberidx2.i118, align 8
  br label %Array_Token____sl__.exit

if.entry.i156:                                    ; preds = %else13
  %149 = shl nuw i64 %148, 1
  store i64 %149, ptr %memberidx1.i117, align 4
  %150 = load ptr, ptr %memberidx2.i118, align 8
  %151 = shl i64 %148, 4
  %152 = call ptr @realloc(ptr %150, i64 %151)
  store ptr %152, ptr %memberidx2.i118, align 8
  %.pre251 = load i64, ptr %memberidx.i116, align 4
  br label %Array_Token____sl__.exit

Array_Token____sl__.exit:                         ; preds = %else13.Array_Token____sl__.exit_crit_edge, %if.entry.i156
  %153 = phi ptr [ %.pre252, %else13.Array_Token____sl__.exit_crit_edge ], [ %152, %if.entry.i156 ]
  %154 = phi i64 [ %147, %else13.Array_Token____sl__.exit_crit_edge ], [ %.pre251, %if.entry.i156 ]
  %155 = add nsw i64 %154, 1
  store i64 %155, ptr %memberidx.i116, align 4
  %ptridx.i158 = getelementptr inbounds ptr, ptr %153, i64 %154
  store ptr %146, ptr %ptridx.i158, align 8
  %.pre256 = load i64, ptr %memberidx.i.i, align 4
  %.pre257 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i162.phi.trans.insert = getelementptr inbounds %string, ptr %.pre257, i64 0, i32 2
  %.pre258 = load i64, ptr %memberidx2.i.i162.phi.trans.insert, align 4
  br label %ifend14

ifend14:                                          ; preds = %Lexer_advance.exit218, %Lexer_advance.exit147, %Array_Token____sl__.exit
  %156 = phi i64 [ %143, %Lexer_advance.exit147 ], [ %.pre258, %Array_Token____sl__.exit ], [ %222, %Lexer_advance.exit218 ]
  %157 = phi ptr [ %142, %Lexer_advance.exit147 ], [ %.pre257, %Array_Token____sl__.exit ], [ %221, %Lexer_advance.exit218 ]
  %158 = phi i64 [ %141, %Lexer_advance.exit147 ], [ %.pre256, %Array_Token____sl__.exit ], [ %220, %Lexer_advance.exit218 ]
  %.not226 = icmp slt i64 %158, %156
  br i1 %.not226, label %ifend.i166, label %Lexer_advance.exit172

ifend.i166:                                       ; preds = %ifend14
  %159 = load ptr, ptr %157, align 8
  %memberidx2.i164 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %159, i64 0, i32 2
  %160 = load ptr, ptr %memberidx2.i164, align 8
  %161 = add nsw i64 %158, 1
  store i64 %161, ptr %memberidx.i.i, align 4
  %162 = call i8 %160(ptr nonnull %157, i64 %161)
  store i8 %162, ptr %0, align 1
  %163 = icmp eq i8 %162, 10
  br i1 %163, label %if.entry6.i169, label %Lexer_advance.exit172.sink.split

if.entry6.i169:                                   ; preds = %ifend.i166
  store i64 0, ptr %memberidx12.i113, align 4
  br label %Lexer_advance.exit172.sink.split

Lexer_advance.exit172.sink.split:                 ; preds = %ifend.i166, %if.entry6.i169
  %memberidx10.i111.sink282 = phi ptr [ %memberidx10.i111, %if.entry6.i169 ], [ %memberidx12.i113, %ifend.i166 ]
  %164 = load i64, ptr %memberidx10.i111.sink282, align 4
  %165 = add nsw i64 %164, 1
  store i64 %165, ptr %memberidx10.i111.sink282, align 4
  br label %Lexer_advance.exit172

Lexer_advance.exit172:                            ; preds = %Lexer_advance.exit172.sink.split, %ifend14
  %166 = tail call ptr @malloc(i32 16)
  %167 = tail call ptr @malloc(i32 32)
  %168 = load i64, ptr %memberidx12.i113, align 4
  %169 = load i64, ptr %memberidx10.i111, align 4
  %memberidx2.i174 = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %167, i8 0, i64 16, i1 false)
  store i64 %168, ptr %memberidx2.i174, align 4
  %memberidx3.i175 = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 3
  store i64 %169, ptr %memberidx3.i175, align 4
  store i64 46, ptr %166, align 4
  %memberidx1.i176 = getelementptr inbounds %Token, ptr %166, i64 0, i32 1
  store ptr %167, ptr %memberidx1.i176, align 8
  %170 = load i64, ptr %memberidx.i116, align 4
  %171 = load i64, ptr %memberidx1.i117, align 4
  %.not.i179 = icmp slt i64 %170, %171
  br i1 %.not.i179, label %Lexer_advance.exit172.Array_Token____sl__.exit186_crit_edge, label %if.entry.i182

Lexer_advance.exit172.Array_Token____sl__.exit186_crit_edge: ; preds = %Lexer_advance.exit172
  %.pre260 = load ptr, ptr %memberidx2.i118, align 8
  br label %Array_Token____sl__.exit186

if.entry.i182:                                    ; preds = %Lexer_advance.exit172
  %172 = shl nuw i64 %171, 1
  store i64 %172, ptr %memberidx1.i117, align 4
  %173 = load ptr, ptr %memberidx2.i118, align 8
  %174 = shl i64 %171, 4
  %175 = call ptr @realloc(ptr %173, i64 %174)
  store ptr %175, ptr %memberidx2.i118, align 8
  %.pre259 = load i64, ptr %memberidx.i116, align 4
  br label %Array_Token____sl__.exit186

Array_Token____sl__.exit186:                      ; preds = %Lexer_advance.exit172.Array_Token____sl__.exit186_crit_edge, %if.entry.i182
  %176 = phi ptr [ %.pre260, %Lexer_advance.exit172.Array_Token____sl__.exit186_crit_edge ], [ %175, %if.entry.i182 ]
  %177 = phi i64 [ %170, %Lexer_advance.exit172.Array_Token____sl__.exit186_crit_edge ], [ %.pre259, %if.entry.i182 ]
  %178 = add nsw i64 %177, 1
  store i64 %178, ptr %memberidx.i116, align 4
  %ptridx.i184 = getelementptr inbounds ptr, ptr %176, i64 %177
  store ptr %166, ptr %ptridx.i184, align 8
  %179 = load i64, ptr %memberidx.i, align 4
  %180 = load i64, ptr %memberidx1.i, align 4
  %.not.i189 = icmp slt i64 %179, %180
  br i1 %.not.i189, label %Array_Token____sl__.exit186.Array_Array_Token_____sl__.exit_crit_edge, label %if.entry.i192

Array_Token____sl__.exit186.Array_Array_Token_____sl__.exit_crit_edge: ; preds = %Array_Token____sl__.exit186
  %.pre262 = load ptr, ptr %memberidx2.i, align 8
  br label %Array_Array_Token_____sl__.exit

if.entry.i192:                                    ; preds = %Array_Token____sl__.exit186
  %181 = shl nuw i64 %180, 1
  store i64 %181, ptr %memberidx1.i, align 4
  %182 = load ptr, ptr %memberidx2.i, align 8
  %183 = shl i64 %180, 4
  %184 = call ptr @realloc(ptr %182, i64 %183)
  store ptr %184, ptr %memberidx2.i, align 8
  %.pre261 = load i64, ptr %memberidx.i, align 4
  br label %Array_Array_Token_____sl__.exit

Array_Array_Token_____sl__.exit:                  ; preds = %Array_Token____sl__.exit186.Array_Array_Token_____sl__.exit_crit_edge, %if.entry.i192
  %185 = phi ptr [ %.pre262, %Array_Token____sl__.exit186.Array_Array_Token_____sl__.exit_crit_edge ], [ %184, %if.entry.i192 ]
  %186 = phi i64 [ %179, %Array_Token____sl__.exit186.Array_Array_Token_____sl__.exit_crit_edge ], [ %.pre261, %if.entry.i192 ]
  %187 = add nsw i64 %186, 1
  store i64 %187, ptr %memberidx.i, align 4
  %ptridx.i194 = getelementptr inbounds ptr, ptr %185, i64 %186
  store ptr %108, ptr %ptridx.i194, align 8
  %188 = load i8, ptr %0, align 1
  %.not246 = icmp eq i8 %188, 34
  br i1 %.not246, label %while.end, label %ifend

while.entry15:                                    ; preds = %Lexer_advance.exit147, %Lexer_advance.exit218
  %189 = phi i8 [ %216, %Lexer_advance.exit218 ], [ %139, %Lexer_advance.exit147 ]
  %active_open_pars.0 = phi i64 [ %active_open_pars.2, %Lexer_advance.exit218 ], [ 0, %Lexer_advance.exit147 ]
  %190 = icmp eq i8 %189, 40
  %191 = zext i1 %190 to i64
  %spec.select = add nsw i64 %active_open_pars.0, %191
  %192 = icmp eq i8 %189, 41
  %193 = sext i1 %192 to i64
  %active_open_pars.2 = add nsw i64 %spec.select, %193
  %194 = call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %195 = load i64, ptr %memberidx.i116, align 4
  %196 = load i64, ptr %memberidx1.i117, align 4
  %.not.i198 = icmp slt i64 %195, %196
  br i1 %.not.i198, label %while.entry15.Array_Token____sl__.exit205_crit_edge, label %if.entry.i201

while.entry15.Array_Token____sl__.exit205_crit_edge: ; preds = %while.entry15
  %.pre254 = load ptr, ptr %memberidx2.i118, align 8
  br label %Array_Token____sl__.exit205

if.entry.i201:                                    ; preds = %while.entry15
  %197 = shl nuw i64 %196, 1
  store i64 %197, ptr %memberidx1.i117, align 4
  %198 = load ptr, ptr %memberidx2.i118, align 8
  %199 = shl i64 %196, 4
  %200 = call ptr @realloc(ptr %198, i64 %199)
  store ptr %200, ptr %memberidx2.i118, align 8
  %.pre253 = load i64, ptr %memberidx.i116, align 4
  br label %Array_Token____sl__.exit205

Array_Token____sl__.exit205:                      ; preds = %while.entry15.Array_Token____sl__.exit205_crit_edge, %if.entry.i201
  %201 = phi ptr [ %.pre254, %while.entry15.Array_Token____sl__.exit205_crit_edge ], [ %200, %if.entry.i201 ]
  %202 = phi i64 [ %195, %while.entry15.Array_Token____sl__.exit205_crit_edge ], [ %.pre253, %if.entry.i201 ]
  %203 = add nsw i64 %202, 1
  store i64 %203, ptr %memberidx.i116, align 4
  %ptridx.i203 = getelementptr inbounds ptr, ptr %201, i64 %202
  store ptr %194, ptr %ptridx.i203, align 8
  %204 = load i64, ptr %memberidx.i.i, align 4
  %205 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i208 = getelementptr inbounds %string, ptr %205, i64 0, i32 2
  %206 = load i64, ptr %memberidx2.i.i208, align 4
  %.not228 = icmp slt i64 %204, %206
  br i1 %.not228, label %ifend.i212, label %Array_Token____sl__.exit205.Lexer_advance.exit218_crit_edge

Array_Token____sl__.exit205.Lexer_advance.exit218_crit_edge: ; preds = %Array_Token____sl__.exit205
  %.pre255 = load i8, ptr %0, align 1
  br label %Lexer_advance.exit218

ifend.i212:                                       ; preds = %Array_Token____sl__.exit205
  %207 = load ptr, ptr %205, align 8
  %memberidx2.i210 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %207, i64 0, i32 2
  %208 = load ptr, ptr %memberidx2.i210, align 8
  %209 = add nsw i64 %204, 1
  store i64 %209, ptr %memberidx.i.i, align 4
  %210 = call i8 %208(ptr nonnull %205, i64 %209)
  store i8 %210, ptr %0, align 1
  %211 = icmp eq i8 %210, 10
  br i1 %211, label %if.entry6.i215, label %else7.i217

if.entry6.i215:                                   ; preds = %ifend.i212
  store i64 0, ptr %memberidx12.i113, align 4
  %212 = load i64, ptr %memberidx10.i111, align 4
  %213 = add nsw i64 %212, 1
  store i64 %213, ptr %memberidx10.i111, align 4
  br label %Lexer_advance.exit218

else7.i217:                                       ; preds = %ifend.i212
  %214 = load i64, ptr %memberidx12.i113, align 4
  %215 = add nsw i64 %214, 1
  store i64 %215, ptr %memberidx12.i113, align 4
  br label %Lexer_advance.exit218

Lexer_advance.exit218:                            ; preds = %Array_Token____sl__.exit205.Lexer_advance.exit218_crit_edge, %if.entry6.i215, %else7.i217
  %216 = phi i8 [ %.pre255, %Array_Token____sl__.exit205.Lexer_advance.exit218_crit_edge ], [ 10, %if.entry6.i215 ], [ %210, %else7.i217 ]
  %217 = icmp ne i8 %216, 41
  %218 = icmp ne i64 %active_open_pars.2, 0
  %219 = or i1 %218, %217
  %220 = load i64, ptr %memberidx.i.i, align 4
  %221 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i221 = getelementptr inbounds %string, ptr %221, i64 0, i32 2
  %222 = load i64, ptr %memberidx2.i221, align 4
  %.not229 = icmp slt i64 %220, %222
  %223 = and i1 %219, %.not229
  br i1 %223, label %while.entry15, label %ifend14
}

define internal fastcc ptr @Lexer_base_int_token(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %5 = load i64, ptr %memberidx2.i.i, align 4
  %.not = icmp slt i64 %3, %5
  br i1 %.not, label %ifend.i, label %Lexer_advance.exit

ifend.i:                                          ; preds = %2
  %6 = load ptr, ptr %4, align 8
  %memberidx2.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %6, i64 0, i32 2
  %7 = load ptr, ptr %memberidx2.i, align 8
  %8 = add nsw i64 %3, 1
  store i64 %8, ptr %memberidx.i.i, align 4
  %9 = tail call i8 %7(ptr nonnull %4, i64 %8)
  store i8 %9, ptr %0, align 1
  %10 = icmp eq i8 %9, 10
  %memberidx9.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %10, label %if.entry6.i, label %Lexer_advance.exit.sink.split

if.entry6.i:                                      ; preds = %ifend.i
  store i64 0, ptr %memberidx9.i, align 4
  %memberidx10.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.sink.split

Lexer_advance.exit.sink.split:                    ; preds = %ifend.i, %if.entry6.i
  %memberidx10.i.sink67 = phi ptr [ %memberidx10.i, %if.entry6.i ], [ %memberidx9.i, %ifend.i ]
  %11 = load i64, ptr %memberidx10.i.sink67, align 4
  %12 = add nsw i64 %11, 1
  store i64 %12, ptr %memberidx10.i.sink67, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %Lexer_advance.exit.sink.split, %2
  %13 = load i64, ptr %memberidx.i.i, align 4
  %14 = add nsw i64 %13, 1
  %15 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i15 = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  %16 = load i64, ptr %memberidx2.i15, align 4
  %17 = icmp slt i64 %14, %16
  br i1 %17, label %if.entry.i, label %Lexer_peek.exit

if.entry.i:                                       ; preds = %Lexer_advance.exit
  %18 = load ptr, ptr %15, align 8
  %memberidx4.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %18, i64 0, i32 2
  %19 = load ptr, ptr %memberidx4.i, align 8
  %20 = tail call i8 %19(ptr nonnull %15, i64 %14)
  br label %Lexer_peek.exit

Lexer_peek.exit:                                  ; preds = %Lexer_advance.exit, %if.entry.i
  %common.ret.op.i = phi i8 [ %20, %if.entry.i ], [ 0, %Lexer_advance.exit ]
  %21 = add i8 %common.ret.op.i, -97
  %22 = icmp ult i8 %21, 26
  %23 = add i8 %common.ret.op.i, -32
  %common.ret.op.i16 = select i1 %22, i8 %23, i8 %common.ret.op.i
  %24 = icmp slt i64 %1, 10
  %25 = icmp sgt i8 %common.ret.op.i16, 47
  %26 = sext i8 %common.ret.op.i16 to i64
  %27 = add nsw i64 %1, 48
  %28 = icmp sge i64 %27, %26
  %29 = and i1 %25, %28
  br i1 %24, label %in_base_range.exit34, label %ifend.i33

ifend.i33:                                        ; preds = %Lexer_peek.exit
  %30 = icmp sgt i8 %common.ret.op.i16, 64
  %31 = add nuw nsw i64 %1, 65
  %32 = icmp sge i64 %31, %26
  %33 = and i1 %30, %32
  %34 = or i1 %29, %33
  br label %in_base_range.exit34

in_base_range.exit34:                             ; preds = %Lexer_peek.exit, %ifend.i33
  %common.ret.op.i31 = phi i1 [ %34, %ifend.i33 ], [ %29, %Lexer_peek.exit ]
  %35 = load i64, ptr %memberidx.i.i, align 4
  %36 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i50 = getelementptr inbounds %string, ptr %36, i64 0, i32 2
  %37 = load i64, ptr %memberidx2.i50, align 4
  %.not60 = icmp slt i64 %35, %37
  %38 = and i1 %common.ret.op.i31, %.not60
  br i1 %38, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %in_base_range.exit34
  %memberidx12.i45 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i43 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %39 = add nsw i64 %1, 48
  %40 = add nuw nsw i64 %1, 65
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %in_base_range.exit
  %41 = phi i64 [ %86, %in_base_range.exit ], [ %37, %while.entry.preheader ]
  %42 = phi ptr [ %85, %in_base_range.exit ], [ %36, %while.entry.preheader ]
  %43 = phi i64 [ %84, %in_base_range.exit ], [ %35, %while.entry.preheader ]
  %length.0 = phi i64 [ %48, %in_base_range.exit ], [ 3, %while.entry.preheader ]
  %current_char.0 = phi i8 [ %common.ret.op.i23, %in_base_range.exit ], [ %common.ret.op.i16, %while.entry.preheader ]
  %value.0 = phi i64 [ %47, %in_base_range.exit ], [ 0, %while.entry.preheader ]
  %44 = mul nuw i64 %value.0, %1
  %45 = icmp sgt i8 %current_char.0, 64
  %spec.select.v = select i1 %45, i8 -55, i8 -48
  %spec.select = add i8 %spec.select.v, %current_char.0
  %46 = zext i8 %spec.select to i64
  %47 = add nuw i64 %44, %46
  %48 = add nuw nsw i64 %length.0, 1
  %.not61 = icmp slt i64 %43, %41
  br i1 %.not61, label %ifend.i41, label %Lexer_advance.exit47

while.end:                                        ; preds = %in_base_range.exit, %in_base_range.exit34
  %length.1 = phi i64 [ 3, %in_base_range.exit34 ], [ %48, %in_base_range.exit ]
  %value.1 = phi i64 [ 0, %in_base_range.exit34 ], [ %47, %in_base_range.exit ]
  %49 = tail call ptr @malloc(i32 24)
  %50 = tail call ptr @malloc(i32 32)
  %51 = load i64, ptr %memberidx.i.i, align 4
  %52 = sub i64 1, %length.1
  %53 = add i64 %52, %51
  %54 = add nsw i64 %51, 1
  %memberidx2.i54 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %55 = load i64, ptr %memberidx2.i54, align 4
  %56 = sub nuw i64 %55, %length.1
  %memberidx3.i55 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %57 = load i64, ptr %memberidx3.i55, align 4
  store i64 %53, ptr %50, align 4
  %memberidx1.i.i56 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 1
  store i64 %54, ptr %memberidx1.i.i56, align 4
  %memberidx2.i.i57 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 2
  store i64 %56, ptr %memberidx2.i.i57, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 3
  store i64 %57, ptr %memberidx3.i.i, align 4
  store i64 31, ptr %49, align 4
  %memberidx1.i.i51 = getelementptr inbounds %Token, ptr %49, i64 0, i32 1
  store ptr %50, ptr %memberidx1.i.i51, align 8
  %memberidx.i52 = getelementptr inbounds %IntToken, ptr %49, i64 0, i32 2
  store i64 %value.1, ptr %memberidx.i52, align 4
  ret ptr %49

ifend.i41:                                        ; preds = %while.entry
  %58 = load ptr, ptr %42, align 8
  %memberidx2.i39 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %58, i64 0, i32 2
  %59 = load ptr, ptr %memberidx2.i39, align 8
  %60 = add nsw i64 %43, 1
  store i64 %60, ptr %memberidx.i.i, align 4
  %61 = tail call i8 %59(ptr nonnull %42, i64 %60)
  store i8 %61, ptr %0, align 1
  %62 = icmp eq i8 %61, 10
  br i1 %62, label %if.entry6.i44, label %Lexer_advance.exit47.sink.split

if.entry6.i44:                                    ; preds = %ifend.i41
  store i64 0, ptr %memberidx12.i45, align 4
  br label %Lexer_advance.exit47.sink.split

Lexer_advance.exit47.sink.split:                  ; preds = %ifend.i41, %if.entry6.i44
  %memberidx10.i43.sink69 = phi ptr [ %memberidx10.i43, %if.entry6.i44 ], [ %memberidx12.i45, %ifend.i41 ]
  %63 = load i64, ptr %memberidx10.i43.sink69, align 4
  %64 = add nsw i64 %63, 1
  store i64 %64, ptr %memberidx10.i43.sink69, align 4
  br label %Lexer_advance.exit47

Lexer_advance.exit47:                             ; preds = %Lexer_advance.exit47.sink.split, %while.entry
  %65 = load i64, ptr %memberidx.i.i, align 4
  %66 = add nsw i64 %65, 1
  %67 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i26 = getelementptr inbounds %string, ptr %67, i64 0, i32 2
  %68 = load i64, ptr %memberidx2.i26, align 4
  %69 = icmp slt i64 %66, %68
  br i1 %69, label %if.entry.i29, label %Lexer_peek.exit30

if.entry.i29:                                     ; preds = %Lexer_advance.exit47
  %70 = load ptr, ptr %67, align 8
  %memberidx4.i28 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %70, i64 0, i32 2
  %71 = load ptr, ptr %memberidx4.i28, align 8
  %72 = tail call i8 %71(ptr nonnull %67, i64 %66)
  br label %Lexer_peek.exit30

Lexer_peek.exit30:                                ; preds = %Lexer_advance.exit47, %if.entry.i29
  %common.ret.op.i27 = phi i8 [ %72, %if.entry.i29 ], [ 0, %Lexer_advance.exit47 ]
  %73 = add i8 %common.ret.op.i27, -97
  %74 = icmp ult i8 %73, 26
  %75 = add i8 %common.ret.op.i27, -32
  %common.ret.op.i23 = select i1 %74, i8 %75, i8 %common.ret.op.i27
  %76 = icmp sgt i8 %common.ret.op.i23, 47
  %77 = sext i8 %common.ret.op.i23 to i64
  %78 = icmp sge i64 %39, %77
  %79 = and i1 %76, %78
  br i1 %24, label %in_base_range.exit, label %ifend.i22

ifend.i22:                                        ; preds = %Lexer_peek.exit30
  %80 = icmp sgt i8 %common.ret.op.i23, 64
  %81 = icmp sge i64 %40, %77
  %82 = and i1 %80, %81
  %83 = or i1 %79, %82
  br label %in_base_range.exit

in_base_range.exit:                               ; preds = %Lexer_peek.exit30, %ifend.i22
  %common.ret.op.i20 = phi i1 [ %83, %ifend.i22 ], [ %79, %Lexer_peek.exit30 ]
  %84 = load i64, ptr %memberidx.i.i, align 4
  %85 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i19 = getelementptr inbounds %string, ptr %85, i64 0, i32 2
  %86 = load i64, ptr %memberidx2.i19, align 4
  %.not62 = icmp slt i64 %84, %86
  %87 = and i1 %common.ret.op.i20, %.not62
  br i1 %87, label %while.entry, label %while.end
}

define internal fastcc ptr @Lexer_lex_token(ptr %0) unnamed_addr {
  %2 = load i8, ptr %0, align 1
  switch i8 %2, label %ifend [
    i8 32, label %if.entry
    i8 9, label %if.entry
  ]

common.ret:                                       ; preds = %ifend6.i874, %Lexer_advance.exit84.i866, %ifend3.i845, %Lexer_advance.exit.i808, %ifend6.i779, %Lexer_advance.exit84.i771, %ifend3.i750, %Lexer_advance.exit.i713, %ifend.i684, %Lexer_advance.exit.i676, %ifend.i647, %Lexer_advance.exit.i639, %ifend.i512, %Lexer_advance.exit.i504, %ifend.i422, %Lexer_advance.exit.i414, %ifend.i385, %Lexer_advance.exit.i384, %ifend6.i363, %Lexer_advance.exit84.i355, %ifend3.i340, %Lexer_advance.exit.i315, %ifend6.i, %Lexer_advance.exit84.i, %Lexer_advance.exit50.i, %Lexer_advance.exit.i282, %ifend3.i, %Lexer_advance.exit44.i, %Lexer_advance.exit.i261, %end.i, %if.entry6.i199, %if.entry2.i, %if.entry.i196, %ifend5.i, %ifend.i180, %Array_FloError____sl__.exit, %if.entry87, %Lexer_dot_token.exit, %if.entry69, %if.entry66, %Lexer_char_token.exit, %if.entry60, %if.entry57, %if.entry54, %if.entry51, %if.entry48, %if.entry45, %if.entry42, %Lexer_advance.exit472, %if.entry18, %if.entry15, %if.entry12, %if.entry6, %Lexer_advance.exit
  %common.ret.op = phi ptr [ %13, %Lexer_advance.exit ], [ %250, %if.entry6 ], [ %362, %if.entry12 ], [ %369, %if.entry15 ], [ %376, %if.entry18 ], [ %808, %Lexer_advance.exit472 ], [ %840, %if.entry42 ], [ %847, %if.entry45 ], [ %854, %if.entry48 ], [ %861, %if.entry51 ], [ %868, %if.entry54 ], [ %875, %if.entry57 ], [ %882, %if.entry60 ], [ %925, %Lexer_char_token.exit ], [ %934, %if.entry66 ], [ %941, %if.entry69 ], [ %1216, %Lexer_dot_token.exit ], [ %1225, %if.entry87 ], [ null, %Array_FloError____sl__.exit ], [ %229, %ifend.i180 ], [ %232, %ifend5.i ], [ %263, %if.entry.i196 ], [ %274, %if.entry2.i ], [ %285, %if.entry6.i199 ], [ %326, %end.i ], [ %401, %Lexer_advance.exit.i261 ], [ %433, %ifend3.i ], [ %425, %Lexer_advance.exit44.i ], [ %458, %Lexer_advance.exit.i282 ], [ %514, %ifend6.i ], [ %482, %Lexer_advance.exit50.i ], [ %506, %Lexer_advance.exit84.i ], [ %540, %Lexer_advance.exit.i315 ], [ %572, %ifend3.i340 ], [ %589, %Lexer_advance.exit84.i355 ], [ %597, %ifend6.i363 ], [ %623, %Lexer_advance.exit.i384 ], [ %631, %ifend.i385 ], [ %656, %Lexer_advance.exit.i414 ], [ %664, %ifend.i422 ], [ %825, %Lexer_advance.exit.i504 ], [ %833, %ifend.i512 ], [ %966, %Lexer_advance.exit.i639 ], [ %974, %ifend.i647 ], [ %999, %Lexer_advance.exit.i676 ], [ %1007, %ifend.i684 ], [ %1032, %Lexer_advance.exit.i713 ], [ %1064, %ifend3.i750 ], [ %1081, %Lexer_advance.exit84.i771 ], [ %1089, %ifend6.i779 ], [ %1115, %Lexer_advance.exit.i808 ], [ %1147, %ifend3.i845 ], [ %1164, %Lexer_advance.exit84.i866 ], [ %1172, %ifend6.i874 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1, %1
  %memberidx.i.i167 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i167, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i168 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %5 = load i64, ptr %memberidx2.i.i168, align 4
  %.not1040 = icmp slt i64 %3, %5
  br i1 %.not1040, label %ifend.i, label %Lexer_advance.exit

ifend.i:                                          ; preds = %if.entry
  %6 = load ptr, ptr %4, align 8
  %memberidx2.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %6, i64 0, i32 2
  %7 = load ptr, ptr %memberidx2.i, align 8
  %8 = add nsw i64 %3, 1
  store i64 %8, ptr %memberidx.i.i167, align 4
  %9 = tail call i8 %7(ptr nonnull %4, i64 %8)
  store i8 %9, ptr %0, align 1
  %10 = icmp eq i8 %9, 10
  %memberidx9.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %10, label %if.entry6.i, label %Lexer_advance.exit.sink.split

if.entry6.i:                                      ; preds = %ifend.i
  store i64 0, ptr %memberidx9.i, align 4
  %memberidx10.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.sink.split

Lexer_advance.exit.sink.split:                    ; preds = %ifend.i, %if.entry6.i
  %memberidx10.i.sink1155 = phi ptr [ %memberidx10.i, %if.entry6.i ], [ %memberidx9.i, %ifend.i ]
  %11 = load i64, ptr %memberidx10.i.sink1155, align 4
  %12 = add nsw i64 %11, 1
  store i64 %12, ptr %memberidx10.i.sink1155, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %Lexer_advance.exit.sink.split, %if.entry
  %13 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

ifend:                                            ; preds = %1
  %14 = and i8 %2, -33
  %15 = add i8 %14, -65
  %16 = icmp ult i8 %15, 26
  %17 = icmp eq i8 %2, 95
  %18 = or i1 %17, %16
  br i1 %18, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %memberidx.i172 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %19 = load i64, ptr %memberidx.i172, align 4
  %20 = add nsw i64 %19, 1
  %memberidx1.i.i174 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %21 = load ptr, ptr %memberidx1.i.i174, align 8
  %memberidx2.i.i175 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i.i175, align 4
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %if.entry.i.i, label %Lexer_peek.exit.i

if.entry.i.i:                                     ; preds = %if.entry3
  %24 = load ptr, ptr %21, align 8
  %memberidx4.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %24, i64 0, i32 2
  %25 = load ptr, ptr %memberidx4.i.i, align 8
  %26 = tail call i8 %25(ptr nonnull %21, i64 %20)
  %.pre1114 = load i64, ptr %memberidx.i172, align 4
  %.pre1115 = load ptr, ptr %memberidx1.i.i174, align 8
  %memberidx2.i32.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1115, i64 0, i32 2
  %.pre1116 = load i64, ptr %memberidx2.i32.i.phi.trans.insert, align 4
  %.pre1126 = add nsw i64 %.pre1114, 1
  br label %Lexer_peek.exit.i

Lexer_peek.exit.i:                                ; preds = %if.entry.i.i, %if.entry3
  %.pre-phi = phi i64 [ %.pre1126, %if.entry.i.i ], [ %20, %if.entry3 ]
  %27 = phi i64 [ %.pre1116, %if.entry.i.i ], [ %22, %if.entry3 ]
  %28 = phi ptr [ %.pre1115, %if.entry.i.i ], [ %21, %if.entry3 ]
  %29 = phi i64 [ %.pre1114, %if.entry.i.i ], [ %19, %if.entry3 ]
  %30 = icmp slt i64 %.pre-phi, %27
  br i1 %30, label %if.entry.i35.i, label %Lexer_peek.exit36.i

if.entry.i35.i:                                   ; preds = %Lexer_peek.exit.i
  %31 = load ptr, ptr %28, align 8
  %memberidx4.i34.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %31, i64 0, i32 2
  %32 = load ptr, ptr %memberidx4.i34.i, align 8
  %33 = tail call i8 %32(ptr nonnull %28, i64 %.pre-phi)
  %.pre1117 = load i64, ptr %memberidx.i172, align 4
  %.pre1118 = load ptr, ptr %memberidx1.i.i174, align 8
  %memberidx2.i54.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1118, i64 0, i32 2
  %.pre1119 = load i64, ptr %memberidx2.i54.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit36.i

Lexer_peek.exit36.i:                              ; preds = %if.entry.i35.i, %Lexer_peek.exit.i
  %34 = phi i64 [ %.pre1119, %if.entry.i35.i ], [ %27, %Lexer_peek.exit.i ]
  %35 = phi ptr [ %.pre1118, %if.entry.i35.i ], [ %28, %Lexer_peek.exit.i ]
  %36 = phi i64 [ %.pre1117, %if.entry.i35.i ], [ %29, %Lexer_peek.exit.i ]
  %common.ret.op.i33.i = phi i8 [ %33, %if.entry.i35.i ], [ 0, %Lexer_peek.exit.i ]
  %37 = and i8 %common.ret.op.i33.i, -33
  %38 = add i8 %37, -65
  %39 = icmp ult i8 %38, 26
  %40 = icmp eq i8 %common.ret.op.i33.i, 95
  %41 = or i1 %40, %39
  %42 = add i8 %common.ret.op.i33.i, -48
  %43 = icmp ult i8 %42, 10
  %44 = or i1 %43, %41
  %.not1034 = icmp slt i64 %36, %34
  %45 = and i1 %.not1034, %44
  br i1 %45, label %while.entry.i.preheader, label %while.end.i

while.entry.i.preheader:                          ; preds = %Lexer_peek.exit36.i
  %memberidx12.i75.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i73.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Lexer_peek.exit84.i
  %46 = phi i64 [ %65, %Lexer_peek.exit84.i ], [ %34, %while.entry.i.preheader ]
  %47 = phi ptr [ %66, %Lexer_peek.exit84.i ], [ %35, %while.entry.i.preheader ]
  %48 = phi i64 [ %67, %Lexer_peek.exit84.i ], [ %36, %while.entry.i.preheader ]
  %length.0.i = phi i64 [ %49, %Lexer_peek.exit84.i ], [ 1, %while.entry.i.preheader ]
  %49 = add nuw nsw i64 %length.0.i, 1
  %.not1038 = icmp slt i64 %48, %46
  br i1 %.not1038, label %ifend.i71.i, label %Lexer_advance.exit77.i

ifend.i71.i:                                      ; preds = %while.entry.i
  %50 = load ptr, ptr %47, align 8
  %memberidx2.i69.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %50, i64 0, i32 2
  %51 = load ptr, ptr %memberidx2.i69.i, align 8
  %52 = add nsw i64 %48, 1
  store i64 %52, ptr %memberidx.i172, align 4
  %53 = tail call i8 %51(ptr nonnull %47, i64 %52)
  store i8 %53, ptr %0, align 1
  %54 = icmp eq i8 %53, 10
  br i1 %54, label %if.entry6.i74.i, label %Lexer_advance.exit77.i.sink.split

if.entry6.i74.i:                                  ; preds = %ifend.i71.i
  store i64 0, ptr %memberidx12.i75.i, align 4
  br label %Lexer_advance.exit77.i.sink.split

Lexer_advance.exit77.i.sink.split:                ; preds = %ifend.i71.i, %if.entry6.i74.i
  %memberidx12.i75.i.sink1157 = phi ptr [ %memberidx10.i73.i, %if.entry6.i74.i ], [ %memberidx12.i75.i, %ifend.i71.i ]
  %55 = load i64, ptr %memberidx12.i75.i.sink1157, align 4
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr %memberidx12.i75.i.sink1157, align 4
  br label %Lexer_advance.exit77.i

Lexer_advance.exit77.i:                           ; preds = %Lexer_advance.exit77.i.sink.split, %while.entry.i
  %57 = load i64, ptr %memberidx.i172, align 4
  %58 = add nsw i64 %57, 1
  %59 = load ptr, ptr %memberidx1.i.i174, align 8
  %memberidx2.i80.i = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  %60 = load i64, ptr %memberidx2.i80.i, align 4
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %if.entry.i83.i, label %Lexer_peek.exit84.i

if.entry.i83.i:                                   ; preds = %Lexer_advance.exit77.i
  %62 = load ptr, ptr %59, align 8
  %memberidx4.i82.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %62, i64 0, i32 2
  %63 = load ptr, ptr %memberidx4.i82.i, align 8
  %64 = tail call i8 %63(ptr nonnull %59, i64 %58)
  %.pre1120 = load i64, ptr %memberidx.i172, align 4
  %.pre1121 = load ptr, ptr %memberidx1.i.i174, align 8
  %memberidx2.i92.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1121, i64 0, i32 2
  %.pre1122 = load i64, ptr %memberidx2.i92.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit84.i

Lexer_peek.exit84.i:                              ; preds = %if.entry.i83.i, %Lexer_advance.exit77.i
  %65 = phi i64 [ %.pre1122, %if.entry.i83.i ], [ %60, %Lexer_advance.exit77.i ]
  %66 = phi ptr [ %.pre1121, %if.entry.i83.i ], [ %59, %Lexer_advance.exit77.i ]
  %67 = phi i64 [ %.pre1120, %if.entry.i83.i ], [ %57, %Lexer_advance.exit77.i ]
  %common.ret.op.i81.i = phi i8 [ %64, %if.entry.i83.i ], [ 0, %Lexer_advance.exit77.i ]
  %68 = and i8 %common.ret.op.i81.i, -33
  %69 = add i8 %68, -65
  %70 = icmp ult i8 %69, 26
  %71 = icmp eq i8 %common.ret.op.i81.i, 95
  %72 = or i1 %71, %70
  %73 = add i8 %common.ret.op.i81.i, -48
  %74 = icmp ult i8 %73, 10
  %75 = or i1 %74, %72
  %.not1039 = icmp slt i64 %67, %65
  %76 = and i1 %.not1039, %75
  br i1 %76, label %while.entry.i, label %while.end.i

while.end.i:                                      ; preds = %Lexer_peek.exit84.i, %Lexer_peek.exit36.i
  %77 = phi ptr [ %35, %Lexer_peek.exit36.i ], [ %66, %Lexer_peek.exit84.i ]
  %length.1.i = phi i64 [ 1, %Lexer_peek.exit36.i ], [ %49, %Lexer_peek.exit84.i ]
  %78 = load ptr, ptr %77, align 8
  %memberidx2.i177 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %78, i64 0, i32 1
  %79 = load ptr, ptr %memberidx2.i177, align 8
  %80 = tail call ptr %79(ptr nonnull %77, i64 %19, i64 %length.1.i)
  %81 = tail call ptr @malloc(i32 32)
  %82 = load i64, ptr %memberidx.i172, align 4
  %83 = sub i64 1, %length.1.i
  %84 = add i64 %83, %82
  %85 = add nsw i64 %82, 1
  %memberidx2.i94.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %86 = load i64, ptr %memberidx2.i94.i, align 4
  %87 = sub nuw i64 %86, %length.1.i
  %memberidx3.i95.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %88 = load i64, ptr %memberidx3.i95.i, align 4
  store i64 %84, ptr %81, align 4
  %memberidx1.i.i96.i = getelementptr inbounds %FloRange, ptr %81, i64 0, i32 1
  store i64 %85, ptr %memberidx1.i.i96.i, align 4
  %memberidx2.i.i97.i = getelementptr inbounds %FloRange, ptr %81, i64 0, i32 2
  store i64 %87, ptr %memberidx2.i.i97.i, align 4
  %memberidx3.i.i98.i = getelementptr inbounds %FloRange, ptr %81, i64 0, i32 3
  store i64 %88, ptr %memberidx3.i.i98.i, align 4
  %89 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %89, ptr noundef nonnull align 8 dereferenceable(3) @34, i64 3, i1 false)
  %90 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %90, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %string, ptr %90, i64 0, i32 1
  store ptr %89, ptr %memberidx.i.i.i.i, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %string, ptr %90, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %string, ptr %90, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i.i.i, align 4
  %memberidx.i.i85.i = getelementptr inbounds %string, ptr %80, i64 0, i32 2
  %91 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i.i.i = icmp eq i64 %91, 3
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %ifend.i89.i

ifend.i.i.i:                                      ; preds = %while.end.i
  %memberidx2.i.i87.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %92 = load ptr, ptr %memberidx2.i.i87.i, align 8
  %93 = tail call i64 @memcmp(ptr %92, ptr nonnull %89, i64 3)
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %if.entry.i179, label %ifend.i89.i

ifend.i89.i:                                      ; preds = %while.end.i, %ifend.i.i.i
  %95 = tail call ptr @malloc(i32 2)
  store i16 29295, ptr %95, align 8
  %96 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %96, align 8
  %memberidx.i.i85.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i.i85.i.i, align 8
  %memberidx1.i.i86.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i86.i.i, align 4
  %memberidx2.i.i87.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i87.i.i, align 4
  %97 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i90.i.i = icmp eq i64 %97, 2
  br i1 %.not.i90.i.i, label %ifend.i94.i.i, label %ifend3.i.i

ifend.i94.i.i:                                    ; preds = %ifend.i89.i
  %memberidx2.i92.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %98 = load ptr, ptr %memberidx2.i92.i.i, align 8
  %99 = tail call i64 @memcmp(ptr %98, ptr nonnull %95, i64 2)
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %if.entry.i179, label %ifend3.i.i

ifend3.i.i:                                       ; preds = %ifend.i89.i, %ifend.i94.i.i
  %101 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %101, ptr noundef nonnull align 8 dereferenceable(5) @35, i64 5, i1 false)
  %102 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %102, align 8
  %memberidx.i.i96.i.i = getelementptr inbounds %string, ptr %102, i64 0, i32 1
  store ptr %101, ptr %memberidx.i.i96.i.i, align 8
  %memberidx1.i.i97.i.i = getelementptr inbounds %string, ptr %102, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i97.i.i, align 4
  %memberidx2.i.i98.i.i = getelementptr inbounds %string, ptr %102, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i98.i.i, align 4
  %103 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i101.i.i = icmp eq i64 %103, 5
  br i1 %.not.i101.i.i, label %ifend.i105.i.i, label %ifend6.i.i

ifend.i105.i.i:                                   ; preds = %ifend3.i.i
  %memberidx2.i103.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %104 = load ptr, ptr %memberidx2.i103.i.i, align 8
  %105 = tail call i64 @memcmp(ptr %104, ptr nonnull %101, i64 5)
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %if.entry.i179, label %ifend6.i.i

ifend6.i.i:                                       ; preds = %ifend3.i.i, %ifend.i105.i.i
  %107 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %107, ptr noundef nonnull align 8 dereferenceable(3) @36, i64 3, i1 false)
  %108 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %108, align 8
  %memberidx.i.i107.i.i = getelementptr inbounds %string, ptr %108, i64 0, i32 1
  store ptr %107, ptr %memberidx.i.i107.i.i, align 8
  %memberidx1.i.i108.i.i = getelementptr inbounds %string, ptr %108, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i108.i.i, align 4
  %memberidx2.i.i109.i.i = getelementptr inbounds %string, ptr %108, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i109.i.i, align 4
  %109 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i112.i.i = icmp eq i64 %109, 3
  br i1 %.not.i112.i.i, label %ifend.i116.i.i, label %ifend9.i.i

ifend.i116.i.i:                                   ; preds = %ifend6.i.i
  %memberidx2.i114.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %110 = load ptr, ptr %memberidx2.i114.i.i, align 8
  %111 = tail call i64 @memcmp(ptr %110, ptr nonnull %107, i64 3)
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %if.entry.i179, label %ifend9.i.i

ifend9.i.i:                                       ; preds = %ifend6.i.i, %ifend.i116.i.i
  %113 = tail call ptr @malloc(i32 2)
  store i16 26217, ptr %113, align 8
  %114 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %114, align 8
  %memberidx.i.i118.i.i = getelementptr inbounds %string, ptr %114, i64 0, i32 1
  store ptr %113, ptr %memberidx.i.i118.i.i, align 8
  %memberidx1.i.i119.i.i = getelementptr inbounds %string, ptr %114, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i119.i.i, align 4
  %memberidx2.i.i120.i.i = getelementptr inbounds %string, ptr %114, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i120.i.i, align 4
  %115 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i123.i.i = icmp eq i64 %115, 2
  br i1 %.not.i123.i.i, label %ifend.i127.i.i, label %ifend12.i.i

ifend.i127.i.i:                                   ; preds = %ifend9.i.i
  %memberidx2.i125.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %116 = load ptr, ptr %memberidx2.i125.i.i, align 8
  %117 = tail call i64 @memcmp(ptr %116, ptr nonnull %113, i64 2)
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %if.entry.i179, label %ifend12.i.i

ifend12.i.i:                                      ; preds = %ifend9.i.i, %ifend.i127.i.i
  %119 = tail call ptr @malloc(i32 4)
  store i32 1702063205, ptr %119, align 8
  %120 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %120, align 8
  %memberidx.i.i129.i.i = getelementptr inbounds %string, ptr %120, i64 0, i32 1
  store ptr %119, ptr %memberidx.i.i129.i.i, align 8
  %memberidx1.i.i130.i.i = getelementptr inbounds %string, ptr %120, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i130.i.i, align 4
  %memberidx2.i.i131.i.i = getelementptr inbounds %string, ptr %120, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i131.i.i, align 4
  %121 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i134.i.i = icmp eq i64 %121, 4
  br i1 %.not.i134.i.i, label %ifend.i138.i.i, label %ifend15.i.i

ifend.i138.i.i:                                   ; preds = %ifend12.i.i
  %memberidx2.i136.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %122 = load ptr, ptr %memberidx2.i136.i.i, align 8
  %123 = tail call i64 @memcmp(ptr %122, ptr nonnull %119, i64 4)
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %if.entry.i179, label %ifend15.i.i

ifend15.i.i:                                      ; preds = %ifend12.i.i, %ifend.i138.i.i
  %125 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %125, ptr noundef nonnull align 8 dereferenceable(3) @38, i64 3, i1 false)
  %126 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %126, align 8
  %memberidx.i.i140.i.i = getelementptr inbounds %string, ptr %126, i64 0, i32 1
  store ptr %125, ptr %memberidx.i.i140.i.i, align 8
  %memberidx1.i.i141.i.i = getelementptr inbounds %string, ptr %126, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i141.i.i, align 4
  %memberidx2.i.i142.i.i = getelementptr inbounds %string, ptr %126, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i142.i.i, align 4
  %127 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i145.i.i = icmp eq i64 %127, 3
  br i1 %.not.i145.i.i, label %ifend.i149.i.i, label %ifend18.i.i

ifend.i149.i.i:                                   ; preds = %ifend15.i.i
  %memberidx2.i147.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %128 = load ptr, ptr %memberidx2.i147.i.i, align 8
  %129 = tail call i64 @memcmp(ptr %128, ptr nonnull %125, i64 3)
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %if.entry.i179, label %ifend18.i.i

ifend18.i.i:                                      ; preds = %ifend15.i.i, %ifend.i149.i.i
  %131 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %131, ptr noundef nonnull align 8 dereferenceable(5) @39, i64 5, i1 false)
  %132 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %132, align 8
  %memberidx.i.i151.i.i = getelementptr inbounds %string, ptr %132, i64 0, i32 1
  store ptr %131, ptr %memberidx.i.i151.i.i, align 8
  %memberidx1.i.i152.i.i = getelementptr inbounds %string, ptr %132, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i152.i.i, align 4
  %memberidx2.i.i153.i.i = getelementptr inbounds %string, ptr %132, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i153.i.i, align 4
  %133 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i156.i.i = icmp eq i64 %133, 5
  br i1 %.not.i156.i.i, label %ifend.i160.i.i, label %ifend21.i.i

ifend.i160.i.i:                                   ; preds = %ifend18.i.i
  %memberidx2.i158.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %134 = load ptr, ptr %memberidx2.i158.i.i, align 8
  %135 = tail call i64 @memcmp(ptr %134, ptr nonnull %131, i64 5)
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %if.entry.i179, label %ifend21.i.i

ifend21.i.i:                                      ; preds = %ifend18.i.i, %ifend.i160.i.i
  %137 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %137, ptr noundef nonnull align 8 dereferenceable(3) @40, i64 3, i1 false)
  %138 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %138, align 8
  %memberidx.i.i162.i.i = getelementptr inbounds %string, ptr %138, i64 0, i32 1
  store ptr %137, ptr %memberidx.i.i162.i.i, align 8
  %memberidx1.i.i163.i.i = getelementptr inbounds %string, ptr %138, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i163.i.i, align 4
  %memberidx2.i.i164.i.i = getelementptr inbounds %string, ptr %138, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i164.i.i, align 4
  %139 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i167.i.i = icmp eq i64 %139, 3
  br i1 %.not.i167.i.i, label %ifend.i171.i.i, label %ifend24.i.i

ifend.i171.i.i:                                   ; preds = %ifend21.i.i
  %memberidx2.i169.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %140 = load ptr, ptr %memberidx2.i169.i.i, align 8
  %141 = tail call i64 @memcmp(ptr %140, ptr nonnull %137, i64 3)
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %if.entry.i179, label %ifend24.i.i

ifend24.i.i:                                      ; preds = %ifend21.i.i, %ifend.i171.i.i
  %143 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %143, ptr noundef nonnull align 8 dereferenceable(5) @41, i64 5, i1 false)
  %144 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %144, align 8
  %memberidx.i.i173.i.i = getelementptr inbounds %string, ptr %144, i64 0, i32 1
  store ptr %143, ptr %memberidx.i.i173.i.i, align 8
  %memberidx1.i.i174.i.i = getelementptr inbounds %string, ptr %144, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i174.i.i, align 4
  %memberidx2.i.i175.i.i = getelementptr inbounds %string, ptr %144, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i175.i.i, align 4
  %145 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i178.i.i = icmp eq i64 %145, 5
  br i1 %.not.i178.i.i, label %ifend.i182.i.i, label %ifend27.i.i

ifend.i182.i.i:                                   ; preds = %ifend24.i.i
  %memberidx2.i180.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %146 = load ptr, ptr %memberidx2.i180.i.i, align 8
  %147 = tail call i64 @memcmp(ptr %146, ptr nonnull %143, i64 5)
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %if.entry.i179, label %ifend27.i.i

ifend27.i.i:                                      ; preds = %ifend24.i.i, %ifend.i182.i.i
  %149 = tail call ptr @malloc(i32 8)
  store i64 7310870969309884259, ptr %149, align 8
  %150 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %150, align 8
  %memberidx.i.i184.i.i = getelementptr inbounds %string, ptr %150, i64 0, i32 1
  store ptr %149, ptr %memberidx.i.i184.i.i, align 8
  %memberidx1.i.i185.i.i = getelementptr inbounds %string, ptr %150, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i185.i.i, align 4
  %memberidx2.i.i186.i.i = getelementptr inbounds %string, ptr %150, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i186.i.i, align 4
  %151 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i189.i.i = icmp eq i64 %151, 8
  br i1 %.not.i189.i.i, label %ifend.i193.i.i, label %ifend30.i.i

ifend.i193.i.i:                                   ; preds = %ifend27.i.i
  %memberidx2.i191.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %152 = load ptr, ptr %memberidx2.i191.i.i, align 8
  %153 = tail call i64 @memcmp(ptr %152, ptr nonnull %149, i64 8)
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %if.entry.i179, label %ifend30.i.i

ifend30.i.i:                                      ; preds = %ifend27.i.i, %ifend.i193.i.i
  %155 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %155, ptr noundef nonnull align 8 dereferenceable(6) @42, i64 6, i1 false)
  %156 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %156, align 8
  %memberidx.i.i195.i.i = getelementptr inbounds %string, ptr %156, i64 0, i32 1
  store ptr %155, ptr %memberidx.i.i195.i.i, align 8
  %memberidx1.i.i196.i.i = getelementptr inbounds %string, ptr %156, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i196.i.i, align 4
  %memberidx2.i.i197.i.i = getelementptr inbounds %string, ptr %156, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i197.i.i, align 4
  %157 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i200.i.i = icmp eq i64 %157, 6
  br i1 %.not.i200.i.i, label %ifend.i204.i.i, label %ifend33.i.i

ifend.i204.i.i:                                   ; preds = %ifend30.i.i
  %memberidx2.i202.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %158 = load ptr, ptr %memberidx2.i202.i.i, align 8
  %159 = tail call i64 @memcmp(ptr %158, ptr nonnull %155, i64 6)
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %if.entry.i179, label %ifend33.i.i

ifend33.i.i:                                      ; preds = %ifend30.i.i, %ifend.i204.i.i
  %161 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %161, ptr noundef nonnull align 8 dereferenceable(6) @43, i64 6, i1 false)
  %162 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %162, align 8
  %memberidx.i.i206.i.i = getelementptr inbounds %string, ptr %162, i64 0, i32 1
  store ptr %161, ptr %memberidx.i.i206.i.i, align 8
  %memberidx1.i.i207.i.i = getelementptr inbounds %string, ptr %162, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i207.i.i, align 4
  %memberidx2.i.i208.i.i = getelementptr inbounds %string, ptr %162, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i208.i.i, align 4
  %163 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i211.i.i = icmp eq i64 %163, 6
  br i1 %.not.i211.i.i, label %ifend.i215.i.i, label %ifend36.i.i

ifend.i215.i.i:                                   ; preds = %ifend33.i.i
  %memberidx2.i213.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %164 = load ptr, ptr %memberidx2.i213.i.i, align 8
  %165 = tail call i64 @memcmp(ptr %164, ptr nonnull %161, i64 6)
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %if.entry.i179, label %ifend36.i.i

ifend36.i.i:                                      ; preds = %ifend33.i.i, %ifend.i215.i.i
  %167 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %167, ptr noundef nonnull align 8 dereferenceable(7) @44, i64 7, i1 false)
  %168 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %168, align 8
  %memberidx.i.i217.i.i = getelementptr inbounds %string, ptr %168, i64 0, i32 1
  store ptr %167, ptr %memberidx.i.i217.i.i, align 8
  %memberidx1.i.i218.i.i = getelementptr inbounds %string, ptr %168, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i218.i.i, align 4
  %memberidx2.i.i219.i.i = getelementptr inbounds %string, ptr %168, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i219.i.i, align 4
  %169 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i222.i.i = icmp eq i64 %169, 7
  br i1 %.not.i222.i.i, label %ifend.i226.i.i, label %ifend39.i.i

ifend.i226.i.i:                                   ; preds = %ifend36.i.i
  %memberidx2.i224.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %170 = load ptr, ptr %memberidx2.i224.i.i, align 8
  %171 = tail call i64 @memcmp(ptr %170, ptr nonnull %167, i64 7)
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %if.entry.i179, label %ifend39.i.i

ifend39.i.i:                                      ; preds = %ifend36.i.i, %ifend.i226.i.i
  %173 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %173, ptr noundef nonnull align 8 dereferenceable(6) @45, i64 6, i1 false)
  %174 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %174, align 8
  %memberidx.i.i228.i.i = getelementptr inbounds %string, ptr %174, i64 0, i32 1
  store ptr %173, ptr %memberidx.i.i228.i.i, align 8
  %memberidx1.i.i229.i.i = getelementptr inbounds %string, ptr %174, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i229.i.i, align 4
  %memberidx2.i.i230.i.i = getelementptr inbounds %string, ptr %174, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i230.i.i, align 4
  %175 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i233.i.i = icmp eq i64 %175, 6
  br i1 %.not.i233.i.i, label %ifend.i237.i.i, label %ifend42.i.i

ifend.i237.i.i:                                   ; preds = %ifend39.i.i
  %memberidx2.i235.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %176 = load ptr, ptr %memberidx2.i235.i.i, align 8
  %177 = tail call i64 @memcmp(ptr %176, ptr nonnull %173, i64 6)
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %if.entry.i179, label %ifend42.i.i

ifend42.i.i:                                      ; preds = %ifend39.i.i, %ifend.i237.i.i
  %179 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %179, ptr noundef nonnull align 8 dereferenceable(9) @46, i64 9, i1 false)
  %180 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %180, align 8
  %memberidx.i.i239.i.i = getelementptr inbounds %string, ptr %180, i64 0, i32 1
  store ptr %179, ptr %memberidx.i.i239.i.i, align 8
  %memberidx1.i.i240.i.i = getelementptr inbounds %string, ptr %180, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i240.i.i, align 4
  %memberidx2.i.i241.i.i = getelementptr inbounds %string, ptr %180, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i241.i.i, align 4
  %181 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i244.i.i = icmp eq i64 %181, 9
  br i1 %.not.i244.i.i, label %ifend.i248.i.i, label %ifend45.i.i

ifend.i248.i.i:                                   ; preds = %ifend42.i.i
  %memberidx2.i246.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %182 = load ptr, ptr %memberidx2.i246.i.i, align 8
  %183 = tail call i64 @memcmp(ptr %182, ptr nonnull %179, i64 9)
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %if.entry.i179, label %ifend45.i.i

ifend45.i.i:                                      ; preds = %ifend42.i.i, %ifend.i248.i.i
  %185 = tail call ptr @malloc(i32 2)
  store i16 28265, ptr %185, align 8
  %186 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %186, align 8
  %memberidx.i.i250.i.i = getelementptr inbounds %string, ptr %186, i64 0, i32 1
  store ptr %185, ptr %memberidx.i.i250.i.i, align 8
  %memberidx1.i.i251.i.i = getelementptr inbounds %string, ptr %186, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i251.i.i, align 4
  %memberidx2.i.i252.i.i = getelementptr inbounds %string, ptr %186, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i252.i.i, align 4
  %187 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i255.i.i = icmp eq i64 %187, 2
  br i1 %.not.i255.i.i, label %ifend.i259.i.i, label %ifend48.i.i

ifend.i259.i.i:                                   ; preds = %ifend45.i.i
  %memberidx2.i257.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %188 = load ptr, ptr %memberidx2.i257.i.i, align 8
  %189 = tail call i64 @memcmp(ptr %188, ptr nonnull %185, i64 2)
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %if.entry.i179, label %ifend48.i.i

ifend48.i.i:                                      ; preds = %ifend45.i.i, %ifend.i259.i.i
  %191 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %191, ptr noundef nonnull align 8 dereferenceable(5) @47, i64 5, i1 false)
  %192 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %192, align 8
  %memberidx.i.i261.i.i = getelementptr inbounds %string, ptr %192, i64 0, i32 1
  store ptr %191, ptr %memberidx.i.i261.i.i, align 8
  %memberidx1.i.i262.i.i = getelementptr inbounds %string, ptr %192, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i262.i.i, align 4
  %memberidx2.i.i263.i.i = getelementptr inbounds %string, ptr %192, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i263.i.i, align 4
  %193 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i266.i.i = icmp eq i64 %193, 5
  br i1 %.not.i266.i.i, label %ifend.i270.i.i, label %ifend51.i.i

ifend.i270.i.i:                                   ; preds = %ifend48.i.i
  %memberidx2.i268.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %194 = load ptr, ptr %memberidx2.i268.i.i, align 8
  %195 = tail call i64 @memcmp(ptr %194, ptr nonnull %191, i64 5)
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %if.entry.i179, label %ifend51.i.i

ifend51.i.i:                                      ; preds = %ifend48.i.i, %ifend.i270.i.i
  %197 = tail call ptr @malloc(i32 4)
  store i32 1836412517, ptr %197, align 8
  %198 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %198, align 8
  %memberidx.i.i272.i.i = getelementptr inbounds %string, ptr %198, i64 0, i32 1
  store ptr %197, ptr %memberidx.i.i272.i.i, align 8
  %memberidx1.i.i273.i.i = getelementptr inbounds %string, ptr %198, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i273.i.i, align 4
  %memberidx2.i.i274.i.i = getelementptr inbounds %string, ptr %198, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i274.i.i, align 4
  %199 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i277.i.i = icmp eq i64 %199, 4
  br i1 %.not.i277.i.i, label %ifend.i281.i.i, label %ifend54.i.i

ifend.i281.i.i:                                   ; preds = %ifend51.i.i
  %memberidx2.i279.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %200 = load ptr, ptr %memberidx2.i279.i.i, align 8
  %201 = tail call i64 @memcmp(ptr %200, ptr nonnull %197, i64 4)
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %if.entry.i179, label %ifend54.i.i

ifend54.i.i:                                      ; preds = %ifend51.i.i, %ifend.i281.i.i
  %203 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %203, ptr noundef nonnull align 8 dereferenceable(3) @48, i64 3, i1 false)
  %204 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %204, align 8
  %memberidx.i.i283.i.i = getelementptr inbounds %string, ptr %204, i64 0, i32 1
  store ptr %203, ptr %memberidx.i.i283.i.i, align 8
  %memberidx1.i.i284.i.i = getelementptr inbounds %string, ptr %204, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i284.i.i, align 4
  %memberidx2.i.i285.i.i = getelementptr inbounds %string, ptr %204, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i285.i.i, align 4
  %205 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i288.i.i = icmp eq i64 %205, 3
  br i1 %.not.i288.i.i, label %ifend.i292.i.i, label %ifend57.i.i

ifend.i292.i.i:                                   ; preds = %ifend54.i.i
  %memberidx2.i290.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %206 = load ptr, ptr %memberidx2.i290.i.i, align 8
  %207 = tail call i64 @memcmp(ptr %206, ptr nonnull %203, i64 3)
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %if.entry.i179, label %ifend57.i.i

ifend57.i.i:                                      ; preds = %ifend54.i.i, %ifend.i292.i.i
  %209 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %209, ptr noundef nonnull align 8 dereferenceable(3) @49, i64 3, i1 false)
  %210 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %210, align 8
  %memberidx.i.i294.i.i = getelementptr inbounds %string, ptr %210, i64 0, i32 1
  store ptr %209, ptr %memberidx.i.i294.i.i, align 8
  %memberidx1.i.i295.i.i = getelementptr inbounds %string, ptr %210, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i295.i.i, align 4
  %memberidx2.i.i296.i.i = getelementptr inbounds %string, ptr %210, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i296.i.i, align 4
  %211 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i299.i.i = icmp eq i64 %211, 3
  br i1 %.not.i299.i.i, label %ifend.i303.i.i, label %ifend60.i.i

ifend.i303.i.i:                                   ; preds = %ifend57.i.i
  %memberidx2.i301.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %212 = load ptr, ptr %memberidx2.i301.i.i, align 8
  %213 = tail call i64 @memcmp(ptr %212, ptr nonnull %209, i64 3)
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %if.entry.i179, label %ifend60.i.i

ifend60.i.i:                                      ; preds = %ifend57.i.i, %ifend.i303.i.i
  %215 = tail call ptr @malloc(i32 2)
  store i16 29537, ptr %215, align 8
  %216 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %216, align 8
  %memberidx.i.i305.i.i = getelementptr inbounds %string, ptr %216, i64 0, i32 1
  store ptr %215, ptr %memberidx.i.i305.i.i, align 8
  %memberidx1.i.i306.i.i = getelementptr inbounds %string, ptr %216, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i306.i.i, align 4
  %memberidx2.i.i307.i.i = getelementptr inbounds %string, ptr %216, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i307.i.i, align 4
  %217 = load i64, ptr %memberidx.i.i85.i, align 4
  %.not.i310.i.i = icmp eq i64 %217, 2
  br i1 %.not.i310.i.i, label %ifend.i314.i.i, label %ifend.i180

ifend.i314.i.i:                                   ; preds = %ifend60.i.i
  %memberidx2.i312.i.i = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %218 = load ptr, ptr %memberidx2.i312.i.i, align 8
  %219 = tail call i64 @memcmp(ptr %218, ptr nonnull %215, i64 2)
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %if.entry.i179, label %ifend.i180

if.entry.i179:                                    ; preds = %ifend.i314.i.i, %ifend.i.i.i, %ifend.i94.i.i, %ifend.i105.i.i, %ifend.i116.i.i, %ifend.i127.i.i, %ifend.i138.i.i, %ifend.i149.i.i, %ifend.i160.i.i, %ifend.i171.i.i, %ifend.i182.i.i, %ifend.i193.i.i, %ifend.i204.i.i, %ifend.i215.i.i, %ifend.i226.i.i, %ifend.i237.i.i, %ifend.i248.i.i, %ifend.i259.i.i, %ifend.i270.i.i, %ifend.i281.i.i, %ifend.i292.i.i, %ifend.i303.i.i
  %common.ret.op.i88.i.ph = phi i64 [ 73, %ifend.i303.i.i ], [ 72, %ifend.i292.i.i ], [ 71, %ifend.i281.i.i ], [ 70, %ifend.i270.i.i ], [ 69, %ifend.i259.i.i ], [ 68, %ifend.i248.i.i ], [ 67, %ifend.i237.i.i ], [ 66, %ifend.i226.i.i ], [ 65, %ifend.i215.i.i ], [ 64, %ifend.i204.i.i ], [ 63, %ifend.i193.i.i ], [ 62, %ifend.i182.i.i ], [ 61, %ifend.i171.i.i ], [ 60, %ifend.i160.i.i ], [ 59, %ifend.i149.i.i ], [ 58, %ifend.i138.i.i ], [ 57, %ifend.i127.i.i ], [ 56, %ifend.i116.i.i ], [ 55, %ifend.i105.i.i ], [ 9, %ifend.i94.i.i ], [ 8, %ifend.i.i.i ], [ 74, %ifend.i314.i.i ]
  %221 = load i64, ptr %memberidx.i172, align 4
  %222 = add nsw i64 %221, 1
  %223 = load ptr, ptr %memberidx1.i.i174, align 8
  %memberidx2.i60.i = getelementptr inbounds %string, ptr %223, i64 0, i32 2
  %224 = load i64, ptr %memberidx2.i60.i, align 4
  %225 = icmp slt i64 %222, %224
  br i1 %225, label %if.entry.i63.i, label %ifend5.i

if.entry.i63.i:                                   ; preds = %if.entry.i179
  %226 = load ptr, ptr %223, align 8
  %memberidx4.i62.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %226, i64 0, i32 2
  %227 = load ptr, ptr %memberidx4.i62.i, align 8
  %228 = tail call i8 %227(ptr nonnull %223, i64 %222)
  %phi.cmp1035 = icmp eq i8 %228, 61
  br i1 %phi.cmp1035, label %if.entry3.i, label %ifend5.i

ifend.i180:                                       ; preds = %ifend60.i.i, %ifend.i314.i.i
  %229 = tail call ptr @malloc(i32 24)
  store i64 54, ptr %229, align 4
  %memberidx1.i.i56.i = getelementptr inbounds %Token, ptr %229, i64 0, i32 1
  store ptr %81, ptr %memberidx1.i.i56.i, align 8
  %memberidx.i57.i = getelementptr inbounds %IdentifierToken, ptr %229, i64 0, i32 2
  store ptr %80, ptr %memberidx.i57.i, align 8
  br label %common.ret

if.entry3.i:                                      ; preds = %if.entry.i63.i
  %trunc = trunc i64 %common.ret.op.i88.i.ph to i7
  switch i7 %trunc, label %ifend5.i [
    i7 8, label %if.entry6.i181
    i7 9, label %if.entry9.i
  ]

ifend5.i.sink.split.sink.split:                   ; preds = %ifend.i.i, %ifend.i45.i
  %keyword.0.i.ph.ph = phi i64 [ 18, %ifend.i45.i ], [ 19, %ifend.i.i ]
  store i64 0, ptr %memberidx2.i94.i, align 4
  br label %ifend5.i.sink.split

ifend5.i.sink.split:                              ; preds = %ifend5.i.sink.split.sink.split, %ifend.i.i, %ifend.i45.i
  %memberidx3.i95.i.sink1159 = phi ptr [ %memberidx2.i94.i, %ifend.i45.i ], [ %memberidx2.i94.i, %ifend.i.i ], [ %memberidx3.i95.i, %ifend5.i.sink.split.sink.split ]
  %keyword.0.i.ph = phi i64 [ 18, %ifend.i45.i ], [ 19, %ifend.i.i ], [ %keyword.0.i.ph.ph, %ifend5.i.sink.split.sink.split ]
  %230 = load i64, ptr %memberidx3.i95.i.sink1159, align 4
  %231 = add nsw i64 %230, 1
  store i64 %231, ptr %memberidx3.i95.i.sink1159, align 4
  br label %ifend5.i

ifend5.i:                                         ; preds = %ifend5.i.sink.split, %if.entry3.i, %if.entry6.i181, %if.entry9.i, %if.entry.i179, %if.entry.i63.i
  %keyword.0.i = phi i64 [ %common.ret.op.i88.i.ph, %if.entry.i63.i ], [ %common.ret.op.i88.i.ph, %if.entry.i179 ], [ 19, %if.entry9.i ], [ 18, %if.entry6.i181 ], [ %common.ret.op.i88.i.ph, %if.entry3.i ], [ %keyword.0.i.ph, %ifend5.i.sink.split ]
  %232 = tail call ptr @malloc(i32 16)
  store i64 %keyword.0.i, ptr %232, align 4
  %memberidx1.i55.i = getelementptr inbounds %Token, ptr %232, i64 0, i32 1
  store ptr %81, ptr %memberidx1.i55.i, align 8
  br label %common.ret

if.entry6.i181:                                   ; preds = %if.entry3.i
  %233 = load i64, ptr %memberidx.i172, align 4
  %234 = load ptr, ptr %memberidx1.i.i174, align 8
  %memberidx2.i.i41.i = getelementptr inbounds %string, ptr %234, i64 0, i32 2
  %235 = load i64, ptr %memberidx2.i.i41.i, align 4
  %.not1037 = icmp slt i64 %233, %235
  br i1 %.not1037, label %ifend.i45.i, label %ifend5.i

ifend.i45.i:                                      ; preds = %if.entry6.i181
  %236 = load ptr, ptr %234, align 8
  %memberidx2.i43.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %236, i64 0, i32 2
  %237 = load ptr, ptr %memberidx2.i43.i, align 8
  %238 = add nsw i64 %233, 1
  store i64 %238, ptr %memberidx.i172, align 4
  %239 = tail call i8 %237(ptr nonnull %234, i64 %238)
  store i8 %239, ptr %0, align 1
  %240 = icmp eq i8 %239, 10
  br i1 %240, label %ifend5.i.sink.split.sink.split, label %ifend5.i.sink.split

if.entry9.i:                                      ; preds = %if.entry3.i
  %241 = load i64, ptr %memberidx.i172, align 4
  %242 = load ptr, ptr %memberidx1.i.i174, align 8
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %242, i64 0, i32 2
  %243 = load i64, ptr %memberidx2.i.i.i, align 4
  %.not1036 = icmp slt i64 %241, %243
  br i1 %.not1036, label %ifend.i.i, label %ifend5.i

ifend.i.i:                                        ; preds = %if.entry9.i
  %244 = load ptr, ptr %242, align 8
  %memberidx2.i38.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %244, i64 0, i32 2
  %245 = load ptr, ptr %memberidx2.i38.i, align 8
  %246 = add nsw i64 %241, 1
  store i64 %246, ptr %memberidx.i172, align 4
  %247 = tail call i8 %245(ptr nonnull %242, i64 %246)
  store i8 %247, ptr %0, align 1
  %248 = icmp eq i8 %247, 10
  br i1 %248, label %ifend5.i.sink.split.sink.split, label %ifend5.i.sink.split

ifend5:                                           ; preds = %ifend
  %249 = icmp eq i8 %2, 34
  br i1 %249, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend5
  %250 = tail call fastcc ptr @Lexer_string_token(ptr nonnull %0)
  br label %common.ret

ifend8:                                           ; preds = %ifend5
  %251 = add i8 %2, -48
  %252 = icmp ult i8 %251, 10
  br i1 %252, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend8
  %memberidx.i.i188 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %253 = load i64, ptr %memberidx.i.i188, align 4
  %254 = add nsw i64 %253, 1
  %memberidx1.i.i189 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %255 = load ptr, ptr %memberidx1.i.i189, align 8
  %memberidx2.i.i190 = getelementptr inbounds %string, ptr %255, i64 0, i32 2
  %256 = load i64, ptr %memberidx2.i.i190, align 4
  %257 = icmp slt i64 %254, %256
  br i1 %257, label %Lexer_peek.exit.i194, label %ifend.i197

Lexer_peek.exit.i194:                             ; preds = %if.entry9
  %258 = icmp eq i8 %2, 48
  %259 = load ptr, ptr %255, align 8
  %memberidx4.i.i191 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %259, i64 0, i32 2
  %260 = load ptr, ptr %memberidx4.i.i191, align 8
  %261 = tail call i8 %260(ptr nonnull %255, i64 %254)
  %phi.cmp1028 = icmp eq i8 %261, 98
  %262 = and i1 %258, %phi.cmp1028
  br i1 %262, label %if.entry.i196, label %Lexer_peek.exit.i194.ifend.i197_crit_edge

Lexer_peek.exit.i194.ifend.i197_crit_edge:        ; preds = %Lexer_peek.exit.i194
  %.pre1099 = load i64, ptr %memberidx.i.i188, align 4
  %.pre1100 = load ptr, ptr %memberidx1.i.i189, align 8
  %memberidx2.i49.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1100, i64 0, i32 2
  %.pre1101 = load i64, ptr %memberidx2.i49.i.phi.trans.insert, align 4
  %.pre1127 = add nsw i64 %.pre1099, 1
  br label %ifend.i197

if.entry.i196:                                    ; preds = %Lexer_peek.exit.i194
  %263 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 2)
  br label %common.ret

ifend.i197:                                       ; preds = %Lexer_peek.exit.i194.ifend.i197_crit_edge, %if.entry9
  %.pre-phi1128 = phi i64 [ %.pre1127, %Lexer_peek.exit.i194.ifend.i197_crit_edge ], [ %254, %if.entry9 ]
  %264 = phi i64 [ %.pre1101, %Lexer_peek.exit.i194.ifend.i197_crit_edge ], [ %256, %if.entry9 ]
  %265 = phi ptr [ %.pre1100, %Lexer_peek.exit.i194.ifend.i197_crit_edge ], [ %255, %if.entry9 ]
  %266 = phi i64 [ %.pre1099, %Lexer_peek.exit.i194.ifend.i197_crit_edge ], [ %253, %if.entry9 ]
  %267 = icmp slt i64 %.pre-phi1128, %264
  br i1 %267, label %Lexer_peek.exit53.i, label %ifend4.i

Lexer_peek.exit53.i:                              ; preds = %ifend.i197
  %268 = load i8, ptr %0, align 1
  %269 = icmp eq i8 %268, 48
  %270 = load ptr, ptr %265, align 8
  %memberidx4.i51.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %270, i64 0, i32 2
  %271 = load ptr, ptr %memberidx4.i51.i, align 8
  %272 = tail call i8 %271(ptr nonnull %265, i64 %.pre-phi1128)
  %phi.cmp1029 = icmp eq i8 %272, 111
  %273 = and i1 %269, %phi.cmp1029
  br i1 %273, label %if.entry2.i, label %Lexer_peek.exit53.i.ifend4.i_crit_edge

Lexer_peek.exit53.i.ifend4.i_crit_edge:           ; preds = %Lexer_peek.exit53.i
  %.pre1102 = load i64, ptr %memberidx.i.i188, align 4
  %.pre1103 = load ptr, ptr %memberidx1.i.i189, align 8
  %memberidx2.i56.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1103, i64 0, i32 2
  %.pre1104 = load i64, ptr %memberidx2.i56.i.phi.trans.insert, align 4
  %.pre1129 = add nsw i64 %.pre1102, 1
  br label %ifend4.i

if.entry2.i:                                      ; preds = %Lexer_peek.exit53.i
  %274 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 8)
  br label %common.ret

ifend4.i:                                         ; preds = %Lexer_peek.exit53.i.ifend4.i_crit_edge, %ifend.i197
  %.pre-phi1130 = phi i64 [ %.pre1129, %Lexer_peek.exit53.i.ifend4.i_crit_edge ], [ %.pre-phi1128, %ifend.i197 ]
  %275 = phi i64 [ %.pre1104, %Lexer_peek.exit53.i.ifend4.i_crit_edge ], [ %264, %ifend.i197 ]
  %276 = phi ptr [ %.pre1103, %Lexer_peek.exit53.i.ifend4.i_crit_edge ], [ %265, %ifend.i197 ]
  %277 = phi i64 [ %.pre1102, %Lexer_peek.exit53.i.ifend4.i_crit_edge ], [ %266, %ifend.i197 ]
  %278 = icmp slt i64 %.pre-phi1130, %275
  br i1 %278, label %Lexer_peek.exit60.i, label %ifend8.i200

Lexer_peek.exit60.i:                              ; preds = %ifend4.i
  %279 = load i8, ptr %0, align 1
  %280 = icmp eq i8 %279, 48
  %281 = load ptr, ptr %276, align 8
  %memberidx4.i58.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %281, i64 0, i32 2
  %282 = load ptr, ptr %memberidx4.i58.i, align 8
  %283 = tail call i8 %282(ptr nonnull %276, i64 %.pre-phi1130)
  %phi.cmp1030 = icmp eq i8 %283, 120
  %284 = and i1 %280, %phi.cmp1030
  br i1 %284, label %if.entry6.i199, label %Lexer_peek.exit60.i.ifend8.i200_crit_edge

Lexer_peek.exit60.i.ifend8.i200_crit_edge:        ; preds = %Lexer_peek.exit60.i
  %.pre1105 = load i64, ptr %memberidx.i.i188, align 4
  %.pre1106 = load ptr, ptr %memberidx1.i.i189, align 8
  %memberidx2.i63.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1106, i64 0, i32 2
  %.pre1107 = load i64, ptr %memberidx2.i63.i.phi.trans.insert, align 4
  %.pre1131 = add nsw i64 %.pre1105, 1
  br label %ifend8.i200

if.entry6.i199:                                   ; preds = %Lexer_peek.exit60.i
  %285 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 16)
  br label %common.ret

ifend8.i200:                                      ; preds = %Lexer_peek.exit60.i.ifend8.i200_crit_edge, %ifend4.i
  %.pre-phi1132 = phi i64 [ %.pre1131, %Lexer_peek.exit60.i.ifend8.i200_crit_edge ], [ %.pre-phi1130, %ifend4.i ]
  %286 = phi i64 [ %.pre1107, %Lexer_peek.exit60.i.ifend8.i200_crit_edge ], [ %275, %ifend4.i ]
  %287 = phi ptr [ %.pre1106, %Lexer_peek.exit60.i.ifend8.i200_crit_edge ], [ %276, %ifend4.i ]
  %288 = phi i64 [ %.pre1105, %Lexer_peek.exit60.i.ifend8.i200_crit_edge ], [ %277, %ifend4.i ]
  %289 = icmp slt i64 %.pre-phi1132, %286
  br i1 %289, label %if.entry.i66.i, label %Lexer_peek.exit67.i

if.entry.i66.i:                                   ; preds = %ifend8.i200
  %290 = load ptr, ptr %287, align 8
  %memberidx4.i65.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %290, i64 0, i32 2
  %291 = load ptr, ptr %memberidx4.i65.i, align 8
  %292 = tail call i8 %291(ptr nonnull %287, i64 %.pre-phi1132)
  %.pre1108 = load i64, ptr %memberidx.i.i188, align 4
  %.pre1109 = load ptr, ptr %memberidx1.i.i189, align 8
  %memberidx2.i71.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1109, i64 0, i32 2
  %.pre1110 = load i64, ptr %memberidx2.i71.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit67.i

Lexer_peek.exit67.i:                              ; preds = %if.entry.i66.i, %ifend8.i200
  %293 = phi i64 [ %.pre1110, %if.entry.i66.i ], [ %286, %ifend8.i200 ]
  %294 = phi ptr [ %.pre1109, %if.entry.i66.i ], [ %287, %ifend8.i200 ]
  %295 = phi i64 [ %.pre1108, %if.entry.i66.i ], [ %288, %ifend8.i200 ]
  %common.ret.op.i64.i = phi i8 [ %292, %if.entry.i66.i ], [ 0, %ifend8.i200 ]
  %296 = add i8 %common.ret.op.i64.i, -48
  %297 = icmp ult i8 %296, 10
  %298 = icmp eq i8 %common.ret.op.i64.i, 46
  %299 = or i1 %298, %297
  %.not1031 = icmp slt i64 %295, %293
  %300 = and i1 %299, %.not1031
  br i1 %300, label %while.entry.i202.preheader, label %while.end.i207

while.entry.i202.preheader:                       ; preds = %Lexer_peek.exit67.i
  %memberidx12.i.i213 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i.i211 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i202

while.entry.i202:                                 ; preds = %while.entry.i202.preheader, %Lexer_peek.exit96.i
  %301 = phi i64 [ %351, %Lexer_peek.exit96.i ], [ %293, %while.entry.i202.preheader ]
  %302 = phi ptr [ %352, %Lexer_peek.exit96.i ], [ %294, %while.entry.i202.preheader ]
  %303 = phi i64 [ %353, %Lexer_peek.exit96.i ], [ %295, %while.entry.i202.preheader ]
  %length.0.i201 = phi i64 [ %332, %Lexer_peek.exit96.i ], [ 1, %while.entry.i202.preheader ]
  %is_float.0.i = phi i1 [ %spec.select, %Lexer_peek.exit96.i ], [ false, %while.entry.i202.preheader ]
  %next_char.0.i = phi i8 [ %common.ret.op.i93.i, %Lexer_peek.exit96.i ], [ %common.ret.op.i64.i, %while.entry.i202.preheader ]
  %304 = icmp eq i8 %next_char.0.i, 46
  %305 = add nsw i64 %303, 2
  %306 = icmp slt i64 %305, %301
  br i1 %306, label %if.entry.i78.i, label %Lexer_peek.exit79.i

if.entry.i78.i:                                   ; preds = %while.entry.i202
  %307 = load ptr, ptr %302, align 8
  %memberidx4.i77.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %307, i64 0, i32 2
  %308 = load ptr, ptr %memberidx4.i77.i, align 8
  %309 = tail call i8 %308(ptr nonnull %302, i64 %305)
  br label %Lexer_peek.exit79.i

Lexer_peek.exit79.i:                              ; preds = %if.entry.i78.i, %while.entry.i202
  %common.ret.op.i76.i = phi i8 [ %309, %if.entry.i78.i ], [ 0, %while.entry.i202 ]
  %310 = add i8 %common.ret.op.i76.i, -58
  %311 = icmp ult i8 %310, -10
  %312 = or i1 %is_float.0.i, %311
  %313 = and i1 %304, %312
  br i1 %313, label %while.end.i207, label %ifend11.i

while.end.i207:                                   ; preds = %Lexer_peek.exit96.i, %Lexer_peek.exit79.i, %Lexer_peek.exit67.i
  %length.1.i203 = phi i64 [ 1, %Lexer_peek.exit67.i ], [ %332, %Lexer_peek.exit96.i ], [ %length.0.i201, %Lexer_peek.exit79.i ]
  %is_float.1.i = phi i1 [ false, %Lexer_peek.exit67.i ], [ %spec.select, %Lexer_peek.exit96.i ], [ %is_float.0.i, %Lexer_peek.exit79.i ]
  %314 = tail call ptr @malloc(i32 32)
  %315 = load i64, ptr %memberidx.i.i188, align 4
  %316 = sub nsw i64 %315, %length.1.i203
  %317 = add nsw i64 %316, 1
  %318 = add nsw i64 %315, 1
  %memberidx2.i83.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %319 = load i64, ptr %memberidx2.i83.i, align 4
  %320 = sub nuw i64 %319, %length.1.i203
  %memberidx3.i.i204 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %321 = load i64, ptr %memberidx3.i.i204, align 4
  store i64 %317, ptr %314, align 4
  %memberidx1.i.i84.i = getelementptr inbounds %FloRange, ptr %314, i64 0, i32 1
  store i64 %318, ptr %memberidx1.i.i84.i, align 4
  %memberidx2.i.i.i205 = getelementptr inbounds %FloRange, ptr %314, i64 0, i32 2
  store i64 %320, ptr %memberidx2.i.i.i205, align 4
  %memberidx3.i.i.i206 = getelementptr inbounds %FloRange, ptr %314, i64 0, i32 3
  store i64 %321, ptr %memberidx3.i.i.i206, align 4
  %322 = load ptr, ptr %memberidx1.i.i189, align 8
  %323 = load ptr, ptr %322, align 8
  %memberidx17.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %323, i64 0, i32 1
  %324 = load ptr, ptr %memberidx17.i, align 8
  %325 = tail call ptr %324(ptr nonnull %322, i64 %317, i64 %length.1.i203)
  %326 = tail call ptr @malloc(i32 24)
  %327 = load ptr, ptr %325, align 8
  %memberidx19.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %327, i64 0, i32 5
  %328 = load ptr, ptr %memberidx19.i, align 8
  %329 = tail call ptr %328(ptr nonnull %325)
  br i1 %is_float.1.i, label %true_block.i, label %false_block.i

ifend11.i:                                        ; preds = %Lexer_peek.exit79.i
  %330 = load i8, ptr %0, align 1
  %331 = icmp eq i8 %330, 46
  %spec.select = select i1 %331, i1 true, i1 %is_float.0.i
  %332 = add nuw nsw i64 %length.0.i201, 1
  %333 = load i64, ptr %memberidx.i.i188, align 4
  %334 = load ptr, ptr %memberidx1.i.i189, align 8
  %memberidx2.i.i86.i = getelementptr inbounds %string, ptr %334, i64 0, i32 2
  %335 = load i64, ptr %memberidx2.i.i86.i, align 4
  %.not1032 = icmp slt i64 %333, %335
  br i1 %.not1032, label %ifend.i.i209, label %Lexer_advance.exit.i218

ifend.i.i209:                                     ; preds = %ifend11.i
  %336 = load ptr, ptr %334, align 8
  %memberidx2.i88.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %336, i64 0, i32 2
  %337 = load ptr, ptr %memberidx2.i88.i, align 8
  %338 = add nsw i64 %333, 1
  store i64 %338, ptr %memberidx.i.i188, align 4
  %339 = tail call i8 %337(ptr nonnull %334, i64 %338)
  store i8 %339, ptr %0, align 1
  %340 = icmp eq i8 %339, 10
  br i1 %340, label %if.entry6.i.i212, label %Lexer_advance.exit.i218.sink.split

if.entry6.i.i212:                                 ; preds = %ifend.i.i209
  store i64 0, ptr %memberidx12.i.i213, align 4
  br label %Lexer_advance.exit.i218.sink.split

Lexer_advance.exit.i218.sink.split:               ; preds = %ifend.i.i209, %if.entry6.i.i212
  %memberidx12.i.i213.sink1161 = phi ptr [ %memberidx10.i.i211, %if.entry6.i.i212 ], [ %memberidx12.i.i213, %ifend.i.i209 ]
  %341 = load i64, ptr %memberidx12.i.i213.sink1161, align 4
  %342 = add nsw i64 %341, 1
  store i64 %342, ptr %memberidx12.i.i213.sink1161, align 4
  br label %Lexer_advance.exit.i218

Lexer_advance.exit.i218:                          ; preds = %Lexer_advance.exit.i218.sink.split, %ifend11.i
  %343 = load i64, ptr %memberidx.i.i188, align 4
  %344 = add nsw i64 %343, 1
  %345 = load ptr, ptr %memberidx1.i.i189, align 8
  %memberidx2.i92.i217 = getelementptr inbounds %string, ptr %345, i64 0, i32 2
  %346 = load i64, ptr %memberidx2.i92.i217, align 4
  %347 = icmp slt i64 %344, %346
  br i1 %347, label %if.entry.i95.i, label %Lexer_peek.exit96.i

if.entry.i95.i:                                   ; preds = %Lexer_advance.exit.i218
  %348 = load ptr, ptr %345, align 8
  %memberidx4.i94.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %348, i64 0, i32 2
  %349 = load ptr, ptr %memberidx4.i94.i, align 8
  %350 = tail call i8 %349(ptr nonnull %345, i64 %344)
  %.pre1111 = load i64, ptr %memberidx.i.i188, align 4
  %.pre1112 = load ptr, ptr %memberidx1.i.i189, align 8
  %memberidx2.i99.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1112, i64 0, i32 2
  %.pre1113 = load i64, ptr %memberidx2.i99.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit96.i

Lexer_peek.exit96.i:                              ; preds = %if.entry.i95.i, %Lexer_advance.exit.i218
  %351 = phi i64 [ %.pre1113, %if.entry.i95.i ], [ %346, %Lexer_advance.exit.i218 ]
  %352 = phi ptr [ %.pre1112, %if.entry.i95.i ], [ %345, %Lexer_advance.exit.i218 ]
  %353 = phi i64 [ %.pre1111, %if.entry.i95.i ], [ %343, %Lexer_advance.exit.i218 ]
  %common.ret.op.i93.i = phi i8 [ %350, %if.entry.i95.i ], [ 0, %Lexer_advance.exit.i218 ]
  %354 = add i8 %common.ret.op.i93.i, -48
  %355 = icmp ult i8 %354, 10
  %356 = icmp eq i8 %common.ret.op.i93.i, 46
  %357 = or i1 %356, %355
  %.not1033 = icmp slt i64 %353, %351
  %358 = and i1 %357, %.not1033
  br i1 %358, label %while.entry.i202, label %while.end.i207

true_block.i:                                     ; preds = %while.end.i207
  %359 = tail call double @atof(ptr %329)
  tail call void @free(ptr %329)
  store i64 32, ptr %326, align 4
  %memberidx1.i.i80.i = getelementptr inbounds %Token, ptr %326, i64 0, i32 1
  store ptr %314, ptr %memberidx1.i.i80.i, align 8
  %memberidx.i81.i = getelementptr inbounds %FloatToken, ptr %326, i64 0, i32 2
  store double %359, ptr %memberidx.i81.i, align 8
  br label %end.i

false_block.i:                                    ; preds = %while.end.i207
  %360 = tail call i64 @atol(ptr nocapture %329)
  tail call void @free(ptr %329)
  store i64 31, ptr %326, align 4
  %memberidx1.i.i.i219 = getelementptr inbounds %Token, ptr %326, i64 0, i32 1
  store ptr %314, ptr %memberidx1.i.i.i219, align 8
  %memberidx.i72.i = getelementptr inbounds %IntToken, ptr %326, i64 0, i32 2
  store i64 %360, ptr %memberidx.i72.i, align 4
  br label %end.i

end.i:                                            ; preds = %false_block.i, %true_block.i
  %memberidx.i68.i = getelementptr inbounds %string, ptr %325, i64 0, i32 1
  %361 = load ptr, ptr %memberidx.i68.i, align 8
  tail call void @free(ptr %361)
  tail call void @free(ptr nonnull %325)
  br label %common.ret

ifend11:                                          ; preds = %ifend8
  switch i8 %2, label %ifend89 [
    i8 58, label %if.entry12
    i8 59, label %if.entry15
    i8 44, label %if.entry18
    i8 43, label %if.entry21
    i8 45, label %if.entry24
    i8 42, label %if.entry27
    i8 37, label %if.entry30
    i8 94, label %if.entry33
    i8 47, label %if.entry36
    i8 40, label %if.entry42
    i8 41, label %if.entry45
    i8 123, label %if.entry48
    i8 125, label %if.entry51
    i8 91, label %if.entry54
    i8 93, label %if.entry57
    i8 13, label %if.entry60
    i8 10, label %if.entry60
    i8 39, label %if.entry63
    i8 63, label %if.entry66
    i8 38, label %if.entry69
    i8 61, label %if.entry72
    i8 33, label %if.entry75
    i8 62, label %if.entry78
    i8 60, label %if.entry81
    i8 46, label %if.entry84
    i8 0, label %if.entry87
  ]

if.entry12:                                       ; preds = %ifend11
  %362 = tail call ptr @malloc(i32 16)
  %363 = tail call ptr @malloc(i32 32)
  %memberidx.i220 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %364 = load i64, ptr %memberidx.i220, align 4
  %365 = add nsw i64 %364, 1
  %memberidx2.i221 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %366 = load i64, ptr %memberidx2.i221, align 4
  %367 = add i64 %366, -1
  %memberidx3.i222 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %368 = load i64, ptr %memberidx3.i222, align 4
  store i64 %364, ptr %363, align 4
  %memberidx1.i.i223 = getelementptr inbounds %FloRange, ptr %363, i64 0, i32 1
  store i64 %365, ptr %memberidx1.i.i223, align 4
  %memberidx2.i.i224 = getelementptr inbounds %FloRange, ptr %363, i64 0, i32 2
  store i64 %367, ptr %memberidx2.i.i224, align 4
  %memberidx3.i.i225 = getelementptr inbounds %FloRange, ptr %363, i64 0, i32 3
  store i64 %368, ptr %memberidx3.i.i225, align 4
  store i64 1, ptr %362, align 4
  %memberidx1.i226 = getelementptr inbounds %Token, ptr %362, i64 0, i32 1
  store ptr %363, ptr %memberidx1.i226, align 8
  br label %common.ret

if.entry15:                                       ; preds = %ifend11
  %369 = tail call ptr @malloc(i32 16)
  %370 = tail call ptr @malloc(i32 32)
  %memberidx.i227 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %371 = load i64, ptr %memberidx.i227, align 4
  %372 = add nsw i64 %371, 1
  %memberidx2.i228 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %373 = load i64, ptr %memberidx2.i228, align 4
  %374 = add i64 %373, -1
  %memberidx3.i229 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %375 = load i64, ptr %memberidx3.i229, align 4
  store i64 %371, ptr %370, align 4
  %memberidx1.i.i230 = getelementptr inbounds %FloRange, ptr %370, i64 0, i32 1
  store i64 %372, ptr %memberidx1.i.i230, align 4
  %memberidx2.i.i231 = getelementptr inbounds %FloRange, ptr %370, i64 0, i32 2
  store i64 %374, ptr %memberidx2.i.i231, align 4
  %memberidx3.i.i232 = getelementptr inbounds %FloRange, ptr %370, i64 0, i32 3
  store i64 %375, ptr %memberidx3.i.i232, align 4
  store i64 2, ptr %369, align 4
  %memberidx1.i233 = getelementptr inbounds %Token, ptr %369, i64 0, i32 1
  store ptr %370, ptr %memberidx1.i233, align 8
  br label %common.ret

if.entry18:                                       ; preds = %ifend11
  %376 = tail call ptr @malloc(i32 16)
  %377 = tail call ptr @malloc(i32 32)
  %memberidx.i234 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %378 = load i64, ptr %memberidx.i234, align 4
  %379 = add nsw i64 %378, 1
  %memberidx2.i235 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %380 = load i64, ptr %memberidx2.i235, align 4
  %381 = add i64 %380, -1
  %memberidx3.i236 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %382 = load i64, ptr %memberidx3.i236, align 4
  store i64 %378, ptr %377, align 4
  %memberidx1.i.i237 = getelementptr inbounds %FloRange, ptr %377, i64 0, i32 1
  store i64 %379, ptr %memberidx1.i.i237, align 4
  %memberidx2.i.i238 = getelementptr inbounds %FloRange, ptr %377, i64 0, i32 2
  store i64 %381, ptr %memberidx2.i.i238, align 4
  %memberidx3.i.i239 = getelementptr inbounds %FloRange, ptr %377, i64 0, i32 3
  store i64 %382, ptr %memberidx3.i.i239, align 4
  store i64 3, ptr %376, align 4
  %memberidx1.i240 = getelementptr inbounds %Token, ptr %376, i64 0, i32 1
  store ptr %377, ptr %memberidx1.i240, align 8
  br label %common.ret

if.entry21:                                       ; preds = %ifend11
  %memberidx.i.i241 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %383 = load i64, ptr %memberidx.i.i241, align 4
  %384 = add nsw i64 %383, 1
  %memberidx1.i.i242 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %385 = load ptr, ptr %memberidx1.i.i242, align 8
  %memberidx2.i.i243 = getelementptr inbounds %string, ptr %385, i64 0, i32 2
  %386 = load i64, ptr %memberidx2.i.i243, align 4
  %387 = icmp slt i64 %384, %386
  br i1 %387, label %if.entry.i.i245, label %else.i

if.entry.i.i245:                                  ; preds = %if.entry21
  %388 = load ptr, ptr %385, align 8
  %memberidx4.i.i244 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %388, i64 0, i32 2
  %389 = load ptr, ptr %memberidx4.i.i244, align 8
  %390 = tail call i8 %389(ptr nonnull %385, i64 %384)
  %phi.cmp1024 = icmp eq i8 %390, 43
  %391 = load i64, ptr %memberidx.i.i241, align 4
  %392 = load ptr, ptr %memberidx1.i.i242, align 8
  %memberidx2.i.i.i251 = getelementptr inbounds %string, ptr %392, i64 0, i32 2
  %393 = load i64, ptr %memberidx2.i.i.i251, align 4
  br i1 %phi.cmp1024, label %if.entry.i252, label %if.entry.i.i245.else.i_crit_edge

if.entry.i.i245.else.i_crit_edge:                 ; preds = %if.entry.i.i245
  %.pre1133 = add nsw i64 %391, 1
  br label %else.i

if.entry.i252:                                    ; preds = %if.entry.i.i245
  %.not1027 = icmp slt i64 %391, %393
  br i1 %.not1027, label %ifend.i.i254, label %Lexer_advance.exit.i261

ifend.i.i254:                                     ; preds = %if.entry.i252
  %394 = load ptr, ptr %392, align 8
  %memberidx2.i11.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %394, i64 0, i32 2
  %395 = load ptr, ptr %memberidx2.i11.i, align 8
  %396 = add nsw i64 %391, 1
  store i64 %396, ptr %memberidx.i.i241, align 4
  %397 = tail call i8 %395(ptr nonnull %392, i64 %396)
  store i8 %397, ptr %0, align 1
  %398 = icmp eq i8 %397, 10
  %memberidx9.i.i255 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %398, label %if.entry6.i.i257, label %Lexer_advance.exit.i261.sink.split

if.entry6.i.i257:                                 ; preds = %ifend.i.i254
  store i64 0, ptr %memberidx9.i.i255, align 4
  %memberidx10.i.i256 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i261.sink.split

Lexer_advance.exit.i261.sink.split:               ; preds = %ifend.i.i254, %if.entry6.i.i257
  %memberidx9.i.i255.sink1163 = phi ptr [ %memberidx10.i.i256, %if.entry6.i.i257 ], [ %memberidx9.i.i255, %ifend.i.i254 ]
  %399 = load i64, ptr %memberidx9.i.i255.sink1163, align 4
  %400 = add nsw i64 %399, 1
  store i64 %400, ptr %memberidx9.i.i255.sink1163, align 4
  br label %Lexer_advance.exit.i261

Lexer_advance.exit.i261:                          ; preds = %Lexer_advance.exit.i261.sink.split, %if.entry.i252
  %401 = tail call ptr @malloc(i32 16)
  %402 = tail call ptr @malloc(i32 32)
  %403 = load i64, ptr %memberidx.i.i241, align 4
  %404 = add nsw i64 %403, -1
  %405 = add nsw i64 %403, 1
  %memberidx2.i13.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %406 = load i64, ptr %memberidx2.i13.i, align 4
  %407 = add i64 %406, -2
  %memberidx3.i14.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %408 = load i64, ptr %memberidx3.i14.i, align 4
  store i64 %404, ptr %402, align 4
  %memberidx1.i.i15.i = getelementptr inbounds %FloRange, ptr %402, i64 0, i32 1
  store i64 %405, ptr %memberidx1.i.i15.i, align 4
  %memberidx2.i.i16.i = getelementptr inbounds %FloRange, ptr %402, i64 0, i32 2
  store i64 %407, ptr %memberidx2.i.i16.i, align 4
  %memberidx3.i.i.i260 = getelementptr inbounds %FloRange, ptr %402, i64 0, i32 3
  store i64 %408, ptr %memberidx3.i.i.i260, align 4
  store i64 23, ptr %401, align 4
  %memberidx1.i17.i = getelementptr inbounds %Token, ptr %401, i64 0, i32 1
  store ptr %402, ptr %memberidx1.i17.i, align 8
  br label %common.ret

else.i:                                           ; preds = %if.entry.i.i245.else.i_crit_edge, %if.entry21
  %.pre-phi1134 = phi i64 [ %.pre1133, %if.entry.i.i245.else.i_crit_edge ], [ %384, %if.entry21 ]
  %409 = phi i64 [ %393, %if.entry.i.i245.else.i_crit_edge ], [ %386, %if.entry21 ]
  %410 = phi ptr [ %392, %if.entry.i.i245.else.i_crit_edge ], [ %385, %if.entry21 ]
  %411 = icmp slt i64 %.pre-phi1134, %409
  br i1 %411, label %if.entry.i30.i, label %ifend3.i

if.entry.i30.i:                                   ; preds = %else.i
  %412 = load ptr, ptr %410, align 8
  %memberidx4.i29.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %412, i64 0, i32 2
  %413 = load ptr, ptr %memberidx4.i29.i, align 8
  %414 = tail call i8 %413(ptr nonnull %410, i64 %.pre-phi1134)
  %phi.cmp1025 = icmp eq i8 %414, 61
  br i1 %phi.cmp1025, label %if.entry1.i, label %ifend3.i

if.entry1.i:                                      ; preds = %if.entry.i30.i
  %415 = load i64, ptr %memberidx.i.i241, align 4
  %416 = load ptr, ptr %memberidx1.i.i242, align 8
  %memberidx2.i.i34.i = getelementptr inbounds %string, ptr %416, i64 0, i32 2
  %417 = load i64, ptr %memberidx2.i.i34.i, align 4
  %.not1026 = icmp slt i64 %415, %417
  br i1 %.not1026, label %ifend.i38.i, label %Lexer_advance.exit44.i

ifend.i38.i:                                      ; preds = %if.entry1.i
  %418 = load ptr, ptr %416, align 8
  %memberidx2.i36.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %418, i64 0, i32 2
  %419 = load ptr, ptr %memberidx2.i36.i, align 8
  %420 = add nsw i64 %415, 1
  store i64 %420, ptr %memberidx.i.i241, align 4
  %421 = tail call i8 %419(ptr nonnull %416, i64 %420)
  store i8 %421, ptr %0, align 1
  %422 = icmp eq i8 %421, 10
  %memberidx9.i39.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %422, label %if.entry6.i41.i, label %Lexer_advance.exit44.i.sink.split

if.entry6.i41.i:                                  ; preds = %ifend.i38.i
  store i64 0, ptr %memberidx9.i39.i, align 4
  %memberidx10.i40.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit44.i.sink.split

Lexer_advance.exit44.i.sink.split:                ; preds = %ifend.i38.i, %if.entry6.i41.i
  %memberidx9.i39.i.sink1165 = phi ptr [ %memberidx10.i40.i, %if.entry6.i41.i ], [ %memberidx9.i39.i, %ifend.i38.i ]
  %423 = load i64, ptr %memberidx9.i39.i.sink1165, align 4
  %424 = add nsw i64 %423, 1
  store i64 %424, ptr %memberidx9.i39.i.sink1165, align 4
  br label %Lexer_advance.exit44.i

Lexer_advance.exit44.i:                           ; preds = %Lexer_advance.exit44.i.sink.split, %if.entry1.i
  %425 = tail call ptr @malloc(i32 16)
  %426 = tail call ptr @malloc(i32 32)
  %427 = load i64, ptr %memberidx.i.i241, align 4
  %428 = add nsw i64 %427, -1
  %429 = add nsw i64 %427, 1
  %memberidx2.i46.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %430 = load i64, ptr %memberidx2.i46.i, align 4
  %431 = add i64 %430, -2
  %memberidx3.i47.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %432 = load i64, ptr %memberidx3.i47.i, align 4
  store i64 %428, ptr %426, align 4
  %memberidx1.i.i48.i = getelementptr inbounds %FloRange, ptr %426, i64 0, i32 1
  store i64 %429, ptr %memberidx1.i.i48.i, align 4
  %memberidx2.i.i49.i = getelementptr inbounds %FloRange, ptr %426, i64 0, i32 2
  store i64 %431, ptr %memberidx2.i.i49.i, align 4
  %memberidx3.i.i50.i = getelementptr inbounds %FloRange, ptr %426, i64 0, i32 3
  store i64 %432, ptr %memberidx3.i.i50.i, align 4
  store i64 14, ptr %425, align 4
  %memberidx1.i51.i = getelementptr inbounds %Token, ptr %425, i64 0, i32 1
  store ptr %426, ptr %memberidx1.i51.i, align 8
  br label %common.ret

ifend3.i:                                         ; preds = %else.i, %if.entry.i30.i
  %433 = tail call ptr @malloc(i32 16)
  %434 = tail call ptr @malloc(i32 32)
  %435 = load i64, ptr %memberidx.i.i241, align 4
  %436 = add nsw i64 %435, 1
  %memberidx2.i20.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %437 = load i64, ptr %memberidx2.i20.i, align 4
  %438 = add i64 %437, -1
  %memberidx3.i21.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %439 = load i64, ptr %memberidx3.i21.i, align 4
  store i64 %435, ptr %434, align 4
  %memberidx1.i.i22.i = getelementptr inbounds %FloRange, ptr %434, i64 0, i32 1
  store i64 %436, ptr %memberidx1.i.i22.i, align 4
  %memberidx2.i.i23.i = getelementptr inbounds %FloRange, ptr %434, i64 0, i32 2
  store i64 %438, ptr %memberidx2.i.i23.i, align 4
  %memberidx3.i.i24.i = getelementptr inbounds %FloRange, ptr %434, i64 0, i32 3
  store i64 %439, ptr %memberidx3.i.i24.i, align 4
  store i64 6, ptr %433, align 4
  %memberidx1.i18.i = getelementptr inbounds %Token, ptr %433, i64 0, i32 1
  store ptr %434, ptr %memberidx1.i18.i, align 8
  br label %common.ret

if.entry24:                                       ; preds = %ifend11
  %memberidx.i.i262 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %440 = load i64, ptr %memberidx.i.i262, align 4
  %441 = add nsw i64 %440, 1
  %memberidx1.i.i263 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %442 = load ptr, ptr %memberidx1.i.i263, align 8
  %memberidx2.i.i264 = getelementptr inbounds %string, ptr %442, i64 0, i32 2
  %443 = load i64, ptr %memberidx2.i.i264, align 4
  %444 = icmp slt i64 %441, %443
  br i1 %444, label %if.entry.i.i266, label %else.i283

if.entry.i.i266:                                  ; preds = %if.entry24
  %445 = load ptr, ptr %442, align 8
  %memberidx4.i.i265 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %445, i64 0, i32 2
  %446 = load ptr, ptr %memberidx4.i.i265, align 8
  %447 = tail call i8 %446(ptr nonnull %442, i64 %441)
  %phi.cmp1018 = icmp eq i8 %447, 45
  %448 = load i64, ptr %memberidx.i.i262, align 4
  %449 = load ptr, ptr %memberidx1.i.i263, align 8
  %memberidx2.i.i.i272 = getelementptr inbounds %string, ptr %449, i64 0, i32 2
  %450 = load i64, ptr %memberidx2.i.i.i272, align 4
  br i1 %phi.cmp1018, label %if.entry.i273, label %if.entry.i.i266.else.i283_crit_edge

if.entry.i.i266.else.i283_crit_edge:              ; preds = %if.entry.i.i266
  %.pre1135 = add nsw i64 %448, 1
  br label %else.i283

if.entry.i273:                                    ; preds = %if.entry.i.i266
  %.not1023 = icmp slt i64 %448, %450
  br i1 %.not1023, label %ifend.i.i275, label %Lexer_advance.exit.i282

ifend.i.i275:                                     ; preds = %if.entry.i273
  %451 = load ptr, ptr %449, align 8
  %memberidx2.i17.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %451, i64 0, i32 2
  %452 = load ptr, ptr %memberidx2.i17.i, align 8
  %453 = add nsw i64 %448, 1
  store i64 %453, ptr %memberidx.i.i262, align 4
  %454 = tail call i8 %452(ptr nonnull %449, i64 %453)
  store i8 %454, ptr %0, align 1
  %455 = icmp eq i8 %454, 10
  %memberidx9.i.i276 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %455, label %if.entry6.i.i278, label %Lexer_advance.exit.i282.sink.split

if.entry6.i.i278:                                 ; preds = %ifend.i.i275
  store i64 0, ptr %memberidx9.i.i276, align 4
  %memberidx10.i.i277 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i282.sink.split

Lexer_advance.exit.i282.sink.split:               ; preds = %ifend.i.i275, %if.entry6.i.i278
  %memberidx9.i.i276.sink1167 = phi ptr [ %memberidx10.i.i277, %if.entry6.i.i278 ], [ %memberidx9.i.i276, %ifend.i.i275 ]
  %456 = load i64, ptr %memberidx9.i.i276.sink1167, align 4
  %457 = add nsw i64 %456, 1
  store i64 %457, ptr %memberidx9.i.i276.sink1167, align 4
  br label %Lexer_advance.exit.i282

Lexer_advance.exit.i282:                          ; preds = %Lexer_advance.exit.i282.sink.split, %if.entry.i273
  %458 = tail call ptr @malloc(i32 16)
  %459 = tail call ptr @malloc(i32 32)
  %460 = load i64, ptr %memberidx.i.i262, align 4
  %461 = add nsw i64 %460, -1
  %462 = add nsw i64 %460, 1
  %memberidx2.i19.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %463 = load i64, ptr %memberidx2.i19.i, align 4
  %464 = add i64 %463, -2
  %memberidx3.i20.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %465 = load i64, ptr %memberidx3.i20.i, align 4
  store i64 %461, ptr %459, align 4
  %memberidx1.i.i21.i = getelementptr inbounds %FloRange, ptr %459, i64 0, i32 1
  store i64 %462, ptr %memberidx1.i.i21.i, align 4
  %memberidx2.i.i22.i = getelementptr inbounds %FloRange, ptr %459, i64 0, i32 2
  store i64 %464, ptr %memberidx2.i.i22.i, align 4
  %memberidx3.i.i.i281 = getelementptr inbounds %FloRange, ptr %459, i64 0, i32 3
  store i64 %465, ptr %memberidx3.i.i.i281, align 4
  store i64 24, ptr %458, align 4
  %memberidx1.i23.i = getelementptr inbounds %Token, ptr %458, i64 0, i32 1
  store ptr %459, ptr %memberidx1.i23.i, align 8
  br label %common.ret

else.i283:                                        ; preds = %if.entry.i.i266.else.i283_crit_edge, %if.entry24
  %.pre-phi1136 = phi i64 [ %.pre1135, %if.entry.i.i266.else.i283_crit_edge ], [ %441, %if.entry24 ]
  %466 = phi i64 [ %450, %if.entry.i.i266.else.i283_crit_edge ], [ %443, %if.entry24 ]
  %467 = phi ptr [ %449, %if.entry.i.i266.else.i283_crit_edge ], [ %442, %if.entry24 ]
  %468 = icmp slt i64 %.pre-phi1136, %466
  br i1 %468, label %if.entry.i36.i, label %else2.i

if.entry.i36.i:                                   ; preds = %else.i283
  %469 = load ptr, ptr %467, align 8
  %memberidx4.i35.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %469, i64 0, i32 2
  %470 = load ptr, ptr %memberidx4.i35.i, align 8
  %471 = tail call i8 %470(ptr nonnull %467, i64 %.pre-phi1136)
  %phi.cmp1019 = icmp eq i8 %471, 61
  %472 = load i64, ptr %memberidx.i.i262, align 4
  %473 = load ptr, ptr %memberidx1.i.i263, align 8
  %memberidx2.i.i40.i = getelementptr inbounds %string, ptr %473, i64 0, i32 2
  %474 = load i64, ptr %memberidx2.i.i40.i, align 4
  br i1 %phi.cmp1019, label %if.entry1.i284, label %if.entry.i36.i.else2.i_crit_edge

if.entry.i36.i.else2.i_crit_edge:                 ; preds = %if.entry.i36.i
  %.pre1137 = add nsw i64 %472, 1
  br label %else2.i

if.entry1.i284:                                   ; preds = %if.entry.i36.i
  %.not1022 = icmp slt i64 %472, %474
  br i1 %.not1022, label %ifend.i44.i, label %Lexer_advance.exit50.i

ifend.i44.i:                                      ; preds = %if.entry1.i284
  %475 = load ptr, ptr %473, align 8
  %memberidx2.i42.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %475, i64 0, i32 2
  %476 = load ptr, ptr %memberidx2.i42.i, align 8
  %477 = add nsw i64 %472, 1
  store i64 %477, ptr %memberidx.i.i262, align 4
  %478 = tail call i8 %476(ptr nonnull %473, i64 %477)
  store i8 %478, ptr %0, align 1
  %479 = icmp eq i8 %478, 10
  %memberidx9.i45.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %479, label %if.entry6.i47.i, label %Lexer_advance.exit50.i.sink.split

if.entry6.i47.i:                                  ; preds = %ifend.i44.i
  store i64 0, ptr %memberidx9.i45.i, align 4
  %memberidx10.i46.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit50.i.sink.split

Lexer_advance.exit50.i.sink.split:                ; preds = %ifend.i44.i, %if.entry6.i47.i
  %memberidx9.i45.i.sink1169 = phi ptr [ %memberidx10.i46.i, %if.entry6.i47.i ], [ %memberidx9.i45.i, %ifend.i44.i ]
  %480 = load i64, ptr %memberidx9.i45.i.sink1169, align 4
  %481 = add nsw i64 %480, 1
  store i64 %481, ptr %memberidx9.i45.i.sink1169, align 4
  br label %Lexer_advance.exit50.i

Lexer_advance.exit50.i:                           ; preds = %Lexer_advance.exit50.i.sink.split, %if.entry1.i284
  %482 = tail call ptr @malloc(i32 16)
  %483 = tail call ptr @malloc(i32 32)
  %484 = load i64, ptr %memberidx.i.i262, align 4
  %485 = add nsw i64 %484, -1
  %486 = add nsw i64 %484, 1
  %memberidx2.i52.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %487 = load i64, ptr %memberidx2.i52.i, align 4
  %488 = add i64 %487, -2
  %memberidx3.i53.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %489 = load i64, ptr %memberidx3.i53.i, align 4
  store i64 %485, ptr %483, align 4
  %memberidx1.i.i54.i = getelementptr inbounds %FloRange, ptr %483, i64 0, i32 1
  store i64 %486, ptr %memberidx1.i.i54.i, align 4
  %memberidx2.i.i55.i = getelementptr inbounds %FloRange, ptr %483, i64 0, i32 2
  store i64 %488, ptr %memberidx2.i.i55.i, align 4
  %memberidx3.i.i56.i = getelementptr inbounds %FloRange, ptr %483, i64 0, i32 3
  store i64 %489, ptr %memberidx3.i.i56.i, align 4
  store i64 13, ptr %482, align 4
  %memberidx1.i57.i = getelementptr inbounds %Token, ptr %482, i64 0, i32 1
  store ptr %483, ptr %memberidx1.i57.i, align 8
  br label %common.ret

else2.i:                                          ; preds = %if.entry.i36.i.else2.i_crit_edge, %else.i283
  %.pre-phi1138 = phi i64 [ %.pre1137, %if.entry.i36.i.else2.i_crit_edge ], [ %.pre-phi1136, %else.i283 ]
  %490 = phi i64 [ %474, %if.entry.i36.i.else2.i_crit_edge ], [ %466, %else.i283 ]
  %491 = phi ptr [ %473, %if.entry.i36.i.else2.i_crit_edge ], [ %467, %else.i283 ]
  %492 = icmp slt i64 %.pre-phi1138, %490
  br i1 %492, label %if.entry.i70.i, label %ifend6.i

if.entry.i70.i:                                   ; preds = %else2.i
  %493 = load ptr, ptr %491, align 8
  %memberidx4.i69.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %493, i64 0, i32 2
  %494 = load ptr, ptr %memberidx4.i69.i, align 8
  %495 = tail call i8 %494(ptr nonnull %491, i64 %.pre-phi1138)
  %phi.cmp1020 = icmp eq i8 %495, 62
  br i1 %phi.cmp1020, label %if.entry4.i, label %ifend6.i

if.entry4.i:                                      ; preds = %if.entry.i70.i
  %496 = load i64, ptr %memberidx.i.i262, align 4
  %497 = load ptr, ptr %memberidx1.i.i263, align 8
  %memberidx2.i.i74.i = getelementptr inbounds %string, ptr %497, i64 0, i32 2
  %498 = load i64, ptr %memberidx2.i.i74.i, align 4
  %.not1021 = icmp slt i64 %496, %498
  br i1 %.not1021, label %ifend.i78.i, label %Lexer_advance.exit84.i

ifend.i78.i:                                      ; preds = %if.entry4.i
  %499 = load ptr, ptr %497, align 8
  %memberidx2.i76.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %499, i64 0, i32 2
  %500 = load ptr, ptr %memberidx2.i76.i, align 8
  %501 = add nsw i64 %496, 1
  store i64 %501, ptr %memberidx.i.i262, align 4
  %502 = tail call i8 %500(ptr nonnull %497, i64 %501)
  store i8 %502, ptr %0, align 1
  %503 = icmp eq i8 %502, 10
  %memberidx9.i79.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %503, label %if.entry6.i81.i, label %Lexer_advance.exit84.i.sink.split

if.entry6.i81.i:                                  ; preds = %ifend.i78.i
  store i64 0, ptr %memberidx9.i79.i, align 4
  %memberidx10.i80.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit84.i.sink.split

Lexer_advance.exit84.i.sink.split:                ; preds = %ifend.i78.i, %if.entry6.i81.i
  %memberidx9.i79.i.sink1171 = phi ptr [ %memberidx10.i80.i, %if.entry6.i81.i ], [ %memberidx9.i79.i, %ifend.i78.i ]
  %504 = load i64, ptr %memberidx9.i79.i.sink1171, align 4
  %505 = add nsw i64 %504, 1
  store i64 %505, ptr %memberidx9.i79.i.sink1171, align 4
  br label %Lexer_advance.exit84.i

Lexer_advance.exit84.i:                           ; preds = %Lexer_advance.exit84.i.sink.split, %if.entry4.i
  %506 = tail call ptr @malloc(i32 16)
  %507 = tail call ptr @malloc(i32 32)
  %508 = load i64, ptr %memberidx.i.i262, align 4
  %509 = add nsw i64 %508, -1
  %510 = add nsw i64 %508, 1
  %memberidx2.i60.i285 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %511 = load i64, ptr %memberidx2.i60.i285, align 4
  %512 = add i64 %511, -2
  %memberidx3.i61.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %513 = load i64, ptr %memberidx3.i61.i, align 4
  store i64 %509, ptr %507, align 4
  %memberidx1.i.i62.i = getelementptr inbounds %FloRange, ptr %507, i64 0, i32 1
  store i64 %510, ptr %memberidx1.i.i62.i, align 4
  %memberidx2.i.i63.i = getelementptr inbounds %FloRange, ptr %507, i64 0, i32 2
  store i64 %512, ptr %memberidx2.i.i63.i, align 4
  %memberidx3.i.i64.i = getelementptr inbounds %FloRange, ptr %507, i64 0, i32 3
  store i64 %513, ptr %memberidx3.i.i64.i, align 4
  store i64 45, ptr %506, align 4
  %memberidx1.i58.i = getelementptr inbounds %Token, ptr %506, i64 0, i32 1
  store ptr %507, ptr %memberidx1.i58.i, align 8
  br label %common.ret

ifend6.i:                                         ; preds = %else2.i, %if.entry.i70.i
  %514 = tail call ptr @malloc(i32 16)
  %515 = tail call ptr @malloc(i32 32)
  %516 = load i64, ptr %memberidx.i.i262, align 4
  %517 = add nsw i64 %516, -1
  %518 = add nsw i64 %516, 1
  %memberidx2.i26.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %519 = load i64, ptr %memberidx2.i26.i, align 4
  %520 = add i64 %519, -2
  %memberidx3.i27.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %521 = load i64, ptr %memberidx3.i27.i, align 4
  store i64 %517, ptr %515, align 4
  %memberidx1.i.i28.i = getelementptr inbounds %FloRange, ptr %515, i64 0, i32 1
  store i64 %518, ptr %memberidx1.i.i28.i, align 4
  %memberidx2.i.i29.i = getelementptr inbounds %FloRange, ptr %515, i64 0, i32 2
  store i64 %520, ptr %memberidx2.i.i29.i, align 4
  %memberidx3.i.i30.i = getelementptr inbounds %FloRange, ptr %515, i64 0, i32 3
  store i64 %521, ptr %memberidx3.i.i30.i, align 4
  store i64 5, ptr %514, align 4
  %memberidx1.i24.i = getelementptr inbounds %Token, ptr %514, i64 0, i32 1
  store ptr %515, ptr %memberidx1.i24.i, align 8
  br label %common.ret

if.entry27:                                       ; preds = %ifend11
  %memberidx.i.i287 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %522 = load i64, ptr %memberidx.i.i287, align 4
  %523 = add nsw i64 %522, 1
  %memberidx1.i.i288 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %524 = load ptr, ptr %memberidx1.i.i288, align 8
  %memberidx2.i.i289 = getelementptr inbounds %string, ptr %524, i64 0, i32 2
  %525 = load i64, ptr %memberidx2.i.i289, align 4
  %526 = icmp slt i64 %523, %525
  br i1 %526, label %if.entry.i.i291, label %else.i319

if.entry.i.i291:                                  ; preds = %if.entry27
  %527 = load ptr, ptr %524, align 8
  %memberidx4.i.i290 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %527, i64 0, i32 2
  %528 = load ptr, ptr %memberidx4.i.i290, align 8
  %529 = tail call i8 %528(ptr nonnull %524, i64 %523)
  %phi.cmp1012 = icmp eq i8 %529, 61
  %530 = load i64, ptr %memberidx.i.i287, align 4
  %531 = load ptr, ptr %memberidx1.i.i288, align 8
  %memberidx2.i.i.i297 = getelementptr inbounds %string, ptr %531, i64 0, i32 2
  %532 = load i64, ptr %memberidx2.i.i.i297, align 4
  br i1 %phi.cmp1012, label %if.entry.i298, label %if.entry.i.i291.else.i319_crit_edge

if.entry.i.i291.else.i319_crit_edge:              ; preds = %if.entry.i.i291
  %.pre1139 = add nsw i64 %530, 1
  br label %else.i319

if.entry.i298:                                    ; preds = %if.entry.i.i291
  %.not1017 = icmp slt i64 %530, %532
  br i1 %.not1017, label %ifend.i.i302, label %Lexer_advance.exit.i315

ifend.i.i302:                                     ; preds = %if.entry.i298
  %533 = load ptr, ptr %531, align 8
  %memberidx2.i17.i300 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %533, i64 0, i32 2
  %534 = load ptr, ptr %memberidx2.i17.i300, align 8
  %535 = add nsw i64 %530, 1
  store i64 %535, ptr %memberidx.i.i287, align 4
  %536 = tail call i8 %534(ptr nonnull %531, i64 %535)
  store i8 %536, ptr %0, align 1
  %537 = icmp eq i8 %536, 10
  %memberidx9.i.i303 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %537, label %if.entry6.i.i305, label %Lexer_advance.exit.i315.sink.split

if.entry6.i.i305:                                 ; preds = %ifend.i.i302
  store i64 0, ptr %memberidx9.i.i303, align 4
  %memberidx10.i.i304 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i315.sink.split

Lexer_advance.exit.i315.sink.split:               ; preds = %ifend.i.i302, %if.entry6.i.i305
  %memberidx9.i.i303.sink1173 = phi ptr [ %memberidx10.i.i304, %if.entry6.i.i305 ], [ %memberidx9.i.i303, %ifend.i.i302 ]
  %538 = load i64, ptr %memberidx9.i.i303.sink1173, align 4
  %539 = add nsw i64 %538, 1
  store i64 %539, ptr %memberidx9.i.i303.sink1173, align 4
  br label %Lexer_advance.exit.i315

Lexer_advance.exit.i315:                          ; preds = %Lexer_advance.exit.i315.sink.split, %if.entry.i298
  %540 = tail call ptr @malloc(i32 16)
  %541 = tail call ptr @malloc(i32 32)
  %542 = load i64, ptr %memberidx.i.i287, align 4
  %543 = add nsw i64 %542, -1
  %544 = add nsw i64 %542, 1
  %memberidx2.i19.i309 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %545 = load i64, ptr %memberidx2.i19.i309, align 4
  %546 = add i64 %545, -2
  %memberidx3.i20.i310 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %547 = load i64, ptr %memberidx3.i20.i310, align 4
  store i64 %543, ptr %541, align 4
  %memberidx1.i.i21.i311 = getelementptr inbounds %FloRange, ptr %541, i64 0, i32 1
  store i64 %544, ptr %memberidx1.i.i21.i311, align 4
  %memberidx2.i.i22.i312 = getelementptr inbounds %FloRange, ptr %541, i64 0, i32 2
  store i64 %546, ptr %memberidx2.i.i22.i312, align 4
  %memberidx3.i.i.i313 = getelementptr inbounds %FloRange, ptr %541, i64 0, i32 3
  store i64 %547, ptr %memberidx3.i.i.i313, align 4
  store i64 12, ptr %540, align 4
  %memberidx1.i23.i314 = getelementptr inbounds %Token, ptr %540, i64 0, i32 1
  store ptr %541, ptr %memberidx1.i23.i314, align 8
  br label %common.ret

else.i319:                                        ; preds = %if.entry.i.i291.else.i319_crit_edge, %if.entry27
  %.pre-phi1140 = phi i64 [ %.pre1139, %if.entry.i.i291.else.i319_crit_edge ], [ %523, %if.entry27 ]
  %548 = phi i64 [ %532, %if.entry.i.i291.else.i319_crit_edge ], [ %525, %if.entry27 ]
  %549 = phi ptr [ %531, %if.entry.i.i291.else.i319_crit_edge ], [ %524, %if.entry27 ]
  %550 = icmp slt i64 %.pre-phi1140, %548
  br i1 %550, label %if.entry.i36.i321, label %ifend3.i340

if.entry.i36.i321:                                ; preds = %else.i319
  %551 = load ptr, ptr %549, align 8
  %memberidx4.i35.i320 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %551, i64 0, i32 2
  %552 = load ptr, ptr %memberidx4.i35.i320, align 8
  %553 = tail call i8 %552(ptr nonnull %549, i64 %.pre-phi1140)
  %phi.cmp1013 = icmp eq i8 %553, 42
  br i1 %phi.cmp1013, label %if.entry1.i327, label %ifend3.i340

if.entry1.i327:                                   ; preds = %if.entry.i36.i321
  %554 = load i64, ptr %memberidx.i.i287, align 4
  %555 = load ptr, ptr %memberidx1.i.i288, align 8
  %memberidx2.i.i40.i326 = getelementptr inbounds %string, ptr %555, i64 0, i32 2
  %556 = load i64, ptr %memberidx2.i.i40.i326, align 4
  %.not1014 = icmp slt i64 %554, %556
  br i1 %.not1014, label %ifend.i44.i331, label %Lexer_advance.exit50.i338

ifend.i44.i331:                                   ; preds = %if.entry1.i327
  %557 = load ptr, ptr %555, align 8
  %memberidx2.i42.i329 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %557, i64 0, i32 2
  %558 = load ptr, ptr %memberidx2.i42.i329, align 8
  %559 = add nsw i64 %554, 1
  store i64 %559, ptr %memberidx.i.i287, align 4
  %560 = tail call i8 %558(ptr nonnull %555, i64 %559)
  store i8 %560, ptr %0, align 1
  %561 = icmp eq i8 %560, 10
  %memberidx9.i45.i332 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %561, label %if.entry6.i47.i334, label %Lexer_advance.exit50.i338.sink.split

if.entry6.i47.i334:                               ; preds = %ifend.i44.i331
  store i64 0, ptr %memberidx9.i45.i332, align 4
  %memberidx10.i46.i333 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit50.i338.sink.split

Lexer_advance.exit50.i338.sink.split:             ; preds = %ifend.i44.i331, %if.entry6.i47.i334
  %memberidx9.i45.i332.sink1175 = phi ptr [ %memberidx10.i46.i333, %if.entry6.i47.i334 ], [ %memberidx9.i45.i332, %ifend.i44.i331 ]
  %562 = load i64, ptr %memberidx9.i45.i332.sink1175, align 4
  %563 = add nsw i64 %562, 1
  store i64 %563, ptr %memberidx9.i45.i332.sink1175, align 4
  br label %Lexer_advance.exit50.i338

Lexer_advance.exit50.i338:                        ; preds = %Lexer_advance.exit50.i338.sink.split, %if.entry1.i327
  %564 = load i64, ptr %memberidx.i.i287, align 4
  %565 = add nsw i64 %564, 1
  %566 = load ptr, ptr %memberidx1.i.i288, align 8
  %memberidx2.i53.i = getelementptr inbounds %string, ptr %566, i64 0, i32 2
  %567 = load i64, ptr %memberidx2.i53.i, align 4
  %568 = icmp slt i64 %565, %567
  br i1 %568, label %if.entry.i56.i, label %ifend6.i363

if.entry.i56.i:                                   ; preds = %Lexer_advance.exit50.i338
  %569 = load ptr, ptr %566, align 8
  %memberidx4.i55.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %569, i64 0, i32 2
  %570 = load ptr, ptr %memberidx4.i55.i, align 8
  %571 = tail call i8 %570(ptr nonnull %566, i64 %565)
  %phi.cmp1015 = icmp eq i8 %571, 61
  br i1 %phi.cmp1015, label %if.entry4.i344, label %ifend6.i363

ifend3.i340:                                      ; preds = %else.i319, %if.entry.i36.i321
  %572 = tail call ptr @malloc(i32 16)
  %573 = tail call ptr @malloc(i32 32)
  %574 = load i64, ptr %memberidx.i.i287, align 4
  %575 = add nsw i64 %574, 1
  %memberidx2.i59.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %576 = load i64, ptr %memberidx2.i59.i, align 4
  %577 = add i64 %576, -1
  %memberidx3.i60.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %578 = load i64, ptr %memberidx3.i60.i, align 4
  store i64 %574, ptr %573, align 4
  %memberidx1.i.i61.i = getelementptr inbounds %FloRange, ptr %573, i64 0, i32 1
  store i64 %575, ptr %memberidx1.i.i61.i, align 4
  %memberidx2.i.i62.i = getelementptr inbounds %FloRange, ptr %573, i64 0, i32 2
  store i64 %577, ptr %memberidx2.i.i62.i, align 4
  %memberidx3.i.i63.i = getelementptr inbounds %FloRange, ptr %573, i64 0, i32 3
  store i64 %578, ptr %memberidx3.i.i63.i, align 4
  store i64 4, ptr %572, align 4
  %memberidx1.i64.i = getelementptr inbounds %Token, ptr %572, i64 0, i32 1
  store ptr %573, ptr %memberidx1.i64.i, align 8
  br label %common.ret

if.entry4.i344:                                   ; preds = %if.entry.i56.i
  %579 = load i64, ptr %memberidx.i.i287, align 4
  %580 = load ptr, ptr %memberidx1.i.i288, align 8
  %memberidx2.i.i74.i343 = getelementptr inbounds %string, ptr %580, i64 0, i32 2
  %581 = load i64, ptr %memberidx2.i.i74.i343, align 4
  %.not1016 = icmp slt i64 %579, %581
  br i1 %.not1016, label %ifend.i78.i348, label %Lexer_advance.exit84.i355

ifend.i78.i348:                                   ; preds = %if.entry4.i344
  %582 = load ptr, ptr %580, align 8
  %memberidx2.i76.i346 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %582, i64 0, i32 2
  %583 = load ptr, ptr %memberidx2.i76.i346, align 8
  %584 = add nsw i64 %579, 1
  store i64 %584, ptr %memberidx.i.i287, align 4
  %585 = tail call i8 %583(ptr nonnull %580, i64 %584)
  store i8 %585, ptr %0, align 1
  %586 = icmp eq i8 %585, 10
  %memberidx9.i79.i349 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %586, label %if.entry6.i81.i351, label %Lexer_advance.exit84.i355.sink.split

if.entry6.i81.i351:                               ; preds = %ifend.i78.i348
  store i64 0, ptr %memberidx9.i79.i349, align 4
  %memberidx10.i80.i350 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit84.i355.sink.split

Lexer_advance.exit84.i355.sink.split:             ; preds = %ifend.i78.i348, %if.entry6.i81.i351
  %memberidx9.i79.i349.sink1177 = phi ptr [ %memberidx10.i80.i350, %if.entry6.i81.i351 ], [ %memberidx9.i79.i349, %ifend.i78.i348 ]
  %587 = load i64, ptr %memberidx9.i79.i349.sink1177, align 4
  %588 = add nsw i64 %587, 1
  store i64 %588, ptr %memberidx9.i79.i349.sink1177, align 4
  br label %Lexer_advance.exit84.i355

Lexer_advance.exit84.i355:                        ; preds = %Lexer_advance.exit84.i355.sink.split, %if.entry4.i344
  %589 = tail call ptr @malloc(i32 16)
  %590 = tail call ptr @malloc(i32 32)
  %591 = load i64, ptr %memberidx.i.i287, align 4
  %592 = add nsw i64 %591, -2
  %593 = add nsw i64 %591, 1
  %memberidx2.i67.i354 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %594 = load i64, ptr %memberidx2.i67.i354, align 4
  %595 = add i64 %594, -3
  %memberidx3.i68.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %596 = load i64, ptr %memberidx3.i68.i, align 4
  store i64 %592, ptr %590, align 4
  %memberidx1.i.i69.i = getelementptr inbounds %FloRange, ptr %590, i64 0, i32 1
  store i64 %593, ptr %memberidx1.i.i69.i, align 4
  %memberidx2.i.i70.i = getelementptr inbounds %FloRange, ptr %590, i64 0, i32 2
  store i64 %595, ptr %memberidx2.i.i70.i, align 4
  %memberidx3.i.i71.i = getelementptr inbounds %FloRange, ptr %590, i64 0, i32 3
  store i64 %596, ptr %memberidx3.i.i71.i, align 4
  store i64 17, ptr %589, align 4
  %memberidx1.i65.i = getelementptr inbounds %Token, ptr %589, i64 0, i32 1
  store ptr %590, ptr %memberidx1.i65.i, align 8
  br label %common.ret

ifend6.i363:                                      ; preds = %Lexer_advance.exit50.i338, %if.entry.i56.i
  %597 = tail call ptr @malloc(i32 16)
  %598 = tail call ptr @malloc(i32 32)
  %599 = load i64, ptr %memberidx.i.i287, align 4
  %600 = add nsw i64 %599, -1
  %601 = add nsw i64 %599, 1
  %memberidx2.i26.i357 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %602 = load i64, ptr %memberidx2.i26.i357, align 4
  %603 = add i64 %602, -2
  %memberidx3.i27.i358 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %604 = load i64, ptr %memberidx3.i27.i358, align 4
  store i64 %600, ptr %598, align 4
  %memberidx1.i.i28.i359 = getelementptr inbounds %FloRange, ptr %598, i64 0, i32 1
  store i64 %601, ptr %memberidx1.i.i28.i359, align 4
  %memberidx2.i.i29.i360 = getelementptr inbounds %FloRange, ptr %598, i64 0, i32 2
  store i64 %603, ptr %memberidx2.i.i29.i360, align 4
  %memberidx3.i.i30.i361 = getelementptr inbounds %FloRange, ptr %598, i64 0, i32 3
  store i64 %604, ptr %memberidx3.i.i30.i361, align 4
  store i64 11, ptr %597, align 4
  %memberidx1.i24.i362 = getelementptr inbounds %Token, ptr %597, i64 0, i32 1
  store ptr %598, ptr %memberidx1.i24.i362, align 8
  br label %common.ret

if.entry30:                                       ; preds = %ifend11
  %memberidx.i.i364 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %605 = load i64, ptr %memberidx.i.i364, align 4
  %606 = add nsw i64 %605, 1
  %memberidx1.i.i365 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %607 = load ptr, ptr %memberidx1.i.i365, align 8
  %memberidx2.i.i366 = getelementptr inbounds %string, ptr %607, i64 0, i32 2
  %608 = load i64, ptr %memberidx2.i.i366, align 4
  %609 = icmp slt i64 %606, %608
  br i1 %609, label %if.entry.i.i368, label %ifend.i385

if.entry.i.i368:                                  ; preds = %if.entry30
  %610 = load ptr, ptr %607, align 8
  %memberidx4.i.i367 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %610, i64 0, i32 2
  %611 = load ptr, ptr %memberidx4.i.i367, align 8
  %612 = tail call i8 %611(ptr nonnull %607, i64 %606)
  %phi.cmp1010 = icmp eq i8 %612, 61
  br i1 %phi.cmp1010, label %if.entry.i375, label %ifend.i385

if.entry.i375:                                    ; preds = %if.entry.i.i368
  %613 = load i64, ptr %memberidx.i.i364, align 4
  %614 = load ptr, ptr %memberidx1.i.i365, align 8
  %memberidx2.i.i.i374 = getelementptr inbounds %string, ptr %614, i64 0, i32 2
  %615 = load i64, ptr %memberidx2.i.i.i374, align 4
  %.not1011 = icmp slt i64 %613, %615
  br i1 %.not1011, label %ifend.i.i377, label %Lexer_advance.exit.i384

ifend.i.i377:                                     ; preds = %if.entry.i375
  %616 = load ptr, ptr %614, align 8
  %memberidx2.i5.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %616, i64 0, i32 2
  %617 = load ptr, ptr %memberidx2.i5.i, align 8
  %618 = add nsw i64 %613, 1
  store i64 %618, ptr %memberidx.i.i364, align 4
  %619 = tail call i8 %617(ptr nonnull %614, i64 %618)
  store i8 %619, ptr %0, align 1
  %620 = icmp eq i8 %619, 10
  %memberidx9.i.i378 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %620, label %if.entry6.i.i380, label %Lexer_advance.exit.i384.sink.split

if.entry6.i.i380:                                 ; preds = %ifend.i.i377
  store i64 0, ptr %memberidx9.i.i378, align 4
  %memberidx10.i.i379 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i384.sink.split

Lexer_advance.exit.i384.sink.split:               ; preds = %ifend.i.i377, %if.entry6.i.i380
  %memberidx9.i.i378.sink1179 = phi ptr [ %memberidx10.i.i379, %if.entry6.i.i380 ], [ %memberidx9.i.i378, %ifend.i.i377 ]
  %621 = load i64, ptr %memberidx9.i.i378.sink1179, align 4
  %622 = add nsw i64 %621, 1
  store i64 %622, ptr %memberidx9.i.i378.sink1179, align 4
  br label %Lexer_advance.exit.i384

Lexer_advance.exit.i384:                          ; preds = %Lexer_advance.exit.i384.sink.split, %if.entry.i375
  %623 = tail call ptr @malloc(i32 16)
  %624 = tail call ptr @malloc(i32 32)
  %625 = load i64, ptr %memberidx.i.i364, align 4
  %626 = add nsw i64 %625, -1
  %627 = add nsw i64 %625, 1
  %memberidx2.i7.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %628 = load i64, ptr %memberidx2.i7.i, align 4
  %629 = add i64 %628, -2
  %memberidx3.i8.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %630 = load i64, ptr %memberidx3.i8.i, align 4
  store i64 %626, ptr %624, align 4
  %memberidx1.i.i9.i = getelementptr inbounds %FloRange, ptr %624, i64 0, i32 1
  store i64 %627, ptr %memberidx1.i.i9.i, align 4
  %memberidx2.i.i10.i = getelementptr inbounds %FloRange, ptr %624, i64 0, i32 2
  store i64 %629, ptr %memberidx2.i.i10.i, align 4
  %memberidx3.i.i.i383 = getelementptr inbounds %FloRange, ptr %624, i64 0, i32 3
  store i64 %630, ptr %memberidx3.i.i.i383, align 4
  store i64 16, ptr %623, align 4
  %memberidx1.i11.i = getelementptr inbounds %Token, ptr %623, i64 0, i32 1
  store ptr %624, ptr %memberidx1.i11.i, align 8
  br label %common.ret

ifend.i385:                                       ; preds = %if.entry30, %if.entry.i.i368
  %631 = tail call ptr @malloc(i32 16)
  %632 = tail call ptr @malloc(i32 32)
  %633 = load i64, ptr %memberidx.i.i364, align 4
  %634 = add nsw i64 %633, 1
  %memberidx2.i14.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %635 = load i64, ptr %memberidx2.i14.i, align 4
  %636 = add i64 %635, -1
  %memberidx3.i15.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %637 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %633, ptr %632, align 4
  %memberidx1.i.i16.i = getelementptr inbounds %FloRange, ptr %632, i64 0, i32 1
  store i64 %634, ptr %memberidx1.i.i16.i, align 4
  %memberidx2.i.i17.i = getelementptr inbounds %FloRange, ptr %632, i64 0, i32 2
  store i64 %636, ptr %memberidx2.i.i17.i, align 4
  %memberidx3.i.i18.i = getelementptr inbounds %FloRange, ptr %632, i64 0, i32 3
  store i64 %637, ptr %memberidx3.i.i18.i, align 4
  store i64 10, ptr %631, align 4
  %memberidx1.i12.i = getelementptr inbounds %Token, ptr %631, i64 0, i32 1
  store ptr %632, ptr %memberidx1.i12.i, align 8
  br label %common.ret

if.entry33:                                       ; preds = %ifend11
  %memberidx.i.i386 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %638 = load i64, ptr %memberidx.i.i386, align 4
  %639 = add nsw i64 %638, 1
  %memberidx1.i.i387 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %640 = load ptr, ptr %memberidx1.i.i387, align 8
  %memberidx2.i.i388 = getelementptr inbounds %string, ptr %640, i64 0, i32 2
  %641 = load i64, ptr %memberidx2.i.i388, align 4
  %642 = icmp slt i64 %639, %641
  br i1 %642, label %if.entry.i.i390, label %ifend.i422

if.entry.i.i390:                                  ; preds = %if.entry33
  %643 = load ptr, ptr %640, align 8
  %memberidx4.i.i389 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %643, i64 0, i32 2
  %644 = load ptr, ptr %memberidx4.i.i389, align 8
  %645 = tail call i8 %644(ptr nonnull %640, i64 %639)
  %phi.cmp1008 = icmp eq i8 %645, 61
  br i1 %phi.cmp1008, label %if.entry.i397, label %ifend.i422

if.entry.i397:                                    ; preds = %if.entry.i.i390
  %646 = load i64, ptr %memberidx.i.i386, align 4
  %647 = load ptr, ptr %memberidx1.i.i387, align 8
  %memberidx2.i.i.i396 = getelementptr inbounds %string, ptr %647, i64 0, i32 2
  %648 = load i64, ptr %memberidx2.i.i.i396, align 4
  %.not1009 = icmp slt i64 %646, %648
  br i1 %.not1009, label %ifend.i.i401, label %Lexer_advance.exit.i414

ifend.i.i401:                                     ; preds = %if.entry.i397
  %649 = load ptr, ptr %647, align 8
  %memberidx2.i5.i399 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %649, i64 0, i32 2
  %650 = load ptr, ptr %memberidx2.i5.i399, align 8
  %651 = add nsw i64 %646, 1
  store i64 %651, ptr %memberidx.i.i386, align 4
  %652 = tail call i8 %650(ptr nonnull %647, i64 %651)
  store i8 %652, ptr %0, align 1
  %653 = icmp eq i8 %652, 10
  %memberidx9.i.i402 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %653, label %if.entry6.i.i404, label %Lexer_advance.exit.i414.sink.split

if.entry6.i.i404:                                 ; preds = %ifend.i.i401
  store i64 0, ptr %memberidx9.i.i402, align 4
  %memberidx10.i.i403 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i414.sink.split

Lexer_advance.exit.i414.sink.split:               ; preds = %ifend.i.i401, %if.entry6.i.i404
  %memberidx9.i.i402.sink1181 = phi ptr [ %memberidx10.i.i403, %if.entry6.i.i404 ], [ %memberidx9.i.i402, %ifend.i.i401 ]
  %654 = load i64, ptr %memberidx9.i.i402.sink1181, align 4
  %655 = add nsw i64 %654, 1
  store i64 %655, ptr %memberidx9.i.i402.sink1181, align 4
  br label %Lexer_advance.exit.i414

Lexer_advance.exit.i414:                          ; preds = %Lexer_advance.exit.i414.sink.split, %if.entry.i397
  %656 = tail call ptr @malloc(i32 16)
  %657 = tail call ptr @malloc(i32 32)
  %658 = load i64, ptr %memberidx.i.i386, align 4
  %659 = add nsw i64 %658, -1
  %660 = add nsw i64 %658, 1
  %memberidx2.i7.i408 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %661 = load i64, ptr %memberidx2.i7.i408, align 4
  %662 = add i64 %661, -2
  %memberidx3.i8.i409 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %663 = load i64, ptr %memberidx3.i8.i409, align 4
  store i64 %659, ptr %657, align 4
  %memberidx1.i.i9.i410 = getelementptr inbounds %FloRange, ptr %657, i64 0, i32 1
  store i64 %660, ptr %memberidx1.i.i9.i410, align 4
  %memberidx2.i.i10.i411 = getelementptr inbounds %FloRange, ptr %657, i64 0, i32 2
  store i64 %662, ptr %memberidx2.i.i10.i411, align 4
  %memberidx3.i.i.i412 = getelementptr inbounds %FloRange, ptr %657, i64 0, i32 3
  store i64 %663, ptr %memberidx3.i.i.i412, align 4
  store i64 20, ptr %656, align 4
  %memberidx1.i11.i413 = getelementptr inbounds %Token, ptr %656, i64 0, i32 1
  store ptr %657, ptr %memberidx1.i11.i413, align 8
  br label %common.ret

ifend.i422:                                       ; preds = %if.entry33, %if.entry.i.i390
  %664 = tail call ptr @malloc(i32 16)
  %665 = tail call ptr @malloc(i32 32)
  %666 = load i64, ptr %memberidx.i.i386, align 4
  %667 = add nsw i64 %666, 1
  %memberidx2.i14.i416 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %668 = load i64, ptr %memberidx2.i14.i416, align 4
  %669 = add i64 %668, -1
  %memberidx3.i15.i417 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %670 = load i64, ptr %memberidx3.i15.i417, align 4
  store i64 %666, ptr %665, align 4
  %memberidx1.i.i16.i418 = getelementptr inbounds %FloRange, ptr %665, i64 0, i32 1
  store i64 %667, ptr %memberidx1.i.i16.i418, align 4
  %memberidx2.i.i17.i419 = getelementptr inbounds %FloRange, ptr %665, i64 0, i32 2
  store i64 %669, ptr %memberidx2.i.i17.i419, align 4
  %memberidx3.i.i18.i420 = getelementptr inbounds %FloRange, ptr %665, i64 0, i32 3
  store i64 %670, ptr %memberidx3.i.i18.i420, align 4
  store i64 51, ptr %664, align 4
  %memberidx1.i12.i421 = getelementptr inbounds %Token, ptr %664, i64 0, i32 1
  store ptr %665, ptr %memberidx1.i12.i421, align 8
  br label %common.ret

if.entry36:                                       ; preds = %ifend11
  %memberidx.i.i423 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %671 = load i64, ptr %memberidx.i.i423, align 4
  %672 = add nsw i64 %671, 1
  %memberidx1.i.i424 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %673 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i.i425 = getelementptr inbounds %string, ptr %673, i64 0, i32 2
  %674 = load i64, ptr %memberidx2.i.i425, align 4
  %675 = icmp slt i64 %672, %674
  br i1 %675, label %Lexer_peek.exit.i429, label %else.i446

Lexer_peek.exit.i429:                             ; preds = %if.entry36
  %676 = load ptr, ptr %673, align 8
  %memberidx4.i.i426 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %676, i64 0, i32 2
  %677 = load ptr, ptr %memberidx4.i.i426, align 8
  %678 = tail call i8 %677(ptr nonnull %673, i64 %672)
  %679 = icmp eq i8 %678, 42
  %680 = load i64, ptr %memberidx.i.i423, align 4
  %681 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i.i.i432 = getelementptr inbounds %string, ptr %681, i64 0, i32 2
  %682 = load i64, ptr %memberidx2.i.i.i432, align 4
  br i1 %679, label %if.entry.i433, label %Lexer_peek.exit.i429.else.i446_crit_edge

Lexer_peek.exit.i429.else.i446_crit_edge:         ; preds = %Lexer_peek.exit.i429
  %.pre1141 = add nsw i64 %680, 1
  br label %else.i446

if.entry.i433:                                    ; preds = %Lexer_peek.exit.i429
  %.not1002 = icmp slt i64 %680, %682
  br i1 %.not1002, label %ifend.i.i437, label %Lexer_advance.exit.i443

ifend.i.i437:                                     ; preds = %if.entry.i433
  %683 = load ptr, ptr %681, align 8
  %memberidx2.i27.i435 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %683, i64 0, i32 2
  %684 = load ptr, ptr %memberidx2.i27.i435, align 8
  %685 = add nsw i64 %680, 1
  store i64 %685, ptr %memberidx.i.i423, align 4
  %686 = tail call i8 %684(ptr nonnull %681, i64 %685)
  store i8 %686, ptr %0, align 1
  %687 = icmp eq i8 %686, 10
  %memberidx9.i.i438 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %687, label %if.entry6.i.i440, label %Lexer_advance.exit.i443.sink.split

if.entry6.i.i440:                                 ; preds = %ifend.i.i437
  store i64 0, ptr %memberidx9.i.i438, align 4
  %memberidx10.i.i439 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i443.sink.split

Lexer_advance.exit.i443.sink.split:               ; preds = %ifend.i.i437, %if.entry6.i.i440
  %memberidx9.i.i438.sink1183 = phi ptr [ %memberidx10.i.i439, %if.entry6.i.i440 ], [ %memberidx9.i.i438, %ifend.i.i437 ]
  %688 = load i64, ptr %memberidx9.i.i438.sink1183, align 4
  %689 = add nsw i64 %688, 1
  store i64 %689, ptr %memberidx9.i.i438.sink1183, align 4
  br label %Lexer_advance.exit.i443

Lexer_advance.exit.i443:                          ; preds = %Lexer_advance.exit.i443.sink.split, %if.entry.i433
  %690 = load i64, ptr %memberidx.i.i423, align 4
  %691 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i30.i = getelementptr inbounds %string, ptr %691, i64 0, i32 2
  %692 = load i64, ptr %memberidx2.i30.i, align 4
  %.not1003 = icmp slt i64 %690, %692
  br i1 %.not1003, label %while.entry.i448.preheader, label %while.end.i449

while.entry.i448.preheader:                       ; preds = %Lexer_advance.exit.i443
  %memberidx12.i98.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i96.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i448

else.i446:                                        ; preds = %Lexer_peek.exit.i429.else.i446_crit_edge, %if.entry36
  %.pre-phi1142 = phi i64 [ %.pre1141, %Lexer_peek.exit.i429.else.i446_crit_edge ], [ %672, %if.entry36 ]
  %693 = phi i64 [ %682, %Lexer_peek.exit.i429.else.i446_crit_edge ], [ %674, %if.entry36 ]
  %694 = phi ptr [ %681, %Lexer_peek.exit.i429.else.i446_crit_edge ], [ %673, %if.entry36 ]
  %695 = icmp slt i64 %.pre-phi1142, %693
  br i1 %695, label %if.entry.i46.i, label %ifend41

if.entry.i46.i:                                   ; preds = %else.i446
  %696 = load ptr, ptr %694, align 8
  %memberidx4.i45.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %696, i64 0, i32 2
  %697 = load ptr, ptr %memberidx4.i45.i, align 8
  %698 = tail call i8 %697(ptr nonnull %694, i64 %.pre-phi1142)
  %phi.cmp995 = icmp eq i8 %698, 47
  %699 = load i64, ptr %memberidx.i.i423, align 4
  %700 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i.i119.i = getelementptr inbounds %string, ptr %700, i64 0, i32 2
  %701 = load i64, ptr %memberidx2.i.i119.i, align 4
  br i1 %phi.cmp995, label %if.entry4.i454, label %if.entry.i46.i.ifend41_crit_edge

if.entry.i46.i.ifend41_crit_edge:                 ; preds = %if.entry.i46.i
  %.pre1143 = add nsw i64 %699, 1
  br label %ifend41

while.entry.i448:                                 ; preds = %while.entry.i448.preheader, %Lexer_advance.exit100.i
  %702 = phi i64 [ %692, %while.entry.i448.preheader ], [ %751, %Lexer_advance.exit100.i ]
  %703 = phi ptr [ %691, %while.entry.i448.preheader ], [ %750, %Lexer_advance.exit100.i ]
  %704 = phi i64 [ %690, %while.entry.i448.preheader ], [ %749, %Lexer_advance.exit100.i ]
  %705 = add nsw i64 %704, 1
  %706 = icmp slt i64 %705, %702
  br i1 %706, label %if.entry.i53.i, label %Lexer_peek.exit54.i

if.entry.i53.i:                                   ; preds = %while.entry.i448
  %707 = load ptr, ptr %703, align 8
  %memberidx4.i52.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %707, i64 0, i32 2
  %708 = load ptr, ptr %memberidx4.i52.i, align 8
  %709 = tail call i8 %708(ptr nonnull %703, i64 %705)
  %.pre1076 = load i64, ptr %memberidx.i.i423, align 4
  %.pre1077 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i57.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1077, i64 0, i32 2
  %.pre1078 = load i64, ptr %memberidx2.i57.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit54.i

Lexer_peek.exit54.i:                              ; preds = %if.entry.i53.i, %while.entry.i448
  %710 = phi i64 [ %.pre1078, %if.entry.i53.i ], [ %702, %while.entry.i448 ]
  %711 = phi ptr [ %.pre1077, %if.entry.i53.i ], [ %703, %while.entry.i448 ]
  %712 = phi i64 [ %.pre1076, %if.entry.i53.i ], [ %704, %while.entry.i448 ]
  %common.ret.op.i51.i = phi i8 [ %709, %if.entry.i53.i ], [ 0, %while.entry.i448 ]
  %713 = add nsw i64 %712, 2
  %714 = icmp slt i64 %713, %710
  br i1 %714, label %Lexer_peek.exit61.i, label %ifend3.i451

Lexer_peek.exit61.i:                              ; preds = %Lexer_peek.exit54.i
  %715 = icmp eq i8 %common.ret.op.i51.i, 42
  %716 = load ptr, ptr %711, align 8
  %memberidx4.i59.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %716, i64 0, i32 2
  %717 = load ptr, ptr %memberidx4.i59.i, align 8
  %718 = tail call i8 %717(ptr nonnull %711, i64 %713)
  %719 = icmp eq i8 %718, 47
  %720 = and i1 %715, %719
  %.pre1082.pre = load i64, ptr %memberidx.i.i423, align 4
  %.pre1083.pre = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i.i64.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1083.pre, i64 0, i32 2
  %.pre1084.pre = load i64, ptr %memberidx2.i.i64.i.phi.trans.insert.phi.trans.insert, align 4
  br i1 %720, label %while.end.i449, label %ifend3.i451

while.end.i449:                                   ; preds = %Lexer_advance.exit100.i, %Lexer_peek.exit61.i, %Lexer_advance.exit.i443
  %721 = phi i64 [ %692, %Lexer_advance.exit.i443 ], [ %.pre1084.pre, %Lexer_peek.exit61.i ], [ %751, %Lexer_advance.exit100.i ]
  %722 = phi ptr [ %691, %Lexer_advance.exit.i443 ], [ %.pre1083.pre, %Lexer_peek.exit61.i ], [ %750, %Lexer_advance.exit100.i ]
  %723 = phi i64 [ %690, %Lexer_advance.exit.i443 ], [ %.pre1082.pre, %Lexer_peek.exit61.i ], [ %749, %Lexer_advance.exit100.i ]
  %.not1006 = icmp slt i64 %723, %721
  br i1 %.not1006, label %ifend.i68.i, label %Lexer_advance.exit74.i

ifend.i68.i:                                      ; preds = %while.end.i449
  %724 = load ptr, ptr %722, align 8
  %memberidx2.i66.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %724, i64 0, i32 2
  %725 = load ptr, ptr %memberidx2.i66.i, align 8
  %726 = add nsw i64 %723, 1
  store i64 %726, ptr %memberidx.i.i423, align 4
  %727 = tail call i8 %725(ptr nonnull %722, i64 %726)
  store i8 %727, ptr %0, align 1
  %728 = icmp eq i8 %727, 10
  %memberidx9.i69.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %728, label %if.entry6.i71.i, label %Lexer_advance.exit74.i.sink.split

if.entry6.i71.i:                                  ; preds = %ifend.i68.i
  store i64 0, ptr %memberidx9.i69.i, align 4
  %memberidx10.i70.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit74.i.sink.split

Lexer_advance.exit74.i.sink.split:                ; preds = %ifend.i68.i, %if.entry6.i71.i
  %memberidx9.i69.i.sink1185 = phi ptr [ %memberidx10.i70.i, %if.entry6.i71.i ], [ %memberidx9.i69.i, %ifend.i68.i ]
  %729 = load i64, ptr %memberidx9.i69.i.sink1185, align 4
  %730 = add nsw i64 %729, 1
  store i64 %730, ptr %memberidx9.i69.i.sink1185, align 4
  br label %Lexer_advance.exit74.i

Lexer_advance.exit74.i:                           ; preds = %Lexer_advance.exit74.i.sink.split, %while.end.i449
  %731 = load i64, ptr %memberidx.i.i423, align 4
  %732 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i.i77.i = getelementptr inbounds %string, ptr %732, i64 0, i32 2
  %733 = load i64, ptr %memberidx2.i.i77.i, align 4
  %.not1007 = icmp slt i64 %731, %733
  br i1 %.not1007, label %ifend.i81.i, label %if.entry39

ifend.i81.i:                                      ; preds = %Lexer_advance.exit74.i
  %734 = load ptr, ptr %732, align 8
  %memberidx2.i79.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %734, i64 0, i32 2
  %735 = load ptr, ptr %memberidx2.i79.i, align 8
  %736 = add nsw i64 %731, 1
  store i64 %736, ptr %memberidx.i.i423, align 4
  %737 = tail call i8 %735(ptr nonnull %732, i64 %736)
  store i8 %737, ptr %0, align 1
  %738 = icmp eq i8 %737, 10
  %memberidx9.i82.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %738, label %if.entry6.i84.i, label %if.entry39.sink.split

if.entry6.i84.i:                                  ; preds = %ifend.i81.i
  store i64 0, ptr %memberidx9.i82.i, align 4
  %memberidx10.i83.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %if.entry39.sink.split

ifend3.i451:                                      ; preds = %Lexer_peek.exit61.i, %Lexer_peek.exit54.i
  %739 = phi i64 [ %710, %Lexer_peek.exit54.i ], [ %.pre1084.pre, %Lexer_peek.exit61.i ]
  %740 = phi ptr [ %711, %Lexer_peek.exit54.i ], [ %.pre1083.pre, %Lexer_peek.exit61.i ]
  %741 = phi i64 [ %712, %Lexer_peek.exit54.i ], [ %.pre1082.pre, %Lexer_peek.exit61.i ]
  %.not1004 = icmp slt i64 %741, %739
  br i1 %.not1004, label %ifend.i94.i, label %Lexer_advance.exit100.i

ifend.i94.i:                                      ; preds = %ifend3.i451
  %742 = load ptr, ptr %740, align 8
  %memberidx2.i92.i453 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %742, i64 0, i32 2
  %743 = load ptr, ptr %memberidx2.i92.i453, align 8
  %744 = add nsw i64 %741, 1
  store i64 %744, ptr %memberidx.i.i423, align 4
  %745 = tail call i8 %743(ptr nonnull %740, i64 %744)
  store i8 %745, ptr %0, align 1
  %746 = icmp eq i8 %745, 10
  br i1 %746, label %if.entry6.i97.i, label %Lexer_advance.exit100.i.sink.split

if.entry6.i97.i:                                  ; preds = %ifend.i94.i
  store i64 0, ptr %memberidx12.i98.i, align 4
  br label %Lexer_advance.exit100.i.sink.split

Lexer_advance.exit100.i.sink.split:               ; preds = %ifend.i94.i, %if.entry6.i97.i
  %memberidx12.i98.i.sink1187 = phi ptr [ %memberidx10.i96.i, %if.entry6.i97.i ], [ %memberidx12.i98.i, %ifend.i94.i ]
  %747 = load i64, ptr %memberidx12.i98.i.sink1187, align 4
  %748 = add nsw i64 %747, 1
  store i64 %748, ptr %memberidx12.i98.i.sink1187, align 4
  br label %Lexer_advance.exit100.i

Lexer_advance.exit100.i:                          ; preds = %Lexer_advance.exit100.i.sink.split, %ifend3.i451
  %749 = load i64, ptr %memberidx.i.i423, align 4
  %750 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i103.i = getelementptr inbounds %string, ptr %750, i64 0, i32 2
  %751 = load i64, ptr %memberidx2.i103.i, align 4
  %.not1005 = icmp slt i64 %749, %751
  br i1 %.not1005, label %while.entry.i448, label %while.end.i449

if.entry4.i454:                                   ; preds = %if.entry.i46.i
  %.not999 = icmp slt i64 %699, %701
  br i1 %.not999, label %ifend.i123.i, label %Lexer_advance.exit129.i

ifend.i123.i:                                     ; preds = %if.entry4.i454
  %752 = load ptr, ptr %700, align 8
  %memberidx2.i121.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %752, i64 0, i32 2
  %753 = load ptr, ptr %memberidx2.i121.i, align 8
  %754 = add nsw i64 %699, 1
  store i64 %754, ptr %memberidx.i.i423, align 4
  %755 = tail call i8 %753(ptr nonnull %700, i64 %754)
  store i8 %755, ptr %0, align 1
  %756 = icmp eq i8 %755, 10
  %memberidx9.i124.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %756, label %if.entry6.i126.i, label %Lexer_advance.exit129.i.sink.split

if.entry6.i126.i:                                 ; preds = %ifend.i123.i
  store i64 0, ptr %memberidx9.i124.i, align 4
  %memberidx10.i125.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit129.i.sink.split

Lexer_advance.exit129.i.sink.split:               ; preds = %ifend.i123.i, %if.entry6.i126.i
  %memberidx9.i124.i.sink1189 = phi ptr [ %memberidx10.i125.i, %if.entry6.i126.i ], [ %memberidx9.i124.i, %ifend.i123.i ]
  %757 = load i64, ptr %memberidx9.i124.i.sink1189, align 4
  %758 = add nsw i64 %757, 1
  store i64 %758, ptr %memberidx9.i124.i.sink1189, align 4
  br label %Lexer_advance.exit129.i

Lexer_advance.exit129.i:                          ; preds = %Lexer_advance.exit129.i.sink.split, %if.entry4.i454
  %759 = load i64, ptr %memberidx.i.i423, align 4
  %760 = add nsw i64 %759, 1
  %761 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i132.i = getelementptr inbounds %string, ptr %761, i64 0, i32 2
  %762 = load i64, ptr %memberidx2.i132.i, align 4
  %763 = icmp slt i64 %760, %762
  br i1 %763, label %if.entry.i135.i, label %Lexer_peek.exit136.i

if.entry.i135.i:                                  ; preds = %Lexer_advance.exit129.i
  %764 = load ptr, ptr %761, align 8
  %memberidx4.i134.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %764, i64 0, i32 2
  %765 = load ptr, ptr %memberidx4.i134.i, align 8
  %766 = tail call i8 %765(ptr nonnull %761, i64 %760)
  %phi.cmp1000 = icmp eq i8 %766, 10
  %.pre1070 = load i64, ptr %memberidx.i.i423, align 4
  %.pre1071 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i139.i.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1071, i64 0, i32 2
  %.pre1072 = load i64, ptr %memberidx2.i139.i.phi.trans.insert, align 4
  br label %Lexer_peek.exit136.i

Lexer_peek.exit136.i:                             ; preds = %if.entry.i135.i, %Lexer_advance.exit129.i
  %767 = phi i64 [ %.pre1072, %if.entry.i135.i ], [ %762, %Lexer_advance.exit129.i ]
  %768 = phi ptr [ %.pre1071, %if.entry.i135.i ], [ %761, %Lexer_advance.exit129.i ]
  %769 = phi i64 [ %.pre1070, %if.entry.i135.i ], [ %759, %Lexer_advance.exit129.i ]
  %common.ret.op.i133.i = phi i1 [ %phi.cmp1000, %if.entry.i135.i ], [ false, %Lexer_advance.exit129.i ]
  %770 = icmp sge i64 %769, %767
  %771 = or i1 %common.ret.op.i133.i, %770
  br i1 %771, label %if.entry39, label %while.entry7.i.preheader

while.entry7.i.preheader:                         ; preds = %Lexer_peek.exit136.i
  %memberidx12.i114.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx10.i112.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry7.i

while.entry7.i:                                   ; preds = %while.entry7.i.preheader, %Lexer_peek.exit40.i
  %772 = phi i64 [ %767, %while.entry7.i.preheader ], [ %790, %Lexer_peek.exit40.i ]
  %773 = phi ptr [ %768, %while.entry7.i.preheader ], [ %791, %Lexer_peek.exit40.i ]
  %774 = phi i64 [ %769, %while.entry7.i.preheader ], [ %792, %Lexer_peek.exit40.i ]
  %.not1001 = icmp slt i64 %774, %772
  br i1 %.not1001, label %ifend.i110.i, label %Lexer_advance.exit116.i

ifend.i110.i:                                     ; preds = %while.entry7.i
  %775 = load ptr, ptr %773, align 8
  %memberidx2.i108.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %775, i64 0, i32 2
  %776 = load ptr, ptr %memberidx2.i108.i, align 8
  %777 = add nsw i64 %774, 1
  store i64 %777, ptr %memberidx.i.i423, align 4
  %778 = tail call i8 %776(ptr nonnull %773, i64 %777)
  store i8 %778, ptr %0, align 1
  %779 = icmp eq i8 %778, 10
  br i1 %779, label %if.entry6.i113.i, label %Lexer_advance.exit116.i.sink.split

if.entry6.i113.i:                                 ; preds = %ifend.i110.i
  store i64 0, ptr %memberidx12.i114.i, align 4
  br label %Lexer_advance.exit116.i.sink.split

Lexer_advance.exit116.i.sink.split:               ; preds = %ifend.i110.i, %if.entry6.i113.i
  %memberidx12.i114.i.sink1191 = phi ptr [ %memberidx10.i112.i, %if.entry6.i113.i ], [ %memberidx12.i114.i, %ifend.i110.i ]
  %780 = load i64, ptr %memberidx12.i114.i.sink1191, align 4
  %781 = add nsw i64 %780, 1
  store i64 %781, ptr %memberidx12.i114.i.sink1191, align 4
  br label %Lexer_advance.exit116.i

Lexer_advance.exit116.i:                          ; preds = %Lexer_advance.exit116.i.sink.split, %while.entry7.i
  %782 = load i64, ptr %memberidx.i.i423, align 4
  %783 = add nsw i64 %782, 1
  %784 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i36.i456 = getelementptr inbounds %string, ptr %784, i64 0, i32 2
  %785 = load i64, ptr %memberidx2.i36.i456, align 4
  %786 = icmp slt i64 %783, %785
  br i1 %786, label %if.entry.i39.i, label %Lexer_peek.exit40.i

if.entry.i39.i:                                   ; preds = %Lexer_advance.exit116.i
  %787 = load ptr, ptr %784, align 8
  %memberidx4.i38.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %787, i64 0, i32 2
  %788 = load ptr, ptr %memberidx4.i38.i, align 8
  %789 = tail call i8 %788(ptr nonnull %784, i64 %783)
  %.pre1073 = load i64, ptr %memberidx.i.i423, align 4
  %.pre1074 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i33.i459.phi.trans.insert = getelementptr inbounds %string, ptr %.pre1074, i64 0, i32 2
  %.pre1075 = load i64, ptr %memberidx2.i33.i459.phi.trans.insert, align 4
  br label %Lexer_peek.exit40.i

Lexer_peek.exit40.i:                              ; preds = %if.entry.i39.i, %Lexer_advance.exit116.i
  %790 = phi i64 [ %.pre1075, %if.entry.i39.i ], [ %785, %Lexer_advance.exit116.i ]
  %791 = phi ptr [ %.pre1074, %if.entry.i39.i ], [ %784, %Lexer_advance.exit116.i ]
  %792 = phi i64 [ %.pre1073, %if.entry.i39.i ], [ %782, %Lexer_advance.exit116.i ]
  %common.ret.op.i37.i = phi i8 [ %789, %if.entry.i39.i ], [ 0, %Lexer_advance.exit116.i ]
  %793 = icmp eq i8 %common.ret.op.i37.i, 10
  %794 = icmp sge i64 %792, %790
  %795 = or i1 %793, %794
  br i1 %795, label %if.entry39, label %while.entry7.i

if.entry39.sink.split:                            ; preds = %ifend.i81.i, %if.entry6.i84.i
  %memberidx9.i82.i.sink1193 = phi ptr [ %memberidx10.i83.i, %if.entry6.i84.i ], [ %memberidx9.i82.i, %ifend.i81.i ]
  %796 = load i64, ptr %memberidx9.i82.i.sink1193, align 4
  %797 = add nsw i64 %796, 1
  store i64 %797, ptr %memberidx9.i82.i.sink1193, align 4
  br label %if.entry39

if.entry39:                                       ; preds = %Lexer_peek.exit40.i, %if.entry39.sink.split, %Lexer_peek.exit136.i, %Lexer_advance.exit74.i
  %798 = load i64, ptr %memberidx.i.i423, align 4
  %799 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i.i462 = getelementptr inbounds %string, ptr %799, i64 0, i32 2
  %800 = load i64, ptr %memberidx2.i.i462, align 4
  %.not998 = icmp slt i64 %798, %800
  br i1 %.not998, label %ifend.i466, label %Lexer_advance.exit472

ifend.i466:                                       ; preds = %if.entry39
  %801 = load ptr, ptr %799, align 8
  %memberidx2.i464 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %801, i64 0, i32 2
  %802 = load ptr, ptr %memberidx2.i464, align 8
  %803 = add nsw i64 %798, 1
  store i64 %803, ptr %memberidx.i.i423, align 4
  %804 = tail call i8 %802(ptr nonnull %799, i64 %803)
  store i8 %804, ptr %0, align 1
  %805 = icmp eq i8 %804, 10
  %memberidx9.i467 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %805, label %if.entry6.i469, label %Lexer_advance.exit472.sink.split

if.entry6.i469:                                   ; preds = %ifend.i466
  store i64 0, ptr %memberidx9.i467, align 4
  %memberidx10.i468 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit472.sink.split

Lexer_advance.exit472.sink.split:                 ; preds = %ifend.i466, %if.entry6.i469
  %memberidx10.i468.sink1195 = phi ptr [ %memberidx10.i468, %if.entry6.i469 ], [ %memberidx9.i467, %ifend.i466 ]
  %806 = load i64, ptr %memberidx10.i468.sink1195, align 4
  %807 = add nsw i64 %806, 1
  store i64 %807, ptr %memberidx10.i468.sink1195, align 4
  br label %Lexer_advance.exit472

Lexer_advance.exit472:                            ; preds = %Lexer_advance.exit472.sink.split, %if.entry39
  %808 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

ifend41:                                          ; preds = %if.entry.i46.i.ifend41_crit_edge, %else.i446
  %.pre-phi1144 = phi i64 [ %.pre1143, %if.entry.i46.i.ifend41_crit_edge ], [ %.pre-phi1142, %else.i446 ]
  %809 = phi i64 [ %701, %if.entry.i46.i.ifend41_crit_edge ], [ %693, %else.i446 ]
  %810 = phi ptr [ %700, %if.entry.i46.i.ifend41_crit_edge ], [ %694, %else.i446 ]
  %811 = icmp slt i64 %.pre-phi1144, %809
  br i1 %811, label %if.entry.i.i480, label %ifend.i512

if.entry.i.i480:                                  ; preds = %ifend41
  %812 = load ptr, ptr %810, align 8
  %memberidx4.i.i479 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %812, i64 0, i32 2
  %813 = load ptr, ptr %memberidx4.i.i479, align 8
  %814 = tail call i8 %813(ptr nonnull %810, i64 %.pre-phi1144)
  %phi.cmp996 = icmp eq i8 %814, 61
  br i1 %phi.cmp996, label %if.entry.i487, label %ifend.i512

if.entry.i487:                                    ; preds = %if.entry.i.i480
  %815 = load i64, ptr %memberidx.i.i423, align 4
  %816 = load ptr, ptr %memberidx1.i.i424, align 8
  %memberidx2.i.i.i486 = getelementptr inbounds %string, ptr %816, i64 0, i32 2
  %817 = load i64, ptr %memberidx2.i.i.i486, align 4
  %.not997 = icmp slt i64 %815, %817
  br i1 %.not997, label %ifend.i.i491, label %Lexer_advance.exit.i504

ifend.i.i491:                                     ; preds = %if.entry.i487
  %818 = load ptr, ptr %816, align 8
  %memberidx2.i5.i489 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %818, i64 0, i32 2
  %819 = load ptr, ptr %memberidx2.i5.i489, align 8
  %820 = add nsw i64 %815, 1
  store i64 %820, ptr %memberidx.i.i423, align 4
  %821 = tail call i8 %819(ptr nonnull %816, i64 %820)
  store i8 %821, ptr %0, align 1
  %822 = icmp eq i8 %821, 10
  %memberidx9.i.i492 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %822, label %if.entry6.i.i494, label %Lexer_advance.exit.i504.sink.split

if.entry6.i.i494:                                 ; preds = %ifend.i.i491
  store i64 0, ptr %memberidx9.i.i492, align 4
  %memberidx10.i.i493 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i504.sink.split

Lexer_advance.exit.i504.sink.split:               ; preds = %ifend.i.i491, %if.entry6.i.i494
  %memberidx9.i.i492.sink1197 = phi ptr [ %memberidx10.i.i493, %if.entry6.i.i494 ], [ %memberidx9.i.i492, %ifend.i.i491 ]
  %823 = load i64, ptr %memberidx9.i.i492.sink1197, align 4
  %824 = add nsw i64 %823, 1
  store i64 %824, ptr %memberidx9.i.i492.sink1197, align 4
  br label %Lexer_advance.exit.i504

Lexer_advance.exit.i504:                          ; preds = %Lexer_advance.exit.i504.sink.split, %if.entry.i487
  %825 = tail call ptr @malloc(i32 16)
  %826 = tail call ptr @malloc(i32 32)
  %827 = load i64, ptr %memberidx.i.i423, align 4
  %828 = add nsw i64 %827, -1
  %829 = add nsw i64 %827, 1
  %memberidx2.i7.i498 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %830 = load i64, ptr %memberidx2.i7.i498, align 4
  %831 = add i64 %830, -2
  %memberidx3.i8.i499 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %832 = load i64, ptr %memberidx3.i8.i499, align 4
  store i64 %828, ptr %826, align 4
  %memberidx1.i.i9.i500 = getelementptr inbounds %FloRange, ptr %826, i64 0, i32 1
  store i64 %829, ptr %memberidx1.i.i9.i500, align 4
  %memberidx2.i.i10.i501 = getelementptr inbounds %FloRange, ptr %826, i64 0, i32 2
  store i64 %831, ptr %memberidx2.i.i10.i501, align 4
  %memberidx3.i.i.i502 = getelementptr inbounds %FloRange, ptr %826, i64 0, i32 3
  store i64 %832, ptr %memberidx3.i.i.i502, align 4
  store i64 15, ptr %825, align 4
  %memberidx1.i11.i503 = getelementptr inbounds %Token, ptr %825, i64 0, i32 1
  store ptr %826, ptr %memberidx1.i11.i503, align 8
  br label %common.ret

ifend.i512:                                       ; preds = %ifend41, %if.entry.i.i480
  %833 = tail call ptr @malloc(i32 16)
  %834 = tail call ptr @malloc(i32 32)
  %835 = load i64, ptr %memberidx.i.i423, align 4
  %836 = add nsw i64 %835, 1
  %memberidx2.i14.i506 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %837 = load i64, ptr %memberidx2.i14.i506, align 4
  %838 = add i64 %837, -1
  %memberidx3.i15.i507 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %839 = load i64, ptr %memberidx3.i15.i507, align 4
  store i64 %835, ptr %834, align 4
  %memberidx1.i.i16.i508 = getelementptr inbounds %FloRange, ptr %834, i64 0, i32 1
  store i64 %836, ptr %memberidx1.i.i16.i508, align 4
  %memberidx2.i.i17.i509 = getelementptr inbounds %FloRange, ptr %834, i64 0, i32 2
  store i64 %838, ptr %memberidx2.i.i17.i509, align 4
  %memberidx3.i.i18.i510 = getelementptr inbounds %FloRange, ptr %834, i64 0, i32 3
  store i64 %839, ptr %memberidx3.i.i18.i510, align 4
  store i64 7, ptr %833, align 4
  %memberidx1.i12.i511 = getelementptr inbounds %Token, ptr %833, i64 0, i32 1
  store ptr %834, ptr %memberidx1.i12.i511, align 8
  br label %common.ret

if.entry42:                                       ; preds = %ifend11
  %840 = tail call ptr @malloc(i32 16)
  %841 = tail call ptr @malloc(i32 32)
  %memberidx.i513 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %842 = load i64, ptr %memberidx.i513, align 4
  %843 = add nsw i64 %842, 1
  %memberidx2.i514 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %844 = load i64, ptr %memberidx2.i514, align 4
  %845 = add i64 %844, -1
  %memberidx3.i515 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %846 = load i64, ptr %memberidx3.i515, align 4
  store i64 %842, ptr %841, align 4
  %memberidx1.i.i516 = getelementptr inbounds %FloRange, ptr %841, i64 0, i32 1
  store i64 %843, ptr %memberidx1.i.i516, align 4
  %memberidx2.i.i517 = getelementptr inbounds %FloRange, ptr %841, i64 0, i32 2
  store i64 %845, ptr %memberidx2.i.i517, align 4
  %memberidx3.i.i518 = getelementptr inbounds %FloRange, ptr %841, i64 0, i32 3
  store i64 %846, ptr %memberidx3.i.i518, align 4
  store i64 25, ptr %840, align 4
  %memberidx1.i519 = getelementptr inbounds %Token, ptr %840, i64 0, i32 1
  store ptr %841, ptr %memberidx1.i519, align 8
  br label %common.ret

if.entry45:                                       ; preds = %ifend11
  %847 = tail call ptr @malloc(i32 16)
  %848 = tail call ptr @malloc(i32 32)
  %memberidx.i520 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %849 = load i64, ptr %memberidx.i520, align 4
  %850 = add nsw i64 %849, 1
  %memberidx2.i521 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %851 = load i64, ptr %memberidx2.i521, align 4
  %852 = add i64 %851, -1
  %memberidx3.i522 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %853 = load i64, ptr %memberidx3.i522, align 4
  store i64 %849, ptr %848, align 4
  %memberidx1.i.i523 = getelementptr inbounds %FloRange, ptr %848, i64 0, i32 1
  store i64 %850, ptr %memberidx1.i.i523, align 4
  %memberidx2.i.i524 = getelementptr inbounds %FloRange, ptr %848, i64 0, i32 2
  store i64 %852, ptr %memberidx2.i.i524, align 4
  %memberidx3.i.i525 = getelementptr inbounds %FloRange, ptr %848, i64 0, i32 3
  store i64 %853, ptr %memberidx3.i.i525, align 4
  store i64 26, ptr %847, align 4
  %memberidx1.i526 = getelementptr inbounds %Token, ptr %847, i64 0, i32 1
  store ptr %848, ptr %memberidx1.i526, align 8
  br label %common.ret

if.entry48:                                       ; preds = %ifend11
  %854 = tail call ptr @malloc(i32 16)
  %855 = tail call ptr @malloc(i32 32)
  %memberidx.i527 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %856 = load i64, ptr %memberidx.i527, align 4
  %857 = add nsw i64 %856, 1
  %memberidx2.i528 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %858 = load i64, ptr %memberidx2.i528, align 4
  %859 = add i64 %858, -1
  %memberidx3.i529 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %860 = load i64, ptr %memberidx3.i529, align 4
  store i64 %856, ptr %855, align 4
  %memberidx1.i.i530 = getelementptr inbounds %FloRange, ptr %855, i64 0, i32 1
  store i64 %857, ptr %memberidx1.i.i530, align 4
  %memberidx2.i.i531 = getelementptr inbounds %FloRange, ptr %855, i64 0, i32 2
  store i64 %859, ptr %memberidx2.i.i531, align 4
  %memberidx3.i.i532 = getelementptr inbounds %FloRange, ptr %855, i64 0, i32 3
  store i64 %860, ptr %memberidx3.i.i532, align 4
  store i64 27, ptr %854, align 4
  %memberidx1.i533 = getelementptr inbounds %Token, ptr %854, i64 0, i32 1
  store ptr %855, ptr %memberidx1.i533, align 8
  br label %common.ret

if.entry51:                                       ; preds = %ifend11
  %861 = tail call ptr @malloc(i32 16)
  %862 = tail call ptr @malloc(i32 32)
  %memberidx.i534 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %863 = load i64, ptr %memberidx.i534, align 4
  %864 = add nsw i64 %863, 1
  %memberidx2.i535 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %865 = load i64, ptr %memberidx2.i535, align 4
  %866 = add i64 %865, -1
  %memberidx3.i536 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %867 = load i64, ptr %memberidx3.i536, align 4
  store i64 %863, ptr %862, align 4
  %memberidx1.i.i537 = getelementptr inbounds %FloRange, ptr %862, i64 0, i32 1
  store i64 %864, ptr %memberidx1.i.i537, align 4
  %memberidx2.i.i538 = getelementptr inbounds %FloRange, ptr %862, i64 0, i32 2
  store i64 %866, ptr %memberidx2.i.i538, align 4
  %memberidx3.i.i539 = getelementptr inbounds %FloRange, ptr %862, i64 0, i32 3
  store i64 %867, ptr %memberidx3.i.i539, align 4
  store i64 28, ptr %861, align 4
  %memberidx1.i540 = getelementptr inbounds %Token, ptr %861, i64 0, i32 1
  store ptr %862, ptr %memberidx1.i540, align 8
  br label %common.ret

if.entry54:                                       ; preds = %ifend11
  %868 = tail call ptr @malloc(i32 16)
  %869 = tail call ptr @malloc(i32 32)
  %memberidx.i541 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %870 = load i64, ptr %memberidx.i541, align 4
  %871 = add nsw i64 %870, 1
  %memberidx2.i542 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %872 = load i64, ptr %memberidx2.i542, align 4
  %873 = add i64 %872, -1
  %memberidx3.i543 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %874 = load i64, ptr %memberidx3.i543, align 4
  store i64 %870, ptr %869, align 4
  %memberidx1.i.i544 = getelementptr inbounds %FloRange, ptr %869, i64 0, i32 1
  store i64 %871, ptr %memberidx1.i.i544, align 4
  %memberidx2.i.i545 = getelementptr inbounds %FloRange, ptr %869, i64 0, i32 2
  store i64 %873, ptr %memberidx2.i.i545, align 4
  %memberidx3.i.i546 = getelementptr inbounds %FloRange, ptr %869, i64 0, i32 3
  store i64 %874, ptr %memberidx3.i.i546, align 4
  store i64 29, ptr %868, align 4
  %memberidx1.i547 = getelementptr inbounds %Token, ptr %868, i64 0, i32 1
  store ptr %869, ptr %memberidx1.i547, align 8
  br label %common.ret

if.entry57:                                       ; preds = %ifend11
  %875 = tail call ptr @malloc(i32 16)
  %876 = tail call ptr @malloc(i32 32)
  %memberidx.i548 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %877 = load i64, ptr %memberidx.i548, align 4
  %878 = add nsw i64 %877, 1
  %memberidx2.i549 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %879 = load i64, ptr %memberidx2.i549, align 4
  %880 = add i64 %879, -1
  %memberidx3.i550 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %881 = load i64, ptr %memberidx3.i550, align 4
  store i64 %877, ptr %876, align 4
  %memberidx1.i.i551 = getelementptr inbounds %FloRange, ptr %876, i64 0, i32 1
  store i64 %878, ptr %memberidx1.i.i551, align 4
  %memberidx2.i.i552 = getelementptr inbounds %FloRange, ptr %876, i64 0, i32 2
  store i64 %880, ptr %memberidx2.i.i552, align 4
  %memberidx3.i.i553 = getelementptr inbounds %FloRange, ptr %876, i64 0, i32 3
  store i64 %881, ptr %memberidx3.i.i553, align 4
  store i64 30, ptr %875, align 4
  %memberidx1.i554 = getelementptr inbounds %Token, ptr %875, i64 0, i32 1
  store ptr %876, ptr %memberidx1.i554, align 8
  br label %common.ret

if.entry60:                                       ; preds = %ifend11, %ifend11
  %882 = tail call ptr @malloc(i32 16)
  %883 = tail call ptr @malloc(i32 32)
  %memberidx.i555 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %884 = load i64, ptr %memberidx.i555, align 4
  %885 = add nsw i64 %884, 1
  %memberidx2.i556 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %886 = load i64, ptr %memberidx2.i556, align 4
  %887 = add i64 %886, -1
  %memberidx3.i557 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %888 = load i64, ptr %memberidx3.i557, align 4
  store i64 %884, ptr %883, align 4
  %memberidx1.i.i558 = getelementptr inbounds %FloRange, ptr %883, i64 0, i32 1
  store i64 %885, ptr %memberidx1.i.i558, align 4
  %memberidx2.i.i559 = getelementptr inbounds %FloRange, ptr %883, i64 0, i32 2
  store i64 %887, ptr %memberidx2.i.i559, align 4
  %memberidx3.i.i560 = getelementptr inbounds %FloRange, ptr %883, i64 0, i32 3
  store i64 %888, ptr %memberidx3.i.i560, align 4
  store i64 33, ptr %882, align 4
  %memberidx1.i561 = getelementptr inbounds %Token, ptr %882, i64 0, i32 1
  store ptr %883, ptr %memberidx1.i561, align 8
  br label %common.ret

if.entry63:                                       ; preds = %ifend11
  %memberidx.i.i.i562 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %889 = load i64, ptr %memberidx.i.i.i562, align 4
  %memberidx1.i.i.i563 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %890 = load ptr, ptr %memberidx1.i.i.i563, align 8
  %memberidx2.i.i.i564 = getelementptr inbounds %string, ptr %890, i64 0, i32 2
  %891 = load i64, ptr %memberidx2.i.i.i564, align 4
  %.not992 = icmp slt i64 %889, %891
  br i1 %.not992, label %ifend.i.i568, label %ifend.i589

ifend.i.i568:                                     ; preds = %if.entry63
  %892 = load ptr, ptr %890, align 8
  %memberidx2.i.i566 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %892, i64 0, i32 2
  %893 = load ptr, ptr %memberidx2.i.i566, align 8
  %894 = add nsw i64 %889, 1
  store i64 %894, ptr %memberidx.i.i.i562, align 4
  %895 = tail call i8 %893(ptr nonnull %890, i64 %894)
  store i8 %895, ptr %0, align 1
  %896 = icmp eq i8 %895, 10
  %memberidx9.i.i569 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %896, label %if.entry6.i.i571, label %Lexer_advance.exit.i574

if.entry6.i.i571:                                 ; preds = %ifend.i.i568
  store i64 0, ptr %memberidx9.i.i569, align 4
  %memberidx10.i.i570 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %897 = load i64, ptr %memberidx10.i.i570, align 4
  %898 = add nsw i64 %897, 1
  store i64 %898, ptr %memberidx10.i.i570, align 4
  br label %ifend.i589

Lexer_advance.exit.i574:                          ; preds = %ifend.i.i568
  %899 = load i64, ptr %memberidx9.i.i569, align 4
  %900 = add nsw i64 %899, 1
  store i64 %900, ptr %memberidx9.i.i569, align 4
  %901 = icmp eq i8 %895, 92
  br i1 %901, label %if.entry.i575, label %ifend.i589

if.entry.i575:                                    ; preds = %Lexer_advance.exit.i574
  %902 = load i64, ptr %memberidx.i.i.i562, align 4
  %903 = load ptr, ptr %memberidx1.i.i.i563, align 8
  %memberidx2.i.i12.i = getelementptr inbounds %string, ptr %903, i64 0, i32 2
  %904 = load i64, ptr %memberidx2.i.i12.i, align 4
  %.not994 = icmp slt i64 %902, %904
  br i1 %.not994, label %ifend.i16.i, label %ifend27.i.i586

ifend.i16.i:                                      ; preds = %if.entry.i575
  %905 = load ptr, ptr %903, align 8
  %memberidx2.i14.i576 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %905, i64 0, i32 2
  %906 = load ptr, ptr %memberidx2.i14.i576, align 8
  %907 = add nsw i64 %902, 1
  store i64 %907, ptr %memberidx.i.i.i562, align 4
  %908 = tail call i8 %906(ptr nonnull %903, i64 %907)
  store i8 %908, ptr %0, align 1
  %909 = icmp eq i8 %908, 10
  %memberidx9.i17.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %909, label %if.entry6.i19.i, label %Lexer_advance.exit22.i

if.entry6.i19.i:                                  ; preds = %ifend.i16.i
  store i64 0, ptr %memberidx9.i17.i, align 4
  %memberidx10.i18.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %910 = load i64, ptr %memberidx10.i18.i, align 4
  %911 = add nsw i64 %910, 1
  store i64 %911, ptr %memberidx10.i18.i, align 4
  br label %ifend27.i.i586

Lexer_advance.exit22.i:                           ; preds = %ifend.i16.i
  %912 = load i64, ptr %memberidx9.i17.i, align 4
  %913 = add nsw i64 %912, 1
  store i64 %913, ptr %memberidx9.i17.i, align 4
  switch i8 %908, label %ifend27.i.i586 [
    i8 97, label %ifend.i589
    i8 98, label %get_escape_char.exit.i.fold.split
    i8 116, label %get_escape_char.exit.i.fold.split1041
    i8 102, label %get_escape_char.exit.i.fold.split1042
    i8 110, label %get_escape_char.exit.i.fold.split1043
    i8 114, label %get_escape_char.exit.i.fold.split1044
    i8 118, label %get_escape_char.exit.i.fold.split1045
    i8 48, label %get_escape_char.exit.i.fold.split1046
    i8 39, label %get_escape_char.exit.i.fold.split1047
    i8 34, label %get_escape_char.exit.i.fold.split1048
  ]

ifend27.i.i586:                                   ; preds = %if.entry.i575, %if.entry6.i19.i, %Lexer_advance.exit22.i
  %914 = phi i8 [ %908, %Lexer_advance.exit22.i ], [ 92, %if.entry.i575 ], [ 10, %if.entry6.i19.i ]
  br label %ifend.i589

get_escape_char.exit.i.fold.split:                ; preds = %Lexer_advance.exit22.i
  br label %ifend.i589

get_escape_char.exit.i.fold.split1041:            ; preds = %Lexer_advance.exit22.i
  br label %ifend.i589

get_escape_char.exit.i.fold.split1042:            ; preds = %Lexer_advance.exit22.i
  br label %ifend.i589

get_escape_char.exit.i.fold.split1043:            ; preds = %Lexer_advance.exit22.i
  br label %ifend.i589

get_escape_char.exit.i.fold.split1044:            ; preds = %Lexer_advance.exit22.i
  br label %ifend.i589

get_escape_char.exit.i.fold.split1045:            ; preds = %Lexer_advance.exit22.i
  br label %ifend.i589

get_escape_char.exit.i.fold.split1046:            ; preds = %Lexer_advance.exit22.i
  br label %ifend.i589

get_escape_char.exit.i.fold.split1047:            ; preds = %Lexer_advance.exit22.i
  br label %ifend.i589

get_escape_char.exit.i.fold.split1048:            ; preds = %Lexer_advance.exit22.i
  br label %ifend.i589

ifend.i589:                                       ; preds = %if.entry63, %if.entry6.i.i571, %ifend27.i.i586, %get_escape_char.exit.i.fold.split, %get_escape_char.exit.i.fold.split1041, %get_escape_char.exit.i.fold.split1042, %get_escape_char.exit.i.fold.split1043, %get_escape_char.exit.i.fold.split1044, %get_escape_char.exit.i.fold.split1045, %get_escape_char.exit.i.fold.split1046, %get_escape_char.exit.i.fold.split1047, %get_escape_char.exit.i.fold.split1048, %Lexer_advance.exit22.i, %Lexer_advance.exit.i574
  %length.0.i588 = phi i64 [ 3, %Lexer_advance.exit.i574 ], [ 5, %Lexer_advance.exit22.i ], [ 5, %get_escape_char.exit.i.fold.split1048 ], [ 5, %get_escape_char.exit.i.fold.split1047 ], [ 5, %get_escape_char.exit.i.fold.split1046 ], [ 5, %get_escape_char.exit.i.fold.split1045 ], [ 5, %get_escape_char.exit.i.fold.split1044 ], [ 5, %get_escape_char.exit.i.fold.split1043 ], [ 5, %get_escape_char.exit.i.fold.split1042 ], [ 5, %get_escape_char.exit.i.fold.split1041 ], [ 5, %get_escape_char.exit.i.fold.split ], [ 5, %ifend27.i.i586 ], [ 3, %if.entry6.i.i571 ], [ 3, %if.entry63 ]
  %value.0.i = phi i8 [ %895, %Lexer_advance.exit.i574 ], [ 7, %Lexer_advance.exit22.i ], [ %908, %get_escape_char.exit.i.fold.split1048 ], [ %908, %get_escape_char.exit.i.fold.split1047 ], [ 0, %get_escape_char.exit.i.fold.split1046 ], [ 11, %get_escape_char.exit.i.fold.split1045 ], [ 13, %get_escape_char.exit.i.fold.split1044 ], [ 10, %get_escape_char.exit.i.fold.split1043 ], [ 12, %get_escape_char.exit.i.fold.split1042 ], [ 9, %get_escape_char.exit.i.fold.split1041 ], [ 8, %get_escape_char.exit.i.fold.split ], [ %914, %ifend27.i.i586 ], [ 10, %if.entry6.i.i571 ], [ 39, %if.entry63 ]
  %915 = load i64, ptr %memberidx.i.i.i562, align 4
  %916 = load ptr, ptr %memberidx1.i.i.i563, align 8
  %memberidx2.i.i32.i = getelementptr inbounds %string, ptr %916, i64 0, i32 2
  %917 = load i64, ptr %memberidx2.i.i32.i, align 4
  %.not993 = icmp slt i64 %915, %917
  br i1 %.not993, label %ifend.i36.i, label %Lexer_char_token.exit

ifend.i36.i:                                      ; preds = %ifend.i589
  %918 = load ptr, ptr %916, align 8
  %memberidx2.i34.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %918, i64 0, i32 2
  %919 = load ptr, ptr %memberidx2.i34.i, align 8
  %920 = add nsw i64 %915, 1
  store i64 %920, ptr %memberidx.i.i.i562, align 4
  %921 = tail call i8 %919(ptr nonnull %916, i64 %920)
  store i8 %921, ptr %0, align 1
  %922 = icmp eq i8 %921, 10
  %memberidx9.i37.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %922, label %if.entry6.i39.i, label %Lexer_char_token.exit.sink.split

if.entry6.i39.i:                                  ; preds = %ifend.i36.i
  store i64 0, ptr %memberidx9.i37.i, align 4
  %memberidx10.i38.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_char_token.exit.sink.split

Lexer_char_token.exit.sink.split:                 ; preds = %ifend.i36.i, %if.entry6.i39.i
  %memberidx10.i38.i.sink1199 = phi ptr [ %memberidx10.i38.i, %if.entry6.i39.i ], [ %memberidx9.i37.i, %ifend.i36.i ]
  %923 = load i64, ptr %memberidx10.i38.i.sink1199, align 4
  %924 = add nsw i64 %923, 1
  store i64 %924, ptr %memberidx10.i38.i.sink1199, align 4
  br label %Lexer_char_token.exit

Lexer_char_token.exit:                            ; preds = %Lexer_char_token.exit.sink.split, %ifend.i589
  %925 = tail call ptr @malloc(i32 17)
  %926 = tail call ptr @malloc(i32 32)
  %927 = load i64, ptr %memberidx.i.i.i562, align 4
  %928 = sub nsw i64 1, %length.0.i588
  %929 = add i64 %928, %927
  %930 = add nsw i64 %927, 1
  %memberidx2.i26.i591 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %931 = load i64, ptr %memberidx2.i26.i591, align 4
  %932 = sub nuw i64 %931, %length.0.i588
  %memberidx3.i27.i592 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %933 = load i64, ptr %memberidx3.i27.i592, align 4
  store i64 %929, ptr %926, align 4
  %memberidx1.i.i28.i593 = getelementptr inbounds %FloRange, ptr %926, i64 0, i32 1
  store i64 %930, ptr %memberidx1.i.i28.i593, align 4
  %memberidx2.i.i29.i594 = getelementptr inbounds %FloRange, ptr %926, i64 0, i32 2
  store i64 %932, ptr %memberidx2.i.i29.i594, align 4
  %memberidx3.i.i.i595 = getelementptr inbounds %FloRange, ptr %926, i64 0, i32 3
  store i64 %933, ptr %memberidx3.i.i.i595, align 4
  store i64 35, ptr %925, align 4
  %memberidx1.i.i24.i = getelementptr inbounds %Token, ptr %925, i64 0, i32 1
  store ptr %926, ptr %memberidx1.i.i24.i, align 8
  %memberidx.i.i596 = getelementptr inbounds %CharToken, ptr %925, i64 0, i32 2
  store i8 %value.0.i, ptr %memberidx.i.i596, align 1
  br label %common.ret

if.entry66:                                       ; preds = %ifend11
  %934 = tail call ptr @malloc(i32 16)
  %935 = tail call ptr @malloc(i32 32)
  %memberidx.i597 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %936 = load i64, ptr %memberidx.i597, align 4
  %937 = add nsw i64 %936, 1
  %memberidx2.i598 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %938 = load i64, ptr %memberidx2.i598, align 4
  %939 = add i64 %938, -1
  %memberidx3.i599 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %940 = load i64, ptr %memberidx3.i599, align 4
  store i64 %936, ptr %935, align 4
  %memberidx1.i.i600 = getelementptr inbounds %FloRange, ptr %935, i64 0, i32 1
  store i64 %937, ptr %memberidx1.i.i600, align 4
  %memberidx2.i.i601 = getelementptr inbounds %FloRange, ptr %935, i64 0, i32 2
  store i64 %939, ptr %memberidx2.i.i601, align 4
  %memberidx3.i.i602 = getelementptr inbounds %FloRange, ptr %935, i64 0, i32 3
  store i64 %940, ptr %memberidx3.i.i602, align 4
  store i64 36, ptr %934, align 4
  %memberidx1.i603 = getelementptr inbounds %Token, ptr %934, i64 0, i32 1
  store ptr %935, ptr %memberidx1.i603, align 8
  br label %common.ret

if.entry69:                                       ; preds = %ifend11
  %941 = tail call ptr @malloc(i32 16)
  %942 = tail call ptr @malloc(i32 32)
  %memberidx.i604 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %943 = load i64, ptr %memberidx.i604, align 4
  %944 = add nsw i64 %943, 1
  %memberidx2.i605 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %945 = load i64, ptr %memberidx2.i605, align 4
  %946 = add i64 %945, -1
  %memberidx3.i606 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %947 = load i64, ptr %memberidx3.i606, align 4
  store i64 %943, ptr %942, align 4
  %memberidx1.i.i607 = getelementptr inbounds %FloRange, ptr %942, i64 0, i32 1
  store i64 %944, ptr %memberidx1.i.i607, align 4
  %memberidx2.i.i608 = getelementptr inbounds %FloRange, ptr %942, i64 0, i32 2
  store i64 %946, ptr %memberidx2.i.i608, align 4
  %memberidx3.i.i609 = getelementptr inbounds %FloRange, ptr %942, i64 0, i32 3
  store i64 %947, ptr %memberidx3.i.i609, align 4
  store i64 37, ptr %941, align 4
  %memberidx1.i610 = getelementptr inbounds %Token, ptr %941, i64 0, i32 1
  store ptr %942, ptr %memberidx1.i610, align 8
  br label %common.ret

if.entry72:                                       ; preds = %ifend11
  %memberidx.i.i611 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %948 = load i64, ptr %memberidx.i.i611, align 4
  %949 = add nsw i64 %948, 1
  %memberidx1.i.i612 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %950 = load ptr, ptr %memberidx1.i.i612, align 8
  %memberidx2.i.i613 = getelementptr inbounds %string, ptr %950, i64 0, i32 2
  %951 = load i64, ptr %memberidx2.i.i613, align 4
  %952 = icmp slt i64 %949, %951
  br i1 %952, label %if.entry.i.i615, label %ifend.i647

if.entry.i.i615:                                  ; preds = %if.entry72
  %953 = load ptr, ptr %950, align 8
  %memberidx4.i.i614 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %953, i64 0, i32 2
  %954 = load ptr, ptr %memberidx4.i.i614, align 8
  %955 = tail call i8 %954(ptr nonnull %950, i64 %949)
  %phi.cmp990 = icmp eq i8 %955, 61
  br i1 %phi.cmp990, label %if.entry.i622, label %ifend.i647

if.entry.i622:                                    ; preds = %if.entry.i.i615
  %956 = load i64, ptr %memberidx.i.i611, align 4
  %957 = load ptr, ptr %memberidx1.i.i612, align 8
  %memberidx2.i.i.i621 = getelementptr inbounds %string, ptr %957, i64 0, i32 2
  %958 = load i64, ptr %memberidx2.i.i.i621, align 4
  %.not991 = icmp slt i64 %956, %958
  br i1 %.not991, label %ifend.i.i626, label %Lexer_advance.exit.i639

ifend.i.i626:                                     ; preds = %if.entry.i622
  %959 = load ptr, ptr %957, align 8
  %memberidx2.i5.i624 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %959, i64 0, i32 2
  %960 = load ptr, ptr %memberidx2.i5.i624, align 8
  %961 = add nsw i64 %956, 1
  store i64 %961, ptr %memberidx.i.i611, align 4
  %962 = tail call i8 %960(ptr nonnull %957, i64 %961)
  store i8 %962, ptr %0, align 1
  %963 = icmp eq i8 %962, 10
  %memberidx9.i.i627 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %963, label %if.entry6.i.i629, label %Lexer_advance.exit.i639.sink.split

if.entry6.i.i629:                                 ; preds = %ifend.i.i626
  store i64 0, ptr %memberidx9.i.i627, align 4
  %memberidx10.i.i628 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i639.sink.split

Lexer_advance.exit.i639.sink.split:               ; preds = %ifend.i.i626, %if.entry6.i.i629
  %memberidx9.i.i627.sink1201 = phi ptr [ %memberidx10.i.i628, %if.entry6.i.i629 ], [ %memberidx9.i.i627, %ifend.i.i626 ]
  %964 = load i64, ptr %memberidx9.i.i627.sink1201, align 4
  %965 = add nsw i64 %964, 1
  store i64 %965, ptr %memberidx9.i.i627.sink1201, align 4
  br label %Lexer_advance.exit.i639

Lexer_advance.exit.i639:                          ; preds = %Lexer_advance.exit.i639.sink.split, %if.entry.i622
  %966 = tail call ptr @malloc(i32 16)
  %967 = tail call ptr @malloc(i32 32)
  %968 = load i64, ptr %memberidx.i.i611, align 4
  %969 = add nsw i64 %968, -1
  %970 = add nsw i64 %968, 1
  %memberidx2.i7.i633 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %971 = load i64, ptr %memberidx2.i7.i633, align 4
  %972 = add i64 %971, -2
  %memberidx3.i8.i634 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %973 = load i64, ptr %memberidx3.i8.i634, align 4
  store i64 %969, ptr %967, align 4
  %memberidx1.i.i9.i635 = getelementptr inbounds %FloRange, ptr %967, i64 0, i32 1
  store i64 %970, ptr %memberidx1.i.i9.i635, align 4
  %memberidx2.i.i10.i636 = getelementptr inbounds %FloRange, ptr %967, i64 0, i32 2
  store i64 %972, ptr %memberidx2.i.i10.i636, align 4
  %memberidx3.i.i.i637 = getelementptr inbounds %FloRange, ptr %967, i64 0, i32 3
  store i64 %973, ptr %memberidx3.i.i.i637, align 4
  store i64 39, ptr %966, align 4
  %memberidx1.i11.i638 = getelementptr inbounds %Token, ptr %966, i64 0, i32 1
  store ptr %967, ptr %memberidx1.i11.i638, align 8
  br label %common.ret

ifend.i647:                                       ; preds = %if.entry72, %if.entry.i.i615
  %974 = tail call ptr @malloc(i32 16)
  %975 = tail call ptr @malloc(i32 32)
  %976 = load i64, ptr %memberidx.i.i611, align 4
  %977 = add nsw i64 %976, 1
  %memberidx2.i14.i641 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %978 = load i64, ptr %memberidx2.i14.i641, align 4
  %979 = add i64 %978, -1
  %memberidx3.i15.i642 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %980 = load i64, ptr %memberidx3.i15.i642, align 4
  store i64 %976, ptr %975, align 4
  %memberidx1.i.i16.i643 = getelementptr inbounds %FloRange, ptr %975, i64 0, i32 1
  store i64 %977, ptr %memberidx1.i.i16.i643, align 4
  %memberidx2.i.i17.i644 = getelementptr inbounds %FloRange, ptr %975, i64 0, i32 2
  store i64 %979, ptr %memberidx2.i.i17.i644, align 4
  %memberidx3.i.i18.i645 = getelementptr inbounds %FloRange, ptr %975, i64 0, i32 3
  store i64 %980, ptr %memberidx3.i.i18.i645, align 4
  store i64 38, ptr %974, align 4
  %memberidx1.i12.i646 = getelementptr inbounds %Token, ptr %974, i64 0, i32 1
  store ptr %975, ptr %memberidx1.i12.i646, align 8
  br label %common.ret

if.entry75:                                       ; preds = %ifend11
  %memberidx.i.i648 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %981 = load i64, ptr %memberidx.i.i648, align 4
  %982 = add nsw i64 %981, 1
  %memberidx1.i.i649 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %983 = load ptr, ptr %memberidx1.i.i649, align 8
  %memberidx2.i.i650 = getelementptr inbounds %string, ptr %983, i64 0, i32 2
  %984 = load i64, ptr %memberidx2.i.i650, align 4
  %985 = icmp slt i64 %982, %984
  br i1 %985, label %if.entry.i.i652, label %ifend.i684

if.entry.i.i652:                                  ; preds = %if.entry75
  %986 = load ptr, ptr %983, align 8
  %memberidx4.i.i651 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %986, i64 0, i32 2
  %987 = load ptr, ptr %memberidx4.i.i651, align 8
  %988 = tail call i8 %987(ptr nonnull %983, i64 %982)
  %phi.cmp988 = icmp eq i8 %988, 61
  br i1 %phi.cmp988, label %if.entry.i659, label %ifend.i684

if.entry.i659:                                    ; preds = %if.entry.i.i652
  %989 = load i64, ptr %memberidx.i.i648, align 4
  %990 = load ptr, ptr %memberidx1.i.i649, align 8
  %memberidx2.i.i.i658 = getelementptr inbounds %string, ptr %990, i64 0, i32 2
  %991 = load i64, ptr %memberidx2.i.i.i658, align 4
  %.not989 = icmp slt i64 %989, %991
  br i1 %.not989, label %ifend.i.i663, label %Lexer_advance.exit.i676

ifend.i.i663:                                     ; preds = %if.entry.i659
  %992 = load ptr, ptr %990, align 8
  %memberidx2.i5.i661 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %992, i64 0, i32 2
  %993 = load ptr, ptr %memberidx2.i5.i661, align 8
  %994 = add nsw i64 %989, 1
  store i64 %994, ptr %memberidx.i.i648, align 4
  %995 = tail call i8 %993(ptr nonnull %990, i64 %994)
  store i8 %995, ptr %0, align 1
  %996 = icmp eq i8 %995, 10
  %memberidx9.i.i664 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %996, label %if.entry6.i.i666, label %Lexer_advance.exit.i676.sink.split

if.entry6.i.i666:                                 ; preds = %ifend.i.i663
  store i64 0, ptr %memberidx9.i.i664, align 4
  %memberidx10.i.i665 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i676.sink.split

Lexer_advance.exit.i676.sink.split:               ; preds = %ifend.i.i663, %if.entry6.i.i666
  %memberidx9.i.i664.sink1203 = phi ptr [ %memberidx10.i.i665, %if.entry6.i.i666 ], [ %memberidx9.i.i664, %ifend.i.i663 ]
  %997 = load i64, ptr %memberidx9.i.i664.sink1203, align 4
  %998 = add nsw i64 %997, 1
  store i64 %998, ptr %memberidx9.i.i664.sink1203, align 4
  br label %Lexer_advance.exit.i676

Lexer_advance.exit.i676:                          ; preds = %Lexer_advance.exit.i676.sink.split, %if.entry.i659
  %999 = tail call ptr @malloc(i32 16)
  %1000 = tail call ptr @malloc(i32 32)
  %1001 = load i64, ptr %memberidx.i.i648, align 4
  %1002 = add nsw i64 %1001, -1
  %1003 = add nsw i64 %1001, 1
  %memberidx2.i7.i670 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1004 = load i64, ptr %memberidx2.i7.i670, align 4
  %1005 = add i64 %1004, -2
  %memberidx3.i8.i671 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1006 = load i64, ptr %memberidx3.i8.i671, align 4
  store i64 %1002, ptr %1000, align 4
  %memberidx1.i.i9.i672 = getelementptr inbounds %FloRange, ptr %1000, i64 0, i32 1
  store i64 %1003, ptr %memberidx1.i.i9.i672, align 4
  %memberidx2.i.i10.i673 = getelementptr inbounds %FloRange, ptr %1000, i64 0, i32 2
  store i64 %1005, ptr %memberidx2.i.i10.i673, align 4
  %memberidx3.i.i.i674 = getelementptr inbounds %FloRange, ptr %1000, i64 0, i32 3
  store i64 %1006, ptr %memberidx3.i.i.i674, align 4
  store i64 40, ptr %999, align 4
  %memberidx1.i11.i675 = getelementptr inbounds %Token, ptr %999, i64 0, i32 1
  store ptr %1000, ptr %memberidx1.i11.i675, align 8
  br label %common.ret

ifend.i684:                                       ; preds = %if.entry75, %if.entry.i.i652
  %1007 = tail call ptr @malloc(i32 16)
  %1008 = tail call ptr @malloc(i32 32)
  %1009 = load i64, ptr %memberidx.i.i648, align 4
  %1010 = add nsw i64 %1009, 1
  %memberidx2.i14.i678 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1011 = load i64, ptr %memberidx2.i14.i678, align 4
  %1012 = add i64 %1011, -1
  %memberidx3.i15.i679 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1013 = load i64, ptr %memberidx3.i15.i679, align 4
  store i64 %1009, ptr %1008, align 4
  %memberidx1.i.i16.i680 = getelementptr inbounds %FloRange, ptr %1008, i64 0, i32 1
  store i64 %1010, ptr %memberidx1.i.i16.i680, align 4
  %memberidx2.i.i17.i681 = getelementptr inbounds %FloRange, ptr %1008, i64 0, i32 2
  store i64 %1012, ptr %memberidx2.i.i17.i681, align 4
  %memberidx3.i.i18.i682 = getelementptr inbounds %FloRange, ptr %1008, i64 0, i32 3
  store i64 %1013, ptr %memberidx3.i.i18.i682, align 4
  store i64 47, ptr %1007, align 4
  %memberidx1.i12.i683 = getelementptr inbounds %Token, ptr %1007, i64 0, i32 1
  store ptr %1008, ptr %memberidx1.i12.i683, align 8
  br label %common.ret

if.entry78:                                       ; preds = %ifend11
  %memberidx.i.i685 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1014 = load i64, ptr %memberidx.i.i685, align 4
  %1015 = add nsw i64 %1014, 1
  %memberidx1.i.i686 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1016 = load ptr, ptr %memberidx1.i.i686, align 8
  %memberidx2.i.i687 = getelementptr inbounds %string, ptr %1016, i64 0, i32 2
  %1017 = load i64, ptr %memberidx2.i.i687, align 4
  %1018 = icmp slt i64 %1015, %1017
  br i1 %1018, label %if.entry.i.i689, label %else.i717

if.entry.i.i689:                                  ; preds = %if.entry78
  %1019 = load ptr, ptr %1016, align 8
  %memberidx4.i.i688 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1019, i64 0, i32 2
  %1020 = load ptr, ptr %memberidx4.i.i688, align 8
  %1021 = tail call i8 %1020(ptr nonnull %1016, i64 %1015)
  %phi.cmp982 = icmp eq i8 %1021, 61
  %1022 = load i64, ptr %memberidx.i.i685, align 4
  %1023 = load ptr, ptr %memberidx1.i.i686, align 8
  %memberidx2.i.i.i695 = getelementptr inbounds %string, ptr %1023, i64 0, i32 2
  %1024 = load i64, ptr %memberidx2.i.i.i695, align 4
  br i1 %phi.cmp982, label %if.entry.i696, label %if.entry.i.i689.else.i717_crit_edge

if.entry.i.i689.else.i717_crit_edge:              ; preds = %if.entry.i.i689
  %.pre1145 = add nsw i64 %1022, 1
  br label %else.i717

if.entry.i696:                                    ; preds = %if.entry.i.i689
  %.not987 = icmp slt i64 %1022, %1024
  br i1 %.not987, label %ifend.i.i700, label %Lexer_advance.exit.i713

ifend.i.i700:                                     ; preds = %if.entry.i696
  %1025 = load ptr, ptr %1023, align 8
  %memberidx2.i17.i698 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1025, i64 0, i32 2
  %1026 = load ptr, ptr %memberidx2.i17.i698, align 8
  %1027 = add nsw i64 %1022, 1
  store i64 %1027, ptr %memberidx.i.i685, align 4
  %1028 = tail call i8 %1026(ptr nonnull %1023, i64 %1027)
  store i8 %1028, ptr %0, align 1
  %1029 = icmp eq i8 %1028, 10
  %memberidx9.i.i701 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1029, label %if.entry6.i.i703, label %Lexer_advance.exit.i713.sink.split

if.entry6.i.i703:                                 ; preds = %ifend.i.i700
  store i64 0, ptr %memberidx9.i.i701, align 4
  %memberidx10.i.i702 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i713.sink.split

Lexer_advance.exit.i713.sink.split:               ; preds = %ifend.i.i700, %if.entry6.i.i703
  %memberidx9.i.i701.sink1205 = phi ptr [ %memberidx10.i.i702, %if.entry6.i.i703 ], [ %memberidx9.i.i701, %ifend.i.i700 ]
  %1030 = load i64, ptr %memberidx9.i.i701.sink1205, align 4
  %1031 = add nsw i64 %1030, 1
  store i64 %1031, ptr %memberidx9.i.i701.sink1205, align 4
  br label %Lexer_advance.exit.i713

Lexer_advance.exit.i713:                          ; preds = %Lexer_advance.exit.i713.sink.split, %if.entry.i696
  %1032 = tail call ptr @malloc(i32 16)
  %1033 = tail call ptr @malloc(i32 32)
  %1034 = load i64, ptr %memberidx.i.i685, align 4
  %1035 = add nsw i64 %1034, -1
  %1036 = add nsw i64 %1034, 1
  %memberidx2.i19.i707 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1037 = load i64, ptr %memberidx2.i19.i707, align 4
  %1038 = add i64 %1037, -2
  %memberidx3.i20.i708 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1039 = load i64, ptr %memberidx3.i20.i708, align 4
  store i64 %1035, ptr %1033, align 4
  %memberidx1.i.i21.i709 = getelementptr inbounds %FloRange, ptr %1033, i64 0, i32 1
  store i64 %1036, ptr %memberidx1.i.i21.i709, align 4
  %memberidx2.i.i22.i710 = getelementptr inbounds %FloRange, ptr %1033, i64 0, i32 2
  store i64 %1038, ptr %memberidx2.i.i22.i710, align 4
  %memberidx3.i.i.i711 = getelementptr inbounds %FloRange, ptr %1033, i64 0, i32 3
  store i64 %1039, ptr %memberidx3.i.i.i711, align 4
  store i64 44, ptr %1032, align 4
  %memberidx1.i23.i712 = getelementptr inbounds %Token, ptr %1032, i64 0, i32 1
  store ptr %1033, ptr %memberidx1.i23.i712, align 8
  br label %common.ret

else.i717:                                        ; preds = %if.entry.i.i689.else.i717_crit_edge, %if.entry78
  %.pre-phi1146 = phi i64 [ %.pre1145, %if.entry.i.i689.else.i717_crit_edge ], [ %1015, %if.entry78 ]
  %1040 = phi i64 [ %1024, %if.entry.i.i689.else.i717_crit_edge ], [ %1017, %if.entry78 ]
  %1041 = phi ptr [ %1023, %if.entry.i.i689.else.i717_crit_edge ], [ %1016, %if.entry78 ]
  %1042 = icmp slt i64 %.pre-phi1146, %1040
  br i1 %1042, label %if.entry.i36.i719, label %ifend3.i750

if.entry.i36.i719:                                ; preds = %else.i717
  %1043 = load ptr, ptr %1041, align 8
  %memberidx4.i35.i718 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1043, i64 0, i32 2
  %1044 = load ptr, ptr %memberidx4.i35.i718, align 8
  %1045 = tail call i8 %1044(ptr nonnull %1041, i64 %.pre-phi1146)
  %phi.cmp983 = icmp eq i8 %1045, 62
  br i1 %phi.cmp983, label %if.entry1.i725, label %ifend3.i750

if.entry1.i725:                                   ; preds = %if.entry.i36.i719
  %1046 = load i64, ptr %memberidx.i.i685, align 4
  %1047 = load ptr, ptr %memberidx1.i.i686, align 8
  %memberidx2.i.i40.i724 = getelementptr inbounds %string, ptr %1047, i64 0, i32 2
  %1048 = load i64, ptr %memberidx2.i.i40.i724, align 4
  %.not984 = icmp slt i64 %1046, %1048
  br i1 %.not984, label %ifend.i44.i729, label %Lexer_advance.exit50.i738

ifend.i44.i729:                                   ; preds = %if.entry1.i725
  %1049 = load ptr, ptr %1047, align 8
  %memberidx2.i42.i727 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1049, i64 0, i32 2
  %1050 = load ptr, ptr %memberidx2.i42.i727, align 8
  %1051 = add nsw i64 %1046, 1
  store i64 %1051, ptr %memberidx.i.i685, align 4
  %1052 = tail call i8 %1050(ptr nonnull %1047, i64 %1051)
  store i8 %1052, ptr %0, align 1
  %1053 = icmp eq i8 %1052, 10
  %memberidx9.i45.i730 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1053, label %if.entry6.i47.i732, label %Lexer_advance.exit50.i738.sink.split

if.entry6.i47.i732:                               ; preds = %ifend.i44.i729
  store i64 0, ptr %memberidx9.i45.i730, align 4
  %memberidx10.i46.i731 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit50.i738.sink.split

Lexer_advance.exit50.i738.sink.split:             ; preds = %ifend.i44.i729, %if.entry6.i47.i732
  %memberidx9.i45.i730.sink1207 = phi ptr [ %memberidx10.i46.i731, %if.entry6.i47.i732 ], [ %memberidx9.i45.i730, %ifend.i44.i729 ]
  %1054 = load i64, ptr %memberidx9.i45.i730.sink1207, align 4
  %1055 = add nsw i64 %1054, 1
  store i64 %1055, ptr %memberidx9.i45.i730.sink1207, align 4
  br label %Lexer_advance.exit50.i738

Lexer_advance.exit50.i738:                        ; preds = %Lexer_advance.exit50.i738.sink.split, %if.entry1.i725
  %1056 = load i64, ptr %memberidx.i.i685, align 4
  %1057 = add nsw i64 %1056, 1
  %1058 = load ptr, ptr %memberidx1.i.i686, align 8
  %memberidx2.i53.i737 = getelementptr inbounds %string, ptr %1058, i64 0, i32 2
  %1059 = load i64, ptr %memberidx2.i53.i737, align 4
  %1060 = icmp slt i64 %1057, %1059
  br i1 %1060, label %if.entry.i56.i740, label %ifend6.i779

if.entry.i56.i740:                                ; preds = %Lexer_advance.exit50.i738
  %1061 = load ptr, ptr %1058, align 8
  %memberidx4.i55.i739 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1061, i64 0, i32 2
  %1062 = load ptr, ptr %memberidx4.i55.i739, align 8
  %1063 = tail call i8 %1062(ptr nonnull %1058, i64 %1057)
  %phi.cmp985 = icmp eq i8 %1063, 61
  br i1 %phi.cmp985, label %if.entry4.i754, label %ifend6.i779

ifend3.i750:                                      ; preds = %else.i717, %if.entry.i36.i719
  %1064 = tail call ptr @malloc(i32 16)
  %1065 = tail call ptr @malloc(i32 32)
  %1066 = load i64, ptr %memberidx.i.i685, align 4
  %1067 = add nsw i64 %1066, 1
  %memberidx2.i59.i744 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1068 = load i64, ptr %memberidx2.i59.i744, align 4
  %1069 = add i64 %1068, -1
  %memberidx3.i60.i745 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1070 = load i64, ptr %memberidx3.i60.i745, align 4
  store i64 %1066, ptr %1065, align 4
  %memberidx1.i.i61.i746 = getelementptr inbounds %FloRange, ptr %1065, i64 0, i32 1
  store i64 %1067, ptr %memberidx1.i.i61.i746, align 4
  %memberidx2.i.i62.i747 = getelementptr inbounds %FloRange, ptr %1065, i64 0, i32 2
  store i64 %1069, ptr %memberidx2.i.i62.i747, align 4
  %memberidx3.i.i63.i748 = getelementptr inbounds %FloRange, ptr %1065, i64 0, i32 3
  store i64 %1070, ptr %memberidx3.i.i63.i748, align 4
  store i64 41, ptr %1064, align 4
  %memberidx1.i64.i749 = getelementptr inbounds %Token, ptr %1064, i64 0, i32 1
  store ptr %1065, ptr %memberidx1.i64.i749, align 8
  br label %common.ret

if.entry4.i754:                                   ; preds = %if.entry.i56.i740
  %1071 = load i64, ptr %memberidx.i.i685, align 4
  %1072 = load ptr, ptr %memberidx1.i.i686, align 8
  %memberidx2.i.i74.i753 = getelementptr inbounds %string, ptr %1072, i64 0, i32 2
  %1073 = load i64, ptr %memberidx2.i.i74.i753, align 4
  %.not986 = icmp slt i64 %1071, %1073
  br i1 %.not986, label %ifend.i78.i758, label %Lexer_advance.exit84.i771

ifend.i78.i758:                                   ; preds = %if.entry4.i754
  %1074 = load ptr, ptr %1072, align 8
  %memberidx2.i76.i756 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1074, i64 0, i32 2
  %1075 = load ptr, ptr %memberidx2.i76.i756, align 8
  %1076 = add nsw i64 %1071, 1
  store i64 %1076, ptr %memberidx.i.i685, align 4
  %1077 = tail call i8 %1075(ptr nonnull %1072, i64 %1076)
  store i8 %1077, ptr %0, align 1
  %1078 = icmp eq i8 %1077, 10
  %memberidx9.i79.i759 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1078, label %if.entry6.i81.i761, label %Lexer_advance.exit84.i771.sink.split

if.entry6.i81.i761:                               ; preds = %ifend.i78.i758
  store i64 0, ptr %memberidx9.i79.i759, align 4
  %memberidx10.i80.i760 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit84.i771.sink.split

Lexer_advance.exit84.i771.sink.split:             ; preds = %ifend.i78.i758, %if.entry6.i81.i761
  %memberidx9.i79.i759.sink1209 = phi ptr [ %memberidx10.i80.i760, %if.entry6.i81.i761 ], [ %memberidx9.i79.i759, %ifend.i78.i758 ]
  %1079 = load i64, ptr %memberidx9.i79.i759.sink1209, align 4
  %1080 = add nsw i64 %1079, 1
  store i64 %1080, ptr %memberidx9.i79.i759.sink1209, align 4
  br label %Lexer_advance.exit84.i771

Lexer_advance.exit84.i771:                        ; preds = %Lexer_advance.exit84.i771.sink.split, %if.entry4.i754
  %1081 = tail call ptr @malloc(i32 16)
  %1082 = tail call ptr @malloc(i32 32)
  %1083 = load i64, ptr %memberidx.i.i685, align 4
  %1084 = add nsw i64 %1083, -2
  %1085 = add nsw i64 %1083, 1
  %memberidx2.i67.i765 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1086 = load i64, ptr %memberidx2.i67.i765, align 4
  %1087 = add i64 %1086, -3
  %memberidx3.i68.i766 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1088 = load i64, ptr %memberidx3.i68.i766, align 4
  store i64 %1084, ptr %1082, align 4
  %memberidx1.i.i69.i767 = getelementptr inbounds %FloRange, ptr %1082, i64 0, i32 1
  store i64 %1085, ptr %memberidx1.i.i69.i767, align 4
  %memberidx2.i.i70.i768 = getelementptr inbounds %FloRange, ptr %1082, i64 0, i32 2
  store i64 %1087, ptr %memberidx2.i.i70.i768, align 4
  %memberidx3.i.i71.i769 = getelementptr inbounds %FloRange, ptr %1082, i64 0, i32 3
  store i64 %1088, ptr %memberidx3.i.i71.i769, align 4
  store i64 21, ptr %1081, align 4
  %memberidx1.i65.i770 = getelementptr inbounds %Token, ptr %1081, i64 0, i32 1
  store ptr %1082, ptr %memberidx1.i65.i770, align 8
  br label %common.ret

ifend6.i779:                                      ; preds = %Lexer_advance.exit50.i738, %if.entry.i56.i740
  %1089 = tail call ptr @malloc(i32 16)
  %1090 = tail call ptr @malloc(i32 32)
  %1091 = load i64, ptr %memberidx.i.i685, align 4
  %1092 = add nsw i64 %1091, -1
  %1093 = add nsw i64 %1091, 1
  %memberidx2.i26.i773 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1094 = load i64, ptr %memberidx2.i26.i773, align 4
  %1095 = add i64 %1094, -2
  %memberidx3.i27.i774 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1096 = load i64, ptr %memberidx3.i27.i774, align 4
  store i64 %1092, ptr %1090, align 4
  %memberidx1.i.i28.i775 = getelementptr inbounds %FloRange, ptr %1090, i64 0, i32 1
  store i64 %1093, ptr %memberidx1.i.i28.i775, align 4
  %memberidx2.i.i29.i776 = getelementptr inbounds %FloRange, ptr %1090, i64 0, i32 2
  store i64 %1095, ptr %memberidx2.i.i29.i776, align 4
  %memberidx3.i.i30.i777 = getelementptr inbounds %FloRange, ptr %1090, i64 0, i32 3
  store i64 %1096, ptr %memberidx3.i.i30.i777, align 4
  store i64 49, ptr %1089, align 4
  %memberidx1.i24.i778 = getelementptr inbounds %Token, ptr %1089, i64 0, i32 1
  store ptr %1090, ptr %memberidx1.i24.i778, align 8
  br label %common.ret

if.entry81:                                       ; preds = %ifend11
  %memberidx.i.i780 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1097 = load i64, ptr %memberidx.i.i780, align 4
  %1098 = add nsw i64 %1097, 1
  %memberidx1.i.i781 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1099 = load ptr, ptr %memberidx1.i.i781, align 8
  %memberidx2.i.i782 = getelementptr inbounds %string, ptr %1099, i64 0, i32 2
  %1100 = load i64, ptr %memberidx2.i.i782, align 4
  %1101 = icmp slt i64 %1098, %1100
  br i1 %1101, label %if.entry.i.i784, label %else.i812

if.entry.i.i784:                                  ; preds = %if.entry81
  %1102 = load ptr, ptr %1099, align 8
  %memberidx4.i.i783 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1102, i64 0, i32 2
  %1103 = load ptr, ptr %memberidx4.i.i783, align 8
  %1104 = tail call i8 %1103(ptr nonnull %1099, i64 %1098)
  %phi.cmp976 = icmp eq i8 %1104, 61
  %1105 = load i64, ptr %memberidx.i.i780, align 4
  %1106 = load ptr, ptr %memberidx1.i.i781, align 8
  %memberidx2.i.i.i790 = getelementptr inbounds %string, ptr %1106, i64 0, i32 2
  %1107 = load i64, ptr %memberidx2.i.i.i790, align 4
  br i1 %phi.cmp976, label %if.entry.i791, label %if.entry.i.i784.else.i812_crit_edge

if.entry.i.i784.else.i812_crit_edge:              ; preds = %if.entry.i.i784
  %.pre1147 = add nsw i64 %1105, 1
  br label %else.i812

if.entry.i791:                                    ; preds = %if.entry.i.i784
  %.not981 = icmp slt i64 %1105, %1107
  br i1 %.not981, label %ifend.i.i795, label %Lexer_advance.exit.i808

ifend.i.i795:                                     ; preds = %if.entry.i791
  %1108 = load ptr, ptr %1106, align 8
  %memberidx2.i17.i793 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1108, i64 0, i32 2
  %1109 = load ptr, ptr %memberidx2.i17.i793, align 8
  %1110 = add nsw i64 %1105, 1
  store i64 %1110, ptr %memberidx.i.i780, align 4
  %1111 = tail call i8 %1109(ptr nonnull %1106, i64 %1110)
  store i8 %1111, ptr %0, align 1
  %1112 = icmp eq i8 %1111, 10
  %memberidx9.i.i796 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1112, label %if.entry6.i.i798, label %Lexer_advance.exit.i808.sink.split

if.entry6.i.i798:                                 ; preds = %ifend.i.i795
  store i64 0, ptr %memberidx9.i.i796, align 4
  %memberidx10.i.i797 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i808.sink.split

Lexer_advance.exit.i808.sink.split:               ; preds = %ifend.i.i795, %if.entry6.i.i798
  %memberidx9.i.i796.sink1211 = phi ptr [ %memberidx10.i.i797, %if.entry6.i.i798 ], [ %memberidx9.i.i796, %ifend.i.i795 ]
  %1113 = load i64, ptr %memberidx9.i.i796.sink1211, align 4
  %1114 = add nsw i64 %1113, 1
  store i64 %1114, ptr %memberidx9.i.i796.sink1211, align 4
  br label %Lexer_advance.exit.i808

Lexer_advance.exit.i808:                          ; preds = %Lexer_advance.exit.i808.sink.split, %if.entry.i791
  %1115 = tail call ptr @malloc(i32 16)
  %1116 = tail call ptr @malloc(i32 32)
  %1117 = load i64, ptr %memberidx.i.i780, align 4
  %1118 = add nsw i64 %1117, -1
  %1119 = add nsw i64 %1117, 1
  %memberidx2.i19.i802 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1120 = load i64, ptr %memberidx2.i19.i802, align 4
  %1121 = add i64 %1120, -2
  %memberidx3.i20.i803 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1122 = load i64, ptr %memberidx3.i20.i803, align 4
  store i64 %1118, ptr %1116, align 4
  %memberidx1.i.i21.i804 = getelementptr inbounds %FloRange, ptr %1116, i64 0, i32 1
  store i64 %1119, ptr %memberidx1.i.i21.i804, align 4
  %memberidx2.i.i22.i805 = getelementptr inbounds %FloRange, ptr %1116, i64 0, i32 2
  store i64 %1121, ptr %memberidx2.i.i22.i805, align 4
  %memberidx3.i.i.i806 = getelementptr inbounds %FloRange, ptr %1116, i64 0, i32 3
  store i64 %1122, ptr %memberidx3.i.i.i806, align 4
  store i64 43, ptr %1115, align 4
  %memberidx1.i23.i807 = getelementptr inbounds %Token, ptr %1115, i64 0, i32 1
  store ptr %1116, ptr %memberidx1.i23.i807, align 8
  br label %common.ret

else.i812:                                        ; preds = %if.entry.i.i784.else.i812_crit_edge, %if.entry81
  %.pre-phi1148 = phi i64 [ %.pre1147, %if.entry.i.i784.else.i812_crit_edge ], [ %1098, %if.entry81 ]
  %1123 = phi i64 [ %1107, %if.entry.i.i784.else.i812_crit_edge ], [ %1100, %if.entry81 ]
  %1124 = phi ptr [ %1106, %if.entry.i.i784.else.i812_crit_edge ], [ %1099, %if.entry81 ]
  %1125 = icmp slt i64 %.pre-phi1148, %1123
  br i1 %1125, label %if.entry.i36.i814, label %ifend3.i845

if.entry.i36.i814:                                ; preds = %else.i812
  %1126 = load ptr, ptr %1124, align 8
  %memberidx4.i35.i813 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1126, i64 0, i32 2
  %1127 = load ptr, ptr %memberidx4.i35.i813, align 8
  %1128 = tail call i8 %1127(ptr nonnull %1124, i64 %.pre-phi1148)
  %phi.cmp977 = icmp eq i8 %1128, 60
  br i1 %phi.cmp977, label %if.entry1.i820, label %ifend3.i845

if.entry1.i820:                                   ; preds = %if.entry.i36.i814
  %1129 = load i64, ptr %memberidx.i.i780, align 4
  %1130 = load ptr, ptr %memberidx1.i.i781, align 8
  %memberidx2.i.i40.i819 = getelementptr inbounds %string, ptr %1130, i64 0, i32 2
  %1131 = load i64, ptr %memberidx2.i.i40.i819, align 4
  %.not978 = icmp slt i64 %1129, %1131
  br i1 %.not978, label %ifend.i44.i824, label %Lexer_advance.exit50.i833

ifend.i44.i824:                                   ; preds = %if.entry1.i820
  %1132 = load ptr, ptr %1130, align 8
  %memberidx2.i42.i822 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1132, i64 0, i32 2
  %1133 = load ptr, ptr %memberidx2.i42.i822, align 8
  %1134 = add nsw i64 %1129, 1
  store i64 %1134, ptr %memberidx.i.i780, align 4
  %1135 = tail call i8 %1133(ptr nonnull %1130, i64 %1134)
  store i8 %1135, ptr %0, align 1
  %1136 = icmp eq i8 %1135, 10
  %memberidx9.i45.i825 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1136, label %if.entry6.i47.i827, label %Lexer_advance.exit50.i833.sink.split

if.entry6.i47.i827:                               ; preds = %ifend.i44.i824
  store i64 0, ptr %memberidx9.i45.i825, align 4
  %memberidx10.i46.i826 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit50.i833.sink.split

Lexer_advance.exit50.i833.sink.split:             ; preds = %ifend.i44.i824, %if.entry6.i47.i827
  %memberidx9.i45.i825.sink1213 = phi ptr [ %memberidx10.i46.i826, %if.entry6.i47.i827 ], [ %memberidx9.i45.i825, %ifend.i44.i824 ]
  %1137 = load i64, ptr %memberidx9.i45.i825.sink1213, align 4
  %1138 = add nsw i64 %1137, 1
  store i64 %1138, ptr %memberidx9.i45.i825.sink1213, align 4
  br label %Lexer_advance.exit50.i833

Lexer_advance.exit50.i833:                        ; preds = %Lexer_advance.exit50.i833.sink.split, %if.entry1.i820
  %1139 = load i64, ptr %memberidx.i.i780, align 4
  %1140 = add nsw i64 %1139, 1
  %1141 = load ptr, ptr %memberidx1.i.i781, align 8
  %memberidx2.i53.i832 = getelementptr inbounds %string, ptr %1141, i64 0, i32 2
  %1142 = load i64, ptr %memberidx2.i53.i832, align 4
  %1143 = icmp slt i64 %1140, %1142
  br i1 %1143, label %if.entry.i56.i835, label %ifend6.i874

if.entry.i56.i835:                                ; preds = %Lexer_advance.exit50.i833
  %1144 = load ptr, ptr %1141, align 8
  %memberidx4.i55.i834 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1144, i64 0, i32 2
  %1145 = load ptr, ptr %memberidx4.i55.i834, align 8
  %1146 = tail call i8 %1145(ptr nonnull %1141, i64 %1140)
  %phi.cmp979 = icmp eq i8 %1146, 61
  br i1 %phi.cmp979, label %if.entry4.i849, label %ifend6.i874

ifend3.i845:                                      ; preds = %else.i812, %if.entry.i36.i814
  %1147 = tail call ptr @malloc(i32 16)
  %1148 = tail call ptr @malloc(i32 32)
  %1149 = load i64, ptr %memberidx.i.i780, align 4
  %1150 = add nsw i64 %1149, 1
  %memberidx2.i59.i839 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1151 = load i64, ptr %memberidx2.i59.i839, align 4
  %1152 = add i64 %1151, -1
  %memberidx3.i60.i840 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1153 = load i64, ptr %memberidx3.i60.i840, align 4
  store i64 %1149, ptr %1148, align 4
  %memberidx1.i.i61.i841 = getelementptr inbounds %FloRange, ptr %1148, i64 0, i32 1
  store i64 %1150, ptr %memberidx1.i.i61.i841, align 4
  %memberidx2.i.i62.i842 = getelementptr inbounds %FloRange, ptr %1148, i64 0, i32 2
  store i64 %1152, ptr %memberidx2.i.i62.i842, align 4
  %memberidx3.i.i63.i843 = getelementptr inbounds %FloRange, ptr %1148, i64 0, i32 3
  store i64 %1153, ptr %memberidx3.i.i63.i843, align 4
  store i64 42, ptr %1147, align 4
  %memberidx1.i64.i844 = getelementptr inbounds %Token, ptr %1147, i64 0, i32 1
  store ptr %1148, ptr %memberidx1.i64.i844, align 8
  br label %common.ret

if.entry4.i849:                                   ; preds = %if.entry.i56.i835
  %1154 = load i64, ptr %memberidx.i.i780, align 4
  %1155 = load ptr, ptr %memberidx1.i.i781, align 8
  %memberidx2.i.i74.i848 = getelementptr inbounds %string, ptr %1155, i64 0, i32 2
  %1156 = load i64, ptr %memberidx2.i.i74.i848, align 4
  %.not980 = icmp slt i64 %1154, %1156
  br i1 %.not980, label %ifend.i78.i853, label %Lexer_advance.exit84.i866

ifend.i78.i853:                                   ; preds = %if.entry4.i849
  %1157 = load ptr, ptr %1155, align 8
  %memberidx2.i76.i851 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1157, i64 0, i32 2
  %1158 = load ptr, ptr %memberidx2.i76.i851, align 8
  %1159 = add nsw i64 %1154, 1
  store i64 %1159, ptr %memberidx.i.i780, align 4
  %1160 = tail call i8 %1158(ptr nonnull %1155, i64 %1159)
  store i8 %1160, ptr %0, align 1
  %1161 = icmp eq i8 %1160, 10
  %memberidx9.i79.i854 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1161, label %if.entry6.i81.i856, label %Lexer_advance.exit84.i866.sink.split

if.entry6.i81.i856:                               ; preds = %ifend.i78.i853
  store i64 0, ptr %memberidx9.i79.i854, align 4
  %memberidx10.i80.i855 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit84.i866.sink.split

Lexer_advance.exit84.i866.sink.split:             ; preds = %ifend.i78.i853, %if.entry6.i81.i856
  %memberidx9.i79.i854.sink1215 = phi ptr [ %memberidx10.i80.i855, %if.entry6.i81.i856 ], [ %memberidx9.i79.i854, %ifend.i78.i853 ]
  %1162 = load i64, ptr %memberidx9.i79.i854.sink1215, align 4
  %1163 = add nsw i64 %1162, 1
  store i64 %1163, ptr %memberidx9.i79.i854.sink1215, align 4
  br label %Lexer_advance.exit84.i866

Lexer_advance.exit84.i866:                        ; preds = %Lexer_advance.exit84.i866.sink.split, %if.entry4.i849
  %1164 = tail call ptr @malloc(i32 16)
  %1165 = tail call ptr @malloc(i32 32)
  %1166 = load i64, ptr %memberidx.i.i780, align 4
  %1167 = add nsw i64 %1166, -2
  %1168 = add nsw i64 %1166, 1
  %memberidx2.i67.i860 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1169 = load i64, ptr %memberidx2.i67.i860, align 4
  %1170 = add i64 %1169, -3
  %memberidx3.i68.i861 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1171 = load i64, ptr %memberidx3.i68.i861, align 4
  store i64 %1167, ptr %1165, align 4
  %memberidx1.i.i69.i862 = getelementptr inbounds %FloRange, ptr %1165, i64 0, i32 1
  store i64 %1168, ptr %memberidx1.i.i69.i862, align 4
  %memberidx2.i.i70.i863 = getelementptr inbounds %FloRange, ptr %1165, i64 0, i32 2
  store i64 %1170, ptr %memberidx2.i.i70.i863, align 4
  %memberidx3.i.i71.i864 = getelementptr inbounds %FloRange, ptr %1165, i64 0, i32 3
  store i64 %1171, ptr %memberidx3.i.i71.i864, align 4
  store i64 22, ptr %1164, align 4
  %memberidx1.i65.i865 = getelementptr inbounds %Token, ptr %1164, i64 0, i32 1
  store ptr %1165, ptr %memberidx1.i65.i865, align 8
  br label %common.ret

ifend6.i874:                                      ; preds = %Lexer_advance.exit50.i833, %if.entry.i56.i835
  %1172 = tail call ptr @malloc(i32 16)
  %1173 = tail call ptr @malloc(i32 32)
  %1174 = load i64, ptr %memberidx.i.i780, align 4
  %1175 = add nsw i64 %1174, -1
  %1176 = add nsw i64 %1174, 1
  %memberidx2.i26.i868 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1177 = load i64, ptr %memberidx2.i26.i868, align 4
  %1178 = add i64 %1177, -2
  %memberidx3.i27.i869 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1179 = load i64, ptr %memberidx3.i27.i869, align 4
  store i64 %1175, ptr %1173, align 4
  %memberidx1.i.i28.i870 = getelementptr inbounds %FloRange, ptr %1173, i64 0, i32 1
  store i64 %1176, ptr %memberidx1.i.i28.i870, align 4
  %memberidx2.i.i29.i871 = getelementptr inbounds %FloRange, ptr %1173, i64 0, i32 2
  store i64 %1178, ptr %memberidx2.i.i29.i871, align 4
  %memberidx3.i.i30.i872 = getelementptr inbounds %FloRange, ptr %1173, i64 0, i32 3
  store i64 %1179, ptr %memberidx3.i.i30.i872, align 4
  store i64 48, ptr %1172, align 4
  %memberidx1.i24.i873 = getelementptr inbounds %Token, ptr %1172, i64 0, i32 1
  store ptr %1173, ptr %memberidx1.i24.i873, align 8
  br label %common.ret

if.entry84:                                       ; preds = %ifend11
  %memberidx.i.i875 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1180 = load i64, ptr %memberidx.i.i875, align 4
  %1181 = add nsw i64 %1180, 1
  %memberidx1.i.i876 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1182 = load ptr, ptr %memberidx1.i.i876, align 8
  %memberidx2.i.i877 = getelementptr inbounds %string, ptr %1182, i64 0, i32 2
  %1183 = load i64, ptr %memberidx2.i.i877, align 4
  %1184 = icmp slt i64 %1181, %1183
  br i1 %1184, label %if.entry.i.i879, label %Lexer_dot_token.exit

if.entry.i.i879:                                  ; preds = %if.entry84
  %1185 = load ptr, ptr %1182, align 8
  %memberidx4.i.i878 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1185, i64 0, i32 2
  %1186 = load ptr, ptr %memberidx4.i.i878, align 8
  %1187 = tail call i8 %1186(ptr nonnull %1182, i64 %1181)
  %phi.cmp = icmp eq i8 %1187, 46
  br i1 %phi.cmp, label %if.entry.i885, label %Lexer_dot_token.exit

if.entry.i885:                                    ; preds = %if.entry.i.i879
  %1188 = load i64, ptr %memberidx.i.i875, align 4
  %1189 = load ptr, ptr %memberidx1.i.i876, align 8
  %memberidx2.i.i.i884 = getelementptr inbounds %string, ptr %1189, i64 0, i32 2
  %1190 = load i64, ptr %memberidx2.i.i.i884, align 4
  %.not = icmp slt i64 %1188, %1190
  br i1 %.not, label %ifend.i.i889, label %Lexer_advance.exit.i898

ifend.i.i889:                                     ; preds = %if.entry.i885
  %1191 = load ptr, ptr %1189, align 8
  %memberidx2.i11.i887 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1191, i64 0, i32 2
  %1192 = load ptr, ptr %memberidx2.i11.i887, align 8
  %1193 = add nsw i64 %1188, 1
  store i64 %1193, ptr %memberidx.i.i875, align 4
  %1194 = tail call i8 %1192(ptr nonnull %1189, i64 %1193)
  store i8 %1194, ptr %0, align 1
  %1195 = icmp eq i8 %1194, 10
  %memberidx9.i.i890 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1195, label %if.entry6.i.i892, label %Lexer_advance.exit.i898.sink.split

if.entry6.i.i892:                                 ; preds = %ifend.i.i889
  store i64 0, ptr %memberidx9.i.i890, align 4
  %memberidx10.i.i891 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i898.sink.split

Lexer_advance.exit.i898.sink.split:               ; preds = %ifend.i.i889, %if.entry6.i.i892
  %memberidx9.i.i890.sink1217 = phi ptr [ %memberidx10.i.i891, %if.entry6.i.i892 ], [ %memberidx9.i.i890, %ifend.i.i889 ]
  %1196 = load i64, ptr %memberidx9.i.i890.sink1217, align 4
  %1197 = add nsw i64 %1196, 1
  store i64 %1197, ptr %memberidx9.i.i890.sink1217, align 4
  br label %Lexer_advance.exit.i898

Lexer_advance.exit.i898:                          ; preds = %Lexer_advance.exit.i898.sink.split, %if.entry.i885
  %1198 = load i64, ptr %memberidx.i.i875, align 4
  %1199 = add nsw i64 %1198, 1
  %1200 = load ptr, ptr %memberidx1.i.i876, align 8
  %memberidx2.i14.i897 = getelementptr inbounds %string, ptr %1200, i64 0, i32 2
  %1201 = load i64, ptr %memberidx2.i14.i897, align 4
  %1202 = icmp slt i64 %1199, %1201
  br i1 %1202, label %if.entry.i17.i, label %Lexer_dot_token.exit

if.entry.i17.i:                                   ; preds = %Lexer_advance.exit.i898
  %1203 = load ptr, ptr %1200, align 8
  %memberidx4.i16.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1203, i64 0, i32 2
  %1204 = load ptr, ptr %memberidx4.i16.i, align 8
  %1205 = tail call i8 %1204(ptr nonnull %1200, i64 %1199)
  %phi.cmp974 = icmp eq i8 %1205, 46
  br i1 %phi.cmp974, label %if.entry1.i908, label %Lexer_dot_token.exit

if.entry1.i908:                                   ; preds = %if.entry.i17.i
  %1206 = load i64, ptr %memberidx.i.i875, align 4
  %1207 = load ptr, ptr %memberidx1.i.i876, align 8
  %memberidx2.i.i27.i = getelementptr inbounds %string, ptr %1207, i64 0, i32 2
  %1208 = load i64, ptr %memberidx2.i.i27.i, align 4
  %.not975 = icmp slt i64 %1206, %1208
  br i1 %.not975, label %ifend.i31.i, label %Lexer_dot_token.exit

ifend.i31.i:                                      ; preds = %if.entry1.i908
  %1209 = load ptr, ptr %1207, align 8
  %memberidx2.i29.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1209, i64 0, i32 2
  %1210 = load ptr, ptr %memberidx2.i29.i, align 8
  %1211 = add nsw i64 %1206, 1
  store i64 %1211, ptr %memberidx.i.i875, align 4
  %1212 = tail call i8 %1210(ptr nonnull %1207, i64 %1211)
  store i8 %1212, ptr %0, align 1
  %1213 = icmp eq i8 %1212, 10
  %memberidx9.i32.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br i1 %1213, label %if.entry6.i34.i, label %Lexer_dot_token.exit.sink.split

if.entry6.i34.i:                                  ; preds = %ifend.i31.i
  store i64 0, ptr %memberidx9.i32.i, align 4
  %memberidx10.i33.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_dot_token.exit.sink.split

Lexer_dot_token.exit.sink.split:                  ; preds = %ifend.i31.i, %if.entry6.i34.i
  %memberidx10.i33.i.sink1219 = phi ptr [ %memberidx10.i33.i, %if.entry6.i34.i ], [ %memberidx9.i32.i, %ifend.i31.i ]
  %1214 = load i64, ptr %memberidx10.i33.i.sink1219, align 4
  %1215 = add nsw i64 %1214, 1
  store i64 %1215, ptr %memberidx10.i33.i.sink1219, align 4
  br label %Lexer_dot_token.exit

Lexer_dot_token.exit:                             ; preds = %Lexer_dot_token.exit.sink.split, %Lexer_advance.exit.i898, %if.entry84, %if.entry1.i908, %if.entry.i.i879, %if.entry.i17.i
  %length.0.i899 = phi i64 [ 2, %if.entry.i17.i ], [ 1, %if.entry.i.i879 ], [ 3, %if.entry1.i908 ], [ 1, %if.entry84 ], [ 2, %Lexer_advance.exit.i898 ], [ 3, %Lexer_dot_token.exit.sink.split ]
  %token.0.i = phi i64 [ 52, %if.entry.i17.i ], [ 50, %if.entry.i.i879 ], [ 53, %if.entry1.i908 ], [ 50, %if.entry84 ], [ 52, %Lexer_advance.exit.i898 ], [ 53, %Lexer_dot_token.exit.sink.split ]
  %1216 = tail call ptr @malloc(i32 16)
  %1217 = tail call ptr @malloc(i32 32)
  %1218 = load i64, ptr %memberidx.i.i875, align 4
  %1219 = sub nsw i64 1, %length.0.i899
  %1220 = add i64 %1219, %1218
  %1221 = add nsw i64 %1218, 1
  %memberidx2.i20.i901 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1222 = load i64, ptr %memberidx2.i20.i901, align 4
  %1223 = sub nuw i64 %1222, %length.0.i899
  %memberidx3.i21.i902 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1224 = load i64, ptr %memberidx3.i21.i902, align 4
  store i64 %1220, ptr %1217, align 4
  %memberidx1.i.i22.i903 = getelementptr inbounds %FloRange, ptr %1217, i64 0, i32 1
  store i64 %1221, ptr %memberidx1.i.i22.i903, align 4
  %memberidx2.i.i23.i904 = getelementptr inbounds %FloRange, ptr %1217, i64 0, i32 2
  store i64 %1223, ptr %memberidx2.i.i23.i904, align 4
  %memberidx3.i.i.i905 = getelementptr inbounds %FloRange, ptr %1217, i64 0, i32 3
  store i64 %1224, ptr %memberidx3.i.i.i905, align 4
  store i64 %token.0.i, ptr %1216, align 4
  %memberidx1.i24.i906 = getelementptr inbounds %Token, ptr %1216, i64 0, i32 1
  store ptr %1217, ptr %memberidx1.i24.i906, align 8
  br label %common.ret

if.entry87:                                       ; preds = %ifend11
  %1225 = tail call ptr @malloc(i32 16)
  %1226 = tail call ptr @malloc(i32 32)
  %memberidx90 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1227 = load i64, ptr %memberidx90, align 4
  %memberidx91 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1228 = load i64, ptr %memberidx91, align 4
  %memberidx2.i910 = getelementptr inbounds %FloRange, ptr %1226, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %1226, i8 0, i64 16, i1 false)
  store i64 %1227, ptr %memberidx2.i910, align 4
  %memberidx3.i911 = getelementptr inbounds %FloRange, ptr %1226, i64 0, i32 3
  store i64 %1228, ptr %memberidx3.i911, align 4
  store i64 46, ptr %1225, align 4
  %memberidx1.i912 = getelementptr inbounds %Token, ptr %1225, i64 0, i32 1
  store ptr %1226, ptr %memberidx1.i912, align 8
  br label %common.ret

ifend89:                                          ; preds = %ifend11
  %memberidx92 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1229 = load ptr, ptr %memberidx92, align 8
  %1230 = load ptr, ptr %1229, align 8
  %memberidx93 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1230, i64 0, i32 1
  %1231 = load ptr, ptr %memberidx93, align 8
  %memberidx94 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1232 = load i64, ptr %memberidx94, align 4
  %1233 = tail call ptr %1231(ptr nonnull %1229, i64 %1232, i64 1)
  %memberidx95 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 2
  %1234 = load ptr, ptr %memberidx95, align 8
  %1235 = tail call ptr @malloc(i32 24)
  %1236 = load ptr, ptr %1233, align 8
  %memberidx96 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1236, i64 0, i32 5
  %1237 = load ptr, ptr %memberidx96, align 8
  %1238 = tail call ptr %1237(ptr nonnull %1233)
  %1239 = alloca ptr, align 8
  %1240 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %1239, ptr nonnull @53, ptr %1238)
  %1241 = load ptr, ptr %1239, align 8
  %1242 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %1242, align 8
  %memberidx.i473 = getelementptr inbounds %string, ptr %1242, i64 0, i32 1
  store ptr %1241, ptr %memberidx.i473, align 8
  %memberidx1.i474 = getelementptr inbounds %string, ptr %1242, i64 0, i32 2
  store i64 %1240, ptr %memberidx1.i474, align 4
  %memberidx2.i475 = getelementptr inbounds %string, ptr %1242, i64 0, i32 3
  store i64 %1240, ptr %memberidx2.i475, align 4
  tail call void @free(ptr %1238)
  %1243 = call ptr @malloc(i32 32)
  %1244 = load i64, ptr %memberidx94, align 4
  %1245 = add nsw i64 %1244, 1
  %memberidx2.i183 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1246 = load i64, ptr %memberidx2.i183, align 4
  %1247 = add i64 %1246, -1
  %memberidx3.i184 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1248 = load i64, ptr %memberidx3.i184, align 4
  store i64 %1244, ptr %1243, align 4
  %memberidx1.i.i185 = getelementptr inbounds %FloRange, ptr %1243, i64 0, i32 1
  store i64 %1245, ptr %memberidx1.i.i185, align 4
  %memberidx2.i.i186 = getelementptr inbounds %FloRange, ptr %1243, i64 0, i32 2
  store i64 %1247, ptr %memberidx2.i.i186, align 4
  %memberidx3.i.i187 = getelementptr inbounds %FloRange, ptr %1243, i64 0, i32 3
  store i64 %1248, ptr %memberidx3.i.i187, align 4
  store i64 0, ptr %1235, align 4
  %memberidx1.i170 = getelementptr inbounds %FloError, ptr %1235, i64 0, i32 2
  store ptr %1243, ptr %memberidx1.i170, align 8
  %memberidx2.i171 = getelementptr inbounds %FloError, ptr %1235, i64 0, i32 1
  store ptr %1242, ptr %memberidx2.i171, align 8
  %memberidx.i166 = getelementptr inbounds %Array_FloError_, ptr %1234, i64 0, i32 2
  %1249 = load i64, ptr %memberidx.i166, align 4
  %memberidx1.i = getelementptr inbounds %Array_FloError_, ptr %1234, i64 0, i32 3
  %1250 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %1249, %1250
  br i1 %.not.i, label %ifend89.Array_FloError____sl__.exit_crit_edge, label %if.entry.i

ifend89.Array_FloError____sl__.exit_crit_edge:    ; preds = %ifend89
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %1234, i64 0, i32 1
  %.pre1098 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_FloError____sl__.exit

if.entry.i:                                       ; preds = %ifend89
  %1251 = shl nuw i64 %1250, 1
  store i64 %1251, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_FloError_, ptr %1234, i64 0, i32 1
  %1252 = load ptr, ptr %memberidx2.i.i, align 8
  %1253 = shl i64 %1250, 4
  %1254 = call ptr @realloc(ptr %1252, i64 %1253)
  store ptr %1254, ptr %memberidx2.i.i, align 8
  %.pre1097 = load i64, ptr %memberidx.i166, align 4
  br label %Array_FloError____sl__.exit

Array_FloError____sl__.exit:                      ; preds = %ifend89.Array_FloError____sl__.exit_crit_edge, %if.entry.i
  %1255 = phi ptr [ %.pre1098, %ifend89.Array_FloError____sl__.exit_crit_edge ], [ %1254, %if.entry.i ]
  %1256 = phi i64 [ %1249, %ifend89.Array_FloError____sl__.exit_crit_edge ], [ %.pre1097, %if.entry.i ]
  %1257 = add nsw i64 %1256, 1
  store i64 %1257, ptr %memberidx.i166, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %1255, i64 %1256
  store ptr %1235, ptr %ptridx.i, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %1233, i64 0, i32 1
  %1258 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %1258)
  tail call void @free(ptr nonnull %1233)
  br label %common.ret
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare double @atof(ptr nocapture) local_unnamed_addr #11

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare i64 @atol(ptr nocapture) local_unnamed_addr #11

; Function Attrs: mustprogress nounwind willreturn
define internal void @StringBuilder_add_byte(ptr nocapture %0, i8 %1) #10 {
  %memberidx = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  %5 = sub nuw i64 %3, %4
  %6 = icmp slt i64 %5, 2
  br i1 %6, label %if.entry, label %.ifend_crit_edge

.ifend_crit_edge:                                 ; preds = %2
  %memberidx2.phi.trans.insert = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %.pre = load ptr, ptr %memberidx2.phi.trans.insert, align 8
  br label %ifend

if.entry:                                         ; preds = %2
  %7 = shl nuw i64 %3, 1
  store i64 %7, ptr %memberidx, align 4
  %memberidx2.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %9 = tail call ptr @realloc(ptr %8, i64 %7)
  store ptr %9, ptr %memberidx2.i, align 8
  %memberidx5.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx1, align 4
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  store ptr %11, ptr %memberidx5.i, align 8
  br label %ifend

ifend:                                            ; preds = %.ifend_crit_edge, %if.entry
  %12 = phi ptr [ %.pre, %.ifend_crit_edge ], [ %11, %if.entry ]
  %memberidx2 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  store i8 %1, ptr %12, align 1
  %13 = load ptr, ptr %memberidx2, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 1
  store ptr %14, ptr %memberidx2, align 8
  %15 = load i64, ptr %memberidx1, align 4
  %16 = add nuw i64 %15, 1
  store i64 %16, ptr %memberidx1, align 4
  ret void
}

; Function Attrs: mustprogress nounwind willreturn
define internal void @StringBuilder_add_bytes_length(ptr nocapture %0, ptr nocapture readonly %1, i64 %2) #10 {
  %memberidx = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 4
  %5 = load i64, ptr %memberidx1, align 4
  %6 = sub nuw i64 %4, %5
  %.not = icmp sgt i64 %6, %2
  br i1 %.not, label %.ifend_crit_edge, label %if.entry

.ifend_crit_edge:                                 ; preds = %3
  %memberidx2.phi.trans.insert = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %.pre = load ptr, ptr %memberidx2.phi.trans.insert, align 8
  br label %ifend

if.entry:                                         ; preds = %3
  %7 = shl nuw i64 %4, 1
  store i64 %7, ptr %memberidx, align 4
  %memberidx2.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %9 = tail call ptr @realloc(ptr %8, i64 %7)
  store ptr %9, ptr %memberidx2.i, align 8
  %memberidx5.i = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx1, align 4
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  store ptr %11, ptr %memberidx5.i, align 8
  br label %ifend

ifend:                                            ; preds = %.ifend_crit_edge, %if.entry
  %12 = phi ptr [ %.pre, %.ifend_crit_edge ], [ %11, %if.entry ]
  %memberidx2 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %1, i64 %2, i1 false)
  %13 = load ptr, ptr %memberidx2, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 %2
  store ptr %14, ptr %memberidx2, align 8
  %15 = load i64, ptr %memberidx1, align 4
  %16 = add nuw i64 %15, %2
  store i64 %16, ptr %memberidx1, align 4
  ret void
}

define internal void @StringBuilder_append_string(ptr %0, ptr %1) {
  %3 = load ptr, ptr %0, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %5, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call ptr %6(ptr nonnull %1)
  %memberidx2 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %8 = load i64, ptr %memberidx2, align 4
  tail call void %4(ptr nonnull %0, ptr %7, i64 %8)
  ret void
}

define internal noalias ptr @StringBuilder_get_string(ptr nocapture readonly %0) {
  %2 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %StringBuilder, ptr %0, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %3, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %4, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %4, ptr %memberidx2.i, align 4
  ret ptr %2
}

define internal fastcc noalias ptr @Parser_parse(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Parser, align 8
  store ptr %0, ptr %3, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i72 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx2.i72, align 4
  %5 = icmp sgt i64 %4, -1
  br i1 %5, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %2
  %memberidx3.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  store i64 0, ptr %memberidx2.i, align 8
  %memberidx.i.i73 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i.i73, align 8
  %7 = load ptr, ptr %6, align 8
  store ptr %7, ptr %memberidx3.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %2, %if.entry.i
  %8 = phi i64 [ -1, %2 ], [ 0, %if.entry.i ]
  %9 = phi ptr [ undef, %2 ], [ %7, %if.entry.i ]
  %10 = tail call ptr @malloc(i32 56)
  tail call fastcc void @ModuleAST_constructor(ptr %10)
  %memberidx.i75 = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  %11 = load i64, ptr %9, align 4
  %12 = icmp eq i64 %11, 33
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %12, %14
  br i1 %15, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %Parser_advance.exit
  %memberidx.i.i.i78 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %16 = load i64, ptr %memberidx2.i72, align 4
  %17 = icmp slt i64 %8, %16
  br i1 %17, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %18 = phi i64 [ %25, %Parser_advance.exit.i ], [ 33, %while.entry.i.preheader ]
  %19 = phi ptr [ %27, %Parser_advance.exit.i ], [ %9, %while.entry.i.preheader ]
  %20 = phi i64 [ %28, %Parser_advance.exit.i ], [ %8, %while.entry.i.preheader ]
  %21 = icmp slt i64 %20, %16
  br i1 %21, label %if.entry.i.i79, label %Parser_advance.exit.i

if.entry.i.i79:                                   ; preds = %while.entry.i
  %22 = add nsw i64 %20, 1
  store i64 %22, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %memberidx.i.i.i78, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %23, i64 %22
  %24 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %24, ptr %memberidx.i75, align 8
  %.pre = load i64, ptr %24, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i79, %while.entry.i
  %25 = phi i64 [ %.pre, %if.entry.i.i79 ], [ %18, %while.entry.i ]
  %26 = phi i64 [ %.pre, %if.entry.i.i79 ], [ 33, %while.entry.i ]
  %27 = phi ptr [ %24, %if.entry.i.i79 ], [ %19, %while.entry.i ]
  %28 = phi i64 [ %22, %if.entry.i.i79 ], [ %20, %while.entry.i ]
  %29 = icmp eq i64 %26, 33
  br i1 %29, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %Parser_advance.exit
  %30 = phi i64 [ %11, %Parser_advance.exit ], [ %25, %Parser_advance.exit.i ]
  %31 = phi ptr [ %9, %Parser_advance.exit ], [ %27, %Parser_advance.exit.i ]
  %32 = icmp ne i64 %30, 46
  %33 = and i1 %32, %14
  br i1 %33, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_new_lines.exit
  %memberidx32 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 5
  %memberidx26 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 4
  %memberidx20 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 3
  %memberidx14 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 2
  %memberidx8 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 1
  %memberidx40 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 6
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_new_lines.exit135
  %34 = phi i64 [ %30, %while.entry.preheader ], [ %154, %Parser_new_lines.exit135 ]
  %35 = phi ptr [ %31, %while.entry.preheader ], [ %155, %Parser_new_lines.exit135 ]
  switch i64 %34, label %else30 [
    i64 61, label %if.entry
    i64 70, label %if.entry5
    i64 71, label %if.entry11
    i64 65, label %if.entry17
    i64 55, label %if.entry23
    i64 56, label %if.entry29
  ]

while.end:                                        ; preds = %Parser_new_lines.exit135, %Parser_new_lines.exit
  ret ptr %10

if.entry:                                         ; preds = %while.entry
  %36 = load i64, ptr %memberidx2.i, align 8
  %37 = load ptr, ptr %3, align 8
  %memberidx2.i87 = getelementptr inbounds %Array_Token_, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i87, align 4
  %39 = icmp slt i64 %36, %38
  br i1 %39, label %if.entry.i91, label %Parser_advance.exit92

if.entry.i91:                                     ; preds = %if.entry
  %40 = add nsw i64 %36, 1
  store i64 %40, ptr %memberidx2.i, align 8
  %memberidx.i.i89 = getelementptr inbounds %Array_Token_, ptr %37, i64 0, i32 1
  %41 = load ptr, ptr %memberidx.i.i89, align 8
  %ptridx.i.i90 = getelementptr inbounds ptr, ptr %41, i64 %40
  %42 = load ptr, ptr %ptridx.i.i90, align 8
  store ptr %42, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit92

Parser_advance.exit92:                            ; preds = %if.entry, %if.entry.i91
  %43 = load ptr, ptr %10, align 8
  %44 = call ptr @malloc(i32 33)
  %memberidx.i.i98 = getelementptr inbounds %FunctionDeclarationNode, ptr %44, i64 0, i32 1
  %45 = call ptr @malloc(i32 32)
  store ptr @VTableArray_ArgNode_, ptr %45, align 8
  %memberidx.i.i.i99 = getelementptr inbounds %Array_ArgNode_, ptr %45, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i99, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %45, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i100 = getelementptr inbounds %Array_ArgNode_, ptr %45, i64 0, i32 1
  %46 = call ptr @malloc(i32 64)
  store ptr %46, ptr %memberidx2.i.i.i100, align 8
  store i64 0, ptr %memberidx.i.i.i99, align 4
  store ptr %45, ptr %memberidx.i.i98, align 8
  %memberidx3.i.i102 = getelementptr inbounds %FunctionDeclarationNode, ptr %44, i64 0, i32 4
  store i1 false, ptr %memberidx3.i.i102, align 1
  %47 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %47, ptr %44, align 8
  %48 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %49 = load ptr, ptr %memberidx.i75, align 8
  %50 = load i64, ptr %49, align 4
  %51 = icmp eq i64 %50, 33
  %52 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx3.i.i.i, align 4
  %54 = icmp eq i64 %53, 0
  %55 = and i1 %51, %54
  br i1 %55, label %while.entry.i.i.preheader, label %Parser_new_lines.exit.i

while.entry.i.i.preheader:                        ; preds = %Parser_advance.exit92
  %56 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %56, i64 0, i32 2
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %56, i64 0, i32 1
  %.pre424 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i.i

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i.i
  %57 = phi i64 [ 33, %while.entry.i.i.preheader ], [ %64, %Parser_advance.exit.i.i ]
  %58 = phi i64 [ %.pre424, %while.entry.i.i.preheader ], [ %67, %Parser_advance.exit.i.i ]
  %59 = load i64, ptr %memberidx2.i12.i.i, align 4
  %60 = icmp slt i64 %58, %59
  br i1 %60, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %while.entry.i.i
  %61 = add nsw i64 %58, 1
  store i64 %61, ptr %memberidx2.i, align 8
  %62 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %62, i64 %61
  %63 = load ptr, ptr %ptridx.i.i.i.i, align 8
  store ptr %63, ptr %memberidx.i75, align 8
  %.pre425 = load i64, ptr %63, align 4
  %.pre426 = load i64, ptr %memberidx3.i.i.i, align 4
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %while.entry.i.i
  %64 = phi i64 [ %.pre425, %if.entry.i.i.i ], [ %57, %while.entry.i.i ]
  %65 = phi i64 [ %.pre426, %if.entry.i.i.i ], [ 0, %while.entry.i.i ]
  %66 = phi i64 [ %.pre425, %if.entry.i.i.i ], [ 33, %while.entry.i.i ]
  %67 = phi i64 [ %61, %if.entry.i.i.i ], [ %58, %while.entry.i.i ]
  %68 = icmp eq i64 %66, 33
  %69 = icmp eq i64 %65, 0
  %70 = and i1 %68, %69
  br i1 %70, label %while.entry.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i, %Parser_advance.exit92
  %71 = phi i64 [ %50, %Parser_advance.exit92 ], [ %64, %Parser_advance.exit.i.i ]
  %.not.i104 = icmp eq i64 %71, 26
  br i1 %.not.i104, label %ifend.i, label %if.entry.i106

if.entry.i106:                                    ; preds = %Parser_new_lines.exit.i
  %72 = load ptr, ptr %memberidx.i.i98, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %72)
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry.i106, %Parser_new_lines.exit.i
  %73 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %74 = load ptr, ptr %memberidx.i75, align 8
  %75 = load i64, ptr %74, align 4
  %76 = icmp eq i64 %75, 1
  br i1 %76, label %if.entry6.i, label %else7.i

if.entry6.i:                                      ; preds = %ifend.i
  %77 = load i64, ptr %memberidx2.i, align 8
  %78 = load ptr, ptr %3, align 8
  %memberidx2.i41.i = getelementptr inbounds %Array_Token_, ptr %78, i64 0, i32 2
  %79 = load i64, ptr %memberidx2.i41.i, align 4
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %if.entry.i.i108, label %Parser_advance.exit.i109

if.entry.i.i108:                                  ; preds = %if.entry6.i
  %81 = add nsw i64 %77, 1
  store i64 %81, ptr %memberidx2.i, align 8
  %memberidx.i.i43.i = getelementptr inbounds %Array_Token_, ptr %78, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i.i43.i, align 8
  %ptridx.i.i.i107 = getelementptr inbounds ptr, ptr %82, i64 %81
  %83 = load ptr, ptr %ptridx.i.i.i107, align 8
  store ptr %83, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i109

Parser_advance.exit.i109:                         ; preds = %if.entry.i.i108, %if.entry6.i
  %memberidx9.i = getelementptr inbounds %FunctionDeclarationNode, ptr %44, i64 0, i32 3
  %84 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %84, ptr %memberidx9.i, align 8
  br label %ifend8.i

else7.i:                                          ; preds = %ifend.i
  %85 = call ptr @malloc(i32 24)
  %86 = call ptr @malloc(i32 4)
  store i32 1684631414, ptr %86, align 8
  %87 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %87, align 8
  %memberidx.i.i44.i = getelementptr inbounds %string, ptr %87, i64 0, i32 1
  store ptr %86, ptr %memberidx.i.i44.i, align 8
  %memberidx1.i.i45.i = getelementptr inbounds %string, ptr %87, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i45.i, align 4
  %memberidx2.i.i46.i = getelementptr inbounds %string, ptr %87, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i46.i, align 4
  %88 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %88, i8 0, i64 32, i1 false)
  store i64 54, ptr %85, align 4
  %memberidx1.i.i49.i = getelementptr inbounds %Token, ptr %85, i64 0, i32 1
  store ptr %88, ptr %memberidx1.i.i49.i, align 8
  %memberidx.i50.i = getelementptr inbounds %IdentifierToken, ptr %85, i64 0, i32 2
  store ptr %87, ptr %memberidx.i50.i, align 8
  %memberidx10.i = getelementptr inbounds %FunctionDeclarationNode, ptr %44, i64 0, i32 3
  %89 = call ptr @malloc(i32 32)
  %90 = load ptr, ptr %memberidx1.i.i49.i, align 8
  store ptr %90, ptr %89, align 8
  %memberidx.i.i67.i = getelementptr inbounds %TypeNode, ptr %89, i64 0, i32 1
  store i64 16, ptr %memberidx.i.i67.i, align 4
  %memberidx.i68.i = getelementptr inbounds %RecordTypeNode, ptr %89, i64 0, i32 2
  store ptr %85, ptr %memberidx.i68.i, align 8
  %memberidx1.i69.i = getelementptr inbounds %RecordTypeNode, ptr %89, i64 0, i32 3
  %91 = call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %91, align 8
  %memberidx.i5.i.i = getelementptr inbounds %Array_TypeNode_, ptr %91, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i.i, align 4
  %memberidx1.i.i70.i = getelementptr inbounds %Array_TypeNode_, ptr %91, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i70.i, align 4
  %memberidx2.i.i71.i = getelementptr inbounds %Array_TypeNode_, ptr %91, i64 0, i32 1
  %92 = call ptr @malloc(i32 64)
  store ptr %92, ptr %memberidx2.i.i71.i, align 8
  store i64 0, ptr %memberidx.i5.i.i, align 4
  store ptr %91, ptr %memberidx1.i69.i, align 8
  store ptr %89, ptr %memberidx10.i, align 8
  br label %ifend8.i

ifend8.i:                                         ; preds = %else7.i, %Parser_advance.exit.i109
  %93 = load ptr, ptr %memberidx.i75, align 8
  %94 = load i64, ptr %93, align 4
  %95 = icmp eq i64 %94, 33
  %96 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i54.i = getelementptr inbounds %Array_FloError_, ptr %96, i64 0, i32 2
  %97 = load i64, ptr %memberidx3.i.i54.i, align 4
  %98 = icmp eq i64 %97, 0
  %99 = and i1 %95, %98
  br i1 %99, label %while.entry.i57.i.preheader, label %Parser_new_lines.exit66.i

while.entry.i57.i.preheader:                      ; preds = %ifend8.i
  %100 = load ptr, ptr %3, align 8
  %memberidx2.i12.i56.i = getelementptr inbounds %Array_Token_, ptr %100, i64 0, i32 2
  %memberidx.i.i.i59.i = getelementptr inbounds %Array_Token_, ptr %100, i64 0, i32 1
  %.pre427 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i57.i

while.entry.i57.i:                                ; preds = %while.entry.i57.i.preheader, %Parser_advance.exit.i65.i
  %101 = phi i64 [ 33, %while.entry.i57.i.preheader ], [ %108, %Parser_advance.exit.i65.i ]
  %102 = phi i64 [ %.pre427, %while.entry.i57.i.preheader ], [ %111, %Parser_advance.exit.i65.i ]
  %103 = load i64, ptr %memberidx2.i12.i56.i, align 4
  %104 = icmp slt i64 %102, %103
  br i1 %104, label %if.entry.i.i61.i, label %Parser_advance.exit.i65.i

if.entry.i.i61.i:                                 ; preds = %while.entry.i57.i
  %105 = add nsw i64 %102, 1
  store i64 %105, ptr %memberidx2.i, align 8
  %106 = load ptr, ptr %memberidx.i.i.i59.i, align 8
  %ptridx.i.i.i60.i = getelementptr inbounds ptr, ptr %106, i64 %105
  %107 = load ptr, ptr %ptridx.i.i.i60.i, align 8
  store ptr %107, ptr %memberidx.i75, align 8
  %.pre428 = load i64, ptr %107, align 4
  %.pre429 = load i64, ptr %memberidx3.i.i54.i, align 4
  br label %Parser_advance.exit.i65.i

Parser_advance.exit.i65.i:                        ; preds = %if.entry.i.i61.i, %while.entry.i57.i
  %108 = phi i64 [ %.pre428, %if.entry.i.i61.i ], [ %101, %while.entry.i57.i ]
  %109 = phi i64 [ %.pre429, %if.entry.i.i61.i ], [ 0, %while.entry.i57.i ]
  %110 = phi i64 [ %.pre428, %if.entry.i.i61.i ], [ 33, %while.entry.i57.i ]
  %111 = phi i64 [ %105, %if.entry.i.i61.i ], [ %102, %while.entry.i57.i ]
  %112 = icmp eq i64 %110, 33
  %113 = icmp eq i64 %109, 0
  %114 = and i1 %112, %113
  br i1 %114, label %while.entry.i57.i, label %Parser_new_lines.exit66.i

Parser_new_lines.exit66.i:                        ; preds = %Parser_advance.exit.i65.i, %ifend8.i
  %115 = phi i64 [ %94, %ifend8.i ], [ %108, %Parser_advance.exit.i65.i ]
  %116 = icmp eq i64 %115, 27
  br i1 %116, label %if.entry14.i, label %else15.i

if.entry14.i:                                     ; preds = %Parser_new_lines.exit66.i
  %memberidx17.i = getelementptr inbounds %FunctionDeclarationNode, ptr %44, i64 0, i32 2
  %117 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %117, ptr %memberidx17.i, align 8
  br label %Parser_parse_function.exit

else15.i:                                         ; preds = %Parser_new_lines.exit66.i
  store i1 true, ptr %memberidx3.i.i102, align 1
  br label %Parser_parse_function.exit

Parser_parse_function.exit:                       ; preds = %if.entry14.i, %else15.i
  %memberidx.i111 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %43, i64 0, i32 2
  %118 = load i64, ptr %memberidx.i111, align 4
  %memberidx1.i112 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %43, i64 0, i32 3
  %119 = load i64, ptr %memberidx1.i112, align 4
  %.not.i113 = icmp slt i64 %118, %119
  br i1 %.not.i113, label %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge, label %if.entry.i116

Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge: ; preds = %Parser_parse_function.exit
  %memberidx4.i117.phi.trans.insert = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %43, i64 0, i32 1
  %.pre431 = load ptr, ptr %memberidx4.i117.phi.trans.insert, align 8
  br label %Array_FunctionDeclarationNode____sl__.exit

if.entry.i116:                                    ; preds = %Parser_parse_function.exit
  %120 = shl nuw i64 %119, 1
  store i64 %120, ptr %memberidx1.i112, align 4
  %memberidx2.i.i115 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %43, i64 0, i32 1
  %121 = load ptr, ptr %memberidx2.i.i115, align 8
  %122 = shl i64 %119, 4
  %123 = call ptr @realloc(ptr %121, i64 %122)
  store ptr %123, ptr %memberidx2.i.i115, align 8
  %.pre430 = load i64, ptr %memberidx.i111, align 4
  br label %Array_FunctionDeclarationNode____sl__.exit

Array_FunctionDeclarationNode____sl__.exit:       ; preds = %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge, %if.entry.i116
  %124 = phi ptr [ %.pre431, %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge ], [ %123, %if.entry.i116 ]
  %125 = phi i64 [ %118, %Parser_parse_function.exit.Array_FunctionDeclarationNode____sl__.exit_crit_edge ], [ %.pre430, %if.entry.i116 ]
  %126 = add nsw i64 %125, 1
  store i64 %126, ptr %memberidx.i111, align 4
  %ptridx.i118 = getelementptr inbounds ptr, ptr %124, i64 %125
  store ptr %44, ptr %ptridx.i118, align 8
  br label %ifend

ifend:                                            ; preds = %Array_TypeAliasNode____sl__.exit, %Parser_error.exit, %Array_VarDeclarationStatement____sl__.exit, %Array_ConstDeclarationStatement____sl__.exit, %Array_ImportNode____sl__.exit, %Array_EnumNode____sl__.exit, %Array_ClassDeclarationNode____sl__.exit, %Array_FunctionDeclarationNode____sl__.exit
  %127 = load ptr, ptr %memberidx.i75, align 8
  %128 = load i64, ptr %127, align 4
  %129 = icmp eq i64 %128, 33
  %130 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i123 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 2
  %131 = load i64, ptr %memberidx3.i.i123, align 4
  %132 = icmp eq i64 %131, 0
  %133 = and i1 %129, %132
  br i1 %133, label %while.entry.i126.preheader, label %Parser_new_lines.exit135

while.entry.i126.preheader:                       ; preds = %ifend
  %134 = load ptr, ptr %3, align 8
  %memberidx2.i12.i125 = getelementptr inbounds %Array_Token_, ptr %134, i64 0, i32 2
  %memberidx.i.i.i128 = getelementptr inbounds %Array_Token_, ptr %134, i64 0, i32 1
  %.pre436 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i126

while.entry.i126:                                 ; preds = %while.entry.i126.preheader, %Parser_advance.exit.i134
  %135 = phi i64 [ 0, %while.entry.i126.preheader ], [ %144, %Parser_advance.exit.i134 ]
  %136 = phi i64 [ 33, %while.entry.i126.preheader ], [ %145, %Parser_advance.exit.i134 ]
  %137 = phi ptr [ %127, %while.entry.i126.preheader ], [ %148, %Parser_advance.exit.i134 ]
  %138 = phi i64 [ %.pre436, %while.entry.i126.preheader ], [ %149, %Parser_advance.exit.i134 ]
  %139 = load i64, ptr %memberidx2.i12.i125, align 4
  %140 = icmp slt i64 %138, %139
  br i1 %140, label %if.entry.i.i130, label %Parser_advance.exit.i134

if.entry.i.i130:                                  ; preds = %while.entry.i126
  %141 = add nsw i64 %138, 1
  store i64 %141, ptr %memberidx2.i, align 8
  %142 = load ptr, ptr %memberidx.i.i.i128, align 8
  %ptridx.i.i.i129 = getelementptr inbounds ptr, ptr %142, i64 %141
  %143 = load ptr, ptr %ptridx.i.i.i129, align 8
  store ptr %143, ptr %memberidx.i75, align 8
  %.pre437 = load i64, ptr %143, align 4
  %.pre438 = load i64, ptr %memberidx3.i.i123, align 4
  br label %Parser_advance.exit.i134

Parser_advance.exit.i134:                         ; preds = %if.entry.i.i130, %while.entry.i126
  %144 = phi i64 [ %.pre438, %if.entry.i.i130 ], [ %135, %while.entry.i126 ]
  %145 = phi i64 [ %.pre437, %if.entry.i.i130 ], [ %136, %while.entry.i126 ]
  %146 = phi i64 [ %.pre438, %if.entry.i.i130 ], [ 0, %while.entry.i126 ]
  %147 = phi i64 [ %.pre437, %if.entry.i.i130 ], [ 33, %while.entry.i126 ]
  %148 = phi ptr [ %143, %if.entry.i.i130 ], [ %137, %while.entry.i126 ]
  %149 = phi i64 [ %141, %if.entry.i.i130 ], [ %138, %while.entry.i126 ]
  %150 = icmp eq i64 %147, 33
  %151 = icmp eq i64 %146, 0
  %152 = and i1 %150, %151
  br i1 %152, label %while.entry.i126, label %Parser_new_lines.exit135

Parser_new_lines.exit135:                         ; preds = %Parser_advance.exit.i134, %ifend
  %153 = phi i64 [ %131, %ifend ], [ %144, %Parser_advance.exit.i134 ]
  %154 = phi i64 [ %128, %ifend ], [ %145, %Parser_advance.exit.i134 ]
  %155 = phi ptr [ %127, %ifend ], [ %148, %Parser_advance.exit.i134 ]
  %156 = icmp ne i64 %154, 46
  %157 = icmp eq i64 %153, 0
  %158 = and i1 %156, %157
  br i1 %158, label %while.entry, label %while.end

if.entry5:                                        ; preds = %while.entry
  %159 = load ptr, ptr %memberidx8, align 8
  %160 = load i64, ptr %memberidx2.i, align 8
  %161 = load ptr, ptr %3, align 8
  %memberidx2.i.i140 = getelementptr inbounds %Array_Token_, ptr %161, i64 0, i32 2
  %162 = load i64, ptr %memberidx2.i.i140, align 4
  %163 = icmp slt i64 %160, %162
  br i1 %163, label %if.entry.i.i144, label %Parser_advance.exit.i148

if.entry.i.i144:                                  ; preds = %if.entry5
  %164 = add nsw i64 %160, 1
  store i64 %164, ptr %memberidx2.i, align 8
  %memberidx.i.i.i142 = getelementptr inbounds %Array_Token_, ptr %161, i64 0, i32 1
  %165 = load ptr, ptr %memberidx.i.i.i142, align 8
  %ptridx.i.i.i143 = getelementptr inbounds ptr, ptr %165, i64 %164
  %166 = load ptr, ptr %ptridx.i.i.i143, align 8
  store ptr %166, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i148

Parser_advance.exit.i148:                         ; preds = %if.entry.i.i144, %if.entry5
  %167 = call ptr @malloc(i32 40)
  %168 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %168, ptr %167, align 8
  %memberidx1.i.i145 = getelementptr inbounds %ClassDeclarationNode, ptr %167, i64 0, i32 3
  %169 = call ptr @malloc(i32 32)
  store ptr @VTableArray_FieldNode_, ptr %169, align 8
  %memberidx.i.i25.i = getelementptr inbounds %Array_FieldNode_, ptr %169, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i25.i, align 4
  %memberidx1.i.i26.i = getelementptr inbounds %Array_FieldNode_, ptr %169, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i26.i, align 4
  %memberidx2.i.i27.i = getelementptr inbounds %Array_FieldNode_, ptr %169, i64 0, i32 1
  %170 = call ptr @malloc(i32 64)
  store ptr %170, ptr %memberidx2.i.i27.i, align 8
  store i64 0, ptr %memberidx.i.i25.i, align 4
  store ptr %169, ptr %memberidx1.i.i145, align 8
  %memberidx4.i.i146 = getelementptr inbounds %ClassDeclarationNode, ptr %167, i64 0, i32 4
  %171 = call ptr @malloc(i32 32)
  store ptr @VTableArray_MethodNode_, ptr %171, align 8
  %memberidx.i15.i.i = getelementptr inbounds %Array_MethodNode_, ptr %171, i64 0, i32 2
  store i64 0, ptr %memberidx.i15.i.i, align 4
  %memberidx1.i16.i.i = getelementptr inbounds %Array_MethodNode_, ptr %171, i64 0, i32 3
  store i64 8, ptr %memberidx1.i16.i.i, align 4
  %memberidx2.i17.i.i = getelementptr inbounds %Array_MethodNode_, ptr %171, i64 0, i32 1
  %172 = call ptr @malloc(i32 64)
  store ptr %172, ptr %memberidx2.i17.i.i, align 8
  store i64 0, ptr %memberidx.i15.i.i, align 4
  store ptr %171, ptr %memberidx4.i.i146, align 8
  %memberidx7.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %167, i64 0, i32 1
  %173 = call ptr @malloc(i32 32)
  store ptr @VTableArray_GenericParameterNode_, ptr %173, align 8
  %memberidx.i18.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %173, i64 0, i32 2
  store i64 0, ptr %memberidx.i18.i.i, align 4
  %memberidx1.i19.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %173, i64 0, i32 3
  store i64 8, ptr %memberidx1.i19.i.i, align 4
  %memberidx2.i20.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %173, i64 0, i32 1
  %174 = call ptr @malloc(i32 64)
  store ptr %174, ptr %memberidx2.i20.i.i, align 8
  store i64 0, ptr %memberidx.i18.i.i, align 4
  store ptr %173, ptr %memberidx7.i.i, align 8
  %memberidx10.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %167, i64 0, i32 2
  store ptr null, ptr %memberidx10.i.i, align 8
  %175 = load ptr, ptr %memberidx.i75, align 8
  %176 = load i64, ptr %175, align 4
  %177 = icmp eq i64 %176, 42
  br i1 %177, label %if.entry.i150, label %ifend.i152

if.entry.i150:                                    ; preds = %Parser_advance.exit.i148
  %178 = load i64, ptr %memberidx2.i, align 8
  %179 = load ptr, ptr %3, align 8
  %memberidx2.i.i31.i = getelementptr inbounds %Array_Token_, ptr %179, i64 0, i32 2
  %180 = load i64, ptr %memberidx2.i.i31.i, align 4
  %181 = icmp slt i64 %178, %180
  br i1 %181, label %if.entry.i.i35.i, label %Parser_advance.exit.i36.i

if.entry.i.i35.i:                                 ; preds = %if.entry.i150
  %182 = add nsw i64 %178, 1
  store i64 %182, ptr %memberidx2.i, align 8
  %memberidx.i.i.i33.i = getelementptr inbounds %Array_Token_, ptr %179, i64 0, i32 1
  %183 = load ptr, ptr %memberidx.i.i.i33.i, align 8
  %ptridx.i.i.i34.i = getelementptr inbounds ptr, ptr %183, i64 %182
  %184 = load ptr, ptr %ptridx.i.i.i34.i, align 8
  store ptr %184, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i36.i

Parser_advance.exit.i36.i:                        ; preds = %if.entry.i.i35.i, %if.entry.i150
  %185 = call ptr @malloc(i32 8)
  %186 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %186, ptr %185, align 8
  %187 = load i64, ptr %memberidx.i18.i.i, align 4
  %188 = load i64, ptr %memberidx1.i19.i.i, align 4
  %.not.i21.i.i = icmp slt i64 %187, %188
  br i1 %.not.i21.i.i, label %Parser_advance.exit.i36.i.Array_GenericParameterNode____sl__.exit27.i.i_crit_edge, label %if.entry.i24.i.i

Parser_advance.exit.i36.i.Array_GenericParameterNode____sl__.exit27.i.i_crit_edge: ; preds = %Parser_advance.exit.i36.i
  %.pre393 = load ptr, ptr %memberidx2.i20.i.i, align 8
  br label %Array_GenericParameterNode____sl__.exit27.i.i

if.entry.i24.i.i:                                 ; preds = %Parser_advance.exit.i36.i
  %189 = shl nuw i64 %188, 1
  store i64 %189, ptr %memberidx1.i19.i.i, align 4
  %190 = load ptr, ptr %memberidx2.i20.i.i, align 8
  %191 = shl i64 %188, 4
  %192 = call ptr @realloc(ptr %190, i64 %191)
  store ptr %192, ptr %memberidx2.i20.i.i, align 8
  %.pre392 = load i64, ptr %memberidx.i18.i.i, align 4
  br label %Array_GenericParameterNode____sl__.exit27.i.i

Array_GenericParameterNode____sl__.exit27.i.i:    ; preds = %Parser_advance.exit.i36.i.Array_GenericParameterNode____sl__.exit27.i.i_crit_edge, %if.entry.i24.i.i
  %193 = phi ptr [ %192, %if.entry.i24.i.i ], [ %.pre393, %Parser_advance.exit.i36.i.Array_GenericParameterNode____sl__.exit27.i.i_crit_edge ]
  %194 = phi i64 [ %.pre392, %if.entry.i24.i.i ], [ %187, %Parser_advance.exit.i36.i.Array_GenericParameterNode____sl__.exit27.i.i_crit_edge ]
  %195 = add nsw i64 %194, 1
  store i64 %195, ptr %memberidx.i18.i.i, align 4
  %ptridx.i26.i.i = getelementptr inbounds ptr, ptr %193, i64 %194
  store ptr %185, ptr %ptridx.i26.i.i, align 8
  %196 = load ptr, ptr %memberidx.i75, align 8
  %197 = load i64, ptr %196, align 4
  %198 = icmp eq i64 %197, 3
  %199 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i30.i.i = getelementptr inbounds %Array_FloError_, ptr %199, i64 0, i32 2
  %200 = load i64, ptr %memberidx3.i30.i.i, align 4
  %201 = icmp eq i64 %200, 0
  %202 = and i1 %198, %201
  br i1 %202, label %while.entry.i38.i, label %Parser_parse_generic_parameters.exit.i

while.entry.i38.i:                                ; preds = %Array_GenericParameterNode____sl__.exit27.i.i, %Array_GenericParameterNode____sl__.exit.i.i
  %203 = load i64, ptr %memberidx2.i, align 8
  %204 = load ptr, ptr %3, align 8
  %memberidx2.i32.i.i = getelementptr inbounds %Array_Token_, ptr %204, i64 0, i32 2
  %205 = load i64, ptr %memberidx2.i32.i.i, align 4
  %206 = icmp slt i64 %203, %205
  br i1 %206, label %if.entry.i36.i.i, label %Parser_advance.exit37.i.i

if.entry.i36.i.i:                                 ; preds = %while.entry.i38.i
  %207 = add nsw i64 %203, 1
  store i64 %207, ptr %memberidx2.i, align 8
  %memberidx.i.i34.i.i = getelementptr inbounds %Array_Token_, ptr %204, i64 0, i32 1
  %208 = load ptr, ptr %memberidx.i.i34.i.i, align 8
  %ptridx.i.i35.i.i = getelementptr inbounds ptr, ptr %208, i64 %207
  %209 = load ptr, ptr %ptridx.i.i35.i.i, align 8
  store ptr %209, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit37.i.i

Parser_advance.exit37.i.i:                        ; preds = %if.entry.i36.i.i, %while.entry.i38.i
  %210 = call ptr @malloc(i32 8)
  %211 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %211, ptr %210, align 8
  %212 = load i64, ptr %memberidx.i18.i.i, align 4
  %213 = load i64, ptr %memberidx1.i19.i.i, align 4
  %.not.i.i40.i = icmp slt i64 %212, %213
  br i1 %.not.i.i40.i, label %Parser_advance.exit37.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge, label %if.entry.i18.i.i

Parser_advance.exit37.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge: ; preds = %Parser_advance.exit37.i.i
  %.pre395 = load ptr, ptr %memberidx2.i20.i.i, align 8
  br label %Array_GenericParameterNode____sl__.exit.i.i

if.entry.i18.i.i:                                 ; preds = %Parser_advance.exit37.i.i
  %214 = shl nuw i64 %213, 1
  store i64 %214, ptr %memberidx1.i19.i.i, align 4
  %215 = load ptr, ptr %memberidx2.i20.i.i, align 8
  %216 = shl i64 %213, 4
  %217 = call ptr @realloc(ptr %215, i64 %216)
  store ptr %217, ptr %memberidx2.i20.i.i, align 8
  %.pre394 = load i64, ptr %memberidx.i18.i.i, align 4
  br label %Array_GenericParameterNode____sl__.exit.i.i

Array_GenericParameterNode____sl__.exit.i.i:      ; preds = %Parser_advance.exit37.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge, %if.entry.i18.i.i
  %218 = phi ptr [ %217, %if.entry.i18.i.i ], [ %.pre395, %Parser_advance.exit37.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge ]
  %219 = phi i64 [ %.pre394, %if.entry.i18.i.i ], [ %212, %Parser_advance.exit37.i.i.Array_GenericParameterNode____sl__.exit.i.i_crit_edge ]
  %220 = add nsw i64 %219, 1
  store i64 %220, ptr %memberidx.i18.i.i, align 4
  %ptridx.i.i43.i = getelementptr inbounds ptr, ptr %218, i64 %219
  store ptr %210, ptr %ptridx.i.i43.i, align 8
  %221 = load ptr, ptr %memberidx.i75, align 8
  %222 = load i64, ptr %221, align 4
  %223 = icmp eq i64 %222, 3
  %224 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i15.i.i = getelementptr inbounds %Array_FloError_, ptr %224, i64 0, i32 2
  %225 = load i64, ptr %memberidx3.i15.i.i, align 4
  %226 = icmp eq i64 %225, 0
  %227 = and i1 %223, %226
  br i1 %227, label %while.entry.i38.i, label %Parser_parse_generic_parameters.exit.i

Parser_parse_generic_parameters.exit.i:           ; preds = %Array_GenericParameterNode____sl__.exit.i.i, %Array_GenericParameterNode____sl__.exit27.i.i
  %228 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 41)
  %.pre396 = load ptr, ptr %memberidx.i75, align 8
  %.pre397 = load i64, ptr %.pre396, align 4
  br label %ifend.i152

ifend.i152:                                       ; preds = %Parser_parse_generic_parameters.exit.i, %Parser_advance.exit.i148
  %229 = phi i64 [ %.pre397, %Parser_parse_generic_parameters.exit.i ], [ %176, %Parser_advance.exit.i148 ]
  %230 = icmp eq i64 %229, 25
  br i1 %230, label %if.entry5.i, label %ifend7.i

if.entry5.i:                                      ; preds = %ifend.i152
  %231 = load i64, ptr %memberidx2.i, align 8
  %232 = load ptr, ptr %3, align 8
  %memberidx2.i46.i = getelementptr inbounds %Array_Token_, ptr %232, i64 0, i32 2
  %233 = load i64, ptr %memberidx2.i46.i, align 4
  %234 = icmp slt i64 %231, %233
  br i1 %234, label %if.entry.i50.i, label %Parser_advance.exit52.i

if.entry.i50.i:                                   ; preds = %if.entry5.i
  %235 = add nsw i64 %231, 1
  store i64 %235, ptr %memberidx2.i, align 8
  %memberidx.i.i48.i = getelementptr inbounds %Array_Token_, ptr %232, i64 0, i32 1
  %236 = load ptr, ptr %memberidx.i.i48.i, align 8
  %ptridx.i.i49.i = getelementptr inbounds ptr, ptr %236, i64 %235
  %237 = load ptr, ptr %ptridx.i.i49.i, align 8
  store ptr %237, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit52.i

Parser_advance.exit52.i:                          ; preds = %if.entry.i50.i, %if.entry5.i
  %238 = call fastcc ptr @Parser_parse_object_type(ptr nonnull %3)
  store ptr %238, ptr %memberidx10.i.i, align 8
  %239 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %.pre398 = load ptr, ptr %memberidx.i75, align 8
  %.pre399 = load i64, ptr %.pre398, align 4
  br label %ifend7.i

ifend7.i:                                         ; preds = %Parser_advance.exit52.i, %ifend.i152
  %240 = phi i64 [ %.pre399, %Parser_advance.exit52.i ], [ %229, %ifend.i152 ]
  %241 = icmp eq i64 %240, 33
  %242 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i56.i = getelementptr inbounds %Array_FloError_, ptr %242, i64 0, i32 2
  %243 = load i64, ptr %memberidx3.i.i56.i, align 4
  %244 = icmp eq i64 %243, 0
  %245 = and i1 %241, %244
  br i1 %245, label %while.entry.i57.i155.preheader, label %Parser_new_lines.exit.i161

while.entry.i57.i155.preheader:                   ; preds = %ifend7.i
  %246 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i154 = getelementptr inbounds %Array_Token_, ptr %246, i64 0, i32 2
  %memberidx.i.i.i58.i = getelementptr inbounds %Array_Token_, ptr %246, i64 0, i32 1
  %.pre400 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i57.i155

while.entry.i57.i155:                             ; preds = %while.entry.i57.i155.preheader, %Parser_advance.exit.i61.i
  %247 = phi i64 [ %.pre400, %while.entry.i57.i155.preheader ], [ %255, %Parser_advance.exit.i61.i ]
  %248 = load i64, ptr %memberidx2.i12.i.i154, align 4
  %249 = icmp slt i64 %247, %248
  br i1 %249, label %if.entry.i.i60.i, label %Parser_advance.exit.i61.i

if.entry.i.i60.i:                                 ; preds = %while.entry.i57.i155
  %250 = add nsw i64 %247, 1
  store i64 %250, ptr %memberidx2.i, align 8
  %251 = load ptr, ptr %memberidx.i.i.i58.i, align 8
  %ptridx.i.i.i59.i = getelementptr inbounds ptr, ptr %251, i64 %250
  %252 = load ptr, ptr %ptridx.i.i.i59.i, align 8
  store ptr %252, ptr %memberidx.i75, align 8
  %.pre401 = load i64, ptr %252, align 4
  %.pre402 = load i64, ptr %memberidx3.i.i56.i, align 4
  br label %Parser_advance.exit.i61.i

Parser_advance.exit.i61.i:                        ; preds = %if.entry.i.i60.i, %while.entry.i57.i155
  %253 = phi i64 [ %.pre402, %if.entry.i.i60.i ], [ 0, %while.entry.i57.i155 ]
  %254 = phi i64 [ %.pre401, %if.entry.i.i60.i ], [ 33, %while.entry.i57.i155 ]
  %255 = phi i64 [ %250, %if.entry.i.i60.i ], [ %247, %while.entry.i57.i155 ]
  %256 = icmp eq i64 %254, 33
  %257 = icmp eq i64 %253, 0
  %258 = and i1 %256, %257
  br i1 %258, label %while.entry.i57.i155, label %Parser_new_lines.exit.i161

Parser_new_lines.exit.i161:                       ; preds = %Parser_advance.exit.i61.i, %ifend7.i
  %259 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 27)
  %260 = load ptr, ptr %memberidx.i75, align 8
  %261 = load i64, ptr %260, align 4
  %262 = icmp eq i64 %261, 33
  %263 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %263, i64 0, i32 2
  %264 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %265 = icmp eq i64 %264, 0
  %266 = and i1 %262, %265
  br i1 %266, label %while.entry.i.i.i.preheader, label %Parser_new_lines.exit.i.i

while.entry.i.i.i.preheader:                      ; preds = %Parser_new_lines.exit.i161
  %267 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i.i = getelementptr inbounds %Array_Token_, ptr %267, i64 0, i32 2
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %267, i64 0, i32 1
  %.pre403 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i.i.i

while.entry.i.i.i:                                ; preds = %while.entry.i.i.i.preheader, %Parser_advance.exit.i.i.i
  %268 = phi i64 [ 33, %while.entry.i.i.i.preheader ], [ %275, %Parser_advance.exit.i.i.i ]
  %269 = phi i64 [ %.pre403, %while.entry.i.i.i.preheader ], [ %278, %Parser_advance.exit.i.i.i ]
  %270 = load i64, ptr %memberidx2.i12.i.i.i, align 4
  %271 = icmp slt i64 %269, %270
  br i1 %271, label %if.entry.i.i.i.i, label %Parser_advance.exit.i.i.i

if.entry.i.i.i.i:                                 ; preds = %while.entry.i.i.i
  %272 = add nsw i64 %269, 1
  store i64 %272, ptr %memberidx2.i, align 8
  %273 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %273, i64 %272
  %274 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  store ptr %274, ptr %memberidx.i75, align 8
  %.pre404 = load i64, ptr %274, align 4
  %.pre405 = load i64, ptr %memberidx3.i.i.i.i, align 4
  br label %Parser_advance.exit.i.i.i

Parser_advance.exit.i.i.i:                        ; preds = %if.entry.i.i.i.i, %while.entry.i.i.i
  %275 = phi i64 [ %.pre404, %if.entry.i.i.i.i ], [ %268, %while.entry.i.i.i ]
  %276 = phi i64 [ %.pre405, %if.entry.i.i.i.i ], [ 0, %while.entry.i.i.i ]
  %277 = phi i64 [ %.pre404, %if.entry.i.i.i.i ], [ 33, %while.entry.i.i.i ]
  %278 = phi i64 [ %272, %if.entry.i.i.i.i ], [ %269, %while.entry.i.i.i ]
  %279 = icmp eq i64 %277, 33
  %280 = icmp eq i64 %276, 0
  %281 = and i1 %279, %280
  br i1 %281, label %while.entry.i.i.i, label %Parser_new_lines.exit.i.i

Parser_new_lines.exit.i.i:                        ; preds = %Parser_advance.exit.i.i.i, %Parser_new_lines.exit.i161
  %282 = phi i64 [ %261, %Parser_new_lines.exit.i161 ], [ %275, %Parser_advance.exit.i.i.i ]
  %283 = phi i64 [ %264, %Parser_new_lines.exit.i161 ], [ %276, %Parser_advance.exit.i.i.i ]
  %.fr = freeze i64 %283
  %284 = icmp eq i64 %.fr, 0
  br i1 %284, label %switch.early.test, label %while.end.i.i

switch.early.test:                                ; preds = %Parser_new_lines.exit.i.i
  switch i64 %282, label %while.entry.i.i163 [
    i64 46, label %while.end.i.i
    i64 28, label %while.end.i.i
  ]

while.entry.i.i163:                               ; preds = %switch.early.test, %switch.early.test349
  %285 = phi i64 [ %337, %switch.early.test349 ], [ %282, %switch.early.test ]
  switch i64 %285, label %while.entry.i.i163.ifend.i.i_crit_edge [
    i64 67, label %else.i.i
    i64 66, label %Parser_parse_access_modifier.exit.i.i.fold.split
    i64 68, label %else.i.i.fold.split
  ]

while.entry.i.i163.ifend.i.i_crit_edge:           ; preds = %while.entry.i.i163
  %.pre406 = load i64, ptr %memberidx2.i, align 8
  %.pre407 = load ptr, ptr %3, align 8
  br label %ifend.i.i

Parser_parse_access_modifier.exit.i.i.fold.split: ; preds = %while.entry.i.i163
  br label %else.i.i

while.end.i.i:                                    ; preds = %switch.early.test349, %switch.early.test349, %Parser_new_lines.exit121.i.i, %switch.early.test, %switch.early.test, %Parser_new_lines.exit.i.i
  %286 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 28)
  br label %Parser_parse_class.exit

else.i.i.fold.split:                              ; preds = %while.entry.i.i163
  br label %else.i.i

else.i.i:                                         ; preds = %while.entry.i.i163, %else.i.i.fold.split, %Parser_parse_access_modifier.exit.i.i.fold.split
  %common.ret.op.i.i.i.ph = phi i64 [ 1, %Parser_parse_access_modifier.exit.i.i.fold.split ], [ 2, %while.entry.i.i163 ], [ 3, %else.i.i.fold.split ]
  %287 = load i64, ptr %memberidx2.i, align 8
  %288 = load ptr, ptr %3, align 8
  %memberidx2.i61.i.i = getelementptr inbounds %Array_Token_, ptr %288, i64 0, i32 2
  %289 = load i64, ptr %memberidx2.i61.i.i, align 4
  %290 = icmp slt i64 %287, %289
  br i1 %290, label %if.entry.i.i.i164, label %ifend.i.i

if.entry.i.i.i164:                                ; preds = %else.i.i
  %291 = add nsw i64 %287, 1
  store i64 %291, ptr %memberidx2.i, align 8
  %memberidx.i.i63.i.i = getelementptr inbounds %Array_Token_, ptr %288, i64 0, i32 1
  %292 = load ptr, ptr %memberidx.i.i63.i.i, align 8
  %ptridx.i.i64.i.i = getelementptr inbounds ptr, ptr %292, i64 %291
  %293 = load ptr, ptr %ptridx.i.i64.i.i, align 8
  store ptr %293, ptr %memberidx.i75, align 8
  br label %ifend.i.i

ifend.i.i:                                        ; preds = %while.entry.i.i163.ifend.i.i_crit_edge, %else.i.i, %if.entry.i.i.i164
  %294 = phi ptr [ %288, %if.entry.i.i.i164 ], [ %288, %else.i.i ], [ %.pre407, %while.entry.i.i163.ifend.i.i_crit_edge ]
  %295 = phi i64 [ %291, %if.entry.i.i.i164 ], [ %287, %else.i.i ], [ %.pre406, %while.entry.i.i163.ifend.i.i_crit_edge ]
  %access_modifier.0.i.i = phi i64 [ %common.ret.op.i.i.i.ph, %if.entry.i.i.i164 ], [ %common.ret.op.i.i.i.ph, %else.i.i ], [ 2, %while.entry.i.i163.ifend.i.i_crit_edge ]
  %296 = add nsw i64 %295, 1
  %memberidx2.i67.i.i = getelementptr inbounds %Array_Token_, ptr %294, i64 0, i32 2
  %297 = load i64, ptr %memberidx2.i67.i.i, align 4
  %298 = icmp slt i64 %296, %297
  br i1 %298, label %Parser_peek.exit.i.i, label %Parser_peek.exit.i.i.thread

Parser_peek.exit.i.i:                             ; preds = %ifend.i.i
  %memberidx.i.i69.i.i = getelementptr inbounds %Array_Token_, ptr %294, i64 0, i32 1
  %299 = load ptr, ptr %memberidx.i.i69.i.i, align 8
  %ptridx.i.i70.i.i = getelementptr inbounds ptr, ptr %299, i64 %296
  %common.ret.op.i68.i.i = load ptr, ptr %ptridx.i.i70.i.i, align 8
  %300 = load i64, ptr %common.ret.op.i68.i.i, align 4
  %301 = icmp eq i64 %300, 1
  br i1 %301, label %if.entry3.i.i, label %Parser_peek.exit105.i.i

Parser_peek.exit.i.i.thread:                      ; preds = %ifend.i.i
  %302 = add i64 %297, -1
  %memberidx.i12.i.i.i = getelementptr inbounds %Array_Token_, ptr %294, i64 0, i32 1
  %303 = load ptr, ptr %memberidx.i12.i.i.i, align 8
  %ptridx.i13.i.i.i = getelementptr inbounds ptr, ptr %303, i64 %302
  %common.ret.op.i68.i.i353 = load ptr, ptr %ptridx.i13.i.i.i, align 8
  %304 = load i64, ptr %common.ret.op.i68.i.i353, align 4
  %305 = icmp eq i64 %304, 1
  br i1 %305, label %if.entry3.i.i, label %Parser_peek.exit105.i.i

if.entry3.i.i:                                    ; preds = %Parser_peek.exit.i.i.thread, %Parser_peek.exit.i.i
  %306 = call ptr @malloc(i32 32)
  %307 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %307, ptr %306, align 8
  %memberidx1.i79.i.i = getelementptr inbounds %FieldNode, ptr %306, i64 0, i32 2
  store ptr null, ptr %memberidx1.i79.i.i, align 8
  %308 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 1)
  %memberidx6.i.i = getelementptr inbounds %FieldNode, ptr %306, i64 0, i32 3
  %309 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %309, ptr %memberidx6.i.i, align 8
  %310 = load ptr, ptr %memberidx.i75, align 8
  %311 = load i64, ptr %310, align 4
  %312 = icmp eq i64 %311, 38
  br i1 %312, label %if.entry9.i.i, label %ifend11.i.i

Parser_peek.exit105.i.i:                          ; preds = %Parser_peek.exit.i.i.thread, %Parser_peek.exit.i.i
  %313 = phi i64 [ %300, %Parser_peek.exit.i.i ], [ %304, %Parser_peek.exit.i.i.thread ]
  %314 = icmp eq i64 %313, 25
  br i1 %314, label %if.entry16.i.i, label %else17.i.i

ifend5.i.i:                                       ; preds = %Array_MethodNode____sl__.exit.i.i, %Array_FieldNode____sl__.exit.i.i
  %315 = load ptr, ptr %memberidx.i75, align 8
  %316 = load i64, ptr %315, align 4
  %317 = icmp eq i64 %316, 33
  %318 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i109.i.i = getelementptr inbounds %Array_FloError_, ptr %318, i64 0, i32 2
  %319 = load i64, ptr %memberidx3.i.i109.i.i, align 4
  %320 = icmp eq i64 %319, 0
  %321 = and i1 %317, %320
  br i1 %321, label %while.entry.i112.i.i.preheader, label %Parser_new_lines.exit121.i.i

while.entry.i112.i.i.preheader:                   ; preds = %ifend5.i.i
  %322 = load ptr, ptr %3, align 8
  %memberidx2.i12.i111.i.i = getelementptr inbounds %Array_Token_, ptr %322, i64 0, i32 2
  %memberidx.i.i.i114.i.i = getelementptr inbounds %Array_Token_, ptr %322, i64 0, i32 1
  %.pre419 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i112.i.i

while.entry.i112.i.i:                             ; preds = %while.entry.i112.i.i.preheader, %Parser_advance.exit.i120.i.i
  %323 = phi i64 [ 33, %while.entry.i112.i.i.preheader ], [ %330, %Parser_advance.exit.i120.i.i ]
  %324 = phi i64 [ %.pre419, %while.entry.i112.i.i.preheader ], [ %333, %Parser_advance.exit.i120.i.i ]
  %325 = load i64, ptr %memberidx2.i12.i111.i.i, align 4
  %326 = icmp slt i64 %324, %325
  br i1 %326, label %if.entry.i.i116.i.i, label %Parser_advance.exit.i120.i.i

if.entry.i.i116.i.i:                              ; preds = %while.entry.i112.i.i
  %327 = add nsw i64 %324, 1
  store i64 %327, ptr %memberidx2.i, align 8
  %328 = load ptr, ptr %memberidx.i.i.i114.i.i, align 8
  %ptridx.i.i.i115.i.i = getelementptr inbounds ptr, ptr %328, i64 %327
  %329 = load ptr, ptr %ptridx.i.i.i115.i.i, align 8
  store ptr %329, ptr %memberidx.i75, align 8
  %.pre420 = load i64, ptr %329, align 4
  %.pre421 = load i64, ptr %memberidx3.i.i109.i.i, align 4
  br label %Parser_advance.exit.i120.i.i

Parser_advance.exit.i120.i.i:                     ; preds = %if.entry.i.i116.i.i, %while.entry.i112.i.i
  %330 = phi i64 [ %.pre420, %if.entry.i.i116.i.i ], [ %323, %while.entry.i112.i.i ]
  %331 = phi i64 [ %.pre421, %if.entry.i.i116.i.i ], [ 0, %while.entry.i112.i.i ]
  %332 = phi i64 [ %.pre420, %if.entry.i.i116.i.i ], [ 33, %while.entry.i112.i.i ]
  %333 = phi i64 [ %327, %if.entry.i.i116.i.i ], [ %324, %while.entry.i112.i.i ]
  %334 = icmp eq i64 %332, 33
  %335 = icmp eq i64 %331, 0
  %336 = and i1 %334, %335
  br i1 %336, label %while.entry.i112.i.i, label %Parser_new_lines.exit121.i.i

Parser_new_lines.exit121.i.i:                     ; preds = %Parser_advance.exit.i120.i.i, %ifend5.i.i
  %337 = phi i64 [ %316, %ifend5.i.i ], [ %330, %Parser_advance.exit.i120.i.i ]
  %338 = phi i64 [ %319, %ifend5.i.i ], [ %331, %Parser_advance.exit.i120.i.i ]
  %.fr355 = freeze i64 %338
  %339 = icmp eq i64 %.fr355, 0
  br i1 %339, label %switch.early.test349, label %while.end.i.i

switch.early.test349:                             ; preds = %Parser_new_lines.exit121.i.i
  switch i64 %337, label %while.entry.i.i163 [
    i64 46, label %while.end.i.i
    i64 28, label %while.end.i.i
  ]

if.entry9.i.i:                                    ; preds = %if.entry3.i.i
  %340 = load i64, ptr %memberidx2.i, align 8
  %341 = load ptr, ptr %3, align 8
  %memberidx2.i126.i.i = getelementptr inbounds %Array_Token_, ptr %341, i64 0, i32 2
  %342 = load i64, ptr %memberidx2.i126.i.i, align 4
  %343 = icmp slt i64 %340, %342
  br i1 %343, label %if.entry.i130.i.i, label %Parser_advance.exit132.i.i

if.entry.i130.i.i:                                ; preds = %if.entry9.i.i
  %344 = add nsw i64 %340, 1
  store i64 %344, ptr %memberidx2.i, align 8
  %memberidx.i.i128.i.i = getelementptr inbounds %Array_Token_, ptr %341, i64 0, i32 1
  %345 = load ptr, ptr %memberidx.i.i128.i.i, align 8
  %ptridx.i.i129.i.i = getelementptr inbounds ptr, ptr %345, i64 %344
  %346 = load ptr, ptr %ptridx.i.i129.i.i, align 8
  store ptr %346, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit132.i.i

Parser_advance.exit132.i.i:                       ; preds = %if.entry.i130.i.i, %if.entry9.i.i
  %347 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %347, ptr %memberidx1.i79.i.i, align 8
  br label %ifend11.i.i

ifend11.i.i:                                      ; preds = %Parser_advance.exit132.i.i, %if.entry3.i.i
  %memberidx13.i.i = getelementptr inbounds %FieldNode, ptr %306, i64 0, i32 1
  store i64 %access_modifier.0.i.i, ptr %memberidx13.i.i, align 4
  %348 = load ptr, ptr %memberidx1.i.i145, align 8
  %memberidx.i133.i.i = getelementptr inbounds %Array_FieldNode_, ptr %348, i64 0, i32 2
  %349 = load i64, ptr %memberidx.i133.i.i, align 4
  %memberidx1.i134.i.i = getelementptr inbounds %Array_FieldNode_, ptr %348, i64 0, i32 3
  %350 = load i64, ptr %memberidx1.i134.i.i, align 4
  %.not.i135.i.i = icmp slt i64 %349, %350
  br i1 %.not.i135.i.i, label %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge, label %if.entry.i138.i.i

ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge: ; preds = %ifend11.i.i
  %memberidx4.i139.i.i.phi.trans.insert = getelementptr inbounds %Array_FieldNode_, ptr %348, i64 0, i32 1
  %.pre418 = load ptr, ptr %memberidx4.i139.i.i.phi.trans.insert, align 8
  br label %Array_FieldNode____sl__.exit.i.i

if.entry.i138.i.i:                                ; preds = %ifend11.i.i
  %351 = shl nuw i64 %350, 1
  store i64 %351, ptr %memberidx1.i134.i.i, align 4
  %memberidx2.i.i137.i.i = getelementptr inbounds %Array_FieldNode_, ptr %348, i64 0, i32 1
  %352 = load ptr, ptr %memberidx2.i.i137.i.i, align 8
  %353 = shl i64 %350, 4
  %354 = call ptr @realloc(ptr %352, i64 %353)
  store ptr %354, ptr %memberidx2.i.i137.i.i, align 8
  %.pre417 = load i64, ptr %memberidx.i133.i.i, align 4
  br label %Array_FieldNode____sl__.exit.i.i

Array_FieldNode____sl__.exit.i.i:                 ; preds = %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge, %if.entry.i138.i.i
  %355 = phi ptr [ %354, %if.entry.i138.i.i ], [ %.pre418, %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge ]
  %356 = phi i64 [ %.pre417, %if.entry.i138.i.i ], [ %349, %ifend11.i.i.Array_FieldNode____sl__.exit.i.i_crit_edge ]
  %357 = add nsw i64 %356, 1
  store i64 %357, ptr %memberidx.i133.i.i, align 4
  %ptridx.i140.i.i = getelementptr inbounds ptr, ptr %355, i64 %356
  store ptr %306, ptr %ptridx.i140.i.i, align 8
  br label %ifend5.i.i

if.entry16.i.i:                                   ; preds = %Parser_peek.exit105.i.i
  %358 = call ptr @malloc(i32 42)
  %359 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %359, ptr %358, align 8
  %memberidx1.i.i80.i.i = getelementptr inbounds %MethodNode, ptr %358, i64 0, i32 1
  %360 = call ptr @malloc(i32 32)
  store ptr @VTableArray_ArgNode_, ptr %360, align 8
  %memberidx.i.i.i81.i.i = getelementptr inbounds %Array_ArgNode_, ptr %360, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i81.i.i, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %360, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i.i.i, align 4
  %memberidx2.i.i.i82.i.i = getelementptr inbounds %Array_ArgNode_, ptr %360, i64 0, i32 1
  %361 = call ptr @malloc(i32 64)
  store ptr %361, ptr %memberidx2.i.i.i82.i.i, align 8
  store i64 0, ptr %memberidx.i.i.i81.i.i, align 4
  store ptr %360, ptr %memberidx1.i.i80.i.i, align 8
  %memberidx4.i.i84.i.i = getelementptr inbounds %MethodNode, ptr %358, i64 0, i32 5
  store i1 true, ptr %memberidx4.i.i84.i.i, align 1
  %memberidx5.i.i.i.i = getelementptr inbounds %MethodNode, ptr %358, i64 0, i32 6
  store i1 false, ptr %memberidx5.i.i.i.i, align 1
  %362 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %363 = load ptr, ptr %memberidx.i75, align 8
  %364 = load i64, ptr %363, align 4
  %365 = icmp eq i64 %364, 33
  %366 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %366, i64 0, i32 2
  %367 = load i64, ptr %memberidx3.i.i.i.i.i, align 4
  %368 = icmp eq i64 %367, 0
  %369 = and i1 %365, %368
  br i1 %369, label %while.entry.i.i.i.i.preheader, label %Parser_new_lines.exit.i.i.i

while.entry.i.i.i.i.preheader:                    ; preds = %if.entry16.i.i
  %370 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %370, i64 0, i32 2
  %memberidx.i.i.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %370, i64 0, i32 1
  %371 = load i64, ptr %memberidx2.i, align 8
  %372 = load i64, ptr %memberidx2.i12.i.i.i.i, align 4
  %373 = icmp slt i64 %371, %372
  br i1 %373, label %while.entry.i.i.i.i, label %while.entry.i.i.i.i.us

while.entry.i.i.i.i.us:                           ; preds = %while.entry.i.i.i.i.preheader, %while.entry.i.i.i.i.us
  br label %while.entry.i.i.i.i.us

while.entry.i.i.i.i:                              ; preds = %while.entry.i.i.i.i.preheader, %Parser_advance.exit.i.i.i.i
  %374 = phi i64 [ %382, %Parser_advance.exit.i.i.i.i ], [ 33, %while.entry.i.i.i.i.preheader ]
  %375 = phi ptr [ %385, %Parser_advance.exit.i.i.i.i ], [ %363, %while.entry.i.i.i.i.preheader ]
  %376 = phi i64 [ %386, %Parser_advance.exit.i.i.i.i ], [ %371, %while.entry.i.i.i.i.preheader ]
  %377 = load i64, ptr %memberidx2.i12.i.i.i.i, align 4
  %378 = icmp slt i64 %376, %377
  br i1 %378, label %if.entry.i.i.i.i.i, label %Parser_advance.exit.i.i.i.i

if.entry.i.i.i.i.i:                               ; preds = %while.entry.i.i.i.i
  %379 = add nsw i64 %376, 1
  store i64 %379, ptr %memberidx2.i, align 8
  %380 = load ptr, ptr %memberidx.i.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i.i = getelementptr inbounds ptr, ptr %380, i64 %379
  %381 = load ptr, ptr %ptridx.i.i.i.i.i.i, align 8
  store ptr %381, ptr %memberidx.i75, align 8
  %.pre411 = load i64, ptr %381, align 4
  %.pre412 = load i64, ptr %memberidx3.i.i.i.i.i, align 4
  br label %Parser_advance.exit.i.i.i.i

Parser_advance.exit.i.i.i.i:                      ; preds = %if.entry.i.i.i.i.i, %while.entry.i.i.i.i
  %382 = phi i64 [ %.pre411, %if.entry.i.i.i.i.i ], [ %374, %while.entry.i.i.i.i ]
  %383 = phi i64 [ %.pre412, %if.entry.i.i.i.i.i ], [ 0, %while.entry.i.i.i.i ]
  %384 = phi i64 [ %.pre411, %if.entry.i.i.i.i.i ], [ 33, %while.entry.i.i.i.i ]
  %385 = phi ptr [ %381, %if.entry.i.i.i.i.i ], [ %375, %while.entry.i.i.i.i ]
  %386 = phi i64 [ %379, %if.entry.i.i.i.i.i ], [ %376, %while.entry.i.i.i.i ]
  %387 = icmp eq i64 %384, 33
  %388 = icmp eq i64 %383, 0
  %389 = and i1 %387, %388
  br i1 %389, label %while.entry.i.i.i.i, label %Parser_new_lines.exit.i.i.i

Parser_new_lines.exit.i.i.i:                      ; preds = %Parser_advance.exit.i.i.i.i, %if.entry16.i.i
  %390 = phi i64 [ %364, %if.entry16.i.i ], [ %382, %Parser_advance.exit.i.i.i.i ]
  %391 = phi ptr [ %363, %if.entry16.i.i ], [ %385, %Parser_advance.exit.i.i.i.i ]
  %.not.i87.i.i = icmp eq i64 %390, 26
  br i1 %.not.i87.i.i, label %ifend.i92.i.i, label %if.entry.i90.i.i

if.entry.i90.i.i:                                 ; preds = %Parser_new_lines.exit.i.i.i
  %memberidx3.i88.i.i = getelementptr inbounds %IdentifierToken, ptr %391, i64 0, i32 2
  %392 = load ptr, ptr %memberidx3.i88.i.i, align 8
  %393 = call ptr @malloc(i32 4)
  store i32 1936287860, ptr %393, align 8
  %394 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %394, align 8
  %memberidx.i.i59.i.i.i = getelementptr inbounds %string, ptr %394, i64 0, i32 1
  store ptr %393, ptr %memberidx.i.i59.i.i.i, align 8
  %memberidx1.i.i60.i.i.i = getelementptr inbounds %string, ptr %394, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i60.i.i.i, align 4
  %memberidx2.i.i61.i.i.i = getelementptr inbounds %string, ptr %394, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i61.i.i.i, align 4
  %memberidx.i62.i.i.i = getelementptr inbounds %string, ptr %392, i64 0, i32 2
  %395 = load i64, ptr %memberidx.i62.i.i.i, align 4
  %.not.i.i89.i.i = icmp eq i64 %395, 4
  br i1 %.not.i.i89.i.i, label %ifend.i.i.i.i, label %ifend.i92.i.i

ifend.i.i.i.i:                                    ; preds = %if.entry.i90.i.i
  %memberidx2.i.i91.i.i = getelementptr inbounds %string, ptr %392, i64 0, i32 1
  %396 = load ptr, ptr %memberidx2.i.i91.i.i, align 8
  %397 = call i64 @memcmp(ptr %396, ptr nonnull %393, i64 4)
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %if.entry4.i.i.i, label %ifend.i92.i.i

ifend.i92.i.i:                                    ; preds = %if.entry.i90.i.i, %if.entry4.i.i.i, %if.entry.i.i94.i.i, %ifend.i.i.i.i, %Parser_new_lines.exit.i.i.i
  %399 = load ptr, ptr %memberidx.i75, align 8
  %400 = load i64, ptr %399, align 4
  %.not56.i.i.i = icmp eq i64 %400, 26
  br i1 %.not56.i.i.i, label %ifend12.i.i.i, label %if.entry10.i.i.i

if.entry4.i.i.i:                                  ; preds = %ifend.i.i.i.i
  store i1 false, ptr %memberidx4.i.i84.i.i, align 1
  %401 = load i64, ptr %memberidx2.i, align 8
  %402 = load ptr, ptr %3, align 8
  %memberidx2.i66.i.i.i = getelementptr inbounds %Array_Token_, ptr %402, i64 0, i32 2
  %403 = load i64, ptr %memberidx2.i66.i.i.i, align 4
  %404 = icmp slt i64 %401, %403
  br i1 %404, label %if.entry.i.i94.i.i, label %ifend.i92.i.i

if.entry.i.i94.i.i:                               ; preds = %if.entry4.i.i.i
  %405 = add nsw i64 %401, 1
  store i64 %405, ptr %memberidx2.i, align 8
  %memberidx.i.i68.i.i.i = getelementptr inbounds %Array_Token_, ptr %402, i64 0, i32 1
  %406 = load ptr, ptr %memberidx.i.i68.i.i.i, align 8
  %ptridx.i.i.i93.i.i = getelementptr inbounds ptr, ptr %406, i64 %405
  %407 = load ptr, ptr %ptridx.i.i.i93.i.i, align 8
  store ptr %407, ptr %memberidx.i75, align 8
  br label %ifend.i92.i.i

if.entry10.i.i.i:                                 ; preds = %ifend.i92.i.i
  %408 = load i1, ptr %memberidx4.i.i84.i.i, align 1
  br i1 %408, label %ifend16.i.i.i, label %if.entry14.i.i.i

ifend12.i.i.i:                                    ; preds = %ifend16.i.i.i, %ifend.i92.i.i
  %409 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %410 = load ptr, ptr %memberidx.i75, align 8
  %411 = load i64, ptr %410, align 4
  %412 = icmp eq i64 %411, 1
  br i1 %412, label %if.entry20.i.i.i, label %else21.i.i.i

if.entry14.i.i.i:                                 ; preds = %if.entry10.i.i.i
  %413 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 3)
  br label %ifend16.i.i.i

ifend16.i.i.i:                                    ; preds = %if.entry14.i.i.i, %if.entry10.i.i.i
  %414 = load ptr, ptr %memberidx1.i.i80.i.i, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %414)
  br label %ifend12.i.i.i

if.entry20.i.i.i:                                 ; preds = %ifend12.i.i.i
  %415 = load i64, ptr %memberidx2.i, align 8
  %416 = load ptr, ptr %3, align 8
  %memberidx2.i71.i.i.i = getelementptr inbounds %Array_Token_, ptr %416, i64 0, i32 2
  %417 = load i64, ptr %memberidx2.i71.i.i.i, align 4
  %418 = icmp slt i64 %415, %417
  br i1 %418, label %if.entry.i75.i.i.i, label %Parser_advance.exit77.i.i.i

if.entry.i75.i.i.i:                               ; preds = %if.entry20.i.i.i
  %419 = add nsw i64 %415, 1
  store i64 %419, ptr %memberidx2.i, align 8
  %memberidx.i.i73.i.i.i = getelementptr inbounds %Array_Token_, ptr %416, i64 0, i32 1
  %420 = load ptr, ptr %memberidx.i.i73.i.i.i, align 8
  %ptridx.i.i74.i.i.i = getelementptr inbounds ptr, ptr %420, i64 %419
  %421 = load ptr, ptr %ptridx.i.i74.i.i.i, align 8
  store ptr %421, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit77.i.i.i

Parser_advance.exit77.i.i.i:                      ; preds = %if.entry.i75.i.i.i, %if.entry20.i.i.i
  %memberidx23.i.i.i = getelementptr inbounds %MethodNode, ptr %358, i64 0, i32 4
  %422 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %422, ptr %memberidx23.i.i.i, align 8
  br label %ifend22.i.i.i

else21.i.i.i:                                     ; preds = %ifend12.i.i.i
  %423 = call ptr @malloc(i32 24)
  %424 = call ptr @malloc(i32 4)
  store i32 1684631414, ptr %424, align 8
  %425 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %425, align 8
  %memberidx.i.i78.i.i.i = getelementptr inbounds %string, ptr %425, i64 0, i32 1
  store ptr %424, ptr %memberidx.i.i78.i.i.i, align 8
  %memberidx1.i.i79.i.i.i = getelementptr inbounds %string, ptr %425, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i79.i.i.i, align 4
  %memberidx2.i.i80.i.i.i = getelementptr inbounds %string, ptr %425, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i80.i.i.i, align 4
  %426 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %426, i8 0, i64 32, i1 false)
  store i64 54, ptr %423, align 4
  %memberidx1.i.i84.i.i.i = getelementptr inbounds %Token, ptr %423, i64 0, i32 1
  store ptr %426, ptr %memberidx1.i.i84.i.i.i, align 8
  %memberidx.i85.i.i.i = getelementptr inbounds %IdentifierToken, ptr %423, i64 0, i32 2
  store ptr %425, ptr %memberidx.i85.i.i.i, align 8
  %memberidx24.i.i.i = getelementptr inbounds %MethodNode, ptr %358, i64 0, i32 4
  %427 = call ptr @malloc(i32 32)
  %428 = load ptr, ptr %memberidx1.i.i84.i.i.i, align 8
  store ptr %428, ptr %427, align 8
  %memberidx.i.i102.i.i.i = getelementptr inbounds %TypeNode, ptr %427, i64 0, i32 1
  store i64 16, ptr %memberidx.i.i102.i.i.i, align 4
  %memberidx.i103.i.i.i = getelementptr inbounds %RecordTypeNode, ptr %427, i64 0, i32 2
  store ptr %423, ptr %memberidx.i103.i.i.i, align 8
  %memberidx1.i104.i.i.i = getelementptr inbounds %RecordTypeNode, ptr %427, i64 0, i32 3
  %429 = call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %429, align 8
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %429, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i.i.i.i, align 4
  %memberidx1.i.i105.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %429, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i105.i.i.i, align 4
  %memberidx2.i.i106.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %429, i64 0, i32 1
  %430 = call ptr @malloc(i32 64)
  store ptr %430, ptr %memberidx2.i.i106.i.i.i, align 8
  store i64 0, ptr %memberidx.i5.i.i.i.i, align 4
  store ptr %429, ptr %memberidx1.i104.i.i.i, align 8
  store ptr %427, ptr %memberidx24.i.i.i, align 8
  br label %ifend22.i.i.i

ifend22.i.i.i:                                    ; preds = %else21.i.i.i, %Parser_advance.exit77.i.i.i
  %431 = load ptr, ptr %memberidx.i75, align 8
  %432 = load i64, ptr %431, align 4
  %433 = icmp eq i64 %432, 33
  %434 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i89.i.i.i = getelementptr inbounds %Array_FloError_, ptr %434, i64 0, i32 2
  %435 = load i64, ptr %memberidx3.i.i89.i.i.i, align 4
  %436 = icmp eq i64 %435, 0
  %437 = and i1 %433, %436
  br i1 %437, label %while.entry.i92.i.i.i.preheader, label %Parser_new_lines.exit101.i.i.i

while.entry.i92.i.i.i.preheader:                  ; preds = %ifend22.i.i.i
  %438 = load ptr, ptr %3, align 8
  %memberidx2.i12.i91.i.i.i = getelementptr inbounds %Array_Token_, ptr %438, i64 0, i32 2
  %memberidx.i.i.i94.i.i.i = getelementptr inbounds %Array_Token_, ptr %438, i64 0, i32 1
  %439 = load i64, ptr %memberidx2.i, align 8
  %440 = load i64, ptr %memberidx2.i12.i91.i.i.i, align 4
  %441 = icmp slt i64 %439, %440
  br i1 %441, label %while.entry.i92.i.i.i, label %while.entry.i92.i.i.i.us

while.entry.i92.i.i.i.us:                         ; preds = %while.entry.i92.i.i.i.preheader, %while.entry.i92.i.i.i.us
  br label %while.entry.i92.i.i.i.us

while.entry.i92.i.i.i:                            ; preds = %while.entry.i92.i.i.i.preheader, %Parser_advance.exit.i100.i.i.i
  %442 = phi i64 [ %449, %Parser_advance.exit.i100.i.i.i ], [ 33, %while.entry.i92.i.i.i.preheader ]
  %443 = phi i64 [ %452, %Parser_advance.exit.i100.i.i.i ], [ %439, %while.entry.i92.i.i.i.preheader ]
  %444 = load i64, ptr %memberidx2.i12.i91.i.i.i, align 4
  %445 = icmp slt i64 %443, %444
  br i1 %445, label %if.entry.i.i96.i.i.i, label %Parser_advance.exit.i100.i.i.i

if.entry.i.i96.i.i.i:                             ; preds = %while.entry.i92.i.i.i
  %446 = add nsw i64 %443, 1
  store i64 %446, ptr %memberidx2.i, align 8
  %447 = load ptr, ptr %memberidx.i.i.i94.i.i.i, align 8
  %ptridx.i.i.i95.i.i.i = getelementptr inbounds ptr, ptr %447, i64 %446
  %448 = load ptr, ptr %ptridx.i.i.i95.i.i.i, align 8
  store ptr %448, ptr %memberidx.i75, align 8
  %.pre413 = load i64, ptr %448, align 4
  %.pre414 = load i64, ptr %memberidx3.i.i89.i.i.i, align 4
  br label %Parser_advance.exit.i100.i.i.i

Parser_advance.exit.i100.i.i.i:                   ; preds = %if.entry.i.i96.i.i.i, %while.entry.i92.i.i.i
  %449 = phi i64 [ %.pre413, %if.entry.i.i96.i.i.i ], [ %442, %while.entry.i92.i.i.i ]
  %450 = phi i64 [ %.pre414, %if.entry.i.i96.i.i.i ], [ 0, %while.entry.i92.i.i.i ]
  %451 = phi i64 [ %.pre413, %if.entry.i.i96.i.i.i ], [ 33, %while.entry.i92.i.i.i ]
  %452 = phi i64 [ %446, %if.entry.i.i96.i.i.i ], [ %443, %while.entry.i92.i.i.i ]
  %453 = icmp eq i64 %451, 33
  %454 = icmp eq i64 %450, 0
  %455 = and i1 %453, %454
  br i1 %455, label %while.entry.i92.i.i.i, label %Parser_new_lines.exit101.i.i.i

Parser_new_lines.exit101.i.i.i:                   ; preds = %Parser_advance.exit.i100.i.i.i, %ifend22.i.i.i
  %456 = phi i64 [ %432, %ifend22.i.i.i ], [ %449, %Parser_advance.exit.i100.i.i.i ]
  %457 = icmp eq i64 %456, 27
  br i1 %457, label %if.entry28.i.i.i, label %else29.i.i.i

if.entry28.i.i.i:                                 ; preds = %Parser_new_lines.exit101.i.i.i
  %memberidx31.i.i.i = getelementptr inbounds %MethodNode, ptr %358, i64 0, i32 2
  %458 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %458, ptr %memberidx31.i.i.i, align 8
  br label %Parser_parse_method.exit.i.i

else29.i.i.i:                                     ; preds = %Parser_new_lines.exit101.i.i.i
  store i1 true, ptr %memberidx5.i.i.i.i, align 1
  br label %Parser_parse_method.exit.i.i

Parser_parse_method.exit.i.i:                     ; preds = %else29.i.i.i, %if.entry28.i.i.i
  %memberidx19.i.i = getelementptr inbounds %MethodNode, ptr %358, i64 0, i32 3
  store i64 %access_modifier.0.i.i, ptr %memberidx19.i.i, align 4
  %459 = load ptr, ptr %memberidx4.i.i146, align 8
  %memberidx.i73.i.i = getelementptr inbounds %Array_MethodNode_, ptr %459, i64 0, i32 2
  %460 = load i64, ptr %memberidx.i73.i.i, align 4
  %memberidx1.i74.i.i = getelementptr inbounds %Array_MethodNode_, ptr %459, i64 0, i32 3
  %461 = load i64, ptr %memberidx1.i74.i.i, align 4
  %.not.i.i.i = icmp slt i64 %460, %461
  br i1 %.not.i.i.i, label %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge, label %if.entry.i77.i.i

Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge: ; preds = %Parser_parse_method.exit.i.i
  %memberidx4.i.i.i.phi.trans.insert = getelementptr inbounds %Array_MethodNode_, ptr %459, i64 0, i32 1
  %.pre416 = load ptr, ptr %memberidx4.i.i.i.phi.trans.insert, align 8
  br label %Array_MethodNode____sl__.exit.i.i

if.entry.i77.i.i:                                 ; preds = %Parser_parse_method.exit.i.i
  %462 = shl nuw i64 %461, 1
  store i64 %462, ptr %memberidx1.i74.i.i, align 4
  %memberidx2.i.i76.i.i = getelementptr inbounds %Array_MethodNode_, ptr %459, i64 0, i32 1
  %463 = load ptr, ptr %memberidx2.i.i76.i.i, align 8
  %464 = shl i64 %461, 4
  %465 = call ptr @realloc(ptr %463, i64 %464)
  store ptr %465, ptr %memberidx2.i.i76.i.i, align 8
  %.pre415 = load i64, ptr %memberidx.i73.i.i, align 4
  br label %Array_MethodNode____sl__.exit.i.i

Array_MethodNode____sl__.exit.i.i:                ; preds = %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge, %if.entry.i77.i.i
  %466 = phi ptr [ %465, %if.entry.i77.i.i ], [ %.pre416, %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge ]
  %467 = phi i64 [ %.pre415, %if.entry.i77.i.i ], [ %460, %Parser_parse_method.exit.i.i.Array_MethodNode____sl__.exit.i.i_crit_edge ]
  %468 = add nsw i64 %467, 1
  store i64 %468, ptr %memberidx.i73.i.i, align 4
  %ptridx.i.i24.i = getelementptr inbounds ptr, ptr %466, i64 %467
  store ptr %358, ptr %ptridx.i.i24.i, align 8
  br label %ifend5.i.i

else17.i.i:                                       ; preds = %Parser_peek.exit105.i.i
  %469 = call ptr @malloc(i32 19)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(19) %469, ptr noundef nonnull align 8 dereferenceable(19) @69, i64 19, i1 false)
  %470 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %470, align 8
  %memberidx.i.i57.i.i = getelementptr inbounds %string, ptr %470, i64 0, i32 1
  store ptr %469, ptr %memberidx.i.i57.i.i, align 8
  %memberidx1.i.i58.i.i = getelementptr inbounds %string, ptr %470, i64 0, i32 2
  store i64 19, ptr %memberidx1.i.i58.i.i, align 4
  %memberidx2.i.i59.i.i = getelementptr inbounds %string, ptr %470, i64 0, i32 3
  store i64 19, ptr %memberidx2.i.i59.i.i, align 4
  %471 = load ptr, ptr %memberidx1.i, align 8
  %472 = call ptr @malloc(i32 24)
  %473 = load ptr, ptr %memberidx.i75, align 8
  %memberidx2.i.i.i167 = getelementptr inbounds %Token, ptr %473, i64 0, i32 1
  %474 = load ptr, ptr %memberidx2.i.i.i167, align 8
  store i64 2, ptr %472, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloError, ptr %472, i64 0, i32 2
  store ptr %474, ptr %memberidx1.i.i.i.i, align 8
  %memberidx2.i.i50.i.i = getelementptr inbounds %FloError, ptr %472, i64 0, i32 1
  store ptr %470, ptr %memberidx2.i.i50.i.i, align 8
  %memberidx.i.i51.i.i = getelementptr inbounds %Array_FloError_, ptr %471, i64 0, i32 2
  %475 = load i64, ptr %memberidx.i.i51.i.i, align 4
  %memberidx1.i4.i.i.i = getelementptr inbounds %Array_FloError_, ptr %471, i64 0, i32 3
  %476 = load i64, ptr %memberidx1.i4.i.i.i, align 4
  %.not.i.i.i.i = icmp slt i64 %475, %476
  br i1 %.not.i.i.i.i, label %else17.i.i.Parser_error.exit.i.i_crit_edge, label %if.entry.i.i53.i.i

else17.i.i.Parser_error.exit.i.i_crit_edge:       ; preds = %else17.i.i
  %memberidx4.i.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %471, i64 0, i32 1
  %.pre410 = load ptr, ptr %memberidx4.i.i.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit.i.i

if.entry.i.i53.i.i:                               ; preds = %else17.i.i
  %477 = shl nuw i64 %476, 1
  store i64 %477, ptr %memberidx1.i4.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %471, i64 0, i32 1
  %478 = load ptr, ptr %memberidx2.i.i.i.i.i, align 8
  %479 = shl i64 %476, 4
  %480 = call ptr @realloc(ptr %478, i64 %479)
  store ptr %480, ptr %memberidx2.i.i.i.i.i, align 8
  %.pre409 = load i64, ptr %memberidx.i.i51.i.i, align 4
  br label %Parser_error.exit.i.i

Parser_error.exit.i.i:                            ; preds = %else17.i.i.Parser_error.exit.i.i_crit_edge, %if.entry.i.i53.i.i
  %481 = phi ptr [ %480, %if.entry.i.i53.i.i ], [ %.pre410, %else17.i.i.Parser_error.exit.i.i_crit_edge ]
  %482 = phi i64 [ %.pre409, %if.entry.i.i53.i.i ], [ %475, %else17.i.i.Parser_error.exit.i.i_crit_edge ]
  %483 = add nsw i64 %482, 1
  store i64 %483, ptr %memberidx.i.i51.i.i, align 4
  %ptridx.i.i.i.i168 = getelementptr inbounds ptr, ptr %481, i64 %482
  store ptr %472, ptr %ptridx.i.i.i.i168, align 8
  br label %Parser_parse_class.exit

Parser_parse_class.exit:                          ; preds = %while.end.i.i, %Parser_error.exit.i.i
  %memberidx.i169 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %159, i64 0, i32 2
  %484 = load i64, ptr %memberidx.i169, align 4
  %memberidx1.i170 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %159, i64 0, i32 3
  %485 = load i64, ptr %memberidx1.i170, align 4
  %.not.i171 = icmp slt i64 %484, %485
  br i1 %.not.i171, label %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge, label %if.entry.i174

Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge: ; preds = %Parser_parse_class.exit
  %memberidx4.i175.phi.trans.insert = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %159, i64 0, i32 1
  %.pre423 = load ptr, ptr %memberidx4.i175.phi.trans.insert, align 8
  br label %Array_ClassDeclarationNode____sl__.exit

if.entry.i174:                                    ; preds = %Parser_parse_class.exit
  %486 = shl nuw i64 %485, 1
  store i64 %486, ptr %memberidx1.i170, align 4
  %memberidx2.i.i173 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %159, i64 0, i32 1
  %487 = load ptr, ptr %memberidx2.i.i173, align 8
  %488 = shl i64 %485, 4
  %489 = call ptr @realloc(ptr %487, i64 %488)
  store ptr %489, ptr %memberidx2.i.i173, align 8
  %.pre422 = load i64, ptr %memberidx.i169, align 4
  br label %Array_ClassDeclarationNode____sl__.exit

Array_ClassDeclarationNode____sl__.exit:          ; preds = %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge, %if.entry.i174
  %490 = phi ptr [ %.pre423, %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge ], [ %489, %if.entry.i174 ]
  %491 = phi i64 [ %484, %Parser_parse_class.exit.Array_ClassDeclarationNode____sl__.exit_crit_edge ], [ %.pre422, %if.entry.i174 ]
  %492 = add nsw i64 %491, 1
  store i64 %492, ptr %memberidx.i169, align 4
  %ptridx.i176 = getelementptr inbounds ptr, ptr %490, i64 %491
  store ptr %167, ptr %ptridx.i176, align 8
  br label %ifend

if.entry11:                                       ; preds = %while.entry
  %493 = load ptr, ptr %memberidx14, align 8
  %494 = load i64, ptr %memberidx2.i, align 8
  %495 = load ptr, ptr %3, align 8
  %memberidx2.i.i179 = getelementptr inbounds %Array_Token_, ptr %495, i64 0, i32 2
  %496 = load i64, ptr %memberidx2.i.i179, align 4
  %497 = icmp slt i64 %494, %496
  br i1 %497, label %if.entry.i.i183, label %Parser_advance.exit.i187

if.entry.i.i183:                                  ; preds = %if.entry11
  %498 = add nsw i64 %494, 1
  store i64 %498, ptr %memberidx2.i, align 8
  %memberidx.i.i.i181 = getelementptr inbounds %Array_Token_, ptr %495, i64 0, i32 1
  %499 = load ptr, ptr %memberidx.i.i.i181, align 8
  %ptridx.i.i.i182 = getelementptr inbounds ptr, ptr %499, i64 %498
  %500 = load ptr, ptr %ptridx.i.i.i182, align 8
  store ptr %500, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i187

Parser_advance.exit.i187:                         ; preds = %if.entry.i.i183, %if.entry11
  %501 = call ptr @malloc(i32 24)
  %502 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %502, ptr %501, align 8
  %memberidx1.i39.i = getelementptr inbounds %EnumNode, ptr %501, i64 0, i32 1
  %503 = call ptr @malloc(i32 32)
  store ptr @VTableArray_EnumNodeField_, ptr %503, align 8
  %memberidx.i.i40.i = getelementptr inbounds %Array_EnumNodeField_, ptr %503, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i40.i, align 4
  %memberidx1.i.i.i184 = getelementptr inbounds %Array_EnumNodeField_, ptr %503, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i184, align 4
  %memberidx2.i.i41.i = getelementptr inbounds %Array_EnumNodeField_, ptr %503, i64 0, i32 1
  %504 = call ptr @malloc(i32 64)
  store ptr %504, ptr %memberidx2.i.i41.i, align 8
  store i64 0, ptr %memberidx.i.i40.i, align 4
  store ptr %503, ptr %memberidx1.i39.i, align 8
  %memberidx4.i43.i = getelementptr inbounds %EnumNode, ptr %501, i64 0, i32 2
  store ptr null, ptr %memberidx4.i43.i, align 8
  %505 = load ptr, ptr %memberidx.i75, align 8
  %506 = load i64, ptr %505, align 4
  %507 = icmp eq i64 %506, 25
  br i1 %507, label %if.entry.i188, label %ifend.i194

if.entry.i188:                                    ; preds = %Parser_advance.exit.i187
  %508 = load i64, ptr %memberidx2.i, align 8
  %509 = load ptr, ptr %3, align 8
  %memberidx2.i45.i = getelementptr inbounds %Array_Token_, ptr %509, i64 0, i32 2
  %510 = load i64, ptr %memberidx2.i45.i, align 4
  %511 = icmp slt i64 %508, %510
  br i1 %511, label %if.entry.i49.i, label %Parser_advance.exit50.i

if.entry.i49.i:                                   ; preds = %if.entry.i188
  %512 = add nsw i64 %508, 1
  store i64 %512, ptr %memberidx2.i, align 8
  %memberidx.i.i47.i = getelementptr inbounds %Array_Token_, ptr %509, i64 0, i32 1
  %513 = load ptr, ptr %memberidx.i.i47.i, align 8
  %ptridx.i.i48.i = getelementptr inbounds ptr, ptr %513, i64 %512
  %514 = load ptr, ptr %ptridx.i.i48.i, align 8
  store ptr %514, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit50.i

Parser_advance.exit50.i:                          ; preds = %if.entry.i49.i, %if.entry.i188
  %515 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %515, ptr %memberidx4.i43.i, align 8
  %516 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %.pre378 = load ptr, ptr %memberidx.i75, align 8
  %.pre379 = load i64, ptr %.pre378, align 4
  br label %ifend.i194

ifend.i194:                                       ; preds = %Parser_advance.exit50.i, %Parser_advance.exit.i187
  %517 = phi i64 [ %.pre379, %Parser_advance.exit50.i ], [ %506, %Parser_advance.exit.i187 ]
  %518 = icmp eq i64 %517, 33
  %519 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i54.i193 = getelementptr inbounds %Array_FloError_, ptr %519, i64 0, i32 2
  %520 = load i64, ptr %memberidx3.i.i54.i193, align 4
  %521 = icmp eq i64 %520, 0
  %522 = and i1 %518, %521
  br i1 %522, label %while.entry.i57.i197.preheader, label %Parser_new_lines.exit66.i206

while.entry.i57.i197.preheader:                   ; preds = %ifend.i194
  %523 = load ptr, ptr %3, align 8
  %memberidx2.i12.i56.i196 = getelementptr inbounds %Array_Token_, ptr %523, i64 0, i32 2
  %memberidx.i.i.i59.i199 = getelementptr inbounds %Array_Token_, ptr %523, i64 0, i32 1
  %.pre380 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i57.i197

while.entry.i57.i197:                             ; preds = %while.entry.i57.i197.preheader, %Parser_advance.exit.i65.i205
  %524 = phi i64 [ %.pre380, %while.entry.i57.i197.preheader ], [ %532, %Parser_advance.exit.i65.i205 ]
  %525 = load i64, ptr %memberidx2.i12.i56.i196, align 4
  %526 = icmp slt i64 %524, %525
  br i1 %526, label %if.entry.i.i61.i201, label %Parser_advance.exit.i65.i205

if.entry.i.i61.i201:                              ; preds = %while.entry.i57.i197
  %527 = add nsw i64 %524, 1
  store i64 %527, ptr %memberidx2.i, align 8
  %528 = load ptr, ptr %memberidx.i.i.i59.i199, align 8
  %ptridx.i.i.i60.i200 = getelementptr inbounds ptr, ptr %528, i64 %527
  %529 = load ptr, ptr %ptridx.i.i.i60.i200, align 8
  store ptr %529, ptr %memberidx.i75, align 8
  %.pre381 = load i64, ptr %529, align 4
  %.pre382 = load i64, ptr %memberidx3.i.i54.i193, align 4
  br label %Parser_advance.exit.i65.i205

Parser_advance.exit.i65.i205:                     ; preds = %if.entry.i.i61.i201, %while.entry.i57.i197
  %530 = phi i64 [ %.pre382, %if.entry.i.i61.i201 ], [ 0, %while.entry.i57.i197 ]
  %531 = phi i64 [ %.pre381, %if.entry.i.i61.i201 ], [ 33, %while.entry.i57.i197 ]
  %532 = phi i64 [ %527, %if.entry.i.i61.i201 ], [ %524, %while.entry.i57.i197 ]
  %533 = icmp eq i64 %531, 33
  %534 = icmp eq i64 %530, 0
  %535 = and i1 %533, %534
  br i1 %535, label %while.entry.i57.i197, label %Parser_new_lines.exit66.i206

Parser_new_lines.exit66.i206:                     ; preds = %Parser_advance.exit.i65.i205, %ifend.i194
  %536 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 27)
  %537 = load ptr, ptr %memberidx.i75, align 8
  %538 = load i64, ptr %537, align 4
  %539 = icmp eq i64 %538, 33
  %540 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i70.i = getelementptr inbounds %Array_FloError_, ptr %540, i64 0, i32 2
  %541 = load i64, ptr %memberidx3.i.i70.i, align 4
  %542 = icmp eq i64 %541, 0
  %543 = and i1 %539, %542
  br i1 %543, label %while.entry.i73.i.preheader, label %Parser_new_lines.exit82.i

while.entry.i73.i.preheader:                      ; preds = %Parser_new_lines.exit66.i206
  %544 = load ptr, ptr %3, align 8
  %memberidx2.i12.i72.i = getelementptr inbounds %Array_Token_, ptr %544, i64 0, i32 2
  %memberidx.i.i.i75.i = getelementptr inbounds %Array_Token_, ptr %544, i64 0, i32 1
  %.pre383 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i73.i

while.entry.i73.i:                                ; preds = %while.entry.i73.i.preheader, %Parser_advance.exit.i81.i
  %545 = phi i64 [ 33, %while.entry.i73.i.preheader ], [ %552, %Parser_advance.exit.i81.i ]
  %546 = phi i64 [ %.pre383, %while.entry.i73.i.preheader ], [ %555, %Parser_advance.exit.i81.i ]
  %547 = load i64, ptr %memberidx2.i12.i72.i, align 4
  %548 = icmp slt i64 %546, %547
  br i1 %548, label %if.entry.i.i77.i, label %Parser_advance.exit.i81.i

if.entry.i.i77.i:                                 ; preds = %while.entry.i73.i
  %549 = add nsw i64 %546, 1
  store i64 %549, ptr %memberidx2.i, align 8
  %550 = load ptr, ptr %memberidx.i.i.i75.i, align 8
  %ptridx.i.i.i76.i = getelementptr inbounds ptr, ptr %550, i64 %549
  %551 = load ptr, ptr %ptridx.i.i.i76.i, align 8
  store ptr %551, ptr %memberidx.i75, align 8
  %.pre384 = load i64, ptr %551, align 4
  %.pre385 = load i64, ptr %memberidx3.i.i70.i, align 4
  br label %Parser_advance.exit.i81.i

Parser_advance.exit.i81.i:                        ; preds = %if.entry.i.i77.i, %while.entry.i73.i
  %552 = phi i64 [ %.pre384, %if.entry.i.i77.i ], [ %545, %while.entry.i73.i ]
  %553 = phi i64 [ %.pre385, %if.entry.i.i77.i ], [ 0, %while.entry.i73.i ]
  %554 = phi i64 [ %.pre384, %if.entry.i.i77.i ], [ 33, %while.entry.i73.i ]
  %555 = phi i64 [ %549, %if.entry.i.i77.i ], [ %546, %while.entry.i73.i ]
  %556 = icmp eq i64 %554, 33
  %557 = icmp eq i64 %553, 0
  %558 = and i1 %556, %557
  br i1 %558, label %while.entry.i73.i, label %Parser_new_lines.exit82.i

Parser_new_lines.exit82.i:                        ; preds = %Parser_advance.exit.i81.i, %Parser_new_lines.exit66.i206
  %559 = phi i64 [ %538, %Parser_new_lines.exit66.i206 ], [ %552, %Parser_advance.exit.i81.i ]
  %560 = icmp eq i64 %559, 54
  br i1 %560, label %while.entry.i207, label %Parser_parse_enum.exit

while.entry.i207:                                 ; preds = %Parser_new_lines.exit82.i, %Parser_new_lines.exit.i227
  %561 = call ptr @malloc(i32 16)
  %562 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %562, ptr %561, align 8
  %memberidx1.i90.i = getelementptr inbounds %EnumNodeField, ptr %561, i64 0, i32 1
  store ptr null, ptr %memberidx1.i90.i, align 8
  %563 = load ptr, ptr %memberidx.i75, align 8
  %564 = load i64, ptr %563, align 4
  %565 = icmp eq i64 %564, 38
  br i1 %565, label %if.entry7.i, label %ifend9.i

if.entry7.i:                                      ; preds = %while.entry.i207
  %566 = load i64, ptr %memberidx2.i, align 8
  %567 = load ptr, ptr %3, align 8
  %memberidx2.i84.i = getelementptr inbounds %Array_Token_, ptr %567, i64 0, i32 2
  %568 = load i64, ptr %memberidx2.i84.i, align 4
  %569 = icmp slt i64 %566, %568
  br i1 %569, label %if.entry.i88.i, label %Parser_advance.exit89.i

if.entry.i88.i:                                   ; preds = %if.entry7.i
  %570 = add nsw i64 %566, 1
  store i64 %570, ptr %memberidx2.i, align 8
  %memberidx.i.i86.i = getelementptr inbounds %Array_Token_, ptr %567, i64 0, i32 1
  %571 = load ptr, ptr %memberidx.i.i86.i, align 8
  %ptridx.i.i87.i = getelementptr inbounds ptr, ptr %571, i64 %570
  %572 = load ptr, ptr %ptridx.i.i87.i, align 8
  store ptr %572, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit89.i

Parser_advance.exit89.i:                          ; preds = %if.entry.i88.i, %if.entry7.i
  %573 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %573, ptr %memberidx1.i90.i, align 8
  br label %ifend9.i

ifend9.i:                                         ; preds = %Parser_advance.exit89.i, %while.entry.i207
  %574 = load ptr, ptr %memberidx1.i39.i, align 8
  %memberidx.i35.i = getelementptr inbounds %Array_EnumNodeField_, ptr %574, i64 0, i32 2
  %575 = load i64, ptr %memberidx.i35.i, align 4
  %memberidx1.i.i210 = getelementptr inbounds %Array_EnumNodeField_, ptr %574, i64 0, i32 3
  %576 = load i64, ptr %memberidx1.i.i210, align 4
  %.not.i.i211 = icmp slt i64 %575, %576
  br i1 %.not.i.i211, label %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge, label %if.entry.i38.i

ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge: ; preds = %ifend9.i
  %memberidx4.i.i212.phi.trans.insert = getelementptr inbounds %Array_EnumNodeField_, ptr %574, i64 0, i32 1
  %.pre387 = load ptr, ptr %memberidx4.i.i212.phi.trans.insert, align 8
  br label %Array_EnumNodeField____sl__.exit.i

if.entry.i38.i:                                   ; preds = %ifend9.i
  %577 = shl nuw i64 %576, 1
  store i64 %577, ptr %memberidx1.i.i210, align 4
  %memberidx2.i.i37.i = getelementptr inbounds %Array_EnumNodeField_, ptr %574, i64 0, i32 1
  %578 = load ptr, ptr %memberidx2.i.i37.i, align 8
  %579 = shl i64 %576, 4
  %580 = call ptr @realloc(ptr %578, i64 %579)
  store ptr %580, ptr %memberidx2.i.i37.i, align 8
  %.pre386 = load i64, ptr %memberidx.i35.i, align 4
  br label %Array_EnumNodeField____sl__.exit.i

Array_EnumNodeField____sl__.exit.i:               ; preds = %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge, %if.entry.i38.i
  %581 = phi ptr [ %580, %if.entry.i38.i ], [ %.pre387, %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge ]
  %582 = phi i64 [ %.pre386, %if.entry.i38.i ], [ %575, %ifend9.i.Array_EnumNodeField____sl__.exit.i_crit_edge ]
  %583 = add nsw i64 %582, 1
  store i64 %583, ptr %memberidx.i35.i, align 4
  %ptridx.i.i213 = getelementptr inbounds ptr, ptr %581, i64 %582
  store ptr %561, ptr %ptridx.i.i213, align 8
  %584 = load ptr, ptr %memberidx.i75, align 8
  %585 = load i64, ptr %584, align 4
  %586 = icmp eq i64 %585, 33
  %587 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i215 = getelementptr inbounds %Array_FloError_, ptr %587, i64 0, i32 2
  %588 = load i64, ptr %memberidx3.i.i.i215, align 4
  %589 = icmp eq i64 %588, 0
  %590 = and i1 %586, %589
  br i1 %590, label %while.entry.i.i218.preheader, label %Parser_new_lines.exit.i227

while.entry.i.i218.preheader:                     ; preds = %Array_EnumNodeField____sl__.exit.i
  %591 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i217 = getelementptr inbounds %Array_Token_, ptr %591, i64 0, i32 2
  %memberidx.i.i.i.i220 = getelementptr inbounds %Array_Token_, ptr %591, i64 0, i32 1
  %592 = load i64, ptr %memberidx2.i, align 8
  %593 = load i64, ptr %memberidx2.i12.i.i217, align 4
  %594 = icmp slt i64 %592, %593
  br i1 %594, label %while.entry.i.i218, label %while.entry.i.i218.us

while.entry.i.i218.us:                            ; preds = %while.entry.i.i218.preheader, %while.entry.i.i218.us
  br label %while.entry.i.i218.us

while.entry.i.i218:                               ; preds = %while.entry.i.i218.preheader, %Parser_advance.exit.i.i226
  %595 = phi i64 [ %602, %Parser_advance.exit.i.i226 ], [ 33, %while.entry.i.i218.preheader ]
  %596 = phi i64 [ %605, %Parser_advance.exit.i.i226 ], [ %592, %while.entry.i.i218.preheader ]
  %597 = load i64, ptr %memberidx2.i12.i.i217, align 4
  %598 = icmp slt i64 %596, %597
  br i1 %598, label %if.entry.i.i.i222, label %Parser_advance.exit.i.i226

if.entry.i.i.i222:                                ; preds = %while.entry.i.i218
  %599 = add nsw i64 %596, 1
  store i64 %599, ptr %memberidx2.i, align 8
  %600 = load ptr, ptr %memberidx.i.i.i.i220, align 8
  %ptridx.i.i.i.i221 = getelementptr inbounds ptr, ptr %600, i64 %599
  %601 = load ptr, ptr %ptridx.i.i.i.i221, align 8
  store ptr %601, ptr %memberidx.i75, align 8
  %.pre388 = load i64, ptr %601, align 4
  %.pre389 = load i64, ptr %memberidx3.i.i.i215, align 4
  br label %Parser_advance.exit.i.i226

Parser_advance.exit.i.i226:                       ; preds = %if.entry.i.i.i222, %while.entry.i.i218
  %602 = phi i64 [ %.pre388, %if.entry.i.i.i222 ], [ %595, %while.entry.i.i218 ]
  %603 = phi i64 [ %.pre389, %if.entry.i.i.i222 ], [ 0, %while.entry.i.i218 ]
  %604 = phi i64 [ %.pre388, %if.entry.i.i.i222 ], [ 33, %while.entry.i.i218 ]
  %605 = phi i64 [ %599, %if.entry.i.i.i222 ], [ %596, %while.entry.i.i218 ]
  %606 = icmp eq i64 %604, 33
  %607 = icmp eq i64 %603, 0
  %608 = and i1 %606, %607
  br i1 %608, label %while.entry.i.i218, label %Parser_new_lines.exit.i227

Parser_new_lines.exit.i227:                       ; preds = %Parser_advance.exit.i.i226, %Array_EnumNodeField____sl__.exit.i
  %609 = phi i64 [ %585, %Array_EnumNodeField____sl__.exit.i ], [ %602, %Parser_advance.exit.i.i226 ]
  %610 = icmp eq i64 %609, 54
  br i1 %610, label %while.entry.i207, label %Parser_parse_enum.exit

Parser_parse_enum.exit:                           ; preds = %Parser_new_lines.exit.i227, %Parser_new_lines.exit82.i
  %611 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 28)
  %memberidx.i228 = getelementptr inbounds %Array_EnumNode_, ptr %493, i64 0, i32 2
  %612 = load i64, ptr %memberidx.i228, align 4
  %memberidx1.i229 = getelementptr inbounds %Array_EnumNode_, ptr %493, i64 0, i32 3
  %613 = load i64, ptr %memberidx1.i229, align 4
  %.not.i230 = icmp slt i64 %612, %613
  br i1 %.not.i230, label %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge, label %if.entry.i233

Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge: ; preds = %Parser_parse_enum.exit
  %memberidx4.i234.phi.trans.insert = getelementptr inbounds %Array_EnumNode_, ptr %493, i64 0, i32 1
  %.pre391 = load ptr, ptr %memberidx4.i234.phi.trans.insert, align 8
  br label %Array_EnumNode____sl__.exit

if.entry.i233:                                    ; preds = %Parser_parse_enum.exit
  %614 = shl nuw i64 %613, 1
  store i64 %614, ptr %memberidx1.i229, align 4
  %memberidx2.i.i232 = getelementptr inbounds %Array_EnumNode_, ptr %493, i64 0, i32 1
  %615 = load ptr, ptr %memberidx2.i.i232, align 8
  %616 = shl i64 %613, 4
  %617 = call ptr @realloc(ptr %615, i64 %616)
  store ptr %617, ptr %memberidx2.i.i232, align 8
  %.pre390 = load i64, ptr %memberidx.i228, align 4
  br label %Array_EnumNode____sl__.exit

Array_EnumNode____sl__.exit:                      ; preds = %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge, %if.entry.i233
  %618 = phi ptr [ %.pre391, %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge ], [ %617, %if.entry.i233 ]
  %619 = phi i64 [ %612, %Parser_parse_enum.exit.Array_EnumNode____sl__.exit_crit_edge ], [ %.pre390, %if.entry.i233 ]
  %620 = add nsw i64 %619, 1
  store i64 %620, ptr %memberidx.i228, align 4
  %ptridx.i235 = getelementptr inbounds ptr, ptr %618, i64 %619
  store ptr %501, ptr %ptridx.i235, align 8
  br label %ifend

if.entry17:                                       ; preds = %while.entry
  %621 = load ptr, ptr %memberidx20, align 8
  %622 = load i64, ptr %memberidx2.i, align 8
  %623 = load ptr, ptr %3, align 8
  %memberidx2.i.i238 = getelementptr inbounds %Array_Token_, ptr %623, i64 0, i32 2
  %624 = load i64, ptr %memberidx2.i.i238, align 4
  %625 = icmp slt i64 %622, %624
  br i1 %625, label %if.entry.i.i242, label %Parser_advance.exit.i246

if.entry.i.i242:                                  ; preds = %if.entry17
  %626 = add nsw i64 %622, 1
  store i64 %626, ptr %memberidx2.i, align 8
  %memberidx.i.i.i240 = getelementptr inbounds %Array_Token_, ptr %623, i64 0, i32 1
  %627 = load ptr, ptr %memberidx.i.i.i240, align 8
  %ptridx.i.i.i241 = getelementptr inbounds ptr, ptr %627, i64 %626
  %628 = load ptr, ptr %ptridx.i.i.i241, align 8
  store ptr %628, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i246

Parser_advance.exit.i246:                         ; preds = %if.entry.i.i242, %if.entry17
  %629 = call ptr @malloc(i32 24)
  %630 = call ptr @malloc(i32 32)
  store ptr @VTableArray_ImportClause_, ptr %630, align 8
  %memberidx.i.i32.i = getelementptr inbounds %Array_ImportClause_, ptr %630, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i32.i, align 4
  %memberidx1.i.i.i243 = getelementptr inbounds %Array_ImportClause_, ptr %630, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i243, align 4
  %memberidx2.i.i.i244 = getelementptr inbounds %Array_ImportClause_, ptr %630, i64 0, i32 1
  %631 = call ptr @malloc(i32 64)
  store ptr %631, ptr %memberidx2.i.i.i244, align 8
  store i64 0, ptr %memberidx.i.i32.i, align 4
  store ptr %630, ptr %629, align 8
  %memberidx3.i34.i = getelementptr inbounds %ImportNode, ptr %629, i64 0, i32 2
  store ptr null, ptr %memberidx3.i34.i, align 8
  %632 = load ptr, ptr %memberidx.i75, align 8
  %633 = load i64, ptr %632, align 4
  %634 = icmp eq i64 %633, 54
  br i1 %634, label %if.entry.i247, label %ifend.i261

if.entry.i247:                                    ; preds = %Parser_advance.exit.i246
  %635 = call ptr @malloc(i32 16)
  %636 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %636, ptr %635, align 8
  %memberidx1.i.i35.i = getelementptr inbounds %ImportClause, ptr %635, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i35.i, align 8
  %637 = load ptr, ptr %memberidx.i75, align 8
  %638 = load i64, ptr %637, align 4
  %639 = icmp eq i64 %638, 74
  br i1 %639, label %if.entry.i39.i, label %Parser_parse_import_clause.exit.i

if.entry.i39.i:                                   ; preds = %if.entry.i247
  %640 = load i64, ptr %memberidx2.i, align 8
  %641 = load ptr, ptr %3, align 8
  %memberidx2.i.i38.i = getelementptr inbounds %Array_Token_, ptr %641, i64 0, i32 2
  %642 = load i64, ptr %memberidx2.i.i38.i, align 4
  %643 = icmp slt i64 %640, %642
  br i1 %643, label %if.entry.i.i.i251, label %Parser_advance.exit.i.i252

if.entry.i.i.i251:                                ; preds = %if.entry.i39.i
  %644 = add nsw i64 %640, 1
  store i64 %644, ptr %memberidx2.i, align 8
  %memberidx.i.i.i.i249 = getelementptr inbounds %Array_Token_, ptr %641, i64 0, i32 1
  %645 = load ptr, ptr %memberidx.i.i.i.i249, align 8
  %ptridx.i.i.i.i250 = getelementptr inbounds ptr, ptr %645, i64 %644
  %646 = load ptr, ptr %ptridx.i.i.i.i250, align 8
  store ptr %646, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i.i252

Parser_advance.exit.i.i252:                       ; preds = %if.entry.i.i.i251, %if.entry.i39.i
  %647 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %647, ptr %memberidx1.i.i35.i, align 8
  br label %Parser_parse_import_clause.exit.i

Parser_parse_import_clause.exit.i:                ; preds = %Parser_advance.exit.i.i252, %if.entry.i247
  %648 = load i64, ptr %memberidx.i.i32.i, align 4
  %649 = load i64, ptr %memberidx1.i.i.i243, align 4
  %.not.i.i254 = icmp slt i64 %648, %649
  br i1 %.not.i.i254, label %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge, label %if.entry.i44.i

Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge: ; preds = %Parser_parse_import_clause.exit.i
  %.pre371 = load ptr, ptr %memberidx2.i.i.i244, align 8
  br label %Array_ImportClause____sl__.exit.i

if.entry.i44.i:                                   ; preds = %Parser_parse_import_clause.exit.i
  %650 = shl nuw i64 %649, 1
  store i64 %650, ptr %memberidx1.i.i.i243, align 4
  %651 = load ptr, ptr %memberidx2.i.i.i244, align 8
  %652 = shl i64 %649, 4
  %653 = call ptr @realloc(ptr %651, i64 %652)
  store ptr %653, ptr %memberidx2.i.i.i244, align 8
  %.pre370 = load i64, ptr %memberidx.i.i32.i, align 4
  br label %Array_ImportClause____sl__.exit.i

Array_ImportClause____sl__.exit.i:                ; preds = %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge, %if.entry.i44.i
  %654 = phi ptr [ %653, %if.entry.i44.i ], [ %.pre371, %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge ]
  %655 = phi i64 [ %.pre370, %if.entry.i44.i ], [ %648, %Parser_parse_import_clause.exit.i.Array_ImportClause____sl__.exit.i_crit_edge ]
  %656 = add nsw i64 %655, 1
  store i64 %656, ptr %memberidx.i.i32.i, align 4
  %ptridx.i.i256 = getelementptr inbounds ptr, ptr %654, i64 %655
  store ptr %635, ptr %ptridx.i.i256, align 8
  %657 = load ptr, ptr %memberidx.i75, align 8
  %658 = load i64, ptr %657, align 4
  %659 = icmp eq i64 %658, 3
  %660 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i47.i259 = getelementptr inbounds %Array_FloError_, ptr %660, i64 0, i32 2
  %661 = load i64, ptr %memberidx3.i47.i259, align 4
  %662 = icmp eq i64 %661, 0
  %663 = and i1 %659, %662
  br i1 %663, label %while.entry.i263, label %while.end.i

ifend.i261thread-pre-split:                       ; preds = %if.entry.i92.i, %if.entry.i.i96.i, %else.i98.i
  %.ph = phi ptr [ %717, %if.entry.i92.i ], [ %725, %if.entry.i.i96.i ], [ %.pre374, %else.i98.i ]
  %.pr = load i64, ptr %.ph, align 4
  br label %ifend.i261

ifend.i261:                                       ; preds = %ifend.i261thread-pre-split, %Parser_advance.exit.i246
  %664 = phi i64 [ %.pr, %ifend.i261thread-pre-split ], [ %633, %Parser_advance.exit.i246 ]
  %665 = phi ptr [ %.ph, %ifend.i261thread-pre-split ], [ %632, %Parser_advance.exit.i246 ]
  %memberidx8.i260 = getelementptr inbounds %ImportNode, ptr %629, i64 0, i32 1
  %666 = icmp eq i64 %664, 34
  br i1 %666, label %if.entry.i51.i, label %else.i.i262

if.entry.i51.i:                                   ; preds = %ifend.i261
  %667 = load i64, ptr %memberidx2.i, align 8
  %668 = load ptr, ptr %3, align 8
  %memberidx2.i.i50.i = getelementptr inbounds %Array_Token_, ptr %668, i64 0, i32 2
  %669 = load i64, ptr %memberidx2.i.i50.i, align 4
  %670 = icmp slt i64 %667, %669
  br i1 %670, label %if.entry.i.i55.i, label %Parser_eat.exit.i

if.entry.i.i55.i:                                 ; preds = %if.entry.i51.i
  %671 = add nsw i64 %667, 1
  store i64 %671, ptr %memberidx2.i, align 8
  %memberidx.i.i.i53.i = getelementptr inbounds %Array_Token_, ptr %668, i64 0, i32 1
  %672 = load ptr, ptr %memberidx.i.i.i53.i, align 8
  %ptridx.i.i.i54.i = getelementptr inbounds ptr, ptr %672, i64 %671
  %673 = load ptr, ptr %ptridx.i.i.i54.i, align 8
  store ptr %673, ptr %memberidx.i75, align 8
  br label %Parser_eat.exit.i

else.i.i262:                                      ; preds = %ifend.i261
  %674 = call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %665, i64 0, i32 1
  %675 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %674, align 4
  %memberidx1.i82.i.i = getelementptr inbounds %Token, ptr %674, i64 0, i32 1
  store ptr %675, ptr %memberidx1.i82.i.i, align 8
  %.pre375 = load ptr, ptr %memberidx.i75, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i51.i, %if.entry.i.i55.i, %else.i.i262
  %676 = phi ptr [ %.pre375, %else.i.i262 ], [ %673, %if.entry.i.i55.i ], [ %665, %if.entry.i51.i ]
  %common.ret.op.i.i = phi ptr [ %674, %else.i.i262 ], [ %665, %if.entry.i.i55.i ], [ %665, %if.entry.i51.i ]
  store ptr %common.ret.op.i.i, ptr %memberidx8.i260, align 8
  %677 = load i64, ptr %676, align 4
  %678 = icmp eq i64 %677, 74
  br i1 %678, label %if.entry11.i, label %Parser_parse_import.exit

while.entry.i263:                                 ; preds = %Array_ImportClause____sl__.exit.i, %Array_ImportClause____sl__.exit84.i
  %679 = load i64, ptr %memberidx2.i, align 8
  %680 = load ptr, ptr %3, align 8
  %memberidx2.i58.i = getelementptr inbounds %Array_Token_, ptr %680, i64 0, i32 2
  %681 = load i64, ptr %memberidx2.i58.i, align 4
  %682 = icmp slt i64 %679, %681
  br i1 %682, label %if.entry.i62.i, label %Parser_advance.exit63.i

if.entry.i62.i:                                   ; preds = %while.entry.i263
  %683 = add nsw i64 %679, 1
  store i64 %683, ptr %memberidx2.i, align 8
  %memberidx.i.i60.i = getelementptr inbounds %Array_Token_, ptr %680, i64 0, i32 1
  %684 = load ptr, ptr %memberidx.i.i60.i, align 8
  %ptridx.i.i61.i = getelementptr inbounds ptr, ptr %684, i64 %683
  %685 = load ptr, ptr %ptridx.i.i61.i, align 8
  store ptr %685, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit63.i

Parser_advance.exit63.i:                          ; preds = %if.entry.i62.i, %while.entry.i263
  %686 = load ptr, ptr %629, align 8
  %687 = call ptr @malloc(i32 16)
  %688 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %688, ptr %687, align 8
  %memberidx1.i.i64.i = getelementptr inbounds %ImportClause, ptr %687, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i64.i, align 8
  %689 = load ptr, ptr %memberidx.i75, align 8
  %690 = load i64, ptr %689, align 4
  %691 = icmp eq i64 %690, 74
  br i1 %691, label %if.entry.i68.i, label %Parser_parse_import_clause.exit75.i

if.entry.i68.i:                                   ; preds = %Parser_advance.exit63.i
  %692 = load i64, ptr %memberidx2.i, align 8
  %693 = load ptr, ptr %3, align 8
  %memberidx2.i.i67.i = getelementptr inbounds %Array_Token_, ptr %693, i64 0, i32 2
  %694 = load i64, ptr %memberidx2.i.i67.i, align 4
  %695 = icmp slt i64 %692, %694
  br i1 %695, label %if.entry.i.i72.i, label %Parser_advance.exit.i74.i

if.entry.i.i72.i:                                 ; preds = %if.entry.i68.i
  %696 = add nsw i64 %692, 1
  store i64 %696, ptr %memberidx2.i, align 8
  %memberidx.i.i.i70.i = getelementptr inbounds %Array_Token_, ptr %693, i64 0, i32 1
  %697 = load ptr, ptr %memberidx.i.i.i70.i, align 8
  %ptridx.i.i.i71.i = getelementptr inbounds ptr, ptr %697, i64 %696
  %698 = load ptr, ptr %ptridx.i.i.i71.i, align 8
  store ptr %698, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit.i74.i

Parser_advance.exit.i74.i:                        ; preds = %if.entry.i.i72.i, %if.entry.i68.i
  %699 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %699, ptr %memberidx1.i.i64.i, align 8
  br label %Parser_parse_import_clause.exit75.i

Parser_parse_import_clause.exit75.i:              ; preds = %Parser_advance.exit.i74.i, %Parser_advance.exit63.i
  %memberidx.i76.i = getelementptr inbounds %Array_ImportClause_, ptr %686, i64 0, i32 2
  %700 = load i64, ptr %memberidx.i76.i, align 4
  %memberidx1.i77.i = getelementptr inbounds %Array_ImportClause_, ptr %686, i64 0, i32 3
  %701 = load i64, ptr %memberidx1.i77.i, align 4
  %.not.i78.i = icmp slt i64 %700, %701
  br i1 %.not.i78.i, label %Parser_parse_import_clause.exit75.i.Array_ImportClause____sl__.exit84.i_crit_edge, label %if.entry.i81.i

Parser_parse_import_clause.exit75.i.Array_ImportClause____sl__.exit84.i_crit_edge: ; preds = %Parser_parse_import_clause.exit75.i
  %memberidx4.i82.i.phi.trans.insert = getelementptr inbounds %Array_ImportClause_, ptr %686, i64 0, i32 1
  %.pre373 = load ptr, ptr %memberidx4.i82.i.phi.trans.insert, align 8
  br label %Array_ImportClause____sl__.exit84.i

if.entry.i81.i:                                   ; preds = %Parser_parse_import_clause.exit75.i
  %702 = shl nuw i64 %701, 1
  store i64 %702, ptr %memberidx1.i77.i, align 4
  %memberidx2.i.i80.i = getelementptr inbounds %Array_ImportClause_, ptr %686, i64 0, i32 1
  %703 = load ptr, ptr %memberidx2.i.i80.i, align 8
  %704 = shl i64 %701, 4
  %705 = call ptr @realloc(ptr %703, i64 %704)
  store ptr %705, ptr %memberidx2.i.i80.i, align 8
  %.pre372 = load i64, ptr %memberidx.i76.i, align 4
  br label %Array_ImportClause____sl__.exit84.i

Array_ImportClause____sl__.exit84.i:              ; preds = %Parser_parse_import_clause.exit75.i.Array_ImportClause____sl__.exit84.i_crit_edge, %if.entry.i81.i
  %706 = phi ptr [ %705, %if.entry.i81.i ], [ %.pre373, %Parser_parse_import_clause.exit75.i.Array_ImportClause____sl__.exit84.i_crit_edge ]
  %707 = phi i64 [ %.pre372, %if.entry.i81.i ], [ %700, %Parser_parse_import_clause.exit75.i.Array_ImportClause____sl__.exit84.i_crit_edge ]
  %708 = add nsw i64 %707, 1
  store i64 %708, ptr %memberidx.i76.i, align 4
  %ptridx.i83.i = getelementptr inbounds ptr, ptr %706, i64 %707
  store ptr %687, ptr %ptridx.i83.i, align 8
  %709 = load ptr, ptr %memberidx.i75, align 8
  %710 = load i64, ptr %709, align 4
  %711 = icmp eq i64 %710, 3
  %712 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i87.i = getelementptr inbounds %Array_FloError_, ptr %712, i64 0, i32 2
  %713 = load i64, ptr %memberidx3.i87.i, align 4
  %714 = icmp eq i64 %713, 0
  %715 = and i1 %711, %714
  br i1 %715, label %while.entry.i263, label %while.end.i

while.end.i:                                      ; preds = %Array_ImportClause____sl__.exit84.i, %Array_ImportClause____sl__.exit.i
  %716 = phi i64 [ %658, %Array_ImportClause____sl__.exit.i ], [ %710, %Array_ImportClause____sl__.exit84.i ]
  %717 = phi ptr [ %657, %Array_ImportClause____sl__.exit.i ], [ %709, %Array_ImportClause____sl__.exit84.i ]
  %718 = icmp eq i64 %716, 69
  br i1 %718, label %if.entry.i92.i, label %else.i98.i

if.entry.i92.i:                                   ; preds = %while.end.i
  %719 = load i64, ptr %memberidx2.i, align 8
  %720 = load ptr, ptr %3, align 8
  %memberidx2.i.i91.i = getelementptr inbounds %Array_Token_, ptr %720, i64 0, i32 2
  %721 = load i64, ptr %memberidx2.i.i91.i, align 4
  %722 = icmp slt i64 %719, %721
  br i1 %722, label %if.entry.i.i96.i, label %ifend.i261thread-pre-split

if.entry.i.i96.i:                                 ; preds = %if.entry.i92.i
  %723 = add nsw i64 %719, 1
  store i64 %723, ptr %memberidx2.i, align 8
  %memberidx.i.i.i94.i = getelementptr inbounds %Array_Token_, ptr %720, i64 0, i32 1
  %724 = load ptr, ptr %memberidx.i.i.i94.i, align 8
  %ptridx.i.i.i95.i = getelementptr inbounds ptr, ptr %724, i64 %723
  %725 = load ptr, ptr %ptridx.i.i.i95.i, align 8
  store ptr %725, ptr %memberidx.i75, align 8
  br label %ifend.i261thread-pre-split

else.i98.i:                                       ; preds = %while.end.i
  %726 = call ptr @malloc(i32 16)
  %memberidx35.i99.i = getelementptr inbounds %Token, ptr %717, i64 0, i32 1
  %727 = load ptr, ptr %memberidx35.i99.i, align 8
  store i64 46, ptr %726, align 4
  %memberidx1.i82.i100.i = getelementptr inbounds %Token, ptr %726, i64 0, i32 1
  store ptr %727, ptr %memberidx1.i82.i100.i, align 8
  %.pre374 = load ptr, ptr %memberidx.i75, align 8
  br label %ifend.i261thread-pre-split

if.entry11.i:                                     ; preds = %Parser_eat.exit.i
  %728 = load i64, ptr %memberidx2.i, align 8
  %729 = load ptr, ptr %3, align 8
  %memberidx2.i103.i = getelementptr inbounds %Array_Token_, ptr %729, i64 0, i32 2
  %730 = load i64, ptr %memberidx2.i103.i, align 4
  %731 = icmp slt i64 %728, %730
  br i1 %731, label %if.entry.i107.i, label %Parser_advance.exit108.i

if.entry.i107.i:                                  ; preds = %if.entry11.i
  %732 = add nsw i64 %728, 1
  store i64 %732, ptr %memberidx2.i, align 8
  %memberidx.i.i105.i = getelementptr inbounds %Array_Token_, ptr %729, i64 0, i32 1
  %733 = load ptr, ptr %memberidx.i.i105.i, align 8
  %ptridx.i.i106.i = getelementptr inbounds ptr, ptr %733, i64 %732
  %734 = load ptr, ptr %ptridx.i.i106.i, align 8
  store ptr %734, ptr %memberidx.i75, align 8
  br label %Parser_advance.exit108.i

Parser_advance.exit108.i:                         ; preds = %if.entry.i107.i, %if.entry11.i
  %735 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %735, ptr %memberidx3.i34.i, align 8
  br label %Parser_parse_import.exit

Parser_parse_import.exit:                         ; preds = %Parser_eat.exit.i, %Parser_advance.exit108.i
  %memberidx.i264 = getelementptr inbounds %Array_ImportNode_, ptr %621, i64 0, i32 2
  %736 = load i64, ptr %memberidx.i264, align 4
  %memberidx1.i265 = getelementptr inbounds %Array_ImportNode_, ptr %621, i64 0, i32 3
  %737 = load i64, ptr %memberidx1.i265, align 4
  %.not.i266 = icmp slt i64 %736, %737
  br i1 %.not.i266, label %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge, label %if.entry.i269

Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge: ; preds = %Parser_parse_import.exit
  %memberidx4.i270.phi.trans.insert = getelementptr inbounds %Array_ImportNode_, ptr %621, i64 0, i32 1
  %.pre377 = load ptr, ptr %memberidx4.i270.phi.trans.insert, align 8
  br label %Array_ImportNode____sl__.exit

if.entry.i269:                                    ; preds = %Parser_parse_import.exit
  %738 = shl nuw i64 %737, 1
  store i64 %738, ptr %memberidx1.i265, align 4
  %memberidx2.i.i268 = getelementptr inbounds %Array_ImportNode_, ptr %621, i64 0, i32 1
  %739 = load ptr, ptr %memberidx2.i.i268, align 8
  %740 = shl i64 %737, 4
  %741 = call ptr @realloc(ptr %739, i64 %740)
  store ptr %741, ptr %memberidx2.i.i268, align 8
  %.pre376 = load i64, ptr %memberidx.i264, align 4
  br label %Array_ImportNode____sl__.exit

Array_ImportNode____sl__.exit:                    ; preds = %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge, %if.entry.i269
  %742 = phi ptr [ %.pre377, %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge ], [ %741, %if.entry.i269 ]
  %743 = phi i64 [ %736, %Parser_parse_import.exit.Array_ImportNode____sl__.exit_crit_edge ], [ %.pre376, %if.entry.i269 ]
  %744 = add nsw i64 %743, 1
  store i64 %744, ptr %memberidx.i264, align 4
  %ptridx.i271 = getelementptr inbounds ptr, ptr %742, i64 %743
  store ptr %629, ptr %ptridx.i271, align 8
  br label %ifend

if.entry23:                                       ; preds = %while.entry
  %745 = load ptr, ptr %memberidx26, align 8
  %746 = call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %3)
  %memberidx.i273 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %745, i64 0, i32 2
  %747 = load i64, ptr %memberidx.i273, align 4
  %memberidx1.i274 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %745, i64 0, i32 3
  %748 = load i64, ptr %memberidx1.i274, align 4
  %.not.i275 = icmp slt i64 %747, %748
  br i1 %.not.i275, label %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge, label %if.entry.i278

if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge: ; preds = %if.entry23
  %memberidx4.i279.phi.trans.insert = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %745, i64 0, i32 1
  %.pre369 = load ptr, ptr %memberidx4.i279.phi.trans.insert, align 8
  br label %Array_ConstDeclarationStatement____sl__.exit

if.entry.i278:                                    ; preds = %if.entry23
  %749 = shl nuw i64 %748, 1
  store i64 %749, ptr %memberidx1.i274, align 4
  %memberidx2.i.i277 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %745, i64 0, i32 1
  %750 = load ptr, ptr %memberidx2.i.i277, align 8
  %751 = shl i64 %748, 4
  %752 = call ptr @realloc(ptr %750, i64 %751)
  store ptr %752, ptr %memberidx2.i.i277, align 8
  %.pre368 = load i64, ptr %memberidx.i273, align 4
  br label %Array_ConstDeclarationStatement____sl__.exit

Array_ConstDeclarationStatement____sl__.exit:     ; preds = %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge, %if.entry.i278
  %753 = phi ptr [ %.pre369, %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge ], [ %752, %if.entry.i278 ]
  %754 = phi i64 [ %747, %if.entry23.Array_ConstDeclarationStatement____sl__.exit_crit_edge ], [ %.pre368, %if.entry.i278 ]
  %755 = add nsw i64 %754, 1
  store i64 %755, ptr %memberidx.i273, align 4
  %ptridx.i280 = getelementptr inbounds ptr, ptr %753, i64 %754
  store ptr %746, ptr %ptridx.i280, align 8
  br label %ifend

if.entry29:                                       ; preds = %while.entry
  %756 = load ptr, ptr %memberidx32, align 8
  %757 = call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %3)
  %memberidx.i282 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %756, i64 0, i32 2
  %758 = load i64, ptr %memberidx.i282, align 4
  %memberidx1.i283 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %756, i64 0, i32 3
  %759 = load i64, ptr %memberidx1.i283, align 4
  %.not.i284 = icmp slt i64 %758, %759
  br i1 %.not.i284, label %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge, label %if.entry.i287

if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge: ; preds = %if.entry29
  %memberidx4.i288.phi.trans.insert = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %756, i64 0, i32 1
  %.pre367 = load ptr, ptr %memberidx4.i288.phi.trans.insert, align 8
  br label %Array_VarDeclarationStatement____sl__.exit

if.entry.i287:                                    ; preds = %if.entry29
  %760 = shl nuw i64 %759, 1
  store i64 %760, ptr %memberidx1.i283, align 4
  %memberidx2.i.i286 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %756, i64 0, i32 1
  %761 = load ptr, ptr %memberidx2.i.i286, align 8
  %762 = shl i64 %759, 4
  %763 = call ptr @realloc(ptr %761, i64 %762)
  store ptr %763, ptr %memberidx2.i.i286, align 8
  %.pre366 = load i64, ptr %memberidx.i282, align 4
  br label %Array_VarDeclarationStatement____sl__.exit

Array_VarDeclarationStatement____sl__.exit:       ; preds = %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge, %if.entry.i287
  %764 = phi ptr [ %.pre367, %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge ], [ %763, %if.entry.i287 ]
  %765 = phi i64 [ %758, %if.entry29.Array_VarDeclarationStatement____sl__.exit_crit_edge ], [ %.pre366, %if.entry.i287 ]
  %766 = add nsw i64 %765, 1
  store i64 %766, ptr %memberidx.i282, align 4
  %ptridx.i289 = getelementptr inbounds ptr, ptr %764, i64 %765
  store ptr %757, ptr %ptridx.i289, align 8
  br label %ifend

else30:                                           ; preds = %while.entry
  %memberidx36 = getelementptr inbounds %IdentifierToken, ptr %35, i64 0, i32 2
  %767 = load ptr, ptr %memberidx36, align 8
  %768 = call ptr @malloc(i32 4)
  store i32 1701869940, ptr %768, align 8
  %769 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %769, align 8
  %memberidx.i.i291 = getelementptr inbounds %string, ptr %769, i64 0, i32 1
  store ptr %768, ptr %memberidx.i.i291, align 8
  %memberidx1.i.i292 = getelementptr inbounds %string, ptr %769, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i292, align 4
  %memberidx2.i.i293 = getelementptr inbounds %string, ptr %769, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i293, align 4
  %memberidx.i294 = getelementptr inbounds %string, ptr %767, i64 0, i32 2
  %770 = load i64, ptr %memberidx.i294, align 4
  %.not.i296 = icmp eq i64 %770, 4
  br i1 %.not.i296, label %string___eq__.exit, label %else38

string___eq__.exit:                               ; preds = %else30
  %771 = icmp eq i64 %34, 54
  %memberidx2.i297 = getelementptr inbounds %string, ptr %767, i64 0, i32 1
  %772 = load ptr, ptr %memberidx2.i297, align 8
  %773 = call i64 @memcmp(ptr %772, ptr nonnull %768, i64 4)
  %774 = icmp eq i64 %773, 0
  %775 = and i1 %771, %774
  br i1 %775, label %if.entry37, label %else38

if.entry37:                                       ; preds = %string___eq__.exit
  %776 = load ptr, ptr %memberidx40, align 8
  %777 = load i64, ptr %memberidx2.i, align 8
  %778 = load ptr, ptr %3, align 8
  %memberidx2.i.i301 = getelementptr inbounds %Array_Token_, ptr %778, i64 0, i32 2
  %779 = load i64, ptr %memberidx2.i.i301, align 4
  %780 = icmp slt i64 %777, %779
  br i1 %780, label %if.entry.i.i305, label %Parser_parse_type_alias.exit

if.entry.i.i305:                                  ; preds = %if.entry37
  %781 = add nsw i64 %777, 1
  store i64 %781, ptr %memberidx2.i, align 8
  %memberidx.i.i.i303 = getelementptr inbounds %Array_Token_, ptr %778, i64 0, i32 1
  %782 = load ptr, ptr %memberidx.i.i.i303, align 8
  %ptridx.i.i.i304 = getelementptr inbounds ptr, ptr %782, i64 %781
  %783 = load ptr, ptr %ptridx.i.i.i304, align 8
  store ptr %783, ptr %memberidx.i75, align 8
  br label %Parser_parse_type_alias.exit

Parser_parse_type_alias.exit:                     ; preds = %if.entry37, %if.entry.i.i305
  %784 = call ptr @malloc(i32 16)
  %785 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 54)
  store ptr %785, ptr %784, align 8
  %786 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 38)
  %memberidx.i306 = getelementptr inbounds %TypeAliasNode, ptr %784, i64 0, i32 1
  %787 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %787, ptr %memberidx.i306, align 8
  %memberidx.i93 = getelementptr inbounds %Array_TypeAliasNode_, ptr %776, i64 0, i32 2
  %788 = load i64, ptr %memberidx.i93, align 4
  %memberidx1.i94 = getelementptr inbounds %Array_TypeAliasNode_, ptr %776, i64 0, i32 3
  %789 = load i64, ptr %memberidx1.i94, align 4
  %.not.i = icmp slt i64 %788, %789
  br i1 %.not.i, label %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge, label %if.entry.i97

Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge: ; preds = %Parser_parse_type_alias.exit
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_TypeAliasNode_, ptr %776, i64 0, i32 1
  %.pre435 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_TypeAliasNode____sl__.exit

if.entry.i97:                                     ; preds = %Parser_parse_type_alias.exit
  %790 = shl nuw i64 %789, 1
  store i64 %790, ptr %memberidx1.i94, align 4
  %memberidx2.i.i96 = getelementptr inbounds %Array_TypeAliasNode_, ptr %776, i64 0, i32 1
  %791 = load ptr, ptr %memberidx2.i.i96, align 8
  %792 = shl i64 %789, 4
  %793 = call ptr @realloc(ptr %791, i64 %792)
  store ptr %793, ptr %memberidx2.i.i96, align 8
  %.pre434 = load i64, ptr %memberidx.i93, align 4
  br label %Array_TypeAliasNode____sl__.exit

Array_TypeAliasNode____sl__.exit:                 ; preds = %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge, %if.entry.i97
  %794 = phi ptr [ %.pre435, %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge ], [ %793, %if.entry.i97 ]
  %795 = phi i64 [ %788, %Parser_parse_type_alias.exit.Array_TypeAliasNode____sl__.exit_crit_edge ], [ %.pre434, %if.entry.i97 ]
  %796 = add nsw i64 %795, 1
  store i64 %796, ptr %memberidx.i93, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %794, i64 %795
  store ptr %784, ptr %ptridx.i, align 8
  br label %ifend

else38:                                           ; preds = %else30, %string___eq__.exit
  %797 = call ptr @malloc(i32 79)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(79) %797, ptr noundef nonnull align 8 dereferenceable(79) @70, i64 79, i1 false)
  %798 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %798, align 8
  %memberidx.i.i80 = getelementptr inbounds %string, ptr %798, i64 0, i32 1
  store ptr %797, ptr %memberidx.i.i80, align 8
  %memberidx1.i.i81 = getelementptr inbounds %string, ptr %798, i64 0, i32 2
  store i64 79, ptr %memberidx1.i.i81, align 4
  %memberidx2.i.i82 = getelementptr inbounds %string, ptr %798, i64 0, i32 3
  store i64 79, ptr %memberidx2.i.i82, align 4
  %799 = load ptr, ptr %memberidx1.i, align 8
  %800 = call ptr @malloc(i32 24)
  %801 = load ptr, ptr %memberidx.i75, align 8
  %memberidx2.i70 = getelementptr inbounds %Token, ptr %801, i64 0, i32 1
  %802 = load ptr, ptr %memberidx2.i70, align 8
  store i64 2, ptr %800, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %800, i64 0, i32 2
  store ptr %802, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %800, i64 0, i32 1
  store ptr %798, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %799, i64 0, i32 2
  %803 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %799, i64 0, i32 3
  %804 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %803, %804
  br i1 %.not.i.i, label %else38.Parser_error.exit_crit_edge, label %if.entry.i.i

else38.Parser_error.exit_crit_edge:               ; preds = %else38
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %799, i64 0, i32 1
  %.pre433 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %else38
  %805 = shl nuw i64 %804, 1
  store i64 %805, ptr %memberidx1.i4.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %799, i64 0, i32 1
  %806 = load ptr, ptr %memberidx2.i.i.i, align 8
  %807 = shl i64 %804, 4
  %808 = call ptr @realloc(ptr %806, i64 %807)
  store ptr %808, ptr %memberidx2.i.i.i, align 8
  %.pre432 = load i64, ptr %memberidx.i.i, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %else38.Parser_error.exit_crit_edge, %if.entry.i.i
  %809 = phi ptr [ %.pre433, %else38.Parser_error.exit_crit_edge ], [ %808, %if.entry.i.i ]
  %810 = phi i64 [ %803, %else38.Parser_error.exit_crit_edge ], [ %.pre432, %if.entry.i.i ]
  %811 = add nsw i64 %810, 1
  store i64 %811, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %809, i64 %810
  store ptr %800, ptr %ptridx.i.i, align 8
  br label %ifend
}

define internal fastcc ptr @Parser_parse_block(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 16)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i77 = getelementptr inbounds %BlockNode, ptr %2, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_StatementNode_, ptr %5, align 8
  %memberidx.i.i78 = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i78, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i79 = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i.i79, align 8
  store i64 0, ptr %memberidx.i.i78, align 4
  store ptr %5, ptr %memberidx.i77, align 8
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 33
  %memberidx2.i.i63 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %memberidx2.i.i63, align 8
  %memberidx3.i.i64 = getelementptr inbounds %Array_FloError_, ptr %10, i64 0, i32 2
  %11 = load i64, ptr %memberidx3.i.i64, align 4
  %12 = icmp eq i64 %11, 0
  %13 = and i1 %9, %12
  br i1 %13, label %while.entry.i67.preheader, label %Parser_new_lines.exit76

while.entry.i67.preheader:                        ; preds = %1
  %memberidx.i11.i65 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12.i66 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %memberidx.i.i.i69 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i11.i65, align 4
  %16 = load i64, ptr %memberidx2.i12.i66, align 4
  %17 = icmp slt i64 %15, %16
  br i1 %17, label %while.entry.i67, label %while.entry.i67.us

while.entry.i67.us:                               ; preds = %while.entry.i67.preheader, %while.entry.i67.us
  br label %while.entry.i67.us

while.entry.i67:                                  ; preds = %while.entry.i67.preheader, %Parser_advance.exit.i75
  %18 = phi i64 [ %26, %Parser_advance.exit.i75 ], [ 0, %while.entry.i67.preheader ]
  %19 = phi i64 [ %27, %Parser_advance.exit.i75 ], [ 33, %while.entry.i67.preheader ]
  %20 = phi i64 [ %30, %Parser_advance.exit.i75 ], [ %15, %while.entry.i67.preheader ]
  %21 = load i64, ptr %memberidx2.i12.i66, align 4
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %if.entry.i.i71, label %Parser_advance.exit.i75

if.entry.i.i71:                                   ; preds = %while.entry.i67
  %23 = add nsw i64 %20, 1
  store i64 %23, ptr %memberidx.i11.i65, align 4
  %24 = load ptr, ptr %memberidx.i.i.i69, align 8
  %ptridx.i.i.i70 = getelementptr inbounds ptr, ptr %24, i64 %23
  %25 = load ptr, ptr %ptridx.i.i.i70, align 8
  store ptr %25, ptr %memberidx, align 8
  %.pre = load i64, ptr %25, align 4
  %.pre92 = load i64, ptr %memberidx3.i.i64, align 4
  br label %Parser_advance.exit.i75

Parser_advance.exit.i75:                          ; preds = %if.entry.i.i71, %while.entry.i67
  %26 = phi i64 [ %.pre92, %if.entry.i.i71 ], [ %18, %while.entry.i67 ]
  %27 = phi i64 [ %.pre, %if.entry.i.i71 ], [ %19, %while.entry.i67 ]
  %28 = phi i64 [ %.pre92, %if.entry.i.i71 ], [ 0, %while.entry.i67 ]
  %29 = phi i64 [ %.pre, %if.entry.i.i71 ], [ 33, %while.entry.i67 ]
  %30 = phi i64 [ %23, %if.entry.i.i71 ], [ %20, %while.entry.i67 ]
  %31 = icmp eq i64 %29, 33
  %32 = icmp eq i64 %28, 0
  %33 = and i1 %31, %32
  br i1 %33, label %while.entry.i67, label %Parser_new_lines.exit76

Parser_new_lines.exit76:                          ; preds = %Parser_advance.exit.i75, %1
  %34 = phi i64 [ %11, %1 ], [ %26, %Parser_advance.exit.i75 ]
  %35 = phi i64 [ %8, %1 ], [ %27, %Parser_advance.exit.i75 ]
  %36 = icmp eq i64 %35, 27
  br i1 %36, label %if.entry, label %else

if.entry:                                         ; preds = %Parser_new_lines.exit76
  %memberidx.i56 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %37 = load i64, ptr %memberidx.i56, align 4
  %38 = load ptr, ptr %0, align 8
  %memberidx2.i57 = getelementptr inbounds %Array_Token_, ptr %38, i64 0, i32 2
  %39 = load i64, ptr %memberidx2.i57, align 4
  %40 = icmp slt i64 %37, %39
  br i1 %40, label %Parser_advance.exit, label %Parser_new_lines.exit55

Parser_advance.exit:                              ; preds = %if.entry
  %41 = add nsw i64 %37, 1
  store i64 %41, ptr %memberidx.i56, align 4
  %memberidx.i.i59 = getelementptr inbounds %Array_Token_, ptr %38, i64 0, i32 1
  %42 = load ptr, ptr %memberidx.i.i59, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %42, i64 %41
  %43 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %43, ptr %memberidx, align 8
  %.pre95 = load i64, ptr %43, align 4
  %.pre96 = load i64, ptr %memberidx3.i.i64, align 4
  %44 = icmp eq i64 %.pre95, 33
  %45 = icmp eq i64 %.pre96, 0
  %46 = and i1 %44, %45
  br i1 %46, label %while.entry.i46.preheader, label %Parser_new_lines.exit55

while.entry.i46.preheader:                        ; preds = %Parser_advance.exit
  %memberidx.i.i.i48 = getelementptr inbounds %Array_Token_, ptr %38, i64 0, i32 1
  %47 = load i64, ptr %memberidx2.i57, align 4
  %48 = icmp slt i64 %41, %47
  br i1 %48, label %while.entry.i46, label %while.entry.i46.us

while.entry.i46.us:                               ; preds = %while.entry.i46.preheader, %while.entry.i46.us
  br label %while.entry.i46.us

while.entry.i46:                                  ; preds = %while.entry.i46.preheader, %Parser_advance.exit.i54
  %49 = phi i64 [ %57, %Parser_advance.exit.i54 ], [ 33, %while.entry.i46.preheader ]
  %50 = phi i64 [ %58, %Parser_advance.exit.i54 ], [ 0, %while.entry.i46.preheader ]
  %51 = phi i64 [ %61, %Parser_advance.exit.i54 ], [ %41, %while.entry.i46.preheader ]
  %52 = load i64, ptr %memberidx2.i57, align 4
  %53 = icmp slt i64 %51, %52
  br i1 %53, label %if.entry.i.i50, label %Parser_advance.exit.i54

if.entry.i.i50:                                   ; preds = %while.entry.i46
  %54 = add nsw i64 %51, 1
  store i64 %54, ptr %memberidx.i56, align 4
  %55 = load ptr, ptr %memberidx.i.i.i48, align 8
  %ptridx.i.i.i49 = getelementptr inbounds ptr, ptr %55, i64 %54
  %56 = load ptr, ptr %ptridx.i.i.i49, align 8
  store ptr %56, ptr %memberidx, align 8
  %.pre97 = load i64, ptr %56, align 4
  %.pre98 = load i64, ptr %memberidx3.i.i64, align 4
  br label %Parser_advance.exit.i54

Parser_advance.exit.i54:                          ; preds = %if.entry.i.i50, %while.entry.i46
  %57 = phi i64 [ %.pre97, %if.entry.i.i50 ], [ %49, %while.entry.i46 ]
  %58 = phi i64 [ %.pre98, %if.entry.i.i50 ], [ %50, %while.entry.i46 ]
  %59 = phi i64 [ %.pre98, %if.entry.i.i50 ], [ 0, %while.entry.i46 ]
  %60 = phi i64 [ %.pre97, %if.entry.i.i50 ], [ 33, %while.entry.i46 ]
  %61 = phi i64 [ %54, %if.entry.i.i50 ], [ %51, %while.entry.i46 ]
  %62 = icmp eq i64 %60, 33
  %63 = icmp eq i64 %59, 0
  %64 = and i1 %62, %63
  br i1 %64, label %while.entry.i46, label %Parser_new_lines.exit55

Parser_new_lines.exit55:                          ; preds = %Parser_advance.exit.i54, %if.entry, %Parser_advance.exit
  %65 = phi i64 [ %.pre95, %Parser_advance.exit ], [ 27, %if.entry ], [ %57, %Parser_advance.exit.i54 ]
  %66 = phi i64 [ %.pre96, %Parser_advance.exit ], [ %34, %if.entry ], [ %58, %Parser_advance.exit.i54 ]
  %.fr = freeze i64 %66
  %67 = icmp eq i64 %.fr, 0
  br i1 %67, label %switch.early.test, label %while.end

switch.early.test:                                ; preds = %Parser_new_lines.exit55
  switch i64 %65, label %while.entry [
    i64 46, label %while.end
    i64 28, label %while.end
  ]

else:                                             ; preds = %Parser_new_lines.exit76
  %68 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %69 = load i64, ptr %memberidx.i.i78, align 4
  %70 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i30 = icmp slt i64 %69, %70
  br i1 %.not.i30, label %else.Array_StatementNode____sl__.exit36_crit_edge, label %if.entry.i33

else.Array_StatementNode____sl__.exit36_crit_edge: ; preds = %else
  %.pre94 = load ptr, ptr %memberidx2.i.i79, align 8
  br label %Array_StatementNode____sl__.exit36

if.entry.i33:                                     ; preds = %else
  %71 = shl nuw i64 %70, 1
  store i64 %71, ptr %memberidx1.i.i, align 4
  %72 = load ptr, ptr %memberidx2.i.i79, align 8
  %73 = shl i64 %70, 4
  %74 = tail call ptr @realloc(ptr %72, i64 %73)
  store ptr %74, ptr %memberidx2.i.i79, align 8
  %.pre93 = load i64, ptr %memberidx.i.i78, align 4
  br label %Array_StatementNode____sl__.exit36

Array_StatementNode____sl__.exit36:               ; preds = %else.Array_StatementNode____sl__.exit36_crit_edge, %if.entry.i33
  %75 = phi ptr [ %.pre94, %else.Array_StatementNode____sl__.exit36_crit_edge ], [ %74, %if.entry.i33 ]
  %76 = phi i64 [ %69, %else.Array_StatementNode____sl__.exit36_crit_edge ], [ %.pre93, %if.entry.i33 ]
  %77 = add nsw i64 %76, 1
  store i64 %77, ptr %memberidx.i.i78, align 4
  %ptridx.i35 = getelementptr inbounds ptr, ptr %75, i64 %76
  store ptr %68, ptr %ptridx.i35, align 8
  br label %ifend

ifend:                                            ; preds = %Array_StatementNode____sl__.exit36, %while.end
  ret ptr %2

while.entry:                                      ; preds = %switch.early.test, %switch.early.test84
  %78 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %79 = load i64, ptr %memberidx.i.i78, align 4
  %80 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i = icmp slt i64 %79, %80
  br i1 %.not.i, label %while.entry.Array_StatementNode____sl__.exit_crit_edge, label %if.entry.i

while.entry.Array_StatementNode____sl__.exit_crit_edge: ; preds = %while.entry
  %.pre100 = load ptr, ptr %memberidx2.i.i79, align 8
  br label %Array_StatementNode____sl__.exit

if.entry.i:                                       ; preds = %while.entry
  %81 = shl nuw i64 %80, 1
  store i64 %81, ptr %memberidx1.i.i, align 4
  %82 = load ptr, ptr %memberidx2.i.i79, align 8
  %83 = shl i64 %80, 4
  %84 = tail call ptr @realloc(ptr %82, i64 %83)
  store ptr %84, ptr %memberidx2.i.i79, align 8
  %.pre99 = load i64, ptr %memberidx.i.i78, align 4
  br label %Array_StatementNode____sl__.exit

Array_StatementNode____sl__.exit:                 ; preds = %while.entry.Array_StatementNode____sl__.exit_crit_edge, %if.entry.i
  %85 = phi ptr [ %.pre100, %while.entry.Array_StatementNode____sl__.exit_crit_edge ], [ %84, %if.entry.i ]
  %86 = phi i64 [ %79, %while.entry.Array_StatementNode____sl__.exit_crit_edge ], [ %.pre99, %if.entry.i ]
  %87 = add nsw i64 %86, 1
  store i64 %87, ptr %memberidx.i.i78, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %85, i64 %86
  store ptr %78, ptr %ptridx.i, align 8
  %88 = load ptr, ptr %memberidx, align 8
  %89 = load i64, ptr %88, align 4
  %90 = icmp eq i64 %89, 33
  %91 = load ptr, ptr %memberidx2.i.i63, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 2
  %92 = load i64, ptr %memberidx3.i.i, align 4
  %93 = icmp eq i64 %92, 0
  %94 = and i1 %90, %93
  br i1 %94, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %Array_StatementNode____sl__.exit
  %95 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %95, i64 0, i32 2
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %95, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i56, align 4
  %97 = load i64, ptr %memberidx2.i12.i, align 4
  %98 = icmp slt i64 %96, %97
  br i1 %98, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %99 = phi i64 [ %107, %Parser_advance.exit.i ], [ 33, %while.entry.i.preheader ]
  %100 = phi i64 [ %108, %Parser_advance.exit.i ], [ 0, %while.entry.i.preheader ]
  %101 = phi i64 [ %111, %Parser_advance.exit.i ], [ %96, %while.entry.i.preheader ]
  %102 = load i64, ptr %memberidx2.i12.i, align 4
  %103 = icmp slt i64 %101, %102
  br i1 %103, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %104 = add nsw i64 %101, 1
  store i64 %104, ptr %memberidx.i56, align 4
  %105 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %105, i64 %104
  %106 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %106, ptr %memberidx, align 8
  %.pre101 = load i64, ptr %106, align 4
  %.pre102 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %107 = phi i64 [ %.pre101, %if.entry.i.i ], [ %99, %while.entry.i ]
  %108 = phi i64 [ %.pre102, %if.entry.i.i ], [ %100, %while.entry.i ]
  %109 = phi i64 [ %.pre102, %if.entry.i.i ], [ 0, %while.entry.i ]
  %110 = phi i64 [ %.pre101, %if.entry.i.i ], [ 33, %while.entry.i ]
  %111 = phi i64 [ %104, %if.entry.i.i ], [ %101, %while.entry.i ]
  %112 = icmp eq i64 %110, 33
  %113 = icmp eq i64 %109, 0
  %114 = and i1 %112, %113
  br i1 %114, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %Array_StatementNode____sl__.exit
  %115 = phi i64 [ %89, %Array_StatementNode____sl__.exit ], [ %107, %Parser_advance.exit.i ]
  %116 = phi i64 [ %92, %Array_StatementNode____sl__.exit ], [ %108, %Parser_advance.exit.i ]
  %.fr85 = freeze i64 %116
  %117 = icmp eq i64 %.fr85, 0
  br i1 %117, label %switch.early.test84, label %while.end

switch.early.test84:                              ; preds = %Parser_new_lines.exit
  switch i64 %115, label %while.entry [
    i64 46, label %while.end
    i64 28, label %while.end
  ]

while.end:                                        ; preds = %switch.early.test84, %switch.early.test84, %Parser_new_lines.exit, %switch.early.test, %switch.early.test, %Parser_new_lines.exit55
  %118 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 28)
  br label %ifend
}

define internal fastcc ptr @Parser_parse_type(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  switch i64 %3, label %ifend [
    i64 54, label %if.entry
    i64 25, label %if.entry5
    i64 29, label %if.entry10
  ]

if.entry:                                         ; preds = %1
  %4 = tail call fastcc ptr @Parser_parse_object_type(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %else.i181, %if.entry.i.i179, %if.entry.i175, %1, %Parser_parse_function_type.exit, %if.entry
  %type_node.0 = phi ptr [ %4, %if.entry ], [ %16, %Parser_parse_function_type.exit ], [ null, %1 ], [ %39, %if.entry.i175 ], [ %39, %if.entry.i.i179 ], [ %39, %else.i181 ]
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 29
  %8 = icmp eq i64 %6, 11
  %9 = or i1 %7, %8
  %10 = icmp eq i64 %6, 4
  %11 = or i1 %10, %9
  %memberidx2.i223 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %memberidx2.i223, align 8
  %memberidx3.i224 = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i224, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %11, %14
  br i1 %15, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %ifend
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

if.entry5:                                        ; preds = %1
  %16 = tail call ptr @malloc(i32 32)
  %17 = load ptr, ptr %memberidx, align 8
  %memberidx1.i226 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx1.i226, align 8
  store ptr %18, ptr %16, align 8
  %memberidx.i.i23.i = getelementptr inbounds %TypeNode, ptr %16, i64 0, i32 1
  store i64 15, ptr %memberidx.i.i23.i, align 4
  %memberidx.i24.i = getelementptr inbounds %FunctionTypeNode, ptr %16, i64 0, i32 2
  %19 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %19, align 8
  %memberidx.i3.i.i = getelementptr inbounds %Array_TypeNode_, ptr %19, i64 0, i32 2
  store i64 0, ptr %memberidx.i3.i.i, align 4
  %memberidx1.i.i25.i = getelementptr inbounds %Array_TypeNode_, ptr %19, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i25.i, align 4
  %memberidx2.i.i26.i = getelementptr inbounds %Array_TypeNode_, ptr %19, i64 0, i32 1
  %20 = tail call ptr @malloc(i32 64)
  store ptr %20, ptr %memberidx2.i.i26.i, align 8
  store i64 0, ptr %memberidx.i3.i.i, align 4
  store ptr %19, ptr %memberidx.i24.i, align 8
  %memberidx.i.i227 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %21 = load i64, ptr %memberidx.i.i227, align 4
  %22 = load ptr, ptr %0, align 8
  %memberidx2.i21.i = getelementptr inbounds %Array_Token_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx2.i21.i, align 4
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %if.entry.i.i230, label %if.entry5.Parser_advance.exit.i232_crit_edge

if.entry5.Parser_advance.exit.i232_crit_edge:     ; preds = %if.entry5
  %.pre248 = load ptr, ptr %memberidx, align 8
  br label %Parser_advance.exit.i232

if.entry.i.i230:                                  ; preds = %if.entry5
  %25 = add nsw i64 %21, 1
  store i64 %25, ptr %memberidx.i.i227, align 4
  %memberidx.i.i.i228 = getelementptr inbounds %Array_Token_, ptr %22, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i.i.i228, align 8
  %ptridx.i.i.i229 = getelementptr inbounds ptr, ptr %26, i64 %25
  %27 = load ptr, ptr %ptridx.i.i.i229, align 8
  store ptr %27, ptr %memberidx, align 8
  br label %Parser_advance.exit.i232

Parser_advance.exit.i232:                         ; preds = %if.entry5.Parser_advance.exit.i232_crit_edge, %if.entry.i.i230
  %28 = phi ptr [ %.pre248, %if.entry5.Parser_advance.exit.i232_crit_edge ], [ %27, %if.entry.i.i230 ]
  %29 = load i64, ptr %28, align 4
  %.not.i231 = icmp eq i64 %29, 26
  br i1 %.not.i231, label %Parser_parse_function_type.exit, label %if.entry.i234

if.entry.i234:                                    ; preds = %Parser_advance.exit.i232
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %19)
  br label %Parser_parse_function_type.exit

Parser_parse_function_type.exit:                  ; preds = %Parser_advance.exit.i232, %if.entry.i234
  %30 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %31 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 45)
  %memberidx5.i = getelementptr inbounds %FunctionTypeNode, ptr %16, i64 0, i32 3
  %32 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %32, ptr %memberidx5.i, align 8
  %33 = load ptr, ptr %32, align 8
  %34 = tail call ptr @malloc(i32 32)
  %35 = load i64, ptr %18, align 4
  %memberidx1.i.i235 = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 1
  %36 = load i64, ptr %memberidx1.i.i235, align 4
  %memberidx2.i.i236 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 2
  %37 = load i64, ptr %memberidx2.i.i236, align 4
  %memberidx3.i.i237 = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 3
  %38 = load i64, ptr %memberidx3.i.i237, align 4
  store i64 %35, ptr %34, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %34, i64 0, i32 1
  store i64 %36, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %34, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %34, i64 0, i32 3
  store i64 %38, ptr %memberidx3.i.i.i, align 4
  store ptr %34, ptr %16, align 8
  br label %ifend

if.entry10:                                       ; preds = %1
  %39 = tail call ptr @malloc(i32 32)
  %40 = tail call ptr @malloc(i32 24)
  %41 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %41, ptr noundef nonnull align 8 dereferenceable(3) @65, i64 3, i1 false)
  %42 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %42, align 8
  %memberidx.i.i219 = getelementptr inbounds %string, ptr %42, i64 0, i32 1
  store ptr %41, ptr %memberidx.i.i219, align 8
  %memberidx1.i.i220 = getelementptr inbounds %string, ptr %42, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i220, align 4
  %memberidx2.i.i221 = getelementptr inbounds %string, ptr %42, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i221, align 4
  %43 = load ptr, ptr %memberidx, align 8
  %memberidx14 = getelementptr inbounds %Token, ptr %43, i64 0, i32 1
  %44 = load ptr, ptr %memberidx14, align 8
  store i64 54, ptr %40, align 4
  %memberidx1.i.i217 = getelementptr inbounds %Token, ptr %40, i64 0, i32 1
  store ptr %44, ptr %memberidx1.i.i217, align 8
  %memberidx.i218 = getelementptr inbounds %IdentifierToken, ptr %40, i64 0, i32 2
  store ptr %42, ptr %memberidx.i218, align 8
  %45 = load ptr, ptr %memberidx14, align 8
  store ptr %45, ptr %39, align 8
  %memberidx.i.i210 = getelementptr inbounds %TypeNode, ptr %39, i64 0, i32 1
  store i64 16, ptr %memberidx.i.i210, align 4
  %memberidx.i211 = getelementptr inbounds %RecordTypeNode, ptr %39, i64 0, i32 2
  store ptr %40, ptr %memberidx.i211, align 8
  %memberidx1.i212 = getelementptr inbounds %RecordTypeNode, ptr %39, i64 0, i32 3
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %46, align 8
  %memberidx.i5.i213 = getelementptr inbounds %Array_TypeNode_, ptr %46, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i213, align 4
  %memberidx1.i.i214 = getelementptr inbounds %Array_TypeNode_, ptr %46, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i214, align 4
  %memberidx2.i.i215 = getelementptr inbounds %Array_TypeNode_, ptr %46, i64 0, i32 1
  %47 = tail call ptr @malloc(i32 64)
  store ptr %47, ptr %memberidx2.i.i215, align 8
  store i64 0, ptr %memberidx.i5.i213, align 4
  store ptr %46, ptr %memberidx1.i212, align 8
  %memberidx.i203 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %48 = load i64, ptr %memberidx.i203, align 4
  %49 = load ptr, ptr %0, align 8
  %memberidx2.i204 = getelementptr inbounds %Array_Token_, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i204, align 4
  %51 = icmp slt i64 %48, %50
  br i1 %51, label %if.entry.i208, label %Parser_advance.exit209

if.entry.i208:                                    ; preds = %if.entry10
  %52 = add nsw i64 %48, 1
  store i64 %52, ptr %memberidx.i203, align 4
  %memberidx.i.i206 = getelementptr inbounds %Array_Token_, ptr %49, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i.i206, align 8
  %ptridx.i.i207 = getelementptr inbounds ptr, ptr %53, i64 %52
  %54 = load ptr, ptr %ptridx.i.i207, align 8
  store ptr %54, ptr %memberidx, align 8
  br label %Parser_advance.exit209

Parser_advance.exit209:                           ; preds = %if.entry10, %if.entry.i208
  %55 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %56 = load i64, ptr %memberidx.i5.i213, align 4
  %57 = load i64, ptr %memberidx1.i.i214, align 4
  %.not.i196 = icmp slt i64 %56, %57
  br i1 %.not.i196, label %Parser_advance.exit209.Array_TypeNode____sl__.exit202_crit_edge, label %if.entry.i199

Parser_advance.exit209.Array_TypeNode____sl__.exit202_crit_edge: ; preds = %Parser_advance.exit209
  %.pre245 = load ptr, ptr %memberidx2.i.i215, align 8
  br label %Array_TypeNode____sl__.exit202

if.entry.i199:                                    ; preds = %Parser_advance.exit209
  %58 = shl nuw i64 %57, 1
  store i64 %58, ptr %memberidx1.i.i214, align 4
  %59 = load ptr, ptr %memberidx2.i.i215, align 8
  %60 = shl i64 %57, 4
  %61 = tail call ptr @realloc(ptr %59, i64 %60)
  store ptr %61, ptr %memberidx2.i.i215, align 8
  %.pre = load i64, ptr %memberidx.i5.i213, align 4
  br label %Array_TypeNode____sl__.exit202

Array_TypeNode____sl__.exit202:                   ; preds = %Parser_advance.exit209.Array_TypeNode____sl__.exit202_crit_edge, %if.entry.i199
  %62 = phi ptr [ %.pre245, %Parser_advance.exit209.Array_TypeNode____sl__.exit202_crit_edge ], [ %61, %if.entry.i199 ]
  %63 = phi i64 [ %56, %Parser_advance.exit209.Array_TypeNode____sl__.exit202_crit_edge ], [ %.pre, %if.entry.i199 ]
  %64 = add nsw i64 %63, 1
  store i64 %64, ptr %memberidx.i5.i213, align 4
  %ptridx.i201 = getelementptr inbounds ptr, ptr %62, i64 %63
  store ptr %55, ptr %ptridx.i201, align 8
  %65 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %66 = load ptr, ptr %memberidx1.i212, align 8
  %67 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i185 = getelementptr inbounds %Array_TypeNode_, ptr %66, i64 0, i32 2
  %68 = load i64, ptr %memberidx.i185, align 4
  %memberidx1.i186 = getelementptr inbounds %Array_TypeNode_, ptr %66, i64 0, i32 3
  %69 = load i64, ptr %memberidx1.i186, align 4
  %.not.i187 = icmp slt i64 %68, %69
  br i1 %.not.i187, label %Array_TypeNode____sl__.exit202.Array_TypeNode____sl__.exit193_crit_edge, label %if.entry.i190

Array_TypeNode____sl__.exit202.Array_TypeNode____sl__.exit193_crit_edge: ; preds = %Array_TypeNode____sl__.exit202
  %memberidx4.i191.phi.trans.insert = getelementptr inbounds %Array_TypeNode_, ptr %66, i64 0, i32 1
  %.pre247 = load ptr, ptr %memberidx4.i191.phi.trans.insert, align 8
  br label %Array_TypeNode____sl__.exit193

if.entry.i190:                                    ; preds = %Array_TypeNode____sl__.exit202
  %70 = shl nuw i64 %69, 1
  store i64 %70, ptr %memberidx1.i186, align 4
  %memberidx2.i.i189 = getelementptr inbounds %Array_TypeNode_, ptr %66, i64 0, i32 1
  %71 = load ptr, ptr %memberidx2.i.i189, align 8
  %72 = shl i64 %69, 4
  %73 = tail call ptr @realloc(ptr %71, i64 %72)
  store ptr %73, ptr %memberidx2.i.i189, align 8
  %.pre246 = load i64, ptr %memberidx.i185, align 4
  br label %Array_TypeNode____sl__.exit193

Array_TypeNode____sl__.exit193:                   ; preds = %Array_TypeNode____sl__.exit202.Array_TypeNode____sl__.exit193_crit_edge, %if.entry.i190
  %74 = phi ptr [ %.pre247, %Array_TypeNode____sl__.exit202.Array_TypeNode____sl__.exit193_crit_edge ], [ %73, %if.entry.i190 ]
  %75 = phi i64 [ %68, %Array_TypeNode____sl__.exit202.Array_TypeNode____sl__.exit193_crit_edge ], [ %.pre246, %if.entry.i190 ]
  %76 = add nsw i64 %75, 1
  store i64 %76, ptr %memberidx.i185, align 4
  %ptridx.i192 = getelementptr inbounds ptr, ptr %74, i64 %75
  store ptr %67, ptr %ptridx.i192, align 8
  %77 = load ptr, ptr %memberidx, align 8
  %78 = load i64, ptr %77, align 4
  %79 = icmp eq i64 %78, 30
  br i1 %79, label %if.entry.i175, label %else.i181

if.entry.i175:                                    ; preds = %Array_TypeNode____sl__.exit193
  %80 = load i64, ptr %memberidx.i203, align 4
  %81 = load ptr, ptr %0, align 8
  %memberidx2.i.i174 = getelementptr inbounds %Array_Token_, ptr %81, i64 0, i32 2
  %82 = load i64, ptr %memberidx2.i.i174, align 4
  %83 = icmp slt i64 %80, %82
  br i1 %83, label %if.entry.i.i179, label %ifend

if.entry.i.i179:                                  ; preds = %if.entry.i175
  %84 = add nsw i64 %80, 1
  store i64 %84, ptr %memberidx.i203, align 4
  %memberidx.i.i.i177 = getelementptr inbounds %Array_Token_, ptr %81, i64 0, i32 1
  %85 = load ptr, ptr %memberidx.i.i.i177, align 8
  %ptridx.i.i.i178 = getelementptr inbounds ptr, ptr %85, i64 %84
  %86 = load ptr, ptr %ptridx.i.i.i178, align 8
  store ptr %86, ptr %memberidx, align 8
  br label %ifend

else.i181:                                        ; preds = %Array_TypeNode____sl__.exit193
  %87 = tail call ptr @malloc(i32 16)
  %memberidx35.i182 = getelementptr inbounds %Token, ptr %77, i64 0, i32 1
  %88 = load ptr, ptr %memberidx35.i182, align 8
  store i64 46, ptr %87, align 4
  %memberidx1.i82.i183 = getelementptr inbounds %Token, ptr %87, i64 0, i32 1
  store ptr %88, ptr %memberidx1.i82.i183, align 8
  br label %ifend

while.entry:                                      ; preds = %while.entry.preheader, %ifend29
  %89 = phi i64 [ %112, %ifend29 ], [ %6, %while.entry.preheader ]
  %type_node.1 = phi ptr [ %type_node.3, %ifend29 ], [ %type_node.0, %while.entry.preheader ]
  %90 = icmp eq i64 %89, 29
  br i1 %90, label %if.entry27, label %else28

while.end:                                        ; preds = %ifend29, %ifend
  %type_node.2 = phi ptr [ %type_node.0, %ifend ], [ %type_node.3, %ifend29 ]
  ret ptr %type_node.2

if.entry27:                                       ; preds = %while.entry
  %91 = load i64, ptr %memberidx.i, align 4
  %92 = load ptr, ptr %0, align 8
  %memberidx2.i165 = getelementptr inbounds %Array_Token_, ptr %92, i64 0, i32 2
  %93 = load i64, ptr %memberidx2.i165, align 4
  %94 = icmp slt i64 %91, %93
  br i1 %94, label %Parser_advance.exit170, label %else33

Parser_advance.exit170:                           ; preds = %if.entry27
  %95 = add nsw i64 %91, 1
  store i64 %95, ptr %memberidx.i, align 4
  %memberidx.i.i167 = getelementptr inbounds %Array_Token_, ptr %92, i64 0, i32 1
  %96 = load ptr, ptr %memberidx.i.i167, align 8
  %ptridx.i.i168 = getelementptr inbounds ptr, ptr %96, i64 %95
  %97 = load ptr, ptr %ptridx.i.i168, align 8
  store ptr %97, ptr %memberidx, align 8
  %.pre249 = load i64, ptr %97, align 4
  %98 = icmp eq i64 %.pre249, 30
  br i1 %98, label %if.entry32, label %else33

else28:                                           ; preds = %while.entry
  %99 = tail call ptr @malloc(i32 24)
  %100 = load ptr, ptr %type_node.1, align 8
  %101 = load ptr, ptr %memberidx, align 8
  %memberidx48 = getelementptr inbounds %Token, ptr %101, i64 0, i32 1
  %102 = load ptr, ptr %memberidx48, align 8
  %103 = tail call ptr @malloc(i32 32)
  %104 = load i64, ptr %100, align 4
  %memberidx1.i158 = getelementptr inbounds %FloRange, ptr %102, i64 0, i32 1
  %105 = load i64, ptr %memberidx1.i158, align 4
  %memberidx2.i159 = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 2
  %106 = load i64, ptr %memberidx2.i159, align 4
  %memberidx3.i160 = getelementptr inbounds %FloRange, ptr %102, i64 0, i32 3
  %107 = load i64, ptr %memberidx3.i160, align 4
  store i64 %104, ptr %103, align 4
  %memberidx1.i.i161 = getelementptr inbounds %FloRange, ptr %103, i64 0, i32 1
  store i64 %105, ptr %memberidx1.i.i161, align 4
  %memberidx2.i.i162 = getelementptr inbounds %FloRange, ptr %103, i64 0, i32 2
  store i64 %106, ptr %memberidx2.i.i162, align 4
  %memberidx3.i.i163 = getelementptr inbounds %FloRange, ptr %103, i64 0, i32 3
  store i64 %107, ptr %memberidx3.i.i163, align 4
  store ptr %103, ptr %99, align 8
  %memberidx.i.i156 = getelementptr inbounds %TypeNode, ptr %99, i64 0, i32 1
  store i64 13, ptr %memberidx.i.i156, align 4
  %memberidx.i157 = getelementptr inbounds %PointerTypeNode, ptr %99, i64 0, i32 2
  store ptr %type_node.1, ptr %memberidx.i157, align 8
  %108 = load ptr, ptr %memberidx, align 8
  %109 = load i64, ptr %108, align 4
  %110 = icmp eq i64 %109, 11
  br i1 %110, label %if.entry51, label %else52

ifend29:                                          ; preds = %if.entry.i, %else52, %else.i124, %if.entry.i.i122, %if.entry.i118, %Parser_eat.exit
  %type_node.3 = phi ptr [ %160, %Parser_eat.exit ], [ %type_node.4, %if.entry.i118 ], [ %type_node.4, %if.entry.i.i122 ], [ %type_node.4, %else.i124 ], [ %99, %else52 ], [ %99, %if.entry.i ]
  %111 = load ptr, ptr %memberidx, align 8
  %112 = load i64, ptr %111, align 4
  %113 = icmp eq i64 %112, 29
  %114 = icmp eq i64 %112, 11
  %115 = or i1 %113, %114
  %116 = icmp eq i64 %112, 4
  %117 = or i1 %116, %115
  %118 = load ptr, ptr %memberidx2.i223, align 8
  %memberidx3.i155 = getelementptr inbounds %Array_FloError_, ptr %118, i64 0, i32 2
  %119 = load i64, ptr %memberidx3.i155, align 4
  %120 = icmp eq i64 %119, 0
  %121 = and i1 %117, %120
  br i1 %121, label %while.entry, label %while.end

if.entry32:                                       ; preds = %Parser_advance.exit170
  %122 = tail call ptr @malloc(i32 32)
  %123 = tail call ptr @malloc(i32 24)
  %124 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %124, ptr noundef nonnull align 8 dereferenceable(5) @66, i64 5, i1 false)
  %125 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %125, align 8
  %memberidx.i.i150 = getelementptr inbounds %string, ptr %125, i64 0, i32 1
  store ptr %124, ptr %memberidx.i.i150, align 8
  %memberidx1.i.i151 = getelementptr inbounds %string, ptr %125, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i151, align 4
  %memberidx2.i.i152 = getelementptr inbounds %string, ptr %125, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i152, align 4
  %126 = load ptr, ptr %memberidx, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %126, i64 0, i32 1
  %127 = load ptr, ptr %memberidx36, align 8
  store i64 54, ptr %123, align 4
  %memberidx1.i.i148 = getelementptr inbounds %Token, ptr %123, i64 0, i32 1
  store ptr %127, ptr %memberidx1.i.i148, align 8
  %memberidx.i149 = getelementptr inbounds %IdentifierToken, ptr %123, i64 0, i32 2
  store ptr %125, ptr %memberidx.i149, align 8
  %128 = load ptr, ptr %memberidx36, align 8
  store ptr %128, ptr %122, align 8
  %memberidx.i.i142 = getelementptr inbounds %TypeNode, ptr %122, i64 0, i32 1
  store i64 16, ptr %memberidx.i.i142, align 4
  %memberidx.i143 = getelementptr inbounds %RecordTypeNode, ptr %122, i64 0, i32 2
  store ptr %123, ptr %memberidx.i143, align 8
  %memberidx1.i144 = getelementptr inbounds %RecordTypeNode, ptr %122, i64 0, i32 3
  %129 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %129, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %129, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i145 = getelementptr inbounds %Array_TypeNode_, ptr %129, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i145, align 4
  %memberidx2.i.i146 = getelementptr inbounds %Array_TypeNode_, ptr %129, i64 0, i32 1
  %130 = tail call ptr @malloc(i32 64)
  store ptr %130, ptr %memberidx2.i.i146, align 8
  store ptr %129, ptr %memberidx1.i144, align 8
  %131 = load i64, ptr %memberidx1.i.i145, align 4
  %.not.i = icmp sgt i64 %131, 0
  br i1 %.not.i, label %Array_TypeNode____sl__.exit, label %if.entry.i141

if.entry.i141:                                    ; preds = %if.entry32
  %132 = shl nuw i64 %131, 1
  store i64 %132, ptr %memberidx1.i.i145, align 4
  %133 = shl i64 %131, 4
  %134 = tail call ptr @realloc(ptr %130, i64 %133)
  store ptr %134, ptr %memberidx2.i.i146, align 8
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %if.entry32, %if.entry.i141
  %135 = phi ptr [ %130, %if.entry32 ], [ %134, %if.entry.i141 ]
  store i64 1, ptr %memberidx.i5.i, align 4
  store ptr %type_node.1, ptr %135, align 8
  %.pre250 = load ptr, ptr %122, align 8
  %.pre251 = load ptr, ptr %memberidx, align 8
  br label %ifend34

else33:                                           ; preds = %if.entry27, %Parser_advance.exit170
  %136 = tail call ptr @malloc(i32 32)
  %137 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %138 = load ptr, ptr %memberidx, align 8
  %memberidx41 = getelementptr inbounds %Token, ptr %138, i64 0, i32 1
  %139 = load ptr, ptr %memberidx41, align 8
  store ptr %139, ptr %136, align 8
  %memberidx.i.i134 = getelementptr inbounds %TypeNode, ptr %136, i64 0, i32 1
  store i64 14, ptr %memberidx.i.i134, align 4
  %memberidx.i135 = getelementptr inbounds %ArrayTypeNode, ptr %136, i64 0, i32 2
  store ptr %type_node.1, ptr %memberidx.i135, align 8
  %memberidx1.i136 = getelementptr inbounds %ArrayTypeNode, ptr %136, i64 0, i32 3
  store ptr %137, ptr %memberidx1.i136, align 8
  br label %ifend34

ifend34:                                          ; preds = %else33, %Array_TypeNode____sl__.exit
  %140 = phi ptr [ %.pre251, %Array_TypeNode____sl__.exit ], [ %138, %else33 ]
  %141 = phi ptr [ %.pre250, %Array_TypeNode____sl__.exit ], [ %139, %else33 ]
  %type_node.4 = phi ptr [ %122, %Array_TypeNode____sl__.exit ], [ %136, %else33 ]
  %memberidx45 = getelementptr inbounds %Token, ptr %140, i64 0, i32 1
  %142 = load ptr, ptr %memberidx45, align 8
  %143 = tail call ptr @malloc(i32 32)
  %144 = load i64, ptr %141, align 4
  %memberidx1.i128 = getelementptr inbounds %FloRange, ptr %142, i64 0, i32 1
  %145 = load i64, ptr %memberidx1.i128, align 4
  %memberidx2.i129 = getelementptr inbounds %FloRange, ptr %141, i64 0, i32 2
  %146 = load i64, ptr %memberidx2.i129, align 4
  %memberidx3.i130 = getelementptr inbounds %FloRange, ptr %142, i64 0, i32 3
  %147 = load i64, ptr %memberidx3.i130, align 4
  store i64 %144, ptr %143, align 4
  %memberidx1.i.i131 = getelementptr inbounds %FloRange, ptr %143, i64 0, i32 1
  store i64 %145, ptr %memberidx1.i.i131, align 4
  %memberidx2.i.i132 = getelementptr inbounds %FloRange, ptr %143, i64 0, i32 2
  store i64 %146, ptr %memberidx2.i.i132, align 4
  %memberidx3.i.i133 = getelementptr inbounds %FloRange, ptr %143, i64 0, i32 3
  store i64 %147, ptr %memberidx3.i.i133, align 4
  store ptr %143, ptr %type_node.4, align 8
  %148 = load ptr, ptr %memberidx, align 8
  %149 = load i64, ptr %148, align 4
  %150 = icmp eq i64 %149, 30
  br i1 %150, label %if.entry.i118, label %else.i124

if.entry.i118:                                    ; preds = %ifend34
  %151 = load i64, ptr %memberidx.i, align 4
  %152 = load ptr, ptr %0, align 8
  %memberidx2.i.i117 = getelementptr inbounds %Array_Token_, ptr %152, i64 0, i32 2
  %153 = load i64, ptr %memberidx2.i.i117, align 4
  %154 = icmp slt i64 %151, %153
  br i1 %154, label %if.entry.i.i122, label %ifend29

if.entry.i.i122:                                  ; preds = %if.entry.i118
  %155 = add nsw i64 %151, 1
  store i64 %155, ptr %memberidx.i, align 4
  %memberidx.i.i.i120 = getelementptr inbounds %Array_Token_, ptr %152, i64 0, i32 1
  %156 = load ptr, ptr %memberidx.i.i.i120, align 8
  %ptridx.i.i.i121 = getelementptr inbounds ptr, ptr %156, i64 %155
  %157 = load ptr, ptr %ptridx.i.i.i121, align 8
  store ptr %157, ptr %memberidx, align 8
  br label %ifend29

else.i124:                                        ; preds = %ifend34
  %158 = tail call ptr @malloc(i32 16)
  %memberidx35.i125 = getelementptr inbounds %Token, ptr %148, i64 0, i32 1
  %159 = load ptr, ptr %memberidx35.i125, align 8
  store i64 46, ptr %158, align 4
  %memberidx1.i82.i126 = getelementptr inbounds %Token, ptr %158, i64 0, i32 1
  store ptr %159, ptr %memberidx1.i82.i126, align 8
  br label %ifend29

if.entry51:                                       ; preds = %else28
  %160 = tail call ptr @malloc(i32 24)
  %161 = load ptr, ptr %99, align 8
  %162 = load ptr, ptr %memberidx, align 8
  %163 = load i64, ptr %162, align 4
  %164 = icmp eq i64 %163, 11
  br i1 %164, label %if.entry.i112, label %else.i

if.entry.i112:                                    ; preds = %if.entry51
  %165 = load i64, ptr %memberidx.i, align 4
  %166 = load ptr, ptr %0, align 8
  %memberidx2.i.i111 = getelementptr inbounds %Array_Token_, ptr %166, i64 0, i32 2
  %167 = load i64, ptr %memberidx2.i.i111, align 4
  %168 = icmp slt i64 %165, %167
  br i1 %168, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i112
  %169 = add nsw i64 %165, 1
  store i64 %169, ptr %memberidx.i, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %166, i64 0, i32 1
  %170 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %170, i64 %169
  %171 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %171, ptr %memberidx, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %if.entry51
  %172 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %162, i64 0, i32 1
  %173 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %172, align 4
  %memberidx1.i82.i = getelementptr inbounds %Token, ptr %172, i64 0, i32 1
  store ptr %173, ptr %memberidx1.i82.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i112, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %172, %else.i ], [ %162, %if.entry.i.i ], [ %162, %if.entry.i112 ]
  %memberidx55 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %174 = load ptr, ptr %memberidx55, align 8
  %175 = tail call ptr @malloc(i32 32)
  %176 = load i64, ptr %161, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %174, i64 0, i32 1
  %177 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i107 = getelementptr inbounds %FloRange, ptr %161, i64 0, i32 2
  %178 = load i64, ptr %memberidx2.i107, align 4
  %memberidx3.i108 = getelementptr inbounds %FloRange, ptr %174, i64 0, i32 3
  %179 = load i64, ptr %memberidx3.i108, align 4
  store i64 %176, ptr %175, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %175, i64 0, i32 1
  store i64 %177, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %175, i64 0, i32 2
  store i64 %178, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %175, i64 0, i32 3
  store i64 %179, ptr %memberidx3.i.i, align 4
  store ptr %175, ptr %160, align 8
  %memberidx.i.i105 = getelementptr inbounds %TypeNode, ptr %160, i64 0, i32 1
  store i64 13, ptr %memberidx.i.i105, align 4
  %memberidx.i106 = getelementptr inbounds %PointerTypeNode, ptr %160, i64 0, i32 2
  store ptr %99, ptr %memberidx.i106, align 8
  br label %ifend29

else52:                                           ; preds = %else28
  %180 = load i64, ptr %memberidx.i, align 4
  %181 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %181, i64 0, i32 2
  %182 = load i64, ptr %memberidx2.i, align 4
  %183 = icmp slt i64 %180, %182
  br i1 %183, label %if.entry.i, label %ifend29

if.entry.i:                                       ; preds = %else52
  %184 = add nsw i64 %180, 1
  store i64 %184, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %181, i64 0, i32 1
  %185 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %185, i64 %184
  %186 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %186, ptr %memberidx, align 8
  br label %ifend29
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_ExpressionNode__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_ExpressionNode__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_ExpressionNode_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc void @Parser_parse_expression_list(ptr %0, ptr nocapture %1) unnamed_addr {
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, 33
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx3.i.i, align 4
  %8 = icmp eq i64 %7, 0
  %9 = and i1 %5, %8
  br i1 %9, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %2
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 2
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx.i11.i, align 4
  %12 = load i64, ptr %memberidx2.i12.i, align 4
  %13 = icmp slt i64 %11, %12
  br i1 %13, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %14 = phi i64 [ %22, %Parser_advance.exit.i ], [ %11, %while.entry.i.preheader ]
  %15 = load i64, ptr %memberidx2.i12.i, align 4
  %16 = icmp slt i64 %14, %15
  br i1 %16, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %17 = add nsw i64 %14, 1
  store i64 %17, ptr %memberidx.i11.i, align 4
  %18 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %19, ptr %memberidx.i, align 8
  %.pre = load i64, ptr %19, align 4
  %.pre96 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %20 = phi i64 [ %.pre96, %if.entry.i.i ], [ 0, %while.entry.i ]
  %21 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %22 = phi i64 [ %17, %if.entry.i.i ], [ %14, %while.entry.i ]
  %23 = icmp eq i64 %21, 33
  %24 = icmp eq i64 %20, 0
  %25 = and i1 %23, %24
  br i1 %25, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %2
  %26 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %memberidx.i15 = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i15, align 4
  %memberidx1.i = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 3
  %28 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %27, %28
  br i1 %.not.i, label %Parser_new_lines.exit.Array_ExpressionNode____sl__.exit_crit_edge, label %if.entry.i

Parser_new_lines.exit.Array_ExpressionNode____sl__.exit_crit_edge: ; preds = %Parser_new_lines.exit
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %.pre98 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_ExpressionNode____sl__.exit

if.entry.i:                                       ; preds = %Parser_new_lines.exit
  %29 = shl nuw i64 %28, 1
  store i64 %29, ptr %memberidx1.i, align 4
  %memberidx2.i.i17 = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2.i.i17, align 8
  %31 = shl i64 %28, 4
  %32 = tail call ptr @realloc(ptr %30, i64 %31)
  store ptr %32, ptr %memberidx2.i.i17, align 8
  %.pre97 = load i64, ptr %memberidx.i15, align 4
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %Parser_new_lines.exit.Array_ExpressionNode____sl__.exit_crit_edge, %if.entry.i
  %33 = phi ptr [ %.pre98, %Parser_new_lines.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %32, %if.entry.i ]
  %34 = phi i64 [ %27, %Parser_new_lines.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %.pre97, %if.entry.i ]
  %35 = add nsw i64 %34, 1
  store i64 %35, ptr %memberidx.i15, align 4
  %memberidx4.i = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %ptridx.i = getelementptr inbounds ptr, ptr %33, i64 %34
  store ptr %26, ptr %ptridx.i, align 8
  %36 = load ptr, ptr %memberidx.i, align 8
  %37 = load i64, ptr %36, align 4
  %38 = icmp eq i64 %37, 33
  %39 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i21 = getelementptr inbounds %Array_FloError_, ptr %39, i64 0, i32 2
  %40 = load i64, ptr %memberidx3.i.i21, align 4
  %41 = icmp eq i64 %40, 0
  %42 = and i1 %38, %41
  br i1 %42, label %while.entry.i24.preheader, label %Parser_new_lines.exit33

while.entry.i24.preheader:                        ; preds = %Array_ExpressionNode____sl__.exit
  %memberidx.i11.i22 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %43 = load ptr, ptr %0, align 8
  %memberidx2.i12.i23 = getelementptr inbounds %Array_Token_, ptr %43, i64 0, i32 2
  %memberidx.i.i.i26 = getelementptr inbounds %Array_Token_, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i11.i22, align 4
  %45 = load i64, ptr %memberidx2.i12.i23, align 4
  %46 = icmp slt i64 %44, %45
  br i1 %46, label %while.entry.i24, label %while.entry.i24.us

while.entry.i24.us:                               ; preds = %while.entry.i24.preheader, %while.entry.i24.us
  br label %while.entry.i24.us

while.entry.i24:                                  ; preds = %while.entry.i24.preheader, %Parser_advance.exit.i32
  %47 = phi i64 [ %55, %Parser_advance.exit.i32 ], [ 0, %while.entry.i24.preheader ]
  %48 = phi i64 [ %56, %Parser_advance.exit.i32 ], [ 33, %while.entry.i24.preheader ]
  %49 = phi i64 [ %59, %Parser_advance.exit.i32 ], [ %44, %while.entry.i24.preheader ]
  %50 = load i64, ptr %memberidx2.i12.i23, align 4
  %51 = icmp slt i64 %49, %50
  br i1 %51, label %if.entry.i.i28, label %Parser_advance.exit.i32

if.entry.i.i28:                                   ; preds = %while.entry.i24
  %52 = add nsw i64 %49, 1
  store i64 %52, ptr %memberidx.i11.i22, align 4
  %53 = load ptr, ptr %memberidx.i.i.i26, align 8
  %ptridx.i.i.i27 = getelementptr inbounds ptr, ptr %53, i64 %52
  %54 = load ptr, ptr %ptridx.i.i.i27, align 8
  store ptr %54, ptr %memberidx.i, align 8
  %.pre99 = load i64, ptr %54, align 4
  %.pre100 = load i64, ptr %memberidx3.i.i21, align 4
  br label %Parser_advance.exit.i32

Parser_advance.exit.i32:                          ; preds = %if.entry.i.i28, %while.entry.i24
  %55 = phi i64 [ %.pre100, %if.entry.i.i28 ], [ %47, %while.entry.i24 ]
  %56 = phi i64 [ %.pre99, %if.entry.i.i28 ], [ %48, %while.entry.i24 ]
  %57 = phi i64 [ %.pre100, %if.entry.i.i28 ], [ 0, %while.entry.i24 ]
  %58 = phi i64 [ %.pre99, %if.entry.i.i28 ], [ 33, %while.entry.i24 ]
  %59 = phi i64 [ %52, %if.entry.i.i28 ], [ %49, %while.entry.i24 ]
  %60 = icmp eq i64 %58, 33
  %61 = icmp eq i64 %57, 0
  %62 = and i1 %60, %61
  br i1 %62, label %while.entry.i24, label %Parser_new_lines.exit33

Parser_new_lines.exit33:                          ; preds = %Parser_advance.exit.i32, %Array_ExpressionNode____sl__.exit
  %63 = phi i64 [ %40, %Array_ExpressionNode____sl__.exit ], [ %55, %Parser_advance.exit.i32 ]
  %64 = phi i64 [ %37, %Array_ExpressionNode____sl__.exit ], [ %56, %Parser_advance.exit.i32 ]
  %65 = icmp eq i64 %64, 3
  %66 = icmp eq i64 %63, 0
  %67 = and i1 %65, %66
  br i1 %67, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_new_lines.exit33
  %memberidx.i35 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_ExpressionNode____sl__.exit64
  %68 = phi ptr [ %39, %while.entry.preheader ], [ %106, %Array_ExpressionNode____sl__.exit64 ]
  %69 = load i64, ptr %memberidx.i35, align 4
  %70 = load ptr, ptr %0, align 8
  %memberidx2.i36 = getelementptr inbounds %Array_Token_, ptr %70, i64 0, i32 2
  %71 = load i64, ptr %memberidx2.i36, align 4
  %72 = icmp slt i64 %69, %71
  br i1 %72, label %Parser_advance.exit, label %Parser_new_lines.exit55

Parser_advance.exit:                              ; preds = %while.entry
  %73 = add nsw i64 %69, 1
  store i64 %73, ptr %memberidx.i35, align 4
  %memberidx.i.i38 = getelementptr inbounds %Array_Token_, ptr %70, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i.i38, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %74, i64 %73
  %75 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %75, ptr %memberidx.i, align 8
  %.pre101 = load i64, ptr %75, align 4
  %memberidx3.i.i43.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 2
  %.pre102 = load i64, ptr %memberidx3.i.i43.phi.trans.insert, align 4
  %76 = icmp eq i64 %.pre101, 33
  %memberidx3.i.i43 = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 2
  %77 = icmp eq i64 %.pre102, 0
  %78 = and i1 %76, %77
  br i1 %78, label %while.entry.i46.preheader, label %Parser_new_lines.exit55

while.entry.i46.preheader:                        ; preds = %Parser_advance.exit
  %memberidx.i.i.i48 = getelementptr inbounds %Array_Token_, ptr %70, i64 0, i32 1
  %79 = load i64, ptr %memberidx2.i36, align 4
  %80 = icmp slt i64 %73, %79
  br i1 %80, label %while.entry.i46, label %while.entry.i46.us

while.entry.i46.us:                               ; preds = %while.entry.i46.preheader, %while.entry.i46.us
  br label %while.entry.i46.us

while.entry.i46:                                  ; preds = %while.entry.i46.preheader, %Parser_advance.exit.i54
  %81 = phi i64 [ %89, %Parser_advance.exit.i54 ], [ %73, %while.entry.i46.preheader ]
  %82 = load i64, ptr %memberidx2.i36, align 4
  %83 = icmp slt i64 %81, %82
  br i1 %83, label %if.entry.i.i50, label %Parser_advance.exit.i54

if.entry.i.i50:                                   ; preds = %while.entry.i46
  %84 = add nsw i64 %81, 1
  store i64 %84, ptr %memberidx.i35, align 4
  %85 = load ptr, ptr %memberidx.i.i.i48, align 8
  %ptridx.i.i.i49 = getelementptr inbounds ptr, ptr %85, i64 %84
  %86 = load ptr, ptr %ptridx.i.i.i49, align 8
  store ptr %86, ptr %memberidx.i, align 8
  %.pre104 = load i64, ptr %86, align 4
  %.pre105 = load i64, ptr %memberidx3.i.i43, align 4
  br label %Parser_advance.exit.i54

Parser_advance.exit.i54:                          ; preds = %if.entry.i.i50, %while.entry.i46
  %87 = phi i64 [ %.pre105, %if.entry.i.i50 ], [ 0, %while.entry.i46 ]
  %88 = phi i64 [ %.pre104, %if.entry.i.i50 ], [ 33, %while.entry.i46 ]
  %89 = phi i64 [ %84, %if.entry.i.i50 ], [ %81, %while.entry.i46 ]
  %90 = icmp eq i64 %88, 33
  %91 = icmp eq i64 %87, 0
  %92 = and i1 %90, %91
  br i1 %92, label %while.entry.i46, label %Parser_new_lines.exit55

Parser_new_lines.exit55:                          ; preds = %Parser_advance.exit.i54, %while.entry, %Parser_advance.exit
  %93 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %94 = load i64, ptr %memberidx.i15, align 4
  %95 = load i64, ptr %memberidx1.i, align 4
  %.not.i58 = icmp slt i64 %94, %95
  br i1 %.not.i58, label %Parser_new_lines.exit55.Array_ExpressionNode____sl__.exit64_crit_edge, label %if.entry.i61

Parser_new_lines.exit55.Array_ExpressionNode____sl__.exit64_crit_edge: ; preds = %Parser_new_lines.exit55
  %.pre107 = load ptr, ptr %memberidx4.i, align 8
  br label %Array_ExpressionNode____sl__.exit64

if.entry.i61:                                     ; preds = %Parser_new_lines.exit55
  %96 = shl nuw i64 %95, 1
  store i64 %96, ptr %memberidx1.i, align 4
  %97 = load ptr, ptr %memberidx4.i, align 8
  %98 = shl i64 %95, 4
  %99 = tail call ptr @realloc(ptr %97, i64 %98)
  store ptr %99, ptr %memberidx4.i, align 8
  %.pre106 = load i64, ptr %memberidx.i15, align 4
  br label %Array_ExpressionNode____sl__.exit64

Array_ExpressionNode____sl__.exit64:              ; preds = %Parser_new_lines.exit55.Array_ExpressionNode____sl__.exit64_crit_edge, %if.entry.i61
  %100 = phi ptr [ %.pre107, %Parser_new_lines.exit55.Array_ExpressionNode____sl__.exit64_crit_edge ], [ %99, %if.entry.i61 ]
  %101 = phi i64 [ %94, %Parser_new_lines.exit55.Array_ExpressionNode____sl__.exit64_crit_edge ], [ %.pre106, %if.entry.i61 ]
  %102 = add nsw i64 %101, 1
  store i64 %102, ptr %memberidx.i15, align 4
  %ptridx.i63 = getelementptr inbounds ptr, ptr %100, i64 %101
  store ptr %93, ptr %ptridx.i63, align 8
  %103 = load ptr, ptr %memberidx.i, align 8
  %104 = load i64, ptr %103, align 4
  %105 = icmp eq i64 %104, 3
  %106 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i67 = getelementptr inbounds %Array_FloError_, ptr %106, i64 0, i32 2
  %107 = load i64, ptr %memberidx3.i67, align 4
  %108 = icmp eq i64 %107, 0
  %109 = and i1 %105, %108
  br i1 %109, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_ExpressionNode____sl__.exit64, %Parser_new_lines.exit33
  %110 = phi i64 [ %63, %Parser_new_lines.exit33 ], [ %107, %Array_ExpressionNode____sl__.exit64 ]
  %111 = phi ptr [ %39, %Parser_new_lines.exit33 ], [ %106, %Array_ExpressionNode____sl__.exit64 ]
  %112 = phi i64 [ %64, %Parser_new_lines.exit33 ], [ %104, %Array_ExpressionNode____sl__.exit64 ]
  %113 = icmp eq i64 %112, 33
  %memberidx3.i.i71 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 2
  %114 = icmp eq i64 %110, 0
  %115 = and i1 %113, %114
  br i1 %115, label %while.entry.i74.preheader, label %Parser_new_lines.exit83

while.entry.i74.preheader:                        ; preds = %while.end
  %memberidx.i11.i72 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %116 = load ptr, ptr %0, align 8
  %memberidx2.i12.i73 = getelementptr inbounds %Array_Token_, ptr %116, i64 0, i32 2
  %memberidx.i.i.i76 = getelementptr inbounds %Array_Token_, ptr %116, i64 0, i32 1
  %117 = load i64, ptr %memberidx.i11.i72, align 4
  %118 = load i64, ptr %memberidx2.i12.i73, align 4
  %119 = icmp slt i64 %117, %118
  br i1 %119, label %while.entry.i74, label %while.entry.i74.us

while.entry.i74.us:                               ; preds = %while.entry.i74.preheader, %while.entry.i74.us
  br label %while.entry.i74.us

while.entry.i74:                                  ; preds = %while.entry.i74.preheader, %Parser_advance.exit.i82
  %120 = phi i64 [ %128, %Parser_advance.exit.i82 ], [ %117, %while.entry.i74.preheader ]
  %121 = load i64, ptr %memberidx2.i12.i73, align 4
  %122 = icmp slt i64 %120, %121
  br i1 %122, label %if.entry.i.i78, label %Parser_advance.exit.i82

if.entry.i.i78:                                   ; preds = %while.entry.i74
  %123 = add nsw i64 %120, 1
  store i64 %123, ptr %memberidx.i11.i72, align 4
  %124 = load ptr, ptr %memberidx.i.i.i76, align 8
  %ptridx.i.i.i77 = getelementptr inbounds ptr, ptr %124, i64 %123
  %125 = load ptr, ptr %ptridx.i.i.i77, align 8
  store ptr %125, ptr %memberidx.i, align 8
  %.pre108 = load i64, ptr %125, align 4
  %.pre109 = load i64, ptr %memberidx3.i.i71, align 4
  br label %Parser_advance.exit.i82

Parser_advance.exit.i82:                          ; preds = %if.entry.i.i78, %while.entry.i74
  %126 = phi i64 [ %.pre109, %if.entry.i.i78 ], [ 0, %while.entry.i74 ]
  %127 = phi i64 [ %.pre108, %if.entry.i.i78 ], [ 33, %while.entry.i74 ]
  %128 = phi i64 [ %123, %if.entry.i.i78 ], [ %120, %while.entry.i74 ]
  %129 = icmp eq i64 %127, 33
  %130 = icmp eq i64 %126, 0
  %131 = and i1 %129, %130
  br i1 %131, label %while.entry.i74, label %Parser_new_lines.exit83

Parser_new_lines.exit83:                          ; preds = %Parser_advance.exit.i82, %while.end
  ret void
}

define internal fastcc ptr @Parser_parse_string(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %1 = load ptr, ptr %memberidx.i, align 8
  %2 = load i64, ptr %1, align 4
  %3 = icmp eq i64 %2, 34
  br i1 %3, label %if.entry.i, label %else.i

if.entry.i:                                       ; preds = %for.entry
  %memberidx.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx2.i.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i.i, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %9, i64 %8
  %10 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %10, ptr %memberidx.i, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %for.entry
  %11 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %1, i64 0, i32 1
  %12 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %11, align 4
  %memberidx1.i82.i = getelementptr inbounds %Token, ptr %11, i64 0, i32 1
  store ptr %12, ptr %memberidx1.i82.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %11, %else.i ], [ %1, %if.entry.i.i ], [ %1, %if.entry.i ]
  %13 = alloca %Parser, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %14 = load ptr, ptr %memberidx, align 8
  store ptr null, ptr %13, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %13, i64 0, i32 1
  store ptr %14, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %13, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %15, align 8
  %memberidx.i18 = getelementptr inbounds %Array_ExpressionNode_, ptr %15, i64 0, i32 2
  store i64 0, ptr %memberidx.i18, align 4
  %memberidx1.i19 = getelementptr inbounds %Array_ExpressionNode_, ptr %15, i64 0, i32 3
  store i64 8, ptr %memberidx1.i19, align 4
  %memberidx2.i20 = getelementptr inbounds %Array_ExpressionNode_, ptr %15, i64 0, i32 1
  %16 = tail call ptr @malloc(i32 64)
  store ptr %16, ptr %memberidx2.i20, align 8
  store i64 0, ptr %memberidx.i18, align 4
  %memberidx3 = getelementptr inbounds %StrToken, ptr %common.ret.op.i, i64 0, i32 4
  %17 = load ptr, ptr %memberidx3, align 8
  %memberidx441 = getelementptr inbounds %Array_Array_Token__, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx441, align 4
  %19 = icmp sgt i64 %18, 0
  %20 = load ptr, ptr %memberidx.i, align 8
  %21 = load i64, ptr %20, align 4
  %22 = icmp ne i64 %21, 46
  %23 = load ptr, ptr %memberidx, align 8
  %memberidx3.i42 = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 2
  %24 = load i64, ptr %memberidx3.i42, align 4
  %25 = icmp eq i64 %24, 0
  %26 = and i1 %22, %25
  %27 = and i1 %19, %26
  br i1 %27, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %Parser_eat.exit
  %memberidx3.i26 = getelementptr inbounds %Parser, ptr %13, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ExpressionNode____sl__.exit
  %28 = phi ptr [ %17, %for.body.lr.ph ], [ %46, %Array_ExpressionNode____sl__.exit ]
  %i.043 = phi i64 [ 0, %for.body.lr.ph ], [ %45, %Array_ExpressionNode____sl__.exit ]
  %memberidx.i23 = getelementptr inbounds %Array_Array_Token__, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i23, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %29, i64 %i.043
  %30 = load ptr, ptr %ptridx.i, align 8
  store ptr %30, ptr %13, align 8
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i25 = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 2
  %31 = load i64, ptr %memberidx2.i25, align 4
  %32 = icmp sgt i64 %31, -1
  br i1 %32, label %if.entry.i28, label %Parser_advance.exit

if.entry.i28:                                     ; preds = %for.body
  store i64 0, ptr %memberidx2.i, align 8
  %memberidx.i.i27 = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i.i27, align 8
  %34 = load ptr, ptr %33, align 8
  store ptr %34, ptr %memberidx3.i26, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %for.body, %if.entry.i28
  %35 = call fastcc ptr @Parser_parse_expression(ptr nonnull %13)
  %36 = load i64, ptr %memberidx.i18, align 4
  %37 = load i64, ptr %memberidx1.i19, align 4
  %.not.i = icmp slt i64 %36, %37
  br i1 %.not.i, label %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge, label %if.entry.i33

Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge: ; preds = %Parser_advance.exit
  %.pre44 = load ptr, ptr %memberidx2.i20, align 8
  br label %Array_ExpressionNode____sl__.exit

if.entry.i33:                                     ; preds = %Parser_advance.exit
  %38 = shl nuw i64 %37, 1
  store i64 %38, ptr %memberidx1.i19, align 4
  %39 = load ptr, ptr %memberidx2.i20, align 8
  %40 = shl i64 %37, 4
  %41 = call ptr @realloc(ptr %39, i64 %40)
  store ptr %41, ptr %memberidx2.i20, align 8
  %.pre = load i64, ptr %memberidx.i18, align 4
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge, %if.entry.i33
  %42 = phi ptr [ %.pre44, %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %41, %if.entry.i33 ]
  %43 = phi i64 [ %36, %Parser_advance.exit.Array_ExpressionNode____sl__.exit_crit_edge ], [ %.pre, %if.entry.i33 ]
  %44 = add nsw i64 %43, 1
  store i64 %44, ptr %memberidx.i18, align 4
  %ptridx.i34 = getelementptr inbounds ptr, ptr %42, i64 %43
  store ptr %35, ptr %ptridx.i34, align 8
  %45 = add nuw nsw i64 %i.043, 1
  %46 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Array_Array_Token__, ptr %46, i64 0, i32 2
  %47 = load i64, ptr %memberidx4, align 4
  %48 = icmp slt i64 %45, %47
  %49 = load ptr, ptr %memberidx.i, align 8
  %50 = load i64, ptr %49, align 4
  %51 = icmp ne i64 %50, 46
  %52 = load ptr, ptr %memberidx, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx3.i, align 4
  %54 = icmp eq i64 %53, 0
  %55 = and i1 %51, %54
  %56 = and i1 %48, %55
  br i1 %56, label %for.body, label %for.end

for.end:                                          ; preds = %Array_ExpressionNode____sl__.exit, %Parser_eat.exit
  %57 = tail call ptr @malloc(i32 40)
  %memberidx.i35 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %58 = load ptr, ptr %memberidx.i35, align 8
  store ptr %58, ptr %57, align 8
  %memberidx.i.i.i36 = getelementptr inbounds %StatementNode, ptr %57, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i36, align 4
  %memberidx.i.i37 = getelementptr inbounds %ExpressionNode, ptr %57, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i37, align 4
  %memberidx1.i38 = getelementptr inbounds %StringExpressionNode, ptr %57, i64 0, i32 3
  store ptr %common.ret.op.i, ptr %memberidx1.i38, align 8
  %memberidx2.i39 = getelementptr inbounds %StringExpressionNode, ptr %57, i64 0, i32 4
  store ptr %15, ptr %memberidx2.i39, align 8
  ret ptr %57
}

define internal fastcc noalias ptr @Parser_parse_variable_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 1, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 3
  %memberidx1.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 4
  %memberidx.i67 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx.i, i8 0, i64 16, i1 false)
  %5 = load i64, ptr %memberidx.i67, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i68 = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i68, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i67, align 4
  %memberidx.i.i70 = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i70, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %10, i64 %9
  %11 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 2
  %12 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 54)
  store ptr %12, ptr %memberidx2, align 8
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %16 = load i64, ptr %memberidx.i67, align 4
  %17 = load ptr, ptr %0, align 8
  %memberidx2.i72 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx2.i72, align 4
  %19 = icmp slt i64 %16, %18
  br i1 %19, label %if.entry.i76, label %Parser_advance.exit77

if.entry.i76:                                     ; preds = %if.entry
  %20 = add nsw i64 %16, 1
  store i64 %20, ptr %memberidx.i67, align 4
  %memberidx.i.i74 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i.i74, align 8
  %ptridx.i.i75 = getelementptr inbounds ptr, ptr %21, i64 %20
  %22 = load ptr, ptr %ptridx.i.i75, align 8
  store ptr %22, ptr %memberidx, align 8
  br label %Parser_advance.exit77

Parser_advance.exit77:                            ; preds = %if.entry, %if.entry.i76
  %23 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %23, ptr %memberidx.i, align 8
  %.pre = load ptr, ptr %memberidx, align 8
  %.pre108 = load i64, ptr %.pre, align 4
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit77
  %24 = phi ptr [ null, %Parser_advance.exit ], [ %23, %Parser_advance.exit77 ]
  %25 = phi i64 [ %14, %Parser_advance.exit ], [ %.pre108, %Parser_advance.exit77 ]
  %26 = phi ptr [ %13, %Parser_advance.exit ], [ %.pre, %Parser_advance.exit77 ]
  %memberidx7 = getelementptr inbounds %Token, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx7, align 8
  %28 = icmp eq i64 %25, 38
  br i1 %28, label %if.entry10, label %else11

if.entry10:                                       ; preds = %ifend
  %29 = load i64, ptr %memberidx.i67, align 4
  %30 = load ptr, ptr %0, align 8
  %memberidx2.i79 = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 2
  %31 = load i64, ptr %memberidx2.i79, align 4
  %32 = icmp slt i64 %29, %31
  br i1 %32, label %if.entry.i83, label %Parser_advance.exit84

if.entry.i83:                                     ; preds = %if.entry10
  %33 = add nsw i64 %29, 1
  store i64 %33, ptr %memberidx.i67, align 4
  %memberidx.i.i81 = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i.i81, align 8
  %ptridx.i.i82 = getelementptr inbounds ptr, ptr %34, i64 %33
  %35 = load ptr, ptr %ptridx.i.i82, align 8
  store ptr %35, ptr %memberidx, align 8
  br label %Parser_advance.exit84

Parser_advance.exit84:                            ; preds = %if.entry10, %if.entry.i83
  %36 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %36, ptr %memberidx1.i, align 8
  %37 = load ptr, ptr %36, align 8
  br label %ifend12

else11:                                           ; preds = %ifend
  %38 = icmp ne ptr %24, null
  %39 = icmp eq i64 %25, 25
  %40 = and i1 %39, %38
  br i1 %40, label %if.entry19, label %ifend12

ifend12:                                          ; preds = %ifend30, %else11, %Parser_advance.exit84
  %end_range.0 = phi ptr [ %37, %Parser_advance.exit84 ], [ %27, %ifend30 ], [ %27, %else11 ]
  %41 = tail call ptr @malloc(i32 32)
  %42 = load i64, ptr %4, align 4
  %memberidx1.i98 = getelementptr inbounds %FloRange, ptr %end_range.0, i64 0, i32 1
  %43 = load i64, ptr %memberidx1.i98, align 4
  %memberidx2.i99 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %44 = load i64, ptr %memberidx2.i99, align 4
  %memberidx3.i100 = getelementptr inbounds %FloRange, ptr %end_range.0, i64 0, i32 3
  %45 = load i64, ptr %memberidx3.i100, align 4
  store i64 %42, ptr %41, align 4
  %memberidx1.i.i101 = getelementptr inbounds %FloRange, ptr %41, i64 0, i32 1
  store i64 %43, ptr %memberidx1.i.i101, align 4
  %memberidx2.i.i102 = getelementptr inbounds %FloRange, ptr %41, i64 0, i32 2
  store i64 %44, ptr %memberidx2.i.i102, align 4
  %memberidx3.i.i103 = getelementptr inbounds %FloRange, ptr %41, i64 0, i32 3
  store i64 %45, ptr %memberidx3.i.i103, align 4
  store ptr %41, ptr %2, align 8
  ret ptr %2

if.entry19:                                       ; preds = %else11
  %46 = tail call ptr @malloc(i32 41)
  %47 = load ptr, ptr %24, align 8
  %memberidx.i92 = getelementptr inbounds %NewExpressionNode, ptr %46, i64 0, i32 3
  store ptr %24, ptr %memberidx.i92, align 8
  %memberidx1.i93 = getelementptr inbounds %NewExpressionNode, ptr %46, i64 0, i32 4
  store i1 true, ptr %memberidx1.i93, align 1
  store ptr %47, ptr %46, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %46, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i94 = getelementptr inbounds %ExpressionNode, ptr %46, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i94, align 4
  %memberidx2.i95 = getelementptr inbounds %NewExpressionNode, ptr %46, i64 0, i32 5
  %48 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %48, align 8
  %memberidx.i7.i = getelementptr inbounds %Array_ExpressionNode_, ptr %48, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i.i96 = getelementptr inbounds %Array_ExpressionNode_, ptr %48, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i96, align 4
  %memberidx2.i.i97 = getelementptr inbounds %Array_ExpressionNode_, ptr %48, i64 0, i32 1
  %49 = tail call ptr @malloc(i32 64)
  store ptr %49, ptr %memberidx2.i.i97, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %48, ptr %memberidx2.i95, align 8
  store i1 false, ptr %memberidx1.i93, align 1
  %50 = load i64, ptr %memberidx.i67, align 4
  %51 = load ptr, ptr %0, align 8
  %memberidx2.i86 = getelementptr inbounds %Array_Token_, ptr %51, i64 0, i32 2
  %52 = load i64, ptr %memberidx2.i86, align 4
  %53 = icmp slt i64 %50, %52
  br i1 %53, label %if.entry.i90, label %if.entry19.Parser_advance.exit91_crit_edge

if.entry19.Parser_advance.exit91_crit_edge:       ; preds = %if.entry19
  %.pre109 = load ptr, ptr %memberidx, align 8
  br label %Parser_advance.exit91

if.entry.i90:                                     ; preds = %if.entry19
  %54 = add nsw i64 %50, 1
  store i64 %54, ptr %memberidx.i67, align 4
  %memberidx.i.i88 = getelementptr inbounds %Array_Token_, ptr %51, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i.i88, align 8
  %ptridx.i.i89 = getelementptr inbounds ptr, ptr %55, i64 %54
  %56 = load ptr, ptr %ptridx.i.i89, align 8
  store ptr %56, ptr %memberidx, align 8
  br label %Parser_advance.exit91

Parser_advance.exit91:                            ; preds = %if.entry19.Parser_advance.exit91_crit_edge, %if.entry.i90
  %57 = phi ptr [ %.pre109, %if.entry19.Parser_advance.exit91_crit_edge ], [ %56, %if.entry.i90 ]
  %58 = load i64, ptr %57, align 4
  %.not = icmp eq i64 %58, 26
  br i1 %.not, label %ifend30, label %if.entry28

if.entry28:                                       ; preds = %Parser_advance.exit91
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %48)
  br label %ifend30

ifend30:                                          ; preds = %Parser_advance.exit91, %if.entry28
  %59 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx34 = getelementptr inbounds %Token, ptr %59, i64 0, i32 1
  %60 = load ptr, ptr %memberidx34, align 8
  %61 = tail call ptr @malloc(i32 32)
  %62 = load i64, ptr %47, align 4
  %memberidx1.i66 = getelementptr inbounds %FloRange, ptr %60, i64 0, i32 1
  %63 = load i64, ptr %memberidx1.i66, align 4
  %memberidx2.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 2
  %64 = load i64, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %60, i64 0, i32 3
  %65 = load i64, ptr %memberidx3.i, align 4
  store i64 %62, ptr %61, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %61, i64 0, i32 1
  store i64 %63, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %61, i64 0, i32 2
  store i64 %64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %61, i64 0, i32 3
  store i64 %65, ptr %memberidx3.i.i, align 4
  store ptr %61, ptr %46, align 8
  store ptr %46, ptr %memberidx1.i, align 8
  br label %ifend12
}

define internal fastcc ptr @Parser_parse_statement(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %ifend38 [
    i64 57, label %if.entry
    i64 60, label %if.entry6
    i64 59, label %if.entry11
    i64 64, label %if.entry16
    i64 56, label %if.entry21
    i64 55, label %if.entry26
    i64 63, label %if.entry31
    i64 62, label %if.entry36
  ]

common.ret:                                       ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %Parser_advance.exit.i, %if.entry.i, %if.entry28.i, %ifend.i, %Parser_advance.exit38.i, %Parser_new_lines.exit.i, %Parser_advance.exit67, %Parser_advance.exit, %if.entry26, %if.entry21, %Parser_parse_while_statement.exit, %ifend38
  %common.ret.op = phi ptr [ %191, %ifend38 ], [ %58, %Parser_parse_while_statement.exit ], [ %173, %if.entry21 ], [ %174, %if.entry26 ], [ %182, %Parser_advance.exit ], [ %190, %Parser_advance.exit67 ], [ %5, %Parser_new_lines.exit.i ], [ %5, %Parser_advance.exit38.i ], [ %76, %ifend.i ], [ %76, %if.entry28.i ], [ %151, %switch.early.test ], [ %151, %if.entry.i ], [ %151, %Parser_advance.exit.i ], [ %151, %switch.early.test ], [ %151, %switch.early.test ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %5 = tail call ptr @malloc(i32 40)
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1.i98 = getelementptr inbounds %Token, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1.i98, align 8
  store ptr %7, ptr %5, align 8
  %memberidx.i.i.i99 = getelementptr inbounds %StatementNode, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i99, align 4
  %memberidx.i.i100 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 4
  store ptr null, ptr %memberidx.i.i100, align 8
  %memberidx.i24.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %8 = load i64, ptr %memberidx.i24.i, align 4
  %9 = load ptr, ptr %0, align 8
  %memberidx2.i.i101 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 2
  %10 = load i64, ptr %memberidx2.i.i101, align 4
  %11 = icmp slt i64 %8, %10
  br i1 %11, label %if.entry.i.i104, label %Parser_advance.exit.i111

if.entry.i.i104:                                  ; preds = %if.entry
  %12 = add nsw i64 %8, 1
  store i64 %12, ptr %memberidx.i24.i, align 4
  %memberidx.i.i25.i = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i.i25.i, align 8
  %ptridx.i.i.i103 = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i.i.i103, align 8
  store ptr %14, ptr %memberidx, align 8
  br label %Parser_advance.exit.i111

Parser_advance.exit.i111:                         ; preds = %if.entry.i.i104, %if.entry
  %memberidx2.i105 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 2
  %15 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %15, ptr %memberidx2.i105, align 8
  %16 = load ptr, ptr %15, align 8
  %17 = tail call ptr @malloc(i32 32)
  %18 = load i64, ptr %7, align 4
  %memberidx1.i.i106 = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 1
  %19 = load i64, ptr %memberidx1.i.i106, align 4
  %memberidx2.i26.i = getelementptr inbounds %FloRange, ptr %7, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i26.i, align 4
  %memberidx3.i27.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 3
  %21 = load i64, ptr %memberidx3.i27.i, align 4
  store i64 %18, ptr %17, align 4
  %memberidx1.i.i.i107 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i.i.i107, align 4
  %memberidx2.i.i.i108 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i.i.i108, align 4
  %memberidx3.i.i.i109 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 3
  store i64 %21, ptr %memberidx3.i.i.i109, align 4
  store ptr %17, ptr %5, align 8
  %memberidx7.i110 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 3
  %22 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %22, ptr %memberidx7.i110, align 8
  %23 = load ptr, ptr %memberidx, align 8
  %24 = load i64, ptr %23, align 4
  %25 = icmp eq i64 %24, 33
  %memberidx2.i.i30.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %26 = load ptr, ptr %memberidx2.i.i30.i, align 8
  %memberidx3.i.i31.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx3.i.i31.i, align 4
  %28 = icmp eq i64 %27, 0
  %29 = and i1 %25, %28
  br i1 %29, label %while.entry.i.i.preheader, label %Parser_new_lines.exit.i

while.entry.i.i.preheader:                        ; preds = %Parser_advance.exit.i111
  %30 = load ptr, ptr %0, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 2
  %memberidx.i.i.i.i112 = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i24.i, align 4
  %32 = load i64, ptr %memberidx2.i12.i.i, align 4
  %33 = icmp slt i64 %31, %32
  br i1 %33, label %while.entry.i.i, label %while.entry.i.i.us

while.entry.i.i.us:                               ; preds = %while.entry.i.i.preheader, %while.entry.i.i.us
  br label %while.entry.i.i.us

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i.i115
  %34 = phi i64 [ %41, %Parser_advance.exit.i.i115 ], [ 33, %while.entry.i.i.preheader ]
  %35 = phi i64 [ %44, %Parser_advance.exit.i.i115 ], [ %31, %while.entry.i.i.preheader ]
  %36 = load i64, ptr %memberidx2.i12.i.i, align 4
  %37 = icmp slt i64 %35, %36
  br i1 %37, label %if.entry.i.i.i114, label %Parser_advance.exit.i.i115

if.entry.i.i.i114:                                ; preds = %while.entry.i.i
  %38 = add nsw i64 %35, 1
  store i64 %38, ptr %memberidx.i24.i, align 4
  %39 = load ptr, ptr %memberidx.i.i.i.i112, align 8
  %ptridx.i.i.i.i113 = getelementptr inbounds ptr, ptr %39, i64 %38
  %40 = load ptr, ptr %ptridx.i.i.i.i113, align 8
  store ptr %40, ptr %memberidx, align 8
  %.pre139 = load i64, ptr %40, align 4
  %.pre140 = load i64, ptr %memberidx3.i.i31.i, align 4
  br label %Parser_advance.exit.i.i115

Parser_advance.exit.i.i115:                       ; preds = %if.entry.i.i.i114, %while.entry.i.i
  %41 = phi i64 [ %.pre139, %if.entry.i.i.i114 ], [ %34, %while.entry.i.i ]
  %42 = phi i64 [ %.pre140, %if.entry.i.i.i114 ], [ 0, %while.entry.i.i ]
  %43 = phi i64 [ %.pre139, %if.entry.i.i.i114 ], [ 33, %while.entry.i.i ]
  %44 = phi i64 [ %38, %if.entry.i.i.i114 ], [ %35, %while.entry.i.i ]
  %45 = icmp eq i64 %43, 33
  %46 = icmp eq i64 %42, 0
  %47 = and i1 %45, %46
  br i1 %47, label %while.entry.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i115, %Parser_advance.exit.i111
  %48 = phi i64 [ %24, %Parser_advance.exit.i111 ], [ %41, %Parser_advance.exit.i.i115 ]
  %49 = icmp eq i64 %48, 58
  br i1 %49, label %if.entry.i116, label %common.ret

if.entry.i116:                                    ; preds = %Parser_new_lines.exit.i
  %50 = load i64, ptr %memberidx.i24.i, align 4
  %51 = load ptr, ptr %0, align 8
  %memberidx2.i33.i = getelementptr inbounds %Array_Token_, ptr %51, i64 0, i32 2
  %52 = load i64, ptr %memberidx2.i33.i, align 4
  %53 = icmp slt i64 %50, %52
  br i1 %53, label %if.entry.i37.i, label %Parser_advance.exit38.i

if.entry.i37.i:                                   ; preds = %if.entry.i116
  %54 = add nsw i64 %50, 1
  store i64 %54, ptr %memberidx.i24.i, align 4
  %memberidx.i.i35.i = getelementptr inbounds %Array_Token_, ptr %51, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i.i35.i, align 8
  %ptridx.i.i36.i = getelementptr inbounds ptr, ptr %55, i64 %54
  %56 = load ptr, ptr %ptridx.i.i36.i, align 8
  store ptr %56, ptr %memberidx, align 8
  br label %Parser_advance.exit38.i

Parser_advance.exit38.i:                          ; preds = %if.entry.i37.i, %if.entry.i116
  %57 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %57, ptr %memberidx.i.i100, align 8
  br label %common.ret

if.entry6:                                        ; preds = %1
  %58 = tail call ptr @malloc(i32 32)
  %59 = load ptr, ptr %memberidx, align 8
  %memberidx1.i84 = getelementptr inbounds %Token, ptr %59, i64 0, i32 1
  %60 = load ptr, ptr %memberidx1.i84, align 8
  store ptr %60, ptr %58, align 8
  %memberidx.i.i.i85 = getelementptr inbounds %StatementNode, ptr %58, i64 0, i32 1
  store i64 4, ptr %memberidx.i.i.i85, align 4
  %memberidx.i.i86 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %61 = load i64, ptr %memberidx.i.i86, align 4
  %62 = load ptr, ptr %0, align 8
  %memberidx2.i.i87 = getelementptr inbounds %Array_Token_, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx2.i.i87, align 4
  %64 = icmp slt i64 %61, %63
  br i1 %64, label %if.entry.i.i90, label %Parser_parse_while_statement.exit

if.entry.i.i90:                                   ; preds = %if.entry6
  %65 = add nsw i64 %61, 1
  store i64 %65, ptr %memberidx.i.i86, align 4
  %memberidx.i.i16.i = getelementptr inbounds %Array_Token_, ptr %62, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i16.i, align 8
  %ptridx.i.i.i89 = getelementptr inbounds ptr, ptr %66, i64 %65
  %67 = load ptr, ptr %ptridx.i.i.i89, align 8
  store ptr %67, ptr %memberidx, align 8
  br label %Parser_parse_while_statement.exit

Parser_parse_while_statement.exit:                ; preds = %if.entry6, %if.entry.i.i90
  %memberidx2.i91 = getelementptr inbounds %WhileStatementNode, ptr %58, i64 0, i32 2
  %68 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %68, ptr %memberidx2.i91, align 8
  %69 = load ptr, ptr %68, align 8
  %70 = tail call ptr @malloc(i32 32)
  %71 = load i64, ptr %60, align 4
  %memberidx1.i.i92 = getelementptr inbounds %FloRange, ptr %69, i64 0, i32 1
  %72 = load i64, ptr %memberidx1.i.i92, align 4
  %memberidx2.i17.i = getelementptr inbounds %FloRange, ptr %60, i64 0, i32 2
  %73 = load i64, ptr %memberidx2.i17.i, align 4
  %memberidx3.i18.i = getelementptr inbounds %FloRange, ptr %69, i64 0, i32 3
  %74 = load i64, ptr %memberidx3.i18.i, align 4
  store i64 %71, ptr %70, align 4
  %memberidx1.i.i.i93 = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 1
  store i64 %72, ptr %memberidx1.i.i.i93, align 4
  %memberidx2.i.i.i94 = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 2
  store i64 %73, ptr %memberidx2.i.i.i94, align 4
  %memberidx3.i.i.i95 = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 3
  store i64 %74, ptr %memberidx3.i.i.i95, align 4
  store ptr %70, ptr %58, align 8
  %memberidx7.i = getelementptr inbounds %WhileStatementNode, ptr %58, i64 0, i32 3
  %75 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %75, ptr %memberidx7.i, align 8
  br label %common.ret

if.entry11:                                       ; preds = %1
  %76 = tail call ptr @malloc(i32 72)
  %77 = load ptr, ptr %memberidx, align 8
  %memberidx1.i70 = getelementptr inbounds %Token, ptr %77, i64 0, i32 1
  %78 = load ptr, ptr %memberidx1.i70, align 8
  %memberidx.i.i71 = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 2
  %memberidx1.i.i72 = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 3
  %memberidx2.i.i73 = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 4
  %memberidx3.i.i74 = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 6
  store i64 0, ptr %memberidx3.i.i74, align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %memberidx.i.i71, i8 0, i64 24, i1 false)
  store ptr %78, ptr %76, align 8
  %memberidx.i.i.i75 = getelementptr inbounds %StatementNode, ptr %76, i64 0, i32 1
  store i64 3, ptr %memberidx.i.i.i75, align 4
  %memberidx.i60.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %79 = load i64, ptr %memberidx.i60.i, align 4
  %80 = load ptr, ptr %0, align 8
  %memberidx2.i61.i = getelementptr inbounds %Array_Token_, ptr %80, i64 0, i32 2
  %81 = load i64, ptr %memberidx2.i61.i, align 4
  %82 = icmp slt i64 %79, %81
  br i1 %82, label %if.entry.i.i77, label %Parser_advance.exit.i78

if.entry.i.i77:                                   ; preds = %if.entry11
  %83 = add nsw i64 %79, 1
  store i64 %83, ptr %memberidx.i60.i, align 4
  %memberidx.i.i63.i = getelementptr inbounds %Array_Token_, ptr %80, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i.i63.i, align 8
  %ptridx.i.i.i76 = getelementptr inbounds ptr, ptr %84, i64 %83
  %85 = load ptr, ptr %ptridx.i.i.i76, align 8
  store ptr %85, ptr %memberidx, align 8
  %.pre = load i64, ptr %memberidx2.i61.i, align 4
  br label %Parser_advance.exit.i78

Parser_advance.exit.i78:                          ; preds = %if.entry.i.i77, %if.entry11
  %86 = phi ptr [ %85, %if.entry.i.i77 ], [ %77, %if.entry11 ]
  %87 = phi i64 [ %.pre, %if.entry.i.i77 ], [ %81, %if.entry11 ]
  %88 = phi i64 [ %83, %if.entry.i.i77 ], [ %79, %if.entry11 ]
  %89 = add nsw i64 %88, 1
  %90 = icmp slt i64 %89, %87
  %91 = add i64 %87, -1
  %.sink142 = select i1 %90, i64 %89, i64 %91
  %memberidx.i12.i.i = getelementptr inbounds %Array_Token_, ptr %80, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i12.i.i, align 8
  %ptridx.i13.i.i = getelementptr inbounds ptr, ptr %92, i64 %.sink142
  %common.ret.op.i.i = load ptr, ptr %ptridx.i13.i.i, align 8
  %93 = load i64, ptr %common.ret.op.i.i, align 4
  %.not.i = icmp eq i64 %93, 69
  br i1 %.not.i, label %else.i, label %if.entry.i79

if.entry.i79:                                     ; preds = %Parser_advance.exit.i78
  %94 = load i64, ptr %86, align 4
  %.not57.i = icmp eq i64 %94, 2
  br i1 %.not57.i, label %if.entry.i85.i, label %ifend7.i

else.i:                                           ; preds = %Parser_advance.exit.i78
  store i64 1, ptr %memberidx3.i.i74, align 4
  %memberidx22.i = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 7
  %95 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 54)
  store ptr %95, ptr %memberidx22.i, align 8
  %96 = load ptr, ptr %memberidx, align 8
  %97 = load i64, ptr %96, align 4
  %98 = icmp eq i64 %97, 69
  br i1 %98, label %if.entry.i72.i, label %else.i.i

if.entry.i72.i:                                   ; preds = %else.i
  %99 = load i64, ptr %memberidx.i60.i, align 4
  %100 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i80 = getelementptr inbounds %Array_Token_, ptr %100, i64 0, i32 2
  %101 = load i64, ptr %memberidx2.i.i.i80, align 4
  %102 = icmp slt i64 %99, %101
  br i1 %102, label %if.entry.i.i.i, label %Parser_eat.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry.i72.i
  %103 = add nsw i64 %99, 1
  store i64 %103, ptr %memberidx.i60.i, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %100, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %104, i64 %103
  %105 = load ptr, ptr %ptridx.i.i.i.i, align 8
  store ptr %105, ptr %memberidx, align 8
  br label %Parser_eat.exit.i

else.i.i:                                         ; preds = %else.i
  %106 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %96, i64 0, i32 1
  %107 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %106, align 4
  %memberidx1.i82.i.i = getelementptr inbounds %Token, ptr %106, i64 0, i32 1
  store ptr %107, ptr %memberidx1.i82.i.i, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i72.i, %if.entry.i.i.i, %else.i.i
  %memberidx23.i = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 5
  %108 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %108, ptr %memberidx23.i, align 8
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry17.i, %Parser_eat.exit108.i, %Parser_eat.exit.i
  %109 = load ptr, ptr %memberidx, align 8
  %memberidx27.i = getelementptr inbounds %Token, ptr %109, i64 0, i32 1
  %110 = load ptr, ptr %memberidx27.i, align 8
  %111 = tail call ptr @malloc(i32 32)
  %112 = load i64, ptr %78, align 4
  %memberidx1.i73.i = getelementptr inbounds %FloRange, ptr %110, i64 0, i32 1
  %113 = load i64, ptr %memberidx1.i73.i, align 4
  %memberidx2.i74.i = getelementptr inbounds %FloRange, ptr %78, i64 0, i32 2
  %114 = load i64, ptr %memberidx2.i74.i, align 4
  %memberidx3.i75.i = getelementptr inbounds %FloRange, ptr %110, i64 0, i32 3
  %115 = load i64, ptr %memberidx3.i75.i, align 4
  store i64 %112, ptr %111, align 4
  %memberidx1.i.i.i82 = getelementptr inbounds %FloRange, ptr %111, i64 0, i32 1
  store i64 %113, ptr %memberidx1.i.i.i82, align 4
  %memberidx2.i.i76.i = getelementptr inbounds %FloRange, ptr %111, i64 0, i32 2
  store i64 %114, ptr %memberidx2.i.i76.i, align 4
  %memberidx3.i.i77.i = getelementptr inbounds %FloRange, ptr %111, i64 0, i32 3
  store i64 %115, ptr %memberidx3.i.i77.i, align 4
  store ptr %111, ptr %76, align 8
  %116 = load ptr, ptr %memberidx, align 8
  %117 = load i64, ptr %116, align 4
  %118 = icmp ne i64 %117, 46
  %memberidx2.i79.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %119 = load ptr, ptr %memberidx2.i79.i, align 8
  %memberidx3.i80.i = getelementptr inbounds %Array_FloError_, ptr %119, i64 0, i32 2
  %120 = load i64, ptr %memberidx3.i80.i, align 4
  %121 = icmp eq i64 %120, 0
  %122 = and i1 %118, %121
  br i1 %122, label %if.entry28.i, label %common.ret

ifend7.i:                                         ; preds = %if.entry.i79
  %123 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  store ptr %123, ptr %memberidx.i.i71, align 8
  %.pre133 = load ptr, ptr %memberidx, align 8
  %.pre134 = load i64, ptr %.pre133, align 4
  %phi.cmp = icmp eq i64 %.pre134, 2
  br i1 %phi.cmp, label %if.entry.i85.i, label %else.i91.i

if.entry.i85.i:                                   ; preds = %if.entry.i79, %ifend7.i
  %124 = phi ptr [ %.pre133, %ifend7.i ], [ %86, %if.entry.i79 ]
  %125 = load i64, ptr %memberidx.i60.i, align 4
  %126 = load ptr, ptr %0, align 8
  %memberidx2.i.i84.i = getelementptr inbounds %Array_Token_, ptr %126, i64 0, i32 2
  %127 = load i64, ptr %memberidx2.i.i84.i, align 4
  %128 = icmp slt i64 %125, %127
  br i1 %128, label %if.entry.i.i89.i, label %Parser_eat.exit94.i

if.entry.i.i89.i:                                 ; preds = %if.entry.i85.i
  %129 = add nsw i64 %125, 1
  store i64 %129, ptr %memberidx.i60.i, align 4
  %memberidx.i.i.i87.i = getelementptr inbounds %Array_Token_, ptr %126, i64 0, i32 1
  %130 = load ptr, ptr %memberidx.i.i.i87.i, align 8
  %ptridx.i.i.i88.i = getelementptr inbounds ptr, ptr %130, i64 %129
  %131 = load ptr, ptr %ptridx.i.i.i88.i, align 8
  store ptr %131, ptr %memberidx, align 8
  br label %Parser_eat.exit94.i

else.i91.i:                                       ; preds = %ifend7.i
  %132 = tail call ptr @malloc(i32 16)
  %memberidx35.i92.i = getelementptr inbounds %Token, ptr %.pre133, i64 0, i32 1
  %133 = load ptr, ptr %memberidx35.i92.i, align 8
  store i64 46, ptr %132, align 4
  %memberidx1.i82.i93.i = getelementptr inbounds %Token, ptr %132, i64 0, i32 1
  store ptr %133, ptr %memberidx1.i82.i93.i, align 8
  %.pre135 = load ptr, ptr %memberidx, align 8
  br label %Parser_eat.exit94.i

Parser_eat.exit94.i:                              ; preds = %if.entry.i85.i, %if.entry.i.i89.i, %else.i91.i
  %134 = phi ptr [ %124, %if.entry.i85.i ], [ %131, %if.entry.i.i89.i ], [ %.pre135, %else.i91.i ]
  %135 = load i64, ptr %134, align 4
  %.not58.i = icmp eq i64 %135, 2
  br i1 %.not58.i, label %if.entry.i99.i, label %ifend13.i

ifend13.i:                                        ; preds = %Parser_eat.exit94.i
  %136 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %136, ptr %memberidx1.i.i72, align 8
  %.pre136 = load ptr, ptr %memberidx, align 8
  %.pre137 = load i64, ptr %.pre136, align 4
  %phi.cmp141 = icmp eq i64 %.pre137, 2
  br i1 %phi.cmp141, label %if.entry.i99.i, label %else.i105.i

if.entry.i99.i:                                   ; preds = %Parser_eat.exit94.i, %ifend13.i
  %137 = phi ptr [ %.pre136, %ifend13.i ], [ %134, %Parser_eat.exit94.i ]
  %138 = load i64, ptr %memberidx.i60.i, align 4
  %139 = load ptr, ptr %0, align 8
  %memberidx2.i.i98.i = getelementptr inbounds %Array_Token_, ptr %139, i64 0, i32 2
  %140 = load i64, ptr %memberidx2.i.i98.i, align 4
  %141 = icmp slt i64 %138, %140
  br i1 %141, label %if.entry.i.i103.i, label %Parser_eat.exit108.i

if.entry.i.i103.i:                                ; preds = %if.entry.i99.i
  %142 = add nsw i64 %138, 1
  store i64 %142, ptr %memberidx.i60.i, align 4
  %memberidx.i.i.i101.i = getelementptr inbounds %Array_Token_, ptr %139, i64 0, i32 1
  %143 = load ptr, ptr %memberidx.i.i.i101.i, align 8
  %ptridx.i.i.i102.i = getelementptr inbounds ptr, ptr %143, i64 %142
  %144 = load ptr, ptr %ptridx.i.i.i102.i, align 8
  store ptr %144, ptr %memberidx, align 8
  br label %Parser_eat.exit108.i

else.i105.i:                                      ; preds = %ifend13.i
  %145 = tail call ptr @malloc(i32 16)
  %memberidx35.i106.i = getelementptr inbounds %Token, ptr %.pre136, i64 0, i32 1
  %146 = load ptr, ptr %memberidx35.i106.i, align 8
  store i64 46, ptr %145, align 4
  %memberidx1.i82.i107.i = getelementptr inbounds %Token, ptr %145, i64 0, i32 1
  store ptr %146, ptr %memberidx1.i82.i107.i, align 8
  %.pre138 = load ptr, ptr %memberidx, align 8
  br label %Parser_eat.exit108.i

Parser_eat.exit108.i:                             ; preds = %if.entry.i99.i, %if.entry.i.i103.i, %else.i105.i
  %147 = phi ptr [ %137, %if.entry.i99.i ], [ %144, %if.entry.i.i103.i ], [ %.pre138, %else.i105.i ]
  %148 = load i64, ptr %147, align 4
  %.not59.i = icmp eq i64 %148, 27
  br i1 %.not59.i, label %ifend.i, label %if.entry17.i

if.entry17.i:                                     ; preds = %Parser_eat.exit108.i
  %149 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  store ptr %149, ptr %memberidx2.i.i73, align 8
  br label %ifend.i

if.entry28.i:                                     ; preds = %ifend.i
  %memberidx31.i = getelementptr inbounds %ForStatementNode, ptr %76, i64 0, i32 8
  %150 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %150, ptr %memberidx31.i, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %151 = tail call ptr @malloc(i32 24)
  %152 = load ptr, ptr %memberidx, align 8
  %memberidx1.i = getelementptr inbounds %Token, ptr %152, i64 0, i32 1
  %153 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %ReturnStatementNode, ptr %151, i64 0, i32 2
  store ptr null, ptr %memberidx.i.i, align 8
  store ptr %153, ptr %151, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %151, i64 0, i32 1
  store i64 7, ptr %memberidx.i.i.i, align 4
  %memberidx.i19.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %154 = load i64, ptr %memberidx.i19.i, align 4
  %155 = load ptr, ptr %0, align 8
  %memberidx2.i20.i = getelementptr inbounds %Array_Token_, ptr %155, i64 0, i32 2
  %156 = load i64, ptr %memberidx2.i20.i, align 4
  %157 = icmp slt i64 %154, %156
  br i1 %157, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %if.entry16
  %158 = add nsw i64 %154, 1
  store i64 %158, ptr %memberidx.i19.i, align 4
  %memberidx.i.i22.i = getelementptr inbounds %Array_Token_, ptr %155, i64 0, i32 1
  %159 = load ptr, ptr %memberidx.i.i22.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %159, i64 %158
  %160 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %160, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %if.entry16
  %161 = phi ptr [ %160, %if.entry.i.i ], [ %152, %if.entry16 ]
  %memberidx2.i24.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %162 = load ptr, ptr %memberidx2.i24.i, align 8
  %memberidx3.i25.i = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 2
  %163 = load i64, ptr %memberidx3.i25.i, align 4
  %.fr = freeze i64 %163
  %164 = icmp eq i64 %.fr, 0
  br i1 %164, label %switch.early.test, label %common.ret

switch.early.test:                                ; preds = %Parser_advance.exit.i
  %165 = load i64, ptr %161, align 4
  switch i64 %165, label %if.entry.i [
    i64 46, label %common.ret
    i64 33, label %common.ret
    i64 28, label %common.ret
  ]

if.entry.i:                                       ; preds = %switch.early.test
  %166 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %167 = load ptr, ptr %166, align 8
  %168 = tail call ptr @malloc(i32 32)
  %169 = load i64, ptr %153, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 1
  %170 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %153, i64 0, i32 2
  %171 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %167, i64 0, i32 3
  %172 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %169, ptr %168, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %168, i64 0, i32 1
  store i64 %170, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %168, i64 0, i32 2
  store i64 %171, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %168, i64 0, i32 3
  store i64 %172, ptr %memberidx3.i.i.i, align 4
  store ptr %168, ptr %151, align 8
  store ptr %166, ptr %memberidx.i.i, align 8
  br label %common.ret

if.entry21:                                       ; preds = %1
  %173 = tail call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry26:                                       ; preds = %1
  %174 = tail call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry31:                                       ; preds = %1
  %memberidx.i57 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %175 = load i64, ptr %memberidx.i57, align 4
  %176 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %176, i64 0, i32 2
  %177 = load i64, ptr %memberidx2.i, align 4
  %178 = icmp slt i64 %175, %177
  br i1 %178, label %if.entry.i59, label %Parser_advance.exit

if.entry.i59:                                     ; preds = %if.entry31
  %179 = add nsw i64 %175, 1
  store i64 %179, ptr %memberidx.i57, align 4
  %memberidx.i.i58 = getelementptr inbounds %Array_Token_, ptr %176, i64 0, i32 1
  %180 = load ptr, ptr %memberidx.i.i58, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %180, i64 %179
  %181 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %181, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry31, %if.entry.i59
  %182 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %182, align 8
  %memberidx.i60 = getelementptr inbounds %StatementNode, ptr %182, i64 0, i32 1
  store i64 5, ptr %memberidx.i60, align 4
  br label %common.ret

if.entry36:                                       ; preds = %1
  %memberidx.i61 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %183 = load i64, ptr %memberidx.i61, align 4
  %184 = load ptr, ptr %0, align 8
  %memberidx2.i62 = getelementptr inbounds %Array_Token_, ptr %184, i64 0, i32 2
  %185 = load i64, ptr %memberidx2.i62, align 4
  %186 = icmp slt i64 %183, %185
  br i1 %186, label %if.entry.i66, label %Parser_advance.exit67

if.entry.i66:                                     ; preds = %if.entry36
  %187 = add nsw i64 %183, 1
  store i64 %187, ptr %memberidx.i61, align 4
  %memberidx.i.i64 = getelementptr inbounds %Array_Token_, ptr %184, i64 0, i32 1
  %188 = load ptr, ptr %memberidx.i.i64, align 8
  %ptridx.i.i65 = getelementptr inbounds ptr, ptr %188, i64 %187
  %189 = load ptr, ptr %ptridx.i.i65, align 8
  store ptr %189, ptr %memberidx, align 8
  br label %Parser_advance.exit67

Parser_advance.exit67:                            ; preds = %if.entry36, %if.entry.i66
  %190 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %190, align 8
  %memberidx.i68 = getelementptr inbounds %StatementNode, ptr %190, i64 0, i32 1
  store i64 6, ptr %memberidx.i68, align 4
  br label %common.ret

ifend38:                                          ; preds = %1
  %191 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  br label %common.ret
}

define internal fastcc void @Parser_parse_args(ptr %0, ptr nocapture %1) unnamed_addr {
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, 33
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx3.i.i, align 4
  %8 = icmp eq i64 %7, 0
  %9 = and i1 %5, %8
  br i1 %9, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %2
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 2
  %memberidx.i.i.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx.i11.i, align 4
  %12 = load i64, ptr %memberidx2.i12.i, align 4
  %13 = icmp slt i64 %11, %12
  br i1 %13, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %14 = phi i64 [ %22, %Parser_advance.exit.i ], [ %11, %while.entry.i.preheader ]
  %15 = load i64, ptr %memberidx2.i12.i, align 4
  %16 = icmp slt i64 %14, %15
  br i1 %16, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %17 = add nsw i64 %14, 1
  store i64 %17, ptr %memberidx.i11.i, align 4
  %18 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %19, ptr %memberidx.i, align 8
  %.pre = load i64, ptr %19, align 4
  %.pre70 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %20 = phi i64 [ %.pre70, %if.entry.i.i ], [ 0, %while.entry.i ]
  %21 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %22 = phi i64 [ %17, %if.entry.i.i ], [ %14, %while.entry.i ]
  %23 = icmp eq i64 %21, 33
  %24 = icmp eq i64 %20, 0
  %25 = and i1 %23, %24
  br i1 %25, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %2
  %26 = tail call fastcc ptr @Parser_parse_arg(ptr nonnull %0)
  %memberidx.i34 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i34, align 4
  %memberidx1.i35 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 3
  %28 = load i64, ptr %memberidx1.i35, align 4
  %.not.i36 = icmp slt i64 %27, %28
  br i1 %.not.i36, label %Parser_new_lines.exit.Array_ArgNode____sl__.exit42_crit_edge, label %if.entry.i39

Parser_new_lines.exit.Array_ArgNode____sl__.exit42_crit_edge: ; preds = %Parser_new_lines.exit
  %memberidx4.i40.phi.trans.insert = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %.pre72 = load ptr, ptr %memberidx4.i40.phi.trans.insert, align 8
  br label %Array_ArgNode____sl__.exit42

if.entry.i39:                                     ; preds = %Parser_new_lines.exit
  %29 = shl nuw i64 %28, 1
  store i64 %29, ptr %memberidx1.i35, align 4
  %memberidx2.i.i38 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2.i.i38, align 8
  %31 = shl i64 %28, 4
  %32 = tail call ptr @realloc(ptr %30, i64 %31)
  store ptr %32, ptr %memberidx2.i.i38, align 8
  %.pre71 = load i64, ptr %memberidx.i34, align 4
  br label %Array_ArgNode____sl__.exit42

Array_ArgNode____sl__.exit42:                     ; preds = %Parser_new_lines.exit.Array_ArgNode____sl__.exit42_crit_edge, %if.entry.i39
  %33 = phi ptr [ %.pre72, %Parser_new_lines.exit.Array_ArgNode____sl__.exit42_crit_edge ], [ %32, %if.entry.i39 ]
  %34 = phi i64 [ %27, %Parser_new_lines.exit.Array_ArgNode____sl__.exit42_crit_edge ], [ %.pre71, %if.entry.i39 ]
  %35 = add nsw i64 %34, 1
  store i64 %35, ptr %memberidx.i34, align 4
  %memberidx4.i40 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %ptridx.i41 = getelementptr inbounds ptr, ptr %33, i64 %34
  store ptr %26, ptr %ptridx.i41, align 8
  %36 = load ptr, ptr %memberidx.i, align 8
  %37 = load i64, ptr %36, align 4
  %38 = icmp eq i64 %37, 3
  %39 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i45 = getelementptr inbounds %Array_FloError_, ptr %39, i64 0, i32 2
  %40 = load i64, ptr %memberidx3.i45, align 4
  %41 = icmp eq i64 %40, 0
  %42 = and i1 %38, %41
  br i1 %42, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Array_ArgNode____sl__.exit42
  %memberidx.i11.i50 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_ArgNode____sl__.exit
  %43 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 3)
  %44 = load ptr, ptr %memberidx.i, align 8
  %45 = load i64, ptr %44, align 4
  %46 = icmp eq i64 %45, 33
  %47 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i49 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %48 = load i64, ptr %memberidx3.i.i49, align 4
  %49 = icmp eq i64 %48, 0
  %50 = and i1 %46, %49
  br i1 %50, label %while.entry.i52.preheader, label %Parser_new_lines.exit61

while.entry.i52.preheader:                        ; preds = %while.entry
  %51 = load ptr, ptr %0, align 8
  %memberidx2.i12.i51 = getelementptr inbounds %Array_Token_, ptr %51, i64 0, i32 2
  %memberidx.i.i.i54 = getelementptr inbounds %Array_Token_, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i11.i50, align 4
  %53 = load i64, ptr %memberidx2.i12.i51, align 4
  %54 = icmp slt i64 %52, %53
  br i1 %54, label %while.entry.i52, label %while.entry.i52.us

while.entry.i52.us:                               ; preds = %while.entry.i52.preheader, %while.entry.i52.us
  br label %while.entry.i52.us

while.entry.i52:                                  ; preds = %while.entry.i52.preheader, %Parser_advance.exit.i60
  %55 = phi i64 [ %63, %Parser_advance.exit.i60 ], [ %52, %while.entry.i52.preheader ]
  %56 = load i64, ptr %memberidx2.i12.i51, align 4
  %57 = icmp slt i64 %55, %56
  br i1 %57, label %if.entry.i.i56, label %Parser_advance.exit.i60

if.entry.i.i56:                                   ; preds = %while.entry.i52
  %58 = add nsw i64 %55, 1
  store i64 %58, ptr %memberidx.i11.i50, align 4
  %59 = load ptr, ptr %memberidx.i.i.i54, align 8
  %ptridx.i.i.i55 = getelementptr inbounds ptr, ptr %59, i64 %58
  %60 = load ptr, ptr %ptridx.i.i.i55, align 8
  store ptr %60, ptr %memberidx.i, align 8
  %.pre73 = load i64, ptr %60, align 4
  %.pre74 = load i64, ptr %memberidx3.i.i49, align 4
  br label %Parser_advance.exit.i60

Parser_advance.exit.i60:                          ; preds = %if.entry.i.i56, %while.entry.i52
  %61 = phi i64 [ %.pre74, %if.entry.i.i56 ], [ 0, %while.entry.i52 ]
  %62 = phi i64 [ %.pre73, %if.entry.i.i56 ], [ 33, %while.entry.i52 ]
  %63 = phi i64 [ %58, %if.entry.i.i56 ], [ %55, %while.entry.i52 ]
  %64 = icmp eq i64 %62, 33
  %65 = icmp eq i64 %61, 0
  %66 = and i1 %64, %65
  br i1 %66, label %while.entry.i52, label %Parser_new_lines.exit61

Parser_new_lines.exit61:                          ; preds = %Parser_advance.exit.i60, %while.entry
  %67 = tail call fastcc ptr @Parser_parse_arg(ptr nonnull %0)
  %68 = load i64, ptr %memberidx.i34, align 4
  %69 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp slt i64 %68, %69
  br i1 %.not.i, label %Parser_new_lines.exit61.Array_ArgNode____sl__.exit_crit_edge, label %if.entry.i

Parser_new_lines.exit61.Array_ArgNode____sl__.exit_crit_edge: ; preds = %Parser_new_lines.exit61
  %.pre76 = load ptr, ptr %memberidx4.i40, align 8
  br label %Array_ArgNode____sl__.exit

if.entry.i:                                       ; preds = %Parser_new_lines.exit61
  %70 = shl nuw i64 %69, 1
  store i64 %70, ptr %memberidx1.i35, align 4
  %71 = load ptr, ptr %memberidx4.i40, align 8
  %72 = shl i64 %69, 4
  %73 = tail call ptr @realloc(ptr %71, i64 %72)
  store ptr %73, ptr %memberidx4.i40, align 8
  %.pre75 = load i64, ptr %memberidx.i34, align 4
  br label %Array_ArgNode____sl__.exit

Array_ArgNode____sl__.exit:                       ; preds = %Parser_new_lines.exit61.Array_ArgNode____sl__.exit_crit_edge, %if.entry.i
  %74 = phi ptr [ %.pre76, %Parser_new_lines.exit61.Array_ArgNode____sl__.exit_crit_edge ], [ %73, %if.entry.i ]
  %75 = phi i64 [ %68, %Parser_new_lines.exit61.Array_ArgNode____sl__.exit_crit_edge ], [ %.pre75, %if.entry.i ]
  %76 = add nsw i64 %75, 1
  store i64 %76, ptr %memberidx.i34, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %74, i64 %75
  store ptr %67, ptr %ptridx.i, align 8
  %77 = load ptr, ptr %memberidx.i, align 8
  %78 = load i64, ptr %77, align 4
  %79 = icmp eq i64 %78, 3
  %80 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %80, i64 0, i32 2
  %81 = load i64, ptr %memberidx3.i, align 4
  %82 = icmp eq i64 %81, 0
  %83 = and i1 %79, %82
  br i1 %83, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_ArgNode____sl__.exit, %Array_ArgNode____sl__.exit42
  %84 = phi i64 [ %40, %Array_ArgNode____sl__.exit42 ], [ %81, %Array_ArgNode____sl__.exit ]
  %85 = phi ptr [ %39, %Array_ArgNode____sl__.exit42 ], [ %80, %Array_ArgNode____sl__.exit ]
  %86 = phi i64 [ %37, %Array_ArgNode____sl__.exit42 ], [ %78, %Array_ArgNode____sl__.exit ]
  %87 = icmp eq i64 %86, 33
  %memberidx3.i.i17 = getelementptr inbounds %Array_FloError_, ptr %85, i64 0, i32 2
  %88 = icmp eq i64 %84, 0
  %89 = and i1 %87, %88
  br i1 %89, label %while.entry.i20.preheader, label %Parser_new_lines.exit29

while.entry.i20.preheader:                        ; preds = %while.end
  %memberidx.i11.i18 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %90 = load ptr, ptr %0, align 8
  %memberidx2.i12.i19 = getelementptr inbounds %Array_Token_, ptr %90, i64 0, i32 2
  %memberidx.i.i.i22 = getelementptr inbounds %Array_Token_, ptr %90, i64 0, i32 1
  %91 = load i64, ptr %memberidx.i11.i18, align 4
  %92 = load i64, ptr %memberidx2.i12.i19, align 4
  %93 = icmp slt i64 %91, %92
  br i1 %93, label %while.entry.i20, label %while.entry.i20.us

while.entry.i20.us:                               ; preds = %while.entry.i20.preheader, %while.entry.i20.us
  br label %while.entry.i20.us

while.entry.i20:                                  ; preds = %while.entry.i20.preheader, %Parser_advance.exit.i28
  %94 = phi i64 [ %102, %Parser_advance.exit.i28 ], [ %91, %while.entry.i20.preheader ]
  %95 = load i64, ptr %memberidx2.i12.i19, align 4
  %96 = icmp slt i64 %94, %95
  br i1 %96, label %if.entry.i.i24, label %Parser_advance.exit.i28

if.entry.i.i24:                                   ; preds = %while.entry.i20
  %97 = add nsw i64 %94, 1
  store i64 %97, ptr %memberidx.i11.i18, align 4
  %98 = load ptr, ptr %memberidx.i.i.i22, align 8
  %ptridx.i.i.i23 = getelementptr inbounds ptr, ptr %98, i64 %97
  %99 = load ptr, ptr %ptridx.i.i.i23, align 8
  store ptr %99, ptr %memberidx.i, align 8
  %.pre77 = load i64, ptr %99, align 4
  %.pre78 = load i64, ptr %memberidx3.i.i17, align 4
  br label %Parser_advance.exit.i28

Parser_advance.exit.i28:                          ; preds = %if.entry.i.i24, %while.entry.i20
  %100 = phi i64 [ %.pre78, %if.entry.i.i24 ], [ 0, %while.entry.i20 ]
  %101 = phi i64 [ %.pre77, %if.entry.i.i24 ], [ 33, %while.entry.i20 ]
  %102 = phi i64 [ %97, %if.entry.i.i24 ], [ %94, %while.entry.i20 ]
  %103 = icmp eq i64 %101, 33
  %104 = icmp eq i64 %100, 0
  %105 = and i1 %103, %104
  br i1 %105, label %while.entry.i20, label %Parser_new_lines.exit29

Parser_new_lines.exit29:                          ; preds = %Parser_advance.exit.i28, %while.end
  ret void
}

define internal fastcc noalias ptr @Parser_parse_const_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 2, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 3
  store ptr null, ptr %memberidx.i, align 8
  %memberidx.i24 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %5 = load i64, ptr %memberidx.i24, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i25 = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i25, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i24, align 4
  %memberidx.i.i27 = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i27, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %10, i64 %9
  %11 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 2
  %12 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 54)
  store ptr %12, ptr %memberidx2, align 8
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %16 = load i64, ptr %memberidx.i24, align 4
  %17 = load ptr, ptr %0, align 8
  %memberidx2.i29 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx2.i29, align 4
  %19 = icmp slt i64 %16, %18
  br i1 %19, label %if.entry.i33, label %Parser_advance.exit34

if.entry.i33:                                     ; preds = %if.entry
  %20 = add nsw i64 %16, 1
  store i64 %20, ptr %memberidx.i24, align 4
  %memberidx.i.i31 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i.i31, align 8
  %ptridx.i.i32 = getelementptr inbounds ptr, ptr %21, i64 %20
  %22 = load ptr, ptr %ptridx.i.i32, align 8
  store ptr %22, ptr %memberidx, align 8
  br label %Parser_advance.exit34

Parser_advance.exit34:                            ; preds = %if.entry, %if.entry.i33
  %23 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %23, ptr %memberidx.i, align 8
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit34
  %24 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 38)
  %memberidx6 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 4
  %25 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %25, ptr %memberidx6, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = tail call ptr @malloc(i32 32)
  %28 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 1
  %29 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %30 = load i64, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 3
  %31 = load i64, ptr %memberidx3.i, align 4
  store i64 %28, ptr %27, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %27, i64 0, i32 1
  store i64 %29, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %27, i64 0, i32 2
  store i64 %30, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %27, i64 0, i32 3
  store i64 %31, ptr %memberidx3.i.i, align 4
  store ptr %27, ptr %2, align 8
  ret ptr %2
}

define internal fastcc void @Parser_parse_type_list(ptr %0, ptr nocapture %1) unnamed_addr {
  %3 = tail call fastcc ptr @Parser_parse_type(ptr %0)
  %memberidx.i20 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 2
  %4 = load i64, ptr %memberidx.i20, align 4
  %memberidx1.i21 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 3
  %5 = load i64, ptr %memberidx1.i21, align 4
  %.not.i22 = icmp slt i64 %4, %5
  br i1 %.not.i22, label %.Array_TypeNode____sl__.exit28_crit_edge, label %if.entry.i25

.Array_TypeNode____sl__.exit28_crit_edge:         ; preds = %2
  %memberidx4.i26.phi.trans.insert = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %.pre29 = load ptr, ptr %memberidx4.i26.phi.trans.insert, align 8
  br label %Array_TypeNode____sl__.exit28

if.entry.i25:                                     ; preds = %2
  %6 = shl nuw i64 %5, 1
  store i64 %6, ptr %memberidx1.i21, align 4
  %memberidx2.i.i24 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i.i24, align 8
  %8 = shl i64 %5, 4
  %9 = tail call ptr @realloc(ptr %7, i64 %8)
  store ptr %9, ptr %memberidx2.i.i24, align 8
  %.pre = load i64, ptr %memberidx.i20, align 4
  br label %Array_TypeNode____sl__.exit28

Array_TypeNode____sl__.exit28:                    ; preds = %.Array_TypeNode____sl__.exit28_crit_edge, %if.entry.i25
  %10 = phi ptr [ %.pre29, %.Array_TypeNode____sl__.exit28_crit_edge ], [ %9, %if.entry.i25 ]
  %11 = phi i64 [ %4, %.Array_TypeNode____sl__.exit28_crit_edge ], [ %.pre, %if.entry.i25 ]
  %12 = add nsw i64 %11, 1
  store i64 %12, ptr %memberidx.i20, align 4
  %memberidx4.i26 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %ptridx.i27 = getelementptr inbounds ptr, ptr %10, i64 %11
  store ptr %3, ptr %ptridx.i27, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 3
  %memberidx2.i18 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %16 = load ptr, ptr %memberidx2.i18, align 8
  %memberidx3.i19 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i19, align 4
  %18 = icmp eq i64 %17, 0
  %19 = and i1 %15, %18
  br i1 %19, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Array_TypeNode____sl__.exit28
  %memberidx.i12 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_TypeNode____sl__.exit
  %20 = load i64, ptr %memberidx.i12, align 4
  %21 = load ptr, ptr %0, align 8
  %memberidx2.i13 = getelementptr inbounds %Array_Token_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i13, align 4
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %if.entry.i16, label %Parser_advance.exit

if.entry.i16:                                     ; preds = %while.entry
  %24 = add nsw i64 %20, 1
  store i64 %24, ptr %memberidx.i12, align 4
  %memberidx.i.i15 = getelementptr inbounds %Array_Token_, ptr %21, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i.i15, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %25, i64 %24
  %26 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %26, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i16
  %27 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %28 = load i64, ptr %memberidx.i20, align 4
  %29 = load i64, ptr %memberidx1.i21, align 4
  %.not.i = icmp slt i64 %28, %29
  br i1 %.not.i, label %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge, label %if.entry.i

Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge: ; preds = %Parser_advance.exit
  %.pre31 = load ptr, ptr %memberidx4.i26, align 8
  br label %Array_TypeNode____sl__.exit

if.entry.i:                                       ; preds = %Parser_advance.exit
  %30 = shl nuw i64 %29, 1
  store i64 %30, ptr %memberidx1.i21, align 4
  %31 = load ptr, ptr %memberidx4.i26, align 8
  %32 = shl i64 %29, 4
  %33 = tail call ptr @realloc(ptr %31, i64 %32)
  store ptr %33, ptr %memberidx4.i26, align 8
  %.pre30 = load i64, ptr %memberidx.i20, align 4
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge, %if.entry.i
  %34 = phi ptr [ %.pre31, %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge ], [ %33, %if.entry.i ]
  %35 = phi i64 [ %28, %Parser_advance.exit.Array_TypeNode____sl__.exit_crit_edge ], [ %.pre30, %if.entry.i ]
  %36 = add nsw i64 %35, 1
  store i64 %36, ptr %memberidx.i20, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %34, i64 %35
  store ptr %27, ptr %ptridx.i, align 8
  %37 = load ptr, ptr %memberidx, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 3
  %40 = load ptr, ptr %memberidx2.i18, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %40, i64 0, i32 2
  %41 = load i64, ptr %memberidx3.i, align 4
  %42 = icmp eq i64 %41, 0
  %43 = and i1 %39, %42
  br i1 %43, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_TypeNode____sl__.exit, %Array_TypeNode____sl__.exit28
  ret void
}

define internal fastcc ptr @Parser_parse_arg(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 24)
  %3 = tail call fastcc ptr @Parser_eat(ptr %0, i64 54)
  store ptr %3, ptr %2, align 8
  %memberidx1.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 1
  %memberidx2.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 2
  %memberidx.i51 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx1.i, i8 0, i64 16, i1 false)
  %4 = load ptr, ptr %memberidx.i51, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp ne i64 %5, 46
  %memberidx2.i52 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i52, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx3.i, align 4
  %9 = icmp eq i64 %8, 0
  %10 = and i1 %6, %9
  br i1 %10, label %ifend, label %common.ret

common.ret:                                       ; preds = %Parser_error.exit, %ifend13, %Parser_advance.exit, %1
  ret ptr %2

ifend:                                            ; preds = %1
  %11 = icmp eq i64 %5, 1
  br i1 %11, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx.i53 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %12 = load i64, ptr %memberidx.i53, align 4
  %13 = load ptr, ptr %0, align 8
  %memberidx2.i54 = getelementptr inbounds %Array_Token_, ptr %13, i64 0, i32 2
  %14 = load i64, ptr %memberidx2.i54, align 4
  %15 = icmp slt i64 %12, %14
  br i1 %15, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry2
  %16 = add nsw i64 %12, 1
  store i64 %16, ptr %memberidx.i53, align 4
  %memberidx.i.i56 = getelementptr inbounds %Array_Token_, ptr %13, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i.i56, align 8
  %ptridx.i.i57 = getelementptr inbounds ptr, ptr %17, i64 %16
  %18 = load ptr, ptr %ptridx.i.i57, align 8
  store ptr %18, ptr %memberidx.i51, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry2, %if.entry.i
  %19 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %19, ptr %memberidx1.i, align 8
  %20 = load ptr, ptr %memberidx.i51, align 8
  %21 = load i64, ptr %20, align 4
  %22 = icmp ne i64 %21, 46
  %23 = load ptr, ptr %memberidx2.i52, align 8
  %memberidx3.i63 = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 2
  %24 = load i64, ptr %memberidx3.i63, align 4
  %25 = icmp eq i64 %24, 0
  %26 = and i1 %22, %25
  br i1 %26, label %ifend4, label %common.ret

ifend4:                                           ; preds = %Parser_advance.exit, %ifend
  %27 = phi ptr [ %19, %Parser_advance.exit ], [ null, %ifend ]
  %28 = phi i64 [ %21, %Parser_advance.exit ], [ %5, %ifend ]
  %29 = icmp eq i64 %28, 38
  br i1 %29, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %ifend4
  %memberidx.i64 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %30 = load i64, ptr %memberidx.i64, align 4
  %31 = load ptr, ptr %0, align 8
  %memberidx2.i65 = getelementptr inbounds %Array_Token_, ptr %31, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i65, align 4
  %33 = icmp slt i64 %30, %32
  br i1 %33, label %if.entry.i69, label %Parser_advance.exit70

if.entry.i69:                                     ; preds = %if.entry11
  %34 = add nsw i64 %30, 1
  store i64 %34, ptr %memberidx.i64, align 4
  %memberidx.i.i67 = getelementptr inbounds %Array_Token_, ptr %31, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i.i67, align 8
  %ptridx.i.i68 = getelementptr inbounds ptr, ptr %35, i64 %34
  %36 = load ptr, ptr %ptridx.i.i68, align 8
  store ptr %36, ptr %memberidx.i51, align 8
  br label %Parser_advance.exit70

Parser_advance.exit70:                            ; preds = %if.entry11, %if.entry.i69
  %37 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %37, ptr %memberidx2.i, align 8
  %phi.cmp = icmp eq ptr %37, null
  br label %ifend13

ifend13:                                          ; preds = %ifend4, %Parser_advance.exit70
  %38 = phi i1 [ true, %ifend4 ], [ %phi.cmp, %Parser_advance.exit70 ]
  %39 = icmp eq ptr %27, null
  %40 = and i1 %39, %38
  br i1 %40, label %if.entry17, label %common.ret

if.entry17:                                       ; preds = %ifend13
  %memberidx21 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %41 = load ptr, ptr %memberidx21, align 8
  %42 = load ptr, ptr %41, align 8
  %memberidx22 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %42, i64 0, i32 5
  %43 = load ptr, ptr %memberidx22, align 8
  %44 = tail call ptr %43(ptr nonnull %41)
  %45 = alloca ptr, align 8
  %46 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %45, ptr nonnull @68, ptr %44)
  %47 = load ptr, ptr %45, align 8
  %48 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %48, align 8
  %memberidx.i58 = getelementptr inbounds %string, ptr %48, i64 0, i32 1
  store ptr %47, ptr %memberidx.i58, align 8
  %memberidx1.i59 = getelementptr inbounds %string, ptr %48, i64 0, i32 2
  store i64 %46, ptr %memberidx1.i59, align 4
  %memberidx2.i60 = getelementptr inbounds %string, ptr %48, i64 0, i32 3
  store i64 %46, ptr %memberidx2.i60, align 4
  tail call void @free(ptr %44)
  %49 = load ptr, ptr %memberidx2.i52, align 8
  %50 = call ptr @malloc(i32 24)
  %51 = load ptr, ptr %memberidx.i51, align 8
  %memberidx2.i50 = getelementptr inbounds %Token, ptr %51, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i50, align 8
  store i64 2, ptr %50, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %50, i64 0, i32 2
  store ptr %52, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %50, i64 0, i32 1
  store ptr %48, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 2
  %53 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 3
  %54 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %53, %54
  br i1 %.not.i.i, label %if.entry17.Parser_error.exit_crit_edge, label %if.entry.i.i

if.entry17.Parser_error.exit_crit_edge:           ; preds = %if.entry17
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %.pre72 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %if.entry17
  %55 = shl nuw i64 %54, 1
  store i64 %55, ptr %memberidx1.i4.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %56 = load ptr, ptr %memberidx2.i.i.i, align 8
  %57 = shl i64 %54, 4
  %58 = call ptr @realloc(ptr %56, i64 %57)
  store ptr %58, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry17.Parser_error.exit_crit_edge, %if.entry.i.i
  %59 = phi ptr [ %.pre72, %if.entry17.Parser_error.exit_crit_edge ], [ %58, %if.entry.i.i ]
  %60 = phi i64 [ %53, %if.entry17.Parser_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %61 = add nsw i64 %60, 1
  store i64 %61, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %59, i64 %60
  store ptr %50, ptr %ptridx.i.i, align 8
  %62 = load ptr, ptr %memberidx2.i52, align 8
  %memberidx25 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx25, align 4
  %64 = add i64 %63, -1
  %memberidx.i = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %65, i64 %64
  %66 = load ptr, ptr %ptridx.i, align 8
  %memberidx26 = getelementptr inbounds %FloError, ptr %66, i64 0, i32 2
  %memberidx28 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %67 = load ptr, ptr %memberidx28, align 8
  store ptr %67, ptr %memberidx26, align 8
  br label %common.ret
}

define internal fastcc ptr @Parser_parse_object_type(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_eat(ptr %0, i64 54)
  %3 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  store ptr %4, ptr %3, align 8
  %memberidx.i.i28 = getelementptr inbounds %TypeNode, ptr %3, i64 0, i32 1
  store i64 16, ptr %memberidx.i.i28, align 4
  %memberidx.i29 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 2
  store ptr %2, ptr %memberidx.i29, align 8
  %memberidx1.i30 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 3
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_TypeNode_, ptr %5, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i31 = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i31, align 4
  %memberidx2.i.i32 = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i.i32, align 8
  store i64 0, ptr %memberidx.i5.i, align 4
  store ptr %5, ptr %memberidx1.i30, align 8
  %memberidx1 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 42
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx2.i26, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %15, i64 %14
  %16 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %16, ptr %memberidx1, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %5)
  %17 = load ptr, ptr %memberidx1, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx5, align 8
  %19 = load i64, ptr %17, align 4
  %20 = icmp eq i64 %19, 49
  br i1 %20, label %if.entry8, label %else9

ifend:                                            ; preds = %1, %ifend10
  ret ptr %3

if.entry8:                                        ; preds = %Parser_advance.exit
  store i64 41, ptr %17, align 4
  br label %ifend10

else9:                                            ; preds = %Parser_advance.exit
  %21 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 41)
  br label %ifend10

ifend10:                                          ; preds = %else9, %if.entry8
  %22 = tail call ptr @malloc(i32 32)
  %23 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 1
  %24 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %25 = load i64, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 3
  %26 = load i64, ptr %memberidx3.i, align 4
  store i64 %23, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %22, i64 0, i32 1
  store i64 %24, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %22, i64 0, i32 2
  store i64 %25, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %22, i64 0, i32 3
  store i64 %26, ptr %memberidx3.i.i, align 4
  store ptr %22, ptr %3, align 8
  br label %ifend
}

define internal fastcc ptr @Parser_parse_unary_expression_pre(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %else35.i.i [
    i64 23, label %ifend
    i64 24, label %Parser_is_unary_op.exit.fold.split
    i64 5, label %Parser_is_unary_op.exit.fold.split28
    i64 37, label %Parser_is_unary_op.exit.fold.split29
    i64 73, label %ifend.fold.split
    i64 34, label %if.entry.i58.i
    i64 31, label %if.entry4.i.i
    i64 32, label %if.entry9.i.i
    i64 35, label %if.entry14.i.i
    i64 54, label %if.entry19.i.i
    i64 29, label %if.entry24.i.i
    i64 72, label %if.entry29.i.i
    i64 25, label %if.entry34.i.i
  ]

Parser_is_unary_op.exit.fold.split:               ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split28:             ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split29:             ; preds = %1
  br label %ifend

common.ret43.sink.split:                          ; preds = %Parser_advance.exit, %Parser_advance.exit.i
  %.sink49 = phi ptr [ %218, %Parser_advance.exit.i ], [ %234, %Parser_advance.exit ]
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %.sink49, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i18.i = getelementptr inbounds %ExpressionNode, ptr %.sink49, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i18.i, align 4
  br label %common.ret43

common.ret43:                                     ; preds = %common.ret43.sink.split, %Parser_parse_lhs_expression_allow_call.exit
  %common.ret43.op = phi ptr [ %expression.1.i, %Parser_parse_lhs_expression_allow_call.exit ], [ %.sink49, %common.ret43.sink.split ]
  ret ptr %common.ret43.op

if.entry.i58.i:                                   ; preds = %1
  %5 = tail call fastcc ptr @Parser_parse_string(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry4.i.i:                                    ; preds = %1
  %6 = tail call ptr @malloc(i32 32)
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 31
  br i1 %9, label %if.entry.i.i62.i, label %else.i.i70.i

if.entry.i.i62.i:                                 ; preds = %if.entry4.i.i
  %memberidx.i.i.i60.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i.i.i60.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i61.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx2.i.i.i61.i, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i.i.i66.i, label %Parser_eat.exit.i73.i

if.entry.i.i.i66.i:                               ; preds = %if.entry.i.i62.i
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i.i.i60.i, align 4
  %memberidx.i.i.i.i64.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i.i.i.i64.i, align 8
  %ptridx.i.i.i.i65.i = getelementptr inbounds ptr, ptr %15, i64 %14
  %16 = load ptr, ptr %ptridx.i.i.i.i65.i, align 8
  store ptr %16, ptr %memberidx, align 8
  br label %Parser_eat.exit.i73.i

else.i.i70.i:                                     ; preds = %if.entry4.i.i
  %17 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i68.i = getelementptr inbounds %Token, ptr %7, i64 0, i32 1
  %18 = load ptr, ptr %memberidx35.i.i68.i, align 8
  store i64 46, ptr %17, align 4
  %memberidx1.i82.i.i69.i = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  store ptr %18, ptr %memberidx1.i82.i.i69.i, align 8
  br label %Parser_eat.exit.i73.i

Parser_eat.exit.i73.i:                            ; preds = %else.i.i70.i, %if.entry.i.i.i66.i, %if.entry.i.i62.i
  %common.ret.op.i.i71.i = phi ptr [ %17, %else.i.i70.i ], [ %7, %if.entry.i.i.i66.i ], [ %7, %if.entry.i.i62.i ]
  %memberidx.i58.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i.i71.i, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i58.i.i, align 8
  store ptr %19, ptr %6, align 8
  %memberidx.i.i.i59.i.i = getelementptr inbounds %StatementNode, ptr %6, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i59.i.i, align 4
  %memberidx.i.i60.i.i = getelementptr inbounds %ExpressionNode, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i60.i.i, align 4
  %memberidx1.i.i72.i = getelementptr inbounds %IntExpressionNode, ptr %6, i64 0, i32 3
  store ptr %common.ret.op.i.i71.i, ptr %memberidx1.i.i72.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry9.i.i:                                    ; preds = %1
  %20 = tail call ptr @malloc(i32 32)
  %21 = load ptr, ptr %memberidx, align 8
  %22 = load i64, ptr %21, align 4
  %23 = icmp eq i64 %22, 32
  br i1 %23, label %if.entry.i65.i.i, label %else.i71.i.i

if.entry.i65.i.i:                                 ; preds = %if.entry9.i.i
  %memberidx.i.i63.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %24 = load i64, ptr %memberidx.i.i63.i.i, align 4
  %25 = load ptr, ptr %0, align 8
  %memberidx2.i.i64.i.i = getelementptr inbounds %Array_Token_, ptr %25, i64 0, i32 2
  %26 = load i64, ptr %memberidx2.i.i64.i.i, align 4
  %27 = icmp slt i64 %24, %26
  br i1 %27, label %if.entry.i.i69.i.i, label %Parser_eat.exit74.i.i

if.entry.i.i69.i.i:                               ; preds = %if.entry.i65.i.i
  %28 = add nsw i64 %24, 1
  store i64 %28, ptr %memberidx.i.i63.i.i, align 4
  %memberidx.i.i.i67.i.i = getelementptr inbounds %Array_Token_, ptr %25, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i.i.i67.i.i, align 8
  %ptridx.i.i.i68.i.i = getelementptr inbounds ptr, ptr %29, i64 %28
  %30 = load ptr, ptr %ptridx.i.i.i68.i.i, align 8
  store ptr %30, ptr %memberidx, align 8
  br label %Parser_eat.exit74.i.i

else.i71.i.i:                                     ; preds = %if.entry9.i.i
  %31 = tail call ptr @malloc(i32 16)
  %memberidx35.i72.i.i = getelementptr inbounds %Token, ptr %21, i64 0, i32 1
  %32 = load ptr, ptr %memberidx35.i72.i.i, align 8
  store i64 46, ptr %31, align 4
  %memberidx1.i82.i73.i.i = getelementptr inbounds %Token, ptr %31, i64 0, i32 1
  store ptr %32, ptr %memberidx1.i82.i73.i.i, align 8
  br label %Parser_eat.exit74.i.i

Parser_eat.exit74.i.i:                            ; preds = %else.i71.i.i, %if.entry.i.i69.i.i, %if.entry.i65.i.i
  %common.ret.op.i62.i.i = phi ptr [ %31, %else.i71.i.i ], [ %21, %if.entry.i.i69.i.i ], [ %21, %if.entry.i65.i.i ]
  %memberidx.i75.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i62.i.i, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i75.i.i, align 8
  store ptr %33, ptr %20, align 8
  %memberidx.i.i.i76.i.i = getelementptr inbounds %StatementNode, ptr %20, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i76.i.i, align 4
  %memberidx.i.i77.i.i = getelementptr inbounds %ExpressionNode, ptr %20, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i77.i.i, align 4
  %memberidx1.i78.i.i = getelementptr inbounds %FloatExpressionNode, ptr %20, i64 0, i32 3
  store ptr %common.ret.op.i62.i.i, ptr %memberidx1.i78.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry14.i.i:                                   ; preds = %1
  %34 = tail call ptr @malloc(i32 32)
  %35 = load ptr, ptr %memberidx, align 8
  %36 = load i64, ptr %35, align 4
  %37 = icmp eq i64 %36, 35
  br i1 %37, label %if.entry.i83.i.i, label %else.i89.i.i

if.entry.i83.i.i:                                 ; preds = %if.entry14.i.i
  %memberidx.i.i81.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %38 = load i64, ptr %memberidx.i.i81.i.i, align 4
  %39 = load ptr, ptr %0, align 8
  %memberidx2.i.i82.i.i = getelementptr inbounds %Array_Token_, ptr %39, i64 0, i32 2
  %40 = load i64, ptr %memberidx2.i.i82.i.i, align 4
  %41 = icmp slt i64 %38, %40
  br i1 %41, label %if.entry.i.i87.i.i, label %Parser_eat.exit92.i.i

if.entry.i.i87.i.i:                               ; preds = %if.entry.i83.i.i
  %42 = add nsw i64 %38, 1
  store i64 %42, ptr %memberidx.i.i81.i.i, align 4
  %memberidx.i.i.i85.i.i = getelementptr inbounds %Array_Token_, ptr %39, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i.i.i85.i.i, align 8
  %ptridx.i.i.i86.i.i = getelementptr inbounds ptr, ptr %43, i64 %42
  %44 = load ptr, ptr %ptridx.i.i.i86.i.i, align 8
  store ptr %44, ptr %memberidx, align 8
  br label %Parser_eat.exit92.i.i

else.i89.i.i:                                     ; preds = %if.entry14.i.i
  %45 = tail call ptr @malloc(i32 16)
  %memberidx35.i90.i.i = getelementptr inbounds %Token, ptr %35, i64 0, i32 1
  %46 = load ptr, ptr %memberidx35.i90.i.i, align 8
  store i64 46, ptr %45, align 4
  %memberidx1.i82.i91.i.i = getelementptr inbounds %Token, ptr %45, i64 0, i32 1
  store ptr %46, ptr %memberidx1.i82.i91.i.i, align 8
  br label %Parser_eat.exit92.i.i

Parser_eat.exit92.i.i:                            ; preds = %else.i89.i.i, %if.entry.i.i87.i.i, %if.entry.i83.i.i
  %common.ret.op.i80.i.i = phi ptr [ %45, %else.i89.i.i ], [ %35, %if.entry.i.i87.i.i ], [ %35, %if.entry.i83.i.i ]
  %memberidx.i93.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i80.i.i, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i93.i.i, align 8
  store ptr %47, ptr %34, align 8
  %memberidx.i.i.i94.i.i = getelementptr inbounds %StatementNode, ptr %34, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i94.i.i, align 4
  %memberidx.i.i95.i.i = getelementptr inbounds %ExpressionNode, ptr %34, i64 0, i32 2
  store i64 3, ptr %memberidx.i.i95.i.i, align 4
  %memberidx1.i96.i.i = getelementptr inbounds %CharExpressionNode, ptr %34, i64 0, i32 3
  store ptr %common.ret.op.i80.i.i, ptr %memberidx1.i96.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry19.i.i:                                   ; preds = %1
  %48 = tail call ptr @malloc(i32 32)
  %49 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 54)
  %memberidx.i97.i.i = getelementptr inbounds %Token, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i97.i.i, align 8
  store ptr %50, ptr %48, align 8
  %memberidx.i.i.i98.i.i = getelementptr inbounds %StatementNode, ptr %48, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i98.i.i, align 4
  %memberidx.i.i99.i.i = getelementptr inbounds %ExpressionNode, ptr %48, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i99.i.i, align 4
  %memberidx1.i100.i.i = getelementptr inbounds %VarAccessExpressionNode, ptr %48, i64 0, i32 3
  store ptr %49, ptr %memberidx1.i100.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry24.i.i:                                   ; preds = %1
  %51 = tail call ptr @malloc(i32 32)
  %52 = load ptr, ptr %memberidx, align 8
  %memberidx1.i104.i = getelementptr inbounds %Token, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx1.i104.i, align 8
  store ptr %53, ptr %51, align 8
  %memberidx.i.i.i.i105.i = getelementptr inbounds %StatementNode, ptr %51, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i105.i, align 4
  %memberidx.i.i.i106.i = getelementptr inbounds %ExpressionNode, ptr %51, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i.i106.i, align 4
  %memberidx.i.i107.i = getelementptr inbounds %ArrayExpressionNode, ptr %51, i64 0, i32 3
  %54 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %54, align 8
  %memberidx.i3.i.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %54, i64 0, i32 2
  store i64 0, ptr %memberidx.i3.i.i.i, align 4
  %memberidx1.i.i.i108.i = getelementptr inbounds %Array_ExpressionNode_, ptr %54, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i108.i, align 4
  %memberidx2.i.i.i109.i = getelementptr inbounds %Array_ExpressionNode_, ptr %54, i64 0, i32 1
  %55 = tail call ptr @malloc(i32 64)
  store ptr %55, ptr %memberidx2.i.i.i109.i, align 8
  store i64 0, ptr %memberidx.i3.i.i.i, align 4
  store ptr %54, ptr %memberidx.i.i107.i, align 8
  %memberidx.i15.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %56 = load i64, ptr %memberidx.i15.i.i, align 4
  %57 = load ptr, ptr %0, align 8
  %memberidx2.i16.i.i = getelementptr inbounds %Array_Token_, ptr %57, i64 0, i32 2
  %58 = load i64, ptr %memberidx2.i16.i.i, align 4
  %59 = icmp slt i64 %56, %58
  br i1 %59, label %if.entry.i.i113.i, label %if.entry24.i.i.Parser_advance.exit.i115.i_crit_edge

if.entry24.i.i.Parser_advance.exit.i115.i_crit_edge: ; preds = %if.entry24.i.i
  %.pre = load ptr, ptr %memberidx, align 8
  br label %Parser_advance.exit.i115.i

if.entry.i.i113.i:                                ; preds = %if.entry24.i.i
  %60 = add nsw i64 %56, 1
  store i64 %60, ptr %memberidx.i15.i.i, align 4
  %memberidx.i.i17.i.i = getelementptr inbounds %Array_Token_, ptr %57, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i.i17.i.i, align 8
  %ptridx.i.i.i112.i = getelementptr inbounds ptr, ptr %61, i64 %60
  %62 = load ptr, ptr %ptridx.i.i.i112.i, align 8
  store ptr %62, ptr %memberidx, align 8
  br label %Parser_advance.exit.i115.i

Parser_advance.exit.i115.i:                       ; preds = %if.entry24.i.i.Parser_advance.exit.i115.i_crit_edge, %if.entry.i.i113.i
  %63 = phi ptr [ %.pre, %if.entry24.i.i.Parser_advance.exit.i115.i_crit_edge ], [ %62, %if.entry.i.i113.i ]
  %64 = load i64, ptr %63, align 4
  %.not.i114.i = icmp eq i64 %64, 30
  br i1 %.not.i114.i, label %if.entry.i21.i.i, label %ifend.i.i

ifend.i.i:                                        ; preds = %Parser_advance.exit.i115.i
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %54)
  %.pre44 = load ptr, ptr %memberidx, align 8
  %.pre45 = load i64, ptr %.pre44, align 4
  %phi.cmp = icmp eq i64 %.pre45, 30
  br i1 %phi.cmp, label %if.entry.i21.i.i, label %else.i.i125.i

if.entry.i21.i.i:                                 ; preds = %Parser_advance.exit.i115.i, %ifend.i.i
  %65 = phi ptr [ %.pre44, %ifend.i.i ], [ %63, %Parser_advance.exit.i115.i ]
  %66 = load i64, ptr %memberidx.i15.i.i, align 4
  %67 = load ptr, ptr %0, align 8
  %memberidx2.i.i20.i.i = getelementptr inbounds %Array_Token_, ptr %67, i64 0, i32 2
  %68 = load i64, ptr %memberidx2.i.i20.i.i, align 4
  %69 = icmp slt i64 %66, %68
  br i1 %69, label %if.entry.i.i.i122.i, label %Parser_parse_array_expression.exit.i

if.entry.i.i.i122.i:                              ; preds = %if.entry.i21.i.i
  %70 = add nsw i64 %66, 1
  store i64 %70, ptr %memberidx.i15.i.i, align 4
  %memberidx.i.i.i22.i.i = getelementptr inbounds %Array_Token_, ptr %67, i64 0, i32 1
  %71 = load ptr, ptr %memberidx.i.i.i22.i.i, align 8
  %ptridx.i.i.i.i121.i = getelementptr inbounds ptr, ptr %71, i64 %70
  %72 = load ptr, ptr %ptridx.i.i.i.i121.i, align 8
  store ptr %72, ptr %memberidx, align 8
  br label %Parser_parse_array_expression.exit.i

else.i.i125.i:                                    ; preds = %ifend.i.i
  %73 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i123.i = getelementptr inbounds %Token, ptr %.pre44, i64 0, i32 1
  %74 = load ptr, ptr %memberidx35.i.i123.i, align 8
  store i64 46, ptr %73, align 4
  %memberidx1.i82.i.i124.i = getelementptr inbounds %Token, ptr %73, i64 0, i32 1
  store ptr %74, ptr %memberidx1.i82.i.i124.i, align 8
  br label %Parser_parse_array_expression.exit.i

Parser_parse_array_expression.exit.i:             ; preds = %else.i.i125.i, %if.entry.i.i.i122.i, %if.entry.i21.i.i
  %common.ret.op.i.i.i = phi ptr [ %73, %else.i.i125.i ], [ %65, %if.entry.i.i.i122.i ], [ %65, %if.entry.i21.i.i ]
  %memberidx7.i126.i = getelementptr inbounds %Token, ptr %common.ret.op.i.i.i, i64 0, i32 1
  %75 = load ptr, ptr %memberidx7.i126.i, align 8
  %76 = tail call ptr @malloc(i32 32)
  %77 = load i64, ptr %53, align 4
  %memberidx1.i.i127.i = getelementptr inbounds %FloRange, ptr %75, i64 0, i32 1
  %78 = load i64, ptr %memberidx1.i.i127.i, align 4
  %memberidx2.i23.i.i = getelementptr inbounds %FloRange, ptr %53, i64 0, i32 2
  %79 = load i64, ptr %memberidx2.i23.i.i, align 4
  %memberidx3.i24.i.i = getelementptr inbounds %FloRange, ptr %75, i64 0, i32 3
  %80 = load i64, ptr %memberidx3.i24.i.i, align 4
  store i64 %77, ptr %76, align 4
  %memberidx1.i.i25.i.i = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 1
  store i64 %78, ptr %memberidx1.i.i25.i.i, align 4
  %memberidx2.i.i26.i.i = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 2
  store i64 %79, ptr %memberidx2.i.i26.i.i, align 4
  %memberidx3.i.i27.i.i = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 3
  store i64 %80, ptr %memberidx3.i.i27.i.i, align 4
  store ptr %76, ptr %51, align 8
  br label %Parser_parse_atom.exit.i

if.entry29.i.i:                                   ; preds = %1
  %memberidx.i.i87.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %81 = load i64, ptr %memberidx.i.i87.i, align 4
  %82 = load ptr, ptr %0, align 8
  %memberidx2.i.i88.i = getelementptr inbounds %Array_Token_, ptr %82, i64 0, i32 2
  %83 = load i64, ptr %memberidx2.i.i88.i, align 4
  %84 = icmp slt i64 %81, %83
  br i1 %84, label %if.entry.i.i92.i, label %Parser_advance.exit.i97.i

if.entry.i.i92.i:                                 ; preds = %if.entry29.i.i
  %85 = add nsw i64 %81, 1
  store i64 %85, ptr %memberidx.i.i87.i, align 4
  %memberidx.i.i.i90.i = getelementptr inbounds %Array_Token_, ptr %82, i64 0, i32 1
  %86 = load ptr, ptr %memberidx.i.i.i90.i, align 8
  %ptridx.i.i.i91.i = getelementptr inbounds ptr, ptr %86, i64 %85
  %87 = load ptr, ptr %ptridx.i.i.i91.i, align 8
  store ptr %87, ptr %memberidx, align 8
  br label %Parser_advance.exit.i97.i

Parser_advance.exit.i97.i:                        ; preds = %if.entry.i.i92.i, %if.entry29.i.i
  %88 = tail call ptr @malloc(i32 41)
  %89 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i18.i.i = getelementptr inbounds %NewExpressionNode, ptr %88, i64 0, i32 3
  store ptr %89, ptr %memberidx.i18.i.i, align 8
  %memberidx1.i.i93.i = getelementptr inbounds %NewExpressionNode, ptr %88, i64 0, i32 4
  store i1 true, ptr %memberidx1.i.i93.i, align 1
  store ptr %3, ptr %88, align 8
  %memberidx.i.i.i.i94.i = getelementptr inbounds %StatementNode, ptr %88, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i94.i, align 4
  %memberidx.i.i19.i.i = getelementptr inbounds %ExpressionNode, ptr %88, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i19.i.i, align 4
  %memberidx2.i20.i.i = getelementptr inbounds %NewExpressionNode, ptr %88, i64 0, i32 5
  %90 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %90, align 8
  %memberidx.i7.i.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %90, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i.i.i, align 4
  %memberidx1.i.i.i95.i = getelementptr inbounds %Array_ExpressionNode_, ptr %90, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i95.i, align 4
  %memberidx2.i.i.i96.i = getelementptr inbounds %Array_ExpressionNode_, ptr %90, i64 0, i32 1
  %91 = tail call ptr @malloc(i32 64)
  store ptr %91, ptr %memberidx2.i.i.i96.i, align 8
  store i64 0, ptr %memberidx.i7.i.i.i, align 4
  store ptr %90, ptr %memberidx2.i20.i.i, align 8
  %92 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 25)
  %memberidx2.i22.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %93 = load ptr, ptr %memberidx2.i22.i.i, align 8
  %memberidx3.i23.i.i = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 2
  %94 = load i64, ptr %memberidx3.i23.i.i, align 4
  %.fr = freeze i64 %94
  %95 = icmp eq i64 %.fr, 0
  br i1 %95, label %switch.early.test.i.i, label %Parser_parse_new_expression.exit.i

switch.early.test.i.i:                            ; preds = %Parser_advance.exit.i97.i
  %96 = load ptr, ptr %memberidx, align 8
  %97 = load i64, ptr %96, align 4
  switch i64 %97, label %if.entry.i99.i [
    i64 46, label %Parser_parse_new_expression.exit.i
    i64 26, label %Parser_parse_new_expression.exit.i
  ]

if.entry.i99.i:                                   ; preds = %switch.early.test.i.i
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %90)
  br label %Parser_parse_new_expression.exit.i

Parser_parse_new_expression.exit.i:               ; preds = %if.entry.i99.i, %switch.early.test.i.i, %switch.early.test.i.i, %Parser_advance.exit.i97.i
  %98 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx7.i100.i = getelementptr inbounds %Token, ptr %98, i64 0, i32 1
  %99 = load ptr, ptr %memberidx7.i100.i, align 8
  %100 = tail call ptr @malloc(i32 32)
  %101 = load i64, ptr %3, align 4
  %memberidx1.i24.i.i = getelementptr inbounds %FloRange, ptr %99, i64 0, i32 1
  %102 = load i64, ptr %memberidx1.i24.i.i, align 4
  %memberidx2.i25.i.i = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %103 = load i64, ptr %memberidx2.i25.i.i, align 4
  %memberidx3.i26.i.i = getelementptr inbounds %FloRange, ptr %99, i64 0, i32 3
  %104 = load i64, ptr %memberidx3.i26.i.i, align 4
  store i64 %101, ptr %100, align 4
  %memberidx1.i.i27.i.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 1
  store i64 %102, ptr %memberidx1.i.i27.i.i, align 4
  %memberidx2.i.i28.i101.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 2
  store i64 %103, ptr %memberidx2.i.i28.i101.i, align 4
  %memberidx3.i.i.i102.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 3
  store i64 %104, ptr %memberidx3.i.i.i102.i, align 4
  store ptr %100, ptr %88, align 8
  br label %Parser_parse_atom.exit.i

if.entry34.i.i:                                   ; preds = %1
  %memberidx.i101.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %105 = load i64, ptr %memberidx.i101.i.i, align 4
  %106 = load ptr, ptr %0, align 8
  %memberidx2.i.i74.i = getelementptr inbounds %Array_Token_, ptr %106, i64 0, i32 2
  %107 = load i64, ptr %memberidx2.i.i74.i, align 4
  %108 = icmp slt i64 %105, %107
  br i1 %108, label %if.entry.i103.i.i, label %Parser_advance.exit.i.i

if.entry.i103.i.i:                                ; preds = %if.entry34.i.i
  %109 = add nsw i64 %105, 1
  store i64 %109, ptr %memberidx.i101.i.i, align 4
  %memberidx.i.i102.i.i = getelementptr inbounds %Array_Token_, ptr %106, i64 0, i32 1
  %110 = load ptr, ptr %memberidx.i.i102.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %110, i64 %109
  %111 = load ptr, ptr %ptridx.i.i.i.i, align 8
  store ptr %111, ptr %memberidx, align 8
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i103.i.i, %if.entry34.i.i
  %112 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %113 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  br label %Parser_parse_atom.exit.i

else35.i.i:                                       ; preds = %1
  %114 = tail call ptr @malloc(i32 28)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %114, ptr noundef nonnull align 8 dereferenceable(28) @67, i64 28, i1 false)
  %115 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %115, align 8
  %memberidx.i.i104.i.i = getelementptr inbounds %string, ptr %115, i64 0, i32 1
  store ptr %114, ptr %memberidx.i.i104.i.i, align 8
  %memberidx1.i.i.i76.i = getelementptr inbounds %string, ptr %115, i64 0, i32 2
  store i64 28, ptr %memberidx1.i.i.i76.i, align 4
  %memberidx2.i.i105.i.i = getelementptr inbounds %string, ptr %115, i64 0, i32 3
  store i64 28, ptr %memberidx2.i.i105.i.i, align 4
  %memberidx.i106.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i106.i.i, align 8
  %117 = tail call ptr @malloc(i32 24)
  %118 = load ptr, ptr %memberidx, align 8
  %memberidx2.i108.i.i = getelementptr inbounds %Token, ptr %118, i64 0, i32 1
  %119 = load ptr, ptr %memberidx2.i108.i.i, align 8
  store i64 2, ptr %117, align 4
  %memberidx1.i.i109.i.i = getelementptr inbounds %FloError, ptr %117, i64 0, i32 2
  store ptr %119, ptr %memberidx1.i.i109.i.i, align 8
  %memberidx2.i.i110.i.i = getelementptr inbounds %FloError, ptr %117, i64 0, i32 1
  store ptr %115, ptr %memberidx2.i.i110.i.i, align 8
  %memberidx.i.i111.i.i = getelementptr inbounds %Array_FloError_, ptr %116, i64 0, i32 2
  %120 = load i64, ptr %memberidx.i.i111.i.i, align 4
  %memberidx1.i4.i.i.i = getelementptr inbounds %Array_FloError_, ptr %116, i64 0, i32 3
  %121 = load i64, ptr %memberidx1.i4.i.i.i, align 4
  %.not.i.i.i.i = icmp slt i64 %120, %121
  br i1 %.not.i.i.i.i, label %else35.i.i.Parser_error.exit.i.i_crit_edge, label %if.entry.i.i113.i.i

else35.i.i.Parser_error.exit.i.i_crit_edge:       ; preds = %else35.i.i
  %memberidx4.i.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %116, i64 0, i32 1
  %.pre47 = load ptr, ptr %memberidx4.i.i.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit.i.i

if.entry.i.i113.i.i:                              ; preds = %else35.i.i
  %122 = shl nuw i64 %121, 1
  store i64 %122, ptr %memberidx1.i4.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %116, i64 0, i32 1
  %123 = load ptr, ptr %memberidx2.i.i.i.i.i, align 8
  %124 = shl i64 %121, 4
  %125 = tail call ptr @realloc(ptr %123, i64 %124)
  store ptr %125, ptr %memberidx2.i.i.i.i.i, align 8
  %.pre46 = load i64, ptr %memberidx.i.i111.i.i, align 4
  br label %Parser_error.exit.i.i

Parser_error.exit.i.i:                            ; preds = %else35.i.i.Parser_error.exit.i.i_crit_edge, %if.entry.i.i113.i.i
  %126 = phi ptr [ %125, %if.entry.i.i113.i.i ], [ %.pre47, %else35.i.i.Parser_error.exit.i.i_crit_edge ]
  %127 = phi i64 [ %.pre46, %if.entry.i.i113.i.i ], [ %120, %else35.i.i.Parser_error.exit.i.i_crit_edge ]
  %128 = add nsw i64 %127, 1
  store i64 %128, ptr %memberidx.i.i111.i.i, align 4
  %ptridx.i.i114.i.i = getelementptr inbounds ptr, ptr %126, i64 %127
  store ptr %117, ptr %ptridx.i.i114.i.i, align 8
  %129 = tail call ptr @malloc(i32 24)
  %130 = load ptr, ptr %memberidx, align 8
  %memberidx38.i.i = getelementptr inbounds %Token, ptr %130, i64 0, i32 1
  %131 = load ptr, ptr %memberidx38.i.i, align 8
  store ptr %131, ptr %129, align 8
  %memberidx.i.i115.i.i = getelementptr inbounds %StatementNode, ptr %129, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i115.i.i, align 4
  %memberidx.i116.i.i = getelementptr inbounds %ExpressionNode, ptr %129, i64 0, i32 2
  store i64 7, ptr %memberidx.i116.i.i, align 4
  br label %Parser_parse_atom.exit.i

Parser_parse_atom.exit.i:                         ; preds = %Parser_error.exit.i.i, %Parser_advance.exit.i.i, %Parser_parse_new_expression.exit.i, %Parser_parse_array_expression.exit.i, %if.entry19.i.i, %Parser_eat.exit92.i.i, %Parser_eat.exit74.i.i, %Parser_eat.exit.i73.i, %if.entry.i58.i
  %common.ret.op.i.i = phi ptr [ %5, %if.entry.i58.i ], [ %129, %Parser_error.exit.i.i ], [ %6, %Parser_eat.exit.i73.i ], [ %20, %Parser_eat.exit74.i.i ], [ %34, %Parser_eat.exit92.i.i ], [ %48, %if.entry19.i.i ], [ %51, %Parser_parse_array_expression.exit.i ], [ %88, %Parser_parse_new_expression.exit.i ], [ %112, %Parser_advance.exit.i.i ]
  %132 = load ptr, ptr %memberidx, align 8
  %133 = load i64, ptr %132, align 4
  %134 = icmp ne i64 %133, 46
  %memberidx2.i.i31 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %135 = load ptr, ptr %memberidx2.i.i31, align 8
  %memberidx3.i.i32 = getelementptr inbounds %Array_FloError_, ptr %135, i64 0, i32 2
  %136 = load i64, ptr %memberidx3.i.i32, align 4
  %137 = icmp eq i64 %136, 0
  %138 = and i1 %134, %137
  br i1 %138, label %while.entry.i.preheader, label %Parser_parse_lhs_expression_allow_call.exit

while.entry.i.preheader:                          ; preds = %Parser_parse_atom.exit.i
  %memberidx.i.i.i.i36 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %ifend.i
  %139 = phi i64 [ %158, %ifend.i ], [ %133, %while.entry.i.preheader ]
  %140 = phi ptr [ %157, %ifend.i ], [ %132, %while.entry.i.preheader ]
  %expression.0.i = phi ptr [ %expression.2.i, %ifend.i ], [ %common.ret.op.i.i, %while.entry.i.preheader ]
  switch i64 %139, label %Parser_parse_lhs_expression_allow_call.exit [
    i64 25, label %if.entry.i33
    i64 29, label %if.entry.i.i29.i
    i64 50, label %if.entry.i.i.i
  ]

if.entry.i33:                                     ; preds = %while.entry.i
  %141 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 25)
  %142 = tail call ptr @malloc(i32 40)
  %143 = load ptr, ptr %memberidx, align 8
  %memberidx1.i46.i = getelementptr inbounds %Token, ptr %143, i64 0, i32 1
  %144 = load ptr, ptr %memberidx1.i46.i, align 8
  store ptr %144, ptr %142, align 8
  %memberidx.i.i.i.i47.i = getelementptr inbounds %StatementNode, ptr %142, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i47.i, align 4
  %memberidx.i.i.i48.i = getelementptr inbounds %ExpressionNode, ptr %142, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i.i48.i, align 4
  %memberidx.i.i49.i = getelementptr inbounds %CallExpressionNode, ptr %142, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i.i49.i, align 8
  %memberidx1.i.i50.i = getelementptr inbounds %CallExpressionNode, ptr %142, i64 0, i32 4
  %145 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ExpressionNode_, ptr %145, align 8
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %145, i64 0, i32 2
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  %memberidx1.i.i.i51.i = getelementptr inbounds %Array_ExpressionNode_, ptr %145, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i.i51.i, align 4
  %memberidx2.i.i.i52.i = getelementptr inbounds %Array_ExpressionNode_, ptr %145, i64 0, i32 1
  %146 = tail call ptr @malloc(i32 64)
  store ptr %146, ptr %memberidx2.i.i.i52.i, align 8
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  store ptr %145, ptr %memberidx1.i.i50.i, align 8
  %147 = load ptr, ptr %memberidx, align 8
  %148 = load i64, ptr %147, align 4
  %.not.i.i = icmp eq i64 %148, 26
  br i1 %.not.i.i, label %Parser_parse_call_expression.exit.i, label %if.entry.i.i34

if.entry.i.i34:                                   ; preds = %if.entry.i33
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %145)
  br label %Parser_parse_call_expression.exit.i

Parser_parse_call_expression.exit.i:              ; preds = %if.entry.i.i34, %if.entry.i33
  %149 = load ptr, ptr %expression.0.i, align 8
  %150 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx7.i.i = getelementptr inbounds %Token, ptr %150, i64 0, i32 1
  %151 = load ptr, ptr %memberidx7.i.i, align 8
  %152 = tail call ptr @malloc(i32 32)
  %153 = load i64, ptr %149, align 4
  %memberidx1.i15.i.i = getelementptr inbounds %FloRange, ptr %151, i64 0, i32 1
  %154 = load i64, ptr %memberidx1.i15.i.i, align 4
  %memberidx2.i.i55.i = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 2
  %155 = load i64, ptr %memberidx2.i.i55.i, align 4
  %memberidx3.i16.i.i = getelementptr inbounds %FloRange, ptr %151, i64 0, i32 3
  %156 = load i64, ptr %memberidx3.i16.i.i, align 4
  store i64 %153, ptr %152, align 4
  %memberidx1.i.i17.i.i = getelementptr inbounds %FloRange, ptr %152, i64 0, i32 1
  store i64 %154, ptr %memberidx1.i.i17.i.i, align 4
  %memberidx2.i.i18.i.i = getelementptr inbounds %FloRange, ptr %152, i64 0, i32 2
  store i64 %155, ptr %memberidx2.i.i18.i.i, align 4
  %memberidx3.i.i.i56.i = getelementptr inbounds %FloRange, ptr %152, i64 0, i32 3
  store i64 %156, ptr %memberidx3.i.i.i56.i, align 4
  store ptr %152, ptr %142, align 8
  br label %ifend.i

ifend.i:                                          ; preds = %Parser_parse_member_expression.exit.i, %Parser_parse_index_expression.exit.i, %Parser_parse_call_expression.exit.i
  %expression.2.i = phi ptr [ %142, %Parser_parse_call_expression.exit.i ], [ %171, %Parser_parse_index_expression.exit.i ], [ %201, %Parser_parse_member_expression.exit.i ]
  %157 = load ptr, ptr %memberidx, align 8
  %158 = load i64, ptr %157, align 4
  %159 = icmp ne i64 %158, 46
  %160 = load ptr, ptr %memberidx2.i.i31, align 8
  %memberidx3.i25.i = getelementptr inbounds %Array_FloError_, ptr %160, i64 0, i32 2
  %161 = load i64, ptr %memberidx3.i25.i, align 4
  %162 = icmp eq i64 %161, 0
  %163 = and i1 %159, %162
  br i1 %163, label %while.entry.i, label %Parser_parse_lhs_expression_allow_call.exit

if.entry.i.i29.i:                                 ; preds = %while.entry.i
  %164 = load i64, ptr %memberidx.i.i.i.i36, align 4
  %165 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i28.i = getelementptr inbounds %Array_Token_, ptr %165, i64 0, i32 2
  %166 = load i64, ptr %memberidx2.i.i.i28.i, align 4
  %167 = icmp slt i64 %164, %166
  br i1 %167, label %if.entry.i.i.i33.i, label %Parser_eat.exit.i.i

if.entry.i.i.i33.i:                               ; preds = %if.entry.i.i29.i
  %168 = add nsw i64 %164, 1
  store i64 %168, ptr %memberidx.i.i.i.i36, align 4
  %memberidx.i.i.i.i31.i = getelementptr inbounds %Array_Token_, ptr %165, i64 0, i32 1
  %169 = load ptr, ptr %memberidx.i.i.i.i31.i, align 8
  %ptridx.i.i.i.i32.i = getelementptr inbounds ptr, ptr %169, i64 %168
  %170 = load ptr, ptr %ptridx.i.i.i.i32.i, align 8
  store ptr %170, ptr %memberidx, align 8
  br label %Parser_eat.exit.i.i

Parser_eat.exit.i.i:                              ; preds = %if.entry.i.i.i33.i, %if.entry.i.i29.i
  %171 = tail call ptr @malloc(i32 40)
  %172 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %173 = load ptr, ptr %memberidx, align 8
  %memberidx1.i40.i = getelementptr inbounds %Token, ptr %173, i64 0, i32 1
  %174 = load ptr, ptr %memberidx1.i40.i, align 8
  %memberidx.i10.i.i = getelementptr inbounds %ExpressionIndexNode, ptr %171, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i10.i.i, align 8
  %memberidx1.i.i41.i = getelementptr inbounds %ExpressionIndexNode, ptr %171, i64 0, i32 4
  store ptr %172, ptr %memberidx1.i.i41.i, align 8
  store ptr %174, ptr %171, align 8
  %memberidx.i.i.i11.i.i = getelementptr inbounds %StatementNode, ptr %171, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i11.i.i, align 4
  %memberidx.i.i12.i.i = getelementptr inbounds %ExpressionNode, ptr %171, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i12.i.i, align 4
  %175 = load ptr, ptr %expression.0.i, align 8
  %176 = load i64, ptr %173, align 4
  %177 = icmp eq i64 %176, 30
  br i1 %177, label %if.entry.i17.i.i, label %else.i23.i.i

if.entry.i17.i.i:                                 ; preds = %Parser_eat.exit.i.i
  %178 = load i64, ptr %memberidx.i.i.i.i36, align 4
  %179 = load ptr, ptr %0, align 8
  %memberidx2.i.i16.i.i = getelementptr inbounds %Array_Token_, ptr %179, i64 0, i32 2
  %180 = load i64, ptr %memberidx2.i.i16.i.i, align 4
  %181 = icmp slt i64 %178, %180
  br i1 %181, label %if.entry.i.i21.i.i, label %Parser_parse_index_expression.exit.i

if.entry.i.i21.i.i:                               ; preds = %if.entry.i17.i.i
  %182 = add nsw i64 %178, 1
  store i64 %182, ptr %memberidx.i.i.i.i36, align 4
  %memberidx.i.i.i19.i.i = getelementptr inbounds %Array_Token_, ptr %179, i64 0, i32 1
  %183 = load ptr, ptr %memberidx.i.i.i19.i.i, align 8
  %ptridx.i.i.i20.i.i = getelementptr inbounds ptr, ptr %183, i64 %182
  %184 = load ptr, ptr %ptridx.i.i.i20.i.i, align 8
  store ptr %184, ptr %memberidx, align 8
  br label %Parser_parse_index_expression.exit.i

else.i23.i.i:                                     ; preds = %Parser_eat.exit.i.i
  %185 = tail call ptr @malloc(i32 16)
  %186 = load ptr, ptr %memberidx1.i40.i, align 8
  store i64 46, ptr %185, align 4
  %memberidx1.i82.i25.i.i = getelementptr inbounds %Token, ptr %185, i64 0, i32 1
  store ptr %186, ptr %memberidx1.i82.i25.i.i, align 8
  br label %Parser_parse_index_expression.exit.i

Parser_parse_index_expression.exit.i:             ; preds = %else.i23.i.i, %if.entry.i.i21.i.i, %if.entry.i17.i.i
  %common.ret.op.i14.i.i = phi ptr [ %185, %else.i23.i.i ], [ %173, %if.entry.i.i21.i.i ], [ %173, %if.entry.i17.i.i ]
  %memberidx4.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i14.i.i, i64 0, i32 1
  %187 = load ptr, ptr %memberidx4.i.i, align 8
  %188 = tail call ptr @malloc(i32 32)
  %189 = load i64, ptr %175, align 4
  %memberidx1.i27.i.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 1
  %190 = load i64, ptr %memberidx1.i27.i.i, align 4
  %memberidx2.i.i42.i = getelementptr inbounds %FloRange, ptr %175, i64 0, i32 2
  %191 = load i64, ptr %memberidx2.i.i42.i, align 4
  %memberidx3.i.i43.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 3
  %192 = load i64, ptr %memberidx3.i.i43.i, align 4
  store i64 %189, ptr %188, align 4
  %memberidx1.i.i.i44.i = getelementptr inbounds %FloRange, ptr %188, i64 0, i32 1
  store i64 %190, ptr %memberidx1.i.i.i44.i, align 4
  %memberidx2.i.i28.i.i = getelementptr inbounds %FloRange, ptr %188, i64 0, i32 2
  store i64 %191, ptr %memberidx2.i.i28.i.i, align 4
  %memberidx3.i.i29.i.i = getelementptr inbounds %FloRange, ptr %188, i64 0, i32 3
  store i64 %192, ptr %memberidx3.i.i29.i.i, align 4
  store ptr %188, ptr %171, align 8
  br label %ifend.i

if.entry.i.i.i:                                   ; preds = %while.entry.i
  %193 = load i64, ptr %memberidx.i.i.i.i36, align 4
  %194 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %194, i64 0, i32 2
  %195 = load i64, ptr %memberidx2.i.i.i.i, align 4
  %196 = icmp slt i64 %193, %195
  br i1 %196, label %if.entry.i.i.i.i, label %Parser_parse_member_expression.exit.i

if.entry.i.i.i.i:                                 ; preds = %if.entry.i.i.i
  %197 = add nsw i64 %193, 1
  store i64 %197, ptr %memberidx.i.i.i.i36, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %194, i64 0, i32 1
  %198 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %198, i64 %197
  %199 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  store ptr %199, ptr %memberidx, align 8
  br label %Parser_parse_member_expression.exit.i

Parser_parse_member_expression.exit.i:            ; preds = %if.entry.i.i.i.i, %if.entry.i.i.i
  %200 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 54)
  %201 = tail call ptr @malloc(i32 40)
  %202 = load ptr, ptr %expression.0.i, align 8
  %memberidx1.i.i37 = getelementptr inbounds %Token, ptr %200, i64 0, i32 1
  %203 = load ptr, ptr %memberidx1.i.i37, align 8
  %204 = tail call ptr @malloc(i32 32)
  %205 = load i64, ptr %202, align 4
  %memberidx1.i.i.i38 = getelementptr inbounds %FloRange, ptr %203, i64 0, i32 1
  %206 = load i64, ptr %memberidx1.i.i.i38, align 4
  %memberidx2.i.i.i39 = getelementptr inbounds %FloRange, ptr %202, i64 0, i32 2
  %207 = load i64, ptr %memberidx2.i.i.i39, align 4
  %memberidx3.i.i.i40 = getelementptr inbounds %FloRange, ptr %203, i64 0, i32 3
  %208 = load i64, ptr %memberidx3.i.i.i40, align 4
  store i64 %205, ptr %204, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %204, i64 0, i32 1
  store i64 %206, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i5.i.i = getelementptr inbounds %FloRange, ptr %204, i64 0, i32 2
  store i64 %207, ptr %memberidx2.i.i5.i.i, align 4
  %memberidx3.i.i6.i.i = getelementptr inbounds %FloRange, ptr %204, i64 0, i32 3
  store i64 %208, ptr %memberidx3.i.i6.i.i, align 4
  store ptr %204, ptr %201, align 8
  %memberidx.i.i.i7.i.i = getelementptr inbounds %StatementNode, ptr %201, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i7.i.i, align 4
  %memberidx.i.i8.i.i = getelementptr inbounds %ExpressionNode, ptr %201, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i8.i.i, align 4
  %memberidx.i9.i.i = getelementptr inbounds %MemberExpressionNode, ptr %201, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i9.i.i, align 8
  %memberidx1.i10.i.i = getelementptr inbounds %MemberExpressionNode, ptr %201, i64 0, i32 4
  store ptr %200, ptr %memberidx1.i10.i.i, align 8
  br label %ifend.i

Parser_parse_lhs_expression_allow_call.exit:      ; preds = %while.entry.i, %ifend.i, %Parser_parse_atom.exit.i
  %209 = phi i64 [ %133, %Parser_parse_atom.exit.i ], [ %139, %while.entry.i ], [ %158, %ifend.i ]
  %210 = phi ptr [ %132, %Parser_parse_atom.exit.i ], [ %140, %while.entry.i ], [ %157, %ifend.i ]
  %expression.1.i = phi ptr [ %common.ret.op.i.i, %Parser_parse_atom.exit.i ], [ %expression.0.i, %while.entry.i ], [ %expression.2.i, %ifend.i ]
  switch i64 %209, label %common.ret43 [
    i64 23, label %ifend.i21
    i64 24, label %if.entry3.i
  ]

ifend.i21:                                        ; preds = %Parser_parse_lhs_expression_allow_call.exit, %if.entry3.i
  %op.0.i = phi i64 [ 5, %if.entry3.i ], [ 4, %Parser_parse_lhs_expression_allow_call.exit ]
  %memberidx.i.i19 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %211 = load i64, ptr %memberidx.i.i19, align 4
  %212 = load ptr, ptr %0, align 8
  %memberidx2.i.i20 = getelementptr inbounds %Array_Token_, ptr %212, i64 0, i32 2
  %213 = load i64, ptr %memberidx2.i.i20, align 4
  %214 = icmp slt i64 %211, %213
  br i1 %214, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %ifend.i21
  %215 = add nsw i64 %211, 1
  store i64 %215, ptr %memberidx.i.i19, align 4
  %memberidx.i.i.i23 = getelementptr inbounds %Array_Token_, ptr %212, i64 0, i32 1
  %216 = load ptr, ptr %memberidx.i.i.i23, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %216, i64 %215
  %217 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %217, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %ifend.i21
  %218 = tail call ptr @malloc(i32 40)
  %219 = load ptr, ptr %expression.1.i, align 8
  %memberidx7.i = getelementptr inbounds %Token, ptr %210, i64 0, i32 1
  %220 = load ptr, ptr %memberidx7.i, align 8
  %221 = tail call ptr @malloc(i32 32)
  %222 = load i64, ptr %219, align 4
  %memberidx1.i.i24 = getelementptr inbounds %FloRange, ptr %220, i64 0, i32 1
  %223 = load i64, ptr %memberidx1.i.i24, align 4
  %memberidx2.i14.i = getelementptr inbounds %FloRange, ptr %219, i64 0, i32 2
  %224 = load i64, ptr %memberidx2.i14.i, align 4
  %memberidx3.i15.i = getelementptr inbounds %FloRange, ptr %220, i64 0, i32 3
  %225 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %222, ptr %221, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %221, i64 0, i32 1
  store i64 %223, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %221, i64 0, i32 2
  store i64 %224, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %221, i64 0, i32 3
  store i64 %225, ptr %memberidx3.i.i.i, align 4
  %memberidx.i16.i = getelementptr inbounds %UnaryExpressionNode, ptr %218, i64 0, i32 3
  store i64 %op.0.i, ptr %memberidx.i16.i, align 4
  %memberidx1.i17.i = getelementptr inbounds %UnaryExpressionNode, ptr %218, i64 0, i32 4
  store ptr %expression.1.i, ptr %memberidx1.i17.i, align 8
  store ptr %221, ptr %218, align 8
  br label %common.ret43.sink.split

if.entry3.i:                                      ; preds = %Parser_parse_lhs_expression_allow_call.exit
  br label %ifend.i21

ifend.fold.split:                                 ; preds = %1
  br label %ifend

ifend:                                            ; preds = %1, %ifend.fold.split, %Parser_is_unary_op.exit.fold.split29, %Parser_is_unary_op.exit.fold.split28, %Parser_is_unary_op.exit.fold.split
  %common.ret.op.i42 = phi i64 [ 8, %Parser_is_unary_op.exit.fold.split29 ], [ 6, %Parser_is_unary_op.exit.fold.split28 ], [ 3, %Parser_is_unary_op.exit.fold.split ], [ 2, %1 ], [ 1, %ifend.fold.split ]
  %memberidx.i9 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %226 = load i64, ptr %memberidx.i9, align 4
  %227 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %227, i64 0, i32 2
  %228 = load i64, ptr %memberidx2.i, align 4
  %229 = icmp slt i64 %226, %228
  br i1 %229, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %ifend
  %230 = add nsw i64 %226, 1
  store i64 %230, ptr %memberidx.i9, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %227, i64 0, i32 1
  %231 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %231, i64 %230
  %232 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %232, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %ifend, %if.entry.i
  %233 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %234 = tail call ptr @malloc(i32 40)
  %235 = load ptr, ptr %233, align 8
  %236 = tail call ptr @malloc(i32 32)
  %237 = load i64, ptr %3, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %235, i64 0, i32 1
  %238 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i11 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %239 = load i64, ptr %memberidx2.i11, align 4
  %memberidx3.i12 = getelementptr inbounds %FloRange, ptr %235, i64 0, i32 3
  %240 = load i64, ptr %memberidx3.i12, align 4
  store i64 %237, ptr %236, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %236, i64 0, i32 1
  store i64 %238, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %236, i64 0, i32 2
  store i64 %239, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %236, i64 0, i32 3
  store i64 %240, ptr %memberidx3.i.i, align 4
  %memberidx.i13 = getelementptr inbounds %UnaryExpressionNode, ptr %234, i64 0, i32 3
  store i64 %common.ret.op.i42, ptr %memberidx.i13, align 4
  %memberidx1.i14 = getelementptr inbounds %UnaryExpressionNode, ptr %234, i64 0, i32 4
  store ptr %233, ptr %memberidx1.i14, align 8
  store ptr %236, ptr %234, align 8
  br label %common.ret43.sink.split
}

define internal fastcc ptr @Parser_eat(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %if.entry, label %else

common.ret:                                       ; preds = %if.entry.i, %if.entry, %ifend4
  %common.ret.op = phi ptr [ %28, %ifend4 ], [ %3, %if.entry ], [ %3, %if.entry.i ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %12 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %common.ret

else:                                             ; preds = %2
  switch i64 %1, label %ifend4 [
    i64 54, label %if.entry2
    i64 38, label %if.entry5
    i64 1, label %if.entry8
    i64 25, label %if.entry11
    i64 26, label %if.entry14
    i64 27, label %if.entry17
    i64 28, label %if.entry20
    i64 3, label %if.entry23
    i64 42, label %if.entry26
    i64 41, label %if.entry29
    i64 45, label %if.entry32
  ]

if.entry2:                                        ; preds = %else
  %13 = tail call ptr @malloc(i32 22)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(22) %13, ptr noundef nonnull align 8 dereferenceable(22) @54, i64 22, i1 false)
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i.i65 = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i.i65, align 8
  %memberidx1.i.i66 = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 22, ptr %memberidx1.i.i66, align 4
  %memberidx2.i.i67 = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 22, ptr %memberidx2.i.i67, align 4
  %memberidx.i68 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i68, align 8
  %16 = tail call ptr @malloc(i32 24)
  %17 = load ptr, ptr %memberidx, align 8
  %memberidx2.i70 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx2.i70, align 8
  store i64 2, ptr %16, align 4
  %memberidx1.i.i71 = getelementptr inbounds %FloError, ptr %16, i64 0, i32 2
  store ptr %18, ptr %memberidx1.i.i71, align 8
  %memberidx2.i.i72 = getelementptr inbounds %FloError, ptr %16, i64 0, i32 1
  store ptr %14, ptr %memberidx2.i.i72, align 8
  %memberidx.i.i73 = getelementptr inbounds %Array_FloError_, ptr %15, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i.i73, align 4
  %memberidx1.i4.i74 = getelementptr inbounds %Array_FloError_, ptr %15, i64 0, i32 3
  %20 = load i64, ptr %memberidx1.i4.i74, align 4
  %.not.i.i75 = icmp slt i64 %19, %20
  br i1 %.not.i.i75, label %if.entry2.Parser_error.exit81_crit_edge, label %if.entry.i.i78

if.entry2.Parser_error.exit81_crit_edge:          ; preds = %if.entry2
  %memberidx4.i.i79.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %15, i64 0, i32 1
  %.pre260 = load ptr, ptr %memberidx4.i.i79.phi.trans.insert, align 8
  br label %Parser_error.exit81

if.entry.i.i78:                                   ; preds = %if.entry2
  %21 = shl nuw i64 %20, 1
  store i64 %21, ptr %memberidx1.i4.i74, align 4
  %memberidx2.i.i.i77 = getelementptr inbounds %Array_FloError_, ptr %15, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i.i.i77, align 8
  %23 = shl i64 %20, 4
  %24 = tail call ptr @realloc(ptr %22, i64 %23)
  store ptr %24, ptr %memberidx2.i.i.i77, align 8
  %.pre259 = load i64, ptr %memberidx.i.i73, align 4
  br label %Parser_error.exit81

Parser_error.exit81:                              ; preds = %if.entry2.Parser_error.exit81_crit_edge, %if.entry.i.i78
  %25 = phi ptr [ %.pre260, %if.entry2.Parser_error.exit81_crit_edge ], [ %24, %if.entry.i.i78 ]
  %26 = phi i64 [ %19, %if.entry2.Parser_error.exit81_crit_edge ], [ %.pre259, %if.entry.i.i78 ]
  %27 = add nsw i64 %26, 1
  store i64 %27, ptr %memberidx.i.i73, align 4
  %ptridx.i.i80 = getelementptr inbounds ptr, ptr %25, i64 %26
  store ptr %16, ptr %ptridx.i.i80, align 8
  br label %ifend4

ifend4:                                           ; preds = %else, %Parser_error.exit, %Parser_error.exit235, %Parser_error.exit218, %Parser_error.exit201, %Parser_error.exit184, %Parser_error.exit167, %Parser_error.exit150, %Parser_error.exit133, %Parser_error.exit116, %Parser_error.exit99, %Parser_error.exit81
  %28 = tail call ptr @malloc(i32 16)
  %memberidx35 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %29 = load ptr, ptr %memberidx35, align 8
  store i64 46, ptr %28, align 4
  %memberidx1.i82 = getelementptr inbounds %Token, ptr %28, i64 0, i32 1
  store ptr %29, ptr %memberidx1.i82, align 8
  br label %common.ret

if.entry5:                                        ; preds = %else
  %30 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %30, ptr noundef nonnull align 8 dereferenceable(12) @55, i64 12, i1 false)
  %31 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %31, align 8
  %memberidx.i.i83 = getelementptr inbounds %string, ptr %31, i64 0, i32 1
  store ptr %30, ptr %memberidx.i.i83, align 8
  %memberidx1.i.i84 = getelementptr inbounds %string, ptr %31, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i84, align 4
  %memberidx2.i.i85 = getelementptr inbounds %string, ptr %31, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i85, align 4
  %memberidx.i86 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i86, align 8
  %33 = tail call ptr @malloc(i32 24)
  %34 = load ptr, ptr %memberidx, align 8
  %memberidx2.i88 = getelementptr inbounds %Token, ptr %34, i64 0, i32 1
  %35 = load ptr, ptr %memberidx2.i88, align 8
  store i64 2, ptr %33, align 4
  %memberidx1.i.i89 = getelementptr inbounds %FloError, ptr %33, i64 0, i32 2
  store ptr %35, ptr %memberidx1.i.i89, align 8
  %memberidx2.i.i90 = getelementptr inbounds %FloError, ptr %33, i64 0, i32 1
  store ptr %31, ptr %memberidx2.i.i90, align 8
  %memberidx.i.i91 = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 2
  %36 = load i64, ptr %memberidx.i.i91, align 4
  %memberidx1.i4.i92 = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 3
  %37 = load i64, ptr %memberidx1.i4.i92, align 4
  %.not.i.i93 = icmp slt i64 %36, %37
  br i1 %.not.i.i93, label %if.entry5.Parser_error.exit99_crit_edge, label %if.entry.i.i96

if.entry5.Parser_error.exit99_crit_edge:          ; preds = %if.entry5
  %memberidx4.i.i97.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 1
  %.pre258 = load ptr, ptr %memberidx4.i.i97.phi.trans.insert, align 8
  br label %Parser_error.exit99

if.entry.i.i96:                                   ; preds = %if.entry5
  %38 = shl nuw i64 %37, 1
  store i64 %38, ptr %memberidx1.i4.i92, align 4
  %memberidx2.i.i.i95 = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 1
  %39 = load ptr, ptr %memberidx2.i.i.i95, align 8
  %40 = shl i64 %37, 4
  %41 = tail call ptr @realloc(ptr %39, i64 %40)
  store ptr %41, ptr %memberidx2.i.i.i95, align 8
  %.pre257 = load i64, ptr %memberidx.i.i91, align 4
  br label %Parser_error.exit99

Parser_error.exit99:                              ; preds = %if.entry5.Parser_error.exit99_crit_edge, %if.entry.i.i96
  %42 = phi ptr [ %.pre258, %if.entry5.Parser_error.exit99_crit_edge ], [ %41, %if.entry.i.i96 ]
  %43 = phi i64 [ %36, %if.entry5.Parser_error.exit99_crit_edge ], [ %.pre257, %if.entry.i.i96 ]
  %44 = add nsw i64 %43, 1
  store i64 %44, ptr %memberidx.i.i91, align 4
  %ptridx.i.i98 = getelementptr inbounds ptr, ptr %42, i64 %43
  store ptr %33, ptr %ptridx.i.i98, align 8
  br label %ifend4

if.entry8:                                        ; preds = %else
  %45 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %45, ptr noundef nonnull align 8 dereferenceable(12) @56, i64 12, i1 false)
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i100 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i100, align 8
  %memberidx1.i.i101 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i101, align 4
  %memberidx2.i.i102 = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i102, align 4
  %memberidx.i103 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i103, align 8
  %48 = tail call ptr @malloc(i32 24)
  %49 = load ptr, ptr %memberidx, align 8
  %memberidx2.i105 = getelementptr inbounds %Token, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx2.i105, align 8
  store i64 2, ptr %48, align 4
  %memberidx1.i.i106 = getelementptr inbounds %FloError, ptr %48, i64 0, i32 2
  store ptr %50, ptr %memberidx1.i.i106, align 8
  %memberidx2.i.i107 = getelementptr inbounds %FloError, ptr %48, i64 0, i32 1
  store ptr %46, ptr %memberidx2.i.i107, align 8
  %memberidx.i.i108 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %51 = load i64, ptr %memberidx.i.i108, align 4
  %memberidx1.i4.i109 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 3
  %52 = load i64, ptr %memberidx1.i4.i109, align 4
  %.not.i.i110 = icmp slt i64 %51, %52
  br i1 %.not.i.i110, label %if.entry8.Parser_error.exit116_crit_edge, label %if.entry.i.i113

if.entry8.Parser_error.exit116_crit_edge:         ; preds = %if.entry8
  %memberidx4.i.i114.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %.pre256 = load ptr, ptr %memberidx4.i.i114.phi.trans.insert, align 8
  br label %Parser_error.exit116

if.entry.i.i113:                                  ; preds = %if.entry8
  %53 = shl nuw i64 %52, 1
  store i64 %53, ptr %memberidx1.i4.i109, align 4
  %memberidx2.i.i.i112 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %54 = load ptr, ptr %memberidx2.i.i.i112, align 8
  %55 = shl i64 %52, 4
  %56 = tail call ptr @realloc(ptr %54, i64 %55)
  store ptr %56, ptr %memberidx2.i.i.i112, align 8
  %.pre255 = load i64, ptr %memberidx.i.i108, align 4
  br label %Parser_error.exit116

Parser_error.exit116:                             ; preds = %if.entry8.Parser_error.exit116_crit_edge, %if.entry.i.i113
  %57 = phi ptr [ %.pre256, %if.entry8.Parser_error.exit116_crit_edge ], [ %56, %if.entry.i.i113 ]
  %58 = phi i64 [ %51, %if.entry8.Parser_error.exit116_crit_edge ], [ %.pre255, %if.entry.i.i113 ]
  %59 = add nsw i64 %58, 1
  store i64 %59, ptr %memberidx.i.i108, align 4
  %ptridx.i.i115 = getelementptr inbounds ptr, ptr %57, i64 %58
  store ptr %48, ptr %ptridx.i.i115, align 8
  br label %ifend4

if.entry11:                                       ; preds = %else
  %60 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %60, ptr noundef nonnull align 8 dereferenceable(12) @57, i64 12, i1 false)
  %61 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %61, align 8
  %memberidx.i.i117 = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  store ptr %60, ptr %memberidx.i.i117, align 8
  %memberidx1.i.i118 = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i118, align 4
  %memberidx2.i.i119 = getelementptr inbounds %string, ptr %61, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i119, align 4
  %memberidx.i120 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %62 = load ptr, ptr %memberidx.i120, align 8
  %63 = tail call ptr @malloc(i32 24)
  %64 = load ptr, ptr %memberidx, align 8
  %memberidx2.i122 = getelementptr inbounds %Token, ptr %64, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i122, align 8
  store i64 2, ptr %63, align 4
  %memberidx1.i.i123 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %65, ptr %memberidx1.i.i123, align 8
  %memberidx2.i.i124 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %61, ptr %memberidx2.i.i124, align 8
  %memberidx.i.i125 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %66 = load i64, ptr %memberidx.i.i125, align 4
  %memberidx1.i4.i126 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 3
  %67 = load i64, ptr %memberidx1.i4.i126, align 4
  %.not.i.i127 = icmp slt i64 %66, %67
  br i1 %.not.i.i127, label %if.entry11.Parser_error.exit133_crit_edge, label %if.entry.i.i130

if.entry11.Parser_error.exit133_crit_edge:        ; preds = %if.entry11
  %memberidx4.i.i131.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %.pre254 = load ptr, ptr %memberidx4.i.i131.phi.trans.insert, align 8
  br label %Parser_error.exit133

if.entry.i.i130:                                  ; preds = %if.entry11
  %68 = shl nuw i64 %67, 1
  store i64 %68, ptr %memberidx1.i4.i126, align 4
  %memberidx2.i.i.i129 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %69 = load ptr, ptr %memberidx2.i.i.i129, align 8
  %70 = shl i64 %67, 4
  %71 = tail call ptr @realloc(ptr %69, i64 %70)
  store ptr %71, ptr %memberidx2.i.i.i129, align 8
  %.pre253 = load i64, ptr %memberidx.i.i125, align 4
  br label %Parser_error.exit133

Parser_error.exit133:                             ; preds = %if.entry11.Parser_error.exit133_crit_edge, %if.entry.i.i130
  %72 = phi ptr [ %.pre254, %if.entry11.Parser_error.exit133_crit_edge ], [ %71, %if.entry.i.i130 ]
  %73 = phi i64 [ %66, %if.entry11.Parser_error.exit133_crit_edge ], [ %.pre253, %if.entry.i.i130 ]
  %74 = add nsw i64 %73, 1
  store i64 %74, ptr %memberidx.i.i125, align 4
  %ptridx.i.i132 = getelementptr inbounds ptr, ptr %72, i64 %73
  store ptr %63, ptr %ptridx.i.i132, align 8
  br label %ifend4

if.entry14:                                       ; preds = %else
  %75 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %75, ptr noundef nonnull align 8 dereferenceable(12) @58, i64 12, i1 false)
  %76 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %76, align 8
  %memberidx.i.i134 = getelementptr inbounds %string, ptr %76, i64 0, i32 1
  store ptr %75, ptr %memberidx.i.i134, align 8
  %memberidx1.i.i135 = getelementptr inbounds %string, ptr %76, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i135, align 4
  %memberidx2.i.i136 = getelementptr inbounds %string, ptr %76, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i136, align 4
  %memberidx.i137 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %77 = load ptr, ptr %memberidx.i137, align 8
  %78 = tail call ptr @malloc(i32 24)
  %79 = load ptr, ptr %memberidx, align 8
  %memberidx2.i139 = getelementptr inbounds %Token, ptr %79, i64 0, i32 1
  %80 = load ptr, ptr %memberidx2.i139, align 8
  store i64 2, ptr %78, align 4
  %memberidx1.i.i140 = getelementptr inbounds %FloError, ptr %78, i64 0, i32 2
  store ptr %80, ptr %memberidx1.i.i140, align 8
  %memberidx2.i.i141 = getelementptr inbounds %FloError, ptr %78, i64 0, i32 1
  store ptr %76, ptr %memberidx2.i.i141, align 8
  %memberidx.i.i142 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 2
  %81 = load i64, ptr %memberidx.i.i142, align 4
  %memberidx1.i4.i143 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 3
  %82 = load i64, ptr %memberidx1.i4.i143, align 4
  %.not.i.i144 = icmp slt i64 %81, %82
  br i1 %.not.i.i144, label %if.entry14.Parser_error.exit150_crit_edge, label %if.entry.i.i147

if.entry14.Parser_error.exit150_crit_edge:        ; preds = %if.entry14
  %memberidx4.i.i148.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 1
  %.pre252 = load ptr, ptr %memberidx4.i.i148.phi.trans.insert, align 8
  br label %Parser_error.exit150

if.entry.i.i147:                                  ; preds = %if.entry14
  %83 = shl nuw i64 %82, 1
  store i64 %83, ptr %memberidx1.i4.i143, align 4
  %memberidx2.i.i.i146 = getelementptr inbounds %Array_FloError_, ptr %77, i64 0, i32 1
  %84 = load ptr, ptr %memberidx2.i.i.i146, align 8
  %85 = shl i64 %82, 4
  %86 = tail call ptr @realloc(ptr %84, i64 %85)
  store ptr %86, ptr %memberidx2.i.i.i146, align 8
  %.pre251 = load i64, ptr %memberidx.i.i142, align 4
  br label %Parser_error.exit150

Parser_error.exit150:                             ; preds = %if.entry14.Parser_error.exit150_crit_edge, %if.entry.i.i147
  %87 = phi ptr [ %.pre252, %if.entry14.Parser_error.exit150_crit_edge ], [ %86, %if.entry.i.i147 ]
  %88 = phi i64 [ %81, %if.entry14.Parser_error.exit150_crit_edge ], [ %.pre251, %if.entry.i.i147 ]
  %89 = add nsw i64 %88, 1
  store i64 %89, ptr %memberidx.i.i142, align 4
  %ptridx.i.i149 = getelementptr inbounds ptr, ptr %87, i64 %88
  store ptr %78, ptr %ptridx.i.i149, align 8
  br label %ifend4

if.entry17:                                       ; preds = %else
  %90 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %90, ptr noundef nonnull align 8 dereferenceable(12) @59, i64 12, i1 false)
  %91 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %91, align 8
  %memberidx.i.i151 = getelementptr inbounds %string, ptr %91, i64 0, i32 1
  store ptr %90, ptr %memberidx.i.i151, align 8
  %memberidx1.i.i152 = getelementptr inbounds %string, ptr %91, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i152, align 4
  %memberidx2.i.i153 = getelementptr inbounds %string, ptr %91, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i153, align 4
  %memberidx.i154 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i154, align 8
  %93 = tail call ptr @malloc(i32 24)
  %94 = load ptr, ptr %memberidx, align 8
  %memberidx2.i156 = getelementptr inbounds %Token, ptr %94, i64 0, i32 1
  %95 = load ptr, ptr %memberidx2.i156, align 8
  store i64 2, ptr %93, align 4
  %memberidx1.i.i157 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 2
  store ptr %95, ptr %memberidx1.i.i157, align 8
  %memberidx2.i.i158 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 1
  store ptr %91, ptr %memberidx2.i.i158, align 8
  %memberidx.i.i159 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 2
  %96 = load i64, ptr %memberidx.i.i159, align 4
  %memberidx1.i4.i160 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 3
  %97 = load i64, ptr %memberidx1.i4.i160, align 4
  %.not.i.i161 = icmp slt i64 %96, %97
  br i1 %.not.i.i161, label %if.entry17.Parser_error.exit167_crit_edge, label %if.entry.i.i164

if.entry17.Parser_error.exit167_crit_edge:        ; preds = %if.entry17
  %memberidx4.i.i165.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %.pre250 = load ptr, ptr %memberidx4.i.i165.phi.trans.insert, align 8
  br label %Parser_error.exit167

if.entry.i.i164:                                  ; preds = %if.entry17
  %98 = shl nuw i64 %97, 1
  store i64 %98, ptr %memberidx1.i4.i160, align 4
  %memberidx2.i.i.i163 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %99 = load ptr, ptr %memberidx2.i.i.i163, align 8
  %100 = shl i64 %97, 4
  %101 = tail call ptr @realloc(ptr %99, i64 %100)
  store ptr %101, ptr %memberidx2.i.i.i163, align 8
  %.pre249 = load i64, ptr %memberidx.i.i159, align 4
  br label %Parser_error.exit167

Parser_error.exit167:                             ; preds = %if.entry17.Parser_error.exit167_crit_edge, %if.entry.i.i164
  %102 = phi ptr [ %.pre250, %if.entry17.Parser_error.exit167_crit_edge ], [ %101, %if.entry.i.i164 ]
  %103 = phi i64 [ %96, %if.entry17.Parser_error.exit167_crit_edge ], [ %.pre249, %if.entry.i.i164 ]
  %104 = add nsw i64 %103, 1
  store i64 %104, ptr %memberidx.i.i159, align 4
  %ptridx.i.i166 = getelementptr inbounds ptr, ptr %102, i64 %103
  store ptr %93, ptr %ptridx.i.i166, align 8
  br label %ifend4

if.entry20:                                       ; preds = %else
  %105 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %105, ptr noundef nonnull align 8 dereferenceable(12) @60, i64 12, i1 false)
  %106 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %106, align 8
  %memberidx.i.i168 = getelementptr inbounds %string, ptr %106, i64 0, i32 1
  store ptr %105, ptr %memberidx.i.i168, align 8
  %memberidx1.i.i169 = getelementptr inbounds %string, ptr %106, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i169, align 4
  %memberidx2.i.i170 = getelementptr inbounds %string, ptr %106, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i170, align 4
  %memberidx.i171 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %107 = load ptr, ptr %memberidx.i171, align 8
  %108 = tail call ptr @malloc(i32 24)
  %109 = load ptr, ptr %memberidx, align 8
  %memberidx2.i173 = getelementptr inbounds %Token, ptr %109, i64 0, i32 1
  %110 = load ptr, ptr %memberidx2.i173, align 8
  store i64 2, ptr %108, align 4
  %memberidx1.i.i174 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 2
  store ptr %110, ptr %memberidx1.i.i174, align 8
  %memberidx2.i.i175 = getelementptr inbounds %FloError, ptr %108, i64 0, i32 1
  store ptr %106, ptr %memberidx2.i.i175, align 8
  %memberidx.i.i176 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 2
  %111 = load i64, ptr %memberidx.i.i176, align 4
  %memberidx1.i4.i177 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 3
  %112 = load i64, ptr %memberidx1.i4.i177, align 4
  %.not.i.i178 = icmp slt i64 %111, %112
  br i1 %.not.i.i178, label %if.entry20.Parser_error.exit184_crit_edge, label %if.entry.i.i181

if.entry20.Parser_error.exit184_crit_edge:        ; preds = %if.entry20
  %memberidx4.i.i182.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %.pre248 = load ptr, ptr %memberidx4.i.i182.phi.trans.insert, align 8
  br label %Parser_error.exit184

if.entry.i.i181:                                  ; preds = %if.entry20
  %113 = shl nuw i64 %112, 1
  store i64 %113, ptr %memberidx1.i4.i177, align 4
  %memberidx2.i.i.i180 = getelementptr inbounds %Array_FloError_, ptr %107, i64 0, i32 1
  %114 = load ptr, ptr %memberidx2.i.i.i180, align 8
  %115 = shl i64 %112, 4
  %116 = tail call ptr @realloc(ptr %114, i64 %115)
  store ptr %116, ptr %memberidx2.i.i.i180, align 8
  %.pre247 = load i64, ptr %memberidx.i.i176, align 4
  br label %Parser_error.exit184

Parser_error.exit184:                             ; preds = %if.entry20.Parser_error.exit184_crit_edge, %if.entry.i.i181
  %117 = phi ptr [ %.pre248, %if.entry20.Parser_error.exit184_crit_edge ], [ %116, %if.entry.i.i181 ]
  %118 = phi i64 [ %111, %if.entry20.Parser_error.exit184_crit_edge ], [ %.pre247, %if.entry.i.i181 ]
  %119 = add nsw i64 %118, 1
  store i64 %119, ptr %memberidx.i.i176, align 4
  %ptridx.i.i183 = getelementptr inbounds ptr, ptr %117, i64 %118
  store ptr %108, ptr %ptridx.i.i183, align 8
  br label %ifend4

if.entry23:                                       ; preds = %else
  %120 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %120, ptr noundef nonnull align 8 dereferenceable(12) @61, i64 12, i1 false)
  %121 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %121, align 8
  %memberidx.i.i185 = getelementptr inbounds %string, ptr %121, i64 0, i32 1
  store ptr %120, ptr %memberidx.i.i185, align 8
  %memberidx1.i.i186 = getelementptr inbounds %string, ptr %121, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i186, align 4
  %memberidx2.i.i187 = getelementptr inbounds %string, ptr %121, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i187, align 4
  %memberidx.i188 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %122 = load ptr, ptr %memberidx.i188, align 8
  %123 = tail call ptr @malloc(i32 24)
  %124 = load ptr, ptr %memberidx, align 8
  %memberidx2.i190 = getelementptr inbounds %Token, ptr %124, i64 0, i32 1
  %125 = load ptr, ptr %memberidx2.i190, align 8
  store i64 2, ptr %123, align 4
  %memberidx1.i.i191 = getelementptr inbounds %FloError, ptr %123, i64 0, i32 2
  store ptr %125, ptr %memberidx1.i.i191, align 8
  %memberidx2.i.i192 = getelementptr inbounds %FloError, ptr %123, i64 0, i32 1
  store ptr %121, ptr %memberidx2.i.i192, align 8
  %memberidx.i.i193 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 2
  %126 = load i64, ptr %memberidx.i.i193, align 4
  %memberidx1.i4.i194 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 3
  %127 = load i64, ptr %memberidx1.i4.i194, align 4
  %.not.i.i195 = icmp slt i64 %126, %127
  br i1 %.not.i.i195, label %if.entry23.Parser_error.exit201_crit_edge, label %if.entry.i.i198

if.entry23.Parser_error.exit201_crit_edge:        ; preds = %if.entry23
  %memberidx4.i.i199.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 1
  %.pre246 = load ptr, ptr %memberidx4.i.i199.phi.trans.insert, align 8
  br label %Parser_error.exit201

if.entry.i.i198:                                  ; preds = %if.entry23
  %128 = shl nuw i64 %127, 1
  store i64 %128, ptr %memberidx1.i4.i194, align 4
  %memberidx2.i.i.i197 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 1
  %129 = load ptr, ptr %memberidx2.i.i.i197, align 8
  %130 = shl i64 %127, 4
  %131 = tail call ptr @realloc(ptr %129, i64 %130)
  store ptr %131, ptr %memberidx2.i.i.i197, align 8
  %.pre245 = load i64, ptr %memberidx.i.i193, align 4
  br label %Parser_error.exit201

Parser_error.exit201:                             ; preds = %if.entry23.Parser_error.exit201_crit_edge, %if.entry.i.i198
  %132 = phi ptr [ %.pre246, %if.entry23.Parser_error.exit201_crit_edge ], [ %131, %if.entry.i.i198 ]
  %133 = phi i64 [ %126, %if.entry23.Parser_error.exit201_crit_edge ], [ %.pre245, %if.entry.i.i198 ]
  %134 = add nsw i64 %133, 1
  store i64 %134, ptr %memberidx.i.i193, align 4
  %ptridx.i.i200 = getelementptr inbounds ptr, ptr %132, i64 %133
  store ptr %123, ptr %ptridx.i.i200, align 8
  br label %ifend4

if.entry26:                                       ; preds = %else
  %135 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %135, ptr noundef nonnull align 8 dereferenceable(12) @62, i64 12, i1 false)
  %136 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %136, align 8
  %memberidx.i.i202 = getelementptr inbounds %string, ptr %136, i64 0, i32 1
  store ptr %135, ptr %memberidx.i.i202, align 8
  %memberidx1.i.i203 = getelementptr inbounds %string, ptr %136, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i203, align 4
  %memberidx2.i.i204 = getelementptr inbounds %string, ptr %136, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i204, align 4
  %memberidx.i205 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %137 = load ptr, ptr %memberidx.i205, align 8
  %138 = tail call ptr @malloc(i32 24)
  %139 = load ptr, ptr %memberidx, align 8
  %memberidx2.i207 = getelementptr inbounds %Token, ptr %139, i64 0, i32 1
  %140 = load ptr, ptr %memberidx2.i207, align 8
  store i64 2, ptr %138, align 4
  %memberidx1.i.i208 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 2
  store ptr %140, ptr %memberidx1.i.i208, align 8
  %memberidx2.i.i209 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 1
  store ptr %136, ptr %memberidx2.i.i209, align 8
  %memberidx.i.i210 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 2
  %141 = load i64, ptr %memberidx.i.i210, align 4
  %memberidx1.i4.i211 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 3
  %142 = load i64, ptr %memberidx1.i4.i211, align 4
  %.not.i.i212 = icmp slt i64 %141, %142
  br i1 %.not.i.i212, label %if.entry26.Parser_error.exit218_crit_edge, label %if.entry.i.i215

if.entry26.Parser_error.exit218_crit_edge:        ; preds = %if.entry26
  %memberidx4.i.i216.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %.pre244 = load ptr, ptr %memberidx4.i.i216.phi.trans.insert, align 8
  br label %Parser_error.exit218

if.entry.i.i215:                                  ; preds = %if.entry26
  %143 = shl nuw i64 %142, 1
  store i64 %143, ptr %memberidx1.i4.i211, align 4
  %memberidx2.i.i.i214 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %144 = load ptr, ptr %memberidx2.i.i.i214, align 8
  %145 = shl i64 %142, 4
  %146 = tail call ptr @realloc(ptr %144, i64 %145)
  store ptr %146, ptr %memberidx2.i.i.i214, align 8
  %.pre243 = load i64, ptr %memberidx.i.i210, align 4
  br label %Parser_error.exit218

Parser_error.exit218:                             ; preds = %if.entry26.Parser_error.exit218_crit_edge, %if.entry.i.i215
  %147 = phi ptr [ %.pre244, %if.entry26.Parser_error.exit218_crit_edge ], [ %146, %if.entry.i.i215 ]
  %148 = phi i64 [ %141, %if.entry26.Parser_error.exit218_crit_edge ], [ %.pre243, %if.entry.i.i215 ]
  %149 = add nsw i64 %148, 1
  store i64 %149, ptr %memberidx.i.i210, align 4
  %ptridx.i.i217 = getelementptr inbounds ptr, ptr %147, i64 %148
  store ptr %138, ptr %ptridx.i.i217, align 8
  br label %ifend4

if.entry29:                                       ; preds = %else
  %150 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %150, ptr noundef nonnull align 8 dereferenceable(12) @63, i64 12, i1 false)
  %151 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %151, align 8
  %memberidx.i.i219 = getelementptr inbounds %string, ptr %151, i64 0, i32 1
  store ptr %150, ptr %memberidx.i.i219, align 8
  %memberidx1.i.i220 = getelementptr inbounds %string, ptr %151, i64 0, i32 2
  store i64 12, ptr %memberidx1.i.i220, align 4
  %memberidx2.i.i221 = getelementptr inbounds %string, ptr %151, i64 0, i32 3
  store i64 12, ptr %memberidx2.i.i221, align 4
  %memberidx.i222 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %152 = load ptr, ptr %memberidx.i222, align 8
  %153 = tail call ptr @malloc(i32 24)
  %154 = load ptr, ptr %memberidx, align 8
  %memberidx2.i224 = getelementptr inbounds %Token, ptr %154, i64 0, i32 1
  %155 = load ptr, ptr %memberidx2.i224, align 8
  store i64 2, ptr %153, align 4
  %memberidx1.i.i225 = getelementptr inbounds %FloError, ptr %153, i64 0, i32 2
  store ptr %155, ptr %memberidx1.i.i225, align 8
  %memberidx2.i.i226 = getelementptr inbounds %FloError, ptr %153, i64 0, i32 1
  store ptr %151, ptr %memberidx2.i.i226, align 8
  %memberidx.i.i227 = getelementptr inbounds %Array_FloError_, ptr %152, i64 0, i32 2
  %156 = load i64, ptr %memberidx.i.i227, align 4
  %memberidx1.i4.i228 = getelementptr inbounds %Array_FloError_, ptr %152, i64 0, i32 3
  %157 = load i64, ptr %memberidx1.i4.i228, align 4
  %.not.i.i229 = icmp slt i64 %156, %157
  br i1 %.not.i.i229, label %if.entry29.Parser_error.exit235_crit_edge, label %if.entry.i.i232

if.entry29.Parser_error.exit235_crit_edge:        ; preds = %if.entry29
  %memberidx4.i.i233.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %152, i64 0, i32 1
  %.pre242 = load ptr, ptr %memberidx4.i.i233.phi.trans.insert, align 8
  br label %Parser_error.exit235

if.entry.i.i232:                                  ; preds = %if.entry29
  %158 = shl nuw i64 %157, 1
  store i64 %158, ptr %memberidx1.i4.i228, align 4
  %memberidx2.i.i.i231 = getelementptr inbounds %Array_FloError_, ptr %152, i64 0, i32 1
  %159 = load ptr, ptr %memberidx2.i.i.i231, align 8
  %160 = shl i64 %157, 4
  %161 = tail call ptr @realloc(ptr %159, i64 %160)
  store ptr %161, ptr %memberidx2.i.i.i231, align 8
  %.pre241 = load i64, ptr %memberidx.i.i227, align 4
  br label %Parser_error.exit235

Parser_error.exit235:                             ; preds = %if.entry29.Parser_error.exit235_crit_edge, %if.entry.i.i232
  %162 = phi ptr [ %.pre242, %if.entry29.Parser_error.exit235_crit_edge ], [ %161, %if.entry.i.i232 ]
  %163 = phi i64 [ %156, %if.entry29.Parser_error.exit235_crit_edge ], [ %.pre241, %if.entry.i.i232 ]
  %164 = add nsw i64 %163, 1
  store i64 %164, ptr %memberidx.i.i227, align 4
  %ptridx.i.i234 = getelementptr inbounds ptr, ptr %162, i64 %163
  store ptr %153, ptr %ptridx.i.i234, align 8
  br label %ifend4

if.entry32:                                       ; preds = %else
  %165 = tail call ptr @malloc(i32 13)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %165, ptr noundef nonnull align 8 dereferenceable(13) @64, i64 13, i1 false)
  %166 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %166, align 8
  %memberidx.i.i236 = getelementptr inbounds %string, ptr %166, i64 0, i32 1
  store ptr %165, ptr %memberidx.i.i236, align 8
  %memberidx1.i.i237 = getelementptr inbounds %string, ptr %166, i64 0, i32 2
  store i64 13, ptr %memberidx1.i.i237, align 4
  %memberidx2.i.i238 = getelementptr inbounds %string, ptr %166, i64 0, i32 3
  store i64 13, ptr %memberidx2.i.i238, align 4
  %memberidx.i61 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %167 = load ptr, ptr %memberidx.i61, align 8
  %168 = tail call ptr @malloc(i32 24)
  %169 = load ptr, ptr %memberidx, align 8
  %memberidx2.i62 = getelementptr inbounds %Token, ptr %169, i64 0, i32 1
  %170 = load ptr, ptr %memberidx2.i62, align 8
  store i64 2, ptr %168, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %168, i64 0, i32 2
  store ptr %170, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %168, i64 0, i32 1
  store ptr %166, ptr %memberidx2.i.i, align 8
  %memberidx.i.i63 = getelementptr inbounds %Array_FloError_, ptr %167, i64 0, i32 2
  %171 = load i64, ptr %memberidx.i.i63, align 4
  %memberidx1.i4.i = getelementptr inbounds %Array_FloError_, ptr %167, i64 0, i32 3
  %172 = load i64, ptr %memberidx1.i4.i, align 4
  %.not.i.i = icmp slt i64 %171, %172
  br i1 %.not.i.i, label %if.entry32.Parser_error.exit_crit_edge, label %if.entry.i.i

if.entry32.Parser_error.exit_crit_edge:           ; preds = %if.entry32
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %167, i64 0, i32 1
  %.pre240 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %Parser_error.exit

if.entry.i.i:                                     ; preds = %if.entry32
  %173 = shl nuw i64 %172, 1
  store i64 %173, ptr %memberidx1.i4.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %167, i64 0, i32 1
  %174 = load ptr, ptr %memberidx2.i.i.i, align 8
  %175 = shl i64 %172, 4
  %176 = tail call ptr @realloc(ptr %174, i64 %175)
  store ptr %176, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i63, align 4
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry32.Parser_error.exit_crit_edge, %if.entry.i.i
  %177 = phi ptr [ %.pre240, %if.entry32.Parser_error.exit_crit_edge ], [ %176, %if.entry.i.i ]
  %178 = phi i64 [ %171, %if.entry32.Parser_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %179 = add nsw i64 %178, 1
  store i64 %179, ptr %memberidx.i.i63, align 4
  %ptridx.i.i64 = getelementptr inbounds ptr, ptr %177, i64 %178
  store ptr %168, ptr %ptridx.i.i64, align 8
  br label %ifend4
}

define internal fastcc ptr @Parser_parse_term_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend7.i [
    i64 4, label %Parser_is_term_expr_op.exit
    i64 7, label %Parser_is_term_expr_op.exit.fold.split
    i64 10, label %Parser_is_term_expr_op.exit.fold.split30
  ]

ifend7.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 11
  %spec.select.i = select i1 %5, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split:           ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split30:         ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit:                      ; preds = %1, %Parser_is_term_expr_op.exit.fold.split30, %Parser_is_term_expr_op.exit.fold.split, %ifend7.i
  %common.ret.op.i = phi i64 [ 3, %1 ], [ %spec.select.i, %ifend7.i ], [ 4, %Parser_is_term_expr_op.exit.fold.split ], [ 5, %Parser_is_term_expr_op.exit.fold.split30 ]
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 46
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx3.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_is_term_expr_op.exit
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_term_expr_op.exit24
  %op.0 = phi i64 [ %common.ret.op.i19, %Parser_is_term_expr_op.exit24 ], [ %common.ret.op.i, %while.entry.preheader ]
  %unary.0 = phi ptr [ %20, %Parser_is_term_expr_op.exit24 ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %19, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %20 = tail call ptr @malloc(i32 48)
  %21 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %22 = load ptr, ptr %unary.0, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = tail call ptr @malloc(i32 32)
  %25 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %22, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 3
  %28 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %25, ptr %24, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 2
  store i64 %27, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  store i64 %28, ptr %memberidx3.i.i.i, align 4
  store ptr %24, ptr %20, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %20, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i15 = getelementptr inbounds %ExpressionNode, ptr %20, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i15, align 4
  %memberidx2.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 3
  store ptr %unary.0, ptr %memberidx2.i16, align 8
  %memberidx3.i17 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i17, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 5
  store ptr %21, ptr %memberidx4.i, align 8
  %29 = load ptr, ptr %memberidx.i, align 8
  %30 = load i64, ptr %29, align 4
  switch i64 %30, label %ifend7.i23 [
    i64 4, label %Parser_is_term_expr_op.exit24
    i64 7, label %Parser_is_term_expr_op.exit24.fold.split
    i64 10, label %Parser_is_term_expr_op.exit24.fold.split31
  ]

ifend7.i23:                                       ; preds = %Parser_advance.exit
  %31 = icmp eq i64 %30, 11
  %spec.select.i22 = select i1 %31, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit24

Parser_is_term_expr_op.exit24.fold.split:         ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit24

Parser_is_term_expr_op.exit24.fold.split31:       ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit24

Parser_is_term_expr_op.exit24:                    ; preds = %Parser_advance.exit, %Parser_is_term_expr_op.exit24.fold.split31, %Parser_is_term_expr_op.exit24.fold.split, %ifend7.i23
  %common.ret.op.i19 = phi i64 [ 3, %Parser_advance.exit ], [ %spec.select.i22, %ifend7.i23 ], [ 4, %Parser_is_term_expr_op.exit24.fold.split ], [ 5, %Parser_is_term_expr_op.exit24.fold.split31 ]
  %32 = icmp ne i64 %common.ret.op.i19, 0
  %33 = icmp ne i64 %30, 46
  %34 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i27 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 2
  %35 = load i64, ptr %memberidx3.i27, align 4
  %36 = icmp eq i64 %35, 0
  %37 = and i1 %33, %36
  %38 = and i1 %32, %37
  br i1 %38, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_is_term_expr_op.exit24, %Parser_is_term_expr_op.exit
  %unary.1 = phi ptr [ %2, %Parser_is_term_expr_op.exit ], [ %20, %Parser_is_term_expr_op.exit24 ]
  ret ptr %unary.1
}

define internal fastcc ptr @Parser_parse_arithmetic_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_term_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx3.i, align 4
  %7 = icmp eq i64 %6, 0
  %8 = add i64 %4, -5
  %9 = icmp ult i64 %8, 2
  %10 = and i1 %9, %7
  br i1 %10, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %1
  %11 = icmp eq i64 %4, 6
  %12 = icmp eq i64 %4, 5
  %spec.select.i = select i1 %12, i64 2, i64 0
  %common.ret.op.i = select i1 %11, i64 1, i64 %spec.select.i
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_advance.exit
  %op.0 = phi i64 [ %common.ret.op.i19, %Parser_advance.exit ], [ %common.ret.op.i, %while.entry.preheader ]
  %term.0 = phi ptr [ %20, %Parser_advance.exit ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %19, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %20 = tail call ptr @malloc(i32 48)
  %21 = tail call fastcc ptr @Parser_parse_term_expression(ptr nonnull %0)
  %22 = load ptr, ptr %term.0, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = tail call ptr @malloc(i32 32)
  %25 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %22, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 3
  %28 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %25, ptr %24, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 2
  store i64 %27, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  store i64 %28, ptr %memberidx3.i.i.i, align 4
  store ptr %24, ptr %20, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %20, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i14 = getelementptr inbounds %ExpressionNode, ptr %20, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i14, align 4
  %memberidx2.i15 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 3
  store ptr %term.0, ptr %memberidx2.i15, align 8
  %memberidx3.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i16, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 5
  store ptr %21, ptr %memberidx4.i, align 8
  %29 = load ptr, ptr %memberidx.i, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 6
  %32 = icmp eq i64 %30, 5
  %spec.select.i18 = select i1 %32, i64 2, i64 0
  %common.ret.op.i19 = select i1 %31, i64 1, i64 %spec.select.i18
  %33 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i22 = getelementptr inbounds %Array_FloError_, ptr %33, i64 0, i32 2
  %34 = load i64, ptr %memberidx3.i22, align 4
  %35 = icmp eq i64 %34, 0
  %36 = add i64 %30, -5
  %37 = icmp ult i64 %36, 2
  %38 = and i1 %37, %35
  br i1 %38, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_advance.exit, %1
  %term.1 = phi ptr [ %2, %1 ], [ %20, %Parser_advance.exit ]
  ret ptr %term.1
}

define internal fastcc ptr @Parser_parse_bitshift_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend4.i [
    i64 48, label %Parser_is_bitshift_expr_op.exit
    i64 49, label %Parser_is_bitshift_expr_op.exit.fold.split
  ]

ifend4.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 51
  %spec.select.i = select i1 %5, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit.fold.split:       ; preds = %1
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit:                  ; preds = %1, %Parser_is_bitshift_expr_op.exit.fold.split, %ifend4.i
  %common.ret.op.i = phi i64 [ 13, %1 ], [ %spec.select.i, %ifend4.i ], [ 14, %Parser_is_bitshift_expr_op.exit.fold.split ]
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 46
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx3.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_is_bitshift_expr_op.exit
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_bitshift_expr_op.exit23
  %op.0 = phi i64 [ %common.ret.op.i19, %Parser_is_bitshift_expr_op.exit23 ], [ %common.ret.op.i, %while.entry.preheader ]
  %arith.0 = phi ptr [ %20, %Parser_is_bitshift_expr_op.exit23 ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %19, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %20 = tail call ptr @malloc(i32 48)
  %21 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr nonnull %0)
  %22 = load ptr, ptr %arith.0, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = tail call ptr @malloc(i32 32)
  %25 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %22, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 3
  %28 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %25, ptr %24, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 2
  store i64 %27, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  store i64 %28, ptr %memberidx3.i.i.i, align 4
  store ptr %24, ptr %20, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %20, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i15 = getelementptr inbounds %ExpressionNode, ptr %20, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i15, align 4
  %memberidx2.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 3
  store ptr %arith.0, ptr %memberidx2.i16, align 8
  %memberidx3.i17 = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i17, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %20, i64 0, i32 5
  store ptr %21, ptr %memberidx4.i, align 8
  %29 = load ptr, ptr %memberidx.i, align 8
  %30 = load i64, ptr %29, align 4
  switch i64 %30, label %ifend4.i22 [
    i64 48, label %Parser_is_bitshift_expr_op.exit23
    i64 49, label %Parser_is_bitshift_expr_op.exit23.fold.split
  ]

ifend4.i22:                                       ; preds = %Parser_advance.exit
  %31 = icmp eq i64 %30, 51
  %spec.select.i21 = select i1 %31, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit23

Parser_is_bitshift_expr_op.exit23.fold.split:     ; preds = %Parser_advance.exit
  br label %Parser_is_bitshift_expr_op.exit23

Parser_is_bitshift_expr_op.exit23:                ; preds = %Parser_advance.exit, %Parser_is_bitshift_expr_op.exit23.fold.split, %ifend4.i22
  %common.ret.op.i19 = phi i64 [ 13, %Parser_advance.exit ], [ %spec.select.i21, %ifend4.i22 ], [ 14, %Parser_is_bitshift_expr_op.exit23.fold.split ]
  %32 = icmp ne i64 %common.ret.op.i19, 0
  %33 = icmp ne i64 %30, 46
  %34 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i26 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 2
  %35 = load i64, ptr %memberidx3.i26, align 4
  %36 = icmp eq i64 %35, 0
  %37 = and i1 %33, %36
  %38 = and i1 %32, %37
  br i1 %38, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_is_bitshift_expr_op.exit23, %Parser_is_bitshift_expr_op.exit
  %arith.1 = phi ptr [ %2, %Parser_is_bitshift_expr_op.exit ], [ %20, %Parser_is_bitshift_expr_op.exit23 ]
  ret ptr %arith.1
}

define internal fastcc ptr @Parser_parse_comparasion_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 47
  br i1 %4, label %if.entry, label %ifend

common.ret64:                                     ; preds = %Parser_is_comp_expr_op.exit51, %Parser_is_comp_expr_op.exit, %Parser_advance.exit
  %common.ret64.op = phi ptr [ %14, %Parser_advance.exit ], [ %21, %Parser_is_comp_expr_op.exit ], [ %39, %Parser_is_comp_expr_op.exit51 ]
  ret ptr %common.ret64.op

if.entry:                                         ; preds = %1
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %5 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %12 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  %13 = tail call fastcc ptr @Parser_parse_comparasion_expression(ptr nonnull %0)
  %14 = tail call ptr @malloc(i32 40)
  %15 = load ptr, ptr %13, align 8
  %16 = tail call ptr @malloc(i32 32)
  %17 = load i64, ptr %5, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %15, i64 0, i32 1
  %18 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i19 = getelementptr inbounds %FloRange, ptr %5, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i19, align 4
  %memberidx3.i20 = getelementptr inbounds %FloRange, ptr %15, i64 0, i32 3
  %20 = load i64, ptr %memberidx3.i20, align 4
  store i64 %17, ptr %16, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 1
  store i64 %18, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 2
  store i64 %19, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 3
  store i64 %20, ptr %memberidx3.i.i, align 4
  %memberidx.i21 = getelementptr inbounds %UnaryExpressionNode, ptr %14, i64 0, i32 3
  store i64 7, ptr %memberidx.i21, align 4
  %memberidx1.i22 = getelementptr inbounds %UnaryExpressionNode, ptr %14, i64 0, i32 4
  store ptr %13, ptr %memberidx1.i22, align 8
  store ptr %16, ptr %14, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %14, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i23 = getelementptr inbounds %ExpressionNode, ptr %14, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i23, align 4
  br label %common.ret64

ifend:                                            ; preds = %1
  %21 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %22 = load ptr, ptr %memberidx, align 8
  %23 = load i64, ptr %22, align 4
  switch i64 %23, label %ifend13.i [
    i64 41, label %Parser_is_comp_expr_op.exit
    i64 42, label %Parser_is_comp_expr_op.exit.fold.split
    i64 44, label %Parser_is_comp_expr_op.exit.fold.split58
    i64 43, label %Parser_is_comp_expr_op.exit.fold.split59
    i64 39, label %Parser_is_comp_expr_op.exit.fold.split60
  ]

ifend13.i:                                        ; preds = %ifend
  %24 = icmp eq i64 %23, 40
  %spec.select.i = select i1 %24, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split:           ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split58:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split59:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split60:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit:                      ; preds = %ifend, %Parser_is_comp_expr_op.exit.fold.split60, %Parser_is_comp_expr_op.exit.fold.split59, %Parser_is_comp_expr_op.exit.fold.split58, %Parser_is_comp_expr_op.exit.fold.split, %ifend13.i
  %common.ret.op.i = phi i64 [ 7, %ifend ], [ %spec.select.i, %ifend13.i ], [ 9, %Parser_is_comp_expr_op.exit.fold.split ], [ 8, %Parser_is_comp_expr_op.exit.fold.split58 ], [ 10, %Parser_is_comp_expr_op.exit.fold.split59 ], [ 11, %Parser_is_comp_expr_op.exit.fold.split60 ]
  %25 = icmp ne i64 %common.ret.op.i, 0
  %26 = icmp ne i64 %23, 46
  %memberidx2.i26 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i26, align 8
  %memberidx3.i27 = getelementptr inbounds %Array_FloError_, ptr %27, i64 0, i32 2
  %28 = load i64, ptr %memberidx3.i27, align 4
  %29 = icmp eq i64 %28, 0
  %30 = and i1 %26, %29
  %31 = and i1 %25, %30
  br i1 %31, label %while.entry.preheader, label %common.ret64

while.entry.preheader:                            ; preds = %Parser_is_comp_expr_op.exit
  %memberidx.i28 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_comp_expr_op.exit51
  %bit.0 = phi ptr [ %39, %Parser_is_comp_expr_op.exit51 ], [ %21, %while.entry.preheader ]
  %op.0 = phi i64 [ %common.ret.op.i44, %Parser_is_comp_expr_op.exit51 ], [ %common.ret.op.i, %while.entry.preheader ]
  %32 = load i64, ptr %memberidx.i28, align 4
  %33 = load ptr, ptr %0, align 8
  %memberidx2.i29 = getelementptr inbounds %Array_Token_, ptr %33, i64 0, i32 2
  %34 = load i64, ptr %memberidx2.i29, align 4
  %35 = icmp slt i64 %32, %34
  br i1 %35, label %if.entry.i33, label %Parser_advance.exit35

if.entry.i33:                                     ; preds = %while.entry
  %36 = add nsw i64 %32, 1
  store i64 %36, ptr %memberidx.i28, align 4
  %memberidx.i.i31 = getelementptr inbounds %Array_Token_, ptr %33, i64 0, i32 1
  %37 = load ptr, ptr %memberidx.i.i31, align 8
  %ptridx.i.i32 = getelementptr inbounds ptr, ptr %37, i64 %36
  %38 = load ptr, ptr %ptridx.i.i32, align 8
  store ptr %38, ptr %memberidx, align 8
  br label %Parser_advance.exit35

Parser_advance.exit35:                            ; preds = %while.entry, %if.entry.i33
  %39 = tail call ptr @malloc(i32 48)
  %40 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %41 = load ptr, ptr %bit.0, align 8
  %42 = load ptr, ptr %40, align 8
  %43 = tail call ptr @malloc(i32 32)
  %44 = load i64, ptr %41, align 4
  %memberidx1.i.i36 = getelementptr inbounds %FloRange, ptr %42, i64 0, i32 1
  %45 = load i64, ptr %memberidx1.i.i36, align 4
  %memberidx2.i.i37 = getelementptr inbounds %FloRange, ptr %41, i64 0, i32 2
  %46 = load i64, ptr %memberidx2.i.i37, align 4
  %memberidx3.i.i38 = getelementptr inbounds %FloRange, ptr %42, i64 0, i32 3
  %47 = load i64, ptr %memberidx3.i.i38, align 4
  store i64 %44, ptr %43, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 1
  store i64 %45, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 2
  store i64 %46, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 3
  store i64 %47, ptr %memberidx3.i.i.i, align 4
  store ptr %43, ptr %39, align 8
  %memberidx.i.i.i39 = getelementptr inbounds %StatementNode, ptr %39, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i39, align 4
  %memberidx.i.i40 = getelementptr inbounds %ExpressionNode, ptr %39, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i40, align 4
  %memberidx2.i41 = getelementptr inbounds %BinaryExpressionNode, ptr %39, i64 0, i32 3
  store ptr %bit.0, ptr %memberidx2.i41, align 8
  %memberidx3.i42 = getelementptr inbounds %BinaryExpressionNode, ptr %39, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i42, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %39, i64 0, i32 5
  store ptr %40, ptr %memberidx4.i, align 8
  %48 = load ptr, ptr %memberidx, align 8
  %49 = load i64, ptr %48, align 4
  switch i64 %49, label %ifend13.i50 [
    i64 41, label %Parser_is_comp_expr_op.exit51
    i64 42, label %Parser_is_comp_expr_op.exit51.fold.split
    i64 44, label %Parser_is_comp_expr_op.exit51.fold.split61
    i64 43, label %Parser_is_comp_expr_op.exit51.fold.split62
    i64 39, label %Parser_is_comp_expr_op.exit51.fold.split63
  ]

ifend13.i50:                                      ; preds = %Parser_advance.exit35
  %50 = icmp eq i64 %49, 40
  %spec.select.i49 = select i1 %50, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit51

Parser_is_comp_expr_op.exit51.fold.split:         ; preds = %Parser_advance.exit35
  br label %Parser_is_comp_expr_op.exit51

Parser_is_comp_expr_op.exit51.fold.split61:       ; preds = %Parser_advance.exit35
  br label %Parser_is_comp_expr_op.exit51

Parser_is_comp_expr_op.exit51.fold.split62:       ; preds = %Parser_advance.exit35
  br label %Parser_is_comp_expr_op.exit51

Parser_is_comp_expr_op.exit51.fold.split63:       ; preds = %Parser_advance.exit35
  br label %Parser_is_comp_expr_op.exit51

Parser_is_comp_expr_op.exit51:                    ; preds = %Parser_advance.exit35, %Parser_is_comp_expr_op.exit51.fold.split63, %Parser_is_comp_expr_op.exit51.fold.split62, %Parser_is_comp_expr_op.exit51.fold.split61, %Parser_is_comp_expr_op.exit51.fold.split, %ifend13.i50
  %common.ret.op.i44 = phi i64 [ 7, %Parser_advance.exit35 ], [ %spec.select.i49, %ifend13.i50 ], [ 9, %Parser_is_comp_expr_op.exit51.fold.split ], [ 8, %Parser_is_comp_expr_op.exit51.fold.split61 ], [ 10, %Parser_is_comp_expr_op.exit51.fold.split62 ], [ 11, %Parser_is_comp_expr_op.exit51.fold.split63 ]
  %51 = icmp ne i64 %common.ret.op.i44, 0
  %52 = icmp ne i64 %49, 46
  %53 = load ptr, ptr %memberidx2.i26, align 8
  %memberidx3.i54 = getelementptr inbounds %Array_FloError_, ptr %53, i64 0, i32 2
  %54 = load i64, ptr %memberidx3.i54, align 4
  %55 = icmp eq i64 %54, 0
  %56 = and i1 %52, %55
  %57 = and i1 %51, %56
  br i1 %57, label %while.entry, label %common.ret64
}

define internal fastcc ptr @Parser_parse_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_comparasion_expression(ptr %0)
  %memberidx.i.i19.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i.i19.i, align 8
  %4 = load i64, ptr %3, align 4
  %5 = and i64 %4, -2
  %6 = icmp eq i64 %5, 8
  %7 = icmp ne i64 %4, 46
  %memberidx2.i.i20.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i.i21.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx3.i.i21.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.i.i.preheader, label %Parser_parse_bit_expression.exit.i

while.entry.i.i.preheader:                        ; preds = %1
  %13 = icmp eq i64 %4, 9
  %14 = icmp eq i64 %4, 8
  %spec.select.i.i.i = select i1 %14, i64 16, i64 0
  %common.ret.op.i.i.i = select i1 %13, i64 15, i64 %spec.select.i.i.i
  %memberidx.i11.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i.i

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i35.i
  %op.0.i.i = phi i64 [ %common.ret.op.i19.i.i, %Parser_advance.exit.i35.i ], [ %common.ret.op.i.i.i, %while.entry.i.i.preheader ]
  %cmp.0.i.i = phi ptr [ %22, %Parser_advance.exit.i35.i ], [ %2, %while.entry.i.i.preheader ]
  %15 = load i64, ptr %memberidx.i11.i.i, align 4
  %16 = load ptr, ptr %0, align 8
  %memberidx2.i12.i22.i = getelementptr inbounds %Array_Token_, ptr %16, i64 0, i32 2
  %17 = load i64, ptr %memberidx2.i12.i22.i, align 4
  %18 = icmp slt i64 %15, %17
  br i1 %18, label %if.entry.i.i26.i, label %Parser_advance.exit.i35.i

if.entry.i.i26.i:                                 ; preds = %while.entry.i.i
  %19 = add nsw i64 %15, 1
  store i64 %19, ptr %memberidx.i11.i.i, align 4
  %memberidx.i.i.i24.i = getelementptr inbounds %Array_Token_, ptr %16, i64 0, i32 1
  %20 = load ptr, ptr %memberidx.i.i.i24.i, align 8
  %ptridx.i.i.i25.i = getelementptr inbounds ptr, ptr %20, i64 %19
  %21 = load ptr, ptr %ptridx.i.i.i25.i, align 8
  store ptr %21, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit.i35.i

Parser_advance.exit.i35.i:                        ; preds = %if.entry.i.i26.i, %while.entry.i.i
  %22 = tail call ptr @malloc(i32 48)
  %23 = tail call fastcc ptr @Parser_parse_comparasion_expression(ptr nonnull %0)
  %24 = load ptr, ptr %cmp.0.i.i, align 8
  %25 = load ptr, ptr %23, align 8
  %26 = tail call ptr @malloc(i32 32)
  %27 = load i64, ptr %24, align 4
  %memberidx1.i.i.i27.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  %28 = load i64, ptr %memberidx1.i.i.i27.i, align 4
  %memberidx2.i.i.i28.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i.i.i28.i, align 4
  %memberidx3.i.i.i29.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  %30 = load i64, ptr %memberidx3.i.i.i29.i, align 4
  store i64 %27, ptr %26, align 4
  %memberidx1.i.i.i.i30.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 1
  store i64 %28, ptr %memberidx1.i.i.i.i30.i, align 4
  %memberidx2.i.i.i.i31.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 2
  store i64 %29, ptr %memberidx2.i.i.i.i31.i, align 4
  %memberidx3.i.i.i.i32.i = getelementptr inbounds %FloRange, ptr %26, i64 0, i32 3
  store i64 %30, ptr %memberidx3.i.i.i.i32.i, align 4
  store ptr %26, ptr %22, align 8
  %memberidx.i.i.i.i33.i = getelementptr inbounds %StatementNode, ptr %22, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i33.i, align 4
  %memberidx.i.i14.i.i = getelementptr inbounds %ExpressionNode, ptr %22, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i14.i.i, align 4
  %memberidx2.i15.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %22, i64 0, i32 3
  store ptr %cmp.0.i.i, ptr %memberidx2.i15.i.i, align 8
  %memberidx3.i16.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %22, i64 0, i32 4
  store i64 %op.0.i.i, ptr %memberidx3.i16.i.i, align 4
  %memberidx4.i.i34.i = getelementptr inbounds %BinaryExpressionNode, ptr %22, i64 0, i32 5
  store ptr %23, ptr %memberidx4.i.i34.i, align 8
  %31 = load ptr, ptr %memberidx.i.i19.i, align 8
  %32 = load i64, ptr %31, align 4
  %33 = icmp eq i64 %32, 9
  %34 = icmp eq i64 %32, 8
  %spec.select.i18.i.i = select i1 %34, i64 16, i64 0
  %common.ret.op.i19.i.i = select i1 %33, i64 15, i64 %spec.select.i18.i.i
  %35 = and i64 %32, -2
  %36 = icmp eq i64 %35, 8
  %37 = icmp ne i64 %32, 46
  %38 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i22.i.i = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 2
  %39 = load i64, ptr %memberidx3.i22.i.i, align 4
  %40 = icmp eq i64 %39, 0
  %41 = and i1 %37, %40
  %42 = and i1 %36, %41
  br i1 %42, label %while.entry.i.i, label %Parser_parse_bit_expression.exit.i

Parser_parse_bit_expression.exit.i:               ; preds = %Parser_advance.exit.i35.i, %1
  %43 = phi i64 [ %9, %1 ], [ %39, %Parser_advance.exit.i35.i ]
  %44 = phi i64 [ %4, %1 ], [ %32, %Parser_advance.exit.i35.i ]
  %cmp.1.i.i = phi ptr [ %2, %1 ], [ %22, %Parser_advance.exit.i35.i ]
  %45 = icmp eq i64 %44, 52
  %46 = icmp eq i64 %43, 0
  %47 = and i1 %45, %46
  br i1 %47, label %ifend.i.i, label %Parser_parse_range_expression.exit.i

ifend.i.i:                                        ; preds = %Parser_parse_bit_expression.exit.i
  %memberidx.i8.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %48 = load i64, ptr %memberidx.i8.i.i, align 4
  %49 = load ptr, ptr %0, align 8
  %memberidx2.i9.i.i = getelementptr inbounds %Array_Token_, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i9.i.i, align 4
  %51 = icmp slt i64 %48, %50
  br i1 %51, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %ifend.i.i
  %52 = add nsw i64 %48, 1
  store i64 %52, ptr %memberidx.i8.i.i, align 4
  %memberidx.i.i.i14.i = getelementptr inbounds %Array_Token_, ptr %49, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i.i.i14.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %53, i64 %52
  %54 = load ptr, ptr %ptridx.i.i.i.i, align 8
  store ptr %54, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %ifend.i.i
  %55 = tail call ptr @malloc(i32 48)
  %56 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %57 = load ptr, ptr %cmp.1.i.i, align 8
  %58 = load ptr, ptr %56, align 8
  %59 = tail call ptr @malloc(i32 32)
  %60 = load i64, ptr %57, align 4
  %memberidx1.i.i.i15.i = getelementptr inbounds %FloRange, ptr %58, i64 0, i32 1
  %61 = load i64, ptr %memberidx1.i.i.i15.i, align 4
  %memberidx2.i.i.i16.i = getelementptr inbounds %FloRange, ptr %57, i64 0, i32 2
  %62 = load i64, ptr %memberidx2.i.i.i16.i, align 4
  %memberidx3.i.i.i17.i = getelementptr inbounds %FloRange, ptr %58, i64 0, i32 3
  %63 = load i64, ptr %memberidx3.i.i.i17.i, align 4
  store i64 %60, ptr %59, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %59, i64 0, i32 1
  store i64 %61, ptr %memberidx1.i.i.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %59, i64 0, i32 2
  store i64 %62, ptr %memberidx2.i.i.i.i.i, align 4
  %memberidx3.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %59, i64 0, i32 3
  store i64 %63, ptr %memberidx3.i.i.i.i.i, align 4
  store ptr %59, ptr %55, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %StatementNode, ptr %55, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i.i, align 4
  %memberidx.i.i11.i.i = getelementptr inbounds %ExpressionNode, ptr %55, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i11.i.i, align 4
  %memberidx2.i12.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %55, i64 0, i32 3
  store ptr %cmp.1.i.i, ptr %memberidx2.i12.i.i, align 8
  %memberidx3.i13.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %55, i64 0, i32 4
  store i64 31, ptr %memberidx3.i13.i.i, align 4
  %memberidx4.i.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %55, i64 0, i32 5
  store ptr %56, ptr %memberidx4.i.i.i, align 8
  %.pre = load ptr, ptr %memberidx.i.i19.i, align 8
  %.pre85 = load i64, ptr %.pre, align 4
  br label %Parser_parse_range_expression.exit.i

Parser_parse_range_expression.exit.i:             ; preds = %Parser_advance.exit.i.i, %Parser_parse_bit_expression.exit.i
  %64 = phi i64 [ %.pre85, %Parser_advance.exit.i.i ], [ %44, %Parser_parse_bit_expression.exit.i ]
  %common.ret.op.i.i = phi ptr [ %55, %Parser_advance.exit.i.i ], [ %cmp.1.i.i, %Parser_parse_bit_expression.exit.i ]
  %.not.i = icmp eq i64 %64, 74
  br i1 %.not.i, label %ifend.i, label %Parser_parse_typecast_expression.exit

ifend.i:                                          ; preds = %Parser_parse_range_expression.exit.i
  %memberidx.i.i70 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %65 = load i64, ptr %memberidx.i.i70, align 4
  %66 = load ptr, ptr %0, align 8
  %memberidx2.i.i71 = getelementptr inbounds %Array_Token_, ptr %66, i64 0, i32 2
  %67 = load i64, ptr %memberidx2.i.i71, align 4
  %68 = icmp slt i64 %65, %67
  br i1 %68, label %if.entry.i.i75, label %Parser_advance.exit.i83

if.entry.i.i75:                                   ; preds = %ifend.i
  %69 = add nsw i64 %65, 1
  store i64 %69, ptr %memberidx.i.i70, align 4
  %memberidx.i.i.i73 = getelementptr inbounds %Array_Token_, ptr %66, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i.i73, align 8
  %ptridx.i.i.i74 = getelementptr inbounds ptr, ptr %70, i64 %69
  %71 = load ptr, ptr %ptridx.i.i.i74, align 8
  store ptr %71, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit.i83

Parser_advance.exit.i83:                          ; preds = %if.entry.i.i75, %ifend.i
  %72 = tail call ptr @malloc(i32 40)
  %73 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %74 = load ptr, ptr %common.ret.op.i.i, align 8
  %75 = load ptr, ptr %73, align 8
  %76 = tail call ptr @malloc(i32 32)
  %77 = load i64, ptr %74, align 4
  %memberidx1.i.i.i76 = getelementptr inbounds %FloRange, ptr %75, i64 0, i32 1
  %78 = load i64, ptr %memberidx1.i.i.i76, align 4
  %memberidx2.i.i.i77 = getelementptr inbounds %FloRange, ptr %74, i64 0, i32 2
  %79 = load i64, ptr %memberidx2.i.i.i77, align 4
  %memberidx3.i.i.i78 = getelementptr inbounds %FloRange, ptr %75, i64 0, i32 3
  %80 = load i64, ptr %memberidx3.i.i.i78, align 4
  store i64 %77, ptr %76, align 4
  %memberidx1.i.i.i.i79 = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 1
  store i64 %78, ptr %memberidx1.i.i.i.i79, align 4
  %memberidx2.i.i.i.i80 = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 2
  store i64 %79, ptr %memberidx2.i.i.i.i80, align 4
  %memberidx3.i.i.i.i81 = getelementptr inbounds %FloRange, ptr %76, i64 0, i32 3
  store i64 %80, ptr %memberidx3.i.i.i.i81, align 4
  store ptr %76, ptr %72, align 8
  %memberidx.i.i.i.i82 = getelementptr inbounds %StatementNode, ptr %72, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i82, align 4
  %memberidx.i.i6.i = getelementptr inbounds %ExpressionNode, ptr %72, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %TypeCastExpressionNode, ptr %72, i64 0, i32 3
  store ptr %common.ret.op.i.i, ptr %memberidx2.i7.i, align 8
  %memberidx3.i8.i = getelementptr inbounds %TypeCastExpressionNode, ptr %72, i64 0, i32 4
  store ptr %73, ptr %memberidx3.i8.i, align 8
  %.pre86 = load ptr, ptr %memberidx.i.i19.i, align 8
  %.pre87 = load i64, ptr %.pre86, align 4
  br label %Parser_parse_typecast_expression.exit

Parser_parse_typecast_expression.exit:            ; preds = %Parser_parse_range_expression.exit.i, %Parser_advance.exit.i83
  %81 = phi i64 [ %.pre87, %Parser_advance.exit.i83 ], [ %64, %Parser_parse_range_expression.exit.i ]
  %common.ret.op.i69 = phi ptr [ %72, %Parser_advance.exit.i83 ], [ %common.ret.op.i.i, %Parser_parse_range_expression.exit.i ]
  %82 = icmp eq i64 %81, 36
  %83 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i.i49 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 2
  %84 = load i64, ptr %memberidx3.i.i49, align 4
  %85 = icmp eq i64 %84, 0
  %86 = and i1 %82, %85
  br i1 %86, label %ifend.i52, label %Parser_parse_ternary_expression.exit

ifend.i52:                                        ; preds = %Parser_parse_typecast_expression.exit
  %memberidx.i10.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %87 = load i64, ptr %memberidx.i10.i, align 4
  %88 = load ptr, ptr %0, align 8
  %memberidx2.i11.i = getelementptr inbounds %Array_Token_, ptr %88, i64 0, i32 2
  %89 = load i64, ptr %memberidx2.i11.i, align 4
  %90 = icmp slt i64 %87, %89
  br i1 %90, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %ifend.i52
  %91 = add nsw i64 %87, 1
  store i64 %91, ptr %memberidx.i10.i, align 4
  %memberidx.i.i.i53 = getelementptr inbounds %Array_Token_, ptr %88, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i.i.i53, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %92, i64 %91
  %93 = load ptr, ptr %ptridx.i.i.i, align 8
  store ptr %93, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %ifend.i52
  %94 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %95 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %96 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %97 = tail call ptr @malloc(i32 48)
  %98 = load ptr, ptr %common.ret.op.i69, align 8
  %99 = load ptr, ptr %96, align 8
  %100 = tail call ptr @malloc(i32 32)
  %101 = load i64, ptr %98, align 4
  %memberidx1.i.i.i54 = getelementptr inbounds %FloRange, ptr %99, i64 0, i32 1
  %102 = load i64, ptr %memberidx1.i.i.i54, align 4
  %memberidx2.i.i.i55 = getelementptr inbounds %FloRange, ptr %98, i64 0, i32 2
  %103 = load i64, ptr %memberidx2.i.i.i55, align 4
  %memberidx3.i.i.i56 = getelementptr inbounds %FloRange, ptr %99, i64 0, i32 3
  %104 = load i64, ptr %memberidx3.i.i.i56, align 4
  store i64 %101, ptr %100, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 1
  store i64 %102, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 2
  store i64 %103, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %100, i64 0, i32 3
  store i64 %104, ptr %memberidx3.i.i.i.i, align 4
  store ptr %100, ptr %97, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %97, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i13.i = getelementptr inbounds %ExpressionNode, ptr %97, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i13.i, align 4
  %memberidx2.i14.i = getelementptr inbounds %TernaryExpressionNode, ptr %97, i64 0, i32 3
  store ptr %common.ret.op.i69, ptr %memberidx2.i14.i, align 8
  %memberidx3.i15.i = getelementptr inbounds %TernaryExpressionNode, ptr %97, i64 0, i32 4
  store ptr %94, ptr %memberidx3.i15.i, align 8
  %memberidx4.i.i = getelementptr inbounds %TernaryExpressionNode, ptr %97, i64 0, i32 5
  store ptr %96, ptr %memberidx4.i.i, align 8
  %105 = load ptr, ptr %94, align 8
  %106 = load ptr, ptr %96, align 8
  %107 = tail call ptr @malloc(i32 32)
  %108 = load i64, ptr %105, align 4
  %memberidx1.i15.i.i = getelementptr inbounds %FloRange, ptr %106, i64 0, i32 1
  %109 = load i64, ptr %memberidx1.i15.i.i, align 4
  %memberidx2.i16.i.i = getelementptr inbounds %FloRange, ptr %105, i64 0, i32 2
  %110 = load i64, ptr %memberidx2.i16.i.i, align 4
  %memberidx3.i17.i.i = getelementptr inbounds %FloRange, ptr %106, i64 0, i32 3
  %111 = load i64, ptr %memberidx3.i17.i.i, align 4
  store i64 %108, ptr %107, align 4
  %memberidx1.i.i18.i.i = getelementptr inbounds %FloRange, ptr %107, i64 0, i32 1
  store i64 %109, ptr %memberidx1.i.i18.i.i, align 4
  %memberidx2.i.i19.i.i = getelementptr inbounds %FloRange, ptr %107, i64 0, i32 2
  store i64 %110, ptr %memberidx2.i.i19.i.i, align 4
  %memberidx3.i.i20.i.i = getelementptr inbounds %FloRange, ptr %107, i64 0, i32 3
  store i64 %111, ptr %memberidx3.i.i20.i.i, align 4
  store ptr %107, ptr %97, align 8
  %.pre88 = load ptr, ptr %memberidx.i.i19.i, align 8
  %.pre89 = load i64, ptr %.pre88, align 4
  %.pre90 = load ptr, ptr %memberidx2.i.i20.i, align 8
  %memberidx3.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre90, i64 0, i32 2
  %.pre91 = load i64, ptr %memberidx3.i.phi.trans.insert, align 4
  br label %Parser_parse_ternary_expression.exit

Parser_parse_ternary_expression.exit:             ; preds = %Parser_parse_typecast_expression.exit, %Parser_advance.exit.i
  %112 = phi i64 [ %.pre91, %Parser_advance.exit.i ], [ %84, %Parser_parse_typecast_expression.exit ]
  %113 = phi i64 [ %.pre89, %Parser_advance.exit.i ], [ %81, %Parser_parse_typecast_expression.exit ]
  %common.ret.op.i50 = phi ptr [ %97, %Parser_advance.exit.i ], [ %common.ret.op.i69, %Parser_parse_typecast_expression.exit ]
  %114 = icmp eq i64 %113, 69
  %115 = icmp eq i64 %112, 0
  %116 = and i1 %114, %115
  br i1 %116, label %if.entry, label %ifend

common.ret84.sink.split:                          ; preds = %Parser_advance.exit, %Parser_advance.exit34
  %.sink98 = phi ptr [ %145, %Parser_advance.exit34 ], [ %124, %Parser_advance.exit ]
  %common.ret.op.i.sink = phi i64 [ %common.ret.op.i, %Parser_advance.exit34 ], [ 18, %Parser_advance.exit ]
  %.sink = phi ptr [ %146, %Parser_advance.exit34 ], [ %125, %Parser_advance.exit ]
  %memberidx.i.i.i41 = getelementptr inbounds %StatementNode, ptr %.sink98, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i41, align 4
  %memberidx.i.i42 = getelementptr inbounds %ExpressionNode, ptr %.sink98, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i42, align 4
  %memberidx2.i43 = getelementptr inbounds %BinaryExpressionNode, ptr %.sink98, i64 0, i32 3
  store ptr %common.ret.op.i50, ptr %memberidx2.i43, align 8
  %memberidx3.i44 = getelementptr inbounds %BinaryExpressionNode, ptr %.sink98, i64 0, i32 4
  store i64 %common.ret.op.i.sink, ptr %memberidx3.i44, align 4
  %memberidx4.i45 = getelementptr inbounds %BinaryExpressionNode, ptr %.sink98, i64 0, i32 5
  store ptr %.sink, ptr %memberidx4.i45, align 8
  br label %common.ret84

common.ret84:                                     ; preds = %common.ret84.sink.split, %Parser_is_assign_op.exit
  %common.ret84.op = phi ptr [ %common.ret.op.i50, %Parser_is_assign_op.exit ], [ %.sink98, %common.ret84.sink.split ]
  ret ptr %common.ret84.op

if.entry:                                         ; preds = %Parser_parse_ternary_expression.exit
  %memberidx.i17 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %117 = load i64, ptr %memberidx.i17, align 4
  %118 = load ptr, ptr %0, align 8
  %memberidx2.i18 = getelementptr inbounds %Array_Token_, ptr %118, i64 0, i32 2
  %119 = load i64, ptr %memberidx2.i18, align 4
  %120 = icmp slt i64 %117, %119
  br i1 %120, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %121 = add nsw i64 %117, 1
  store i64 %121, ptr %memberidx.i17, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Token_, ptr %118, i64 0, i32 1
  %122 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %122, i64 %121
  %123 = load ptr, ptr %ptridx.i.i, align 8
  store ptr %123, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  %124 = tail call ptr @malloc(i32 48)
  %125 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %126 = load ptr, ptr %common.ret.op.i50, align 8
  %127 = load ptr, ptr %125, align 8
  %128 = tail call ptr @malloc(i32 32)
  %129 = load i64, ptr %126, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %127, i64 0, i32 1
  %130 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %126, i64 0, i32 2
  %131 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %127, i64 0, i32 3
  %132 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %129, ptr %128, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %128, i64 0, i32 1
  store i64 %130, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %128, i64 0, i32 2
  store i64 %131, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %128, i64 0, i32 3
  store i64 %132, ptr %memberidx3.i.i.i, align 4
  store ptr %128, ptr %124, align 8
  br label %common.ret84.sink.split

ifend:                                            ; preds = %Parser_parse_ternary_expression.exit
  switch i64 %113, label %ifend51.i [
    i64 38, label %Parser_is_assign_op.exit
    i64 12, label %Parser_is_assign_op.exit.fold.split
    i64 13, label %Parser_is_assign_op.exit.fold.split60
    i64 14, label %Parser_is_assign_op.exit.fold.split61
    i64 15, label %Parser_is_assign_op.exit.fold.split62
    i64 16, label %Parser_is_assign_op.exit.fold.split63
    i64 17, label %Parser_is_assign_op.exit.fold.split64
    i64 18, label %Parser_is_assign_op.exit.fold.split65
    i64 19, label %Parser_is_assign_op.exit.fold.split66
    i64 20, label %Parser_is_assign_op.exit.fold.split67
    i64 22, label %Parser_is_assign_op.exit.fold.split68
  ]

ifend51.i:                                        ; preds = %ifend
  %133 = icmp eq i64 %113, 21
  %spec.select.i = select i1 %133, i64 30, i64 0
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split:              ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split60:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split61:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split62:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split63:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split64:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split65:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split66:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split67:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split68:            ; preds = %ifend
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit:                         ; preds = %ifend, %Parser_is_assign_op.exit.fold.split68, %Parser_is_assign_op.exit.fold.split67, %Parser_is_assign_op.exit.fold.split66, %Parser_is_assign_op.exit.fold.split65, %Parser_is_assign_op.exit.fold.split64, %Parser_is_assign_op.exit.fold.split63, %Parser_is_assign_op.exit.fold.split62, %Parser_is_assign_op.exit.fold.split61, %Parser_is_assign_op.exit.fold.split60, %Parser_is_assign_op.exit.fold.split, %ifend51.i
  %common.ret.op.i = phi i64 [ 19, %ifend ], [ %spec.select.i, %ifend51.i ], [ 22, %Parser_is_assign_op.exit.fold.split ], [ 21, %Parser_is_assign_op.exit.fold.split60 ], [ 20, %Parser_is_assign_op.exit.fold.split61 ], [ 23, %Parser_is_assign_op.exit.fold.split62 ], [ 24, %Parser_is_assign_op.exit.fold.split63 ], [ 25, %Parser_is_assign_op.exit.fold.split64 ], [ 26, %Parser_is_assign_op.exit.fold.split65 ], [ 27, %Parser_is_assign_op.exit.fold.split66 ], [ 28, %Parser_is_assign_op.exit.fold.split67 ], [ 29, %Parser_is_assign_op.exit.fold.split68 ]
  %134 = icmp ne i64 %common.ret.op.i, 0
  %135 = icmp ne i64 %113, 46
  %136 = and i1 %135, %115
  %137 = and i1 %136, %134
  br i1 %137, label %ifend4, label %common.ret84

ifend4:                                           ; preds = %Parser_is_assign_op.exit
  %memberidx.i27 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %138 = load i64, ptr %memberidx.i27, align 4
  %139 = load ptr, ptr %0, align 8
  %memberidx2.i28 = getelementptr inbounds %Array_Token_, ptr %139, i64 0, i32 2
  %140 = load i64, ptr %memberidx2.i28, align 4
  %141 = icmp slt i64 %138, %140
  br i1 %141, label %if.entry.i32, label %Parser_advance.exit34

if.entry.i32:                                     ; preds = %ifend4
  %142 = add nsw i64 %138, 1
  store i64 %142, ptr %memberidx.i27, align 4
  %memberidx.i.i30 = getelementptr inbounds %Array_Token_, ptr %139, i64 0, i32 1
  %143 = load ptr, ptr %memberidx.i.i30, align 8
  %ptridx.i.i31 = getelementptr inbounds ptr, ptr %143, i64 %142
  %144 = load ptr, ptr %ptridx.i.i31, align 8
  store ptr %144, ptr %memberidx.i.i19.i, align 8
  br label %Parser_advance.exit34

Parser_advance.exit34:                            ; preds = %ifend4, %if.entry.i32
  %145 = tail call ptr @malloc(i32 48)
  %146 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %147 = load ptr, ptr %common.ret.op.i50, align 8
  %148 = load ptr, ptr %146, align 8
  %149 = tail call ptr @malloc(i32 32)
  %150 = load i64, ptr %147, align 4
  %memberidx1.i.i35 = getelementptr inbounds %FloRange, ptr %148, i64 0, i32 1
  %151 = load i64, ptr %memberidx1.i.i35, align 4
  %memberidx2.i.i36 = getelementptr inbounds %FloRange, ptr %147, i64 0, i32 2
  %152 = load i64, ptr %memberidx2.i.i36, align 4
  %memberidx3.i.i37 = getelementptr inbounds %FloRange, ptr %148, i64 0, i32 3
  %153 = load i64, ptr %memberidx3.i.i37, align 4
  store i64 %150, ptr %149, align 4
  %memberidx1.i.i.i38 = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 1
  store i64 %151, ptr %memberidx1.i.i.i38, align 4
  %memberidx2.i.i.i39 = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 2
  store i64 %152, ptr %memberidx2.i.i.i39, align 4
  %memberidx3.i.i.i40 = getelementptr inbounds %FloRange, ptr %149, i64 0, i32 3
  store i64 %153, ptr %memberidx3.i.i.i40, align 4
  store ptr %149, ptr %145, align 8
  br label %common.ret84.sink.split
}

define internal fastcc ptr @TypeChecker_check_module(ptr %0, ptr nocapture readonly %1, ptr %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  store i1 false, ptr %memberidx, align 1
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %3 = load ptr, ptr %memberidx10, align 8
  %4 = tail call ptr @malloc(i32 80)
  store ptr %2, ptr %4, align 8
  %memberidx1.i206 = getelementptr inbounds %Module, ptr %4, i64 0, i32 4
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Function_, ptr %5, align 8
  %memberidx.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 1
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %5, ptr %memberidx1.i206, align 8
  %memberidx4.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Var_, ptr %7, align 8
  %memberidx.i33.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 2
  store i64 0, ptr %memberidx.i33.i, align 4
  %memberidx1.i34.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 3
  store i64 8, ptr %memberidx1.i34.i, align 4
  %memberidx2.i35.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 1
  %8 = tail call ptr @malloc(i32 64)
  store ptr %8, ptr %memberidx2.i35.i, align 8
  store i64 0, ptr %memberidx.i33.i, align 4
  store ptr %7, ptr %memberidx4.i, align 8
  %memberidx7.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 3
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Class_, ptr %9, align 8
  %memberidx.i36.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 2
  store i64 0, ptr %memberidx.i36.i, align 4
  %memberidx1.i37.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 3
  store i64 8, ptr %memberidx1.i37.i, align 4
  %memberidx2.i38.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 1
  %10 = tail call ptr @malloc(i32 64)
  store ptr %10, ptr %memberidx2.i38.i, align 8
  store i64 0, ptr %memberidx.i36.i, align 4
  store ptr %9, ptr %memberidx7.i, align 8
  %memberidx10.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 6
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Enum_, ptr %11, align 8
  %memberidx.i39.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 2
  store i64 0, ptr %memberidx.i39.i, align 4
  %memberidx1.i40.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 3
  store i64 8, ptr %memberidx1.i40.i, align 4
  %memberidx2.i41.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 1
  %12 = tail call ptr @malloc(i32 64)
  store ptr %12, ptr %memberidx2.i41.i, align 8
  store i64 0, ptr %memberidx.i39.i, align 4
  store ptr %11, ptr %memberidx10.i, align 8
  %memberidx13.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 7
  %13 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Scope_, ptr %13, align 8
  %memberidx.i42.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 2
  store i64 0, ptr %memberidx.i42.i, align 4
  %memberidx1.i43.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 3
  store i64 8, ptr %memberidx1.i43.i, align 4
  %memberidx2.i44.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 1
  %14 = tail call ptr @malloc(i32 64)
  store ptr %14, ptr %memberidx2.i44.i, align 8
  store i64 0, ptr %memberidx.i42.i, align 4
  store ptr %13, ptr %memberidx13.i, align 8
  %memberidx16.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 8
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ConstDeclaration_, ptr %15, align 8
  %memberidx.i45.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 2
  store i64 0, ptr %memberidx.i45.i, align 4
  %memberidx1.i46.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 3
  store i64 8, ptr %memberidx1.i46.i, align 4
  %memberidx2.i47.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 1
  %16 = tail call ptr @malloc(i32 64)
  store ptr %16, ptr %memberidx2.i47.i, align 8
  store i64 0, ptr %memberidx.i45.i, align 4
  store ptr %15, ptr %memberidx16.i, align 8
  %memberidx19.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 9
  %17 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_VarDeclaration_, ptr %17, align 8
  %memberidx.i48.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 2
  store i64 0, ptr %memberidx.i48.i, align 4
  %memberidx1.i49.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 3
  store i64 8, ptr %memberidx1.i49.i, align 4
  %memberidx2.i50.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 1
  %18 = tail call ptr @malloc(i32 64)
  store ptr %18, ptr %memberidx2.i50.i, align 8
  store i64 0, ptr %memberidx.i48.i, align 4
  store ptr %17, ptr %memberidx19.i, align 8
  %memberidx22.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 2
  %19 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Const_, ptr %19, align 8
  %memberidx.i51.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 2
  store i64 0, ptr %memberidx.i51.i, align 4
  %memberidx1.i52.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 3
  store i64 8, ptr %memberidx1.i52.i, align 4
  %memberidx2.i53.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 1
  %20 = tail call ptr @malloc(i32 64)
  store ptr %20, ptr %memberidx2.i53.i, align 8
  store i64 0, ptr %memberidx.i51.i, align 4
  store ptr %19, ptr %memberidx22.i, align 8
  %21 = load ptr, ptr %0, align 8
  %memberidx12 = getelementptr inbounds %Program, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx12, align 8
  %memberidx13 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx13, align 4
  %memberidx1.i208 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 3
  %24 = load i64, ptr %memberidx1.i208, align 4
  %.not.i = icmp slt i64 %23, %24
  br i1 %.not.i, label %for.entry.Array_Module____sl__.exit_crit_edge, label %if.entry.i

for.entry.Array_Module____sl__.exit_crit_edge:    ; preds = %for.entry
  %memberidx4.i211.phi.trans.insert = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 1
  %.pre464 = load ptr, ptr %memberidx4.i211.phi.trans.insert, align 8
  br label %Array_Module____sl__.exit

if.entry.i:                                       ; preds = %for.entry
  %25 = shl nuw i64 %24, 1
  store i64 %25, ptr %memberidx1.i208, align 4
  %memberidx2.i.i210 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 1
  %26 = load ptr, ptr %memberidx2.i.i210, align 8
  %27 = shl i64 %24, 4
  %28 = tail call ptr @realloc(ptr %26, i64 %27)
  store ptr %28, ptr %memberidx2.i.i210, align 8
  %.pre = load i64, ptr %memberidx13, align 4
  br label %Array_Module____sl__.exit

Array_Module____sl__.exit:                        ; preds = %for.entry.Array_Module____sl__.exit_crit_edge, %if.entry.i
  %29 = phi ptr [ %.pre464, %for.entry.Array_Module____sl__.exit_crit_edge ], [ %28, %if.entry.i ]
  %30 = phi i64 [ %23, %for.entry.Array_Module____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %31 = add nsw i64 %30, 1
  store i64 %31, ptr %memberidx13, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %29, i64 %30
  store ptr %4, ptr %ptridx.i, align 8
  %32 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0, i64 %23)
  %memberidx16 = getelementptr inbounds %Module, ptr %4, i64 0, i32 5
  %33 = load ptr, ptr %32, align 8
  store ptr %33, ptr %memberidx16, align 8
  %memberidx18 = getelementptr inbounds %Scope, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx18, align 8
  %35 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %35, align 8
  %36 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %36, align 8
  %memberidx.i.i212 = getelementptr inbounds %string, ptr %36, i64 0, i32 1
  store ptr %35, ptr %memberidx.i.i212, align 8
  %memberidx1.i.i213 = getelementptr inbounds %string, ptr %36, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i213, align 4
  %memberidx2.i.i214 = getelementptr inbounds %string, ptr %36, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i214, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %34, ptr nonnull %36, ptr null)
  %37 = load ptr, ptr %memberidx18, align 8
  %38 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %38, ptr noundef nonnull align 8 dereferenceable(5) @90, i64 5, i1 false)
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i215 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i215, align 8
  %memberidx1.i.i216 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i216, align 4
  %memberidx2.i.i217 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i217, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %37, ptr nonnull %39, ptr null)
  %40 = load ptr, ptr %memberidx18, align 8
  %41 = tail call ptr @malloc(i32 4)
  store i32 1819047278, ptr %41, align 8
  %42 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %42, align 8
  %memberidx.i.i218 = getelementptr inbounds %string, ptr %42, i64 0, i32 1
  store ptr %41, ptr %memberidx.i.i218, align 8
  %memberidx1.i.i219 = getelementptr inbounds %string, ptr %42, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i219, align 4
  %memberidx2.i.i220 = getelementptr inbounds %string, ptr %42, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i220, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %40, ptr nonnull %42, ptr null)
  %43 = load ptr, ptr %32, align 8
  store ptr %43, ptr %memberidx10, align 8
  %memberidx24 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %memberidx25 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %memberidx26 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %memberidx24, i8 0, i64 24, i1 false)
  %44 = load ptr, ptr %memberidx26, align 8
  %45 = tail call ptr @malloc(i32 25)
  %memberidx.i221 = getelementptr inbounds %Array_ImportNode_, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i221, align 8
  %memberidx1.i222 = getelementptr inbounds %Array_ImportNode_, ptr %44, i64 0, i32 2
  %47 = load i64, ptr %memberidx1.i222, align 4
  store i1 false, ptr %45, align 1
  %memberidx1.i.i223 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %45, i64 0, i32 1
  %memberidx2.i.i224 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %45, i64 0, i32 3
  store ptr %46, ptr %memberidx2.i.i224, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %45, i64 0, i32 2
  store i64 %47, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i223, align 4
  %48 = icmp slt i64 %47, 1
  br i1 %48, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %Array_Module____sl__.exit
  %memberidx.i231 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %49 = phi i64 [ 1, %for.body.lr.ph ], [ %59, %ifend ]
  %module_import.0450.in = phi ptr [ %46, %for.body.lr.ph ], [ %ptridx.i245, %ifend ]
  %module_import.0450 = load ptr, ptr %module_import.0450.in, align 8
  tail call fastcc void @TypeChecker_check_module_import(ptr nonnull %0, ptr %module_import.0450)
  %50 = load ptr, ptr %memberidx.i231, align 8
  %memberidx1.i232 = getelementptr inbounds %Compiler, ptr %50, i64 0, i32 6
  %51 = load ptr, ptr %memberidx1.i232, align 8
  %memberidx2.i233 = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 2
  %52 = load i64, ptr %memberidx2.i233, align 4
  %53 = icmp sgt i64 %52, 0
  br i1 %53, label %common.ret.loopexit, label %ifend

for.end:                                          ; preds = %ifend, %Array_Module____sl__.exit
  tail call void @free(ptr nonnull %45)
  %memberidx29 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 2
  %54 = load ptr, ptr %memberidx29, align 8
  %55 = tail call ptr @malloc(i32 25)
  %memberidx.i234 = getelementptr inbounds %Array_EnumNode_, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i234, align 8
  %memberidx1.i235 = getelementptr inbounds %Array_EnumNode_, ptr %54, i64 0, i32 2
  %57 = load i64, ptr %memberidx1.i235, align 4
  store i1 false, ptr %55, align 1
  %memberidx1.i.i236 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %55, i64 0, i32 1
  %memberidx2.i.i237 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %55, i64 0, i32 3
  store ptr %56, ptr %memberidx2.i.i237, align 8
  %memberidx3.i.i238 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %55, i64 0, i32 2
  store i64 %57, ptr %memberidx3.i.i238, align 4
  store i64 1, ptr %memberidx1.i.i236, align 4
  %58 = icmp slt i64 %57, 1
  br i1 %58, label %for.end33, label %for.body31

common.ret.loopexit:                              ; preds = %for.body
  store i1 false, ptr %45, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %ifend117, %for.end82, %for.end40, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %for.end40 ], [ null, %for.end82 ], [ %spec.select, %ifend117 ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %for.body
  %59 = add nuw nsw i64 %49, 1
  store i64 %59, ptr %memberidx1.i.i223, align 4
  %ptridx.i245 = getelementptr inbounds ptr, ptr %46, i64 %49
  %.not477 = icmp slt i64 %49, %47
  br i1 %.not477, label %for.body, label %for.end

for.body31:                                       ; preds = %for.end, %for.body31
  %60 = phi i64 [ %61, %for.body31 ], [ 1, %for.end ]
  %enum_.0445.in = phi ptr [ %ptridx.i249, %for.body31 ], [ %56, %for.end ]
  %enum_.0445 = load ptr, ptr %enum_.0445.in, align 8
  tail call fastcc void @TypeChecker_declare_enum_within_module(ptr nonnull %0, ptr %enum_.0445)
  %61 = add nuw nsw i64 %60, 1
  store i64 %61, ptr %memberidx1.i.i236, align 4
  %ptridx.i249 = getelementptr inbounds ptr, ptr %56, i64 %60
  %.not478 = icmp slt i64 %60, %57
  br i1 %.not478, label %for.body31, label %for.end33

for.end33:                                        ; preds = %for.body31, %for.end
  tail call void @free(ptr nonnull %55)
  %memberidx36 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 1
  %62 = load ptr, ptr %memberidx36, align 8
  %63 = tail call ptr @malloc(i32 25)
  %memberidx.i251 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i251, align 8
  %memberidx1.i252 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %62, i64 0, i32 2
  %65 = load i64, ptr %memberidx1.i252, align 4
  store i1 false, ptr %63, align 1
  %memberidx1.i.i253 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %63, i64 0, i32 1
  %memberidx2.i.i254 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %63, i64 0, i32 3
  store ptr %64, ptr %memberidx2.i.i254, align 8
  %memberidx3.i.i255 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %63, i64 0, i32 2
  store i64 %65, ptr %memberidx3.i.i255, align 4
  store i64 1, ptr %memberidx1.i.i253, align 4
  %66 = icmp slt i64 %65, 1
  br i1 %66, label %for.end40, label %for.body38

for.body38:                                       ; preds = %for.end33, %for.body38
  %67 = phi i64 [ %68, %for.body38 ], [ 1, %for.end33 ]
  %class_.0442.in = phi ptr [ %ptridx.i262, %for.body38 ], [ %64, %for.end33 ]
  %class_.0442 = load ptr, ptr %class_.0442.in, align 8
  tail call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr %class_.0442)
  %68 = add nuw nsw i64 %67, 1
  store i64 %68, ptr %memberidx1.i.i253, align 4
  %ptridx.i262 = getelementptr inbounds ptr, ptr %64, i64 %67
  %.not479 = icmp slt i64 %67, %65
  br i1 %.not479, label %for.body38, label %for.end40

for.end40:                                        ; preds = %for.body38, %for.end33
  tail call void @free(ptr nonnull %63)
  %memberidx.i264 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %69 = load ptr, ptr %memberidx.i264, align 8
  %memberidx1.i265 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 6
  %70 = load ptr, ptr %memberidx1.i265, align 8
  %memberidx2.i266 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 2
  %71 = load i64, ptr %memberidx2.i266, align 4
  %72 = icmp sgt i64 %71, 0
  br i1 %72, label %common.ret, label %for.entry45

for.entry45:                                      ; preds = %for.end40
  %memberidx46 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 6
  %73 = load ptr, ptr %memberidx46, align 8
  %74 = tail call ptr @malloc(i32 25)
  %memberidx.i267 = getelementptr inbounds %Array_TypeAliasNode_, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i267, align 8
  %memberidx1.i268 = getelementptr inbounds %Array_TypeAliasNode_, ptr %73, i64 0, i32 2
  %76 = load i64, ptr %memberidx1.i268, align 4
  store i1 false, ptr %74, align 1
  %memberidx1.i.i269 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %74, i64 0, i32 1
  %memberidx2.i.i270 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %74, i64 0, i32 3
  store ptr %75, ptr %memberidx2.i.i270, align 8
  %memberidx3.i.i271 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %74, i64 0, i32 2
  store i64 %76, ptr %memberidx3.i.i271, align 4
  store i64 1, ptr %memberidx1.i.i269, align 4
  %77 = icmp slt i64 %76, 1
  br i1 %77, label %for.end50, label %for.body48.lr.ph

for.body48.lr.ph:                                 ; preds = %for.entry45
  %memberidx62 = getelementptr inbounds %Scope, ptr %32, i64 0, i32 6
  br label %for.body48

for.body48:                                       ; preds = %for.body48.lr.ph, %ifend58
  %78 = phi i64 [ 1, %for.body48.lr.ph ], [ %112, %ifend58 ]
  %type_alias_node.0439.in = phi ptr [ %75, %for.body48.lr.ph ], [ %ptridx.i296, %ifend58 ]
  %type_alias_node.0439 = load ptr, ptr %type_alias_node.0439.in, align 8
  %memberidx52 = getelementptr inbounds %TypeAliasNode, ptr %type_alias_node.0439, i64 0, i32 1
  %79 = load ptr, ptr %memberidx52, align 8
  %80 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %79)
  %81 = load ptr, ptr %type_alias_node.0439, align 8
  %memberidx54 = getelementptr inbounds %IdentifierToken, ptr %81, i64 0, i32 2
  %82 = load ptr, ptr %memberidx54, align 8
  %83 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %82)
  %84 = load i64, ptr %83, align 4
  %.not = icmp eq i64 %84, 20
  br i1 %.not, label %ifend58, label %if.entry56

for.end50:                                        ; preds = %ifend58, %for.entry45
  tail call void @free(ptr nonnull %74)
  %memberidx64 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 4
  %85 = load ptr, ptr %memberidx64, align 8
  %86 = tail call ptr @malloc(i32 25)
  %memberidx.i276 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i276, align 8
  %memberidx1.i277 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %85, i64 0, i32 2
  %88 = load i64, ptr %memberidx1.i277, align 4
  store i1 false, ptr %86, align 1
  %memberidx1.i.i278 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %86, i64 0, i32 1
  %memberidx2.i.i279 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %86, i64 0, i32 3
  store ptr %87, ptr %memberidx2.i.i279, align 8
  %memberidx3.i.i280 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %86, i64 0, i32 2
  store i64 %88, ptr %memberidx3.i.i280, align 4
  store i64 1, ptr %memberidx1.i.i278, align 4
  %89 = icmp slt i64 %88, 1
  br i1 %89, label %for.end68, label %for.body66

if.entry56:                                       ; preds = %for.body48
  store i1 false, ptr %74, align 1
  %90 = load ptr, ptr %82, align 8
  %memberidx59 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %90, i64 0, i32 5
  %91 = load ptr, ptr %memberidx59, align 8
  %92 = tail call ptr %91(ptr nonnull %82)
  %93 = alloca ptr, align 8
  %94 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %93, ptr nonnull @91, ptr %92)
  %95 = load ptr, ptr %93, align 8
  %96 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %96, align 8
  %memberidx.i285 = getelementptr inbounds %string, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i285, align 8
  %memberidx1.i286 = getelementptr inbounds %string, ptr %96, i64 0, i32 2
  store i64 %94, ptr %memberidx1.i286, align 4
  %memberidx2.i287 = getelementptr inbounds %string, ptr %96, i64 0, i32 3
  store i64 %94, ptr %memberidx2.i287, align 4
  tail call void @free(ptr %92)
  %97 = load ptr, ptr %type_alias_node.0439, align 8
  %memberidx61 = getelementptr inbounds %Token, ptr %97, i64 0, i32 1
  %98 = load ptr, ptr %memberidx61, align 8
  %99 = load ptr, ptr %memberidx.i264, align 8
  %memberidx1.i289 = getelementptr inbounds %Compiler, ptr %99, i64 0, i32 6
  %100 = load ptr, ptr %memberidx1.i289, align 8
  %101 = call ptr @malloc(i32 24)
  store i64 1, ptr %101, align 4
  %memberidx1.i.i290 = getelementptr inbounds %FloError, ptr %101, i64 0, i32 2
  store ptr %98, ptr %memberidx1.i.i290, align 8
  %memberidx2.i.i291 = getelementptr inbounds %FloError, ptr %101, i64 0, i32 1
  store ptr %96, ptr %memberidx2.i.i291, align 8
  %memberidx.i.i292 = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 2
  %102 = load i64, ptr %memberidx.i.i292, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 3
  %103 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %102, %103
  br i1 %.not.i.i, label %if.entry56.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry56.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry56
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 1
  %.pre466 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry56
  %104 = shl nuw i64 %103, 1
  store i64 %104, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 1
  %105 = load ptr, ptr %memberidx2.i.i.i, align 8
  %106 = shl i64 %103, 4
  %107 = call ptr @realloc(ptr %105, i64 %106)
  store ptr %107, ptr %memberidx2.i.i.i, align 8
  %.pre465 = load i64, ptr %memberidx.i.i292, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry56.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %108 = phi ptr [ %.pre466, %if.entry56.TypeChecker_error.exit_crit_edge ], [ %107, %if.entry.i.i ]
  %109 = phi i64 [ %102, %if.entry56.TypeChecker_error.exit_crit_edge ], [ %.pre465, %if.entry.i.i ]
  %110 = add nsw i64 %109, 1
  store i64 %110, ptr %memberidx.i.i292, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %108, i64 %109
  store ptr %101, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend58:                                          ; preds = %for.body48
  %111 = load ptr, ptr %memberidx62, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr %111, ptr %82, ptr %80)
  %112 = add nuw nsw i64 %78, 1
  store i64 %112, ptr %memberidx1.i.i269, align 4
  %ptridx.i296 = getelementptr inbounds ptr, ptr %75, i64 %78
  %.not480 = icmp slt i64 %78, %76
  br i1 %.not480, label %for.body48, label %for.end50

for.body66:                                       ; preds = %for.end50, %TypeChecker_declare_global_const.exit
  %113 = phi i64 [ %135, %TypeChecker_declare_global_const.exit ], [ 1, %for.end50 ]
  %global_const.0434.in = phi ptr [ %ptridx.i311, %TypeChecker_declare_global_const.exit ], [ %87, %for.end50 ]
  %global_const.0434 = load ptr, ptr %global_const.0434.in, align 8
  %114 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr nonnull %0, ptr %global_const.0434)
  %115 = load ptr, ptr %memberidx.i264, align 8
  %memberidx1.i.i299 = getelementptr inbounds %Compiler, ptr %115, i64 0, i32 6
  %116 = load ptr, ptr %memberidx1.i.i299, align 8
  %memberidx2.i.i300 = getelementptr inbounds %Array_FloError_, ptr %116, i64 0, i32 2
  %117 = load i64, ptr %memberidx2.i.i300, align 4
  %118 = icmp sgt i64 %117, 0
  br i1 %118, label %TypeChecker_declare_global_const.exit, label %ifend.i

ifend.i:                                          ; preds = %for.body66
  %memberidx.i301 = getelementptr inbounds %ConstDeclaration, ptr %114, i64 0, i32 3
  store i1 true, ptr %memberidx.i301, align 1
  %119 = load ptr, ptr %memberidx10, align 8
  %120 = load i64, ptr %119, align 4
  %121 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Program, ptr %121, i64 0, i32 1
  %122 = load ptr, ptr %memberidx1.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %122, i64 0, i32 1
  %123 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %123, i64 %120
  %124 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx1.i302 = getelementptr inbounds %Module, ptr %124, i64 0, i32 8
  %125 = load ptr, ptr %memberidx1.i302, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %125, i64 0, i32 2
  %126 = load i64, ptr %memberidx.i5.i, align 4
  %memberidx1.i6.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %125, i64 0, i32 3
  %127 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i303 = icmp slt i64 %126, %127
  br i1 %.not.i.i303, label %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge, label %if.entry.i.i306

ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge: ; preds = %ifend.i
  %memberidx4.i.i307.phi.trans.insert = getelementptr inbounds %Array_ConstDeclaration_, ptr %125, i64 0, i32 1
  %.pre468 = load ptr, ptr %memberidx4.i.i307.phi.trans.insert, align 8
  br label %Array_ConstDeclaration____sl__.exit.i

if.entry.i.i306:                                  ; preds = %ifend.i
  %128 = shl nuw i64 %127, 1
  store i64 %128, ptr %memberidx1.i6.i, align 4
  %memberidx2.i.i.i305 = getelementptr inbounds %Array_ConstDeclaration_, ptr %125, i64 0, i32 1
  %129 = load ptr, ptr %memberidx2.i.i.i305, align 8
  %130 = shl i64 %127, 4
  %131 = tail call ptr @realloc(ptr %129, i64 %130)
  store ptr %131, ptr %memberidx2.i.i.i305, align 8
  %.pre467 = load i64, ptr %memberidx.i5.i, align 4
  br label %Array_ConstDeclaration____sl__.exit.i

Array_ConstDeclaration____sl__.exit.i:            ; preds = %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge, %if.entry.i.i306
  %132 = phi ptr [ %131, %if.entry.i.i306 ], [ %.pre468, %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge ]
  %133 = phi i64 [ %.pre467, %if.entry.i.i306 ], [ %126, %ifend.i.Array_ConstDeclaration____sl__.exit.i_crit_edge ]
  %134 = add nsw i64 %133, 1
  store i64 %134, ptr %memberidx.i5.i, align 4
  %ptridx.i.i308 = getelementptr inbounds ptr, ptr %132, i64 %133
  store ptr %114, ptr %ptridx.i.i308, align 8
  br label %TypeChecker_declare_global_const.exit

TypeChecker_declare_global_const.exit:            ; preds = %for.body66, %Array_ConstDeclaration____sl__.exit.i
  %135 = add nuw nsw i64 %113, 1
  store i64 %135, ptr %memberidx1.i.i278, align 4
  %ptridx.i311 = getelementptr inbounds ptr, ptr %87, i64 %113
  %.not481 = icmp slt i64 %113, %88
  br i1 %.not481, label %for.body66, label %for.end68

for.end68:                                        ; preds = %TypeChecker_declare_global_const.exit, %for.end50
  tail call void @free(ptr nonnull %86)
  %memberidx71 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 5
  %136 = load ptr, ptr %memberidx71, align 8
  %137 = tail call ptr @malloc(i32 25)
  %memberidx.i313 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %136, i64 0, i32 1
  %138 = load ptr, ptr %memberidx.i313, align 8
  %memberidx1.i314 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %136, i64 0, i32 2
  %139 = load i64, ptr %memberidx1.i314, align 4
  store i1 false, ptr %137, align 1
  %memberidx1.i.i315 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %137, i64 0, i32 1
  %memberidx2.i.i316 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %137, i64 0, i32 3
  store ptr %138, ptr %memberidx2.i.i316, align 8
  %memberidx3.i.i317 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %137, i64 0, i32 2
  store i64 %139, ptr %memberidx3.i.i317, align 4
  store i64 1, ptr %memberidx1.i.i315, align 4
  %140 = icmp slt i64 %139, 1
  br i1 %140, label %for.end75, label %for.body73

for.body73:                                       ; preds = %for.end68, %TypeChecker_declare_global_var.exit
  %141 = phi i64 [ %191, %TypeChecker_declare_global_var.exit ], [ 1, %for.end68 ]
  %global_var.0431.in = phi ptr [ %ptridx.i345, %TypeChecker_declare_global_var.exit ], [ %138, %for.end68 ]
  %global_var.0431 = load ptr, ptr %global_var.0431.in, align 8
  %142 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr nonnull %0, ptr %global_var.0431)
  %143 = load ptr, ptr %memberidx.i264, align 8
  %memberidx1.i.i323 = getelementptr inbounds %Compiler, ptr %143, i64 0, i32 6
  %144 = load ptr, ptr %memberidx1.i.i323, align 8
  %memberidx2.i.i324 = getelementptr inbounds %Array_FloError_, ptr %144, i64 0, i32 2
  %145 = load i64, ptr %memberidx2.i.i324, align 4
  %146 = icmp sgt i64 %145, 0
  br i1 %146, label %TypeChecker_declare_global_var.exit, label %ifend.i329

ifend.i329:                                       ; preds = %for.body73
  %147 = load ptr, ptr %0, align 8
  %memberidx1.i325 = getelementptr inbounds %VarDeclaration, ptr %142, i64 0, i32 2
  %148 = load ptr, ptr %memberidx1.i325, align 8
  %memberidx.i24.i = getelementptr inbounds %Program, ptr %147, i64 0, i32 1
  %149 = load ptr, ptr %memberidx.i24.i, align 8
  %memberidx1.i25.i = getelementptr inbounds %VarId, ptr %148, i64 0, i32 1
  %150 = load i64, ptr %memberidx1.i25.i, align 4
  %memberidx.i.i26.i = getelementptr inbounds %Array_Module_, ptr %149, i64 0, i32 1
  %151 = load ptr, ptr %memberidx.i.i26.i, align 8
  %ptridx.i.i27.i = getelementptr inbounds ptr, ptr %151, i64 %150
  %152 = load ptr, ptr %ptridx.i.i27.i, align 8
  %memberidx2.i28.i = getelementptr inbounds %Module, ptr %152, i64 0, i32 1
  %153 = load ptr, ptr %memberidx2.i28.i, align 8
  %memberidx3.i.i326 = getelementptr inbounds %VarId, ptr %148, i64 0, i32 2
  %154 = load i64, ptr %memberidx3.i.i326, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Var_, ptr %153, i64 0, i32 1
  %155 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %155, i64 %154
  %156 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx2.i327 = getelementptr inbounds %Var, ptr %156, i64 0, i32 2
  %157 = load ptr, ptr %memberidx2.i327, align 8
  %.not.i328 = icmp eq ptr %157, null
  br i1 %.not.i328, label %ifend5.i, label %if.entry3.i

if.entry3.i:                                      ; preds = %ifend.i329
  %memberidx6.i330 = getelementptr inbounds %Expression, ptr %157, i64 0, i32 1
  %158 = load i1, ptr %memberidx6.i330, align 1
  br i1 %158, label %ifend5.i, label %if.entry7.i

ifend5.i:                                         ; preds = %if.entry3.i, %ifend.i329
  %memberidx12.i331 = getelementptr inbounds %VarDeclaration, ptr %142, i64 0, i32 3
  store i1 true, ptr %memberidx12.i331, align 1
  %159 = load ptr, ptr %memberidx10, align 8
  %160 = load i64, ptr %159, align 4
  %161 = load ptr, ptr %0, align 8
  %memberidx1.i.i30.i = getelementptr inbounds %Program, ptr %161, i64 0, i32 1
  %162 = load ptr, ptr %memberidx1.i.i30.i, align 8
  %memberidx.i.i.i31.i = getelementptr inbounds %Array_Module_, ptr %162, i64 0, i32 1
  %163 = load ptr, ptr %memberidx.i.i.i31.i, align 8
  %ptridx.i.i.i.i332 = getelementptr inbounds ptr, ptr %163, i64 %160
  %164 = load ptr, ptr %ptridx.i.i.i.i332, align 8
  %memberidx13.i333 = getelementptr inbounds %Module, ptr %164, i64 0, i32 9
  %165 = load ptr, ptr %memberidx13.i333, align 8
  %memberidx.i35.i = getelementptr inbounds %Array_VarDeclaration_, ptr %165, i64 0, i32 2
  %166 = load i64, ptr %memberidx.i35.i, align 4
  %memberidx1.i36.i = getelementptr inbounds %Array_VarDeclaration_, ptr %165, i64 0, i32 3
  %167 = load i64, ptr %memberidx1.i36.i, align 4
  %.not.i.i334 = icmp slt i64 %166, %167
  br i1 %.not.i.i334, label %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge, label %if.entry.i.i335

ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge: ; preds = %ifend5.i
  %memberidx4.i.i336.phi.trans.insert = getelementptr inbounds %Array_VarDeclaration_, ptr %165, i64 0, i32 1
  %.pre472 = load ptr, ptr %memberidx4.i.i336.phi.trans.insert, align 8
  br label %Array_VarDeclaration____sl__.exit.i

if.entry.i.i335:                                  ; preds = %ifend5.i
  %168 = shl nuw i64 %167, 1
  store i64 %168, ptr %memberidx1.i36.i, align 4
  %memberidx2.i.i38.i = getelementptr inbounds %Array_VarDeclaration_, ptr %165, i64 0, i32 1
  %169 = load ptr, ptr %memberidx2.i.i38.i, align 8
  %170 = shl i64 %167, 4
  %171 = tail call ptr @realloc(ptr %169, i64 %170)
  store ptr %171, ptr %memberidx2.i.i38.i, align 8
  %.pre471 = load i64, ptr %memberidx.i35.i, align 4
  br label %Array_VarDeclaration____sl__.exit.i

Array_VarDeclaration____sl__.exit.i:              ; preds = %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge, %if.entry.i.i335
  %172 = phi ptr [ %171, %if.entry.i.i335 ], [ %.pre472, %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge ]
  %173 = phi i64 [ %.pre471, %if.entry.i.i335 ], [ %166, %ifend5.i.Array_VarDeclaration____sl__.exit.i_crit_edge ]
  %174 = add nsw i64 %173, 1
  store i64 %174, ptr %memberidx.i35.i, align 4
  %ptridx.i.i337 = getelementptr inbounds ptr, ptr %172, i64 %173
  store ptr %142, ptr %ptridx.i.i337, align 8
  br label %TypeChecker_declare_global_var.exit

if.entry7.i:                                      ; preds = %if.entry3.i
  %175 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %175, ptr noundef nonnull align 8 dereferenceable(54) @95, i64 54, i1 false)
  %176 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %176, align 8
  %memberidx.i.i32.i = getelementptr inbounds %string, ptr %176, i64 0, i32 1
  store ptr %175, ptr %memberidx.i.i32.i, align 8
  %memberidx1.i.i33.i = getelementptr inbounds %string, ptr %176, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i33.i, align 4
  %memberidx2.i.i34.i = getelementptr inbounds %string, ptr %176, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i34.i, align 4
  %memberidx10.i338 = getelementptr inbounds %VarDeclarationStatement, ptr %global_var.0431, i64 0, i32 4
  %177 = load ptr, ptr %memberidx10.i338, align 8
  %178 = load ptr, ptr %177, align 8
  %179 = load ptr, ptr %memberidx.i264, align 8
  %memberidx1.i23.i = getelementptr inbounds %Compiler, ptr %179, i64 0, i32 6
  %180 = load ptr, ptr %memberidx1.i23.i, align 8
  %181 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %181, align 4
  %memberidx1.i.i.i339 = getelementptr inbounds %FloError, ptr %181, i64 0, i32 2
  store ptr %178, ptr %memberidx1.i.i.i339, align 8
  %memberidx2.i.i.i340 = getelementptr inbounds %FloError, ptr %181, i64 0, i32 1
  store ptr %176, ptr %memberidx2.i.i.i340, align 8
  %memberidx.i.i.i341 = getelementptr inbounds %Array_FloError_, ptr %180, i64 0, i32 2
  %182 = load i64, ptr %memberidx.i.i.i341, align 4
  %memberidx1.i2.i.i = getelementptr inbounds %Array_FloError_, ptr %180, i64 0, i32 3
  %183 = load i64, ptr %memberidx1.i2.i.i, align 4
  %.not.i.i.i = icmp slt i64 %182, %183
  br i1 %.not.i.i.i, label %if.entry7.i.TypeChecker_error.exit.i_crit_edge, label %if.entry.i.i.i

if.entry7.i.TypeChecker_error.exit.i_crit_edge:   ; preds = %if.entry7.i
  %memberidx4.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %180, i64 0, i32 1
  %.pre470 = load ptr, ptr %memberidx4.i.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry7.i
  %184 = shl nuw i64 %183, 1
  store i64 %184, ptr %memberidx1.i2.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %180, i64 0, i32 1
  %185 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %186 = shl i64 %183, 4
  %187 = tail call ptr @realloc(ptr %185, i64 %186)
  store ptr %187, ptr %memberidx2.i.i.i.i, align 8
  %.pre469 = load i64, ptr %memberidx.i.i.i341, align 4
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %if.entry7.i.TypeChecker_error.exit.i_crit_edge, %if.entry.i.i.i
  %188 = phi ptr [ %187, %if.entry.i.i.i ], [ %.pre470, %if.entry7.i.TypeChecker_error.exit.i_crit_edge ]
  %189 = phi i64 [ %.pre469, %if.entry.i.i.i ], [ %182, %if.entry7.i.TypeChecker_error.exit.i_crit_edge ]
  %190 = add nsw i64 %189, 1
  store i64 %190, ptr %memberidx.i.i.i341, align 4
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %188, i64 %189
  store ptr %181, ptr %ptridx.i.i.i, align 8
  br label %TypeChecker_declare_global_var.exit

TypeChecker_declare_global_var.exit:              ; preds = %for.body73, %Array_VarDeclaration____sl__.exit.i, %TypeChecker_error.exit.i
  %191 = add nuw nsw i64 %141, 1
  store i64 %191, ptr %memberidx1.i.i315, align 4
  %ptridx.i345 = getelementptr inbounds ptr, ptr %138, i64 %141
  %.not482 = icmp slt i64 %141, %139
  br i1 %.not482, label %for.body73, label %for.end75

for.end75:                                        ; preds = %TypeChecker_declare_global_var.exit, %for.end68
  tail call void @free(ptr nonnull %137)
  %192 = load ptr, ptr %1, align 8
  %193 = tail call ptr @malloc(i32 25)
  %memberidx.i347 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %192, i64 0, i32 1
  %194 = load ptr, ptr %memberidx.i347, align 8
  %memberidx1.i348 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %192, i64 0, i32 2
  %195 = load i64, ptr %memberidx1.i348, align 4
  store i1 false, ptr %193, align 1
  %memberidx1.i.i349 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %193, i64 0, i32 1
  %memberidx2.i.i350 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %193, i64 0, i32 3
  store ptr %194, ptr %memberidx2.i.i350, align 8
  %memberidx3.i.i351 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %193, i64 0, i32 2
  store i64 %195, ptr %memberidx3.i.i351, align 4
  store i64 1, ptr %memberidx1.i.i349, align 4
  %196 = icmp slt i64 %195, 1
  br i1 %196, label %for.end82, label %for.body80

for.body80:                                       ; preds = %for.end75, %for.body80
  %197 = phi i64 [ %198, %for.body80 ], [ 1, %for.end75 ]
  %function.0428.in = phi ptr [ %ptridx.i358, %for.body80 ], [ %194, %for.end75 ]
  %function.0428 = load ptr, ptr %function.0428.in, align 8
  tail call fastcc void @TypeChecker_declare_function_within_module(ptr nonnull %0, ptr %function.0428)
  %198 = add nuw nsw i64 %197, 1
  store i64 %198, ptr %memberidx1.i.i349, align 4
  %ptridx.i358 = getelementptr inbounds ptr, ptr %194, i64 %197
  %.not483 = icmp slt i64 %197, %195
  br i1 %.not483, label %for.body80, label %for.end82

for.end82:                                        ; preds = %for.body80, %for.end75
  tail call void @free(ptr nonnull %193)
  %199 = load ptr, ptr %memberidx.i264, align 8
  %memberidx1.i361 = getelementptr inbounds %Compiler, ptr %199, i64 0, i32 6
  %200 = load ptr, ptr %memberidx1.i361, align 8
  %memberidx2.i362 = getelementptr inbounds %Array_FloError_, ptr %200, i64 0, i32 2
  %201 = load i64, ptr %memberidx2.i362, align 4
  %202 = icmp sgt i64 %201, 0
  br i1 %202, label %common.ret, label %for.cond88.preheader

for.cond88.preheader:                             ; preds = %for.end82
  %203 = load ptr, ptr %memberidx29, align 8
  %memberidx93425 = getelementptr inbounds %Array_EnumNode_, ptr %203, i64 0, i32 2
  %204 = load i64, ptr %memberidx93425, align 4
  %205 = icmp sgt i64 %204, 0
  br i1 %205, label %for.body89, label %for.entry96

for.body89:                                       ; preds = %for.cond88.preheader, %for.body89
  %206 = phi ptr [ %213, %for.body89 ], [ %203, %for.cond88.preheader ]
  %i.0426 = phi i64 [ %212, %for.body89 ], [ 0, %for.cond88.preheader ]
  %207 = load ptr, ptr %memberidx10.i, align 8
  %memberidx.i363 = getelementptr inbounds %Array_Enum_, ptr %207, i64 0, i32 1
  %208 = load ptr, ptr %memberidx.i363, align 8
  %ptridx.i364 = getelementptr inbounds ptr, ptr %208, i64 %i.0426
  %209 = load ptr, ptr %ptridx.i364, align 8
  %memberidx.i365 = getelementptr inbounds %Array_EnumNode_, ptr %206, i64 0, i32 1
  %210 = load ptr, ptr %memberidx.i365, align 8
  %ptridx.i366 = getelementptr inbounds ptr, ptr %210, i64 %i.0426
  %211 = load ptr, ptr %ptridx.i366, align 8
  tail call fastcc void @TypeChecker_check_enum_body(ptr nonnull %0, ptr %209, ptr %211)
  %212 = add nuw nsw i64 %i.0426, 1
  %213 = load ptr, ptr %memberidx29, align 8
  %memberidx93 = getelementptr inbounds %Array_EnumNode_, ptr %213, i64 0, i32 2
  %214 = load i64, ptr %memberidx93, align 4
  %215 = icmp slt i64 %212, %214
  br i1 %215, label %for.body89, label %for.entry96

for.entry96:                                      ; preds = %for.body89, %for.cond88.preheader
  %216 = load ptr, ptr %memberidx36, align 8
  %217 = tail call ptr @malloc(i32 25)
  %memberidx.i367 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %216, i64 0, i32 1
  %218 = load ptr, ptr %memberidx.i367, align 8
  %memberidx1.i368 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %216, i64 0, i32 2
  %219 = load i64, ptr %memberidx1.i368, align 4
  store i1 false, ptr %217, align 1
  %memberidx1.i.i369 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %217, i64 0, i32 1
  %memberidx2.i.i370 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %217, i64 0, i32 3
  store ptr %218, ptr %memberidx2.i.i370, align 8
  %memberidx3.i.i371 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %217, i64 0, i32 2
  store i64 %219, ptr %memberidx3.i.i371, align 4
  store i64 1, ptr %memberidx1.i.i369, align 4
  %220 = icmp slt i64 %219, 1
  br i1 %220, label %for.end101, label %for.body99

for.body99:                                       ; preds = %for.entry96, %for.body99
  %221 = phi i64 [ %222, %for.body99 ], [ 1, %for.entry96 ]
  %class_7.0424.in = phi ptr [ %ptridx.i378, %for.body99 ], [ %218, %for.entry96 ]
  %class_7.0424 = load ptr, ptr %class_7.0424.in, align 8
  tail call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr %class_7.0424)
  %222 = add nuw nsw i64 %221, 1
  store i64 %222, ptr %memberidx1.i.i369, align 4
  %ptridx.i378 = getelementptr inbounds ptr, ptr %218, i64 %221
  %.not484 = icmp slt i64 %221, %219
  br i1 %.not484, label %for.body99, label %for.end101

for.end101:                                       ; preds = %for.body99, %for.entry96
  tail call void @free(ptr nonnull %217)
  %223 = load ptr, ptr %1, align 8
  %memberidx109421 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %223, i64 0, i32 2
  %224 = load i64, ptr %memberidx109421, align 4
  %225 = icmp sgt i64 %224, 0
  br i1 %225, label %for.body105, label %for.end107

for.body105:                                      ; preds = %for.end101, %TypeChecker_check_function_body.exit
  %226 = phi ptr [ %285, %TypeChecker_check_function_body.exit ], [ %223, %for.end101 ]
  %i9.0422 = phi i64 [ %284, %TypeChecker_check_function_body.exit ], [ 0, %for.end101 ]
  %227 = load ptr, ptr %memberidx1.i206, align 8
  %memberidx.i380 = getelementptr inbounds %Array_Function_, ptr %227, i64 0, i32 1
  %228 = load ptr, ptr %memberidx.i380, align 8
  %ptridx.i381 = getelementptr inbounds ptr, ptr %228, i64 %i9.0422
  %229 = load ptr, ptr %ptridx.i381, align 8
  %memberidx.i382 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %226, i64 0, i32 1
  %230 = load ptr, ptr %memberidx.i382, align 8
  %ptridx.i383 = getelementptr inbounds ptr, ptr %230, i64 %i9.0422
  %231 = load ptr, ptr %ptridx.i383, align 8
  %memberidx.i384 = getelementptr inbounds %Function, ptr %229, i64 0, i32 6
  %232 = load i1, ptr %memberidx.i384, align 1
  br i1 %232, label %TypeChecker_check_function_body.exit, label %ifend.i392

ifend.i392:                                       ; preds = %for.body105
  %233 = load ptr, ptr %229, align 8
  store ptr %233, ptr %memberidx25, align 8
  %memberidx6.i387 = getelementptr inbounds %Function, ptr %229, i64 0, i32 5
  %234 = load ptr, ptr %memberidx6.i387, align 8
  store ptr %234, ptr %memberidx10, align 8
  %memberidx7.i388 = getelementptr inbounds %Function, ptr %229, i64 0, i32 3
  %memberidx8.i = getelementptr inbounds %FunctionDeclarationNode, ptr %231, i64 0, i32 2
  %235 = load ptr, ptr %memberidx8.i, align 8
  %236 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %235, ptr null)
  store ptr %236, ptr %memberidx7.i388, align 8
  %237 = load ptr, ptr %memberidx.i264, align 8
  %memberidx1.i.i390 = getelementptr inbounds %Compiler, ptr %237, i64 0, i32 6
  %238 = load ptr, ptr %memberidx1.i.i390, align 8
  %memberidx2.i.i391 = getelementptr inbounds %Array_FloError_, ptr %238, i64 0, i32 2
  %239 = load i64, ptr %memberidx2.i.i391, align 4
  %240 = icmp sgt i64 %239, 0
  br i1 %240, label %TypeChecker_check_function_body.exit, label %ifend11.i

ifend11.i:                                        ; preds = %ifend.i392
  %memberidx13.i393 = getelementptr inbounds %Block, ptr %236, i64 0, i32 1
  %241 = load i1, ptr %memberidx13.i393, align 1
  br i1 %241, label %ifend16.i, label %if.entry14.i

if.entry14.i:                                     ; preds = %ifend11.i
  %memberidx17.i = getelementptr inbounds %Function, ptr %229, i64 0, i32 4
  %242 = load ptr, ptr %memberidx17.i, align 8
  %memberidx18.i394 = getelementptr inbounds %FunctionType, ptr %242, i64 0, i32 2
  %243 = load ptr, ptr %memberidx18.i394, align 8
  %244 = load i64, ptr %243, align 4
  %245 = icmp eq i64 %244, 10
  br i1 %245, label %if.entry20.i, label %else21.i

ifend16.i:                                        ; preds = %Array_Statement____sl__.exit.i, %ifend11.i
  %246 = load ptr, ptr %0, align 8
  %247 = load ptr, ptr %memberidx6.i387, align 8
  %memberidx.i49.i = getelementptr inbounds %Program, ptr %246, i64 0, i32 1
  %248 = load ptr, ptr %memberidx.i49.i, align 8
  %249 = load i64, ptr %247, align 4
  %memberidx.i.i50.i = getelementptr inbounds %Array_Module_, ptr %248, i64 0, i32 1
  %250 = load ptr, ptr %memberidx.i.i50.i, align 8
  %ptridx.i.i51.i = getelementptr inbounds ptr, ptr %250, i64 %249
  %251 = load ptr, ptr %ptridx.i.i51.i, align 8
  %memberidx2.i52.i = getelementptr inbounds %Module, ptr %251, i64 0, i32 7
  %252 = load ptr, ptr %memberidx2.i52.i, align 8
  %memberidx3.i.i395 = getelementptr inbounds %ScopeId, ptr %247, i64 0, i32 1
  %253 = load i64, ptr %memberidx3.i.i395, align 4
  %memberidx.i5.i.i396 = getelementptr inbounds %Array_Scope_, ptr %252, i64 0, i32 1
  %254 = load ptr, ptr %memberidx.i5.i.i396, align 8
  %ptridx.i6.i.i397 = getelementptr inbounds ptr, ptr %254, i64 %253
  %255 = load ptr, ptr %ptridx.i6.i.i397, align 8
  %memberidx30.i = getelementptr inbounds %Scope, ptr %255, i64 0, i32 5
  %256 = load ptr, ptr %memberidx30.i, align 8
  store ptr %256, ptr %memberidx10, align 8
  br label %TypeChecker_check_function_body.exit

if.entry20.i:                                     ; preds = %if.entry14.i
  %257 = load ptr, ptr %236, align 8
  %258 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %258, align 4
  %memberidx.i53.i = getelementptr inbounds %ReturnStatement, ptr %258, i64 0, i32 1
  store ptr null, ptr %memberidx.i53.i, align 8
  %memberidx.i57.i = getelementptr inbounds %Array_Statement_, ptr %257, i64 0, i32 2
  %259 = load i64, ptr %memberidx.i57.i, align 4
  %memberidx1.i58.i = getelementptr inbounds %Array_Statement_, ptr %257, i64 0, i32 3
  %260 = load i64, ptr %memberidx1.i58.i, align 4
  %.not.i.i398 = icmp slt i64 %259, %260
  br i1 %.not.i.i398, label %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge, label %if.entry.i.i399

if.entry20.i.Array_Statement____sl__.exit.i_crit_edge: ; preds = %if.entry20.i
  %memberidx4.i.i400.phi.trans.insert = getelementptr inbounds %Array_Statement_, ptr %257, i64 0, i32 1
  %.pre476 = load ptr, ptr %memberidx4.i.i400.phi.trans.insert, align 8
  br label %Array_Statement____sl__.exit.i

if.entry.i.i399:                                  ; preds = %if.entry20.i
  %261 = shl nuw i64 %260, 1
  store i64 %261, ptr %memberidx1.i58.i, align 4
  %memberidx2.i.i60.i = getelementptr inbounds %Array_Statement_, ptr %257, i64 0, i32 1
  %262 = load ptr, ptr %memberidx2.i.i60.i, align 8
  %263 = shl i64 %260, 4
  %264 = tail call ptr @realloc(ptr %262, i64 %263)
  store ptr %264, ptr %memberidx2.i.i60.i, align 8
  %.pre475 = load i64, ptr %memberidx.i57.i, align 4
  br label %Array_Statement____sl__.exit.i

Array_Statement____sl__.exit.i:                   ; preds = %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge, %if.entry.i.i399
  %265 = phi ptr [ %264, %if.entry.i.i399 ], [ %.pre476, %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge ]
  %266 = phi i64 [ %.pre475, %if.entry.i.i399 ], [ %259, %if.entry20.i.Array_Statement____sl__.exit.i_crit_edge ]
  %267 = add nsw i64 %266, 1
  store i64 %267, ptr %memberidx.i57.i, align 4
  %ptridx.i.i401 = getelementptr inbounds ptr, ptr %265, i64 %266
  store ptr %258, ptr %ptridx.i.i401, align 8
  br label %ifend16.i

else21.i:                                         ; preds = %if.entry14.i
  %268 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %268, ptr noundef nonnull align 8 dereferenceable(40) @147, i64 40, i1 false)
  %269 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %269, align 8
  %memberidx.i.i54.i = getelementptr inbounds %string, ptr %269, i64 0, i32 1
  store ptr %268, ptr %memberidx.i.i54.i, align 8
  %memberidx1.i.i55.i = getelementptr inbounds %string, ptr %269, i64 0, i32 2
  store i64 40, ptr %memberidx1.i.i55.i, align 4
  %memberidx2.i.i56.i = getelementptr inbounds %string, ptr %269, i64 0, i32 3
  store i64 40, ptr %memberidx2.i.i56.i, align 4
  %memberidx25.i = getelementptr inbounds %FunctionDeclarationNode, ptr %231, i64 0, i32 3
  %270 = load ptr, ptr %memberidx25.i, align 8
  %271 = load ptr, ptr %270, align 8
  %272 = load ptr, ptr %memberidx.i264, align 8
  %memberidx1.i48.i = getelementptr inbounds %Compiler, ptr %272, i64 0, i32 6
  %273 = load ptr, ptr %memberidx1.i48.i, align 8
  %274 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %274, align 4
  %memberidx1.i.i.i402 = getelementptr inbounds %FloError, ptr %274, i64 0, i32 2
  store ptr %271, ptr %memberidx1.i.i.i402, align 8
  %memberidx2.i.i.i403 = getelementptr inbounds %FloError, ptr %274, i64 0, i32 1
  store ptr %269, ptr %memberidx2.i.i.i403, align 8
  %memberidx.i.i.i404 = getelementptr inbounds %Array_FloError_, ptr %273, i64 0, i32 2
  %275 = load i64, ptr %memberidx.i.i.i404, align 4
  %memberidx1.i2.i.i405 = getelementptr inbounds %Array_FloError_, ptr %273, i64 0, i32 3
  %276 = load i64, ptr %memberidx1.i2.i.i405, align 4
  %.not.i.i.i406 = icmp slt i64 %275, %276
  br i1 %.not.i.i.i406, label %else21.i.TypeChecker_error.exit.i412_crit_edge, label %if.entry.i.i.i409

else21.i.TypeChecker_error.exit.i412_crit_edge:   ; preds = %else21.i
  %memberidx4.i.i.i410.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %273, i64 0, i32 1
  %.pre474 = load ptr, ptr %memberidx4.i.i.i410.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i412

if.entry.i.i.i409:                                ; preds = %else21.i
  %277 = shl nuw i64 %276, 1
  store i64 %277, ptr %memberidx1.i2.i.i405, align 4
  %memberidx2.i.i.i.i408 = getelementptr inbounds %Array_FloError_, ptr %273, i64 0, i32 1
  %278 = load ptr, ptr %memberidx2.i.i.i.i408, align 8
  %279 = shl i64 %276, 4
  %280 = tail call ptr @realloc(ptr %278, i64 %279)
  store ptr %280, ptr %memberidx2.i.i.i.i408, align 8
  %.pre473 = load i64, ptr %memberidx.i.i.i404, align 4
  br label %TypeChecker_error.exit.i412

TypeChecker_error.exit.i412:                      ; preds = %else21.i.TypeChecker_error.exit.i412_crit_edge, %if.entry.i.i.i409
  %281 = phi ptr [ %280, %if.entry.i.i.i409 ], [ %.pre474, %else21.i.TypeChecker_error.exit.i412_crit_edge ]
  %282 = phi i64 [ %.pre473, %if.entry.i.i.i409 ], [ %275, %else21.i.TypeChecker_error.exit.i412_crit_edge ]
  %283 = add nsw i64 %282, 1
  store i64 %283, ptr %memberidx.i.i.i404, align 4
  %ptridx.i.i.i411 = getelementptr inbounds ptr, ptr %281, i64 %282
  store ptr %274, ptr %ptridx.i.i.i411, align 8
  br label %TypeChecker_check_function_body.exit

TypeChecker_check_function_body.exit:             ; preds = %for.body105, %ifend.i392, %ifend16.i, %TypeChecker_error.exit.i412
  %284 = add nuw nsw i64 %i9.0422, 1
  %285 = load ptr, ptr %1, align 8
  %memberidx109 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %285, i64 0, i32 2
  %286 = load i64, ptr %memberidx109, align 4
  %287 = icmp slt i64 %284, %286
  br i1 %287, label %for.body105, label %for.end107

for.end107:                                       ; preds = %TypeChecker_check_function_body.exit, %for.end101
  %288 = load i1, ptr %memberidx, align 1
  %289 = load ptr, ptr %memberidx10, align 8
  %290 = load i64, ptr %289, align 4
  %291 = icmp ne i64 %290, 0
  %292 = and i1 %288, %291
  br i1 %292, label %if.entry115, label %ifend117

if.entry115:                                      ; preds = %for.end107
  %293 = load ptr, ptr %0, align 8
  %memberidx1.i.i229 = getelementptr inbounds %Program, ptr %293, i64 0, i32 1
  %294 = load ptr, ptr %memberidx1.i.i229, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %294, i64 0, i32 1
  %295 = load ptr, ptr %memberidx.i.i.i, align 8
  %296 = load ptr, ptr %295, align 8
  %memberidx1.i230 = getelementptr inbounds %Module, ptr %296, i64 0, i32 5
  %297 = load ptr, ptr %memberidx1.i230, align 8
  store ptr %297, ptr %memberidx10, align 8
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr nonnull %4)
  br label %ifend117

ifend117:                                         ; preds = %for.end107, %if.entry115
  store ptr %3, ptr %memberidx10, align 8
  %298 = load ptr, ptr %memberidx.i264, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %298, i64 0, i32 6
  %299 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %299, i64 0, i32 2
  %300 = load i64, ptr %memberidx2.i, align 4
  %301 = icmp sgt i64 %300, 0
  %spec.select = select i1 %301, ptr null, ptr %4
  br label %common.ret
}

define internal fastcc void @TypeChecker_import_all_from_module(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = load ptr, ptr %0, align 8
  %memberidx6 = getelementptr inbounds %Module, ptr %1, i64 0, i32 5
  %3 = load ptr, ptr %memberidx6, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = load i64, ptr %3, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %6, i64 %5
  %7 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %7, i64 0, i32 7
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %3, i64 0, i32 1
  %9 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %10, i64 %9
  %11 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx7 = getelementptr inbounds %Module, ptr %1, i64 0, i32 9
  %12 = load ptr, ptr %memberidx7, align 8
  %13 = tail call ptr @malloc(i32 25)
  %memberidx.i94 = getelementptr inbounds %Array_VarDeclaration_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i94, align 8
  %memberidx1.i = getelementptr inbounds %Array_VarDeclaration_, ptr %12, i64 0, i32 2
  %15 = load i64, ptr %memberidx1.i, align 4
  %16 = icmp slt i64 %15, 1
  br i1 %16, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i.i.i113 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %17 = phi i64 [ 1, %for.body.lr.ph ], [ %34, %for.body ]
  %imported_var.0266.in = phi ptr [ %14, %for.body.lr.ph ], [ %ptridx.i128, %for.body ]
  %imported_var.0266 = load ptr, ptr %imported_var.0266.in, align 8
  %memberidx9 = getelementptr inbounds %VarDeclaration, ptr %imported_var.0266, i64 0, i32 1
  %18 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %VarDeclaration, ptr %imported_var.0266, i64 0, i32 2
  %19 = load ptr, ptr %memberidx10, align 8
  %20 = load ptr, ptr %0, align 8
  %21 = load ptr, ptr %memberidx.i.i.i113, align 8
  %22 = load i64, ptr %21, align 4
  %memberidx1.i.i.i.i114 = getelementptr inbounds %Program, ptr %20, i64 0, i32 1
  %23 = load ptr, ptr %memberidx1.i.i.i.i114, align 8
  %memberidx.i.i.i.i.i115 = getelementptr inbounds %Array_Module_, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i.i.i.i.i115, align 8
  %ptridx.i.i.i.i.i116 = getelementptr inbounds ptr, ptr %24, i64 %22
  %25 = load ptr, ptr %ptridx.i.i.i.i.i116, align 8
  %memberidx1.i.i117 = getelementptr inbounds %Module, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i.i117, align 8
  %27 = load i64, ptr %26, align 4
  %ptridx.i.i.i.i120 = getelementptr inbounds ptr, ptr %24, i64 %27
  %28 = load ptr, ptr %ptridx.i.i.i.i120, align 8
  %memberidx2.i.i.i121 = getelementptr inbounds %Module, ptr %28, i64 0, i32 7
  %29 = load ptr, ptr %memberidx2.i.i.i121, align 8
  %memberidx3.i.i.i122 = getelementptr inbounds %ScopeId, ptr %26, i64 0, i32 1
  %30 = load i64, ptr %memberidx3.i.i.i122, align 4
  %memberidx.i5.i.i.i123 = getelementptr inbounds %Array_Scope_, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i5.i.i.i123, align 8
  %ptridx.i6.i.i.i124 = getelementptr inbounds ptr, ptr %31, i64 %30
  %32 = load ptr, ptr %ptridx.i6.i.i.i124, align 8
  %memberidx.i125 = getelementptr inbounds %Scope, ptr %32, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i125, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %33, ptr %18, ptr %19)
  %34 = add nuw nsw i64 %17, 1
  %ptridx.i128 = getelementptr inbounds ptr, ptr %14, i64 %17
  %.not = icmp slt i64 %17, %15
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %13)
  %memberidx12 = getelementptr inbounds %Module, ptr %1, i64 0, i32 8
  %35 = load ptr, ptr %memberidx12, align 8
  %36 = tail call ptr @malloc(i32 25)
  %memberidx.i148 = getelementptr inbounds %Array_ConstDeclaration_, ptr %35, i64 0, i32 1
  %37 = load ptr, ptr %memberidx.i148, align 8
  %memberidx1.i149 = getelementptr inbounds %Array_ConstDeclaration_, ptr %35, i64 0, i32 2
  %38 = load i64, ptr %memberidx1.i149, align 4
  store i1 false, ptr %36, align 1
  %memberidx1.i.i150 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %36, i64 0, i32 1
  %memberidx2.i.i151 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %36, i64 0, i32 3
  store ptr %37, ptr %memberidx2.i.i151, align 8
  %memberidx3.i.i152 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %36, i64 0, i32 2
  store i64 %38, ptr %memberidx3.i.i152, align 4
  store i64 1, ptr %memberidx1.i.i150, align 4
  %39 = icmp slt i64 %38, 1
  br i1 %39, label %for.end16, label %for.body14.lr.ph

for.body14.lr.ph:                                 ; preds = %for.end
  %memberidx.i.i.i157 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body14

for.body14:                                       ; preds = %for.body14.lr.ph, %for.body14
  %40 = phi i64 [ 1, %for.body14.lr.ph ], [ %57, %for.body14 ]
  %imported_const.0263.in = phi ptr [ %37, %for.body14.lr.ph ], [ %ptridx.i172, %for.body14 ]
  %imported_const.0263 = load ptr, ptr %imported_const.0263.in, align 8
  %memberidx18 = getelementptr inbounds %ConstDeclaration, ptr %imported_const.0263, i64 0, i32 1
  %41 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %ConstDeclaration, ptr %imported_const.0263, i64 0, i32 2
  %42 = load ptr, ptr %memberidx19, align 8
  %43 = load ptr, ptr %0, align 8
  %44 = load ptr, ptr %memberidx.i.i.i157, align 8
  %45 = load i64, ptr %44, align 4
  %memberidx1.i.i.i.i158 = getelementptr inbounds %Program, ptr %43, i64 0, i32 1
  %46 = load ptr, ptr %memberidx1.i.i.i.i158, align 8
  %memberidx.i.i.i.i.i159 = getelementptr inbounds %Array_Module_, ptr %46, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i.i.i.i159, align 8
  %ptridx.i.i.i.i.i160 = getelementptr inbounds ptr, ptr %47, i64 %45
  %48 = load ptr, ptr %ptridx.i.i.i.i.i160, align 8
  %memberidx1.i.i161 = getelementptr inbounds %Module, ptr %48, i64 0, i32 5
  %49 = load ptr, ptr %memberidx1.i.i161, align 8
  %50 = load i64, ptr %49, align 4
  %ptridx.i.i.i.i164 = getelementptr inbounds ptr, ptr %47, i64 %50
  %51 = load ptr, ptr %ptridx.i.i.i.i164, align 8
  %memberidx2.i.i.i165 = getelementptr inbounds %Module, ptr %51, i64 0, i32 7
  %52 = load ptr, ptr %memberidx2.i.i.i165, align 8
  %memberidx3.i.i.i166 = getelementptr inbounds %ScopeId, ptr %49, i64 0, i32 1
  %53 = load i64, ptr %memberidx3.i.i.i166, align 4
  %memberidx.i5.i.i.i167 = getelementptr inbounds %Array_Scope_, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i5.i.i.i167, align 8
  %ptridx.i6.i.i.i168 = getelementptr inbounds ptr, ptr %54, i64 %53
  %55 = load ptr, ptr %ptridx.i6.i.i.i168, align 8
  %memberidx.i169 = getelementptr inbounds %Scope, ptr %55, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i169, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %56, ptr %41, ptr %42)
  %57 = add nuw nsw i64 %40, 1
  store i64 %57, ptr %memberidx1.i.i150, align 4
  %ptridx.i172 = getelementptr inbounds ptr, ptr %37, i64 %40
  %.not275 = icmp slt i64 %40, %38
  br i1 %.not275, label %for.body14, label %for.end16

for.end16:                                        ; preds = %for.body14, %for.end
  tail call void @free(ptr nonnull %36)
  %memberidx21 = getelementptr inbounds %Module, ptr %1, i64 0, i32 4
  %58 = load ptr, ptr %memberidx21, align 8
  %59 = tail call ptr @malloc(i32 25)
  %memberidx.i174 = getelementptr inbounds %Array_Function_, ptr %58, i64 0, i32 1
  %60 = load ptr, ptr %memberidx.i174, align 8
  %memberidx1.i175 = getelementptr inbounds %Array_Function_, ptr %58, i64 0, i32 2
  %61 = load i64, ptr %memberidx1.i175, align 4
  store i1 false, ptr %59, align 1
  %memberidx1.i.i176 = getelementptr inbounds %ArrayIterator_Function_, ptr %59, i64 0, i32 1
  %memberidx2.i.i177 = getelementptr inbounds %ArrayIterator_Function_, ptr %59, i64 0, i32 3
  store ptr %60, ptr %memberidx2.i.i177, align 8
  %memberidx3.i.i178 = getelementptr inbounds %ArrayIterator_Function_, ptr %59, i64 0, i32 2
  store i64 %61, ptr %memberidx3.i.i178, align 4
  store i64 1, ptr %memberidx1.i.i176, align 4
  %62 = icmp slt i64 %61, 1
  br i1 %62, label %for.end25, label %for.body23.lr.ph

for.body23.lr.ph:                                 ; preds = %for.end16
  %memberidx.i.i.i192 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body23

for.body23:                                       ; preds = %for.body23.lr.ph, %for.body23
  %63 = phi i64 [ 1, %for.body23.lr.ph ], [ %80, %for.body23 ]
  %imported_func.0260.in = phi ptr [ %60, %for.body23.lr.ph ], [ %ptridx.i207, %for.body23 ]
  %imported_func.0260 = load ptr, ptr %imported_func.0260.in, align 8
  %memberidx27 = getelementptr inbounds %Function, ptr %imported_func.0260, i64 0, i32 1
  %64 = load ptr, ptr %memberidx27, align 8
  %65 = load ptr, ptr %imported_func.0260, align 8
  %66 = load ptr, ptr %0, align 8
  %67 = load ptr, ptr %memberidx.i.i.i192, align 8
  %68 = load i64, ptr %67, align 4
  %memberidx1.i.i.i.i193 = getelementptr inbounds %Program, ptr %66, i64 0, i32 1
  %69 = load ptr, ptr %memberidx1.i.i.i.i193, align 8
  %memberidx.i.i.i.i.i194 = getelementptr inbounds %Array_Module_, ptr %69, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i.i.i.i194, align 8
  %ptridx.i.i.i.i.i195 = getelementptr inbounds ptr, ptr %70, i64 %68
  %71 = load ptr, ptr %ptridx.i.i.i.i.i195, align 8
  %memberidx1.i.i196 = getelementptr inbounds %Module, ptr %71, i64 0, i32 5
  %72 = load ptr, ptr %memberidx1.i.i196, align 8
  %73 = load i64, ptr %72, align 4
  %ptridx.i.i.i.i199 = getelementptr inbounds ptr, ptr %70, i64 %73
  %74 = load ptr, ptr %ptridx.i.i.i.i199, align 8
  %memberidx2.i.i.i200 = getelementptr inbounds %Module, ptr %74, i64 0, i32 7
  %75 = load ptr, ptr %memberidx2.i.i.i200, align 8
  %memberidx3.i.i.i201 = getelementptr inbounds %ScopeId, ptr %72, i64 0, i32 1
  %76 = load i64, ptr %memberidx3.i.i.i201, align 4
  %memberidx.i5.i.i.i202 = getelementptr inbounds %Array_Scope_, ptr %75, i64 0, i32 1
  %77 = load ptr, ptr %memberidx.i5.i.i.i202, align 8
  %ptridx.i6.i.i.i203 = getelementptr inbounds ptr, ptr %77, i64 %76
  %78 = load ptr, ptr %ptridx.i6.i.i.i203, align 8
  %memberidx.i204 = getelementptr inbounds %Scope, ptr %78, i64 0, i32 3
  %79 = load ptr, ptr %memberidx.i204, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %79, ptr %64, ptr %65)
  %80 = add nuw nsw i64 %63, 1
  store i64 %80, ptr %memberidx1.i.i176, align 4
  %ptridx.i207 = getelementptr inbounds ptr, ptr %60, i64 %63
  %.not276 = icmp slt i64 %63, %61
  br i1 %.not276, label %for.body23, label %for.end25

for.end25:                                        ; preds = %for.body23, %for.end16
  tail call void @free(ptr nonnull %59)
  %memberidx30 = getelementptr inbounds %Module, ptr %1, i64 0, i32 3
  %81 = load ptr, ptr %memberidx30, align 8
  %82 = tail call ptr @malloc(i32 25)
  %memberidx.i230 = getelementptr inbounds %Array_Class_, ptr %81, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i230, align 8
  %memberidx1.i231 = getelementptr inbounds %Array_Class_, ptr %81, i64 0, i32 2
  %84 = load i64, ptr %memberidx1.i231, align 4
  store i1 false, ptr %82, align 1
  %memberidx1.i.i232 = getelementptr inbounds %ArrayIterator_Class_, ptr %82, i64 0, i32 1
  %memberidx2.i.i233 = getelementptr inbounds %ArrayIterator_Class_, ptr %82, i64 0, i32 3
  store ptr %83, ptr %memberidx2.i.i233, align 8
  %memberidx3.i.i234 = getelementptr inbounds %ArrayIterator_Class_, ptr %82, i64 0, i32 2
  store i64 %84, ptr %memberidx3.i.i234, align 4
  store i64 1, ptr %memberidx1.i.i232, align 4
  %85 = icmp slt i64 %84, 1
  br i1 %85, label %for.end34, label %for.body32.lr.ph

for.body32.lr.ph:                                 ; preds = %for.end25
  %memberidx.i.i.i213 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body32

for.body32:                                       ; preds = %for.body32.lr.ph, %for.body32
  %86 = phi i64 [ 1, %for.body32.lr.ph ], [ %107, %for.body32 ]
  %imported_class.0257.in = phi ptr [ %83, %for.body32.lr.ph ], [ %ptridx.i211, %for.body32 ]
  %imported_class.0257 = load ptr, ptr %imported_class.0257.in, align 8
  %memberidx36 = getelementptr inbounds %Class, ptr %imported_class.0257, i64 0, i32 1
  %87 = load ptr, ptr %memberidx36, align 8
  %88 = load ptr, ptr %imported_class.0257, align 8
  %89 = load ptr, ptr %0, align 8
  %90 = load ptr, ptr %memberidx.i.i.i213, align 8
  %91 = load i64, ptr %90, align 4
  %memberidx1.i.i.i.i214 = getelementptr inbounds %Program, ptr %89, i64 0, i32 1
  %92 = load ptr, ptr %memberidx1.i.i.i.i214, align 8
  %memberidx.i.i.i.i.i215 = getelementptr inbounds %Array_Module_, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx.i.i.i.i.i215, align 8
  %ptridx.i.i.i.i.i216 = getelementptr inbounds ptr, ptr %93, i64 %91
  %94 = load ptr, ptr %ptridx.i.i.i.i.i216, align 8
  %memberidx1.i.i217 = getelementptr inbounds %Module, ptr %94, i64 0, i32 5
  %95 = load ptr, ptr %memberidx1.i.i217, align 8
  %96 = load i64, ptr %95, align 4
  %ptridx.i.i.i.i220 = getelementptr inbounds ptr, ptr %93, i64 %96
  %97 = load ptr, ptr %ptridx.i.i.i.i220, align 8
  %memberidx2.i.i.i221 = getelementptr inbounds %Module, ptr %97, i64 0, i32 7
  %98 = load ptr, ptr %memberidx2.i.i.i221, align 8
  %memberidx3.i.i.i222 = getelementptr inbounds %ScopeId, ptr %95, i64 0, i32 1
  %99 = load i64, ptr %memberidx3.i.i.i222, align 4
  %memberidx.i5.i.i.i223 = getelementptr inbounds %Array_Scope_, ptr %98, i64 0, i32 1
  %100 = load ptr, ptr %memberidx.i5.i.i.i223, align 8
  %ptridx.i6.i.i.i224 = getelementptr inbounds ptr, ptr %100, i64 %99
  %101 = load ptr, ptr %ptridx.i6.i.i.i224, align 8
  %memberidx.i225 = getelementptr inbounds %Scope, ptr %101, i64 0, i32 2
  %102 = load ptr, ptr %memberidx.i225, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %102, ptr %87, ptr %88)
  %memberidx1.i226 = getelementptr inbounds %Scope, ptr %101, i64 0, i32 1
  %103 = load ptr, ptr %memberidx1.i226, align 8
  %104 = tail call ptr @malloc(i32 24)
  %105 = load i64, ptr %88, align 4
  %memberidx1.i5.i227 = getelementptr inbounds %TypeId, ptr %88, i64 0, i32 2
  %106 = load i64, ptr %memberidx1.i5.i227, align 4
  store i64 3, ptr %104, align 4
  %memberidx1.i.i.i228 = getelementptr inbounds %VarId, ptr %104, i64 0, i32 1
  store i64 %105, ptr %memberidx1.i.i.i228, align 4
  %memberidx2.i.i6.i229 = getelementptr inbounds %VarId, ptr %104, i64 0, i32 2
  store i64 %106, ptr %memberidx2.i.i6.i229, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %103, ptr %87, ptr nonnull %104)
  %107 = add nuw nsw i64 %86, 1
  store i64 %107, ptr %memberidx1.i.i232, align 4
  %ptridx.i211 = getelementptr inbounds ptr, ptr %83, i64 %86
  %.not277 = icmp slt i64 %86, %84
  br i1 %.not277, label %for.body32, label %for.end34

for.end34:                                        ; preds = %for.body32, %for.end25
  tail call void @free(ptr nonnull %82)
  %memberidx39 = getelementptr inbounds %Module, ptr %1, i64 0, i32 6
  %108 = load ptr, ptr %memberidx39, align 8
  %109 = tail call ptr @malloc(i32 25)
  %memberidx.i187 = getelementptr inbounds %Array_Enum_, ptr %108, i64 0, i32 1
  %110 = load ptr, ptr %memberidx.i187, align 8
  %memberidx1.i188 = getelementptr inbounds %Array_Enum_, ptr %108, i64 0, i32 2
  %111 = load i64, ptr %memberidx1.i188, align 4
  store i1 false, ptr %109, align 1
  %memberidx1.i.i189 = getelementptr inbounds %ArrayIterator_Enum_, ptr %109, i64 0, i32 1
  %memberidx2.i.i190 = getelementptr inbounds %ArrayIterator_Enum_, ptr %109, i64 0, i32 3
  store ptr %110, ptr %memberidx2.i.i190, align 8
  %memberidx3.i.i191 = getelementptr inbounds %ArrayIterator_Enum_, ptr %109, i64 0, i32 2
  store i64 %111, ptr %memberidx3.i.i191, align 4
  store i64 1, ptr %memberidx1.i.i189, align 4
  %112 = icmp slt i64 %111, 1
  br i1 %112, label %for.end43, label %for.body41.lr.ph

for.body41.lr.ph:                                 ; preds = %for.end34
  %memberidx.i.i.i134 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body41

for.body41:                                       ; preds = %for.body41.lr.ph, %for.body41
  %113 = phi i64 [ 1, %for.body41.lr.ph ], [ %134, %for.body41 ]
  %imported_enum.0254.in = phi ptr [ %110, %for.body41.lr.ph ], [ %ptridx.i132, %for.body41 ]
  %imported_enum.0254 = load ptr, ptr %imported_enum.0254.in, align 8
  %memberidx45 = getelementptr inbounds %Enum, ptr %imported_enum.0254, i64 0, i32 1
  %114 = load ptr, ptr %memberidx45, align 8
  %115 = load ptr, ptr %imported_enum.0254, align 8
  %116 = load ptr, ptr %0, align 8
  %117 = load ptr, ptr %memberidx.i.i.i134, align 8
  %118 = load i64, ptr %117, align 4
  %memberidx1.i.i.i.i135 = getelementptr inbounds %Program, ptr %116, i64 0, i32 1
  %119 = load ptr, ptr %memberidx1.i.i.i.i135, align 8
  %memberidx.i.i.i.i.i136 = getelementptr inbounds %Array_Module_, ptr %119, i64 0, i32 1
  %120 = load ptr, ptr %memberidx.i.i.i.i.i136, align 8
  %ptridx.i.i.i.i.i137 = getelementptr inbounds ptr, ptr %120, i64 %118
  %121 = load ptr, ptr %ptridx.i.i.i.i.i137, align 8
  %memberidx1.i.i138 = getelementptr inbounds %Module, ptr %121, i64 0, i32 5
  %122 = load ptr, ptr %memberidx1.i.i138, align 8
  %123 = load i64, ptr %122, align 4
  %ptridx.i.i.i.i141 = getelementptr inbounds ptr, ptr %120, i64 %123
  %124 = load ptr, ptr %ptridx.i.i.i.i141, align 8
  %memberidx2.i.i.i142 = getelementptr inbounds %Module, ptr %124, i64 0, i32 7
  %125 = load ptr, ptr %memberidx2.i.i.i142, align 8
  %memberidx3.i.i.i143 = getelementptr inbounds %ScopeId, ptr %122, i64 0, i32 1
  %126 = load i64, ptr %memberidx3.i.i.i143, align 4
  %memberidx.i5.i.i.i144 = getelementptr inbounds %Array_Scope_, ptr %125, i64 0, i32 1
  %127 = load ptr, ptr %memberidx.i5.i.i.i144, align 8
  %ptridx.i6.i.i.i145 = getelementptr inbounds ptr, ptr %127, i64 %126
  %128 = load ptr, ptr %ptridx.i6.i.i.i145, align 8
  %memberidx.i146 = getelementptr inbounds %Scope, ptr %128, i64 0, i32 4
  %129 = load ptr, ptr %memberidx.i146, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %129, ptr %114, ptr %115)
  %memberidx1.i147 = getelementptr inbounds %Scope, ptr %128, i64 0, i32 1
  %130 = load ptr, ptr %memberidx1.i147, align 8
  %131 = tail call ptr @malloc(i32 24)
  %132 = load i64, ptr %115, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %115, i64 0, i32 2
  %133 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 4, ptr %131, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %131, i64 0, i32 1
  store i64 %132, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %131, i64 0, i32 2
  store i64 %133, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %130, ptr %114, ptr nonnull %131)
  %134 = add nuw nsw i64 %113, 1
  store i64 %134, ptr %memberidx1.i.i189, align 4
  %ptridx.i132 = getelementptr inbounds ptr, ptr %110, i64 %113
  %.not278 = icmp slt i64 %113, %111
  br i1 %.not278, label %for.body41, label %for.end43

for.end43:                                        ; preds = %for.body41, %for.end34
  tail call void @free(ptr nonnull %109)
  %memberidx48 = getelementptr inbounds %Scope, ptr %11, i64 0, i32 6
  %135 = load ptr, ptr %memberidx48, align 8
  %136 = tail call ptr @malloc(i32 25)
  %137 = load ptr, ptr %135, align 8
  %memberidx1.i108 = getelementptr inbounds %Map_string_Type_, ptr %135, i64 0, i32 1
  %138 = load i64, ptr %memberidx1.i108, align 4
  %memberidx2.i109 = getelementptr inbounds %Map_string_Type_, ptr %135, i64 0, i32 2
  %139 = load i64, ptr %memberidx2.i109, align 4
  store i1 false, ptr %136, align 1
  %memberidx1.i.i110 = getelementptr inbounds %MapIterator_string_Type_, ptr %136, i64 0, i32 1
  store ptr %137, ptr %memberidx1.i.i110, align 8
  %memberidx2.i.i111 = getelementptr inbounds %MapIterator_string_Type_, ptr %136, i64 0, i32 2
  %memberidx3.i.i112 = getelementptr inbounds %MapIterator_string_Type_, ptr %136, i64 0, i32 3
  store i64 %139, ptr %memberidx3.i.i112, align 4
  %140 = add nsw i64 %138, -1
  store i64 %140, ptr %memberidx2.i.i111, align 4
  %141 = icmp sgt i64 %138, 0
  br i1 %141, label %while.entry.i102, label %MapIterator_string_Type__next.exit107

while.entry.i102:                                 ; preds = %for.end43, %ifend.i106
  %142 = phi i64 [ %145, %ifend.i106 ], [ %140, %for.end43 ]
  %143 = phi ptr [ %incdec.ptr.i100, %ifend.i106 ], [ %137, %for.end43 ]
  %incdec.ptr.i100 = getelementptr inbounds ptr, ptr %143, i64 1
  %144 = load ptr, ptr %143, align 8
  %.not.i101 = icmp eq ptr %144, null
  br i1 %.not.i101, label %ifend.i106, label %MapIterator_string_Type__next.exit107.loopexit

ifend.i106:                                       ; preds = %while.entry.i102
  %145 = add nsw i64 %142, -1
  store i64 %145, ptr %memberidx2.i.i111, align 4
  %146 = icmp sgt i64 %142, 0
  br i1 %146, label %while.entry.i102, label %MapIterator_string_Type__next.exit107.loopexit

MapIterator_string_Type__next.exit107.loopexit:   ; preds = %ifend.i106, %while.entry.i102
  %147 = phi i64 [ %145, %ifend.i106 ], [ %142, %while.entry.i102 ]
  store ptr %incdec.ptr.i100, ptr %memberidx1.i.i110, align 8
  br label %MapIterator_string_Type__next.exit107

MapIterator_string_Type__next.exit107:            ; preds = %MapIterator_string_Type__next.exit107.loopexit, %for.end43
  %148 = phi i64 [ %147, %MapIterator_string_Type__next.exit107.loopexit ], [ %140, %for.end43 ]
  %memberidx1.i.i110.promoted250 = phi ptr [ %incdec.ptr.i100, %MapIterator_string_Type__next.exit107.loopexit ], [ %137, %for.end43 ]
  %storemerge243247 = icmp slt i64 %139, 1
  br i1 %storemerge243247, label %for.end52, label %for.body50.lr.ph

for.body50.lr.ph:                                 ; preds = %MapIterator_string_Type__next.exit107
  %memberidx.i.i.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body50

for.body50:                                       ; preds = %for.body50.lr.ph, %MapIterator_string_Type__next.exit
  %149 = phi i64 [ %148, %for.body50.lr.ph ], [ %173, %MapIterator_string_Type__next.exit ]
  %incdec.ptr.i.lcssa252 = phi ptr [ %memberidx1.i.i110.promoted250, %for.body50.lr.ph ], [ %incdec.ptr.i.lcssa251, %MapIterator_string_Type__next.exit ]
  %storemerge244248.in = phi i64 [ %139, %for.body50.lr.ph ], [ %storemerge244248, %MapIterator_string_Type__next.exit ]
  %storemerge244248 = add nsw i64 %storemerge244248.in, -1
  %type_alias_entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa252, i64 -1
  %type_alias_entry.0 = load ptr, ptr %type_alias_entry.0.in, align 8
  %150 = load ptr, ptr %type_alias_entry.0, align 8
  %memberidx55 = getelementptr inbounds %MapEntry_string_Type_, ptr %type_alias_entry.0, i64 0, i32 1
  %151 = load ptr, ptr %memberidx55, align 8
  %152 = load ptr, ptr %0, align 8
  %153 = load ptr, ptr %memberidx.i.i.i, align 8
  %154 = load i64, ptr %153, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %152, i64 0, i32 1
  %155 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %155, i64 0, i32 1
  %156 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %156, i64 %154
  %157 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Module, ptr %157, i64 0, i32 5
  %158 = load ptr, ptr %memberidx1.i.i, align 8
  %159 = load i64, ptr %158, align 4
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %156, i64 %159
  %160 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %160, i64 0, i32 7
  %161 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %158, i64 0, i32 1
  %162 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %161, i64 0, i32 1
  %163 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %163, i64 %162
  %164 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %memberidx.i93 = getelementptr inbounds %Scope, ptr %164, i64 0, i32 6
  %165 = load ptr, ptr %memberidx.i93, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr %165, ptr %150, ptr %151)
  %166 = add nsw i64 %149, -1
  store i64 %166, ptr %memberidx2.i.i111, align 4
  %167 = icmp sgt i64 %149, 0
  br i1 %167, label %while.entry.i, label %MapIterator_string_Type__next.exit

while.entry.i:                                    ; preds = %for.body50, %ifend.i
  %168 = phi i64 [ %171, %ifend.i ], [ %166, %for.body50 ]
  %169 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa252, %for.body50 ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %169, i64 1
  %170 = load ptr, ptr %169, align 8
  %.not.i = icmp eq ptr %170, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_Type__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %171 = add nsw i64 %168, -1
  store i64 %171, ptr %memberidx2.i.i111, align 4
  %172 = icmp sgt i64 %168, 0
  br i1 %172, label %while.entry.i, label %MapIterator_string_Type__next.exit

MapIterator_string_Type__next.exit:               ; preds = %while.entry.i, %ifend.i, %for.body50
  %173 = phi i64 [ %166, %for.body50 ], [ %168, %while.entry.i ], [ %171, %ifend.i ]
  %incdec.ptr.i.lcssa251 = phi ptr [ %incdec.ptr.i.lcssa252, %for.body50 ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge243 = icmp slt i64 %storemerge244248.in, 2
  br i1 %storemerge243, label %for.cond49.for.end52_crit_edge, label %for.body50

for.cond49.for.end52_crit_edge:                   ; preds = %MapIterator_string_Type__next.exit
  store ptr %incdec.ptr.i.lcssa251, ptr %memberidx1.i.i110, align 8
  br label %for.end52

for.end52:                                        ; preds = %for.cond49.for.end52_crit_edge, %MapIterator_string_Type__next.exit107
  tail call void @free(ptr nonnull %136)
  ret void
}

define internal fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %3, align 4
  %memberidx = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx1 = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %6)
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %9 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %9, i64 0, i32 6
  %10 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %10, i64 0, i32 2
  %11 = load i64, ptr %memberidx2.i, align 4
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend46, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %41, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %160, %ifend46 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %13 = load ptr, ptr %0, align 8
  %14 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %14, ptr noundef nonnull align 8 dereferenceable(6) @177, i64 6, i1 false)
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i, align 4
  %16 = load i64, ptr %7, align 4
  %17 = icmp eq i64 %16, 19
  br i1 %17, label %if.entry.i167, label %is_object.exit.thread

if.entry.i167:                                    ; preds = %ifend, %if.entry.i167
  %.tr5.i = phi ptr [ %18, %if.entry.i167 ], [ %7, %ifend ]
  %memberidx1.i166 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %18 = load ptr, ptr %memberidx1.i166, align 8
  %19 = load i64, ptr %18, align 4
  switch i64 %19, label %ifend6 [
    i64 19, label %if.entry.i167
    i64 11, label %tailrecurse.i.preheader
  ]

is_object.exit.thread:                            ; preds = %ifend
  %20 = icmp eq i64 %16, 11
  br i1 %20, label %if.entry3.i, label %ifend6

tailrecurse.i.preheader:                          ; preds = %if.entry.i167
  br i1 %17, label %if.entry.i170, label %if.entry3.i

if.entry.i170:                                    ; preds = %tailrecurse.i.preheader, %if.entry.i170
  %.tr11.i221 = phi ptr [ %21, %if.entry.i170 ], [ %7, %tailrecurse.i.preheader ]
  %memberidx1.i169 = getelementptr inbounds %GenericType, ptr %.tr11.i221, i64 0, i32 3
  %21 = load ptr, ptr %memberidx1.i169, align 8
  %22 = load i64, ptr %21, align 4
  %switch = icmp eq i64 %22, 19
  br i1 %switch, label %if.entry.i170, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i170, %is_object.exit.thread, %tailrecurse.i.preheader
  %.tr11.i.lcssa = phi ptr [ %7, %tailrecurse.i.preheader ], [ %7, %is_object.exit.thread ], [ %21, %if.entry.i170 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i171 = getelementptr inbounds %Program, ptr %13, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i.i171, align 8
  %25 = load i64, ptr %23, align 4
  %memberidx.i.i.i172 = getelementptr inbounds %Array_Module_, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i.i.i172, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %26, i64 %25
  %27 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i173 = getelementptr inbounds %Module, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx2.i.i173, align 8
  %memberidx3.i.i174 = getelementptr inbounds %TypeId, ptr %23, i64 0, i32 2
  %29 = load i64, ptr %memberidx3.i.i174, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %28, i64 0, i32 1
  %30 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %30, i64 %29
  %31 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx.i82 = getelementptr inbounds %Class, ptr %31, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i82, align 8
  %memberidx.i.i83 = getelementptr inbounds %string, ptr %32, i64 0, i32 2
  %33 = load i64, ptr %memberidx.i.i83, align 4
  %.not.i.i = icmp eq i64 %33, 6
  br i1 %.not.i.i, label %string___eq__.exit.i, label %ifend6

string___eq__.exit.i:                             ; preds = %if.entry3.i
  %memberidx2.i.i85 = getelementptr inbounds %string, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx2.i.i85, align 8
  %35 = tail call i64 @memcmp(ptr %34, ptr %14, i64 6)
  %36 = icmp eq i64 %35, 0
  %37 = load ptr, ptr %31, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 1
  %40 = and i1 %36, %39
  br i1 %40, label %if.entry4, label %string___eq__.exit.i.ifend6_crit_edge

string___eq__.exit.i.ifend6_crit_edge:            ; preds = %string___eq__.exit.i
  %.pre = load i64, ptr %7, align 4
  br label %ifend6

if.entry4:                                        ; preds = %string___eq__.exit.i
  %41 = tail call ptr @malloc(i32 49)
  %42 = tail call ptr @malloc(i32 0)
  %43 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %43, align 8
  %memberidx.i.i86 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  store ptr %42, ptr %memberidx.i.i86, align 8
  %memberidx1.i.i87 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i87, i8 0, i64 16, i1 false)
  %44 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_uint_, ptr %44, align 8
  %memberidx.i89 = getelementptr inbounds %Array_uint_, ptr %44, i64 0, i32 2
  store i64 0, ptr %memberidx.i89, align 4
  %memberidx1.i90 = getelementptr inbounds %Array_uint_, ptr %44, i64 0, i32 3
  store i64 8, ptr %memberidx1.i90, align 4
  %memberidx2.i91 = getelementptr inbounds %Array_uint_, ptr %44, i64 0, i32 1
  %45 = tail call ptr @malloc(i32 64)
  store ptr %45, ptr %memberidx2.i91, align 8
  store i64 0, ptr %45, align 4
  store i64 1, ptr %memberidx.i89, align 4
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %46, align 8
  %memberidx.i92 = getelementptr inbounds %Array_Expression_, ptr %46, i64 0, i32 2
  store i64 0, ptr %memberidx.i92, align 4
  %memberidx1.i93 = getelementptr inbounds %Array_Expression_, ptr %46, i64 0, i32 3
  store i64 8, ptr %memberidx1.i93, align 4
  %memberidx2.i94 = getelementptr inbounds %Array_Expression_, ptr %46, i64 0, i32 1
  %47 = tail call ptr @malloc(i32 64)
  store ptr %47, ptr %memberidx2.i94, align 8
  store ptr %5, ptr %47, align 8
  store i64 1, ptr %memberidx.i92, align 4
  store i64 8, ptr %41, align 4
  %memberidx.i.i95 = getelementptr inbounds %Expression, ptr %41, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i95, align 4
  %memberidx1.i.i96 = getelementptr inbounds %Expression, ptr %41, i64 0, i32 1
  %memberidx.i97 = getelementptr inbounds %StringExpression, ptr %41, i64 0, i32 6
  store ptr %46, ptr %memberidx.i97, align 8
  %memberidx1.i98 = getelementptr inbounds %StringExpression, ptr %41, i64 0, i32 5
  store ptr %44, ptr %memberidx1.i98, align 8
  %memberidx2.i99 = getelementptr inbounds %Expression, ptr %41, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i99, align 8
  %memberidx3.i = getelementptr inbounds %StringExpression, ptr %41, i64 0, i32 4
  store ptr %43, ptr %memberidx3.i, align 8
  store i1 true, ptr %memberidx1.i.i96, align 1
  br label %common.ret

ifend6:                                           ; preds = %if.entry.i167, %is_object.exit.thread, %string___eq__.exit.i.ifend6_crit_edge, %if.entry3.i
  %48 = phi i64 [ %.pre, %string___eq__.exit.i.ifend6_crit_edge ], [ %16, %if.entry3.i ], [ %16, %is_object.exit.thread ], [ %16, %if.entry.i167 ]
  %49 = add i64 %48, -1
  %50 = icmp ult i64 %49, 9
  %51 = load i64, ptr %8, align 4
  %52 = add i64 %51, -1
  %53 = icmp ult i64 %52, 9
  %54 = and i1 %50, %53
  %55 = icmp ult i64 %49, 7
  %56 = icmp eq i64 %51, 12
  %57 = and i1 %55, %56
  %58 = icmp ult i64 %52, 7
  %59 = icmp eq i64 %48, 12
  %60 = and i1 %59, %58
  %61 = select i1 %60, i1 true, i1 %57
  %spec.select = select i1 %61, i1 true, i1 %54
  %62 = load ptr, ptr %0, align 8
  %63 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %63, ptr noundef nonnull align 8 dereferenceable(6) @177, i64 6, i1 false)
  %64 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %64, align 8
  %memberidx.i.i100 = getelementptr inbounds %string, ptr %64, i64 0, i32 1
  store ptr %63, ptr %memberidx.i.i100, align 8
  %memberidx1.i.i101 = getelementptr inbounds %string, ptr %64, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i101, align 4
  %memberidx2.i.i102 = getelementptr inbounds %string, ptr %64, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i102, align 4
  %65 = load i64, ptr %8, align 4
  %66 = icmp eq i64 %65, 19
  br i1 %66, label %if.entry.i177, label %is_object.exit180.thread

if.entry.i177:                                    ; preds = %ifend6, %if.entry.i177
  %.tr5.i175 = phi ptr [ %67, %if.entry.i177 ], [ %8, %ifend6 ]
  %memberidx1.i176 = getelementptr inbounds %GenericType, ptr %.tr5.i175, i64 0, i32 3
  %67 = load ptr, ptr %memberidx1.i176, align 8
  %68 = load i64, ptr %67, align 4
  switch i64 %68, label %ifend25 [
    i64 19, label %if.entry.i177
    i64 11, label %tailrecurse.i182.preheader
  ]

is_object.exit180.thread:                         ; preds = %ifend6
  %69 = icmp eq i64 %65, 11
  br i1 %69, label %if.entry3.i194, label %ifend25

tailrecurse.i182.preheader:                       ; preds = %if.entry.i177
  br i1 %66, label %if.entry.i185, label %if.entry3.i194

if.entry.i185:                                    ; preds = %tailrecurse.i182.preheader, %if.entry.i185
  %.tr11.i181219 = phi ptr [ %70, %if.entry.i185 ], [ %8, %tailrecurse.i182.preheader ]
  %memberidx1.i184 = getelementptr inbounds %GenericType, ptr %.tr11.i181219, i64 0, i32 3
  %70 = load ptr, ptr %memberidx1.i184, align 8
  %71 = load i64, ptr %70, align 4
  %switch214 = icmp eq i64 %71, 19
  br i1 %switch214, label %if.entry.i185, label %if.entry3.i194

if.entry3.i194:                                   ; preds = %if.entry.i185, %is_object.exit180.thread, %tailrecurse.i182.preheader
  %.tr11.i181.lcssa = phi ptr [ %8, %tailrecurse.i182.preheader ], [ %8, %is_object.exit180.thread ], [ %70, %if.entry.i185 ]
  %memberidx6.i186 = getelementptr inbounds %ObjectType, ptr %.tr11.i181.lcssa, i64 0, i32 1
  %72 = load ptr, ptr %memberidx6.i186, align 8
  %memberidx.i.i187 = getelementptr inbounds %Program, ptr %62, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i.i187, align 8
  %74 = load i64, ptr %72, align 4
  %memberidx.i.i.i188 = getelementptr inbounds %Array_Module_, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i.i.i188, align 8
  %ptridx.i.i.i189 = getelementptr inbounds ptr, ptr %75, i64 %74
  %76 = load ptr, ptr %ptridx.i.i.i189, align 8
  %memberidx2.i.i190 = getelementptr inbounds %Module, ptr %76, i64 0, i32 3
  %77 = load ptr, ptr %memberidx2.i.i190, align 8
  %memberidx3.i.i191 = getelementptr inbounds %TypeId, ptr %72, i64 0, i32 2
  %78 = load i64, ptr %memberidx3.i.i191, align 4
  %memberidx.i5.i.i192 = getelementptr inbounds %Array_Class_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i5.i.i192, align 8
  %ptridx.i6.i.i193 = getelementptr inbounds ptr, ptr %79, i64 %78
  %80 = load ptr, ptr %ptridx.i6.i.i193, align 8
  %memberidx.i104 = getelementptr inbounds %Class, ptr %80, i64 0, i32 1
  %81 = load ptr, ptr %memberidx.i104, align 8
  %memberidx.i.i105 = getelementptr inbounds %string, ptr %81, i64 0, i32 2
  %82 = load i64, ptr %memberidx.i.i105, align 4
  %.not.i.i107 = icmp eq i64 %82, 6
  br i1 %.not.i.i107, label %is_buitin.exit114, label %ifend25

is_buitin.exit114:                                ; preds = %if.entry3.i194
  %memberidx2.i.i109 = getelementptr inbounds %string, ptr %81, i64 0, i32 1
  %83 = load ptr, ptr %memberidx2.i.i109, align 8
  %84 = tail call i64 @memcmp(ptr %83, ptr %63, i64 6)
  %85 = icmp eq i64 %84, 0
  %86 = load ptr, ptr %80, align 8
  %87 = load i64, ptr %86, align 4
  %88 = icmp eq i64 %87, 1
  %89 = and i1 %85, %88
  %90 = and i1 %50, %89
  br i1 %90, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %is_buitin.exit114
  %91 = load i64, ptr %7, align 4
  %92 = and i64 %91, -2
  %93 = icmp eq i64 %92, 8
  br i1 %93, label %if.entry26, label %else27

ifend25:                                          ; preds = %if.entry.i177, %is_object.exit180.thread, %if.entry3.i194, %is_buitin.exit114, %Array_Expression____sl__.exit
  %is_valid_cast.3 = phi i1 [ true, %Array_Expression____sl__.exit ], [ %spec.select, %is_buitin.exit114 ], [ %spec.select, %if.entry3.i194 ], [ %spec.select, %is_object.exit180.thread ], [ %spec.select, %if.entry.i177 ]
  %exp.0 = phi ptr [ %call.0, %Array_Expression____sl__.exit ], [ %5, %is_buitin.exit114 ], [ %5, %if.entry3.i194 ], [ %5, %is_object.exit180.thread ], [ %5, %if.entry.i177 ]
  %94 = load i64, ptr %7, align 4
  %95 = icmp eq i64 %94, 19
  br i1 %95, label %if.entry.i198, label %is_object.exit201

if.entry.i198:                                    ; preds = %ifend25, %if.entry.i198
  %.tr5.i196 = phi ptr [ %96, %if.entry.i198 ], [ %7, %ifend25 ]
  %memberidx1.i197 = getelementptr inbounds %GenericType, ptr %.tr5.i196, i64 0, i32 3
  %96 = load ptr, ptr %memberidx1.i197, align 8
  %97 = load i64, ptr %96, align 4
  %98 = icmp eq i64 %97, 19
  br i1 %98, label %if.entry.i198, label %is_object.exit201

is_object.exit201:                                ; preds = %if.entry.i198, %ifend25
  %.lcssa.i199 = phi i64 [ %94, %ifend25 ], [ %97, %if.entry.i198 ]
  %99 = icmp eq i64 %.lcssa.i199, 11
  %100 = load i64, ptr %8, align 4
  %101 = icmp eq i64 %100, 19
  br i1 %101, label %if.entry.i204, label %is_object.exit207

if.entry.i204:                                    ; preds = %is_object.exit201, %if.entry.i204
  %.tr5.i202 = phi ptr [ %102, %if.entry.i204 ], [ %8, %is_object.exit201 ]
  %memberidx1.i203 = getelementptr inbounds %GenericType, ptr %.tr5.i202, i64 0, i32 3
  %102 = load ptr, ptr %memberidx1.i203, align 8
  %103 = load i64, ptr %102, align 4
  %104 = icmp eq i64 %103, 19
  br i1 %104, label %if.entry.i204, label %is_object.exit207

is_object.exit207:                                ; preds = %if.entry.i204, %is_object.exit201
  %.lcssa.i205 = phi i64 [ %100, %is_object.exit201 ], [ %103, %if.entry.i204 ]
  %105 = icmp eq i64 %.lcssa.i205, 11
  %106 = and i1 %99, %105
  %107 = icmp eq i64 %94, 13
  %108 = icmp eq i64 %100, 13
  %109 = and i1 %107, %108
  %110 = icmp eq i64 %94, 0
  %111 = select i1 %110, i1 true, i1 %109
  %112 = select i1 %111, i1 true, i1 %106
  %spec.select163 = select i1 %112, i1 true, i1 %is_valid_cast.3
  br i1 %spec.select163, label %ifend46, label %if.entry44

if.entry26:                                       ; preds = %if.entry23
  %113 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %113, align 4
  %memberidx.i.i115 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i115, align 4
  %memberidx1.i.i116 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i116, align 1
  %memberidx.i117 = getelementptr inbounds %IntrinsicCall, ptr %113, i64 0, i32 4
  store i64 0, ptr %memberidx.i117, align 4
  %memberidx1.i118 = getelementptr inbounds %IntrinsicCall, ptr %113, i64 0, i32 5
  %114 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %114, align 8
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %114, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %114, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i, align 4
  %memberidx2.i.i119 = getelementptr inbounds %Array_Expression_, ptr %114, i64 0, i32 1
  %115 = tail call ptr @malloc(i32 64)
  store ptr %115, ptr %memberidx2.i.i119, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %114, ptr %memberidx1.i118, align 8
  %memberidx4.i121 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 3
  %116 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %116, align 4
  store ptr %116, ptr %memberidx4.i121, align 8
  br label %ifend28

else27:                                           ; preds = %if.entry23
  %117 = icmp slt i64 %91, 5
  %118 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %118, align 4
  %memberidx.i.i128 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i128, align 4
  %memberidx1.i.i129 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i129, align 1
  %memberidx.i130 = getelementptr inbounds %IntrinsicCall, ptr %118, i64 0, i32 4
  br i1 %117, label %if.entry31, label %else32

ifend28:                                          ; preds = %if.entry31, %else32, %if.entry26
  %119 = phi ptr [ %114, %if.entry26 ], [ %129, %if.entry31 ], [ %132, %else32 ]
  %call.0 = phi ptr [ %113, %if.entry26 ], [ %118, %if.entry31 ], [ %118, %else32 ]
  %memberidx.i122 = getelementptr inbounds %Array_Expression_, ptr %119, i64 0, i32 2
  %120 = load i64, ptr %memberidx.i122, align 4
  %memberidx1.i123 = getelementptr inbounds %Array_Expression_, ptr %119, i64 0, i32 3
  %121 = load i64, ptr %memberidx1.i123, align 4
  %.not.i = icmp slt i64 %120, %121
  br i1 %.not.i, label %ifend28.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

ifend28.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend28
  %memberidx4.i126.phi.trans.insert = getelementptr inbounds %Array_Expression_, ptr %119, i64 0, i32 1
  %.pre229 = load ptr, ptr %memberidx4.i126.phi.trans.insert, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %ifend28
  %122 = shl nuw i64 %121, 1
  store i64 %122, ptr %memberidx1.i123, align 4
  %memberidx2.i.i125 = getelementptr inbounds %Array_Expression_, ptr %119, i64 0, i32 1
  %123 = load ptr, ptr %memberidx2.i.i125, align 8
  %124 = shl i64 %121, 4
  %125 = tail call ptr @realloc(ptr %123, i64 %124)
  store ptr %125, ptr %memberidx2.i.i125, align 8
  %.pre228 = load i64, ptr %memberidx.i122, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend28.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %126 = phi ptr [ %.pre229, %ifend28.Array_Expression____sl__.exit_crit_edge ], [ %125, %if.entry.i ]
  %127 = phi i64 [ %120, %ifend28.Array_Expression____sl__.exit_crit_edge ], [ %.pre228, %if.entry.i ]
  %128 = add nsw i64 %127, 1
  store i64 %128, ptr %memberidx.i122, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %126, i64 %127
  store ptr %5, ptr %ptridx.i, align 8
  br label %ifend25

if.entry31:                                       ; preds = %else27
  store i64 1, ptr %memberidx.i130, align 4
  %memberidx1.i131 = getelementptr inbounds %IntrinsicCall, ptr %118, i64 0, i32 5
  %129 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %129, align 8
  %memberidx.i7.i132 = getelementptr inbounds %Array_Expression_, ptr %129, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i132, align 4
  %memberidx1.i8.i133 = getelementptr inbounds %Array_Expression_, ptr %129, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i133, align 4
  %memberidx2.i.i134 = getelementptr inbounds %Array_Expression_, ptr %129, i64 0, i32 1
  %130 = tail call ptr @malloc(i32 64)
  store ptr %130, ptr %memberidx2.i.i134, align 8
  store i64 0, ptr %memberidx.i7.i132, align 4
  store ptr %129, ptr %memberidx1.i131, align 8
  %memberidx4.i136 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 3
  %131 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %131, align 4
  store ptr %131, ptr %memberidx4.i136, align 8
  br label %ifend28

else32:                                           ; preds = %else27
  store i64 2, ptr %memberidx.i130, align 4
  %memberidx1.i140 = getelementptr inbounds %IntrinsicCall, ptr %118, i64 0, i32 5
  %132 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %132, align 8
  %memberidx.i7.i141 = getelementptr inbounds %Array_Expression_, ptr %132, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i141, align 4
  %memberidx1.i8.i142 = getelementptr inbounds %Array_Expression_, ptr %132, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i142, align 4
  %memberidx2.i.i143 = getelementptr inbounds %Array_Expression_, ptr %132, i64 0, i32 1
  %133 = tail call ptr @malloc(i32 64)
  store ptr %133, ptr %memberidx2.i.i143, align 8
  store i64 0, ptr %memberidx.i7.i141, align 4
  store ptr %132, ptr %memberidx1.i140, align 8
  %memberidx4.i145 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 3
  %134 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %134, align 4
  store ptr %134, ptr %memberidx4.i145, align 8
  br label %ifend28

if.entry44:                                       ; preds = %is_object.exit207
  %135 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %8)
  %136 = load ptr, ptr %135, align 8
  %memberidx47 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %136, i64 0, i32 5
  %137 = load ptr, ptr %memberidx47, align 8
  %138 = tail call ptr %137(ptr nonnull %135)
  %139 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %7)
  %140 = load ptr, ptr %139, align 8
  %memberidx48 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %140, i64 0, i32 5
  %141 = load ptr, ptr %memberidx48, align 8
  %142 = tail call ptr %141(ptr nonnull %139)
  %143 = alloca ptr, align 8
  %144 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %143, ptr nonnull @178, ptr %138, ptr %142)
  %145 = load ptr, ptr %143, align 8
  %146 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %146, align 8
  %memberidx.i146 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  store ptr %145, ptr %memberidx.i146, align 8
  %memberidx1.i147 = getelementptr inbounds %string, ptr %146, i64 0, i32 2
  store i64 %144, ptr %memberidx1.i147, align 4
  %memberidx2.i148 = getelementptr inbounds %string, ptr %146, i64 0, i32 3
  store i64 %144, ptr %memberidx2.i148, align 4
  tail call void @free(ptr %138)
  tail call void @free(ptr %142)
  %147 = load ptr, ptr %1, align 8
  %148 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i150 = getelementptr inbounds %Compiler, ptr %148, i64 0, i32 6
  %149 = load ptr, ptr %memberidx1.i150, align 8
  %150 = call ptr @malloc(i32 24)
  store i64 5, ptr %150, align 4
  %memberidx1.i.i151 = getelementptr inbounds %FloError, ptr %150, i64 0, i32 2
  store ptr %147, ptr %memberidx1.i.i151, align 8
  %memberidx2.i.i152 = getelementptr inbounds %FloError, ptr %150, i64 0, i32 1
  store ptr %146, ptr %memberidx2.i.i152, align 8
  %memberidx.i.i153 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 2
  %151 = load i64, ptr %memberidx.i.i153, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 3
  %152 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i154 = icmp slt i64 %151, %152
  br i1 %.not.i.i154, label %if.entry44.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry44.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry44
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 1
  %.pre231 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry44
  %153 = shl nuw i64 %152, 1
  store i64 %153, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 1
  %154 = load ptr, ptr %memberidx2.i.i.i, align 8
  %155 = shl i64 %152, 4
  %156 = call ptr @realloc(ptr %154, i64 %155)
  store ptr %156, ptr %memberidx2.i.i.i, align 8
  %.pre230 = load i64, ptr %memberidx.i.i153, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry44.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %157 = phi ptr [ %.pre231, %if.entry44.TypeChecker_error.exit_crit_edge ], [ %156, %if.entry.i.i ]
  %158 = phi i64 [ %151, %if.entry44.TypeChecker_error.exit_crit_edge ], [ %.pre230, %if.entry.i.i ]
  %159 = add nsw i64 %158, 1
  store i64 %159, ptr %memberidx.i.i153, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %157, i64 %158
  store ptr %150, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend46:                                          ; preds = %is_object.exit207
  %160 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %160, align 4
  %memberidx.i.i155 = getelementptr inbounds %Expression, ptr %160, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i155, align 4
  %memberidx1.i.i156 = getelementptr inbounds %Expression, ptr %160, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i156, align 1
  %memberidx.i157 = getelementptr inbounds %TypeCastExpression, ptr %160, i64 0, i32 4
  store ptr %exp.0, ptr %memberidx.i157, align 8
  %memberidx1.i158 = getelementptr inbounds %Expression, ptr %160, i64 0, i32 3
  store ptr %7, ptr %memberidx1.i158, align 8
  %memberidx3.i160 = getelementptr inbounds %Expression, ptr %exp.0, i64 0, i32 1
  %161 = load i1, ptr %memberidx3.i160, align 1
  store i1 %161, ptr %memberidx1.i.i156, align 1
  br label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_Expression__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_Expression__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_Expression_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc ptr @TypeChecker_fill_in_call_args(ptr %0, ptr nocapture readonly %1, ptr readonly %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %4, align 8
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 2
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %memberidx3 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 2
  %6 = load i64, ptr %memberidx3, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx4 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  %memberidx.i46 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Expression____sl__.exit
  %8 = phi ptr [ %5, %for.body.lr.ph ], [ %32, %Array_Expression____sl__.exit ]
  %9 = phi i64 [ 8, %for.body.lr.ph ], [ %33, %Array_Expression____sl__.exit ]
  %10 = phi i64 [ 0, %for.body.lr.ph ], [ %34, %Array_Expression____sl__.exit ]
  %i.065 = phi i64 [ 0, %for.body.lr.ph ], [ %35, %Array_Expression____sl__.exit ]
  %11 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Array_Type_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx5, align 4
  %13 = icmp sgt i64 %12, %i.065
  br i1 %13, label %true_block, label %false_block

for.end:                                          ; preds = %Array_Expression____sl__.exit, %for.entry
  %14 = phi ptr [ %5, %for.entry ], [ %32, %Array_Expression____sl__.exit ]
  %15 = phi i64 [ 8, %for.entry ], [ %33, %Array_Expression____sl__.exit ]
  %16 = phi i64 [ 0, %for.entry ], [ %34, %Array_Expression____sl__.exit ]
  %.lcssa = phi i64 [ %6, %for.entry ], [ %36, %Array_Expression____sl__.exit ]
  %memberidx.i42 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %17 = load ptr, ptr %memberidx.i42, align 8
  %memberidx1.i43 = getelementptr inbounds %Compiler, ptr %17, i64 0, i32 6
  %18 = load ptr, ptr %memberidx1.i43, align 8
  %memberidx2.i44 = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i44, align 4
  %20 = icmp sgt i64 %19, 0
  %21 = icmp eq ptr %2, null
  %22 = or i1 %21, %20
  br i1 %22, label %common.ret, label %ifend

true_block:                                       ; preds = %for.body
  %memberidx.i45 = getelementptr inbounds %Array_Type_, ptr %11, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i45, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %23, i64 %i.065
  %24 = load ptr, ptr %ptridx.i, align 8
  br label %end

false_block:                                      ; preds = %for.body
  %25 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %25, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %24, %true_block ], [ %25, %false_block ]
  %26 = load ptr, ptr %memberidx.i46, align 8
  %ptridx.i47 = getelementptr inbounds ptr, ptr %26, i64 %i.065
  %27 = load ptr, ptr %ptridx.i47, align 8
  %28 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %ternary, ptr %27)
  %.not.i = icmp slt i64 %10, %9
  br i1 %.not.i, label %Array_Expression____sl__.exit, label %if.entry.i

if.entry.i:                                       ; preds = %end
  %29 = shl nuw i64 %9, 1
  store i64 %29, ptr %memberidx1.i, align 4
  %30 = shl i64 %9, 4
  %31 = tail call ptr @realloc(ptr %8, i64 %30)
  store ptr %31, ptr %memberidx2.i, align 8
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %end, %if.entry.i
  %32 = phi ptr [ %8, %end ], [ %31, %if.entry.i ]
  %33 = phi i64 [ %9, %end ], [ %29, %if.entry.i ]
  %34 = add nuw nsw i64 %10, 1
  store i64 %34, ptr %memberidx.i, align 4
  %ptridx.i50 = getelementptr inbounds ptr, ptr %32, i64 %10
  store ptr %28, ptr %ptridx.i50, align 8
  %35 = add nuw nsw i64 %i.065, 1
  %36 = load i64, ptr %memberidx3, align 4
  %37 = icmp slt i64 %35, %36
  br i1 %37, label %for.body, label %for.end

common.ret:                                       ; preds = %ifend22, %ifend, %for.end
  ret ptr %4

ifend:                                            ; preds = %for.end
  %memberidx7 = getelementptr inbounds %Array_FunctionArg_, ptr %2, i64 0, i32 2
  %38 = load i64, ptr %memberidx7, align 4
  %39 = icmp sgt i64 %38, %.lcssa
  br i1 %39, label %for.body15.lr.ph, label %common.ret

for.body15.lr.ph:                                 ; preds = %ifend
  %memberidx.i51 = getelementptr inbounds %Array_FunctionArg_, ptr %2, i64 0, i32 1
  br label %for.body15

for.body15:                                       ; preds = %for.body15.lr.ph, %ifend22
  %40 = phi i64 [ %38, %for.body15.lr.ph ], [ %54, %ifend22 ]
  %41 = phi ptr [ %14, %for.body15.lr.ph ], [ %55, %ifend22 ]
  %42 = phi ptr [ %14, %for.body15.lr.ph ], [ %56, %ifend22 ]
  %43 = phi i64 [ %15, %for.body15.lr.ph ], [ %57, %ifend22 ]
  %44 = phi i64 [ %16, %for.body15.lr.ph ], [ %58, %ifend22 ]
  %i1.064 = phi i64 [ %.lcssa, %for.body15.lr.ph ], [ %59, %ifend22 ]
  %45 = load ptr, ptr %memberidx.i51, align 8
  %ptridx.i52 = getelementptr inbounds ptr, ptr %45, i64 %i1.064
  %46 = load ptr, ptr %ptridx.i52, align 8
  %memberidx19 = getelementptr inbounds %FunctionArg, ptr %46, i64 0, i32 6
  %47 = load ptr, ptr %memberidx19, align 8
  %.not = icmp eq ptr %47, null
  br i1 %.not, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %for.body15
  %.not.i55 = icmp slt i64 %44, %43
  br i1 %.not.i55, label %Array_Expression____sl__.exit61, label %if.entry.i58

if.entry.i58:                                     ; preds = %if.entry20
  %48 = shl nuw i64 %43, 1
  store i64 %48, ptr %memberidx1.i, align 4
  %49 = shl i64 %43, 4
  %50 = tail call ptr @realloc(ptr %42, i64 %49)
  store ptr %50, ptr %memberidx2.i, align 8
  br label %Array_Expression____sl__.exit61

Array_Expression____sl__.exit61:                  ; preds = %if.entry20, %if.entry.i58
  %51 = phi ptr [ %41, %if.entry20 ], [ %50, %if.entry.i58 ]
  %52 = phi i64 [ %43, %if.entry20 ], [ %48, %if.entry.i58 ]
  %53 = add nsw i64 %44, 1
  store i64 %53, ptr %memberidx.i, align 4
  %ptridx.i60 = getelementptr inbounds ptr, ptr %51, i64 %44
  store ptr %47, ptr %ptridx.i60, align 8
  %.pre = load i64, ptr %memberidx7, align 4
  br label %ifend22

ifend22:                                          ; preds = %for.body15, %Array_Expression____sl__.exit61
  %54 = phi i64 [ %40, %for.body15 ], [ %.pre, %Array_Expression____sl__.exit61 ]
  %55 = phi ptr [ %41, %for.body15 ], [ %51, %Array_Expression____sl__.exit61 ]
  %56 = phi ptr [ %42, %for.body15 ], [ %51, %Array_Expression____sl__.exit61 ]
  %57 = phi i64 [ %43, %for.body15 ], [ %52, %Array_Expression____sl__.exit61 ]
  %58 = phi i64 [ %44, %for.body15 ], [ %53, %Array_Expression____sl__.exit61 ]
  %59 = add nsw i64 %i1.064, 1
  %60 = icmp slt i64 %59, %54
  br i1 %60, label %for.body15, label %common.ret
}

define internal fastcc void @TypeChecker_add_inherited_props_to_class(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 19
  br i1 %6, label %if.entry.i139, label %is_object.exit

if.entry.i139:                                    ; preds = %3, %if.entry.i139
  %.tr5.i = phi ptr [ %7, %if.entry.i139 ], [ %4, %3 ]
  %memberidx1.i138 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1.i138, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 19
  br i1 %9, label %if.entry.i139, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i139, %3
  %.lcssa.i = phi i64 [ %5, %3 ], [ %8, %if.entry.i139 ]
  %10 = icmp eq i64 %.lcssa.i, 11
  br i1 %10, label %ifend, label %if.entry

if.entry:                                         ; preds = %is_object.exit
  %11 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %4)
  %12 = load ptr, ptr %11, align 8
  %memberidx1 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %12, i64 0, i32 5
  %13 = load ptr, ptr %memberidx1, align 8
  %14 = tail call ptr %13(ptr nonnull %11)
  %15 = alloca ptr, align 8
  %16 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %15, ptr nonnull @144, ptr %14)
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  store ptr %17, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  store i64 %16, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 3
  store i64 %16, ptr %memberidx2.i, align 4
  tail call void @free(ptr %14)
  %memberidx2 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 2
  %19 = load ptr, ptr %memberidx2, align 8
  %20 = load ptr, ptr %19, align 8
  %memberidx.i59 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %21 = load ptr, ptr %memberidx.i59, align 8
  %memberidx1.i60 = getelementptr inbounds %Compiler, ptr %21, i64 0, i32 6
  %22 = load ptr, ptr %memberidx1.i60, align 8
  %23 = call ptr @malloc(i32 24)
  store i64 5, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 2
  store ptr %20, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 1
  store ptr %18, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 2
  %24 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 3
  %25 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %24, %25
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 1
  %.pre168 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %26 = shl nuw i64 %25, 1
  store i64 %26, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i.i.i, align 8
  %28 = shl i64 %25, 4
  %29 = call ptr @realloc(ptr %27, i64 %28)
  store ptr %29, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %30 = phi ptr [ %.pre168, %if.entry.TypeChecker_error.exit_crit_edge ], [ %29, %if.entry.i.i ]
  %31 = phi i64 [ %24, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %30, i64 %31
  store ptr %23, ptr %ptridx.i.i, align 8
  %.pre169 = load i64, ptr %4, align 4
  br label %ifend

ifend:                                            ; preds = %is_object.exit, %TypeChecker_error.exit
  %33 = phi i64 [ %5, %is_object.exit ], [ %.pre169, %TypeChecker_error.exit ]
  %34 = load ptr, ptr %0, align 8
  %switch162 = icmp eq i64 %33, 19
  br i1 %switch162, label %if.entry.i143, label %if.entry3.i

if.entry.i143:                                    ; preds = %ifend, %if.entry.i143
  %.tr11.i163 = phi ptr [ %35, %if.entry.i143 ], [ %4, %ifend ]
  %memberidx1.i142 = getelementptr inbounds %GenericType, ptr %.tr11.i163, i64 0, i32 3
  %35 = load ptr, ptr %memberidx1.i142, align 8
  %36 = load i64, ptr %35, align 4
  %switch = icmp eq i64 %36, 19
  br i1 %switch, label %if.entry.i143, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i143, %ifend
  %.tr11.i.lcssa = phi ptr [ %4, %ifend ], [ %35, %if.entry.i143 ]
  %memberidx6.i144 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %37 = load ptr, ptr %memberidx6.i144, align 8
  %memberidx.i.i145 = getelementptr inbounds %Program, ptr %34, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i.i145, align 8
  %39 = load i64, ptr %37, align 4
  %memberidx.i.i.i146 = getelementptr inbounds %Array_Module_, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i.i.i146, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %40, i64 %39
  %41 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i147 = getelementptr inbounds %Module, ptr %41, i64 0, i32 3
  %42 = load ptr, ptr %memberidx2.i.i147, align 8
  %memberidx3.i.i148 = getelementptr inbounds %TypeId, ptr %37, i64 0, i32 2
  %43 = load i64, ptr %memberidx3.i.i148, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx5 = getelementptr inbounds %Class, ptr %45, i64 0, i32 6
  %46 = load ptr, ptr %memberidx5, align 8
  %47 = call ptr @malloc(i32 25)
  %48 = load ptr, ptr %46, align 8
  %memberidx1.i61 = getelementptr inbounds %Map_string_PropId_, ptr %46, i64 0, i32 1
  %49 = load i64, ptr %memberidx1.i61, align 4
  %memberidx2.i62 = getelementptr inbounds %Map_string_PropId_, ptr %46, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i62, align 4
  store i1 false, ptr %47, align 1
  %memberidx1.i.i63 = getelementptr inbounds %MapIterator_string_PropId_, ptr %47, i64 0, i32 1
  store ptr %48, ptr %memberidx1.i.i63, align 8
  %memberidx2.i.i64 = getelementptr inbounds %MapIterator_string_PropId_, ptr %47, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %47, i64 0, i32 3
  store i64 %50, ptr %memberidx3.i.i, align 4
  %51 = add nsw i64 %49, -1
  store i64 %51, ptr %memberidx2.i.i64, align 4
  %52 = icmp sgt i64 %49, 0
  br i1 %52, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %if.entry3.i, %ifend.i
  %53 = phi i64 [ %56, %ifend.i ], [ %51, %if.entry3.i ]
  %54 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %48, %if.entry3.i ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %54, i64 1
  %55 = load ptr, ptr %54, align 8
  %.not.i = icmp eq ptr %55, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %56 = add nsw i64 %53, -1
  store i64 %56, ptr %memberidx2.i.i64, align 4
  %57 = icmp sgt i64 %53, 0
  br i1 %57, label %while.entry.i, label %MapIterator_string_PropId__next.exit.loopexit

MapIterator_string_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %58 = phi i64 [ %56, %ifend.i ], [ %53, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i63, align 8
  br label %MapIterator_string_PropId__next.exit

MapIterator_string_PropId__next.exit:             ; preds = %MapIterator_string_PropId__next.exit.loopexit, %if.entry3.i
  %59 = phi i64 [ %58, %MapIterator_string_PropId__next.exit.loopexit ], [ %51, %if.entry3.i ]
  %memberidx1.i.i63.promoted159 = phi ptr [ %incdec.ptr.i, %MapIterator_string_PropId__next.exit.loopexit ], [ %48, %if.entry3.i ]
  %storemerge156 = icmp slt i64 %50, 1
  br i1 %storemerge156, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit
  %memberidx10 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx26 = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %memberidx32 = getelementptr inbounds %Class, ptr %1, i64 0, i32 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit83
  %60 = phi i64 [ %59, %for.body.lr.ph ], [ %131, %MapIterator_string_PropId__next.exit83 ]
  %incdec.ptr.i76.lcssa161 = phi ptr [ %memberidx1.i.i63.promoted159, %for.body.lr.ph ], [ %incdec.ptr.i76.lcssa160, %MapIterator_string_PropId__next.exit83 ]
  %storemerge153157.in = phi i64 [ %50, %for.body.lr.ph ], [ %storemerge153157, %MapIterator_string_PropId__next.exit83 ]
  %storemerge153157 = add nsw i64 %storemerge153157.in, -1
  %parent_entry_prop.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i76.lcssa161, i64 -1
  %parent_entry_prop.0 = load ptr, ptr %parent_entry_prop.0.in, align 8
  %61 = load ptr, ptr %parent_entry_prop.0, align 8
  %memberidx8 = getelementptr inbounds %MapEntry_string_PropId_, ptr %parent_entry_prop.0, i64 0, i32 1
  %62 = load ptr, ptr %memberidx8, align 8
  %63 = load ptr, ptr %0, align 8
  %memberidx.i.i67 = getelementptr inbounds %PropId, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i.i67, align 8
  %memberidx.i.i.i68 = getelementptr inbounds %Program, ptr %63, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i.i.i68, align 8
  %66 = load i64, ptr %64, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %65, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %67, i64 %66
  %68 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i69 = getelementptr inbounds %Module, ptr %68, i64 0, i32 3
  %69 = load ptr, ptr %memberidx2.i.i.i69, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %64, i64 0, i32 2
  %70 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %69, i64 0, i32 1
  %71 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %71, i64 %70
  %72 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %73 = load i64, ptr %62, align 4
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %if.entry.i, label %ifend.i73

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i70 = getelementptr inbounds %Class, ptr %72, i64 0, i32 5
  %75 = load ptr, ptr %memberidx1.i70, align 8
  %memberidx2.i71 = getelementptr inbounds %PropId, ptr %62, i64 0, i32 2
  %76 = load i64, ptr %memberidx2.i71, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %75, i64 0, i32 1
  %77 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %77, i64 %76
  %78 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %78, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i73:                                        ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %72, i64 0, i32 4
  %79 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %62, i64 0, i32 2
  %80 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %79, i64 0, i32 1
  %81 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i72 = getelementptr inbounds ptr, ptr %81, i64 %80
  %82 = load ptr, ptr %ptridx.i.i72, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %82, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i73
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i73 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %83 = load ptr, ptr %memberidx10, align 8
  %84 = call fastcc i64 @Map_string_PropId__hash_fnc(ptr %61)
  %memberidx.i128 = getelementptr inbounds %Map_string_PropId_, ptr %83, i64 0, i32 1
  %85 = load i64, ptr %memberidx.i128, align 4
  %86 = urem i64 %84, %85
  %87 = load ptr, ptr %83, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %87, i64 %86
  %88 = load ptr, ptr %ptridx.i, align 8
  %.not.i129 = icmp eq ptr %88, null
  br i1 %.not.i129, label %Map_string_PropId____getitem__.exit, label %while.entry.i133.preheader

while.entry.i133.preheader:                       ; preds = %get_class_prop_type.exit
  %memberidx1.i.i131 = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  %memberidx3.i.i135 = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  br label %while.entry.i133

while.entry.i133:                                 ; preds = %while.entry.i133.preheader, %else.i
  %89 = phi ptr [ %99, %else.i ], [ %87, %while.entry.i133.preheader ]
  %90 = phi i64 [ %100, %else.i ], [ %85, %while.entry.i133.preheader ]
  %91 = phi ptr [ %103, %else.i ], [ %88, %while.entry.i133.preheader ]
  %hash.0.i = phi i64 [ %102, %else.i ], [ %86, %while.entry.i133.preheader ]
  %92 = load ptr, ptr %91, align 8
  %memberidx.i.i130 = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  %93 = load i64, ptr %memberidx.i.i130, align 4
  %94 = load i64, ptr %memberidx1.i.i131, align 4
  %.not.i.i132 = icmp eq i64 %93, %94
  br i1 %.not.i.i132, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i133
  %memberidx2.i.i134 = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  %95 = load ptr, ptr %memberidx2.i.i134, align 8
  %96 = load ptr, ptr %memberidx3.i.i135, align 8
  %97 = call i64 @memcmp(ptr %95, ptr %96, i64 %93)
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre171 = load i64, ptr %memberidx.i128, align 4
  %.pre172 = load ptr, ptr %83, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre173.pre = load ptr, ptr %83, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre173.pre, i64 %hash.0.i
  %.pre174.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre174.pre, null
  br i1 %.not29.i, label %Map_string_PropId____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i133
  %99 = phi ptr [ %.pre172, %ifend.i.i.else.i_crit_edge ], [ %89, %while.entry.i133 ]
  %100 = phi i64 [ %.pre171, %ifend.i.i.else.i_crit_edge ], [ %90, %while.entry.i133 ]
  %101 = add nuw i64 %hash.0.i, 1
  %102 = urem i64 %101, %100
  %ptridx7.i = getelementptr inbounds ptr, ptr %99, i64 %102
  %103 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %103, null
  br i1 %.not30.i, label %Map_string_PropId____getitem__.exit, label %while.entry.i133

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre174.pre, i64 0, i32 1
  %104 = load ptr, ptr %memberidx15.i, align 8
  br label %Map_string_PropId____getitem__.exit

Map_string_PropId____getitem__.exit:              ; preds = %else.i, %get_class_prop_type.exit, %while.end.i, %if.entry10.i
  %common.ret.op.i136 = phi ptr [ %104, %if.entry10.i ], [ null, %while.end.i ], [ null, %get_class_prop_type.exit ], [ null, %else.i ]
  %105 = load ptr, ptr %0, align 8
  %106 = load ptr, ptr %memberidx.i.i67, align 8
  %memberidx.i.i.i107 = getelementptr inbounds %Program, ptr %105, i64 0, i32 1
  %107 = load ptr, ptr %memberidx.i.i.i107, align 8
  %108 = load i64, ptr %106, align 4
  %memberidx.i.i.i.i108 = getelementptr inbounds %Array_Module_, ptr %107, i64 0, i32 1
  %109 = load ptr, ptr %memberidx.i.i.i.i108, align 8
  %ptridx.i.i.i.i109 = getelementptr inbounds ptr, ptr %109, i64 %108
  %110 = load ptr, ptr %ptridx.i.i.i.i109, align 8
  %memberidx2.i.i.i110 = getelementptr inbounds %Module, ptr %110, i64 0, i32 3
  %111 = load ptr, ptr %memberidx2.i.i.i110, align 8
  %memberidx3.i.i.i111 = getelementptr inbounds %TypeId, ptr %106, i64 0, i32 2
  %112 = load i64, ptr %memberidx3.i.i.i111, align 4
  %memberidx.i5.i.i.i112 = getelementptr inbounds %Array_Class_, ptr %111, i64 0, i32 1
  %113 = load ptr, ptr %memberidx.i5.i.i.i112, align 8
  %ptridx.i6.i.i.i113 = getelementptr inbounds ptr, ptr %113, i64 %112
  %114 = load ptr, ptr %ptridx.i6.i.i.i113, align 8
  %115 = load i64, ptr %62, align 4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %if.entry.i99, label %ifend.i105

if.entry.i99:                                     ; preds = %Map_string_PropId____getitem__.exit
  %memberidx1.i116 = getelementptr inbounds %Class, ptr %114, i64 0, i32 5
  %117 = load ptr, ptr %memberidx1.i116, align 8
  %memberidx2.i117 = getelementptr inbounds %PropId, ptr %62, i64 0, i32 2
  %118 = load i64, ptr %memberidx2.i117, align 4
  %memberidx.i12.i118 = getelementptr inbounds %Array_ClassMethod_, ptr %117, i64 0, i32 1
  %119 = load ptr, ptr %memberidx.i12.i118, align 8
  %ptridx.i13.i119 = getelementptr inbounds ptr, ptr %119, i64 %118
  %120 = load ptr, ptr %ptridx.i13.i119, align 8
  %memberidx3.i120 = getelementptr inbounds %ClassMethod, ptr %120, i64 0, i32 2
  %memberidx3.i98 = getelementptr inbounds %ClassMethod, ptr %120, i64 0, i32 1
  br label %is_class_prop_static.exit

ifend.i105:                                       ; preds = %Map_string_PropId____getitem__.exit
  %memberidx4.i122 = getelementptr inbounds %Class, ptr %114, i64 0, i32 4
  %121 = load ptr, ptr %memberidx4.i122, align 8
  %memberidx5.i123 = getelementptr inbounds %PropId, ptr %62, i64 0, i32 2
  %122 = load i64, ptr %memberidx5.i123, align 4
  %memberidx.i11.i124 = getelementptr inbounds %Array_ClassField_, ptr %121, i64 0, i32 1
  %123 = load ptr, ptr %memberidx.i11.i124, align 8
  %ptridx.i.i125 = getelementptr inbounds ptr, ptr %123, i64 %122
  %124 = load ptr, ptr %ptridx.i.i125, align 8
  %memberidx6.i126 = getelementptr inbounds %ClassField, ptr %124, i64 0, i32 2
  %memberidx6.i104 = getelementptr inbounds %ClassField, ptr %124, i64 0, i32 1
  br label %is_class_prop_static.exit

is_class_prop_static.exit:                        ; preds = %if.entry.i99, %ifend.i105
  %common.ret.op.i115151.in = phi ptr [ %memberidx3.i120, %if.entry.i99 ], [ %memberidx6.i126, %ifend.i105 ]
  %common.ret.op.in.i92 = phi ptr [ %memberidx3.i98, %if.entry.i99 ], [ %memberidx6.i104, %ifend.i105 ]
  %common.ret.op.i93 = load i1, ptr %common.ret.op.in.i92, align 1
  br i1 %common.ret.op.i93, label %for.incr, label %ifend15

for.incr:                                         ; preds = %ifend31, %ifend15, %is_class_prop_static.exit
  %125 = add nsw i64 %60, -1
  store i64 %125, ptr %memberidx2.i.i64, align 4
  %126 = icmp sgt i64 %60, 0
  br i1 %126, label %while.entry.i78, label %MapIterator_string_PropId__next.exit83

while.entry.i78:                                  ; preds = %for.incr, %ifend.i82
  %127 = phi i64 [ %130, %ifend.i82 ], [ %125, %for.incr ]
  %128 = phi ptr [ %incdec.ptr.i76, %ifend.i82 ], [ %incdec.ptr.i76.lcssa161, %for.incr ]
  %incdec.ptr.i76 = getelementptr inbounds ptr, ptr %128, i64 1
  %129 = load ptr, ptr %128, align 8
  %.not.i77 = icmp eq ptr %129, null
  br i1 %.not.i77, label %ifend.i82, label %MapIterator_string_PropId__next.exit83

ifend.i82:                                        ; preds = %while.entry.i78
  %130 = add nsw i64 %127, -1
  store i64 %130, ptr %memberidx2.i.i64, align 4
  %.not181 = icmp eq i64 %127, 0
  br i1 %.not181, label %MapIterator_string_PropId__next.exit83, label %while.entry.i78

MapIterator_string_PropId__next.exit83:           ; preds = %while.entry.i78, %ifend.i82, %for.incr
  %131 = phi i64 [ %125, %for.incr ], [ %127, %while.entry.i78 ], [ -1, %ifend.i82 ]
  %incdec.ptr.i76.lcssa160 = phi ptr [ %incdec.ptr.i76.lcssa161, %for.incr ], [ %incdec.ptr.i76, %ifend.i82 ], [ %incdec.ptr.i76, %while.entry.i78 ]
  %storemerge = icmp slt i64 %storemerge153157.in, 2
  br i1 %storemerge, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %MapIterator_string_PropId__next.exit83
  store ptr %incdec.ptr.i76.lcssa160, ptr %memberidx1.i.i63, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %MapIterator_string_PropId__next.exit
  tail call void @free(ptr nonnull %47)
  ret void

ifend15:                                          ; preds = %is_class_prop_static.exit
  %common.ret.op.i115151 = load i64, ptr %common.ret.op.i115151.in, align 4
  %132 = icmp ne i64 %common.ret.op.i115151, 1
  %133 = load i64, ptr %common.ret.op.i, align 4
  %134 = icmp ne i64 %133, 15
  %.not = or i1 %132, %134
  %135 = icmp eq ptr %common.ret.op.i136, null
  %or.cond = select i1 %.not, i1 %135, i1 false
  br i1 %or.cond, label %if.entry19, label %for.incr

if.entry19:                                       ; preds = %ifend15
  %136 = icmp eq i64 %115, 1
  br i1 %136, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %if.entry19
  %137 = load i64, ptr %memberidx26, align 4
  %138 = add nsw i64 %137, 1
  store i64 %138, ptr %memberidx26, align 4
  %.pre175 = load i64, ptr %62, align 4
  br label %ifend25

ifend25:                                          ; preds = %if.entry19, %if.entry23
  %139 = phi i64 [ %115, %if.entry19 ], [ %.pre175, %if.entry23 ]
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %if.entry29, label %ifend31

if.entry29:                                       ; preds = %ifend25
  %141 = load i64, ptr %memberidx32, align 4
  %142 = add nsw i64 %141, 1
  store i64 %142, ptr %memberidx32, align 4
  br label %ifend31

ifend31:                                          ; preds = %ifend25, %if.entry29
  %143 = load ptr, ptr %memberidx10, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %143, ptr %61, ptr nonnull %62)
  br label %for.incr
}

define internal fastcc ptr @TypeChecker_check_member_access(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx.i = getelementptr inbounds %PropId, ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %memberidx.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i, align 8
  %6 = load i64, ptr %4, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %6
  %8 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %8, i64 0, i32 3
  %9 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %4, i64 0, i32 2
  %10 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %12 = load ptr, ptr %ptridx.i6.i.i, align 8
  %13 = tail call ptr @malloc(i32 0)
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i.i57 = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i.i57, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %15 = load i64, ptr %1, align 4
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %if.entry, label %else

if.entry:                                         ; preds = %2
  %memberidx2 = getelementptr inbounds %Class, ptr %12, i64 0, i32 5
  %17 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %18 = load i64, ptr %memberidx3, align 4
  %memberidx.i59 = getelementptr inbounds %Array_ClassMethod_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i59, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %19, i64 %18
  %20 = load ptr, ptr %ptridx.i, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %20, i64 0, i32 2
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %20, i64 0, i32 3
  br label %ifend

else:                                             ; preds = %2
  %memberidx6 = getelementptr inbounds %Class, ptr %12, i64 0, i32 4
  %21 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %22 = load i64, ptr %memberidx7, align 4
  %memberidx.i60 = getelementptr inbounds %Array_ClassField_, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i60, align 8
  %ptridx.i61 = getelementptr inbounds ptr, ptr %23, i64 %22
  %24 = load ptr, ptr %ptridx.i61, align 8
  %memberidx8 = getelementptr inbounds %ClassField, ptr %24, i64 0, i32 2
  %memberidx9 = getelementptr inbounds %ClassField, ptr %24, i64 0, i32 3
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %visibility.0.in = phi ptr [ %memberidx4, %if.entry ], [ %memberidx8, %else ]
  %member_name.0.in = phi ptr [ %memberidx5, %if.entry ], [ %memberidx9, %else ]
  %member_name.0 = load ptr, ptr %member_name.0.in, align 8
  %visibility.0 = load i64, ptr %visibility.0.in, align 4
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %25 = load ptr, ptr %memberidx10, align 8
  %.not = icmp eq ptr %25, null
  br i1 %.not, label %else12, label %if.entry11

if.entry11:                                       ; preds = %ifend
  %26 = load i64, ptr %25, align 4
  %27 = load ptr, ptr %12, align 8
  %28 = load i64, ptr %27, align 4
  %29 = icmp ne i64 %26, %28
  %memberidx19 = getelementptr inbounds %TypeId, ptr %27, i64 0, i32 2
  %30 = load i64, ptr %memberidx19, align 4
  %memberidx21 = getelementptr inbounds %TypeId, ptr %25, i64 0, i32 2
  %31 = load i64, ptr %memberidx21, align 4
  %32 = icmp ne i64 %30, %31
  %33 = or i1 %29, %32
  %34 = icmp eq i64 %visibility.0, 1
  %or.cond = select i1 %33, i1 %34, i1 false
  br i1 %or.cond, label %if.entry25, label %common.ret

else12:                                           ; preds = %ifend
  %.not55 = icmp eq i64 %visibility.0, 2
  br i1 %.not55, label %common.ret, label %if.entry31

common.ret.sink.split:                            ; preds = %if.entry25, %dump_access.exit
  %.sink69 = phi ptr [ %54, %dump_access.exit ], [ %37, %if.entry25 ]
  %.sink = phi ptr [ %58, %dump_access.exit ], [ %41, %if.entry25 ]
  %common.ret.op.ph = phi ptr [ %62, %dump_access.exit ], [ %45, %if.entry25 ]
  tail call void @free(ptr %.sink69)
  tail call void @free(ptr %.sink)
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %else12, %if.entry11
  %common.ret.op = phi ptr [ null, %if.entry11 ], [ null, %else12 ], [ %common.ret.op.ph, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry25:                                       ; preds = %if.entry11
  %35 = load ptr, ptr %member_name.0, align 8
  %memberidx28 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %35, i64 0, i32 5
  %36 = load ptr, ptr %memberidx28, align 8
  %37 = tail call ptr %36(ptr nonnull %member_name.0)
  %memberidx29 = getelementptr inbounds %Class, ptr %12, i64 0, i32 1
  %38 = load ptr, ptr %memberidx29, align 8
  %39 = load ptr, ptr %38, align 8
  %memberidx30 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %39, i64 0, i32 5
  %40 = load ptr, ptr %memberidx30, align 8
  %41 = tail call ptr %40(ptr nonnull %38)
  %42 = alloca ptr, align 8
  %43 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %42, ptr nonnull @185, ptr %37, ptr %41)
  %44 = load ptr, ptr %42, align 8
  %45 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %45, align 8
  %memberidx.i62 = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  store ptr %44, ptr %memberidx.i62, align 8
  %memberidx1.i63 = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  store i64 %43, ptr %memberidx1.i63, align 4
  %memberidx2.i64 = getelementptr inbounds %string, ptr %45, i64 0, i32 3
  store i64 %43, ptr %memberidx2.i64, align 4
  br label %common.ret.sink.split

if.entry31:                                       ; preds = %else12
  %46 = load ptr, ptr %member_name.0, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %46, i64 0, i32 5
  %47 = load ptr, ptr %memberidx34, align 8
  %48 = tail call ptr %47(ptr nonnull %member_name.0)
  %49 = icmp eq i64 %visibility.0, 1
  br i1 %49, label %if.entry.i, label %ifend3.i

if.entry.i:                                       ; preds = %if.entry31
  %50 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %50, ptr noundef nonnull align 8 dereferenceable(7) @44, i64 7, i1 false)
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry31
  %51 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %51, ptr noundef nonnull align 8 dereferenceable(9) @46, i64 9, i1 false)
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i, %ifend3.i
  %.sink74 = phi ptr [ %50, %if.entry.i ], [ %51, %ifend3.i ]
  %.sink72 = phi i64 [ 7, %if.entry.i ], [ 9, %ifend3.i ]
  %52 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %52, align 8
  %memberidx.i.i.i65 = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  store ptr %.sink74, ptr %memberidx.i.i.i65, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  store i64 %.sink72, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %52, i64 0, i32 3
  store i64 %.sink72, ptr %memberidx2.i.i.i, align 4
  %53 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %54 = tail call ptr %53(ptr nonnull %52)
  %memberidx36 = getelementptr inbounds %Class, ptr %12, i64 0, i32 1
  %55 = load ptr, ptr %memberidx36, align 8
  %56 = load ptr, ptr %55, align 8
  %memberidx37 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %56, i64 0, i32 5
  %57 = load ptr, ptr %memberidx37, align 8
  %58 = tail call ptr %57(ptr nonnull %55)
  %59 = alloca ptr, align 8
  %60 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %59, ptr nonnull @186, ptr %48, ptr %54, ptr %58)
  %61 = load ptr, ptr %59, align 8
  %62 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %62, align 8
  %memberidx.i56 = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i56, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  store i64 %60, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %62, i64 0, i32 3
  store i64 %60, ptr %memberidx2.i, align 4
  tail call void @free(ptr %48)
  br label %common.ret.sink.split
}

define internal fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ReturnStatementNode, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %4, null
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %5 = load ptr, ptr %0, align 8
  %memberidx.i.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %8 = load i64, ptr %6, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %9, i64 %8
  %10 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %12 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %ptridx.i6.i.i.i.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i6.i.i.i.i, align 8
  %15 = load i64, ptr %4, align 4
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %if.entry.i
  %memberidx1.i.i = getelementptr inbounds %Class, ptr %14, i64 0, i32 5
  %17 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %18 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i12.i.i, align 8
  %ptridx.i13.i.i = getelementptr inbounds ptr, ptr %19, i64 %18
  %20 = load ptr, ptr %ptridx.i13.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %20, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i.i:                                        ; preds = %if.entry.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %14, i64 0, i32 4
  %21 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %22 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i11.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %23, i64 %22
  %24 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %24, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i:                                          ; preds = %2
  %memberidx.i.i7.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %25 = load ptr, ptr %memberidx.i.i7.i, align 8
  %26 = load i64, ptr %25, align 4
  %27 = load ptr, ptr %0, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i8.i = getelementptr inbounds %Array_Module_, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i.i.i.i8.i, align 8
  %ptridx.i.i.i.i9.i = getelementptr inbounds ptr, ptr %29, i64 %26
  %30 = load ptr, ptr %ptridx.i.i.i.i9.i, align 8
  %memberidx.i.i = getelementptr inbounds %Module, ptr %30, i64 0, i32 4
  %31 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i10.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %32 = load ptr, ptr %memberidx1.i10.i, align 8
  %memberidx2.i11.i = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %33 = load i64, ptr %memberidx2.i11.i, align 4
  %memberidx.i4.i.i = getelementptr inbounds %Array_Function_, ptr %31, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i4.i.i, align 8
  %ptridx.i.i12.i = getelementptr inbounds ptr, ptr %34, i64 %33
  %35 = load ptr, ptr %ptridx.i.i12.i, align 8
  %memberidx3.i = getelementptr inbounds %Function, ptr %35, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

TypeChecker_get_current_function_type.exit:       ; preds = %if.entry.i.i, %ifend.i.i, %ifend.i
  %common.ret.op.i.in = phi ptr [ %memberidx3.i, %ifend.i ], [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.i.in, align 8
  %memberidx1 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 2
  %36 = load ptr, ptr %memberidx1, align 8
  %37 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %37, align 4
  %memberidx.i36 = getelementptr inbounds %ReturnStatement, ptr %37, i64 0, i32 1
  store ptr null, ptr %memberidx.i36, align 8
  %.not = icmp eq ptr %3, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %TypeChecker_get_current_function_type.exit
  %38 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %36, ptr nonnull %3)
  %memberidx.i37 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %39 = load ptr, ptr %memberidx.i37, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %39, i64 0, i32 6
  %40 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %40, i64 0, i32 2
  %41 = load i64, ptr %memberidx2.i, align 4
  %42 = icmp sgt i64 %41, 0
  br i1 %42, label %common.ret, label %ifend4

else:                                             ; preds = %TypeChecker_get_current_function_type.exit
  %43 = load i64, ptr %36, align 4
  %.not35 = icmp eq i64 %43, 10
  br i1 %.not35, label %common.ret, label %if.entry15

common.ret:                                       ; preds = %ifend8, %else, %if.entry, %TypeChecker_error.exit64, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit64 ], [ null, %if.entry ], [ %37, %else ], [ %37, %ifend8 ]
  ret ptr %common.ret.op

ifend4:                                           ; preds = %if.entry
  %memberidx5 = getelementptr inbounds %Expression, ptr %38, i64 0, i32 3
  %44 = load ptr, ptr %memberidx5, align 8
  %45 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %36, ptr %44)
  br i1 %45, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %ifend4
  %46 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %36)
  %47 = load ptr, ptr %46, align 8
  %memberidx9 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %47, i64 0, i32 5
  %48 = load ptr, ptr %memberidx9, align 8
  %49 = tail call ptr %48(ptr nonnull %46)
  %50 = load ptr, ptr %memberidx5, align 8
  %51 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %50)
  %52 = load ptr, ptr %51, align 8
  %memberidx11 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %52, i64 0, i32 5
  %53 = load ptr, ptr %memberidx11, align 8
  %54 = tail call ptr %53(ptr nonnull %51)
  %55 = alloca ptr, align 8
  %56 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %55, ptr nonnull @220, ptr %49, ptr %54)
  %57 = load ptr, ptr %55, align 8
  %58 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i38 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i38, align 8
  %memberidx1.i39 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i39, align 4
  %memberidx2.i40 = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 %56, ptr %memberidx2.i40, align 4
  tail call void @free(ptr %49)
  tail call void @free(ptr %54)
  %59 = load ptr, ptr %3, align 8
  %60 = load ptr, ptr %memberidx.i37, align 8
  %memberidx1.i42 = getelementptr inbounds %Compiler, ptr %60, i64 0, i32 6
  %61 = load ptr, ptr %memberidx1.i42, align 8
  %62 = call ptr @malloc(i32 24)
  store i64 5, ptr %62, align 4
  %memberidx1.i.i43 = getelementptr inbounds %FloError, ptr %62, i64 0, i32 2
  store ptr %59, ptr %memberidx1.i.i43, align 8
  %memberidx2.i.i44 = getelementptr inbounds %FloError, ptr %62, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i44, align 8
  %memberidx.i.i45 = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i.i45, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 3
  %64 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %63, %64
  br i1 %.not.i.i, label %if.entry6.TypeChecker_error.exit_crit_edge, label %if.entry.i.i47

if.entry6.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry6
  %memberidx4.i.i48.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 1
  %.pre66 = load ptr, ptr %memberidx4.i.i48.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i47:                                   ; preds = %if.entry6
  %65 = shl nuw i64 %64, 1
  store i64 %65, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 1
  %66 = load ptr, ptr %memberidx2.i.i.i, align 8
  %67 = shl i64 %64, 4
  %68 = call ptr @realloc(ptr %66, i64 %67)
  store ptr %68, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i45, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry6.TypeChecker_error.exit_crit_edge, %if.entry.i.i47
  %69 = phi ptr [ %.pre66, %if.entry6.TypeChecker_error.exit_crit_edge ], [ %68, %if.entry.i.i47 ]
  %70 = phi i64 [ %63, %if.entry6.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i47 ]
  %71 = add nsw i64 %70, 1
  store i64 %71, ptr %memberidx.i.i45, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %69, i64 %70
  store ptr %62, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend4
  store ptr %38, ptr %memberidx.i36, align 8
  br label %common.ret

if.entry15:                                       ; preds = %else
  %72 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %72, ptr noundef nonnull align 8 dereferenceable(32) @221, i64 32, i1 false)
  %73 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %73, align 8
  %memberidx.i.i49 = getelementptr inbounds %string, ptr %73, i64 0, i32 1
  store ptr %72, ptr %memberidx.i.i49, align 8
  %memberidx1.i.i50 = getelementptr inbounds %string, ptr %73, i64 0, i32 2
  store i64 32, ptr %memberidx1.i.i50, align 4
  %memberidx2.i.i51 = getelementptr inbounds %string, ptr %73, i64 0, i32 3
  store i64 32, ptr %memberidx2.i.i51, align 4
  %74 = load ptr, ptr %1, align 8
  %memberidx.i52 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %75 = load ptr, ptr %memberidx.i52, align 8
  %memberidx1.i53 = getelementptr inbounds %Compiler, ptr %75, i64 0, i32 6
  %76 = load ptr, ptr %memberidx1.i53, align 8
  %77 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %77, align 4
  %memberidx1.i.i54 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 2
  store ptr %74, ptr %memberidx1.i.i54, align 8
  %memberidx2.i.i55 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 1
  store ptr %73, ptr %memberidx2.i.i55, align 8
  %memberidx.i.i56 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 2
  %78 = load i64, ptr %memberidx.i.i56, align 4
  %memberidx1.i2.i57 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 3
  %79 = load i64, ptr %memberidx1.i2.i57, align 4
  %.not.i.i58 = icmp slt i64 %78, %79
  br i1 %.not.i.i58, label %if.entry15.TypeChecker_error.exit64_crit_edge, label %if.entry.i.i61

if.entry15.TypeChecker_error.exit64_crit_edge:    ; preds = %if.entry15
  %memberidx4.i.i62.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 1
  %.pre68 = load ptr, ptr %memberidx4.i.i62.phi.trans.insert, align 8
  br label %TypeChecker_error.exit64

if.entry.i.i61:                                   ; preds = %if.entry15
  %80 = shl nuw i64 %79, 1
  store i64 %80, ptr %memberidx1.i2.i57, align 4
  %memberidx2.i.i.i60 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 1
  %81 = load ptr, ptr %memberidx2.i.i.i60, align 8
  %82 = shl i64 %79, 4
  %83 = tail call ptr @realloc(ptr %81, i64 %82)
  store ptr %83, ptr %memberidx2.i.i.i60, align 8
  %.pre67 = load i64, ptr %memberidx.i.i56, align 4
  br label %TypeChecker_error.exit64

TypeChecker_error.exit64:                         ; preds = %if.entry15.TypeChecker_error.exit64_crit_edge, %if.entry.i.i61
  %84 = phi ptr [ %.pre68, %if.entry15.TypeChecker_error.exit64_crit_edge ], [ %83, %if.entry.i.i61 ]
  %85 = phi i64 [ %78, %if.entry15.TypeChecker_error.exit64_crit_edge ], [ %.pre67, %if.entry.i.i61 ]
  %86 = add nsw i64 %85, 1
  store i64 %86, ptr %memberidx.i.i56, align 4
  %ptridx.i.i63 = getelementptr inbounds ptr, ptr %84, i64 %85
  store ptr %77, ptr %ptridx.i.i63, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %4)
  %.not.i = icmp eq ptr %5, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 2
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %end20, %end, %ifend53, %TypeChecker_error.exit188, %TypeChecker_error.exit172, %TypeChecker_error.exit156, %TypeChecker_error.exit129, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit129 ], [ null, %TypeChecker_error.exit156 ], [ null, %TypeChecker_error.exit172 ], [ null, %TypeChecker_error.exit188 ], [ %172, %ifend53 ], [ null, %end ], [ null, %end20 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %if.entry.i
  %8 = load ptr, ptr %4, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %8, i64 0, i32 5
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = tail call ptr %9(ptr nonnull %4)
  %11 = alloca ptr, align 8
  %12 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %11, ptr nonnull @99, ptr %10)
  %13 = load ptr, ptr %11, align 8
  %14 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %14, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  store ptr %13, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  store i64 %12, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %14, i64 0, i32 3
  store i64 %12, ptr %memberidx2.i, align 4
  tail call void @free(ptr %10)
  %15 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %15, i64 0, i32 1
  %16 = load ptr, ptr %memberidx4, align 8
  %memberidx.i105 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %17 = load ptr, ptr %memberidx.i105, align 8
  %memberidx1.i106 = getelementptr inbounds %Compiler, ptr %17, i64 0, i32 6
  %18 = load ptr, ptr %memberidx1.i106, align 8
  %19 = call ptr @malloc(i32 24)
  store i64 1, ptr %19, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 2
  store ptr %16, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 1
  store ptr %14, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 3
  %21 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %20, %21
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %.pre196 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %22 = shl nuw i64 %21, 1
  store i64 %22, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i.i, align 8
  %24 = shl i64 %21, 4
  %25 = call ptr @realloc(ptr %23, i64 %24)
  store ptr %25, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %26 = phi ptr [ %.pre196, %if.entry.TypeChecker_error.exit_crit_edge ], [ %25, %if.entry.i.i ]
  %27 = phi i64 [ %20, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %28 = add nsw i64 %27, 1
  store i64 %28, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %26, i64 %27
  store ptr %19, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %29 = load ptr, ptr %0, align 8
  %memberidx1.i107 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %30 = load ptr, ptr %memberidx1.i107, align 8
  %memberidx.i.i108 = getelementptr inbounds %Program, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i.i108, align 8
  %32 = load i64, ptr %30, align 4
  %memberidx.i.i.i109 = getelementptr inbounds %Array_Module_, ptr %31, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i.i.i109, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %33, i64 %32
  %34 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i110 = getelementptr inbounds %Module, ptr %34, i64 0, i32 7
  %35 = load ptr, ptr %memberidx2.i.i110, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %30, i64 0, i32 1
  %36 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %35, i64 0, i32 1
  %37 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %37, i64 %36
  %38 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx5 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 3
  %39 = load ptr, ptr %memberidx5, align 8
  %.not = icmp eq ptr %39, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %40 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %39)
  br label %end

false_block:                                      ; preds = %ifend
  %41 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %41, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %40, %true_block ], [ %41, %false_block ]
  %memberidx.i111 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %42 = load ptr, ptr %memberidx.i111, align 8
  %memberidx1.i112 = getelementptr inbounds %Compiler, ptr %42, i64 0, i32 6
  %43 = load ptr, ptr %memberidx1.i112, align 8
  %memberidx2.i113 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx2.i113, align 4
  %45 = icmp sgt i64 %44, 0
  br i1 %45, label %common.ret, label %ifend9

ifend9:                                           ; preds = %end
  %memberidx10 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 4
  %46 = load ptr, ptr %memberidx10, align 8
  %47 = icmp eq ptr %46, null
  %48 = load i64, ptr %ternary, align 4
  %49 = icmp eq i64 %48, 20
  %50 = and i1 %47, %49
  br i1 %50, label %if.entry12, label %ifend14

if.entry12:                                       ; preds = %ifend9
  %51 = load ptr, ptr %4, align 8
  %memberidx15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %51, i64 0, i32 5
  %52 = load ptr, ptr %memberidx15, align 8
  %53 = tail call ptr %52(ptr nonnull %4)
  %54 = alloca ptr, align 8
  %55 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %54, ptr nonnull @209, ptr %53)
  %56 = load ptr, ptr %54, align 8
  %57 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %57, align 8
  %memberidx.i114 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  store ptr %56, ptr %memberidx.i114, align 8
  %memberidx1.i115 = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  store i64 %55, ptr %memberidx1.i115, align 4
  %memberidx2.i116 = getelementptr inbounds %string, ptr %57, i64 0, i32 3
  store i64 %55, ptr %memberidx2.i116, align 4
  tail call void @free(ptr %53)
  %58 = load ptr, ptr %memberidx, align 8
  %memberidx17 = getelementptr inbounds %Token, ptr %58, i64 0, i32 1
  %59 = load ptr, ptr %memberidx17, align 8
  %60 = load ptr, ptr %memberidx.i111, align 8
  %memberidx1.i118 = getelementptr inbounds %Compiler, ptr %60, i64 0, i32 6
  %61 = load ptr, ptr %memberidx1.i118, align 8
  %62 = call ptr @malloc(i32 24)
  store i64 4, ptr %62, align 4
  %memberidx1.i.i119 = getelementptr inbounds %FloError, ptr %62, i64 0, i32 2
  store ptr %59, ptr %memberidx1.i.i119, align 8
  %memberidx2.i.i120 = getelementptr inbounds %FloError, ptr %62, i64 0, i32 1
  store ptr %57, ptr %memberidx2.i.i120, align 8
  %memberidx.i.i121 = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i.i121, align 4
  %memberidx1.i2.i122 = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 3
  %64 = load i64, ptr %memberidx1.i2.i122, align 4
  %.not.i.i123 = icmp slt i64 %63, %64
  br i1 %.not.i.i123, label %if.entry12.TypeChecker_error.exit129_crit_edge, label %if.entry.i.i126

if.entry12.TypeChecker_error.exit129_crit_edge:   ; preds = %if.entry12
  %memberidx4.i.i127.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 1
  %.pre211 = load ptr, ptr %memberidx4.i.i127.phi.trans.insert, align 8
  br label %TypeChecker_error.exit129

if.entry.i.i126:                                  ; preds = %if.entry12
  %65 = shl nuw i64 %64, 1
  store i64 %65, ptr %memberidx1.i2.i122, align 4
  %memberidx2.i.i.i125 = getelementptr inbounds %Array_FloError_, ptr %61, i64 0, i32 1
  %66 = load ptr, ptr %memberidx2.i.i.i125, align 8
  %67 = shl i64 %64, 4
  %68 = call ptr @realloc(ptr %66, i64 %67)
  store ptr %68, ptr %memberidx2.i.i.i125, align 8
  %.pre210 = load i64, ptr %memberidx.i.i121, align 4
  br label %TypeChecker_error.exit129

TypeChecker_error.exit129:                        ; preds = %if.entry12.TypeChecker_error.exit129_crit_edge, %if.entry.i.i126
  %69 = phi ptr [ %.pre211, %if.entry12.TypeChecker_error.exit129_crit_edge ], [ %68, %if.entry.i.i126 ]
  %70 = phi i64 [ %63, %if.entry12.TypeChecker_error.exit129_crit_edge ], [ %.pre210, %if.entry.i.i126 ]
  %71 = add nsw i64 %70, 1
  store i64 %71, ptr %memberidx.i.i121, align 4
  %ptridx.i.i128 = getelementptr inbounds ptr, ptr %69, i64 %70
  store ptr %62, ptr %ptridx.i.i128, align 8
  br label %common.ret

ifend14:                                          ; preds = %ifend9
  br i1 %47, label %ifend29, label %end20

end20:                                            ; preds = %ifend14
  %72 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %46)
  %.pre197 = load ptr, ptr %memberidx.i111, align 8
  %memberidx1.i131.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre197, i64 0, i32 6
  %.pre198 = load ptr, ptr %memberidx1.i131.phi.trans.insert, align 8
  %memberidx2.i132.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre198, i64 0, i32 2
  %.pre199 = load i64, ptr %memberidx2.i132.phi.trans.insert, align 4
  %73 = icmp sgt i64 %.pre199, 0
  br i1 %73, label %common.ret, label %ifend26

ifend26:                                          ; preds = %end20
  %.not101 = icmp eq ptr %72, null
  br i1 %.not101, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend26
  %memberidx.i133 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i133, align 4
  %75 = icmp eq i64 %74, 5
  %memberidx30 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  %76 = load ptr, ptr %memberidx30, align 8
  %77 = load i64, ptr %76, align 4
  %78 = icmp eq i64 %77, 20
  %79 = and i1 %75, %78
  br i1 %79, label %if.entry32, label %ifend34

ifend29:                                          ; preds = %ifend14, %if.entry46, %ifend40, %ifend26
  %ternary23215218 = phi ptr [ %72, %if.entry46 ], [ %72, %ifend40 ], [ null, %ifend26 ], [ null, %ifend14 ]
  %var_type.0 = phi ptr [ %149, %if.entry46 ], [ %ternary, %ifend40 ], [ %ternary, %ifend26 ], [ %ternary, %ifend14 ]
  %memberidx50 = getelementptr inbounds %Scope, ptr %38, i64 0, i32 1
  %80 = load ptr, ptr %memberidx50, align 8
  %81 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %4)
  %memberidx.i134 = getelementptr inbounds %Map_string_VarId_, ptr %80, i64 0, i32 1
  %82 = load i64, ptr %memberidx.i134, align 4
  %83 = urem i64 %81, %82
  %84 = load ptr, ptr %80, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %84, i64 %83
  %85 = load ptr, ptr %ptridx.i, align 8
  %.not.i135 = icmp eq ptr %85, null
  br i1 %.not.i135, label %ifend53, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend29
  %memberidx1.i.i137 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i140 = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %86 = phi ptr [ %96, %else.i ], [ %84, %while.entry.i.preheader ]
  %87 = phi i64 [ %97, %else.i ], [ %82, %while.entry.i.preheader ]
  %88 = phi ptr [ %100, %else.i ], [ %85, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %99, %else.i ], [ %83, %while.entry.i.preheader ]
  %89 = load ptr, ptr %88, align 8
  %memberidx.i.i136 = getelementptr inbounds %string, ptr %89, i64 0, i32 2
  %90 = load i64, ptr %memberidx.i.i136, align 4
  %91 = load i64, ptr %memberidx1.i.i137, align 4
  %.not.i.i138 = icmp eq i64 %90, %91
  br i1 %.not.i.i138, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i139 = getelementptr inbounds %string, ptr %89, i64 0, i32 1
  %92 = load ptr, ptr %memberidx2.i.i139, align 8
  %93 = load ptr, ptr %memberidx3.i.i140, align 8
  %94 = tail call i64 @memcmp(ptr %92, ptr %93, i64 %90)
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre204 = load i64, ptr %memberidx.i134, align 4
  %.pre205 = load ptr, ptr %80, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre206.pre = load ptr, ptr %80, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre206.pre, i64 %hash.0.i
  %.pre207.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre207.pre, null
  br i1 %.not29.i, label %ifend53, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %96 = phi ptr [ %.pre205, %ifend.i.i.else.i_crit_edge ], [ %86, %while.entry.i ]
  %97 = phi i64 [ %.pre204, %ifend.i.i.else.i_crit_edge ], [ %87, %while.entry.i ]
  %98 = add nuw i64 %hash.0.i, 1
  %99 = urem i64 %98, %97
  %ptridx7.i = getelementptr inbounds ptr, ptr %96, i64 %99
  %100 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %100, null
  br i1 %.not30.i, label %ifend53, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre207.pre, i64 0, i32 1
  %101 = load ptr, ptr %memberidx15.i, align 8
  %phi.cmp = icmp eq ptr %101, null
  br i1 %phi.cmp, label %ifend53, label %if.entry51

if.entry32:                                       ; preds = %if.entry27
  %102 = tail call ptr @malloc(i32 69)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %102, ptr noundef nonnull align 8 dereferenceable(69) @210, i64 69, i1 false)
  %103 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %103, align 8
  %memberidx.i.i141 = getelementptr inbounds %string, ptr %103, i64 0, i32 1
  store ptr %102, ptr %memberidx.i.i141, align 8
  %memberidx1.i.i142 = getelementptr inbounds %string, ptr %103, i64 0, i32 2
  store i64 69, ptr %memberidx1.i.i142, align 4
  %memberidx2.i.i143 = getelementptr inbounds %string, ptr %103, i64 0, i32 3
  store i64 69, ptr %memberidx2.i.i143, align 4
  %104 = load ptr, ptr %1, align 8
  %105 = load ptr, ptr %memberidx.i111, align 8
  %memberidx1.i145 = getelementptr inbounds %Compiler, ptr %105, i64 0, i32 6
  %106 = load ptr, ptr %memberidx1.i145, align 8
  %107 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %107, align 4
  %memberidx1.i.i146 = getelementptr inbounds %FloError, ptr %107, i64 0, i32 2
  store ptr %104, ptr %memberidx1.i.i146, align 8
  %memberidx2.i.i147 = getelementptr inbounds %FloError, ptr %107, i64 0, i32 1
  store ptr %103, ptr %memberidx2.i.i147, align 8
  %memberidx.i.i148 = getelementptr inbounds %Array_FloError_, ptr %106, i64 0, i32 2
  %108 = load i64, ptr %memberidx.i.i148, align 4
  %memberidx1.i2.i149 = getelementptr inbounds %Array_FloError_, ptr %106, i64 0, i32 3
  %109 = load i64, ptr %memberidx1.i2.i149, align 4
  %.not.i.i150 = icmp slt i64 %108, %109
  br i1 %.not.i.i150, label %if.entry32.TypeChecker_error.exit156_crit_edge, label %if.entry.i.i153

if.entry32.TypeChecker_error.exit156_crit_edge:   ; preds = %if.entry32
  %memberidx4.i.i154.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %106, i64 0, i32 1
  %.pre203 = load ptr, ptr %memberidx4.i.i154.phi.trans.insert, align 8
  br label %TypeChecker_error.exit156

if.entry.i.i153:                                  ; preds = %if.entry32
  %110 = shl nuw i64 %109, 1
  store i64 %110, ptr %memberidx1.i2.i149, align 4
  %memberidx2.i.i.i152 = getelementptr inbounds %Array_FloError_, ptr %106, i64 0, i32 1
  %111 = load ptr, ptr %memberidx2.i.i.i152, align 8
  %112 = shl i64 %109, 4
  %113 = tail call ptr @realloc(ptr %111, i64 %112)
  store ptr %113, ptr %memberidx2.i.i.i152, align 8
  %.pre202 = load i64, ptr %memberidx.i.i148, align 4
  br label %TypeChecker_error.exit156

TypeChecker_error.exit156:                        ; preds = %if.entry32.TypeChecker_error.exit156_crit_edge, %if.entry.i.i153
  %114 = phi ptr [ %.pre203, %if.entry32.TypeChecker_error.exit156_crit_edge ], [ %113, %if.entry.i.i153 ]
  %115 = phi i64 [ %108, %if.entry32.TypeChecker_error.exit156_crit_edge ], [ %.pre202, %if.entry.i.i153 ]
  %116 = add nsw i64 %115, 1
  store i64 %116, ptr %memberidx.i.i148, align 4
  %ptridx.i.i155 = getelementptr inbounds ptr, ptr %114, i64 %115
  store ptr %107, ptr %ptridx.i.i155, align 8
  br label %common.ret

ifend34:                                          ; preds = %if.entry27
  %117 = load i64, ptr %ternary, align 4
  %118 = icmp eq i64 %117, 20
  %119 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %76)
  %120 = or i1 %119, %118
  br i1 %120, label %ifend40, label %if.entry38

if.entry38:                                       ; preds = %ifend34
  %121 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %122 = load ptr, ptr %121, align 8
  %memberidx41 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %122, i64 0, i32 5
  %123 = load ptr, ptr %memberidx41, align 8
  %124 = tail call ptr %123(ptr nonnull %121)
  %125 = load ptr, ptr %memberidx30, align 8
  %126 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %125)
  %127 = load ptr, ptr %126, align 8
  %memberidx43 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %127, i64 0, i32 5
  %128 = load ptr, ptr %memberidx43, align 8
  %129 = tail call ptr %128(ptr nonnull %126)
  %130 = alloca ptr, align 8
  %131 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %130, ptr nonnull @211, ptr %124, ptr %129)
  %132 = load ptr, ptr %130, align 8
  %133 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %133, align 8
  %memberidx.i157 = getelementptr inbounds %string, ptr %133, i64 0, i32 1
  store ptr %132, ptr %memberidx.i157, align 8
  %memberidx1.i158 = getelementptr inbounds %string, ptr %133, i64 0, i32 2
  store i64 %131, ptr %memberidx1.i158, align 4
  %memberidx2.i159 = getelementptr inbounds %string, ptr %133, i64 0, i32 3
  store i64 %131, ptr %memberidx2.i159, align 4
  tail call void @free(ptr %124)
  tail call void @free(ptr %129)
  %134 = load ptr, ptr %1, align 8
  %135 = load ptr, ptr %memberidx.i111, align 8
  %memberidx1.i161 = getelementptr inbounds %Compiler, ptr %135, i64 0, i32 6
  %136 = load ptr, ptr %memberidx1.i161, align 8
  %137 = call ptr @malloc(i32 24)
  store i64 5, ptr %137, align 4
  %memberidx1.i.i162 = getelementptr inbounds %FloError, ptr %137, i64 0, i32 2
  store ptr %134, ptr %memberidx1.i.i162, align 8
  %memberidx2.i.i163 = getelementptr inbounds %FloError, ptr %137, i64 0, i32 1
  store ptr %133, ptr %memberidx2.i.i163, align 8
  %memberidx.i.i164 = getelementptr inbounds %Array_FloError_, ptr %136, i64 0, i32 2
  %138 = load i64, ptr %memberidx.i.i164, align 4
  %memberidx1.i2.i165 = getelementptr inbounds %Array_FloError_, ptr %136, i64 0, i32 3
  %139 = load i64, ptr %memberidx1.i2.i165, align 4
  %.not.i.i166 = icmp slt i64 %138, %139
  br i1 %.not.i.i166, label %if.entry38.TypeChecker_error.exit172_crit_edge, label %if.entry.i.i169

if.entry38.TypeChecker_error.exit172_crit_edge:   ; preds = %if.entry38
  %memberidx4.i.i170.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %136, i64 0, i32 1
  %.pre201 = load ptr, ptr %memberidx4.i.i170.phi.trans.insert, align 8
  br label %TypeChecker_error.exit172

if.entry.i.i169:                                  ; preds = %if.entry38
  %140 = shl nuw i64 %139, 1
  store i64 %140, ptr %memberidx1.i2.i165, align 4
  %memberidx2.i.i.i168 = getelementptr inbounds %Array_FloError_, ptr %136, i64 0, i32 1
  %141 = load ptr, ptr %memberidx2.i.i.i168, align 8
  %142 = shl i64 %139, 4
  %143 = call ptr @realloc(ptr %141, i64 %142)
  store ptr %143, ptr %memberidx2.i.i.i168, align 8
  %.pre200 = load i64, ptr %memberidx.i.i164, align 4
  br label %TypeChecker_error.exit172

TypeChecker_error.exit172:                        ; preds = %if.entry38.TypeChecker_error.exit172_crit_edge, %if.entry.i.i169
  %144 = phi ptr [ %.pre201, %if.entry38.TypeChecker_error.exit172_crit_edge ], [ %143, %if.entry.i.i169 ]
  %145 = phi i64 [ %138, %if.entry38.TypeChecker_error.exit172_crit_edge ], [ %.pre200, %if.entry.i.i169 ]
  %146 = add nsw i64 %145, 1
  store i64 %146, ptr %memberidx.i.i164, align 4
  %ptridx.i.i171 = getelementptr inbounds ptr, ptr %144, i64 %145
  store ptr %137, ptr %ptridx.i.i171, align 8
  br label %common.ret

ifend40:                                          ; preds = %ifend34
  %147 = load i64, ptr %ternary, align 4
  %148 = icmp eq i64 %147, 20
  br i1 %148, label %if.entry46, label %ifend29

if.entry46:                                       ; preds = %ifend40
  %149 = load ptr, ptr %memberidx30, align 8
  br label %ifend29

if.entry51:                                       ; preds = %if.entry10.i
  %150 = load ptr, ptr %4, align 8
  %memberidx54 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %150, i64 0, i32 5
  %151 = load ptr, ptr %memberidx54, align 8
  %152 = tail call ptr %151(ptr nonnull %4)
  %153 = alloca ptr, align 8
  %154 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %153, ptr nonnull @212, ptr %152)
  %155 = load ptr, ptr %153, align 8
  %156 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %156, align 8
  %memberidx.i173 = getelementptr inbounds %string, ptr %156, i64 0, i32 1
  store ptr %155, ptr %memberidx.i173, align 8
  %memberidx1.i174 = getelementptr inbounds %string, ptr %156, i64 0, i32 2
  store i64 %154, ptr %memberidx1.i174, align 4
  %memberidx2.i175 = getelementptr inbounds %string, ptr %156, i64 0, i32 3
  store i64 %154, ptr %memberidx2.i175, align 4
  tail call void @free(ptr %152)
  %157 = load ptr, ptr %memberidx, align 8
  %memberidx56 = getelementptr inbounds %Token, ptr %157, i64 0, i32 1
  %158 = load ptr, ptr %memberidx56, align 8
  %159 = load ptr, ptr %memberidx.i111, align 8
  %memberidx1.i177 = getelementptr inbounds %Compiler, ptr %159, i64 0, i32 6
  %160 = load ptr, ptr %memberidx1.i177, align 8
  %161 = call ptr @malloc(i32 24)
  store i64 1, ptr %161, align 4
  %memberidx1.i.i178 = getelementptr inbounds %FloError, ptr %161, i64 0, i32 2
  store ptr %158, ptr %memberidx1.i.i178, align 8
  %memberidx2.i.i179 = getelementptr inbounds %FloError, ptr %161, i64 0, i32 1
  store ptr %156, ptr %memberidx2.i.i179, align 8
  %memberidx.i.i180 = getelementptr inbounds %Array_FloError_, ptr %160, i64 0, i32 2
  %162 = load i64, ptr %memberidx.i.i180, align 4
  %memberidx1.i2.i181 = getelementptr inbounds %Array_FloError_, ptr %160, i64 0, i32 3
  %163 = load i64, ptr %memberidx1.i2.i181, align 4
  %.not.i.i182 = icmp slt i64 %162, %163
  br i1 %.not.i.i182, label %if.entry51.TypeChecker_error.exit188_crit_edge, label %if.entry.i.i185

if.entry51.TypeChecker_error.exit188_crit_edge:   ; preds = %if.entry51
  %memberidx4.i.i186.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %160, i64 0, i32 1
  %.pre209 = load ptr, ptr %memberidx4.i.i186.phi.trans.insert, align 8
  br label %TypeChecker_error.exit188

if.entry.i.i185:                                  ; preds = %if.entry51
  %164 = shl nuw i64 %163, 1
  store i64 %164, ptr %memberidx1.i2.i181, align 4
  %memberidx2.i.i.i184 = getelementptr inbounds %Array_FloError_, ptr %160, i64 0, i32 1
  %165 = load ptr, ptr %memberidx2.i.i.i184, align 8
  %166 = shl i64 %163, 4
  %167 = call ptr @realloc(ptr %165, i64 %166)
  store ptr %167, ptr %memberidx2.i.i.i184, align 8
  %.pre208 = load i64, ptr %memberidx.i.i180, align 4
  br label %TypeChecker_error.exit188

TypeChecker_error.exit188:                        ; preds = %if.entry51.TypeChecker_error.exit188_crit_edge, %if.entry.i.i185
  %168 = phi ptr [ %.pre209, %if.entry51.TypeChecker_error.exit188_crit_edge ], [ %167, %if.entry.i.i185 ]
  %169 = phi i64 [ %162, %if.entry51.TypeChecker_error.exit188_crit_edge ], [ %.pre208, %if.entry.i.i185 ]
  %170 = add nsw i64 %169, 1
  store i64 %170, ptr %memberidx.i.i180, align 4
  %ptridx.i.i187 = getelementptr inbounds ptr, ptr %168, i64 %169
  store ptr %161, ptr %ptridx.i.i187, align 8
  br label %common.ret

ifend53:                                          ; preds = %else.i, %ifend29, %while.end.i, %if.entry10.i
  %171 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %4, ptr %ternary23215218, ptr %var_type.0)
  %172 = tail call ptr @malloc(i32 25)
  %memberidx57 = getelementptr inbounds %Var, ptr %171, i64 0, i32 1
  %173 = load ptr, ptr %memberidx57, align 8
  store i64 1, ptr %172, align 4
  %memberidx.i189 = getelementptr inbounds %VarDeclaration, ptr %172, i64 0, i32 2
  store ptr %173, ptr %memberidx.i189, align 8
  %memberidx1.i190 = getelementptr inbounds %VarDeclaration, ptr %172, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i190, align 8
  %memberidx2.i191 = getelementptr inbounds %VarDeclaration, ptr %172, i64 0, i32 3
  store i1 false, ptr %memberidx2.i191, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i, align 8
  %8 = load i64, ptr %6, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %9, i64 %8
  %10 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 7
  %11 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %12 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i6.i.i, align 8
  %15 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %4)
  %.not.i = icmp eq ptr %15, null
  br i1 %.not.i, label %TypeChecker_is_constant_in_scope.exit, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %16 = load i64, ptr %15, align 4
  %17 = icmp eq i64 %16, 2
  br label %TypeChecker_is_constant_in_scope.exit

TypeChecker_is_constant_in_scope.exit:            ; preds = %2, %if.entry.i
  %is_constant.0.i = phi i1 [ %17, %if.entry.i ], [ false, %2 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %14, i64 0, i32 1
  %18 = load ptr, ptr %memberidx2, align 8
  %19 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_string_VarId_, ptr %18, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = urem i64 %19, %20
  %22 = load ptr, ptr %18, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %22, i64 %21
  %23 = load ptr, ptr %ptridx.i, align 8
  %.not.i72 = icmp eq ptr %23, null
  br i1 %.not.i72, label %Map_string_VarId____getitem__.exit, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %TypeChecker_is_constant_in_scope.exit
  %memberidx1.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i75 = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %24 = phi ptr [ %34, %else.i ], [ %22, %while.entry.i.preheader ]
  %25 = phi i64 [ %35, %else.i ], [ %20, %while.entry.i.preheader ]
  %26 = phi ptr [ %38, %else.i ], [ %23, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %37, %else.i ], [ %21, %while.entry.i.preheader ]
  %27 = load ptr, ptr %26, align 8
  %memberidx.i.i73 = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i.i73, align 4
  %29 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %28, %29
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i74 = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2.i.i74, align 8
  %31 = load ptr, ptr %memberidx3.i.i75, align 8
  %32 = tail call i64 @memcmp(ptr %30, ptr %31, i64 %28)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre146 = load ptr, ptr %18, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre147.pre = load ptr, ptr %18, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre147.pre, i64 %hash.0.i
  %.pre148.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre148.pre, null
  br i1 %.not29.i, label %Map_string_VarId____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %34 = phi ptr [ %.pre146, %ifend.i.i.else.i_crit_edge ], [ %24, %while.entry.i ]
  %35 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %25, %while.entry.i ]
  %36 = add nuw i64 %hash.0.i, 1
  %37 = urem i64 %36, %35
  %ptridx7.i = getelementptr inbounds ptr, ptr %34, i64 %37
  %38 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %38, null
  br i1 %.not30.i, label %Map_string_VarId____getitem__.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre148.pre, i64 0, i32 1
  %39 = load ptr, ptr %memberidx15.i, align 8
  %phi.cmp = icmp ne ptr %39, null
  br label %Map_string_VarId____getitem__.exit

Map_string_VarId____getitem__.exit:               ; preds = %else.i, %TypeChecker_is_constant_in_scope.exit, %while.end.i, %if.entry10.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry10.i ], [ false, %while.end.i ], [ false, %TypeChecker_is_constant_in_scope.exit ], [ false, %else.i ]
  %40 = or i1 %is_constant.0.i, %common.ret.op.i
  br i1 %40, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend10, %end, %ifend30, %TypeChecker_error.exit139, %TypeChecker_error.exit123, %TypeChecker_error.exit106, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit106 ], [ null, %TypeChecker_error.exit123 ], [ null, %TypeChecker_error.exit139 ], [ %143, %ifend30 ], [ null, %end ], [ null, %ifend10 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %Map_string_VarId____getitem__.exit
  %41 = load ptr, ptr %4, align 8
  %memberidx3 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %41, i64 0, i32 5
  %42 = load ptr, ptr %memberidx3, align 8
  %43 = tail call ptr %42(ptr nonnull %4)
  %44 = alloca ptr, align 8
  %45 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %44, ptr nonnull @99, ptr %43)
  %46 = load ptr, ptr %44, align 8
  %47 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %47, align 8
  %memberidx.i76 = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  store ptr %46, ptr %memberidx.i76, align 8
  %memberidx1.i77 = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  store i64 %45, ptr %memberidx1.i77, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %47, i64 0, i32 3
  store i64 %45, ptr %memberidx2.i, align 4
  tail call void @free(ptr %43)
  %48 = load ptr, ptr %memberidx, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %48, i64 0, i32 1
  %49 = load ptr, ptr %memberidx5, align 8
  %memberidx.i78 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %50 = load ptr, ptr %memberidx.i78, align 8
  %memberidx1.i79 = getelementptr inbounds %Compiler, ptr %50, i64 0, i32 6
  %51 = load ptr, ptr %memberidx1.i79, align 8
  %52 = call ptr @malloc(i32 24)
  store i64 1, ptr %52, align 4
  %memberidx1.i.i80 = getelementptr inbounds %FloError, ptr %52, i64 0, i32 2
  store ptr %49, ptr %memberidx1.i.i80, align 8
  %memberidx2.i.i81 = getelementptr inbounds %FloError, ptr %52, i64 0, i32 1
  store ptr %47, ptr %memberidx2.i.i81, align 8
  %memberidx.i.i82 = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 2
  %53 = load i64, ptr %memberidx.i.i82, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 3
  %54 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i83 = icmp slt i64 %53, %54
  br i1 %.not.i.i83, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %.pre156 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %55 = shl nuw i64 %54, 1
  store i64 %55, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %56 = load ptr, ptr %memberidx2.i.i.i, align 8
  %57 = shl i64 %54, 4
  %58 = call ptr @realloc(ptr %56, i64 %57)
  store ptr %58, ptr %memberidx2.i.i.i, align 8
  %.pre155 = load i64, ptr %memberidx.i.i82, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %59 = phi ptr [ %.pre156, %if.entry.TypeChecker_error.exit_crit_edge ], [ %58, %if.entry.i.i ]
  %60 = phi i64 [ %53, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre155, %if.entry.i.i ]
  %61 = add nsw i64 %60, 1
  store i64 %61, ptr %memberidx.i.i82, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %59, i64 %60
  store ptr %52, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_VarId____getitem__.exit
  %memberidx6 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 3
  %62 = load ptr, ptr %memberidx6, align 8
  %.not = icmp eq ptr %62, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %63 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %62)
  br label %end

false_block:                                      ; preds = %ifend
  %64 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %64, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %63, %true_block ], [ %64, %false_block ]
  %memberidx.i85 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %65 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i86 = getelementptr inbounds %Compiler, ptr %65, i64 0, i32 6
  %66 = load ptr, ptr %memberidx1.i86, align 8
  %memberidx2.i87 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 2
  %67 = load i64, ptr %memberidx2.i87, align 4
  %68 = icmp sgt i64 %67, 0
  br i1 %68, label %common.ret, label %ifend10

ifend10:                                          ; preds = %end
  %memberidx11 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 4
  %69 = load ptr, ptr %memberidx11, align 8
  %70 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %ternary, ptr %69)
  %71 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i89 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 6
  %72 = load ptr, ptr %memberidx1.i89, align 8
  %memberidx2.i90 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 2
  %73 = load i64, ptr %memberidx2.i90, align 4
  %74 = icmp sgt i64 %73, 0
  br i1 %74, label %common.ret, label %ifend14

ifend14:                                          ; preds = %ifend10
  %memberidx15 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 1
  %75 = load i1, ptr %memberidx15, align 1
  br i1 %75, label %ifend18, label %if.entry16

if.entry16:                                       ; preds = %ifend14
  %76 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %76, ptr noundef nonnull align 8 dereferenceable(48) @213, i64 48, i1 false)
  %77 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %77, align 8
  %memberidx.i.i91 = getelementptr inbounds %string, ptr %77, i64 0, i32 1
  store ptr %76, ptr %memberidx.i.i91, align 8
  %memberidx1.i.i92 = getelementptr inbounds %string, ptr %77, i64 0, i32 2
  store i64 48, ptr %memberidx1.i.i92, align 4
  %memberidx2.i.i93 = getelementptr inbounds %string, ptr %77, i64 0, i32 3
  store i64 48, ptr %memberidx2.i.i93, align 4
  %78 = load ptr, ptr %memberidx11, align 8
  %79 = load ptr, ptr %78, align 8
  %80 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i95 = getelementptr inbounds %Compiler, ptr %80, i64 0, i32 6
  %81 = load ptr, ptr %memberidx1.i95, align 8
  %82 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %82, align 4
  %memberidx1.i.i96 = getelementptr inbounds %FloError, ptr %82, i64 0, i32 2
  store ptr %79, ptr %memberidx1.i.i96, align 8
  %memberidx2.i.i97 = getelementptr inbounds %FloError, ptr %82, i64 0, i32 1
  store ptr %77, ptr %memberidx2.i.i97, align 8
  %memberidx.i.i98 = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 2
  %83 = load i64, ptr %memberidx.i.i98, align 4
  %memberidx1.i2.i99 = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 3
  %84 = load i64, ptr %memberidx1.i2.i99, align 4
  %.not.i.i100 = icmp slt i64 %83, %84
  br i1 %.not.i.i100, label %if.entry16.TypeChecker_error.exit106_crit_edge, label %if.entry.i.i103

if.entry16.TypeChecker_error.exit106_crit_edge:   ; preds = %if.entry16
  %memberidx4.i.i104.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 1
  %.pre150 = load ptr, ptr %memberidx4.i.i104.phi.trans.insert, align 8
  br label %TypeChecker_error.exit106

if.entry.i.i103:                                  ; preds = %if.entry16
  %85 = shl nuw i64 %84, 1
  store i64 %85, ptr %memberidx1.i2.i99, align 4
  %memberidx2.i.i.i102 = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 1
  %86 = load ptr, ptr %memberidx2.i.i.i102, align 8
  %87 = shl i64 %84, 4
  %88 = tail call ptr @realloc(ptr %86, i64 %87)
  store ptr %88, ptr %memberidx2.i.i.i102, align 8
  %.pre149 = load i64, ptr %memberidx.i.i98, align 4
  br label %TypeChecker_error.exit106

TypeChecker_error.exit106:                        ; preds = %if.entry16.TypeChecker_error.exit106_crit_edge, %if.entry.i.i103
  %89 = phi ptr [ %.pre150, %if.entry16.TypeChecker_error.exit106_crit_edge ], [ %88, %if.entry.i.i103 ]
  %90 = phi i64 [ %83, %if.entry16.TypeChecker_error.exit106_crit_edge ], [ %.pre149, %if.entry.i.i103 ]
  %91 = add nsw i64 %90, 1
  store i64 %91, ptr %memberidx.i.i98, align 4
  %ptridx.i.i105 = getelementptr inbounds ptr, ptr %89, i64 %90
  store ptr %82, ptr %ptridx.i.i105, align 8
  br label %common.ret

ifend18:                                          ; preds = %ifend14
  %memberidx.i107 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 2
  %92 = load i64, ptr %memberidx.i107, align 4
  %93 = icmp eq i64 %92, 5
  %94 = load i64, ptr %ternary, align 4
  %95 = icmp eq i64 %94, 20
  %96 = and i1 %93, %95
  br i1 %96, label %if.entry22, label %ifend24

if.entry22:                                       ; preds = %ifend18
  %97 = tail call ptr @malloc(i32 69)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %97, ptr noundef nonnull align 8 dereferenceable(69) @210, i64 69, i1 false)
  %98 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %98, align 8
  %memberidx.i.i108 = getelementptr inbounds %string, ptr %98, i64 0, i32 1
  store ptr %97, ptr %memberidx.i.i108, align 8
  %memberidx1.i.i109 = getelementptr inbounds %string, ptr %98, i64 0, i32 2
  store i64 69, ptr %memberidx1.i.i109, align 4
  %memberidx2.i.i110 = getelementptr inbounds %string, ptr %98, i64 0, i32 3
  store i64 69, ptr %memberidx2.i.i110, align 4
  %99 = load ptr, ptr %1, align 8
  %100 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i112 = getelementptr inbounds %Compiler, ptr %100, i64 0, i32 6
  %101 = load ptr, ptr %memberidx1.i112, align 8
  %102 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %102, align 4
  %memberidx1.i.i113 = getelementptr inbounds %FloError, ptr %102, i64 0, i32 2
  store ptr %99, ptr %memberidx1.i.i113, align 8
  %memberidx2.i.i114 = getelementptr inbounds %FloError, ptr %102, i64 0, i32 1
  store ptr %98, ptr %memberidx2.i.i114, align 8
  %memberidx.i.i115 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 2
  %103 = load i64, ptr %memberidx.i.i115, align 4
  %memberidx1.i2.i116 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 3
  %104 = load i64, ptr %memberidx1.i2.i116, align 4
  %.not.i.i117 = icmp slt i64 %103, %104
  br i1 %.not.i.i117, label %if.entry22.TypeChecker_error.exit123_crit_edge, label %if.entry.i.i120

if.entry22.TypeChecker_error.exit123_crit_edge:   ; preds = %if.entry22
  %memberidx4.i.i121.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 1
  %.pre154 = load ptr, ptr %memberidx4.i.i121.phi.trans.insert, align 8
  br label %TypeChecker_error.exit123

if.entry.i.i120:                                  ; preds = %if.entry22
  %105 = shl nuw i64 %104, 1
  store i64 %105, ptr %memberidx1.i2.i116, align 4
  %memberidx2.i.i.i119 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 1
  %106 = load ptr, ptr %memberidx2.i.i.i119, align 8
  %107 = shl i64 %104, 4
  %108 = tail call ptr @realloc(ptr %106, i64 %107)
  store ptr %108, ptr %memberidx2.i.i.i119, align 8
  %.pre153 = load i64, ptr %memberidx.i.i115, align 4
  br label %TypeChecker_error.exit123

TypeChecker_error.exit123:                        ; preds = %if.entry22.TypeChecker_error.exit123_crit_edge, %if.entry.i.i120
  %109 = phi ptr [ %.pre154, %if.entry22.TypeChecker_error.exit123_crit_edge ], [ %108, %if.entry.i.i120 ]
  %110 = phi i64 [ %103, %if.entry22.TypeChecker_error.exit123_crit_edge ], [ %.pre153, %if.entry.i.i120 ]
  %111 = add nsw i64 %110, 1
  store i64 %111, ptr %memberidx.i.i115, align 4
  %ptridx.i.i122 = getelementptr inbounds ptr, ptr %109, i64 %110
  store ptr %102, ptr %ptridx.i.i122, align 8
  br label %common.ret

ifend24:                                          ; preds = %ifend18
  %memberidx27 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 3
  %112 = load ptr, ptr %memberidx27, align 8
  %113 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %ternary, ptr %112)
  %114 = or i1 %95, %113
  br i1 %114, label %ifend30, label %if.entry28

if.entry28:                                       ; preds = %ifend24
  %115 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %116 = load ptr, ptr %115, align 8
  %memberidx31 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %116, i64 0, i32 5
  %117 = load ptr, ptr %memberidx31, align 8
  %118 = tail call ptr %117(ptr nonnull %115)
  %119 = load ptr, ptr %memberidx27, align 8
  %120 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %119)
  %121 = load ptr, ptr %120, align 8
  %memberidx33 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %121, i64 0, i32 5
  %122 = load ptr, ptr %memberidx33, align 8
  %123 = tail call ptr %122(ptr nonnull %120)
  %124 = alloca ptr, align 8
  %125 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %124, ptr nonnull @214, ptr %118, ptr %123)
  %126 = load ptr, ptr %124, align 8
  %127 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %127, align 8
  %memberidx.i124 = getelementptr inbounds %string, ptr %127, i64 0, i32 1
  store ptr %126, ptr %memberidx.i124, align 8
  %memberidx1.i125 = getelementptr inbounds %string, ptr %127, i64 0, i32 2
  store i64 %125, ptr %memberidx1.i125, align 4
  %memberidx2.i126 = getelementptr inbounds %string, ptr %127, i64 0, i32 3
  store i64 %125, ptr %memberidx2.i126, align 4
  tail call void @free(ptr %118)
  tail call void @free(ptr %123)
  %128 = load ptr, ptr %1, align 8
  %129 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i128 = getelementptr inbounds %Compiler, ptr %129, i64 0, i32 6
  %130 = load ptr, ptr %memberidx1.i128, align 8
  %131 = call ptr @malloc(i32 24)
  store i64 5, ptr %131, align 4
  %memberidx1.i.i129 = getelementptr inbounds %FloError, ptr %131, i64 0, i32 2
  store ptr %128, ptr %memberidx1.i.i129, align 8
  %memberidx2.i.i130 = getelementptr inbounds %FloError, ptr %131, i64 0, i32 1
  store ptr %127, ptr %memberidx2.i.i130, align 8
  %memberidx.i.i131 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 2
  %132 = load i64, ptr %memberidx.i.i131, align 4
  %memberidx1.i2.i132 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 3
  %133 = load i64, ptr %memberidx1.i2.i132, align 4
  %.not.i.i133 = icmp slt i64 %132, %133
  br i1 %.not.i.i133, label %if.entry28.TypeChecker_error.exit139_crit_edge, label %if.entry.i.i136

if.entry28.TypeChecker_error.exit139_crit_edge:   ; preds = %if.entry28
  %memberidx4.i.i137.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 1
  %.pre152 = load ptr, ptr %memberidx4.i.i137.phi.trans.insert, align 8
  br label %TypeChecker_error.exit139

if.entry.i.i136:                                  ; preds = %if.entry28
  %134 = shl nuw i64 %133, 1
  store i64 %134, ptr %memberidx1.i2.i132, align 4
  %memberidx2.i.i.i135 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 1
  %135 = load ptr, ptr %memberidx2.i.i.i135, align 8
  %136 = shl i64 %133, 4
  %137 = call ptr @realloc(ptr %135, i64 %136)
  store ptr %137, ptr %memberidx2.i.i.i135, align 8
  %.pre151 = load i64, ptr %memberidx.i.i131, align 4
  br label %TypeChecker_error.exit139

TypeChecker_error.exit139:                        ; preds = %if.entry28.TypeChecker_error.exit139_crit_edge, %if.entry.i.i136
  %138 = phi ptr [ %.pre152, %if.entry28.TypeChecker_error.exit139_crit_edge ], [ %137, %if.entry.i.i136 ]
  %139 = phi i64 [ %132, %if.entry28.TypeChecker_error.exit139_crit_edge ], [ %.pre151, %if.entry.i.i136 ]
  %140 = add nsw i64 %139, 1
  store i64 %140, ptr %memberidx.i.i131, align 4
  %ptridx.i.i138 = getelementptr inbounds ptr, ptr %138, i64 %139
  store ptr %131, ptr %ptridx.i.i138, align 8
  br label %common.ret

ifend30:                                          ; preds = %ifend24
  %141 = load ptr, ptr %memberidx27, align 8
  %142 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr %4, ptr nonnull %70, ptr %141)
  %143 = tail call ptr @malloc(i32 25)
  %memberidx36 = getelementptr inbounds %Const, ptr %142, i64 0, i32 1
  %144 = load ptr, ptr %memberidx36, align 8
  store i64 2, ptr %143, align 4
  %memberidx.i140 = getelementptr inbounds %ConstDeclaration, ptr %143, i64 0, i32 2
  store ptr %144, ptr %memberidx.i140, align 8
  %memberidx1.i141 = getelementptr inbounds %ConstDeclaration, ptr %143, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i141, align 8
  %memberidx2.i142 = getelementptr inbounds %ConstDeclaration, ptr %143, i64 0, i32 3
  store i1 false, ptr %memberidx2.i142, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i, align 8
  %6 = load i64, ptr %4, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %6
  %8 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %10 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %memberidx1.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i.i79 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend5, %2
  %current_scope.0.in = phi ptr [ %ptridx.i6.i.i, %2 ], [ %ptridx.i6.i, %ifend5 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 1
  %12 = load ptr, ptr %memberidx, align 8
  %13 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_string_VarId_, ptr %12, i64 0, i32 1
  %14 = load i64, ptr %memberidx.i, align 4
  %15 = urem i64 %13, %14
  %16 = load ptr, ptr %12, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %16, i64 %15
  %17 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %17, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %while.entry, %else.i
  %18 = phi ptr [ %28, %else.i ], [ %16, %while.entry ]
  %19 = phi i64 [ %29, %else.i ], [ %14, %while.entry ]
  %20 = phi ptr [ %32, %else.i ], [ %17, %while.entry ]
  %hash.0.i = phi i64 [ %31, %else.i ], [ %15, %while.entry ]
  %21 = load ptr, ptr %20, align 8
  %memberidx.i.i77 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i.i77, align 4
  %23 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %22, %23
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i78 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  %24 = load ptr, ptr %memberidx2.i.i78, align 8
  %25 = load ptr, ptr %memberidx3.i.i79, align 8
  %26 = tail call i64 @memcmp(ptr %24, ptr %25, i64 %22)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre173 = load ptr, ptr %12, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre174.pre = load ptr, ptr %12, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre174.pre, i64 %hash.0.i
  %.pre175.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre175.pre, null
  br i1 %.not29.i, label %if.entry, label %Map_string_VarId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %28 = phi ptr [ %.pre173, %ifend.i.i.else.i_crit_edge ], [ %18, %while.entry.i ]
  %29 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %19, %while.entry.i ]
  %30 = add nuw i64 %hash.0.i, 1
  %31 = urem i64 %30, %29
  %ptridx7.i = getelementptr inbounds ptr, ptr %28, i64 %31
  %32 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %32, null
  br i1 %.not30.i, label %if.entry, label %while.entry.i

Map_string_VarId____getitem__.exit:               ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre175.pre, i64 0, i32 1
  %33 = load ptr, ptr %memberidx15.i, align 8
  %34 = icmp eq ptr %33, null
  br i1 %34, label %if.entry, label %ifend12

while.end:                                        ; preds = %ifend
  %35 = icmp eq ptr %value.1, null
  %36 = load ptr, ptr %memberidx1.i, align 8
  %37 = load i64, ptr %36, align 4
  %38 = icmp ne i64 %37, 0
  %39 = and i1 %35, %38
  br i1 %39, label %if.entry10, label %ifend12

if.entry:                                         ; preds = %else.i, %while.entry, %while.end.i, %Map_string_VarId____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 3
  %40 = load ptr, ptr %memberidx1, align 8
  %41 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %1)
  %memberidx.i80 = getelementptr inbounds %Map_string_VarId_, ptr %40, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i80, align 4
  %43 = urem i64 %41, %42
  %44 = load ptr, ptr %40, align 8
  %ptridx.i81 = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i81, align 8
  %.not.i82 = icmp eq ptr %45, null
  br i1 %.not.i82, label %ifend, label %while.entry.i88

while.entry.i88:                                  ; preds = %if.entry, %else.i100
  %46 = phi ptr [ %56, %else.i100 ], [ %44, %if.entry ]
  %47 = phi i64 [ %57, %else.i100 ], [ %42, %if.entry ]
  %48 = phi ptr [ %60, %else.i100 ], [ %45, %if.entry ]
  %hash.0.i83 = phi i64 [ %59, %else.i100 ], [ %43, %if.entry ]
  %49 = load ptr, ptr %48, align 8
  %memberidx.i.i85 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx.i.i85, align 4
  %51 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i87 = icmp eq i64 %50, %51
  br i1 %.not.i.i87, label %ifend.i.i91, label %else.i100

ifend.i.i91:                                      ; preds = %while.entry.i88
  %memberidx2.i.i89 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i89, align 8
  %53 = load ptr, ptr %memberidx3.i.i79, align 8
  %54 = tail call i64 @memcmp(ptr %52, ptr %53, i64 %50)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %while.end.i97, label %ifend.i.i91.else.i100_crit_edge

ifend.i.i91.else.i100_crit_edge:                  ; preds = %ifend.i.i91
  %.pre176 = load i64, ptr %memberidx.i80, align 4
  %.pre177 = load ptr, ptr %40, align 8
  br label %else.i100

while.end.i97:                                    ; preds = %ifend.i.i91
  %.pre178.pre = load ptr, ptr %40, align 8
  %ptridx9.i95.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre178.pre, i64 %hash.0.i83
  %.pre179.pre = load ptr, ptr %ptridx9.i95.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i96 = icmp eq ptr %.pre179.pre, null
  br i1 %.not29.i96, label %ifend, label %if.entry10.i103

else.i100:                                        ; preds = %ifend.i.i91.else.i100_crit_edge, %while.entry.i88
  %56 = phi ptr [ %.pre177, %ifend.i.i91.else.i100_crit_edge ], [ %46, %while.entry.i88 ]
  %57 = phi i64 [ %.pre176, %ifend.i.i91.else.i100_crit_edge ], [ %47, %while.entry.i88 ]
  %58 = add nuw i64 %hash.0.i83, 1
  %59 = urem i64 %58, %57
  %ptridx7.i98 = getelementptr inbounds ptr, ptr %56, i64 %59
  %60 = load ptr, ptr %ptridx7.i98, align 8
  %.not30.i99 = icmp eq ptr %60, null
  br i1 %.not30.i99, label %ifend, label %while.entry.i88

if.entry10.i103:                                  ; preds = %while.end.i97
  %memberidx15.i102 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre179.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx15.i102, align 8
  br label %ifend

ifend:                                            ; preds = %else.i100, %if.entry, %if.entry10.i103, %while.end.i97
  %value.1 = phi ptr [ %61, %if.entry10.i103 ], [ null, %while.end.i97 ], [ null, %if.entry ], [ null, %else.i100 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %62 = load ptr, ptr %memberidx2, align 8
  %63 = icmp eq ptr %62, null
  %64 = icmp ne ptr %value.1, null
  %65 = or i1 %64, %63
  br i1 %65, label %while.end, label %ifend5

ifend5:                                           ; preds = %ifend
  %66 = load ptr, ptr %0, align 8
  %memberidx.i105 = getelementptr inbounds %Program, ptr %66, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i105, align 8
  %68 = load i64, ptr %62, align 4
  %memberidx.i.i106 = getelementptr inbounds %Array_Module_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i.i106, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %69, i64 %68
  %70 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %70, i64 0, i32 7
  %71 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %62, i64 0, i32 1
  %72 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %71, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %73, i64 %72
  br label %while.entry

if.entry10:                                       ; preds = %while.end
  %74 = load ptr, ptr %0, align 8
  %memberidx16 = getelementptr inbounds %Program, ptr %74, i64 0, i32 1
  %75 = load ptr, ptr %memberidx16, align 8
  %memberidx.i107 = getelementptr inbounds %Array_Module_, ptr %75, i64 0, i32 1
  %76 = load ptr, ptr %memberidx.i107, align 8
  %77 = load ptr, ptr %76, align 8
  %memberidx17 = getelementptr inbounds %Module, ptr %77, i64 0, i32 5
  %78 = load ptr, ptr %memberidx17, align 8
  store ptr %78, ptr %memberidx1.i, align 8
  %79 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %1)
  store ptr %36, ptr %memberidx1.i, align 8
  %.not = icmp eq ptr %79, null
  br i1 %.not, label %ifend12, label %if.entry19

ifend12:                                          ; preds = %Map_string_VarId____getitem__.exit, %if.entry38, %ifend36, %if.entry10, %while.end
  %value.2 = phi ptr [ %79, %if.entry38 ], [ %79, %ifend36 ], [ null, %if.entry10 ], [ %value.1, %while.end ], [ %33, %Map_string_VarId____getitem__.exit ]
  ret ptr %value.2

if.entry19:                                       ; preds = %if.entry10
  %80 = load ptr, ptr %0, align 8
  store i1 true, ptr %80, align 1
  %81 = load i64, ptr %79, align 4
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %if.entry25, label %ifend27

if.entry25:                                       ; preds = %if.entry19
  %83 = load ptr, ptr %0, align 8
  %84 = load ptr, ptr %memberidx1.i, align 8
  %85 = load i64, ptr %84, align 4
  %memberidx1.i.i.i.i113 = getelementptr inbounds %Program, ptr %83, i64 0, i32 1
  %86 = load ptr, ptr %memberidx1.i.i.i.i113, align 8
  %memberidx.i.i.i.i.i114 = getelementptr inbounds %Array_Module_, ptr %86, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i.i.i.i.i114, align 8
  %ptridx.i.i.i.i.i115 = getelementptr inbounds ptr, ptr %87, i64 %85
  %88 = load ptr, ptr %ptridx.i.i.i.i.i115, align 8
  %memberidx1.i.i116 = getelementptr inbounds %Module, ptr %88, i64 0, i32 5
  %89 = load ptr, ptr %memberidx1.i.i116, align 8
  %90 = load i64, ptr %89, align 4
  %ptridx.i.i.i.i119 = getelementptr inbounds ptr, ptr %87, i64 %90
  %91 = load ptr, ptr %ptridx.i.i.i.i119, align 8
  %memberidx2.i.i.i120 = getelementptr inbounds %Module, ptr %91, i64 0, i32 7
  %92 = load ptr, ptr %memberidx2.i.i.i120, align 8
  %memberidx3.i.i.i121 = getelementptr inbounds %ScopeId, ptr %89, i64 0, i32 1
  %93 = load i64, ptr %memberidx3.i.i.i121, align 4
  %memberidx.i5.i.i.i122 = getelementptr inbounds %Array_Scope_, ptr %92, i64 0, i32 1
  %94 = load ptr, ptr %memberidx.i5.i.i.i122, align 8
  %ptridx.i6.i.i.i123 = getelementptr inbounds ptr, ptr %94, i64 %93
  %95 = load ptr, ptr %ptridx.i6.i.i.i123, align 8
  %memberidx.i124 = getelementptr inbounds %Scope, ptr %95, i64 0, i32 3
  %96 = load ptr, ptr %memberidx.i124, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %96, ptr %1, ptr nonnull %79)
  %.pre180 = load i64, ptr %79, align 4
  br label %ifend27

ifend27:                                          ; preds = %if.entry19, %if.entry25
  %97 = phi i64 [ %81, %if.entry19 ], [ %.pre180, %if.entry25 ]
  %98 = add i64 %97, -1
  %99 = icmp ult i64 %98, 2
  br i1 %99, label %if.entry30, label %ifend32

if.entry30:                                       ; preds = %ifend27
  %100 = load ptr, ptr %0, align 8
  %101 = load ptr, ptr %memberidx1.i, align 8
  %102 = load i64, ptr %101, align 4
  %memberidx1.i.i.i.i126 = getelementptr inbounds %Program, ptr %100, i64 0, i32 1
  %103 = load ptr, ptr %memberidx1.i.i.i.i126, align 8
  %memberidx.i.i.i.i.i127 = getelementptr inbounds %Array_Module_, ptr %103, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i.i.i.i.i127, align 8
  %ptridx.i.i.i.i.i128 = getelementptr inbounds ptr, ptr %104, i64 %102
  %105 = load ptr, ptr %ptridx.i.i.i.i.i128, align 8
  %memberidx1.i.i129 = getelementptr inbounds %Module, ptr %105, i64 0, i32 5
  %106 = load ptr, ptr %memberidx1.i.i129, align 8
  %107 = load i64, ptr %106, align 4
  %ptridx.i.i.i.i132 = getelementptr inbounds ptr, ptr %104, i64 %107
  %108 = load ptr, ptr %ptridx.i.i.i.i132, align 8
  %memberidx2.i.i.i133 = getelementptr inbounds %Module, ptr %108, i64 0, i32 7
  %109 = load ptr, ptr %memberidx2.i.i.i133, align 8
  %memberidx3.i.i.i134 = getelementptr inbounds %ScopeId, ptr %106, i64 0, i32 1
  %110 = load i64, ptr %memberidx3.i.i.i134, align 4
  %memberidx.i5.i.i.i135 = getelementptr inbounds %Array_Scope_, ptr %109, i64 0, i32 1
  %111 = load ptr, ptr %memberidx.i5.i.i.i135, align 8
  %ptridx.i6.i.i.i136 = getelementptr inbounds ptr, ptr %111, i64 %110
  %112 = load ptr, ptr %ptridx.i6.i.i.i136, align 8
  %memberidx.i137 = getelementptr inbounds %Scope, ptr %112, i64 0, i32 1
  %113 = load ptr, ptr %memberidx.i137, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %113, ptr %1, ptr nonnull %79)
  %.pr = load i64, ptr %79, align 4
  br label %ifend32

ifend32:                                          ; preds = %ifend27, %if.entry30
  %114 = phi i64 [ %97, %ifend27 ], [ %.pr, %if.entry30 ]
  %115 = icmp eq i64 %114, 3
  br i1 %115, label %if.entry34, label %ifend36

if.entry34:                                       ; preds = %ifend32
  %116 = tail call ptr @malloc(i32 24)
  %memberidx.i138 = getelementptr inbounds %VarId, ptr %79, i64 0, i32 1
  %117 = load i64, ptr %memberidx.i138, align 4
  %memberidx1.i139 = getelementptr inbounds %VarId, ptr %79, i64 0, i32 2
  %118 = load i64, ptr %memberidx1.i139, align 4
  store i64 %117, ptr %116, align 4
  %memberidx1.i.i.i140 = getelementptr inbounds %TypeId, ptr %116, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i140, align 4
  %memberidx2.i.i.i141 = getelementptr inbounds %TypeId, ptr %116, i64 0, i32 2
  store i64 %118, ptr %memberidx2.i.i.i141, align 4
  %119 = load ptr, ptr %0, align 8
  %120 = load ptr, ptr %memberidx1.i, align 8
  %121 = load i64, ptr %120, align 4
  %memberidx1.i.i.i.i143 = getelementptr inbounds %Program, ptr %119, i64 0, i32 1
  %122 = load ptr, ptr %memberidx1.i.i.i.i143, align 8
  %memberidx.i.i.i.i.i144 = getelementptr inbounds %Array_Module_, ptr %122, i64 0, i32 1
  %123 = load ptr, ptr %memberidx.i.i.i.i.i144, align 8
  %ptridx.i.i.i.i.i145 = getelementptr inbounds ptr, ptr %123, i64 %121
  %124 = load ptr, ptr %ptridx.i.i.i.i.i145, align 8
  %memberidx1.i.i146 = getelementptr inbounds %Module, ptr %124, i64 0, i32 5
  %125 = load ptr, ptr %memberidx1.i.i146, align 8
  %126 = load i64, ptr %125, align 4
  %ptridx.i.i.i.i149 = getelementptr inbounds ptr, ptr %123, i64 %126
  %127 = load ptr, ptr %ptridx.i.i.i.i149, align 8
  %memberidx2.i.i.i150 = getelementptr inbounds %Module, ptr %127, i64 0, i32 7
  %128 = load ptr, ptr %memberidx2.i.i.i150, align 8
  %memberidx3.i.i.i151 = getelementptr inbounds %ScopeId, ptr %125, i64 0, i32 1
  %129 = load i64, ptr %memberidx3.i.i.i151, align 4
  %memberidx.i5.i.i.i152 = getelementptr inbounds %Array_Scope_, ptr %128, i64 0, i32 1
  %130 = load ptr, ptr %memberidx.i5.i.i.i152, align 8
  %ptridx.i6.i.i.i153 = getelementptr inbounds ptr, ptr %130, i64 %129
  %131 = load ptr, ptr %ptridx.i6.i.i.i153, align 8
  %memberidx.i154 = getelementptr inbounds %Scope, ptr %131, i64 0, i32 2
  %132 = load ptr, ptr %memberidx.i154, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %132, ptr %1, ptr nonnull %116)
  %memberidx1.i155 = getelementptr inbounds %Scope, ptr %131, i64 0, i32 1
  %133 = load ptr, ptr %memberidx1.i155, align 8
  %134 = tail call ptr @malloc(i32 24)
  %135 = load i64, ptr %116, align 4
  %136 = load i64, ptr %memberidx2.i.i.i141, align 4
  store i64 3, ptr %134, align 4
  %memberidx1.i.i.i157 = getelementptr inbounds %VarId, ptr %134, i64 0, i32 1
  store i64 %135, ptr %memberidx1.i.i.i157, align 4
  %memberidx2.i.i6.i158 = getelementptr inbounds %VarId, ptr %134, i64 0, i32 2
  store i64 %136, ptr %memberidx2.i.i6.i158, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %133, ptr %1, ptr nonnull %134)
  %.pre181 = load i64, ptr %79, align 4
  br label %ifend36

ifend36:                                          ; preds = %ifend32, %if.entry34
  %137 = phi i64 [ %114, %ifend32 ], [ %.pre181, %if.entry34 ]
  %138 = icmp eq i64 %137, 4
  br i1 %138, label %if.entry38, label %ifend12

if.entry38:                                       ; preds = %ifend36
  %139 = tail call ptr @malloc(i32 24)
  %memberidx.i159 = getelementptr inbounds %VarId, ptr %79, i64 0, i32 1
  %140 = load i64, ptr %memberidx.i159, align 4
  %memberidx1.i160 = getelementptr inbounds %VarId, ptr %79, i64 0, i32 2
  %141 = load i64, ptr %memberidx1.i160, align 4
  store i64 %140, ptr %139, align 4
  %memberidx1.i.i.i161 = getelementptr inbounds %TypeId, ptr %139, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i161, align 4
  %memberidx2.i.i.i162 = getelementptr inbounds %TypeId, ptr %139, i64 0, i32 2
  store i64 %141, ptr %memberidx2.i.i.i162, align 4
  %142 = load ptr, ptr %0, align 8
  %143 = load ptr, ptr %memberidx1.i, align 8
  %144 = load i64, ptr %143, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %142, i64 0, i32 1
  %145 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %145, i64 0, i32 1
  %146 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %146, i64 %144
  %147 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx1.i.i109 = getelementptr inbounds %Module, ptr %147, i64 0, i32 5
  %148 = load ptr, ptr %memberidx1.i.i109, align 8
  %149 = load i64, ptr %148, align 4
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %146, i64 %149
  %150 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %150, i64 0, i32 7
  %151 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %148, i64 0, i32 1
  %152 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %151, i64 0, i32 1
  %153 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %153, i64 %152
  %154 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %memberidx.i110 = getelementptr inbounds %Scope, ptr %154, i64 0, i32 4
  %155 = load ptr, ptr %memberidx.i110, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %155, ptr %1, ptr nonnull %139)
  %memberidx1.i111 = getelementptr inbounds %Scope, ptr %154, i64 0, i32 1
  %156 = load ptr, ptr %memberidx1.i111, align 8
  %157 = tail call ptr @malloc(i32 24)
  %158 = load i64, ptr %139, align 4
  %159 = load i64, ptr %memberidx2.i.i.i162, align 4
  store i64 4, ptr %157, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %157, i64 0, i32 1
  store i64 %158, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %157, i64 0, i32 2
  store i64 %159, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %156, ptr %1, ptr nonnull %157)
  br label %ifend12
}

define internal fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i, align 8
  %6 = load i64, ptr %4, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %6
  %8 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %10 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %memberidx1.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i.i70 = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend12, %2
  %current_scope.0.in = phi ptr [ %ptridx.i6.i.i, %2 ], [ %ptridx.i6.i, %ifend12 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 6
  %12 = load ptr, ptr %memberidx, align 8
  %13 = tail call fastcc i64 @Map_string_Type__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_string_Type_, ptr %12, i64 0, i32 1
  %14 = load i64, ptr %memberidx.i, align 4
  %15 = urem i64 %13, %14
  %16 = load ptr, ptr %12, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %16, i64 %15
  %17 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %17, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %while.entry, %else.i
  %18 = phi ptr [ %28, %else.i ], [ %16, %while.entry ]
  %19 = phi i64 [ %29, %else.i ], [ %14, %while.entry ]
  %20 = phi ptr [ %32, %else.i ], [ %17, %while.entry ]
  %hash.0.i = phi i64 [ %31, %else.i ], [ %15, %while.entry ]
  %21 = load ptr, ptr %20, align 8
  %memberidx.i.i68 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i.i68, align 4
  %23 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %22, %23
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i69 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  %24 = load ptr, ptr %memberidx2.i.i69, align 8
  %25 = load ptr, ptr %memberidx3.i.i70, align 8
  %26 = tail call i64 @memcmp(ptr %24, ptr %25, i64 %22)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre161 = load ptr, ptr %12, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre162.pre = load ptr, ptr %12, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre162.pre, i64 %hash.0.i
  %.pre163.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre163.pre, null
  br i1 %.not29.i, label %ifend, label %Map_string_Type____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %28 = phi ptr [ %.pre161, %ifend.i.i.else.i_crit_edge ], [ %18, %while.entry.i ]
  %29 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %19, %while.entry.i ]
  %30 = add nuw i64 %hash.0.i, 1
  %31 = urem i64 %30, %29
  %ptridx7.i = getelementptr inbounds ptr, ptr %28, i64 %31
  %32 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %32, null
  br i1 %.not30.i, label %ifend, label %while.entry.i

Map_string_Type____getitem__.exit:                ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_Type_, ptr %.pre163.pre, i64 0, i32 1
  %33 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %33, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_string_Type____getitem__.exit, %ifend28, %ifend19, %if.entry6, %if.entry2
  %common.ret.op = phi ptr [ %56, %if.entry2 ], [ %79, %if.entry6 ], [ %99, %ifend19 ], [ %97, %ifend28 ], [ %33, %Map_string_Type____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %while.entry, %while.end.i, %Map_string_Type____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 2
  %34 = load ptr, ptr %memberidx1, align 8
  %35 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr %1)
  %memberidx.i71 = getelementptr inbounds %Map_string_ClassId_, ptr %34, i64 0, i32 1
  %36 = load i64, ptr %memberidx.i71, align 4
  %37 = urem i64 %35, %36
  %38 = load ptr, ptr %34, align 8
  %ptridx.i72 = getelementptr inbounds ptr, ptr %38, i64 %37
  %39 = load ptr, ptr %ptridx.i72, align 8
  %.not.i73 = icmp eq ptr %39, null
  br i1 %.not.i73, label %ifend4, label %while.entry.i79

while.entry.i79:                                  ; preds = %ifend, %else.i91
  %40 = phi ptr [ %50, %else.i91 ], [ %38, %ifend ]
  %41 = phi i64 [ %51, %else.i91 ], [ %36, %ifend ]
  %42 = phi ptr [ %54, %else.i91 ], [ %39, %ifend ]
  %hash.0.i74 = phi i64 [ %53, %else.i91 ], [ %37, %ifend ]
  %43 = load ptr, ptr %42, align 8
  %memberidx.i.i76 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i.i76, align 4
  %45 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i78 = icmp eq i64 %44, %45
  br i1 %.not.i.i78, label %ifend.i.i82, label %else.i91

ifend.i.i82:                                      ; preds = %while.entry.i79
  %memberidx2.i.i80 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i80, align 8
  %47 = load ptr, ptr %memberidx3.i.i70, align 8
  %48 = tail call i64 @memcmp(ptr %46, ptr %47, i64 %44)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %while.end.i88, label %ifend.i.i82.else.i91_crit_edge

ifend.i.i82.else.i91_crit_edge:                   ; preds = %ifend.i.i82
  %.pre164 = load i64, ptr %memberidx.i71, align 4
  %.pre165 = load ptr, ptr %34, align 8
  br label %else.i91

while.end.i88:                                    ; preds = %ifend.i.i82
  %.pre166.pre = load ptr, ptr %34, align 8
  %ptridx9.i86.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre166.pre, i64 %hash.0.i74
  %.pre167.pre = load ptr, ptr %ptridx9.i86.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i87 = icmp eq ptr %.pre167.pre, null
  br i1 %.not29.i87, label %ifend4, label %Map_string_ClassId____getitem__.exit

else.i91:                                         ; preds = %ifend.i.i82.else.i91_crit_edge, %while.entry.i79
  %50 = phi ptr [ %.pre165, %ifend.i.i82.else.i91_crit_edge ], [ %40, %while.entry.i79 ]
  %51 = phi i64 [ %.pre164, %ifend.i.i82.else.i91_crit_edge ], [ %41, %while.entry.i79 ]
  %52 = add nuw i64 %hash.0.i74, 1
  %53 = urem i64 %52, %51
  %ptridx7.i89 = getelementptr inbounds ptr, ptr %50, i64 %53
  %54 = load ptr, ptr %ptridx7.i89, align 8
  %.not30.i90 = icmp eq ptr %54, null
  br i1 %.not30.i90, label %ifend4, label %while.entry.i79

Map_string_ClassId____getitem__.exit:             ; preds = %while.end.i88
  %memberidx15.i93 = getelementptr inbounds %MapEntry_string_ClassId_, ptr %.pre167.pre, i64 0, i32 1
  %55 = load ptr, ptr %memberidx15.i93, align 8
  %.not64 = icmp eq ptr %55, null
  br i1 %.not64, label %ifend4, label %if.entry2

if.entry2:                                        ; preds = %Map_string_ClassId____getitem__.exit
  %56 = tail call ptr @malloc(i32 16)
  store i64 11, ptr %56, align 4
  %memberidx.i95 = getelementptr inbounds %ObjectType, ptr %56, i64 0, i32 1
  store ptr %55, ptr %memberidx.i95, align 8
  br label %common.ret

ifend4:                                           ; preds = %else.i91, %ifend, %while.end.i88, %Map_string_ClassId____getitem__.exit
  %memberidx5 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 4
  %57 = load ptr, ptr %memberidx5, align 8
  %58 = tail call fastcc i64 @Map_string_EnumId__hash_fnc(ptr %1)
  %memberidx.i96 = getelementptr inbounds %Map_string_EnumId_, ptr %57, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i96, align 4
  %60 = urem i64 %58, %59
  %61 = load ptr, ptr %57, align 8
  %ptridx.i97 = getelementptr inbounds ptr, ptr %61, i64 %60
  %62 = load ptr, ptr %ptridx.i97, align 8
  %.not.i98 = icmp eq ptr %62, null
  br i1 %.not.i98, label %ifend8, label %while.entry.i104

while.entry.i104:                                 ; preds = %ifend4, %else.i116
  %63 = phi ptr [ %73, %else.i116 ], [ %61, %ifend4 ]
  %64 = phi i64 [ %74, %else.i116 ], [ %59, %ifend4 ]
  %65 = phi ptr [ %77, %else.i116 ], [ %62, %ifend4 ]
  %hash.0.i99 = phi i64 [ %76, %else.i116 ], [ %60, %ifend4 ]
  %66 = load ptr, ptr %65, align 8
  %memberidx.i.i101 = getelementptr inbounds %string, ptr %66, i64 0, i32 2
  %67 = load i64, ptr %memberidx.i.i101, align 4
  %68 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i103 = icmp eq i64 %67, %68
  br i1 %.not.i.i103, label %ifend.i.i107, label %else.i116

ifend.i.i107:                                     ; preds = %while.entry.i104
  %memberidx2.i.i105 = getelementptr inbounds %string, ptr %66, i64 0, i32 1
  %69 = load ptr, ptr %memberidx2.i.i105, align 8
  %70 = load ptr, ptr %memberidx3.i.i70, align 8
  %71 = tail call i64 @memcmp(ptr %69, ptr %70, i64 %67)
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %while.end.i113, label %ifend.i.i107.else.i116_crit_edge

ifend.i.i107.else.i116_crit_edge:                 ; preds = %ifend.i.i107
  %.pre168 = load i64, ptr %memberidx.i96, align 4
  %.pre169 = load ptr, ptr %57, align 8
  br label %else.i116

while.end.i113:                                   ; preds = %ifend.i.i107
  %.pre170.pre = load ptr, ptr %57, align 8
  %ptridx9.i111.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre170.pre, i64 %hash.0.i99
  %.pre171.pre = load ptr, ptr %ptridx9.i111.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i112 = icmp eq ptr %.pre171.pre, null
  br i1 %.not29.i112, label %ifend8, label %Map_string_EnumId____getitem__.exit

else.i116:                                        ; preds = %ifend.i.i107.else.i116_crit_edge, %while.entry.i104
  %73 = phi ptr [ %.pre169, %ifend.i.i107.else.i116_crit_edge ], [ %63, %while.entry.i104 ]
  %74 = phi i64 [ %.pre168, %ifend.i.i107.else.i116_crit_edge ], [ %64, %while.entry.i104 ]
  %75 = add nuw i64 %hash.0.i99, 1
  %76 = urem i64 %75, %74
  %ptridx7.i114 = getelementptr inbounds ptr, ptr %73, i64 %76
  %77 = load ptr, ptr %ptridx7.i114, align 8
  %.not30.i115 = icmp eq ptr %77, null
  br i1 %.not30.i115, label %ifend8, label %while.entry.i104

Map_string_EnumId____getitem__.exit:              ; preds = %while.end.i113
  %memberidx15.i118 = getelementptr inbounds %MapEntry_string_EnumId_, ptr %.pre171.pre, i64 0, i32 1
  %78 = load ptr, ptr %memberidx15.i118, align 8
  %.not65 = icmp eq ptr %78, null
  br i1 %.not65, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %Map_string_EnumId____getitem__.exit
  %79 = tail call ptr @malloc(i32 16)
  store i64 12, ptr %79, align 4
  %memberidx.i120 = getelementptr inbounds %EnumType, ptr %79, i64 0, i32 1
  store ptr %78, ptr %memberidx.i120, align 8
  br label %common.ret

ifend8:                                           ; preds = %else.i116, %ifend4, %while.end.i113, %Map_string_EnumId____getitem__.exit
  %memberidx9 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %80 = load ptr, ptr %memberidx9, align 8
  %81 = icmp eq ptr %80, null
  br i1 %81, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %ifend8
  %82 = load ptr, ptr %memberidx1.i, align 8
  %83 = load i64, ptr %82, align 4
  %.not66 = icmp eq i64 %83, 0
  br i1 %.not66, label %ifend19, label %if.entry17

ifend12:                                          ; preds = %ifend8
  %84 = load ptr, ptr %0, align 8
  %memberidx.i121 = getelementptr inbounds %Program, ptr %84, i64 0, i32 1
  %85 = load ptr, ptr %memberidx.i121, align 8
  %86 = load i64, ptr %80, align 4
  %memberidx.i.i122 = getelementptr inbounds %Array_Module_, ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i.i122, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %87, i64 %86
  %88 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %88, i64 0, i32 7
  %89 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %80, i64 0, i32 1
  %90 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %89, i64 0, i32 1
  %91 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %91, i64 %90
  br label %while.entry

if.entry17:                                       ; preds = %if.entry10
  %92 = load ptr, ptr %0, align 8
  %memberidx23 = getelementptr inbounds %Program, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx23, align 8
  %memberidx.i123 = getelementptr inbounds %Array_Module_, ptr %93, i64 0, i32 1
  %94 = load ptr, ptr %memberidx.i123, align 8
  %95 = load ptr, ptr %94, align 8
  %memberidx24 = getelementptr inbounds %Module, ptr %95, i64 0, i32 5
  %96 = load ptr, ptr %memberidx24, align 8
  store ptr %96, ptr %memberidx1.i, align 8
  %97 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %1)
  %98 = load i64, ptr %97, align 4
  %.not67 = icmp eq i64 %98, 20
  br i1 %.not67, label %ifend28, label %if.entry26

ifend19:                                          ; preds = %if.entry10
  %99 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %99, align 4
  br label %common.ret

if.entry26:                                       ; preds = %if.entry17
  %100 = load ptr, ptr %0, align 8
  store i1 true, ptr %100, align 1
  %101 = load i64, ptr %97, align 4
  %102 = icmp eq i64 %101, 11
  br i1 %102, label %if.entry32, label %else33

ifend28:                                          ; preds = %if.entry32, %else33, %if.entry17
  store ptr %82, ptr %memberidx1.i, align 8
  br label %common.ret

if.entry32:                                       ; preds = %if.entry26
  %memberidx35 = getelementptr inbounds %ObjectType, ptr %97, i64 0, i32 1
  %103 = load ptr, ptr %memberidx35, align 8
  %104 = load ptr, ptr %0, align 8
  %105 = load ptr, ptr %memberidx1.i, align 8
  %106 = load i64, ptr %105, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %104, i64 0, i32 1
  %107 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %107, i64 0, i32 1
  %108 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %108, i64 %106
  %109 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx1.i.i125 = getelementptr inbounds %Module, ptr %109, i64 0, i32 5
  %110 = load ptr, ptr %memberidx1.i.i125, align 8
  %111 = load i64, ptr %110, align 4
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %108, i64 %111
  %112 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %112, i64 0, i32 7
  %113 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %110, i64 0, i32 1
  %114 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %113, i64 0, i32 1
  %115 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %115, i64 %114
  %116 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %memberidx.i126 = getelementptr inbounds %Scope, ptr %116, i64 0, i32 2
  %117 = load ptr, ptr %memberidx.i126, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %117, ptr %1, ptr %103)
  %memberidx1.i127 = getelementptr inbounds %Scope, ptr %116, i64 0, i32 1
  %118 = load ptr, ptr %memberidx1.i127, align 8
  %119 = tail call ptr @malloc(i32 24)
  %120 = load i64, ptr %103, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %103, i64 0, i32 2
  %121 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 3, ptr %119, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %119, i64 0, i32 1
  store i64 %120, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %119, i64 0, i32 2
  store i64 %121, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %118, ptr %1, ptr nonnull %119)
  br label %ifend28

else33:                                           ; preds = %if.entry26
  %memberidx36 = getelementptr inbounds %EnumType, ptr %97, i64 0, i32 1
  %122 = load ptr, ptr %memberidx36, align 8
  %123 = load ptr, ptr %0, align 8
  %124 = load ptr, ptr %memberidx1.i, align 8
  %125 = load i64, ptr %124, align 4
  %memberidx1.i.i.i.i129 = getelementptr inbounds %Program, ptr %123, i64 0, i32 1
  %126 = load ptr, ptr %memberidx1.i.i.i.i129, align 8
  %memberidx.i.i.i.i.i130 = getelementptr inbounds %Array_Module_, ptr %126, i64 0, i32 1
  %127 = load ptr, ptr %memberidx.i.i.i.i.i130, align 8
  %ptridx.i.i.i.i.i131 = getelementptr inbounds ptr, ptr %127, i64 %125
  %128 = load ptr, ptr %ptridx.i.i.i.i.i131, align 8
  %memberidx1.i.i132 = getelementptr inbounds %Module, ptr %128, i64 0, i32 5
  %129 = load ptr, ptr %memberidx1.i.i132, align 8
  %130 = load i64, ptr %129, align 4
  %ptridx.i.i.i.i135 = getelementptr inbounds ptr, ptr %127, i64 %130
  %131 = load ptr, ptr %ptridx.i.i.i.i135, align 8
  %memberidx2.i.i.i136 = getelementptr inbounds %Module, ptr %131, i64 0, i32 7
  %132 = load ptr, ptr %memberidx2.i.i.i136, align 8
  %memberidx3.i.i.i137 = getelementptr inbounds %ScopeId, ptr %129, i64 0, i32 1
  %133 = load i64, ptr %memberidx3.i.i.i137, align 4
  %memberidx.i5.i.i.i138 = getelementptr inbounds %Array_Scope_, ptr %132, i64 0, i32 1
  %134 = load ptr, ptr %memberidx.i5.i.i.i138, align 8
  %ptridx.i6.i.i.i139 = getelementptr inbounds ptr, ptr %134, i64 %133
  %135 = load ptr, ptr %ptridx.i6.i.i.i139, align 8
  %memberidx.i140 = getelementptr inbounds %Scope, ptr %135, i64 0, i32 4
  %136 = load ptr, ptr %memberidx.i140, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %136, ptr %1, ptr %122)
  %memberidx1.i141 = getelementptr inbounds %Scope, ptr %135, i64 0, i32 1
  %137 = load ptr, ptr %memberidx1.i141, align 8
  %138 = tail call ptr @malloc(i32 24)
  %139 = load i64, ptr %122, align 4
  %memberidx1.i5.i142 = getelementptr inbounds %TypeId, ptr %122, i64 0, i32 2
  %140 = load i64, ptr %memberidx1.i5.i142, align 4
  store i64 4, ptr %138, align 4
  %memberidx1.i.i.i143 = getelementptr inbounds %VarId, ptr %138, i64 0, i32 1
  store i64 %139, ptr %memberidx1.i.i.i143, align 4
  %memberidx2.i.i6.i144 = getelementptr inbounds %VarId, ptr %138, i64 0, i32 2
  store i64 %140, ptr %memberidx2.i.i6.i144, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %137, ptr %1, ptr nonnull %138)
  br label %ifend28
}

define internal fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Var, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx.i13, align 8
  %7 = load i64, ptr %6, align 4
  %8 = load ptr, ptr %0, align 8
  %memberidx1.i.i = getelementptr inbounds %Program, ptr %8, i64 0, i32 1
  %9 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %10, i64 %7
  %11 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i19 = getelementptr inbounds %Module, ptr %11, i64 0, i32 7
  %12 = load ptr, ptr %memberidx2.i.i19, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i6.i.i, align 8
  %16 = tail call ptr @malloc(i32 24)
  %17 = load ptr, ptr %memberidx.i13, align 8
  %18 = load i64, ptr %17, align 4
  %memberidx2 = getelementptr inbounds %Module, ptr %11, i64 0, i32 1
  %19 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Var_, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx3, align 4
  store i64 1, ptr %16, align 4
  %memberidx1.i20 = getelementptr inbounds %VarId, ptr %16, i64 0, i32 1
  store i64 %18, ptr %memberidx1.i20, align 4
  %memberidx2.i = getelementptr inbounds %VarId, ptr %16, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i, align 4
  %memberidx4 = getelementptr inbounds %Var, ptr %5, i64 0, i32 1
  store ptr %16, ptr %memberidx4, align 8
  %21 = load ptr, ptr %memberidx2, align 8
  %memberidx.i14 = getelementptr inbounds %Array_Var_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i14, align 4
  %memberidx1.i = getelementptr inbounds %Array_Var_, ptr %21, i64 0, i32 3
  %23 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %22, %23
  br i1 %.not.i, label %.Array_Var____sl__.exit_crit_edge, label %if.entry.i

.Array_Var____sl__.exit_crit_edge:                ; preds = %4
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Var_, ptr %21, i64 0, i32 1
  %.pre21 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Var____sl__.exit

if.entry.i:                                       ; preds = %4
  %24 = shl nuw i64 %23, 1
  store i64 %24, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Var_, ptr %21, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i.i, align 8
  %26 = shl i64 %23, 4
  %27 = tail call ptr @realloc(ptr %25, i64 %26)
  store ptr %27, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i14, align 4
  br label %Array_Var____sl__.exit

Array_Var____sl__.exit:                           ; preds = %.Array_Var____sl__.exit_crit_edge, %if.entry.i
  %28 = phi ptr [ %.pre21, %.Array_Var____sl__.exit_crit_edge ], [ %27, %if.entry.i ]
  %29 = phi i64 [ %22, %.Array_Var____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %30 = add nsw i64 %29, 1
  store i64 %30, ptr %memberidx.i14, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %28, i64 %29
  store ptr %5, ptr %ptridx.i, align 8
  %memberidx6 = getelementptr inbounds %Scope, ptr %15, i64 0, i32 1
  %31 = load ptr, ptr %memberidx6, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %31, ptr %1, ptr nonnull %16)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Const, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx.i13, align 8
  %7 = load i64, ptr %6, align 4
  %8 = load ptr, ptr %0, align 8
  %memberidx1.i.i = getelementptr inbounds %Program, ptr %8, i64 0, i32 1
  %9 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %10, i64 %7
  %11 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i19 = getelementptr inbounds %Module, ptr %11, i64 0, i32 7
  %12 = load ptr, ptr %memberidx2.i.i19, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i6.i.i, align 8
  %16 = tail call ptr @malloc(i32 24)
  %17 = load ptr, ptr %memberidx.i13, align 8
  %18 = load i64, ptr %17, align 4
  %memberidx2 = getelementptr inbounds %Module, ptr %11, i64 0, i32 2
  %19 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx3, align 4
  store i64 2, ptr %16, align 4
  %memberidx1.i.i20 = getelementptr inbounds %VarId, ptr %16, i64 0, i32 1
  store i64 %18, ptr %memberidx1.i.i20, align 4
  %memberidx2.i.i21 = getelementptr inbounds %VarId, ptr %16, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i.i21, align 4
  %memberidx4 = getelementptr inbounds %Const, ptr %5, i64 0, i32 1
  store ptr %16, ptr %memberidx4, align 8
  %21 = load ptr, ptr %memberidx2, align 8
  %memberidx.i14 = getelementptr inbounds %Array_Const_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i14, align 4
  %memberidx1.i = getelementptr inbounds %Array_Const_, ptr %21, i64 0, i32 3
  %23 = load i64, ptr %memberidx1.i, align 4
  %.not.i = icmp slt i64 %22, %23
  br i1 %.not.i, label %.Array_Const____sl__.exit_crit_edge, label %if.entry.i

.Array_Const____sl__.exit_crit_edge:              ; preds = %4
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Const_, ptr %21, i64 0, i32 1
  %.pre22 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Const____sl__.exit

if.entry.i:                                       ; preds = %4
  %24 = shl nuw i64 %23, 1
  store i64 %24, ptr %memberidx1.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Const_, ptr %21, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i.i, align 8
  %26 = shl i64 %23, 4
  %27 = tail call ptr @realloc(ptr %25, i64 %26)
  store ptr %27, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i14, align 4
  br label %Array_Const____sl__.exit

Array_Const____sl__.exit:                         ; preds = %.Array_Const____sl__.exit_crit_edge, %if.entry.i
  %28 = phi ptr [ %.pre22, %.Array_Const____sl__.exit_crit_edge ], [ %27, %if.entry.i ]
  %29 = phi i64 [ %22, %.Array_Const____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %30 = add nsw i64 %29, 1
  store i64 %30, ptr %memberidx.i14, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %28, i64 %29
  store ptr %5, ptr %ptridx.i, align 8
  %memberidx6 = getelementptr inbounds %Scope, ptr %15, i64 0, i32 1
  %31 = load ptr, ptr %memberidx6, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %31, ptr %1, ptr nonnull %16)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i153, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i152, %if.entry.i153 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %6 = load i64, ptr %.tr11.i, align 4
  switch i64 %6, label %get_class_from_type.exit [
    i64 19, label %if.entry.i153
    i64 11, label %if.entry3.i
  ]

if.entry.i153:                                    ; preds = %tailrecurse.i
  %memberidx1.i152 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i154 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %7 = load ptr, ptr %memberidx6.i154, align 8
  %memberidx.i.i155 = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i.i155, align 8
  %9 = load i64, ptr %7, align 4
  %memberidx.i.i.i156 = getelementptr inbounds %Array_Module_, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i.i156, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %10, i64 %9
  %11 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i157 = getelementptr inbounds %Module, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2.i.i157, align 8
  %memberidx3.i.i158 = getelementptr inbounds %TypeId, ptr %7, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i158, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i6.i.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i151 = phi ptr [ %15, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i151, i64 0, i32 6
  %16 = load ptr, ptr %memberidx3, align 8
  %17 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %17, ptr noundef nonnull align 8 dereferenceable(11) @112, i64 11, i1 false)
  %18 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %18, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  store ptr %17, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %18, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i, align 4
  %19 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %18)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %16, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = urem i64 %19, %20
  %22 = load ptr, ptr %16, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %22, i64 %21
  %23 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %23, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %get_class_from_type.exit, %else.i
  %24 = phi ptr [ %34, %else.i ], [ %22, %get_class_from_type.exit ]
  %25 = phi i64 [ %35, %else.i ], [ %20, %get_class_from_type.exit ]
  %26 = phi ptr [ %38, %else.i ], [ %23, %get_class_from_type.exit ]
  %hash.0.i = phi i64 [ %37, %else.i ], [ %21, %get_class_from_type.exit ]
  %27 = load ptr, ptr %26, align 8
  %memberidx.i.i76 = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i.i76, align 4
  %29 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %28, %29
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i78 = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2.i.i78, align 8
  %31 = load ptr, ptr %memberidx.i.i, align 8
  %32 = tail call i64 @memcmp(ptr %30, ptr %31, i64 %28)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre162 = load ptr, ptr %16, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre163.pre = load ptr, ptr %16, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre163.pre, i64 %hash.0.i
  %.pre164.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre164.pre, null
  br i1 %.not29.i, label %if.entry, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %34 = phi ptr [ %.pre162, %ifend.i.i.else.i_crit_edge ], [ %24, %while.entry.i ]
  %35 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %25, %while.entry.i ]
  %36 = add nuw i64 %hash.0.i, 1
  %37 = urem i64 %36, %35
  %ptridx7.i = getelementptr inbounds ptr, ptr %34, i64 %37
  %38 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %38, null
  br i1 %.not30.i, label %if.entry, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre164.pre, i64 0, i32 1
  %39 = load ptr, ptr %memberidx15.i, align 8
  %40 = icmp eq ptr %39, null
  br i1 %40, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend20, %ifend12, %get_class_prop_type.exit, %ifend33, %TypeChecker_error.exit136, %TypeChecker_error.exit117, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit117 ], [ null, %TypeChecker_error.exit136 ], [ %164, %ifend33 ], [ null, %get_class_prop_type.exit ], [ null, %ifend12 ], [ null, %ifend20 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_string_PropId____getitem__.exit
  %memberidx4 = getelementptr inbounds %Class, ptr %common.ret.op.i151, i64 0, i32 1
  %41 = load ptr, ptr %memberidx4, align 8
  %42 = load ptr, ptr %41, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %42, i64 0, i32 5
  %43 = load ptr, ptr %memberidx5, align 8
  %44 = tail call ptr %43(ptr nonnull %41)
  %45 = alloca ptr, align 8
  %46 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %45, ptr nonnull @170, ptr %44)
  %47 = load ptr, ptr %45, align 8
  %48 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %48, align 8
  %memberidx.i79 = getelementptr inbounds %string, ptr %48, i64 0, i32 1
  store ptr %47, ptr %memberidx.i79, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %48, i64 0, i32 2
  store i64 %46, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %48, i64 0, i32 3
  store i64 %46, ptr %memberidx2.i, align 4
  tail call void @free(ptr %44)
  %49 = load ptr, ptr %4, align 8
  %memberidx.i80 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %50 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i81 = getelementptr inbounds %Compiler, ptr %50, i64 0, i32 6
  %51 = load ptr, ptr %memberidx1.i81, align 8
  %52 = call ptr @malloc(i32 24)
  store i64 4, ptr %52, align 4
  %memberidx1.i.i82 = getelementptr inbounds %FloError, ptr %52, i64 0, i32 2
  store ptr %49, ptr %memberidx1.i.i82, align 8
  %memberidx2.i.i83 = getelementptr inbounds %FloError, ptr %52, i64 0, i32 1
  store ptr %48, ptr %memberidx2.i.i83, align 8
  %memberidx.i.i84 = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 2
  %53 = load i64, ptr %memberidx.i.i84, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 3
  %54 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i85 = icmp slt i64 %53, %54
  br i1 %.not.i.i85, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %.pre170 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %55 = shl nuw i64 %54, 1
  store i64 %55, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %56 = load ptr, ptr %memberidx2.i.i.i, align 8
  %57 = shl i64 %54, 4
  %58 = call ptr @realloc(ptr %56, i64 %57)
  store ptr %58, ptr %memberidx2.i.i.i, align 8
  %.pre169 = load i64, ptr %memberidx.i.i84, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %59 = phi ptr [ %.pre170, %if.entry.TypeChecker_error.exit_crit_edge ], [ %58, %if.entry.i.i ]
  %60 = phi i64 [ %53, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre169, %if.entry.i.i ]
  %61 = add nsw i64 %60, 1
  store i64 %61, ptr %memberidx.i.i84, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %59, i64 %60
  store ptr %52, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %62 = load ptr, ptr %0, align 8
  %memberidx.i.i86 = getelementptr inbounds %PropId, ptr %39, i64 0, i32 1
  %63 = load ptr, ptr %memberidx.i.i86, align 8
  %memberidx.i.i.i87 = getelementptr inbounds %Program, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i.i.i87, align 8
  %65 = load i64, ptr %63, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %66, i64 %65
  %67 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i88 = getelementptr inbounds %Module, ptr %67, i64 0, i32 3
  %68 = load ptr, ptr %memberidx2.i.i.i88, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %63, i64 0, i32 2
  %69 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %70, i64 %69
  %71 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %72 = load i64, ptr %39, align 4
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i90 = getelementptr inbounds %Class, ptr %71, i64 0, i32 5
  %74 = load ptr, ptr %memberidx1.i90, align 8
  %memberidx2.i91 = getelementptr inbounds %PropId, ptr %39, i64 0, i32 2
  %75 = load i64, ptr %memberidx2.i91, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %74, i64 0, i32 1
  %76 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %76, i64 %75
  %77 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %77, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %71, i64 0, i32 4
  %78 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %39, i64 0, i32 2
  %79 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i92 = getelementptr inbounds ptr, ptr %80, i64 %79
  %81 = load ptr, ptr %ptridx.i.i92, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %81, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i89 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx8 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i89, i64 0, i32 1
  %82 = load ptr, ptr %memberidx8, align 8
  %memberidx.i93 = getelementptr inbounds %Array_Type_, ptr %82, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i93, align 8
  %84 = load ptr, ptr %83, align 8
  %ptridx.i95 = getelementptr inbounds ptr, ptr %83, i64 1
  %85 = load ptr, ptr %ptridx.i95, align 8
  %memberidx.i96 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %86 = load ptr, ptr %memberidx.i96, align 8
  %memberidx1.i97 = getelementptr inbounds %Compiler, ptr %86, i64 0, i32 6
  %87 = load ptr, ptr %memberidx1.i97, align 8
  %memberidx2.i98 = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 2
  %88 = load i64, ptr %memberidx2.i98, align 4
  %89 = icmp sgt i64 %88, 0
  br i1 %89, label %common.ret, label %ifend12

ifend12:                                          ; preds = %get_class_prop_type.exit
  %memberidx13 = getelementptr inbounds %ExpressionIndexNode, ptr %4, i64 0, i32 4
  %90 = load ptr, ptr %memberidx13, align 8
  %91 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %84, ptr %90)
  %92 = load ptr, ptr %memberidx.i96, align 8
  %memberidx1.i100 = getelementptr inbounds %Compiler, ptr %92, i64 0, i32 6
  %93 = load ptr, ptr %memberidx1.i100, align 8
  %memberidx2.i101 = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 2
  %94 = load i64, ptr %memberidx2.i101, align 4
  %95 = icmp sgt i64 %94, 0
  br i1 %95, label %common.ret, label %ifend16

ifend16:                                          ; preds = %ifend12
  %memberidx17 = getelementptr inbounds %Expression, ptr %91, i64 0, i32 3
  %96 = load ptr, ptr %memberidx17, align 8
  %97 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %84, ptr %96)
  br i1 %97, label %ifend20, label %if.entry18

if.entry18:                                       ; preds = %ifend16
  %98 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %84)
  %99 = load ptr, ptr %98, align 8
  %memberidx21 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %99, i64 0, i32 5
  %100 = load ptr, ptr %memberidx21, align 8
  %101 = tail call ptr %100(ptr nonnull %98)
  %102 = load ptr, ptr %memberidx17, align 8
  %103 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %102)
  %104 = load ptr, ptr %103, align 8
  %memberidx23 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %104, i64 0, i32 5
  %105 = load ptr, ptr %memberidx23, align 8
  %106 = tail call ptr %105(ptr nonnull %103)
  %107 = alloca ptr, align 8
  %108 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %107, ptr nonnull @167, ptr %101, ptr %106)
  %109 = load ptr, ptr %107, align 8
  %110 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %110, align 8
  %memberidx.i102 = getelementptr inbounds %string, ptr %110, i64 0, i32 1
  store ptr %109, ptr %memberidx.i102, align 8
  %memberidx1.i103 = getelementptr inbounds %string, ptr %110, i64 0, i32 2
  store i64 %108, ptr %memberidx1.i103, align 4
  %memberidx2.i104 = getelementptr inbounds %string, ptr %110, i64 0, i32 3
  store i64 %108, ptr %memberidx2.i104, align 4
  tail call void @free(ptr %101)
  tail call void @free(ptr %106)
  %111 = load ptr, ptr %memberidx13, align 8
  %112 = load ptr, ptr %111, align 8
  %113 = load ptr, ptr %memberidx.i96, align 8
  %memberidx1.i106 = getelementptr inbounds %Compiler, ptr %113, i64 0, i32 6
  %114 = load ptr, ptr %memberidx1.i106, align 8
  %115 = call ptr @malloc(i32 24)
  store i64 5, ptr %115, align 4
  %memberidx1.i.i107 = getelementptr inbounds %FloError, ptr %115, i64 0, i32 2
  store ptr %112, ptr %memberidx1.i.i107, align 8
  %memberidx2.i.i108 = getelementptr inbounds %FloError, ptr %115, i64 0, i32 1
  store ptr %110, ptr %memberidx2.i.i108, align 8
  %memberidx.i.i109 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 2
  %116 = load i64, ptr %memberidx.i.i109, align 4
  %memberidx1.i2.i110 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 3
  %117 = load i64, ptr %memberidx1.i2.i110, align 4
  %.not.i.i111 = icmp slt i64 %116, %117
  br i1 %.not.i.i111, label %if.entry18.TypeChecker_error.exit117_crit_edge, label %if.entry.i.i114

if.entry18.TypeChecker_error.exit117_crit_edge:   ; preds = %if.entry18
  %memberidx4.i.i115.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 1
  %.pre166 = load ptr, ptr %memberidx4.i.i115.phi.trans.insert, align 8
  br label %TypeChecker_error.exit117

if.entry.i.i114:                                  ; preds = %if.entry18
  %118 = shl nuw i64 %117, 1
  store i64 %118, ptr %memberidx1.i2.i110, align 4
  %memberidx2.i.i.i113 = getelementptr inbounds %Array_FloError_, ptr %114, i64 0, i32 1
  %119 = load ptr, ptr %memberidx2.i.i.i113, align 8
  %120 = shl i64 %117, 4
  %121 = call ptr @realloc(ptr %119, i64 %120)
  store ptr %121, ptr %memberidx2.i.i.i113, align 8
  %.pre165 = load i64, ptr %memberidx.i.i109, align 4
  br label %TypeChecker_error.exit117

TypeChecker_error.exit117:                        ; preds = %if.entry18.TypeChecker_error.exit117_crit_edge, %if.entry.i.i114
  %122 = phi ptr [ %.pre166, %if.entry18.TypeChecker_error.exit117_crit_edge ], [ %121, %if.entry.i.i114 ]
  %123 = phi i64 [ %116, %if.entry18.TypeChecker_error.exit117_crit_edge ], [ %.pre165, %if.entry.i.i114 ]
  %124 = add nsw i64 %123, 1
  store i64 %124, ptr %memberidx.i.i109, align 4
  %ptridx.i.i116 = getelementptr inbounds ptr, ptr %122, i64 %123
  store ptr %115, ptr %ptridx.i.i116, align 8
  br label %common.ret

ifend20:                                          ; preds = %ifend16
  %memberidx26 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %125 = load ptr, ptr %memberidx26, align 8
  %126 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %85, ptr %125)
  %127 = load ptr, ptr %memberidx.i96, align 8
  %memberidx1.i119 = getelementptr inbounds %Compiler, ptr %127, i64 0, i32 6
  %128 = load ptr, ptr %memberidx1.i119, align 8
  %memberidx2.i120 = getelementptr inbounds %Array_FloError_, ptr %128, i64 0, i32 2
  %129 = load i64, ptr %memberidx2.i120, align 4
  %130 = icmp sgt i64 %129, 0
  br i1 %130, label %common.ret, label %ifend29

ifend29:                                          ; preds = %ifend20
  %131 = load ptr, ptr %memberidx17, align 8
  %132 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %84, ptr %131)
  br i1 %132, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %ifend29
  %133 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %85)
  %134 = load ptr, ptr %133, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %134, i64 0, i32 5
  %135 = load ptr, ptr %memberidx34, align 8
  %136 = tail call ptr %135(ptr nonnull %133)
  %memberidx35 = getelementptr inbounds %Expression, ptr %126, i64 0, i32 3
  %137 = load ptr, ptr %memberidx35, align 8
  %138 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %137)
  %139 = load ptr, ptr %138, align 8
  %memberidx36 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %139, i64 0, i32 5
  %140 = load ptr, ptr %memberidx36, align 8
  %141 = tail call ptr %140(ptr nonnull %138)
  %142 = alloca ptr, align 8
  %143 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %142, ptr nonnull @167, ptr %136, ptr %141)
  %144 = load ptr, ptr %142, align 8
  %145 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %145, align 8
  %memberidx.i121 = getelementptr inbounds %string, ptr %145, i64 0, i32 1
  store ptr %144, ptr %memberidx.i121, align 8
  %memberidx1.i122 = getelementptr inbounds %string, ptr %145, i64 0, i32 2
  store i64 %143, ptr %memberidx1.i122, align 4
  %memberidx2.i123 = getelementptr inbounds %string, ptr %145, i64 0, i32 3
  store i64 %143, ptr %memberidx2.i123, align 4
  tail call void @free(ptr %136)
  tail call void @free(ptr %141)
  %146 = load ptr, ptr %memberidx26, align 8
  %147 = load ptr, ptr %146, align 8
  %148 = load ptr, ptr %memberidx.i96, align 8
  %memberidx1.i125 = getelementptr inbounds %Compiler, ptr %148, i64 0, i32 6
  %149 = load ptr, ptr %memberidx1.i125, align 8
  %150 = call ptr @malloc(i32 24)
  store i64 5, ptr %150, align 4
  %memberidx1.i.i126 = getelementptr inbounds %FloError, ptr %150, i64 0, i32 2
  store ptr %147, ptr %memberidx1.i.i126, align 8
  %memberidx2.i.i127 = getelementptr inbounds %FloError, ptr %150, i64 0, i32 1
  store ptr %145, ptr %memberidx2.i.i127, align 8
  %memberidx.i.i128 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 2
  %151 = load i64, ptr %memberidx.i.i128, align 4
  %memberidx1.i2.i129 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 3
  %152 = load i64, ptr %memberidx1.i2.i129, align 4
  %.not.i.i130 = icmp slt i64 %151, %152
  br i1 %.not.i.i130, label %if.entry31.TypeChecker_error.exit136_crit_edge, label %if.entry.i.i133

if.entry31.TypeChecker_error.exit136_crit_edge:   ; preds = %if.entry31
  %memberidx4.i.i134.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 1
  %.pre168 = load ptr, ptr %memberidx4.i.i134.phi.trans.insert, align 8
  br label %TypeChecker_error.exit136

if.entry.i.i133:                                  ; preds = %if.entry31
  %153 = shl nuw i64 %152, 1
  store i64 %153, ptr %memberidx1.i2.i129, align 4
  %memberidx2.i.i.i132 = getelementptr inbounds %Array_FloError_, ptr %149, i64 0, i32 1
  %154 = load ptr, ptr %memberidx2.i.i.i132, align 8
  %155 = shl i64 %152, 4
  %156 = call ptr @realloc(ptr %154, i64 %155)
  store ptr %156, ptr %memberidx2.i.i.i132, align 8
  %.pre167 = load i64, ptr %memberidx.i.i128, align 4
  br label %TypeChecker_error.exit136

TypeChecker_error.exit136:                        ; preds = %if.entry31.TypeChecker_error.exit136_crit_edge, %if.entry.i.i133
  %157 = phi ptr [ %.pre168, %if.entry31.TypeChecker_error.exit136_crit_edge ], [ %156, %if.entry.i.i133 ]
  %158 = phi i64 [ %151, %if.entry31.TypeChecker_error.exit136_crit_edge ], [ %.pre167, %if.entry.i.i133 ]
  %159 = add nsw i64 %158, 1
  store i64 %159, ptr %memberidx.i.i128, align 4
  %ptridx.i.i135 = getelementptr inbounds ptr, ptr %157, i64 %158
  store ptr %150, ptr %ptridx.i.i135, align 8
  br label %common.ret

ifend33:                                          ; preds = %ifend29
  %160 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %160, align 4
  %memberidx.i.i137 = getelementptr inbounds %Expression, ptr %160, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i137, align 4
  %memberidx1.i.i138 = getelementptr inbounds %Expression, ptr %160, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i138, align 1
  %memberidx.i139 = getelementptr inbounds %MemberExpression, ptr %160, i64 0, i32 4
  store ptr %1, ptr %memberidx.i139, align 8
  %memberidx1.i140 = getelementptr inbounds %MemberExpression, ptr %160, i64 0, i32 5
  store ptr %39, ptr %memberidx1.i140, align 8
  %memberidx2.i141 = getelementptr inbounds %Expression, ptr %160, i64 0, i32 3
  store ptr %common.ret.op.i89, ptr %memberidx2.i141, align 8
  %161 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %161, align 8
  %memberidx.i142 = getelementptr inbounds %Array_Expression_, ptr %161, i64 0, i32 2
  store i64 0, ptr %memberidx.i142, align 4
  %memberidx1.i143 = getelementptr inbounds %Array_Expression_, ptr %161, i64 0, i32 3
  store i64 16, ptr %memberidx1.i143, align 4
  %memberidx2.i144 = getelementptr inbounds %Array_Expression_, ptr %161, i64 0, i32 1
  %162 = tail call ptr @malloc(i32 128)
  store ptr %162, ptr %memberidx2.i144, align 8
  store ptr %91, ptr %162, align 8
  %163 = getelementptr inbounds ptr, ptr %162, i64 1
  store ptr %126, ptr %163, align 8
  store i64 2, ptr %memberidx.i142, align 4
  %164 = tail call ptr @malloc(i32 41)
  %memberidx41 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i89, i64 0, i32 2
  %165 = load ptr, ptr %memberidx41, align 8
  store i64 8, ptr %164, align 4
  %memberidx.i.i145 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i145, align 4
  %memberidx1.i.i146 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i146, align 1
  %memberidx.i147 = getelementptr inbounds %CallExpression, ptr %164, i64 0, i32 4
  store ptr %160, ptr %memberidx.i147, align 8
  %memberidx1.i148 = getelementptr inbounds %CallExpression, ptr %164, i64 0, i32 5
  store ptr %161, ptr %memberidx1.i148, align 8
  %memberidx2.i149 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 3
  store ptr %165, ptr %memberidx2.i149, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %left = alloca ptr, align 8
  %right = alloca ptr, align 8
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = add i64 %4, -19
  %6 = icmp ult i64 %5, 12
  %7 = icmp eq i64 %4, 19
  %memberidx1 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ExpressionNode, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2, align 4
  %10 = icmp eq i64 %9, 13
  %11 = and i1 %7, %10
  br i1 %11, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %12 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %12, align 4
  %13 = load ptr, ptr %memberidx1, align 8
  %memberidx4 = getelementptr inbounds %ExpressionIndexNode, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx4, align 8
  %15 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %12, ptr %14)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %16 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %16, i64 0, i32 6
  %17 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx2.i, align 4
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %common.ret, label %ifend7

ifend:                                            ; preds = %is_object.exit.ifend_crit_edge, %3
  %20 = phi ptr [ %.pre, %is_object.exit.ifend_crit_edge ], [ %8, %3 ]
  %21 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %20)
  store ptr %21, ptr %left, align 8
  %memberidx.i175 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %22 = load ptr, ptr %memberidx.i175, align 8
  %memberidx1.i176 = getelementptr inbounds %Compiler, ptr %22, i64 0, i32 6
  %23 = load ptr, ptr %memberidx1.i176, align 8
  %memberidx2.i177 = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 2
  %24 = load i64, ptr %memberidx2.i177, align 4
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %common.ret, label %ifend15

common.ret:                                       ; preds = %ifend19, %ifend, %if.entry, %TypeChecker_error.exit, %if.entry110, %if.entry102, %ifend98, %if.entry87, %ifend80, %ifend69, %ifend61, %if.entry34, %if.entry26, %if.entry17, %if.entry9
  %common.ret.op = phi ptr [ %33, %if.entry9 ], [ %45, %if.entry17 ], [ %61, %if.entry26 ], [ %65, %if.entry34 ], [ %100, %ifend61 ], [ %108, %ifend69 ], [ %121, %ifend80 ], [ %125, %if.entry87 ], [ %136, %ifend98 ], [ %137, %if.entry102 ], [ %147, %if.entry110 ], [ null, %TypeChecker_error.exit ], [ null, %if.entry ], [ null, %ifend ], [ null, %ifend19 ]
  ret ptr %common.ret.op

ifend7:                                           ; preds = %if.entry
  %memberidx8 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  %26 = load ptr, ptr %memberidx8, align 8
  %27 = load i64, ptr %26, align 4
  %28 = icmp eq i64 %27, 19
  br i1 %28, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend7, %if.entry.i
  %.tr5.i = phi ptr [ %29, %if.entry.i ], [ %26, %ifend7 ]
  %memberidx1.i266 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %29 = load ptr, ptr %memberidx1.i266, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 19
  br i1 %31, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend7
  %.lcssa.i = phi i64 [ %27, %ifend7 ], [ %30, %if.entry.i ]
  %32 = icmp eq i64 %.lcssa.i, 11
  br i1 %32, label %if.entry9, label %is_object.exit.ifend_crit_edge

is_object.exit.ifend_crit_edge:                   ; preds = %is_object.exit
  %.pre = load ptr, ptr %memberidx1, align 8
  br label %ifend

if.entry9:                                        ; preds = %is_object.exit
  %33 = tail call fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %15, ptr %2)
  br label %common.ret

ifend15:                                          ; preds = %ifend
  %memberidx16 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  %34 = load ptr, ptr %memberidx16, align 8
  %35 = load i64, ptr %34, align 4
  %36 = icmp eq i64 %35, 19
  br i1 %36, label %if.entry.i269, label %is_object.exit271

if.entry.i269:                                    ; preds = %ifend15, %if.entry.i269
  %.tr5.i267 = phi ptr [ %37, %if.entry.i269 ], [ %34, %ifend15 ]
  %memberidx1.i268 = getelementptr inbounds %GenericType, ptr %.tr5.i267, i64 0, i32 3
  %37 = load ptr, ptr %memberidx1.i268, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 19
  br i1 %39, label %if.entry.i269, label %is_object.exit271

is_object.exit271:                                ; preds = %if.entry.i269, %ifend15
  %.lcssa.i270 = phi i64 [ %35, %ifend15 ], [ %38, %if.entry.i269 ]
  %40 = icmp eq i64 %.lcssa.i270, 11
  %41 = xor i1 %6, true
  %42 = and i1 %40, %41
  %43 = icmp ne i64 %4, 18
  %44 = and i1 %43, %42
  br i1 %44, label %if.entry17, label %ifend19

if.entry17:                                       ; preds = %is_object.exit271
  %45 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %21, ptr %2, ptr null)
  br label %common.ret

ifend19:                                          ; preds = %is_object.exit271
  %memberidx21 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %46 = load ptr, ptr %memberidx21, align 8
  %47 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %34, ptr %46)
  store ptr %47, ptr %right, align 8
  %48 = load ptr, ptr %memberidx.i175, align 8
  %memberidx1.i179 = getelementptr inbounds %Compiler, ptr %48, i64 0, i32 6
  %49 = load ptr, ptr %memberidx1.i179, align 8
  %memberidx2.i180 = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i180, align 4
  %51 = icmp sgt i64 %50, 0
  br i1 %51, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend19
  %memberidx25 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 3
  %52 = load ptr, ptr %memberidx25, align 8
  %53 = load i64, ptr %52, align 4
  %54 = icmp eq i64 %53, 19
  br i1 %54, label %if.entry.i274, label %is_object.exit276

if.entry.i274:                                    ; preds = %ifend24, %if.entry.i274
  %.tr5.i272 = phi ptr [ %55, %if.entry.i274 ], [ %52, %ifend24 ]
  %memberidx1.i273 = getelementptr inbounds %GenericType, ptr %.tr5.i272, i64 0, i32 3
  %55 = load ptr, ptr %memberidx1.i273, align 8
  %56 = load i64, ptr %55, align 4
  %57 = icmp eq i64 %56, 19
  br i1 %57, label %if.entry.i274, label %is_object.exit276

is_object.exit276:                                ; preds = %if.entry.i274, %ifend24
  %.lcssa.i275 = phi i64 [ %53, %ifend24 ], [ %56, %if.entry.i274 ]
  %58 = icmp eq i64 %.lcssa.i275, 11
  %59 = icmp eq i64 %4, 18
  %60 = and i1 %59, %58
  br i1 %60, label %if.entry26, label %ifend31

if.entry26:                                       ; preds = %is_object.exit276
  %61 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %47, ptr %2, ptr %21)
  br label %common.ret

ifend31:                                          ; preds = %is_object.exit276
  %memberidx32 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %62 = load i1, ptr %memberidx32, align 1
  %memberidx33 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 1
  %63 = load i1, ptr %memberidx33, align 1
  %64 = and i1 %62, %63
  br i1 %6, label %if.entry34, label %ifend36

if.entry34:                                       ; preds = %ifend31
  %65 = tail call fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr nonnull %21, ptr nonnull %47, ptr %2)
  br label %common.ret

ifend36:                                          ; preds = %ifend31
  %66 = load ptr, ptr %memberidx16, align 8
  %67 = load i64, ptr %66, align 4
  %68 = icmp eq i64 %67, 20
  %69 = icmp ne i64 %53, 20
  %70 = and i1 %69, %68
  br i1 %70, label %if.entry41, label %ifend43

if.entry41:                                       ; preds = %ifend36
  store ptr %52, ptr %memberidx16, align 8
  %.pre281 = load i64, ptr %52, align 4
  %.pre282 = load ptr, ptr %memberidx25, align 8
  %.pre283 = load i64, ptr %.pre282, align 4
  br label %ifend43

ifend43:                                          ; preds = %ifend36, %if.entry41
  %71 = phi i64 [ %53, %ifend36 ], [ %.pre283, %if.entry41 ]
  %72 = phi i64 [ %67, %ifend36 ], [ %.pre281, %if.entry41 ]
  %73 = add i64 %72, -1
  %74 = icmp ult i64 %73, 9
  %75 = add i64 %71, -1
  %76 = icmp ult i64 %75, 9
  %77 = and i1 %74, %76
  br i1 %77, label %if.entry48, label %else49

if.entry48:                                       ; preds = %ifend43
  %78 = icmp eq i64 %4, 6
  br i1 %78, label %if.entry51, label %ifend53

else49:                                           ; preds = %ifend43
  %79 = or i64 %71, %72
  %80 = icmp eq i64 %79, 0
  %81 = add i64 %4, -15
  %82 = icmp ult i64 %81, 2
  %or.cond = select i1 %80, i1 %82, i1 false
  br i1 %or.cond, label %if.entry87, label %ifend50.thread

ifend50:                                          ; preds = %ifend65
  %83 = add i64 %4, -7
  %84 = icmp ult i64 %83, 6
  br i1 %84, label %if.entry96, label %ifend93.thread

ifend93.thread:                                   ; preds = %ifend50
  %85 = icmp eq i64 %71, 6
  br label %ifend104

ifend50.thread:                                   ; preds = %else49
  %86 = add i64 %4, -7
  %87 = icmp ult i64 %86, 6
  br i1 %87, label %ifend98, label %ifend93

if.entry51:                                       ; preds = %if.entry48
  %88 = icmp ult i64 %73, 7
  br i1 %88, label %if.entry55, label %ifend57

ifend53:                                          ; preds = %if.entry48
  %89 = add i64 %4, -1
  %90 = icmp ult i64 %89, 10
  br i1 %90, label %if.entry63, label %ifend65

if.entry55:                                       ; preds = %if.entry51
  %91 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %91, align 4
  %92 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %92, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %TypeCastExpression, ptr %92, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 3
  store ptr %91, ptr %memberidx1.i.i, align 8
  %93 = load i1, ptr %memberidx32, align 1
  store i1 %93, ptr %memberidx1.i.i.i, align 1
  store ptr %92, ptr %left, align 8
  %.pre290 = load ptr, ptr %memberidx25, align 8
  %.pre291 = load i64, ptr %.pre290, align 4
  %.pre292 = add i64 %.pre291, -1
  br label %ifend57

ifend57:                                          ; preds = %if.entry51, %if.entry55
  %.pre-phi = phi i64 [ %75, %if.entry51 ], [ %.pre292, %if.entry55 ]
  %94 = phi ptr [ %21, %if.entry51 ], [ %92, %if.entry55 ]
  %95 = icmp ult i64 %.pre-phi, 7
  br i1 %95, label %if.entry59, label %ifend61

if.entry59:                                       ; preds = %ifend57
  %96 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %96, align 4
  %97 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %97, align 4
  %memberidx.i.i.i184 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i184, align 4
  %memberidx1.i.i.i185 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 1
  %memberidx.i.i186 = getelementptr inbounds %TypeCastExpression, ptr %97, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i186, align 8
  %memberidx1.i.i187 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 3
  store ptr %96, ptr %memberidx1.i.i187, align 8
  %98 = load i1, ptr %memberidx33, align 1
  store i1 %98, ptr %memberidx1.i.i.i185, align 1
  store ptr %97, ptr %right, align 8
  br label %ifend61

ifend61:                                          ; preds = %ifend57, %if.entry59
  %99 = phi ptr [ %47, %ifend57 ], [ %97, %if.entry59 ]
  %100 = tail call ptr @malloc(i32 49)
  %memberidx62 = getelementptr inbounds %Expression, ptr %94, i64 0, i32 3
  %101 = load ptr, ptr %memberidx62, align 8
  store i64 8, ptr %100, align 4
  %memberidx.i.i190 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i190, align 4
  %memberidx1.i.i191 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 1
  %memberidx.i192 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 4
  store ptr %94, ptr %memberidx.i192, align 8
  %memberidx1.i193 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 5
  store i64 6, ptr %memberidx1.i193, align 4
  %memberidx2.i194 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 6
  store ptr %99, ptr %memberidx2.i194, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %100, i64 0, i32 3
  store ptr %101, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i191, align 1
  br label %common.ret

if.entry63:                                       ; preds = %ifend53
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %102 = load ptr, ptr %left, align 8
  %memberidx66 = getelementptr inbounds %Expression, ptr %102, i64 0, i32 3
  %103 = load ptr, ptr %memberidx66, align 8
  %104 = icmp ugt i64 %4, 6
  br i1 %104, label %if.entry67, label %ifend69

ifend65:                                          ; preds = %ifend53
  %105 = add i64 %4, -13
  %106 = icmp ult i64 %105, 5
  br i1 %106, label %if.entry70, label %ifend50

if.entry67:                                       ; preds = %if.entry63
  %107 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %107, align 4
  br label %ifend69

ifend69:                                          ; preds = %if.entry63, %if.entry67
  %exp_type.0 = phi ptr [ %107, %if.entry67 ], [ %103, %if.entry63 ]
  %108 = tail call ptr @malloc(i32 49)
  %109 = load ptr, ptr %right, align 8
  store i64 8, ptr %108, align 4
  %memberidx.i.i195 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i195, align 4
  %memberidx1.i.i196 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 1
  %memberidx.i197 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 4
  store ptr %102, ptr %memberidx.i197, align 8
  %memberidx1.i198 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i198, align 4
  %memberidx2.i199 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 6
  store ptr %109, ptr %memberidx2.i199, align 8
  %memberidx3.i200 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 3
  store ptr %exp_type.0, ptr %memberidx3.i200, align 8
  store i1 %64, ptr %memberidx1.i.i196, align 1
  br label %common.ret

if.entry70:                                       ; preds = %ifend65
  %110 = and i64 %72, -2
  %111 = icmp eq i64 %110, 8
  br i1 %111, label %if.entry74, label %ifend76

if.entry74:                                       ; preds = %if.entry70
  %112 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %112, align 4
  %memberidx.i202 = getelementptr inbounds %IntType, ptr %112, i64 0, i32 1
  store i1 true, ptr %memberidx.i202, align 1
  %113 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %113, align 4
  %memberidx.i.i.i203 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i203, align 4
  %memberidx1.i.i.i204 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 1
  %memberidx.i.i205 = getelementptr inbounds %TypeCastExpression, ptr %113, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i205, align 8
  %memberidx1.i.i206 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 3
  store ptr %112, ptr %memberidx1.i.i206, align 8
  %114 = load i1, ptr %memberidx32, align 1
  store i1 %114, ptr %memberidx1.i.i.i204, align 1
  store ptr %113, ptr %left, align 8
  %.pre288 = load ptr, ptr %memberidx25, align 8
  %.pre289 = load i64, ptr %.pre288, align 4
  br label %ifend76

ifend76:                                          ; preds = %if.entry70, %if.entry74
  %115 = phi i64 [ %71, %if.entry70 ], [ %.pre289, %if.entry74 ]
  %116 = and i64 %115, -2
  %117 = icmp eq i64 %116, 8
  br i1 %117, label %if.entry78, label %ifend80

if.entry78:                                       ; preds = %ifend76
  %118 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %118, align 4
  %memberidx.i209 = getelementptr inbounds %IntType, ptr %118, i64 0, i32 1
  store i1 true, ptr %memberidx.i209, align 1
  %119 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %119, align 4
  %memberidx.i.i.i210 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i210, align 4
  %memberidx1.i.i.i211 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 1
  %memberidx.i.i212 = getelementptr inbounds %TypeCastExpression, ptr %119, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i212, align 8
  %memberidx1.i.i213 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  store ptr %118, ptr %memberidx1.i.i213, align 8
  %120 = load i1, ptr %memberidx33, align 1
  store i1 %120, ptr %memberidx1.i.i.i211, align 1
  store ptr %119, ptr %right, align 8
  br label %ifend80

ifend80:                                          ; preds = %ifend76, %if.entry78
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %121 = tail call ptr @malloc(i32 49)
  %122 = load ptr, ptr %left, align 8
  %123 = load ptr, ptr %right, align 8
  %memberidx81 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %124 = load ptr, ptr %memberidx81, align 8
  store i64 8, ptr %121, align 4
  %memberidx.i.i216 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i216, align 4
  %memberidx1.i.i217 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 1
  %memberidx.i218 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 4
  store ptr %122, ptr %memberidx.i218, align 8
  %memberidx1.i219 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i219, align 4
  %memberidx2.i220 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 6
  store ptr %123, ptr %memberidx2.i220, align 8
  %memberidx3.i221 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 3
  store ptr %124, ptr %memberidx3.i221, align 8
  store i1 %64, ptr %memberidx1.i.i217, align 1
  br label %common.ret

if.entry87:                                       ; preds = %else49
  %125 = tail call ptr @malloc(i32 49)
  %126 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %125, align 4
  %memberidx.i.i223 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i223, align 4
  %memberidx1.i.i224 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 1
  %memberidx.i225 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 4
  store ptr %21, ptr %memberidx.i225, align 8
  %memberidx1.i226 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i226, align 4
  %memberidx2.i227 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i227, align 8
  %memberidx3.i228 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 3
  store ptr %126, ptr %memberidx3.i228, align 8
  store i1 %64, ptr %memberidx1.i.i224, align 1
  br label %common.ret

ifend93:                                          ; preds = %ifend50.thread
  %127 = add i64 %4, -1
  %128 = icmp ult i64 %127, 2
  %129 = icmp eq i64 %72, 13
  %130 = and i1 %128, %129
  %131 = icmp eq i64 %71, 6
  %132 = and i1 %130, %131
  br i1 %132, label %if.entry102, label %ifend104

if.entry96:                                       ; preds = %ifend50
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %.pre286 = load ptr, ptr %left, align 8
  %.pre287 = load ptr, ptr %right, align 8
  br label %ifend98

ifend98:                                          ; preds = %ifend50.thread, %if.entry96
  %133 = phi ptr [ %47, %ifend50.thread ], [ %.pre287, %if.entry96 ]
  %134 = phi ptr [ %21, %ifend50.thread ], [ %.pre286, %if.entry96 ]
  %135 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %135, align 4
  %136 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %136, align 4
  %memberidx.i.i230 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i230, align 4
  %memberidx1.i.i231 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 1
  %memberidx.i232 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 4
  store ptr %134, ptr %memberidx.i232, align 8
  %memberidx1.i233 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i233, align 4
  %memberidx2.i234 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 6
  store ptr %133, ptr %memberidx2.i234, align 8
  %memberidx3.i235 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 3
  store ptr %135, ptr %memberidx3.i235, align 8
  store i1 %64, ptr %memberidx1.i.i231, align 1
  br label %common.ret

if.entry102:                                      ; preds = %ifend93
  %137 = tail call ptr @malloc(i32 49)
  %138 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %137, align 4
  %memberidx.i.i237 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i237, align 4
  %memberidx1.i.i238 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 1
  %memberidx.i239 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 4
  store ptr %21, ptr %memberidx.i239, align 8
  %memberidx1.i240 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i240, align 4
  %memberidx2.i241 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i241, align 8
  %memberidx3.i242 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 3
  store ptr %138, ptr %memberidx3.i242, align 8
  store i1 false, ptr %memberidx1.i.i238, align 1
  br label %common.ret

ifend104:                                         ; preds = %ifend93.thread, %ifend93
  %139 = phi i1 [ %85, %ifend93.thread ], [ %131, %ifend93 ]
  %140 = icmp eq i64 %4, 31
  %141 = icmp eq i64 %72, 6
  %142 = and i1 %140, %141
  %143 = and i1 %142, %139
  br i1 %143, label %if.entry110, label %ifend112

if.entry110:                                      ; preds = %ifend104
  %144 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %144, ptr noundef nonnull align 8 dereferenceable(5) @171, i64 5, i1 false)
  %145 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %145, align 8
  %memberidx.i.i244 = getelementptr inbounds %string, ptr %145, i64 0, i32 1
  store ptr %144, ptr %memberidx.i.i244, align 8
  %memberidx1.i.i245 = getelementptr inbounds %string, ptr %145, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i245, align 4
  %memberidx2.i.i246 = getelementptr inbounds %string, ptr %145, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i246, align 4
  %146 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %145)
  %147 = tail call ptr @malloc(i32 42)
  %148 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %148, align 8
  %memberidx.i247 = getelementptr inbounds %Array_Expression_, ptr %148, i64 0, i32 2
  store i64 0, ptr %memberidx.i247, align 4
  %memberidx1.i248 = getelementptr inbounds %Array_Expression_, ptr %148, i64 0, i32 3
  store i64 16, ptr %memberidx1.i248, align 4
  %memberidx2.i249 = getelementptr inbounds %Array_Expression_, ptr %148, i64 0, i32 1
  %149 = tail call ptr @malloc(i32 128)
  store ptr %149, ptr %memberidx2.i249, align 8
  store ptr %21, ptr %149, align 8
  %150 = getelementptr inbounds ptr, ptr %149, i64 1
  store ptr %47, ptr %150, align 8
  store i64 2, ptr %memberidx.i247, align 4
  store i64 8, ptr %147, align 4
  %memberidx.i.i250 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i250, align 4
  %memberidx1.i.i251 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i251, align 1
  %memberidx.i252 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 6
  store ptr %146, ptr %memberidx.i252, align 8
  %memberidx1.i253 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 5
  store i1 true, ptr %memberidx1.i253, align 1
  %memberidx2.i254 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 4
  store ptr %148, ptr %memberidx2.i254, align 8
  %memberidx3.i255 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 3
  store ptr %146, ptr %memberidx3.i255, align 8
  br label %common.ret

ifend112:                                         ; preds = %ifend104
  %151 = tail call fastcc ptr @dump_bin_op(i64 %4)
  %152 = load ptr, ptr %151, align 8
  %memberidx115 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %152, i64 0, i32 5
  %153 = load ptr, ptr %memberidx115, align 8
  %154 = tail call ptr %153(ptr nonnull %151)
  %155 = load ptr, ptr %memberidx16, align 8
  %156 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %155)
  %157 = load ptr, ptr %156, align 8
  %memberidx117 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %157, i64 0, i32 5
  %158 = load ptr, ptr %memberidx117, align 8
  %159 = tail call ptr %158(ptr nonnull %156)
  %160 = load ptr, ptr %memberidx25, align 8
  %161 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %160)
  %162 = load ptr, ptr %161, align 8
  %memberidx119 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %162, i64 0, i32 5
  %163 = load ptr, ptr %memberidx119, align 8
  %164 = tail call ptr %163(ptr nonnull %161)
  %165 = alloca ptr, align 8
  %166 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %165, ptr nonnull @172, ptr %154, ptr %159, ptr %164)
  %167 = load ptr, ptr %165, align 8
  %168 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %168, align 8
  %memberidx.i256 = getelementptr inbounds %string, ptr %168, i64 0, i32 1
  store ptr %167, ptr %memberidx.i256, align 8
  %memberidx1.i257 = getelementptr inbounds %string, ptr %168, i64 0, i32 2
  store i64 %166, ptr %memberidx1.i257, align 4
  %memberidx2.i258 = getelementptr inbounds %string, ptr %168, i64 0, i32 3
  store i64 %166, ptr %memberidx2.i258, align 4
  tail call void @free(ptr %154)
  tail call void @free(ptr %159)
  tail call void @free(ptr %164)
  %169 = load ptr, ptr %2, align 8
  %170 = load ptr, ptr %memberidx.i175, align 8
  %memberidx1.i260 = getelementptr inbounds %Compiler, ptr %170, i64 0, i32 6
  %171 = load ptr, ptr %memberidx1.i260, align 8
  %172 = call ptr @malloc(i32 24)
  store i64 5, ptr %172, align 4
  %memberidx1.i.i261 = getelementptr inbounds %FloError, ptr %172, i64 0, i32 2
  store ptr %169, ptr %memberidx1.i.i261, align 8
  %memberidx2.i.i262 = getelementptr inbounds %FloError, ptr %172, i64 0, i32 1
  store ptr %168, ptr %memberidx2.i.i262, align 8
  %memberidx.i.i263 = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 2
  %173 = load i64, ptr %memberidx.i.i263, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 3
  %174 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %173, %174
  br i1 %.not.i.i, label %ifend112.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

ifend112.TypeChecker_error.exit_crit_edge:        ; preds = %ifend112
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 1
  %.pre285 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %ifend112
  %175 = shl nuw i64 %174, 1
  store i64 %175, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 1
  %176 = load ptr, ptr %memberidx2.i.i.i, align 8
  %177 = shl i64 %174, 4
  %178 = call ptr @realloc(ptr %176, i64 %177)
  store ptr %178, ptr %memberidx2.i.i.i, align 8
  %.pre284 = load i64, ptr %memberidx.i.i263, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %ifend112.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %179 = phi ptr [ %.pre285, %ifend112.TypeChecker_error.exit_crit_edge ], [ %178, %if.entry.i.i ]
  %180 = phi i64 [ %173, %ifend112.TypeChecker_error.exit_crit_edge ], [ %.pre284, %if.entry.i.i ]
  %181 = add nsw i64 %180, 1
  store i64 %181, ptr %memberidx.i.i263, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %179, i64 %180
  store ptr %172, ptr %ptridx.i.i, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %3, align 4
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 6
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %TypeChecker_error.exit113, %TypeChecker_error.exit134, %TypeChecker_get_func_args_from_expression.exit, %2, %ifend23, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %16, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %87, %ifend23 ], [ null, %2 ], [ null, %TypeChecker_get_func_args_from_expression.exit ], [ null, %TypeChecker_error.exit134 ], [ null, %TypeChecker_error.exit113 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  %10 = load i64, ptr %memberidx1, align 4
  %11 = icmp eq i64 %10, 16
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = load i64, ptr %12, align 4
  %14 = icmp eq i64 %13, 20
  %15 = and i1 %11, %14
  br i1 %15, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %ifend
  %16 = tail call fastcc ptr @TypeChecker_check_intrinsic_call(ptr nonnull %0, ptr nonnull %5, ptr nonnull %1)
  br label %common.ret

ifend6:                                           ; preds = %ifend
  %.not = icmp eq i64 %13, 15
  br i1 %.not, label %ifend11, label %if.entry9

if.entry9:                                        ; preds = %ifend6
  %17 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %12)
  %18 = load ptr, ptr %17, align 8
  %memberidx13 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %18, i64 0, i32 5
  %19 = load ptr, ptr %memberidx13, align 8
  %20 = tail call ptr %19(ptr nonnull %17)
  %21 = alloca ptr, align 8
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %21, ptr nonnull @201, ptr %20)
  %23 = load ptr, ptr %21, align 8
  %24 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %24, align 8
  %memberidx.i73 = getelementptr inbounds %string, ptr %24, i64 0, i32 1
  store ptr %23, ptr %memberidx.i73, align 8
  %memberidx1.i74 = getelementptr inbounds %string, ptr %24, i64 0, i32 2
  store i64 %22, ptr %memberidx1.i74, align 4
  %memberidx2.i75 = getelementptr inbounds %string, ptr %24, i64 0, i32 3
  store i64 %22, ptr %memberidx2.i75, align 4
  tail call void @free(ptr %20)
  %25 = load ptr, ptr %memberidx, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i77 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i77, align 8
  %29 = call ptr @malloc(i32 24)
  store i64 5, ptr %29, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %29, i64 0, i32 2
  store ptr %26, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %29, i64 0, i32 1
  store ptr %24, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 3
  %31 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %30, %31
  br i1 %.not.i.i, label %if.entry9.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry9.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry9
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %.pre9 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry9
  %32 = shl nuw i64 %31, 1
  store i64 %32, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %33 = load ptr, ptr %memberidx2.i.i.i, align 8
  %34 = shl i64 %31, 4
  %35 = call ptr @realloc(ptr %33, i64 %34)
  store ptr %35, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry9.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %36 = phi ptr [ %.pre9, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %35, %if.entry.i.i ]
  %37 = phi i64 [ %30, %if.entry9.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %36, i64 %37
  store ptr %29, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend11:                                          ; preds = %ifend6
  switch i64 %10, label %TypeChecker_get_func_args_from_expression.exit [
    i64 7, label %if.entry.i
    i64 12, label %if.entry9.i
  ]

if.entry.i:                                       ; preds = %ifend11
  %memberidx1.i79 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %39 = load ptr, ptr %memberidx1.i79, align 8
  %40 = load i64, ptr %39, align 4
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %if.entry3.i, label %TypeChecker_get_func_args_from_expression.exit

if.entry3.i:                                      ; preds = %if.entry.i
  %42 = load ptr, ptr %0, align 8
  %memberidx.i.i80 = getelementptr inbounds %Program, ptr %42, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i.i80, align 8
  %memberidx1.i.i81 = getelementptr inbounds %VarId, ptr %39, i64 0, i32 1
  %44 = load i64, ptr %memberidx1.i.i81, align 4
  %memberidx.i.i.i82 = getelementptr inbounds %Array_Module_, ptr %43, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i.i82, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %45, i64 %44
  %46 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i83 = getelementptr inbounds %Module, ptr %46, i64 0, i32 4
  %47 = load ptr, ptr %memberidx2.i.i83, align 8
  %memberidx3.i.i = getelementptr inbounds %VarId, ptr %39, i64 0, i32 2
  %48 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Function_, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %49, i64 %48
  %50 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx7.i = getelementptr inbounds %Function, ptr %50, i64 0, i32 2
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

if.entry9.i:                                      ; preds = %ifend11
  %memberidx12.i = getelementptr inbounds %MemberExpression, ptr %5, i64 0, i32 5
  %51 = load ptr, ptr %memberidx12.i, align 8
  %52 = load ptr, ptr %0, align 8
  %memberidx.i.i20.i = getelementptr inbounds %PropId, ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i.i20.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Program, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %55 = load i64, ptr %53, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %56, i64 %55
  %57 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %57, i64 0, i32 3
  %58 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %53, i64 0, i32 2
  %59 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %58, i64 0, i32 1
  %60 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %ptridx.i6.i.i.i.i = getelementptr inbounds ptr, ptr %60, i64 %59
  %61 = load ptr, ptr %ptridx.i6.i.i.i.i, align 8
  %memberidx.i21.i = getelementptr inbounds %Class, ptr %61, i64 0, i32 5
  %62 = load ptr, ptr %memberidx.i21.i, align 8
  %memberidx1.i22.i = getelementptr inbounds %PropId, ptr %51, i64 0, i32 2
  %63 = load i64, ptr %memberidx1.i22.i, align 4
  %memberidx.i3.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i3.i.i, align 8
  %ptridx.i.i23.i = getelementptr inbounds ptr, ptr %64, i64 %63
  %65 = load ptr, ptr %ptridx.i.i23.i, align 8
  %memberidx14.i = getelementptr inbounds %ClassMethod, ptr %65, i64 0, i32 6
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

TypeChecker_get_func_args_from_expression.exit.sink.split: ; preds = %if.entry9.i, %if.entry3.i
  %memberidx7.i.sink = phi ptr [ %memberidx7.i, %if.entry3.i ], [ %memberidx14.i, %if.entry9.i ]
  %66 = load ptr, ptr %memberidx7.i.sink, align 8
  br label %TypeChecker_get_func_args_from_expression.exit

TypeChecker_get_func_args_from_expression.exit:   ; preds = %TypeChecker_get_func_args_from_expression.exit.sink.split, %ifend11, %if.entry.i
  %common.ret.op.i = phi ptr [ null, %if.entry.i ], [ null, %ifend11 ], [ %66, %TypeChecker_get_func_args_from_expression.exit.sink.split ]
  %memberidx17 = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 4
  %67 = load ptr, ptr %memberidx17, align 8
  %68 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr nonnull %12, ptr %common.ret.op.i, ptr %67)
  %69 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i85 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 6
  %70 = load ptr, ptr %memberidx1.i85, align 8
  %memberidx2.i86 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 2
  %71 = load i64, ptr %memberidx2.i86, align 4
  %72 = icmp sgt i64 %71, 0
  br i1 %72, label %common.ret, label %ifend20

ifend20:                                          ; preds = %TypeChecker_get_func_args_from_expression.exit
  %memberidx.i87 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i87, align 8
  %memberidx1.i88 = getelementptr inbounds %Array_Type_, ptr %73, i64 0, i32 2
  %74 = load i64, ptr %memberidx1.i88, align 4
  %memberidx2.i89 = getelementptr inbounds %Array_Expression_, ptr %68, i64 0, i32 2
  %75 = load i64, ptr %memberidx2.i89, align 4
  %.not.i = icmp eq i64 %74, %75
  br i1 %.not.i, label %for.cond.i.preheader, label %if.entry24

for.cond.i.preheader:                             ; preds = %ifend20
  %76 = icmp sgt i64 %74, 0
  br i1 %76, label %for.body.i.lr.ph, label %ifend23

for.body.i.lr.ph:                                 ; preds = %for.cond.i.preheader
  %memberidx.i16.i = getelementptr inbounds %Array_Expression_, ptr %68, i64 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %ifend8.i
  %i.0.i7 = phi i64 [ 0, %for.body.i.lr.ph ], [ %84, %ifend8.i ]
  %77 = load ptr, ptr %memberidx.i87, align 8
  %memberidx.i.i91 = getelementptr inbounds %Array_Type_, ptr %77, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i.i91, align 8
  %ptridx.i.i92 = getelementptr inbounds ptr, ptr %78, i64 %i.0.i7
  %79 = load ptr, ptr %ptridx.i.i92, align 8
  %80 = load ptr, ptr %memberidx.i16.i, align 8
  %ptridx.i17.i = getelementptr inbounds ptr, ptr %80, i64 %i.0.i7
  %81 = load ptr, ptr %ptridx.i17.i, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %81, i64 0, i32 3
  %82 = load ptr, ptr %memberidx5.i, align 8
  %83 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %79, ptr %82)
  br i1 %83, label %ifend8.i, label %else25

ifend8.i:                                         ; preds = %for.body.i
  %84 = add nuw nsw i64 %i.0.i7, 1
  %85 = load i64, ptr %memberidx2.i89, align 4
  %86 = icmp slt i64 %84, %85
  br i1 %86, label %for.body.i, label %ifend23

ifend23:                                          ; preds = %ifend8.i, %for.cond.i.preheader
  %87 = tail call ptr @malloc(i32 41)
  %memberidx37 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 2
  %88 = load ptr, ptr %memberidx37, align 8
  store i64 8, ptr %87, align 4
  %memberidx.i.i93 = getelementptr inbounds %Expression, ptr %87, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i93, align 4
  %memberidx1.i.i94 = getelementptr inbounds %Expression, ptr %87, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i94, align 1
  %memberidx.i95 = getelementptr inbounds %CallExpression, ptr %87, i64 0, i32 4
  store ptr %5, ptr %memberidx.i95, align 8
  %memberidx1.i96 = getelementptr inbounds %CallExpression, ptr %87, i64 0, i32 5
  store ptr %68, ptr %memberidx1.i96, align 8
  %memberidx2.i97 = getelementptr inbounds %Expression, ptr %87, i64 0, i32 3
  store ptr %88, ptr %memberidx2.i97, align 8
  br label %common.ret

if.entry24:                                       ; preds = %ifend20
  %89 = alloca ptr, align 8
  %90 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %89, ptr nonnull @202, i64 %74, i64 %75)
  %91 = load ptr, ptr %89, align 8
  %92 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %92, align 8
  %memberidx.i98 = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  store ptr %91, ptr %memberidx.i98, align 8
  %memberidx1.i99 = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  store i64 %90, ptr %memberidx1.i99, align 4
  %memberidx2.i100 = getelementptr inbounds %string, ptr %92, i64 0, i32 3
  store i64 %90, ptr %memberidx2.i100, align 4
  %93 = load ptr, ptr %1, align 8
  %94 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i102 = getelementptr inbounds %Compiler, ptr %94, i64 0, i32 6
  %95 = load ptr, ptr %memberidx1.i102, align 8
  %96 = call ptr @malloc(i32 24)
  store i64 4, ptr %96, align 4
  %memberidx1.i.i103 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 2
  store ptr %93, ptr %memberidx1.i.i103, align 8
  %memberidx2.i.i104 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 1
  store ptr %92, ptr %memberidx2.i.i104, align 8
  %memberidx.i.i105 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 2
  %97 = load i64, ptr %memberidx.i.i105, align 4
  %memberidx1.i2.i106 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 3
  %98 = load i64, ptr %memberidx1.i2.i106, align 4
  %.not.i.i107 = icmp slt i64 %97, %98
  br i1 %.not.i.i107, label %if.entry24.TypeChecker_error.exit113_crit_edge, label %if.entry.i.i110

if.entry24.TypeChecker_error.exit113_crit_edge:   ; preds = %if.entry24
  %memberidx4.i.i111.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %.pre11 = load ptr, ptr %memberidx4.i.i111.phi.trans.insert, align 8
  br label %TypeChecker_error.exit113

if.entry.i.i110:                                  ; preds = %if.entry24
  %99 = shl nuw i64 %98, 1
  store i64 %99, ptr %memberidx1.i2.i106, align 4
  %memberidx2.i.i.i109 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %100 = load ptr, ptr %memberidx2.i.i.i109, align 8
  %101 = shl i64 %98, 4
  %102 = call ptr @realloc(ptr %100, i64 %101)
  store ptr %102, ptr %memberidx2.i.i.i109, align 8
  %.pre10 = load i64, ptr %memberidx.i.i105, align 4
  br label %TypeChecker_error.exit113

TypeChecker_error.exit113:                        ; preds = %if.entry24.TypeChecker_error.exit113_crit_edge, %if.entry.i.i110
  %103 = phi ptr [ %.pre11, %if.entry24.TypeChecker_error.exit113_crit_edge ], [ %102, %if.entry.i.i110 ]
  %104 = phi i64 [ %97, %if.entry24.TypeChecker_error.exit113_crit_edge ], [ %.pre10, %if.entry.i.i110 ]
  %105 = add nsw i64 %104, 1
  store i64 %105, ptr %memberidx.i.i105, align 4
  %ptridx.i.i112 = getelementptr inbounds ptr, ptr %103, i64 %104
  store ptr %96, ptr %ptridx.i.i112, align 8
  br label %common.ret

else25:                                           ; preds = %for.body.i
  %106 = load ptr, ptr %memberidx.i87, align 8
  %memberidx.i114 = getelementptr inbounds %Array_Type_, ptr %106, i64 0, i32 1
  %107 = load ptr, ptr %memberidx.i114, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %107, i64 %i.0.i7
  %108 = load ptr, ptr %ptridx.i, align 8
  %109 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %108)
  %110 = load ptr, ptr %109, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx32, align 8
  %112 = tail call ptr %111(ptr nonnull %109)
  %113 = load ptr, ptr %memberidx.i16.i, align 8
  %ptridx.i116 = getelementptr inbounds ptr, ptr %113, i64 %i.0.i7
  %114 = load ptr, ptr %ptridx.i116, align 8
  %memberidx33 = getelementptr inbounds %Expression, ptr %114, i64 0, i32 3
  %115 = load ptr, ptr %memberidx33, align 8
  %116 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %115)
  %117 = load ptr, ptr %116, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %117, i64 0, i32 5
  %118 = load ptr, ptr %memberidx34, align 8
  %119 = tail call ptr %118(ptr nonnull %116)
  %120 = alloca ptr, align 8
  %121 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %120, ptr nonnull @203, ptr %112, ptr %119)
  %122 = load ptr, ptr %120, align 8
  %123 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %123, align 8
  %memberidx.i117 = getelementptr inbounds %string, ptr %123, i64 0, i32 1
  store ptr %122, ptr %memberidx.i117, align 8
  %memberidx1.i118 = getelementptr inbounds %string, ptr %123, i64 0, i32 2
  store i64 %121, ptr %memberidx1.i118, align 4
  %memberidx2.i119 = getelementptr inbounds %string, ptr %123, i64 0, i32 3
  store i64 %121, ptr %memberidx2.i119, align 4
  tail call void @free(ptr %112)
  tail call void @free(ptr %119)
  %124 = load ptr, ptr %memberidx17, align 8
  %memberidx.i120 = getelementptr inbounds %Array_ExpressionNode_, ptr %124, i64 0, i32 1
  %125 = load ptr, ptr %memberidx.i120, align 8
  %ptridx.i121 = getelementptr inbounds ptr, ptr %125, i64 %i.0.i7
  %126 = load ptr, ptr %ptridx.i121, align 8
  %127 = load ptr, ptr %126, align 8
  %128 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i123 = getelementptr inbounds %Compiler, ptr %128, i64 0, i32 6
  %129 = load ptr, ptr %memberidx1.i123, align 8
  %130 = call ptr @malloc(i32 24)
  store i64 5, ptr %130, align 4
  %memberidx1.i.i124 = getelementptr inbounds %FloError, ptr %130, i64 0, i32 2
  store ptr %127, ptr %memberidx1.i.i124, align 8
  %memberidx2.i.i125 = getelementptr inbounds %FloError, ptr %130, i64 0, i32 1
  store ptr %123, ptr %memberidx2.i.i125, align 8
  %memberidx.i.i126 = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 2
  %131 = load i64, ptr %memberidx.i.i126, align 4
  %memberidx1.i2.i127 = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 3
  %132 = load i64, ptr %memberidx1.i2.i127, align 4
  %.not.i.i128 = icmp slt i64 %131, %132
  br i1 %.not.i.i128, label %else25.TypeChecker_error.exit134_crit_edge, label %if.entry.i.i131

else25.TypeChecker_error.exit134_crit_edge:       ; preds = %else25
  %memberidx4.i.i132.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 1
  %.pre13 = load ptr, ptr %memberidx4.i.i132.phi.trans.insert, align 8
  br label %TypeChecker_error.exit134

if.entry.i.i131:                                  ; preds = %else25
  %133 = shl nuw i64 %132, 1
  store i64 %133, ptr %memberidx1.i2.i127, align 4
  %memberidx2.i.i.i130 = getelementptr inbounds %Array_FloError_, ptr %129, i64 0, i32 1
  %134 = load ptr, ptr %memberidx2.i.i.i130, align 8
  %135 = shl i64 %132, 4
  %136 = call ptr @realloc(ptr %134, i64 %135)
  store ptr %136, ptr %memberidx2.i.i.i130, align 8
  %.pre12 = load i64, ptr %memberidx.i.i126, align 4
  br label %TypeChecker_error.exit134

TypeChecker_error.exit134:                        ; preds = %else25.TypeChecker_error.exit134_crit_edge, %if.entry.i.i131
  %137 = phi ptr [ %.pre13, %else25.TypeChecker_error.exit134_crit_edge ], [ %136, %if.entry.i.i131 ]
  %138 = phi i64 [ %131, %else25.TypeChecker_error.exit134_crit_edge ], [ %.pre12, %if.entry.i.i131 ]
  %139 = add nsw i64 %138, 1
  store i64 %139, ptr %memberidx.i.i126, align 4
  %ptridx.i.i133 = getelementptr inbounds ptr, ptr %137, i64 %138
  store ptr %130, ptr %ptridx.i.i133, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_type(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeNode, ptr %1, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %ifend51 [
    i64 13, label %if.entry
    i64 14, label %if.entry5
    i64 15, label %if.entry40
    i64 16, label %if.entry49
  ]

common.ret:                                       ; preds = %ifend114, %ifend128, %for.end120, %TypeChecker_error.exit, %if.entry107, %if.entry104, %if.entry101, %if.entry98, %if.entry95, %if.entry92, %if.entry89, %if.entry86, %if.entry83, %if.entry80, %if.entry77, %if.entry74, %if.entry71, %if.entry68, %if.entry65, %if.entry62, %if.entry59, %if.entry56, %ifend51, %for.end, %ifend35, %TypeChecker_error.exit515, %TypeChecker_error.exit499, %TypeChecker_error.exit483, %TypeChecker_error.exit467, %if.entry9, %if.entry
  %common.ret.op = phi ptr [ %4, %if.entry ], [ %14, %if.entry9 ], [ null, %TypeChecker_error.exit467 ], [ null, %TypeChecker_error.exit483 ], [ null, %TypeChecker_error.exit499 ], [ null, %TypeChecker_error.exit515 ], [ %92, %ifend35 ], [ %114, %for.end ], [ %125, %ifend51 ], [ %126, %if.entry56 ], [ %133, %if.entry59 ], [ %140, %if.entry62 ], [ %147, %if.entry65 ], [ %154, %if.entry68 ], [ %161, %if.entry71 ], [ %168, %if.entry74 ], [ %175, %if.entry77 ], [ %182, %if.entry80 ], [ %189, %if.entry83 ], [ %196, %if.entry86 ], [ %203, %if.entry89 ], [ %210, %if.entry92 ], [ %217, %if.entry95 ], [ %224, %if.entry98 ], [ %231, %if.entry101 ], [ %238, %if.entry104 ], [ %245, %if.entry107 ], [ null, %TypeChecker_error.exit ], [ null, %for.end120 ], [ %274, %ifend128 ], [ %250, %ifend114 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %4 = tail call ptr @malloc(i32 16)
  %memberidx3 = getelementptr inbounds %PointerTypeNode, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %memberidx3, align 8
  %6 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %5)
  store i64 13, ptr %4, align 4
  %memberidx.i444 = getelementptr inbounds %PointerType, ptr %4, i64 0, i32 1
  store ptr %6, ptr %memberidx.i444, align 8
  br label %common.ret

if.entry5:                                        ; preds = %2
  %7 = alloca %IntType, align 8
  store i64 6, ptr %7, align 8
  %memberidx.i445 = getelementptr inbounds %IntType, ptr %7, i64 0, i32 1
  store i1 false, ptr %memberidx.i445, align 8
  %memberidx8 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %memberidx8, align 8
  %9 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %7, ptr %8)
  %memberidx.i449 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %10 = load ptr, ptr %memberidx.i449, align 8
  %memberidx1.i450 = getelementptr inbounds %Compiler, ptr %10, i64 0, i32 6
  %11 = load ptr, ptr %memberidx1.i450, align 8
  %memberidx2.i451 = getelementptr inbounds %Array_FloError_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx2.i451, align 4
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %if.entry5
  %14 = call ptr @malloc(i32 8)
  store i64 20, ptr %14, align 4
  br label %common.ret

ifend11:                                          ; preds = %if.entry5
  %memberidx12 = getelementptr inbounds %Expression, ptr %9, i64 0, i32 3
  %15 = load ptr, ptr %memberidx12, align 8
  %16 = load i64, ptr %15, align 4
  %17 = add i64 %16, -1
  %18 = icmp ult i64 %17, 7
  br i1 %18, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend11
  %19 = call ptr @malloc(i32 23)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(23) %19, ptr noundef nonnull align 8 dereferenceable(23) @148, i64 23, i1 false)
  %20 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i452 = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i452, align 8
  %memberidx1.i.i453 = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 23, ptr %memberidx1.i.i453, align 4
  %memberidx2.i.i454 = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 23, ptr %memberidx2.i.i454, align 4
  %21 = load ptr, ptr %memberidx8, align 8
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %memberidx.i449, align 8
  %memberidx1.i456 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 6
  %24 = load ptr, ptr %memberidx1.i456, align 8
  %25 = call ptr @malloc(i32 24)
  store i64 4, ptr %25, align 4
  %memberidx1.i.i457 = getelementptr inbounds %FloError, ptr %25, i64 0, i32 2
  store ptr %22, ptr %memberidx1.i.i457, align 8
  %memberidx2.i.i458 = getelementptr inbounds %FloError, ptr %25, i64 0, i32 1
  store ptr %20, ptr %memberidx2.i.i458, align 8
  %memberidx.i.i459 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %26 = load i64, ptr %memberidx.i.i459, align 4
  %memberidx1.i2.i460 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 3
  %27 = load i64, ptr %memberidx1.i2.i460, align 4
  %.not.i.i461 = icmp slt i64 %26, %27
  br i1 %.not.i.i461, label %if.entry13.TypeChecker_error.exit467_crit_edge, label %if.entry.i.i464

if.entry13.TypeChecker_error.exit467_crit_edge:   ; preds = %if.entry13
  %memberidx4.i.i465.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %.pre579 = load ptr, ptr %memberidx4.i.i465.phi.trans.insert, align 8
  br label %TypeChecker_error.exit467

if.entry.i.i464:                                  ; preds = %if.entry13
  %28 = shl nuw i64 %27, 1
  store i64 %28, ptr %memberidx1.i2.i460, align 4
  %memberidx2.i.i.i463 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %29 = load ptr, ptr %memberidx2.i.i.i463, align 8
  %30 = shl i64 %27, 4
  %31 = call ptr @realloc(ptr %29, i64 %30)
  store ptr %31, ptr %memberidx2.i.i.i463, align 8
  %.pre578 = load i64, ptr %memberidx.i.i459, align 4
  br label %TypeChecker_error.exit467

TypeChecker_error.exit467:                        ; preds = %if.entry13.TypeChecker_error.exit467_crit_edge, %if.entry.i.i464
  %32 = phi ptr [ %.pre579, %if.entry13.TypeChecker_error.exit467_crit_edge ], [ %31, %if.entry.i.i464 ]
  %33 = phi i64 [ %26, %if.entry13.TypeChecker_error.exit467_crit_edge ], [ %.pre578, %if.entry.i.i464 ]
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx.i.i459, align 4
  %ptridx.i.i466 = getelementptr inbounds ptr, ptr %32, i64 %33
  store ptr %25, ptr %ptridx.i.i466, align 8
  br label %common.ret

ifend15:                                          ; preds = %ifend11
  %memberidx19 = getelementptr inbounds %IntType, ptr %15, i64 0, i32 1
  %35 = load i1, ptr %memberidx19, align 1
  %36 = icmp ne i64 %16, 6
  %37 = or i1 %36, %35
  br i1 %37, label %if.entry21, label %ifend23

if.entry21:                                       ; preds = %ifend15
  %38 = call ptr @malloc(i32 23)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(23) %38, ptr noundef nonnull align 8 dereferenceable(23) @149, i64 23, i1 false)
  %39 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i468 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i468, align 8
  %memberidx1.i.i469 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 23, ptr %memberidx1.i.i469, align 4
  %memberidx2.i.i470 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 23, ptr %memberidx2.i.i470, align 4
  %40 = load ptr, ptr %memberidx8, align 8
  %41 = load ptr, ptr %40, align 8
  %42 = load ptr, ptr %memberidx.i449, align 8
  %memberidx1.i472 = getelementptr inbounds %Compiler, ptr %42, i64 0, i32 6
  %43 = load ptr, ptr %memberidx1.i472, align 8
  %44 = call ptr @malloc(i32 24)
  store i64 4, ptr %44, align 4
  %memberidx1.i.i473 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 2
  store ptr %41, ptr %memberidx1.i.i473, align 8
  %memberidx2.i.i474 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 1
  store ptr %39, ptr %memberidx2.i.i474, align 8
  %memberidx.i.i475 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %45 = load i64, ptr %memberidx.i.i475, align 4
  %memberidx1.i2.i476 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 3
  %46 = load i64, ptr %memberidx1.i2.i476, align 4
  %.not.i.i477 = icmp slt i64 %45, %46
  br i1 %.not.i.i477, label %if.entry21.TypeChecker_error.exit483_crit_edge, label %if.entry.i.i480

if.entry21.TypeChecker_error.exit483_crit_edge:   ; preds = %if.entry21
  %memberidx4.i.i481.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %.pre585 = load ptr, ptr %memberidx4.i.i481.phi.trans.insert, align 8
  br label %TypeChecker_error.exit483

if.entry.i.i480:                                  ; preds = %if.entry21
  %47 = shl nuw i64 %46, 1
  store i64 %47, ptr %memberidx1.i2.i476, align 4
  %memberidx2.i.i.i479 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %48 = load ptr, ptr %memberidx2.i.i.i479, align 8
  %49 = shl i64 %46, 4
  %50 = call ptr @realloc(ptr %48, i64 %49)
  store ptr %50, ptr %memberidx2.i.i.i479, align 8
  %.pre584 = load i64, ptr %memberidx.i.i475, align 4
  br label %TypeChecker_error.exit483

TypeChecker_error.exit483:                        ; preds = %if.entry21.TypeChecker_error.exit483_crit_edge, %if.entry.i.i480
  %51 = phi ptr [ %.pre585, %if.entry21.TypeChecker_error.exit483_crit_edge ], [ %50, %if.entry.i.i480 ]
  %52 = phi i64 [ %45, %if.entry21.TypeChecker_error.exit483_crit_edge ], [ %.pre584, %if.entry.i.i480 ]
  %53 = add nsw i64 %52, 1
  store i64 %53, ptr %memberidx.i.i475, align 4
  %ptridx.i.i482 = getelementptr inbounds ptr, ptr %51, i64 %52
  store ptr %44, ptr %ptridx.i.i482, align 8
  br label %common.ret

ifend23:                                          ; preds = %ifend15
  %memberidx26 = getelementptr inbounds %Expression, ptr %9, i64 0, i32 1
  %54 = load i1, ptr %memberidx26, align 1
  br i1 %54, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend23
  %55 = call ptr @malloc(i32 30)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(30) %55, ptr noundef nonnull align 8 dereferenceable(30) @150, i64 30, i1 false)
  %56 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %56, align 8
  %memberidx.i.i484 = getelementptr inbounds %string, ptr %56, i64 0, i32 1
  store ptr %55, ptr %memberidx.i.i484, align 8
  %memberidx1.i.i485 = getelementptr inbounds %string, ptr %56, i64 0, i32 2
  store i64 30, ptr %memberidx1.i.i485, align 4
  %memberidx2.i.i486 = getelementptr inbounds %string, ptr %56, i64 0, i32 3
  store i64 30, ptr %memberidx2.i.i486, align 4
  %57 = load ptr, ptr %memberidx8, align 8
  %58 = load ptr, ptr %57, align 8
  %59 = load ptr, ptr %memberidx.i449, align 8
  %memberidx1.i488 = getelementptr inbounds %Compiler, ptr %59, i64 0, i32 6
  %60 = load ptr, ptr %memberidx1.i488, align 8
  %61 = call ptr @malloc(i32 24)
  store i64 4, ptr %61, align 4
  %memberidx1.i.i489 = getelementptr inbounds %FloError, ptr %61, i64 0, i32 2
  store ptr %58, ptr %memberidx1.i.i489, align 8
  %memberidx2.i.i490 = getelementptr inbounds %FloError, ptr %61, i64 0, i32 1
  store ptr %56, ptr %memberidx2.i.i490, align 8
  %memberidx.i.i491 = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 2
  %62 = load i64, ptr %memberidx.i.i491, align 4
  %memberidx1.i2.i492 = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 3
  %63 = load i64, ptr %memberidx1.i2.i492, align 4
  %.not.i.i493 = icmp slt i64 %62, %63
  br i1 %.not.i.i493, label %if.entry27.TypeChecker_error.exit499_crit_edge, label %if.entry.i.i496

if.entry27.TypeChecker_error.exit499_crit_edge:   ; preds = %if.entry27
  %memberidx4.i.i497.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 1
  %.pre581 = load ptr, ptr %memberidx4.i.i497.phi.trans.insert, align 8
  br label %TypeChecker_error.exit499

if.entry.i.i496:                                  ; preds = %if.entry27
  %64 = shl nuw i64 %63, 1
  store i64 %64, ptr %memberidx1.i2.i492, align 4
  %memberidx2.i.i.i495 = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i.i.i495, align 8
  %66 = shl i64 %63, 4
  %67 = call ptr @realloc(ptr %65, i64 %66)
  store ptr %67, ptr %memberidx2.i.i.i495, align 8
  %.pre580 = load i64, ptr %memberidx.i.i491, align 4
  br label %TypeChecker_error.exit499

TypeChecker_error.exit499:                        ; preds = %if.entry27.TypeChecker_error.exit499_crit_edge, %if.entry.i.i496
  %68 = phi ptr [ %.pre581, %if.entry27.TypeChecker_error.exit499_crit_edge ], [ %67, %if.entry.i.i496 ]
  %69 = phi i64 [ %62, %if.entry27.TypeChecker_error.exit499_crit_edge ], [ %.pre580, %if.entry.i.i496 ]
  %70 = add nsw i64 %69, 1
  store i64 %70, ptr %memberidx.i.i491, align 4
  %ptridx.i.i498 = getelementptr inbounds ptr, ptr %68, i64 %69
  store ptr %61, ptr %ptridx.i.i498, align 8
  br label %common.ret

ifend29:                                          ; preds = %ifend23
  %71 = load ptr, ptr %0, align 8
  %72 = call fastcc i64 @evaluate_const_int_expression(ptr %71, ptr nonnull %9)
  %73 = icmp slt i64 %72, 0
  br i1 %73, label %if.entry33, label %ifend35

if.entry33:                                       ; preds = %ifend29
  %74 = call ptr @malloc(i32 28)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %74, ptr noundef nonnull align 8 dereferenceable(28) @151, i64 28, i1 false)
  %75 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %75, align 8
  %memberidx.i.i500 = getelementptr inbounds %string, ptr %75, i64 0, i32 1
  store ptr %74, ptr %memberidx.i.i500, align 8
  %memberidx1.i.i501 = getelementptr inbounds %string, ptr %75, i64 0, i32 2
  store i64 28, ptr %memberidx1.i.i501, align 4
  %memberidx2.i.i502 = getelementptr inbounds %string, ptr %75, i64 0, i32 3
  store i64 28, ptr %memberidx2.i.i502, align 4
  %76 = load ptr, ptr %memberidx8, align 8
  %77 = load ptr, ptr %76, align 8
  %78 = load ptr, ptr %memberidx.i449, align 8
  %memberidx1.i504 = getelementptr inbounds %Compiler, ptr %78, i64 0, i32 6
  %79 = load ptr, ptr %memberidx1.i504, align 8
  %80 = call ptr @malloc(i32 24)
  store i64 4, ptr %80, align 4
  %memberidx1.i.i505 = getelementptr inbounds %FloError, ptr %80, i64 0, i32 2
  store ptr %77, ptr %memberidx1.i.i505, align 8
  %memberidx2.i.i506 = getelementptr inbounds %FloError, ptr %80, i64 0, i32 1
  store ptr %75, ptr %memberidx2.i.i506, align 8
  %memberidx.i.i507 = getelementptr inbounds %Array_FloError_, ptr %79, i64 0, i32 2
  %81 = load i64, ptr %memberidx.i.i507, align 4
  %memberidx1.i2.i508 = getelementptr inbounds %Array_FloError_, ptr %79, i64 0, i32 3
  %82 = load i64, ptr %memberidx1.i2.i508, align 4
  %.not.i.i509 = icmp slt i64 %81, %82
  br i1 %.not.i.i509, label %if.entry33.TypeChecker_error.exit515_crit_edge, label %if.entry.i.i512

if.entry33.TypeChecker_error.exit515_crit_edge:   ; preds = %if.entry33
  %memberidx4.i.i513.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %79, i64 0, i32 1
  %.pre583 = load ptr, ptr %memberidx4.i.i513.phi.trans.insert, align 8
  br label %TypeChecker_error.exit515

if.entry.i.i512:                                  ; preds = %if.entry33
  %83 = shl nuw i64 %82, 1
  store i64 %83, ptr %memberidx1.i2.i508, align 4
  %memberidx2.i.i.i511 = getelementptr inbounds %Array_FloError_, ptr %79, i64 0, i32 1
  %84 = load ptr, ptr %memberidx2.i.i.i511, align 8
  %85 = shl i64 %82, 4
  %86 = call ptr @realloc(ptr %84, i64 %85)
  store ptr %86, ptr %memberidx2.i.i.i511, align 8
  %.pre582 = load i64, ptr %memberidx.i.i507, align 4
  br label %TypeChecker_error.exit515

TypeChecker_error.exit515:                        ; preds = %if.entry33.TypeChecker_error.exit515_crit_edge, %if.entry.i.i512
  %87 = phi ptr [ %.pre583, %if.entry33.TypeChecker_error.exit515_crit_edge ], [ %86, %if.entry.i.i512 ]
  %88 = phi i64 [ %81, %if.entry33.TypeChecker_error.exit515_crit_edge ], [ %.pre582, %if.entry.i.i512 ]
  %89 = add nsw i64 %88, 1
  store i64 %89, ptr %memberidx.i.i507, align 4
  %ptridx.i.i514 = getelementptr inbounds ptr, ptr %87, i64 %88
  store ptr %80, ptr %ptridx.i.i514, align 8
  br label %common.ret

ifend35:                                          ; preds = %ifend29
  %memberidx38 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 2
  %90 = load ptr, ptr %memberidx38, align 8
  %91 = call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %90)
  %92 = tail call ptr @malloc(i32 24)
  store i64 14, ptr %92, align 4
  %memberidx.i518 = getelementptr inbounds %ArrayType, ptr %92, i64 0, i32 1
  store ptr %91, ptr %memberidx.i518, align 8
  %memberidx1.i519 = getelementptr inbounds %ArrayType, ptr %92, i64 0, i32 2
  store i64 %72, ptr %memberidx1.i519, align 4
  br label %common.ret

if.entry40:                                       ; preds = %2
  %93 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %93, align 8
  %memberidx.i520 = getelementptr inbounds %Array_Type_, ptr %93, i64 0, i32 2
  store i64 0, ptr %memberidx.i520, align 4
  %memberidx1.i521 = getelementptr inbounds %Array_Type_, ptr %93, i64 0, i32 3
  store i64 8, ptr %memberidx1.i521, align 4
  %memberidx2.i522 = getelementptr inbounds %Array_Type_, ptr %93, i64 0, i32 1
  %94 = tail call ptr @malloc(i32 64)
  store ptr %94, ptr %memberidx2.i522, align 8
  store i64 0, ptr %memberidx.i520, align 4
  %memberidx45 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 2
  %95 = load ptr, ptr %memberidx45, align 8
  %96 = tail call ptr @malloc(i32 25)
  %memberidx.i523 = getelementptr inbounds %Array_TypeNode_, ptr %95, i64 0, i32 1
  %97 = load ptr, ptr %memberidx.i523, align 8
  %memberidx1.i524 = getelementptr inbounds %Array_TypeNode_, ptr %95, i64 0, i32 2
  %98 = load i64, ptr %memberidx1.i524, align 4
  store i1 false, ptr %96, align 1
  %memberidx1.i.i525 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %96, i64 0, i32 1
  %memberidx2.i.i526 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %96, i64 0, i32 3
  store ptr %97, ptr %memberidx2.i.i526, align 8
  %memberidx3.i.i527 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %96, i64 0, i32 2
  store i64 %98, ptr %memberidx3.i.i527, align 4
  store i64 1, ptr %memberidx1.i.i525, align 4
  %99 = icmp slt i64 %98, 1
  br i1 %99, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry40, %Array_Type____sl__.exit545
  %100 = phi i64 [ %111, %Array_Type____sl__.exit545 ], [ 1, %if.entry40 ]
  %arg.0568.in = phi ptr [ %ptridx.i534, %Array_Type____sl__.exit545 ], [ %97, %if.entry40 ]
  %arg.0568 = load ptr, ptr %arg.0568.in, align 8
  %101 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %arg.0568)
  %102 = load i64, ptr %memberidx.i520, align 4
  %103 = load i64, ptr %memberidx1.i521, align 4
  %.not.i538 = icmp slt i64 %102, %103
  br i1 %.not.i538, label %for.body.Array_Type____sl__.exit545_crit_edge, label %if.entry.i541

for.body.Array_Type____sl__.exit545_crit_edge:    ; preds = %for.body
  %.pre577 = load ptr, ptr %memberidx2.i522, align 8
  br label %Array_Type____sl__.exit545

if.entry.i541:                                    ; preds = %for.body
  %104 = shl nuw i64 %103, 1
  store i64 %104, ptr %memberidx1.i521, align 4
  %105 = load ptr, ptr %memberidx2.i522, align 8
  %106 = shl i64 %103, 4
  %107 = tail call ptr @realloc(ptr %105, i64 %106)
  store ptr %107, ptr %memberidx2.i522, align 8
  %.pre576 = load i64, ptr %memberidx.i520, align 4
  br label %Array_Type____sl__.exit545

Array_Type____sl__.exit545:                       ; preds = %for.body.Array_Type____sl__.exit545_crit_edge, %if.entry.i541
  %108 = phi ptr [ %.pre577, %for.body.Array_Type____sl__.exit545_crit_edge ], [ %107, %if.entry.i541 ]
  %109 = phi i64 [ %102, %for.body.Array_Type____sl__.exit545_crit_edge ], [ %.pre576, %if.entry.i541 ]
  %110 = add nsw i64 %109, 1
  store i64 %110, ptr %memberidx.i520, align 4
  %ptridx.i543 = getelementptr inbounds ptr, ptr %108, i64 %109
  store ptr %101, ptr %ptridx.i543, align 8
  %111 = add nuw nsw i64 %100, 1
  store i64 %111, ptr %memberidx1.i.i525, align 4
  %ptridx.i534 = getelementptr inbounds ptr, ptr %97, i64 %100
  %.not587 = icmp slt i64 %100, %98
  br i1 %.not587, label %for.body, label %for.end

for.end:                                          ; preds = %Array_Type____sl__.exit545, %if.entry40
  tail call void @free(ptr nonnull %96)
  %memberidx47 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 3
  %112 = load ptr, ptr %memberidx47, align 8
  %113 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %112)
  %114 = tail call ptr @malloc(i32 25)
  store i64 15, ptr %114, align 4
  %memberidx.i516 = getelementptr inbounds %FunctionType, ptr %114, i64 0, i32 1
  store ptr %93, ptr %memberidx.i516, align 8
  %memberidx1.i517 = getelementptr inbounds %FunctionType, ptr %114, i64 0, i32 2
  store ptr %113, ptr %memberidx1.i517, align 8
  br label %common.ret

if.entry49:                                       ; preds = %2
  %115 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %115, align 8
  %memberidx.i446 = getelementptr inbounds %Array_Type_, ptr %115, i64 0, i32 2
  store i64 0, ptr %memberidx.i446, align 4
  %memberidx1.i447 = getelementptr inbounds %Array_Type_, ptr %115, i64 0, i32 3
  store i64 8, ptr %memberidx1.i447, align 4
  %memberidx2.i448 = getelementptr inbounds %Array_Type_, ptr %115, i64 0, i32 1
  %116 = tail call ptr @malloc(i32 64)
  store ptr %116, ptr %memberidx2.i448, align 8
  store i64 0, ptr %memberidx.i446, align 4
  %memberidx54 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 2
  %117 = load ptr, ptr %memberidx54, align 8
  %memberidx55 = getelementptr inbounds %IdentifierToken, ptr %117, i64 0, i32 2
  %118 = load ptr, ptr %memberidx55, align 8
  %119 = tail call ptr @malloc(i32 4)
  store i32 1819242338, ptr %119, align 8
  %120 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %120, align 8
  %memberidx.i.i441 = getelementptr inbounds %string, ptr %120, i64 0, i32 1
  store ptr %119, ptr %memberidx.i.i441, align 8
  %memberidx1.i.i442 = getelementptr inbounds %string, ptr %120, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i442, align 4
  %memberidx2.i.i443 = getelementptr inbounds %string, ptr %120, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i443, align 4
  %memberidx.i433 = getelementptr inbounds %string, ptr %118, i64 0, i32 2
  %121 = load i64, ptr %memberidx.i433, align 4
  %.not.i435 = icmp eq i64 %121, 4
  br i1 %.not.i435, label %ifend.i439, label %ifend58

ifend.i439:                                       ; preds = %if.entry49
  %memberidx2.i437 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %122 = load ptr, ptr %memberidx2.i437, align 8
  %123 = tail call i64 @memcmp(ptr %122, ptr nonnull %119, i64 4)
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %if.entry56, label %ifend58

ifend51:                                          ; preds = %2
  %125 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %125, align 4
  br label %common.ret

if.entry56:                                       ; preds = %ifend.i439
  %126 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %126, align 4
  br label %common.ret

ifend58:                                          ; preds = %if.entry49, %ifend.i439
  %127 = tail call ptr @malloc(i32 2)
  store i16 13429, ptr %127, align 8
  %128 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %128, align 8
  %memberidx.i.i430 = getelementptr inbounds %string, ptr %128, i64 0, i32 1
  store ptr %127, ptr %memberidx.i.i430, align 8
  %memberidx1.i.i431 = getelementptr inbounds %string, ptr %128, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i431, align 4
  %memberidx2.i.i432 = getelementptr inbounds %string, ptr %128, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i432, align 4
  %129 = load i64, ptr %memberidx.i433, align 4
  %.not.i424 = icmp eq i64 %129, 2
  br i1 %.not.i424, label %ifend.i428, label %ifend61

ifend.i428:                                       ; preds = %ifend58
  %memberidx2.i426 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %130 = load ptr, ptr %memberidx2.i426, align 8
  %131 = tail call i64 @memcmp(ptr %130, ptr nonnull %127, i64 2)
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %if.entry59, label %ifend61

if.entry59:                                       ; preds = %ifend.i428
  %133 = tail call ptr @malloc(i32 9)
  store i64 1, ptr %133, align 4
  %memberidx.i421 = getelementptr inbounds %IntType, ptr %133, i64 0, i32 1
  store i1 false, ptr %memberidx.i421, align 1
  br label %common.ret

ifend61:                                          ; preds = %ifend58, %ifend.i428
  %134 = tail call ptr @malloc(i32 2)
  store i16 14453, ptr %134, align 8
  %135 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %135, align 8
  %memberidx.i.i418 = getelementptr inbounds %string, ptr %135, i64 0, i32 1
  store ptr %134, ptr %memberidx.i.i418, align 8
  %memberidx1.i.i419 = getelementptr inbounds %string, ptr %135, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i419, align 4
  %memberidx2.i.i420 = getelementptr inbounds %string, ptr %135, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i420, align 4
  %136 = load i64, ptr %memberidx.i433, align 4
  %.not.i412 = icmp eq i64 %136, 2
  br i1 %.not.i412, label %ifend.i416, label %ifend64

ifend.i416:                                       ; preds = %ifend61
  %memberidx2.i414 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %137 = load ptr, ptr %memberidx2.i414, align 8
  %138 = tail call i64 @memcmp(ptr %137, ptr nonnull %134, i64 2)
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %if.entry62, label %ifend64

if.entry62:                                       ; preds = %ifend.i416
  %140 = tail call ptr @malloc(i32 9)
  store i64 2, ptr %140, align 4
  %memberidx.i409 = getelementptr inbounds %IntType, ptr %140, i64 0, i32 1
  store i1 false, ptr %memberidx.i409, align 1
  br label %common.ret

ifend64:                                          ; preds = %ifend61, %ifend.i416
  %141 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %141, ptr noundef nonnull align 8 dereferenceable(3) @152, i64 3, i1 false)
  %142 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %142, align 8
  %memberidx.i.i406 = getelementptr inbounds %string, ptr %142, i64 0, i32 1
  store ptr %141, ptr %memberidx.i.i406, align 8
  %memberidx1.i.i407 = getelementptr inbounds %string, ptr %142, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i407, align 4
  %memberidx2.i.i408 = getelementptr inbounds %string, ptr %142, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i408, align 4
  %143 = load i64, ptr %memberidx.i433, align 4
  %.not.i400 = icmp eq i64 %143, 3
  br i1 %.not.i400, label %ifend.i404, label %ifend67

ifend.i404:                                       ; preds = %ifend64
  %memberidx2.i402 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %144 = load ptr, ptr %memberidx2.i402, align 8
  %145 = tail call i64 @memcmp(ptr %144, ptr nonnull %141, i64 3)
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %if.entry65, label %ifend67

if.entry65:                                       ; preds = %ifend.i404
  %147 = tail call ptr @malloc(i32 9)
  store i64 3, ptr %147, align 4
  %memberidx.i397 = getelementptr inbounds %IntType, ptr %147, i64 0, i32 1
  store i1 false, ptr %memberidx.i397, align 1
  br label %common.ret

ifend67:                                          ; preds = %ifend64, %ifend.i404
  %148 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %148, ptr noundef nonnull align 8 dereferenceable(3) @153, i64 3, i1 false)
  %149 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %149, align 8
  %memberidx.i.i394 = getelementptr inbounds %string, ptr %149, i64 0, i32 1
  store ptr %148, ptr %memberidx.i.i394, align 8
  %memberidx1.i.i395 = getelementptr inbounds %string, ptr %149, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i395, align 4
  %memberidx2.i.i396 = getelementptr inbounds %string, ptr %149, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i396, align 4
  %150 = load i64, ptr %memberidx.i433, align 4
  %.not.i388 = icmp eq i64 %150, 3
  br i1 %.not.i388, label %ifend.i392, label %ifend70

ifend.i392:                                       ; preds = %ifend67
  %memberidx2.i390 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %151 = load ptr, ptr %memberidx2.i390, align 8
  %152 = tail call i64 @memcmp(ptr %151, ptr nonnull %148, i64 3)
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %if.entry68, label %ifend70

if.entry68:                                       ; preds = %ifend.i392
  %154 = tail call ptr @malloc(i32 9)
  store i64 4, ptr %154, align 4
  %memberidx.i385 = getelementptr inbounds %IntType, ptr %154, i64 0, i32 1
  store i1 false, ptr %memberidx.i385, align 1
  br label %common.ret

ifend70:                                          ; preds = %ifend67, %ifend.i392
  %155 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %155, ptr noundef nonnull align 8 dereferenceable(3) @154, i64 3, i1 false)
  %156 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %156, align 8
  %memberidx.i.i382 = getelementptr inbounds %string, ptr %156, i64 0, i32 1
  store ptr %155, ptr %memberidx.i.i382, align 8
  %memberidx1.i.i383 = getelementptr inbounds %string, ptr %156, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i383, align 4
  %memberidx2.i.i384 = getelementptr inbounds %string, ptr %156, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i384, align 4
  %157 = load i64, ptr %memberidx.i433, align 4
  %.not.i376 = icmp eq i64 %157, 3
  br i1 %.not.i376, label %ifend.i380, label %ifend73

ifend.i380:                                       ; preds = %ifend70
  %memberidx2.i378 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %158 = load ptr, ptr %memberidx2.i378, align 8
  %159 = tail call i64 @memcmp(ptr %158, ptr nonnull %155, i64 3)
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %if.entry71, label %ifend73

if.entry71:                                       ; preds = %ifend.i380
  %161 = tail call ptr @malloc(i32 9)
  store i64 5, ptr %161, align 4
  %memberidx.i373 = getelementptr inbounds %IntType, ptr %161, i64 0, i32 1
  store i1 false, ptr %memberidx.i373, align 1
  br label %common.ret

ifend73:                                          ; preds = %ifend70, %ifend.i380
  %162 = tail call ptr @malloc(i32 4)
  store i32 942813557, ptr %162, align 8
  %163 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %163, align 8
  %memberidx.i.i370 = getelementptr inbounds %string, ptr %163, i64 0, i32 1
  store ptr %162, ptr %memberidx.i.i370, align 8
  %memberidx1.i.i371 = getelementptr inbounds %string, ptr %163, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i371, align 4
  %memberidx2.i.i372 = getelementptr inbounds %string, ptr %163, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i372, align 4
  %164 = load i64, ptr %memberidx.i433, align 4
  %.not.i364 = icmp eq i64 %164, 4
  br i1 %.not.i364, label %ifend.i368, label %ifend76

ifend.i368:                                       ; preds = %ifend73
  %memberidx2.i366 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %165 = load ptr, ptr %memberidx2.i366, align 8
  %166 = tail call i64 @memcmp(ptr %165, ptr nonnull %162, i64 4)
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %if.entry74, label %ifend76

if.entry74:                                       ; preds = %ifend.i368
  %168 = tail call ptr @malloc(i32 9)
  store i64 7, ptr %168, align 4
  %memberidx.i361 = getelementptr inbounds %IntType, ptr %168, i64 0, i32 1
  store i1 false, ptr %memberidx.i361, align 1
  br label %common.ret

ifend76:                                          ; preds = %ifend73, %ifend.i368
  %169 = tail call ptr @malloc(i32 4)
  store i32 1953393013, ptr %169, align 8
  %170 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %170, align 8
  %memberidx.i.i358 = getelementptr inbounds %string, ptr %170, i64 0, i32 1
  store ptr %169, ptr %memberidx.i.i358, align 8
  %memberidx1.i.i359 = getelementptr inbounds %string, ptr %170, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i359, align 4
  %memberidx2.i.i360 = getelementptr inbounds %string, ptr %170, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i360, align 4
  %171 = load i64, ptr %memberidx.i433, align 4
  %.not.i352 = icmp eq i64 %171, 4
  br i1 %.not.i352, label %ifend.i356, label %ifend79

ifend.i356:                                       ; preds = %ifend76
  %memberidx2.i354 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %172 = load ptr, ptr %memberidx2.i354, align 8
  %173 = tail call i64 @memcmp(ptr %172, ptr nonnull %169, i64 4)
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %if.entry77, label %ifend79

if.entry77:                                       ; preds = %ifend.i356
  %175 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %175, align 4
  %memberidx.i349 = getelementptr inbounds %IntType, ptr %175, i64 0, i32 1
  store i1 false, ptr %memberidx.i349, align 1
  br label %common.ret

ifend79:                                          ; preds = %ifend76, %ifend.i356
  %176 = tail call ptr @malloc(i32 2)
  store i16 13417, ptr %176, align 8
  %177 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %177, align 8
  %memberidx.i.i346 = getelementptr inbounds %string, ptr %177, i64 0, i32 1
  store ptr %176, ptr %memberidx.i.i346, align 8
  %memberidx1.i.i347 = getelementptr inbounds %string, ptr %177, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i347, align 4
  %memberidx2.i.i348 = getelementptr inbounds %string, ptr %177, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i348, align 4
  %178 = load i64, ptr %memberidx.i433, align 4
  %.not.i340 = icmp eq i64 %178, 2
  br i1 %.not.i340, label %ifend.i344, label %ifend82

ifend.i344:                                       ; preds = %ifend79
  %memberidx2.i342 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %179 = load ptr, ptr %memberidx2.i342, align 8
  %180 = tail call i64 @memcmp(ptr %179, ptr nonnull %176, i64 2)
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %if.entry80, label %ifend82

if.entry80:                                       ; preds = %ifend.i344
  %182 = tail call ptr @malloc(i32 9)
  store i64 1, ptr %182, align 4
  %memberidx.i337 = getelementptr inbounds %IntType, ptr %182, i64 0, i32 1
  store i1 true, ptr %memberidx.i337, align 1
  br label %common.ret

ifend82:                                          ; preds = %ifend79, %ifend.i344
  %183 = tail call ptr @malloc(i32 2)
  store i16 14441, ptr %183, align 8
  %184 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %184, align 8
  %memberidx.i.i334 = getelementptr inbounds %string, ptr %184, i64 0, i32 1
  store ptr %183, ptr %memberidx.i.i334, align 8
  %memberidx1.i.i335 = getelementptr inbounds %string, ptr %184, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i335, align 4
  %memberidx2.i.i336 = getelementptr inbounds %string, ptr %184, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i336, align 4
  %185 = load i64, ptr %memberidx.i433, align 4
  %.not.i328 = icmp eq i64 %185, 2
  br i1 %.not.i328, label %ifend.i332, label %ifend85

ifend.i332:                                       ; preds = %ifend82
  %memberidx2.i330 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %186 = load ptr, ptr %memberidx2.i330, align 8
  %187 = tail call i64 @memcmp(ptr %186, ptr nonnull %183, i64 2)
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %if.entry83, label %ifend85

if.entry83:                                       ; preds = %ifend.i332
  %189 = tail call ptr @malloc(i32 9)
  store i64 2, ptr %189, align 4
  %memberidx.i325 = getelementptr inbounds %IntType, ptr %189, i64 0, i32 1
  store i1 true, ptr %memberidx.i325, align 1
  br label %common.ret

ifend85:                                          ; preds = %ifend82, %ifend.i332
  %190 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %190, ptr noundef nonnull align 8 dereferenceable(3) @155, i64 3, i1 false)
  %191 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %191, align 8
  %memberidx.i.i322 = getelementptr inbounds %string, ptr %191, i64 0, i32 1
  store ptr %190, ptr %memberidx.i.i322, align 8
  %memberidx1.i.i323 = getelementptr inbounds %string, ptr %191, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i323, align 4
  %memberidx2.i.i324 = getelementptr inbounds %string, ptr %191, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i324, align 4
  %192 = load i64, ptr %memberidx.i433, align 4
  %.not.i316 = icmp eq i64 %192, 3
  br i1 %.not.i316, label %ifend.i320, label %ifend88

ifend.i320:                                       ; preds = %ifend85
  %memberidx2.i318 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %193 = load ptr, ptr %memberidx2.i318, align 8
  %194 = tail call i64 @memcmp(ptr %193, ptr nonnull %190, i64 3)
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %if.entry86, label %ifend88

if.entry86:                                       ; preds = %ifend.i320
  %196 = tail call ptr @malloc(i32 9)
  store i64 3, ptr %196, align 4
  %memberidx.i313 = getelementptr inbounds %IntType, ptr %196, i64 0, i32 1
  store i1 true, ptr %memberidx.i313, align 1
  br label %common.ret

ifend88:                                          ; preds = %ifend85, %ifend.i320
  %197 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %197, ptr noundef nonnull align 8 dereferenceable(3) @156, i64 3, i1 false)
  %198 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %198, align 8
  %memberidx.i.i310 = getelementptr inbounds %string, ptr %198, i64 0, i32 1
  store ptr %197, ptr %memberidx.i.i310, align 8
  %memberidx1.i.i311 = getelementptr inbounds %string, ptr %198, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i311, align 4
  %memberidx2.i.i312 = getelementptr inbounds %string, ptr %198, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i312, align 4
  %199 = load i64, ptr %memberidx.i433, align 4
  %.not.i304 = icmp eq i64 %199, 3
  br i1 %.not.i304, label %ifend.i308, label %ifend91

ifend.i308:                                       ; preds = %ifend88
  %memberidx2.i306 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %200 = load ptr, ptr %memberidx2.i306, align 8
  %201 = tail call i64 @memcmp(ptr %200, ptr nonnull %197, i64 3)
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %if.entry89, label %ifend91

if.entry89:                                       ; preds = %ifend.i308
  %203 = tail call ptr @malloc(i32 9)
  store i64 4, ptr %203, align 4
  %memberidx.i301 = getelementptr inbounds %IntType, ptr %203, i64 0, i32 1
  store i1 true, ptr %memberidx.i301, align 1
  br label %common.ret

ifend91:                                          ; preds = %ifend88, %ifend.i308
  %204 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %204, ptr noundef nonnull align 8 dereferenceable(3) @157, i64 3, i1 false)
  %205 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %205, align 8
  %memberidx.i.i298 = getelementptr inbounds %string, ptr %205, i64 0, i32 1
  store ptr %204, ptr %memberidx.i.i298, align 8
  %memberidx1.i.i299 = getelementptr inbounds %string, ptr %205, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i299, align 4
  %memberidx2.i.i300 = getelementptr inbounds %string, ptr %205, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i300, align 4
  %206 = load i64, ptr %memberidx.i433, align 4
  %.not.i292 = icmp eq i64 %206, 3
  br i1 %.not.i292, label %ifend.i296, label %ifend94

ifend.i296:                                       ; preds = %ifend91
  %memberidx2.i294 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %207 = load ptr, ptr %memberidx2.i294, align 8
  %208 = tail call i64 @memcmp(ptr %207, ptr nonnull %204, i64 3)
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %if.entry92, label %ifend94

if.entry92:                                       ; preds = %ifend.i296
  %210 = tail call ptr @malloc(i32 9)
  store i64 5, ptr %210, align 4
  %memberidx.i289 = getelementptr inbounds %IntType, ptr %210, i64 0, i32 1
  store i1 true, ptr %memberidx.i289, align 1
  br label %common.ret

ifend94:                                          ; preds = %ifend91, %ifend.i296
  %211 = tail call ptr @malloc(i32 4)
  store i32 942813545, ptr %211, align 8
  %212 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %212, align 8
  %memberidx.i.i286 = getelementptr inbounds %string, ptr %212, i64 0, i32 1
  store ptr %211, ptr %memberidx.i.i286, align 8
  %memberidx1.i.i287 = getelementptr inbounds %string, ptr %212, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i287, align 4
  %memberidx2.i.i288 = getelementptr inbounds %string, ptr %212, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i288, align 4
  %213 = load i64, ptr %memberidx.i433, align 4
  %.not.i280 = icmp eq i64 %213, 4
  br i1 %.not.i280, label %ifend.i284, label %ifend97

ifend.i284:                                       ; preds = %ifend94
  %memberidx2.i282 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %214 = load ptr, ptr %memberidx2.i282, align 8
  %215 = tail call i64 @memcmp(ptr %214, ptr nonnull %211, i64 4)
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %if.entry95, label %ifend97

if.entry95:                                       ; preds = %ifend.i284
  %217 = tail call ptr @malloc(i32 9)
  store i64 7, ptr %217, align 4
  %memberidx.i277 = getelementptr inbounds %IntType, ptr %217, i64 0, i32 1
  store i1 true, ptr %memberidx.i277, align 1
  br label %common.ret

ifend97:                                          ; preds = %ifend94, %ifend.i284
  %218 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %218, ptr noundef nonnull align 8 dereferenceable(3) @78, i64 3, i1 false)
  %219 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %219, align 8
  %memberidx.i.i274 = getelementptr inbounds %string, ptr %219, i64 0, i32 1
  store ptr %218, ptr %memberidx.i.i274, align 8
  %memberidx1.i.i275 = getelementptr inbounds %string, ptr %219, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i275, align 4
  %memberidx2.i.i276 = getelementptr inbounds %string, ptr %219, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i276, align 4
  %220 = load i64, ptr %memberidx.i433, align 4
  %.not.i268 = icmp eq i64 %220, 3
  br i1 %.not.i268, label %ifend.i272, label %ifend100

ifend.i272:                                       ; preds = %ifend97
  %memberidx2.i270 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %221 = load ptr, ptr %memberidx2.i270, align 8
  %222 = tail call i64 @memcmp(ptr %221, ptr nonnull %218, i64 3)
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %if.entry98, label %ifend100

if.entry98:                                       ; preds = %ifend.i272
  %224 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %224, align 4
  %memberidx.i265 = getelementptr inbounds %IntType, ptr %224, i64 0, i32 1
  store i1 true, ptr %memberidx.i265, align 1
  br label %common.ret

ifend100:                                         ; preds = %ifend97, %ifend.i272
  %225 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %225, ptr noundef nonnull align 8 dereferenceable(3) @85, i64 3, i1 false)
  %226 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %226, align 8
  %memberidx.i.i262 = getelementptr inbounds %string, ptr %226, i64 0, i32 1
  store ptr %225, ptr %memberidx.i.i262, align 8
  %memberidx1.i.i263 = getelementptr inbounds %string, ptr %226, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i263, align 4
  %memberidx2.i.i264 = getelementptr inbounds %string, ptr %226, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i264, align 4
  %227 = load i64, ptr %memberidx.i433, align 4
  %.not.i256 = icmp eq i64 %227, 3
  br i1 %.not.i256, label %ifend.i260, label %ifend103

ifend.i260:                                       ; preds = %ifend100
  %memberidx2.i258 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %228 = load ptr, ptr %memberidx2.i258, align 8
  %229 = tail call i64 @memcmp(ptr %228, ptr nonnull %225, i64 3)
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %if.entry101, label %ifend103

if.entry101:                                      ; preds = %ifend.i260
  %231 = tail call ptr @malloc(i32 8)
  store i64 8, ptr %231, align 4
  br label %common.ret

ifend103:                                         ; preds = %ifend100, %ifend.i260
  %232 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %232, ptr noundef nonnull align 8 dereferenceable(3) @86, i64 3, i1 false)
  %233 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %233, align 8
  %memberidx.i.i251 = getelementptr inbounds %string, ptr %233, i64 0, i32 1
  store ptr %232, ptr %memberidx.i.i251, align 8
  %memberidx1.i.i252 = getelementptr inbounds %string, ptr %233, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i252, align 4
  %memberidx2.i.i253 = getelementptr inbounds %string, ptr %233, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i253, align 4
  %234 = load i64, ptr %memberidx.i433, align 4
  %.not.i245 = icmp eq i64 %234, 3
  br i1 %.not.i245, label %ifend.i249, label %ifend106

ifend.i249:                                       ; preds = %ifend103
  %memberidx2.i247 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %235 = load ptr, ptr %memberidx2.i247, align 8
  %236 = tail call i64 @memcmp(ptr %235, ptr nonnull %232, i64 3)
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %if.entry104, label %ifend106

if.entry104:                                      ; preds = %ifend.i249
  %238 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %238, align 4
  br label %common.ret

ifend106:                                         ; preds = %ifend103, %ifend.i249
  %239 = tail call ptr @malloc(i32 4)
  store i32 1684631414, ptr %239, align 8
  %240 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %240, align 8
  %memberidx.i.i240 = getelementptr inbounds %string, ptr %240, i64 0, i32 1
  store ptr %239, ptr %memberidx.i.i240, align 8
  %memberidx1.i.i241 = getelementptr inbounds %string, ptr %240, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i241, align 4
  %memberidx2.i.i242 = getelementptr inbounds %string, ptr %240, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i242, align 4
  %241 = load i64, ptr %memberidx.i433, align 4
  %.not.i238 = icmp eq i64 %241, 4
  br i1 %.not.i238, label %ifend.i, label %ifend109

ifend.i:                                          ; preds = %ifend106
  %memberidx2.i239 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  %242 = load ptr, ptr %memberidx2.i239, align 8
  %243 = tail call i64 @memcmp(ptr %242, ptr nonnull %239, i64 4)
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %if.entry107, label %ifend109

if.entry107:                                      ; preds = %ifend.i
  %245 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %245, align 4
  br label %common.ret

ifend109:                                         ; preds = %ifend106, %ifend.i
  %memberidx110 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 3
  %246 = load ptr, ptr %memberidx110, align 8
  %memberidx111 = getelementptr inbounds %Array_TypeNode_, ptr %246, i64 0, i32 2
  %247 = load i64, ptr %memberidx111, align 4
  %248 = icmp sgt i64 %247, 0
  br i1 %248, label %for.entry115, label %ifend114

ifend114:                                         ; preds = %ifend128, %ifend109
  %249 = load ptr, ptr %memberidx55, align 8
  %250 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %249)
  %251 = load i64, ptr %250, align 4
  %252 = icmp eq i64 %251, 20
  br i1 %252, label %if.entry138, label %common.ret

for.entry115:                                     ; preds = %ifend109
  %253 = tail call ptr @malloc(i32 25)
  %memberidx.i232 = getelementptr inbounds %Array_TypeNode_, ptr %246, i64 0, i32 1
  %254 = load ptr, ptr %memberidx.i232, align 8
  %255 = load i64, ptr %memberidx111, align 4
  store i1 false, ptr %253, align 1
  %memberidx1.i.i234 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %253, i64 0, i32 1
  %memberidx2.i.i235 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %253, i64 0, i32 3
  store ptr %254, ptr %memberidx2.i.i235, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %253, i64 0, i32 2
  store i64 %255, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i234, align 4
  %256 = icmp slt i64 %255, 1
  br i1 %256, label %for.end120, label %for.body118

for.body118:                                      ; preds = %for.entry115, %Array_Type____sl__.exit
  %257 = phi i64 [ %268, %Array_Type____sl__.exit ], [ 1, %for.entry115 ]
  %arg2.0570.in = phi ptr [ %ptridx.i, %Array_Type____sl__.exit ], [ %254, %for.entry115 ]
  %arg2.0570 = load ptr, ptr %arg2.0570.in, align 8
  %258 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %arg2.0570)
  %259 = load i64, ptr %memberidx.i446, align 4
  %260 = load i64, ptr %memberidx1.i447, align 4
  %.not.i = icmp slt i64 %259, %260
  br i1 %.not.i, label %for.body118.Array_Type____sl__.exit_crit_edge, label %if.entry.i

for.body118.Array_Type____sl__.exit_crit_edge:    ; preds = %for.body118
  %.pre573 = load ptr, ptr %memberidx2.i448, align 8
  br label %Array_Type____sl__.exit

if.entry.i:                                       ; preds = %for.body118
  %261 = shl nuw i64 %260, 1
  store i64 %261, ptr %memberidx1.i447, align 4
  %262 = load ptr, ptr %memberidx2.i448, align 8
  %263 = shl i64 %260, 4
  %264 = tail call ptr @realloc(ptr %262, i64 %263)
  store ptr %264, ptr %memberidx2.i448, align 8
  %.pre = load i64, ptr %memberidx.i446, align 4
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %for.body118.Array_Type____sl__.exit_crit_edge, %if.entry.i
  %265 = phi ptr [ %.pre573, %for.body118.Array_Type____sl__.exit_crit_edge ], [ %264, %if.entry.i ]
  %266 = phi i64 [ %259, %for.body118.Array_Type____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %267 = add nsw i64 %266, 1
  store i64 %267, ptr %memberidx.i446, align 4
  %ptridx.i227 = getelementptr inbounds ptr, ptr %265, i64 %266
  store ptr %258, ptr %ptridx.i227, align 8
  %268 = add nuw nsw i64 %257, 1
  store i64 %268, ptr %memberidx1.i.i234, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %254, i64 %257
  %.not586 = icmp slt i64 %257, %255
  br i1 %.not586, label %for.body118, label %for.end120

for.end120:                                       ; preds = %Array_Type____sl__.exit, %for.entry115
  tail call void @free(ptr nonnull %253)
  %memberidx.i218 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %269 = load ptr, ptr %memberidx.i218, align 8
  %memberidx1.i219 = getelementptr inbounds %Compiler, ptr %269, i64 0, i32 6
  %270 = load ptr, ptr %memberidx1.i219, align 8
  %memberidx2.i220 = getelementptr inbounds %Array_FloError_, ptr %270, i64 0, i32 2
  %271 = load i64, ptr %memberidx2.i220, align 4
  %272 = icmp sgt i64 %271, 0
  br i1 %272, label %common.ret, label %ifend124

ifend124:                                         ; preds = %for.end120
  %273 = load ptr, ptr %memberidx55, align 8
  %274 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr nonnull %0, ptr %273, ptr nonnull %115)
  %275 = load ptr, ptr %memberidx.i218, align 8
  %memberidx1.i216 = getelementptr inbounds %Compiler, ptr %275, i64 0, i32 6
  %276 = load ptr, ptr %memberidx1.i216, align 8
  %memberidx2.i217 = getelementptr inbounds %Array_FloError_, ptr %276, i64 0, i32 2
  %277 = load i64, ptr %memberidx2.i217, align 4
  %278 = icmp sgt i64 %277, 0
  br i1 %278, label %if.entry126, label %ifend128

if.entry126:                                      ; preds = %ifend124
  %memberidx.i214 = getelementptr inbounds %Array_FloError_, ptr %276, i64 0, i32 1
  %279 = load ptr, ptr %memberidx.i214, align 8
  %280 = load ptr, ptr %279, align 8
  %memberidx131 = getelementptr inbounds %FloError, ptr %280, i64 0, i32 2
  %281 = load ptr, ptr %1, align 8
  store ptr %281, ptr %memberidx131, align 8
  br label %ifend128

ifend128:                                         ; preds = %ifend124, %if.entry126
  %.not = icmp eq ptr %274, null
  br i1 %.not, label %ifend114, label %common.ret

if.entry138:                                      ; preds = %ifend114
  %282 = load ptr, ptr %118, align 8
  %memberidx141 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %282, i64 0, i32 5
  %283 = load ptr, ptr %memberidx141, align 8
  %284 = tail call ptr %283(ptr nonnull %118)
  %285 = alloca ptr, align 8
  %286 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %285, ptr nonnull @158, ptr %284)
  %287 = load ptr, ptr %285, align 8
  %288 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %288, align 8
  %memberidx.i212 = getelementptr inbounds %string, ptr %288, i64 0, i32 1
  store ptr %287, ptr %memberidx.i212, align 8
  %memberidx1.i213 = getelementptr inbounds %string, ptr %288, i64 0, i32 2
  store i64 %286, ptr %memberidx1.i213, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %288, i64 0, i32 3
  store i64 %286, ptr %memberidx2.i, align 4
  tail call void @free(ptr %284)
  %memberidx142 = getelementptr inbounds %Token, ptr %117, i64 0, i32 1
  %289 = load ptr, ptr %memberidx142, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %290 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %290, i64 0, i32 6
  %291 = load ptr, ptr %memberidx1.i, align 8
  %292 = call ptr @malloc(i32 24)
  store i64 5, ptr %292, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %292, i64 0, i32 2
  store ptr %289, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %292, i64 0, i32 1
  store ptr %288, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %291, i64 0, i32 2
  %293 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %291, i64 0, i32 3
  %294 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %293, %294
  br i1 %.not.i.i, label %if.entry138.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry138.TypeChecker_error.exit_crit_edge:     ; preds = %if.entry138
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %291, i64 0, i32 1
  %.pre575 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry138
  %295 = shl nuw i64 %294, 1
  store i64 %295, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %291, i64 0, i32 1
  %296 = load ptr, ptr %memberidx2.i.i.i, align 8
  %297 = shl i64 %294, 4
  %298 = call ptr @realloc(ptr %296, i64 %297)
  store ptr %298, ptr %memberidx2.i.i.i, align 8
  %.pre574 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry138.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %299 = phi ptr [ %.pre575, %if.entry138.TypeChecker_error.exit_crit_edge ], [ %298, %if.entry.i.i ]
  %300 = phi i64 [ %293, %if.entry138.TypeChecker_error.exit_crit_edge ], [ %.pre574, %if.entry.i.i ]
  %301 = add nsw i64 %300, 1
  store i64 %301, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %299, i64 %300
  store ptr %292, ptr %ptridx.i.i, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_statement(ptr %0, ptr %1) unnamed_addr {
  %memberidx = getelementptr inbounds %StatementNode, ptr %1, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 2, label %if.entry6
    i64 3, label %if.entry10
    i64 4, label %if.entry14
    i64 5, label %if.entry18
    i64 6, label %if.entry22
    i64 7, label %if.entry26
    i64 8, label %if.entry30
  ]

common.ret:                                       ; preds = %2, %ifend.i77, %TypeChecker_error.exit.i76, %ifend.i, %TypeChecker_error.exit.i, %ifend61.i, %TypeChecker_error.exit172.i, %TypeChecker_error.exit.i98, %ifend.i94, %else.i, %if.entry30, %if.entry26, %TypeChecker_check_condition.exit, %if.entry6, %if.entry2, %TypeChecker_check_if_stamement.exit
  %common.ret.op = phi ptr [ %21, %TypeChecker_check_if_stamement.exit ], [ %22, %if.entry2 ], [ %23, %if.entry6 ], [ %307, %TypeChecker_check_condition.exit ], [ %342, %if.entry26 ], [ %344, %if.entry30 ], [ null, %TypeChecker_error.exit.i98 ], [ null, %TypeChecker_error.exit172.i ], [ %24, %ifend61.i ], [ null, %else.i ], [ null, %ifend.i94 ], [ null, %TypeChecker_error.exit.i ], [ %324, %ifend.i ], [ null, %TypeChecker_error.exit.i76 ], [ %341, %ifend.i77 ], [ null, %2 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %memberidx.i99 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %memberidx.i99, align 8
  %5 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %5, align 4
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %5, ptr %4)
  %memberidx.i.i133 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i.i133, align 8
  %memberidx1.i.i134 = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 6
  %8 = load ptr, ptr %memberidx1.i.i134, align 8
  %memberidx2.i.i135 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i.i135, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %TypeChecker_check_condition.exit147, label %ifend.i138

ifend.i138:                                       ; preds = %if.entry
  %memberidx.i137 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx.i137, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %TypeChecker_check_condition.exit147, label %true_block.i145

true_block.i145:                                  ; preds = %ifend.i138
  %14 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %14, align 4
  %15 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %15, align 4
  %memberidx.i.i.i.i139 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i.i139, align 4
  %memberidx1.i.i.i.i140 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  %memberidx.i.i.i141 = getelementptr inbounds %TypeCastExpression, ptr %15, i64 0, i32 4
  store ptr %6, ptr %memberidx.i.i.i141, align 8
  %memberidx1.i.i.i142 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %14, ptr %memberidx1.i.i.i142, align 8
  %memberidx3.i.i.i144 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %16 = load i1, ptr %memberidx3.i.i.i144, align 1
  store i1 %16, ptr %memberidx1.i.i.i.i140, align 1
  br label %TypeChecker_check_condition.exit147

TypeChecker_check_condition.exit147:              ; preds = %ifend.i138, %if.entry, %true_block.i145
  %common.ret.op.i136 = phi ptr [ null, %if.entry ], [ %15, %true_block.i145 ], [ %6, %ifend.i138 ]
  %memberidx1.i100 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 3
  %17 = load ptr, ptr %memberidx1.i100, align 8
  %18 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %17, ptr null)
  %memberidx2.i101 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 4
  %19 = load ptr, ptr %memberidx2.i101, align 8
  %.not.i102 = icmp eq ptr %19, null
  br i1 %.not.i102, label %TypeChecker_check_if_stamement.exit, label %true_block.i

true_block.i:                                     ; preds = %TypeChecker_check_condition.exit147
  %20 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr nonnull %19, ptr null)
  br label %TypeChecker_check_if_stamement.exit

TypeChecker_check_if_stamement.exit:              ; preds = %TypeChecker_check_condition.exit147, %true_block.i
  %ternary.i = phi ptr [ %20, %true_block.i ], [ null, %TypeChecker_check_condition.exit147 ]
  %21 = tail call ptr @malloc(i32 32)
  store i64 0, ptr %21, align 4
  %memberidx.i.i103 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 1
  store ptr %common.ret.op.i136, ptr %memberidx.i.i103, align 8
  %memberidx1.i.i104 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 2
  store ptr %18, ptr %memberidx1.i.i104, align 8
  %memberidx2.i.i105 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx2.i.i105, align 8
  br label %common.ret

if.entry2:                                        ; preds = %2
  %22 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry6:                                        ; preds = %2
  %23 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry10:                                       ; preds = %2
  %24 = tail call ptr @malloc(i32 48)
  store i64 3, ptr %24, align 4
  %memberidx.i.i81 = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 1
  %memberidx1.i.i82 = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 2
  %memberidx2.i.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 3
  %memberidx3.i.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 4
  %memberidx.i128.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %memberidx.i.i81, i8 0, i64 32, i1 false)
  %25 = load ptr, ptr %memberidx.i128.i, align 8
  %26 = load i64, ptr %25, align 4
  %27 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %26)
  %memberidx2.i129.i = getelementptr inbounds %Scope, ptr %27, i64 0, i32 5
  %28 = load ptr, ptr %memberidx.i128.i, align 8
  store ptr %28, ptr %memberidx2.i129.i, align 8
  %29 = load ptr, ptr %0, align 8
  %30 = load ptr, ptr %memberidx.i128.i, align 8
  %memberidx.i.i.i.i84 = getelementptr inbounds %Program, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i.i.i.i84, align 8
  %32 = load i64, ptr %30, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %31, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %33, i64 %32
  %34 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx2.i.i.i.i85 = getelementptr inbounds %Module, ptr %34, i64 0, i32 7
  %35 = load ptr, ptr %memberidx2.i.i.i.i85, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %ScopeId, ptr %30, i64 0, i32 1
  %36 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Scope_, ptr %35, i64 0, i32 1
  %37 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %ptridx.i6.i.i.i.i = getelementptr inbounds ptr, ptr %37, i64 %36
  %38 = load ptr, ptr %ptridx.i6.i.i.i.i, align 8
  %memberidx4.i.i = getelementptr inbounds %Scope, ptr %38, i64 0, i32 7
  %39 = load ptr, ptr %memberidx4.i.i, align 8
  %40 = load ptr, ptr %27, align 8
  %memberidx.i.i.i86 = getelementptr inbounds %Array_ScopeId_, ptr %39, i64 0, i32 2
  %41 = load i64, ptr %memberidx.i.i.i86, align 4
  %memberidx1.i11.i.i = getelementptr inbounds %Array_ScopeId_, ptr %39, i64 0, i32 3
  %42 = load i64, ptr %memberidx1.i11.i.i, align 4
  %.not.i.i.i87 = icmp slt i64 %41, %42
  br i1 %.not.i.i.i87, label %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge, label %if.entry.i.i.i88

if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge: ; preds = %if.entry10
  %memberidx4.i.i.i89.phi.trans.insert = getelementptr inbounds %Array_ScopeId_, ptr %39, i64 0, i32 1
  %.pre193 = load ptr, ptr %memberidx4.i.i.i89.phi.trans.insert, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit.i

if.entry.i.i.i88:                                 ; preds = %if.entry10
  %43 = shl nuw i64 %42, 1
  store i64 %43, ptr %memberidx1.i11.i.i, align 4
  %memberidx2.i.i13.i.i = getelementptr inbounds %Array_ScopeId_, ptr %39, i64 0, i32 1
  %44 = load ptr, ptr %memberidx2.i.i13.i.i, align 8
  %45 = shl i64 %42, 4
  %46 = tail call ptr @realloc(ptr %44, i64 %45)
  store ptr %46, ptr %memberidx2.i.i13.i.i, align 8
  %.pre192 = load i64, ptr %memberidx.i.i.i86, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit.i

TypeChecker_create_child_scope_within_current_scope.exit.i: ; preds = %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge, %if.entry.i.i.i88
  %47 = phi ptr [ %46, %if.entry.i.i.i88 ], [ %.pre193, %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge ]
  %48 = phi i64 [ %.pre192, %if.entry.i.i.i88 ], [ %41, %if.entry10.TypeChecker_create_child_scope_within_current_scope.exit.i_crit_edge ]
  %49 = add nsw i64 %48, 1
  store i64 %49, ptr %memberidx.i.i.i86, align 4
  %ptridx.i.i.i90 = getelementptr inbounds ptr, ptr %47, i64 %48
  store ptr %40, ptr %ptridx.i.i.i90, align 8
  %50 = load ptr, ptr %27, align 8
  store ptr %50, ptr %memberidx.i128.i, align 8
  %memberidx2.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %51 = load i1, ptr %memberidx2.i, align 1
  %memberidx3.i92 = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 6
  %52 = load i64, ptr %memberidx3.i92, align 4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %if.entry.i93, label %else.i

if.entry.i93:                                     ; preds = %TypeChecker_create_child_scope_within_current_scope.exit.i
  %memberidx4.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 2
  %54 = load ptr, ptr %memberidx4.i, align 8
  %.not.i = icmp eq ptr %54, null
  br i1 %.not.i, label %ifend7.i, label %if.entry5.i

else.i:                                           ; preds = %TypeChecker_create_child_scope_within_current_scope.exit.i
  %55 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %55, align 4
  %memberidx22.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 5
  %56 = load ptr, ptr %memberidx22.i, align 8
  %57 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %55, ptr %56)
  %memberidx.i130.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %58 = load ptr, ptr %memberidx.i130.i, align 8
  %memberidx1.i131.i = getelementptr inbounds %Compiler, ptr %58, i64 0, i32 6
  %59 = load ptr, ptr %memberidx1.i131.i, align 8
  %memberidx2.i132.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %60 = load i64, ptr %memberidx2.i132.i, align 4
  %61 = icmp sgt i64 %60, 0
  br i1 %61, label %common.ret, label %ifend25.i

ifend.i94.sink.split:                             ; preds = %if.entry17.i, %get_class_prop_type.exit300.i
  %.sink = phi ptr [ %285, %get_class_prop_type.exit300.i ], [ %81, %if.entry17.i ]
  store ptr %.sink, ptr %memberidx3.i.i, align 8
  br label %ifend.i94

ifend.i94:                                        ; preds = %ifend.i94.sink.split, %ifend13.i
  %memberidx.i133.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %62 = load ptr, ptr %memberidx.i133.i, align 8
  %memberidx1.i134.i = getelementptr inbounds %Compiler, ptr %62, i64 0, i32 6
  %63 = load ptr, ptr %memberidx1.i134.i, align 8
  %memberidx2.i135.i = getelementptr inbounds %Array_FloError_, ptr %63, i64 0, i32 2
  %64 = load i64, ptr %memberidx2.i135.i, align 4
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %common.ret, label %ifend61.i

if.entry5.i:                                      ; preds = %if.entry.i93
  %66 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr nonnull %54)
  store ptr %66, ptr %memberidx1.i.i82, align 8
  br label %ifend7.i

ifend7.i:                                         ; preds = %if.entry5.i, %if.entry.i93
  %memberidx10.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 3
  %67 = load ptr, ptr %memberidx10.i, align 8
  %.not126.i = icmp eq ptr %67, null
  br i1 %.not126.i, label %ifend13.i, label %if.entry11.i

if.entry11.i:                                     ; preds = %ifend7.i
  %68 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %68, align 4
  %69 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %68, ptr nonnull %67)
  %memberidx.i.i118 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %70 = load ptr, ptr %memberidx.i.i118, align 8
  %memberidx1.i.i119 = getelementptr inbounds %Compiler, ptr %70, i64 0, i32 6
  %71 = load ptr, ptr %memberidx1.i.i119, align 8
  %memberidx2.i.i120 = getelementptr inbounds %Array_FloError_, ptr %71, i64 0, i32 2
  %72 = load i64, ptr %memberidx2.i.i120, align 4
  %73 = icmp sgt i64 %72, 0
  br i1 %73, label %TypeChecker_check_condition.exit132, label %ifend.i123

ifend.i123:                                       ; preds = %if.entry11.i
  %memberidx.i122 = getelementptr inbounds %Expression, ptr %69, i64 0, i32 3
  %74 = load ptr, ptr %memberidx.i122, align 8
  %75 = load i64, ptr %74, align 4
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %TypeChecker_check_condition.exit132, label %true_block.i130

true_block.i130:                                  ; preds = %ifend.i123
  %77 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %77, align 4
  %78 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %78, align 4
  %memberidx.i.i.i.i124 = getelementptr inbounds %Expression, ptr %78, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i.i124, align 4
  %memberidx1.i.i.i.i125 = getelementptr inbounds %Expression, ptr %78, i64 0, i32 1
  %memberidx.i.i.i126 = getelementptr inbounds %TypeCastExpression, ptr %78, i64 0, i32 4
  store ptr %69, ptr %memberidx.i.i.i126, align 8
  %memberidx1.i.i.i127 = getelementptr inbounds %Expression, ptr %78, i64 0, i32 3
  store ptr %77, ptr %memberidx1.i.i.i127, align 8
  %memberidx3.i.i.i129 = getelementptr inbounds %Expression, ptr %69, i64 0, i32 1
  %79 = load i1, ptr %memberidx3.i.i.i129, align 1
  store i1 %79, ptr %memberidx1.i.i.i.i125, align 1
  br label %TypeChecker_check_condition.exit132

TypeChecker_check_condition.exit132:              ; preds = %ifend.i123, %if.entry11.i, %true_block.i130
  %common.ret.op.i121 = phi ptr [ null, %if.entry11.i ], [ %78, %true_block.i130 ], [ %69, %ifend.i123 ]
  store ptr %common.ret.op.i121, ptr %memberidx2.i.i, align 8
  br label %ifend13.i

ifend13.i:                                        ; preds = %TypeChecker_check_condition.exit132, %ifend7.i
  %memberidx16.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 4
  %80 = load ptr, ptr %memberidx16.i, align 8
  %.not127.i = icmp eq ptr %80, null
  br i1 %.not127.i, label %ifend.i94, label %if.entry17.i

if.entry17.i:                                     ; preds = %ifend13.i
  %81 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr nonnull %80)
  br label %ifend.i94.sink.split

ifend25.i:                                        ; preds = %else.i
  %memberidx26.i = getelementptr inbounds %Expression, ptr %57, i64 0, i32 3
  %82 = load ptr, ptr %memberidx26.i, align 8
  %83 = load i64, ptr %82, align 4
  %84 = icmp eq i64 %83, 19
  br i1 %84, label %if.entry.i159, label %is_object.exit.thread

if.entry.i159:                                    ; preds = %ifend25.i, %if.entry.i159
  %.tr5.i = phi ptr [ %85, %if.entry.i159 ], [ %82, %ifend25.i ]
  %memberidx1.i158 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %85 = load ptr, ptr %memberidx1.i158, align 8
  %86 = load i64, ptr %85, align 4
  switch i64 %86, label %if.entry27.i [
    i64 19, label %if.entry.i159
    i64 11, label %ifend29.i
  ]

is_object.exit.thread:                            ; preds = %ifend25.i
  %87 = icmp eq i64 %83, 11
  br i1 %87, label %ifend29.i.thread, label %if.entry27.i

ifend29.i.thread:                                 ; preds = %is_object.exit.thread
  %88 = load ptr, ptr %0, align 8
  br label %if.entry3.i

if.entry27.i:                                     ; preds = %if.entry.i159, %is_object.exit.thread
  %89 = tail call ptr @malloc(i32 28)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %89, ptr noundef nonnull align 8 dereferenceable(28) @215, i64 28, i1 false)
  %90 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %90, align 8
  %memberidx.i.i136.i = getelementptr inbounds %string, ptr %90, i64 0, i32 1
  store ptr %89, ptr %memberidx.i.i136.i, align 8
  %memberidx1.i.i137.i = getelementptr inbounds %string, ptr %90, i64 0, i32 2
  store i64 28, ptr %memberidx1.i.i137.i, align 4
  %memberidx2.i.i.i96 = getelementptr inbounds %string, ptr %90, i64 0, i32 3
  store i64 28, ptr %memberidx2.i.i.i96, align 4
  %91 = load ptr, ptr %memberidx22.i, align 8
  %92 = load ptr, ptr %91, align 8
  %93 = load ptr, ptr %memberidx.i130.i, align 8
  %memberidx1.i139.i = getelementptr inbounds %Compiler, ptr %93, i64 0, i32 6
  %94 = load ptr, ptr %memberidx1.i139.i, align 8
  %95 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %95, align 4
  %memberidx1.i.i140.i = getelementptr inbounds %FloError, ptr %95, i64 0, i32 2
  store ptr %92, ptr %memberidx1.i.i140.i, align 8
  %memberidx2.i.i141.i = getelementptr inbounds %FloError, ptr %95, i64 0, i32 1
  store ptr %90, ptr %memberidx2.i.i141.i, align 8
  %memberidx.i.i142.i = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 2
  %96 = load i64, ptr %memberidx.i.i142.i, align 4
  %memberidx1.i2.i.i97 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 3
  %97 = load i64, ptr %memberidx1.i2.i.i97, align 4
  %.not.i.i143.i = icmp slt i64 %96, %97
  br i1 %.not.i.i143.i, label %if.entry27.i.TypeChecker_error.exit.i98_crit_edge, label %if.entry.i.i146.i

if.entry27.i.TypeChecker_error.exit.i98_crit_edge: ; preds = %if.entry27.i
  %memberidx4.i.i147.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %.pre195 = load ptr, ptr %memberidx4.i.i147.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i98

if.entry.i.i146.i:                                ; preds = %if.entry27.i
  %98 = shl nuw i64 %97, 1
  store i64 %98, ptr %memberidx1.i2.i.i97, align 4
  %memberidx2.i.i.i145.i = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %99 = load ptr, ptr %memberidx2.i.i.i145.i, align 8
  %100 = shl i64 %97, 4
  %101 = tail call ptr @realloc(ptr %99, i64 %100)
  store ptr %101, ptr %memberidx2.i.i.i145.i, align 8
  %.pre194 = load i64, ptr %memberidx.i.i142.i, align 4
  br label %TypeChecker_error.exit.i98

TypeChecker_error.exit.i98:                       ; preds = %if.entry27.i.TypeChecker_error.exit.i98_crit_edge, %if.entry.i.i146.i
  %102 = phi ptr [ %101, %if.entry.i.i146.i ], [ %.pre195, %if.entry27.i.TypeChecker_error.exit.i98_crit_edge ]
  %103 = phi i64 [ %.pre194, %if.entry.i.i146.i ], [ %96, %if.entry27.i.TypeChecker_error.exit.i98_crit_edge ]
  %104 = add nsw i64 %103, 1
  store i64 %104, ptr %memberidx.i.i142.i, align 4
  %ptridx.i.i148.i = getelementptr inbounds ptr, ptr %102, i64 %103
  store ptr %95, ptr %ptridx.i.i148.i, align 8
  br label %common.ret

ifend29.i:                                        ; preds = %if.entry.i159
  %105 = load ptr, ptr %0, align 8
  br i1 %84, label %if.entry.i162, label %if.entry3.i

if.entry.i162:                                    ; preds = %ifend29.i, %if.entry.i162
  %.tr11.i186 = phi ptr [ %106, %if.entry.i162 ], [ %82, %ifend29.i ]
  %memberidx1.i161 = getelementptr inbounds %GenericType, ptr %.tr11.i186, i64 0, i32 3
  %106 = load ptr, ptr %memberidx1.i161, align 8
  %107 = load i64, ptr %106, align 4
  %switch = icmp eq i64 %107, 19
  br i1 %switch, label %if.entry.i162, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i162, %ifend29.i.thread, %ifend29.i
  %108 = phi ptr [ %105, %ifend29.i ], [ %88, %ifend29.i.thread ], [ %105, %if.entry.i162 ]
  %.tr11.i.lcssa = phi ptr [ %82, %ifend29.i ], [ %82, %ifend29.i.thread ], [ %106, %if.entry.i162 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %109 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i163 = getelementptr inbounds %Program, ptr %108, i64 0, i32 1
  %110 = load ptr, ptr %memberidx.i.i163, align 8
  %111 = load i64, ptr %109, align 4
  %memberidx.i.i.i164 = getelementptr inbounds %Array_Module_, ptr %110, i64 0, i32 1
  %112 = load ptr, ptr %memberidx.i.i.i164, align 8
  %ptridx.i.i.i165 = getelementptr inbounds ptr, ptr %112, i64 %111
  %113 = load ptr, ptr %ptridx.i.i.i165, align 8
  %memberidx2.i.i166 = getelementptr inbounds %Module, ptr %113, i64 0, i32 3
  %114 = load ptr, ptr %memberidx2.i.i166, align 8
  %memberidx3.i.i167 = getelementptr inbounds %TypeId, ptr %109, i64 0, i32 2
  %115 = load i64, ptr %memberidx3.i.i167, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %116, i64 %115
  %117 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx34.i = getelementptr inbounds %Class, ptr %117, i64 0, i32 6
  %118 = load ptr, ptr %memberidx34.i, align 8
  %119 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %119, align 8
  %120 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %120, align 8
  %memberidx.i.i149.i = getelementptr inbounds %string, ptr %120, i64 0, i32 1
  store ptr %119, ptr %memberidx.i.i149.i, align 8
  %memberidx1.i.i150.i = getelementptr inbounds %string, ptr %120, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i150.i, align 4
  %memberidx2.i.i151.i = getelementptr inbounds %string, ptr %120, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i151.i, align 4
  %121 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %120)
  %memberidx.i152.i = getelementptr inbounds %Map_string_PropId_, ptr %118, i64 0, i32 1
  %122 = load i64, ptr %memberidx.i152.i, align 4
  %123 = urem i64 %121, %122
  %124 = load ptr, ptr %118, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %124, i64 %123
  %125 = load ptr, ptr %ptridx.i.i, align 8
  %.not.i.i = icmp eq ptr %125, null
  br i1 %.not.i.i, label %if.entry35.i, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %if.entry3.i, %else.i.i
  %126 = phi ptr [ %136, %else.i.i ], [ %124, %if.entry3.i ]
  %127 = phi i64 [ %137, %else.i.i ], [ %122, %if.entry3.i ]
  %128 = phi ptr [ %140, %else.i.i ], [ %125, %if.entry3.i ]
  %hash.0.i.i = phi i64 [ %139, %else.i.i ], [ %123, %if.entry3.i ]
  %129 = load ptr, ptr %128, align 8
  %memberidx.i.i153.i = getelementptr inbounds %string, ptr %129, i64 0, i32 2
  %130 = load i64, ptr %memberidx.i.i153.i, align 4
  %131 = load i64, ptr %memberidx1.i.i150.i, align 4
  %.not.i.i155.i = icmp eq i64 %130, %131
  br i1 %.not.i.i155.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %memberidx2.i.i156.i = getelementptr inbounds %string, ptr %129, i64 0, i32 1
  %132 = load ptr, ptr %memberidx2.i.i156.i, align 8
  %133 = load ptr, ptr %memberidx.i.i149.i, align 8
  %134 = tail call i64 @memcmp(ptr %132, ptr %133, i64 %130)
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre196 = load i64, ptr %memberidx.i152.i, align 4
  %.pre197 = load ptr, ptr %118, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre198.pre = load ptr, ptr %118, align 8
  %ptridx9.i.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre198.pre, i64 %hash.0.i.i
  %.pre199.pre = load ptr, ptr %ptridx9.i.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i.i = icmp eq ptr %.pre199.pre, null
  br i1 %.not29.i.i, label %if.entry35.i, label %Map_string_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %136 = phi ptr [ %.pre197, %ifend.i.i.i.else.i.i_crit_edge ], [ %126, %while.entry.i.i ]
  %137 = phi i64 [ %.pre196, %ifend.i.i.i.else.i.i_crit_edge ], [ %127, %while.entry.i.i ]
  %138 = add nuw i64 %hash.0.i.i, 1
  %139 = urem i64 %138, %137
  %ptridx7.i.i = getelementptr inbounds ptr, ptr %136, i64 %139
  %140 = load ptr, ptr %ptridx7.i.i, align 8
  %.not30.i.i = icmp eq ptr %140, null
  br i1 %.not30.i.i, label %if.entry35.i, label %while.entry.i.i

Map_string_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx15.i.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre199.pre, i64 0, i32 1
  %141 = load ptr, ptr %memberidx15.i.i, align 8
  %142 = icmp eq ptr %141, null
  br i1 %142, label %if.entry35.i, label %ifend37.i

if.entry35.i:                                     ; preds = %else.i.i, %if.entry3.i, %while.end.i.i, %Map_string_PropId____getitem__.exit.i
  %143 = tail call ptr @malloc(i32 46)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(46) %143, ptr noundef nonnull align 8 dereferenceable(46) @216, i64 46, i1 false)
  %144 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %144, align 8
  %memberidx.i.i157.i = getelementptr inbounds %string, ptr %144, i64 0, i32 1
  store ptr %143, ptr %memberidx.i.i157.i, align 8
  %memberidx1.i.i158.i = getelementptr inbounds %string, ptr %144, i64 0, i32 2
  store i64 46, ptr %memberidx1.i.i158.i, align 4
  %memberidx2.i.i159.i = getelementptr inbounds %string, ptr %144, i64 0, i32 3
  store i64 46, ptr %memberidx2.i.i159.i, align 4
  %145 = load ptr, ptr %memberidx22.i, align 8
  %146 = load ptr, ptr %145, align 8
  %147 = load ptr, ptr %memberidx.i130.i, align 8
  %memberidx1.i161.i = getelementptr inbounds %Compiler, ptr %147, i64 0, i32 6
  %148 = load ptr, ptr %memberidx1.i161.i, align 8
  %149 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %149, align 4
  %memberidx1.i.i162.i = getelementptr inbounds %FloError, ptr %149, i64 0, i32 2
  store ptr %146, ptr %memberidx1.i.i162.i, align 8
  %memberidx2.i.i163.i = getelementptr inbounds %FloError, ptr %149, i64 0, i32 1
  store ptr %144, ptr %memberidx2.i.i163.i, align 8
  %memberidx.i.i164.i = getelementptr inbounds %Array_FloError_, ptr %148, i64 0, i32 2
  %150 = load i64, ptr %memberidx.i.i164.i, align 4
  %memberidx1.i2.i165.i = getelementptr inbounds %Array_FloError_, ptr %148, i64 0, i32 3
  %151 = load i64, ptr %memberidx1.i2.i165.i, align 4
  %.not.i.i166.i = icmp slt i64 %150, %151
  br i1 %.not.i.i166.i, label %if.entry35.i.TypeChecker_error.exit172.i_crit_edge, label %if.entry.i.i169.i

if.entry35.i.TypeChecker_error.exit172.i_crit_edge: ; preds = %if.entry35.i
  %memberidx4.i.i170.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %148, i64 0, i32 1
  %.pre209 = load ptr, ptr %memberidx4.i.i170.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit172.i

if.entry.i.i169.i:                                ; preds = %if.entry35.i
  %152 = shl nuw i64 %151, 1
  store i64 %152, ptr %memberidx1.i2.i165.i, align 4
  %memberidx2.i.i.i168.i = getelementptr inbounds %Array_FloError_, ptr %148, i64 0, i32 1
  %153 = load ptr, ptr %memberidx2.i.i.i168.i, align 8
  %154 = shl i64 %151, 4
  %155 = tail call ptr @realloc(ptr %153, i64 %154)
  store ptr %155, ptr %memberidx2.i.i.i168.i, align 8
  %.pre208 = load i64, ptr %memberidx.i.i164.i, align 4
  br label %TypeChecker_error.exit172.i

TypeChecker_error.exit172.i:                      ; preds = %if.entry35.i.TypeChecker_error.exit172.i_crit_edge, %if.entry.i.i169.i
  %156 = phi ptr [ %155, %if.entry.i.i169.i ], [ %.pre209, %if.entry35.i.TypeChecker_error.exit172.i_crit_edge ]
  %157 = phi i64 [ %.pre208, %if.entry.i.i169.i ], [ %150, %if.entry35.i.TypeChecker_error.exit172.i_crit_edge ]
  %158 = add nsw i64 %157, 1
  store i64 %158, ptr %memberidx.i.i164.i, align 4
  %ptridx.i.i171.i = getelementptr inbounds ptr, ptr %156, i64 %157
  store ptr %149, ptr %ptridx.i.i171.i, align 8
  br label %common.ret

ifend37.i:                                        ; preds = %Map_string_PropId____getitem__.exit.i
  %159 = load ptr, ptr %0, align 8
  %memberidx.i.i173.i = getelementptr inbounds %PropId, ptr %141, i64 0, i32 1
  %160 = load ptr, ptr %memberidx.i.i173.i, align 8
  %memberidx.i.i.i174.i = getelementptr inbounds %Program, ptr %159, i64 0, i32 1
  %161 = load ptr, ptr %memberidx.i.i.i174.i, align 8
  %162 = load i64, ptr %160, align 4
  %memberidx.i.i.i.i175.i = getelementptr inbounds %Array_Module_, ptr %161, i64 0, i32 1
  %163 = load ptr, ptr %memberidx.i.i.i.i175.i, align 8
  %ptridx.i.i.i.i176.i = getelementptr inbounds ptr, ptr %163, i64 %162
  %164 = load ptr, ptr %ptridx.i.i.i.i176.i, align 8
  %memberidx2.i.i.i177.i = getelementptr inbounds %Module, ptr %164, i64 0, i32 3
  %165 = load ptr, ptr %memberidx2.i.i.i177.i, align 8
  %memberidx3.i.i.i178.i = getelementptr inbounds %TypeId, ptr %160, i64 0, i32 2
  %166 = load i64, ptr %memberidx3.i.i.i178.i, align 4
  %memberidx.i5.i.i.i179.i = getelementptr inbounds %Array_Class_, ptr %165, i64 0, i32 1
  %167 = load ptr, ptr %memberidx.i5.i.i.i179.i, align 8
  %ptridx.i6.i.i.i180.i = getelementptr inbounds ptr, ptr %167, i64 %166
  %168 = load ptr, ptr %ptridx.i6.i.i.i180.i, align 8
  %169 = load i64, ptr %141, align 4
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend37.i
  %memberidx1.i182.i = getelementptr inbounds %Class, ptr %168, i64 0, i32 5
  %171 = load ptr, ptr %memberidx1.i182.i, align 8
  %memberidx2.i183.i = getelementptr inbounds %PropId, ptr %141, i64 0, i32 2
  %172 = load i64, ptr %memberidx2.i183.i, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %171, i64 0, i32 1
  %173 = load ptr, ptr %memberidx.i12.i.i, align 8
  %ptridx.i13.i.i = getelementptr inbounds ptr, ptr %173, i64 %172
  %174 = load ptr, ptr %ptridx.i13.i.i, align 8
  %memberidx3.i184.i = getelementptr inbounds %ClassMethod, ptr %174, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend37.i
  %memberidx4.i185.i = getelementptr inbounds %Class, ptr %168, i64 0, i32 4
  %175 = load ptr, ptr %memberidx4.i185.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %141, i64 0, i32 2
  %176 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %175, i64 0, i32 1
  %177 = load ptr, ptr %memberidx.i11.i.i, align 8
  %ptridx.i.i186.i = getelementptr inbounds ptr, ptr %177, i64 %176
  %178 = load ptr, ptr %ptridx.i.i186.i, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %178, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i184.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i181.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  %memberidx41.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i181.i, i64 0, i32 2
  %179 = load ptr, ptr %memberidx41.i, align 8
  %180 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %180, ptr noundef nonnull align 8 dereferenceable(6) @217, i64 6, i1 false)
  %181 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %181, align 8
  %memberidx.i.i187.i = getelementptr inbounds %string, ptr %181, i64 0, i32 1
  store ptr %180, ptr %memberidx.i.i187.i, align 8
  %memberidx1.i.i188.i = getelementptr inbounds %string, ptr %181, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i188.i, align 4
  %memberidx2.i.i189.i = getelementptr inbounds %string, ptr %181, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i189.i, align 4
  %182 = tail call ptr @malloc(i32 41)
  %183 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %183, align 4
  %memberidx.i.i190.i = getelementptr inbounds %Expression, ptr %183, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i190.i, align 4
  %memberidx1.i.i191.i = getelementptr inbounds %Expression, ptr %183, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i191.i, align 1
  %memberidx.i192.i = getelementptr inbounds %MemberExpression, ptr %183, i64 0, i32 4
  store ptr %57, ptr %memberidx.i192.i, align 8
  %memberidx1.i193.i = getelementptr inbounds %MemberExpression, ptr %183, i64 0, i32 5
  store ptr %141, ptr %memberidx1.i193.i, align 8
  %memberidx2.i194.i = getelementptr inbounds %Expression, ptr %183, i64 0, i32 3
  store ptr %common.ret.op.i181.i, ptr %memberidx2.i194.i, align 8
  %184 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %184, align 8
  %memberidx.i195.i = getelementptr inbounds %Array_Expression_, ptr %184, i64 0, i32 2
  store i64 0, ptr %memberidx.i195.i, align 4
  %memberidx1.i196.i = getelementptr inbounds %Array_Expression_, ptr %184, i64 0, i32 3
  store i64 8, ptr %memberidx1.i196.i, align 4
  %memberidx2.i197.i = getelementptr inbounds %Array_Expression_, ptr %184, i64 0, i32 1
  %185 = tail call ptr @malloc(i32 64)
  store ptr %185, ptr %memberidx2.i197.i, align 8
  store i64 0, ptr %memberidx.i195.i, align 4
  store i64 8, ptr %182, align 4
  %memberidx.i.i198.i = getelementptr inbounds %Expression, ptr %182, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i198.i, align 4
  %memberidx1.i.i199.i = getelementptr inbounds %Expression, ptr %182, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i199.i, align 1
  %memberidx.i200.i = getelementptr inbounds %CallExpression, ptr %182, i64 0, i32 4
  store ptr %183, ptr %memberidx.i200.i, align 8
  %memberidx1.i201.i = getelementptr inbounds %CallExpression, ptr %182, i64 0, i32 5
  store ptr %184, ptr %memberidx1.i201.i, align 8
  %memberidx2.i202.i = getelementptr inbounds %Expression, ptr %182, i64 0, i32 3
  store ptr %179, ptr %memberidx2.i202.i, align 8
  %186 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr nonnull %181, ptr nonnull %182, ptr %179)
  %memberidx44.i = getelementptr inbounds %Var, ptr %186, i64 0, i32 1
  %187 = load ptr, ptr %memberidx44.i, align 8
  %188 = tail call ptr @malloc(i32 25)
  store i64 1, ptr %188, align 4
  %memberidx.i203.i = getelementptr inbounds %VarDeclaration, ptr %188, i64 0, i32 2
  store ptr %187, ptr %memberidx.i203.i, align 8
  %memberidx1.i204.i = getelementptr inbounds %VarDeclaration, ptr %188, i64 0, i32 1
  store ptr %181, ptr %memberidx1.i204.i, align 8
  %memberidx2.i205.i = getelementptr inbounds %VarDeclaration, ptr %188, i64 0, i32 3
  store i1 false, ptr %memberidx2.i205.i, align 1
  store ptr %188, ptr %memberidx.i.i81, align 8
  %189 = load ptr, ptr %0, align 8
  br label %tailrecurse.i169

tailrecurse.i169:                                 ; preds = %if.entry.i172, %get_class_prop_type.exit.i
  %.tr11.i168 = phi ptr [ %179, %get_class_prop_type.exit.i ], [ %191, %if.entry.i172 ]
  %190 = load i64, ptr %.tr11.i168, align 4
  switch i64 %190, label %get_class_from_type.exit182 [
    i64 19, label %if.entry.i172
    i64 11, label %if.entry3.i181
  ]

if.entry.i172:                                    ; preds = %tailrecurse.i169
  %memberidx1.i171 = getelementptr inbounds %GenericType, ptr %.tr11.i168, i64 0, i32 3
  %191 = load ptr, ptr %memberidx1.i171, align 8
  br label %tailrecurse.i169

if.entry3.i181:                                   ; preds = %tailrecurse.i169
  %memberidx6.i173 = getelementptr inbounds %ObjectType, ptr %.tr11.i168, i64 0, i32 1
  %192 = load ptr, ptr %memberidx6.i173, align 8
  %memberidx.i.i174 = getelementptr inbounds %Program, ptr %189, i64 0, i32 1
  %193 = load ptr, ptr %memberidx.i.i174, align 8
  %194 = load i64, ptr %192, align 4
  %memberidx.i.i.i175 = getelementptr inbounds %Array_Module_, ptr %193, i64 0, i32 1
  %195 = load ptr, ptr %memberidx.i.i.i175, align 8
  %ptridx.i.i.i176 = getelementptr inbounds ptr, ptr %195, i64 %194
  %196 = load ptr, ptr %ptridx.i.i.i176, align 8
  %memberidx2.i.i177 = getelementptr inbounds %Module, ptr %196, i64 0, i32 3
  %197 = load ptr, ptr %memberidx2.i.i177, align 8
  %memberidx3.i.i178 = getelementptr inbounds %TypeId, ptr %192, i64 0, i32 2
  %198 = load i64, ptr %memberidx3.i.i178, align 4
  %memberidx.i5.i.i179 = getelementptr inbounds %Array_Class_, ptr %197, i64 0, i32 1
  %199 = load ptr, ptr %memberidx.i5.i.i179, align 8
  %ptridx.i6.i.i180 = getelementptr inbounds ptr, ptr %199, i64 %198
  %200 = load ptr, ptr %ptridx.i6.i.i180, align 8
  br label %get_class_from_type.exit182

get_class_from_type.exit182:                      ; preds = %tailrecurse.i169, %if.entry3.i181
  %common.ret.op.i170 = phi ptr [ %200, %if.entry3.i181 ], [ null, %tailrecurse.i169 ]
  %memberidx47.i = getelementptr inbounds %Class, ptr %common.ret.op.i170, i64 0, i32 6
  %201 = load ptr, ptr %memberidx47.i, align 8
  %202 = tail call ptr @malloc(i32 4)
  store i32 1701736292, ptr %202, align 8
  %203 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %203, align 8
  %memberidx.i.i206.i = getelementptr inbounds %string, ptr %203, i64 0, i32 1
  store ptr %202, ptr %memberidx.i.i206.i, align 8
  %memberidx1.i.i207.i = getelementptr inbounds %string, ptr %203, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i207.i, align 4
  %memberidx2.i.i208.i = getelementptr inbounds %string, ptr %203, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i208.i, align 4
  %204 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %203)
  %memberidx.i209.i = getelementptr inbounds %Map_string_PropId_, ptr %201, i64 0, i32 1
  %205 = load i64, ptr %memberidx.i209.i, align 4
  %206 = urem i64 %204, %205
  %207 = load ptr, ptr %201, align 8
  %ptridx.i210.i = getelementptr inbounds ptr, ptr %207, i64 %206
  %208 = load ptr, ptr %ptridx.i210.i, align 8
  %.not.i211.i = icmp eq ptr %208, null
  br i1 %.not.i211.i, label %Map_string_PropId____getitem__.exit233.i, label %while.entry.i217.i

while.entry.i217.i:                               ; preds = %get_class_from_type.exit182, %else.i229.i
  %209 = phi ptr [ %219, %else.i229.i ], [ %207, %get_class_from_type.exit182 ]
  %210 = phi i64 [ %220, %else.i229.i ], [ %205, %get_class_from_type.exit182 ]
  %211 = phi ptr [ %223, %else.i229.i ], [ %208, %get_class_from_type.exit182 ]
  %hash.0.i212.i = phi i64 [ %222, %else.i229.i ], [ %206, %get_class_from_type.exit182 ]
  %212 = load ptr, ptr %211, align 8
  %memberidx.i.i214.i = getelementptr inbounds %string, ptr %212, i64 0, i32 2
  %213 = load i64, ptr %memberidx.i.i214.i, align 4
  %214 = load i64, ptr %memberidx1.i.i207.i, align 4
  %.not.i.i216.i = icmp eq i64 %213, %214
  br i1 %.not.i.i216.i, label %ifend.i.i220.i, label %else.i229.i

ifend.i.i220.i:                                   ; preds = %while.entry.i217.i
  %memberidx2.i.i218.i = getelementptr inbounds %string, ptr %212, i64 0, i32 1
  %215 = load ptr, ptr %memberidx2.i.i218.i, align 8
  %216 = load ptr, ptr %memberidx.i.i206.i, align 8
  %217 = tail call i64 @memcmp(ptr %215, ptr %216, i64 %213)
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %while.end.i226.i, label %ifend.i.i220.i.else.i229.i_crit_edge

ifend.i.i220.i.else.i229.i_crit_edge:             ; preds = %ifend.i.i220.i
  %.pre200 = load i64, ptr %memberidx.i209.i, align 4
  %.pre201 = load ptr, ptr %201, align 8
  br label %else.i229.i

while.end.i226.i:                                 ; preds = %ifend.i.i220.i
  %.pre202.pre = load ptr, ptr %201, align 8
  %ptridx9.i224.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre202.pre, i64 %hash.0.i212.i
  %.pre203.pre = load ptr, ptr %ptridx9.i224.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i225.i = icmp eq ptr %.pre203.pre, null
  br i1 %.not29.i225.i, label %Map_string_PropId____getitem__.exit233.i, label %if.entry10.i232.i

else.i229.i:                                      ; preds = %ifend.i.i220.i.else.i229.i_crit_edge, %while.entry.i217.i
  %219 = phi ptr [ %.pre201, %ifend.i.i220.i.else.i229.i_crit_edge ], [ %209, %while.entry.i217.i ]
  %220 = phi i64 [ %.pre200, %ifend.i.i220.i.else.i229.i_crit_edge ], [ %210, %while.entry.i217.i ]
  %221 = add nuw i64 %hash.0.i212.i, 1
  %222 = urem i64 %221, %220
  %ptridx7.i227.i = getelementptr inbounds ptr, ptr %219, i64 %222
  %223 = load ptr, ptr %ptridx7.i227.i, align 8
  %.not30.i228.i = icmp eq ptr %223, null
  br i1 %.not30.i228.i, label %Map_string_PropId____getitem__.exit233.i, label %while.entry.i217.i

if.entry10.i232.i:                                ; preds = %while.end.i226.i
  %memberidx15.i231.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre203.pre, i64 0, i32 1
  %224 = load ptr, ptr %memberidx15.i231.i, align 8
  br label %Map_string_PropId____getitem__.exit233.i

Map_string_PropId____getitem__.exit233.i:         ; preds = %else.i229.i, %get_class_from_type.exit182, %if.entry10.i232.i, %while.end.i226.i
  %common.ret.op.i230.i = phi ptr [ %224, %if.entry10.i232.i ], [ null, %while.end.i226.i ], [ null, %get_class_from_type.exit182 ], [ null, %else.i229.i ]
  %225 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %225, align 4
  %memberidx.i.i234.i = getelementptr inbounds %Expression, ptr %225, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i234.i, align 4
  %memberidx1.i.i235.i = getelementptr inbounds %Expression, ptr %225, i64 0, i32 1
  %memberidx.i236.i = getelementptr inbounds %VarAccessExpression, ptr %225, i64 0, i32 4
  store ptr %187, ptr %memberidx.i236.i, align 8
  %memberidx1.i237.i = getelementptr inbounds %Expression, ptr %225, i64 0, i32 3
  store ptr %179, ptr %memberidx1.i237.i, align 8
  %226 = load i64, ptr %187, align 4
  %227 = icmp eq i64 %226, 2
  store i1 %227, ptr %memberidx1.i.i235.i, align 1
  %228 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %228, align 4
  %229 = tail call ptr @malloc(i32 41)
  %230 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %230, align 4
  %memberidx.i.i239.i = getelementptr inbounds %Expression, ptr %230, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i239.i, align 4
  %memberidx1.i.i240.i = getelementptr inbounds %Expression, ptr %230, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i240.i, align 1
  %memberidx.i241.i = getelementptr inbounds %MemberExpression, ptr %230, i64 0, i32 4
  store ptr %225, ptr %memberidx.i241.i, align 8
  %memberidx1.i242.i = getelementptr inbounds %MemberExpression, ptr %230, i64 0, i32 5
  store ptr %common.ret.op.i230.i, ptr %memberidx1.i242.i, align 8
  %memberidx2.i243.i = getelementptr inbounds %Expression, ptr %230, i64 0, i32 3
  store ptr %228, ptr %memberidx2.i243.i, align 8
  store i64 8, ptr %229, align 4
  %memberidx.i.i244.i = getelementptr inbounds %Expression, ptr %229, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i244.i, align 4
  %memberidx1.i.i245.i = getelementptr inbounds %Expression, ptr %229, i64 0, i32 1
  %memberidx.i246.i = getelementptr inbounds %UnaryExpression, ptr %229, i64 0, i32 4
  store i64 7, ptr %memberidx.i246.i, align 4
  %memberidx1.i247.i = getelementptr inbounds %UnaryExpression, ptr %229, i64 0, i32 5
  store ptr %230, ptr %memberidx1.i247.i, align 8
  %memberidx2.i248.i = getelementptr inbounds %Expression, ptr %229, i64 0, i32 3
  store ptr %228, ptr %memberidx2.i248.i, align 8
  store i1 false, ptr %memberidx1.i.i245.i, align 1
  store ptr %229, ptr %memberidx2.i.i, align 8
  %memberidx49.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 7
  %231 = load ptr, ptr %memberidx49.i, align 8
  %memberidx50.i = getelementptr inbounds %IdentifierToken, ptr %231, i64 0, i32 2
  %232 = load ptr, ptr %memberidx50.i, align 8
  %233 = load ptr, ptr %memberidx47.i, align 8
  %234 = tail call ptr @malloc(i32 4)
  store i32 1954047342, ptr %234, align 8
  %235 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %235, align 8
  %memberidx.i.i250.i = getelementptr inbounds %string, ptr %235, i64 0, i32 1
  store ptr %234, ptr %memberidx.i.i250.i, align 8
  %memberidx1.i.i251.i = getelementptr inbounds %string, ptr %235, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i251.i, align 4
  %memberidx2.i.i252.i = getelementptr inbounds %string, ptr %235, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i252.i, align 4
  %236 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %235)
  %memberidx.i253.i = getelementptr inbounds %Map_string_PropId_, ptr %233, i64 0, i32 1
  %237 = load i64, ptr %memberidx.i253.i, align 4
  %238 = urem i64 %236, %237
  %239 = load ptr, ptr %233, align 8
  %ptridx.i254.i = getelementptr inbounds ptr, ptr %239, i64 %238
  %240 = load ptr, ptr %ptridx.i254.i, align 8
  %.not.i255.i = icmp eq ptr %240, null
  br i1 %.not.i255.i, label %Map_string_PropId____getitem__.exit277.i, label %while.entry.i261.i

while.entry.i261.i:                               ; preds = %Map_string_PropId____getitem__.exit233.i, %else.i273.i
  %241 = phi ptr [ %251, %else.i273.i ], [ %239, %Map_string_PropId____getitem__.exit233.i ]
  %242 = phi i64 [ %252, %else.i273.i ], [ %237, %Map_string_PropId____getitem__.exit233.i ]
  %243 = phi ptr [ %255, %else.i273.i ], [ %240, %Map_string_PropId____getitem__.exit233.i ]
  %hash.0.i256.i = phi i64 [ %254, %else.i273.i ], [ %238, %Map_string_PropId____getitem__.exit233.i ]
  %244 = load ptr, ptr %243, align 8
  %memberidx.i.i258.i = getelementptr inbounds %string, ptr %244, i64 0, i32 2
  %245 = load i64, ptr %memberidx.i.i258.i, align 4
  %246 = load i64, ptr %memberidx1.i.i251.i, align 4
  %.not.i.i260.i = icmp eq i64 %245, %246
  br i1 %.not.i.i260.i, label %ifend.i.i264.i, label %else.i273.i

ifend.i.i264.i:                                   ; preds = %while.entry.i261.i
  %memberidx2.i.i262.i = getelementptr inbounds %string, ptr %244, i64 0, i32 1
  %247 = load ptr, ptr %memberidx2.i.i262.i, align 8
  %248 = load ptr, ptr %memberidx.i.i250.i, align 8
  %249 = tail call i64 @memcmp(ptr %247, ptr %248, i64 %245)
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %while.end.i270.i, label %ifend.i.i264.i.else.i273.i_crit_edge

ifend.i.i264.i.else.i273.i_crit_edge:             ; preds = %ifend.i.i264.i
  %.pre204 = load i64, ptr %memberidx.i253.i, align 4
  %.pre205 = load ptr, ptr %233, align 8
  br label %else.i273.i

while.end.i270.i:                                 ; preds = %ifend.i.i264.i
  %.pre206.pre = load ptr, ptr %233, align 8
  %ptridx9.i268.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre206.pre, i64 %hash.0.i256.i
  %.pre207.pre = load ptr, ptr %ptridx9.i268.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i269.i = icmp eq ptr %.pre207.pre, null
  br i1 %.not29.i269.i, label %Map_string_PropId____getitem__.exit277.i, label %if.entry10.i276.i

else.i273.i:                                      ; preds = %ifend.i.i264.i.else.i273.i_crit_edge, %while.entry.i261.i
  %251 = phi ptr [ %.pre205, %ifend.i.i264.i.else.i273.i_crit_edge ], [ %241, %while.entry.i261.i ]
  %252 = phi i64 [ %.pre204, %ifend.i.i264.i.else.i273.i_crit_edge ], [ %242, %while.entry.i261.i ]
  %253 = add nuw i64 %hash.0.i256.i, 1
  %254 = urem i64 %253, %252
  %ptridx7.i271.i = getelementptr inbounds ptr, ptr %251, i64 %254
  %255 = load ptr, ptr %ptridx7.i271.i, align 8
  %.not30.i272.i = icmp eq ptr %255, null
  br i1 %.not30.i272.i, label %Map_string_PropId____getitem__.exit277.i, label %while.entry.i261.i

if.entry10.i276.i:                                ; preds = %while.end.i270.i
  %memberidx15.i275.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre207.pre, i64 0, i32 1
  %256 = load ptr, ptr %memberidx15.i275.i, align 8
  br label %Map_string_PropId____getitem__.exit277.i

Map_string_PropId____getitem__.exit277.i:         ; preds = %else.i273.i, %Map_string_PropId____getitem__.exit233.i, %if.entry10.i276.i, %while.end.i270.i
  %common.ret.op.i274.i = phi ptr [ %256, %if.entry10.i276.i ], [ null, %while.end.i270.i ], [ null, %Map_string_PropId____getitem__.exit233.i ], [ null, %else.i273.i ]
  %257 = load ptr, ptr %0, align 8
  %memberidx.i.i278.i = getelementptr inbounds %PropId, ptr %common.ret.op.i274.i, i64 0, i32 1
  %258 = load ptr, ptr %memberidx.i.i278.i, align 8
  %memberidx.i.i.i279.i = getelementptr inbounds %Program, ptr %257, i64 0, i32 1
  %259 = load ptr, ptr %memberidx.i.i.i279.i, align 8
  %260 = load i64, ptr %258, align 4
  %memberidx.i.i.i.i280.i = getelementptr inbounds %Array_Module_, ptr %259, i64 0, i32 1
  %261 = load ptr, ptr %memberidx.i.i.i.i280.i, align 8
  %ptridx.i.i.i.i281.i = getelementptr inbounds ptr, ptr %261, i64 %260
  %262 = load ptr, ptr %ptridx.i.i.i.i281.i, align 8
  %memberidx2.i.i.i282.i = getelementptr inbounds %Module, ptr %262, i64 0, i32 3
  %263 = load ptr, ptr %memberidx2.i.i.i282.i, align 8
  %memberidx3.i.i.i283.i = getelementptr inbounds %TypeId, ptr %258, i64 0, i32 2
  %264 = load i64, ptr %memberidx3.i.i.i283.i, align 4
  %memberidx.i5.i.i.i284.i = getelementptr inbounds %Array_Class_, ptr %263, i64 0, i32 1
  %265 = load ptr, ptr %memberidx.i5.i.i.i284.i, align 8
  %ptridx.i6.i.i.i285.i = getelementptr inbounds ptr, ptr %265, i64 %264
  %266 = load ptr, ptr %ptridx.i6.i.i.i285.i, align 8
  %267 = load i64, ptr %common.ret.op.i274.i, align 4
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %if.entry.i293.i, label %ifend.i299.i

if.entry.i293.i:                                  ; preds = %Map_string_PropId____getitem__.exit277.i
  %memberidx1.i288.i = getelementptr inbounds %Class, ptr %266, i64 0, i32 5
  %269 = load ptr, ptr %memberidx1.i288.i, align 8
  %memberidx2.i289.i = getelementptr inbounds %PropId, ptr %common.ret.op.i274.i, i64 0, i32 2
  %270 = load i64, ptr %memberidx2.i289.i, align 4
  %memberidx.i12.i290.i = getelementptr inbounds %Array_ClassMethod_, ptr %269, i64 0, i32 1
  %271 = load ptr, ptr %memberidx.i12.i290.i, align 8
  %ptridx.i13.i291.i = getelementptr inbounds ptr, ptr %271, i64 %270
  %272 = load ptr, ptr %ptridx.i13.i291.i, align 8
  %memberidx3.i292.i = getelementptr inbounds %ClassMethod, ptr %272, i64 0, i32 4
  br label %get_class_prop_type.exit300.i

ifend.i299.i:                                     ; preds = %Map_string_PropId____getitem__.exit277.i
  %memberidx4.i294.i = getelementptr inbounds %Class, ptr %266, i64 0, i32 4
  %273 = load ptr, ptr %memberidx4.i294.i, align 8
  %memberidx5.i295.i = getelementptr inbounds %PropId, ptr %common.ret.op.i274.i, i64 0, i32 2
  %274 = load i64, ptr %memberidx5.i295.i, align 4
  %memberidx.i11.i296.i = getelementptr inbounds %Array_ClassField_, ptr %273, i64 0, i32 1
  %275 = load ptr, ptr %memberidx.i11.i296.i, align 8
  %ptridx.i.i297.i = getelementptr inbounds ptr, ptr %275, i64 %274
  %276 = load ptr, ptr %ptridx.i.i297.i, align 8
  %memberidx6.i298.i = getelementptr inbounds %ClassField, ptr %276, i64 0, i32 4
  br label %get_class_prop_type.exit300.i

get_class_prop_type.exit300.i:                    ; preds = %ifend.i299.i, %if.entry.i293.i
  %common.ret.op.in.i286.i = phi ptr [ %memberidx3.i292.i, %if.entry.i293.i ], [ %memberidx6.i298.i, %ifend.i299.i ]
  %common.ret.op.i287.i = load ptr, ptr %common.ret.op.in.i286.i, align 8
  %memberidx53.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i287.i, i64 0, i32 2
  %277 = load ptr, ptr %memberidx53.i, align 8
  %278 = tail call ptr @malloc(i32 41)
  %279 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %279, align 4
  %memberidx.i.i301.i = getelementptr inbounds %Expression, ptr %279, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i301.i, align 4
  %memberidx1.i.i302.i = getelementptr inbounds %Expression, ptr %279, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i302.i, align 1
  %memberidx.i303.i = getelementptr inbounds %MemberExpression, ptr %279, i64 0, i32 4
  store ptr %225, ptr %memberidx.i303.i, align 8
  %memberidx1.i304.i = getelementptr inbounds %MemberExpression, ptr %279, i64 0, i32 5
  store ptr %common.ret.op.i274.i, ptr %memberidx1.i304.i, align 8
  %memberidx2.i305.i = getelementptr inbounds %Expression, ptr %279, i64 0, i32 3
  store ptr %common.ret.op.i287.i, ptr %memberidx2.i305.i, align 8
  %280 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %280, align 8
  %memberidx.i306.i = getelementptr inbounds %Array_Expression_, ptr %280, i64 0, i32 2
  store i64 0, ptr %memberidx.i306.i, align 4
  %memberidx1.i307.i = getelementptr inbounds %Array_Expression_, ptr %280, i64 0, i32 3
  store i64 8, ptr %memberidx1.i307.i, align 4
  %memberidx2.i308.i = getelementptr inbounds %Array_Expression_, ptr %280, i64 0, i32 1
  %281 = tail call ptr @malloc(i32 64)
  store ptr %281, ptr %memberidx2.i308.i, align 8
  store i64 0, ptr %memberidx.i306.i, align 4
  store i64 8, ptr %278, align 4
  %memberidx.i.i309.i = getelementptr inbounds %Expression, ptr %278, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i309.i, align 4
  %memberidx1.i.i310.i = getelementptr inbounds %Expression, ptr %278, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i310.i, align 1
  %memberidx.i311.i = getelementptr inbounds %CallExpression, ptr %278, i64 0, i32 4
  store ptr %279, ptr %memberidx.i311.i, align 8
  %memberidx1.i312.i = getelementptr inbounds %CallExpression, ptr %278, i64 0, i32 5
  store ptr %280, ptr %memberidx1.i312.i, align 8
  %memberidx2.i313.i = getelementptr inbounds %Expression, ptr %278, i64 0, i32 3
  store ptr %277, ptr %memberidx2.i313.i, align 8
  %282 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %232, ptr nonnull %278, ptr %277)
  %memberidx56.i = getelementptr inbounds %Var, ptr %282, i64 0, i32 1
  %283 = load ptr, ptr %memberidx56.i, align 8
  %284 = tail call ptr @malloc(i32 25)
  store i64 1, ptr %284, align 4
  %memberidx.i314.i = getelementptr inbounds %VarDeclaration, ptr %284, i64 0, i32 2
  store ptr %283, ptr %memberidx.i314.i, align 8
  %memberidx1.i315.i = getelementptr inbounds %VarDeclaration, ptr %284, i64 0, i32 1
  store ptr %232, ptr %memberidx1.i315.i, align 8
  %memberidx2.i316.i = getelementptr inbounds %VarDeclaration, ptr %284, i64 0, i32 3
  store i1 false, ptr %memberidx2.i316.i, align 1
  store ptr %284, ptr %memberidx1.i.i82, align 8
  %285 = tail call ptr @malloc(i32 49)
  %286 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %286, align 4
  %memberidx.i.i317.i = getelementptr inbounds %Expression, ptr %286, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i317.i, align 4
  %memberidx1.i.i318.i = getelementptr inbounds %Expression, ptr %286, i64 0, i32 1
  %memberidx.i319.i = getelementptr inbounds %VarAccessExpression, ptr %286, i64 0, i32 4
  store ptr %283, ptr %memberidx.i319.i, align 8
  %memberidx1.i320.i = getelementptr inbounds %Expression, ptr %286, i64 0, i32 3
  store ptr %277, ptr %memberidx1.i320.i, align 8
  %287 = load i64, ptr %283, align 4
  %288 = icmp eq i64 %287, 2
  store i1 %288, ptr %memberidx1.i.i318.i, align 1
  store i64 8, ptr %285, align 4
  %memberidx.i.i322.i = getelementptr inbounds %Expression, ptr %285, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i322.i, align 4
  %memberidx1.i.i323.i = getelementptr inbounds %Expression, ptr %285, i64 0, i32 1
  %memberidx.i324.i = getelementptr inbounds %BinaryExpression, ptr %285, i64 0, i32 4
  store ptr %286, ptr %memberidx.i324.i, align 8
  %memberidx1.i325.i = getelementptr inbounds %BinaryExpression, ptr %285, i64 0, i32 5
  store i64 19, ptr %memberidx1.i325.i, align 4
  %memberidx2.i326.i = getelementptr inbounds %BinaryExpression, ptr %285, i64 0, i32 6
  store ptr %278, ptr %memberidx2.i326.i, align 8
  %memberidx3.i327.i = getelementptr inbounds %Expression, ptr %285, i64 0, i32 3
  store ptr %277, ptr %memberidx3.i327.i, align 8
  store i1 false, ptr %memberidx1.i.i323.i, align 1
  br label %ifend.i94.sink.split

ifend61.i:                                        ; preds = %ifend.i94
  store i1 true, ptr %memberidx2.i, align 1
  %memberidx63.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 5
  %memberidx64.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 8
  %289 = load ptr, ptr %memberidx64.i, align 8
  %290 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %289, ptr nonnull %27)
  store ptr %290, ptr %memberidx63.i, align 8
  store i1 %51, ptr %memberidx2.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %2
  %memberidx.i78 = getelementptr inbounds %WhileStatementNode, ptr %1, i64 0, i32 2
  %291 = load ptr, ptr %memberidx.i78, align 8
  %292 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %292, align 4
  %293 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %292, ptr %291)
  %memberidx.i.i106 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %294 = load ptr, ptr %memberidx.i.i106, align 8
  %memberidx1.i.i107 = getelementptr inbounds %Compiler, ptr %294, i64 0, i32 6
  %295 = load ptr, ptr %memberidx1.i.i107, align 8
  %memberidx2.i.i108 = getelementptr inbounds %Array_FloError_, ptr %295, i64 0, i32 2
  %296 = load i64, ptr %memberidx2.i.i108, align 4
  %297 = icmp sgt i64 %296, 0
  br i1 %297, label %TypeChecker_check_condition.exit, label %ifend.i111

ifend.i111:                                       ; preds = %if.entry14
  %memberidx.i110 = getelementptr inbounds %Expression, ptr %293, i64 0, i32 3
  %298 = load ptr, ptr %memberidx.i110, align 8
  %299 = load i64, ptr %298, align 4
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %TypeChecker_check_condition.exit, label %true_block.i117

true_block.i117:                                  ; preds = %ifend.i111
  %301 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %301, align 4
  %302 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %302, align 4
  %memberidx.i.i.i.i112 = getelementptr inbounds %Expression, ptr %302, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i.i112, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %302, i64 0, i32 1
  %memberidx.i.i.i113 = getelementptr inbounds %TypeCastExpression, ptr %302, i64 0, i32 4
  store ptr %293, ptr %memberidx.i.i.i113, align 8
  %memberidx1.i.i.i114 = getelementptr inbounds %Expression, ptr %302, i64 0, i32 3
  store ptr %301, ptr %memberidx1.i.i.i114, align 8
  %memberidx3.i.i.i116 = getelementptr inbounds %Expression, ptr %293, i64 0, i32 1
  %303 = load i1, ptr %memberidx3.i.i.i116, align 1
  store i1 %303, ptr %memberidx1.i.i.i.i, align 1
  br label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i111, %if.entry14, %true_block.i117
  %common.ret.op.i109 = phi ptr [ null, %if.entry14 ], [ %302, %true_block.i117 ], [ %293, %ifend.i111 ]
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %304 = load i1, ptr %memberidx1.i, align 1
  store i1 true, ptr %memberidx1.i, align 1
  %memberidx3.i = getelementptr inbounds %WhileStatementNode, ptr %1, i64 0, i32 3
  %305 = load ptr, ptr %memberidx3.i, align 8
  %306 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %305, ptr null)
  store i1 %304, ptr %memberidx1.i, align 1
  %307 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %307, align 4
  %memberidx.i.i79 = getelementptr inbounds %WhileStatement, ptr %307, i64 0, i32 1
  store ptr %common.ret.op.i109, ptr %memberidx.i.i79, align 8
  %memberidx1.i.i80 = getelementptr inbounds %WhileStatement, ptr %307, i64 0, i32 2
  store ptr %306, ptr %memberidx1.i.i80, align 8
  br label %common.ret

if.entry18:                                       ; preds = %2
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %308 = load i1, ptr %memberidx.i, align 1
  br i1 %308, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry18
  %309 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %309, ptr noundef nonnull align 8 dereferenceable(32) @219, i64 32, i1 false)
  %310 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %310, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %310, i64 0, i32 1
  store ptr %309, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %310, i64 0, i32 2
  store i64 32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %310, i64 0, i32 3
  store i64 32, ptr %memberidx2.i.i.i, align 4
  %311 = load ptr, ptr %1, align 8
  %memberidx.i.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %312 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Compiler, ptr %312, i64 0, i32 6
  %313 = load ptr, ptr %memberidx1.i.i, align 8
  %314 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %314, align 4
  %memberidx1.i.i3.i = getelementptr inbounds %FloError, ptr %314, i64 0, i32 2
  store ptr %311, ptr %memberidx1.i.i3.i, align 8
  %memberidx2.i.i4.i = getelementptr inbounds %FloError, ptr %314, i64 0, i32 1
  store ptr %310, ptr %memberidx2.i.i4.i, align 8
  %memberidx.i.i5.i = getelementptr inbounds %Array_FloError_, ptr %313, i64 0, i32 2
  %315 = load i64, ptr %memberidx.i.i5.i, align 4
  %memberidx1.i2.i.i = getelementptr inbounds %Array_FloError_, ptr %313, i64 0, i32 3
  %316 = load i64, ptr %memberidx1.i2.i.i, align 4
  %.not.i.i.i = icmp slt i64 %315, %316
  br i1 %.not.i.i.i, label %if.entry.i.TypeChecker_error.exit.i_crit_edge, label %if.entry.i.i.i

if.entry.i.TypeChecker_error.exit.i_crit_edge:    ; preds = %if.entry.i
  %memberidx4.i.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %313, i64 0, i32 1
  %.pre191 = load ptr, ptr %memberidx4.i.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry.i
  %317 = shl nuw i64 %316, 1
  store i64 %317, ptr %memberidx1.i2.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %313, i64 0, i32 1
  %318 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %319 = shl i64 %316, 4
  %320 = tail call ptr @realloc(ptr %318, i64 %319)
  store ptr %320, ptr %memberidx2.i.i.i.i, align 8
  %.pre190 = load i64, ptr %memberidx.i.i5.i, align 4
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %if.entry.i.TypeChecker_error.exit.i_crit_edge, %if.entry.i.i.i
  %321 = phi ptr [ %320, %if.entry.i.i.i ], [ %.pre191, %if.entry.i.TypeChecker_error.exit.i_crit_edge ]
  %322 = phi i64 [ %.pre190, %if.entry.i.i.i ], [ %315, %if.entry.i.TypeChecker_error.exit.i_crit_edge ]
  %323 = add nsw i64 %322, 1
  store i64 %323, ptr %memberidx.i.i5.i, align 4
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %321, i64 %322
  store ptr %314, ptr %ptridx.i.i.i, align 8
  br label %common.ret

ifend.i:                                          ; preds = %if.entry18
  %324 = tail call ptr @malloc(i32 8)
  store i64 5, ptr %324, align 4
  br label %common.ret

if.entry22:                                       ; preds = %2
  %memberidx.i58 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %325 = load i1, ptr %memberidx.i58, align 1
  br i1 %325, label %ifend.i77, label %if.entry.i70

if.entry.i70:                                     ; preds = %if.entry22
  %326 = tail call ptr @malloc(i32 29)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %326, ptr noundef nonnull align 8 dereferenceable(29) @218, i64 29, i1 false)
  %327 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %327, align 8
  %memberidx.i.i.i60 = getelementptr inbounds %string, ptr %327, i64 0, i32 1
  store ptr %326, ptr %memberidx.i.i.i60, align 8
  %memberidx1.i.i.i61 = getelementptr inbounds %string, ptr %327, i64 0, i32 2
  store i64 29, ptr %memberidx1.i.i.i61, align 4
  %memberidx2.i.i.i62 = getelementptr inbounds %string, ptr %327, i64 0, i32 3
  store i64 29, ptr %memberidx2.i.i.i62, align 4
  %328 = load ptr, ptr %1, align 8
  %memberidx.i.i63 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %329 = load ptr, ptr %memberidx.i.i63, align 8
  %memberidx1.i.i64 = getelementptr inbounds %Compiler, ptr %329, i64 0, i32 6
  %330 = load ptr, ptr %memberidx1.i.i64, align 8
  %331 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %331, align 4
  %memberidx1.i.i3.i65 = getelementptr inbounds %FloError, ptr %331, i64 0, i32 2
  store ptr %328, ptr %memberidx1.i.i3.i65, align 8
  %memberidx2.i.i4.i66 = getelementptr inbounds %FloError, ptr %331, i64 0, i32 1
  store ptr %327, ptr %memberidx2.i.i4.i66, align 8
  %memberidx.i.i5.i67 = getelementptr inbounds %Array_FloError_, ptr %330, i64 0, i32 2
  %332 = load i64, ptr %memberidx.i.i5.i67, align 4
  %memberidx1.i2.i.i68 = getelementptr inbounds %Array_FloError_, ptr %330, i64 0, i32 3
  %333 = load i64, ptr %memberidx1.i2.i.i68, align 4
  %.not.i.i.i69 = icmp slt i64 %332, %333
  br i1 %.not.i.i.i69, label %if.entry.i70.TypeChecker_error.exit.i76_crit_edge, label %if.entry.i.i.i73

if.entry.i70.TypeChecker_error.exit.i76_crit_edge: ; preds = %if.entry.i70
  %memberidx4.i.i.i74.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %330, i64 0, i32 1
  %.pre189 = load ptr, ptr %memberidx4.i.i.i74.phi.trans.insert, align 8
  br label %TypeChecker_error.exit.i76

if.entry.i.i.i73:                                 ; preds = %if.entry.i70
  %334 = shl nuw i64 %333, 1
  store i64 %334, ptr %memberidx1.i2.i.i68, align 4
  %memberidx2.i.i.i.i72 = getelementptr inbounds %Array_FloError_, ptr %330, i64 0, i32 1
  %335 = load ptr, ptr %memberidx2.i.i.i.i72, align 8
  %336 = shl i64 %333, 4
  %337 = tail call ptr @realloc(ptr %335, i64 %336)
  store ptr %337, ptr %memberidx2.i.i.i.i72, align 8
  %.pre = load i64, ptr %memberidx.i.i5.i67, align 4
  br label %TypeChecker_error.exit.i76

TypeChecker_error.exit.i76:                       ; preds = %if.entry.i70.TypeChecker_error.exit.i76_crit_edge, %if.entry.i.i.i73
  %338 = phi ptr [ %337, %if.entry.i.i.i73 ], [ %.pre189, %if.entry.i70.TypeChecker_error.exit.i76_crit_edge ]
  %339 = phi i64 [ %.pre, %if.entry.i.i.i73 ], [ %332, %if.entry.i70.TypeChecker_error.exit.i76_crit_edge ]
  %340 = add nsw i64 %339, 1
  store i64 %340, ptr %memberidx.i.i5.i67, align 4
  %ptridx.i.i.i75 = getelementptr inbounds ptr, ptr %338, i64 %339
  store ptr %331, ptr %ptridx.i.i.i75, align 8
  br label %common.ret

ifend.i77:                                        ; preds = %if.entry22
  %341 = tail call ptr @malloc(i32 8)
  store i64 6, ptr %341, align 4
  br label %common.ret

if.entry26:                                       ; preds = %2
  %342 = tail call fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry30:                                       ; preds = %2
  %343 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %343, align 4
  %344 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %343, ptr nonnull %1)
  br label %common.ret
}

define internal fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry26, %3
  %accumulator.tr.ph = phi i1 [ %34, %if.entry26 ], [ true, %3 ]
  %.tr168.ph = phi ptr [ %32, %if.entry26 ], [ %1, %3 ]
  %.tr169.ph = phi ptr [ %33, %if.entry26 ], [ %2, %3 ]
  br label %tailrecurse.outer173

tailrecurse.outer173:                             ; preds = %tailrecurse.outer, %if.entry34
  %.tr168.ph174 = phi ptr [ %.tr168.ph, %tailrecurse.outer ], [ %35, %if.entry34 ]
  %.tr169.ph175 = phi ptr [ %.tr169.ph, %tailrecurse.outer ], [ %36, %if.entry34 ]
  %memberidx6 = getelementptr inbounds %FunctionType, ptr %.tr168.ph174, i64 0, i32 1
  %memberidx14 = getelementptr inbounds %FunctionType, ptr %.tr168.ph174, i64 0, i32 2
  %.pre = load i64, ptr %.tr168.ph174, align 4
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer173, %ifend53
  %4 = phi i64 [ 11, %ifend53 ], [ %.pre, %tailrecurse.outer173 ]
  %.tr169 = phi ptr [ %57, %ifend53 ], [ %.tr169.ph175, %tailrecurse.outer173 ]
  %5 = load i64, ptr %.tr169, align 4
  %.not = icmp eq i64 %4, %5
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %ifend53, %if.entry40, %ifend12, %if.entry3, %tailrecurse, %for.body, %for.body84, %if.entry67, %if.entry94, %ifend69, %ifend74, %ifend.i.i, %if.entry61
  %common.ret.op = phi i1 [ %60, %if.entry61 ], [ false, %ifend.i.i ], [ false, %ifend74 ], [ true, %ifend69 ], [ %not., %if.entry94 ], [ false, %if.entry67 ], [ false, %for.body84 ], [ false, %for.body ], [ false, %tailrecurse ], [ false, %if.entry3 ], [ false, %ifend12 ], [ true, %if.entry40 ], [ false, %ifend53 ]
  %accumulator.ret.tr = and i1 %accumulator.tr.ph, %common.ret.op
  ret i1 %accumulator.ret.tr

ifend:                                            ; preds = %tailrecurse
  %6 = icmp eq i64 %4, 15
  br i1 %6, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %7 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Array_Type_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx7, align 4
  %memberidx8 = getelementptr inbounds %FunctionType, ptr %.tr169, i64 0, i32 1
  %9 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %Array_Type_, ptr %9, i64 0, i32 2
  %10 = load i64, ptr %memberidx9, align 4
  %.not156 = icmp eq i64 %8, %10
  br i1 %.not156, label %ifend12, label %common.ret

ifend5thread-pre-split:                           ; preds = %for.cond, %for.cond.preheader
  %.pr = load i64, ptr %.tr168.ph174, align 4
  br label %ifend5

ifend5:                                           ; preds = %ifend5thread-pre-split, %ifend
  %11 = phi i64 [ %.pr, %ifend5thread-pre-split ], [ %4, %ifend ]
  switch i64 %11, label %ifend69 [
    i64 14, label %if.entry26
    i64 13, label %if.entry34
    i64 11, label %if.entry40
    i64 12, label %if.entry61
    i64 19, label %if.entry67
  ]

ifend12:                                          ; preds = %if.entry3
  %memberidx13 = getelementptr inbounds %FunctionType, ptr %.tr169, i64 0, i32 2
  %12 = load ptr, ptr %memberidx13, align 8
  %13 = load ptr, ptr %memberidx14, align 8
  %14 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %12, ptr %13)
  br i1 %14, label %for.cond.preheader, label %common.ret

for.cond.preheader:                               ; preds = %ifend12
  %15 = load ptr, ptr %memberidx6, align 8
  %memberidx19197 = getelementptr inbounds %Array_Type_, ptr %15, i64 0, i32 2
  %16 = load i64, ptr %memberidx19197, align 4
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %for.body, label %ifend5thread-pre-split

for.cond:                                         ; preds = %for.body
  %18 = add nuw nsw i64 %i.0198, 1
  %19 = load ptr, ptr %memberidx6, align 8
  %memberidx19 = getelementptr inbounds %Array_Type_, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx19, align 4
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %for.body, label %ifend5thread-pre-split

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %22 = phi ptr [ %19, %for.cond ], [ %15, %for.cond.preheader ]
  %i.0198 = phi i64 [ %18, %for.cond ], [ 0, %for.cond.preheader ]
  %memberidx.i157 = getelementptr inbounds %Array_Type_, ptr %22, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i157, align 8
  %ptridx.i158 = getelementptr inbounds ptr, ptr %23, i64 %i.0198
  %24 = load ptr, ptr %ptridx.i158, align 8
  %25 = load ptr, ptr %memberidx8, align 8
  %memberidx.i159 = getelementptr inbounds %Array_Type_, ptr %25, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i159, align 8
  %ptridx.i160 = getelementptr inbounds ptr, ptr %26, i64 %i.0198
  %27 = load ptr, ptr %ptridx.i160, align 8
  %28 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %24, ptr %27)
  br i1 %28, label %for.cond, label %common.ret

if.entry26:                                       ; preds = %ifend5
  %29 = load i64, ptr %memberidx14, align 4
  %memberidx30 = getelementptr inbounds %ArrayType, ptr %.tr169, i64 0, i32 2
  %30 = load i64, ptr %memberidx30, align 4
  %31 = icmp eq i64 %29, %30
  %32 = load ptr, ptr %memberidx6, align 8
  %memberidx32 = getelementptr inbounds %ArrayType, ptr %.tr169, i64 0, i32 1
  %33 = load ptr, ptr %memberidx32, align 8
  %34 = and i1 %accumulator.tr.ph, %31
  br label %tailrecurse.outer

if.entry34:                                       ; preds = %ifend5
  %35 = load ptr, ptr %memberidx6, align 8
  %memberidx38 = getelementptr inbounds %PointerType, ptr %.tr169, i64 0, i32 1
  %36 = load ptr, ptr %memberidx38, align 8
  br label %tailrecurse.outer173

if.entry40:                                       ; preds = %ifend5
  %37 = load ptr, ptr %memberidx6, align 8
  %memberidx44 = getelementptr inbounds %ObjectType, ptr %.tr169, i64 0, i32 1
  %38 = load ptr, ptr %memberidx44, align 8
  %memberidx45 = getelementptr inbounds %TypeId, ptr %37, i64 0, i32 1
  %39 = load i64, ptr %memberidx45, align 4
  %memberidx46 = getelementptr inbounds %TypeId, ptr %38, i64 0, i32 1
  %40 = load i64, ptr %memberidx46, align 4
  %41 = icmp eq i64 %39, %40
  %42 = load i64, ptr %37, align 4
  %43 = load i64, ptr %38, align 4
  %44 = icmp eq i64 %42, %43
  %45 = and i1 %41, %44
  %memberidx49 = getelementptr inbounds %TypeId, ptr %37, i64 0, i32 2
  %46 = load i64, ptr %memberidx49, align 4
  %memberidx50 = getelementptr inbounds %TypeId, ptr %38, i64 0, i32 2
  %47 = load i64, ptr %memberidx50, align 4
  %48 = icmp eq i64 %46, %47
  %49 = and i1 %45, %48
  br i1 %49, label %common.ret, label %ifend53

ifend53:                                          ; preds = %if.entry40
  %50 = load ptr, ptr %0, align 8
  %memberidx.i163 = getelementptr inbounds %Program, ptr %50, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i163, align 8
  %memberidx.i.i164 = getelementptr inbounds %Array_Module_, ptr %51, i64 0, i32 1
  %52 = load ptr, ptr %memberidx.i.i164, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %52, i64 %43
  %53 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %53, i64 0, i32 3
  %54 = load ptr, ptr %memberidx2.i, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_Class_, ptr %54, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %55, i64 %47
  %56 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx55 = getelementptr inbounds %Class, ptr %56, i64 0, i32 2
  %57 = load ptr, ptr %memberidx55, align 8
  %.not155 = icmp eq ptr %57, null
  br i1 %.not155, label %common.ret, label %tailrecurse

if.entry61:                                       ; preds = %ifend5
  %58 = load ptr, ptr %memberidx6, align 8
  %memberidx65 = getelementptr inbounds %EnumType, ptr %.tr169, i64 0, i32 1
  %59 = load ptr, ptr %memberidx65, align 8
  %60 = icmp eq ptr %58, %59
  br label %common.ret

if.entry67:                                       ; preds = %ifend5
  %61 = load ptr, ptr %memberidx6, align 8
  %memberidx71 = getelementptr inbounds %GenericType, ptr %.tr169, i64 0, i32 1
  %62 = load ptr, ptr %memberidx71, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  %64 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %63, %64
  br i1 %.not.i.i, label %ifend.i.i, label %common.ret

ifend.i.i:                                        ; preds = %if.entry67
  %memberidx2.i.i = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  %66 = load ptr, ptr %memberidx3.i.i, align 8
  %67 = tail call i64 @memcmp(ptr %65, ptr %66, i64 %63)
  %.not167 = icmp eq i64 %67, 0
  br i1 %.not167, label %ifend74, label %common.ret

ifend69:                                          ; preds = %ifend5, %for.cond83, %for.cond83.preheader
  %68 = load i64, ptr %.tr168.ph174, align 4
  %69 = add i64 %68, -1
  %70 = icmp ult i64 %69, 7
  br i1 %70, label %if.entry94, label %common.ret

ifend74:                                          ; preds = %ifend.i.i
  %71 = load ptr, ptr %memberidx14, align 8
  %memberidx76 = getelementptr inbounds %Array_Type_, ptr %71, i64 0, i32 2
  %72 = load i64, ptr %memberidx76, align 4
  %memberidx77 = getelementptr inbounds %GenericType, ptr %.tr169, i64 0, i32 2
  %73 = load ptr, ptr %memberidx77, align 8
  %memberidx78 = getelementptr inbounds %Array_Type_, ptr %73, i64 0, i32 2
  %74 = load i64, ptr %memberidx78, align 4
  %.not154 = icmp eq i64 %72, %74
  br i1 %.not154, label %for.cond83.preheader, label %common.ret

for.cond83.preheader:                             ; preds = %ifend74
  %75 = icmp sgt i64 %72, 0
  br i1 %75, label %for.body84, label %ifend69

for.cond83:                                       ; preds = %for.body84
  %76 = add nuw nsw i64 %i1.0196, 1
  %77 = load ptr, ptr %memberidx14, align 8
  %memberidx88 = getelementptr inbounds %Array_Type_, ptr %77, i64 0, i32 2
  %78 = load i64, ptr %memberidx88, align 4
  %79 = icmp slt i64 %76, %78
  br i1 %79, label %for.body84, label %ifend69

for.body84:                                       ; preds = %for.cond83.preheader, %for.cond83
  %80 = phi ptr [ %77, %for.cond83 ], [ %71, %for.cond83.preheader ]
  %i1.0196 = phi i64 [ %76, %for.cond83 ], [ 0, %for.cond83.preheader ]
  %memberidx.i161 = getelementptr inbounds %Array_Type_, ptr %80, i64 0, i32 1
  %81 = load ptr, ptr %memberidx.i161, align 8
  %ptridx.i162 = getelementptr inbounds ptr, ptr %81, i64 %i1.0196
  %82 = load ptr, ptr %ptridx.i162, align 8
  %83 = load ptr, ptr %memberidx77, align 8
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %83, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %84, i64 %i1.0196
  %85 = load ptr, ptr %ptridx.i, align 8
  %86 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %82, ptr %85)
  br i1 %86, label %for.cond83, label %common.ret

if.entry94:                                       ; preds = %ifend69
  %87 = load i1, ptr %memberidx6, align 1
  %memberidx98 = getelementptr inbounds %IntType, ptr %.tr169, i64 0, i32 1
  %88 = load i1, ptr %memberidx98, align 1
  %89 = xor i1 %87, %88
  %not. = xor i1 %89, true
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_create_scope(ptr nocapture readonly %0, i64 %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %Program, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %5, i64 %1
  %6 = load ptr, ptr %ptridx.i.i, align 8
  %7 = tail call ptr @malloc(i32 64)
  %memberidx = getelementptr inbounds %Module, ptr %6, i64 0, i32 7
  %8 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_Scope_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx1, align 4
  %10 = tail call ptr @malloc(i32 16)
  store i64 %1, ptr %10, align 4
  %memberidx1.i.i = getelementptr inbounds %ScopeId, ptr %10, i64 0, i32 1
  store i64 %9, ptr %memberidx1.i.i, align 4
  store ptr %10, ptr %7, align 8
  %11 = tail call ptr @malloc(i32 24)
  %12 = tail call ptr @malloc(i32 2048)
  store ptr %12, ptr %11, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i17 = phi i64 [ 0, %2 ], [ %14, %for.body.i.i ]
  %13 = load ptr, ptr %11, align 8
  %ptridx.i.i9 = getelementptr inbounds ptr, ptr %13, i64 %i.0.i.i17
  store ptr null, ptr %ptridx.i.i9, align 8
  %14 = add nuw nsw i64 %i.0.i.i17, 1
  %15 = icmp ult i64 %i.0.i.i17, 255
  br i1 %15, label %for.body.i.i, label %Map_string_VarId__constructor.exit.i

Map_string_VarId__constructor.exit.i:             ; preds = %for.body.i.i
  %memberidx1.i8 = getelementptr inbounds %Scope, ptr %7, i64 0, i32 1
  %memberidx2.i18.i = getelementptr inbounds %Map_string_VarId_, ptr %11, i64 0, i32 1
  store i64 256, ptr %memberidx2.i18.i, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_string_VarId_, ptr %11, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %11, ptr %memberidx1.i8, align 8
  %16 = tail call ptr @malloc(i32 24)
  %17 = tail call ptr @malloc(i32 2048)
  store ptr %17, ptr %16, align 8
  br label %for.body.i22.i

for.body.i22.i:                                   ; preds = %Map_string_VarId__constructor.exit.i, %for.body.i22.i
  %i.0.i19.i16 = phi i64 [ 0, %Map_string_VarId__constructor.exit.i ], [ %19, %for.body.i22.i ]
  %18 = load ptr, ptr %16, align 8
  %ptridx.i21.i = getelementptr inbounds ptr, ptr %18, i64 %i.0.i19.i16
  store ptr null, ptr %ptridx.i21.i, align 8
  %19 = add nuw nsw i64 %i.0.i19.i16, 1
  %20 = icmp ult i64 %i.0.i19.i16, 255
  br i1 %20, label %for.body.i22.i, label %Map_string_ClassId__constructor.exit.i

Map_string_ClassId__constructor.exit.i:           ; preds = %for.body.i22.i
  %memberidx2.i = getelementptr inbounds %Scope, ptr %7, i64 0, i32 2
  %memberidx2.i23.i = getelementptr inbounds %Map_string_ClassId_, ptr %16, i64 0, i32 1
  store i64 256, ptr %memberidx2.i23.i, align 4
  %memberidx3.i24.i = getelementptr inbounds %Map_string_ClassId_, ptr %16, i64 0, i32 2
  store i64 0, ptr %memberidx3.i24.i, align 4
  store ptr %16, ptr %memberidx2.i, align 8
  %21 = tail call ptr @malloc(i32 24)
  %22 = tail call ptr @malloc(i32 2048)
  store ptr %22, ptr %21, align 8
  br label %for.body.i28.i

for.body.i28.i:                                   ; preds = %Map_string_ClassId__constructor.exit.i, %for.body.i28.i
  %i.0.i25.i15 = phi i64 [ 0, %Map_string_ClassId__constructor.exit.i ], [ %24, %for.body.i28.i ]
  %23 = load ptr, ptr %21, align 8
  %ptridx.i27.i = getelementptr inbounds ptr, ptr %23, i64 %i.0.i25.i15
  store ptr null, ptr %ptridx.i27.i, align 8
  %24 = add nuw nsw i64 %i.0.i25.i15, 1
  %25 = icmp ult i64 %i.0.i25.i15, 255
  br i1 %25, label %for.body.i28.i, label %Map_string_VarId__constructor.exit31.i

Map_string_VarId__constructor.exit31.i:           ; preds = %for.body.i28.i
  %memberidx3.i = getelementptr inbounds %Scope, ptr %7, i64 0, i32 3
  %memberidx2.i29.i = getelementptr inbounds %Map_string_VarId_, ptr %21, i64 0, i32 1
  store i64 256, ptr %memberidx2.i29.i, align 4
  %memberidx3.i30.i = getelementptr inbounds %Map_string_VarId_, ptr %21, i64 0, i32 2
  store i64 0, ptr %memberidx3.i30.i, align 4
  store ptr %21, ptr %memberidx3.i, align 8
  %26 = tail call ptr @malloc(i32 24)
  %27 = tail call ptr @malloc(i32 2048)
  store ptr %27, ptr %26, align 8
  br label %for.body.i35.i

for.body.i35.i:                                   ; preds = %Map_string_VarId__constructor.exit31.i, %for.body.i35.i
  %i.0.i32.i14 = phi i64 [ 0, %Map_string_VarId__constructor.exit31.i ], [ %29, %for.body.i35.i ]
  %28 = load ptr, ptr %26, align 8
  %ptridx.i34.i = getelementptr inbounds ptr, ptr %28, i64 %i.0.i32.i14
  store ptr null, ptr %ptridx.i34.i, align 8
  %29 = add nuw nsw i64 %i.0.i32.i14, 1
  %30 = icmp ult i64 %i.0.i32.i14, 255
  br i1 %30, label %for.body.i35.i, label %Map_string_EnumId__constructor.exit.i

Map_string_EnumId__constructor.exit.i:            ; preds = %for.body.i35.i
  %memberidx4.i10 = getelementptr inbounds %Scope, ptr %7, i64 0, i32 4
  %memberidx2.i36.i = getelementptr inbounds %Map_string_EnumId_, ptr %26, i64 0, i32 1
  store i64 256, ptr %memberidx2.i36.i, align 4
  %memberidx3.i37.i = getelementptr inbounds %Map_string_EnumId_, ptr %26, i64 0, i32 2
  store i64 0, ptr %memberidx3.i37.i, align 4
  store ptr %26, ptr %memberidx4.i10, align 8
  %31 = tail call ptr @malloc(i32 24)
  %32 = tail call ptr @malloc(i32 2048)
  store ptr %32, ptr %31, align 8
  br label %for.body.i41.i

for.body.i41.i:                                   ; preds = %Map_string_EnumId__constructor.exit.i, %for.body.i41.i
  %i.0.i38.i13 = phi i64 [ 0, %Map_string_EnumId__constructor.exit.i ], [ %34, %for.body.i41.i ]
  %33 = load ptr, ptr %31, align 8
  %ptridx.i40.i = getelementptr inbounds ptr, ptr %33, i64 %i.0.i38.i13
  store ptr null, ptr %ptridx.i40.i, align 8
  %34 = add nuw nsw i64 %i.0.i38.i13, 1
  %35 = icmp ult i64 %i.0.i38.i13, 255
  br i1 %35, label %for.body.i41.i, label %Scope_constructor.exit

Scope_constructor.exit:                           ; preds = %for.body.i41.i
  %memberidx5.i = getelementptr inbounds %Scope, ptr %7, i64 0, i32 6
  %memberidx2.i42.i = getelementptr inbounds %Map_string_Type_, ptr %31, i64 0, i32 1
  store i64 256, ptr %memberidx2.i42.i, align 4
  %memberidx3.i43.i = getelementptr inbounds %Map_string_Type_, ptr %31, i64 0, i32 2
  store i64 0, ptr %memberidx3.i43.i, align 4
  store ptr %31, ptr %memberidx5.i, align 8
  %memberidx6.i = getelementptr inbounds %Scope, ptr %7, i64 0, i32 5
  store ptr null, ptr %memberidx6.i, align 8
  %memberidx7.i = getelementptr inbounds %Scope, ptr %7, i64 0, i32 7
  %36 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ScopeId_, ptr %36, align 8
  %memberidx.i.i11 = getelementptr inbounds %Array_ScopeId_, ptr %36, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i11, align 4
  %memberidx1.i17.i = getelementptr inbounds %Array_ScopeId_, ptr %36, i64 0, i32 3
  store i64 8, ptr %memberidx1.i17.i, align 4
  %memberidx2.i.i12 = getelementptr inbounds %Array_ScopeId_, ptr %36, i64 0, i32 1
  %37 = tail call ptr @malloc(i32 64)
  store ptr %37, ptr %memberidx2.i.i12, align 8
  store i64 0, ptr %memberidx.i.i11, align 4
  store ptr %36, ptr %memberidx7.i, align 8
  %38 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %Array_Scope_, ptr %38, i64 0, i32 2
  %39 = load i64, ptr %memberidx.i, align 4
  %memberidx1.i6 = getelementptr inbounds %Array_Scope_, ptr %38, i64 0, i32 3
  %40 = load i64, ptr %memberidx1.i6, align 4
  %.not.i = icmp slt i64 %39, %40
  br i1 %.not.i, label %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge, label %if.entry.i

Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge: ; preds = %Scope_constructor.exit
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Scope_, ptr %38, i64 0, i32 1
  %.pre18 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Scope____sl__.exit

if.entry.i:                                       ; preds = %Scope_constructor.exit
  %41 = shl nuw i64 %40, 1
  store i64 %41, ptr %memberidx1.i6, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Scope_, ptr %38, i64 0, i32 1
  %42 = load ptr, ptr %memberidx2.i.i, align 8
  %43 = shl i64 %40, 4
  %44 = tail call ptr @realloc(ptr %42, i64 %43)
  store ptr %44, ptr %memberidx2.i.i, align 8
  %.pre = load i64, ptr %memberidx.i, align 4
  br label %Array_Scope____sl__.exit

Array_Scope____sl__.exit:                         ; preds = %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge, %if.entry.i
  %45 = phi ptr [ %.pre18, %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge ], [ %44, %if.entry.i ]
  %46 = phi i64 [ %39, %Scope_constructor.exit.Array_Scope____sl__.exit_crit_edge ], [ %.pre, %if.entry.i ]
  %47 = add nsw i64 %46, 1
  store i64 %47, ptr %memberidx.i, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %45, i64 %46
  store ptr %7, ptr %ptridx.i, align 8
  ret ptr %7
}

define internal fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %6 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %5)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend23, %ifend42, %TypeChecker_error.exit167, %if.entry28, %TypeChecker_error.exit135, %if.entry9, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %89, %if.entry9 ], [ null, %TypeChecker_error.exit135 ], [ %133, %if.entry28 ], [ null, %TypeChecker_error.exit167 ], [ %179, %ifend42 ], [ null, %ifend23 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %8 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %9 = load ptr, ptr %8, align 8
  %memberidx1 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %9, i64 0, i32 5
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = tail call ptr %10(ptr nonnull %8)
  %12 = alloca ptr, align 8
  %13 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %12, ptr nonnull @168, ptr %11)
  %14 = load ptr, ptr %12, align 8
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 %13, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 %13, ptr %memberidx2.i, align 4
  tail call void @free(ptr %11)
  %16 = load ptr, ptr %2, align 8
  %memberidx.i98 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %17 = load ptr, ptr %memberidx.i98, align 8
  %memberidx1.i99 = getelementptr inbounds %Compiler, ptr %17, i64 0, i32 6
  %18 = load ptr, ptr %memberidx1.i99, align 8
  %19 = call ptr @malloc(i32 24)
  store i64 4, ptr %19, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 2
  store ptr %16, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %19, i64 0, i32 1
  store ptr %15, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 3
  %21 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %20, %21
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %.pre204 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %22 = shl nuw i64 %21, 1
  store i64 %22, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %18, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i.i, align 8
  %24 = shl i64 %21, 4
  %25 = call ptr @realloc(ptr %23, i64 %24)
  store ptr %25, ptr %memberidx2.i.i.i, align 8
  %.pre203 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %26 = phi ptr [ %.pre204, %if.entry.TypeChecker_error.exit_crit_edge ], [ %25, %if.entry.i.i ]
  %27 = phi i64 [ %20, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre203, %if.entry.i.i ]
  %28 = add nsw i64 %27, 1
  store i64 %28, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %26, i64 %27
  store ptr %19, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %4
  %29 = load ptr, ptr %0, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i186, %ifend
  %.tr11.i.in = phi ptr [ %memberidx4, %ifend ], [ %memberidx1.i185, %if.entry.i186 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %30 = load i64, ptr %.tr11.i, align 4
  switch i64 %30, label %get_class_from_type.exit [
    i64 19, label %if.entry.i186
    i64 11, label %if.entry3.i
  ]

if.entry.i186:                                    ; preds = %tailrecurse.i
  %memberidx1.i185 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i187 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %31 = load ptr, ptr %memberidx6.i187, align 8
  %memberidx.i.i188 = getelementptr inbounds %Program, ptr %29, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i.i188, align 8
  %33 = load i64, ptr %31, align 4
  %memberidx.i.i.i189 = getelementptr inbounds %Array_Module_, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i.i.i189, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %34, i64 %33
  %35 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i190 = getelementptr inbounds %Module, ptr %35, i64 0, i32 3
  %36 = load ptr, ptr %memberidx2.i.i190, align 8
  %memberidx3.i.i191 = getelementptr inbounds %TypeId, ptr %31, i64 0, i32 2
  %37 = load i64, ptr %memberidx3.i.i191, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %38, i64 %37
  %39 = load ptr, ptr %ptridx.i6.i.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i184 = phi ptr [ %39, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx5 = getelementptr inbounds %Class, ptr %common.ret.op.i184, i64 0, i32 6
  %40 = load ptr, ptr %memberidx5, align 8
  %41 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %6)
  %memberidx.i100 = getelementptr inbounds %Map_string_PropId_, ptr %40, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i100, align 4
  %43 = urem i64 %41, %42
  %44 = load ptr, ptr %40, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %45, null
  br i1 %.not.i, label %if.entry6, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %get_class_from_type.exit
  %memberidx1.i.i102 = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %46 = phi ptr [ %56, %else.i ], [ %44, %while.entry.i.preheader ]
  %47 = phi i64 [ %57, %else.i ], [ %42, %while.entry.i.preheader ]
  %48 = phi ptr [ %60, %else.i ], [ %45, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %59, %else.i ], [ %43, %while.entry.i.preheader ]
  %49 = load ptr, ptr %48, align 8
  %memberidx.i.i101 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx.i.i101, align 4
  %51 = load i64, ptr %memberidx1.i.i102, align 4
  %.not.i.i103 = icmp eq i64 %50, %51
  br i1 %.not.i.i103, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i104 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i104, align 8
  %53 = load ptr, ptr %memberidx3.i.i, align 8
  %54 = tail call i64 @memcmp(ptr %52, ptr %53, i64 %50)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i100, align 4
  %.pre195 = load ptr, ptr %40, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre196.pre = load ptr, ptr %40, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre196.pre, i64 %hash.0.i
  %.pre197.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre197.pre, null
  br i1 %.not29.i, label %if.entry6, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %56 = phi ptr [ %.pre195, %ifend.i.i.else.i_crit_edge ], [ %46, %while.entry.i ]
  %57 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %47, %while.entry.i ]
  %58 = add nuw i64 %hash.0.i, 1
  %59 = urem i64 %58, %57
  %ptridx7.i = getelementptr inbounds ptr, ptr %56, i64 %59
  %60 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %60, null
  br i1 %.not30.i, label %if.entry6, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre197.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx15.i, align 8
  %62 = icmp eq ptr %61, null
  br i1 %62, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_string_PropId____getitem__.exit
  %63 = add i64 %5, -11
  %64 = icmp ult i64 %63, 2
  br i1 %64, label %if.entry9, label %ifend11

ifend8:                                           ; preds = %Map_string_PropId____getitem__.exit
  %65 = load ptr, ptr %0, align 8
  %memberidx.i.i105 = getelementptr inbounds %PropId, ptr %61, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i105, align 8
  %memberidx.i.i.i106 = getelementptr inbounds %Program, ptr %65, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i.i.i106, align 8
  %68 = load i64, ptr %66, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %69, i64 %68
  %70 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i107 = getelementptr inbounds %Module, ptr %70, i64 0, i32 3
  %71 = load ptr, ptr %memberidx2.i.i.i107, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %66, i64 0, i32 2
  %72 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %71, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %73, i64 %72
  %74 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %75 = load i64, ptr %61, align 4
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend8
  %memberidx1.i109 = getelementptr inbounds %Class, ptr %74, i64 0, i32 5
  %77 = load ptr, ptr %memberidx1.i109, align 8
  %memberidx2.i110 = getelementptr inbounds %PropId, ptr %61, i64 0, i32 2
  %78 = load i64, ptr %memberidx2.i110, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %79, i64 %78
  %80 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %80, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend8
  %memberidx4.i = getelementptr inbounds %Class, ptr %74, i64 0, i32 4
  %81 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %61, i64 0, i32 2
  %82 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %81, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i111 = getelementptr inbounds ptr, ptr %83, i64 %82
  %84 = load ptr, ptr %ptridx.i.i111, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %84, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i108 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx20 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i108, i64 0, i32 1
  %85 = load ptr, ptr %memberidx20, align 8
  %memberidx.i112 = getelementptr inbounds %Array_Type_, ptr %85, i64 0, i32 1
  %86 = load ptr, ptr %memberidx.i112, align 8
  %87 = load ptr, ptr %86, align 8
  %88 = icmp eq ptr %3, null
  br i1 %88, label %if.entry21, label %ifend23

if.entry9:                                        ; preds = %if.entry6
  %89 = tail call ptr @malloc(i32 49)
  %90 = load ptr, ptr %memberidx4, align 8
  %memberidx13 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %91 = load ptr, ptr %memberidx13, align 8
  %92 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %90, ptr %91)
  %93 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %93, align 4
  store i64 8, ptr %89, align 4
  %memberidx.i.i113 = getelementptr inbounds %Expression, ptr %89, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i113, align 4
  %memberidx1.i.i114 = getelementptr inbounds %Expression, ptr %89, i64 0, i32 1
  %memberidx.i115 = getelementptr inbounds %BinaryExpression, ptr %89, i64 0, i32 4
  store ptr %1, ptr %memberidx.i115, align 8
  %memberidx1.i116 = getelementptr inbounds %BinaryExpression, ptr %89, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i116, align 4
  %memberidx2.i117 = getelementptr inbounds %BinaryExpression, ptr %89, i64 0, i32 6
  store ptr %92, ptr %memberidx2.i117, align 8
  %memberidx3.i118 = getelementptr inbounds %Expression, ptr %89, i64 0, i32 3
  store ptr %93, ptr %memberidx3.i118, align 8
  store i1 false, ptr %memberidx1.i.i114, align 1
  br label %common.ret

ifend11:                                          ; preds = %if.entry6
  %94 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %95 = load ptr, ptr %94, align 8
  %memberidx14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %95, i64 0, i32 5
  %96 = load ptr, ptr %memberidx14, align 8
  %97 = tail call ptr %96(ptr nonnull %94)
  %memberidx15 = getelementptr inbounds %Class, ptr %common.ret.op.i184, i64 0, i32 1
  %98 = load ptr, ptr %memberidx15, align 8
  %99 = load ptr, ptr %98, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %99, i64 0, i32 5
  %100 = load ptr, ptr %memberidx16, align 8
  %101 = tail call ptr %100(ptr nonnull %98)
  %102 = load ptr, ptr %6, align 8
  %memberidx17 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %102, i64 0, i32 5
  %103 = load ptr, ptr %memberidx17, align 8
  %104 = tail call ptr %103(ptr nonnull %6)
  %105 = alloca ptr, align 8
  %106 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %105, ptr nonnull @169, ptr %97, ptr %101, ptr %104)
  %107 = load ptr, ptr %105, align 8
  %108 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %108, align 8
  %memberidx.i120 = getelementptr inbounds %string, ptr %108, i64 0, i32 1
  store ptr %107, ptr %memberidx.i120, align 8
  %memberidx1.i121 = getelementptr inbounds %string, ptr %108, i64 0, i32 2
  store i64 %106, ptr %memberidx1.i121, align 4
  %memberidx2.i122 = getelementptr inbounds %string, ptr %108, i64 0, i32 3
  store i64 %106, ptr %memberidx2.i122, align 4
  tail call void @free(ptr %97)
  tail call void @free(ptr %101)
  tail call void @free(ptr %104)
  %109 = load ptr, ptr %2, align 8
  %memberidx.i123 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %110 = load ptr, ptr %memberidx.i123, align 8
  %memberidx1.i124 = getelementptr inbounds %Compiler, ptr %110, i64 0, i32 6
  %111 = load ptr, ptr %memberidx1.i124, align 8
  %112 = call ptr @malloc(i32 24)
  store i64 1, ptr %112, align 4
  %memberidx1.i.i125 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 2
  store ptr %109, ptr %memberidx1.i.i125, align 8
  %memberidx2.i.i126 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 1
  store ptr %108, ptr %memberidx2.i.i126, align 8
  %memberidx.i.i127 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 2
  %113 = load i64, ptr %memberidx.i.i127, align 4
  %memberidx1.i2.i128 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 3
  %114 = load i64, ptr %memberidx1.i2.i128, align 4
  %.not.i.i129 = icmp slt i64 %113, %114
  br i1 %.not.i.i129, label %ifend11.TypeChecker_error.exit135_crit_edge, label %if.entry.i.i132

ifend11.TypeChecker_error.exit135_crit_edge:      ; preds = %ifend11
  %memberidx4.i.i133.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 1
  %.pre202 = load ptr, ptr %memberidx4.i.i133.phi.trans.insert, align 8
  br label %TypeChecker_error.exit135

if.entry.i.i132:                                  ; preds = %ifend11
  %115 = shl nuw i64 %114, 1
  store i64 %115, ptr %memberidx1.i2.i128, align 4
  %memberidx2.i.i.i131 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 1
  %116 = load ptr, ptr %memberidx2.i.i.i131, align 8
  %117 = shl i64 %114, 4
  %118 = call ptr @realloc(ptr %116, i64 %117)
  store ptr %118, ptr %memberidx2.i.i.i131, align 8
  %.pre201 = load i64, ptr %memberidx.i.i127, align 4
  br label %TypeChecker_error.exit135

TypeChecker_error.exit135:                        ; preds = %ifend11.TypeChecker_error.exit135_crit_edge, %if.entry.i.i132
  %119 = phi ptr [ %.pre202, %ifend11.TypeChecker_error.exit135_crit_edge ], [ %118, %if.entry.i.i132 ]
  %120 = phi i64 [ %113, %ifend11.TypeChecker_error.exit135_crit_edge ], [ %.pre201, %if.entry.i.i132 ]
  %121 = add nsw i64 %120, 1
  store i64 %121, ptr %memberidx.i.i127, align 4
  %ptridx.i.i134 = getelementptr inbounds ptr, ptr %119, i64 %120
  store ptr %112, ptr %ptridx.i.i134, align 8
  br label %common.ret

if.entry21:                                       ; preds = %get_class_prop_type.exit
  %memberidx24 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %122 = load ptr, ptr %memberidx24, align 8
  %123 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %87, ptr %122)
  br label %ifend23

ifend23:                                          ; preds = %get_class_prop_type.exit, %if.entry21
  %right.0 = phi ptr [ %123, %if.entry21 ], [ %3, %get_class_prop_type.exit ]
  %memberidx.i136 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %124 = load ptr, ptr %memberidx.i136, align 8
  %memberidx1.i137 = getelementptr inbounds %Compiler, ptr %124, i64 0, i32 6
  %125 = load ptr, ptr %memberidx1.i137, align 8
  %memberidx2.i138 = getelementptr inbounds %Array_FloError_, ptr %125, i64 0, i32 2
  %126 = load i64, ptr %memberidx2.i138, align 4
  %127 = icmp sgt i64 %126, 0
  br i1 %127, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend23
  %memberidx.i139 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 2
  %128 = load i64, ptr %memberidx.i139, align 4
  %129 = icmp eq i64 %128, 5
  %130 = add i64 %5, -11
  %131 = icmp ult i64 %130, 2
  %132 = and i1 %131, %129
  br i1 %132, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend27
  %133 = tail call ptr @malloc(i32 49)
  %134 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %134, align 4
  store i64 8, ptr %133, align 4
  %memberidx.i.i140 = getelementptr inbounds %Expression, ptr %133, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i140, align 4
  %memberidx1.i.i141 = getelementptr inbounds %Expression, ptr %133, i64 0, i32 1
  %memberidx.i142 = getelementptr inbounds %BinaryExpression, ptr %133, i64 0, i32 4
  store ptr %1, ptr %memberidx.i142, align 8
  %memberidx1.i143 = getelementptr inbounds %BinaryExpression, ptr %133, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i143, align 4
  %memberidx2.i144 = getelementptr inbounds %BinaryExpression, ptr %133, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i144, align 8
  %memberidx3.i145 = getelementptr inbounds %Expression, ptr %133, i64 0, i32 3
  store ptr %134, ptr %memberidx3.i145, align 8
  store i1 false, ptr %memberidx1.i.i141, align 1
  br label %common.ret

ifend30:                                          ; preds = %ifend27
  %135 = icmp eq i64 %5, 18
  %memberidx34 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %136 = load ptr, ptr %memberidx34, align 8
  br i1 %135, label %if.entry31, label %ifend33

if.entry31:                                       ; preds = %ifend30
  %137 = load i64, ptr %136, align 4
  %138 = add i64 %137, -1
  %139 = icmp ult i64 %138, 7
  %140 = load i64, ptr %87, align 4
  %141 = add i64 %140, -1
  %142 = icmp ult i64 %141, 7
  %143 = and i1 %139, %142
  br i1 %143, label %if.entry35, label %ifend33

ifend33:                                          ; preds = %ifend30, %if.entry35, %if.entry31
  %144 = phi ptr [ %ternary.i, %if.entry35 ], [ %136, %if.entry31 ], [ %136, %ifend30 ]
  %right.1 = phi ptr [ %147, %if.entry35 ], [ %right.0, %if.entry31 ], [ %right.0, %ifend30 ]
  %145 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %87, ptr %144)
  br i1 %145, label %ifend42, label %if.entry40

if.entry35:                                       ; preds = %if.entry31
  %146 = icmp ugt i64 %137, %140
  %ternary.i = select i1 %146, ptr %136, ptr %87
  %147 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %147, align 4
  %memberidx.i.i.i147 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i147, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %147, i64 0, i32 1
  %memberidx.i.i148 = getelementptr inbounds %TypeCastExpression, ptr %147, i64 0, i32 4
  store ptr %right.0, ptr %memberidx.i.i148, align 8
  %memberidx1.i.i149 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i149, align 8
  %memberidx3.i.i151 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 1
  %148 = load i1, ptr %memberidx3.i.i151, align 1
  store i1 %148, ptr %memberidx1.i.i.i, align 1
  br label %ifend33

if.entry40:                                       ; preds = %ifend33
  %memberidx39 = getelementptr inbounds %Expression, ptr %right.1, i64 0, i32 3
  %149 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %87)
  %150 = load ptr, ptr %149, align 8
  %memberidx43 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %150, i64 0, i32 5
  %151 = load ptr, ptr %memberidx43, align 8
  %152 = tail call ptr %151(ptr nonnull %149)
  %153 = load ptr, ptr %memberidx39, align 8
  %154 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %153)
  %155 = load ptr, ptr %154, align 8
  %memberidx45 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %155, i64 0, i32 5
  %156 = load ptr, ptr %memberidx45, align 8
  %157 = tail call ptr %156(ptr nonnull %154)
  %158 = alloca ptr, align 8
  %159 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %158, ptr nonnull @167, ptr %152, ptr %157)
  %160 = load ptr, ptr %158, align 8
  %161 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %161, align 8
  %memberidx.i152 = getelementptr inbounds %string, ptr %161, i64 0, i32 1
  store ptr %160, ptr %memberidx.i152, align 8
  %memberidx1.i153 = getelementptr inbounds %string, ptr %161, i64 0, i32 2
  store i64 %159, ptr %memberidx1.i153, align 4
  %memberidx2.i154 = getelementptr inbounds %string, ptr %161, i64 0, i32 3
  store i64 %159, ptr %memberidx2.i154, align 4
  tail call void @free(ptr %152)
  tail call void @free(ptr %157)
  %memberidx46 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %162 = load ptr, ptr %memberidx46, align 8
  %163 = load ptr, ptr %162, align 8
  %164 = load ptr, ptr %memberidx.i136, align 8
  %memberidx1.i156 = getelementptr inbounds %Compiler, ptr %164, i64 0, i32 6
  %165 = load ptr, ptr %memberidx1.i156, align 8
  %166 = call ptr @malloc(i32 24)
  store i64 5, ptr %166, align 4
  %memberidx1.i.i157 = getelementptr inbounds %FloError, ptr %166, i64 0, i32 2
  store ptr %163, ptr %memberidx1.i.i157, align 8
  %memberidx2.i.i158 = getelementptr inbounds %FloError, ptr %166, i64 0, i32 1
  store ptr %161, ptr %memberidx2.i.i158, align 8
  %memberidx.i.i159 = getelementptr inbounds %Array_FloError_, ptr %165, i64 0, i32 2
  %167 = load i64, ptr %memberidx.i.i159, align 4
  %memberidx1.i2.i160 = getelementptr inbounds %Array_FloError_, ptr %165, i64 0, i32 3
  %168 = load i64, ptr %memberidx1.i2.i160, align 4
  %.not.i.i161 = icmp slt i64 %167, %168
  br i1 %.not.i.i161, label %if.entry40.TypeChecker_error.exit167_crit_edge, label %if.entry.i.i164

if.entry40.TypeChecker_error.exit167_crit_edge:   ; preds = %if.entry40
  %memberidx4.i.i165.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %165, i64 0, i32 1
  %.pre200 = load ptr, ptr %memberidx4.i.i165.phi.trans.insert, align 8
  br label %TypeChecker_error.exit167

if.entry.i.i164:                                  ; preds = %if.entry40
  %169 = shl nuw i64 %168, 1
  store i64 %169, ptr %memberidx1.i2.i160, align 4
  %memberidx2.i.i.i163 = getelementptr inbounds %Array_FloError_, ptr %165, i64 0, i32 1
  %170 = load ptr, ptr %memberidx2.i.i.i163, align 8
  %171 = shl i64 %168, 4
  %172 = call ptr @realloc(ptr %170, i64 %171)
  store ptr %172, ptr %memberidx2.i.i.i163, align 8
  %.pre199 = load i64, ptr %memberidx.i.i159, align 4
  br label %TypeChecker_error.exit167

TypeChecker_error.exit167:                        ; preds = %if.entry40.TypeChecker_error.exit167_crit_edge, %if.entry.i.i164
  %173 = phi ptr [ %.pre200, %if.entry40.TypeChecker_error.exit167_crit_edge ], [ %172, %if.entry.i.i164 ]
  %174 = phi i64 [ %167, %if.entry40.TypeChecker_error.exit167_crit_edge ], [ %.pre199, %if.entry.i.i164 ]
  %175 = add nsw i64 %174, 1
  store i64 %175, ptr %memberidx.i.i159, align 4
  %ptridx.i.i166 = getelementptr inbounds ptr, ptr %173, i64 %174
  store ptr %166, ptr %ptridx.i.i166, align 8
  br label %common.ret

ifend42:                                          ; preds = %ifend33
  %176 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %176, align 4
  %memberidx.i.i168 = getelementptr inbounds %Expression, ptr %176, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i168, align 4
  %memberidx1.i.i169 = getelementptr inbounds %Expression, ptr %176, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i169, align 1
  %memberidx.i170 = getelementptr inbounds %MemberExpression, ptr %176, i64 0, i32 4
  store ptr %1, ptr %memberidx.i170, align 8
  %memberidx1.i171 = getelementptr inbounds %MemberExpression, ptr %176, i64 0, i32 5
  store ptr %61, ptr %memberidx1.i171, align 8
  %memberidx2.i172 = getelementptr inbounds %Expression, ptr %176, i64 0, i32 3
  store ptr %common.ret.op.i108, ptr %memberidx2.i172, align 8
  %177 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %177, align 8
  %memberidx.i173 = getelementptr inbounds %Array_Expression_, ptr %177, i64 0, i32 2
  store i64 0, ptr %memberidx.i173, align 4
  %memberidx1.i174 = getelementptr inbounds %Array_Expression_, ptr %177, i64 0, i32 3
  store i64 8, ptr %memberidx1.i174, align 4
  %memberidx2.i175 = getelementptr inbounds %Array_Expression_, ptr %177, i64 0, i32 1
  %178 = tail call ptr @malloc(i32 64)
  store ptr %178, ptr %memberidx2.i175, align 8
  store ptr %right.1, ptr %178, align 8
  store i64 1, ptr %memberidx.i173, align 4
  %179 = tail call ptr @malloc(i32 41)
  %memberidx50 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i108, i64 0, i32 2
  %180 = load ptr, ptr %memberidx50, align 8
  store i64 8, ptr %179, align 4
  %memberidx.i.i176 = getelementptr inbounds %Expression, ptr %179, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i176, align 4
  %memberidx1.i.i177 = getelementptr inbounds %Expression, ptr %179, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i177, align 1
  %memberidx.i178 = getelementptr inbounds %CallExpression, ptr %179, i64 0, i32 4
  store ptr %176, ptr %memberidx.i178, align 8
  %memberidx1.i179 = getelementptr inbounds %CallExpression, ptr %179, i64 0, i32 5
  store ptr %177, ptr %memberidx1.i179, align 8
  %memberidx2.i180 = getelementptr inbounds %Expression, ptr %179, i64 0, i32 3
  store ptr %180, ptr %memberidx2.i180, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %5)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 6
  %8 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %if.entry42, %TypeChecker_error.exit144, %if.entry35, %ifend28, %TypeChecker_error.exit, %if.entry17, %ifend12
  %common.ret.op = phi ptr [ %17, %ifend12 ], [ %22, %if.entry17 ], [ null, %TypeChecker_error.exit ], [ %57, %ifend28 ], [ %66, %if.entry35 ], [ null, %TypeChecker_error.exit144 ], [ %103, %if.entry42 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %memberidx2 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %12 = load i1, ptr %memberidx3, align 1
  switch i64 %4, label %ifend16 [
    i64 6, label %if.entry4
    i64 7, label %if.entry14
  ]

if.entry4:                                        ; preds = %ifend
  %13 = load i64, ptr %11, align 4
  %14 = add i64 %13, -1
  %15 = icmp ult i64 %14, 9
  br i1 %15, label %if.entry7, label %ifend34.split

if.entry7:                                        ; preds = %if.entry4
  %16 = icmp ult i64 %14, 7
  br i1 %16, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %if.entry7
  %memberidx13 = getelementptr inbounds %IntType, ptr %11, i64 0, i32 1
  store i1 true, ptr %memberidx13, align 1
  br label %ifend12

ifend12:                                          ; preds = %if.entry7, %if.entry10
  %17 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %17, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 1
  %memberidx.i89 = getelementptr inbounds %UnaryExpression, ptr %17, i64 0, i32 4
  store i64 6, ptr %memberidx.i89, align 4
  %memberidx1.i90 = getelementptr inbounds %UnaryExpression, ptr %17, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i90, align 8
  %memberidx2.i91 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i91, align 8
  store i1 %12, ptr %memberidx1.i.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %ifend
  %18 = load i64, ptr %11, align 4
  %19 = icmp ult i64 %18, 10
  br i1 %19, label %if.entry17, label %ifend34.split

ifend16:                                          ; preds = %ifend
  %20 = add i64 %4, -2
  %21 = icmp ult i64 %20, 4
  br i1 %21, label %if.entry20, label %ifend22

if.entry17:                                       ; preds = %if.entry14
  %22 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %22, align 4
  %memberidx.i.i92 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i92, align 4
  %memberidx1.i.i93 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 1
  %memberidx.i94 = getelementptr inbounds %UnaryExpression, ptr %22, i64 0, i32 4
  store i64 7, ptr %memberidx.i94, align 4
  %memberidx1.i95 = getelementptr inbounds %UnaryExpression, ptr %22, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i95, align 8
  %memberidx2.i96 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i96, align 8
  store i1 %12, ptr %memberidx1.i.i93, align 1
  br label %common.ret

if.entry20:                                       ; preds = %ifend16
  %23 = load i64, ptr %11, align 4
  %24 = add i64 %23, -1
  %25 = icmp ult i64 %24, 9
  %26 = icmp eq i64 %23, 13
  %27 = or i1 %26, %25
  br i1 %27, label %if.entry23, label %ifend22

ifend22:                                          ; preds = %if.entry20, %ifend16
  switch i64 %4, label %ifend34.split [
    i64 8, label %if.entry32
    i64 1, label %if.entry39
  ]

if.entry23:                                       ; preds = %if.entry20
  %memberidx.i98 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i98, align 4
  switch i64 %28, label %if.entry26 [
    i64 7, label %if.entry.i
    i64 12, label %check_is_var.exit
    i64 13, label %ifend28
  ]

if.entry.i:                                       ; preds = %if.entry23
  %memberidx1.i99 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %29 = load ptr, ptr %memberidx1.i99, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %ifend28, label %if.entry26

check_is_var.exit:                                ; preds = %if.entry23
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %32 = load ptr, ptr %memberidx7.i, align 8
  %33 = load i64, ptr %32, align 4
  %34 = icmp eq i64 %33, 1
  br i1 %34, label %ifend28, label %if.entry26

if.entry26:                                       ; preds = %if.entry.i, %if.entry23, %check_is_var.exit
  %35 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %36 = load ptr, ptr %35, align 8
  %memberidx29 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %36, i64 0, i32 5
  %37 = load ptr, ptr %memberidx29, align 8
  %38 = tail call ptr %37(ptr nonnull %35)
  %39 = alloca ptr, align 8
  %40 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %39, ptr nonnull @175, ptr %38)
  %41 = load ptr, ptr %39, align 8
  %42 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %42, align 8
  %memberidx.i100 = getelementptr inbounds %string, ptr %42, i64 0, i32 1
  store ptr %41, ptr %memberidx.i100, align 8
  %memberidx1.i101 = getelementptr inbounds %string, ptr %42, i64 0, i32 2
  store i64 %40, ptr %memberidx1.i101, align 4
  %memberidx2.i102 = getelementptr inbounds %string, ptr %42, i64 0, i32 3
  store i64 %40, ptr %memberidx2.i102, align 4
  tail call void @free(ptr %38)
  %43 = load ptr, ptr %memberidx1, align 8
  %44 = load ptr, ptr %43, align 8
  %45 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i104 = getelementptr inbounds %Compiler, ptr %45, i64 0, i32 6
  %46 = load ptr, ptr %memberidx1.i104, align 8
  %47 = call ptr @malloc(i32 24)
  store i64 4, ptr %47, align 4
  %memberidx1.i.i105 = getelementptr inbounds %FloError, ptr %47, i64 0, i32 2
  store ptr %44, ptr %memberidx1.i.i105, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %47, i64 0, i32 1
  store ptr %42, ptr %memberidx2.i.i, align 8
  %memberidx.i.i106 = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 2
  %48 = load i64, ptr %memberidx.i.i106, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 3
  %49 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %48, %49
  br i1 %.not.i.i, label %if.entry26.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry26.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry26
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 1
  %.pre159 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry26
  %50 = shl nuw i64 %49, 1
  store i64 %50, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 1
  %51 = load ptr, ptr %memberidx2.i.i.i, align 8
  %52 = shl i64 %49, 4
  %53 = call ptr @realloc(ptr %51, i64 %52)
  store ptr %53, ptr %memberidx2.i.i.i, align 8
  %.pre158 = load i64, ptr %memberidx.i.i106, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry26.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %54 = phi ptr [ %.pre159, %if.entry26.TypeChecker_error.exit_crit_edge ], [ %53, %if.entry.i.i ]
  %55 = phi i64 [ %48, %if.entry26.TypeChecker_error.exit_crit_edge ], [ %.pre158, %if.entry.i.i ]
  %56 = add nsw i64 %55, 1
  store i64 %56, ptr %memberidx.i.i106, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %54, i64 %55
  store ptr %47, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend28:                                          ; preds = %if.entry.i, %if.entry23, %check_is_var.exit
  %57 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %57, align 4
  %memberidx.i.i107 = getelementptr inbounds %Expression, ptr %57, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i107, align 4
  %memberidx1.i.i108 = getelementptr inbounds %Expression, ptr %57, i64 0, i32 1
  %memberidx.i109 = getelementptr inbounds %UnaryExpression, ptr %57, i64 0, i32 4
  store i64 %4, ptr %memberidx.i109, align 4
  %memberidx1.i110 = getelementptr inbounds %UnaryExpression, ptr %57, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i110, align 8
  %memberidx2.i111 = getelementptr inbounds %Expression, ptr %57, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i111, align 8
  store i1 false, ptr %memberidx1.i.i108, align 1
  br label %common.ret

if.entry32:                                       ; preds = %ifend22
  %memberidx.i113 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %58 = load i64, ptr %memberidx.i113, align 4
  switch i64 %58, label %ifend34.split [
    i64 7, label %if.entry.i116
    i64 12, label %check_is_var.exit121
    i64 13, label %if.entry35
  ]

if.entry.i116:                                    ; preds = %if.entry32
  %memberidx1.i115 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %59 = load ptr, ptr %memberidx1.i115, align 8
  %60 = load i64, ptr %59, align 4
  %61 = icmp eq i64 %60, 1
  br i1 %61, label %if.entry35, label %ifend34.split

check_is_var.exit121:                             ; preds = %if.entry32
  %memberidx7.i118 = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %62 = load ptr, ptr %memberidx7.i118, align 8
  %63 = load i64, ptr %62, align 4
  %64 = icmp eq i64 %63, 1
  br i1 %64, label %if.entry35, label %ifend34.split

ifend34.split:                                    ; preds = %if.entry4, %if.entry14, %check_is_var.exit121, %if.entry32, %if.entry.i116, %ifend22
  %65 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %.pre = load ptr, ptr %65, align 8
  br label %ifend41

if.entry35:                                       ; preds = %if.entry.i116, %if.entry32, %check_is_var.exit121
  %66 = tail call ptr @malloc(i32 41)
  %67 = tail call ptr @malloc(i32 16)
  %68 = load ptr, ptr %memberidx2, align 8
  store i64 13, ptr %67, align 4
  %memberidx.i122 = getelementptr inbounds %PointerType, ptr %67, i64 0, i32 1
  store ptr %68, ptr %memberidx.i122, align 8
  store i64 8, ptr %66, align 4
  %memberidx.i.i123 = getelementptr inbounds %Expression, ptr %66, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i123, align 4
  %memberidx1.i.i124 = getelementptr inbounds %Expression, ptr %66, i64 0, i32 1
  %memberidx.i125 = getelementptr inbounds %UnaryExpression, ptr %66, i64 0, i32 4
  store i64 8, ptr %memberidx.i125, align 4
  %memberidx1.i126 = getelementptr inbounds %UnaryExpression, ptr %66, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i126, align 8
  %memberidx2.i127 = getelementptr inbounds %Expression, ptr %66, i64 0, i32 3
  store ptr %67, ptr %memberidx2.i127, align 8
  store i1 false, ptr %memberidx1.i.i124, align 1
  br label %common.ret

if.entry39:                                       ; preds = %ifend22
  %69 = load i64, ptr %11, align 4
  %70 = icmp eq i64 %69, 19
  br i1 %70, label %if.entry.i155, label %is_object.exit

if.entry.i155:                                    ; preds = %if.entry39, %if.entry.i155
  %.tr5.i = phi ptr [ %71, %if.entry.i155 ], [ %11, %if.entry39 ]
  %memberidx1.i154 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %71 = load ptr, ptr %memberidx1.i154, align 8
  %72 = load i64, ptr %71, align 4
  %73 = icmp eq i64 %72, 19
  br i1 %73, label %if.entry.i155, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i155, %if.entry39
  %.lcssa.i = phi i64 [ %69, %if.entry39 ], [ %72, %if.entry.i155 ]
  %74 = icmp eq i64 %.lcssa.i, 11
  %75 = icmp eq i64 %69, 13
  %76 = or i1 %75, %74
  br i1 %76, label %if.entry42, label %if.entry39.split

if.entry39.split:                                 ; preds = %is_object.exit
  %77 = tail call ptr @malloc(i32 1)
  store i8 38, ptr %77, align 8
  %78 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %78, align 8
  %memberidx.i.i36.i = getelementptr inbounds %string, ptr %78, i64 0, i32 1
  store ptr %77, ptr %memberidx.i.i36.i, align 8
  %memberidx1.i.i37.i = getelementptr inbounds %string, ptr %78, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i37.i, align 4
  %memberidx2.i.i38.i = getelementptr inbounds %string, ptr %78, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i38.i, align 4
  br label %ifend41

ifend41:                                          ; preds = %if.entry39.split, %ifend34.split
  %79 = phi ptr [ %.pre, %ifend34.split ], [ @VTablestring, %if.entry39.split ]
  %phi.call = phi ptr [ %65, %ifend34.split ], [ %78, %if.entry39.split ]
  %memberidx45 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %79, i64 0, i32 5
  %80 = load ptr, ptr %memberidx45, align 8
  %81 = tail call ptr %80(ptr nonnull %phi.call)
  %82 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %11)
  %83 = load ptr, ptr %82, align 8
  %memberidx46 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %83, i64 0, i32 5
  %84 = load ptr, ptr %memberidx46, align 8
  %85 = tail call ptr %84(ptr nonnull %82)
  %86 = alloca ptr, align 8
  %87 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %86, ptr nonnull @176, ptr %81, ptr %85)
  %88 = load ptr, ptr %86, align 8
  %89 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %89, align 8
  %memberidx.i129 = getelementptr inbounds %string, ptr %89, i64 0, i32 1
  store ptr %88, ptr %memberidx.i129, align 8
  %memberidx1.i130 = getelementptr inbounds %string, ptr %89, i64 0, i32 2
  store i64 %87, ptr %memberidx1.i130, align 4
  %memberidx2.i131 = getelementptr inbounds %string, ptr %89, i64 0, i32 3
  store i64 %87, ptr %memberidx2.i131, align 4
  tail call void @free(ptr %81)
  tail call void @free(ptr %85)
  %90 = load ptr, ptr %2, align 8
  %91 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i133 = getelementptr inbounds %Compiler, ptr %91, i64 0, i32 6
  %92 = load ptr, ptr %memberidx1.i133, align 8
  %93 = call ptr @malloc(i32 24)
  store i64 5, ptr %93, align 4
  %memberidx1.i.i134 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 2
  store ptr %90, ptr %memberidx1.i.i134, align 8
  %memberidx2.i.i135 = getelementptr inbounds %FloError, ptr %93, i64 0, i32 1
  store ptr %89, ptr %memberidx2.i.i135, align 8
  %memberidx.i.i136 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 2
  %94 = load i64, ptr %memberidx.i.i136, align 4
  %memberidx1.i2.i137 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 3
  %95 = load i64, ptr %memberidx1.i2.i137, align 4
  %.not.i.i138 = icmp slt i64 %94, %95
  br i1 %.not.i.i138, label %ifend41.TypeChecker_error.exit144_crit_edge, label %if.entry.i.i141

ifend41.TypeChecker_error.exit144_crit_edge:      ; preds = %ifend41
  %memberidx4.i.i142.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %.pre157 = load ptr, ptr %memberidx4.i.i142.phi.trans.insert, align 8
  br label %TypeChecker_error.exit144

if.entry.i.i141:                                  ; preds = %ifend41
  %96 = shl nuw i64 %95, 1
  store i64 %96, ptr %memberidx1.i2.i137, align 4
  %memberidx2.i.i.i140 = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %97 = load ptr, ptr %memberidx2.i.i.i140, align 8
  %98 = shl i64 %95, 4
  %99 = call ptr @realloc(ptr %97, i64 %98)
  store ptr %99, ptr %memberidx2.i.i.i140, align 8
  %.pre156 = load i64, ptr %memberidx.i.i136, align 4
  br label %TypeChecker_error.exit144

TypeChecker_error.exit144:                        ; preds = %ifend41.TypeChecker_error.exit144_crit_edge, %if.entry.i.i141
  %100 = phi ptr [ %.pre157, %ifend41.TypeChecker_error.exit144_crit_edge ], [ %99, %if.entry.i.i141 ]
  %101 = phi i64 [ %94, %ifend41.TypeChecker_error.exit144_crit_edge ], [ %.pre156, %if.entry.i.i141 ]
  %102 = add nsw i64 %101, 1
  store i64 %102, ptr %memberidx.i.i136, align 4
  %ptridx.i.i143 = getelementptr inbounds ptr, ptr %100, i64 %101
  store ptr %93, ptr %ptridx.i.i143, align 8
  br label %common.ret

if.entry42:                                       ; preds = %is_object.exit
  %103 = tail call ptr @malloc(i32 41)
  %104 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %104, align 4
  store i64 8, ptr %103, align 4
  %memberidx.i.i145 = getelementptr inbounds %Expression, ptr %103, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i145, align 4
  %memberidx1.i.i146 = getelementptr inbounds %Expression, ptr %103, i64 0, i32 1
  %memberidx.i147 = getelementptr inbounds %UnaryExpression, ptr %103, i64 0, i32 4
  store i64 1, ptr %memberidx.i147, align 4
  %memberidx1.i148 = getelementptr inbounds %UnaryExpression, ptr %103, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i148, align 8
  %memberidx2.i149 = getelementptr inbounds %Expression, ptr %103, i64 0, i32 3
  store ptr %104, ptr %memberidx2.i149, align 8
  store i1 false, ptr %memberidx1.i.i146, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %args = alloca ptr, align 8
  %memberidx = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 3
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %3)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %5, i64 0, i32 6
  %6 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend27, %2, %TypeChecker_error.exit145, %TypeChecker_error.exit123, %TypeChecker_error.exit107, %TypeChecker_error.exit, %ifend10
  %common.ret.op = phi ptr [ %37, %ifend10 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit107 ], [ null, %TypeChecker_error.exit123 ], [ null, %TypeChecker_error.exit145 ], [ null, %2 ], [ null, %ifend27 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %9 = load i64, ptr %4, align 4
  %10 = icmp eq i64 %9, 19
  br i1 %10, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx5 = getelementptr inbounds %GenericType, ptr %4, i64 0, i32 3
  %11 = load ptr, ptr %memberidx5, align 8
  br label %ifend4

ifend4:                                           ; preds = %ifend, %if.entry2
  %memory_type.0 = phi ptr [ %11, %if.entry2 ], [ %4, %ifend ]
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %12, align 8
  %memberidx.i82 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 2
  store i64 0, ptr %memberidx.i82, align 4
  %memberidx1.i83 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 3
  store i64 8, ptr %memberidx1.i83, align 4
  %memberidx2.i84 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %memberidx2.i84, align 8
  store i64 0, ptr %memberidx.i82, align 4
  store ptr %12, ptr %args, align 8
  %14 = load i64, ptr %memory_type.0, align 4
  %15 = icmp eq i64 %14, 19
  br i1 %15, label %if.entry.i152, label %is_object.exit.thread

if.entry.i152:                                    ; preds = %ifend4, %if.entry.i152
  %.tr5.i = phi ptr [ %16, %if.entry.i152 ], [ %memory_type.0, %ifend4 ]
  %memberidx1.i151 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i151, align 8
  %17 = load i64, ptr %16, align 4
  switch i64 %17, label %else9 [
    i64 19, label %if.entry.i152
    i64 11, label %if.entry8
  ]

is_object.exit.thread:                            ; preds = %ifend4
  switch i64 %14, label %else20 [
    i64 11, label %if.entry8.thread
    i64 13, label %if.entry19
  ]

if.entry8.thread:                                 ; preds = %is_object.exit.thread
  %18 = load ptr, ptr %0, align 8
  br label %if.entry3.i

if.entry8:                                        ; preds = %if.entry.i152
  %19 = load ptr, ptr %0, align 8
  br i1 %15, label %if.entry.i154, label %if.entry3.i

if.entry.i154:                                    ; preds = %if.entry8, %if.entry.i154
  %.tr11.i159 = phi ptr [ %20, %if.entry.i154 ], [ %memory_type.0, %if.entry8 ]
  %memberidx1.i153 = getelementptr inbounds %GenericType, ptr %.tr11.i159, i64 0, i32 3
  %20 = load ptr, ptr %memberidx1.i153, align 8
  %21 = load i64, ptr %20, align 4
  %switch = icmp eq i64 %21, 19
  br i1 %switch, label %if.entry.i154, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i154, %if.entry8.thread, %if.entry8
  %22 = phi ptr [ %19, %if.entry8 ], [ %18, %if.entry8.thread ], [ %19, %if.entry.i154 ]
  %.tr11.i.lcssa = phi ptr [ %memory_type.0, %if.entry8 ], [ %memory_type.0, %if.entry8.thread ], [ %20, %if.entry.i154 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i155 = getelementptr inbounds %Program, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i.i155, align 8
  %25 = load i64, ptr %23, align 4
  %memberidx.i.i.i156 = getelementptr inbounds %Array_Module_, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i.i.i156, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %26, i64 %25
  %27 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i157 = getelementptr inbounds %Module, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx2.i.i157, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %23, i64 0, i32 2
  %29 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %28, i64 0, i32 1
  %30 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %30, i64 %29
  %31 = load ptr, ptr %ptridx.i6.i.i, align 8
  %32 = load ptr, ptr %31, align 8
  %memberidx13 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %33 = load ptr, ptr %memberidx13, align 8
  %34 = call fastcc ptr @TypeChecker_check_constructor_call(ptr nonnull %0, ptr %32, ptr %33, ptr nonnull %args)
  %.not81 = icmp eq ptr %34, null
  br i1 %.not81, label %if.entry3.i.ifend10_crit_edge, label %if.entry14

if.entry3.i.ifend10_crit_edge:                    ; preds = %if.entry3.i
  %.pre170 = load ptr, ptr %args, align 8
  br label %ifend10

else9:                                            ; preds = %if.entry.i152
  %35 = icmp eq i64 %14, 13
  br i1 %35, label %if.entry19, label %else20

ifend10:                                          ; preds = %if.entry3.i.ifend10_crit_edge, %Array_Expression____sl__.exit
  %36 = phi ptr [ %.pre170, %if.entry3.i.ifend10_crit_edge ], [ %12, %Array_Expression____sl__.exit ]
  %memory_type.1 = phi ptr [ %memory_type.0, %if.entry3.i.ifend10_crit_edge ], [ %52, %Array_Expression____sl__.exit ]
  %37 = tail call ptr @malloc(i32 42)
  %memberidx44 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 4
  %38 = load i1, ptr %memberidx44, align 1
  store i64 8, ptr %37, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %37, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %37, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i85 = getelementptr inbounds %NewExpression, ptr %37, i64 0, i32 6
  store ptr %memory_type.1, ptr %memberidx.i85, align 8
  %memberidx1.i86 = getelementptr inbounds %NewExpression, ptr %37, i64 0, i32 5
  store i1 %38, ptr %memberidx1.i86, align 1
  %memberidx2.i87 = getelementptr inbounds %NewExpression, ptr %37, i64 0, i32 4
  store ptr %36, ptr %memberidx2.i87, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %37, i64 0, i32 3
  store ptr %4, ptr %memberidx3.i, align 8
  br label %common.ret

if.entry14:                                       ; preds = %if.entry3.i
  %39 = load ptr, ptr %1, align 8
  %40 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i89 = getelementptr inbounds %Compiler, ptr %40, i64 0, i32 6
  %41 = load ptr, ptr %memberidx1.i89, align 8
  %42 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %42, align 4
  %memberidx1.i.i90 = getelementptr inbounds %FloError, ptr %42, i64 0, i32 2
  store ptr %39, ptr %memberidx1.i.i90, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %42, i64 0, i32 1
  store ptr %34, ptr %memberidx2.i.i, align 8
  %memberidx.i.i91 = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 2
  %43 = load i64, ptr %memberidx.i.i91, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 3
  %44 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %43, %44
  br i1 %.not.i.i, label %if.entry14.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry14.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry14
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %.pre169 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry14
  %45 = shl nuw i64 %44, 1
  store i64 %45, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i.i, align 8
  %47 = shl i64 %44, 4
  %48 = tail call ptr @realloc(ptr %46, i64 %47)
  store ptr %48, ptr %memberidx2.i.i.i, align 8
  %.pre168 = load i64, ptr %memberidx.i.i91, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry14.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %49 = phi ptr [ %.pre169, %if.entry14.TypeChecker_error.exit_crit_edge ], [ %48, %if.entry.i.i ]
  %50 = phi i64 [ %43, %if.entry14.TypeChecker_error.exit_crit_edge ], [ %.pre168, %if.entry.i.i ]
  %51 = add nsw i64 %50, 1
  store i64 %51, ptr %memberidx.i.i91, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %49, i64 %50
  store ptr %42, ptr %ptridx.i.i, align 8
  br label %common.ret

if.entry19:                                       ; preds = %is_object.exit.thread, %else9
  %memberidx22 = getelementptr inbounds %PointerType, ptr %memory_type.0, i64 0, i32 1
  %52 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %53 = load ptr, ptr %memberidx23, align 8
  %memberidx24 = getelementptr inbounds %Array_ExpressionNode_, ptr %53, i64 0, i32 2
  %54 = load i64, ptr %memberidx24, align 4
  %.not = icmp eq i64 %54, 1
  br i1 %.not, label %ifend27, label %if.entry25

else20:                                           ; preds = %is_object.exit.thread, %else9
  %55 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %memory_type.0)
  %56 = load ptr, ptr %55, align 8
  %memberidx42 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %56, i64 0, i32 5
  %57 = load ptr, ptr %memberidx42, align 8
  %58 = tail call ptr %57(ptr nonnull %55)
  %59 = alloca ptr, align 8
  %60 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %59, ptr nonnull @184, ptr %58)
  %61 = load ptr, ptr %59, align 8
  %62 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %62, align 8
  %memberidx.i92 = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i92, align 8
  %memberidx1.i93 = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  store i64 %60, ptr %memberidx1.i93, align 4
  %memberidx2.i94 = getelementptr inbounds %string, ptr %62, i64 0, i32 3
  store i64 %60, ptr %memberidx2.i94, align 4
  tail call void @free(ptr %58)
  %63 = load ptr, ptr %1, align 8
  %64 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i96 = getelementptr inbounds %Compiler, ptr %64, i64 0, i32 6
  %65 = load ptr, ptr %memberidx1.i96, align 8
  %66 = call ptr @malloc(i32 24)
  store i64 5, ptr %66, align 4
  %memberidx1.i.i97 = getelementptr inbounds %FloError, ptr %66, i64 0, i32 2
  store ptr %63, ptr %memberidx1.i.i97, align 8
  %memberidx2.i.i98 = getelementptr inbounds %FloError, ptr %66, i64 0, i32 1
  store ptr %62, ptr %memberidx2.i.i98, align 8
  %memberidx.i.i99 = getelementptr inbounds %Array_FloError_, ptr %65, i64 0, i32 2
  %67 = load i64, ptr %memberidx.i.i99, align 4
  %memberidx1.i2.i100 = getelementptr inbounds %Array_FloError_, ptr %65, i64 0, i32 3
  %68 = load i64, ptr %memberidx1.i2.i100, align 4
  %.not.i.i101 = icmp slt i64 %67, %68
  br i1 %.not.i.i101, label %else20.TypeChecker_error.exit107_crit_edge, label %if.entry.i.i104

else20.TypeChecker_error.exit107_crit_edge:       ; preds = %else20
  %memberidx4.i.i105.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %65, i64 0, i32 1
  %.pre161 = load ptr, ptr %memberidx4.i.i105.phi.trans.insert, align 8
  br label %TypeChecker_error.exit107

if.entry.i.i104:                                  ; preds = %else20
  %69 = shl nuw i64 %68, 1
  store i64 %69, ptr %memberidx1.i2.i100, align 4
  %memberidx2.i.i.i103 = getelementptr inbounds %Array_FloError_, ptr %65, i64 0, i32 1
  %70 = load ptr, ptr %memberidx2.i.i.i103, align 8
  %71 = shl i64 %68, 4
  %72 = call ptr @realloc(ptr %70, i64 %71)
  store ptr %72, ptr %memberidx2.i.i.i103, align 8
  %.pre = load i64, ptr %memberidx.i.i99, align 4
  br label %TypeChecker_error.exit107

TypeChecker_error.exit107:                        ; preds = %else20.TypeChecker_error.exit107_crit_edge, %if.entry.i.i104
  %73 = phi ptr [ %.pre161, %else20.TypeChecker_error.exit107_crit_edge ], [ %72, %if.entry.i.i104 ]
  %74 = phi i64 [ %67, %else20.TypeChecker_error.exit107_crit_edge ], [ %.pre, %if.entry.i.i104 ]
  %75 = add nsw i64 %74, 1
  store i64 %75, ptr %memberidx.i.i99, align 4
  %ptridx.i.i106 = getelementptr inbounds ptr, ptr %73, i64 %74
  store ptr %66, ptr %ptridx.i.i106, align 8
  br label %common.ret

if.entry25:                                       ; preds = %if.entry19
  %76 = alloca ptr, align 8
  %77 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %76, ptr nonnull @182, i64 %54)
  %78 = load ptr, ptr %76, align 8
  %79 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %79, align 8
  %memberidx.i108 = getelementptr inbounds %string, ptr %79, i64 0, i32 1
  store ptr %78, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %string, ptr %79, i64 0, i32 2
  store i64 %77, ptr %memberidx1.i109, align 4
  %memberidx2.i110 = getelementptr inbounds %string, ptr %79, i64 0, i32 3
  store i64 %77, ptr %memberidx2.i110, align 4
  %80 = load ptr, ptr %1, align 8
  %81 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i112 = getelementptr inbounds %Compiler, ptr %81, i64 0, i32 6
  %82 = load ptr, ptr %memberidx1.i112, align 8
  %83 = call ptr @malloc(i32 24)
  store i64 4, ptr %83, align 4
  %memberidx1.i.i113 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 2
  store ptr %80, ptr %memberidx1.i.i113, align 8
  %memberidx2.i.i114 = getelementptr inbounds %FloError, ptr %83, i64 0, i32 1
  store ptr %79, ptr %memberidx2.i.i114, align 8
  %memberidx.i.i115 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 2
  %84 = load i64, ptr %memberidx.i.i115, align 4
  %memberidx1.i2.i116 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 3
  %85 = load i64, ptr %memberidx1.i2.i116, align 4
  %.not.i.i117 = icmp slt i64 %84, %85
  br i1 %.not.i.i117, label %if.entry25.TypeChecker_error.exit123_crit_edge, label %if.entry.i.i120

if.entry25.TypeChecker_error.exit123_crit_edge:   ; preds = %if.entry25
  %memberidx4.i.i121.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 1
  %.pre163 = load ptr, ptr %memberidx4.i.i121.phi.trans.insert, align 8
  br label %TypeChecker_error.exit123

if.entry.i.i120:                                  ; preds = %if.entry25
  %86 = shl nuw i64 %85, 1
  store i64 %86, ptr %memberidx1.i2.i116, align 4
  %memberidx2.i.i.i119 = getelementptr inbounds %Array_FloError_, ptr %82, i64 0, i32 1
  %87 = load ptr, ptr %memberidx2.i.i.i119, align 8
  %88 = shl i64 %85, 4
  %89 = call ptr @realloc(ptr %87, i64 %88)
  store ptr %89, ptr %memberidx2.i.i.i119, align 8
  %.pre162 = load i64, ptr %memberidx.i.i115, align 4
  br label %TypeChecker_error.exit123

TypeChecker_error.exit123:                        ; preds = %if.entry25.TypeChecker_error.exit123_crit_edge, %if.entry.i.i120
  %90 = phi ptr [ %.pre163, %if.entry25.TypeChecker_error.exit123_crit_edge ], [ %89, %if.entry.i.i120 ]
  %91 = phi i64 [ %84, %if.entry25.TypeChecker_error.exit123_crit_edge ], [ %.pre162, %if.entry.i.i120 ]
  %92 = add nsw i64 %91, 1
  store i64 %92, ptr %memberidx.i.i115, align 4
  %ptridx.i.i122 = getelementptr inbounds ptr, ptr %90, i64 %91
  store ptr %83, ptr %ptridx.i.i122, align 8
  br label %common.ret

ifend27:                                          ; preds = %if.entry19
  %93 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %93, align 4
  %memberidx.i124 = getelementptr inbounds %IntType, ptr %93, i64 0, i32 1
  store i1 false, ptr %memberidx.i124, align 1
  %94 = load ptr, ptr %memberidx23, align 8
  %memberidx.i125 = getelementptr inbounds %Array_ExpressionNode_, ptr %94, i64 0, i32 1
  %95 = load ptr, ptr %memberidx.i125, align 8
  %96 = load ptr, ptr %95, align 8
  %97 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %93, ptr %96)
  %98 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i127 = getelementptr inbounds %Compiler, ptr %98, i64 0, i32 6
  %99 = load ptr, ptr %memberidx1.i127, align 8
  %memberidx2.i128 = getelementptr inbounds %Array_FloError_, ptr %99, i64 0, i32 2
  %100 = load i64, ptr %memberidx2.i128, align 4
  %101 = icmp sgt i64 %100, 0
  br i1 %101, label %common.ret, label %ifend32

ifend32:                                          ; preds = %ifend27
  %memberidx33 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 3
  %102 = load ptr, ptr %memberidx33, align 8
  %103 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %93, ptr %102)
  br i1 %103, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %ifend32
  %104 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %93)
  %105 = load ptr, ptr %104, align 8
  %memberidx37 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %105, i64 0, i32 5
  %106 = load ptr, ptr %memberidx37, align 8
  %107 = tail call ptr %106(ptr nonnull %104)
  %108 = load ptr, ptr %memberidx33, align 8
  %109 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %108)
  %110 = load ptr, ptr %109, align 8
  %memberidx39 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx39, align 8
  %112 = tail call ptr %111(ptr nonnull %109)
  %113 = alloca ptr, align 8
  %114 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %113, ptr nonnull @183, ptr %107, ptr %112)
  %115 = load ptr, ptr %113, align 8
  %116 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %116, align 8
  %memberidx.i129 = getelementptr inbounds %string, ptr %116, i64 0, i32 1
  store ptr %115, ptr %memberidx.i129, align 8
  %memberidx1.i130 = getelementptr inbounds %string, ptr %116, i64 0, i32 2
  store i64 %114, ptr %memberidx1.i130, align 4
  %memberidx2.i131 = getelementptr inbounds %string, ptr %116, i64 0, i32 3
  store i64 %114, ptr %memberidx2.i131, align 4
  tail call void @free(ptr %107)
  tail call void @free(ptr %112)
  %117 = load ptr, ptr %memberidx23, align 8
  %memberidx.i132 = getelementptr inbounds %Array_ExpressionNode_, ptr %117, i64 0, i32 1
  %118 = load ptr, ptr %memberidx.i132, align 8
  %119 = load ptr, ptr %118, align 8
  %120 = load ptr, ptr %119, align 8
  %121 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i134 = getelementptr inbounds %Compiler, ptr %121, i64 0, i32 6
  %122 = load ptr, ptr %memberidx1.i134, align 8
  %123 = call ptr @malloc(i32 24)
  store i64 4, ptr %123, align 4
  %memberidx1.i.i135 = getelementptr inbounds %FloError, ptr %123, i64 0, i32 2
  store ptr %120, ptr %memberidx1.i.i135, align 8
  %memberidx2.i.i136 = getelementptr inbounds %FloError, ptr %123, i64 0, i32 1
  store ptr %116, ptr %memberidx2.i.i136, align 8
  %memberidx.i.i137 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 2
  %124 = load i64, ptr %memberidx.i.i137, align 4
  %memberidx1.i2.i138 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 3
  %125 = load i64, ptr %memberidx1.i2.i138, align 4
  %.not.i.i139 = icmp slt i64 %124, %125
  br i1 %.not.i.i139, label %if.entry34.TypeChecker_error.exit145_crit_edge, label %if.entry.i.i142

if.entry34.TypeChecker_error.exit145_crit_edge:   ; preds = %if.entry34
  %memberidx4.i.i143.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 1
  %.pre165 = load ptr, ptr %memberidx4.i.i143.phi.trans.insert, align 8
  br label %TypeChecker_error.exit145

if.entry.i.i142:                                  ; preds = %if.entry34
  %126 = shl nuw i64 %125, 1
  store i64 %126, ptr %memberidx1.i2.i138, align 4
  %memberidx2.i.i.i141 = getelementptr inbounds %Array_FloError_, ptr %122, i64 0, i32 1
  %127 = load ptr, ptr %memberidx2.i.i.i141, align 8
  %128 = shl i64 %125, 4
  %129 = call ptr @realloc(ptr %127, i64 %128)
  store ptr %129, ptr %memberidx2.i.i.i141, align 8
  %.pre164 = load i64, ptr %memberidx.i.i137, align 4
  br label %TypeChecker_error.exit145

TypeChecker_error.exit145:                        ; preds = %if.entry34.TypeChecker_error.exit145_crit_edge, %if.entry.i.i142
  %130 = phi ptr [ %.pre165, %if.entry34.TypeChecker_error.exit145_crit_edge ], [ %129, %if.entry.i.i142 ]
  %131 = phi i64 [ %124, %if.entry34.TypeChecker_error.exit145_crit_edge ], [ %.pre164, %if.entry.i.i142 ]
  %132 = add nsw i64 %131, 1
  store i64 %132, ptr %memberidx.i.i137, align 4
  %ptridx.i.i144 = getelementptr inbounds ptr, ptr %130, i64 %131
  store ptr %123, ptr %ptridx.i.i144, align 8
  tail call void @free(ptr nonnull %93)
  br label %common.ret

ifend36:                                          ; preds = %ifend32
  %133 = load i64, ptr %memberidx.i82, align 4
  %134 = load i64, ptr %memberidx1.i83, align 4
  %.not.i = icmp slt i64 %133, %134
  br i1 %.not.i, label %ifend36.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

ifend36.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend36
  %.pre167 = load ptr, ptr %memberidx2.i84, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %ifend36
  %135 = shl nuw i64 %134, 1
  store i64 %135, ptr %memberidx1.i83, align 4
  %136 = load ptr, ptr %memberidx2.i84, align 8
  %137 = shl i64 %134, 4
  %138 = tail call ptr @realloc(ptr %136, i64 %137)
  store ptr %138, ptr %memberidx2.i84, align 8
  %.pre166 = load i64, ptr %memberidx.i82, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend36.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %139 = phi ptr [ %.pre167, %ifend36.Array_Expression____sl__.exit_crit_edge ], [ %138, %if.entry.i ]
  %140 = phi i64 [ %133, %ifend36.Array_Expression____sl__.exit_crit_edge ], [ %.pre166, %if.entry.i ]
  %141 = add nsw i64 %140, 1
  store i64 %141, ptr %memberidx.i82, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %139, i64 %140
  store ptr %97, ptr %ptridx.i, align 8
  br label %ifend10
}

define internal fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %5, align 4
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %5, ptr %4)
  %memberidx.i.i50 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i.i50, align 8
  %memberidx1.i.i51 = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 6
  %8 = load ptr, ptr %memberidx1.i.i51, align 8
  %memberidx2.i.i52 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i.i52, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend.i

ifend.i:                                          ; preds = %3
  %memberidx.i53 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx.i53, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %ifend, label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i
  %14 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %14, align 4
  %15 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %15, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  %memberidx.i.i.i54 = getelementptr inbounds %TypeCastExpression, ptr %15, i64 0, i32 4
  store ptr %6, ptr %memberidx.i.i.i54, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %14, ptr %memberidx1.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %16 = load i1, ptr %memberidx3.i.i.i, align 1
  store i1 %16, ptr %memberidx1.i.i.i.i, align 1
  %.pre = load ptr, ptr %memberidx.i.i50, align 8
  %memberidx1.i.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre, i64 0, i32 6
  %.pre56 = load ptr, ptr %memberidx1.i.phi.trans.insert, align 8
  %memberidx2.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre56, i64 0, i32 2
  %.pre57 = load i64, ptr %memberidx2.i.phi.trans.insert, align 4
  %17 = icmp sgt i64 %.pre57, 0
  br i1 %17, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %ifend4, %ifend, %TypeChecker_check_condition.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %58, %ifend13 ], [ null, %TypeChecker_check_condition.exit ], [ null, %ifend ], [ null, %ifend4 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %ifend.i, %TypeChecker_check_condition.exit
  %common.ret.op.i63 = phi ptr [ %15, %TypeChecker_check_condition.exit ], [ %6, %ifend.i ]
  %memberidx1 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 4
  %18 = load ptr, ptr %memberidx1, align 8
  %19 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %1, ptr %18)
  %20 = load ptr, ptr %memberidx.i.i50, align 8
  %memberidx1.i35 = getelementptr inbounds %Compiler, ptr %20, i64 0, i32 6
  %21 = load ptr, ptr %memberidx1.i35, align 8
  %memberidx2.i36 = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i36, align 4
  %23 = icmp sgt i64 %22, 0
  br i1 %23, label %common.ret, label %ifend4

ifend4:                                           ; preds = %ifend
  %memberidx5 = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  %24 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 5
  %25 = load ptr, ptr %memberidx6, align 8
  %26 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %24, ptr %25)
  %27 = load ptr, ptr %memberidx.i.i50, align 8
  %memberidx1.i38 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i38, align 8
  %memberidx2.i39 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i39, align 4
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend4
  %memberidx10 = getelementptr inbounds %Expression, ptr %26, i64 0, i32 3
  %31 = load ptr, ptr %memberidx10, align 8
  %32 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %24, ptr %31)
  br i1 %32, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %33 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %24)
  %34 = load ptr, ptr %33, align 8
  %memberidx14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %34, i64 0, i32 5
  %35 = load ptr, ptr %memberidx14, align 8
  %36 = tail call ptr %35(ptr nonnull %33)
  %37 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %31)
  %38 = load ptr, ptr %37, align 8
  %memberidx15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %38, i64 0, i32 5
  %39 = load ptr, ptr %memberidx15, align 8
  %40 = tail call ptr %39(ptr nonnull %37)
  %41 = alloca ptr, align 8
  %42 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %41, ptr nonnull @197, ptr %36, ptr %40)
  %43 = load ptr, ptr %41, align 8
  %44 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %44, align 8
  %memberidx.i40 = getelementptr inbounds %string, ptr %44, i64 0, i32 1
  store ptr %43, ptr %memberidx.i40, align 8
  %memberidx1.i41 = getelementptr inbounds %string, ptr %44, i64 0, i32 2
  store i64 %42, ptr %memberidx1.i41, align 4
  %memberidx2.i42 = getelementptr inbounds %string, ptr %44, i64 0, i32 3
  store i64 %42, ptr %memberidx2.i42, align 4
  tail call void @free(ptr %36)
  tail call void @free(ptr %40)
  %45 = load ptr, ptr %2, align 8
  %46 = load ptr, ptr %memberidx.i.i50, align 8
  %memberidx1.i44 = getelementptr inbounds %Compiler, ptr %46, i64 0, i32 6
  %47 = load ptr, ptr %memberidx1.i44, align 8
  %48 = call ptr @malloc(i32 24)
  store i64 5, ptr %48, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %48, i64 0, i32 2
  store ptr %45, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %48, i64 0, i32 1
  store ptr %44, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %49 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 3
  %50 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %49, %50
  br i1 %.not.i.i, label %if.entry11.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry11.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry11
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %.pre59 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry11
  %51 = shl nuw i64 %50, 1
  store i64 %51, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i.i, align 8
  %53 = shl i64 %50, 4
  %54 = call ptr @realloc(ptr %52, i64 %53)
  store ptr %54, ptr %memberidx2.i.i.i, align 8
  %.pre58 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %55 = phi ptr [ %.pre59, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %54, %if.entry.i.i ]
  %56 = phi i64 [ %49, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %.pre58, %if.entry.i.i ]
  %57 = add nsw i64 %56, 1
  store i64 %57, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %55, i64 %56
  store ptr %48, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %58 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %58, align 4
  %memberidx.i.i45 = getelementptr inbounds %Expression, ptr %58, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i45, align 4
  %memberidx1.i.i46 = getelementptr inbounds %Expression, ptr %58, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i46, align 1
  %memberidx.i47 = getelementptr inbounds %TernaryExpression, ptr %58, i64 0, i32 4
  store ptr %common.ret.op.i63, ptr %memberidx.i47, align 8
  %memberidx1.i48 = getelementptr inbounds %TernaryExpression, ptr %58, i64 0, i32 5
  store ptr %19, ptr %memberidx1.i48, align 8
  %memberidx2.i49 = getelementptr inbounds %TernaryExpression, ptr %58, i64 0, i32 6
  store ptr %26, ptr %memberidx2.i49, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %58, i64 0, i32 3
  %59 = load ptr, ptr %memberidx5, align 8
  store ptr %59, ptr %memberidx3.i, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load i64, ptr %1, align 4
  switch i64 %3, label %ifend57 [
    i64 15, label %if.entry
    i64 13, label %if.entry12
    i64 11, label %if.entry18
    i64 12, label %if.entry24
    i64 14, label %if.entry31
    i64 19, label %if.entry38
    i64 17, label %if.entry51
    i64 16, label %if.entry55
  ]

if.entry:                                         ; preds = %2
  %4 = tail call ptr @malloc(i32 0)
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %5, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  store ptr %4, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  %memberidx = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1147 = getelementptr inbounds %Array_Type_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx1147, align 4
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %for.body, label %for.end

for.body:                                         ; preds = %if.entry, %ifend7
  %9 = phi ptr [ %46, %ifend7 ], [ %4, %if.entry ]
  %10 = phi i64 [ %47, %ifend7 ], [ 0, %if.entry ]
  %11 = phi ptr [ %45, %ifend7 ], [ %6, %if.entry ]
  %i.0148 = phi i64 [ %48, %ifend7 ], [ 0, %if.entry ]
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %11, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %12, i64 %i.0148
  %13 = load ptr, ptr %ptridx.i, align 8
  %14 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %13)
  %memberidx1.i = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  %15 = load i64, ptr %memberidx1.i, align 4
  %16 = add nuw i64 %15, %10
  %17 = tail call ptr @realloc(ptr %9, i64 %16)
  store ptr %17, ptr %memberidx.i.i, align 8
  %18 = load i64, ptr %memberidx1.i.i, align 4
  %19 = getelementptr inbounds i8, ptr %17, i64 %18
  %memberidx6.i = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  %20 = load ptr, ptr %memberidx6.i, align 8
  %21 = load i64, ptr %memberidx1.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %19, ptr align 8 %20, i64 %21, i1 false)
  store i64 %16, ptr %memberidx1.i.i, align 4
  %22 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Array_Type_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx4, align 4
  %24 = add i64 %23, -1
  %25 = icmp slt i64 %i.0148, %24
  br i1 %25, label %if.entry5, label %ifend7

common.ret:                                       ; preds = %ifend57, %if.entry55, %if.entry51, %for.end46, %if.entry31, %if.entry24, %if.entry18, %if.entry12, %for.end
  %common.ret.op = phi ptr [ %37, %for.end ], [ %58, %if.entry12 ], [ %69, %if.entry18 ], [ %80, %if.entry24 ], [ %90, %if.entry31 ], [ %131, %for.end46 ], [ %133, %if.entry51 ], [ %135, %if.entry55 ], [ %136, %ifend57 ]
  ret ptr %common.ret.op

for.end.loopexit:                                 ; preds = %ifend7
  %.pre153 = load ptr, ptr %5, align 8
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.entry
  %26 = phi ptr [ %.pre153, %for.end.loopexit ], [ @VTablestring, %if.entry ]
  %memberidx8 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %26, i64 0, i32 5
  %27 = load ptr, ptr %memberidx8, align 8
  %28 = tail call ptr %27(ptr nonnull %5)
  %memberidx9 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 2
  %29 = load ptr, ptr %memberidx9, align 8
  %30 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %29)
  %31 = load ptr, ptr %30, align 8
  %memberidx10 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %31, i64 0, i32 5
  %32 = load ptr, ptr %memberidx10, align 8
  %33 = tail call ptr %32(ptr nonnull %30)
  %34 = alloca ptr, align 8
  %35 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %34, ptr nonnull @72, ptr %28, ptr %33)
  %36 = load ptr, ptr %34, align 8
  %37 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %37, align 8
  %memberidx.i96 = getelementptr inbounds %string, ptr %37, i64 0, i32 1
  store ptr %36, ptr %memberidx.i96, align 8
  %memberidx1.i97 = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  store i64 %35, ptr %memberidx1.i97, align 4
  %memberidx2.i98 = getelementptr inbounds %string, ptr %37, i64 0, i32 3
  store i64 %35, ptr %memberidx2.i98, align 4
  tail call void @free(ptr %28)
  tail call void @free(ptr %33)
  br label %common.ret

if.entry5:                                        ; preds = %for.body
  %38 = tail call ptr @malloc(i32 2)
  store i16 8236, ptr %38, align 8
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i99 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i99, align 8
  %memberidx1.i.i100 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 2, ptr %memberidx1.i.i100, align 4
  %memberidx2.i.i101 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 2, ptr %memberidx2.i.i101, align 4
  %40 = add nuw i64 %16, 2
  %41 = tail call ptr @realloc(ptr %17, i64 %40)
  store ptr %41, ptr %memberidx.i.i, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %16
  %43 = load i16, ptr %38, align 8
  store i16 %43, ptr %42, align 1073741824
  store i64 %40, ptr %memberidx1.i.i, align 4
  %.pre = load ptr, ptr %memberidx, align 8
  %memberidx1.phi.trans.insert = getelementptr inbounds %Array_Type_, ptr %.pre, i64 0, i32 2
  %.pre152 = load i64, ptr %memberidx1.phi.trans.insert, align 4
  br label %ifend7

ifend7:                                           ; preds = %for.body, %if.entry5
  %44 = phi i64 [ %23, %for.body ], [ %.pre152, %if.entry5 ]
  %45 = phi ptr [ %22, %for.body ], [ %.pre, %if.entry5 ]
  %46 = phi ptr [ %17, %for.body ], [ %41, %if.entry5 ]
  %47 = phi i64 [ %16, %for.body ], [ %40, %if.entry5 ]
  %48 = add nuw nsw i64 %i.0148, 1
  %49 = icmp slt i64 %48, %44
  br i1 %49, label %for.body, label %for.end.loopexit

if.entry12:                                       ; preds = %2
  %memberidx15 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %50 = load ptr, ptr %memberidx15, align 8
  %51 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %50)
  %52 = load ptr, ptr %51, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %52, i64 0, i32 5
  %53 = load ptr, ptr %memberidx16, align 8
  %54 = tail call ptr %53(ptr nonnull %51)
  %55 = alloca ptr, align 8
  %56 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %55, ptr nonnull @73, ptr %54)
  %57 = load ptr, ptr %55, align 8
  %58 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i109 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i109, align 8
  %memberidx1.i110 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i110, align 4
  %memberidx2.i111 = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 %56, ptr %memberidx2.i111, align 4
  tail call void @free(ptr %54)
  br label %common.ret

if.entry18:                                       ; preds = %2
  %59 = load ptr, ptr %0, align 8
  %memberidx6.i144 = getelementptr inbounds %ObjectType, ptr %1, i64 0, i32 1
  %60 = load ptr, ptr %memberidx6.i144, align 8
  %memberidx.i.i145 = getelementptr inbounds %Program, ptr %59, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i.i145, align 8
  %62 = load i64, ptr %60, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %61, i64 0, i32 1
  %63 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %63, i64 %62
  %64 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i146 = getelementptr inbounds %Module, ptr %64, i64 0, i32 3
  %65 = load ptr, ptr %memberidx2.i.i146, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %60, i64 0, i32 2
  %66 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %65, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %67, i64 %66
  %68 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx22 = getelementptr inbounds %Class, ptr %68, i64 0, i32 1
  %69 = load ptr, ptr %memberidx22, align 8
  br label %common.ret

if.entry24:                                       ; preds = %2
  %70 = load ptr, ptr %0, align 8
  %memberidx28 = getelementptr inbounds %EnumType, ptr %1, i64 0, i32 1
  %71 = load ptr, ptr %memberidx28, align 8
  %memberidx.i112 = getelementptr inbounds %Program, ptr %70, i64 0, i32 1
  %72 = load ptr, ptr %memberidx.i112, align 8
  %73 = load i64, ptr %71, align 4
  %memberidx.i.i113 = getelementptr inbounds %Array_Module_, ptr %72, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i.i113, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %74, i64 %73
  %75 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i114 = getelementptr inbounds %Module, ptr %75, i64 0, i32 6
  %76 = load ptr, ptr %memberidx2.i114, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %71, i64 0, i32 2
  %77 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Enum_, ptr %76, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %78, i64 %77
  %79 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx29 = getelementptr inbounds %Enum, ptr %79, i64 0, i32 1
  %80 = load ptr, ptr %memberidx29, align 8
  br label %common.ret

if.entry31:                                       ; preds = %2
  %memberidx34 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %81 = load ptr, ptr %memberidx34, align 8
  %82 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %81)
  %83 = load ptr, ptr %82, align 8
  %memberidx35 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %83, i64 0, i32 5
  %84 = load ptr, ptr %memberidx35, align 8
  %85 = tail call ptr %84(ptr nonnull %82)
  %memberidx36 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %86 = load i64, ptr %memberidx36, align 4
  %87 = alloca ptr, align 8
  %88 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %87, ptr nonnull @74, ptr %85, i64 %86)
  %89 = load ptr, ptr %87, align 8
  %90 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %90, align 8
  %memberidx.i121 = getelementptr inbounds %string, ptr %90, i64 0, i32 1
  store ptr %89, ptr %memberidx.i121, align 8
  %memberidx1.i122 = getelementptr inbounds %string, ptr %90, i64 0, i32 2
  store i64 %88, ptr %memberidx1.i122, align 4
  %memberidx2.i123 = getelementptr inbounds %string, ptr %90, i64 0, i32 3
  store i64 %88, ptr %memberidx2.i123, align 4
  tail call void @free(ptr %85)
  br label %common.ret

if.entry38:                                       ; preds = %2
  %memberidx41 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %91 = load ptr, ptr %memberidx41, align 8
  %92 = tail call ptr @malloc(i32 1)
  store i8 60, ptr %92, align 8
  %93 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %93, align 8
  %memberidx.i.i124 = getelementptr inbounds %string, ptr %93, i64 0, i32 1
  store ptr %92, ptr %memberidx.i.i124, align 8
  %memberidx1.i.i125 = getelementptr inbounds %string, ptr %93, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i125, align 4
  %memberidx2.i.i126 = getelementptr inbounds %string, ptr %93, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i126, align 4
  %memberidx.i127 = getelementptr inbounds %string, ptr %91, i64 0, i32 2
  %94 = load i64, ptr %memberidx.i127, align 4
  %95 = add nuw i64 %94, 1
  %96 = trunc i64 %95 to i32
  %97 = tail call ptr @malloc(i32 %96)
  %memberidx2.i129 = getelementptr inbounds %string, ptr %91, i64 0, i32 1
  %98 = load ptr, ptr %memberidx2.i129, align 8
  %99 = load i64, ptr %memberidx.i127, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %97, ptr align 8 %98, i64 %99, i1 false)
  %100 = getelementptr inbounds i8, ptr %97, i64 %99
  %101 = load i8, ptr %92, align 8
  store i8 %101, ptr %100, align 8
  %102 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %102, align 8
  %memberidx.i.i131 = getelementptr inbounds %string, ptr %102, i64 0, i32 1
  store ptr %97, ptr %memberidx.i.i131, align 8
  %memberidx1.i.i132 = getelementptr inbounds %string, ptr %102, i64 0, i32 2
  store i64 %95, ptr %memberidx1.i.i132, align 4
  %memberidx2.i.i133 = getelementptr inbounds %string, ptr %102, i64 0, i32 3
  store i64 %95, ptr %memberidx2.i.i133, align 4
  %memberidx47 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %103 = load ptr, ptr %memberidx47, align 8
  %memberidx48150 = getelementptr inbounds %Array_Type_, ptr %103, i64 0, i32 2
  %104 = load i64, ptr %memberidx48150, align 4
  %105 = icmp sgt i64 %104, 0
  br i1 %105, label %for.body44, label %for.end46

for.body44:                                       ; preds = %if.entry38, %for.body44
  %106 = phi ptr [ %114, %for.body44 ], [ %97, %if.entry38 ]
  %107 = phi i64 [ %113, %for.body44 ], [ %95, %if.entry38 ]
  %108 = phi ptr [ %119, %for.body44 ], [ %103, %if.entry38 ]
  %x.0151 = phi i64 [ %118, %for.body44 ], [ 0, %if.entry38 ]
  %memberidx.i134 = getelementptr inbounds %Array_Type_, ptr %108, i64 0, i32 1
  %109 = load ptr, ptr %memberidx.i134, align 8
  %ptridx.i135 = getelementptr inbounds ptr, ptr %109, i64 %x.0151
  %110 = load ptr, ptr %ptridx.i135, align 8
  %111 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %110)
  %memberidx1.i140 = getelementptr inbounds %string, ptr %111, i64 0, i32 2
  %112 = load i64, ptr %memberidx1.i140, align 4
  %113 = add nuw i64 %112, %107
  %114 = tail call ptr @realloc(ptr %106, i64 %113)
  store ptr %114, ptr %memberidx.i.i131, align 8
  %115 = getelementptr inbounds i8, ptr %114, i64 %107
  %memberidx6.i142 = getelementptr inbounds %string, ptr %111, i64 0, i32 1
  %116 = load ptr, ptr %memberidx6.i142, align 8
  %117 = load i64, ptr %memberidx1.i140, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %115, ptr align 8 %116, i64 %117, i1 false)
  store i64 %113, ptr %memberidx1.i.i132, align 4
  %118 = add nuw nsw i64 %x.0151, 1
  %119 = load ptr, ptr %memberidx47, align 8
  %memberidx48 = getelementptr inbounds %Array_Type_, ptr %119, i64 0, i32 2
  %120 = load i64, ptr %memberidx48, align 4
  %121 = icmp slt i64 %118, %120
  br i1 %121, label %for.body44, label %for.end46

for.end46:                                        ; preds = %for.body44, %if.entry38
  %122 = phi ptr [ %97, %if.entry38 ], [ %114, %for.body44 ]
  %123 = phi i64 [ %95, %if.entry38 ], [ %113, %for.body44 ]
  %124 = tail call ptr @malloc(i32 1)
  store i8 62, ptr %124, align 8
  %125 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %125, align 8
  %memberidx.i.i136 = getelementptr inbounds %string, ptr %125, i64 0, i32 1
  store ptr %124, ptr %memberidx.i.i136, align 8
  %memberidx1.i.i137 = getelementptr inbounds %string, ptr %125, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i137, align 4
  %memberidx2.i.i138 = getelementptr inbounds %string, ptr %125, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i138, align 4
  %126 = add nuw i64 %123, 1
  %127 = trunc i64 %126 to i32
  %128 = tail call ptr @malloc(i32 %127)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %128, ptr align 8 %122, i64 %123, i1 false)
  %129 = getelementptr inbounds i8, ptr %128, i64 %123
  %130 = load i8, ptr %124, align 8
  store i8 %130, ptr %129, align 8
  %131 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %131, align 8
  %memberidx.i.i118 = getelementptr inbounds %string, ptr %131, i64 0, i32 1
  store ptr %128, ptr %memberidx.i.i118, align 8
  %memberidx1.i.i119 = getelementptr inbounds %string, ptr %131, i64 0, i32 2
  store i64 %126, ptr %memberidx1.i.i119, align 4
  %memberidx2.i.i120 = getelementptr inbounds %string, ptr %131, i64 0, i32 3
  store i64 %126, ptr %memberidx2.i.i120, align 4
  br label %common.ret

if.entry51:                                       ; preds = %2
  %132 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %132, ptr noundef nonnull align 8 dereferenceable(9) @75, i64 9, i1 false)
  %133 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %133, align 8
  %memberidx.i.i106 = getelementptr inbounds %string, ptr %133, i64 0, i32 1
  store ptr %132, ptr %memberidx.i.i106, align 8
  %memberidx1.i.i107 = getelementptr inbounds %string, ptr %133, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i107, align 4
  %memberidx2.i.i108 = getelementptr inbounds %string, ptr %133, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i108, align 4
  br label %common.ret

if.entry55:                                       ; preds = %2
  %134 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %134, ptr noundef nonnull align 8 dereferenceable(6) @76, i64 6, i1 false)
  %135 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %135, align 8
  %memberidx.i.i93 = getelementptr inbounds %string, ptr %135, i64 0, i32 1
  store ptr %134, ptr %memberidx.i.i93, align 8
  %memberidx1.i.i94 = getelementptr inbounds %string, ptr %135, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i94, align 4
  %memberidx2.i.i95 = getelementptr inbounds %string, ptr %135, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i95, align 4
  br label %common.ret

ifend57:                                          ; preds = %2
  %136 = tail call fastcc ptr @dump_type(ptr nonnull %1, i1 false)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_string_Generic_, ptr %4, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = urem i64 %5, %6
  %8 = load ptr, ptr %4, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %8, i64 %7
  %9 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %9, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %3
  %memberidx1.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %10 = phi ptr [ %20, %else.i ], [ %8, %while.entry.i.preheader ]
  %11 = phi i64 [ %21, %else.i ], [ %6, %while.entry.i.preheader ]
  %12 = phi ptr [ %24, %else.i ], [ %9, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %23, %else.i ], [ %7, %while.entry.i.preheader ]
  %13 = load ptr, ptr %12, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  %14 = load i64, ptr %memberidx.i.i, align 4
  %15 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %14, %15
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  %16 = load ptr, ptr %memberidx2.i.i, align 8
  %17 = load ptr, ptr %memberidx3.i.i, align 8
  %18 = tail call i64 @memcmp(ptr %16, ptr %17, i64 %14)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre141 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre142.pre = load ptr, ptr %4, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre142.pre, i64 %hash.0.i
  %.pre143.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre143.pre, null
  br i1 %.not29.i, label %common.ret, label %Map_string_Generic____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %20 = phi ptr [ %.pre141, %ifend.i.i.else.i_crit_edge ], [ %10, %while.entry.i ]
  %21 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %11, %while.entry.i ]
  %22 = add nuw i64 %hash.0.i, 1
  %23 = urem i64 %22, %21
  %ptridx7.i = getelementptr inbounds ptr, ptr %20, i64 %23
  %24 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %24, null
  br i1 %.not30.i, label %common.ret, label %while.entry.i

Map_string_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_Generic_, ptr %.pre143.pre, i64 0, i32 1
  %25 = load ptr, ptr %memberidx15.i, align 8
  %26 = icmp eq ptr %25, null
  br i1 %26, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %3, %while.end.i, %Map_string_Generic____getitem__.exit, %ifend23, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %141, %ifend23 ], [ null, %Map_string_Generic____getitem__.exit ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_string_Generic____getitem__.exit
  %memberidx1 = getelementptr inbounds %Generic, ptr %25, i64 0, i32 1
  %27 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ClassDeclarationNode, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_GenericParameterNode_, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx3, align 4
  %memberidx4 = getelementptr inbounds %Array_Type_, ptr %2, i64 0, i32 2
  %30 = load i64, ptr %memberidx4, align 4
  %.not = icmp eq i64 %29, %30
  br i1 %.not, label %ifend7, label %if.entry5

if.entry5:                                        ; preds = %ifend
  %31 = alloca ptr, align 8
  %32 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %31, ptr nonnull @92, i64 %29, i64 %30)
  %33 = load ptr, ptr %31, align 8
  %34 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i82 = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i82, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 %32, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 %32, ptr %memberidx2.i, align 4
  %memberidx.i83 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %35 = load ptr, ptr %memberidx.i83, align 8
  %memberidx1.i84 = getelementptr inbounds %Compiler, ptr %35, i64 0, i32 6
  %36 = load ptr, ptr %memberidx1.i84, align 8
  %37 = call ptr @malloc(i32 24)
  store i64 5, ptr %37, align 4
  %memberidx1.i.i85 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 2
  store ptr null, ptr %memberidx1.i.i85, align 8
  %memberidx2.i.i86 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 1
  store ptr %34, ptr %memberidx2.i.i86, align 8
  %memberidx.i.i87 = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 2
  %38 = load i64, ptr %memberidx.i.i87, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 3
  %39 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i88 = icmp slt i64 %38, %39
  br i1 %.not.i.i88, label %if.entry5.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry5.TypeChecker_error.exit_crit_edge:       ; preds = %if.entry5
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 1
  %.pre145 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry5
  %40 = shl nuw i64 %39, 1
  store i64 %40, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2.i.i.i, align 8
  %42 = shl i64 %39, 4
  %43 = call ptr @realloc(ptr %41, i64 %42)
  store ptr %43, ptr %memberidx2.i.i.i, align 8
  %.pre144 = load i64, ptr %memberidx.i.i87, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry5.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %44 = phi ptr [ %.pre145, %if.entry5.TypeChecker_error.exit_crit_edge ], [ %43, %if.entry.i.i ]
  %45 = phi i64 [ %38, %if.entry5.TypeChecker_error.exit_crit_edge ], [ %.pre144, %if.entry.i.i ]
  %46 = add nsw i64 %45, 1
  store i64 %46, ptr %memberidx.i.i87, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %37, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend7:                                           ; preds = %ifend
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %47 = load ptr, ptr %memberidx10, align 8
  %48 = load ptr, ptr %0, align 8
  %memberidx1.i.i90 = getelementptr inbounds %Program, ptr %48, i64 0, i32 1
  %49 = load ptr, ptr %memberidx1.i.i90, align 8
  %memberidx.i.i.i91 = getelementptr inbounds %Array_Module_, ptr %49, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i.i.i91, align 8
  %51 = load ptr, ptr %50, align 8
  %memberidx1.i92 = getelementptr inbounds %Module, ptr %51, i64 0, i32 5
  %52 = load ptr, ptr %memberidx1.i92, align 8
  store ptr %52, ptr %memberidx10, align 8
  %53 = load i64, ptr %52, align 4
  %54 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0, i64 %53)
  %memberidx2.i94 = getelementptr inbounds %Scope, ptr %54, i64 0, i32 5
  %55 = load ptr, ptr %memberidx10, align 8
  store ptr %55, ptr %memberidx2.i94, align 8
  %56 = load ptr, ptr %0, align 8
  %57 = load ptr, ptr %memberidx10, align 8
  %memberidx.i.i.i96 = getelementptr inbounds %Program, ptr %56, i64 0, i32 1
  %58 = load ptr, ptr %memberidx.i.i.i96, align 8
  %59 = load i64, ptr %57, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %58, i64 0, i32 1
  %60 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %60, i64 %59
  %61 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i97 = getelementptr inbounds %Module, ptr %61, i64 0, i32 7
  %62 = load ptr, ptr %memberidx2.i.i.i97, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %57, i64 0, i32 1
  %63 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %64, i64 %63
  %65 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %65, i64 0, i32 7
  %66 = load ptr, ptr %memberidx4.i, align 8
  %67 = load ptr, ptr %54, align 8
  %memberidx.i.i98 = getelementptr inbounds %Array_ScopeId_, ptr %66, i64 0, i32 2
  %68 = load i64, ptr %memberidx.i.i98, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %66, i64 0, i32 3
  %69 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i99 = icmp slt i64 %68, %69
  br i1 %.not.i.i99, label %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i100

ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %ifend7
  %memberidx4.i.i101.phi.trans.insert = getelementptr inbounds %Array_ScopeId_, ptr %66, i64 0, i32 1
  %.pre147 = load ptr, ptr %memberidx4.i.i101.phi.trans.insert, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i100:                                  ; preds = %ifend7
  %70 = shl nuw i64 %69, 1
  store i64 %70, ptr %memberidx1.i11.i, align 4
  %memberidx2.i.i13.i = getelementptr inbounds %Array_ScopeId_, ptr %66, i64 0, i32 1
  %71 = load ptr, ptr %memberidx2.i.i13.i, align 8
  %72 = shl i64 %69, 4
  %73 = tail call ptr @realloc(ptr %71, i64 %72)
  store ptr %73, ptr %memberidx2.i.i13.i, align 8
  %.pre146 = load i64, ptr %memberidx.i.i98, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i100
  %74 = phi ptr [ %.pre147, %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %73, %if.entry.i.i100 ]
  %75 = phi i64 [ %68, %ifend7.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre146, %if.entry.i.i100 ]
  %76 = add nsw i64 %75, 1
  store i64 %76, ptr %memberidx.i.i98, align 4
  %ptridx.i.i102 = getelementptr inbounds ptr, ptr %74, i64 %75
  store ptr %67, ptr %ptridx.i.i102, align 8
  %77 = tail call ptr @malloc(i32 0)
  %78 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %78, align 8
  %memberidx.i.i103 = getelementptr inbounds %string, ptr %78, i64 0, i32 1
  store ptr %77, ptr %memberidx.i.i103, align 8
  %memberidx1.i.i104 = getelementptr inbounds %string, ptr %78, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i104, i8 0, i64 16, i1 false)
  %79 = load i64, ptr %memberidx3, align 4
  %80 = icmp sgt i64 %79, 0
  br i1 %80, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %memberidx.i106 = getelementptr inbounds %Array_GenericParameterNode_, ptr %28, i64 0, i32 1
  %memberidx.i108 = getelementptr inbounds %Array_Type_, ptr %2, i64 0, i32 1
  %memberidx17 = getelementptr inbounds %Scope, ptr %54, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %i.0140 = phi i64 [ 0, %for.body.lr.ph ], [ %106, %for.body ]
  %81 = load ptr, ptr %memberidx.i106, align 8
  %ptridx.i107 = getelementptr inbounds ptr, ptr %81, i64 %i.0140
  %82 = load ptr, ptr %ptridx.i107, align 8
  %83 = load ptr, ptr %82, align 8
  %memberidx13 = getelementptr inbounds %IdentifierToken, ptr %83, i64 0, i32 2
  %84 = load ptr, ptr %memberidx13, align 8
  %85 = load ptr, ptr %memberidx.i108, align 8
  %ptridx.i109 = getelementptr inbounds ptr, ptr %85, i64 %i.0140
  %86 = load ptr, ptr %ptridx.i109, align 8
  %87 = load i64, ptr %86, align 4
  %88 = icmp eq i64 %87, 19
  %memberidx15 = getelementptr inbounds %GenericType, ptr %86, i64 0, i32 3
  %spec.select = select i1 %88, ptr %memberidx15, ptr %ptridx.i109
  %ternary = load ptr, ptr %spec.select, align 8
  %89 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %ternary)
  %90 = load ptr, ptr %89, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %90, i64 0, i32 5
  %91 = load ptr, ptr %memberidx16, align 8
  %92 = call ptr %91(ptr nonnull %89)
  %93 = alloca ptr, align 8
  %94 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %93, ptr nonnull @93, ptr %92)
  %95 = load ptr, ptr %93, align 8
  %96 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %96, align 8
  %memberidx.i117 = getelementptr inbounds %string, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i117, align 8
  %memberidx1.i118 = getelementptr inbounds %string, ptr %96, i64 0, i32 2
  store i64 %94, ptr %memberidx1.i118, align 4
  %memberidx2.i119 = getelementptr inbounds %string, ptr %96, i64 0, i32 3
  store i64 %94, ptr %memberidx2.i119, align 4
  tail call void @free(ptr %92)
  %97 = load i64, ptr %memberidx1.i.i104, align 4
  %98 = add nuw i64 %97, %94
  %99 = load ptr, ptr %memberidx.i.i103, align 8
  %100 = call ptr @realloc(ptr %99, i64 %98)
  store ptr %100, ptr %memberidx.i.i103, align 8
  %101 = load i64, ptr %memberidx1.i.i104, align 4
  %102 = getelementptr inbounds i8, ptr %100, i64 %101
  call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %102, ptr align 8 %95, i64 %94, i1 false)
  store i64 %98, ptr %memberidx1.i.i104, align 4
  %103 = load ptr, ptr %memberidx17, align 8
  %104 = load ptr, ptr %memberidx.i108, align 8
  %ptridx.i124 = getelementptr inbounds ptr, ptr %104, i64 %i.0140
  %105 = load ptr, ptr %ptridx.i124, align 8
  call fastcc void @Map_string_Type____setitem__(ptr %103, ptr %84, ptr %105)
  %106 = add nuw nsw i64 %i.0140, 1
  %107 = load i64, ptr %memberidx3, align 4
  %108 = icmp slt i64 %106, %107
  br i1 %108, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %TypeChecker_create_child_scope_within_current_scope.exit
  %109 = load ptr, ptr %1, align 8
  %memberidx18 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %109, i64 0, i32 5
  %110 = load ptr, ptr %memberidx18, align 8
  %111 = call ptr %110(ptr nonnull %1)
  %112 = load ptr, ptr %78, align 8
  %memberidx19 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %112, i64 0, i32 5
  %113 = load ptr, ptr %memberidx19, align 8
  %114 = call ptr %113(ptr nonnull %78)
  %115 = alloca ptr, align 8
  %116 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %115, ptr nonnull @94, ptr %111, ptr %114)
  %117 = load ptr, ptr %115, align 8
  %118 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %118, align 8
  %memberidx.i110 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  store ptr %117, ptr %memberidx.i110, align 8
  %memberidx1.i111 = getelementptr inbounds %string, ptr %118, i64 0, i32 2
  store i64 %116, ptr %memberidx1.i111, align 4
  %memberidx2.i112 = getelementptr inbounds %string, ptr %118, i64 0, i32 3
  store i64 %116, ptr %memberidx2.i112, align 4
  tail call void @free(ptr %111)
  tail call void @free(ptr %114)
  %119 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %118)
  %120 = load i64, ptr %119, align 4
  %121 = icmp eq i64 %120, 20
  br i1 %121, label %if.entry21, label %ifend23

if.entry21:                                       ; preds = %for.end
  %122 = alloca %IdentifierToken, align 8
  %123 = load ptr, ptr %memberidx1, align 8
  %124 = load ptr, ptr %123, align 8
  %memberidx26 = getelementptr inbounds %Token, ptr %124, i64 0, i32 1
  %125 = load ptr, ptr %memberidx26, align 8
  store i64 54, ptr %122, align 8
  %memberidx1.i.i125 = getelementptr inbounds %Token, ptr %122, i64 0, i32 1
  store ptr %125, ptr %memberidx1.i.i125, align 8
  %memberidx.i126 = getelementptr inbounds %IdentifierToken, ptr %122, i64 0, i32 2
  store ptr %118, ptr %memberidx.i126, align 8
  %126 = alloca %ClassDeclarationNode, align 8
  store ptr %122, ptr %126, align 8
  %memberidx1.i127 = getelementptr inbounds %ClassDeclarationNode, ptr %126, i64 0, i32 3
  %127 = call ptr @malloc(i32 32)
  store ptr @VTableArray_FieldNode_, ptr %127, align 8
  %memberidx.i.i128 = getelementptr inbounds %Array_FieldNode_, ptr %127, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i128, align 4
  %memberidx1.i.i129 = getelementptr inbounds %Array_FieldNode_, ptr %127, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i129, align 4
  %memberidx2.i.i130 = getelementptr inbounds %Array_FieldNode_, ptr %127, i64 0, i32 1
  %128 = call ptr @malloc(i32 64)
  store ptr %128, ptr %memberidx2.i.i130, align 8
  store i64 0, ptr %memberidx.i.i128, align 4
  %memberidx4.i131 = getelementptr inbounds %ClassDeclarationNode, ptr %126, i64 0, i32 4
  %129 = call ptr @malloc(i32 32)
  store ptr @VTableArray_MethodNode_, ptr %129, align 8
  %memberidx.i15.i = getelementptr inbounds %Array_MethodNode_, ptr %129, i64 0, i32 2
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx1.i16.i = getelementptr inbounds %Array_MethodNode_, ptr %129, i64 0, i32 3
  store i64 8, ptr %memberidx1.i16.i, align 4
  %memberidx2.i17.i = getelementptr inbounds %Array_MethodNode_, ptr %129, i64 0, i32 1
  %130 = call ptr @malloc(i32 64)
  store ptr %130, ptr %memberidx2.i17.i, align 8
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx7.i = getelementptr inbounds %ClassDeclarationNode, ptr %126, i64 0, i32 1
  %131 = call ptr @malloc(i32 32)
  store ptr @VTableArray_GenericParameterNode_, ptr %131, align 8
  %memberidx.i18.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %131, i64 0, i32 2
  store i64 0, ptr %memberidx.i18.i, align 4
  %memberidx1.i19.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %131, i64 0, i32 3
  store i64 8, ptr %memberidx1.i19.i, align 4
  %memberidx2.i20.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %131, i64 0, i32 1
  %132 = call ptr @malloc(i32 64)
  store ptr %132, ptr %memberidx2.i20.i, align 8
  store i64 0, ptr %memberidx.i18.i, align 4
  store ptr %131, ptr %memberidx7.i, align 8
  %memberidx10.i = getelementptr inbounds %ClassDeclarationNode, ptr %126, i64 0, i32 2
  %133 = load ptr, ptr %memberidx1, align 8
  %memberidx29 = getelementptr inbounds %ClassDeclarationNode, ptr %133, i64 0, i32 2
  %134 = load ptr, ptr %memberidx29, align 8
  store ptr %134, ptr %memberidx10.i, align 8
  %135 = load ptr, ptr %memberidx1, align 8
  %memberidx32 = getelementptr inbounds %ClassDeclarationNode, ptr %135, i64 0, i32 3
  %136 = load ptr, ptr %memberidx32, align 8
  store ptr %136, ptr %memberidx1.i127, align 8
  %137 = load ptr, ptr %memberidx1, align 8
  %memberidx35 = getelementptr inbounds %ClassDeclarationNode, ptr %137, i64 0, i32 4
  %138 = load ptr, ptr %memberidx35, align 8
  store ptr %138, ptr %memberidx4.i131, align 8
  %139 = load ptr, ptr %54, align 8
  store ptr %139, ptr %memberidx10, align 8
  call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr nonnull %126)
  call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr nonnull %126)
  %140 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %118)
  br label %ifend23

ifend23:                                          ; preds = %for.end, %if.entry21
  %possible_type.0 = phi ptr [ %140, %if.entry21 ], [ %119, %for.end ]
  store ptr %47, ptr %memberidx10, align 8
  call fastcc void @Scope___del__(ptr nonnull %54)
  tail call void @free(ptr nonnull %54)
  %141 = tail call ptr @malloc(i32 32)
  store i64 19, ptr %141, align 4
  %memberidx.i133 = getelementptr inbounds %GenericType, ptr %141, i64 0, i32 1
  store ptr %1, ptr %memberidx.i133, align 8
  %memberidx1.i134 = getelementptr inbounds %GenericType, ptr %141, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i134, align 8
  %memberidx2.i135 = getelementptr inbounds %GenericType, ptr %141, i64 0, i32 3
  store ptr %possible_type.0, ptr %memberidx2.i135, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_enum_within_module(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 32)
  %memberidx.i = getelementptr inbounds %Enum, ptr %3, i64 0, i32 2
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_EnumField_, ptr %4, align 8
  %memberidx.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %4, ptr %memberidx.i, align 8
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 2048)
  store ptr %7, ptr %6, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i64 = phi i64 [ 0, %2 ], [ %9, %for.body.i.i ]
  %8 = load ptr, ptr %6, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %8, i64 %i.0.i.i64
  store ptr null, ptr %ptridx.i.i, align 8
  %9 = add nuw nsw i64 %i.0.i.i64, 1
  %10 = icmp ult i64 %i.0.i.i64, 255
  br i1 %10, label %for.body.i.i, label %Enum_constructor.exit

Enum_constructor.exit:                            ; preds = %for.body.i.i
  %memberidx3.i = getelementptr inbounds %Enum, ptr %3, i64 0, i32 3
  %memberidx2.i5.i = getelementptr inbounds %Map_string_PropId_, ptr %6, i64 0, i32 1
  store i64 256, ptr %memberidx2.i5.i, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_string_PropId_, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %6, ptr %memberidx3.i, align 8
  %11 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx1, align 8
  %13 = load ptr, ptr %0, align 8
  %memberidx.i.i34 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %14 = load ptr, ptr %memberidx.i.i34, align 8
  %15 = load i64, ptr %14, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Program, ptr %13, i64 0, i32 1
  %16 = load ptr, ptr %memberidx1.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %16, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %17, i64 %15
  %18 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx1.i = getelementptr inbounds %Module, ptr %18, i64 0, i32 5
  %19 = load ptr, ptr %memberidx1.i, align 8
  %20 = load i64, ptr %19, align 4
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %17, i64 %20
  %21 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i35 = getelementptr inbounds %Module, ptr %21, i64 0, i32 7
  %22 = load ptr, ptr %memberidx2.i.i35, align 8
  %memberidx3.i.i36 = getelementptr inbounds %ScopeId, ptr %19, i64 0, i32 1
  %23 = load i64, ptr %memberidx3.i.i36, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %24, i64 %23
  %25 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx2 = getelementptr inbounds %Enum, ptr %3, i64 0, i32 1
  store ptr %12, ptr %memberidx2, align 8
  %26 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %12)
  %27 = load i64, ptr %26, align 4
  %.not = icmp eq i64 %27, 20
  br i1 %.not, label %ifend, label %if.entry

common.ret:                                       ; preds = %Array_Enum____sl__.exit, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %Enum_constructor.exit
  %28 = load ptr, ptr %12, align 8
  %memberidx4 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %28, i64 0, i32 5
  %29 = load ptr, ptr %memberidx4, align 8
  %30 = tail call ptr %29(ptr nonnull %12)
  %31 = alloca ptr, align 8
  %32 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %31, ptr nonnull @91, ptr %30)
  %33 = load ptr, ptr %31, align 8
  %34 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i37 = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i37, align 8
  %memberidx1.i38 = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 %32, ptr %memberidx1.i38, align 4
  %memberidx2.i39 = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 %32, ptr %memberidx2.i39, align 4
  tail call void @free(ptr %30)
  %35 = load ptr, ptr %1, align 8
  %memberidx6 = getelementptr inbounds %Token, ptr %35, i64 0, i32 1
  %36 = load ptr, ptr %memberidx6, align 8
  %memberidx.i40 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %37 = load ptr, ptr %memberidx.i40, align 8
  %memberidx1.i41 = getelementptr inbounds %Compiler, ptr %37, i64 0, i32 6
  %38 = load ptr, ptr %memberidx1.i41, align 8
  %39 = call ptr @malloc(i32 24)
  store i64 1, ptr %39, align 4
  %memberidx1.i.i42 = getelementptr inbounds %FloError, ptr %39, i64 0, i32 2
  store ptr %36, ptr %memberidx1.i.i42, align 8
  %memberidx2.i.i43 = getelementptr inbounds %FloError, ptr %39, i64 0, i32 1
  store ptr %34, ptr %memberidx2.i.i43, align 8
  %memberidx.i.i44 = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 2
  %40 = load i64, ptr %memberidx.i.i44, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 3
  %41 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %40, %41
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 1
  %.pre65 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %42 = shl nuw i64 %41, 1
  store i64 %42, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 1
  %43 = load ptr, ptr %memberidx2.i.i.i, align 8
  %44 = shl i64 %41, 4
  %45 = call ptr @realloc(ptr %43, i64 %44)
  store ptr %45, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i44, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %46 = phi ptr [ %.pre65, %if.entry.TypeChecker_error.exit_crit_edge ], [ %45, %if.entry.i.i ]
  %47 = phi i64 [ %40, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %48 = add nsw i64 %47, 1
  store i64 %48, ptr %memberidx.i.i44, align 4
  %ptridx.i.i46 = getelementptr inbounds ptr, ptr %46, i64 %47
  store ptr %39, ptr %ptridx.i.i46, align 8
  br label %common.ret

ifend:                                            ; preds = %Enum_constructor.exit
  %49 = tail call ptr @malloc(i32 24)
  %50 = load ptr, ptr %memberidx.i.i34, align 8
  %51 = load i64, ptr %50, align 4
  %52 = load ptr, ptr %0, align 8
  %memberidx1.i.i48 = getelementptr inbounds %Program, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx1.i.i48, align 8
  %memberidx.i.i.i49 = getelementptr inbounds %Array_Module_, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i.i.i49, align 8
  %ptridx.i.i.i50 = getelementptr inbounds ptr, ptr %54, i64 %51
  %55 = load ptr, ptr %ptridx.i.i.i50, align 8
  %memberidx10 = getelementptr inbounds %Module, ptr %55, i64 0, i32 6
  %56 = load ptr, ptr %memberidx10, align 8
  %memberidx11 = getelementptr inbounds %Array_Enum_, ptr %56, i64 0, i32 2
  %57 = load i64, ptr %memberidx11, align 4
  store i64 %51, ptr %49, align 4
  %memberidx1.i.i51 = getelementptr inbounds %TypeId, ptr %49, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i51, align 4
  %memberidx2.i.i52 = getelementptr inbounds %TypeId, ptr %49, i64 0, i32 2
  store i64 %57, ptr %memberidx2.i.i52, align 4
  store ptr %49, ptr %3, align 8
  %58 = load i64, ptr %50, align 4
  %59 = load ptr, ptr %memberidx1.i.i48, align 8
  %memberidx.i.i.i55 = getelementptr inbounds %Array_Module_, ptr %59, i64 0, i32 1
  %60 = load ptr, ptr %memberidx.i.i.i55, align 8
  %ptridx.i.i.i56 = getelementptr inbounds ptr, ptr %60, i64 %58
  %61 = load ptr, ptr %ptridx.i.i.i56, align 8
  %memberidx12 = getelementptr inbounds %Module, ptr %61, i64 0, i32 6
  %62 = load ptr, ptr %memberidx12, align 8
  %memberidx.i57 = getelementptr inbounds %Array_Enum_, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i57, align 4
  %memberidx1.i58 = getelementptr inbounds %Array_Enum_, ptr %62, i64 0, i32 3
  %64 = load i64, ptr %memberidx1.i58, align 4
  %.not.i = icmp slt i64 %63, %64
  br i1 %.not.i, label %ifend.Array_Enum____sl__.exit_crit_edge, label %if.entry.i

ifend.Array_Enum____sl__.exit_crit_edge:          ; preds = %ifend
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Enum_, ptr %62, i64 0, i32 1
  %.pre67 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Enum____sl__.exit

if.entry.i:                                       ; preds = %ifend
  %65 = shl nuw i64 %64, 1
  store i64 %65, ptr %memberidx1.i58, align 4
  %memberidx2.i.i60 = getelementptr inbounds %Array_Enum_, ptr %62, i64 0, i32 1
  %66 = load ptr, ptr %memberidx2.i.i60, align 8
  %67 = shl i64 %64, 4
  %68 = tail call ptr @realloc(ptr %66, i64 %67)
  store ptr %68, ptr %memberidx2.i.i60, align 8
  %.pre66 = load i64, ptr %memberidx.i57, align 4
  br label %Array_Enum____sl__.exit

Array_Enum____sl__.exit:                          ; preds = %ifend.Array_Enum____sl__.exit_crit_edge, %if.entry.i
  %69 = phi ptr [ %.pre67, %ifend.Array_Enum____sl__.exit_crit_edge ], [ %68, %if.entry.i ]
  %70 = phi i64 [ %63, %ifend.Array_Enum____sl__.exit_crit_edge ], [ %.pre66, %if.entry.i ]
  %71 = add nsw i64 %70, 1
  store i64 %71, ptr %memberidx.i57, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %69, i64 %70
  store ptr %3, ptr %ptridx.i, align 8
  %memberidx13 = getelementptr inbounds %Scope, ptr %25, i64 0, i32 4
  %72 = load ptr, ptr %memberidx13, align 8
  %73 = load ptr, ptr %memberidx2, align 8
  %74 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %72, ptr %73, ptr %74)
  %memberidx16 = getelementptr inbounds %Scope, ptr %25, i64 0, i32 1
  %75 = load ptr, ptr %memberidx16, align 8
  %76 = load ptr, ptr %memberidx2, align 8
  %77 = tail call ptr @malloc(i32 24)
  %78 = load ptr, ptr %3, align 8
  %79 = load i64, ptr %78, align 4
  %memberidx1.i61 = getelementptr inbounds %TypeId, ptr %78, i64 0, i32 2
  %80 = load i64, ptr %memberidx1.i61, align 4
  store i64 4, ptr %77, align 4
  %memberidx1.i.i62 = getelementptr inbounds %VarId, ptr %77, i64 0, i32 1
  store i64 %79, ptr %memberidx1.i.i62, align 4
  %memberidx2.i.i63 = getelementptr inbounds %VarId, ptr %77, i64 0, i32 2
  store i64 %80, ptr %memberidx2.i.i63, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %75, ptr %76, ptr nonnull %77)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_within_module(ptr %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp ne i64 %6, 20
  %memberidx3 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %4)
  %memberidx.i101 = getelementptr inbounds %Map_string_Generic_, ptr %8, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i101, align 4
  %11 = urem i64 %9, %10
  %12 = load ptr, ptr %8, align 8
  %ptridx.i102 = getelementptr inbounds ptr, ptr %12, i64 %11
  %13 = load ptr, ptr %ptridx.i102, align 8
  %.not.i103 = icmp eq ptr %13, null
  br i1 %.not.i103, label %Map_string_Generic____getitem__.exit, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %2
  %memberidx1.i.i105 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i108 = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %14 = phi ptr [ %24, %else.i ], [ %12, %while.entry.i.preheader ]
  %15 = phi i64 [ %25, %else.i ], [ %10, %while.entry.i.preheader ]
  %16 = phi ptr [ %28, %else.i ], [ %13, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %27, %else.i ], [ %11, %while.entry.i.preheader ]
  %17 = load ptr, ptr %16, align 8
  %memberidx.i.i104 = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx.i.i104, align 4
  %19 = load i64, ptr %memberidx1.i.i105, align 4
  %.not.i.i106 = icmp eq i64 %18, %19
  br i1 %.not.i.i106, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i107 = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  %20 = load ptr, ptr %memberidx2.i.i107, align 8
  %21 = load ptr, ptr %memberidx3.i.i108, align 8
  %22 = tail call i64 @memcmp(ptr %20, ptr %21, i64 %18)
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i101, align 4
  %.pre113 = load ptr, ptr %8, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre114.pre = load ptr, ptr %8, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre114.pre, i64 %hash.0.i
  %.pre115.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre115.pre, null
  br i1 %.not29.i, label %Map_string_Generic____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %24 = phi ptr [ %.pre113, %ifend.i.i.else.i_crit_edge ], [ %14, %while.entry.i ]
  %25 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %15, %while.entry.i ]
  %26 = add nuw i64 %hash.0.i, 1
  %27 = urem i64 %26, %25
  %ptridx7.i = getelementptr inbounds ptr, ptr %24, i64 %27
  %28 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %28, null
  br i1 %.not30.i, label %Map_string_Generic____getitem__.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_Generic_, ptr %.pre115.pre, i64 0, i32 1
  %29 = load ptr, ptr %memberidx15.i, align 8
  %phi.cmp = icmp ne ptr %29, null
  br label %Map_string_Generic____getitem__.exit

Map_string_Generic____getitem__.exit:             ; preds = %else.i, %2, %while.end.i, %if.entry10.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry10.i ], [ false, %while.end.i ], [ false, %2 ], [ false, %else.i ]
  %30 = or i1 %7, %common.ret.op.i
  br i1 %30, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry17, %Array_Class____sl__.exit, %if.entry9, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %Map_string_Generic____getitem__.exit
  %31 = load ptr, ptr %4, align 8
  %memberidx4 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %31, i64 0, i32 5
  %32 = load ptr, ptr %memberidx4, align 8
  %33 = tail call ptr %32(ptr nonnull %4)
  %34 = alloca ptr, align 8
  %35 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %34, ptr nonnull @91, ptr %33)
  %36 = load ptr, ptr %34, align 8
  %37 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %37, align 8
  %memberidx.i98 = getelementptr inbounds %string, ptr %37, i64 0, i32 1
  store ptr %36, ptr %memberidx.i98, align 8
  %memberidx1.i99 = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  store i64 %35, ptr %memberidx1.i99, align 4
  %memberidx2.i100 = getelementptr inbounds %string, ptr %37, i64 0, i32 3
  store i64 %35, ptr %memberidx2.i100, align 4
  tail call void @free(ptr %33)
  %38 = load ptr, ptr %1, align 8
  %memberidx6 = getelementptr inbounds %Token, ptr %38, i64 0, i32 1
  %39 = load ptr, ptr %memberidx6, align 8
  %memberidx.i91 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %40 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i92 = getelementptr inbounds %Compiler, ptr %40, i64 0, i32 6
  %41 = load ptr, ptr %memberidx1.i92, align 8
  %42 = call ptr @malloc(i32 24)
  store i64 1, ptr %42, align 4
  %memberidx1.i.i93 = getelementptr inbounds %FloError, ptr %42, i64 0, i32 2
  store ptr %39, ptr %memberidx1.i.i93, align 8
  %memberidx2.i.i94 = getelementptr inbounds %FloError, ptr %42, i64 0, i32 1
  store ptr %37, ptr %memberidx2.i.i94, align 8
  %memberidx.i.i95 = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 2
  %43 = load i64, ptr %memberidx.i.i95, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 3
  %44 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %43, %44
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %.pre119 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %45 = shl nuw i64 %44, 1
  store i64 %45, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i.i, align 8
  %47 = shl i64 %44, 4
  %48 = call ptr @realloc(ptr %46, i64 %47)
  store ptr %48, ptr %memberidx2.i.i.i, align 8
  %.pre118 = load i64, ptr %memberidx.i.i95, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %49 = phi ptr [ %.pre119, %if.entry.TypeChecker_error.exit_crit_edge ], [ %48, %if.entry.i.i ]
  %50 = phi i64 [ %43, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre118, %if.entry.i.i ]
  %51 = add nsw i64 %50, 1
  store i64 %51, ptr %memberidx.i.i95, align 4
  %ptridx.i.i97 = getelementptr inbounds ptr, ptr %49, i64 %50
  store ptr %42, ptr %ptridx.i.i97, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_Generic____getitem__.exit
  %memberidx7 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 1
  %52 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_GenericParameterNode_, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx8, align 4
  %54 = icmp sgt i64 %53, 0
  br i1 %54, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend
  %memberidx12 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  store i1 true, ptr %memberidx12, align 1
  %55 = load ptr, ptr %memberidx3, align 8
  %56 = tail call ptr @malloc(i32 16)
  %memberidx14 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %57 = load ptr, ptr %memberidx14, align 8
  %58 = load i64, ptr %57, align 4
  store i64 %58, ptr %56, align 4
  %memberidx1.i90 = getelementptr inbounds %Generic, ptr %56, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i90, align 8
  tail call fastcc void @Map_string_Generic____setitem__(ptr %55, ptr %4, ptr nonnull %56)
  br label %common.ret

ifend11:                                          ; preds = %ifend
  %59 = tail call ptr @malloc(i32 81)
  %memberidx.i83 = getelementptr inbounds %Class, ptr %59, i64 0, i32 3
  store ptr null, ptr %memberidx.i83, align 8
  %memberidx2.i85 = getelementptr inbounds %Class, ptr %59, i64 0, i32 8
  %memberidx3.i = getelementptr inbounds %Class, ptr %59, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx2.i85, i8 0, i64 16, i1 false)
  %60 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ClassField_, ptr %60, align 8
  %memberidx.i.i86 = getelementptr inbounds %Array_ClassField_, ptr %60, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i86, align 4
  %memberidx1.i.i87 = getelementptr inbounds %Array_ClassField_, ptr %60, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i87, align 4
  %memberidx2.i.i88 = getelementptr inbounds %Array_ClassField_, ptr %60, i64 0, i32 1
  %61 = tail call ptr @malloc(i32 64)
  store ptr %61, ptr %memberidx2.i.i88, align 8
  store i64 0, ptr %memberidx.i.i86, align 4
  store ptr %60, ptr %memberidx3.i, align 8
  %memberidx6.i = getelementptr inbounds %Class, ptr %59, i64 0, i32 5
  %62 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_ClassMethod_, ptr %62, align 8
  %memberidx.i19.i = getelementptr inbounds %Array_ClassMethod_, ptr %62, i64 0, i32 2
  store i64 0, ptr %memberidx.i19.i, align 4
  %memberidx1.i20.i = getelementptr inbounds %Array_ClassMethod_, ptr %62, i64 0, i32 3
  store i64 8, ptr %memberidx1.i20.i, align 4
  %memberidx2.i21.i = getelementptr inbounds %Array_ClassMethod_, ptr %62, i64 0, i32 1
  %63 = tail call ptr @malloc(i32 64)
  store ptr %63, ptr %memberidx2.i21.i, align 8
  store i64 0, ptr %memberidx.i19.i, align 4
  store ptr %62, ptr %memberidx6.i, align 8
  %64 = tail call ptr @malloc(i32 24)
  %65 = tail call ptr @malloc(i32 2048)
  store ptr %65, ptr %64, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %ifend11, %for.body.i.i
  %i.0.i.i112 = phi i64 [ 0, %ifend11 ], [ %67, %for.body.i.i ]
  %66 = load ptr, ptr %64, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %66, i64 %i.0.i.i112
  store ptr null, ptr %ptridx.i.i, align 8
  %67 = add nuw nsw i64 %i.0.i.i112, 1
  %68 = icmp ult i64 %i.0.i.i112, 255
  br i1 %68, label %for.body.i.i, label %Map_string_PropId__constructor.exit.i

Map_string_PropId__constructor.exit.i:            ; preds = %for.body.i.i
  %memberidx9.i = getelementptr inbounds %Class, ptr %59, i64 0, i32 6
  %memberidx2.i22.i = getelementptr inbounds %Map_string_PropId_, ptr %64, i64 0, i32 1
  store i64 256, ptr %memberidx2.i22.i, align 4
  %memberidx3.i.i89 = getelementptr inbounds %Map_string_PropId_, ptr %64, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i89, align 4
  store ptr %64, ptr %memberidx9.i, align 8
  %69 = tail call ptr @malloc(i32 24)
  %70 = tail call ptr @malloc(i32 2048)
  store ptr %70, ptr %69, align 8
  br label %for.body.i26.i

for.body.i26.i:                                   ; preds = %Map_string_PropId__constructor.exit.i, %for.body.i26.i
  %i.0.i23.i111 = phi i64 [ 0, %Map_string_PropId__constructor.exit.i ], [ %72, %for.body.i26.i ]
  %71 = load ptr, ptr %69, align 8
  %ptridx.i25.i = getelementptr inbounds ptr, ptr %71, i64 %i.0.i23.i111
  store ptr null, ptr %ptridx.i25.i, align 8
  %72 = add nuw nsw i64 %i.0.i23.i111, 1
  %73 = icmp ult i64 %i.0.i23.i111, 255
  br i1 %73, label %for.body.i26.i, label %Class_constructor.exit

Class_constructor.exit:                           ; preds = %for.body.i26.i
  %memberidx10.i = getelementptr inbounds %Class, ptr %59, i64 0, i32 7
  %memberidx2.i27.i = getelementptr inbounds %Map_string_PropId_, ptr %69, i64 0, i32 1
  store i64 256, ptr %memberidx2.i27.i, align 4
  %memberidx3.i28.i = getelementptr inbounds %Map_string_PropId_, ptr %69, i64 0, i32 2
  store i64 0, ptr %memberidx3.i28.i, align 4
  store ptr %69, ptr %memberidx10.i, align 8
  %memberidx11.i = getelementptr inbounds %Class, ptr %59, i64 0, i32 10
  store i1 false, ptr %memberidx11.i, align 1
  %74 = load ptr, ptr %0, align 8
  %memberidx.i.i78 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %75 = load ptr, ptr %memberidx.i.i78, align 8
  %76 = load i64, ptr %75, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Program, ptr %74, i64 0, i32 1
  %77 = load ptr, ptr %memberidx1.i.i.i, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %77, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %78, i64 %76
  %79 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx1.i79 = getelementptr inbounds %Module, ptr %79, i64 0, i32 5
  %80 = load ptr, ptr %memberidx1.i79, align 8
  %81 = load i64, ptr %80, align 4
  %ptridx.i.i.i81 = getelementptr inbounds ptr, ptr %78, i64 %81
  %82 = load ptr, ptr %ptridx.i.i.i81, align 8
  %memberidx2.i.i82 = getelementptr inbounds %Module, ptr %82, i64 0, i32 7
  %83 = load ptr, ptr %memberidx2.i.i82, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %80, i64 0, i32 1
  %84 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %83, i64 0, i32 1
  %85 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %85, i64 %84
  %86 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx16 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 2
  %87 = load ptr, ptr %memberidx16, align 8
  %.not = icmp eq ptr %87, null
  %memberidx25 = getelementptr inbounds %Class, ptr %59, i64 0, i32 2
  br i1 %.not, label %else18, label %if.entry17

if.entry17:                                       ; preds = %Class_constructor.exit
  %88 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %87)
  store ptr %88, ptr %memberidx25, align 8
  %memberidx.i76 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %89 = load ptr, ptr %memberidx.i76, align 8
  %memberidx1.i77 = getelementptr inbounds %Compiler, ptr %89, i64 0, i32 6
  %90 = load ptr, ptr %memberidx1.i77, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 2
  %91 = load i64, ptr %memberidx2.i, align 4
  %92 = icmp sgt i64 %91, 0
  br i1 %92, label %common.ret, label %ifend19

else18:                                           ; preds = %Class_constructor.exit
  store ptr null, ptr %memberidx25, align 8
  br label %ifend19

ifend19:                                          ; preds = %if.entry17, %else18
  %memberidx26 = getelementptr inbounds %Class, ptr %59, i64 0, i32 1
  store ptr %4, ptr %memberidx26, align 8
  %93 = tail call ptr @malloc(i32 24)
  %94 = load ptr, ptr %memberidx.i.i78, align 8
  %95 = load i64, ptr %94, align 4
  %96 = load ptr, ptr %0, align 8
  %memberidx1.i.i73 = getelementptr inbounds %Program, ptr %96, i64 0, i32 1
  %97 = load ptr, ptr %memberidx1.i.i73, align 8
  %memberidx.i.i.i74 = getelementptr inbounds %Array_Module_, ptr %97, i64 0, i32 1
  %98 = load ptr, ptr %memberidx.i.i.i74, align 8
  %ptridx.i.i.i75 = getelementptr inbounds ptr, ptr %98, i64 %95
  %99 = load ptr, ptr %ptridx.i.i.i75, align 8
  %memberidx30 = getelementptr inbounds %Module, ptr %99, i64 0, i32 3
  %100 = load ptr, ptr %memberidx30, align 8
  %memberidx31 = getelementptr inbounds %Array_Class_, ptr %100, i64 0, i32 2
  %101 = load i64, ptr %memberidx31, align 4
  store i64 %95, ptr %93, align 4
  %memberidx1.i.i70 = getelementptr inbounds %TypeId, ptr %93, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i70, align 4
  %memberidx2.i.i71 = getelementptr inbounds %TypeId, ptr %93, i64 0, i32 2
  store i64 %101, ptr %memberidx2.i.i71, align 4
  store ptr %93, ptr %59, align 8
  %102 = load i64, ptr %94, align 4
  %103 = load ptr, ptr %memberidx1.i.i73, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %103, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %104, i64 %102
  %105 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx32 = getelementptr inbounds %Module, ptr %105, i64 0, i32 3
  %106 = load ptr, ptr %memberidx32, align 8
  %memberidx.i = getelementptr inbounds %Array_Class_, ptr %106, i64 0, i32 2
  %107 = load i64, ptr %memberidx.i, align 4
  %memberidx1.i66 = getelementptr inbounds %Array_Class_, ptr %106, i64 0, i32 3
  %108 = load i64, ptr %memberidx1.i66, align 4
  %.not.i = icmp slt i64 %107, %108
  br i1 %.not.i, label %ifend19.Array_Class____sl__.exit_crit_edge, label %if.entry.i

ifend19.Array_Class____sl__.exit_crit_edge:       ; preds = %ifend19
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Class_, ptr %106, i64 0, i32 1
  %.pre117 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Class____sl__.exit

if.entry.i:                                       ; preds = %ifend19
  %109 = shl nuw i64 %108, 1
  store i64 %109, ptr %memberidx1.i66, align 4
  %memberidx2.i.i67 = getelementptr inbounds %Array_Class_, ptr %106, i64 0, i32 1
  %110 = load ptr, ptr %memberidx2.i.i67, align 8
  %111 = shl i64 %108, 4
  %112 = tail call ptr @realloc(ptr %110, i64 %111)
  store ptr %112, ptr %memberidx2.i.i67, align 8
  %.pre116 = load i64, ptr %memberidx.i, align 4
  br label %Array_Class____sl__.exit

Array_Class____sl__.exit:                         ; preds = %ifend19.Array_Class____sl__.exit_crit_edge, %if.entry.i
  %113 = phi ptr [ %.pre117, %ifend19.Array_Class____sl__.exit_crit_edge ], [ %112, %if.entry.i ]
  %114 = phi i64 [ %107, %ifend19.Array_Class____sl__.exit_crit_edge ], [ %.pre116, %if.entry.i ]
  %115 = add nsw i64 %114, 1
  store i64 %115, ptr %memberidx.i, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %113, i64 %114
  store ptr %59, ptr %ptridx.i, align 8
  %memberidx33 = getelementptr inbounds %Scope, ptr %86, i64 0, i32 2
  %116 = load ptr, ptr %memberidx33, align 8
  %117 = load ptr, ptr %59, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %116, ptr %4, ptr %117)
  %memberidx35 = getelementptr inbounds %Scope, ptr %86, i64 0, i32 1
  %118 = load ptr, ptr %memberidx35, align 8
  %119 = tail call ptr @malloc(i32 24)
  %120 = load ptr, ptr %59, align 8
  %121 = load i64, ptr %120, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %120, i64 0, i32 2
  %122 = load i64, ptr %memberidx1.i, align 4
  store i64 3, ptr %119, align 4
  %memberidx1.i.i = getelementptr inbounds %VarId, ptr %119, i64 0, i32 1
  store i64 %121, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %119, i64 0, i32 2
  store i64 %122, ptr %memberidx2.i.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %118, ptr %4, ptr nonnull %119)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_function_within_module(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 49)
  %memberidx.i = getelementptr inbounds %Function, ptr %3, i64 0, i32 6
  %memberidx1 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 4
  %4 = load i1, ptr %memberidx1, align 1
  store i1 %4, ptr %memberidx.i, align 1
  %5 = load ptr, ptr %1, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %5, i64 0, i32 2
  %6 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Function, ptr %3, i64 0, i32 1
  store ptr %6, ptr %memberidx4, align 8
  %7 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %6)
  %.not.i = icmp eq ptr %7, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 2
  br i1 %9, label %if.entry, label %ifend

common.ret:                                       ; preds = %TypeChecker_create_child_scope_within_current_scope.exit, %Array_Function____sl__.exit, %TypeChecker_error.exit98, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %if.entry.i
  %10 = load ptr, ptr %6, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx5, align 8
  %12 = tail call ptr %11(ptr nonnull %6)
  %13 = alloca ptr, align 8
  %14 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %13, ptr nonnull @99, ptr %12)
  %15 = load ptr, ptr %13, align 8
  %16 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %16, align 8
  %memberidx.i74 = getelementptr inbounds %string, ptr %16, i64 0, i32 1
  store ptr %15, ptr %memberidx.i74, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  store i64 %14, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %16, i64 0, i32 3
  store i64 %14, ptr %memberidx2.i, align 4
  tail call void @free(ptr %12)
  %17 = load ptr, ptr %1, align 8
  %memberidx7 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx7, align 8
  %memberidx.i79 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %19 = load ptr, ptr %memberidx.i79, align 8
  %memberidx1.i80 = getelementptr inbounds %Compiler, ptr %19, i64 0, i32 6
  %20 = load ptr, ptr %memberidx1.i80, align 8
  %21 = call ptr @malloc(i32 24)
  store i64 1, ptr %21, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %21, i64 0, i32 2
  store ptr %18, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i81 = getelementptr inbounds %FloError, ptr %21, i64 0, i32 1
  store ptr %16, ptr %memberidx2.i.i81, align 8
  %memberidx.i.i82 = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i.i82, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 3
  %23 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %22, %23
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 1
  %.pre132 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %24 = shl nuw i64 %23, 1
  store i64 %24, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i.i.i, align 8
  %26 = shl i64 %23, 4
  %27 = call ptr @realloc(ptr %25, i64 %26)
  store ptr %27, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i82, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %28 = phi ptr [ %.pre132, %if.entry.TypeChecker_error.exit_crit_edge ], [ %27, %if.entry.i.i ]
  %29 = phi i64 [ %22, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %30 = add nsw i64 %29, 1
  store i64 %30, ptr %memberidx.i.i82, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %28, i64 %29
  store ptr %21, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %31 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %6)
  %32 = load i64, ptr %31, align 4
  %.not = icmp eq i64 %32, 20
  br i1 %.not, label %ifend11, label %if.entry9

if.entry9:                                        ; preds = %ifend
  %33 = load ptr, ptr %6, align 8
  %memberidx12 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %33, i64 0, i32 5
  %34 = load ptr, ptr %memberidx12, align 8
  %35 = tail call ptr %34(ptr nonnull %6)
  %36 = alloca ptr, align 8
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %36, ptr nonnull @100, ptr %35)
  %38 = load ptr, ptr %36, align 8
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i83 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i83, align 8
  %memberidx1.i84 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx1.i84, align 4
  %memberidx2.i85 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 %37, ptr %memberidx2.i85, align 4
  tail call void @free(ptr %35)
  %40 = load ptr, ptr %1, align 8
  %memberidx14 = getelementptr inbounds %Token, ptr %40, i64 0, i32 1
  %41 = load ptr, ptr %memberidx14, align 8
  %memberidx.i86 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %42 = load ptr, ptr %memberidx.i86, align 8
  %memberidx1.i87 = getelementptr inbounds %Compiler, ptr %42, i64 0, i32 6
  %43 = load ptr, ptr %memberidx1.i87, align 8
  %44 = call ptr @malloc(i32 24)
  store i64 1, ptr %44, align 4
  %memberidx1.i.i88 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 2
  store ptr %41, ptr %memberidx1.i.i88, align 8
  %memberidx2.i.i89 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 1
  store ptr %39, ptr %memberidx2.i.i89, align 8
  %memberidx.i.i90 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %45 = load i64, ptr %memberidx.i.i90, align 4
  %memberidx1.i2.i91 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 3
  %46 = load i64, ptr %memberidx1.i2.i91, align 4
  %.not.i.i92 = icmp slt i64 %45, %46
  br i1 %.not.i.i92, label %if.entry9.TypeChecker_error.exit98_crit_edge, label %if.entry.i.i95

if.entry9.TypeChecker_error.exit98_crit_edge:     ; preds = %if.entry9
  %memberidx4.i.i96.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %.pre134 = load ptr, ptr %memberidx4.i.i96.phi.trans.insert, align 8
  br label %TypeChecker_error.exit98

if.entry.i.i95:                                   ; preds = %if.entry9
  %47 = shl nuw i64 %46, 1
  store i64 %47, ptr %memberidx1.i2.i91, align 4
  %memberidx2.i.i.i94 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %48 = load ptr, ptr %memberidx2.i.i.i94, align 8
  %49 = shl i64 %46, 4
  %50 = call ptr @realloc(ptr %48, i64 %49)
  store ptr %50, ptr %memberidx2.i.i.i94, align 8
  %.pre133 = load i64, ptr %memberidx.i.i90, align 4
  br label %TypeChecker_error.exit98

TypeChecker_error.exit98:                         ; preds = %if.entry9.TypeChecker_error.exit98_crit_edge, %if.entry.i.i95
  %51 = phi ptr [ %.pre134, %if.entry9.TypeChecker_error.exit98_crit_edge ], [ %50, %if.entry.i.i95 ]
  %52 = phi i64 [ %45, %if.entry9.TypeChecker_error.exit98_crit_edge ], [ %.pre133, %if.entry.i.i95 ]
  %53 = add nsw i64 %52, 1
  store i64 %53, ptr %memberidx.i.i90, align 4
  %ptridx.i.i97 = getelementptr inbounds ptr, ptr %51, i64 %52
  store ptr %44, ptr %ptridx.i.i97, align 8
  br label %common.ret

ifend11:                                          ; preds = %ifend
  %memberidx15 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %54 = load ptr, ptr %memberidx15, align 8
  %55 = load i64, ptr %54, align 4
  %56 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %55)
  %memberidx2.i100 = getelementptr inbounds %Scope, ptr %56, i64 0, i32 5
  %57 = load ptr, ptr %memberidx15, align 8
  store ptr %57, ptr %memberidx2.i100, align 8
  %58 = load ptr, ptr %0, align 8
  %59 = load ptr, ptr %memberidx15, align 8
  %memberidx.i.i.i102 = getelementptr inbounds %Program, ptr %58, i64 0, i32 1
  %60 = load ptr, ptr %memberidx.i.i.i102, align 8
  %61 = load i64, ptr %59, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %60, i64 0, i32 1
  %62 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %62, i64 %61
  %63 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i103 = getelementptr inbounds %Module, ptr %63, i64 0, i32 7
  %64 = load ptr, ptr %memberidx2.i.i.i103, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %59, i64 0, i32 1
  %65 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %66, i64 %65
  %67 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %memberidx4.i104 = getelementptr inbounds %Scope, ptr %67, i64 0, i32 7
  %68 = load ptr, ptr %memberidx4.i104, align 8
  %69 = load ptr, ptr %56, align 8
  %memberidx.i.i105 = getelementptr inbounds %Array_ScopeId_, ptr %68, i64 0, i32 2
  %70 = load i64, ptr %memberidx.i.i105, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %68, i64 0, i32 3
  %71 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i106 = icmp slt i64 %70, %71
  br i1 %.not.i.i106, label %ifend11.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i107

ifend11.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %ifend11
  %memberidx4.i.i108.phi.trans.insert = getelementptr inbounds %Array_ScopeId_, ptr %68, i64 0, i32 1
  %.pre136 = load ptr, ptr %memberidx4.i.i108.phi.trans.insert, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i107:                                  ; preds = %ifend11
  %72 = shl nuw i64 %71, 1
  store i64 %72, ptr %memberidx1.i11.i, align 4
  %memberidx2.i.i13.i = getelementptr inbounds %Array_ScopeId_, ptr %68, i64 0, i32 1
  %73 = load ptr, ptr %memberidx2.i.i13.i, align 8
  %74 = shl i64 %71, 4
  %75 = tail call ptr @realloc(ptr %73, i64 %74)
  store ptr %75, ptr %memberidx2.i.i13.i, align 8
  %.pre135 = load i64, ptr %memberidx.i.i105, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %ifend11.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i107
  %76 = phi ptr [ %.pre136, %ifend11.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %75, %if.entry.i.i107 ]
  %77 = phi i64 [ %70, %ifend11.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre135, %if.entry.i.i107 ]
  %78 = add nsw i64 %77, 1
  store i64 %78, ptr %memberidx.i.i105, align 4
  %ptridx.i.i109 = getelementptr inbounds ptr, ptr %76, i64 %77
  store ptr %69, ptr %ptridx.i.i109, align 8
  %79 = load ptr, ptr %56, align 8
  store ptr %79, ptr %memberidx15, align 8
  %memberidx18 = getelementptr inbounds %Function, ptr %3, i64 0, i32 2
  %80 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FunctionArg_, ptr %80, align 8
  %memberidx.i110 = getelementptr inbounds %Array_FunctionArg_, ptr %80, i64 0, i32 2
  store i64 0, ptr %memberidx.i110, align 4
  %memberidx1.i111 = getelementptr inbounds %Array_FunctionArg_, ptr %80, i64 0, i32 3
  store i64 8, ptr %memberidx1.i111, align 4
  %memberidx2.i112 = getelementptr inbounds %Array_FunctionArg_, ptr %80, i64 0, i32 1
  %81 = tail call ptr @malloc(i32 64)
  store ptr %81, ptr %memberidx2.i112, align 8
  store i64 0, ptr %memberidx.i110, align 4
  store ptr %80, ptr %memberidx18, align 8
  %memberidx21 = getelementptr inbounds %Function, ptr %3, i64 0, i32 4
  %memberidx22 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 1
  %82 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 3
  %83 = load ptr, ptr %memberidx23, align 8
  %84 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr nonnull %0, ptr %82, ptr %83, ptr nonnull %80)
  store ptr %84, ptr %memberidx21, align 8
  %memberidx.i113 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %85 = load ptr, ptr %memberidx.i113, align 8
  %memberidx1.i114 = getelementptr inbounds %Compiler, ptr %85, i64 0, i32 6
  %86 = load ptr, ptr %memberidx1.i114, align 8
  %memberidx2.i115 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 2
  %87 = load i64, ptr %memberidx2.i115, align 4
  %88 = icmp sgt i64 %87, 0
  br i1 %88, label %common.ret, label %ifend27

ifend27:                                          ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %89 = tail call ptr @malloc(i32 24)
  %90 = load ptr, ptr %memberidx15, align 8
  %91 = load i64, ptr %90, align 4
  %92 = load ptr, ptr %0, align 8
  %memberidx1.i.i117 = getelementptr inbounds %Program, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx1.i.i117, align 8
  %memberidx.i.i.i118 = getelementptr inbounds %Array_Module_, ptr %93, i64 0, i32 1
  %94 = load ptr, ptr %memberidx.i.i.i118, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %94, i64 %91
  %95 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx31 = getelementptr inbounds %Module, ptr %95, i64 0, i32 4
  %96 = load ptr, ptr %memberidx31, align 8
  %memberidx32 = getelementptr inbounds %Array_Function_, ptr %96, i64 0, i32 2
  %97 = load i64, ptr %memberidx32, align 4
  store i64 0, ptr %89, align 4
  %memberidx1.i119 = getelementptr inbounds %VarId, ptr %89, i64 0, i32 1
  store i64 %91, ptr %memberidx1.i119, align 4
  %memberidx2.i120 = getelementptr inbounds %VarId, ptr %89, i64 0, i32 2
  store i64 %97, ptr %memberidx2.i120, align 4
  store ptr %89, ptr %3, align 8
  %98 = load ptr, ptr %memberidx2.i100, align 8
  store ptr %98, ptr %memberidx15, align 8
  %memberidx35 = getelementptr inbounds %Function, ptr %3, i64 0, i32 5
  %99 = load ptr, ptr %56, align 8
  store ptr %99, ptr %memberidx35, align 8
  %100 = load i64, ptr %98, align 4
  %101 = load ptr, ptr %memberidx1.i.i117, align 8
  %memberidx.i.i.i.i126 = getelementptr inbounds %Array_Module_, ptr %101, i64 0, i32 1
  %102 = load ptr, ptr %memberidx.i.i.i.i126, align 8
  %ptridx.i.i.i.i127 = getelementptr inbounds ptr, ptr %102, i64 %100
  %103 = load ptr, ptr %ptridx.i.i.i.i127, align 8
  %memberidx1.i128 = getelementptr inbounds %Module, ptr %103, i64 0, i32 5
  %104 = load ptr, ptr %memberidx1.i128, align 8
  %105 = load i64, ptr %104, align 4
  %ptridx.i.i.i130 = getelementptr inbounds ptr, ptr %102, i64 %105
  %106 = load ptr, ptr %ptridx.i.i.i130, align 8
  %memberidx2.i.i131 = getelementptr inbounds %Module, ptr %106, i64 0, i32 7
  %107 = load ptr, ptr %memberidx2.i.i131, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %104, i64 0, i32 1
  %108 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %107, i64 0, i32 1
  %109 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %109, i64 %108
  %110 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx37 = getelementptr inbounds %Module, ptr %103, i64 0, i32 4
  %111 = load ptr, ptr %memberidx37, align 8
  %memberidx.i75 = getelementptr inbounds %Array_Function_, ptr %111, i64 0, i32 2
  %112 = load i64, ptr %memberidx.i75, align 4
  %memberidx1.i76 = getelementptr inbounds %Array_Function_, ptr %111, i64 0, i32 3
  %113 = load i64, ptr %memberidx1.i76, align 4
  %.not.i77 = icmp slt i64 %112, %113
  br i1 %.not.i77, label %ifend27.Array_Function____sl__.exit_crit_edge, label %if.entry.i78

ifend27.Array_Function____sl__.exit_crit_edge:    ; preds = %ifend27
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Function_, ptr %111, i64 0, i32 1
  %.pre138 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Function____sl__.exit

if.entry.i78:                                     ; preds = %ifend27
  %114 = shl nuw i64 %113, 1
  store i64 %114, ptr %memberidx1.i76, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Function_, ptr %111, i64 0, i32 1
  %115 = load ptr, ptr %memberidx2.i.i, align 8
  %116 = shl i64 %113, 4
  %117 = tail call ptr @realloc(ptr %115, i64 %116)
  store ptr %117, ptr %memberidx2.i.i, align 8
  %.pre137 = load i64, ptr %memberidx.i75, align 4
  br label %Array_Function____sl__.exit

Array_Function____sl__.exit:                      ; preds = %ifend27.Array_Function____sl__.exit_crit_edge, %if.entry.i78
  %118 = phi ptr [ %.pre138, %ifend27.Array_Function____sl__.exit_crit_edge ], [ %117, %if.entry.i78 ]
  %119 = phi i64 [ %112, %ifend27.Array_Function____sl__.exit_crit_edge ], [ %.pre137, %if.entry.i78 ]
  %120 = add nsw i64 %119, 1
  store i64 %120, ptr %memberidx.i75, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %118, i64 %119
  store ptr %3, ptr %ptridx.i, align 8
  %memberidx38 = getelementptr inbounds %Scope, ptr %110, i64 0, i32 3
  %121 = load ptr, ptr %memberidx38, align 8
  %122 = load ptr, ptr %memberidx4, align 8
  %123 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %121, ptr %122, ptr %123)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %4)
  %6 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %tailrecurse.i, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i73, %tailrecurse.i ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %7 = load i64, ptr %.tr11.i, align 4
  %switch = icmp eq i64 %7, 19
  %memberidx1.i73 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br i1 %switch, label %tailrecurse.i, label %if.entry3.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i75 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %8 = load ptr, ptr %memberidx6.i75, align 8
  %memberidx.i.i76 = getelementptr inbounds %Program, ptr %6, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i76, align 8
  %10 = load i64, ptr %8, align 4
  %memberidx.i.i.i77 = getelementptr inbounds %Array_Module_, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i.i77, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %12 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i78 = getelementptr inbounds %Module, ptr %12, i64 0, i32 3
  %13 = load ptr, ptr %memberidx2.i.i78, align 8
  %memberidx3.i.i79 = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i.i79, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %15, i64 %14
  %16 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx3 = getelementptr inbounds %Class, ptr %16, i64 0, i32 6
  %17 = load ptr, ptr %memberidx3, align 8
  %18 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %5)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %17, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = urem i64 %18, %19
  %21 = load ptr, ptr %17, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %21, i64 %20
  %22 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %22, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %23 = phi ptr [ %33, %else.i ], [ %21, %while.entry.i.preheader ]
  %24 = phi i64 [ %34, %else.i ], [ %19, %while.entry.i.preheader ]
  %25 = phi ptr [ %37, %else.i ], [ %22, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %36, %else.i ], [ %20, %while.entry.i.preheader ]
  %26 = load ptr, ptr %25, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i.i, align 4
  %28 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %27, %28
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  %29 = load ptr, ptr %memberidx2.i.i, align 8
  %30 = load ptr, ptr %memberidx3.i.i, align 8
  %31 = tail call i64 @memcmp(ptr %29, ptr %30, i64 %27)
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre81 = load ptr, ptr %17, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre82.pre = load ptr, ptr %17, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre82.pre, i64 %hash.0.i
  %.pre83.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre83.pre, null
  br i1 %.not29.i, label %common.ret, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %33 = phi ptr [ %.pre81, %ifend.i.i.else.i_crit_edge ], [ %23, %while.entry.i ]
  %34 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %24, %while.entry.i ]
  %35 = add nuw i64 %hash.0.i, 1
  %36 = urem i64 %35, %34
  %ptridx7.i = getelementptr inbounds ptr, ptr %33, i64 %36
  %37 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %37, null
  br i1 %.not30.i, label %common.ret, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre83.pre, i64 0, i32 1
  %38 = load ptr, ptr %memberidx15.i, align 8
  %39 = icmp eq ptr %38, null
  br i1 %39, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %get_class_prop_type.exit, %Map_string_PropId____getitem__.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %101, %ifend13 ], [ null, %Map_string_PropId____getitem__.exit ], [ null, %get_class_prop_type.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %40 = load ptr, ptr %0, align 8
  %memberidx.i.i40 = getelementptr inbounds %PropId, ptr %38, i64 0, i32 1
  %41 = load ptr, ptr %memberidx.i.i40, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %40, i64 0, i32 1
  %42 = load ptr, ptr %memberidx.i.i.i, align 8
  %43 = load i64, ptr %41, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %45, i64 0, i32 3
  %46 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %41, i64 0, i32 2
  %47 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %48, i64 %47
  %49 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %50 = load i64, ptr %38, align 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %49, i64 0, i32 5
  %52 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %38, i64 0, i32 2
  %53 = load i64, ptr %memberidx2.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %54, i64 %53
  %55 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %55, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %49, i64 0, i32 4
  %56 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %38, i64 0, i32 2
  %57 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %56, i64 0, i32 1
  %58 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %58, i64 %57
  %59 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %59, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i41 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx5 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i41, i64 0, i32 1
  %60 = load ptr, ptr %memberidx5, align 8
  %memberidx.i42 = getelementptr inbounds %Array_Type_, ptr %60, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i42, align 8
  %62 = load ptr, ptr %61, align 8
  %memberidx6 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %63 = load ptr, ptr %memberidx6, align 8
  %64 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %62, ptr %63)
  %memberidx.i43 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %65 = load ptr, ptr %memberidx.i43, align 8
  %memberidx1.i44 = getelementptr inbounds %Compiler, ptr %65, i64 0, i32 6
  %66 = load ptr, ptr %memberidx1.i44, align 8
  %memberidx2.i45 = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 2
  %67 = load i64, ptr %memberidx2.i45, align 4
  %68 = icmp sgt i64 %67, 0
  br i1 %68, label %common.ret, label %ifend9

ifend9:                                           ; preds = %get_class_prop_type.exit
  %memberidx10 = getelementptr inbounds %Expression, ptr %64, i64 0, i32 3
  %69 = load ptr, ptr %memberidx10, align 8
  %70 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %62, ptr %69)
  br i1 %70, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %71 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %62)
  %72 = load ptr, ptr %71, align 8
  %memberidx14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %72, i64 0, i32 5
  %73 = load ptr, ptr %memberidx14, align 8
  %74 = tail call ptr %73(ptr nonnull %71)
  %75 = load ptr, ptr %memberidx10, align 8
  %76 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %75)
  %77 = load ptr, ptr %76, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %77, i64 0, i32 5
  %78 = load ptr, ptr %memberidx16, align 8
  %79 = tail call ptr %78(ptr nonnull %76)
  %80 = alloca ptr, align 8
  %81 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %80, ptr nonnull @167, ptr %74, ptr %79)
  %82 = load ptr, ptr %80, align 8
  %83 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %83, align 8
  %memberidx.i46 = getelementptr inbounds %string, ptr %83, i64 0, i32 1
  store ptr %82, ptr %memberidx.i46, align 8
  %memberidx1.i47 = getelementptr inbounds %string, ptr %83, i64 0, i32 2
  store i64 %81, ptr %memberidx1.i47, align 4
  %memberidx2.i48 = getelementptr inbounds %string, ptr %83, i64 0, i32 3
  store i64 %81, ptr %memberidx2.i48, align 4
  tail call void @free(ptr %74)
  tail call void @free(ptr %79)
  %84 = load ptr, ptr %memberidx6, align 8
  %85 = load ptr, ptr %84, align 8
  %86 = load ptr, ptr %memberidx.i43, align 8
  %memberidx1.i50 = getelementptr inbounds %Compiler, ptr %86, i64 0, i32 6
  %87 = load ptr, ptr %memberidx1.i50, align 8
  %88 = call ptr @malloc(i32 24)
  store i64 5, ptr %88, align 4
  %memberidx1.i.i51 = getelementptr inbounds %FloError, ptr %88, i64 0, i32 2
  store ptr %85, ptr %memberidx1.i.i51, align 8
  %memberidx2.i.i52 = getelementptr inbounds %FloError, ptr %88, i64 0, i32 1
  store ptr %83, ptr %memberidx2.i.i52, align 8
  %memberidx.i.i53 = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 2
  %89 = load i64, ptr %memberidx.i.i53, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 3
  %90 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i54 = icmp slt i64 %89, %90
  br i1 %.not.i.i54, label %if.entry11.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry11.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry11
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 1
  %.pre85 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry11
  %91 = shl nuw i64 %90, 1
  store i64 %91, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i56 = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 1
  %92 = load ptr, ptr %memberidx2.i.i.i56, align 8
  %93 = shl i64 %90, 4
  %94 = call ptr @realloc(ptr %92, i64 %93)
  store ptr %94, ptr %memberidx2.i.i.i56, align 8
  %.pre84 = load i64, ptr %memberidx.i.i53, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %95 = phi ptr [ %.pre85, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %94, %if.entry.i.i ]
  %96 = phi i64 [ %89, %if.entry11.TypeChecker_error.exit_crit_edge ], [ %.pre84, %if.entry.i.i ]
  %97 = add nsw i64 %96, 1
  store i64 %97, ptr %memberidx.i.i53, align 4
  %ptridx.i.i57 = getelementptr inbounds ptr, ptr %95, i64 %96
  store ptr %88, ptr %ptridx.i.i57, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %98 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %98, align 4
  %memberidx.i.i58 = getelementptr inbounds %Expression, ptr %98, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i58, align 4
  %memberidx1.i.i59 = getelementptr inbounds %Expression, ptr %98, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i59, align 1
  %memberidx.i60 = getelementptr inbounds %MemberExpression, ptr %98, i64 0, i32 4
  store ptr %1, ptr %memberidx.i60, align 8
  %memberidx1.i61 = getelementptr inbounds %MemberExpression, ptr %98, i64 0, i32 5
  store ptr %38, ptr %memberidx1.i61, align 8
  %memberidx2.i62 = getelementptr inbounds %Expression, ptr %98, i64 0, i32 3
  store ptr %common.ret.op.i41, ptr %memberidx2.i62, align 8
  %99 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %99, align 8
  %memberidx.i63 = getelementptr inbounds %Array_Expression_, ptr %99, i64 0, i32 2
  store i64 0, ptr %memberidx.i63, align 4
  %memberidx1.i64 = getelementptr inbounds %Array_Expression_, ptr %99, i64 0, i32 3
  store i64 8, ptr %memberidx1.i64, align 4
  %memberidx2.i65 = getelementptr inbounds %Array_Expression_, ptr %99, i64 0, i32 1
  %100 = tail call ptr @malloc(i32 64)
  store ptr %100, ptr %memberidx2.i65, align 8
  store ptr %64, ptr %100, align 8
  store i64 1, ptr %memberidx.i63, align 4
  %101 = tail call ptr @malloc(i32 41)
  %memberidx21 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i41, i64 0, i32 2
  %102 = load ptr, ptr %memberidx21, align 8
  store i64 8, ptr %101, align 4
  %memberidx.i.i66 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i66, align 4
  %memberidx1.i.i67 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i67, align 1
  %memberidx.i68 = getelementptr inbounds %CallExpression, ptr %101, i64 0, i32 4
  store ptr %98, ptr %memberidx.i68, align 8
  %memberidx1.i69 = getelementptr inbounds %CallExpression, ptr %101, i64 0, i32 5
  store ptr %99, ptr %memberidx1.i69, align 8
  %memberidx2.i70 = getelementptr inbounds %Expression, ptr %101, i64 0, i32 3
  store ptr %102, ptr %memberidx2.i70, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = load ptr, ptr %0, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i97, %3
  %.tr11.i.in = phi ptr [ %memberidx1, %3 ], [ %memberidx1.i96, %if.entry.i97 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %5 = load i64, ptr %.tr11.i, align 4
  switch i64 %5, label %get_class_from_type.exit [
    i64 19, label %if.entry.i97
    i64 11, label %if.entry3.i
  ]

if.entry.i97:                                     ; preds = %tailrecurse.i
  %memberidx1.i96 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i98 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %6 = load ptr, ptr %memberidx6.i98, align 8
  %memberidx.i.i99 = getelementptr inbounds %Program, ptr %4, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i99, align 8
  %8 = load i64, ptr %6, align 4
  %memberidx.i.i.i100 = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i.i100, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %9, i64 %8
  %10 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i101 = getelementptr inbounds %Module, ptr %10, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2.i.i101, align 8
  %memberidx3.i.i102 = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %12 = load i64, ptr %memberidx3.i.i102, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i6.i.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i95 = phi ptr [ %14, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx2 = getelementptr inbounds %Class, ptr %common.ret.op.i95, i64 0, i32 6
  %15 = load ptr, ptr %memberidx2, align 8
  %16 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %16, ptr noundef nonnull align 8 dereferenceable(11) @111, i64 11, i1 false)
  %17 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %17, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  store ptr %16, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i, align 4
  %18 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %17)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %15, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = urem i64 %18, %19
  %21 = load ptr, ptr %15, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %21, i64 %20
  %22 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %22, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %get_class_from_type.exit, %else.i
  %23 = phi ptr [ %33, %else.i ], [ %21, %get_class_from_type.exit ]
  %24 = phi i64 [ %34, %else.i ], [ %19, %get_class_from_type.exit ]
  %25 = phi ptr [ %37, %else.i ], [ %22, %get_class_from_type.exit ]
  %hash.0.i = phi i64 [ %36, %else.i ], [ %20, %get_class_from_type.exit ]
  %26 = load ptr, ptr %25, align 8
  %memberidx.i.i44 = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i.i44, align 4
  %28 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %27, %28
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i46 = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  %29 = load ptr, ptr %memberidx2.i.i46, align 8
  %30 = load ptr, ptr %memberidx.i.i, align 8
  %31 = tail call i64 @memcmp(ptr %29, ptr %30, i64 %27)
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre106 = load ptr, ptr %15, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre107.pre = load ptr, ptr %15, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre107.pre, i64 %hash.0.i
  %.pre108.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre108.pre, null
  br i1 %.not29.i, label %if.entry, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %33 = phi ptr [ %.pre106, %ifend.i.i.else.i_crit_edge ], [ %23, %while.entry.i ]
  %34 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %24, %while.entry.i ]
  %35 = add nuw i64 %hash.0.i, 1
  %36 = urem i64 %35, %34
  %ptridx7.i = getelementptr inbounds ptr, ptr %33, i64 %36
  %37 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %37, null
  br i1 %.not30.i, label %if.entry, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre108.pre, i64 0, i32 1
  %38 = load ptr, ptr %memberidx15.i, align 8
  %39 = icmp eq ptr %38, null
  br i1 %39, label %if.entry, label %ifend

common.ret:                                       ; preds = %get_class_prop_type.exit, %ifend15, %TypeChecker_error.exit80, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit80 ], [ %120, %ifend15 ], [ null, %get_class_prop_type.exit ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_string_PropId____getitem__.exit
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i95, i64 0, i32 1
  %40 = load ptr, ptr %memberidx3, align 8
  %41 = load ptr, ptr %40, align 8
  %memberidx4 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %41, i64 0, i32 5
  %42 = load ptr, ptr %memberidx4, align 8
  %43 = tail call ptr %42(ptr nonnull %40)
  %44 = alloca ptr, align 8
  %45 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %44, ptr nonnull @198, ptr %43)
  %46 = load ptr, ptr %44, align 8
  %47 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %47, align 8
  %memberidx.i47 = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  store ptr %46, ptr %memberidx.i47, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  store i64 %45, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %47, i64 0, i32 3
  store i64 %45, ptr %memberidx2.i, align 4
  tail call void @free(ptr %43)
  %48 = load ptr, ptr %2, align 8
  %memberidx.i48 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %49 = load ptr, ptr %memberidx.i48, align 8
  %memberidx1.i49 = getelementptr inbounds %Compiler, ptr %49, i64 0, i32 6
  %50 = load ptr, ptr %memberidx1.i49, align 8
  %51 = call ptr @malloc(i32 24)
  store i64 4, ptr %51, align 4
  %memberidx1.i.i50 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 2
  store ptr %48, ptr %memberidx1.i.i50, align 8
  %memberidx2.i.i51 = getelementptr inbounds %FloError, ptr %51, i64 0, i32 1
  store ptr %47, ptr %memberidx2.i.i51, align 8
  %memberidx.i.i52 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 2
  %52 = load i64, ptr %memberidx.i.i52, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 3
  %53 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i53 = icmp slt i64 %52, %53
  br i1 %.not.i.i53, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %.pre112 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %54 = shl nuw i64 %53, 1
  store i64 %54, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %55 = load ptr, ptr %memberidx2.i.i.i, align 8
  %56 = shl i64 %53, 4
  %57 = call ptr @realloc(ptr %55, i64 %56)
  store ptr %57, ptr %memberidx2.i.i.i, align 8
  %.pre111 = load i64, ptr %memberidx.i.i52, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %58 = phi ptr [ %.pre112, %if.entry.TypeChecker_error.exit_crit_edge ], [ %57, %if.entry.i.i ]
  %59 = phi i64 [ %52, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre111, %if.entry.i.i ]
  %60 = add nsw i64 %59, 1
  store i64 %60, ptr %memberidx.i.i52, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %58, i64 %59
  store ptr %51, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %61 = load ptr, ptr %0, align 8
  %memberidx.i.i54 = getelementptr inbounds %PropId, ptr %38, i64 0, i32 1
  %62 = load ptr, ptr %memberidx.i.i54, align 8
  %memberidx.i.i.i55 = getelementptr inbounds %Program, ptr %61, i64 0, i32 1
  %63 = load ptr, ptr %memberidx.i.i.i55, align 8
  %64 = load i64, ptr %62, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %63, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %65, i64 %64
  %66 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i56 = getelementptr inbounds %Module, ptr %66, i64 0, i32 3
  %67 = load ptr, ptr %memberidx2.i.i.i56, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %62, i64 0, i32 2
  %68 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %69, i64 %68
  %70 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %71 = load i64, ptr %38, align 4
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i58 = getelementptr inbounds %Class, ptr %70, i64 0, i32 5
  %73 = load ptr, ptr %memberidx1.i58, align 8
  %memberidx2.i59 = getelementptr inbounds %PropId, ptr %38, i64 0, i32 2
  %74 = load i64, ptr %memberidx2.i59, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %75, i64 %74
  %76 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %76, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 4
  %77 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %38, i64 0, i32 2
  %78 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i60 = getelementptr inbounds ptr, ptr %79, i64 %78
  %80 = load ptr, ptr %ptridx.i.i60, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %80, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i57 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx7 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i57, i64 0, i32 1
  %81 = load ptr, ptr %memberidx7, align 8
  %memberidx.i61 = getelementptr inbounds %Array_Type_, ptr %81, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i61, align 8
  %83 = load ptr, ptr %82, align 8
  %memberidx8 = getelementptr inbounds %ExpressionIndexNode, ptr %2, i64 0, i32 4
  %84 = load ptr, ptr %memberidx8, align 8
  %85 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %83, ptr %84)
  %memberidx.i62 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %86 = load ptr, ptr %memberidx.i62, align 8
  %memberidx1.i63 = getelementptr inbounds %Compiler, ptr %86, i64 0, i32 6
  %87 = load ptr, ptr %memberidx1.i63, align 8
  %memberidx2.i64 = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 2
  %88 = load i64, ptr %memberidx2.i64, align 4
  %89 = icmp sgt i64 %88, 0
  br i1 %89, label %common.ret, label %ifend11

ifend11:                                          ; preds = %get_class_prop_type.exit
  %memberidx12 = getelementptr inbounds %Expression, ptr %85, i64 0, i32 3
  %90 = load ptr, ptr %memberidx12, align 8
  %91 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %83, ptr %90)
  br i1 %91, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend11
  %92 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %83)
  %93 = load ptr, ptr %92, align 8
  %memberidx16 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx16, align 8
  %95 = tail call ptr %94(ptr nonnull %92)
  %96 = load ptr, ptr %memberidx12, align 8
  %97 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %96)
  %98 = load ptr, ptr %97, align 8
  %memberidx18 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %98, i64 0, i32 5
  %99 = load ptr, ptr %memberidx18, align 8
  %100 = tail call ptr %99(ptr nonnull %97)
  %101 = alloca ptr, align 8
  %102 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %101, ptr nonnull @167, ptr %95, ptr %100)
  %103 = load ptr, ptr %101, align 8
  %104 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %104, align 8
  %memberidx.i65 = getelementptr inbounds %string, ptr %104, i64 0, i32 1
  store ptr %103, ptr %memberidx.i65, align 8
  %memberidx1.i66 = getelementptr inbounds %string, ptr %104, i64 0, i32 2
  store i64 %102, ptr %memberidx1.i66, align 4
  %memberidx2.i67 = getelementptr inbounds %string, ptr %104, i64 0, i32 3
  store i64 %102, ptr %memberidx2.i67, align 4
  tail call void @free(ptr %95)
  tail call void @free(ptr %100)
  %105 = load ptr, ptr %memberidx8, align 8
  %106 = load ptr, ptr %105, align 8
  %107 = load ptr, ptr %memberidx.i62, align 8
  %memberidx1.i69 = getelementptr inbounds %Compiler, ptr %107, i64 0, i32 6
  %108 = load ptr, ptr %memberidx1.i69, align 8
  %109 = call ptr @malloc(i32 24)
  store i64 5, ptr %109, align 4
  %memberidx1.i.i70 = getelementptr inbounds %FloError, ptr %109, i64 0, i32 2
  store ptr %106, ptr %memberidx1.i.i70, align 8
  %memberidx2.i.i71 = getelementptr inbounds %FloError, ptr %109, i64 0, i32 1
  store ptr %104, ptr %memberidx2.i.i71, align 8
  %memberidx.i.i72 = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 2
  %110 = load i64, ptr %memberidx.i.i72, align 4
  %memberidx1.i2.i73 = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 3
  %111 = load i64, ptr %memberidx1.i2.i73, align 4
  %.not.i.i74 = icmp slt i64 %110, %111
  br i1 %.not.i.i74, label %if.entry13.TypeChecker_error.exit80_crit_edge, label %if.entry.i.i77

if.entry13.TypeChecker_error.exit80_crit_edge:    ; preds = %if.entry13
  %memberidx4.i.i78.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 1
  %.pre110 = load ptr, ptr %memberidx4.i.i78.phi.trans.insert, align 8
  br label %TypeChecker_error.exit80

if.entry.i.i77:                                   ; preds = %if.entry13
  %112 = shl nuw i64 %111, 1
  store i64 %112, ptr %memberidx1.i2.i73, align 4
  %memberidx2.i.i.i76 = getelementptr inbounds %Array_FloError_, ptr %108, i64 0, i32 1
  %113 = load ptr, ptr %memberidx2.i.i.i76, align 8
  %114 = shl i64 %111, 4
  %115 = call ptr @realloc(ptr %113, i64 %114)
  store ptr %115, ptr %memberidx2.i.i.i76, align 8
  %.pre109 = load i64, ptr %memberidx.i.i72, align 4
  br label %TypeChecker_error.exit80

TypeChecker_error.exit80:                         ; preds = %if.entry13.TypeChecker_error.exit80_crit_edge, %if.entry.i.i77
  %116 = phi ptr [ %.pre110, %if.entry13.TypeChecker_error.exit80_crit_edge ], [ %115, %if.entry.i.i77 ]
  %117 = phi i64 [ %110, %if.entry13.TypeChecker_error.exit80_crit_edge ], [ %.pre109, %if.entry.i.i77 ]
  %118 = add nsw i64 %117, 1
  store i64 %118, ptr %memberidx.i.i72, align 4
  %ptridx.i.i79 = getelementptr inbounds ptr, ptr %116, i64 %117
  store ptr %109, ptr %ptridx.i.i79, align 8
  br label %common.ret

ifend15:                                          ; preds = %ifend11
  %119 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %119, align 4
  %memberidx.i.i81 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i81, align 4
  %memberidx1.i.i82 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i82, align 1
  %memberidx.i83 = getelementptr inbounds %MemberExpression, ptr %119, i64 0, i32 4
  store ptr %1, ptr %memberidx.i83, align 8
  %memberidx1.i84 = getelementptr inbounds %MemberExpression, ptr %119, i64 0, i32 5
  store ptr %38, ptr %memberidx1.i84, align 8
  %memberidx2.i85 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  store ptr %common.ret.op.i57, ptr %memberidx2.i85, align 8
  %120 = tail call ptr @malloc(i32 41)
  %121 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %121, align 8
  %memberidx.i86 = getelementptr inbounds %Array_Expression_, ptr %121, i64 0, i32 2
  store i64 0, ptr %memberidx.i86, align 4
  %memberidx1.i87 = getelementptr inbounds %Array_Expression_, ptr %121, i64 0, i32 3
  store i64 8, ptr %memberidx1.i87, align 4
  %memberidx2.i88 = getelementptr inbounds %Array_Expression_, ptr %121, i64 0, i32 1
  %122 = tail call ptr @malloc(i32 64)
  store ptr %122, ptr %memberidx2.i88, align 8
  store ptr %85, ptr %122, align 8
  store i64 1, ptr %memberidx.i86, align 4
  %memberidx23 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i57, i64 0, i32 2
  %123 = load ptr, ptr %memberidx23, align 8
  store i64 8, ptr %120, align 4
  %memberidx.i.i89 = getelementptr inbounds %Expression, ptr %120, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i89, align 4
  %memberidx1.i.i90 = getelementptr inbounds %Expression, ptr %120, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i90, align 1
  %memberidx.i91 = getelementptr inbounds %CallExpression, ptr %120, i64 0, i32 4
  store ptr %119, ptr %memberidx.i91, align 8
  %memberidx1.i92 = getelementptr inbounds %CallExpression, ptr %120, i64 0, i32 5
  store ptr %121, ptr %memberidx1.i92, align 8
  %memberidx2.i93 = getelementptr inbounds %Expression, ptr %120, i64 0, i32 3
  store ptr %123, ptr %memberidx2.i93, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %3, align 4
  %memberidx = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 6
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend4, %2, %TypeChecker_error.exit76, %ifend19, %TypeChecker_error.exit, %if.entry2
  %common.ret.op = phi ptr [ %17, %if.entry2 ], [ null, %TypeChecker_error.exit ], [ %48, %ifend19 ], [ null, %TypeChecker_error.exit76 ], [ null, %2 ], [ null, %ifend4 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = load i64, ptr %10, align 4
  %12 = icmp eq i64 %11, 19
  br i1 %12, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend, %if.entry.i
  %.tr5.i = phi ptr [ %13, %if.entry.i ], [ %10, %ifend ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %13 = load ptr, ptr %memberidx1.i1, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 19
  br i1 %15, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend
  %.lcssa.i = phi i64 [ %11, %ifend ], [ %14, %if.entry.i ]
  %16 = icmp eq i64 %.lcssa.i, 11
  br i1 %16, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %is_object.exit
  %17 = tail call fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %5, ptr %1)
  br label %common.ret

ifend4:                                           ; preds = %is_object.exit
  %18 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %18, align 4
  %memberidx.i47 = getelementptr inbounds %IntType, ptr %18, i64 0, i32 1
  store i1 false, ptr %memberidx.i47, align 1
  %memberidx5 = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 4
  %19 = load ptr, ptr %memberidx5, align 8
  %20 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %18, ptr %19)
  %21 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i49 = getelementptr inbounds %Compiler, ptr %21, i64 0, i32 6
  %22 = load ptr, ptr %memberidx1.i49, align 8
  %memberidx2.i50 = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx2.i50, align 4
  %24 = icmp sgt i64 %23, 0
  br i1 %24, label %common.ret, label %ifend8

ifend8:                                           ; preds = %ifend4
  %memberidx9 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  %25 = load ptr, ptr %memberidx9, align 8
  %26 = load i64, ptr %25, align 4
  %27 = add i64 %26, -1
  %28 = icmp ult i64 %27, 7
  br i1 %28, label %ifend12, label %if.entry10

if.entry10:                                       ; preds = %ifend8
  %29 = tail call ptr @malloc(i32 34)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(34) %29, ptr noundef nonnull align 8 dereferenceable(34) @199, i64 34, i1 false)
  %30 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %30, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 1
  store ptr %29, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 2
  store i64 34, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 3
  store i64 34, ptr %memberidx2.i.i, align 4
  %31 = load ptr, ptr %memberidx5, align 8
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i52 = getelementptr inbounds %Compiler, ptr %33, i64 0, i32 6
  %34 = load ptr, ptr %memberidx1.i52, align 8
  %35 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %35, align 4
  %memberidx1.i.i53 = getelementptr inbounds %FloError, ptr %35, i64 0, i32 2
  store ptr %32, ptr %memberidx1.i.i53, align 8
  %memberidx2.i.i54 = getelementptr inbounds %FloError, ptr %35, i64 0, i32 1
  store ptr %30, ptr %memberidx2.i.i54, align 8
  %memberidx.i.i55 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 2
  %36 = load i64, ptr %memberidx.i.i55, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 3
  %37 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %36, %37
  br i1 %.not.i.i, label %if.entry10.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry10.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry10
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 1
  %.pre2 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry10
  %38 = shl nuw i64 %37, 1
  store i64 %38, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 1
  %39 = load ptr, ptr %memberidx2.i.i.i, align 8
  %40 = shl i64 %37, 4
  %41 = tail call ptr @realloc(ptr %39, i64 %40)
  store ptr %41, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i55, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry10.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %42 = phi ptr [ %.pre2, %if.entry10.TypeChecker_error.exit_crit_edge ], [ %41, %if.entry.i.i ]
  %43 = phi i64 [ %36, %if.entry10.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %44 = add nsw i64 %43, 1
  store i64 %44, ptr %memberidx.i.i55, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %42, i64 %43
  store ptr %35, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend12:                                          ; preds = %ifend8
  %45 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %45, align 4
  %46 = load ptr, ptr %memberidx1, align 8
  %47 = load i64, ptr %46, align 4
  switch i64 %47, label %else23 [
    i64 13, label %if.entry17
    i64 14, label %if.entry22
  ]

if.entry17:                                       ; preds = %ifend12
  %memberidx20 = getelementptr inbounds %PointerType, ptr %46, i64 0, i32 1
  br label %ifend19

ifend19:                                          ; preds = %if.entry22, %if.entry17
  %value_type.0.in = phi ptr [ %memberidx20, %if.entry17 ], [ %memberidx25, %if.entry22 ]
  %value_type.0 = load ptr, ptr %value_type.0.in, align 8
  %48 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %48, align 4
  %memberidx.i.i56 = getelementptr inbounds %Expression, ptr %48, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i56, align 4
  %memberidx1.i.i57 = getelementptr inbounds %Expression, ptr %48, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i57, align 1
  %memberidx.i58 = getelementptr inbounds %IndexExpression, ptr %48, i64 0, i32 4
  store ptr %5, ptr %memberidx.i58, align 8
  %memberidx1.i59 = getelementptr inbounds %IndexExpression, ptr %48, i64 0, i32 5
  store ptr %20, ptr %memberidx1.i59, align 8
  %memberidx2.i60 = getelementptr inbounds %Expression, ptr %48, i64 0, i32 3
  store ptr %value_type.0, ptr %memberidx2.i60, align 8
  br label %common.ret

if.entry22:                                       ; preds = %ifend12
  %memberidx25 = getelementptr inbounds %ArrayType, ptr %46, i64 0, i32 1
  br label %ifend19

else23:                                           ; preds = %ifend12
  %49 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %46)
  %50 = load ptr, ptr %49, align 8
  %memberidx26 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %50, i64 0, i32 5
  %51 = load ptr, ptr %memberidx26, align 8
  %52 = tail call ptr %51(ptr nonnull %49)
  %53 = alloca ptr, align 8
  %54 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %53, ptr nonnull @200, ptr %52)
  %55 = load ptr, ptr %53, align 8
  %56 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %56, align 8
  %memberidx.i61 = getelementptr inbounds %string, ptr %56, i64 0, i32 1
  store ptr %55, ptr %memberidx.i61, align 8
  %memberidx1.i62 = getelementptr inbounds %string, ptr %56, i64 0, i32 2
  store i64 %54, ptr %memberidx1.i62, align 4
  %memberidx2.i63 = getelementptr inbounds %string, ptr %56, i64 0, i32 3
  store i64 %54, ptr %memberidx2.i63, align 4
  tail call void @free(ptr %52)
  %57 = load ptr, ptr %1, align 8
  %58 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i65 = getelementptr inbounds %Compiler, ptr %58, i64 0, i32 6
  %59 = load ptr, ptr %memberidx1.i65, align 8
  %60 = call ptr @malloc(i32 24)
  store i64 5, ptr %60, align 4
  %memberidx1.i.i66 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 2
  store ptr %57, ptr %memberidx1.i.i66, align 8
  %memberidx2.i.i67 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 1
  store ptr %56, ptr %memberidx2.i.i67, align 8
  %memberidx.i.i68 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %61 = load i64, ptr %memberidx.i.i68, align 4
  %memberidx1.i2.i69 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 3
  %62 = load i64, ptr %memberidx1.i2.i69, align 4
  %.not.i.i70 = icmp slt i64 %61, %62
  br i1 %.not.i.i70, label %else23.TypeChecker_error.exit76_crit_edge, label %if.entry.i.i73

else23.TypeChecker_error.exit76_crit_edge:        ; preds = %else23
  %memberidx4.i.i74.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %.pre4 = load ptr, ptr %memberidx4.i.i74.phi.trans.insert, align 8
  br label %TypeChecker_error.exit76

if.entry.i.i73:                                   ; preds = %else23
  %63 = shl nuw i64 %62, 1
  store i64 %63, ptr %memberidx1.i2.i69, align 4
  %memberidx2.i.i.i72 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %64 = load ptr, ptr %memberidx2.i.i.i72, align 8
  %65 = shl i64 %62, 4
  %66 = call ptr @realloc(ptr %64, i64 %65)
  store ptr %66, ptr %memberidx2.i.i.i72, align 8
  %.pre3 = load i64, ptr %memberidx.i.i68, align 4
  br label %TypeChecker_error.exit76

TypeChecker_error.exit76:                         ; preds = %else23.TypeChecker_error.exit76_crit_edge, %if.entry.i.i73
  %67 = phi ptr [ %.pre4, %else23.TypeChecker_error.exit76_crit_edge ], [ %66, %if.entry.i.i73 ]
  %68 = phi i64 [ %61, %else23.TypeChecker_error.exit76_crit_edge ], [ %.pre3, %if.entry.i.i73 ]
  %69 = add nsw i64 %68, 1
  store i64 %69, ptr %memberidx.i.i68, align 4
  %ptridx.i.i75 = getelementptr inbounds ptr, ptr %67, i64 %68
  store ptr %60, ptr %ptridx.i.i75, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_block(ptr %0, ptr nocapture readonly %1, ptr readonly %2) unnamed_addr {
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %4 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %4, i64 0, i32 6
  %5 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret.loopexit:                              ; preds = %for.body
  store i1 false, ptr %38, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %3, %for.end
  %common.ret.op = phi ptr [ %8, %for.end ], [ null, %3 ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %8 = tail call ptr @malloc(i32 11)
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Statement_, ptr %9, align 8
  %memberidx.i.i = getelementptr inbounds %Array_Statement_, ptr %9, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Statement_, ptr %9, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Statement_, ptr %9, i64 0, i32 1
  %10 = tail call ptr @malloc(i32 64)
  store ptr %10, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %9, ptr %8, align 8
  %memberidx3.i = getelementptr inbounds %Block, ptr %8, i64 0, i32 1
  store i1 false, ptr %memberidx3.i, align 1
  %memberidx4.i = getelementptr inbounds %Block, ptr %8, i64 0, i32 2
  store i1 false, ptr %memberidx4.i, align 1
  %memberidx5.i = getelementptr inbounds %Block, ptr %8, i64 0, i32 3
  store i1 false, ptr %memberidx5.i, align 1
  %.not = icmp eq ptr %2, null
  br i1 %.not, label %false_block, label %end

false_block:                                      ; preds = %ifend
  %memberidx.i66 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %11 = load ptr, ptr %memberidx.i66, align 8
  %12 = load i64, ptr %11, align 4
  %13 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0, i64 %12)
  %memberidx2.i67 = getelementptr inbounds %Scope, ptr %13, i64 0, i32 5
  %14 = load ptr, ptr %memberidx.i66, align 8
  store ptr %14, ptr %memberidx2.i67, align 8
  %15 = load ptr, ptr %0, align 8
  %16 = load ptr, ptr %memberidx.i66, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i.i.i, align 8
  %18 = load i64, ptr %16, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %19, i64 %18
  %20 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %20, i64 0, i32 7
  %21 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %16, i64 0, i32 1
  %22 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %23, i64 %22
  %24 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %memberidx4.i69 = getelementptr inbounds %Scope, ptr %24, i64 0, i32 7
  %25 = load ptr, ptr %memberidx4.i69, align 8
  %26 = load ptr, ptr %13, align 8
  %memberidx.i.i70 = getelementptr inbounds %Array_ScopeId_, ptr %25, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i.i70, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %25, i64 0, i32 3
  %28 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i = icmp slt i64 %27, %28
  br i1 %.not.i.i, label %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i

false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %false_block
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_ScopeId_, ptr %25, i64 0, i32 1
  %.pre107 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i:                                     ; preds = %false_block
  %29 = shl nuw i64 %28, 1
  store i64 %29, ptr %memberidx1.i11.i, align 4
  %memberidx2.i.i13.i = getelementptr inbounds %Array_ScopeId_, ptr %25, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2.i.i13.i, align 8
  %31 = shl i64 %28, 4
  %32 = tail call ptr @realloc(ptr %30, i64 %31)
  store ptr %32, ptr %memberidx2.i.i13.i, align 8
  %.pre = load i64, ptr %memberidx.i.i70, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i
  %33 = phi ptr [ %.pre107, %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %32, %if.entry.i.i ]
  %34 = phi i64 [ %27, %false_block.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %35 = add nsw i64 %34, 1
  store i64 %35, ptr %memberidx.i.i70, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %33, i64 %34
  store ptr %26, ptr %ptridx.i.i, align 8
  br label %end

end:                                              ; preds = %ifend, %TypeChecker_create_child_scope_within_current_scope.exit
  %ternary = phi ptr [ %13, %TypeChecker_create_child_scope_within_current_scope.exit ], [ %2, %ifend ]
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %36 = load ptr, ptr %ternary, align 8
  store ptr %36, ptr %memberidx, align 8
  %memberidx2 = getelementptr inbounds %BlockNode, ptr %1, i64 0, i32 1
  %37 = load ptr, ptr %memberidx2, align 8
  %38 = tail call ptr @malloc(i32 25)
  %memberidx.i71 = getelementptr inbounds %Array_StatementNode_, ptr %37, i64 0, i32 1
  %39 = load ptr, ptr %memberidx.i71, align 8
  %memberidx1.i72 = getelementptr inbounds %Array_StatementNode_, ptr %37, i64 0, i32 2
  %40 = load i64, ptr %memberidx1.i72, align 4
  store i1 false, ptr %38, align 1
  %memberidx1.i.i73 = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %38, i64 0, i32 1
  %memberidx2.i.i74 = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %38, i64 0, i32 3
  store ptr %39, ptr %memberidx2.i.i74, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %38, i64 0, i32 2
  store i64 %40, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i73, align 4
  %41 = icmp slt i64 %40, 1
  br i1 %41, label %for.end, label %for.body

for.body:                                         ; preds = %end, %ifend37
  %42 = phi i64 [ %64, %ifend37 ], [ 1, %end ]
  %stmt_node.0101.in = phi ptr [ %ptridx.i89, %ifend37 ], [ %39, %end ]
  %stmt_node.0101 = load ptr, ptr %stmt_node.0101.in, align 8
  %43 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr %stmt_node.0101)
  %44 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i79 = getelementptr inbounds %Compiler, ptr %44, i64 0, i32 6
  %45 = load ptr, ptr %memberidx1.i79, align 8
  %memberidx2.i80 = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 2
  %46 = load i64, ptr %memberidx2.i80, align 4
  %47 = icmp sgt i64 %46, 0
  br i1 %47, label %common.ret.loopexit, label %ifend6

for.end.sink.split:                               ; preds = %if.entry18, %Array_Statement____sl__.exit, %if.entry30, %if.entry35
  %.sink.ph = phi ptr [ %memberidx4.i, %if.entry30 ], [ %memberidx5.i, %if.entry35 ], [ %memberidx3.i, %Array_Statement____sl__.exit ], [ %memberidx3.i, %if.entry18 ]
  store i1 false, ptr %38, align 1
  br label %for.end

for.end:                                          ; preds = %ifend37, %for.end.sink.split, %end
  %.sink = phi ptr [ %38, %end ], [ %.sink.ph, %for.end.sink.split ], [ %38, %ifend37 ]
  store i1 true, ptr %.sink, align 1
  tail call void @free(ptr nonnull %38)
  %memberidx40 = getelementptr inbounds %Scope, ptr %ternary, i64 0, i32 5
  %48 = load ptr, ptr %memberidx40, align 8
  store ptr %48, ptr %memberidx, align 8
  br label %common.ret

ifend6:                                           ; preds = %for.body
  %49 = load i64, ptr %memberidx.i.i, align 4
  %50 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i = icmp slt i64 %49, %50
  br i1 %.not.i, label %ifend6.Array_Statement____sl__.exit_crit_edge, label %if.entry.i

ifend6.Array_Statement____sl__.exit_crit_edge:    ; preds = %ifend6
  %.pre109 = load ptr, ptr %memberidx2.i.i, align 8
  br label %Array_Statement____sl__.exit

if.entry.i:                                       ; preds = %ifend6
  %51 = shl nuw i64 %50, 1
  store i64 %51, ptr %memberidx1.i.i, align 4
  %52 = load ptr, ptr %memberidx2.i.i, align 8
  %53 = shl i64 %50, 4
  %54 = tail call ptr @realloc(ptr %52, i64 %53)
  store ptr %54, ptr %memberidx2.i.i, align 8
  %.pre108 = load i64, ptr %memberidx.i.i, align 4
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %ifend6.Array_Statement____sl__.exit_crit_edge, %if.entry.i
  %55 = phi ptr [ %.pre109, %ifend6.Array_Statement____sl__.exit_crit_edge ], [ %54, %if.entry.i ]
  %56 = phi i64 [ %49, %ifend6.Array_Statement____sl__.exit_crit_edge ], [ %.pre108, %if.entry.i ]
  %57 = add nsw i64 %56, 1
  store i64 %57, ptr %memberidx.i.i, align 4
  %ptridx.i86 = getelementptr inbounds ptr, ptr %55, i64 %56
  store ptr %43, ptr %ptridx.i86, align 8
  %58 = load i64, ptr %43, align 4
  switch i64 %58, label %ifend37 [
    i64 7, label %for.end.sink.split
    i64 0, label %if.entry14
    i64 5, label %if.entry30
    i64 6, label %if.entry35
  ]

if.entry14:                                       ; preds = %Array_Statement____sl__.exit
  %memberidx17 = getelementptr inbounds %IfStatement, ptr %43, i64 0, i32 3
  %59 = load ptr, ptr %memberidx17, align 8
  %.not64 = icmp eq ptr %59, null
  br i1 %.not64, label %ifend37, label %if.entry18

if.entry18:                                       ; preds = %if.entry14
  %memberidx21 = getelementptr inbounds %IfStatement, ptr %43, i64 0, i32 2
  %60 = load ptr, ptr %memberidx21, align 8
  %memberidx22 = getelementptr inbounds %Block, ptr %60, i64 0, i32 1
  %61 = load i1, ptr %memberidx22, align 1
  %memberidx24 = getelementptr inbounds %Block, ptr %59, i64 0, i32 1
  %62 = load i1, ptr %memberidx24, align 1
  %63 = and i1 %61, %62
  br i1 %63, label %for.end.sink.split, label %ifend37

if.entry30:                                       ; preds = %Array_Statement____sl__.exit
  br label %for.end.sink.split

if.entry35:                                       ; preds = %Array_Statement____sl__.exit
  br label %for.end.sink.split

ifend37:                                          ; preds = %Array_Statement____sl__.exit, %if.entry14, %if.entry18
  %64 = add nuw nsw i64 %42, 1
  store i64 %64, ptr %memberidx1.i.i73, align 4
  %ptridx.i89 = getelementptr inbounds ptr, ptr %39, i64 %42
  %.not110 = icmp slt i64 %42, %40
  br i1 %.not110, label %for.body, label %for.end
}

define internal fastcc void @Map_string_Generic__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.041 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.041
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.041, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.040 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %i1.040
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_Generic_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_Generic____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %i1.040, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_Generic____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_Generic_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_Generic__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i38 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %25, %ifend9 ], [ %13, %while.entry.preheader ]
  %16 = phi i64 [ %26, %ifend9 ], [ %11, %while.entry.preheader ]
  %17 = phi ptr [ %29, %ifend9 ], [ %14, %while.entry.preheader ]
  %hash.0 = phi i64 [ %28, %ifend9 ], [ %12, %while.entry.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = load i64, ptr %memberidx1.i38, align 4
  %.not.i = icmp eq i64 %19, %20
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load ptr, ptr %memberidx3.i, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %ifend15.loopexit, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre45 = load ptr, ptr %0, align 8
  br label %ifend9

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %25 = phi ptr [ %.pre45, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %26 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %27 = add nuw i64 %hash.0, 1
  %28 = urem i64 %27, %26
  %ptridx12 = getelementptr inbounds ptr, ptr %25, i64 %28
  %29 = load ptr, ptr %ptridx12, align 8
  %.not37 = icmp eq ptr %29, null
  br i1 %.not37, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %30 = phi ptr [ %13, %ifend ], [ %25, %ifend9 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %28, %ifend9 ]
  %31 = load i64, ptr %memberidx, align 4
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx, align 4
  br label %ifend15

ifend15.loopexit:                                 ; preds = %ifend.i
  %.pre46 = load ptr, ptr %0, align 8
  br label %ifend15

ifend15:                                          ; preds = %ifend15.loopexit, %if.entry13
  %33 = phi ptr [ %30, %if.entry13 ], [ %.pre46, %ifend15.loopexit ]
  %hash.141 = phi i64 [ %hash.1.ph, %if.entry13 ], [ %hash.0, %ifend15.loopexit ]
  %ptridx19 = getelementptr inbounds ptr, ptr %33, i64 %hash.141
  %34 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %34, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_Generic_, ptr %34, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %34, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_Generic__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @24, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @TypeChecker_check_class_body(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 20
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend55, %ifend13, %ifend10, %2, %TypeChecker_error.exit197, %for.end42, %TypeChecker_error.exit
  ret void

ifend:                                            ; preds = %2
  %8 = load ptr, ptr %0, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i199, %ifend
  %9 = phi i64 [ %.pr, %if.entry.i199 ], [ %6, %ifend ]
  %.tr11.i = phi ptr [ %10, %if.entry.i199 ], [ %5, %ifend ]
  switch i64 %9, label %get_class_from_type.exit [
    i64 19, label %if.entry.i199
    i64 11, label %if.entry3.i
  ]

if.entry.i199:                                    ; preds = %tailrecurse.i
  %memberidx1.i198 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1.i198, align 8
  %.pr = load i64, ptr %10, align 4
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i200 = getelementptr inbounds %Program, ptr %8, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i.i200, align 8
  %13 = load i64, ptr %11, align 4
  %memberidx.i.i.i201 = getelementptr inbounds %Array_Module_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i.i.i201, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i202 = getelementptr inbounds %Module, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2.i.i202, align 8
  %memberidx3.i.i203 = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i203, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i6.i.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i = phi ptr [ %19, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx4 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %20 = load ptr, ptr %memberidx4, align 8
  %21 = load ptr, ptr %common.ret.op.i, align 8
  store ptr %21, ptr %memberidx4, align 8
  %memberidx7 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 2
  %22 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %22, null
  br i1 %.not, label %ifend10, label %if.entry8

if.entry8:                                        ; preds = %get_class_from_type.exit
  tail call fastcc void @TypeChecker_add_inherited_props_to_class(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  br label %ifend10

ifend10:                                          ; preds = %get_class_from_type.exit, %if.entry8
  tail call fastcc void @TypeChecker_declare_class_fields(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %23 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 6
  %24 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %25 = load i64, ptr %memberidx2.i, align 4
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend10
  tail call fastcc void @TypeChecker_declare_class_methods(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %27 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i135 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i135, align 8
  %memberidx2.i136 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i136, align 4
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %common.ret, label %for.entry

for.entry:                                        ; preds = %ifend13
  %memberidx17 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 6
  %31 = load ptr, ptr %memberidx17, align 8
  %32 = tail call ptr @malloc(i32 25)
  %33 = load ptr, ptr %31, align 8
  %memberidx1.i137 = getelementptr inbounds %Map_string_PropId_, ptr %31, i64 0, i32 1
  %34 = load i64, ptr %memberidx1.i137, align 4
  %memberidx2.i138 = getelementptr inbounds %Map_string_PropId_, ptr %31, i64 0, i32 2
  %35 = load i64, ptr %memberidx2.i138, align 4
  store i1 false, ptr %32, align 1
  %memberidx1.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %32, i64 0, i32 1
  store ptr %33, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %32, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %32, i64 0, i32 3
  store i64 %35, ptr %memberidx3.i.i, align 4
  %36 = add nsw i64 %34, -1
  store i64 %36, ptr %memberidx2.i.i, align 4
  %37 = icmp sgt i64 %34, 0
  br i1 %37, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %38 = phi i64 [ %41, %ifend.i ], [ %36, %for.entry ]
  %39 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %33, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %39, i64 1
  %40 = load ptr, ptr %39, align 8
  %.not.i = icmp eq ptr %40, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %41 = add nsw i64 %38, -1
  store i64 %41, ptr %memberidx2.i.i, align 4
  %42 = icmp sgt i64 %38, 0
  br i1 %42, label %while.entry.i, label %MapIterator_string_PropId__next.exit.loopexit

MapIterator_string_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %43 = phi i64 [ %41, %ifend.i ], [ %38, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_PropId__next.exit

MapIterator_string_PropId__next.exit:             ; preds = %MapIterator_string_PropId__next.exit.loopexit, %for.entry
  %44 = phi i64 [ %43, %MapIterator_string_PropId__next.exit.loopexit ], [ %36, %for.entry ]
  %memberidx1.i.i.promoted217 = phi ptr [ %incdec.ptr.i, %MapIterator_string_PropId__next.exit.loopexit ], [ %33, %for.entry ]
  %storemerge204212 = add nsw i64 %35, -1
  %storemerge213 = icmp slt i64 %35, 1
  br i1 %storemerge213, label %for.end.loopexit, label %for.body

for.body:                                         ; preds = %MapIterator_string_PropId__next.exit, %MapIterator_string_PropId__next.exit152
  %45 = phi i64 [ %74, %MapIterator_string_PropId__next.exit152 ], [ %44, %MapIterator_string_PropId__next.exit ]
  %incdec.ptr.i145.lcssa219 = phi ptr [ %incdec.ptr.i145.lcssa218, %MapIterator_string_PropId__next.exit152 ], [ %memberidx1.i.i.promoted217, %MapIterator_string_PropId__next.exit ]
  %storemerge204214 = phi i64 [ %storemerge204, %MapIterator_string_PropId__next.exit152 ], [ %storemerge204212, %MapIterator_string_PropId__next.exit ]
  %prop_entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i145.lcssa219, i64 -1
  %prop_entry.0 = load ptr, ptr %prop_entry.0.in, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_string_PropId_, ptr %prop_entry.0, i64 0, i32 1
  %46 = load ptr, ptr %memberidx19, align 8
  %47 = load i64, ptr %46, align 4
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %if.entry22, label %ifend24

for.cond.for.end.loopexit_crit_edge:              ; preds = %MapIterator_string_PropId__next.exit152
  store ptr %incdec.ptr.i145.lcssa218, ptr %memberidx1.i.i, align 8
  br label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.cond.for.end.loopexit_crit_edge, %MapIterator_string_PropId__next.exit
  %storemerge204.lcssa = phi i64 [ -1, %for.cond.for.end.loopexit_crit_edge ], [ %storemerge204212, %MapIterator_string_PropId__next.exit ]
  store i64 %storemerge204.lcssa, ptr %memberidx3.i.i, align 4
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %ifend33
  %.sink = phi ptr [ %32, %for.end.loopexit ], [ %memberidx37, %ifend33 ]
  store i1 true, ptr %.sink, align 1
  tail call void @free(ptr nonnull %32)
  %memberidx43 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 5
  %49 = load ptr, ptr %memberidx43, align 8
  %memberidx44207 = getelementptr inbounds %Array_ClassMethod_, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx44207, align 4
  %51 = icmp sgt i64 %50, 0
  br i1 %51, label %for.body40.lr.ph, label %for.end42

for.body40.lr.ph:                                 ; preds = %for.end
  %memberidx45 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %memberidx49 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 4
  %memberidx50 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %.pre230 = load ptr, ptr %memberidx45, align 8
  br label %for.body40

if.entry22:                                       ; preds = %for.body
  %52 = load ptr, ptr %prop_entry.0, align 8
  %53 = load ptr, ptr %0, align 8
  %memberidx.i.i = getelementptr inbounds %PropId, ptr %46, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %53, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i.i.i, align 8
  %56 = load i64, ptr %54, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %57, i64 %56
  %58 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %58, i64 0, i32 3
  %59 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %54, i64 0, i32 2
  %60 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %59, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %61, i64 %60
  %62 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %memberidx.i141 = getelementptr inbounds %Class, ptr %62, i64 0, i32 5
  %63 = load ptr, ptr %memberidx.i141, align 8
  %memberidx1.i142 = getelementptr inbounds %PropId, ptr %46, i64 0, i32 2
  %64 = load i64, ptr %memberidx1.i142, align 4
  %memberidx.i3.i = getelementptr inbounds %Array_ClassMethod_, ptr %63, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i3.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %65, i64 %64
  %66 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx26 = getelementptr inbounds %ClassMethod, ptr %66, i64 0, i32 7
  %67 = load i1, ptr %memberidx26, align 1
  br i1 %67, label %if.entry27, label %ifend24

ifend24:                                          ; preds = %if.entry22, %for.body
  %68 = add nsw i64 %45, -1
  store i64 %68, ptr %memberidx2.i.i, align 4
  %69 = icmp sgt i64 %45, 0
  br i1 %69, label %while.entry.i147, label %MapIterator_string_PropId__next.exit152

while.entry.i147:                                 ; preds = %ifend24, %ifend.i151
  %70 = phi i64 [ %73, %ifend.i151 ], [ %68, %ifend24 ]
  %71 = phi ptr [ %incdec.ptr.i145, %ifend.i151 ], [ %incdec.ptr.i145.lcssa219, %ifend24 ]
  %incdec.ptr.i145 = getelementptr inbounds ptr, ptr %71, i64 1
  %72 = load ptr, ptr %71, align 8
  %.not.i146 = icmp eq ptr %72, null
  br i1 %.not.i146, label %ifend.i151, label %MapIterator_string_PropId__next.exit152

ifend.i151:                                       ; preds = %while.entry.i147
  %73 = add nsw i64 %70, -1
  store i64 %73, ptr %memberidx2.i.i, align 4
  %.not240 = icmp eq i64 %70, 0
  br i1 %.not240, label %MapIterator_string_PropId__next.exit152, label %while.entry.i147

MapIterator_string_PropId__next.exit152:          ; preds = %while.entry.i147, %ifend.i151, %ifend24
  %74 = phi i64 [ %68, %ifend24 ], [ %70, %while.entry.i147 ], [ -1, %ifend.i151 ]
  %incdec.ptr.i145.lcssa218 = phi ptr [ %incdec.ptr.i145.lcssa219, %ifend24 ], [ %incdec.ptr.i145, %ifend.i151 ], [ %incdec.ptr.i145, %while.entry.i147 ]
  %storemerge204 = add nsw i64 %storemerge204214, -1
  %storemerge = icmp slt i64 %storemerge204214, 1
  br i1 %storemerge, label %for.cond.for.end.loopexit_crit_edge, label %for.body

if.entry27:                                       ; preds = %if.entry22
  store ptr %incdec.ptr.i145.lcssa219, ptr %memberidx1.i.i, align 8
  store i64 %storemerge204214, ptr %memberidx3.i.i, align 4
  store i1 false, ptr %32, align 1
  %memberidx30 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 3
  %75 = load ptr, ptr %memberidx30, align 8
  %.not133 = icmp eq ptr %75, null
  br i1 %.not133, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %if.entry27
  %76 = load ptr, ptr %52, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %76, i64 0, i32 5
  %77 = load ptr, ptr %memberidx34, align 8
  %78 = tail call ptr %77(ptr nonnull %52)
  %79 = alloca ptr, align 8
  %80 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %79, ptr nonnull @145, ptr %78)
  %81 = load ptr, ptr %79, align 8
  %82 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %82, align 8
  %memberidx.i153 = getelementptr inbounds %string, ptr %82, i64 0, i32 1
  store ptr %81, ptr %memberidx.i153, align 8
  %memberidx1.i154 = getelementptr inbounds %string, ptr %82, i64 0, i32 2
  store i64 %80, ptr %memberidx1.i154, align 4
  %memberidx2.i155 = getelementptr inbounds %string, ptr %82, i64 0, i32 3
  store i64 %80, ptr %memberidx2.i155, align 4
  tail call void @free(ptr %78)
  %83 = load ptr, ptr %1, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %83, i64 0, i32 1
  %84 = load ptr, ptr %memberidx36, align 8
  %85 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i157 = getelementptr inbounds %Compiler, ptr %85, i64 0, i32 6
  %86 = load ptr, ptr %memberidx1.i157, align 8
  %87 = call ptr @malloc(i32 24)
  store i64 4, ptr %87, align 4
  %memberidx1.i.i158 = getelementptr inbounds %FloError, ptr %87, i64 0, i32 2
  store ptr %84, ptr %memberidx1.i.i158, align 8
  %memberidx2.i.i159 = getelementptr inbounds %FloError, ptr %87, i64 0, i32 1
  store ptr %82, ptr %memberidx2.i.i159, align 8
  %memberidx.i.i160 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 2
  %88 = load i64, ptr %memberidx.i.i160, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 3
  %89 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %88, %89
  br i1 %.not.i.i, label %if.entry31.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry31.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry31
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 1
  %.pre229 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry31
  %90 = shl nuw i64 %89, 1
  store i64 %90, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i162 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 1
  %91 = load ptr, ptr %memberidx2.i.i.i162, align 8
  %92 = shl i64 %89, 4
  %93 = call ptr @realloc(ptr %91, i64 %92)
  store ptr %93, ptr %memberidx2.i.i.i162, align 8
  %.pre = load i64, ptr %memberidx.i.i160, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry31.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %94 = phi ptr [ %.pre229, %if.entry31.TypeChecker_error.exit_crit_edge ], [ %93, %if.entry.i.i ]
  %95 = phi i64 [ %88, %if.entry31.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %96 = add nsw i64 %95, 1
  store i64 %96, ptr %memberidx.i.i160, align 4
  %ptridx.i.i163 = getelementptr inbounds ptr, ptr %94, i64 %95
  store ptr %87, ptr %ptridx.i.i163, align 8
  br label %common.ret

ifend33:                                          ; preds = %if.entry27
  %memberidx37 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 10
  br label %for.end

for.body40:                                       ; preds = %for.body40.lr.ph, %for.incr41
  %97 = phi ptr [ %.pre230, %for.body40.lr.ph ], [ %107, %for.incr41 ]
  %98 = phi ptr [ %49, %for.body40.lr.ph ], [ %109, %for.incr41 ]
  %i.0208 = phi i64 [ 0, %for.body40.lr.ph ], [ %108, %for.incr41 ]
  %memberidx.i164 = getelementptr inbounds %Array_ClassMethod_, ptr %98, i64 0, i32 1
  %99 = load ptr, ptr %memberidx.i164, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %99, i64 %i.0208
  %100 = load ptr, ptr %ptridx.i, align 8
  %101 = load ptr, ptr %100, align 8
  store ptr %101, ptr %memberidx45, align 8
  %102 = load ptr, ptr %memberidx49, align 8
  %memberidx.i165 = getelementptr inbounds %Array_MethodNode_, ptr %102, i64 0, i32 1
  %103 = load ptr, ptr %memberidx.i165, align 8
  %ptridx.i166 = getelementptr inbounds ptr, ptr %103, i64 %i.0208
  %104 = load ptr, ptr %ptridx.i166, align 8
  %memberidx51 = getelementptr inbounds %ClassMethod, ptr %100, i64 0, i32 8
  %105 = load ptr, ptr %memberidx51, align 8
  store ptr %105, ptr %memberidx50, align 8
  %memberidx52 = getelementptr inbounds %ClassMethod, ptr %100, i64 0, i32 7
  %106 = load i1, ptr %memberidx52, align 1
  br i1 %106, label %for.incr41, label %ifend55

for.incr41:                                       ; preds = %for.body40, %ifend65
  %107 = phi ptr [ %101, %for.body40 ], [ %97, %ifend65 ]
  %108 = add nuw nsw i64 %i.0208, 1
  %109 = load ptr, ptr %memberidx43, align 8
  %memberidx44 = getelementptr inbounds %Array_ClassMethod_, ptr %109, i64 0, i32 2
  %110 = load i64, ptr %memberidx44, align 4
  %111 = icmp slt i64 %108, %110
  br i1 %111, label %for.body40, label %for.end42

for.end42:                                        ; preds = %for.incr41, %for.end
  store ptr %20, ptr %memberidx4, align 8
  br label %common.ret

ifend55:                                          ; preds = %for.body40
  %memberidx56 = getelementptr inbounds %ClassMethod, ptr %100, i64 0, i32 5
  %memberidx57 = getelementptr inbounds %MethodNode, ptr %104, i64 0, i32 2
  %112 = load ptr, ptr %memberidx57, align 8
  %113 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %112, ptr null)
  store ptr %113, ptr %memberidx56, align 8
  %114 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i168 = getelementptr inbounds %Compiler, ptr %114, i64 0, i32 6
  %115 = load ptr, ptr %memberidx1.i168, align 8
  %memberidx2.i169 = getelementptr inbounds %Array_FloError_, ptr %115, i64 0, i32 2
  %116 = load i64, ptr %memberidx2.i169, align 4
  %117 = icmp sgt i64 %116, 0
  br i1 %117, label %common.ret, label %ifend60

ifend60:                                          ; preds = %ifend55
  %memberidx62 = getelementptr inbounds %Block, ptr %113, i64 0, i32 1
  %118 = load i1, ptr %memberidx62, align 1
  br i1 %118, label %ifend65, label %if.entry63

if.entry63:                                       ; preds = %ifend60
  %memberidx66 = getelementptr inbounds %ClassMethod, ptr %100, i64 0, i32 4
  %119 = load ptr, ptr %memberidx66, align 8
  %memberidx67 = getelementptr inbounds %FunctionType, ptr %119, i64 0, i32 2
  %120 = load ptr, ptr %memberidx67, align 8
  %121 = load i64, ptr %120, align 4
  %122 = icmp eq i64 %121, 10
  br i1 %122, label %if.entry69, label %else70

ifend65:                                          ; preds = %ifend60, %Array_Statement____sl__.exit
  store ptr %97, ptr %memberidx45, align 8
  %123 = load ptr, ptr %0, align 8
  %124 = load ptr, ptr %memberidx51, align 8
  %memberidx.i170 = getelementptr inbounds %Program, ptr %123, i64 0, i32 1
  %125 = load ptr, ptr %memberidx.i170, align 8
  %126 = load i64, ptr %124, align 4
  %memberidx.i.i171 = getelementptr inbounds %Array_Module_, ptr %125, i64 0, i32 1
  %127 = load ptr, ptr %memberidx.i.i171, align 8
  %ptridx.i.i172 = getelementptr inbounds ptr, ptr %127, i64 %126
  %128 = load ptr, ptr %ptridx.i.i172, align 8
  %memberidx2.i173 = getelementptr inbounds %Module, ptr %128, i64 0, i32 7
  %129 = load ptr, ptr %memberidx2.i173, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %124, i64 0, i32 1
  %130 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %129, i64 0, i32 1
  %131 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %131, i64 %130
  %132 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx80 = getelementptr inbounds %Scope, ptr %132, i64 0, i32 5
  %133 = load ptr, ptr %memberidx80, align 8
  store ptr %133, ptr %memberidx50, align 8
  br label %for.incr41

if.entry69:                                       ; preds = %if.entry63
  %134 = load ptr, ptr %113, align 8
  %135 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %135, align 4
  %memberidx.i174 = getelementptr inbounds %ReturnStatement, ptr %135, i64 0, i32 1
  store ptr null, ptr %memberidx.i174, align 8
  %memberidx.i175 = getelementptr inbounds %Array_Statement_, ptr %134, i64 0, i32 2
  %136 = load i64, ptr %memberidx.i175, align 4
  %memberidx1.i176 = getelementptr inbounds %Array_Statement_, ptr %134, i64 0, i32 3
  %137 = load i64, ptr %memberidx1.i176, align 4
  %.not.i177 = icmp slt i64 %136, %137
  br i1 %.not.i177, label %if.entry69.Array_Statement____sl__.exit_crit_edge, label %if.entry.i

if.entry69.Array_Statement____sl__.exit_crit_edge: ; preds = %if.entry69
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Statement_, ptr %134, i64 0, i32 1
  %.pre234 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Statement____sl__.exit

if.entry.i:                                       ; preds = %if.entry69
  %138 = shl nuw i64 %137, 1
  store i64 %138, ptr %memberidx1.i176, align 4
  %memberidx2.i.i179 = getelementptr inbounds %Array_Statement_, ptr %134, i64 0, i32 1
  %139 = load ptr, ptr %memberidx2.i.i179, align 8
  %140 = shl i64 %137, 4
  %141 = tail call ptr @realloc(ptr %139, i64 %140)
  store ptr %141, ptr %memberidx2.i.i179, align 8
  %.pre233 = load i64, ptr %memberidx.i175, align 4
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %if.entry69.Array_Statement____sl__.exit_crit_edge, %if.entry.i
  %142 = phi ptr [ %.pre234, %if.entry69.Array_Statement____sl__.exit_crit_edge ], [ %141, %if.entry.i ]
  %143 = phi i64 [ %136, %if.entry69.Array_Statement____sl__.exit_crit_edge ], [ %.pre233, %if.entry.i ]
  %144 = add nsw i64 %143, 1
  store i64 %144, ptr %memberidx.i175, align 4
  %ptridx.i180 = getelementptr inbounds ptr, ptr %142, i64 %143
  store ptr %135, ptr %ptridx.i180, align 8
  br label %ifend65

else70:                                           ; preds = %if.entry63
  %145 = tail call ptr @malloc(i32 38)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(38) %145, ptr noundef nonnull align 8 dereferenceable(38) @146, i64 38, i1 false)
  %146 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %146, align 8
  %memberidx.i.i182 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  store ptr %145, ptr %memberidx.i.i182, align 8
  %memberidx1.i.i183 = getelementptr inbounds %string, ptr %146, i64 0, i32 2
  store i64 38, ptr %memberidx1.i.i183, align 4
  %memberidx2.i.i184 = getelementptr inbounds %string, ptr %146, i64 0, i32 3
  store i64 38, ptr %memberidx2.i.i184, align 4
  %memberidx74 = getelementptr inbounds %MethodNode, ptr %104, i64 0, i32 4
  %147 = load ptr, ptr %memberidx74, align 8
  %148 = load ptr, ptr %147, align 8
  %149 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i186 = getelementptr inbounds %Compiler, ptr %149, i64 0, i32 6
  %150 = load ptr, ptr %memberidx1.i186, align 8
  %151 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %151, align 4
  %memberidx1.i.i187 = getelementptr inbounds %FloError, ptr %151, i64 0, i32 2
  store ptr %148, ptr %memberidx1.i.i187, align 8
  %memberidx2.i.i188 = getelementptr inbounds %FloError, ptr %151, i64 0, i32 1
  store ptr %146, ptr %memberidx2.i.i188, align 8
  %memberidx.i.i189 = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 2
  %152 = load i64, ptr %memberidx.i.i189, align 4
  %memberidx1.i2.i190 = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 3
  %153 = load i64, ptr %memberidx1.i2.i190, align 4
  %.not.i.i191 = icmp slt i64 %152, %153
  br i1 %.not.i.i191, label %else70.TypeChecker_error.exit197_crit_edge, label %if.entry.i.i194

else70.TypeChecker_error.exit197_crit_edge:       ; preds = %else70
  %memberidx4.i.i195.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 1
  %.pre232 = load ptr, ptr %memberidx4.i.i195.phi.trans.insert, align 8
  br label %TypeChecker_error.exit197

if.entry.i.i194:                                  ; preds = %else70
  %154 = shl nuw i64 %153, 1
  store i64 %154, ptr %memberidx1.i2.i190, align 4
  %memberidx2.i.i.i193 = getelementptr inbounds %Array_FloError_, ptr %150, i64 0, i32 1
  %155 = load ptr, ptr %memberidx2.i.i.i193, align 8
  %156 = shl i64 %153, 4
  %157 = tail call ptr @realloc(ptr %155, i64 %156)
  store ptr %157, ptr %memberidx2.i.i.i193, align 8
  %.pre231 = load i64, ptr %memberidx.i.i189, align 4
  br label %TypeChecker_error.exit197

TypeChecker_error.exit197:                        ; preds = %else70.TypeChecker_error.exit197_crit_edge, %if.entry.i.i194
  %158 = phi ptr [ %.pre232, %else70.TypeChecker_error.exit197_crit_edge ], [ %157, %if.entry.i.i194 ]
  %159 = phi i64 [ %152, %else70.TypeChecker_error.exit197_crit_edge ], [ %.pre231, %if.entry.i.i194 ]
  %160 = add nsw i64 %159, 1
  store i64 %160, ptr %memberidx.i.i189, align 4
  %ptridx.i.i196 = getelementptr inbounds ptr, ptr %158, i64 %159
  store ptr %151, ptr %ptridx.i.i196, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Compiler, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = icmp eq ptr %2, null
  %8 = load ptr, ptr %1, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = tail call ptr @malloc(i32 1)
  store i8 64, ptr %10, align 8
  %11 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %11, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 1
  store ptr %10, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %11, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i, align 4
  %12 = tail call i1 %9(ptr nonnull %1, ptr nonnull %11)
  %13 = or i1 %7, %12
  br i1 %13, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %14 = load ptr, ptr %memberidx.i, align 8
  %15 = load i64, ptr %14, align 4
  %16 = load ptr, ptr %0, align 8
  %memberidx1.i.i59 = getelementptr inbounds %Program, ptr %16, i64 0, i32 1
  %17 = load ptr, ptr %memberidx1.i.i59, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %18, i64 %15
  %19 = load ptr, ptr %ptridx.i.i.i, align 8
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr %20, align 8
  %memberidx.i60 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %21, i64 0, i32 5
  %22 = load ptr, ptr %memberidx.i60, align 8
  %23 = tail call ptr %22(ptr nonnull %20)
  %24 = tail call ptr @dirname(ptr %23)
  %25 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %24)
  %26 = trunc i64 %25 to i32
  %27 = tail call ptr @malloc(i32 %26)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 8 %24, i64 %25, i1 false)
  %28 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %28, align 8
  %memberidx.i.i.i61 = getelementptr inbounds %string, ptr %28, i64 0, i32 1
  store ptr %27, ptr %memberidx.i.i.i61, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 2
  store i64 %25, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 3
  store i64 %25, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %29 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %30 = tail call ptr %29(ptr nonnull %28)
  %31 = load ptr, ptr %1, align 8
  %memberidx1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %31, i64 0, i32 5
  %32 = load ptr, ptr %memberidx1.i, align 8
  %33 = tail call ptr %32(ptr nonnull %1)
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @27, ptr %30, ptr %33)
  %35 = load ptr, ptr %4, align 8
  %36 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %36, align 8
  %memberidx.i.i63 = getelementptr inbounds %string, ptr %36, i64 0, i32 1
  store ptr %35, ptr %memberidx.i.i63, align 8
  %memberidx1.i.i64 = getelementptr inbounds %string, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx1.i.i64, align 4
  %memberidx2.i.i65 = getelementptr inbounds %string, ptr %36, i64 0, i32 3
  store i64 %34, ptr %memberidx2.i.i65, align 4
  call void @free(ptr %30)
  call void @free(ptr %33)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %filepath.0 = phi ptr [ %36, %if.entry ], [ %1, %3 ]
  %37 = load ptr, ptr %memberidx, align 8
  %38 = load ptr, ptr %37, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %38, i64 0, i32 1
  %39 = load ptr, ptr %memberidx5, align 8
  %40 = call ptr %39(ptr nonnull %37, ptr nonnull %filepath.0)
  %41 = load i64, ptr %40, align 4
  %42 = load ptr, ptr %0, align 8
  %memberidx8 = getelementptr inbounds %Program, ptr %42, i64 0, i32 1
  %43 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %Array_Module_, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx9, align 4
  %45 = icmp slt i64 %41, %44
  br i1 %45, label %if.entry10, label %ifend12

common.ret:                                       ; preds = %ifend31, %ifend26, %ifend18, %ifend34, %TypeChecker_error.exit, %if.entry10
  %common.ret.op = phi ptr [ %47, %if.entry10 ], [ null, %TypeChecker_error.exit ], [ %84, %ifend34 ], [ null, %ifend18 ], [ null, %ifend26 ], [ null, %ifend31 ]
  ret ptr %common.ret.op

if.entry10:                                       ; preds = %ifend
  %memberidx.i.i67 = getelementptr inbounds %Array_Module_, ptr %43, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i.i67, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %46, i64 %41
  %47 = load ptr, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend12:                                          ; preds = %ifend
  %48 = load ptr, ptr %memberidx, align 8
  %49 = load ptr, ptr %48, align 8
  %memberidx15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %49, i64 0, i32 2
  %50 = load ptr, ptr %memberidx15, align 8
  %51 = call i1 %50(ptr nonnull %48, ptr nonnull %40)
  br i1 %51, label %ifend18, label %if.entry16

if.entry16:                                       ; preds = %ifend12
  %52 = load ptr, ptr %1, align 8
  %memberidx19 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %52, i64 0, i32 5
  %53 = load ptr, ptr %memberidx19, align 8
  %54 = call ptr %53(ptr nonnull %1)
  %55 = alloca ptr, align 8
  %56 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %55, ptr nonnull @33, ptr %54)
  %57 = load ptr, ptr %55, align 8
  %58 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i68 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i68, align 8
  %memberidx1.i69 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i69, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 %56, ptr %memberidx2.i, align 4
  tail call void @free(ptr %54)
  %59 = load ptr, ptr %memberidx, align 8
  %memberidx1.i71 = getelementptr inbounds %Compiler, ptr %59, i64 0, i32 6
  %60 = load ptr, ptr %memberidx1.i71, align 8
  %61 = call ptr @malloc(i32 24)
  store i64 3, ptr %61, align 4
  %memberidx1.i.i72 = getelementptr inbounds %FloError, ptr %61, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i.i72, align 8
  %memberidx2.i.i73 = getelementptr inbounds %FloError, ptr %61, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i73, align 8
  %memberidx.i.i74 = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 2
  %62 = load i64, ptr %memberidx.i.i74, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 3
  %63 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %62, %63
  br i1 %.not.i.i, label %if.entry16.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry16.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry16
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 1
  %.pre87 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry16
  %64 = shl nuw i64 %63, 1
  store i64 %64, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i76 = getelementptr inbounds %Array_FloError_, ptr %60, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i.i.i76, align 8
  %66 = shl i64 %63, 4
  %67 = call ptr @realloc(ptr %65, i64 %66)
  store ptr %67, ptr %memberidx2.i.i.i76, align 8
  %.pre = load i64, ptr %memberidx.i.i74, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry16.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %68 = phi ptr [ %.pre87, %if.entry16.TypeChecker_error.exit_crit_edge ], [ %67, %if.entry.i.i ]
  %69 = phi i64 [ %62, %if.entry16.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %70 = add nsw i64 %69, 1
  store i64 %70, ptr %memberidx.i.i74, align 4
  %ptridx.i.i77 = getelementptr inbounds ptr, ptr %68, i64 %69
  store ptr %61, ptr %ptridx.i.i77, align 8
  br label %common.ret

ifend18:                                          ; preds = %ifend12
  %71 = load ptr, ptr %memberidx, align 8
  %memberidx21 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 3
  %72 = load ptr, ptr %memberidx21, align 8
  %memberidx23 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 6
  %73 = load ptr, ptr %memberidx23, align 8
  %74 = call fastcc ptr @Lexer_tokenize(ptr %72, ptr %73)
  %75 = load ptr, ptr %memberidx, align 8
  %memberidx1.i79 = getelementptr inbounds %Compiler, ptr %75, i64 0, i32 6
  %76 = load ptr, ptr %memberidx1.i79, align 8
  %memberidx2.i80 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 2
  %77 = load i64, ptr %memberidx2.i80, align 4
  %78 = icmp sgt i64 %77, 0
  br i1 %78, label %common.ret, label %ifend26

ifend26:                                          ; preds = %ifend18
  %79 = call fastcc ptr @Parser_parse(ptr %74, ptr nonnull %76)
  %80 = load ptr, ptr %memberidx, align 8
  %memberidx1.i82 = getelementptr inbounds %Compiler, ptr %80, i64 0, i32 6
  %81 = load ptr, ptr %memberidx1.i82, align 8
  %memberidx2.i83 = getelementptr inbounds %Array_FloError_, ptr %81, i64 0, i32 2
  %82 = load i64, ptr %memberidx2.i83, align 4
  %83 = icmp sgt i64 %82, 0
  br i1 %83, label %common.ret, label %ifend31

ifend31:                                          ; preds = %ifend26
  %84 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %0, ptr %79, ptr nonnull %filepath.0)
  %85 = load ptr, ptr %memberidx, align 8
  %memberidx1.i85 = getelementptr inbounds %Compiler, ptr %85, i64 0, i32 6
  %86 = load ptr, ptr %memberidx1.i85, align 8
  %memberidx2.i86 = getelementptr inbounds %Array_FloError_, ptr %86, i64 0, i32 2
  %87 = load i64, ptr %memberidx2.i86, align 4
  %88 = icmp sgt i64 %87, 0
  br i1 %88, label %common.ret, label %ifend34

ifend34:                                          ; preds = %ifend31
  %89 = load ptr, ptr %85, align 8
  %memberidx36 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %89, i64 0, i32 2
  %90 = load ptr, ptr %memberidx36, align 8
  %91 = call i1 %90(ptr nonnull %85, ptr %6)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_fields(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 3
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx2343 = getelementptr inbounds %Array_FieldNode_, ptr %3, i64 0, i32 2
  %4 = load i64, ptr %memberidx2343, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %6 = load i64, ptr %memberidx, align 4
  %memberidx.i178 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %memberidx21 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx92 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx99 = getelementptr inbounds %Class, ptr %1, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassField____sl__.exit
  %7 = phi ptr [ %3, %for.body.lr.ph ], [ %206, %Array_ClassField____sl__.exit ]
  %current_vtable_index.0345 = phi i64 [ %6, %for.body.lr.ph ], [ %current_vtable_index.1, %Array_ClassField____sl__.exit ]
  %i.0344 = phi i64 [ 0, %for.body.lr.ph ], [ %205, %Array_ClassField____sl__.exit ]
  %memberidx.i = getelementptr inbounds %Array_FieldNode_, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %8, i64 %i.0344
  %9 = load ptr, ptr %ptridx.i, align 8
  %10 = tail call ptr @malloc(i32 49)
  %memberidx.i173 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 1
  store i1 false, ptr %memberidx.i173, align 1
  %memberidx4 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 3
  %11 = load ptr, ptr %9, align 8
  %memberidx6 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx6, align 8
  store ptr %12, ptr %memberidx4, align 8
  %13 = call fastcc i1 @is_operator_overload_name(ptr %12)
  br i1 %13, label %if.entry, label %ifend

common.ret:                                       ; preds = %Array_ClassField____sl__.exit, %ifend, %if.entry62, %for.entry, %TypeChecker_error.exit320, %TypeChecker_error.exit276, %TypeChecker_error.exit255, %TypeChecker_error.exit209
  ret void

if.entry:                                         ; preds = %for.body
  %14 = load ptr, ptr %memberidx4, align 8
  %15 = call ptr @malloc(i32 75)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %15, ptr noundef nonnull align 8 dereferenceable(75) @126, i64 75, i1 false)
  %16 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %16, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 1
  store ptr %15, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 2
  store i64 75, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %16, i64 0, i32 3
  store i64 75, ptr %memberidx2.i.i, align 4
  %memberidx.i174 = getelementptr inbounds %string, ptr %14, i64 0, i32 2
  %17 = load i64, ptr %memberidx.i174, align 4
  %18 = add nuw i64 %17, 75
  %19 = trunc i64 %18 to i32
  %20 = call ptr @malloc(i32 %19)
  %memberidx2.i = getelementptr inbounds %string, ptr %14, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load i64, ptr %memberidx.i174, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %21, i64 %22, i1 false)
  %23 = getelementptr inbounds i8, ptr %20, i64 %22
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %23, ptr noundef nonnull align 8 dereferenceable(75) %15, i64 75, i1 false)
  %24 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %24, align 8
  %memberidx.i.i175 = getelementptr inbounds %string, ptr %24, i64 0, i32 1
  store ptr %20, ptr %memberidx.i.i175, align 8
  %memberidx1.i.i176 = getelementptr inbounds %string, ptr %24, i64 0, i32 2
  store i64 %18, ptr %memberidx1.i.i176, align 4
  %memberidx2.i.i177 = getelementptr inbounds %string, ptr %24, i64 0, i32 3
  store i64 %18, ptr %memberidx2.i.i177, align 4
  %25 = load ptr, ptr %9, align 8
  %memberidx10 = getelementptr inbounds %Token, ptr %25, i64 0, i32 1
  %26 = load ptr, ptr %memberidx10, align 8
  %27 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i179 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 6
  %28 = load ptr, ptr %memberidx1.i179, align 8
  %29 = call ptr @malloc(i32 24)
  store i64 1, ptr %29, align 4
  %memberidx1.i.i180 = getelementptr inbounds %FloError, ptr %29, i64 0, i32 2
  store ptr %26, ptr %memberidx1.i.i180, align 8
  %memberidx2.i.i181 = getelementptr inbounds %FloError, ptr %29, i64 0, i32 1
  store ptr %24, ptr %memberidx2.i.i181, align 8
  %memberidx.i.i182 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i182, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 3
  %31 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %30, %31
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %.pre356 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %32 = shl nuw i64 %31, 1
  store i64 %32, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %33 = load ptr, ptr %memberidx2.i.i.i, align 8
  %34 = shl i64 %31, 4
  %35 = call ptr @realloc(ptr %33, i64 %34)
  store ptr %35, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i182, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %36 = phi ptr [ %.pre356, %if.entry.TypeChecker_error.exit_crit_edge ], [ %35, %if.entry.i.i ]
  %37 = phi i64 [ %30, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %38 = add nsw i64 %37, 1
  store i64 %38, ptr %memberidx.i.i182, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %36, i64 %37
  store ptr %29, ptr %ptridx.i.i, align 8
  br label %ifend

ifend:                                            ; preds = %for.body, %TypeChecker_error.exit
  %memberidx11 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 2
  %memberidx12 = getelementptr inbounds %FieldNode, ptr %9, i64 0, i32 1
  %39 = load i64, ptr %memberidx12, align 4
  store i64 %39, ptr %memberidx11, align 4
  %40 = tail call ptr @malloc(i32 24)
  %41 = load ptr, ptr %1, align 8
  store i64 1, ptr %40, align 4
  %memberidx1.i183 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 1
  store ptr %41, ptr %memberidx1.i183, align 8
  %memberidx2.i184 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  store i64 %i.0344, ptr %memberidx2.i184, align 4
  store ptr %40, ptr %10, align 8
  %memberidx15 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 4
  %memberidx16 = getelementptr inbounds %FieldNode, ptr %9, i64 0, i32 3
  %42 = load ptr, ptr %memberidx16, align 8
  %43 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %42)
  store ptr %43, ptr %memberidx15, align 8
  %memberidx17 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 6
  store i64 %current_vtable_index.0345, ptr %memberidx17, align 4
  %44 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i186 = getelementptr inbounds %Compiler, ptr %44, i64 0, i32 6
  %45 = load ptr, ptr %memberidx1.i186, align 8
  %memberidx2.i187 = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 2
  %46 = load i64, ptr %memberidx2.i187, align 4
  %47 = icmp sgt i64 %46, 0
  br i1 %47, label %common.ret, label %ifend20

ifend20:                                          ; preds = %ifend
  %48 = load ptr, ptr %memberidx21, align 8
  %49 = load ptr, ptr %memberidx4, align 8
  %50 = call fastcc i64 @Map_string_PropId__hash_fnc(ptr %49)
  %memberidx.i188 = getelementptr inbounds %Map_string_PropId_, ptr %48, i64 0, i32 1
  %51 = load i64, ptr %memberidx.i188, align 4
  %52 = urem i64 %50, %51
  %53 = load ptr, ptr %48, align 8
  %ptridx.i189 = getelementptr inbounds ptr, ptr %53, i64 %52
  %54 = load ptr, ptr %ptridx.i189, align 8
  %.not.i = icmp eq ptr %54, null
  br i1 %.not.i, label %ifend25, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend20
  %memberidx1.i.i191 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %55 = phi ptr [ %65, %else.i ], [ %53, %while.entry.i.preheader ]
  %56 = phi i64 [ %66, %else.i ], [ %51, %while.entry.i.preheader ]
  %57 = phi ptr [ %69, %else.i ], [ %54, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %68, %else.i ], [ %52, %while.entry.i.preheader ]
  %58 = load ptr, ptr %57, align 8
  %memberidx.i.i190 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  %59 = load i64, ptr %memberidx.i.i190, align 4
  %60 = load i64, ptr %memberidx1.i.i191, align 4
  %.not.i.i192 = icmp eq i64 %59, %60
  br i1 %.not.i.i192, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i193 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  %61 = load ptr, ptr %memberidx2.i.i193, align 8
  %62 = load ptr, ptr %memberidx3.i.i, align 8
  %63 = call i64 @memcmp(ptr %61, ptr %62, i64 %59)
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre357 = load i64, ptr %memberidx.i188, align 4
  %.pre358 = load ptr, ptr %48, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre359.pre = load ptr, ptr %48, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre359.pre, i64 %hash.0.i
  %.pre360.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre360.pre, null
  br i1 %.not29.i, label %ifend25, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %65 = phi ptr [ %.pre358, %ifend.i.i.else.i_crit_edge ], [ %55, %while.entry.i ]
  %66 = phi i64 [ %.pre357, %ifend.i.i.else.i_crit_edge ], [ %56, %while.entry.i ]
  %67 = add nuw i64 %hash.0.i, 1
  %68 = urem i64 %67, %66
  %ptridx7.i = getelementptr inbounds ptr, ptr %65, i64 %68
  %69 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %69, null
  br i1 %.not30.i, label %ifend25, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre360.pre, i64 0, i32 1
  %70 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %70, null
  br i1 %.not, label %ifend25, label %if.entry23

if.entry23:                                       ; preds = %Map_string_PropId____getitem__.exit
  %memberidx26 = getelementptr inbounds %PropId, ptr %70, i64 0, i32 1
  %71 = load ptr, ptr %memberidx26, align 8
  %72 = load ptr, ptr %1, align 8
  %73 = icmp eq ptr %71, %72
  br i1 %73, label %if.entry28, label %ifend30

ifend25:                                          ; preds = %else.i, %ifend20, %while.end.i, %ifend42, %Map_string_PropId____getitem__.exit
  %memberidx61 = getelementptr inbounds %FieldNode, ptr %9, i64 0, i32 2
  %74 = load ptr, ptr %memberidx61, align 8
  %.not171 = icmp eq ptr %74, null
  br i1 %.not171, label %else63, label %if.entry62

if.entry28:                                       ; preds = %if.entry23
  %75 = load ptr, ptr %memberidx4, align 8
  %76 = load ptr, ptr %75, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %76, i64 0, i32 5
  %77 = load ptr, ptr %memberidx32, align 8
  %78 = call ptr %77(ptr nonnull %75)
  %memberidx33 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %79 = load ptr, ptr %memberidx33, align 8
  %80 = load ptr, ptr %79, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %80, i64 0, i32 5
  %81 = load ptr, ptr %memberidx34, align 8
  %82 = call ptr %81(ptr nonnull %79)
  %83 = alloca ptr, align 8
  %84 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %83, ptr nonnull @127, ptr %78, ptr %82)
  %85 = load ptr, ptr %83, align 8
  %86 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %86, align 8
  %memberidx.i194 = getelementptr inbounds %string, ptr %86, i64 0, i32 1
  store ptr %85, ptr %memberidx.i194, align 8
  %memberidx1.i195 = getelementptr inbounds %string, ptr %86, i64 0, i32 2
  store i64 %84, ptr %memberidx1.i195, align 4
  %memberidx2.i196 = getelementptr inbounds %string, ptr %86, i64 0, i32 3
  store i64 %84, ptr %memberidx2.i196, align 4
  tail call void @free(ptr %78)
  tail call void @free(ptr %82)
  %87 = load ptr, ptr %9, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %87, i64 0, i32 1
  %88 = load ptr, ptr %memberidx36, align 8
  %89 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i198 = getelementptr inbounds %Compiler, ptr %89, i64 0, i32 6
  %90 = load ptr, ptr %memberidx1.i198, align 8
  %91 = call ptr @malloc(i32 24)
  store i64 1, ptr %91, align 4
  %memberidx1.i.i199 = getelementptr inbounds %FloError, ptr %91, i64 0, i32 2
  store ptr %88, ptr %memberidx1.i.i199, align 8
  %memberidx2.i.i200 = getelementptr inbounds %FloError, ptr %91, i64 0, i32 1
  store ptr %86, ptr %memberidx2.i.i200, align 8
  %memberidx.i.i201 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 2
  %92 = load i64, ptr %memberidx.i.i201, align 4
  %memberidx1.i2.i202 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 3
  %93 = load i64, ptr %memberidx1.i2.i202, align 4
  %.not.i.i203 = icmp slt i64 %92, %93
  br i1 %.not.i.i203, label %if.entry28.TypeChecker_error.exit209_crit_edge, label %if.entry.i.i206

if.entry28.TypeChecker_error.exit209_crit_edge:   ; preds = %if.entry28
  %memberidx4.i.i207.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 1
  %.pre366 = load ptr, ptr %memberidx4.i.i207.phi.trans.insert, align 8
  br label %TypeChecker_error.exit209

if.entry.i.i206:                                  ; preds = %if.entry28
  %94 = shl nuw i64 %93, 1
  store i64 %94, ptr %memberidx1.i2.i202, align 4
  %memberidx2.i.i.i205 = getelementptr inbounds %Array_FloError_, ptr %90, i64 0, i32 1
  %95 = load ptr, ptr %memberidx2.i.i.i205, align 8
  %96 = shl i64 %93, 4
  %97 = call ptr @realloc(ptr %95, i64 %96)
  store ptr %97, ptr %memberidx2.i.i.i205, align 8
  %.pre365 = load i64, ptr %memberidx.i.i201, align 4
  br label %TypeChecker_error.exit209

TypeChecker_error.exit209:                        ; preds = %if.entry28.TypeChecker_error.exit209_crit_edge, %if.entry.i.i206
  %98 = phi ptr [ %.pre366, %if.entry28.TypeChecker_error.exit209_crit_edge ], [ %97, %if.entry.i.i206 ]
  %99 = phi i64 [ %92, %if.entry28.TypeChecker_error.exit209_crit_edge ], [ %.pre365, %if.entry.i.i206 ]
  %100 = add nsw i64 %99, 1
  store i64 %100, ptr %memberidx.i.i201, align 4
  %ptridx.i.i208 = getelementptr inbounds ptr, ptr %98, i64 %99
  store ptr %91, ptr %ptridx.i.i208, align 8
  br label %common.ret

ifend30:                                          ; preds = %if.entry23
  %101 = load ptr, ptr %0, align 8
  %memberidx.i.i.i211 = getelementptr inbounds %Program, ptr %101, i64 0, i32 1
  %102 = load ptr, ptr %memberidx.i.i.i211, align 8
  %103 = load i64, ptr %71, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %102, i64 0, i32 1
  %104 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %104, i64 %103
  %105 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i212 = getelementptr inbounds %Module, ptr %105, i64 0, i32 3
  %106 = load ptr, ptr %memberidx2.i.i.i212, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %71, i64 0, i32 2
  %107 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %106, i64 0, i32 1
  %108 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %108, i64 %107
  %109 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %110 = load i64, ptr %70, align 4
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %if.entry.i233, label %ifend.i239

if.entry.i233:                                    ; preds = %ifend30
  %memberidx1.i214 = getelementptr inbounds %Class, ptr %109, i64 0, i32 5
  %112 = load ptr, ptr %memberidx1.i214, align 8
  %memberidx2.i215 = getelementptr inbounds %PropId, ptr %70, i64 0, i32 2
  %113 = load i64, ptr %memberidx2.i215, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %112, i64 0, i32 1
  %114 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %114, i64 %113
  %115 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %115, i64 0, i32 4
  %memberidx3.i232 = getelementptr inbounds %ClassMethod, ptr %115, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i239:                                       ; preds = %ifend30
  %memberidx4.i = getelementptr inbounds %Class, ptr %109, i64 0, i32 4
  %116 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i216 = getelementptr inbounds %PropId, ptr %70, i64 0, i32 2
  %117 = load i64, ptr %memberidx5.i216, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %116, i64 0, i32 1
  %118 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i217 = getelementptr inbounds ptr, ptr %118, i64 %117
  %119 = load ptr, ptr %ptridx.i.i217, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %119, i64 0, i32 4
  %memberidx6.i238 = getelementptr inbounds %ClassField, ptr %119, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i233, %ifend.i239
  %common.ret.op.i213330.in = phi ptr [ %memberidx3.i, %if.entry.i233 ], [ %memberidx6.i, %ifend.i239 ]
  %common.ret.op.in.i226 = phi ptr [ %memberidx3.i232, %if.entry.i233 ], [ %memberidx6.i238, %ifend.i239 ]
  %common.ret.op.i213330 = load ptr, ptr %common.ret.op.i213330.in, align 8
  %common.ret.op.i227 = load i64, ptr %common.ret.op.in.i226, align 4
  %120 = load ptr, ptr %memberidx15, align 8
  %121 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i213330, ptr %120)
  br i1 %121, label %ifend42, label %if.entry40

if.entry40:                                       ; preds = %get_class_prop_visibility.exit
  %122 = load ptr, ptr %memberidx4, align 8
  %123 = load ptr, ptr %122, align 8
  %memberidx44 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %123, i64 0, i32 5
  %124 = load ptr, ptr %memberidx44, align 8
  %125 = call ptr %124(ptr nonnull %122)
  %memberidx45 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %126 = load ptr, ptr %memberidx45, align 8
  %127 = load ptr, ptr %126, align 8
  %memberidx46 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %127, i64 0, i32 5
  %128 = load ptr, ptr %memberidx46, align 8
  %129 = call ptr %128(ptr nonnull %126)
  %130 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i213330)
  %131 = load ptr, ptr %130, align 8
  %memberidx47 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %131, i64 0, i32 5
  %132 = load ptr, ptr %memberidx47, align 8
  %133 = call ptr %132(ptr nonnull %130)
  %134 = alloca ptr, align 8
  %135 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %134, ptr nonnull @128, ptr %125, ptr %129, ptr %133)
  %136 = load ptr, ptr %134, align 8
  %137 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %137, align 8
  %memberidx.i240 = getelementptr inbounds %string, ptr %137, i64 0, i32 1
  store ptr %136, ptr %memberidx.i240, align 8
  %memberidx1.i241 = getelementptr inbounds %string, ptr %137, i64 0, i32 2
  store i64 %135, ptr %memberidx1.i241, align 4
  %memberidx2.i242 = getelementptr inbounds %string, ptr %137, i64 0, i32 3
  store i64 %135, ptr %memberidx2.i242, align 4
  tail call void @free(ptr %125)
  tail call void @free(ptr %129)
  tail call void @free(ptr %133)
  %138 = load ptr, ptr %9, align 8
  %memberidx49 = getelementptr inbounds %Token, ptr %138, i64 0, i32 1
  %139 = load ptr, ptr %memberidx49, align 8
  %140 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i244 = getelementptr inbounds %Compiler, ptr %140, i64 0, i32 6
  %141 = load ptr, ptr %memberidx1.i244, align 8
  %142 = call ptr @malloc(i32 24)
  store i64 5, ptr %142, align 4
  %memberidx1.i.i245 = getelementptr inbounds %FloError, ptr %142, i64 0, i32 2
  store ptr %139, ptr %memberidx1.i.i245, align 8
  %memberidx2.i.i246 = getelementptr inbounds %FloError, ptr %142, i64 0, i32 1
  store ptr %137, ptr %memberidx2.i.i246, align 8
  %memberidx.i.i247 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 2
  %143 = load i64, ptr %memberidx.i.i247, align 4
  %memberidx1.i2.i248 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 3
  %144 = load i64, ptr %memberidx1.i2.i248, align 4
  %.not.i.i249 = icmp slt i64 %143, %144
  br i1 %.not.i.i249, label %if.entry40.TypeChecker_error.exit255_crit_edge, label %if.entry.i.i252

if.entry40.TypeChecker_error.exit255_crit_edge:   ; preds = %if.entry40
  %memberidx4.i.i253.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 1
  %.pre362 = load ptr, ptr %memberidx4.i.i253.phi.trans.insert, align 8
  br label %TypeChecker_error.exit255

if.entry.i.i252:                                  ; preds = %if.entry40
  %145 = shl nuw i64 %144, 1
  store i64 %145, ptr %memberidx1.i2.i248, align 4
  %memberidx2.i.i.i251 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 1
  %146 = load ptr, ptr %memberidx2.i.i.i251, align 8
  %147 = shl i64 %144, 4
  %148 = call ptr @realloc(ptr %146, i64 %147)
  store ptr %148, ptr %memberidx2.i.i.i251, align 8
  %.pre361 = load i64, ptr %memberidx.i.i247, align 4
  br label %TypeChecker_error.exit255

TypeChecker_error.exit255:                        ; preds = %if.entry40.TypeChecker_error.exit255_crit_edge, %if.entry.i.i252
  %149 = phi ptr [ %.pre362, %if.entry40.TypeChecker_error.exit255_crit_edge ], [ %148, %if.entry.i.i252 ]
  %150 = phi i64 [ %143, %if.entry40.TypeChecker_error.exit255_crit_edge ], [ %.pre361, %if.entry.i.i252 ]
  %151 = add nsw i64 %150, 1
  store i64 %151, ptr %memberidx.i.i247, align 4
  %ptridx.i.i254 = getelementptr inbounds ptr, ptr %149, i64 %150
  store ptr %142, ptr %ptridx.i.i254, align 8
  br label %common.ret

ifend42:                                          ; preds = %get_class_prop_visibility.exit
  %152 = load i64, ptr %memberidx11, align 4
  %.not172 = icmp eq i64 %152, %common.ret.op.i227
  br i1 %.not172, label %ifend25, label %if.entry51

if.entry51:                                       ; preds = %ifend42
  %153 = load ptr, ptr %memberidx4, align 8
  %154 = load ptr, ptr %153, align 8
  %memberidx55 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %154, i64 0, i32 5
  %155 = load ptr, ptr %memberidx55, align 8
  %156 = call ptr %155(ptr nonnull %153)
  %memberidx56 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %157 = load ptr, ptr %memberidx56, align 8
  %158 = load ptr, ptr %157, align 8
  %memberidx57 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %158, i64 0, i32 5
  %159 = load ptr, ptr %memberidx57, align 8
  %160 = call ptr %159(ptr nonnull %157)
  switch i64 %common.ret.op.i227, label %ifend3.i [
    i64 1, label %if.entry.i259
    i64 2, label %if.entry1.i
  ]

if.entry.i259:                                    ; preds = %if.entry51
  %161 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %161, ptr noundef nonnull align 8 dereferenceable(7) @44, i64 7, i1 false)
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry51
  %162 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %162, ptr noundef nonnull align 8 dereferenceable(6) @45, i64 6, i1 false)
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry51
  %163 = call ptr @malloc(i32 9)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %163, ptr noundef nonnull align 8 dereferenceable(9) @46, i64 9, i1 false)
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i259, %if.entry1.i, %ifend3.i
  %.sink390 = phi ptr [ %161, %if.entry.i259 ], [ %162, %if.entry1.i ], [ %163, %ifend3.i ]
  %.sink388 = phi i64 [ 7, %if.entry.i259 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %164 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %164, align 8
  %memberidx.i.i.i257 = getelementptr inbounds %string, ptr %164, i64 0, i32 1
  store ptr %.sink390, ptr %memberidx.i.i.i257, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %164, i64 0, i32 2
  store i64 %.sink388, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i258 = getelementptr inbounds %string, ptr %164, i64 0, i32 3
  store i64 %.sink388, ptr %memberidx2.i.i.i258, align 4
  %165 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %166 = call ptr %165(ptr nonnull %164)
  %167 = alloca ptr, align 8
  %168 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %167, ptr nonnull @129, ptr %156, ptr %160, ptr %166)
  %169 = load ptr, ptr %167, align 8
  %170 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %170, align 8
  %memberidx.i261 = getelementptr inbounds %string, ptr %170, i64 0, i32 1
  store ptr %169, ptr %memberidx.i261, align 8
  %memberidx1.i262 = getelementptr inbounds %string, ptr %170, i64 0, i32 2
  store i64 %168, ptr %memberidx1.i262, align 4
  %memberidx2.i263 = getelementptr inbounds %string, ptr %170, i64 0, i32 3
  store i64 %168, ptr %memberidx2.i263, align 4
  tail call void @free(ptr %156)
  tail call void @free(ptr %160)
  tail call void @free(ptr %166)
  %171 = load ptr, ptr %9, align 8
  %memberidx60 = getelementptr inbounds %Token, ptr %171, i64 0, i32 1
  %172 = load ptr, ptr %memberidx60, align 8
  %173 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i265 = getelementptr inbounds %Compiler, ptr %173, i64 0, i32 6
  %174 = load ptr, ptr %memberidx1.i265, align 8
  %175 = call ptr @malloc(i32 24)
  store i64 4, ptr %175, align 4
  %memberidx1.i.i266 = getelementptr inbounds %FloError, ptr %175, i64 0, i32 2
  store ptr %172, ptr %memberidx1.i.i266, align 8
  %memberidx2.i.i267 = getelementptr inbounds %FloError, ptr %175, i64 0, i32 1
  store ptr %170, ptr %memberidx2.i.i267, align 8
  %memberidx.i.i268 = getelementptr inbounds %Array_FloError_, ptr %174, i64 0, i32 2
  %176 = load i64, ptr %memberidx.i.i268, align 4
  %memberidx1.i2.i269 = getelementptr inbounds %Array_FloError_, ptr %174, i64 0, i32 3
  %177 = load i64, ptr %memberidx1.i2.i269, align 4
  %.not.i.i270 = icmp slt i64 %176, %177
  br i1 %.not.i.i270, label %dump_access.exit.TypeChecker_error.exit276_crit_edge, label %if.entry.i.i273

dump_access.exit.TypeChecker_error.exit276_crit_edge: ; preds = %dump_access.exit
  %memberidx4.i.i274.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %174, i64 0, i32 1
  %.pre364 = load ptr, ptr %memberidx4.i.i274.phi.trans.insert, align 8
  br label %TypeChecker_error.exit276

if.entry.i.i273:                                  ; preds = %dump_access.exit
  %178 = shl nuw i64 %177, 1
  store i64 %178, ptr %memberidx1.i2.i269, align 4
  %memberidx2.i.i.i272 = getelementptr inbounds %Array_FloError_, ptr %174, i64 0, i32 1
  %179 = load ptr, ptr %memberidx2.i.i.i272, align 8
  %180 = shl i64 %177, 4
  %181 = call ptr @realloc(ptr %179, i64 %180)
  store ptr %181, ptr %memberidx2.i.i.i272, align 8
  %.pre363 = load i64, ptr %memberidx.i.i268, align 4
  br label %TypeChecker_error.exit276

TypeChecker_error.exit276:                        ; preds = %dump_access.exit.TypeChecker_error.exit276_crit_edge, %if.entry.i.i273
  %182 = phi ptr [ %.pre364, %dump_access.exit.TypeChecker_error.exit276_crit_edge ], [ %181, %if.entry.i.i273 ]
  %183 = phi i64 [ %176, %dump_access.exit.TypeChecker_error.exit276_crit_edge ], [ %.pre363, %if.entry.i.i273 ]
  %184 = add nsw i64 %183, 1
  store i64 %184, ptr %memberidx.i.i268, align 4
  %ptridx.i.i275 = getelementptr inbounds ptr, ptr %182, i64 %183
  store ptr %175, ptr %ptridx.i.i275, align 8
  br label %common.ret

if.entry62:                                       ; preds = %ifend25
  %memberidx65 = getelementptr inbounds %ClassField, ptr %10, i64 0, i32 5
  %185 = load ptr, ptr %memberidx15, align 8
  %186 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %185, ptr nonnull %74)
  store ptr %186, ptr %memberidx65, align 8
  %187 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i278 = getelementptr inbounds %Compiler, ptr %187, i64 0, i32 6
  %188 = load ptr, ptr %memberidx1.i278, align 8
  %memberidx2.i279 = getelementptr inbounds %Array_FloError_, ptr %188, i64 0, i32 2
  %189 = load i64, ptr %memberidx2.i279, align 4
  %190 = icmp sgt i64 %189, 0
  br i1 %190, label %common.ret, label %ifend70

else63:                                           ; preds = %ifend25
  store i1 false, ptr %memberidx.i173, align 1
  %191 = load ptr, ptr %memberidx21, align 8
  %192 = load ptr, ptr %memberidx4, align 8
  %193 = load ptr, ptr %10, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %191, ptr %192, ptr %193)
  %194 = add nsw i64 %current_vtable_index.0345, 1
  br label %ifend64

ifend64:                                          ; preds = %else63, %ifend88
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.0345, %ifend88 ], [ %194, %else63 ]
  %195 = load ptr, ptr %memberidx99, align 8
  %memberidx.i280 = getelementptr inbounds %Array_ClassField_, ptr %195, i64 0, i32 2
  %196 = load i64, ptr %memberidx.i280, align 4
  %memberidx1.i281 = getelementptr inbounds %Array_ClassField_, ptr %195, i64 0, i32 3
  %197 = load i64, ptr %memberidx1.i281, align 4
  %.not.i282 = icmp slt i64 %196, %197
  br i1 %.not.i282, label %ifend64.Array_ClassField____sl__.exit_crit_edge, label %if.entry.i285

ifend64.Array_ClassField____sl__.exit_crit_edge:  ; preds = %ifend64
  %memberidx4.i286.phi.trans.insert = getelementptr inbounds %Array_ClassField_, ptr %195, i64 0, i32 1
  %.pre372 = load ptr, ptr %memberidx4.i286.phi.trans.insert, align 8
  br label %Array_ClassField____sl__.exit

if.entry.i285:                                    ; preds = %ifend64
  %198 = shl nuw i64 %197, 1
  store i64 %198, ptr %memberidx1.i281, align 4
  %memberidx2.i.i284 = getelementptr inbounds %Array_ClassField_, ptr %195, i64 0, i32 1
  %199 = load ptr, ptr %memberidx2.i.i284, align 8
  %200 = shl i64 %197, 4
  %201 = call ptr @realloc(ptr %199, i64 %200)
  store ptr %201, ptr %memberidx2.i.i284, align 8
  %.pre371 = load i64, ptr %memberidx.i280, align 4
  br label %Array_ClassField____sl__.exit

Array_ClassField____sl__.exit:                    ; preds = %ifend64.Array_ClassField____sl__.exit_crit_edge, %if.entry.i285
  %202 = phi ptr [ %.pre372, %ifend64.Array_ClassField____sl__.exit_crit_edge ], [ %201, %if.entry.i285 ]
  %203 = phi i64 [ %196, %ifend64.Array_ClassField____sl__.exit_crit_edge ], [ %.pre371, %if.entry.i285 ]
  %204 = add nsw i64 %203, 1
  store i64 %204, ptr %memberidx.i280, align 4
  %ptridx.i287 = getelementptr inbounds ptr, ptr %202, i64 %203
  store ptr %10, ptr %ptridx.i287, align 8
  %205 = add nuw nsw i64 %i.0344, 1
  %206 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FieldNode_, ptr %206, i64 0, i32 2
  %207 = load i64, ptr %memberidx2, align 4
  %208 = icmp slt i64 %205, %207
  br i1 %208, label %for.body, label %common.ret

ifend70:                                          ; preds = %if.entry62
  %209 = load ptr, ptr %memberidx15, align 8
  %memberidx73 = getelementptr inbounds %Expression, ptr %186, i64 0, i32 3
  %210 = load ptr, ptr %memberidx73, align 8
  %211 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %209, ptr %210)
  br i1 %211, label %ifend76, label %if.entry74

if.entry74:                                       ; preds = %ifend70
  %212 = load ptr, ptr %memberidx15, align 8
  %213 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %212)
  %214 = load ptr, ptr %213, align 8
  %memberidx78 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %214, i64 0, i32 5
  %215 = load ptr, ptr %memberidx78, align 8
  %216 = call ptr %215(ptr nonnull %213)
  %217 = load ptr, ptr %memberidx65, align 8
  %memberidx80 = getelementptr inbounds %Expression, ptr %217, i64 0, i32 3
  %218 = load ptr, ptr %memberidx80, align 8
  %219 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %218)
  %220 = load ptr, ptr %219, align 8
  %memberidx81 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %220, i64 0, i32 5
  %221 = load ptr, ptr %memberidx81, align 8
  %222 = call ptr %221(ptr nonnull %219)
  %223 = alloca ptr, align 8
  %224 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %223, ptr nonnull @130, ptr %216, ptr %222)
  %225 = load ptr, ptr %223, align 8
  %226 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %226, align 8
  %memberidx.i289 = getelementptr inbounds %string, ptr %226, i64 0, i32 1
  store ptr %225, ptr %memberidx.i289, align 8
  %memberidx1.i290 = getelementptr inbounds %string, ptr %226, i64 0, i32 2
  store i64 %224, ptr %memberidx1.i290, align 4
  %memberidx2.i291 = getelementptr inbounds %string, ptr %226, i64 0, i32 3
  store i64 %224, ptr %memberidx2.i291, align 4
  tail call void @free(ptr %216)
  tail call void @free(ptr %222)
  %227 = load ptr, ptr %memberidx61, align 8
  %228 = load ptr, ptr %227, align 8
  %229 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i293 = getelementptr inbounds %Compiler, ptr %229, i64 0, i32 6
  %230 = load ptr, ptr %memberidx1.i293, align 8
  %231 = call ptr @malloc(i32 24)
  store i64 5, ptr %231, align 4
  %memberidx1.i.i294 = getelementptr inbounds %FloError, ptr %231, i64 0, i32 2
  store ptr %228, ptr %memberidx1.i.i294, align 8
  %memberidx2.i.i295 = getelementptr inbounds %FloError, ptr %231, i64 0, i32 1
  store ptr %226, ptr %memberidx2.i.i295, align 8
  %memberidx.i.i296 = getelementptr inbounds %Array_FloError_, ptr %230, i64 0, i32 2
  %232 = load i64, ptr %memberidx.i.i296, align 4
  %memberidx1.i2.i297 = getelementptr inbounds %Array_FloError_, ptr %230, i64 0, i32 3
  %233 = load i64, ptr %memberidx1.i2.i297, align 4
  %.not.i.i298 = icmp slt i64 %232, %233
  br i1 %.not.i.i298, label %if.entry74.TypeChecker_error.exit304_crit_edge, label %if.entry.i.i301

if.entry74.TypeChecker_error.exit304_crit_edge:   ; preds = %if.entry74
  %memberidx4.i.i302.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %230, i64 0, i32 1
  %.pre368 = load ptr, ptr %memberidx4.i.i302.phi.trans.insert, align 8
  br label %TypeChecker_error.exit304

if.entry.i.i301:                                  ; preds = %if.entry74
  %234 = shl nuw i64 %233, 1
  store i64 %234, ptr %memberidx1.i2.i297, align 4
  %memberidx2.i.i.i300 = getelementptr inbounds %Array_FloError_, ptr %230, i64 0, i32 1
  %235 = load ptr, ptr %memberidx2.i.i.i300, align 8
  %236 = shl i64 %233, 4
  %237 = call ptr @realloc(ptr %235, i64 %236)
  store ptr %237, ptr %memberidx2.i.i.i300, align 8
  %.pre367 = load i64, ptr %memberidx.i.i296, align 4
  br label %TypeChecker_error.exit304

TypeChecker_error.exit304:                        ; preds = %if.entry74.TypeChecker_error.exit304_crit_edge, %if.entry.i.i301
  %238 = phi ptr [ %.pre368, %if.entry74.TypeChecker_error.exit304_crit_edge ], [ %237, %if.entry.i.i301 ]
  %239 = phi i64 [ %232, %if.entry74.TypeChecker_error.exit304_crit_edge ], [ %.pre367, %if.entry.i.i301 ]
  %240 = add nsw i64 %239, 1
  store i64 %240, ptr %memberidx.i.i296, align 4
  %ptridx.i.i303 = getelementptr inbounds ptr, ptr %238, i64 %239
  store ptr %231, ptr %ptridx.i.i303, align 8
  br label %ifend76

ifend76:                                          ; preds = %ifend70, %TypeChecker_error.exit304
  %241 = load ptr, ptr %memberidx65, align 8
  %memberidx85 = getelementptr inbounds %Expression, ptr %241, i64 0, i32 1
  %242 = load i1, ptr %memberidx85, align 1
  br i1 %242, label %ifend88, label %if.entry86

if.entry86:                                       ; preds = %ifend76
  %243 = call ptr @malloc(i32 45)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %243, ptr noundef nonnull align 8 dereferenceable(45) @131, i64 45, i1 false)
  %244 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %244, align 8
  %memberidx.i.i305 = getelementptr inbounds %string, ptr %244, i64 0, i32 1
  store ptr %243, ptr %memberidx.i.i305, align 8
  %memberidx1.i.i306 = getelementptr inbounds %string, ptr %244, i64 0, i32 2
  store i64 45, ptr %memberidx1.i.i306, align 4
  %memberidx2.i.i307 = getelementptr inbounds %string, ptr %244, i64 0, i32 3
  store i64 45, ptr %memberidx2.i.i307, align 4
  %245 = load ptr, ptr %memberidx61, align 8
  %246 = load ptr, ptr %245, align 8
  %247 = load ptr, ptr %memberidx.i178, align 8
  %memberidx1.i309 = getelementptr inbounds %Compiler, ptr %247, i64 0, i32 6
  %248 = load ptr, ptr %memberidx1.i309, align 8
  %249 = call ptr @malloc(i32 24)
  store i64 4, ptr %249, align 4
  %memberidx1.i.i310 = getelementptr inbounds %FloError, ptr %249, i64 0, i32 2
  store ptr %246, ptr %memberidx1.i.i310, align 8
  %memberidx2.i.i311 = getelementptr inbounds %FloError, ptr %249, i64 0, i32 1
  store ptr %244, ptr %memberidx2.i.i311, align 8
  %memberidx.i.i312 = getelementptr inbounds %Array_FloError_, ptr %248, i64 0, i32 2
  %250 = load i64, ptr %memberidx.i.i312, align 4
  %memberidx1.i2.i313 = getelementptr inbounds %Array_FloError_, ptr %248, i64 0, i32 3
  %251 = load i64, ptr %memberidx1.i2.i313, align 4
  %.not.i.i314 = icmp slt i64 %250, %251
  br i1 %.not.i.i314, label %if.entry86.TypeChecker_error.exit320_crit_edge, label %if.entry.i.i317

if.entry86.TypeChecker_error.exit320_crit_edge:   ; preds = %if.entry86
  %memberidx4.i.i318.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %248, i64 0, i32 1
  %.pre370 = load ptr, ptr %memberidx4.i.i318.phi.trans.insert, align 8
  br label %TypeChecker_error.exit320

if.entry.i.i317:                                  ; preds = %if.entry86
  %252 = shl nuw i64 %251, 1
  store i64 %252, ptr %memberidx1.i2.i313, align 4
  %memberidx2.i.i.i316 = getelementptr inbounds %Array_FloError_, ptr %248, i64 0, i32 1
  %253 = load ptr, ptr %memberidx2.i.i.i316, align 8
  %254 = shl i64 %251, 4
  %255 = call ptr @realloc(ptr %253, i64 %254)
  store ptr %255, ptr %memberidx2.i.i.i316, align 8
  %.pre369 = load i64, ptr %memberidx.i.i312, align 4
  br label %TypeChecker_error.exit320

TypeChecker_error.exit320:                        ; preds = %if.entry86.TypeChecker_error.exit320_crit_edge, %if.entry.i.i317
  %256 = phi ptr [ %.pre370, %if.entry86.TypeChecker_error.exit320_crit_edge ], [ %255, %if.entry.i.i317 ]
  %257 = phi i64 [ %250, %if.entry86.TypeChecker_error.exit320_crit_edge ], [ %.pre369, %if.entry.i.i317 ]
  %258 = add nsw i64 %257, 1
  store i64 %258, ptr %memberidx.i.i312, align 4
  %ptridx.i.i319 = getelementptr inbounds ptr, ptr %256, i64 %257
  store ptr %249, ptr %ptridx.i.i319, align 8
  br label %common.ret

ifend88:                                          ; preds = %ifend76
  store i1 true, ptr %memberidx.i173, align 1
  %259 = load ptr, ptr %memberidx92, align 8
  %260 = load ptr, ptr %memberidx4, align 8
  %261 = load ptr, ptr %10, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %259, ptr %260, ptr %261)
  br label %ifend64
}

define internal fastcc void @TypeChecker_check_module_import(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Array_Token__, ptr %4, i64 0, i32 2
  %5 = load i64, ptr %memberidx2, align 4
  %6 = icmp sgt i64 %5, 0
  br i1 %6, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry55, %else56, %for.end, %ifend, %TypeChecker_error.exit340, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %2
  %7 = tail call ptr @malloc(i32 51)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(51) %7, ptr noundef nonnull align 8 dereferenceable(51) @97, i64 51, i1 false)
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %8, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 1
  store ptr %7, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 2
  store i64 51, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %8, i64 0, i32 3
  store i64 51, ptr %memberidx2.i.i, align 4
  %9 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %11 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %11, i64 0, i32 6
  %12 = load ptr, ptr %memberidx1.i, align 8
  %13 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %13, align 4
  %memberidx1.i.i117 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 2
  store ptr %10, ptr %memberidx1.i.i117, align 8
  %memberidx2.i.i118 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 1
  store ptr %8, ptr %memberidx2.i.i118, align 8
  %memberidx.i.i119 = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 2
  %14 = load i64, ptr %memberidx.i.i119, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 3
  %15 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %14, %15
  br i1 %.not.i.i, label %if.entry.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry.TypeChecker_error.exit_crit_edge:        ; preds = %if.entry
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %.pre413 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry
  %16 = shl nuw i64 %15, 1
  store i64 %16, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i.i.i, align 8
  %18 = shl i64 %15, 4
  %19 = tail call ptr @realloc(ptr %17, i64 %18)
  store ptr %19, ptr %memberidx2.i.i.i, align 8
  %.pre412 = load i64, ptr %memberidx.i.i119, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %20 = phi ptr [ %.pre413, %if.entry.TypeChecker_error.exit_crit_edge ], [ %19, %if.entry.i.i ]
  %21 = phi i64 [ %14, %if.entry.TypeChecker_error.exit_crit_edge ], [ %.pre412, %if.entry.i.i ]
  %22 = add nsw i64 %21, 1
  store i64 %22, ptr %memberidx.i.i119, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %20, i64 %21
  store ptr %13, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend:                                            ; preds = %2
  %memberidx6 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 2
  %23 = load ptr, ptr %memberidx6, align 8
  %memberidx8 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %24 = load ptr, ptr %memberidx8, align 8
  %25 = tail call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %23, ptr %24)
  %memberidx.i120 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %26 = load ptr, ptr %memberidx.i120, align 8
  %memberidx1.i121 = getelementptr inbounds %Compiler, ptr %26, i64 0, i32 6
  %27 = load ptr, ptr %memberidx1.i121, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %27, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i, align 4
  %29 = icmp sgt i64 %28, 0
  br i1 %29, label %common.ret, label %ifend11

ifend11:                                          ; preds = %ifend
  %30 = load ptr, ptr %0, align 8
  %memberidx13 = getelementptr inbounds %Module, ptr %25, i64 0, i32 5
  %31 = load ptr, ptr %memberidx13, align 8
  %memberidx.i122 = getelementptr inbounds %Program, ptr %30, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i122, align 8
  %33 = load i64, ptr %31, align 4
  %memberidx.i.i123 = getelementptr inbounds %Array_Module_, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i.i123, align 8
  %ptridx.i.i124 = getelementptr inbounds ptr, ptr %34, i64 %33
  %35 = load ptr, ptr %ptridx.i.i124, align 8
  %memberidx2.i125 = getelementptr inbounds %Module, ptr %35, i64 0, i32 7
  %36 = load ptr, ptr %memberidx2.i125, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %31, i64 0, i32 1
  %37 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %38, i64 %37
  %39 = load ptr, ptr %ptridx.i6.i, align 8
  %40 = load ptr, ptr %1, align 8
  %memberidx15 = getelementptr inbounds %Array_ImportClause_, ptr %40, i64 0, i32 2
  %41 = load i64, ptr %memberidx15, align 4
  %42 = icmp sgt i64 %41, 0
  br i1 %42, label %for.entry, label %else17

else17:                                           ; preds = %ifend11
  %memberidx54 = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 2
  %43 = load ptr, ptr %memberidx54, align 8
  %.not = icmp eq ptr %43, null
  br i1 %.not, label %else56, label %if.entry55

for.entry:                                        ; preds = %ifend11
  %44 = tail call ptr @malloc(i32 25)
  %memberidx.i126 = getelementptr inbounds %Array_ImportClause_, ptr %40, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i126, align 8
  %46 = load i64, ptr %memberidx15, align 4
  store i1 false, ptr %44, align 1
  %memberidx1.i.i128 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %44, i64 0, i32 1
  %memberidx2.i.i129 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %44, i64 0, i32 3
  store ptr %45, ptr %memberidx2.i.i129, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %44, i64 0, i32 2
  store i64 %46, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i128, align 4
  %47 = icmp slt i64 %46, 1
  br i1 %47, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx26 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %memberidx30 = getelementptr inbounds %Scope, ptr %39, i64 0, i32 2
  %memberidx.i.i.i167 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %memberidx34 = getelementptr inbounds %Scope, ptr %39, i64 0, i32 4
  %memberidx38 = getelementptr inbounds %Scope, ptr %39, i64 0, i32 1
  %memberidx42 = getelementptr inbounds %Scope, ptr %39, i64 0, i32 3
  %memberidx46 = getelementptr inbounds %Scope, ptr %39, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %48 = phi i64 [ 1, %for.body.lr.ph ], [ %52, %for.incr ]
  %import_clause.0382.in = phi ptr [ %45, %for.body.lr.ph ], [ %ptridx.i134, %for.incr ]
  %import_clause.0382 = load ptr, ptr %import_clause.0382.in, align 8
  %49 = load ptr, ptr %import_clause.0382, align 8
  %memberidx22 = getelementptr inbounds %IdentifierToken, ptr %49, i64 0, i32 2
  %50 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %ImportClause, ptr %import_clause.0382, i64 0, i32 1
  %51 = load ptr, ptr %memberidx23, align 8
  %.not110 = icmp eq ptr %51, null
  br i1 %.not110, label %end, label %true_block

for.incr:                                         ; preds = %Map_string_Generic____getitem__.exit, %if.entry47, %if.entry43, %if.entry39, %if.entry35, %if.entry31
  %52 = add nuw nsw i64 %48, 1
  store i64 %52, ptr %memberidx1.i.i128, align 4
  %ptridx.i134 = getelementptr inbounds ptr, ptr %45, i64 %48
  %.not426 = icmp slt i64 %48, %46
  br i1 %.not426, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %for.entry
  tail call void @free(ptr nonnull %44)
  br label %common.ret

true_block:                                       ; preds = %for.body
  %memberidx25 = getelementptr inbounds %IdentifierToken, ptr %51, i64 0, i32 2
  %53 = load ptr, ptr %memberidx25, align 8
  br label %end

end:                                              ; preds = %for.body, %true_block
  %ternary = phi ptr [ %53, %true_block ], [ %50, %for.body ]
  %54 = load ptr, ptr %memberidx26, align 8
  %55 = tail call fastcc i64 @Map_string_Generic__hash_fnc(ptr %50)
  %memberidx.i136 = getelementptr inbounds %Map_string_Generic_, ptr %54, i64 0, i32 1
  %56 = load i64, ptr %memberidx.i136, align 4
  %57 = urem i64 %55, %56
  %58 = load ptr, ptr %54, align 8
  %ptridx.i137 = getelementptr inbounds ptr, ptr %58, i64 %57
  %59 = load ptr, ptr %ptridx.i137, align 8
  %.not.i = icmp eq ptr %59, null
  br i1 %.not.i, label %ifend29, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %end
  %memberidx1.i.i139 = getelementptr inbounds %string, ptr %50, i64 0, i32 2
  %memberidx3.i.i142 = getelementptr inbounds %string, ptr %50, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %60 = phi ptr [ %70, %else.i ], [ %58, %while.entry.i.preheader ]
  %61 = phi i64 [ %71, %else.i ], [ %56, %while.entry.i.preheader ]
  %62 = phi ptr [ %74, %else.i ], [ %59, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %73, %else.i ], [ %57, %while.entry.i.preheader ]
  %63 = load ptr, ptr %62, align 8
  %memberidx.i.i138 = getelementptr inbounds %string, ptr %63, i64 0, i32 2
  %64 = load i64, ptr %memberidx.i.i138, align 4
  %65 = load i64, ptr %memberidx1.i.i139, align 4
  %.not.i.i140 = icmp eq i64 %64, %65
  br i1 %.not.i.i140, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i141 = getelementptr inbounds %string, ptr %63, i64 0, i32 1
  %66 = load ptr, ptr %memberidx2.i.i141, align 8
  %67 = load ptr, ptr %memberidx3.i.i142, align 8
  %68 = tail call i64 @memcmp(ptr %66, ptr %67, i64 %64)
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i136, align 4
  %.pre387 = load ptr, ptr %54, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre388.pre = load ptr, ptr %54, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre388.pre, i64 %hash.0.i
  %.pre389.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre389.pre, null
  br i1 %.not29.i, label %ifend29, label %Map_string_Generic____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %70 = phi ptr [ %.pre387, %ifend.i.i.else.i_crit_edge ], [ %60, %while.entry.i ]
  %71 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %61, %while.entry.i ]
  %72 = add nuw i64 %hash.0.i, 1
  %73 = urem i64 %72, %71
  %ptridx7.i = getelementptr inbounds ptr, ptr %70, i64 %73
  %74 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %74, null
  br i1 %.not30.i, label %ifend29, label %while.entry.i

Map_string_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_Generic_, ptr %.pre389.pre, i64 0, i32 1
  %75 = load ptr, ptr %memberidx15.i, align 8
  %.not111 = icmp eq ptr %75, null
  br i1 %.not111, label %ifend29, label %for.incr

ifend29:                                          ; preds = %else.i, %end, %while.end.i, %Map_string_Generic____getitem__.exit
  %76 = load ptr, ptr %memberidx30, align 8
  %77 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr %50)
  %memberidx.i143 = getelementptr inbounds %Map_string_ClassId_, ptr %76, i64 0, i32 1
  %78 = load i64, ptr %memberidx.i143, align 4
  %79 = urem i64 %77, %78
  %80 = load ptr, ptr %76, align 8
  %ptridx.i144 = getelementptr inbounds ptr, ptr %80, i64 %79
  %81 = load ptr, ptr %ptridx.i144, align 8
  %.not.i145 = icmp eq ptr %81, null
  br i1 %.not.i145, label %ifend33, label %while.entry.i151.preheader

while.entry.i151.preheader:                       ; preds = %ifend29
  %memberidx1.i.i149 = getelementptr inbounds %string, ptr %50, i64 0, i32 2
  %memberidx3.i.i153 = getelementptr inbounds %string, ptr %50, i64 0, i32 1
  br label %while.entry.i151

while.entry.i151:                                 ; preds = %while.entry.i151.preheader, %else.i163
  %82 = phi ptr [ %92, %else.i163 ], [ %80, %while.entry.i151.preheader ]
  %83 = phi i64 [ %93, %else.i163 ], [ %78, %while.entry.i151.preheader ]
  %84 = phi ptr [ %96, %else.i163 ], [ %81, %while.entry.i151.preheader ]
  %hash.0.i146 = phi i64 [ %95, %else.i163 ], [ %79, %while.entry.i151.preheader ]
  %85 = load ptr, ptr %84, align 8
  %memberidx.i.i148 = getelementptr inbounds %string, ptr %85, i64 0, i32 2
  %86 = load i64, ptr %memberidx.i.i148, align 4
  %87 = load i64, ptr %memberidx1.i.i149, align 4
  %.not.i.i150 = icmp eq i64 %86, %87
  br i1 %.not.i.i150, label %ifend.i.i154, label %else.i163

ifend.i.i154:                                     ; preds = %while.entry.i151
  %memberidx2.i.i152 = getelementptr inbounds %string, ptr %85, i64 0, i32 1
  %88 = load ptr, ptr %memberidx2.i.i152, align 8
  %89 = load ptr, ptr %memberidx3.i.i153, align 8
  %90 = tail call i64 @memcmp(ptr %88, ptr %89, i64 %86)
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %while.end.i160, label %ifend.i.i154.else.i163_crit_edge

ifend.i.i154.else.i163_crit_edge:                 ; preds = %ifend.i.i154
  %.pre390 = load i64, ptr %memberidx.i143, align 4
  %.pre391 = load ptr, ptr %76, align 8
  br label %else.i163

while.end.i160:                                   ; preds = %ifend.i.i154
  %.pre392.pre = load ptr, ptr %76, align 8
  %ptridx9.i158.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre392.pre, i64 %hash.0.i146
  %.pre393.pre = load ptr, ptr %ptridx9.i158.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i159 = icmp eq ptr %.pre393.pre, null
  br i1 %.not29.i159, label %ifend33, label %Map_string_ClassId____getitem__.exit

else.i163:                                        ; preds = %ifend.i.i154.else.i163_crit_edge, %while.entry.i151
  %92 = phi ptr [ %.pre391, %ifend.i.i154.else.i163_crit_edge ], [ %82, %while.entry.i151 ]
  %93 = phi i64 [ %.pre390, %ifend.i.i154.else.i163_crit_edge ], [ %83, %while.entry.i151 ]
  %94 = add nuw i64 %hash.0.i146, 1
  %95 = urem i64 %94, %93
  %ptridx7.i161 = getelementptr inbounds ptr, ptr %92, i64 %95
  %96 = load ptr, ptr %ptridx7.i161, align 8
  %.not30.i162 = icmp eq ptr %96, null
  br i1 %.not30.i162, label %ifend33, label %while.entry.i151

Map_string_ClassId____getitem__.exit:             ; preds = %while.end.i160
  %memberidx15.i165 = getelementptr inbounds %MapEntry_string_ClassId_, ptr %.pre393.pre, i64 0, i32 1
  %97 = load ptr, ptr %memberidx15.i165, align 8
  %.not112 = icmp eq ptr %97, null
  br i1 %.not112, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %Map_string_ClassId____getitem__.exit
  %98 = load ptr, ptr %0, align 8
  %99 = load ptr, ptr %memberidx.i.i.i167, align 8
  %100 = load i64, ptr %99, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Program, ptr %98, i64 0, i32 1
  %101 = load ptr, ptr %memberidx1.i.i.i.i, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %101, i64 0, i32 1
  %102 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %102, i64 %100
  %103 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx1.i.i168 = getelementptr inbounds %Module, ptr %103, i64 0, i32 5
  %104 = load ptr, ptr %memberidx1.i.i168, align 8
  %105 = load i64, ptr %104, align 4
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %102, i64 %105
  %106 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i169 = getelementptr inbounds %Module, ptr %106, i64 0, i32 7
  %107 = load ptr, ptr %memberidx2.i.i.i169, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %104, i64 0, i32 1
  %108 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %107, i64 0, i32 1
  %109 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %109, i64 %108
  %110 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %memberidx.i170 = getelementptr inbounds %Scope, ptr %110, i64 0, i32 2
  %111 = load ptr, ptr %memberidx.i170, align 8
  tail call fastcc void @Map_string_ClassId____setitem__(ptr %111, ptr %ternary, ptr nonnull %97)
  %memberidx1.i171 = getelementptr inbounds %Scope, ptr %110, i64 0, i32 1
  %112 = load ptr, ptr %memberidx1.i171, align 8
  %113 = tail call ptr @malloc(i32 24)
  %114 = load i64, ptr %97, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %97, i64 0, i32 2
  %115 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 3, ptr %113, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %113, i64 0, i32 1
  store i64 %114, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %113, i64 0, i32 2
  store i64 %115, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %112, ptr %ternary, ptr nonnull %113)
  br label %for.incr

ifend33:                                          ; preds = %else.i163, %ifend29, %while.end.i160, %Map_string_ClassId____getitem__.exit
  %116 = load ptr, ptr %memberidx34, align 8
  %117 = tail call fastcc i64 @Map_string_EnumId__hash_fnc(ptr %50)
  %memberidx.i172 = getelementptr inbounds %Map_string_EnumId_, ptr %116, i64 0, i32 1
  %118 = load i64, ptr %memberidx.i172, align 4
  %119 = urem i64 %117, %118
  %120 = load ptr, ptr %116, align 8
  %ptridx.i173 = getelementptr inbounds ptr, ptr %120, i64 %119
  %121 = load ptr, ptr %ptridx.i173, align 8
  %.not.i174 = icmp eq ptr %121, null
  br i1 %.not.i174, label %ifend37, label %while.entry.i180.preheader

while.entry.i180.preheader:                       ; preds = %ifend33
  %memberidx1.i.i178 = getelementptr inbounds %string, ptr %50, i64 0, i32 2
  %memberidx3.i.i182 = getelementptr inbounds %string, ptr %50, i64 0, i32 1
  br label %while.entry.i180

while.entry.i180:                                 ; preds = %while.entry.i180.preheader, %else.i192
  %122 = phi ptr [ %132, %else.i192 ], [ %120, %while.entry.i180.preheader ]
  %123 = phi i64 [ %133, %else.i192 ], [ %118, %while.entry.i180.preheader ]
  %124 = phi ptr [ %136, %else.i192 ], [ %121, %while.entry.i180.preheader ]
  %hash.0.i175 = phi i64 [ %135, %else.i192 ], [ %119, %while.entry.i180.preheader ]
  %125 = load ptr, ptr %124, align 8
  %memberidx.i.i177 = getelementptr inbounds %string, ptr %125, i64 0, i32 2
  %126 = load i64, ptr %memberidx.i.i177, align 4
  %127 = load i64, ptr %memberidx1.i.i178, align 4
  %.not.i.i179 = icmp eq i64 %126, %127
  br i1 %.not.i.i179, label %ifend.i.i183, label %else.i192

ifend.i.i183:                                     ; preds = %while.entry.i180
  %memberidx2.i.i181 = getelementptr inbounds %string, ptr %125, i64 0, i32 1
  %128 = load ptr, ptr %memberidx2.i.i181, align 8
  %129 = load ptr, ptr %memberidx3.i.i182, align 8
  %130 = tail call i64 @memcmp(ptr %128, ptr %129, i64 %126)
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %while.end.i189, label %ifend.i.i183.else.i192_crit_edge

ifend.i.i183.else.i192_crit_edge:                 ; preds = %ifend.i.i183
  %.pre394 = load i64, ptr %memberidx.i172, align 4
  %.pre395 = load ptr, ptr %116, align 8
  br label %else.i192

while.end.i189:                                   ; preds = %ifend.i.i183
  %.pre396.pre = load ptr, ptr %116, align 8
  %ptridx9.i187.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre396.pre, i64 %hash.0.i175
  %.pre397.pre = load ptr, ptr %ptridx9.i187.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i188 = icmp eq ptr %.pre397.pre, null
  br i1 %.not29.i188, label %ifend37, label %Map_string_EnumId____getitem__.exit

else.i192:                                        ; preds = %ifend.i.i183.else.i192_crit_edge, %while.entry.i180
  %132 = phi ptr [ %.pre395, %ifend.i.i183.else.i192_crit_edge ], [ %122, %while.entry.i180 ]
  %133 = phi i64 [ %.pre394, %ifend.i.i183.else.i192_crit_edge ], [ %123, %while.entry.i180 ]
  %134 = add nuw i64 %hash.0.i175, 1
  %135 = urem i64 %134, %133
  %ptridx7.i190 = getelementptr inbounds ptr, ptr %132, i64 %135
  %136 = load ptr, ptr %ptridx7.i190, align 8
  %.not30.i191 = icmp eq ptr %136, null
  br i1 %.not30.i191, label %ifend37, label %while.entry.i180

Map_string_EnumId____getitem__.exit:              ; preds = %while.end.i189
  %memberidx15.i194 = getelementptr inbounds %MapEntry_string_EnumId_, ptr %.pre397.pre, i64 0, i32 1
  %137 = load ptr, ptr %memberidx15.i194, align 8
  %.not113 = icmp eq ptr %137, null
  br i1 %.not113, label %ifend37, label %if.entry35

if.entry35:                                       ; preds = %Map_string_EnumId____getitem__.exit
  %138 = load ptr, ptr %0, align 8
  %139 = load ptr, ptr %memberidx.i.i.i167, align 8
  %140 = load i64, ptr %139, align 4
  %memberidx1.i.i.i.i197 = getelementptr inbounds %Program, ptr %138, i64 0, i32 1
  %141 = load ptr, ptr %memberidx1.i.i.i.i197, align 8
  %memberidx.i.i.i.i.i198 = getelementptr inbounds %Array_Module_, ptr %141, i64 0, i32 1
  %142 = load ptr, ptr %memberidx.i.i.i.i.i198, align 8
  %ptridx.i.i.i.i.i199 = getelementptr inbounds ptr, ptr %142, i64 %140
  %143 = load ptr, ptr %ptridx.i.i.i.i.i199, align 8
  %memberidx1.i.i200 = getelementptr inbounds %Module, ptr %143, i64 0, i32 5
  %144 = load ptr, ptr %memberidx1.i.i200, align 8
  %145 = load i64, ptr %144, align 4
  %ptridx.i.i.i.i203 = getelementptr inbounds ptr, ptr %142, i64 %145
  %146 = load ptr, ptr %ptridx.i.i.i.i203, align 8
  %memberidx2.i.i.i204 = getelementptr inbounds %Module, ptr %146, i64 0, i32 7
  %147 = load ptr, ptr %memberidx2.i.i.i204, align 8
  %memberidx3.i.i.i205 = getelementptr inbounds %ScopeId, ptr %144, i64 0, i32 1
  %148 = load i64, ptr %memberidx3.i.i.i205, align 4
  %memberidx.i5.i.i.i206 = getelementptr inbounds %Array_Scope_, ptr %147, i64 0, i32 1
  %149 = load ptr, ptr %memberidx.i5.i.i.i206, align 8
  %ptridx.i6.i.i.i207 = getelementptr inbounds ptr, ptr %149, i64 %148
  %150 = load ptr, ptr %ptridx.i6.i.i.i207, align 8
  %memberidx.i208 = getelementptr inbounds %Scope, ptr %150, i64 0, i32 4
  %151 = load ptr, ptr %memberidx.i208, align 8
  tail call fastcc void @Map_string_EnumId____setitem__(ptr %151, ptr %ternary, ptr nonnull %137)
  %memberidx1.i209 = getelementptr inbounds %Scope, ptr %150, i64 0, i32 1
  %152 = load ptr, ptr %memberidx1.i209, align 8
  %153 = tail call ptr @malloc(i32 24)
  %154 = load i64, ptr %137, align 4
  %memberidx1.i5.i210 = getelementptr inbounds %TypeId, ptr %137, i64 0, i32 2
  %155 = load i64, ptr %memberidx1.i5.i210, align 4
  store i64 4, ptr %153, align 4
  %memberidx1.i.i.i211 = getelementptr inbounds %VarId, ptr %153, i64 0, i32 1
  store i64 %154, ptr %memberidx1.i.i.i211, align 4
  %memberidx2.i.i6.i212 = getelementptr inbounds %VarId, ptr %153, i64 0, i32 2
  store i64 %155, ptr %memberidx2.i.i6.i212, align 4
  tail call fastcc void @Map_string_VarId____setitem__(ptr %152, ptr %ternary, ptr nonnull %153)
  br label %for.incr

ifend37:                                          ; preds = %else.i192, %ifend33, %while.end.i189, %Map_string_EnumId____getitem__.exit
  %156 = load ptr, ptr %memberidx38, align 8
  %157 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %50)
  %memberidx.i213 = getelementptr inbounds %Map_string_VarId_, ptr %156, i64 0, i32 1
  %158 = load i64, ptr %memberidx.i213, align 4
  %159 = urem i64 %157, %158
  %160 = load ptr, ptr %156, align 8
  %ptridx.i214 = getelementptr inbounds ptr, ptr %160, i64 %159
  %161 = load ptr, ptr %ptridx.i214, align 8
  %.not.i215 = icmp eq ptr %161, null
  br i1 %.not.i215, label %ifend41, label %while.entry.i221.preheader

while.entry.i221.preheader:                       ; preds = %ifend37
  %memberidx1.i.i219 = getelementptr inbounds %string, ptr %50, i64 0, i32 2
  %memberidx3.i.i223 = getelementptr inbounds %string, ptr %50, i64 0, i32 1
  br label %while.entry.i221

while.entry.i221:                                 ; preds = %while.entry.i221.preheader, %else.i233
  %162 = phi ptr [ %172, %else.i233 ], [ %160, %while.entry.i221.preheader ]
  %163 = phi i64 [ %173, %else.i233 ], [ %158, %while.entry.i221.preheader ]
  %164 = phi ptr [ %176, %else.i233 ], [ %161, %while.entry.i221.preheader ]
  %hash.0.i216 = phi i64 [ %175, %else.i233 ], [ %159, %while.entry.i221.preheader ]
  %165 = load ptr, ptr %164, align 8
  %memberidx.i.i218 = getelementptr inbounds %string, ptr %165, i64 0, i32 2
  %166 = load i64, ptr %memberidx.i.i218, align 4
  %167 = load i64, ptr %memberidx1.i.i219, align 4
  %.not.i.i220 = icmp eq i64 %166, %167
  br i1 %.not.i.i220, label %ifend.i.i224, label %else.i233

ifend.i.i224:                                     ; preds = %while.entry.i221
  %memberidx2.i.i222 = getelementptr inbounds %string, ptr %165, i64 0, i32 1
  %168 = load ptr, ptr %memberidx2.i.i222, align 8
  %169 = load ptr, ptr %memberidx3.i.i223, align 8
  %170 = tail call i64 @memcmp(ptr %168, ptr %169, i64 %166)
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %while.end.i230, label %ifend.i.i224.else.i233_crit_edge

ifend.i.i224.else.i233_crit_edge:                 ; preds = %ifend.i.i224
  %.pre398 = load i64, ptr %memberidx.i213, align 4
  %.pre399 = load ptr, ptr %156, align 8
  br label %else.i233

while.end.i230:                                   ; preds = %ifend.i.i224
  %.pre400.pre = load ptr, ptr %156, align 8
  %ptridx9.i228.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre400.pre, i64 %hash.0.i216
  %.pre401.pre = load ptr, ptr %ptridx9.i228.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i229 = icmp eq ptr %.pre401.pre, null
  br i1 %.not29.i229, label %ifend41, label %Map_string_VarId____getitem__.exit

else.i233:                                        ; preds = %ifend.i.i224.else.i233_crit_edge, %while.entry.i221
  %172 = phi ptr [ %.pre399, %ifend.i.i224.else.i233_crit_edge ], [ %162, %while.entry.i221 ]
  %173 = phi i64 [ %.pre398, %ifend.i.i224.else.i233_crit_edge ], [ %163, %while.entry.i221 ]
  %174 = add nuw i64 %hash.0.i216, 1
  %175 = urem i64 %174, %173
  %ptridx7.i231 = getelementptr inbounds ptr, ptr %172, i64 %175
  %176 = load ptr, ptr %ptridx7.i231, align 8
  %.not30.i232 = icmp eq ptr %176, null
  br i1 %.not30.i232, label %ifend41, label %while.entry.i221

Map_string_VarId____getitem__.exit:               ; preds = %while.end.i230
  %memberidx15.i235 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre401.pre, i64 0, i32 1
  %177 = load ptr, ptr %memberidx15.i235, align 8
  %.not114 = icmp eq ptr %177, null
  br i1 %.not114, label %ifend41, label %if.entry39

if.entry39:                                       ; preds = %Map_string_VarId____getitem__.exit
  %178 = load ptr, ptr %0, align 8
  %179 = load ptr, ptr %memberidx.i.i.i167, align 8
  %180 = load i64, ptr %179, align 4
  %memberidx1.i.i.i.i238 = getelementptr inbounds %Program, ptr %178, i64 0, i32 1
  %181 = load ptr, ptr %memberidx1.i.i.i.i238, align 8
  %memberidx.i.i.i.i.i239 = getelementptr inbounds %Array_Module_, ptr %181, i64 0, i32 1
  %182 = load ptr, ptr %memberidx.i.i.i.i.i239, align 8
  %ptridx.i.i.i.i.i240 = getelementptr inbounds ptr, ptr %182, i64 %180
  %183 = load ptr, ptr %ptridx.i.i.i.i.i240, align 8
  %memberidx1.i.i241 = getelementptr inbounds %Module, ptr %183, i64 0, i32 5
  %184 = load ptr, ptr %memberidx1.i.i241, align 8
  %185 = load i64, ptr %184, align 4
  %ptridx.i.i.i.i244 = getelementptr inbounds ptr, ptr %182, i64 %185
  %186 = load ptr, ptr %ptridx.i.i.i.i244, align 8
  %memberidx2.i.i.i245 = getelementptr inbounds %Module, ptr %186, i64 0, i32 7
  %187 = load ptr, ptr %memberidx2.i.i.i245, align 8
  %memberidx3.i.i.i246 = getelementptr inbounds %ScopeId, ptr %184, i64 0, i32 1
  %188 = load i64, ptr %memberidx3.i.i.i246, align 4
  %memberidx.i5.i.i.i247 = getelementptr inbounds %Array_Scope_, ptr %187, i64 0, i32 1
  %189 = load ptr, ptr %memberidx.i5.i.i.i247, align 8
  %ptridx.i6.i.i.i248 = getelementptr inbounds ptr, ptr %189, i64 %188
  %190 = load ptr, ptr %ptridx.i6.i.i.i248, align 8
  %memberidx.i249 = getelementptr inbounds %Scope, ptr %190, i64 0, i32 1
  %191 = load ptr, ptr %memberidx.i249, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %191, ptr %ternary, ptr nonnull %177)
  br label %for.incr

ifend41:                                          ; preds = %else.i233, %ifend37, %while.end.i230, %Map_string_VarId____getitem__.exit
  %192 = load ptr, ptr %memberidx42, align 8
  %193 = tail call fastcc i64 @Map_string_VarId__hash_fnc(ptr %50)
  %memberidx.i250 = getelementptr inbounds %Map_string_VarId_, ptr %192, i64 0, i32 1
  %194 = load i64, ptr %memberidx.i250, align 4
  %195 = urem i64 %193, %194
  %196 = load ptr, ptr %192, align 8
  %ptridx.i251 = getelementptr inbounds ptr, ptr %196, i64 %195
  %197 = load ptr, ptr %ptridx.i251, align 8
  %.not.i252 = icmp eq ptr %197, null
  br i1 %.not.i252, label %ifend45, label %while.entry.i258.preheader

while.entry.i258.preheader:                       ; preds = %ifend41
  %memberidx1.i.i256 = getelementptr inbounds %string, ptr %50, i64 0, i32 2
  %memberidx3.i.i260 = getelementptr inbounds %string, ptr %50, i64 0, i32 1
  br label %while.entry.i258

while.entry.i258:                                 ; preds = %while.entry.i258.preheader, %else.i270
  %198 = phi ptr [ %208, %else.i270 ], [ %196, %while.entry.i258.preheader ]
  %199 = phi i64 [ %209, %else.i270 ], [ %194, %while.entry.i258.preheader ]
  %200 = phi ptr [ %212, %else.i270 ], [ %197, %while.entry.i258.preheader ]
  %hash.0.i253 = phi i64 [ %211, %else.i270 ], [ %195, %while.entry.i258.preheader ]
  %201 = load ptr, ptr %200, align 8
  %memberidx.i.i255 = getelementptr inbounds %string, ptr %201, i64 0, i32 2
  %202 = load i64, ptr %memberidx.i.i255, align 4
  %203 = load i64, ptr %memberidx1.i.i256, align 4
  %.not.i.i257 = icmp eq i64 %202, %203
  br i1 %.not.i.i257, label %ifend.i.i261, label %else.i270

ifend.i.i261:                                     ; preds = %while.entry.i258
  %memberidx2.i.i259 = getelementptr inbounds %string, ptr %201, i64 0, i32 1
  %204 = load ptr, ptr %memberidx2.i.i259, align 8
  %205 = load ptr, ptr %memberidx3.i.i260, align 8
  %206 = tail call i64 @memcmp(ptr %204, ptr %205, i64 %202)
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %while.end.i267, label %ifend.i.i261.else.i270_crit_edge

ifend.i.i261.else.i270_crit_edge:                 ; preds = %ifend.i.i261
  %.pre402 = load i64, ptr %memberidx.i250, align 4
  %.pre403 = load ptr, ptr %192, align 8
  br label %else.i270

while.end.i267:                                   ; preds = %ifend.i.i261
  %.pre404.pre = load ptr, ptr %192, align 8
  %ptridx9.i265.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre404.pre, i64 %hash.0.i253
  %.pre405.pre = load ptr, ptr %ptridx9.i265.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i266 = icmp eq ptr %.pre405.pre, null
  br i1 %.not29.i266, label %ifend45, label %Map_string_VarId____getitem__.exit274

else.i270:                                        ; preds = %ifend.i.i261.else.i270_crit_edge, %while.entry.i258
  %208 = phi ptr [ %.pre403, %ifend.i.i261.else.i270_crit_edge ], [ %198, %while.entry.i258 ]
  %209 = phi i64 [ %.pre402, %ifend.i.i261.else.i270_crit_edge ], [ %199, %while.entry.i258 ]
  %210 = add nuw i64 %hash.0.i253, 1
  %211 = urem i64 %210, %209
  %ptridx7.i268 = getelementptr inbounds ptr, ptr %208, i64 %211
  %212 = load ptr, ptr %ptridx7.i268, align 8
  %.not30.i269 = icmp eq ptr %212, null
  br i1 %.not30.i269, label %ifend45, label %while.entry.i258

Map_string_VarId____getitem__.exit274:            ; preds = %while.end.i267
  %memberidx15.i272 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre405.pre, i64 0, i32 1
  %213 = load ptr, ptr %memberidx15.i272, align 8
  %.not115 = icmp eq ptr %213, null
  br i1 %.not115, label %ifend45, label %if.entry43

if.entry43:                                       ; preds = %Map_string_VarId____getitem__.exit274
  %214 = load ptr, ptr %0, align 8
  %215 = load ptr, ptr %memberidx.i.i.i167, align 8
  %216 = load i64, ptr %215, align 4
  %memberidx1.i.i.i.i276 = getelementptr inbounds %Program, ptr %214, i64 0, i32 1
  %217 = load ptr, ptr %memberidx1.i.i.i.i276, align 8
  %memberidx.i.i.i.i.i277 = getelementptr inbounds %Array_Module_, ptr %217, i64 0, i32 1
  %218 = load ptr, ptr %memberidx.i.i.i.i.i277, align 8
  %ptridx.i.i.i.i.i278 = getelementptr inbounds ptr, ptr %218, i64 %216
  %219 = load ptr, ptr %ptridx.i.i.i.i.i278, align 8
  %memberidx1.i.i279 = getelementptr inbounds %Module, ptr %219, i64 0, i32 5
  %220 = load ptr, ptr %memberidx1.i.i279, align 8
  %221 = load i64, ptr %220, align 4
  %ptridx.i.i.i.i282 = getelementptr inbounds ptr, ptr %218, i64 %221
  %222 = load ptr, ptr %ptridx.i.i.i.i282, align 8
  %memberidx2.i.i.i283 = getelementptr inbounds %Module, ptr %222, i64 0, i32 7
  %223 = load ptr, ptr %memberidx2.i.i.i283, align 8
  %memberidx3.i.i.i284 = getelementptr inbounds %ScopeId, ptr %220, i64 0, i32 1
  %224 = load i64, ptr %memberidx3.i.i.i284, align 4
  %memberidx.i5.i.i.i285 = getelementptr inbounds %Array_Scope_, ptr %223, i64 0, i32 1
  %225 = load ptr, ptr %memberidx.i5.i.i.i285, align 8
  %ptridx.i6.i.i.i286 = getelementptr inbounds ptr, ptr %225, i64 %224
  %226 = load ptr, ptr %ptridx.i6.i.i.i286, align 8
  %memberidx.i287 = getelementptr inbounds %Scope, ptr %226, i64 0, i32 3
  %227 = load ptr, ptr %memberidx.i287, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %227, ptr %ternary, ptr nonnull %213)
  br label %for.incr

ifend45:                                          ; preds = %else.i270, %ifend41, %while.end.i267, %Map_string_VarId____getitem__.exit274
  %228 = load ptr, ptr %memberidx46, align 8
  %229 = tail call fastcc i64 @Map_string_Type__hash_fnc(ptr %50)
  %memberidx.i288 = getelementptr inbounds %Map_string_Type_, ptr %228, i64 0, i32 1
  %230 = load i64, ptr %memberidx.i288, align 4
  %231 = urem i64 %229, %230
  %232 = load ptr, ptr %228, align 8
  %ptridx.i289 = getelementptr inbounds ptr, ptr %232, i64 %231
  %233 = load ptr, ptr %ptridx.i289, align 8
  %.not.i290 = icmp eq ptr %233, null
  br i1 %.not.i290, label %else48, label %while.entry.i296.preheader

while.entry.i296.preheader:                       ; preds = %ifend45
  %memberidx1.i.i294 = getelementptr inbounds %string, ptr %50, i64 0, i32 2
  %memberidx3.i.i298 = getelementptr inbounds %string, ptr %50, i64 0, i32 1
  br label %while.entry.i296

while.entry.i296:                                 ; preds = %while.entry.i296.preheader, %else.i308
  %234 = phi ptr [ %244, %else.i308 ], [ %232, %while.entry.i296.preheader ]
  %235 = phi i64 [ %245, %else.i308 ], [ %230, %while.entry.i296.preheader ]
  %236 = phi ptr [ %248, %else.i308 ], [ %233, %while.entry.i296.preheader ]
  %hash.0.i291 = phi i64 [ %247, %else.i308 ], [ %231, %while.entry.i296.preheader ]
  %237 = load ptr, ptr %236, align 8
  %memberidx.i.i293 = getelementptr inbounds %string, ptr %237, i64 0, i32 2
  %238 = load i64, ptr %memberidx.i.i293, align 4
  %239 = load i64, ptr %memberidx1.i.i294, align 4
  %.not.i.i295 = icmp eq i64 %238, %239
  br i1 %.not.i.i295, label %ifend.i.i299, label %else.i308

ifend.i.i299:                                     ; preds = %while.entry.i296
  %memberidx2.i.i297 = getelementptr inbounds %string, ptr %237, i64 0, i32 1
  %240 = load ptr, ptr %memberidx2.i.i297, align 8
  %241 = load ptr, ptr %memberidx3.i.i298, align 8
  %242 = tail call i64 @memcmp(ptr %240, ptr %241, i64 %238)
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %while.end.i305, label %ifend.i.i299.else.i308_crit_edge

ifend.i.i299.else.i308_crit_edge:                 ; preds = %ifend.i.i299
  %.pre406 = load i64, ptr %memberidx.i288, align 4
  %.pre407 = load ptr, ptr %228, align 8
  br label %else.i308

while.end.i305:                                   ; preds = %ifend.i.i299
  %.pre408.pre = load ptr, ptr %228, align 8
  %ptridx9.i303.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre408.pre, i64 %hash.0.i291
  %.pre409.pre = load ptr, ptr %ptridx9.i303.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i304 = icmp eq ptr %.pre409.pre, null
  br i1 %.not29.i304, label %else48, label %Map_string_Type____getitem__.exit

else.i308:                                        ; preds = %ifend.i.i299.else.i308_crit_edge, %while.entry.i296
  %244 = phi ptr [ %.pre407, %ifend.i.i299.else.i308_crit_edge ], [ %234, %while.entry.i296 ]
  %245 = phi i64 [ %.pre406, %ifend.i.i299.else.i308_crit_edge ], [ %235, %while.entry.i296 ]
  %246 = add nuw i64 %hash.0.i291, 1
  %247 = urem i64 %246, %245
  %ptridx7.i306 = getelementptr inbounds ptr, ptr %244, i64 %247
  %248 = load ptr, ptr %ptridx7.i306, align 8
  %.not30.i307 = icmp eq ptr %248, null
  br i1 %.not30.i307, label %else48, label %while.entry.i296

Map_string_Type____getitem__.exit:                ; preds = %while.end.i305
  %memberidx15.i310 = getelementptr inbounds %MapEntry_string_Type_, ptr %.pre409.pre, i64 0, i32 1
  %249 = load ptr, ptr %memberidx15.i310, align 8
  %.not116 = icmp eq ptr %249, null
  br i1 %.not116, label %else48, label %if.entry47

if.entry47:                                       ; preds = %Map_string_Type____getitem__.exit
  %250 = load ptr, ptr %0, align 8
  %251 = load ptr, ptr %memberidx.i.i.i167, align 8
  %252 = load i64, ptr %251, align 4
  %memberidx1.i.i.i.i313 = getelementptr inbounds %Program, ptr %250, i64 0, i32 1
  %253 = load ptr, ptr %memberidx1.i.i.i.i313, align 8
  %memberidx.i.i.i.i.i314 = getelementptr inbounds %Array_Module_, ptr %253, i64 0, i32 1
  %254 = load ptr, ptr %memberidx.i.i.i.i.i314, align 8
  %ptridx.i.i.i.i.i315 = getelementptr inbounds ptr, ptr %254, i64 %252
  %255 = load ptr, ptr %ptridx.i.i.i.i.i315, align 8
  %memberidx1.i.i316 = getelementptr inbounds %Module, ptr %255, i64 0, i32 5
  %256 = load ptr, ptr %memberidx1.i.i316, align 8
  %257 = load i64, ptr %256, align 4
  %ptridx.i.i.i.i319 = getelementptr inbounds ptr, ptr %254, i64 %257
  %258 = load ptr, ptr %ptridx.i.i.i.i319, align 8
  %memberidx2.i.i.i320 = getelementptr inbounds %Module, ptr %258, i64 0, i32 7
  %259 = load ptr, ptr %memberidx2.i.i.i320, align 8
  %memberidx3.i.i.i321 = getelementptr inbounds %ScopeId, ptr %256, i64 0, i32 1
  %260 = load i64, ptr %memberidx3.i.i.i321, align 4
  %memberidx.i5.i.i.i322 = getelementptr inbounds %Array_Scope_, ptr %259, i64 0, i32 1
  %261 = load ptr, ptr %memberidx.i5.i.i.i322, align 8
  %ptridx.i6.i.i.i323 = getelementptr inbounds ptr, ptr %261, i64 %260
  %262 = load ptr, ptr %ptridx.i6.i.i.i323, align 8
  %memberidx.i324 = getelementptr inbounds %Scope, ptr %262, i64 0, i32 6
  %263 = load ptr, ptr %memberidx.i324, align 8
  tail call fastcc void @Map_string_Type____setitem__(ptr %263, ptr %ternary, ptr nonnull %249)
  br label %for.incr

else48:                                           ; preds = %ifend45, %while.end.i305, %Map_string_Type____getitem__.exit, %else.i308
  store i1 false, ptr %44, align 1
  %264 = load ptr, ptr %50, align 8
  %memberidx50 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %264, i64 0, i32 5
  %265 = load ptr, ptr %memberidx50, align 8
  %266 = tail call ptr %265(ptr nonnull %50)
  %267 = load ptr, ptr %23, align 8
  %memberidx51 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %267, i64 0, i32 5
  %268 = load ptr, ptr %memberidx51, align 8
  %269 = tail call ptr %268(ptr nonnull %23)
  %270 = alloca ptr, align 8
  %271 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %270, ptr nonnull @98, ptr %266, ptr %269)
  %272 = load ptr, ptr %270, align 8
  %273 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %273, align 8
  %memberidx.i325 = getelementptr inbounds %string, ptr %273, i64 0, i32 1
  store ptr %272, ptr %memberidx.i325, align 8
  %memberidx1.i326 = getelementptr inbounds %string, ptr %273, i64 0, i32 2
  store i64 %271, ptr %memberidx1.i326, align 4
  %memberidx2.i327 = getelementptr inbounds %string, ptr %273, i64 0, i32 3
  store i64 %271, ptr %memberidx2.i327, align 4
  tail call void @free(ptr %266)
  tail call void @free(ptr %269)
  %274 = load ptr, ptr %import_clause.0382, align 8
  %memberidx53 = getelementptr inbounds %Token, ptr %274, i64 0, i32 1
  %275 = load ptr, ptr %memberidx53, align 8
  %276 = load ptr, ptr %memberidx.i120, align 8
  %memberidx1.i329 = getelementptr inbounds %Compiler, ptr %276, i64 0, i32 6
  %277 = load ptr, ptr %memberidx1.i329, align 8
  %278 = call ptr @malloc(i32 24)
  store i64 1, ptr %278, align 4
  %memberidx1.i.i330 = getelementptr inbounds %FloError, ptr %278, i64 0, i32 2
  store ptr %275, ptr %memberidx1.i.i330, align 8
  %memberidx2.i.i331 = getelementptr inbounds %FloError, ptr %278, i64 0, i32 1
  store ptr %273, ptr %memberidx2.i.i331, align 8
  %memberidx.i.i332 = getelementptr inbounds %Array_FloError_, ptr %277, i64 0, i32 2
  %279 = load i64, ptr %memberidx.i.i332, align 4
  %memberidx1.i2.i333 = getelementptr inbounds %Array_FloError_, ptr %277, i64 0, i32 3
  %280 = load i64, ptr %memberidx1.i2.i333, align 4
  %.not.i.i334 = icmp slt i64 %279, %280
  br i1 %.not.i.i334, label %else48.TypeChecker_error.exit340_crit_edge, label %if.entry.i.i337

else48.TypeChecker_error.exit340_crit_edge:       ; preds = %else48
  %memberidx4.i.i338.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %277, i64 0, i32 1
  %.pre411 = load ptr, ptr %memberidx4.i.i338.phi.trans.insert, align 8
  br label %TypeChecker_error.exit340

if.entry.i.i337:                                  ; preds = %else48
  %281 = shl nuw i64 %280, 1
  store i64 %281, ptr %memberidx1.i2.i333, align 4
  %memberidx2.i.i.i336 = getelementptr inbounds %Array_FloError_, ptr %277, i64 0, i32 1
  %282 = load ptr, ptr %memberidx2.i.i.i336, align 8
  %283 = shl i64 %280, 4
  %284 = call ptr @realloc(ptr %282, i64 %283)
  store ptr %284, ptr %memberidx2.i.i.i336, align 8
  %.pre410 = load i64, ptr %memberidx.i.i332, align 4
  br label %TypeChecker_error.exit340

TypeChecker_error.exit340:                        ; preds = %else48.TypeChecker_error.exit340_crit_edge, %if.entry.i.i337
  %285 = phi ptr [ %.pre411, %else48.TypeChecker_error.exit340_crit_edge ], [ %284, %if.entry.i.i337 ]
  %286 = phi i64 [ %279, %else48.TypeChecker_error.exit340_crit_edge ], [ %.pre410, %if.entry.i.i337 ]
  %287 = add nsw i64 %286, 1
  store i64 %287, ptr %memberidx.i.i332, align 4
  %ptridx.i.i339 = getelementptr inbounds ptr, ptr %285, i64 %286
  store ptr %278, ptr %ptridx.i.i339, align 8
  br label %common.ret

if.entry55:                                       ; preds = %else17
  %memberidx59 = getelementptr inbounds %IdentifierToken, ptr %43, i64 0, i32 2
  %288 = load ptr, ptr %memberidx59, align 8
  %memberidx.i.i341 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %289 = load ptr, ptr %memberidx.i.i341, align 8
  %290 = load i64, ptr %289, align 4
  %ptridx.i.i.i.i344 = getelementptr inbounds ptr, ptr %34, i64 %290
  %291 = load ptr, ptr %ptridx.i.i.i.i344, align 8
  %memberidx1.i345 = getelementptr inbounds %Module, ptr %291, i64 0, i32 5
  %292 = load ptr, ptr %memberidx1.i345, align 8
  %293 = load i64, ptr %292, align 4
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %34, i64 %293
  %294 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i347 = getelementptr inbounds %Module, ptr %294, i64 0, i32 7
  %295 = load ptr, ptr %memberidx2.i.i347, align 8
  %memberidx3.i.i348 = getelementptr inbounds %ScopeId, ptr %292, i64 0, i32 1
  %296 = load i64, ptr %memberidx3.i.i348, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Scope_, ptr %295, i64 0, i32 1
  %297 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %297, i64 %296
  %298 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx60 = getelementptr inbounds %Scope, ptr %298, i64 0, i32 1
  %299 = load ptr, ptr %memberidx60, align 8
  %300 = tail call ptr @malloc(i32 32)
  %301 = load ptr, ptr %39, align 8
  %302 = load i64, ptr %301, align 4
  %memberidx1.i349 = getelementptr inbounds %ScopeId, ptr %301, i64 0, i32 1
  %303 = load i64, ptr %memberidx1.i349, align 4
  store i64 5, ptr %300, align 4
  %memberidx1.i.i350 = getelementptr inbounds %VarId, ptr %300, i64 0, i32 1
  store i64 %302, ptr %memberidx1.i.i350, align 4
  %memberidx2.i.i351 = getelementptr inbounds %VarId, ptr %300, i64 0, i32 2
  store i64 %303, ptr %memberidx2.i.i351, align 4
  %memberidx2.i352 = getelementptr inbounds %ModuleVarId, ptr %300, i64 0, i32 3
  store ptr %301, ptr %memberidx2.i352, align 8
  tail call fastcc void @Map_string_VarId____setitem__(ptr %299, ptr %288, ptr nonnull %300)
  br label %common.ret

else56:                                           ; preds = %else17
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr nonnull %25)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %3, align 4
  %memberidx = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 6
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 2
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %TypeChecker_error.exit470, %if.entry91, %if.entry86, %TypeChecker_error.exit434, %Array_Expression____sl__.exit, %TypeChecker_error.exit347, %TypeChecker_error.exit308, %TypeChecker_error.exit295, %TypeChecker_error.exit207, %TypeChecker_error.exit, %ifend6
  %common.ret.op = phi ptr [ %17, %ifend6 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit207 ], [ null, %TypeChecker_error.exit295 ], [ null, %TypeChecker_error.exit308 ], [ null, %TypeChecker_error.exit347 ], [ %275, %Array_Expression____sl__.exit ], [ null, %TypeChecker_error.exit434 ], [ %333, %if.entry86 ], [ %343, %if.entry91 ], [ null, %TypeChecker_error.exit470 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx3, align 8
  %13 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %13, align 4
  %14 = load i64, ptr %10, align 4
  switch i64 %14, label %else92 [
    i64 19, label %if.entry.i2
    i64 11, label %if.entry3.i
    i64 16, label %if.entry27
    i64 13, label %if.entry60
    i64 14, label %if.entry83
    i64 17, label %if.entry91
  ]

if.entry.i2:                                      ; preds = %ifend, %if.entry.i2
  %.tr5.i = phi ptr [ %15, %if.entry.i2 ], [ %10, %ifend ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %15 = load ptr, ptr %memberidx1.i1, align 8
  %16 = load i64, ptr %15, align 4
  switch i64 %16, label %else92 [
    i64 19, label %if.entry.i2
    i64 11, label %while.entry
  ]

ifend6:                                           ; preds = %if.entry83, %ifend.i444, %get_class_prop_type.exit331, %ifend53, %get_class_prop_type.exit
  %prop_ty.0 = phi ptr [ %common.ret.op.i211, %get_class_prop_type.exit ], [ %common.ret.op.i318, %get_class_prop_type.exit331 ], [ %261, %ifend53 ], [ %13, %ifend.i444 ], [ %13, %if.entry83 ]
  %prop_id.0 = phi ptr [ %52, %get_class_prop_type.exit ], [ %147, %get_class_prop_type.exit331 ], [ %174, %ifend53 ], [ null, %ifend.i444 ], [ null, %if.entry83 ]
  %17 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %17, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i180 = getelementptr inbounds %MemberExpression, ptr %17, i64 0, i32 4
  store ptr %5, ptr %memberidx.i180, align 8
  %memberidx1.i181 = getelementptr inbounds %MemberExpression, ptr %17, i64 0, i32 5
  store ptr %prop_id.0, ptr %memberidx1.i181, align 8
  %memberidx2.i182 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  store ptr %prop_ty.0, ptr %memberidx2.i182, align 8
  br label %common.ret

while.entry:                                      ; preds = %if.entry.i2, %while.entry
  %prop_owner_type.0 = phi ptr [ %18, %while.entry ], [ %10, %if.entry.i2 ]
  %memberidx8 = getelementptr inbounds %GenericType, ptr %prop_owner_type.0, i64 0, i32 3
  %18 = load ptr, ptr %memberidx8, align 8
  %19 = load i64, ptr %18, align 4
  %20 = icmp eq i64 %19, 19
  br i1 %20, label %while.entry, label %if.entry3.i

if.entry3.i:                                      ; preds = %while.entry, %ifend
  %prop_owner_type.1 = phi ptr [ %10, %ifend ], [ %18, %while.entry ]
  %21 = load ptr, ptr %0, align 8
  %memberidx6.i7 = getelementptr inbounds %ObjectType, ptr %prop_owner_type.1, i64 0, i32 1
  %22 = load ptr, ptr %memberidx6.i7, align 8
  %memberidx.i.i8 = getelementptr inbounds %Program, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %memberidx.i.i8, align 8
  %24 = load i64, ptr %22, align 4
  %memberidx.i.i.i9 = getelementptr inbounds %Array_Module_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i.i.i9, align 8
  %ptridx.i.i.i10 = getelementptr inbounds ptr, ptr %25, i64 %24
  %26 = load ptr, ptr %ptridx.i.i.i10, align 8
  %memberidx2.i.i11 = getelementptr inbounds %Module, ptr %26, i64 0, i32 3
  %27 = load ptr, ptr %memberidx2.i.i11, align 8
  %memberidx3.i.i12 = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %28 = load i64, ptr %memberidx3.i.i12, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %29, i64 %28
  %30 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx11 = getelementptr inbounds %Class, ptr %30, i64 0, i32 6
  %31 = load ptr, ptr %memberidx11, align 8
  %32 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %12)
  %memberidx.i183 = getelementptr inbounds %Map_string_PropId_, ptr %31, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i183, align 4
  %34 = urem i64 %32, %33
  %35 = load ptr, ptr %31, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %35, i64 %34
  %36 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %36, null
  br i1 %.not.i, label %if.entry12, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i185 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %37 = phi ptr [ %47, %else.i ], [ %35, %while.entry.i.preheader ]
  %38 = phi i64 [ %48, %else.i ], [ %33, %while.entry.i.preheader ]
  %39 = phi ptr [ %51, %else.i ], [ %36, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %50, %else.i ], [ %34, %while.entry.i.preheader ]
  %40 = load ptr, ptr %39, align 8
  %memberidx.i.i184 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  %41 = load i64, ptr %memberidx.i.i184, align 4
  %42 = load i64, ptr %memberidx1.i.i185, align 4
  %.not.i.i = icmp eq i64 %41, %42
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  %43 = load ptr, ptr %memberidx2.i.i, align 8
  %44 = load ptr, ptr %memberidx3.i.i, align 8
  %45 = tail call i64 @memcmp(ptr %43, ptr %44, i64 %41)
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i183, align 4
  %.pre20 = load ptr, ptr %31, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre21.pre = load ptr, ptr %31, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre21.pre, i64 %hash.0.i
  %.pre22.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre22.pre, null
  br i1 %.not29.i, label %if.entry12, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %47 = phi ptr [ %.pre20, %ifend.i.i.else.i_crit_edge ], [ %37, %while.entry.i ]
  %48 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %38, %while.entry.i ]
  %49 = add nuw i64 %hash.0.i, 1
  %50 = urem i64 %49, %48
  %ptridx7.i = getelementptr inbounds ptr, ptr %47, i64 %50
  %51 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %51, null
  br i1 %.not30.i, label %if.entry12, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre22.pre, i64 0, i32 1
  %52 = load ptr, ptr %memberidx15.i, align 8
  %53 = icmp eq ptr %52, null
  br i1 %53, label %if.entry12, label %ifend14

if.entry12:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_string_PropId____getitem__.exit
  %54 = load ptr, ptr %12, align 8
  %memberidx15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %54, i64 0, i32 5
  %55 = load ptr, ptr %memberidx15, align 8
  %56 = tail call ptr %55(ptr nonnull %12)
  %memberidx16 = getelementptr inbounds %Class, ptr %30, i64 0, i32 1
  %57 = load ptr, ptr %memberidx16, align 8
  %58 = load ptr, ptr %57, align 8
  %memberidx17 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx17, align 8
  %60 = tail call ptr %59(ptr nonnull %57)
  %61 = alloca ptr, align 8
  %62 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %61, ptr nonnull @187, ptr %56, ptr %60)
  %63 = load ptr, ptr %61, align 8
  %64 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %64, align 8
  %memberidx.i186 = getelementptr inbounds %string, ptr %64, i64 0, i32 1
  store ptr %63, ptr %memberidx.i186, align 8
  %memberidx1.i187 = getelementptr inbounds %string, ptr %64, i64 0, i32 2
  store i64 %62, ptr %memberidx1.i187, align 4
  %memberidx2.i188 = getelementptr inbounds %string, ptr %64, i64 0, i32 3
  store i64 %62, ptr %memberidx2.i188, align 4
  tail call void @free(ptr %56)
  tail call void @free(ptr %60)
  %65 = load ptr, ptr %memberidx2, align 8
  %memberidx19 = getelementptr inbounds %Token, ptr %65, i64 0, i32 1
  %66 = load ptr, ptr %memberidx19, align 8
  %67 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i190 = getelementptr inbounds %Compiler, ptr %67, i64 0, i32 6
  %68 = load ptr, ptr %memberidx1.i190, align 8
  %69 = call ptr @malloc(i32 24)
  store i64 1, ptr %69, align 4
  %memberidx1.i.i191 = getelementptr inbounds %FloError, ptr %69, i64 0, i32 2
  store ptr %66, ptr %memberidx1.i.i191, align 8
  %memberidx2.i.i192 = getelementptr inbounds %FloError, ptr %69, i64 0, i32 1
  store ptr %64, ptr %memberidx2.i.i192, align 8
  %memberidx.i.i193 = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 2
  %70 = load i64, ptr %memberidx.i.i193, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 3
  %71 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i194 = icmp slt i64 %70, %71
  br i1 %.not.i.i194, label %if.entry12.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry12.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry12
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 1
  %.pre26 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry12
  %72 = shl nuw i64 %71, 1
  store i64 %72, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 1
  %73 = load ptr, ptr %memberidx2.i.i.i, align 8
  %74 = shl i64 %71, 4
  %75 = call ptr @realloc(ptr %73, i64 %74)
  store ptr %75, ptr %memberidx2.i.i.i, align 8
  %.pre25 = load i64, ptr %memberidx.i.i193, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry12.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %76 = phi ptr [ %.pre26, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %75, %if.entry.i.i ]
  %77 = phi i64 [ %70, %if.entry12.TypeChecker_error.exit_crit_edge ], [ %.pre25, %if.entry.i.i ]
  %78 = add nsw i64 %77, 1
  store i64 %78, ptr %memberidx.i.i193, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %76, i64 %77
  store ptr %69, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend14:                                          ; preds = %Map_string_PropId____getitem__.exit
  %79 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %52)
  %.not179 = icmp eq ptr %79, null
  br i1 %.not179, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %ifend14
  %80 = load ptr, ptr %memberidx2, align 8
  %memberidx24 = getelementptr inbounds %Token, ptr %80, i64 0, i32 1
  %81 = load ptr, ptr %memberidx24, align 8
  %82 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i196 = getelementptr inbounds %Compiler, ptr %82, i64 0, i32 6
  %83 = load ptr, ptr %memberidx1.i196, align 8
  %84 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %84, align 4
  %memberidx1.i.i197 = getelementptr inbounds %FloError, ptr %84, i64 0, i32 2
  store ptr %81, ptr %memberidx1.i.i197, align 8
  %memberidx2.i.i198 = getelementptr inbounds %FloError, ptr %84, i64 0, i32 1
  store ptr %79, ptr %memberidx2.i.i198, align 8
  %memberidx.i.i199 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 2
  %85 = load i64, ptr %memberidx.i.i199, align 4
  %memberidx1.i2.i200 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 3
  %86 = load i64, ptr %memberidx1.i2.i200, align 4
  %.not.i.i201 = icmp slt i64 %85, %86
  br i1 %.not.i.i201, label %if.entry20.TypeChecker_error.exit207_crit_edge, label %if.entry.i.i204

if.entry20.TypeChecker_error.exit207_crit_edge:   ; preds = %if.entry20
  %memberidx4.i.i205.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 1
  %.pre24 = load ptr, ptr %memberidx4.i.i205.phi.trans.insert, align 8
  br label %TypeChecker_error.exit207

if.entry.i.i204:                                  ; preds = %if.entry20
  %87 = shl nuw i64 %86, 1
  store i64 %87, ptr %memberidx1.i2.i200, align 4
  %memberidx2.i.i.i203 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 1
  %88 = load ptr, ptr %memberidx2.i.i.i203, align 8
  %89 = shl i64 %86, 4
  %90 = tail call ptr @realloc(ptr %88, i64 %89)
  store ptr %90, ptr %memberidx2.i.i.i203, align 8
  %.pre23 = load i64, ptr %memberidx.i.i199, align 4
  br label %TypeChecker_error.exit207

TypeChecker_error.exit207:                        ; preds = %if.entry20.TypeChecker_error.exit207_crit_edge, %if.entry.i.i204
  %91 = phi ptr [ %.pre24, %if.entry20.TypeChecker_error.exit207_crit_edge ], [ %90, %if.entry.i.i204 ]
  %92 = phi i64 [ %85, %if.entry20.TypeChecker_error.exit207_crit_edge ], [ %.pre23, %if.entry.i.i204 ]
  %93 = add nsw i64 %92, 1
  store i64 %93, ptr %memberidx.i.i199, align 4
  %ptridx.i.i206 = getelementptr inbounds ptr, ptr %91, i64 %92
  store ptr %84, ptr %ptridx.i.i206, align 8
  br label %common.ret

ifend22:                                          ; preds = %ifend14
  %94 = load ptr, ptr %0, align 8
  %memberidx.i.i208 = getelementptr inbounds %PropId, ptr %52, i64 0, i32 1
  %95 = load ptr, ptr %memberidx.i.i208, align 8
  %memberidx.i.i.i209 = getelementptr inbounds %Program, ptr %94, i64 0, i32 1
  %96 = load ptr, ptr %memberidx.i.i.i209, align 8
  %97 = load i64, ptr %95, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %96, i64 0, i32 1
  %98 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %98, i64 %97
  %99 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i210 = getelementptr inbounds %Module, ptr %99, i64 0, i32 3
  %100 = load ptr, ptr %memberidx2.i.i.i210, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %95, i64 0, i32 2
  %101 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %100, i64 0, i32 1
  %102 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %102, i64 %101
  %103 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %104 = load i64, ptr %52, align 4
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend22
  %memberidx1.i212 = getelementptr inbounds %Class, ptr %103, i64 0, i32 5
  %106 = load ptr, ptr %memberidx1.i212, align 8
  %memberidx2.i213 = getelementptr inbounds %PropId, ptr %52, i64 0, i32 2
  %107 = load i64, ptr %memberidx2.i213, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %106, i64 0, i32 1
  %108 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %108, i64 %107
  %109 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %109, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend22
  %memberidx4.i = getelementptr inbounds %Class, ptr %103, i64 0, i32 4
  %110 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %52, i64 0, i32 2
  %111 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %110, i64 0, i32 1
  %112 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i214 = getelementptr inbounds ptr, ptr %112, i64 %111
  %113 = load ptr, ptr %ptridx.i.i214, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %113, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i211 = load ptr, ptr %common.ret.op.in.i, align 8
  br label %ifend6

if.entry27:                                       ; preds = %ifend
  %memberidx30 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %114 = load ptr, ptr %memberidx30, align 8
  %115 = load i64, ptr %114, align 4
  %116 = icmp eq i64 %115, 3
  %memberidx.i215 = getelementptr inbounds %VarId, ptr %114, i64 0, i32 1
  %117 = load i64, ptr %memberidx.i215, align 4
  %118 = load ptr, ptr %0, align 8
  %memberidx1.i.i216 = getelementptr inbounds %Program, ptr %118, i64 0, i32 1
  %119 = load ptr, ptr %memberidx1.i.i216, align 8
  %memberidx.i.i.i217 = getelementptr inbounds %Array_Module_, ptr %119, i64 0, i32 1
  %120 = load ptr, ptr %memberidx.i.i.i217, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %120, i64 %117
  %121 = load ptr, ptr %ptridx.i.i.i, align 8
  br i1 %116, label %if.entry32, label %else33

if.entry32:                                       ; preds = %if.entry27
  %memberidx1.i218 = getelementptr inbounds %Module, ptr %121, i64 0, i32 3
  %122 = load ptr, ptr %memberidx1.i218, align 8
  %memberidx2.i219 = getelementptr inbounds %VarId, ptr %114, i64 0, i32 2
  %123 = load i64, ptr %memberidx2.i219, align 4
  %memberidx.i.i220 = getelementptr inbounds %Array_Class_, ptr %122, i64 0, i32 1
  %124 = load ptr, ptr %memberidx.i.i220, align 8
  %ptridx.i.i221 = getelementptr inbounds ptr, ptr %124, i64 %123
  %125 = load ptr, ptr %ptridx.i.i221, align 8
  %memberidx35 = getelementptr inbounds %Class, ptr %125, i64 0, i32 7
  %126 = load ptr, ptr %memberidx35, align 8
  %127 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %12)
  %memberidx.i222 = getelementptr inbounds %Map_string_PropId_, ptr %126, i64 0, i32 1
  %128 = load i64, ptr %memberidx.i222, align 4
  %129 = urem i64 %127, %128
  %130 = load ptr, ptr %126, align 8
  %ptridx.i223 = getelementptr inbounds ptr, ptr %130, i64 %129
  %131 = load ptr, ptr %ptridx.i223, align 8
  %.not.i224 = icmp eq ptr %131, null
  br i1 %.not.i224, label %if.entry36, label %while.entry.i230.preheader

while.entry.i230.preheader:                       ; preds = %if.entry32
  %memberidx1.i.i228 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %memberidx3.i.i232 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  br label %while.entry.i230

while.entry.i230:                                 ; preds = %while.entry.i230.preheader, %else.i242
  %132 = phi ptr [ %142, %else.i242 ], [ %130, %while.entry.i230.preheader ]
  %133 = phi i64 [ %143, %else.i242 ], [ %128, %while.entry.i230.preheader ]
  %134 = phi ptr [ %146, %else.i242 ], [ %131, %while.entry.i230.preheader ]
  %hash.0.i225 = phi i64 [ %145, %else.i242 ], [ %129, %while.entry.i230.preheader ]
  %135 = load ptr, ptr %134, align 8
  %memberidx.i.i227 = getelementptr inbounds %string, ptr %135, i64 0, i32 2
  %136 = load i64, ptr %memberidx.i.i227, align 4
  %137 = load i64, ptr %memberidx1.i.i228, align 4
  %.not.i.i229 = icmp eq i64 %136, %137
  br i1 %.not.i.i229, label %ifend.i.i233, label %else.i242

ifend.i.i233:                                     ; preds = %while.entry.i230
  %memberidx2.i.i231 = getelementptr inbounds %string, ptr %135, i64 0, i32 1
  %138 = load ptr, ptr %memberidx2.i.i231, align 8
  %139 = load ptr, ptr %memberidx3.i.i232, align 8
  %140 = tail call i64 @memcmp(ptr %138, ptr %139, i64 %136)
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %while.end.i239, label %ifend.i.i233.else.i242_crit_edge

ifend.i.i233.else.i242_crit_edge:                 ; preds = %ifend.i.i233
  %.pre37 = load i64, ptr %memberidx.i222, align 4
  %.pre38 = load ptr, ptr %126, align 8
  br label %else.i242

while.end.i239:                                   ; preds = %ifend.i.i233
  %.pre39.pre = load ptr, ptr %126, align 8
  %ptridx9.i237.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre39.pre, i64 %hash.0.i225
  %.pre40.pre = load ptr, ptr %ptridx9.i237.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i238 = icmp eq ptr %.pre40.pre, null
  br i1 %.not29.i238, label %if.entry36, label %Map_string_PropId____getitem__.exit246

else.i242:                                        ; preds = %ifend.i.i233.else.i242_crit_edge, %while.entry.i230
  %142 = phi ptr [ %.pre38, %ifend.i.i233.else.i242_crit_edge ], [ %132, %while.entry.i230 ]
  %143 = phi i64 [ %.pre37, %ifend.i.i233.else.i242_crit_edge ], [ %133, %while.entry.i230 ]
  %144 = add nuw i64 %hash.0.i225, 1
  %145 = urem i64 %144, %143
  %ptridx7.i240 = getelementptr inbounds ptr, ptr %142, i64 %145
  %146 = load ptr, ptr %ptridx7.i240, align 8
  %.not30.i241 = icmp eq ptr %146, null
  br i1 %.not30.i241, label %if.entry36, label %while.entry.i230

Map_string_PropId____getitem__.exit246:           ; preds = %while.end.i239
  %memberidx15.i244 = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre40.pre, i64 0, i32 1
  %147 = load ptr, ptr %memberidx15.i244, align 8
  %148 = icmp eq ptr %147, null
  br i1 %148, label %if.entry36, label %ifend38

else33:                                           ; preds = %if.entry27
  %memberidx1.i251 = getelementptr inbounds %Module, ptr %121, i64 0, i32 6
  %149 = load ptr, ptr %memberidx1.i251, align 8
  %memberidx2.i252 = getelementptr inbounds %VarId, ptr %114, i64 0, i32 2
  %150 = load i64, ptr %memberidx2.i252, align 4
  %memberidx.i.i253 = getelementptr inbounds %Array_Enum_, ptr %149, i64 0, i32 1
  %151 = load ptr, ptr %memberidx.i.i253, align 8
  %ptridx.i.i254 = getelementptr inbounds ptr, ptr %151, i64 %150
  %152 = load ptr, ptr %ptridx.i.i254, align 8
  %memberidx50 = getelementptr inbounds %Enum, ptr %152, i64 0, i32 3
  %153 = load ptr, ptr %memberidx50, align 8
  %154 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %12)
  %memberidx.i255 = getelementptr inbounds %Map_string_PropId_, ptr %153, i64 0, i32 1
  %155 = load i64, ptr %memberidx.i255, align 4
  %156 = urem i64 %154, %155
  %157 = load ptr, ptr %153, align 8
  %ptridx.i256 = getelementptr inbounds ptr, ptr %157, i64 %156
  %158 = load ptr, ptr %ptridx.i256, align 8
  %.not.i257 = icmp eq ptr %158, null
  br i1 %.not.i257, label %if.entry51, label %while.entry.i263.preheader

while.entry.i263.preheader:                       ; preds = %else33
  %memberidx1.i.i261 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %memberidx3.i.i265 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  br label %while.entry.i263

while.entry.i263:                                 ; preds = %while.entry.i263.preheader, %else.i275
  %159 = phi ptr [ %169, %else.i275 ], [ %157, %while.entry.i263.preheader ]
  %160 = phi i64 [ %170, %else.i275 ], [ %155, %while.entry.i263.preheader ]
  %161 = phi ptr [ %173, %else.i275 ], [ %158, %while.entry.i263.preheader ]
  %hash.0.i258 = phi i64 [ %172, %else.i275 ], [ %156, %while.entry.i263.preheader ]
  %162 = load ptr, ptr %161, align 8
  %memberidx.i.i260 = getelementptr inbounds %string, ptr %162, i64 0, i32 2
  %163 = load i64, ptr %memberidx.i.i260, align 4
  %164 = load i64, ptr %memberidx1.i.i261, align 4
  %.not.i.i262 = icmp eq i64 %163, %164
  br i1 %.not.i.i262, label %ifend.i.i266, label %else.i275

ifend.i.i266:                                     ; preds = %while.entry.i263
  %memberidx2.i.i264 = getelementptr inbounds %string, ptr %162, i64 0, i32 1
  %165 = load ptr, ptr %memberidx2.i.i264, align 8
  %166 = load ptr, ptr %memberidx3.i.i265, align 8
  %167 = tail call i64 @memcmp(ptr %165, ptr %166, i64 %163)
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %while.end.i272, label %ifend.i.i266.else.i275_crit_edge

ifend.i.i266.else.i275_crit_edge:                 ; preds = %ifend.i.i266
  %.pre31 = load i64, ptr %memberidx.i255, align 4
  %.pre32 = load ptr, ptr %153, align 8
  br label %else.i275

while.end.i272:                                   ; preds = %ifend.i.i266
  %.pre33.pre = load ptr, ptr %153, align 8
  %ptridx9.i270.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre33.pre, i64 %hash.0.i258
  %.pre34.pre = load ptr, ptr %ptridx9.i270.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i271 = icmp eq ptr %.pre34.pre, null
  br i1 %.not29.i271, label %if.entry51, label %Map_string_PropId____getitem__.exit279

else.i275:                                        ; preds = %ifend.i.i266.else.i275_crit_edge, %while.entry.i263
  %169 = phi ptr [ %.pre32, %ifend.i.i266.else.i275_crit_edge ], [ %159, %while.entry.i263 ]
  %170 = phi i64 [ %.pre31, %ifend.i.i266.else.i275_crit_edge ], [ %160, %while.entry.i263 ]
  %171 = add nuw i64 %hash.0.i258, 1
  %172 = urem i64 %171, %170
  %ptridx7.i273 = getelementptr inbounds ptr, ptr %169, i64 %172
  %173 = load ptr, ptr %ptridx7.i273, align 8
  %.not30.i274 = icmp eq ptr %173, null
  br i1 %.not30.i274, label %if.entry51, label %while.entry.i263

Map_string_PropId____getitem__.exit279:           ; preds = %while.end.i272
  %memberidx15.i277 = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre34.pre, i64 0, i32 1
  %174 = load ptr, ptr %memberidx15.i277, align 8
  %175 = icmp eq ptr %174, null
  br i1 %175, label %if.entry51, label %ifend53

if.entry36:                                       ; preds = %else.i242, %if.entry32, %while.end.i239, %Map_string_PropId____getitem__.exit246
  %176 = load ptr, ptr %12, align 8
  %memberidx39 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %176, i64 0, i32 5
  %177 = load ptr, ptr %memberidx39, align 8
  %178 = tail call ptr %177(ptr nonnull %12)
  %memberidx40 = getelementptr inbounds %Class, ptr %125, i64 0, i32 1
  %179 = load ptr, ptr %memberidx40, align 8
  %180 = load ptr, ptr %179, align 8
  %memberidx41 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %180, i64 0, i32 5
  %181 = load ptr, ptr %memberidx41, align 8
  %182 = tail call ptr %181(ptr nonnull %179)
  %183 = alloca ptr, align 8
  %184 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %183, ptr nonnull @188, ptr %178, ptr %182)
  %185 = load ptr, ptr %183, align 8
  %186 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %186, align 8
  %memberidx.i280 = getelementptr inbounds %string, ptr %186, i64 0, i32 1
  store ptr %185, ptr %memberidx.i280, align 8
  %memberidx1.i281 = getelementptr inbounds %string, ptr %186, i64 0, i32 2
  store i64 %184, ptr %memberidx1.i281, align 4
  %memberidx2.i282 = getelementptr inbounds %string, ptr %186, i64 0, i32 3
  store i64 %184, ptr %memberidx2.i282, align 4
  tail call void @free(ptr %178)
  tail call void @free(ptr %182)
  %187 = load ptr, ptr %memberidx2, align 8
  %memberidx43 = getelementptr inbounds %Token, ptr %187, i64 0, i32 1
  %188 = load ptr, ptr %memberidx43, align 8
  %189 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i284 = getelementptr inbounds %Compiler, ptr %189, i64 0, i32 6
  %190 = load ptr, ptr %memberidx1.i284, align 8
  %191 = call ptr @malloc(i32 24)
  store i64 1, ptr %191, align 4
  %memberidx1.i.i285 = getelementptr inbounds %FloError, ptr %191, i64 0, i32 2
  store ptr %188, ptr %memberidx1.i.i285, align 8
  %memberidx2.i.i286 = getelementptr inbounds %FloError, ptr %191, i64 0, i32 1
  store ptr %186, ptr %memberidx2.i.i286, align 8
  %memberidx.i.i287 = getelementptr inbounds %Array_FloError_, ptr %190, i64 0, i32 2
  %192 = load i64, ptr %memberidx.i.i287, align 4
  %memberidx1.i2.i288 = getelementptr inbounds %Array_FloError_, ptr %190, i64 0, i32 3
  %193 = load i64, ptr %memberidx1.i2.i288, align 4
  %.not.i.i289 = icmp slt i64 %192, %193
  br i1 %.not.i.i289, label %if.entry36.TypeChecker_error.exit295_crit_edge, label %if.entry.i.i292

if.entry36.TypeChecker_error.exit295_crit_edge:   ; preds = %if.entry36
  %memberidx4.i.i293.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %190, i64 0, i32 1
  %.pre44 = load ptr, ptr %memberidx4.i.i293.phi.trans.insert, align 8
  br label %TypeChecker_error.exit295

if.entry.i.i292:                                  ; preds = %if.entry36
  %194 = shl nuw i64 %193, 1
  store i64 %194, ptr %memberidx1.i2.i288, align 4
  %memberidx2.i.i.i291 = getelementptr inbounds %Array_FloError_, ptr %190, i64 0, i32 1
  %195 = load ptr, ptr %memberidx2.i.i.i291, align 8
  %196 = shl i64 %193, 4
  %197 = call ptr @realloc(ptr %195, i64 %196)
  store ptr %197, ptr %memberidx2.i.i.i291, align 8
  %.pre43 = load i64, ptr %memberidx.i.i287, align 4
  br label %TypeChecker_error.exit295

TypeChecker_error.exit295:                        ; preds = %if.entry36.TypeChecker_error.exit295_crit_edge, %if.entry.i.i292
  %198 = phi ptr [ %.pre44, %if.entry36.TypeChecker_error.exit295_crit_edge ], [ %197, %if.entry.i.i292 ]
  %199 = phi i64 [ %192, %if.entry36.TypeChecker_error.exit295_crit_edge ], [ %.pre43, %if.entry.i.i292 ]
  %200 = add nsw i64 %199, 1
  store i64 %200, ptr %memberidx.i.i287, align 4
  %ptridx.i.i294 = getelementptr inbounds ptr, ptr %198, i64 %199
  store ptr %191, ptr %ptridx.i.i294, align 8
  br label %common.ret

ifend38:                                          ; preds = %Map_string_PropId____getitem__.exit246
  %201 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %147)
  %.not = icmp eq ptr %201, null
  br i1 %.not, label %ifend46, label %if.entry44

if.entry44:                                       ; preds = %ifend38
  %202 = load ptr, ptr %memberidx2, align 8
  %memberidx48 = getelementptr inbounds %Token, ptr %202, i64 0, i32 1
  %203 = load ptr, ptr %memberidx48, align 8
  %204 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i297 = getelementptr inbounds %Compiler, ptr %204, i64 0, i32 6
  %205 = load ptr, ptr %memberidx1.i297, align 8
  %206 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %206, align 4
  %memberidx1.i.i298 = getelementptr inbounds %FloError, ptr %206, i64 0, i32 2
  store ptr %203, ptr %memberidx1.i.i298, align 8
  %memberidx2.i.i299 = getelementptr inbounds %FloError, ptr %206, i64 0, i32 1
  store ptr %201, ptr %memberidx2.i.i299, align 8
  %memberidx.i.i300 = getelementptr inbounds %Array_FloError_, ptr %205, i64 0, i32 2
  %207 = load i64, ptr %memberidx.i.i300, align 4
  %memberidx1.i2.i301 = getelementptr inbounds %Array_FloError_, ptr %205, i64 0, i32 3
  %208 = load i64, ptr %memberidx1.i2.i301, align 4
  %.not.i.i302 = icmp slt i64 %207, %208
  br i1 %.not.i.i302, label %if.entry44.TypeChecker_error.exit308_crit_edge, label %if.entry.i.i305

if.entry44.TypeChecker_error.exit308_crit_edge:   ; preds = %if.entry44
  %memberidx4.i.i306.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %205, i64 0, i32 1
  %.pre42 = load ptr, ptr %memberidx4.i.i306.phi.trans.insert, align 8
  br label %TypeChecker_error.exit308

if.entry.i.i305:                                  ; preds = %if.entry44
  %209 = shl nuw i64 %208, 1
  store i64 %209, ptr %memberidx1.i2.i301, align 4
  %memberidx2.i.i.i304 = getelementptr inbounds %Array_FloError_, ptr %205, i64 0, i32 1
  %210 = load ptr, ptr %memberidx2.i.i.i304, align 8
  %211 = shl i64 %208, 4
  %212 = tail call ptr @realloc(ptr %210, i64 %211)
  store ptr %212, ptr %memberidx2.i.i.i304, align 8
  %.pre41 = load i64, ptr %memberidx.i.i300, align 4
  br label %TypeChecker_error.exit308

TypeChecker_error.exit308:                        ; preds = %if.entry44.TypeChecker_error.exit308_crit_edge, %if.entry.i.i305
  %213 = phi ptr [ %.pre42, %if.entry44.TypeChecker_error.exit308_crit_edge ], [ %212, %if.entry.i.i305 ]
  %214 = phi i64 [ %207, %if.entry44.TypeChecker_error.exit308_crit_edge ], [ %.pre41, %if.entry.i.i305 ]
  %215 = add nsw i64 %214, 1
  store i64 %215, ptr %memberidx.i.i300, align 4
  %ptridx.i.i307 = getelementptr inbounds ptr, ptr %213, i64 %214
  store ptr %206, ptr %ptridx.i.i307, align 8
  br label %common.ret

ifend46:                                          ; preds = %ifend38
  %216 = load ptr, ptr %0, align 8
  %memberidx.i.i309 = getelementptr inbounds %PropId, ptr %147, i64 0, i32 1
  %217 = load ptr, ptr %memberidx.i.i309, align 8
  %memberidx.i.i.i310 = getelementptr inbounds %Program, ptr %216, i64 0, i32 1
  %218 = load ptr, ptr %memberidx.i.i.i310, align 8
  %219 = load i64, ptr %217, align 4
  %memberidx.i.i.i.i311 = getelementptr inbounds %Array_Module_, ptr %218, i64 0, i32 1
  %220 = load ptr, ptr %memberidx.i.i.i.i311, align 8
  %ptridx.i.i.i.i312 = getelementptr inbounds ptr, ptr %220, i64 %219
  %221 = load ptr, ptr %ptridx.i.i.i.i312, align 8
  %memberidx2.i.i.i313 = getelementptr inbounds %Module, ptr %221, i64 0, i32 3
  %222 = load ptr, ptr %memberidx2.i.i.i313, align 8
  %memberidx3.i.i.i314 = getelementptr inbounds %TypeId, ptr %217, i64 0, i32 2
  %223 = load i64, ptr %memberidx3.i.i.i314, align 4
  %memberidx.i5.i.i.i315 = getelementptr inbounds %Array_Class_, ptr %222, i64 0, i32 1
  %224 = load ptr, ptr %memberidx.i5.i.i.i315, align 8
  %ptridx.i6.i.i.i316 = getelementptr inbounds ptr, ptr %224, i64 %223
  %225 = load ptr, ptr %ptridx.i6.i.i.i316, align 8
  %226 = load i64, ptr %147, align 4
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %if.entry.i324, label %ifend.i330

if.entry.i324:                                    ; preds = %ifend46
  %memberidx1.i319 = getelementptr inbounds %Class, ptr %225, i64 0, i32 5
  %228 = load ptr, ptr %memberidx1.i319, align 8
  %memberidx2.i320 = getelementptr inbounds %PropId, ptr %147, i64 0, i32 2
  %229 = load i64, ptr %memberidx2.i320, align 4
  %memberidx.i12.i321 = getelementptr inbounds %Array_ClassMethod_, ptr %228, i64 0, i32 1
  %230 = load ptr, ptr %memberidx.i12.i321, align 8
  %ptridx.i13.i322 = getelementptr inbounds ptr, ptr %230, i64 %229
  %231 = load ptr, ptr %ptridx.i13.i322, align 8
  %memberidx3.i323 = getelementptr inbounds %ClassMethod, ptr %231, i64 0, i32 4
  br label %get_class_prop_type.exit331

ifend.i330:                                       ; preds = %ifend46
  %memberidx4.i325 = getelementptr inbounds %Class, ptr %225, i64 0, i32 4
  %232 = load ptr, ptr %memberidx4.i325, align 8
  %memberidx5.i326 = getelementptr inbounds %PropId, ptr %147, i64 0, i32 2
  %233 = load i64, ptr %memberidx5.i326, align 4
  %memberidx.i11.i327 = getelementptr inbounds %Array_ClassField_, ptr %232, i64 0, i32 1
  %234 = load ptr, ptr %memberidx.i11.i327, align 8
  %ptridx.i.i328 = getelementptr inbounds ptr, ptr %234, i64 %233
  %235 = load ptr, ptr %ptridx.i.i328, align 8
  %memberidx6.i329 = getelementptr inbounds %ClassField, ptr %235, i64 0, i32 4
  br label %get_class_prop_type.exit331

get_class_prop_type.exit331:                      ; preds = %if.entry.i324, %ifend.i330
  %common.ret.op.in.i317 = phi ptr [ %memberidx3.i323, %if.entry.i324 ], [ %memberidx6.i329, %ifend.i330 ]
  %common.ret.op.i318 = load ptr, ptr %common.ret.op.in.i317, align 8
  br label %ifend6

if.entry51:                                       ; preds = %else.i275, %else33, %while.end.i272, %Map_string_PropId____getitem__.exit279
  %236 = load ptr, ptr %12, align 8
  %memberidx54 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %236, i64 0, i32 5
  %237 = load ptr, ptr %memberidx54, align 8
  %238 = tail call ptr %237(ptr nonnull %12)
  %memberidx55 = getelementptr inbounds %Enum, ptr %152, i64 0, i32 1
  %239 = load ptr, ptr %memberidx55, align 8
  %240 = load ptr, ptr %239, align 8
  %memberidx56 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %240, i64 0, i32 5
  %241 = load ptr, ptr %memberidx56, align 8
  %242 = tail call ptr %241(ptr nonnull %239)
  %243 = alloca ptr, align 8
  %244 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %243, ptr nonnull @189, ptr %238, ptr %242)
  %245 = load ptr, ptr %243, align 8
  %246 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %246, align 8
  %memberidx.i332 = getelementptr inbounds %string, ptr %246, i64 0, i32 1
  store ptr %245, ptr %memberidx.i332, align 8
  %memberidx1.i333 = getelementptr inbounds %string, ptr %246, i64 0, i32 2
  store i64 %244, ptr %memberidx1.i333, align 4
  %memberidx2.i334 = getelementptr inbounds %string, ptr %246, i64 0, i32 3
  store i64 %244, ptr %memberidx2.i334, align 4
  tail call void @free(ptr %238)
  tail call void @free(ptr %242)
  %247 = load ptr, ptr %memberidx2, align 8
  %memberidx58 = getelementptr inbounds %Token, ptr %247, i64 0, i32 1
  %248 = load ptr, ptr %memberidx58, align 8
  %249 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i336 = getelementptr inbounds %Compiler, ptr %249, i64 0, i32 6
  %250 = load ptr, ptr %memberidx1.i336, align 8
  %251 = call ptr @malloc(i32 24)
  store i64 1, ptr %251, align 4
  %memberidx1.i.i337 = getelementptr inbounds %FloError, ptr %251, i64 0, i32 2
  store ptr %248, ptr %memberidx1.i.i337, align 8
  %memberidx2.i.i338 = getelementptr inbounds %FloError, ptr %251, i64 0, i32 1
  store ptr %246, ptr %memberidx2.i.i338, align 8
  %memberidx.i.i339 = getelementptr inbounds %Array_FloError_, ptr %250, i64 0, i32 2
  %252 = load i64, ptr %memberidx.i.i339, align 4
  %memberidx1.i2.i340 = getelementptr inbounds %Array_FloError_, ptr %250, i64 0, i32 3
  %253 = load i64, ptr %memberidx1.i2.i340, align 4
  %.not.i.i341 = icmp slt i64 %252, %253
  br i1 %.not.i.i341, label %if.entry51.TypeChecker_error.exit347_crit_edge, label %if.entry.i.i344

if.entry51.TypeChecker_error.exit347_crit_edge:   ; preds = %if.entry51
  %memberidx4.i.i345.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %250, i64 0, i32 1
  %.pre36 = load ptr, ptr %memberidx4.i.i345.phi.trans.insert, align 8
  br label %TypeChecker_error.exit347

if.entry.i.i344:                                  ; preds = %if.entry51
  %254 = shl nuw i64 %253, 1
  store i64 %254, ptr %memberidx1.i2.i340, align 4
  %memberidx2.i.i.i343 = getelementptr inbounds %Array_FloError_, ptr %250, i64 0, i32 1
  %255 = load ptr, ptr %memberidx2.i.i.i343, align 8
  %256 = shl i64 %253, 4
  %257 = call ptr @realloc(ptr %255, i64 %256)
  store ptr %257, ptr %memberidx2.i.i.i343, align 8
  %.pre35 = load i64, ptr %memberidx.i.i339, align 4
  br label %TypeChecker_error.exit347

TypeChecker_error.exit347:                        ; preds = %if.entry51.TypeChecker_error.exit347_crit_edge, %if.entry.i.i344
  %258 = phi ptr [ %.pre36, %if.entry51.TypeChecker_error.exit347_crit_edge ], [ %257, %if.entry.i.i344 ]
  %259 = phi i64 [ %252, %if.entry51.TypeChecker_error.exit347_crit_edge ], [ %.pre35, %if.entry.i.i344 ]
  %260 = add nsw i64 %259, 1
  store i64 %260, ptr %memberidx.i.i339, align 4
  %ptridx.i.i346 = getelementptr inbounds ptr, ptr %258, i64 %259
  store ptr %251, ptr %ptridx.i.i346, align 8
  br label %common.ret

ifend53:                                          ; preds = %Map_string_PropId____getitem__.exit279
  %261 = tail call ptr @malloc(i32 16)
  %262 = load ptr, ptr %152, align 8
  store i64 12, ptr %261, align 4
  %memberidx.i348 = getelementptr inbounds %EnumType, ptr %261, i64 0, i32 1
  store ptr %262, ptr %memberidx.i348, align 8
  br label %ifend6

if.entry60:                                       ; preds = %ifend
  %263 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %263, ptr noundef nonnull align 8 dereferenceable(9) @190, i64 9, i1 false)
  %264 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %264, align 8
  %memberidx.i.i349 = getelementptr inbounds %string, ptr %264, i64 0, i32 1
  store ptr %263, ptr %memberidx.i.i349, align 8
  %memberidx1.i.i350 = getelementptr inbounds %string, ptr %264, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i350, align 4
  %memberidx2.i.i351 = getelementptr inbounds %string, ptr %264, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i351, align 4
  %memberidx.i352 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %265 = load i64, ptr %memberidx.i352, align 4
  %.not.i354 = icmp eq i64 %265, 9
  br i1 %.not.i354, label %ifend.i358, label %else64

ifend.i358:                                       ; preds = %if.entry60
  %memberidx2.i356 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %266 = load ptr, ptr %memberidx2.i356, align 8
  %267 = tail call i64 @memcmp(ptr %266, ptr nonnull %263, i64 9)
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %ifend65, label %else64

else64:                                           ; preds = %if.entry60, %ifend.i358
  %269 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %269, ptr noundef nonnull align 8 dereferenceable(9) @191, i64 9, i1 false)
  %270 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %270, align 8
  %memberidx.i.i359 = getelementptr inbounds %string, ptr %270, i64 0, i32 1
  store ptr %269, ptr %memberidx.i.i359, align 8
  %memberidx1.i.i360 = getelementptr inbounds %string, ptr %270, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i360, align 4
  %memberidx2.i.i361 = getelementptr inbounds %string, ptr %270, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i361, align 4
  %271 = load i64, ptr %memberidx.i352, align 4
  %.not.i364 = icmp eq i64 %271, 9
  br i1 %.not.i364, label %ifend.i368, label %else67

ifend.i368:                                       ; preds = %else64
  %memberidx2.i366 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %272 = load ptr, ptr %memberidx2.i366, align 8
  %273 = tail call i64 @memcmp(ptr %272, ptr nonnull %269, i64 9)
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %ifend65, label %else67

ifend65:                                          ; preds = %ifend.i417, %ifend.i406, %ifend.i395, %ifend.i368, %ifend.i358
  %mem_intrinsic.0 = phi i64 [ 3, %ifend.i358 ], [ 4, %ifend.i368 ], [ 5, %ifend.i395 ], [ 6, %ifend.i406 ], [ 7, %ifend.i417 ]
  %275 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %275, align 4
  %memberidx.i.i370 = getelementptr inbounds %Expression, ptr %275, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i370, align 4
  %memberidx1.i.i371 = getelementptr inbounds %Expression, ptr %275, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i371, align 1
  %memberidx.i372 = getelementptr inbounds %IntrinsicCall, ptr %275, i64 0, i32 4
  store i64 %mem_intrinsic.0, ptr %memberidx.i372, align 4
  %memberidx1.i373 = getelementptr inbounds %IntrinsicCall, ptr %275, i64 0, i32 5
  %276 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %276, align 8
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %276, i64 0, i32 2
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %276, i64 0, i32 3
  store i64 8, ptr %memberidx1.i8.i, align 4
  %memberidx2.i.i374 = getelementptr inbounds %Array_Expression_, ptr %276, i64 0, i32 1
  %277 = tail call ptr @malloc(i32 64)
  store ptr %277, ptr %memberidx2.i.i374, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %276, ptr %memberidx1.i373, align 8
  %memberidx4.i376 = getelementptr inbounds %Expression, ptr %275, i64 0, i32 3
  %278 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %278, align 4
  store ptr %278, ptr %memberidx4.i376, align 8
  %279 = load i64, ptr %memberidx.i7.i, align 4
  %280 = load i64, ptr %memberidx1.i8.i, align 4
  %.not.i379 = icmp slt i64 %279, %280
  br i1 %.not.i379, label %ifend65.Array_Expression____sl__.exit_crit_edge, label %if.entry.i382

ifend65.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend65
  %.pre30 = load ptr, ptr %memberidx2.i.i374, align 8
  br label %Array_Expression____sl__.exit

if.entry.i382:                                    ; preds = %ifend65
  %281 = shl nuw i64 %280, 1
  store i64 %281, ptr %memberidx1.i8.i, align 4
  %282 = load ptr, ptr %memberidx2.i.i374, align 8
  %283 = shl i64 %280, 4
  %284 = tail call ptr @realloc(ptr %282, i64 %283)
  store ptr %284, ptr %memberidx2.i.i374, align 8
  %.pre29 = load i64, ptr %memberidx.i7.i, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend65.Array_Expression____sl__.exit_crit_edge, %if.entry.i382
  %285 = phi ptr [ %.pre30, %ifend65.Array_Expression____sl__.exit_crit_edge ], [ %284, %if.entry.i382 ]
  %286 = phi i64 [ %279, %ifend65.Array_Expression____sl__.exit_crit_edge ], [ %.pre29, %if.entry.i382 ]
  %287 = add nsw i64 %286, 1
  store i64 %287, ptr %memberidx.i7.i, align 4
  %ptridx.i384 = getelementptr inbounds ptr, ptr %285, i64 %286
  store ptr %5, ptr %ptridx.i384, align 8
  br label %common.ret

else67:                                           ; preds = %else64, %ifend.i368
  %288 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %288, ptr noundef nonnull align 8 dereferenceable(9) @192, i64 9, i1 false)
  %289 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %289, align 8
  %memberidx.i.i386 = getelementptr inbounds %string, ptr %289, i64 0, i32 1
  store ptr %288, ptr %memberidx.i.i386, align 8
  %memberidx1.i.i387 = getelementptr inbounds %string, ptr %289, i64 0, i32 2
  store i64 9, ptr %memberidx1.i.i387, align 4
  %memberidx2.i.i388 = getelementptr inbounds %string, ptr %289, i64 0, i32 3
  store i64 9, ptr %memberidx2.i.i388, align 4
  %290 = load i64, ptr %memberidx.i352, align 4
  %.not.i391 = icmp eq i64 %290, 9
  br i1 %.not.i391, label %ifend.i395, label %else70

ifend.i395:                                       ; preds = %else67
  %memberidx2.i393 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %291 = load ptr, ptr %memberidx2.i393, align 8
  %292 = tail call i64 @memcmp(ptr %291, ptr nonnull %288, i64 9)
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %ifend65, label %else70

else70:                                           ; preds = %else67, %ifend.i395
  %294 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %294, ptr noundef nonnull align 8 dereferenceable(6) @193, i64 6, i1 false)
  %295 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %295, align 8
  %memberidx.i.i397 = getelementptr inbounds %string, ptr %295, i64 0, i32 1
  store ptr %294, ptr %memberidx.i.i397, align 8
  %memberidx1.i.i398 = getelementptr inbounds %string, ptr %295, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i398, align 4
  %memberidx2.i.i399 = getelementptr inbounds %string, ptr %295, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i399, align 4
  %296 = load i64, ptr %memberidx.i352, align 4
  %.not.i402 = icmp eq i64 %296, 6
  br i1 %.not.i402, label %ifend.i406, label %else73

ifend.i406:                                       ; preds = %else70
  %memberidx2.i404 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %297 = load ptr, ptr %memberidx2.i404, align 8
  %298 = tail call i64 @memcmp(ptr %297, ptr nonnull %294, i64 6)
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %ifend65, label %else73

else73:                                           ; preds = %else70, %ifend.i406
  %300 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %300, ptr noundef nonnull align 8 dereferenceable(7) @194, i64 7, i1 false)
  %301 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %301, align 8
  %memberidx.i.i408 = getelementptr inbounds %string, ptr %301, i64 0, i32 1
  store ptr %300, ptr %memberidx.i.i408, align 8
  %memberidx1.i.i409 = getelementptr inbounds %string, ptr %301, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i409, align 4
  %memberidx2.i.i410 = getelementptr inbounds %string, ptr %301, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i410, align 4
  %302 = load i64, ptr %memberidx.i352, align 4
  %.not.i413 = icmp eq i64 %302, 7
  br i1 %.not.i413, label %ifend.i417, label %else76

ifend.i417:                                       ; preds = %else73
  %memberidx2.i415 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %303 = load ptr, ptr %memberidx2.i415, align 8
  %304 = tail call i64 @memcmp(ptr %303, ptr nonnull %300, i64 7)
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %ifend65, label %else76

else76:                                           ; preds = %else73, %ifend.i417
  %306 = load ptr, ptr %12, align 8
  %memberidx78 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %306, i64 0, i32 5
  %307 = load ptr, ptr %memberidx78, align 8
  %308 = tail call ptr %307(ptr nonnull %12)
  %309 = alloca ptr, align 8
  %310 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %309, ptr nonnull @195, ptr %308)
  %311 = load ptr, ptr %309, align 8
  %312 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %312, align 8
  %memberidx.i419 = getelementptr inbounds %string, ptr %312, i64 0, i32 1
  store ptr %311, ptr %memberidx.i419, align 8
  %memberidx1.i420 = getelementptr inbounds %string, ptr %312, i64 0, i32 2
  store i64 %310, ptr %memberidx1.i420, align 4
  %memberidx2.i421 = getelementptr inbounds %string, ptr %312, i64 0, i32 3
  store i64 %310, ptr %memberidx2.i421, align 4
  tail call void @free(ptr %308)
  %313 = load ptr, ptr %memberidx2, align 8
  %memberidx80 = getelementptr inbounds %Token, ptr %313, i64 0, i32 1
  %314 = load ptr, ptr %memberidx80, align 8
  %315 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i423 = getelementptr inbounds %Compiler, ptr %315, i64 0, i32 6
  %316 = load ptr, ptr %memberidx1.i423, align 8
  %317 = call ptr @malloc(i32 24)
  store i64 1, ptr %317, align 4
  %memberidx1.i.i424 = getelementptr inbounds %FloError, ptr %317, i64 0, i32 2
  store ptr %314, ptr %memberidx1.i.i424, align 8
  %memberidx2.i.i425 = getelementptr inbounds %FloError, ptr %317, i64 0, i32 1
  store ptr %312, ptr %memberidx2.i.i425, align 8
  %memberidx.i.i426 = getelementptr inbounds %Array_FloError_, ptr %316, i64 0, i32 2
  %318 = load i64, ptr %memberidx.i.i426, align 4
  %memberidx1.i2.i427 = getelementptr inbounds %Array_FloError_, ptr %316, i64 0, i32 3
  %319 = load i64, ptr %memberidx1.i2.i427, align 4
  %.not.i.i428 = icmp slt i64 %318, %319
  br i1 %.not.i.i428, label %else76.TypeChecker_error.exit434_crit_edge, label %if.entry.i.i431

else76.TypeChecker_error.exit434_crit_edge:       ; preds = %else76
  %memberidx4.i.i432.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %316, i64 0, i32 1
  %.pre28 = load ptr, ptr %memberidx4.i.i432.phi.trans.insert, align 8
  br label %TypeChecker_error.exit434

if.entry.i.i431:                                  ; preds = %else76
  %320 = shl nuw i64 %319, 1
  store i64 %320, ptr %memberidx1.i2.i427, align 4
  %memberidx2.i.i.i430 = getelementptr inbounds %Array_FloError_, ptr %316, i64 0, i32 1
  %321 = load ptr, ptr %memberidx2.i.i.i430, align 8
  %322 = shl i64 %319, 4
  %323 = call ptr @realloc(ptr %321, i64 %322)
  store ptr %323, ptr %memberidx2.i.i.i430, align 8
  %.pre27 = load i64, ptr %memberidx.i.i426, align 4
  br label %TypeChecker_error.exit434

TypeChecker_error.exit434:                        ; preds = %else76.TypeChecker_error.exit434_crit_edge, %if.entry.i.i431
  %324 = phi ptr [ %.pre28, %else76.TypeChecker_error.exit434_crit_edge ], [ %323, %if.entry.i.i431 ]
  %325 = phi i64 [ %318, %else76.TypeChecker_error.exit434_crit_edge ], [ %.pre27, %if.entry.i.i431 ]
  %326 = add nsw i64 %325, 1
  store i64 %326, ptr %memberidx.i.i426, align 4
  %ptridx.i.i433 = getelementptr inbounds ptr, ptr %324, i64 %325
  store ptr %317, ptr %ptridx.i.i433, align 8
  br label %common.ret

if.entry83:                                       ; preds = %ifend
  %327 = tail call ptr @malloc(i32 4)
  store i32 1702521203, ptr %327, align 8
  %328 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %328, align 8
  %memberidx.i.i435 = getelementptr inbounds %string, ptr %328, i64 0, i32 1
  store ptr %327, ptr %memberidx.i.i435, align 8
  %memberidx1.i.i436 = getelementptr inbounds %string, ptr %328, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i436, align 4
  %memberidx2.i.i437 = getelementptr inbounds %string, ptr %328, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i437, align 4
  %memberidx.i438 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %329 = load i64, ptr %memberidx.i438, align 4
  %.not.i440 = icmp eq i64 %329, 4
  br i1 %.not.i440, label %ifend.i444, label %ifend6

ifend.i444:                                       ; preds = %if.entry83
  %memberidx2.i442 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %330 = load ptr, ptr %memberidx2.i442, align 8
  %331 = tail call i64 @memcmp(ptr %330, ptr nonnull %327, i64 4)
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %if.entry86, label %ifend6

if.entry86:                                       ; preds = %ifend.i444
  %333 = tail call ptr @malloc(i32 33)
  %memberidx89 = getelementptr inbounds %ArrayType, ptr %10, i64 0, i32 2
  %334 = load i64, ptr %memberidx89, align 4
  store i64 8, ptr %333, align 4
  %memberidx.i.i446 = getelementptr inbounds %Expression, ptr %333, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i446, align 4
  %memberidx1.i.i447 = getelementptr inbounds %Expression, ptr %333, i64 0, i32 1
  %memberidx.i448 = getelementptr inbounds %Expression, ptr %333, i64 0, i32 3
  %335 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %335, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %335, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  store ptr %335, ptr %memberidx.i448, align 8
  %memberidx1.i449 = getelementptr inbounds %IntExpression, ptr %333, i64 0, i32 4
  store i64 %334, ptr %memberidx1.i449, align 4
  store i1 true, ptr %memberidx1.i.i447, align 1
  br label %common.ret

if.entry91:                                       ; preds = %ifend
  %memberidx94 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %336 = load ptr, ptr %memberidx94, align 8
  %memberidx95 = getelementptr inbounds %ModuleVarId, ptr %336, i64 0, i32 3
  %337 = load ptr, ptr %memberidx95, align 8
  %memberidx96 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %338 = load ptr, ptr %memberidx96, align 8
  store ptr %337, ptr %memberidx96, align 8
  %339 = alloca %VarAccessExpressionNode, align 8
  %340 = load ptr, ptr %memberidx2, align 8
  %memberidx.i451 = getelementptr inbounds %Token, ptr %340, i64 0, i32 1
  %341 = load ptr, ptr %memberidx.i451, align 8
  store ptr %341, ptr %339, align 8
  %memberidx.i.i.i452 = getelementptr inbounds %StatementNode, ptr %339, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i452, align 8
  %memberidx.i.i453 = getelementptr inbounds %ExpressionNode, ptr %339, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i453, align 8
  %memberidx1.i454 = getelementptr inbounds %VarAccessExpressionNode, ptr %339, i64 0, i32 3
  store ptr %340, ptr %memberidx1.i454, align 8
  %342 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %342, align 4
  %343 = call fastcc ptr @TypeChecker_check_var_access_expr(ptr nonnull %0, ptr nonnull %342, ptr nonnull %339)
  store ptr %338, ptr %memberidx96, align 8
  br label %common.ret

else92:                                           ; preds = %if.entry.i2, %ifend
  %344 = load ptr, ptr %12, align 8
  %memberidx100 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %344, i64 0, i32 5
  %345 = load ptr, ptr %memberidx100, align 8
  %346 = tail call ptr %345(ptr nonnull %12)
  %347 = load ptr, ptr %memberidx1, align 8
  %348 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %347)
  %349 = load ptr, ptr %348, align 8
  %memberidx102 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %349, i64 0, i32 5
  %350 = load ptr, ptr %memberidx102, align 8
  %351 = tail call ptr %350(ptr nonnull %348)
  %352 = alloca ptr, align 8
  %353 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %352, ptr nonnull @196, ptr %346, ptr %351)
  %354 = load ptr, ptr %352, align 8
  %355 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %355, align 8
  %memberidx.i455 = getelementptr inbounds %string, ptr %355, i64 0, i32 1
  store ptr %354, ptr %memberidx.i455, align 8
  %memberidx1.i456 = getelementptr inbounds %string, ptr %355, i64 0, i32 2
  store i64 %353, ptr %memberidx1.i456, align 4
  %memberidx2.i457 = getelementptr inbounds %string, ptr %355, i64 0, i32 3
  store i64 %353, ptr %memberidx2.i457, align 4
  tail call void @free(ptr %346)
  tail call void @free(ptr %351)
  %356 = load ptr, ptr %memberidx, align 8
  %357 = load ptr, ptr %356, align 8
  %358 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i459 = getelementptr inbounds %Compiler, ptr %358, i64 0, i32 6
  %359 = load ptr, ptr %memberidx1.i459, align 8
  %360 = call ptr @malloc(i32 24)
  store i64 4, ptr %360, align 4
  %memberidx1.i.i460 = getelementptr inbounds %FloError, ptr %360, i64 0, i32 2
  store ptr %357, ptr %memberidx1.i.i460, align 8
  %memberidx2.i.i461 = getelementptr inbounds %FloError, ptr %360, i64 0, i32 1
  store ptr %355, ptr %memberidx2.i.i461, align 8
  %memberidx.i.i462 = getelementptr inbounds %Array_FloError_, ptr %359, i64 0, i32 2
  %361 = load i64, ptr %memberidx.i.i462, align 4
  %memberidx1.i2.i463 = getelementptr inbounds %Array_FloError_, ptr %359, i64 0, i32 3
  %362 = load i64, ptr %memberidx1.i2.i463, align 4
  %.not.i.i464 = icmp slt i64 %361, %362
  br i1 %.not.i.i464, label %else92.TypeChecker_error.exit470_crit_edge, label %if.entry.i.i467

else92.TypeChecker_error.exit470_crit_edge:       ; preds = %else92
  %memberidx4.i.i468.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %359, i64 0, i32 1
  %.pre46 = load ptr, ptr %memberidx4.i.i468.phi.trans.insert, align 8
  br label %TypeChecker_error.exit470

if.entry.i.i467:                                  ; preds = %else92
  %363 = shl nuw i64 %362, 1
  store i64 %363, ptr %memberidx1.i2.i463, align 4
  %memberidx2.i.i.i466 = getelementptr inbounds %Array_FloError_, ptr %359, i64 0, i32 1
  %364 = load ptr, ptr %memberidx2.i.i.i466, align 8
  %365 = shl i64 %362, 4
  %366 = call ptr @realloc(ptr %364, i64 %365)
  store ptr %366, ptr %memberidx2.i.i.i466, align 8
  %.pre45 = load i64, ptr %memberidx.i.i462, align 4
  br label %TypeChecker_error.exit470

TypeChecker_error.exit470:                        ; preds = %else92.TypeChecker_error.exit470_crit_edge, %if.entry.i.i467
  %367 = phi ptr [ %.pre46, %else92.TypeChecker_error.exit470_crit_edge ], [ %366, %if.entry.i.i467 ]
  %368 = phi i64 [ %361, %else92.TypeChecker_error.exit470_crit_edge ], [ %.pre45, %if.entry.i.i467 ]
  %369 = add nsw i64 %368, 1
  store i64 %369, ptr %memberidx.i.i462, align 4
  %ptridx.i.i469 = getelementptr inbounds ptr, ptr %367, i64 %368
  store ptr %360, ptr %ptridx.i.i469, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %.not = icmp eq i64 %5, 19
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %6, align 4
  %8 = icmp eq i64 %7, 19
  br i1 %8, label %if.entry.i111, label %is_object.exit

if.entry.i111:                                    ; preds = %if.entry, %if.entry.i111
  %.tr5.i = phi ptr [ %9, %if.entry.i111 ], [ %6, %if.entry ]
  %memberidx1.i110 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %9 = load ptr, ptr %memberidx1.i110, align 8
  %10 = load i64, ptr %9, align 4
  %11 = icmp eq i64 %10, 19
  br i1 %11, label %if.entry.i111, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i111, %if.entry
  %.lcssa.i = phi i64 [ %7, %if.entry ], [ %10, %if.entry.i111 ]
  %12 = icmp eq i64 %.lcssa.i, 11
  br i1 %12, label %if.entry2, label %ifend4

ifend:                                            ; preds = %ifend4, %4
  %right.0 = phi ptr [ %45, %ifend4 ], [ %2, %4 ]
  %memberidx12 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %13 = load ptr, ptr %memberidx12, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 16
  br i1 %15, label %if.entry14, label %ifend16

if.entry2:                                        ; preds = %is_object.exit
  %16 = tail call fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr %3)
  %17 = icmp ne ptr %16, null
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %18 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %18, i64 0, i32 6
  %19 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i, align 4
  %21 = icmp sgt i64 %20, 0
  %22 = or i1 %17, %21
  br i1 %22, label %common.ret, label %if.entry2.ifend4_crit_edge

if.entry2.ifend4_crit_edge:                       ; preds = %if.entry2
  %.pre = load ptr, ptr %memberidx1, align 8
  %.pre112 = load i64, ptr %memberidx, align 4
  br label %ifend4

ifend4:                                           ; preds = %if.entry2.ifend4_crit_edge, %is_object.exit
  %23 = phi i64 [ %.pre112, %if.entry2.ifend4_crit_edge ], [ %5, %is_object.exit ]
  %24 = phi ptr [ %.pre, %if.entry2.ifend4_crit_edge ], [ %6, %is_object.exit ]
  %25 = icmp eq i64 %23, 20
  %spec.store.select.i = select i1 %25, i64 1, i64 %23
  %26 = icmp eq i64 %spec.store.select.i, 21
  %spec.store.select34.i = select i1 %26, i64 2, i64 %spec.store.select.i
  %27 = icmp eq i64 %spec.store.select34.i, 22
  %spec.store.select30.i = select i1 %27, i64 3, i64 %spec.store.select34.i
  %28 = icmp eq i64 %spec.store.select30.i, 23
  %spec.store.select37.i = select i1 %28, i64 4, i64 %spec.store.select30.i
  %29 = icmp eq i64 %spec.store.select37.i, 24
  %spec.store.select31.i = select i1 %29, i64 5, i64 %spec.store.select37.i
  %30 = icmp eq i64 %spec.store.select31.i, 25
  %spec.store.select35.i = select i1 %30, i64 6, i64 %spec.store.select31.i
  %31 = icmp eq i64 %spec.store.select35.i, 26
  %spec.store.select32.i = select i1 %31, i64 16, i64 %spec.store.select35.i
  %32 = icmp eq i64 %spec.store.select32.i, 27
  %spec.store.select38.i = select i1 %32, i64 15, i64 %spec.store.select32.i
  %33 = icmp eq i64 %spec.store.select38.i, 29
  %spec.store.select33.i = select i1 %33, i64 13, i64 %spec.store.select38.i
  %34 = icmp eq i64 %spec.store.select33.i, 30
  %spec.store.select36.i = select i1 %34, i64 14, i64 %spec.store.select33.i
  %35 = tail call ptr @malloc(i32 48)
  %memberidx28.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 3
  %36 = load ptr, ptr %memberidx28.i, align 8
  %memberidx29.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 5
  %37 = load ptr, ptr %memberidx29.i, align 8
  %38 = load ptr, ptr %36, align 8
  %39 = load ptr, ptr %37, align 8
  %40 = tail call ptr @malloc(i32 32)
  %41 = load i64, ptr %38, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %39, i64 0, i32 1
  %42 = load i64, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %38, i64 0, i32 2
  %43 = load i64, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %39, i64 0, i32 3
  %44 = load i64, ptr %memberidx3.i.i.i, align 4
  store i64 %41, ptr %40, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %40, i64 0, i32 1
  store i64 %42, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %40, i64 0, i32 2
  store i64 %43, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %40, i64 0, i32 3
  store i64 %44, ptr %memberidx3.i.i.i.i, align 4
  store ptr %40, ptr %35, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %35, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i.i = getelementptr inbounds %ExpressionNode, ptr %35, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %35, i64 0, i32 3
  store ptr %36, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %35, i64 0, i32 4
  store i64 %spec.store.select36.i, ptr %memberidx3.i.i, align 4
  %memberidx4.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %35, i64 0, i32 5
  store ptr %37, ptr %memberidx4.i.i, align 8
  %45 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %24, ptr nonnull %35)
  %memberidx.i59 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %46 = load ptr, ptr %memberidx.i59, align 8
  %memberidx1.i60 = getelementptr inbounds %Compiler, ptr %46, i64 0, i32 6
  %47 = load ptr, ptr %memberidx1.i60, align 8
  %memberidx2.i61 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %48 = load i64, ptr %memberidx2.i61, align 4
  %49 = icmp sgt i64 %48, 0
  br i1 %49, label %common.ret, label %ifend

common.ret:                                       ; preds = %if.entry2, %ifend4, %ifend26, %TypeChecker_error.exit104, %TypeChecker_error.exit88, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit88 ], [ null, %TypeChecker_error.exit104 ], [ %116, %ifend26 ], [ null, %ifend4 ], [ %16, %if.entry2 ]
  ret ptr %common.ret.op

if.entry14:                                       ; preds = %ifend
  %50 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %50, ptr noundef nonnull align 8 dereferenceable(33) @161, i64 33, i1 false)
  %51 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %51, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %51, i64 0, i32 1
  store ptr %50, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %51, i64 0, i32 2
  store i64 33, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i62 = getelementptr inbounds %string, ptr %51, i64 0, i32 3
  store i64 33, ptr %memberidx2.i.i62, align 4
  %52 = load ptr, ptr %3, align 8
  %memberidx.i63 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %53 = load ptr, ptr %memberidx.i63, align 8
  %memberidx1.i64 = getelementptr inbounds %Compiler, ptr %53, i64 0, i32 6
  %54 = load ptr, ptr %memberidx1.i64, align 8
  %55 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %55, align 4
  %memberidx1.i.i65 = getelementptr inbounds %FloError, ptr %55, i64 0, i32 2
  store ptr %52, ptr %memberidx1.i.i65, align 8
  %memberidx2.i.i66 = getelementptr inbounds %FloError, ptr %55, i64 0, i32 1
  store ptr %51, ptr %memberidx2.i.i66, align 8
  %memberidx.i.i67 = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 2
  %56 = load i64, ptr %memberidx.i.i67, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 3
  %57 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %56, %57
  br i1 %.not.i.i, label %if.entry14.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry14.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry14
  %memberidx4.i.i70.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 1
  %.pre118 = load ptr, ptr %memberidx4.i.i70.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry14
  %58 = shl nuw i64 %57, 1
  store i64 %58, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i69 = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 1
  %59 = load ptr, ptr %memberidx2.i.i.i69, align 8
  %60 = shl i64 %57, 4
  %61 = tail call ptr @realloc(ptr %59, i64 %60)
  store ptr %61, ptr %memberidx2.i.i.i69, align 8
  %.pre117 = load i64, ptr %memberidx.i.i67, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry14.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %62 = phi ptr [ %.pre118, %if.entry14.TypeChecker_error.exit_crit_edge ], [ %61, %if.entry.i.i ]
  %63 = phi i64 [ %56, %if.entry14.TypeChecker_error.exit_crit_edge ], [ %.pre117, %if.entry.i.i ]
  %64 = add nsw i64 %63, 1
  store i64 %64, ptr %memberidx.i.i67, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %62, i64 %63
  store ptr %55, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend16:                                          ; preds = %ifend
  %memberidx.i71 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 2
  %65 = load i64, ptr %memberidx.i71, align 4
  switch i64 %65, label %if.entry18 [
    i64 7, label %if.entry.i
    i64 12, label %check_is_var.exit
    i64 13, label %ifend20
  ]

if.entry.i:                                       ; preds = %ifend16
  %memberidx1.i72 = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %66 = load ptr, ptr %memberidx1.i72, align 8
  %67 = load i64, ptr %66, align 4
  %68 = icmp eq i64 %67, 1
  br i1 %68, label %ifend20, label %if.entry18

check_is_var.exit:                                ; preds = %ifend16
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %1, i64 0, i32 5
  %69 = load ptr, ptr %memberidx7.i, align 8
  %70 = load i64, ptr %69, align 4
  %71 = icmp eq i64 %70, 1
  br i1 %71, label %ifend20, label %if.entry18

if.entry18:                                       ; preds = %if.entry.i, %ifend16, %check_is_var.exit
  %72 = tail call ptr @malloc(i32 35)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %72, ptr noundef nonnull align 8 dereferenceable(35) @162, i64 35, i1 false)
  %73 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %73, align 8
  %memberidx.i.i73 = getelementptr inbounds %string, ptr %73, i64 0, i32 1
  store ptr %72, ptr %memberidx.i.i73, align 8
  %memberidx1.i.i74 = getelementptr inbounds %string, ptr %73, i64 0, i32 2
  store i64 35, ptr %memberidx1.i.i74, align 4
  %memberidx2.i.i75 = getelementptr inbounds %string, ptr %73, i64 0, i32 3
  store i64 35, ptr %memberidx2.i.i75, align 4
  %74 = load ptr, ptr %3, align 8
  %memberidx.i76 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %75 = load ptr, ptr %memberidx.i76, align 8
  %memberidx1.i77 = getelementptr inbounds %Compiler, ptr %75, i64 0, i32 6
  %76 = load ptr, ptr %memberidx1.i77, align 8
  %77 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %77, align 4
  %memberidx1.i.i78 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 2
  store ptr %74, ptr %memberidx1.i.i78, align 8
  %memberidx2.i.i79 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 1
  store ptr %73, ptr %memberidx2.i.i79, align 8
  %memberidx.i.i80 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 2
  %78 = load i64, ptr %memberidx.i.i80, align 4
  %memberidx1.i2.i81 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 3
  %79 = load i64, ptr %memberidx1.i2.i81, align 4
  %.not.i.i82 = icmp slt i64 %78, %79
  br i1 %.not.i.i82, label %if.entry18.TypeChecker_error.exit88_crit_edge, label %if.entry.i.i85

if.entry18.TypeChecker_error.exit88_crit_edge:    ; preds = %if.entry18
  %memberidx4.i.i86.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 1
  %.pre116 = load ptr, ptr %memberidx4.i.i86.phi.trans.insert, align 8
  br label %TypeChecker_error.exit88

if.entry.i.i85:                                   ; preds = %if.entry18
  %80 = shl nuw i64 %79, 1
  store i64 %80, ptr %memberidx1.i2.i81, align 4
  %memberidx2.i.i.i84 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 1
  %81 = load ptr, ptr %memberidx2.i.i.i84, align 8
  %82 = shl i64 %79, 4
  %83 = tail call ptr @realloc(ptr %81, i64 %82)
  store ptr %83, ptr %memberidx2.i.i.i84, align 8
  %.pre115 = load i64, ptr %memberidx.i.i80, align 4
  br label %TypeChecker_error.exit88

TypeChecker_error.exit88:                         ; preds = %if.entry18.TypeChecker_error.exit88_crit_edge, %if.entry.i.i85
  %84 = phi ptr [ %.pre116, %if.entry18.TypeChecker_error.exit88_crit_edge ], [ %83, %if.entry.i.i85 ]
  %85 = phi i64 [ %78, %if.entry18.TypeChecker_error.exit88_crit_edge ], [ %.pre115, %if.entry.i.i85 ]
  %86 = add nsw i64 %85, 1
  store i64 %86, ptr %memberidx.i.i80, align 4
  %ptridx.i.i87 = getelementptr inbounds ptr, ptr %84, i64 %85
  store ptr %77, ptr %ptridx.i.i87, align 8
  br label %common.ret

ifend20:                                          ; preds = %if.entry.i, %ifend16, %check_is_var.exit
  %memberidx23 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %87 = load ptr, ptr %memberidx23, align 8
  %88 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nonnull %13, ptr %87)
  br i1 %88, label %ifend26, label %if.entry24

if.entry24:                                       ; preds = %ifend20
  %89 = load ptr, ptr %memberidx23, align 8
  %90 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %89)
  %91 = load ptr, ptr %90, align 8
  %memberidx28 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %91, i64 0, i32 5
  %92 = load ptr, ptr %memberidx28, align 8
  %93 = tail call ptr %92(ptr nonnull %90)
  %94 = load ptr, ptr %memberidx12, align 8
  %95 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %94)
  %96 = load ptr, ptr %95, align 8
  %memberidx30 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %96, i64 0, i32 5
  %97 = load ptr, ptr %memberidx30, align 8
  %98 = tail call ptr %97(ptr nonnull %95)
  %99 = alloca ptr, align 8
  %100 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %99, ptr nonnull @163, ptr %93, ptr %98)
  %101 = load ptr, ptr %99, align 8
  %102 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %102, align 8
  %memberidx.i89 = getelementptr inbounds %string, ptr %102, i64 0, i32 1
  store ptr %101, ptr %memberidx.i89, align 8
  %memberidx1.i90 = getelementptr inbounds %string, ptr %102, i64 0, i32 2
  store i64 %100, ptr %memberidx1.i90, align 4
  %memberidx2.i91 = getelementptr inbounds %string, ptr %102, i64 0, i32 3
  store i64 %100, ptr %memberidx2.i91, align 4
  tail call void @free(ptr %93)
  tail call void @free(ptr %98)
  %103 = load ptr, ptr %3, align 8
  %memberidx.i92 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %104 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i93 = getelementptr inbounds %Compiler, ptr %104, i64 0, i32 6
  %105 = load ptr, ptr %memberidx1.i93, align 8
  %106 = call ptr @malloc(i32 24)
  store i64 5, ptr %106, align 4
  %memberidx1.i.i94 = getelementptr inbounds %FloError, ptr %106, i64 0, i32 2
  store ptr %103, ptr %memberidx1.i.i94, align 8
  %memberidx2.i.i95 = getelementptr inbounds %FloError, ptr %106, i64 0, i32 1
  store ptr %102, ptr %memberidx2.i.i95, align 8
  %memberidx.i.i96 = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 2
  %107 = load i64, ptr %memberidx.i.i96, align 4
  %memberidx1.i2.i97 = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 3
  %108 = load i64, ptr %memberidx1.i2.i97, align 4
  %.not.i.i98 = icmp slt i64 %107, %108
  br i1 %.not.i.i98, label %if.entry24.TypeChecker_error.exit104_crit_edge, label %if.entry.i.i101

if.entry24.TypeChecker_error.exit104_crit_edge:   ; preds = %if.entry24
  %memberidx4.i.i102.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 1
  %.pre114 = load ptr, ptr %memberidx4.i.i102.phi.trans.insert, align 8
  br label %TypeChecker_error.exit104

if.entry.i.i101:                                  ; preds = %if.entry24
  %109 = shl nuw i64 %108, 1
  store i64 %109, ptr %memberidx1.i2.i97, align 4
  %memberidx2.i.i.i100 = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 1
  %110 = load ptr, ptr %memberidx2.i.i.i100, align 8
  %111 = shl i64 %108, 4
  %112 = call ptr @realloc(ptr %110, i64 %111)
  store ptr %112, ptr %memberidx2.i.i.i100, align 8
  %.pre113 = load i64, ptr %memberidx.i.i96, align 4
  br label %TypeChecker_error.exit104

TypeChecker_error.exit104:                        ; preds = %if.entry24.TypeChecker_error.exit104_crit_edge, %if.entry.i.i101
  %113 = phi ptr [ %.pre114, %if.entry24.TypeChecker_error.exit104_crit_edge ], [ %112, %if.entry.i.i101 ]
  %114 = phi i64 [ %107, %if.entry24.TypeChecker_error.exit104_crit_edge ], [ %.pre113, %if.entry.i.i101 ]
  %115 = add nsw i64 %114, 1
  store i64 %115, ptr %memberidx.i.i96, align 4
  %ptridx.i.i103 = getelementptr inbounds ptr, ptr %113, i64 %114
  store ptr %106, ptr %ptridx.i.i103, align 8
  br label %common.ret

ifend26:                                          ; preds = %ifend20
  %116 = tail call ptr @malloc(i32 49)
  %117 = load ptr, ptr %memberidx23, align 8
  store i64 8, ptr %116, align 4
  %memberidx.i.i105 = getelementptr inbounds %Expression, ptr %116, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i105, align 4
  %memberidx1.i.i106 = getelementptr inbounds %Expression, ptr %116, i64 0, i32 1
  %memberidx.i107 = getelementptr inbounds %BinaryExpression, ptr %116, i64 0, i32 4
  store ptr %1, ptr %memberidx.i107, align 8
  %memberidx1.i108 = getelementptr inbounds %BinaryExpression, ptr %116, i64 0, i32 5
  store i64 19, ptr %memberidx1.i108, align 4
  %memberidx2.i109 = getelementptr inbounds %BinaryExpression, ptr %116, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i109, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %116, i64 0, i32 3
  store ptr %117, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i106, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_init_function_signature(ptr %0, ptr nocapture readonly %1, ptr %2, ptr nocapture %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %4, align 8
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 2
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %6 = tail call ptr @malloc(i32 25)
  %memberidx.i77 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i77, align 8
  %memberidx1.i78 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 2
  %8 = load i64, ptr %memberidx1.i78, align 4
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 2
  store i64 %8, ptr %memberidx3.i.i, align 4
  %9 = icmp slt i64 %8, 1
  br i1 %9, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i84 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %memberidx.i90 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 2
  %memberidx1.i91 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 3
  %memberidx2.i.i93 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Type____sl__.exit
  %10 = phi i64 [ 1, %for.body.lr.ph ], [ %50, %Array_Type____sl__.exit ]
  %arg.0119.in = phi ptr [ %7, %for.body.lr.ph ], [ %ptridx.i105, %Array_Type____sl__.exit ]
  %arg.0119 = load ptr, ptr %arg.0119.in, align 8
  %11 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %11, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %11, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i, align 4
  %memberidx1.i.i81 = getelementptr inbounds %Expression, ptr %11, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i81, align 1
  %memberidx3 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 5
  %12 = load ptr, ptr %arg.0119, align 8
  %memberidx5 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx5, align 8
  store ptr %13, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 6
  store ptr null, ptr %memberidx6, align 8
  %14 = call ptr @malloc(i32 8)
  store i64 20, ptr %14, align 4
  %memberidx7 = getelementptr inbounds %ArgNode, ptr %arg.0119, i64 0, i32 1
  %15 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

common.ret.loopexit:                              ; preds = %if.entry, %if.entry13
  store i1 false, ptr %6, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %for.end
  %common.ret.op = phi ptr [ %17, %for.end ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

for.end:                                          ; preds = %Array_Type____sl__.exit, %for.entry
  tail call void @free(ptr nonnull %6)
  %16 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %2)
  %17 = tail call ptr @malloc(i32 25)
  store i64 15, ptr %17, align 4
  %memberidx.i82 = getelementptr inbounds %FunctionType, ptr %17, i64 0, i32 1
  store ptr %4, ptr %memberidx.i82, align 8
  %memberidx1.i83 = getelementptr inbounds %FunctionType, ptr %17, i64 0, i32 2
  store ptr %16, ptr %memberidx1.i83, align 8
  br label %common.ret

if.entry:                                         ; preds = %for.body
  %18 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %15)
  %19 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i85 = getelementptr inbounds %Compiler, ptr %19, i64 0, i32 6
  %20 = load ptr, ptr %memberidx1.i85, align 8
  %memberidx2.i86 = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 2
  %21 = load i64, ptr %memberidx2.i86, align 4
  %22 = icmp sgt i64 %21, 0
  br i1 %22, label %common.ret.loopexit, label %ifend

ifend:                                            ; preds = %if.entry, %for.body
  %arg_type.0 = phi ptr [ %18, %if.entry ], [ %14, %for.body ]
  %memberidx12 = getelementptr inbounds %ArgNode, ptr %arg.0119, i64 0, i32 2
  %23 = load ptr, ptr %memberidx12, align 8
  %.not76 = icmp eq ptr %23, null
  br i1 %.not76, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend
  %24 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %arg_type.0, ptr nonnull %23)
  store ptr %24, ptr %memberidx6, align 8
  %25 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i88 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 6
  %26 = load ptr, ptr %memberidx1.i88, align 8
  %memberidx2.i89 = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i89, align 4
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %common.ret.loopexit, label %ifend20

ifend15:                                          ; preds = %ifend20, %TypeChecker_error.exit, %else23, %ifend
  %arg_type.1 = phi ptr [ %arg_type.0, %TypeChecker_error.exit ], [ %arg_type.0, %else23 ], [ %arg_type.0, %ifend ], [ %53, %ifend20 ]
  %29 = load i64, ptr %memberidx.i90, align 4
  %30 = load i64, ptr %memberidx1.i91, align 4
  %.not.i = icmp slt i64 %29, %30
  br i1 %.not.i, label %ifend15.Array_FunctionArg____sl__.exit_crit_edge, label %if.entry.i

ifend15.Array_FunctionArg____sl__.exit_crit_edge: ; preds = %ifend15
  %.pre123 = load ptr, ptr %memberidx2.i.i93, align 8
  br label %Array_FunctionArg____sl__.exit

if.entry.i:                                       ; preds = %ifend15
  %31 = shl nuw i64 %30, 1
  store i64 %31, ptr %memberidx1.i91, align 4
  %32 = load ptr, ptr %memberidx2.i.i93, align 8
  %33 = shl i64 %30, 4
  %34 = call ptr @realloc(ptr %32, i64 %33)
  store ptr %34, ptr %memberidx2.i.i93, align 8
  %.pre122 = load i64, ptr %memberidx.i90, align 4
  br label %Array_FunctionArg____sl__.exit

Array_FunctionArg____sl__.exit:                   ; preds = %ifend15.Array_FunctionArg____sl__.exit_crit_edge, %if.entry.i
  %35 = phi ptr [ %.pre123, %ifend15.Array_FunctionArg____sl__.exit_crit_edge ], [ %34, %if.entry.i ]
  %36 = phi i64 [ %29, %ifend15.Array_FunctionArg____sl__.exit_crit_edge ], [ %.pre122, %if.entry.i ]
  %37 = add nsw i64 %36, 1
  store i64 %37, ptr %memberidx.i90, align 4
  %ptridx.i94 = getelementptr inbounds ptr, ptr %35, i64 %36
  store ptr %11, ptr %ptridx.i94, align 8
  %memberidx38 = getelementptr inbounds %Expression, ptr %11, i64 0, i32 3
  store ptr %arg_type.1, ptr %memberidx38, align 8
  %38 = load ptr, ptr %memberidx3, align 8
  %39 = call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr %0, ptr %38, ptr nonnull %11, ptr %arg_type.1)
  %memberidx40 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 4
  %memberidx41 = getelementptr inbounds %Var, ptr %39, i64 0, i32 1
  %40 = load ptr, ptr %memberidx41, align 8
  store ptr %40, ptr %memberidx40, align 8
  %41 = load i64, ptr %memberidx.i, align 4
  %42 = load i64, ptr %memberidx1.i, align 4
  %.not.i97 = icmp slt i64 %41, %42
  br i1 %.not.i97, label %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge, label %if.entry.i100

Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge: ; preds = %Array_FunctionArg____sl__.exit
  %.pre125 = load ptr, ptr %memberidx2.i, align 8
  br label %Array_Type____sl__.exit

if.entry.i100:                                    ; preds = %Array_FunctionArg____sl__.exit
  %43 = shl nuw i64 %42, 1
  store i64 %43, ptr %memberidx1.i, align 4
  %44 = load ptr, ptr %memberidx2.i, align 8
  %45 = shl i64 %42, 4
  %46 = call ptr @realloc(ptr %44, i64 %45)
  store ptr %46, ptr %memberidx2.i, align 8
  %.pre124 = load i64, ptr %memberidx.i, align 4
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge, %if.entry.i100
  %47 = phi ptr [ %.pre125, %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge ], [ %46, %if.entry.i100 ]
  %48 = phi i64 [ %41, %Array_FunctionArg____sl__.exit.Array_Type____sl__.exit_crit_edge ], [ %.pre124, %if.entry.i100 ]
  %49 = add nsw i64 %48, 1
  store i64 %49, ptr %memberidx.i, align 4
  %ptridx.i102 = getelementptr inbounds ptr, ptr %47, i64 %48
  store ptr %arg_type.1, ptr %ptridx.i102, align 8
  %50 = add nuw nsw i64 %10, 1
  store i64 %50, ptr %memberidx1.i.i, align 4
  %ptridx.i105 = getelementptr inbounds ptr, ptr %7, i64 %10
  %.not126 = icmp slt i64 %10, %8
  br i1 %.not126, label %for.body, label %for.end

ifend20:                                          ; preds = %if.entry13
  %51 = load i64, ptr %arg_type.0, align 4
  %52 = icmp eq i64 %51, 20
  %memberidx26 = getelementptr inbounds %Expression, ptr %24, i64 0, i32 3
  %53 = load ptr, ptr %memberidx26, align 8
  br i1 %52, label %ifend15, label %else23

else23:                                           ; preds = %ifend20
  %54 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %arg_type.0, ptr %53)
  br i1 %54, label %ifend15, label %if.entry29

if.entry29:                                       ; preds = %else23
  %55 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %arg_type.0)
  %56 = load ptr, ptr %55, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %56, i64 0, i32 5
  %57 = load ptr, ptr %memberidx32, align 8
  %58 = call ptr %57(ptr nonnull %55)
  %59 = load ptr, ptr %memberidx6, align 8
  %memberidx34 = getelementptr inbounds %Expression, ptr %59, i64 0, i32 3
  %60 = load ptr, ptr %memberidx34, align 8
  %61 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %60)
  %62 = load ptr, ptr %61, align 8
  %memberidx35 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %62, i64 0, i32 5
  %63 = load ptr, ptr %memberidx35, align 8
  %64 = call ptr %63(ptr nonnull %61)
  %65 = alloca ptr, align 8
  %66 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %65, ptr nonnull @96, ptr %58, ptr %64)
  %67 = load ptr, ptr %65, align 8
  %68 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %68, align 8
  %memberidx.i107 = getelementptr inbounds %string, ptr %68, i64 0, i32 1
  store ptr %67, ptr %memberidx.i107, align 8
  %memberidx1.i108 = getelementptr inbounds %string, ptr %68, i64 0, i32 2
  store i64 %66, ptr %memberidx1.i108, align 4
  %memberidx2.i109 = getelementptr inbounds %string, ptr %68, i64 0, i32 3
  store i64 %66, ptr %memberidx2.i109, align 4
  tail call void @free(ptr %58)
  tail call void @free(ptr %64)
  %69 = load ptr, ptr %memberidx12, align 8
  %70 = load ptr, ptr %69, align 8
  %71 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i111 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 6
  %72 = load ptr, ptr %memberidx1.i111, align 8
  %73 = call ptr @malloc(i32 24)
  store i64 5, ptr %73, align 4
  %memberidx1.i.i112 = getelementptr inbounds %FloError, ptr %73, i64 0, i32 2
  store ptr %70, ptr %memberidx1.i.i112, align 8
  %memberidx2.i.i113 = getelementptr inbounds %FloError, ptr %73, i64 0, i32 1
  store ptr %68, ptr %memberidx2.i.i113, align 8
  %memberidx.i.i114 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i114, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 3
  %75 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %74, %75
  br i1 %.not.i.i, label %if.entry29.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry29.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry29
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %.pre121 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry29
  %76 = shl nuw i64 %75, 1
  store i64 %76, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %77 = load ptr, ptr %memberidx2.i.i.i, align 8
  %78 = shl i64 %75, 4
  %79 = call ptr @realloc(ptr %77, i64 %78)
  store ptr %79, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i114, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry29.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %80 = phi ptr [ %.pre121, %if.entry29.TypeChecker_error.exit_crit_edge ], [ %79, %if.entry.i.i ]
  %81 = phi i64 [ %74, %if.entry29.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %82 = add nsw i64 %81, 1
  store i64 %82, ptr %memberidx.i.i114, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %80, i64 %81
  store ptr %73, ptr %ptridx.i.i, align 8
  br label %ifend15
}

define internal fastcc ptr @TypeChecker_check_constructor_call(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2, ptr nocapture writeonly %3) unnamed_addr {
  %5 = load ptr, ptr %0, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i, align 8
  %7 = load i64, ptr %1, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %6, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %8, i64 %7
  %9 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 3
  %10 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %11 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Class_, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %12, i64 %11
  %13 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx1, align 8
  %15 = icmp eq ptr %14, null
  br i1 %15, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend, %else13, %if.entry12, %ifend11, %if.entry
  %common.ret.op = phi ptr [ %17, %if.entry ], [ null, %ifend11 ], [ %47, %if.entry12 ], [ %65, %else13 ], [ null, %ifend ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %16 = tail call ptr @malloc(i32 44)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(44) %16, ptr noundef nonnull align 8 dereferenceable(44) @179, i64 44, i1 false)
  %17 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %17, align 8
  %memberidx.i.i40 = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  store ptr %16, ptr %memberidx.i.i40, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  store i64 44, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %17, i64 0, i32 3
  store i64 44, ptr %memberidx2.i.i, align 4
  br label %common.ret

ifend:                                            ; preds = %4
  %memberidx2 = getelementptr inbounds %Class, ptr %13, i64 0, i32 5
  %18 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %14, i64 0, i32 2
  %19 = load i64, ptr %memberidx3, align 4
  %memberidx.i41 = getelementptr inbounds %Array_ClassMethod_, ptr %18, i64 0, i32 1
  %20 = load ptr, ptr %memberidx.i41, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %20, i64 %19
  %21 = load ptr, ptr %ptridx.i, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %21, i64 0, i32 4
  %22 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %21, i64 0, i32 6
  %23 = load ptr, ptr %memberidx5, align 8
  %24 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr %22, ptr %23, ptr %2)
  %memberidx.i42 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i42, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 6
  %26 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i43 = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i43, align 4
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %common.ret, label %ifend8

ifend8:                                           ; preds = %ifend
  %memberidx.i44 = getelementptr inbounds %FunctionType, ptr %22, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i44, align 8
  %memberidx1.i45 = getelementptr inbounds %Array_Type_, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx1.i45, align 4
  %memberidx2.i46 = getelementptr inbounds %Array_Expression_, ptr %24, i64 0, i32 2
  %31 = load i64, ptr %memberidx2.i46, align 4
  %.not.i = icmp eq i64 %30, %31
  br i1 %.not.i, label %for.cond.i.preheader, label %if.entry12

for.cond.i.preheader:                             ; preds = %ifend8
  %32 = icmp sgt i64 %30, 0
  br i1 %32, label %for.body.i.lr.ph, label %ifend11

for.body.i.lr.ph:                                 ; preds = %for.cond.i.preheader
  %memberidx.i16.i = getelementptr inbounds %Array_Expression_, ptr %24, i64 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %ifend8.i
  %i.0.i65 = phi i64 [ 0, %for.body.i.lr.ph ], [ %40, %ifend8.i ]
  %33 = load ptr, ptr %memberidx.i44, align 8
  %memberidx.i.i47 = getelementptr inbounds %Array_Type_, ptr %33, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i.i47, align 8
  %ptridx.i.i48 = getelementptr inbounds ptr, ptr %34, i64 %i.0.i65
  %35 = load ptr, ptr %ptridx.i.i48, align 8
  %36 = load ptr, ptr %memberidx.i16.i, align 8
  %ptridx.i17.i = getelementptr inbounds ptr, ptr %36, i64 %i.0.i65
  %37 = load ptr, ptr %ptridx.i17.i, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %37, i64 0, i32 3
  %38 = load ptr, ptr %memberidx5.i, align 8
  %39 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %35, ptr %38)
  br i1 %39, label %ifend8.i, label %else13

ifend8.i:                                         ; preds = %for.body.i
  %40 = add nuw nsw i64 %i.0.i65, 1
  %41 = load i64, ptr %memberidx2.i46, align 4
  %42 = icmp slt i64 %40, %41
  br i1 %42, label %for.body.i, label %ifend11

ifend11:                                          ; preds = %ifend8.i, %for.cond.i.preheader
  store ptr %24, ptr %3, align 8
  br label %common.ret

if.entry12:                                       ; preds = %ifend8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %2, i64 0, i32 2
  %43 = load i64, ptr %memberidx17, align 4
  %44 = alloca ptr, align 8
  %45 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %44, ptr nonnull @180, i64 %30, i64 %43)
  %46 = load ptr, ptr %44, align 8
  %47 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %47, align 8
  %memberidx.i49 = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  store ptr %46, ptr %memberidx.i49, align 8
  %memberidx1.i50 = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  store i64 %45, ptr %memberidx1.i50, align 4
  %memberidx2.i51 = getelementptr inbounds %string, ptr %47, i64 0, i32 3
  store i64 %45, ptr %memberidx2.i51, align 4
  br label %common.ret

else13:                                           ; preds = %for.body.i
  %48 = load ptr, ptr %memberidx.i44, align 8
  %memberidx.i52 = getelementptr inbounds %Array_Type_, ptr %48, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i52, align 8
  %ptridx.i53 = getelementptr inbounds ptr, ptr %49, i64 %i.0.i65
  %50 = load ptr, ptr %ptridx.i53, align 8
  %51 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %50)
  %52 = load ptr, ptr %51, align 8
  %memberidx19 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %52, i64 0, i32 5
  %53 = load ptr, ptr %memberidx19, align 8
  %54 = tail call ptr %53(ptr nonnull %51)
  %55 = load ptr, ptr %memberidx.i16.i, align 8
  %ptridx.i55 = getelementptr inbounds ptr, ptr %55, i64 %i.0.i65
  %56 = load ptr, ptr %ptridx.i55, align 8
  %memberidx20 = getelementptr inbounds %Expression, ptr %56, i64 0, i32 3
  %57 = load ptr, ptr %memberidx20, align 8
  %58 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %57)
  %59 = load ptr, ptr %58, align 8
  %memberidx21 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %59, i64 0, i32 5
  %60 = load ptr, ptr %memberidx21, align 8
  %61 = tail call ptr %60(ptr nonnull %58)
  %62 = alloca ptr, align 8
  %63 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %62, ptr nonnull @181, ptr %54, ptr %61, i64 %i.0.i65)
  %64 = load ptr, ptr %62, align 8
  %65 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %65, align 8
  %memberidx.i56 = getelementptr inbounds %string, ptr %65, i64 0, i32 1
  store ptr %64, ptr %memberidx.i56, align 8
  %memberidx1.i57 = getelementptr inbounds %string, ptr %65, i64 0, i32 2
  store i64 %63, ptr %memberidx1.i57, align 4
  %memberidx2.i58 = getelementptr inbounds %string, ptr %65, i64 0, i32 3
  store i64 %63, ptr %memberidx2.i58, align 4
  tail call void @free(ptr %54)
  tail call void @free(ptr %61)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_methods(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx2700 = getelementptr inbounds %Array_MethodNode_, ptr %3, i64 0, i32 2
  %4 = load i64, ptr %memberidx2700, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 8
  %6 = load i64, ptr %memberidx, align 4
  %memberidx.i267 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %memberidx55 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx124 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %memberidx139 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx112 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx152 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassMethod____sl__.exit
  %7 = phi ptr [ %3, %for.body.lr.ph ], [ %427, %Array_ClassMethod____sl__.exit ]
  %current_vtable_index.0702 = phi i64 [ %6, %for.body.lr.ph ], [ %current_vtable_index.1, %Array_ClassMethod____sl__.exit ]
  %i.0701 = phi i64 [ 0, %for.body.lr.ph ], [ %426, %Array_ClassMethod____sl__.exit ]
  %memberidx.i = getelementptr inbounds %Array_MethodNode_, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %8, i64 %i.0701
  %9 = load ptr, ptr %ptridx.i, align 8
  %10 = tail call ptr @malloc(i32 66)
  %memberidx.i266 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 7
  store i1 false, ptr %memberidx.i266, align 1
  %11 = load ptr, ptr %9, align 8
  %memberidx5 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 3
  store ptr %12, ptr %memberidx6, align 8
  %13 = load ptr, ptr %memberidx.i267, align 8
  %14 = load i64, ptr %13, align 4
  %15 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %14)
  %memberidx2.i = getelementptr inbounds %Scope, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx.i267, align 8
  store ptr %16, ptr %memberidx2.i, align 8
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %memberidx.i267, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i.i.i, align 8
  %20 = load i64, ptr %18, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %19, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %21, i64 %20
  %22 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %22, i64 0, i32 7
  %23 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %18, i64 0, i32 1
  %24 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Scope_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %25, i64 %24
  %26 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %26, i64 0, i32 7
  %27 = load ptr, ptr %memberidx4.i, align 8
  %28 = load ptr, ptr %15, align 8
  %memberidx.i.i = getelementptr inbounds %Array_ScopeId_, ptr %27, i64 0, i32 2
  %29 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i11.i = getelementptr inbounds %Array_ScopeId_, ptr %27, i64 0, i32 3
  %30 = load i64, ptr %memberidx1.i11.i, align 4
  %.not.i.i = icmp slt i64 %29, %30
  br i1 %.not.i.i, label %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, label %if.entry.i.i

for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge: ; preds = %for.body
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_ScopeId_, ptr %27, i64 0, i32 1
  %.pre731 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_create_child_scope_within_current_scope.exit

if.entry.i.i:                                     ; preds = %for.body
  %31 = shl nuw i64 %30, 1
  store i64 %31, ptr %memberidx1.i11.i, align 4
  %memberidx2.i.i13.i = getelementptr inbounds %Array_ScopeId_, ptr %27, i64 0, i32 1
  %32 = load ptr, ptr %memberidx2.i.i13.i, align 8
  %33 = shl i64 %30, 4
  %34 = tail call ptr @realloc(ptr %32, i64 %33)
  store ptr %34, ptr %memberidx2.i.i13.i, align 8
  %.pre = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge, %if.entry.i.i
  %35 = phi ptr [ %.pre731, %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %34, %if.entry.i.i ]
  %36 = phi i64 [ %29, %for.body.TypeChecker_create_child_scope_within_current_scope.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %37 = add nsw i64 %36, 1
  store i64 %37, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %35, i64 %36
  store ptr %28, ptr %ptridx.i.i, align 8
  %38 = load ptr, ptr %15, align 8
  store ptr %38, ptr %memberidx.i267, align 8
  %memberidx9 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 6
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_FunctionArg_, ptr %39, align 8
  %memberidx.i268 = getelementptr inbounds %Array_FunctionArg_, ptr %39, i64 0, i32 2
  store i64 0, ptr %memberidx.i268, align 4
  %memberidx1.i = getelementptr inbounds %Array_FunctionArg_, ptr %39, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i269 = getelementptr inbounds %Array_FunctionArg_, ptr %39, i64 0, i32 1
  %40 = tail call ptr @malloc(i32 64)
  store ptr %40, ptr %memberidx2.i269, align 8
  store i64 0, ptr %memberidx.i268, align 4
  store ptr %39, ptr %memberidx9, align 8
  %41 = tail call fastcc i1 @is_operator_overload_name(ptr %12)
  br i1 %41, label %if.entry, label %ifend

common.ret:                                       ; preds = %Array_ClassMethod____sl__.exit, %for.entry, %TypeChecker_error.exit593, %TypeChecker_error.exit577, %TypeChecker_error.exit557, %TypeChecker_error.exit530, %TypeChecker_error.exit472, %TypeChecker_error.exit450, %TypeChecker_error.exit397, %TypeChecker_error.exit379, %TypeChecker_error.exit337, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %42 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %42, align 8
  %43 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %43, align 8
  %memberidx.i.i270 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  store ptr %42, ptr %memberidx.i.i270, align 8
  %memberidx1.i.i271 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i271, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %43, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i, align 4
  %memberidx.i272 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i272, align 4
  %.not.i = icmp eq i64 %44, 8
  br i1 %.not.i, label %ifend.i, label %string___eq__.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx2.i274 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %45 = load ptr, ptr %memberidx2.i274, align 8
  %46 = tail call i64 @memcmp(ptr %45, ptr nonnull %42, i64 8)
  %47 = icmp eq i64 %46, 0
  br label %string___eq__.exit

string___eq__.exit:                               ; preds = %if.entry, %ifend.i
  %common.ret.op.i = phi i1 [ %47, %ifend.i ], [ false, %if.entry ]
  %48 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %48, ptr noundef nonnull align 8 dereferenceable(7) @125, i64 7, i1 false)
  %49 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %49, align 8
  %memberidx.i.i275 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  store ptr %48, ptr %memberidx.i.i275, align 8
  %memberidx1.i.i276 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i276, align 4
  %memberidx2.i.i277 = getelementptr inbounds %string, ptr %49, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i277, align 4
  %50 = load i64, ptr %memberidx.i272, align 4
  %.not.i280 = icmp eq i64 %50, 7
  br i1 %.not.i280, label %ifend.i284, label %string___eq__.exit285

ifend.i284:                                       ; preds = %string___eq__.exit
  %memberidx2.i282 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %51 = load ptr, ptr %memberidx2.i282, align 8
  %52 = tail call i64 @memcmp(ptr %51, ptr nonnull %48, i64 7)
  %53 = icmp eq i64 %52, 0
  br label %string___eq__.exit285

string___eq__.exit285:                            ; preds = %string___eq__.exit, %ifend.i284
  %common.ret.op.i281 = phi i1 [ %53, %ifend.i284 ], [ false, %string___eq__.exit ]
  %54 = or i1 %common.ret.op.i, %common.ret.op.i281
  br i1 %54, label %ifend14, label %else13

ifend:                                            ; preds = %ifend22, %TypeChecker_create_child_scope_within_current_scope.exit
  %memberidx36 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 6
  %55 = load i1, ptr %memberidx36, align 1
  store i1 %55, ptr %memberidx.i266, align 1
  %memberidx37 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 1
  %memberidx38 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 5
  %56 = load i1, ptr %memberidx38, align 1
  store i1 %56, ptr %memberidx37, align 1
  %memberidx39 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 2
  %memberidx40 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 3
  %57 = load i64, ptr %memberidx40, align 4
  store i64 %57, ptr %memberidx39, align 4
  %memberidx41 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 4
  %memberidx42 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 1
  %58 = load ptr, ptr %memberidx42, align 8
  %memberidx43 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 4
  %59 = load ptr, ptr %memberidx43, align 8
  %60 = load ptr, ptr %memberidx9, align 8
  %61 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr nonnull %0, ptr %58, ptr %59, ptr %60)
  store ptr %61, ptr %memberidx41, align 8
  %62 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %62, align 8
  %63 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %63, align 8
  %memberidx.i.i286 = getelementptr inbounds %string, ptr %63, i64 0, i32 1
  store ptr %62, ptr %memberidx.i.i286, align 8
  %memberidx1.i.i287 = getelementptr inbounds %string, ptr %63, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i287, align 4
  %memberidx2.i.i288 = getelementptr inbounds %string, ptr %63, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i288, align 4
  %memberidx.i289 = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  %64 = load i64, ptr %memberidx.i289, align 4
  %.not.i291 = icmp eq i64 %64, 8
  br i1 %.not.i291, label %ifend.i295, label %ifend47

ifend.i295:                                       ; preds = %ifend
  %memberidx2.i293 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i293, align 8
  %66 = tail call i64 @memcmp(ptr %65, ptr nonnull %62, i64 8)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %if.entry45, label %ifend47

else13:                                           ; preds = %string___eq__.exit285
  %68 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %68, ptr noundef nonnull align 8 dereferenceable(11) @112, i64 11, i1 false)
  %69 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %69, align 8
  %memberidx.i.i297 = getelementptr inbounds %string, ptr %69, i64 0, i32 1
  store ptr %68, ptr %memberidx.i.i297, align 8
  %memberidx1.i.i298 = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i298, align 4
  %memberidx2.i.i299 = getelementptr inbounds %string, ptr %69, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i299, align 4
  %70 = load i64, ptr %memberidx.i272, align 4
  %.not.i302 = icmp eq i64 %70, 11
  br i1 %.not.i302, label %string___eq__.exit307, label %ifend14

string___eq__.exit307:                            ; preds = %else13
  %memberidx2.i304 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  %71 = load ptr, ptr %memberidx2.i304, align 8
  %72 = tail call i64 @memcmp(ptr %71, ptr nonnull %68, i64 11)
  %.fr = freeze i64 %72
  %73 = icmp eq i64 %.fr, 0
  %spec.select = select i1 %73, i64 2, i64 1
  br label %ifend14

ifend14:                                          ; preds = %string___eq__.exit307, %else13, %string___eq__.exit285
  %args_num.0 = phi i64 [ 0, %string___eq__.exit285 ], [ 1, %else13 ], [ %spec.select, %string___eq__.exit307 ]
  %memberidx18 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 1
  %74 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %Array_ArgNode_, ptr %74, i64 0, i32 2
  %75 = load i64, ptr %memberidx19, align 4
  %.not265 = icmp eq i64 %75, %args_num.0
  br i1 %.not265, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %ifend14
  %76 = load ptr, ptr %12, align 8
  %memberidx23 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %76, i64 0, i32 5
  %77 = load ptr, ptr %memberidx23, align 8
  %78 = tail call ptr %77(ptr nonnull %12)
  %79 = load ptr, ptr %memberidx18, align 8
  %memberidx25 = getelementptr inbounds %Array_ArgNode_, ptr %79, i64 0, i32 2
  %80 = load i64, ptr %memberidx25, align 4
  %81 = alloca ptr, align 8
  %82 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %81, ptr nonnull @132, i64 %args_num.0, ptr %78, i64 %80)
  %83 = load ptr, ptr %81, align 8
  %84 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %84, align 8
  %memberidx.i308 = getelementptr inbounds %string, ptr %84, i64 0, i32 1
  store ptr %83, ptr %memberidx.i308, align 8
  %memberidx1.i309 = getelementptr inbounds %string, ptr %84, i64 0, i32 2
  store i64 %82, ptr %memberidx1.i309, align 4
  %memberidx2.i310 = getelementptr inbounds %string, ptr %84, i64 0, i32 3
  store i64 %82, ptr %memberidx2.i310, align 4
  tail call void @free(ptr %78)
  %85 = load ptr, ptr %9, align 8
  %memberidx27 = getelementptr inbounds %Token, ptr %85, i64 0, i32 1
  %86 = load ptr, ptr %memberidx27, align 8
  %memberidx.i311 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %87 = load ptr, ptr %memberidx.i311, align 8
  %memberidx1.i312 = getelementptr inbounds %Compiler, ptr %87, i64 0, i32 6
  %88 = load ptr, ptr %memberidx1.i312, align 8
  %89 = call ptr @malloc(i32 24)
  store i64 4, ptr %89, align 4
  %memberidx1.i.i313 = getelementptr inbounds %FloError, ptr %89, i64 0, i32 2
  store ptr %86, ptr %memberidx1.i.i313, align 8
  %memberidx2.i.i314 = getelementptr inbounds %FloError, ptr %89, i64 0, i32 1
  store ptr %84, ptr %memberidx2.i.i314, align 8
  %memberidx.i.i315 = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 2
  %90 = load i64, ptr %memberidx.i.i315, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 3
  %91 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i316 = icmp slt i64 %90, %91
  br i1 %.not.i.i316, label %if.entry20.TypeChecker_error.exit_crit_edge, label %if.entry.i.i319

if.entry20.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry20
  %memberidx4.i.i320.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 1
  %.pre733 = load ptr, ptr %memberidx4.i.i320.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i319:                                  ; preds = %if.entry20
  %92 = shl nuw i64 %91, 1
  store i64 %92, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i318 = getelementptr inbounds %Array_FloError_, ptr %88, i64 0, i32 1
  %93 = load ptr, ptr %memberidx2.i.i.i318, align 8
  %94 = shl i64 %91, 4
  %95 = call ptr @realloc(ptr %93, i64 %94)
  store ptr %95, ptr %memberidx2.i.i.i318, align 8
  %.pre732 = load i64, ptr %memberidx.i.i315, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry20.TypeChecker_error.exit_crit_edge, %if.entry.i.i319
  %96 = phi ptr [ %.pre733, %if.entry20.TypeChecker_error.exit_crit_edge ], [ %95, %if.entry.i.i319 ]
  %97 = phi i64 [ %90, %if.entry20.TypeChecker_error.exit_crit_edge ], [ %.pre732, %if.entry.i.i319 ]
  %98 = add nsw i64 %97, 1
  store i64 %98, ptr %memberidx.i.i315, align 4
  %ptridx.i.i321 = getelementptr inbounds ptr, ptr %96, i64 %97
  store ptr %89, ptr %ptridx.i.i321, align 8
  br label %common.ret

ifend22:                                          ; preds = %ifend14
  %memberidx28 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 5
  %99 = load i1, ptr %memberidx28, align 1
  br i1 %99, label %if.entry29, label %ifend

if.entry29:                                       ; preds = %ifend22
  %100 = load ptr, ptr %12, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %100, i64 0, i32 5
  %101 = load ptr, ptr %memberidx32, align 8
  %102 = tail call ptr %101(ptr nonnull %12)
  %103 = alloca ptr, align 8
  %104 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %103, ptr nonnull @133, ptr %102)
  %105 = load ptr, ptr %103, align 8
  %106 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %106, align 8
  %memberidx.i322 = getelementptr inbounds %string, ptr %106, i64 0, i32 1
  store ptr %105, ptr %memberidx.i322, align 8
  %memberidx1.i323 = getelementptr inbounds %string, ptr %106, i64 0, i32 2
  store i64 %104, ptr %memberidx1.i323, align 4
  %memberidx2.i324 = getelementptr inbounds %string, ptr %106, i64 0, i32 3
  store i64 %104, ptr %memberidx2.i324, align 4
  tail call void @free(ptr %102)
  %107 = load ptr, ptr %9, align 8
  %memberidx34 = getelementptr inbounds %Token, ptr %107, i64 0, i32 1
  %108 = load ptr, ptr %memberidx34, align 8
  %memberidx.i325 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %109 = load ptr, ptr %memberidx.i325, align 8
  %memberidx1.i326 = getelementptr inbounds %Compiler, ptr %109, i64 0, i32 6
  %110 = load ptr, ptr %memberidx1.i326, align 8
  %111 = call ptr @malloc(i32 24)
  store i64 4, ptr %111, align 4
  %memberidx1.i.i327 = getelementptr inbounds %FloError, ptr %111, i64 0, i32 2
  store ptr %108, ptr %memberidx1.i.i327, align 8
  %memberidx2.i.i328 = getelementptr inbounds %FloError, ptr %111, i64 0, i32 1
  store ptr %106, ptr %memberidx2.i.i328, align 8
  %memberidx.i.i329 = getelementptr inbounds %Array_FloError_, ptr %110, i64 0, i32 2
  %112 = load i64, ptr %memberidx.i.i329, align 4
  %memberidx1.i2.i330 = getelementptr inbounds %Array_FloError_, ptr %110, i64 0, i32 3
  %113 = load i64, ptr %memberidx1.i2.i330, align 4
  %.not.i.i331 = icmp slt i64 %112, %113
  br i1 %.not.i.i331, label %if.entry29.TypeChecker_error.exit337_crit_edge, label %if.entry.i.i334

if.entry29.TypeChecker_error.exit337_crit_edge:   ; preds = %if.entry29
  %memberidx4.i.i335.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %110, i64 0, i32 1
  %.pre766 = load ptr, ptr %memberidx4.i.i335.phi.trans.insert, align 8
  br label %TypeChecker_error.exit337

if.entry.i.i334:                                  ; preds = %if.entry29
  %114 = shl nuw i64 %113, 1
  store i64 %114, ptr %memberidx1.i2.i330, align 4
  %memberidx2.i.i.i333 = getelementptr inbounds %Array_FloError_, ptr %110, i64 0, i32 1
  %115 = load ptr, ptr %memberidx2.i.i.i333, align 8
  %116 = shl i64 %113, 4
  %117 = call ptr @realloc(ptr %115, i64 %116)
  store ptr %117, ptr %memberidx2.i.i.i333, align 8
  %.pre765 = load i64, ptr %memberidx.i.i329, align 4
  br label %TypeChecker_error.exit337

TypeChecker_error.exit337:                        ; preds = %if.entry29.TypeChecker_error.exit337_crit_edge, %if.entry.i.i334
  %118 = phi ptr [ %.pre766, %if.entry29.TypeChecker_error.exit337_crit_edge ], [ %117, %if.entry.i.i334 ]
  %119 = phi i64 [ %112, %if.entry29.TypeChecker_error.exit337_crit_edge ], [ %.pre765, %if.entry.i.i334 ]
  %120 = add nsw i64 %119, 1
  store i64 %120, ptr %memberidx.i.i329, align 4
  %ptridx.i.i336 = getelementptr inbounds ptr, ptr %118, i64 %119
  store ptr %111, ptr %ptridx.i.i336, align 8
  br label %common.ret

if.entry45:                                       ; preds = %ifend.i295
  %121 = load ptr, ptr %memberidx41, align 8
  %memberidx49 = getelementptr inbounds %FunctionType, ptr %121, i64 0, i32 2
  %122 = load ptr, ptr %memberidx49, align 8
  %123 = load i64, ptr %122, align 4
  %124 = icmp eq i64 %123, 19
  br i1 %124, label %if.entry.i646, label %is_object.exit

if.entry.i646:                                    ; preds = %if.entry45, %if.entry.i646
  %.tr5.i = phi ptr [ %125, %if.entry.i646 ], [ %122, %if.entry45 ]
  %memberidx1.i645 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %125 = load ptr, ptr %memberidx1.i645, align 8
  %126 = load i64, ptr %125, align 4
  %127 = icmp eq i64 %126, 19
  br i1 %127, label %if.entry.i646, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i646, %if.entry45
  %.lcssa.i = phi i64 [ %123, %if.entry45 ], [ %126, %if.entry.i646 ]
  %128 = icmp eq i64 %.lcssa.i, 11
  br i1 %128, label %ifend.i345, label %if.entry50

ifend.i345:                                       ; preds = %is_object.exit
  %129 = load ptr, ptr %0, align 8
  br label %tailrecurse.i649

tailrecurse.i649:                                 ; preds = %if.entry.i652, %ifend.i345
  %130 = phi i64 [ %123, %ifend.i345 ], [ %.pre734, %if.entry.i652 ]
  %.tr11.i648 = phi ptr [ %122, %ifend.i345 ], [ %131, %if.entry.i652 ]
  switch i64 %130, label %get_class_from_type.exit662 [
    i64 19, label %if.entry.i652
    i64 11, label %if.entry3.i661
  ]

if.entry.i652:                                    ; preds = %tailrecurse.i649
  %memberidx1.i651 = getelementptr inbounds %GenericType, ptr %.tr11.i648, i64 0, i32 3
  %131 = load ptr, ptr %memberidx1.i651, align 8
  %.pre734 = load i64, ptr %131, align 4
  br label %tailrecurse.i649

if.entry3.i661:                                   ; preds = %tailrecurse.i649
  %memberidx6.i653 = getelementptr inbounds %ObjectType, ptr %.tr11.i648, i64 0, i32 1
  %132 = load ptr, ptr %memberidx6.i653, align 8
  %memberidx.i.i654 = getelementptr inbounds %Program, ptr %129, i64 0, i32 1
  %133 = load ptr, ptr %memberidx.i.i654, align 8
  %134 = load i64, ptr %132, align 4
  %memberidx.i.i.i655 = getelementptr inbounds %Array_Module_, ptr %133, i64 0, i32 1
  %135 = load ptr, ptr %memberidx.i.i.i655, align 8
  %ptridx.i.i.i656 = getelementptr inbounds ptr, ptr %135, i64 %134
  %136 = load ptr, ptr %ptridx.i.i.i656, align 8
  %memberidx2.i.i657 = getelementptr inbounds %Module, ptr %136, i64 0, i32 3
  %137 = load ptr, ptr %memberidx2.i.i657, align 8
  %memberidx3.i.i658 = getelementptr inbounds %TypeId, ptr %132, i64 0, i32 2
  %138 = load i64, ptr %memberidx3.i.i658, align 4
  %memberidx.i5.i.i659 = getelementptr inbounds %Array_Class_, ptr %137, i64 0, i32 1
  %139 = load ptr, ptr %memberidx.i5.i.i659, align 8
  %ptridx.i6.i.i660 = getelementptr inbounds ptr, ptr %139, i64 %138
  %140 = load ptr, ptr %ptridx.i6.i.i660, align 8
  br label %get_class_from_type.exit662

get_class_from_type.exit662:                      ; preds = %tailrecurse.i649, %if.entry3.i661
  %common.ret.op.i650 = phi ptr [ %140, %if.entry3.i661 ], [ null, %tailrecurse.i649 ]
  %memberidx1.i339 = getelementptr inbounds %Class, ptr %common.ret.op.i650, i64 0, i32 6
  %141 = load ptr, ptr %memberidx1.i339, align 8
  %142 = tail call ptr @malloc(i32 4)
  store i32 1701736292, ptr %142, align 8
  %143 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %143, align 8
  %memberidx.i.i.i340 = getelementptr inbounds %string, ptr %143, i64 0, i32 1
  store ptr %142, ptr %memberidx.i.i.i340, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %143, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i341 = getelementptr inbounds %string, ptr %143, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i341, align 4
  %144 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %143)
  %memberidx.i.i342 = getelementptr inbounds %Map_string_PropId_, ptr %141, i64 0, i32 1
  %145 = load i64, ptr %memberidx.i.i342, align 4
  %146 = urem i64 %144, %145
  %147 = load ptr, ptr %141, align 8
  %ptridx.i.i343 = getelementptr inbounds ptr, ptr %147, i64 %146
  %148 = load ptr, ptr %ptridx.i.i343, align 8
  %.not.i.i344 = icmp eq ptr %148, null
  br i1 %.not.i.i344, label %if.entry50, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %get_class_from_type.exit662, %else.i.i
  %149 = phi ptr [ %159, %else.i.i ], [ %147, %get_class_from_type.exit662 ]
  %150 = phi i64 [ %160, %else.i.i ], [ %145, %get_class_from_type.exit662 ]
  %151 = phi ptr [ %163, %else.i.i ], [ %148, %get_class_from_type.exit662 ]
  %hash.0.i.i = phi i64 [ %162, %else.i.i ], [ %146, %get_class_from_type.exit662 ]
  %152 = load ptr, ptr %151, align 8
  %memberidx.i.i33.i = getelementptr inbounds %string, ptr %152, i64 0, i32 2
  %153 = load i64, ptr %memberidx.i.i33.i, align 4
  %154 = load i64, ptr %memberidx1.i.i.i, align 4
  %.not.i.i.i = icmp eq i64 %153, %154
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %memberidx2.i.i35.i = getelementptr inbounds %string, ptr %152, i64 0, i32 1
  %155 = load ptr, ptr %memberidx2.i.i35.i, align 8
  %156 = load ptr, ptr %memberidx.i.i.i340, align 8
  %157 = tail call i64 @memcmp(ptr %155, ptr %156, i64 %153)
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre735 = load i64, ptr %memberidx.i.i342, align 4
  %.pre736 = load ptr, ptr %141, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre737.pre = load ptr, ptr %141, align 8
  %ptridx9.i.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre737.pre, i64 %hash.0.i.i
  %.pre738.pre = load ptr, ptr %ptridx9.i.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i.i = icmp eq ptr %.pre738.pre, null
  br i1 %.not29.i.i, label %if.entry50, label %Map_string_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %159 = phi ptr [ %.pre736, %ifend.i.i.i.else.i.i_crit_edge ], [ %149, %while.entry.i.i ]
  %160 = phi i64 [ %.pre735, %ifend.i.i.i.else.i.i_crit_edge ], [ %150, %while.entry.i.i ]
  %161 = add nuw i64 %hash.0.i.i, 1
  %162 = urem i64 %161, %160
  %ptridx7.i.i = getelementptr inbounds ptr, ptr %159, i64 %162
  %163 = load ptr, ptr %ptridx7.i.i, align 8
  %.not30.i.i = icmp eq ptr %163, null
  br i1 %.not30.i.i, label %if.entry50, label %while.entry.i.i

Map_string_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx15.i.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre738.pre, i64 0, i32 1
  %164 = load ptr, ptr %memberidx15.i.i, align 8
  %165 = icmp eq ptr %164, null
  br i1 %165, label %if.entry50, label %ifend4.i

ifend4.i:                                         ; preds = %Map_string_PropId____getitem__.exit.i
  %166 = load ptr, ptr %0, align 8
  %memberidx.i.i36.i = getelementptr inbounds %PropId, ptr %164, i64 0, i32 1
  %167 = load ptr, ptr %memberidx.i.i36.i, align 8
  %memberidx.i.i.i.i347 = getelementptr inbounds %Program, ptr %166, i64 0, i32 1
  %168 = load ptr, ptr %memberidx.i.i.i.i347, align 8
  %169 = load i64, ptr %167, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %168, i64 0, i32 1
  %170 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %170, i64 %169
  %171 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %171, i64 0, i32 3
  %172 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %167, i64 0, i32 2
  %173 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %172, i64 0, i32 1
  %174 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %ptridx.i6.i.i.i.i = getelementptr inbounds ptr, ptr %174, i64 %173
  %175 = load ptr, ptr %ptridx.i6.i.i.i.i, align 8
  %176 = load i64, ptr %164, align 4
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %if.entry.i.i350, label %ifend.i.i

if.entry.i.i350:                                  ; preds = %ifend4.i
  %memberidx1.i.i348 = getelementptr inbounds %Class, ptr %175, i64 0, i32 5
  %178 = load ptr, ptr %memberidx1.i.i348, align 8
  %memberidx2.i.i349 = getelementptr inbounds %PropId, ptr %164, i64 0, i32 2
  %179 = load i64, ptr %memberidx2.i.i349, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %178, i64 0, i32 1
  %180 = load ptr, ptr %memberidx.i12.i.i, align 8
  %ptridx.i13.i.i = getelementptr inbounds ptr, ptr %180, i64 %179
  %181 = load ptr, ptr %ptridx.i13.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %181, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend4.i
  %memberidx4.i.i351 = getelementptr inbounds %Class, ptr %175, i64 0, i32 4
  %182 = load ptr, ptr %memberidx4.i.i351, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %164, i64 0, i32 2
  %183 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %182, i64 0, i32 1
  %184 = load ptr, ptr %memberidx.i11.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %184, i64 %183
  %185 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %185, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i350
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i, %if.entry.i.i350 ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i37.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  %186 = load i64, ptr %common.ret.op.i37.i, align 4
  %.not.i352 = icmp eq i64 %186, 0
  br i1 %.not.i352, label %ifend9.i, label %if.entry50

ifend9.i:                                         ; preds = %get_class_prop_type.exit.i
  %187 = load ptr, ptr %memberidx1.i339, align 8
  %188 = tail call ptr @malloc(i32 4)
  store i32 1954047342, ptr %188, align 8
  %189 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %189, align 8
  %memberidx.i.i38.i = getelementptr inbounds %string, ptr %189, i64 0, i32 1
  store ptr %188, ptr %memberidx.i.i38.i, align 8
  %memberidx1.i.i39.i = getelementptr inbounds %string, ptr %189, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i39.i, align 4
  %memberidx2.i.i40.i = getelementptr inbounds %string, ptr %189, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i40.i, align 4
  %190 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %189)
  %memberidx.i41.i = getelementptr inbounds %Map_string_PropId_, ptr %187, i64 0, i32 1
  %191 = load i64, ptr %memberidx.i41.i, align 4
  %192 = urem i64 %190, %191
  %193 = load ptr, ptr %187, align 8
  %ptridx.i42.i = getelementptr inbounds ptr, ptr %193, i64 %192
  %194 = load ptr, ptr %ptridx.i42.i, align 8
  %.not.i43.i = icmp eq ptr %194, null
  br i1 %.not.i43.i, label %if.entry50, label %while.entry.i49.i

while.entry.i49.i:                                ; preds = %ifend9.i, %else.i61.i
  %195 = phi ptr [ %205, %else.i61.i ], [ %193, %ifend9.i ]
  %196 = phi i64 [ %206, %else.i61.i ], [ %191, %ifend9.i ]
  %197 = phi ptr [ %209, %else.i61.i ], [ %194, %ifend9.i ]
  %hash.0.i44.i = phi i64 [ %208, %else.i61.i ], [ %192, %ifend9.i ]
  %198 = load ptr, ptr %197, align 8
  %memberidx.i.i46.i = getelementptr inbounds %string, ptr %198, i64 0, i32 2
  %199 = load i64, ptr %memberidx.i.i46.i, align 4
  %200 = load i64, ptr %memberidx1.i.i39.i, align 4
  %.not.i.i48.i = icmp eq i64 %199, %200
  br i1 %.not.i.i48.i, label %ifend.i.i52.i, label %else.i61.i

ifend.i.i52.i:                                    ; preds = %while.entry.i49.i
  %memberidx2.i.i50.i = getelementptr inbounds %string, ptr %198, i64 0, i32 1
  %201 = load ptr, ptr %memberidx2.i.i50.i, align 8
  %202 = load ptr, ptr %memberidx.i.i38.i, align 8
  %203 = tail call i64 @memcmp(ptr %201, ptr %202, i64 %199)
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %while.end.i58.i, label %ifend.i.i52.i.else.i61.i_crit_edge

ifend.i.i52.i.else.i61.i_crit_edge:               ; preds = %ifend.i.i52.i
  %.pre739 = load i64, ptr %memberidx.i41.i, align 4
  %.pre740 = load ptr, ptr %187, align 8
  br label %else.i61.i

while.end.i58.i:                                  ; preds = %ifend.i.i52.i
  %.pre741.pre = load ptr, ptr %187, align 8
  %ptridx9.i56.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre741.pre, i64 %hash.0.i44.i
  %.pre742.pre = load ptr, ptr %ptridx9.i56.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i57.i = icmp eq ptr %.pre742.pre, null
  br i1 %.not29.i57.i, label %if.entry50, label %Map_string_PropId____getitem__.exit65.i

else.i61.i:                                       ; preds = %ifend.i.i52.i.else.i61.i_crit_edge, %while.entry.i49.i
  %205 = phi ptr [ %.pre740, %ifend.i.i52.i.else.i61.i_crit_edge ], [ %195, %while.entry.i49.i ]
  %206 = phi i64 [ %.pre739, %ifend.i.i52.i.else.i61.i_crit_edge ], [ %196, %while.entry.i49.i ]
  %207 = add nuw i64 %hash.0.i44.i, 1
  %208 = urem i64 %207, %206
  %ptridx7.i59.i = getelementptr inbounds ptr, ptr %205, i64 %208
  %209 = load ptr, ptr %ptridx7.i59.i, align 8
  %.not30.i60.i = icmp eq ptr %209, null
  br i1 %.not30.i60.i, label %if.entry50, label %while.entry.i49.i

Map_string_PropId____getitem__.exit65.i:          ; preds = %while.end.i58.i
  %memberidx15.i63.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre742.pre, i64 0, i32 1
  %210 = load ptr, ptr %memberidx15.i63.i, align 8
  %211 = icmp eq ptr %210, null
  br i1 %211, label %if.entry50, label %ifend13.i

ifend13.i:                                        ; preds = %Map_string_PropId____getitem__.exit65.i
  %212 = load ptr, ptr %0, align 8
  %memberidx.i.i66.i = getelementptr inbounds %PropId, ptr %210, i64 0, i32 1
  %213 = load ptr, ptr %memberidx.i.i66.i, align 8
  %memberidx.i.i.i67.i = getelementptr inbounds %Program, ptr %212, i64 0, i32 1
  %214 = load ptr, ptr %memberidx.i.i.i67.i, align 8
  %215 = load i64, ptr %213, align 4
  %memberidx.i.i.i.i68.i = getelementptr inbounds %Array_Module_, ptr %214, i64 0, i32 1
  %216 = load ptr, ptr %memberidx.i.i.i.i68.i, align 8
  %ptridx.i.i.i.i69.i = getelementptr inbounds ptr, ptr %216, i64 %215
  %217 = load ptr, ptr %ptridx.i.i.i.i69.i, align 8
  %memberidx2.i.i.i70.i = getelementptr inbounds %Module, ptr %217, i64 0, i32 3
  %218 = load ptr, ptr %memberidx2.i.i.i70.i, align 8
  %memberidx3.i.i.i71.i = getelementptr inbounds %TypeId, ptr %213, i64 0, i32 2
  %219 = load i64, ptr %memberidx3.i.i.i71.i, align 4
  %memberidx.i5.i.i.i72.i = getelementptr inbounds %Array_Class_, ptr %218, i64 0, i32 1
  %220 = load ptr, ptr %memberidx.i5.i.i.i72.i, align 8
  %ptridx.i6.i.i.i73.i = getelementptr inbounds ptr, ptr %220, i64 %219
  %221 = load ptr, ptr %ptridx.i6.i.i.i73.i, align 8
  %222 = load i64, ptr %210, align 4
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %if.entry.i81.i, label %ifend.i87.i

if.entry.i81.i:                                   ; preds = %ifend13.i
  %memberidx1.i76.i = getelementptr inbounds %Class, ptr %221, i64 0, i32 5
  %224 = load ptr, ptr %memberidx1.i76.i, align 8
  %memberidx2.i77.i = getelementptr inbounds %PropId, ptr %210, i64 0, i32 2
  %225 = load i64, ptr %memberidx2.i77.i, align 4
  %memberidx.i12.i78.i = getelementptr inbounds %Array_ClassMethod_, ptr %224, i64 0, i32 1
  %226 = load ptr, ptr %memberidx.i12.i78.i, align 8
  %ptridx.i13.i79.i = getelementptr inbounds ptr, ptr %226, i64 %225
  %227 = load ptr, ptr %ptridx.i13.i79.i, align 8
  %memberidx3.i80.i = getelementptr inbounds %ClassMethod, ptr %227, i64 0, i32 4
  br label %get_class_prop_type.exit88.i

ifend.i87.i:                                      ; preds = %ifend13.i
  %memberidx4.i82.i = getelementptr inbounds %Class, ptr %221, i64 0, i32 4
  %228 = load ptr, ptr %memberidx4.i82.i, align 8
  %memberidx5.i83.i = getelementptr inbounds %PropId, ptr %210, i64 0, i32 2
  %229 = load i64, ptr %memberidx5.i83.i, align 4
  %memberidx.i11.i84.i = getelementptr inbounds %Array_ClassField_, ptr %228, i64 0, i32 1
  %230 = load ptr, ptr %memberidx.i11.i84.i, align 8
  %ptridx.i.i85.i = getelementptr inbounds ptr, ptr %230, i64 %229
  %231 = load ptr, ptr %ptridx.i.i85.i, align 8
  %memberidx6.i86.i = getelementptr inbounds %ClassField, ptr %231, i64 0, i32 4
  br label %get_class_prop_type.exit88.i

get_class_prop_type.exit88.i:                     ; preds = %ifend.i87.i, %if.entry.i81.i
  %common.ret.op.in.i74.i = phi ptr [ %memberidx3.i80.i, %if.entry.i81.i ], [ %memberidx6.i86.i, %ifend.i87.i ]
  %common.ret.op.i75.i = load ptr, ptr %common.ret.op.in.i74.i, align 8
  %232 = load i64, ptr %common.ret.op.i75.i, align 4
  %.not31.i = icmp eq i64 %232, 15
  br i1 %.not31.i, label %ifend18.i, label %if.entry50

ifend18.i:                                        ; preds = %get_class_prop_type.exit88.i
  %memberidx19.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i75.i, i64 0, i32 1
  %233 = load ptr, ptr %memberidx19.i, align 8
  %memberidx20.i = getelementptr inbounds %Array_Type_, ptr %233, i64 0, i32 2
  %234 = load i64, ptr %memberidx20.i, align 4
  %.not32.i = icmp eq i64 %234, 0
  br i1 %.not32.i, label %ifend47, label %if.entry50

ifend47:                                          ; preds = %ifend, %ifend18.i, %ifend.i295
  %235 = load ptr, ptr %memberidx55, align 8
  %236 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %12)
  %memberidx.i353 = getelementptr inbounds %Map_string_PropId_, ptr %235, i64 0, i32 1
  %237 = load i64, ptr %memberidx.i353, align 4
  %238 = urem i64 %236, %237
  %239 = load ptr, ptr %235, align 8
  %ptridx.i354 = getelementptr inbounds ptr, ptr %239, i64 %238
  %240 = load ptr, ptr %ptridx.i354, align 8
  %.not.i355 = icmp eq ptr %240, null
  br i1 %.not.i355, label %else57, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend47
  %memberidx3.i.i360 = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %241 = phi ptr [ %251, %else.i ], [ %239, %while.entry.i.preheader ]
  %242 = phi i64 [ %252, %else.i ], [ %237, %while.entry.i.preheader ]
  %243 = phi ptr [ %255, %else.i ], [ %240, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %254, %else.i ], [ %238, %while.entry.i.preheader ]
  %244 = load ptr, ptr %243, align 8
  %memberidx.i.i356 = getelementptr inbounds %string, ptr %244, i64 0, i32 2
  %245 = load i64, ptr %memberidx.i.i356, align 4
  %246 = load i64, ptr %memberidx.i289, align 4
  %.not.i.i358 = icmp eq i64 %245, %246
  br i1 %.not.i.i358, label %ifend.i.i361, label %else.i

ifend.i.i361:                                     ; preds = %while.entry.i
  %memberidx2.i.i359 = getelementptr inbounds %string, ptr %244, i64 0, i32 1
  %247 = load ptr, ptr %memberidx2.i.i359, align 8
  %248 = load ptr, ptr %memberidx3.i.i360, align 8
  %249 = tail call i64 @memcmp(ptr %247, ptr %248, i64 %245)
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %while.end.i, label %ifend.i.i361.else.i_crit_edge

ifend.i.i361.else.i_crit_edge:                    ; preds = %ifend.i.i361
  %.pre743 = load i64, ptr %memberidx.i353, align 4
  %.pre744 = load ptr, ptr %235, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i361
  %.pre745.pre = load ptr, ptr %235, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre745.pre, i64 %hash.0.i
  %.pre746.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre746.pre, null
  br i1 %.not29.i, label %else57, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i361.else.i_crit_edge, %while.entry.i
  %251 = phi ptr [ %.pre744, %ifend.i.i361.else.i_crit_edge ], [ %241, %while.entry.i ]
  %252 = phi i64 [ %.pre743, %ifend.i.i361.else.i_crit_edge ], [ %242, %while.entry.i ]
  %253 = add nuw i64 %hash.0.i, 1
  %254 = urem i64 %253, %252
  %ptridx7.i = getelementptr inbounds ptr, ptr %251, i64 %254
  %255 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %255, null
  br i1 %.not30.i, label %else57, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre746.pre, i64 0, i32 1
  %256 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %256, null
  br i1 %.not, label %else57, label %if.entry56

if.entry50:                                       ; preds = %ifend9.i, %get_class_from_type.exit662, %while.end.i58.i, %while.end.i.i, %is_object.exit, %Map_string_PropId____getitem__.exit.i, %get_class_prop_type.exit.i, %Map_string_PropId____getitem__.exit65.i, %get_class_prop_type.exit88.i, %ifend18.i, %else.i.i, %else.i61.i
  %257 = tail call ptr @malloc(i32 74)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(74) %257, ptr noundef nonnull align 8 dereferenceable(74) @134, i64 74, i1 false)
  %258 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %258, align 8
  %memberidx.i.i364 = getelementptr inbounds %string, ptr %258, i64 0, i32 1
  store ptr %257, ptr %memberidx.i.i364, align 8
  %memberidx1.i.i365 = getelementptr inbounds %string, ptr %258, i64 0, i32 2
  store i64 74, ptr %memberidx1.i.i365, align 4
  %memberidx2.i.i366 = getelementptr inbounds %string, ptr %258, i64 0, i32 3
  store i64 74, ptr %memberidx2.i.i366, align 4
  %259 = load ptr, ptr %9, align 8
  %memberidx54 = getelementptr inbounds %Token, ptr %259, i64 0, i32 1
  %260 = load ptr, ptr %memberidx54, align 8
  %memberidx.i367 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %261 = load ptr, ptr %memberidx.i367, align 8
  %memberidx1.i368 = getelementptr inbounds %Compiler, ptr %261, i64 0, i32 6
  %262 = load ptr, ptr %memberidx1.i368, align 8
  %263 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %263, align 4
  %memberidx1.i.i369 = getelementptr inbounds %FloError, ptr %263, i64 0, i32 2
  store ptr %260, ptr %memberidx1.i.i369, align 8
  %memberidx2.i.i370 = getelementptr inbounds %FloError, ptr %263, i64 0, i32 1
  store ptr %258, ptr %memberidx2.i.i370, align 8
  %memberidx.i.i371 = getelementptr inbounds %Array_FloError_, ptr %262, i64 0, i32 2
  %264 = load i64, ptr %memberidx.i.i371, align 4
  %memberidx1.i2.i372 = getelementptr inbounds %Array_FloError_, ptr %262, i64 0, i32 3
  %265 = load i64, ptr %memberidx1.i2.i372, align 4
  %.not.i.i373 = icmp slt i64 %264, %265
  br i1 %.not.i.i373, label %if.entry50.TypeChecker_error.exit379_crit_edge, label %if.entry.i.i376

if.entry50.TypeChecker_error.exit379_crit_edge:   ; preds = %if.entry50
  %memberidx4.i.i377.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %262, i64 0, i32 1
  %.pre764 = load ptr, ptr %memberidx4.i.i377.phi.trans.insert, align 8
  br label %TypeChecker_error.exit379

if.entry.i.i376:                                  ; preds = %if.entry50
  %266 = shl nuw i64 %265, 1
  store i64 %266, ptr %memberidx1.i2.i372, align 4
  %memberidx2.i.i.i375 = getelementptr inbounds %Array_FloError_, ptr %262, i64 0, i32 1
  %267 = load ptr, ptr %memberidx2.i.i.i375, align 8
  %268 = shl i64 %265, 4
  %269 = tail call ptr @realloc(ptr %267, i64 %268)
  store ptr %269, ptr %memberidx2.i.i.i375, align 8
  %.pre763 = load i64, ptr %memberidx.i.i371, align 4
  br label %TypeChecker_error.exit379

TypeChecker_error.exit379:                        ; preds = %if.entry50.TypeChecker_error.exit379_crit_edge, %if.entry.i.i376
  %270 = phi ptr [ %.pre764, %if.entry50.TypeChecker_error.exit379_crit_edge ], [ %269, %if.entry.i.i376 ]
  %271 = phi i64 [ %264, %if.entry50.TypeChecker_error.exit379_crit_edge ], [ %.pre763, %if.entry.i.i376 ]
  %272 = add nsw i64 %271, 1
  store i64 %272, ptr %memberidx.i.i371, align 4
  %ptridx.i.i378 = getelementptr inbounds ptr, ptr %270, i64 %271
  store ptr %263, ptr %ptridx.i.i378, align 8
  br label %common.ret

if.entry56:                                       ; preds = %Map_string_PropId____getitem__.exit
  %memberidx59 = getelementptr inbounds %PropId, ptr %256, i64 0, i32 1
  %273 = load ptr, ptr %memberidx59, align 8
  %274 = load ptr, ptr %1, align 8
  %275 = icmp eq ptr %273, %274
  br i1 %275, label %if.entry61, label %ifend63

else57:                                           ; preds = %else.i, %ifend47, %while.end.i, %Map_string_PropId____getitem__.exit
  %memberidx93 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 9
  store i64 %current_vtable_index.0702, ptr %memberidx93, align 4
  br label %ifend58

ifend58:                                          ; preds = %else57, %get_vtable_index.exit
  %276 = tail call ptr @malloc(i32 24)
  %277 = load ptr, ptr %1, align 8
  store i64 0, ptr %276, align 4
  %memberidx1.i380 = getelementptr inbounds %PropId, ptr %276, i64 0, i32 1
  store ptr %277, ptr %memberidx1.i380, align 8
  %memberidx2.i381 = getelementptr inbounds %PropId, ptr %276, i64 0, i32 2
  store i64 %i.0701, ptr %memberidx2.i381, align 4
  store ptr %276, ptr %10, align 8
  %278 = load i1, ptr %memberidx38, align 1
  br i1 %278, label %if.entry97, label %else98

if.entry61:                                       ; preds = %if.entry56
  %279 = load ptr, ptr %12, align 8
  %memberidx64 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %279, i64 0, i32 5
  %280 = load ptr, ptr %memberidx64, align 8
  %281 = tail call ptr %280(ptr nonnull %12)
  %memberidx65 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %282 = load ptr, ptr %memberidx65, align 8
  %283 = load ptr, ptr %282, align 8
  %memberidx66 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %283, i64 0, i32 5
  %284 = load ptr, ptr %memberidx66, align 8
  %285 = tail call ptr %284(ptr nonnull %282)
  %286 = alloca ptr, align 8
  %287 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %286, ptr nonnull @135, ptr %281, ptr %285)
  %288 = load ptr, ptr %286, align 8
  %289 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %289, align 8
  %memberidx.i382 = getelementptr inbounds %string, ptr %289, i64 0, i32 1
  store ptr %288, ptr %memberidx.i382, align 8
  %memberidx1.i383 = getelementptr inbounds %string, ptr %289, i64 0, i32 2
  store i64 %287, ptr %memberidx1.i383, align 4
  %memberidx2.i384 = getelementptr inbounds %string, ptr %289, i64 0, i32 3
  store i64 %287, ptr %memberidx2.i384, align 4
  tail call void @free(ptr %281)
  tail call void @free(ptr %285)
  %290 = load ptr, ptr %9, align 8
  %memberidx68 = getelementptr inbounds %Token, ptr %290, i64 0, i32 1
  %291 = load ptr, ptr %memberidx68, align 8
  %memberidx.i385 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %292 = load ptr, ptr %memberidx.i385, align 8
  %memberidx1.i386 = getelementptr inbounds %Compiler, ptr %292, i64 0, i32 6
  %293 = load ptr, ptr %memberidx1.i386, align 8
  %294 = call ptr @malloc(i32 24)
  store i64 1, ptr %294, align 4
  %memberidx1.i.i387 = getelementptr inbounds %FloError, ptr %294, i64 0, i32 2
  store ptr %291, ptr %memberidx1.i.i387, align 8
  %memberidx2.i.i388 = getelementptr inbounds %FloError, ptr %294, i64 0, i32 1
  store ptr %289, ptr %memberidx2.i.i388, align 8
  %memberidx.i.i389 = getelementptr inbounds %Array_FloError_, ptr %293, i64 0, i32 2
  %295 = load i64, ptr %memberidx.i.i389, align 4
  %memberidx1.i2.i390 = getelementptr inbounds %Array_FloError_, ptr %293, i64 0, i32 3
  %296 = load i64, ptr %memberidx1.i2.i390, align 4
  %.not.i.i391 = icmp slt i64 %295, %296
  br i1 %.not.i.i391, label %if.entry61.TypeChecker_error.exit397_crit_edge, label %if.entry.i.i394

if.entry61.TypeChecker_error.exit397_crit_edge:   ; preds = %if.entry61
  %memberidx4.i.i395.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %293, i64 0, i32 1
  %.pre752 = load ptr, ptr %memberidx4.i.i395.phi.trans.insert, align 8
  br label %TypeChecker_error.exit397

if.entry.i.i394:                                  ; preds = %if.entry61
  %297 = shl nuw i64 %296, 1
  store i64 %297, ptr %memberidx1.i2.i390, align 4
  %memberidx2.i.i.i393 = getelementptr inbounds %Array_FloError_, ptr %293, i64 0, i32 1
  %298 = load ptr, ptr %memberidx2.i.i.i393, align 8
  %299 = shl i64 %296, 4
  %300 = call ptr @realloc(ptr %298, i64 %299)
  store ptr %300, ptr %memberidx2.i.i.i393, align 8
  %.pre751 = load i64, ptr %memberidx.i.i389, align 4
  br label %TypeChecker_error.exit397

TypeChecker_error.exit397:                        ; preds = %if.entry61.TypeChecker_error.exit397_crit_edge, %if.entry.i.i394
  %301 = phi ptr [ %.pre752, %if.entry61.TypeChecker_error.exit397_crit_edge ], [ %300, %if.entry.i.i394 ]
  %302 = phi i64 [ %295, %if.entry61.TypeChecker_error.exit397_crit_edge ], [ %.pre751, %if.entry.i.i394 ]
  %303 = add nsw i64 %302, 1
  store i64 %303, ptr %memberidx.i.i389, align 4
  %ptridx.i.i396 = getelementptr inbounds ptr, ptr %301, i64 %302
  store ptr %294, ptr %ptridx.i.i396, align 8
  br label %common.ret

ifend63:                                          ; preds = %if.entry56
  %304 = load ptr, ptr %0, align 8
  %memberidx.i.i.i399 = getelementptr inbounds %Program, ptr %304, i64 0, i32 1
  %305 = load ptr, ptr %memberidx.i.i.i399, align 8
  %306 = load i64, ptr %273, align 4
  %memberidx.i.i.i.i400 = getelementptr inbounds %Array_Module_, ptr %305, i64 0, i32 1
  %307 = load ptr, ptr %memberidx.i.i.i.i400, align 8
  %ptridx.i.i.i.i401 = getelementptr inbounds ptr, ptr %307, i64 %306
  %308 = load ptr, ptr %ptridx.i.i.i.i401, align 8
  %memberidx2.i.i.i402 = getelementptr inbounds %Module, ptr %308, i64 0, i32 3
  %309 = load ptr, ptr %memberidx2.i.i.i402, align 8
  %memberidx3.i.i.i403 = getelementptr inbounds %TypeId, ptr %273, i64 0, i32 2
  %310 = load i64, ptr %memberidx3.i.i.i403, align 4
  %memberidx.i5.i.i.i404 = getelementptr inbounds %Array_Class_, ptr %309, i64 0, i32 1
  %311 = load ptr, ptr %memberidx.i5.i.i.i404, align 8
  %ptridx.i6.i.i.i405 = getelementptr inbounds ptr, ptr %311, i64 %310
  %312 = load ptr, ptr %ptridx.i6.i.i.i405, align 8
  %313 = load i64, ptr %256, align 4
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %if.entry.i428, label %ifend.i434

if.entry.i428:                                    ; preds = %ifend63
  %memberidx1.i407 = getelementptr inbounds %Class, ptr %312, i64 0, i32 5
  %315 = load ptr, ptr %memberidx1.i407, align 8
  %memberidx2.i408 = getelementptr inbounds %PropId, ptr %256, i64 0, i32 2
  %316 = load i64, ptr %memberidx2.i408, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %315, i64 0, i32 1
  %317 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %317, i64 %316
  %318 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i409 = getelementptr inbounds %ClassMethod, ptr %318, i64 0, i32 4
  %memberidx3.i427 = getelementptr inbounds %ClassMethod, ptr %318, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i434:                                       ; preds = %ifend63
  %memberidx4.i410 = getelementptr inbounds %Class, ptr %312, i64 0, i32 4
  %319 = load ptr, ptr %memberidx4.i410, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %256, i64 0, i32 2
  %320 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %319, i64 0, i32 1
  %321 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i411 = getelementptr inbounds ptr, ptr %321, i64 %320
  %322 = load ptr, ptr %ptridx.i.i411, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %322, i64 0, i32 4
  %memberidx6.i433 = getelementptr inbounds %ClassField, ptr %322, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i428, %ifend.i434
  %common.ret.op.i406671.in = phi ptr [ %memberidx3.i409, %if.entry.i428 ], [ %memberidx6.i, %ifend.i434 ]
  %common.ret.op.in.i421 = phi ptr [ %memberidx3.i427, %if.entry.i428 ], [ %memberidx6.i433, %ifend.i434 ]
  %common.ret.op.i406671 = load ptr, ptr %common.ret.op.i406671.in, align 8
  %common.ret.op.i422 = load i64, ptr %common.ret.op.in.i421, align 4
  %323 = load ptr, ptr %memberidx41, align 8
  %324 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i406671, ptr %323)
  br i1 %324, label %ifend74, label %if.entry72

if.entry72:                                       ; preds = %get_class_prop_visibility.exit
  %325 = load ptr, ptr %12, align 8
  %memberidx75 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %325, i64 0, i32 5
  %326 = load ptr, ptr %memberidx75, align 8
  %327 = tail call ptr %326(ptr nonnull %12)
  %memberidx76 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %328 = load ptr, ptr %memberidx76, align 8
  %329 = load ptr, ptr %328, align 8
  %memberidx77 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %329, i64 0, i32 5
  %330 = load ptr, ptr %memberidx77, align 8
  %331 = tail call ptr %330(ptr nonnull %328)
  %332 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i406671)
  %333 = load ptr, ptr %332, align 8
  %memberidx78 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %333, i64 0, i32 5
  %334 = load ptr, ptr %memberidx78, align 8
  %335 = tail call ptr %334(ptr nonnull %332)
  %336 = alloca ptr, align 8
  %337 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %336, ptr nonnull @136, ptr %327, ptr %331, ptr %335)
  %338 = load ptr, ptr %336, align 8
  %339 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %339, align 8
  %memberidx.i435 = getelementptr inbounds %string, ptr %339, i64 0, i32 1
  store ptr %338, ptr %memberidx.i435, align 8
  %memberidx1.i436 = getelementptr inbounds %string, ptr %339, i64 0, i32 2
  store i64 %337, ptr %memberidx1.i436, align 4
  %memberidx2.i437 = getelementptr inbounds %string, ptr %339, i64 0, i32 3
  store i64 %337, ptr %memberidx2.i437, align 4
  tail call void @free(ptr %327)
  tail call void @free(ptr %331)
  tail call void @free(ptr %335)
  %340 = load ptr, ptr %9, align 8
  %memberidx80 = getelementptr inbounds %Token, ptr %340, i64 0, i32 1
  %341 = load ptr, ptr %memberidx80, align 8
  %memberidx.i438 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %342 = load ptr, ptr %memberidx.i438, align 8
  %memberidx1.i439 = getelementptr inbounds %Compiler, ptr %342, i64 0, i32 6
  %343 = load ptr, ptr %memberidx1.i439, align 8
  %344 = call ptr @malloc(i32 24)
  store i64 5, ptr %344, align 4
  %memberidx1.i.i440 = getelementptr inbounds %FloError, ptr %344, i64 0, i32 2
  store ptr %341, ptr %memberidx1.i.i440, align 8
  %memberidx2.i.i441 = getelementptr inbounds %FloError, ptr %344, i64 0, i32 1
  store ptr %339, ptr %memberidx2.i.i441, align 8
  %memberidx.i.i442 = getelementptr inbounds %Array_FloError_, ptr %343, i64 0, i32 2
  %345 = load i64, ptr %memberidx.i.i442, align 4
  %memberidx1.i2.i443 = getelementptr inbounds %Array_FloError_, ptr %343, i64 0, i32 3
  %346 = load i64, ptr %memberidx1.i2.i443, align 4
  %.not.i.i444 = icmp slt i64 %345, %346
  br i1 %.not.i.i444, label %if.entry72.TypeChecker_error.exit450_crit_edge, label %if.entry.i.i447

if.entry72.TypeChecker_error.exit450_crit_edge:   ; preds = %if.entry72
  %memberidx4.i.i448.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %343, i64 0, i32 1
  %.pre748 = load ptr, ptr %memberidx4.i.i448.phi.trans.insert, align 8
  br label %TypeChecker_error.exit450

if.entry.i.i447:                                  ; preds = %if.entry72
  %347 = shl nuw i64 %346, 1
  store i64 %347, ptr %memberidx1.i2.i443, align 4
  %memberidx2.i.i.i446 = getelementptr inbounds %Array_FloError_, ptr %343, i64 0, i32 1
  %348 = load ptr, ptr %memberidx2.i.i.i446, align 8
  %349 = shl i64 %346, 4
  %350 = call ptr @realloc(ptr %348, i64 %349)
  store ptr %350, ptr %memberidx2.i.i.i446, align 8
  %.pre747 = load i64, ptr %memberidx.i.i442, align 4
  br label %TypeChecker_error.exit450

TypeChecker_error.exit450:                        ; preds = %if.entry72.TypeChecker_error.exit450_crit_edge, %if.entry.i.i447
  %351 = phi ptr [ %.pre748, %if.entry72.TypeChecker_error.exit450_crit_edge ], [ %350, %if.entry.i.i447 ]
  %352 = phi i64 [ %345, %if.entry72.TypeChecker_error.exit450_crit_edge ], [ %.pre747, %if.entry.i.i447 ]
  %353 = add nsw i64 %352, 1
  store i64 %353, ptr %memberidx.i.i442, align 4
  %ptridx.i.i449 = getelementptr inbounds ptr, ptr %351, i64 %352
  store ptr %344, ptr %ptridx.i.i449, align 8
  br label %common.ret

ifend74:                                          ; preds = %get_class_prop_visibility.exit
  %354 = load i64, ptr %memberidx39, align 4
  %.not264 = icmp eq i64 %354, %common.ret.op.i422
  br i1 %.not264, label %ifend84, label %if.entry82

if.entry82:                                       ; preds = %ifend74
  %355 = load ptr, ptr %12, align 8
  %memberidx85 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %355, i64 0, i32 5
  %356 = load ptr, ptr %memberidx85, align 8
  %357 = tail call ptr %356(ptr nonnull %12)
  %memberidx86 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %358 = load ptr, ptr %memberidx86, align 8
  %359 = load ptr, ptr %358, align 8
  %memberidx87 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %359, i64 0, i32 5
  %360 = load ptr, ptr %memberidx87, align 8
  %361 = tail call ptr %360(ptr nonnull %358)
  switch i64 %common.ret.op.i422, label %ifend3.i [
    i64 1, label %if.entry.i455
    i64 2, label %if.entry1.i
  ]

if.entry.i455:                                    ; preds = %if.entry82
  %362 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %362, ptr noundef nonnull align 8 dereferenceable(7) @44, i64 7, i1 false)
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry82
  %363 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %363, ptr noundef nonnull align 8 dereferenceable(6) @45, i64 6, i1 false)
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry82
  %364 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %364, ptr noundef nonnull align 8 dereferenceable(9) @46, i64 9, i1 false)
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i455, %if.entry1.i, %ifend3.i
  %.sink816 = phi ptr [ %362, %if.entry.i455 ], [ %363, %if.entry1.i ], [ %364, %ifend3.i ]
  %.sink814 = phi i64 [ 7, %if.entry.i455 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %365 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %365, align 8
  %memberidx.i.i.i452 = getelementptr inbounds %string, ptr %365, i64 0, i32 1
  store ptr %.sink816, ptr %memberidx.i.i.i452, align 8
  %memberidx1.i.i.i453 = getelementptr inbounds %string, ptr %365, i64 0, i32 2
  store i64 %.sink814, ptr %memberidx1.i.i.i453, align 4
  %memberidx2.i.i.i454 = getelementptr inbounds %string, ptr %365, i64 0, i32 3
  store i64 %.sink814, ptr %memberidx2.i.i.i454, align 4
  %366 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %367 = tail call ptr %366(ptr nonnull %365)
  %368 = alloca ptr, align 8
  %369 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %368, ptr nonnull @137, ptr %357, ptr %361, ptr %367)
  %370 = load ptr, ptr %368, align 8
  %371 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %371, align 8
  %memberidx.i457 = getelementptr inbounds %string, ptr %371, i64 0, i32 1
  store ptr %370, ptr %memberidx.i457, align 8
  %memberidx1.i458 = getelementptr inbounds %string, ptr %371, i64 0, i32 2
  store i64 %369, ptr %memberidx1.i458, align 4
  %memberidx2.i459 = getelementptr inbounds %string, ptr %371, i64 0, i32 3
  store i64 %369, ptr %memberidx2.i459, align 4
  tail call void @free(ptr %357)
  tail call void @free(ptr %361)
  tail call void @free(ptr %367)
  %372 = load ptr, ptr %9, align 8
  %memberidx90 = getelementptr inbounds %Token, ptr %372, i64 0, i32 1
  %373 = load ptr, ptr %memberidx90, align 8
  %memberidx.i460 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %374 = load ptr, ptr %memberidx.i460, align 8
  %memberidx1.i461 = getelementptr inbounds %Compiler, ptr %374, i64 0, i32 6
  %375 = load ptr, ptr %memberidx1.i461, align 8
  %376 = call ptr @malloc(i32 24)
  store i64 4, ptr %376, align 4
  %memberidx1.i.i462 = getelementptr inbounds %FloError, ptr %376, i64 0, i32 2
  store ptr %373, ptr %memberidx1.i.i462, align 8
  %memberidx2.i.i463 = getelementptr inbounds %FloError, ptr %376, i64 0, i32 1
  store ptr %371, ptr %memberidx2.i.i463, align 8
  %memberidx.i.i464 = getelementptr inbounds %Array_FloError_, ptr %375, i64 0, i32 2
  %377 = load i64, ptr %memberidx.i.i464, align 4
  %memberidx1.i2.i465 = getelementptr inbounds %Array_FloError_, ptr %375, i64 0, i32 3
  %378 = load i64, ptr %memberidx1.i2.i465, align 4
  %.not.i.i466 = icmp slt i64 %377, %378
  br i1 %.not.i.i466, label %dump_access.exit.TypeChecker_error.exit472_crit_edge, label %if.entry.i.i469

dump_access.exit.TypeChecker_error.exit472_crit_edge: ; preds = %dump_access.exit
  %memberidx4.i.i470.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %375, i64 0, i32 1
  %.pre750 = load ptr, ptr %memberidx4.i.i470.phi.trans.insert, align 8
  br label %TypeChecker_error.exit472

if.entry.i.i469:                                  ; preds = %dump_access.exit
  %379 = shl nuw i64 %378, 1
  store i64 %379, ptr %memberidx1.i2.i465, align 4
  %memberidx2.i.i.i468 = getelementptr inbounds %Array_FloError_, ptr %375, i64 0, i32 1
  %380 = load ptr, ptr %memberidx2.i.i.i468, align 8
  %381 = shl i64 %378, 4
  %382 = call ptr @realloc(ptr %380, i64 %381)
  store ptr %382, ptr %memberidx2.i.i.i468, align 8
  %.pre749 = load i64, ptr %memberidx.i.i464, align 4
  br label %TypeChecker_error.exit472

TypeChecker_error.exit472:                        ; preds = %dump_access.exit.TypeChecker_error.exit472_crit_edge, %if.entry.i.i469
  %383 = phi ptr [ %.pre750, %dump_access.exit.TypeChecker_error.exit472_crit_edge ], [ %382, %if.entry.i.i469 ]
  %384 = phi i64 [ %377, %dump_access.exit.TypeChecker_error.exit472_crit_edge ], [ %.pre749, %if.entry.i.i469 ]
  %385 = add nsw i64 %384, 1
  store i64 %385, ptr %memberidx.i.i464, align 4
  %ptridx.i.i471 = getelementptr inbounds ptr, ptr %383, i64 %384
  store ptr %376, ptr %ptridx.i.i471, align 8
  br label %common.ret

ifend84:                                          ; preds = %ifend74
  %memberidx91 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 9
  %386 = load ptr, ptr %0, align 8
  %387 = load ptr, ptr %memberidx59, align 8
  %memberidx.i.i.i474 = getelementptr inbounds %Program, ptr %386, i64 0, i32 1
  %388 = load ptr, ptr %memberidx.i.i.i474, align 8
  %389 = load i64, ptr %387, align 4
  %memberidx.i.i.i.i475 = getelementptr inbounds %Array_Module_, ptr %388, i64 0, i32 1
  %390 = load ptr, ptr %memberidx.i.i.i.i475, align 8
  %ptridx.i.i.i.i476 = getelementptr inbounds ptr, ptr %390, i64 %389
  %391 = load ptr, ptr %ptridx.i.i.i.i476, align 8
  %memberidx2.i.i.i477 = getelementptr inbounds %Module, ptr %391, i64 0, i32 3
  %392 = load ptr, ptr %memberidx2.i.i.i477, align 8
  %memberidx3.i.i.i478 = getelementptr inbounds %TypeId, ptr %387, i64 0, i32 2
  %393 = load i64, ptr %memberidx3.i.i.i478, align 4
  %memberidx.i5.i.i.i479 = getelementptr inbounds %Array_Class_, ptr %392, i64 0, i32 1
  %394 = load ptr, ptr %memberidx.i5.i.i.i479, align 8
  %ptridx.i6.i.i.i480 = getelementptr inbounds ptr, ptr %394, i64 %393
  %395 = load ptr, ptr %ptridx.i6.i.i.i480, align 8
  %396 = load i64, ptr %256, align 4
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %if.entry.i488, label %ifend.i494

if.entry.i488:                                    ; preds = %ifend84
  %memberidx1.i483 = getelementptr inbounds %Class, ptr %395, i64 0, i32 5
  %398 = load ptr, ptr %memberidx1.i483, align 8
  %memberidx2.i484 = getelementptr inbounds %PropId, ptr %256, i64 0, i32 2
  %399 = load i64, ptr %memberidx2.i484, align 4
  %memberidx.i12.i485 = getelementptr inbounds %Array_ClassMethod_, ptr %398, i64 0, i32 1
  %400 = load ptr, ptr %memberidx.i12.i485, align 8
  %ptridx.i13.i486 = getelementptr inbounds ptr, ptr %400, i64 %399
  %401 = load ptr, ptr %ptridx.i13.i486, align 8
  %memberidx3.i487 = getelementptr inbounds %ClassMethod, ptr %401, i64 0, i32 9
  br label %get_vtable_index.exit

ifend.i494:                                       ; preds = %ifend84
  %memberidx4.i489 = getelementptr inbounds %Class, ptr %395, i64 0, i32 4
  %402 = load ptr, ptr %memberidx4.i489, align 8
  %memberidx5.i490 = getelementptr inbounds %PropId, ptr %256, i64 0, i32 2
  %403 = load i64, ptr %memberidx5.i490, align 4
  %memberidx.i11.i491 = getelementptr inbounds %Array_ClassField_, ptr %402, i64 0, i32 1
  %404 = load ptr, ptr %memberidx.i11.i491, align 8
  %ptridx.i.i492 = getelementptr inbounds ptr, ptr %404, i64 %403
  %405 = load ptr, ptr %ptridx.i.i492, align 8
  %memberidx6.i493 = getelementptr inbounds %ClassField, ptr %405, i64 0, i32 6
  br label %get_vtable_index.exit

get_vtable_index.exit:                            ; preds = %if.entry.i488, %ifend.i494
  %common.ret.op.in.i481 = phi ptr [ %memberidx3.i487, %if.entry.i488 ], [ %memberidx6.i493, %ifend.i494 ]
  %common.ret.op.i482 = load i64, ptr %common.ret.op.in.i481, align 4
  store i64 %common.ret.op.i482, ptr %memberidx91, align 4
  br label %ifend58

if.entry97:                                       ; preds = %ifend58
  %406 = load i1, ptr %memberidx36, align 1
  br i1 %406, label %if.entry101, label %ifend103

else98:                                           ; preds = %ifend58
  %407 = load ptr, ptr %memberidx6, align 8
  %408 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %408, ptr noundef nonnull align 8 dereferenceable(11) @139, i64 11, i1 false)
  %409 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %409, align 8
  %memberidx.i.i495 = getelementptr inbounds %string, ptr %409, i64 0, i32 1
  store ptr %408, ptr %memberidx.i.i495, align 8
  %memberidx1.i.i496 = getelementptr inbounds %string, ptr %409, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i496, align 4
  %memberidx2.i.i497 = getelementptr inbounds %string, ptr %409, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i497, align 4
  %memberidx.i498 = getelementptr inbounds %string, ptr %407, i64 0, i32 2
  %410 = load i64, ptr %memberidx.i498, align 4
  %.not.i500 = icmp eq i64 %410, 11
  br i1 %.not.i500, label %ifend.i504, label %else116

ifend.i504:                                       ; preds = %else98
  %memberidx2.i502 = getelementptr inbounds %string, ptr %407, i64 0, i32 1
  %411 = load ptr, ptr %memberidx2.i502, align 8
  %412 = tail call i64 @memcmp(ptr %411, ptr nonnull %408, i64 11)
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %if.entry115, label %else116

ifend99:                                          ; preds = %get_class_prop_type.exit616, %if.entry3.i, %ifend117, %ifend109
  %current_vtable_index.1 = phi i64 [ %current_vtable_index.0702, %ifend109 ], [ %current_vtable_index.2, %get_class_prop_type.exit616 ], [ %current_vtable_index.2, %if.entry3.i ], [ %current_vtable_index.2, %ifend117 ]
  %memberidx150 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 8
  %414 = load ptr, ptr %15, align 8
  store ptr %414, ptr %memberidx150, align 8
  %415 = load ptr, ptr %memberidx152, align 8
  %memberidx.i506 = getelementptr inbounds %Array_ClassMethod_, ptr %415, i64 0, i32 2
  %416 = load i64, ptr %memberidx.i506, align 4
  %memberidx1.i507 = getelementptr inbounds %Array_ClassMethod_, ptr %415, i64 0, i32 3
  %417 = load i64, ptr %memberidx1.i507, align 4
  %.not.i508 = icmp slt i64 %416, %417
  br i1 %.not.i508, label %ifend99.Array_ClassMethod____sl__.exit_crit_edge, label %if.entry.i511

ifend99.Array_ClassMethod____sl__.exit_crit_edge: ; preds = %ifend99
  %memberidx4.i512.phi.trans.insert = getelementptr inbounds %Array_ClassMethod_, ptr %415, i64 0, i32 1
  %.pre758 = load ptr, ptr %memberidx4.i512.phi.trans.insert, align 8
  br label %Array_ClassMethod____sl__.exit

if.entry.i511:                                    ; preds = %ifend99
  %418 = shl nuw i64 %417, 1
  store i64 %418, ptr %memberidx1.i507, align 4
  %memberidx2.i.i510 = getelementptr inbounds %Array_ClassMethod_, ptr %415, i64 0, i32 1
  %419 = load ptr, ptr %memberidx2.i.i510, align 8
  %420 = shl i64 %417, 4
  %421 = tail call ptr @realloc(ptr %419, i64 %420)
  store ptr %421, ptr %memberidx2.i.i510, align 8
  %.pre757 = load i64, ptr %memberidx.i506, align 4
  br label %Array_ClassMethod____sl__.exit

Array_ClassMethod____sl__.exit:                   ; preds = %ifend99.Array_ClassMethod____sl__.exit_crit_edge, %if.entry.i511
  %422 = phi ptr [ %.pre758, %ifend99.Array_ClassMethod____sl__.exit_crit_edge ], [ %421, %if.entry.i511 ]
  %423 = phi i64 [ %416, %ifend99.Array_ClassMethod____sl__.exit_crit_edge ], [ %.pre757, %if.entry.i511 ]
  %424 = add nsw i64 %423, 1
  store i64 %424, ptr %memberidx.i506, align 4
  %ptridx.i513 = getelementptr inbounds ptr, ptr %422, i64 %423
  store ptr %10, ptr %ptridx.i513, align 8
  %425 = load ptr, ptr %memberidx2.i, align 8
  store ptr %425, ptr %memberidx.i267, align 8
  %426 = add nuw nsw i64 %i.0701, 1
  %427 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_MethodNode_, ptr %427, i64 0, i32 2
  %428 = load i64, ptr %memberidx2, align 4
  %429 = icmp slt i64 %426, %428
  br i1 %429, label %for.body, label %common.ret

if.entry101:                                      ; preds = %if.entry97
  %430 = tail call ptr @malloc(i32 31)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(31) %430, ptr noundef nonnull align 8 dereferenceable(31) @138, i64 31, i1 false)
  %431 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %431, align 8
  %memberidx.i.i515 = getelementptr inbounds %string, ptr %431, i64 0, i32 1
  store ptr %430, ptr %memberidx.i.i515, align 8
  %memberidx1.i.i516 = getelementptr inbounds %string, ptr %431, i64 0, i32 2
  store i64 31, ptr %memberidx1.i.i516, align 4
  %memberidx2.i.i517 = getelementptr inbounds %string, ptr %431, i64 0, i32 3
  store i64 31, ptr %memberidx2.i.i517, align 4
  %432 = load ptr, ptr %9, align 8
  %memberidx105 = getelementptr inbounds %Token, ptr %432, i64 0, i32 1
  %433 = load ptr, ptr %memberidx105, align 8
  %memberidx.i518 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %434 = load ptr, ptr %memberidx.i518, align 8
  %memberidx1.i519 = getelementptr inbounds %Compiler, ptr %434, i64 0, i32 6
  %435 = load ptr, ptr %memberidx1.i519, align 8
  %436 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %436, align 4
  %memberidx1.i.i520 = getelementptr inbounds %FloError, ptr %436, i64 0, i32 2
  store ptr %433, ptr %memberidx1.i.i520, align 8
  %memberidx2.i.i521 = getelementptr inbounds %FloError, ptr %436, i64 0, i32 1
  store ptr %431, ptr %memberidx2.i.i521, align 8
  %memberidx.i.i522 = getelementptr inbounds %Array_FloError_, ptr %435, i64 0, i32 2
  %437 = load i64, ptr %memberidx.i.i522, align 4
  %memberidx1.i2.i523 = getelementptr inbounds %Array_FloError_, ptr %435, i64 0, i32 3
  %438 = load i64, ptr %memberidx1.i2.i523, align 4
  %.not.i.i524 = icmp slt i64 %437, %438
  br i1 %.not.i.i524, label %if.entry101.TypeChecker_error.exit530_crit_edge, label %if.entry.i.i527

if.entry101.TypeChecker_error.exit530_crit_edge:  ; preds = %if.entry101
  %memberidx4.i.i528.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %435, i64 0, i32 1
  %.pre762 = load ptr, ptr %memberidx4.i.i528.phi.trans.insert, align 8
  br label %TypeChecker_error.exit530

if.entry.i.i527:                                  ; preds = %if.entry101
  %439 = shl nuw i64 %438, 1
  store i64 %439, ptr %memberidx1.i2.i523, align 4
  %memberidx2.i.i.i526 = getelementptr inbounds %Array_FloError_, ptr %435, i64 0, i32 1
  %440 = load ptr, ptr %memberidx2.i.i.i526, align 8
  %441 = shl i64 %438, 4
  %442 = tail call ptr @realloc(ptr %440, i64 %441)
  store ptr %442, ptr %memberidx2.i.i.i526, align 8
  %.pre761 = load i64, ptr %memberidx.i.i522, align 4
  br label %TypeChecker_error.exit530

TypeChecker_error.exit530:                        ; preds = %if.entry101.TypeChecker_error.exit530_crit_edge, %if.entry.i.i527
  %443 = phi ptr [ %.pre762, %if.entry101.TypeChecker_error.exit530_crit_edge ], [ %442, %if.entry.i.i527 ]
  %444 = phi i64 [ %437, %if.entry101.TypeChecker_error.exit530_crit_edge ], [ %.pre761, %if.entry.i.i527 ]
  %445 = add nsw i64 %444, 1
  store i64 %445, ptr %memberidx.i.i522, align 4
  %ptridx.i.i529 = getelementptr inbounds ptr, ptr %443, i64 %444
  store ptr %436, ptr %ptridx.i.i529, align 8
  br label %common.ret

ifend103:                                         ; preds = %if.entry97
  %446 = load ptr, ptr %memberidx6, align 8
  %447 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %447, ptr noundef nonnull align 8 dereferenceable(11) @139, i64 11, i1 false)
  %448 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %448, align 8
  %memberidx.i.i531 = getelementptr inbounds %string, ptr %448, i64 0, i32 1
  store ptr %447, ptr %memberidx.i.i531, align 8
  %memberidx1.i.i532 = getelementptr inbounds %string, ptr %448, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i532, align 4
  %memberidx2.i.i533 = getelementptr inbounds %string, ptr %448, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i533, align 4
  %memberidx.i534 = getelementptr inbounds %string, ptr %446, i64 0, i32 2
  %449 = load i64, ptr %memberidx.i534, align 4
  %.not.i536 = icmp eq i64 %449, 11
  br i1 %.not.i536, label %ifend.i540, label %ifend109

ifend.i540:                                       ; preds = %ifend103
  %memberidx2.i538 = getelementptr inbounds %string, ptr %446, i64 0, i32 1
  %450 = load ptr, ptr %memberidx2.i538, align 8
  %451 = tail call i64 @memcmp(ptr %450, ptr nonnull %447, i64 11)
  %452 = icmp eq i64 %451, 0
  br i1 %452, label %if.entry107, label %ifend109

if.entry107:                                      ; preds = %ifend.i540
  %453 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %453, ptr noundef nonnull align 8 dereferenceable(33) @140, i64 33, i1 false)
  %454 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %454, align 8
  %memberidx.i.i542 = getelementptr inbounds %string, ptr %454, i64 0, i32 1
  store ptr %453, ptr %memberidx.i.i542, align 8
  %memberidx1.i.i543 = getelementptr inbounds %string, ptr %454, i64 0, i32 2
  store i64 33, ptr %memberidx1.i.i543, align 4
  %memberidx2.i.i544 = getelementptr inbounds %string, ptr %454, i64 0, i32 3
  store i64 33, ptr %memberidx2.i.i544, align 4
  %455 = load ptr, ptr %9, align 8
  %memberidx111 = getelementptr inbounds %Token, ptr %455, i64 0, i32 1
  %456 = load ptr, ptr %memberidx111, align 8
  %memberidx.i545 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %457 = load ptr, ptr %memberidx.i545, align 8
  %memberidx1.i546 = getelementptr inbounds %Compiler, ptr %457, i64 0, i32 6
  %458 = load ptr, ptr %memberidx1.i546, align 8
  %459 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %459, align 4
  %memberidx1.i.i547 = getelementptr inbounds %FloError, ptr %459, i64 0, i32 2
  store ptr %456, ptr %memberidx1.i.i547, align 8
  %memberidx2.i.i548 = getelementptr inbounds %FloError, ptr %459, i64 0, i32 1
  store ptr %454, ptr %memberidx2.i.i548, align 8
  %memberidx.i.i549 = getelementptr inbounds %Array_FloError_, ptr %458, i64 0, i32 2
  %460 = load i64, ptr %memberidx.i.i549, align 4
  %memberidx1.i2.i550 = getelementptr inbounds %Array_FloError_, ptr %458, i64 0, i32 3
  %461 = load i64, ptr %memberidx1.i2.i550, align 4
  %.not.i.i551 = icmp slt i64 %460, %461
  br i1 %.not.i.i551, label %if.entry107.TypeChecker_error.exit557_crit_edge, label %if.entry.i.i554

if.entry107.TypeChecker_error.exit557_crit_edge:  ; preds = %if.entry107
  %memberidx4.i.i555.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %458, i64 0, i32 1
  %.pre760 = load ptr, ptr %memberidx4.i.i555.phi.trans.insert, align 8
  br label %TypeChecker_error.exit557

if.entry.i.i554:                                  ; preds = %if.entry107
  %462 = shl nuw i64 %461, 1
  store i64 %462, ptr %memberidx1.i2.i550, align 4
  %memberidx2.i.i.i553 = getelementptr inbounds %Array_FloError_, ptr %458, i64 0, i32 1
  %463 = load ptr, ptr %memberidx2.i.i.i553, align 8
  %464 = shl i64 %461, 4
  %465 = tail call ptr @realloc(ptr %463, i64 %464)
  store ptr %465, ptr %memberidx2.i.i.i553, align 8
  %.pre759 = load i64, ptr %memberidx.i.i549, align 4
  br label %TypeChecker_error.exit557

TypeChecker_error.exit557:                        ; preds = %if.entry107.TypeChecker_error.exit557_crit_edge, %if.entry.i.i554
  %466 = phi ptr [ %.pre760, %if.entry107.TypeChecker_error.exit557_crit_edge ], [ %465, %if.entry.i.i554 ]
  %467 = phi i64 [ %460, %if.entry107.TypeChecker_error.exit557_crit_edge ], [ %.pre759, %if.entry.i.i554 ]
  %468 = add nsw i64 %467, 1
  store i64 %468, ptr %memberidx.i.i549, align 4
  %ptridx.i.i556 = getelementptr inbounds ptr, ptr %466, i64 %467
  store ptr %459, ptr %ptridx.i.i556, align 8
  br label %common.ret

ifend109:                                         ; preds = %ifend103, %ifend.i540
  %469 = load ptr, ptr %memberidx112, align 8
  %470 = load ptr, ptr %10, align 8
  tail call fastcc void @Map_string_PropId____setitem__(ptr %469, ptr %12, ptr %470)
  br label %ifend99

if.entry115:                                      ; preds = %ifend.i504
  %471 = load i1, ptr %memberidx36, align 1
  br i1 %471, label %if.entry119, label %ifend121

else116:                                          ; preds = %else98, %ifend.i504
  %472 = load i64, ptr %memberidx39, align 4
  %.not261 = icmp eq i64 %472, 1
  br i1 %.not261, label %else128, label %if.entry127

ifend117:                                         ; preds = %ifend129, %ifend121
  %current_vtable_index.2 = phi i64 [ %current_vtable_index.0702, %ifend121 ], [ %current_vtable_index.3, %ifend129 ]
  %473 = tail call ptr @malloc(i32 16)
  %474 = load ptr, ptr %1, align 8
  store i64 11, ptr %473, align 4
  %memberidx.i558 = getelementptr inbounds %ObjectType, ptr %473, i64 0, i32 1
  store ptr %474, ptr %memberidx.i558, align 8
  %475 = tail call ptr @malloc(i32 4)
  store i32 1936287860, ptr %475, align 8
  %476 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %476, align 8
  %memberidx.i.i559 = getelementptr inbounds %string, ptr %476, i64 0, i32 1
  store ptr %475, ptr %memberidx.i.i559, align 8
  %memberidx1.i.i560 = getelementptr inbounds %string, ptr %476, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i560, align 4
  %memberidx2.i.i561 = getelementptr inbounds %string, ptr %476, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i561, align 4
  %477 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr nonnull %476, ptr null, ptr nonnull %473)
  %478 = load ptr, ptr %memberidx139, align 8
  %.not262 = icmp eq ptr %478, null
  br i1 %.not262, label %ifend99, label %if.entry140

if.entry119:                                      ; preds = %if.entry115
  %479 = tail call ptr @malloc(i32 35)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %479, ptr noundef nonnull align 8 dereferenceable(35) @141, i64 35, i1 false)
  %480 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %480, align 8
  %memberidx.i.i562 = getelementptr inbounds %string, ptr %480, i64 0, i32 1
  store ptr %479, ptr %memberidx.i.i562, align 8
  %memberidx1.i.i563 = getelementptr inbounds %string, ptr %480, i64 0, i32 2
  store i64 35, ptr %memberidx1.i.i563, align 4
  %memberidx2.i.i564 = getelementptr inbounds %string, ptr %480, i64 0, i32 3
  store i64 35, ptr %memberidx2.i.i564, align 4
  %481 = load ptr, ptr %9, align 8
  %memberidx123 = getelementptr inbounds %Token, ptr %481, i64 0, i32 1
  %482 = load ptr, ptr %memberidx123, align 8
  %memberidx.i565 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %483 = load ptr, ptr %memberidx.i565, align 8
  %memberidx1.i566 = getelementptr inbounds %Compiler, ptr %483, i64 0, i32 6
  %484 = load ptr, ptr %memberidx1.i566, align 8
  %485 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %485, align 4
  %memberidx1.i.i567 = getelementptr inbounds %FloError, ptr %485, i64 0, i32 2
  store ptr %482, ptr %memberidx1.i.i567, align 8
  %memberidx2.i.i568 = getelementptr inbounds %FloError, ptr %485, i64 0, i32 1
  store ptr %480, ptr %memberidx2.i.i568, align 8
  %memberidx.i.i569 = getelementptr inbounds %Array_FloError_, ptr %484, i64 0, i32 2
  %486 = load i64, ptr %memberidx.i.i569, align 4
  %memberidx1.i2.i570 = getelementptr inbounds %Array_FloError_, ptr %484, i64 0, i32 3
  %487 = load i64, ptr %memberidx1.i2.i570, align 4
  %.not.i.i571 = icmp slt i64 %486, %487
  br i1 %.not.i.i571, label %if.entry119.TypeChecker_error.exit577_crit_edge, label %if.entry.i.i574

if.entry119.TypeChecker_error.exit577_crit_edge:  ; preds = %if.entry119
  %memberidx4.i.i575.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %484, i64 0, i32 1
  %.pre756 = load ptr, ptr %memberidx4.i.i575.phi.trans.insert, align 8
  br label %TypeChecker_error.exit577

if.entry.i.i574:                                  ; preds = %if.entry119
  %488 = shl nuw i64 %487, 1
  store i64 %488, ptr %memberidx1.i2.i570, align 4
  %memberidx2.i.i.i573 = getelementptr inbounds %Array_FloError_, ptr %484, i64 0, i32 1
  %489 = load ptr, ptr %memberidx2.i.i.i573, align 8
  %490 = shl i64 %487, 4
  %491 = tail call ptr @realloc(ptr %489, i64 %490)
  store ptr %491, ptr %memberidx2.i.i.i573, align 8
  %.pre755 = load i64, ptr %memberidx.i.i569, align 4
  br label %TypeChecker_error.exit577

TypeChecker_error.exit577:                        ; preds = %if.entry119.TypeChecker_error.exit577_crit_edge, %if.entry.i.i574
  %492 = phi ptr [ %.pre756, %if.entry119.TypeChecker_error.exit577_crit_edge ], [ %491, %if.entry.i.i574 ]
  %493 = phi i64 [ %486, %if.entry119.TypeChecker_error.exit577_crit_edge ], [ %.pre755, %if.entry.i.i574 ]
  %494 = add nsw i64 %493, 1
  store i64 %494, ptr %memberidx.i.i569, align 4
  %ptridx.i.i576 = getelementptr inbounds ptr, ptr %492, i64 %493
  store ptr %485, ptr %ptridx.i.i576, align 8
  br label %common.ret

ifend121:                                         ; preds = %if.entry115
  %495 = load ptr, ptr %10, align 8
  store ptr %495, ptr %memberidx124, align 8
  br label %ifend117

if.entry127:                                      ; preds = %else116
  %496 = add nsw i64 %current_vtable_index.0702, 1
  br label %ifend129

else128:                                          ; preds = %else116
  %497 = load i1, ptr %memberidx36, align 1
  br i1 %497, label %if.entry131, label %ifend129

ifend129:                                         ; preds = %else128, %if.entry127
  %current_vtable_index.3 = phi i64 [ %496, %if.entry127 ], [ %current_vtable_index.0702, %else128 ]
  %498 = load ptr, ptr %memberidx55, align 8
  %499 = load ptr, ptr %10, align 8
  tail call fastcc void @Map_string_PropId____setitem__(ptr %498, ptr %12, ptr %499)
  br label %ifend117

if.entry131:                                      ; preds = %else128
  %500 = tail call ptr @malloc(i32 58)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(58) %500, ptr noundef nonnull align 8 dereferenceable(58) @142, i64 58, i1 false)
  %501 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %501, align 8
  %memberidx.i.i578 = getelementptr inbounds %string, ptr %501, i64 0, i32 1
  store ptr %500, ptr %memberidx.i.i578, align 8
  %memberidx1.i.i579 = getelementptr inbounds %string, ptr %501, i64 0, i32 2
  store i64 58, ptr %memberidx1.i.i579, align 4
  %memberidx2.i.i580 = getelementptr inbounds %string, ptr %501, i64 0, i32 3
  store i64 58, ptr %memberidx2.i.i580, align 4
  %502 = load ptr, ptr %9, align 8
  %memberidx135 = getelementptr inbounds %Token, ptr %502, i64 0, i32 1
  %503 = load ptr, ptr %memberidx135, align 8
  %memberidx.i581 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %504 = load ptr, ptr %memberidx.i581, align 8
  %memberidx1.i582 = getelementptr inbounds %Compiler, ptr %504, i64 0, i32 6
  %505 = load ptr, ptr %memberidx1.i582, align 8
  %506 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %506, align 4
  %memberidx1.i.i583 = getelementptr inbounds %FloError, ptr %506, i64 0, i32 2
  store ptr %503, ptr %memberidx1.i.i583, align 8
  %memberidx2.i.i584 = getelementptr inbounds %FloError, ptr %506, i64 0, i32 1
  store ptr %501, ptr %memberidx2.i.i584, align 8
  %memberidx.i.i585 = getelementptr inbounds %Array_FloError_, ptr %505, i64 0, i32 2
  %507 = load i64, ptr %memberidx.i.i585, align 4
  %memberidx1.i2.i586 = getelementptr inbounds %Array_FloError_, ptr %505, i64 0, i32 3
  %508 = load i64, ptr %memberidx1.i2.i586, align 4
  %.not.i.i587 = icmp slt i64 %507, %508
  br i1 %.not.i.i587, label %if.entry131.TypeChecker_error.exit593_crit_edge, label %if.entry.i.i590

if.entry131.TypeChecker_error.exit593_crit_edge:  ; preds = %if.entry131
  %memberidx4.i.i591.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %505, i64 0, i32 1
  %.pre754 = load ptr, ptr %memberidx4.i.i591.phi.trans.insert, align 8
  br label %TypeChecker_error.exit593

if.entry.i.i590:                                  ; preds = %if.entry131
  %509 = shl nuw i64 %508, 1
  store i64 %509, ptr %memberidx1.i2.i586, align 4
  %memberidx2.i.i.i589 = getelementptr inbounds %Array_FloError_, ptr %505, i64 0, i32 1
  %510 = load ptr, ptr %memberidx2.i.i.i589, align 8
  %511 = shl i64 %508, 4
  %512 = tail call ptr @realloc(ptr %510, i64 %511)
  store ptr %512, ptr %memberidx2.i.i.i589, align 8
  %.pre753 = load i64, ptr %memberidx.i.i585, align 4
  br label %TypeChecker_error.exit593

TypeChecker_error.exit593:                        ; preds = %if.entry131.TypeChecker_error.exit593_crit_edge, %if.entry.i.i590
  %513 = phi ptr [ %.pre754, %if.entry131.TypeChecker_error.exit593_crit_edge ], [ %512, %if.entry.i.i590 ]
  %514 = phi i64 [ %507, %if.entry131.TypeChecker_error.exit593_crit_edge ], [ %.pre753, %if.entry.i.i590 ]
  %515 = add nsw i64 %514, 1
  store i64 %515, ptr %memberidx.i.i585, align 4
  %ptridx.i.i592 = getelementptr inbounds ptr, ptr %513, i64 %514
  store ptr %506, ptr %ptridx.i.i592, align 8
  br label %common.ret

if.entry140:                                      ; preds = %ifend117
  %516 = load ptr, ptr %0, align 8
  %517 = load i64, ptr %478, align 4
  %switch698 = icmp eq i64 %517, 19
  br i1 %switch698, label %if.entry.i638, label %if.entry3.i

if.entry.i638:                                    ; preds = %if.entry140, %if.entry.i638
  %.tr11.i699 = phi ptr [ %518, %if.entry.i638 ], [ %478, %if.entry140 ]
  %memberidx1.i637 = getelementptr inbounds %GenericType, ptr %.tr11.i699, i64 0, i32 3
  %518 = load ptr, ptr %memberidx1.i637, align 8
  %519 = load i64, ptr %518, align 4
  %switch = icmp eq i64 %519, 19
  br i1 %switch, label %if.entry.i638, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i638, %if.entry140
  %.tr11.i.lcssa = phi ptr [ %478, %if.entry140 ], [ %518, %if.entry.i638 ]
  %memberidx6.i639 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %520 = load ptr, ptr %memberidx6.i639, align 8
  %memberidx.i.i640 = getelementptr inbounds %Program, ptr %516, i64 0, i32 1
  %521 = load ptr, ptr %memberidx.i.i640, align 8
  %522 = load i64, ptr %520, align 4
  %memberidx.i.i.i641 = getelementptr inbounds %Array_Module_, ptr %521, i64 0, i32 1
  %523 = load ptr, ptr %memberidx.i.i.i641, align 8
  %ptridx.i.i.i642 = getelementptr inbounds ptr, ptr %523, i64 %522
  %524 = load ptr, ptr %ptridx.i.i.i642, align 8
  %memberidx2.i.i643 = getelementptr inbounds %Module, ptr %524, i64 0, i32 3
  %525 = load ptr, ptr %memberidx2.i.i643, align 8
  %memberidx3.i.i644 = getelementptr inbounds %TypeId, ptr %520, i64 0, i32 2
  %526 = load i64, ptr %memberidx3.i.i644, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %525, i64 0, i32 1
  %527 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %527, i64 %526
  %528 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx145 = getelementptr inbounds %Class, ptr %528, i64 0, i32 3
  %529 = load ptr, ptr %memberidx145, align 8
  %.not263 = icmp eq ptr %529, null
  br i1 %.not263, label %ifend99, label %if.entry146

if.entry146:                                      ; preds = %if.entry3.i
  %memberidx.i.i594 = getelementptr inbounds %PropId, ptr %529, i64 0, i32 1
  %530 = load ptr, ptr %memberidx.i.i594, align 8
  %531 = load i64, ptr %530, align 4
  %ptridx.i.i.i.i597 = getelementptr inbounds ptr, ptr %523, i64 %531
  %532 = load ptr, ptr %ptridx.i.i.i.i597, align 8
  %memberidx2.i.i.i598 = getelementptr inbounds %Module, ptr %532, i64 0, i32 3
  %533 = load ptr, ptr %memberidx2.i.i.i598, align 8
  %memberidx3.i.i.i599 = getelementptr inbounds %TypeId, ptr %530, i64 0, i32 2
  %534 = load i64, ptr %memberidx3.i.i.i599, align 4
  %memberidx.i5.i.i.i600 = getelementptr inbounds %Array_Class_, ptr %533, i64 0, i32 1
  %535 = load ptr, ptr %memberidx.i5.i.i.i600, align 8
  %ptridx.i6.i.i.i601 = getelementptr inbounds ptr, ptr %535, i64 %534
  %536 = load ptr, ptr %ptridx.i6.i.i.i601, align 8
  %537 = load i64, ptr %529, align 4
  %538 = icmp eq i64 %537, 0
  br i1 %538, label %if.entry.i609, label %ifend.i615

if.entry.i609:                                    ; preds = %if.entry146
  %memberidx1.i604 = getelementptr inbounds %Class, ptr %536, i64 0, i32 5
  %539 = load ptr, ptr %memberidx1.i604, align 8
  %memberidx2.i605 = getelementptr inbounds %PropId, ptr %529, i64 0, i32 2
  %540 = load i64, ptr %memberidx2.i605, align 4
  %memberidx.i12.i606 = getelementptr inbounds %Array_ClassMethod_, ptr %539, i64 0, i32 1
  %541 = load ptr, ptr %memberidx.i12.i606, align 8
  %ptridx.i13.i607 = getelementptr inbounds ptr, ptr %541, i64 %540
  %542 = load ptr, ptr %ptridx.i13.i607, align 8
  %memberidx3.i608 = getelementptr inbounds %ClassMethod, ptr %542, i64 0, i32 4
  br label %get_class_prop_type.exit616

ifend.i615:                                       ; preds = %if.entry146
  %memberidx4.i610 = getelementptr inbounds %Class, ptr %536, i64 0, i32 4
  %543 = load ptr, ptr %memberidx4.i610, align 8
  %memberidx5.i611 = getelementptr inbounds %PropId, ptr %529, i64 0, i32 2
  %544 = load i64, ptr %memberidx5.i611, align 4
  %memberidx.i11.i612 = getelementptr inbounds %Array_ClassField_, ptr %543, i64 0, i32 1
  %545 = load ptr, ptr %memberidx.i11.i612, align 8
  %ptridx.i.i613 = getelementptr inbounds ptr, ptr %545, i64 %544
  %546 = load ptr, ptr %ptridx.i.i613, align 8
  %memberidx6.i614 = getelementptr inbounds %ClassField, ptr %546, i64 0, i32 4
  br label %get_class_prop_type.exit616

get_class_prop_type.exit616:                      ; preds = %if.entry.i609, %ifend.i615
  %common.ret.op.in.i602 = phi ptr [ %memberidx3.i608, %if.entry.i609 ], [ %memberidx6.i614, %ifend.i615 ]
  %common.ret.op.i603 = load ptr, ptr %common.ret.op.in.i602, align 8
  %547 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %547, ptr noundef nonnull align 8 dereferenceable(5) @143, i64 5, i1 false)
  %548 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %548, align 8
  %memberidx.i.i617 = getelementptr inbounds %string, ptr %548, i64 0, i32 1
  store ptr %547, ptr %memberidx.i.i617, align 8
  %memberidx1.i.i618 = getelementptr inbounds %string, ptr %548, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i618, align 4
  %memberidx2.i.i619 = getelementptr inbounds %string, ptr %548, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i619, align 4
  %549 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr nonnull %548, ptr null, ptr %common.ret.op.i603)
  br label %ifend99
}

define internal fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %4 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %4, i64 0, i32 6
  %5 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %for.body, %3, %ifend45, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %96, %ifend45 ], [ null, %3 ], [ null, %for.body ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %8, align 8
  %memberidx.i91 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i91, align 4
  %memberidx1.i92 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 3
  store i64 8, ptr %memberidx1.i92, align 4
  %memberidx2.i93 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 1
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %memberidx2.i93, align 8
  store i64 0, ptr %memberidx.i91, align 4
  %10 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %10, align 4
  %11 = load i64, ptr %1, align 4
  switch i64 %11, label %ifend5 [
    i64 14, label %if.entry3
    i64 19, label %if.entry.i134
  ]

if.entry3:                                        ; preds = %ifend
  %memberidx6 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  br label %ifend5.sink.split

ifend5.sink.split:                                ; preds = %if.entry3, %if.entry12
  %.sink = phi ptr [ %29, %if.entry12 ], [ %memberidx6, %if.entry3 ]
  %is_constant.0.ph = phi i1 [ false, %if.entry12 ], [ true, %if.entry3 ]
  %12 = load ptr, ptr %.sink, align 8
  br label %ifend5

ifend5:                                           ; preds = %ifend5.sink.split, %is_object.exit, %ifend, %string___eq__.exit
  %is_constant.0 = phi i1 [ false, %string___eq__.exit ], [ true, %ifend ], [ false, %is_object.exit ], [ %is_constant.0.ph, %ifend5.sink.split ]
  %element_type.0 = phi ptr [ %10, %string___eq__.exit ], [ %10, %ifend ], [ %10, %is_object.exit ], [ %12, %ifend5.sink.split ]
  %memberidx16 = getelementptr inbounds %ArrayExpressionNode, ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %memberidx16, align 8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %13, i64 0, i32 2
  %14 = load i64, ptr %memberidx17, align 4
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %for.body, label %ifend20

if.entry.i134:                                    ; preds = %ifend, %if.entry.i134
  %.tr5.i = phi ptr [ %16, %if.entry.i134 ], [ %1, %ifend ]
  %memberidx1.i133 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i133, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 19
  br i1 %18, label %if.entry.i134, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i134
  %memberidx11 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %19 = load ptr, ptr %memberidx11, align 8
  %20 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %20, ptr noundef nonnull align 8 dereferenceable(5) @66, i64 5, i1 false)
  %21 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i, align 4
  %memberidx.i94 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i94, align 4
  %.not.i = icmp eq i64 %22, 5
  br i1 %.not.i, label %string___eq__.exit, label %ifend5

string___eq__.exit:                               ; preds = %is_object.exit
  %23 = icmp eq i64 %17, 11
  %memberidx2.i96 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %24 = load ptr, ptr %memberidx2.i96, align 8
  %25 = tail call i64 @memcmp(ptr %24, ptr nonnull %20, i64 5)
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  br i1 %27, label %if.entry12, label %ifend5

if.entry12:                                       ; preds = %string___eq__.exit
  %memberidx15 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %28 = load ptr, ptr %memberidx15, align 8
  %memberidx.i97 = getelementptr inbounds %Array_Type_, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i97, align 8
  br label %ifend5.sink.split

ifend20:                                          ; preds = %Array_Expression____sl__.exit, %ifend5
  %is_constant.1 = phi i1 [ %is_constant.0, %ifend5 ], [ %46, %Array_Expression____sl__.exit ]
  %element_type.1 = phi ptr [ %element_type.0, %ifend5 ], [ %.element_type.2145, %Array_Expression____sl__.exit ]
  %30 = load i64, ptr %1, align 4
  %.not = icmp eq i64 %30, 14
  br i1 %.not, label %else44, label %if.entry43

for.body:                                         ; preds = %ifend5, %Array_Expression____sl__.exit
  %31 = phi ptr [ %57, %Array_Expression____sl__.exit ], [ %13, %ifend5 ]
  %i.0146 = phi i64 [ %56, %Array_Expression____sl__.exit ], [ 0, %ifend5 ]
  %element_type.2145 = phi ptr [ %.element_type.2145, %Array_Expression____sl__.exit ], [ %element_type.0, %ifend5 ]
  %is_constant.2144 = phi i1 [ %46, %Array_Expression____sl__.exit ], [ %is_constant.0, %ifend5 ]
  %memberidx.i98 = getelementptr inbounds %Array_ExpressionNode_, ptr %31, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i98, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %32, i64 %i.0146
  %33 = load ptr, ptr %ptridx.i, align 8
  %34 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %element_type.2145, ptr %33)
  %35 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i100 = getelementptr inbounds %Compiler, ptr %35, i64 0, i32 6
  %36 = load ptr, ptr %memberidx1.i100, align 8
  %memberidx2.i101 = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 2
  %37 = load i64, ptr %memberidx2.i101, align 4
  %38 = icmp sgt i64 %37, 0
  br i1 %38, label %common.ret, label %ifend26

ifend26:                                          ; preds = %for.body
  %39 = icmp eq i64 %i.0146, 0
  %40 = load i64, ptr %element_type.2145, align 4
  %41 = icmp eq i64 %40, 20
  %42 = and i1 %39, %41
  %memberidx31 = getelementptr inbounds %Expression, ptr %34, i64 0, i32 3
  %43 = load ptr, ptr %memberidx31, align 8
  %.element_type.2145 = select i1 %42, ptr %43, ptr %element_type.2145
  %memberidx32 = getelementptr inbounds %Expression, ptr %34, i64 0, i32 1
  %44 = load i1, ptr %memberidx32, align 1
  %45 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %.element_type.2145, ptr %43)
  br i1 %45, label %if.entry34, label %else35

if.entry34:                                       ; preds = %ifend26
  %46 = and i1 %is_constant.2144, %44
  %47 = load i64, ptr %memberidx.i91, align 4
  %48 = load i64, ptr %memberidx1.i92, align 4
  %.not.i104 = icmp slt i64 %47, %48
  br i1 %.not.i104, label %if.entry34.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

if.entry34.Array_Expression____sl__.exit_crit_edge: ; preds = %if.entry34
  %.pre156 = load ptr, ptr %memberidx2.i93, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %if.entry34
  %49 = shl nuw i64 %48, 1
  store i64 %49, ptr %memberidx1.i92, align 4
  %50 = load ptr, ptr %memberidx2.i93, align 8
  %51 = shl i64 %48, 4
  %52 = tail call ptr @realloc(ptr %50, i64 %51)
  store ptr %52, ptr %memberidx2.i93, align 8
  %.pre155 = load i64, ptr %memberidx.i91, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %if.entry34.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %53 = phi ptr [ %.pre156, %if.entry34.Array_Expression____sl__.exit_crit_edge ], [ %52, %if.entry.i ]
  %54 = phi i64 [ %47, %if.entry34.Array_Expression____sl__.exit_crit_edge ], [ %.pre155, %if.entry.i ]
  %55 = add nsw i64 %54, 1
  store i64 %55, ptr %memberidx.i91, align 4
  %ptridx.i107 = getelementptr inbounds ptr, ptr %53, i64 %54
  store ptr %34, ptr %ptridx.i107, align 8
  %56 = add nuw nsw i64 %i.0146, 1
  %57 = load ptr, ptr %memberidx16, align 8
  %memberidx22 = getelementptr inbounds %Array_ExpressionNode_, ptr %57, i64 0, i32 2
  %58 = load i64, ptr %memberidx22, align 4
  %59 = icmp slt i64 %56, %58
  br i1 %59, label %for.body, label %ifend20

else35:                                           ; preds = %ifend26
  %memberidx33 = getelementptr inbounds %Expression, ptr %34, i64 0, i32 3
  %60 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %.element_type.2145)
  %61 = load ptr, ptr %60, align 8
  %memberidx37 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %61, i64 0, i32 5
  %62 = load ptr, ptr %memberidx37, align 8
  %63 = tail call ptr %62(ptr nonnull %60)
  %64 = load ptr, ptr %memberidx33, align 8
  %65 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %64)
  %66 = load ptr, ptr %65, align 8
  %memberidx39 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %66, i64 0, i32 5
  %67 = load ptr, ptr %memberidx39, align 8
  %68 = tail call ptr %67(ptr nonnull %65)
  %69 = alloca ptr, align 8
  %70 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %69, ptr nonnull @159, ptr %63, ptr %68)
  %71 = load ptr, ptr %69, align 8
  %72 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %72, align 8
  %memberidx.i109 = getelementptr inbounds %string, ptr %72, i64 0, i32 1
  store ptr %71, ptr %memberidx.i109, align 8
  %memberidx1.i110 = getelementptr inbounds %string, ptr %72, i64 0, i32 2
  store i64 %70, ptr %memberidx1.i110, align 4
  %memberidx2.i111 = getelementptr inbounds %string, ptr %72, i64 0, i32 3
  store i64 %70, ptr %memberidx2.i111, align 4
  tail call void @free(ptr %63)
  tail call void @free(ptr %68)
  %73 = load ptr, ptr %memberidx16, align 8
  %memberidx.i112 = getelementptr inbounds %Array_ExpressionNode_, ptr %73, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i112, align 8
  %ptridx.i113 = getelementptr inbounds ptr, ptr %74, i64 %i.0146
  %75 = load ptr, ptr %ptridx.i113, align 8
  %76 = load ptr, ptr %75, align 8
  %77 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i115 = getelementptr inbounds %Compiler, ptr %77, i64 0, i32 6
  %78 = load ptr, ptr %memberidx1.i115, align 8
  %79 = call ptr @malloc(i32 24)
  store i64 5, ptr %79, align 4
  %memberidx1.i.i116 = getelementptr inbounds %FloError, ptr %79, i64 0, i32 2
  store ptr %76, ptr %memberidx1.i.i116, align 8
  %memberidx2.i.i117 = getelementptr inbounds %FloError, ptr %79, i64 0, i32 1
  store ptr %72, ptr %memberidx2.i.i117, align 8
  %memberidx.i.i118 = getelementptr inbounds %Array_FloError_, ptr %78, i64 0, i32 2
  %80 = load i64, ptr %memberidx.i.i118, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %78, i64 0, i32 3
  %81 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %80, %81
  br i1 %.not.i.i, label %else35.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

else35.TypeChecker_error.exit_crit_edge:          ; preds = %else35
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %78, i64 0, i32 1
  %.pre154 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %else35
  %82 = shl nuw i64 %81, 1
  store i64 %82, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %78, i64 0, i32 1
  %83 = load ptr, ptr %memberidx2.i.i.i, align 8
  %84 = shl i64 %81, 4
  %85 = call ptr @realloc(ptr %83, i64 %84)
  store ptr %85, ptr %memberidx2.i.i.i, align 8
  %.pre153 = load i64, ptr %memberidx.i.i118, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %else35.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %86 = phi ptr [ %.pre154, %else35.TypeChecker_error.exit_crit_edge ], [ %85, %if.entry.i.i ]
  %87 = phi i64 [ %80, %else35.TypeChecker_error.exit_crit_edge ], [ %.pre153, %if.entry.i.i ]
  %88 = add nsw i64 %87, 1
  store i64 %88, ptr %memberidx.i.i118, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %86, i64 %87
  store ptr %79, ptr %ptridx.i.i, align 8
  br label %common.ret

if.entry43:                                       ; preds = %ifend20
  %89 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %89, ptr noundef nonnull align 8 dereferenceable(5) @66, i64 5, i1 false)
  %90 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %90, align 8
  %memberidx.i.i119 = getelementptr inbounds %string, ptr %90, i64 0, i32 1
  store ptr %89, ptr %memberidx.i.i119, align 8
  %memberidx1.i.i120 = getelementptr inbounds %string, ptr %90, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i120, align 4
  %memberidx2.i.i121 = getelementptr inbounds %string, ptr %90, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i121, align 4
  %91 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %91, align 8
  %memberidx.i122 = getelementptr inbounds %Array_Type_, ptr %91, i64 0, i32 2
  store i64 0, ptr %memberidx.i122, align 4
  %memberidx1.i123 = getelementptr inbounds %Array_Type_, ptr %91, i64 0, i32 3
  store i64 8, ptr %memberidx1.i123, align 4
  %memberidx2.i124 = getelementptr inbounds %Array_Type_, ptr %91, i64 0, i32 1
  %92 = tail call ptr @malloc(i32 64)
  store ptr %92, ptr %memberidx2.i124, align 8
  store ptr %element_type.1, ptr %92, align 8
  store i64 1, ptr %memberidx.i122, align 4
  %93 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr nonnull %90, ptr nonnull %91)
  %.not90 = icmp eq ptr %93, null
  %spec.select = select i1 %.not90, i1 %is_constant.1, i1 false
  %spec.select132 = select i1 %.not90, ptr %1, ptr %93
  br label %ifend45

else44:                                           ; preds = %ifend20
  %94 = tail call ptr @malloc(i32 24)
  %95 = load i64, ptr %memberidx.i91, align 4
  store i64 14, ptr %94, align 4
  %memberidx.i125 = getelementptr inbounds %ArrayType, ptr %94, i64 0, i32 1
  store ptr %element_type.1, ptr %memberidx.i125, align 8
  %memberidx1.i126 = getelementptr inbounds %ArrayType, ptr %94, i64 0, i32 2
  store i64 %95, ptr %memberidx1.i126, align 4
  br label %ifend45

ifend45:                                          ; preds = %if.entry43, %else44
  %is_constant.3 = phi i1 [ %is_constant.1, %else44 ], [ %spec.select, %if.entry43 ]
  %array_type.0 = phi ptr [ %94, %else44 ], [ %spec.select132, %if.entry43 ]
  %96 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %96, align 4
  %memberidx.i.i127 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i127, align 4
  %memberidx1.i.i128 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 1
  %memberidx.i129 = getelementptr inbounds %ArrayExpression, ptr %96, i64 0, i32 4
  store ptr %8, ptr %memberidx.i129, align 8
  store i1 %is_constant.3, ptr %memberidx1.i.i128, align 1
  %memberidx53 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 3
  store ptr %array_type.0, ptr %memberidx53, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_check_enum_body(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %6 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %6, align 4
  %memberidx.i = getelementptr inbounds %IntType, ptr %6, i64 0, i32 1
  store i1 true, ptr %memberidx.i, align 1
  br label %ifend

else:                                             ; preds = %3
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %4)
  %8 = load i64, ptr %7, align 4
  %9 = add i64 %8, -1
  %10 = icmp ult i64 %9, 7
  br i1 %10, label %ifend, label %if.entry2

ifend:                                            ; preds = %TypeChecker_error.exit100, %else, %if.entry
  %enum_variant.0 = phi ptr [ %6, %if.entry ], [ %7, %TypeChecker_error.exit100 ], [ %7, %else ]
  %memberidx8 = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 1
  %11 = load ptr, ptr %memberidx8, align 8
  %memberidx9137 = getelementptr inbounds %Array_EnumNodeField_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx9137, align 4
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %ifend
  %memberidx44 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 3
  %memberidx46 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  br label %for.body

if.entry2:                                        ; preds = %else
  %14 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %7)
  %15 = load ptr, ptr %14, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx5, align 8
  %17 = tail call ptr %16(ptr nonnull %14)
  %18 = alloca ptr, align 8
  %19 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %18, ptr nonnull @101, ptr %17)
  %20 = load ptr, ptr %18, align 8
  %21 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i86 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i86, align 8
  %memberidx1.i87 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 %19, ptr %memberidx1.i87, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 %19, ptr %memberidx2.i, align 4
  tail call void @free(ptr %17)
  %22 = load ptr, ptr %memberidx, align 8
  %23 = load ptr, ptr %22, align 8
  %memberidx.i88 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %24 = load ptr, ptr %memberidx.i88, align 8
  %memberidx1.i89 = getelementptr inbounds %Compiler, ptr %24, i64 0, i32 6
  %25 = load ptr, ptr %memberidx1.i89, align 8
  %26 = call ptr @malloc(i32 24)
  store i64 5, ptr %26, align 4
  %memberidx1.i.i90 = getelementptr inbounds %FloError, ptr %26, i64 0, i32 2
  store ptr %23, ptr %memberidx1.i.i90, align 8
  %memberidx2.i.i91 = getelementptr inbounds %FloError, ptr %26, i64 0, i32 1
  store ptr %21, ptr %memberidx2.i.i91, align 8
  %memberidx.i.i92 = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i.i92, align 4
  %memberidx1.i2.i93 = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 3
  %28 = load i64, ptr %memberidx1.i2.i93, align 4
  %.not.i.i94 = icmp slt i64 %27, %28
  br i1 %.not.i.i94, label %if.entry2.TypeChecker_error.exit100_crit_edge, label %if.entry.i.i97

if.entry2.TypeChecker_error.exit100_crit_edge:    ; preds = %if.entry2
  %memberidx4.i.i98.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 1
  %.pre143 = load ptr, ptr %memberidx4.i.i98.phi.trans.insert, align 8
  br label %TypeChecker_error.exit100

if.entry.i.i97:                                   ; preds = %if.entry2
  %29 = shl nuw i64 %28, 1
  store i64 %29, ptr %memberidx1.i2.i93, align 4
  %memberidx2.i.i.i96 = getelementptr inbounds %Array_FloError_, ptr %25, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2.i.i.i96, align 8
  %31 = shl i64 %28, 4
  %32 = call ptr @realloc(ptr %30, i64 %31)
  store ptr %32, ptr %memberidx2.i.i.i96, align 8
  %.pre = load i64, ptr %memberidx.i.i92, align 4
  br label %TypeChecker_error.exit100

TypeChecker_error.exit100:                        ; preds = %if.entry2.TypeChecker_error.exit100_crit_edge, %if.entry.i.i97
  %33 = phi ptr [ %.pre143, %if.entry2.TypeChecker_error.exit100_crit_edge ], [ %32, %if.entry.i.i97 ]
  %34 = phi i64 [ %27, %if.entry2.TypeChecker_error.exit100_crit_edge ], [ %.pre, %if.entry.i.i97 ]
  %35 = add nsw i64 %34, 1
  store i64 %35, ptr %memberidx.i.i92, align 4
  %ptridx.i.i99 = getelementptr inbounds ptr, ptr %33, i64 %34
  store ptr %26, ptr %ptridx.i.i99, align 8
  br label %ifend

for.body:                                         ; preds = %for.body.lr.ph, %Array_EnumField____sl__.exit
  %36 = phi ptr [ %11, %for.body.lr.ph ], [ %62, %Array_EnumField____sl__.exit ]
  %next_enum_value.0139 = phi i64 [ 0, %for.body.lr.ph ], [ %next_enum_value.1, %Array_EnumField____sl__.exit ]
  %i.0138 = phi i64 [ 0, %for.body.lr.ph ], [ %61, %Array_EnumField____sl__.exit ]
  %memberidx.i101 = getelementptr inbounds %Array_EnumNodeField_, ptr %36, i64 0, i32 1
  %37 = load ptr, ptr %memberidx.i101, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %37, i64 %i.0138
  %38 = load ptr, ptr %ptridx.i, align 8
  %39 = load ptr, ptr %38, align 8
  %memberidx12 = getelementptr inbounds %IdentifierToken, ptr %39, i64 0, i32 2
  %40 = load ptr, ptr %memberidx12, align 8
  %41 = tail call ptr @malloc(i32 24)
  %memberidx.i102 = getelementptr inbounds %EnumField, ptr %41, i64 0, i32 1
  store ptr %40, ptr %memberidx.i102, align 8
  %42 = tail call ptr @malloc(i32 24)
  %43 = load ptr, ptr %1, align 8
  store i64 1, ptr %42, align 4
  %memberidx1.i106 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 1
  store ptr %43, ptr %memberidx1.i106, align 8
  %memberidx2.i107 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  store i64 %i.0138, ptr %memberidx2.i107, align 4
  store ptr %42, ptr %41, align 8
  %memberidx15 = getelementptr inbounds %EnumNodeField, ptr %38, i64 0, i32 1
  %44 = load ptr, ptr %memberidx15, align 8
  %.not = icmp eq ptr %44, null
  %memberidx41 = getelementptr inbounds %EnumField, ptr %41, i64 0, i32 2
  br i1 %.not, label %else17, label %if.entry16

common.ret:                                       ; preds = %Array_EnumField____sl__.exit, %ifend, %TypeChecker_error.exit, %TypeChecker_error.exit133
  ret void

if.entry16:                                       ; preds = %for.body
  %45 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %enum_variant.0, ptr nonnull %44)
  store ptr %45, ptr %memberidx41, align 8
  %memberidx22 = getelementptr inbounds %Expression, ptr %45, i64 0, i32 1
  %46 = load i1, ptr %memberidx22, align 1
  br i1 %46, label %ifend25, label %if.entry23

else17:                                           ; preds = %for.body
  %47 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %47, align 4
  %memberidx.i.i108 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i108, align 4
  %memberidx1.i.i109 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i109, align 1
  %memberidx.i110 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 3
  %48 = call ptr @malloc(i32 9)
  store i64 6, ptr %48, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %48, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  %memberidx1.i111 = getelementptr inbounds %IntExpression, ptr %47, i64 0, i32 4
  store i64 %next_enum_value.0139, ptr %memberidx1.i111, align 4
  store i1 true, ptr %memberidx1.i.i109, align 1
  store ptr %47, ptr %memberidx41, align 8
  store ptr %enum_variant.0, ptr %memberidx.i110, align 8
  br label %ifend18

ifend18:                                          ; preds = %else17, %ifend32
  %next_enum_value.1.in = phi i64 [ %113, %ifend32 ], [ %next_enum_value.0139, %else17 ]
  %next_enum_value.1 = add nsw i64 %next_enum_value.1.in, 1
  %49 = load ptr, ptr %memberidx44, align 8
  %50 = load ptr, ptr %41, align 8
  call fastcc void @Map_string_PropId____setitem__(ptr %49, ptr %40, ptr %50)
  %51 = load ptr, ptr %memberidx46, align 8
  %memberidx.i113 = getelementptr inbounds %Array_EnumField_, ptr %51, i64 0, i32 2
  %52 = load i64, ptr %memberidx.i113, align 4
  %memberidx1.i114 = getelementptr inbounds %Array_EnumField_, ptr %51, i64 0, i32 3
  %53 = load i64, ptr %memberidx1.i114, align 4
  %.not.i = icmp slt i64 %52, %53
  br i1 %.not.i, label %ifend18.Array_EnumField____sl__.exit_crit_edge, label %if.entry.i

ifend18.Array_EnumField____sl__.exit_crit_edge:   ; preds = %ifend18
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_EnumField_, ptr %51, i64 0, i32 1
  %.pre149 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_EnumField____sl__.exit

if.entry.i:                                       ; preds = %ifend18
  %54 = shl nuw i64 %53, 1
  store i64 %54, ptr %memberidx1.i114, align 4
  %memberidx2.i.i116 = getelementptr inbounds %Array_EnumField_, ptr %51, i64 0, i32 1
  %55 = load ptr, ptr %memberidx2.i.i116, align 8
  %56 = shl i64 %53, 4
  %57 = call ptr @realloc(ptr %55, i64 %56)
  store ptr %57, ptr %memberidx2.i.i116, align 8
  %.pre148 = load i64, ptr %memberidx.i113, align 4
  br label %Array_EnumField____sl__.exit

Array_EnumField____sl__.exit:                     ; preds = %ifend18.Array_EnumField____sl__.exit_crit_edge, %if.entry.i
  %58 = phi ptr [ %.pre149, %ifend18.Array_EnumField____sl__.exit_crit_edge ], [ %57, %if.entry.i ]
  %59 = phi i64 [ %52, %ifend18.Array_EnumField____sl__.exit_crit_edge ], [ %.pre148, %if.entry.i ]
  %60 = add nsw i64 %59, 1
  store i64 %60, ptr %memberidx.i113, align 4
  %ptridx.i117 = getelementptr inbounds ptr, ptr %58, i64 %59
  store ptr %41, ptr %ptridx.i117, align 8
  %61 = add nuw nsw i64 %i.0138, 1
  %62 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %Array_EnumNodeField_, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx9, align 4
  %64 = icmp slt i64 %61, %63
  br i1 %64, label %for.body, label %common.ret

if.entry23:                                       ; preds = %if.entry16
  %65 = call ptr @malloc(i32 37)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %65, ptr noundef nonnull align 8 dereferenceable(37) @102, i64 37, i1 false)
  %66 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %66, align 8
  %memberidx.i.i118 = getelementptr inbounds %string, ptr %66, i64 0, i32 1
  store ptr %65, ptr %memberidx.i.i118, align 8
  %memberidx1.i.i119 = getelementptr inbounds %string, ptr %66, i64 0, i32 2
  store i64 37, ptr %memberidx1.i.i119, align 4
  %memberidx2.i.i120 = getelementptr inbounds %string, ptr %66, i64 0, i32 3
  store i64 37, ptr %memberidx2.i.i120, align 4
  %67 = load ptr, ptr %memberidx15, align 8
  %68 = load ptr, ptr %67, align 8
  %memberidx.i121 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %69 = load ptr, ptr %memberidx.i121, align 8
  %memberidx1.i122 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 6
  %70 = load ptr, ptr %memberidx1.i122, align 8
  %71 = call ptr @malloc(i32 24)
  store i64 5, ptr %71, align 4
  %memberidx1.i.i123 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 2
  store ptr %68, ptr %memberidx1.i.i123, align 8
  %memberidx2.i.i124 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 1
  store ptr %66, ptr %memberidx2.i.i124, align 8
  %memberidx.i.i125 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 2
  %72 = load i64, ptr %memberidx.i.i125, align 4
  %memberidx1.i2.i126 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 3
  %73 = load i64, ptr %memberidx1.i2.i126, align 4
  %.not.i.i127 = icmp slt i64 %72, %73
  br i1 %.not.i.i127, label %if.entry23.TypeChecker_error.exit133_crit_edge, label %if.entry.i.i130

if.entry23.TypeChecker_error.exit133_crit_edge:   ; preds = %if.entry23
  %memberidx4.i.i131.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %.pre145 = load ptr, ptr %memberidx4.i.i131.phi.trans.insert, align 8
  br label %TypeChecker_error.exit133

if.entry.i.i130:                                  ; preds = %if.entry23
  %74 = shl nuw i64 %73, 1
  store i64 %74, ptr %memberidx1.i2.i126, align 4
  %memberidx2.i.i.i129 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %75 = load ptr, ptr %memberidx2.i.i.i129, align 8
  %76 = shl i64 %73, 4
  %77 = call ptr @realloc(ptr %75, i64 %76)
  store ptr %77, ptr %memberidx2.i.i.i129, align 8
  %.pre144 = load i64, ptr %memberidx.i.i125, align 4
  br label %TypeChecker_error.exit133

TypeChecker_error.exit133:                        ; preds = %if.entry23.TypeChecker_error.exit133_crit_edge, %if.entry.i.i130
  %78 = phi ptr [ %.pre145, %if.entry23.TypeChecker_error.exit133_crit_edge ], [ %77, %if.entry.i.i130 ]
  %79 = phi i64 [ %72, %if.entry23.TypeChecker_error.exit133_crit_edge ], [ %.pre144, %if.entry.i.i130 ]
  %80 = add nsw i64 %79, 1
  store i64 %80, ptr %memberidx.i.i125, align 4
  %ptridx.i.i132 = getelementptr inbounds ptr, ptr %78, i64 %79
  store ptr %71, ptr %ptridx.i.i132, align 8
  br label %common.ret

ifend25:                                          ; preds = %if.entry16
  %memberidx29 = getelementptr inbounds %Expression, ptr %45, i64 0, i32 3
  %81 = load ptr, ptr %memberidx29, align 8
  %82 = call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nonnull %enum_variant.0, ptr %81)
  br i1 %82, label %ifend32, label %if.entry30

if.entry30:                                       ; preds = %ifend25
  %83 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %enum_variant.0)
  %84 = load ptr, ptr %83, align 8
  %memberidx33 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %84, i64 0, i32 5
  %85 = load ptr, ptr %memberidx33, align 8
  %86 = call ptr %85(ptr nonnull %83)
  %87 = load ptr, ptr %memberidx41, align 8
  %memberidx35 = getelementptr inbounds %Expression, ptr %87, i64 0, i32 3
  %88 = load ptr, ptr %memberidx35, align 8
  %89 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %88)
  %90 = load ptr, ptr %89, align 8
  %memberidx36 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %90, i64 0, i32 5
  %91 = load ptr, ptr %memberidx36, align 8
  %92 = call ptr %91(ptr nonnull %89)
  %93 = alloca ptr, align 8
  %94 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %93, ptr nonnull @103, ptr %86, ptr %92)
  %95 = load ptr, ptr %93, align 8
  %96 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %96, align 8
  %memberidx.i103 = getelementptr inbounds %string, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i103, align 8
  %memberidx1.i104 = getelementptr inbounds %string, ptr %96, i64 0, i32 2
  store i64 %94, ptr %memberidx1.i104, align 4
  %memberidx2.i105 = getelementptr inbounds %string, ptr %96, i64 0, i32 3
  store i64 %94, ptr %memberidx2.i105, align 4
  tail call void @free(ptr %86)
  tail call void @free(ptr %92)
  %97 = load ptr, ptr %memberidx15, align 8
  %98 = load ptr, ptr %97, align 8
  %memberidx.i85 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %99 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %99, i64 0, i32 6
  %100 = load ptr, ptr %memberidx1.i, align 8
  %101 = call ptr @malloc(i32 24)
  store i64 5, ptr %101, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %101, i64 0, i32 2
  store ptr %98, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %101, i64 0, i32 1
  store ptr %96, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 2
  %102 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 3
  %103 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %102, %103
  br i1 %.not.i.i, label %if.entry30.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry30.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry30
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 1
  %.pre147 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry30
  %104 = shl nuw i64 %103, 1
  store i64 %104, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 1
  %105 = load ptr, ptr %memberidx2.i.i.i, align 8
  %106 = shl i64 %103, 4
  %107 = call ptr @realloc(ptr %105, i64 %106)
  store ptr %107, ptr %memberidx2.i.i.i, align 8
  %.pre146 = load i64, ptr %memberidx.i.i, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry30.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %108 = phi ptr [ %.pre147, %if.entry30.TypeChecker_error.exit_crit_edge ], [ %107, %if.entry.i.i ]
  %109 = phi i64 [ %102, %if.entry30.TypeChecker_error.exit_crit_edge ], [ %.pre146, %if.entry.i.i ]
  %110 = add nsw i64 %109, 1
  store i64 %110, ptr %memberidx.i.i, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %108, i64 %109
  store ptr %101, ptr %ptridx.i.i, align 8
  br label %common.ret

ifend32:                                          ; preds = %ifend25
  %111 = load ptr, ptr %0, align 8
  %112 = load ptr, ptr %memberidx41, align 8
  %113 = call fastcc i64 @evaluate_const_int_expression(ptr %111, ptr %112)
  br label %ifend18
}

define internal fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %ExpressionNode, ptr %2, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  switch i64 %4, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 3, label %if.entry6
    i64 2, label %if.entry10
    i64 6, label %if.entry14
    i64 7, label %if.entry18
    i64 8, label %if.entry22
    i64 9, label %if.entry26
    i64 15, label %if.entry30
    i64 10, label %if.entry34
    i64 11, label %if.entry38
    i64 12, label %if.entry42
    i64 13, label %if.entry46
    i64 14, label %if.entry50
  ]

common.ret:                                       ; preds = %3, %if.entry8.i, %ifend.i113, %if.entry42.i, %ifend35.i, %if.entry50, %if.entry46, %if.entry42, %if.entry38, %if.entry34, %if.entry30, %if.entry26, %if.entry22, %if.entry18, %if.entry14, %TypeChecker_check_string_expression.exit, %if.entry6
  %common.ret.op = phi ptr [ %59, %if.entry6 ], [ %96, %TypeChecker_check_string_expression.exit ], [ %100, %if.entry14 ], [ %101, %if.entry18 ], [ %102, %if.entry22 ], [ %103, %if.entry26 ], [ %104, %if.entry30 ], [ %105, %if.entry34 ], [ %106, %if.entry38 ], [ %107, %if.entry42 ], [ %108, %if.entry46 ], [ %109, %if.entry50 ], [ %7, %ifend35.i ], [ %7, %if.entry42.i ], [ %42, %ifend.i113 ], [ %42, %if.entry8.i ], [ null, %3 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %IntExpressionNode, ptr %2, i64 0, i32 3
  %5 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %IntToken, ptr %5, i64 0, i32 2
  %6 = load i64, ptr %memberidx1.i, align 4
  %7 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %7, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %7, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %7, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %7, i64 0, i32 3
  %8 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %8, align 4
  %memberidx.i5.i.i = getelementptr inbounds %IntType, ptr %8, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i.i, align 1
  store ptr %8, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %IntExpression, ptr %7, i64 0, i32 4
  store i64 %6, ptr %memberidx1.i.i, align 4
  store i1 true, ptr %memberidx1.i.i.i, align 1
  %9 = load i64, ptr %1, align 4
  %10 = add i64 %9, -1
  %11 = icmp ult i64 %10, 7
  br i1 %11, label %ifend.i, label %ifend35.i

ifend.i:                                          ; preds = %if.entry
  store i64 %9, ptr %8, align 4
  %memberidx7.i = getelementptr inbounds %IntType, ptr %1, i64 0, i32 1
  %12 = load i1, ptr %memberidx7.i, align 1
  store i1 %12, ptr %memberidx.i5.i.i, align 1
  %13 = add i64 %6, -8
  %14 = icmp ult i64 %13, -16
  %15 = icmp eq i64 %9, 1
  %16 = and i1 %14, %15
  %17 = select i1 %16, i64 2, i64 %9
  %18 = add i64 %6, -128
  %19 = icmp ult i64 %18, -256
  %20 = icmp eq i64 %17, 2
  %21 = and i1 %19, %20
  %22 = select i1 %21, i64 3, i64 %17
  %.demorgan = and i1 %14, %15
  %.demorgan141 = and i1 %19, %20
  %23 = or i1 %.demorgan, %.demorgan141
  %24 = add i64 %6, -32768
  %25 = icmp ult i64 %24, -65536
  %26 = icmp eq i64 %22, 3
  %27 = and i1 %25, %26
  %spec.select = select i1 %27, i64 4, i64 %22
  %.demorgan142 = and i1 %25, %26
  %28 = or i1 %23, %.demorgan142
  %29 = add i64 %6, -2147483648
  %30 = icmp ult i64 %29, -4294967296
  %31 = icmp eq i64 %spec.select, 4
  %32 = and i1 %30, %31
  %spec.select140 = select i1 %32, i64 5, i64 %spec.select
  %.demorgan143 = and i1 %30, %31
  %33 = or i1 %28, %.demorgan143
  br i1 %33, label %34, label %ifend35.i

34:                                               ; preds = %ifend.i
  store i64 %spec.select140, ptr %8, align 4
  br label %ifend35.i

ifend35.i:                                        ; preds = %34, %ifend.i, %if.entry
  %35 = phi i64 [ 6, %if.entry ], [ %spec.select140, %ifend.i ], [ %spec.select140, %34 ]
  %36 = icmp eq i64 %6, -9223372036854775808
  %37 = add nsw i64 %35, -5
  %38 = icmp ult i64 %37, 2
  %39 = and i1 %36, %38
  br i1 %39, label %if.entry42.i, label %common.ret

if.entry42.i:                                     ; preds = %ifend35.i
  store i64 7, ptr %8, align 4
  br label %common.ret

if.entry2:                                        ; preds = %3
  %memberidx.i103 = getelementptr inbounds %FloatExpressionNode, ptr %2, i64 0, i32 3
  %40 = load ptr, ptr %memberidx.i103, align 8
  %memberidx1.i104 = getelementptr inbounds %FloatToken, ptr %40, i64 0, i32 2
  %41 = load double, ptr %memberidx1.i104, align 8
  %42 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %42, align 4
  %memberidx.i.i.i105 = getelementptr inbounds %Expression, ptr %42, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i.i105, align 4
  %memberidx1.i.i.i106 = getelementptr inbounds %Expression, ptr %42, i64 0, i32 1
  %memberidx.i.i107 = getelementptr inbounds %Expression, ptr %42, i64 0, i32 3
  %43 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %43, align 4
  store ptr %43, ptr %memberidx.i.i107, align 8
  %memberidx1.i.i108 = getelementptr inbounds %FloatExpression, ptr %42, i64 0, i32 4
  store double %41, ptr %memberidx1.i.i108, align 8
  store i1 true, ptr %memberidx1.i.i.i106, align 1
  %44 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %44, ptr noundef nonnull align 8 dereferenceable(6) @208, i64 6, i1 false)
  %45 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %45, align 8
  %memberidx.i.i20.i = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  store ptr %44, ptr %memberidx.i.i20.i, align 8
  %memberidx1.i.i21.i = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i21.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %45, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i.i, align 4
  %46 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %47 = tail call ptr %46(ptr nonnull %45)
  %48 = tail call double @atof(ptr %47)
  tail call void @free(ptr %47)
  %49 = load i64, ptr %1, align 4
  %50 = and i64 %49, -2
  %51 = icmp eq i64 %50, 8
  br i1 %51, label %if.entry.i111, label %if.entry2.ifend.i113_crit_edge

if.entry2.ifend.i113_crit_edge:                   ; preds = %if.entry2
  %.pre139 = load i64, ptr %43, align 4
  br label %ifend.i113

if.entry.i111:                                    ; preds = %if.entry2
  store i64 %49, ptr %43, align 4
  br label %ifend.i113

ifend.i113:                                       ; preds = %if.entry2.ifend.i113_crit_edge, %if.entry.i111
  %52 = phi i64 [ %.pre139, %if.entry2.ifend.i113_crit_edge ], [ %49, %if.entry.i111 ]
  %53 = fneg double %48
  %54 = fcmp olt double %41, %53
  %55 = fcmp ogt double %41, %48
  %56 = or i1 %54, %55
  %57 = icmp eq i64 %52, 8
  %58 = and i1 %56, %57
  br i1 %58, label %if.entry8.i, label %common.ret

if.entry8.i:                                      ; preds = %ifend.i113
  store i64 9, ptr %43, align 4
  br label %common.ret

if.entry6:                                        ; preds = %3
  %59 = tail call ptr @malloc(i32 33)
  %memberidx.i114 = getelementptr inbounds %CharExpressionNode, ptr %2, i64 0, i32 3
  %60 = load ptr, ptr %memberidx.i114, align 8
  %memberidx1.i115 = getelementptr inbounds %CharToken, ptr %60, i64 0, i32 2
  %61 = load i8, ptr %memberidx1.i115, align 1
  %62 = zext i8 %61 to i64
  store i64 8, ptr %59, align 4
  %memberidx.i.i.i116 = getelementptr inbounds %Expression, ptr %59, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i116, align 4
  %memberidx1.i.i.i117 = getelementptr inbounds %Expression, ptr %59, i64 0, i32 1
  %memberidx.i.i118 = getelementptr inbounds %Expression, ptr %59, i64 0, i32 3
  %63 = tail call ptr @malloc(i32 9)
  %memberidx.i5.i.i119 = getelementptr inbounds %IntType, ptr %63, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i.i119, align 1
  store ptr %63, ptr %memberidx.i.i118, align 8
  %memberidx1.i.i120 = getelementptr inbounds %IntExpression, ptr %59, i64 0, i32 4
  store i64 %62, ptr %memberidx1.i.i120, align 4
  store i1 true, ptr %memberidx1.i.i.i117, align 1
  store i64 2, ptr %63, align 4
  br label %common.ret

if.entry10:                                       ; preds = %3
  %64 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Expression_, ptr %64, align 8
  %memberidx.i.i123 = getelementptr inbounds %Array_Expression_, ptr %64, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i123, align 4
  %memberidx1.i.i124 = getelementptr inbounds %Array_Expression_, ptr %64, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i124, align 4
  %memberidx2.i.i125 = getelementptr inbounds %Array_Expression_, ptr %64, i64 0, i32 1
  %65 = tail call ptr @malloc(i32 64)
  store ptr %65, ptr %memberidx2.i.i125, align 8
  store i64 0, ptr %memberidx.i.i123, align 4
  %memberidx2.i127 = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 4
  %66 = load ptr, ptr %memberidx2.i127, align 8
  %67 = tail call ptr @malloc(i32 25)
  %memberidx.i19.i = getelementptr inbounds %Array_ExpressionNode_, ptr %66, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i19.i, align 8
  %memberidx1.i20.i = getelementptr inbounds %Array_ExpressionNode_, ptr %66, i64 0, i32 2
  %69 = load i64, ptr %memberidx1.i20.i, align 4
  store i1 false, ptr %67, align 1
  %memberidx1.i.i.i128 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %67, i64 0, i32 1
  %memberidx2.i.i.i129 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %67, i64 0, i32 3
  store ptr %68, ptr %memberidx2.i.i.i129, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %67, i64 0, i32 2
  store i64 %69, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i128, align 4
  %70 = icmp slt i64 %69, 1
  br i1 %70, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.entry10, %Array_Expression____sl__.exit.i
  %71 = phi i64 [ %83, %Array_Expression____sl__.exit.i ], [ 1, %if.entry10 ]
  %arg.0.i137.in = phi ptr [ %ptridx.i29.i, %Array_Expression____sl__.exit.i ], [ %68, %if.entry10 ]
  %arg.0.i137 = load ptr, ptr %arg.0.i137.in, align 8
  %72 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %72, align 4
  %73 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %72, ptr %arg.0.i137)
  %74 = load i64, ptr %memberidx.i.i123, align 4
  %75 = load i64, ptr %memberidx1.i.i124, align 4
  %.not.i.i = icmp slt i64 %74, %75
  br i1 %.not.i.i, label %for.body.i.Array_Expression____sl__.exit.i_crit_edge, label %if.entry.i.i

for.body.i.Array_Expression____sl__.exit.i_crit_edge: ; preds = %for.body.i
  %.pre138 = load ptr, ptr %memberidx2.i.i125, align 8
  br label %Array_Expression____sl__.exit.i

if.entry.i.i:                                     ; preds = %for.body.i
  %76 = shl nuw i64 %75, 1
  store i64 %76, ptr %memberidx1.i.i124, align 4
  %77 = load ptr, ptr %memberidx2.i.i125, align 8
  %78 = shl i64 %75, 4
  %79 = tail call ptr @realloc(ptr %77, i64 %78)
  store ptr %79, ptr %memberidx2.i.i125, align 8
  %.pre = load i64, ptr %memberidx.i.i123, align 4
  br label %Array_Expression____sl__.exit.i

Array_Expression____sl__.exit.i:                  ; preds = %for.body.i.Array_Expression____sl__.exit.i_crit_edge, %if.entry.i.i
  %80 = phi ptr [ %79, %if.entry.i.i ], [ %.pre138, %for.body.i.Array_Expression____sl__.exit.i_crit_edge ]
  %81 = phi i64 [ %.pre, %if.entry.i.i ], [ %74, %for.body.i.Array_Expression____sl__.exit.i_crit_edge ]
  %82 = add nsw i64 %81, 1
  store i64 %82, ptr %memberidx.i.i123, align 4
  %ptridx.i26.i = getelementptr inbounds ptr, ptr %80, i64 %81
  store ptr %73, ptr %ptridx.i26.i, align 8
  %83 = add nuw nsw i64 %71, 1
  store i64 %83, ptr %memberidx1.i.i.i128, align 4
  %ptridx.i29.i = getelementptr inbounds ptr, ptr %68, i64 %71
  %.not = icmp slt i64 %71, %69
  br i1 %.not, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %Array_Expression____sl__.exit.i, %if.entry10
  tail call void @free(ptr nonnull %67)
  %84 = load i64, ptr %1, align 4
  %85 = icmp eq i64 %84, 13
  br i1 %85, label %if.entry.i32.i, label %if.entry.i131

if.entry.i32.i:                                   ; preds = %for.end.i
  %memberidx1.i31.i = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %86 = load ptr, ptr %memberidx1.i31.i, align 8
  %87 = load i64, ptr %86, align 4
  %88 = add i64 %87, -1
  %89 = icmp ult i64 %88, 7
  br i1 %89, label %if.entry2.i.i, label %if.entry.i131

if.entry2.i.i:                                    ; preds = %if.entry.i32.i
  %90 = icmp ne i64 %87, 2
  %memberidx6.i.i = getelementptr inbounds %IntType, ptr %86, i64 0, i32 1
  %91 = load i1, ptr %memberidx6.i.i, align 1
  %92 = or i1 %90, %91
  br i1 %92, label %if.entry.i131, label %TypeChecker_check_string_expression.exit

if.entry.i131:                                    ; preds = %for.end.i, %if.entry.i32.i, %if.entry2.i.i
  %93 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %93, ptr noundef nonnull align 8 dereferenceable(6) @177, i64 6, i1 false)
  %94 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %94, align 8
  %memberidx.i.i33.i = getelementptr inbounds %string, ptr %94, i64 0, i32 1
  store ptr %93, ptr %memberidx.i.i33.i, align 8
  %memberidx1.i.i34.i = getelementptr inbounds %string, ptr %94, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i34.i, align 4
  %memberidx2.i.i35.i = getelementptr inbounds %string, ptr %94, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i35.i, align 4
  %95 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %94)
  br label %TypeChecker_check_string_expression.exit

TypeChecker_check_string_expression.exit:         ; preds = %if.entry2.i.i, %if.entry.i131
  %expected_type.0.i = phi ptr [ %95, %if.entry.i131 ], [ %1, %if.entry2.i.i ]
  %96 = tail call ptr @malloc(i32 49)
  %memberidx4.i = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 3
  %97 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %StrToken, ptr %97, i64 0, i32 2
  %98 = load ptr, ptr %memberidx5.i, align 8
  %memberidx7.i132 = getelementptr inbounds %StrToken, ptr %97, i64 0, i32 3
  %99 = load ptr, ptr %memberidx7.i132, align 8
  store i64 8, ptr %96, align 4
  %memberidx.i.i36.i = getelementptr inbounds %Expression, ptr %96, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i36.i, align 4
  %memberidx1.i.i37.i = getelementptr inbounds %Expression, ptr %96, i64 0, i32 1
  %memberidx.i38.i = getelementptr inbounds %StringExpression, ptr %96, i64 0, i32 6
  store ptr %64, ptr %memberidx.i38.i, align 8
  %memberidx1.i39.i = getelementptr inbounds %StringExpression, ptr %96, i64 0, i32 5
  store ptr %99, ptr %memberidx1.i39.i, align 8
  %memberidx2.i40.i = getelementptr inbounds %Expression, ptr %96, i64 0, i32 3
  %memberidx3.i.i = getelementptr inbounds %StringExpression, ptr %96, i64 0, i32 4
  store ptr %98, ptr %memberidx3.i.i, align 8
  store i1 true, ptr %memberidx1.i.i37.i, align 1
  store ptr %expected_type.0.i, ptr %memberidx2.i40.i, align 8
  br label %common.ret

if.entry14:                                       ; preds = %3
  %100 = tail call fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry18:                                       ; preds = %3
  %101 = tail call fastcc ptr @TypeChecker_check_var_access_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry22:                                       ; preds = %3
  %102 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry26:                                       ; preds = %3
  %103 = tail call fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry30:                                       ; preds = %3
  %104 = tail call fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry34:                                       ; preds = %3
  %105 = tail call fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry38:                                       ; preds = %3
  %106 = tail call fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry42:                                       ; preds = %3
  %107 = tail call fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry46:                                       ; preds = %3
  %108 = tail call fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry50:                                       ; preds = %3
  %109 = tail call fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nonnull %2)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_var_access_expr(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %4, i64 0, i32 2
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  %8 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %8, 4
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %3
  %memberidx2.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  %9 = load ptr, ptr %memberidx2.i, align 8
  %10 = tail call i64 @memcmp(ptr %9, ptr nonnull %6, i64 4)
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend14, %TypeChecker_error.exit, %if.entry5, %if.entry2, %if.entry
  %common.ret.op = phi ptr [ %12, %if.entry ], [ %20, %if.entry2 ], [ %28, %if.entry5 ], [ null, %TypeChecker_error.exit ], [ %62, %ifend14 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %ifend.i
  %12 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %12, align 4
  %memberidx.i.i60 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i60, align 4
  %memberidx1.i.i61 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %13, align 4
  %memberidx.i62 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 3
  store ptr %13, ptr %memberidx.i62, align 8
  %memberidx1.i63 = getelementptr inbounds %BooleanExpression, ptr %12, i64 0, i32 4
  store i1 true, ptr %memberidx1.i63, align 1
  store i1 true, ptr %memberidx1.i.i61, align 1
  br label %common.ret

ifend:                                            ; preds = %3, %ifend.i
  %14 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %14, ptr noundef nonnull align 8 dereferenceable(5) @90, i64 5, i1 false)
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i.i65 = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i.i65, align 8
  %memberidx1.i.i66 = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i66, align 4
  %memberidx2.i.i67 = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i67, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i70 = icmp eq i64 %16, 5
  br i1 %.not.i70, label %ifend.i74, label %ifend4

ifend.i74:                                        ; preds = %ifend
  %memberidx2.i72 = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i72, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 5)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend.i74
  %20 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %20, align 4
  %memberidx.i.i76 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i76, align 4
  %memberidx1.i.i77 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 1
  %21 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %21, align 4
  %memberidx.i78 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  store ptr %21, ptr %memberidx.i78, align 8
  %memberidx1.i79 = getelementptr inbounds %BooleanExpression, ptr %20, i64 0, i32 4
  store i1 false, ptr %memberidx1.i79, align 1
  store i1 true, ptr %memberidx1.i.i77, align 1
  br label %common.ret

ifend4:                                           ; preds = %ifend, %ifend.i74
  %22 = tail call ptr @malloc(i32 4)
  store i32 1819047278, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %23, align 8
  %memberidx.i.i81 = getelementptr inbounds %string, ptr %23, i64 0, i32 1
  store ptr %22, ptr %memberidx.i.i81, align 8
  %memberidx1.i.i82 = getelementptr inbounds %string, ptr %23, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i82, align 4
  %memberidx2.i.i83 = getelementptr inbounds %string, ptr %23, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i83, align 4
  %24 = load i64, ptr %memberidx.i, align 4
  %.not.i86 = icmp eq i64 %24, 4
  br i1 %.not.i86, label %ifend.i90, label %ifend7

ifend.i90:                                        ; preds = %ifend4
  %memberidx2.i88 = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i88, align 8
  %26 = tail call i64 @memcmp(ptr %25, ptr nonnull %22, i64 4)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend.i90
  %28 = tail call ptr @malloc(i32 25)
  store i64 8, ptr %28, align 4
  %memberidx.i.i92 = getelementptr inbounds %Expression, ptr %28, i64 0, i32 2
  store i64 5, ptr %memberidx.i.i92, align 4
  %memberidx1.i.i93 = getelementptr inbounds %Expression, ptr %28, i64 0, i32 1
  %memberidx.i94 = getelementptr inbounds %Expression, ptr %28, i64 0, i32 3
  store ptr %1, ptr %memberidx.i94, align 8
  store i1 true, ptr %memberidx1.i.i93, align 1
  br label %common.ret

ifend7:                                           ; preds = %ifend4, %ifend.i90
  %29 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr nonnull %5)
  %30 = tail call ptr @malloc(i32 8)
  store i64 20, ptr %30, align 4
  %.not = icmp eq ptr %29, null
  br i1 %.not, label %ifend10, label %if.entry8

if.entry8:                                        ; preds = %ifend7
  %31 = load i64, ptr %29, align 4
  switch i64 %31, label %else25 [
    i64 0, label %if.entry12
    i64 1, label %if.entry18
    i64 2, label %if.entry24
  ]

ifend10:                                          ; preds = %ifend7
  %32 = load ptr, ptr %5, align 8
  %memberidx38 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %32, i64 0, i32 5
  %33 = load ptr, ptr %memberidx38, align 8
  %34 = tail call ptr %33(ptr nonnull %5)
  %35 = alloca ptr, align 8
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %35, ptr nonnull @160, ptr %34)
  %37 = load ptr, ptr %35, align 8
  %38 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %38, align 8
  %memberidx.i99 = getelementptr inbounds %string, ptr %38, i64 0, i32 1
  store ptr %37, ptr %memberidx.i99, align 8
  %memberidx1.i100 = getelementptr inbounds %string, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %string, ptr %38, i64 0, i32 3
  store i64 %36, ptr %memberidx2.i101, align 4
  tail call void @free(ptr %34)
  %39 = load ptr, ptr %2, align 8
  %memberidx.i102 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %40 = load ptr, ptr %memberidx.i102, align 8
  %memberidx1.i103 = getelementptr inbounds %Compiler, ptr %40, i64 0, i32 6
  %41 = load ptr, ptr %memberidx1.i103, align 8
  %42 = call ptr @malloc(i32 24)
  store i64 1, ptr %42, align 4
  %memberidx1.i.i104 = getelementptr inbounds %FloError, ptr %42, i64 0, i32 2
  store ptr %39, ptr %memberidx1.i.i104, align 8
  %memberidx2.i.i105 = getelementptr inbounds %FloError, ptr %42, i64 0, i32 1
  store ptr %38, ptr %memberidx2.i.i105, align 8
  %memberidx.i.i106 = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 2
  %43 = load i64, ptr %memberidx.i.i106, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 3
  %44 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %43, %44
  br i1 %.not.i.i, label %ifend10.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

ifend10.TypeChecker_error.exit_crit_edge:         ; preds = %ifend10
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %.pre139 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %ifend10
  %45 = shl nuw i64 %44, 1
  store i64 %45, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %41, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i.i, align 8
  %47 = shl i64 %44, 4
  %48 = call ptr @realloc(ptr %46, i64 %47)
  store ptr %48, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i106, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %ifend10.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %49 = phi ptr [ %.pre139, %ifend10.TypeChecker_error.exit_crit_edge ], [ %48, %if.entry.i.i ]
  %50 = phi i64 [ %43, %ifend10.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %51 = add nsw i64 %50, 1
  store i64 %51, ptr %memberidx.i.i106, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %49, i64 %50
  store ptr %42, ptr %ptridx.i.i, align 8
  br label %common.ret

if.entry12:                                       ; preds = %if.entry8
  %52 = load ptr, ptr %0, align 8
  %memberidx.i108 = getelementptr inbounds %Program, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 1
  %54 = load i64, ptr %memberidx1.i109, align 4
  %memberidx.i.i110 = getelementptr inbounds %Array_Module_, ptr %53, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i.i110, align 8
  %ptridx.i.i111 = getelementptr inbounds ptr, ptr %55, i64 %54
  %56 = load ptr, ptr %ptridx.i.i111, align 8
  %memberidx2.i112 = getelementptr inbounds %Module, ptr %56, i64 0, i32 4
  %57 = load ptr, ptr %memberidx2.i112, align 8
  %memberidx3.i113 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 2
  %58 = load i64, ptr %memberidx3.i113, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Function_, ptr %57, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %59, i64 %58
  %60 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx16 = getelementptr inbounds %Function, ptr %60, i64 0, i32 4
  %61 = load ptr, ptr %memberidx16, align 8
  br label %ifend14

ifend14:                                          ; preds = %if.entry35, %else32, %if.entry31, %if.entry24, %if.entry18, %if.entry12
  %var_ty.0 = phi ptr [ %61, %if.entry12 ], [ %74, %if.entry18 ], [ %84, %if.entry24 ], [ %87, %if.entry31 ], [ %89, %if.entry35 ], [ %30, %else32 ]
  %62 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %62, align 4
  %memberidx.i.i114 = getelementptr inbounds %Expression, ptr %62, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i114, align 4
  %memberidx1.i.i115 = getelementptr inbounds %Expression, ptr %62, i64 0, i32 1
  %memberidx.i116 = getelementptr inbounds %VarAccessExpression, ptr %62, i64 0, i32 4
  store ptr %29, ptr %memberidx.i116, align 8
  %memberidx1.i117 = getelementptr inbounds %Expression, ptr %62, i64 0, i32 3
  store ptr %var_ty.0, ptr %memberidx1.i117, align 8
  %63 = load i64, ptr %29, align 4
  %64 = icmp eq i64 %63, 2
  store i1 %64, ptr %memberidx1.i.i115, align 1
  br label %common.ret

if.entry18:                                       ; preds = %if.entry8
  %65 = load ptr, ptr %0, align 8
  %memberidx.i127 = getelementptr inbounds %Program, ptr %65, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i127, align 8
  %memberidx1.i128 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 1
  %67 = load i64, ptr %memberidx1.i128, align 4
  %memberidx.i.i129 = getelementptr inbounds %Array_Module_, ptr %66, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i.i129, align 8
  %ptridx.i.i130 = getelementptr inbounds ptr, ptr %68, i64 %67
  %69 = load ptr, ptr %ptridx.i.i130, align 8
  %memberidx2.i131 = getelementptr inbounds %Module, ptr %69, i64 0, i32 1
  %70 = load ptr, ptr %memberidx2.i131, align 8
  %memberidx3.i132 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 2
  %71 = load i64, ptr %memberidx3.i132, align 4
  %memberidx.i5.i133 = getelementptr inbounds %Array_Var_, ptr %70, i64 0, i32 1
  %72 = load ptr, ptr %memberidx.i5.i133, align 8
  %ptridx.i6.i134 = getelementptr inbounds ptr, ptr %72, i64 %71
  %73 = load ptr, ptr %ptridx.i6.i134, align 8
  %74 = load ptr, ptr %73, align 8
  br label %ifend14

if.entry24:                                       ; preds = %if.entry8
  %75 = load ptr, ptr %0, align 8
  %memberidx.i119 = getelementptr inbounds %Program, ptr %75, i64 0, i32 1
  %76 = load ptr, ptr %memberidx.i119, align 8
  %memberidx1.i120 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 1
  %77 = load i64, ptr %memberidx1.i120, align 4
  %memberidx.i.i121 = getelementptr inbounds %Array_Module_, ptr %76, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i.i121, align 8
  %ptridx.i.i122 = getelementptr inbounds ptr, ptr %78, i64 %77
  %79 = load ptr, ptr %ptridx.i.i122, align 8
  %memberidx2.i123 = getelementptr inbounds %Module, ptr %79, i64 0, i32 2
  %80 = load ptr, ptr %memberidx2.i123, align 8
  %memberidx3.i124 = getelementptr inbounds %VarId, ptr %29, i64 0, i32 2
  %81 = load i64, ptr %memberidx3.i124, align 4
  %memberidx.i5.i125 = getelementptr inbounds %Array_Const_, ptr %80, i64 0, i32 1
  %82 = load ptr, ptr %memberidx.i5.i125, align 8
  %ptridx.i6.i126 = getelementptr inbounds ptr, ptr %82, i64 %81
  %83 = load ptr, ptr %ptridx.i6.i126, align 8
  %84 = load ptr, ptr %83, align 8
  br label %ifend14

else25:                                           ; preds = %if.entry8
  %85 = add i64 %31, -3
  %86 = icmp ult i64 %85, 2
  br i1 %86, label %if.entry31, label %else32

if.entry31:                                       ; preds = %else25
  %87 = tail call ptr @malloc(i32 8)
  store i64 16, ptr %87, align 4
  br label %ifend14

else32:                                           ; preds = %else25
  %88 = icmp eq i64 %31, 5
  br i1 %88, label %if.entry35, label %ifend14

if.entry35:                                       ; preds = %else32
  %89 = tail call ptr @malloc(i32 8)
  store i64 17, ptr %89, align 4
  br label %ifend14
}

define internal fastcc ptr @TypeChecker_check_intrinsic_call(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  %5 = add i64 %4, -3
  %6 = icmp ult i64 %5, 2
  %7 = icmp eq i64 %4, 7
  %8 = or i1 %7, %6
  %9 = alloca %IntType, align 8
  store i64 6, ptr %9, align 8
  %memberidx.i = getelementptr inbounds %IntType, ptr %9, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 8
  %10 = alloca %Type, align 8
  store i64 20, ptr %10, align 8
  %memberidx2 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 2
  %11 = load i64, ptr %memberidx2, align 4
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx3 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %13 = icmp eq i64 %4, 6
  %14 = icmp eq i64 %4, 5
  %memberidx.i125 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  %memberidx.i126 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Expression____sl__.exit
  %i.0198 = phi i64 [ 0, %for.body.lr.ph ], [ %52, %Array_Expression____sl__.exit ]
  %15 = icmp eq i64 %i.0198, 1
  %16 = and i1 %8, %15
  br i1 %16, label %end, label %false_block

for.end:                                          ; preds = %Array_Expression____sl__.exit, %for.entry
  %memberidx27 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %17 = load ptr, ptr %memberidx27, align 8
  %memberidx.i123 = getelementptr inbounds %Array_Expression_, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i123, align 8
  %19 = load ptr, ptr %18, align 8
  %memberidx28 = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  %20 = load ptr, ptr %memberidx28, align 8
  %21 = load i64, ptr %20, align 4
  %22 = icmp eq i64 %21, 13
  br i1 %22, label %ifend31, label %if.entry29

false_block:                                      ; preds = %for.body
  %23 = load ptr, ptr %memberidx3, align 8
  %memberidx.i124 = getelementptr inbounds %Array_Expression_, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i124, align 8
  %25 = load ptr, ptr %24, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx4, align 8
  br label %end

end:                                              ; preds = %for.body, %false_block
  %ternary = phi ptr [ %26, %false_block ], [ %10, %for.body ]
  %27 = and i1 %6, %15
  %28 = icmp eq i64 %i.0198, 0
  %29 = and i1 %13, %28
  %30 = select i1 %14, i1 true, i1 %29
  %31 = select i1 %30, i1 true, i1 %27
  %expected_type.2 = select i1 %31, ptr %9, ptr %ternary
  %32 = load ptr, ptr %memberidx.i125, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %32, i64 %i.0198
  %33 = load ptr, ptr %ptridx.i, align 8
  %34 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %expected_type.2, ptr %33)
  %35 = load ptr, ptr %memberidx.i126, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %35, i64 0, i32 6
  %36 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 2
  %37 = load i64, ptr %memberidx2.i, align 4
  %38 = icmp sgt i64 %37, 0
  br i1 %38, label %common.ret, label %ifend13

common.ret:                                       ; preds = %end, %ifend31, %ifend44, %ifend58, %if.entry65, %TypeChecker_error.exit188, %TypeChecker_error.exit171, %TypeChecker_error.exit155, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit155 ], [ null, %TypeChecker_error.exit171 ], [ null, %TypeChecker_error.exit188 ], [ %1, %if.entry65 ], [ %1, %ifend58 ], [ %1, %ifend44 ], [ %1, %ifend31 ], [ null, %end ]
  ret ptr %common.ret.op

ifend13:                                          ; preds = %end
  %39 = load i64, ptr %expected_type.2, align 4
  %.not122 = icmp eq i64 %39, 20
  br i1 %.not122, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %memberidx18 = getelementptr inbounds %Expression, ptr %34, i64 0, i32 3
  %40 = load ptr, ptr %memberidx18, align 8
  %41 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %expected_type.2, ptr %40)
  br i1 %41, label %ifend17, label %if.entry19

ifend17:                                          ; preds = %if.entry15, %ifend13
  %42 = load ptr, ptr %memberidx3, align 8
  %memberidx.i127 = getelementptr inbounds %Array_Expression_, ptr %42, i64 0, i32 2
  %43 = load i64, ptr %memberidx.i127, align 4
  %memberidx1.i128 = getelementptr inbounds %Array_Expression_, ptr %42, i64 0, i32 3
  %44 = load i64, ptr %memberidx1.i128, align 4
  %.not.i = icmp slt i64 %43, %44
  br i1 %.not.i, label %ifend17.Array_Expression____sl__.exit_crit_edge, label %if.entry.i

ifend17.Array_Expression____sl__.exit_crit_edge:  ; preds = %ifend17
  %memberidx4.i.phi.trans.insert = getelementptr inbounds %Array_Expression_, ptr %42, i64 0, i32 1
  %.pre205 = load ptr, ptr %memberidx4.i.phi.trans.insert, align 8
  br label %Array_Expression____sl__.exit

if.entry.i:                                       ; preds = %ifend17
  %45 = shl nuw i64 %44, 1
  store i64 %45, ptr %memberidx1.i128, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_Expression_, ptr %42, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i, align 8
  %47 = shl i64 %44, 4
  %48 = call ptr @realloc(ptr %46, i64 %47)
  store ptr %48, ptr %memberidx2.i.i, align 8
  %.pre204 = load i64, ptr %memberidx.i127, align 4
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend17.Array_Expression____sl__.exit_crit_edge, %if.entry.i
  %49 = phi ptr [ %.pre205, %ifend17.Array_Expression____sl__.exit_crit_edge ], [ %48, %if.entry.i ]
  %50 = phi i64 [ %43, %ifend17.Array_Expression____sl__.exit_crit_edge ], [ %.pre204, %if.entry.i ]
  %51 = add nsw i64 %50, 1
  store i64 %51, ptr %memberidx.i127, align 4
  %ptridx.i129 = getelementptr inbounds ptr, ptr %49, i64 %50
  store ptr %34, ptr %ptridx.i129, align 8
  %52 = add nuw nsw i64 %i.0198, 1
  %53 = load i64, ptr %memberidx2, align 4
  %54 = icmp slt i64 %52, %53
  br i1 %54, label %for.body, label %for.end

if.entry19:                                       ; preds = %if.entry15
  %55 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %expected_type.2)
  %56 = load ptr, ptr %55, align 8
  %memberidx22 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %56, i64 0, i32 5
  %57 = load ptr, ptr %memberidx22, align 8
  %58 = call ptr %57(ptr nonnull %55)
  %59 = load ptr, ptr %memberidx18, align 8
  %60 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %59)
  %61 = load ptr, ptr %60, align 8
  %memberidx24 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %61, i64 0, i32 5
  %62 = load ptr, ptr %memberidx24, align 8
  %63 = call ptr %62(ptr nonnull %60)
  %64 = alloca ptr, align 8
  %65 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %64, ptr nonnull @204, i64 %i.0198, ptr %58, ptr %63)
  %66 = load ptr, ptr %64, align 8
  %67 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %67, align 8
  %memberidx.i130 = getelementptr inbounds %string, ptr %67, i64 0, i32 1
  store ptr %66, ptr %memberidx.i130, align 8
  %memberidx1.i131 = getelementptr inbounds %string, ptr %67, i64 0, i32 2
  store i64 %65, ptr %memberidx1.i131, align 4
  %memberidx2.i132 = getelementptr inbounds %string, ptr %67, i64 0, i32 3
  store i64 %65, ptr %memberidx2.i132, align 4
  tail call void @free(ptr %58)
  tail call void @free(ptr %63)
  %68 = load ptr, ptr %memberidx.i125, align 8
  %ptridx.i134 = getelementptr inbounds ptr, ptr %68, i64 %i.0198
  %69 = load ptr, ptr %ptridx.i134, align 8
  %70 = load ptr, ptr %69, align 8
  %71 = load ptr, ptr %memberidx.i126, align 8
  %memberidx1.i136 = getelementptr inbounds %Compiler, ptr %71, i64 0, i32 6
  %72 = load ptr, ptr %memberidx1.i136, align 8
  %73 = call ptr @malloc(i32 24)
  store i64 5, ptr %73, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %73, i64 0, i32 2
  store ptr %70, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i137 = getelementptr inbounds %FloError, ptr %73, i64 0, i32 1
  store ptr %67, ptr %memberidx2.i.i137, align 8
  %memberidx.i.i138 = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i138, align 4
  %memberidx1.i2.i = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 3
  %75 = load i64, ptr %memberidx1.i2.i, align 4
  %.not.i.i = icmp slt i64 %74, %75
  br i1 %.not.i.i, label %if.entry19.TypeChecker_error.exit_crit_edge, label %if.entry.i.i

if.entry19.TypeChecker_error.exit_crit_edge:      ; preds = %if.entry19
  %memberidx4.i.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %.pre203 = load ptr, ptr %memberidx4.i.i.phi.trans.insert, align 8
  br label %TypeChecker_error.exit

if.entry.i.i:                                     ; preds = %if.entry19
  %76 = shl nuw i64 %75, 1
  store i64 %76, ptr %memberidx1.i2.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %Array_FloError_, ptr %72, i64 0, i32 1
  %77 = load ptr, ptr %memberidx2.i.i.i, align 8
  %78 = shl i64 %75, 4
  %79 = call ptr @realloc(ptr %77, i64 %78)
  store ptr %79, ptr %memberidx2.i.i.i, align 8
  %.pre = load i64, ptr %memberidx.i.i138, align 4
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry19.TypeChecker_error.exit_crit_edge, %if.entry.i.i
  %80 = phi ptr [ %.pre203, %if.entry19.TypeChecker_error.exit_crit_edge ], [ %79, %if.entry.i.i ]
  %81 = phi i64 [ %74, %if.entry19.TypeChecker_error.exit_crit_edge ], [ %.pre, %if.entry.i.i ]
  %82 = add nsw i64 %81, 1
  store i64 %82, ptr %memberidx.i.i138, align 4
  %ptridx.i.i = getelementptr inbounds ptr, ptr %80, i64 %81
  store ptr %73, ptr %ptridx.i.i, align 8
  br label %common.ret

if.entry29:                                       ; preds = %for.end
  %83 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %20)
  %84 = load ptr, ptr %83, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %84, i64 0, i32 5
  %85 = load ptr, ptr %memberidx34, align 8
  %86 = call ptr %85(ptr nonnull %83)
  %87 = alloca ptr, align 8
  %88 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %87, ptr nonnull @205, ptr %86)
  %89 = load ptr, ptr %87, align 8
  %90 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %90, align 8
  %memberidx.i140 = getelementptr inbounds %string, ptr %90, i64 0, i32 1
  store ptr %89, ptr %memberidx.i140, align 8
  %memberidx1.i141 = getelementptr inbounds %string, ptr %90, i64 0, i32 2
  store i64 %88, ptr %memberidx1.i141, align 4
  %memberidx2.i142 = getelementptr inbounds %string, ptr %90, i64 0, i32 3
  store i64 %88, ptr %memberidx2.i142, align 4
  tail call void @free(ptr %86)
  %memberidx35 = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 3
  %91 = load ptr, ptr %memberidx35, align 8
  %92 = load ptr, ptr %91, align 8
  %memberidx.i143 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %93 = load ptr, ptr %memberidx.i143, align 8
  %memberidx1.i144 = getelementptr inbounds %Compiler, ptr %93, i64 0, i32 6
  %94 = load ptr, ptr %memberidx1.i144, align 8
  %95 = call ptr @malloc(i32 24)
  store i64 5, ptr %95, align 4
  %memberidx1.i.i145 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 2
  store ptr %92, ptr %memberidx1.i.i145, align 8
  %memberidx2.i.i146 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 1
  store ptr %90, ptr %memberidx2.i.i146, align 8
  %memberidx.i.i147 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 2
  %96 = load i64, ptr %memberidx.i.i147, align 4
  %memberidx1.i2.i148 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 3
  %97 = load i64, ptr %memberidx1.i2.i148, align 4
  %.not.i.i149 = icmp slt i64 %96, %97
  br i1 %.not.i.i149, label %if.entry29.TypeChecker_error.exit155_crit_edge, label %if.entry.i.i152

if.entry29.TypeChecker_error.exit155_crit_edge:   ; preds = %if.entry29
  %memberidx4.i.i153.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %.pre207 = load ptr, ptr %memberidx4.i.i153.phi.trans.insert, align 8
  br label %TypeChecker_error.exit155

if.entry.i.i152:                                  ; preds = %if.entry29
  %98 = shl nuw i64 %97, 1
  store i64 %98, ptr %memberidx1.i2.i148, align 4
  %memberidx2.i.i.i151 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %99 = load ptr, ptr %memberidx2.i.i.i151, align 8
  %100 = shl i64 %97, 4
  %101 = call ptr @realloc(ptr %99, i64 %100)
  store ptr %101, ptr %memberidx2.i.i.i151, align 8
  %.pre206 = load i64, ptr %memberidx.i.i147, align 4
  br label %TypeChecker_error.exit155

TypeChecker_error.exit155:                        ; preds = %if.entry29.TypeChecker_error.exit155_crit_edge, %if.entry.i.i152
  %102 = phi ptr [ %.pre207, %if.entry29.TypeChecker_error.exit155_crit_edge ], [ %101, %if.entry.i.i152 ]
  %103 = phi i64 [ %96, %if.entry29.TypeChecker_error.exit155_crit_edge ], [ %.pre206, %if.entry.i.i152 ]
  %104 = add nsw i64 %103, 1
  store i64 %104, ptr %memberidx.i.i147, align 4
  %ptridx.i.i154 = getelementptr inbounds ptr, ptr %102, i64 %103
  store ptr %95, ptr %ptridx.i.i154, align 8
  br label %common.ret

ifend31:                                          ; preds = %for.end
  switch i64 %4, label %common.ret [
    i64 6, label %if.entry37
    i64 7, label %if.entry51
    i64 5, label %if.entry51
    i64 4, label %if.entry51
    i64 3, label %if.entry51
  ]

if.entry37:                                       ; preds = %ifend31
  %memberidx41 = getelementptr inbounds %Array_Expression_, ptr %17, i64 0, i32 2
  %105 = load i64, ptr %memberidx41, align 4
  %.not121 = icmp eq i64 %105, 2
  br i1 %.not121, label %ifend44, label %if.entry42

if.entry42:                                       ; preds = %if.entry37
  %106 = alloca ptr, align 8
  %107 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %106, ptr nonnull @206, i64 %105)
  %108 = load ptr, ptr %106, align 8
  %109 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %109, align 8
  %memberidx.i156 = getelementptr inbounds %string, ptr %109, i64 0, i32 1
  store ptr %108, ptr %memberidx.i156, align 8
  %memberidx1.i157 = getelementptr inbounds %string, ptr %109, i64 0, i32 2
  store i64 %107, ptr %memberidx1.i157, align 4
  %memberidx2.i158 = getelementptr inbounds %string, ptr %109, i64 0, i32 3
  store i64 %107, ptr %memberidx2.i158, align 4
  %110 = load ptr, ptr %2, align 8
  %memberidx.i159 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %111 = load ptr, ptr %memberidx.i159, align 8
  %memberidx1.i160 = getelementptr inbounds %Compiler, ptr %111, i64 0, i32 6
  %112 = load ptr, ptr %memberidx1.i160, align 8
  %113 = call ptr @malloc(i32 24)
  store i64 4, ptr %113, align 4
  %memberidx1.i.i161 = getelementptr inbounds %FloError, ptr %113, i64 0, i32 2
  store ptr %110, ptr %memberidx1.i.i161, align 8
  %memberidx2.i.i162 = getelementptr inbounds %FloError, ptr %113, i64 0, i32 1
  store ptr %109, ptr %memberidx2.i.i162, align 8
  %memberidx.i.i163 = getelementptr inbounds %Array_FloError_, ptr %112, i64 0, i32 2
  %114 = load i64, ptr %memberidx.i.i163, align 4
  %memberidx1.i2.i164 = getelementptr inbounds %Array_FloError_, ptr %112, i64 0, i32 3
  %115 = load i64, ptr %memberidx1.i2.i164, align 4
  %.not.i.i165 = icmp slt i64 %114, %115
  br i1 %.not.i.i165, label %if.entry42.TypeChecker_error.exit171_crit_edge, label %if.entry.i.i168

if.entry42.TypeChecker_error.exit171_crit_edge:   ; preds = %if.entry42
  %memberidx4.i.i169.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %112, i64 0, i32 1
  %.pre211 = load ptr, ptr %memberidx4.i.i169.phi.trans.insert, align 8
  br label %TypeChecker_error.exit171

if.entry.i.i168:                                  ; preds = %if.entry42
  %116 = shl nuw i64 %115, 1
  store i64 %116, ptr %memberidx1.i2.i164, align 4
  %memberidx2.i.i.i167 = getelementptr inbounds %Array_FloError_, ptr %112, i64 0, i32 1
  %117 = load ptr, ptr %memberidx2.i.i.i167, align 8
  %118 = shl i64 %115, 4
  %119 = call ptr @realloc(ptr %117, i64 %118)
  store ptr %119, ptr %memberidx2.i.i.i167, align 8
  %.pre210 = load i64, ptr %memberidx.i.i163, align 4
  br label %TypeChecker_error.exit171

TypeChecker_error.exit171:                        ; preds = %if.entry42.TypeChecker_error.exit171_crit_edge, %if.entry.i.i168
  %120 = phi ptr [ %.pre211, %if.entry42.TypeChecker_error.exit171_crit_edge ], [ %119, %if.entry.i.i168 ]
  %121 = phi i64 [ %114, %if.entry42.TypeChecker_error.exit171_crit_edge ], [ %.pre210, %if.entry.i.i168 ]
  %122 = add nsw i64 %121, 1
  store i64 %122, ptr %memberidx.i.i163, align 4
  %ptridx.i.i170 = getelementptr inbounds ptr, ptr %120, i64 %121
  store ptr %113, ptr %ptridx.i.i170, align 8
  br label %common.ret

ifend44:                                          ; preds = %if.entry37
  %memberidx48 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %20, ptr %memberidx48, align 8
  br label %common.ret

if.entry51:                                       ; preds = %ifend31, %ifend31, %ifend31, %ifend31
  %memberidx55 = getelementptr inbounds %Array_Expression_, ptr %17, i64 0, i32 2
  %123 = load i64, ptr %memberidx55, align 4
  %.not = icmp eq i64 %123, 3
  br i1 %.not, label %ifend58, label %if.entry56

if.entry56:                                       ; preds = %if.entry51
  %124 = alloca ptr, align 8
  %125 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %124, ptr nonnull @207, i64 %123)
  %126 = load ptr, ptr %124, align 8
  %127 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %127, align 8
  %memberidx.i173 = getelementptr inbounds %string, ptr %127, i64 0, i32 1
  store ptr %126, ptr %memberidx.i173, align 8
  %memberidx1.i174 = getelementptr inbounds %string, ptr %127, i64 0, i32 2
  store i64 %125, ptr %memberidx1.i174, align 4
  %memberidx2.i175 = getelementptr inbounds %string, ptr %127, i64 0, i32 3
  store i64 %125, ptr %memberidx2.i175, align 4
  %128 = load ptr, ptr %2, align 8
  %memberidx.i176 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %129 = load ptr, ptr %memberidx.i176, align 8
  %memberidx1.i177 = getelementptr inbounds %Compiler, ptr %129, i64 0, i32 6
  %130 = load ptr, ptr %memberidx1.i177, align 8
  %131 = call ptr @malloc(i32 24)
  store i64 4, ptr %131, align 4
  %memberidx1.i.i178 = getelementptr inbounds %FloError, ptr %131, i64 0, i32 2
  store ptr %128, ptr %memberidx1.i.i178, align 8
  %memberidx2.i.i179 = getelementptr inbounds %FloError, ptr %131, i64 0, i32 1
  store ptr %127, ptr %memberidx2.i.i179, align 8
  %memberidx.i.i180 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 2
  %132 = load i64, ptr %memberidx.i.i180, align 4
  %memberidx1.i2.i181 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 3
  %133 = load i64, ptr %memberidx1.i2.i181, align 4
  %.not.i.i182 = icmp slt i64 %132, %133
  br i1 %.not.i.i182, label %if.entry56.TypeChecker_error.exit188_crit_edge, label %if.entry.i.i185

if.entry56.TypeChecker_error.exit188_crit_edge:   ; preds = %if.entry56
  %memberidx4.i.i186.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 1
  %.pre209 = load ptr, ptr %memberidx4.i.i186.phi.trans.insert, align 8
  br label %TypeChecker_error.exit188

if.entry.i.i185:                                  ; preds = %if.entry56
  %134 = shl nuw i64 %133, 1
  store i64 %134, ptr %memberidx1.i2.i181, align 4
  %memberidx2.i.i.i184 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 1
  %135 = load ptr, ptr %memberidx2.i.i.i184, align 8
  %136 = shl i64 %133, 4
  %137 = call ptr @realloc(ptr %135, i64 %136)
  store ptr %137, ptr %memberidx2.i.i.i184, align 8
  %.pre208 = load i64, ptr %memberidx.i.i180, align 4
  br label %TypeChecker_error.exit188

TypeChecker_error.exit188:                        ; preds = %if.entry56.TypeChecker_error.exit188_crit_edge, %if.entry.i.i185
  %138 = phi ptr [ %.pre209, %if.entry56.TypeChecker_error.exit188_crit_edge ], [ %137, %if.entry.i.i185 ]
  %139 = phi i64 [ %132, %if.entry56.TypeChecker_error.exit188_crit_edge ], [ %.pre208, %if.entry.i.i185 ]
  %140 = add nsw i64 %139, 1
  store i64 %140, ptr %memberidx.i.i180, align 4
  %ptridx.i.i187 = getelementptr inbounds ptr, ptr %138, i64 %139
  store ptr %131, ptr %ptridx.i.i187, align 8
  br label %common.ret

ifend58:                                          ; preds = %if.entry51
  %memberidx64 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %20, ptr %memberidx64, align 8
  br i1 %7, label %if.entry65, label %common.ret

if.entry65:                                       ; preds = %ifend58
  %141 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %141, align 4
  %memberidx.i190 = getelementptr inbounds %IntType, ptr %141, i64 0, i32 1
  store i1 true, ptr %memberidx.i190, align 1
  store ptr %141, ptr %memberidx64, align 8
  br label %common.ret
}

define internal fastcc ptr @dump_type(ptr nocapture readonly %0, i1 %1) unnamed_addr {
  %3 = load i64, ptr %0, align 4
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %if.entry, label %ifend

common.ret:                                       ; preds = %true_block, %false_block, %ifend61, %if.entry59, %if.entry55, %if.entry51, %if.entry47, %if.entry42, %if.entry37, %if.entry32, %if.entry27, %if.entry22, %if.entry17, %if.entry4, %if.entry
  %common.ret.op = phi ptr [ %6, %if.entry ], [ %13, %if.entry4 ], [ %28, %if.entry17 ], [ %34, %if.entry22 ], [ %40, %if.entry27 ], [ %46, %if.entry32 ], [ %52, %if.entry37 ], [ %58, %if.entry42 ], [ %60, %if.entry47 ], [ %62, %if.entry51 ], [ %64, %if.entry55 ], [ %66, %if.entry59 ], [ %68, %ifend61 ], [ %20, %true_block ], [ %22, %false_block ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %5 = tail call ptr @malloc(i32 4)
  store i32 1819242338, ptr %5, align 8
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %6, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 1
  store ptr %5, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %6, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i, align 4
  br label %common.ret

ifend:                                            ; preds = %2
  %7 = add i64 %3, -1
  %8 = icmp ult i64 %7, 7
  br i1 %8, label %if.entry1, label %ifend3

if.entry1:                                        ; preds = %ifend
  br i1 %1, label %if.entry4, label %ifend6

ifend3:                                           ; preds = %ifend11, %ifend
  %9 = phi i64 [ %18, %ifend11 ], [ %3, %ifend ]
  switch i64 %9, label %ifend61 [
    i64 8, label %if.entry47
    i64 9, label %if.entry51
    i64 10, label %if.entry55
    i64 16, label %if.entry59
  ]

if.entry4:                                        ; preds = %if.entry1
  %10 = alloca ptr, align 8
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %10, ptr nonnull @77, i64 64)
  %12 = load ptr, ptr %10, align 8
  %13 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i, align 4
  br label %common.ret

ifend6:                                           ; preds = %if.entry1
  %memberidx7 = getelementptr inbounds %IntType, ptr %0, i64 0, i32 1
  %14 = load i1, ptr %memberidx7, align 1
  %15 = icmp eq i64 %3, 6
  br i1 %15, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend6
  br i1 %14, label %true_block, label %false_block

ifend11:                                          ; preds = %ifend6
  %16 = tail call ptr @malloc(i32 1)
  %. = select i1 %14, i8 105, i8 117
  store i8 %., ptr %16, align 8
  %17 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %17, align 8
  %memberidx.i.i93 = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  store ptr %16, ptr %memberidx.i.i93, align 8
  %memberidx1.i.i94 = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i94, align 4
  %memberidx2.i.i95 = getelementptr inbounds %string, ptr %17, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i95, align 4
  %18 = load i64, ptr %0, align 4
  switch i64 %18, label %ifend3 [
    i64 1, label %if.entry17
    i64 2, label %if.entry22
    i64 3, label %if.entry27
    i64 4, label %if.entry32
    i64 5, label %if.entry37
    i64 7, label %if.entry42
  ]

true_block:                                       ; preds = %if.entry9
  %19 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %19, ptr noundef nonnull align 8 dereferenceable(3) @78, i64 3, i1 false)
  %20 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i84 = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i84, align 8
  %memberidx1.i.i85 = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i85, align 4
  %memberidx2.i.i86 = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i86, align 4
  br label %common.ret

false_block:                                      ; preds = %if.entry9
  %21 = tail call ptr @malloc(i32 4)
  store i32 1953393013, ptr %21, align 8
  %22 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %22, align 8
  %memberidx.i.i87 = getelementptr inbounds %string, ptr %22, i64 0, i32 1
  store ptr %21, ptr %memberidx.i.i87, align 8
  %memberidx1.i.i88 = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i88, align 4
  %memberidx2.i.i89 = getelementptr inbounds %string, ptr %22, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i89, align 4
  br label %common.ret

if.entry17:                                       ; preds = %ifend11
  %23 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %24 = tail call ptr %23(ptr nonnull %17)
  %25 = alloca ptr, align 8
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %25, ptr nonnull @79, ptr %24)
  %27 = load ptr, ptr %25, align 8
  %28 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %28, align 8
  %memberidx.i96 = getelementptr inbounds %string, ptr %28, i64 0, i32 1
  store ptr %27, ptr %memberidx.i96, align 8
  %memberidx1.i97 = getelementptr inbounds %string, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx1.i97, align 4
  %memberidx2.i98 = getelementptr inbounds %string, ptr %28, i64 0, i32 3
  store i64 %26, ptr %memberidx2.i98, align 4
  tail call void @free(ptr %24)
  br label %common.ret

if.entry22:                                       ; preds = %ifend11
  %29 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %30 = tail call ptr %29(ptr nonnull %17)
  %31 = alloca ptr, align 8
  %32 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %31, ptr nonnull @80, ptr %30)
  %33 = load ptr, ptr %31, align 8
  %34 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i99 = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i99, align 8
  %memberidx1.i100 = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 %32, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 %32, ptr %memberidx2.i101, align 4
  tail call void @free(ptr %30)
  br label %common.ret

if.entry27:                                       ; preds = %ifend11
  %35 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %36 = tail call ptr %35(ptr nonnull %17)
  %37 = alloca ptr, align 8
  %38 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %37, ptr nonnull @81, ptr %36)
  %39 = load ptr, ptr %37, align 8
  %40 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %40, align 8
  %memberidx.i102 = getelementptr inbounds %string, ptr %40, i64 0, i32 1
  store ptr %39, ptr %memberidx.i102, align 8
  %memberidx1.i103 = getelementptr inbounds %string, ptr %40, i64 0, i32 2
  store i64 %38, ptr %memberidx1.i103, align 4
  %memberidx2.i104 = getelementptr inbounds %string, ptr %40, i64 0, i32 3
  store i64 %38, ptr %memberidx2.i104, align 4
  tail call void @free(ptr %36)
  br label %common.ret

if.entry32:                                       ; preds = %ifend11
  %41 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %42 = tail call ptr %41(ptr nonnull %17)
  %43 = alloca ptr, align 8
  %44 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %43, ptr nonnull @82, ptr %42)
  %45 = load ptr, ptr %43, align 8
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i105 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i105, align 8
  %memberidx1.i106 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 %44, ptr %memberidx1.i106, align 4
  %memberidx2.i107 = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 %44, ptr %memberidx2.i107, align 4
  tail call void @free(ptr %42)
  br label %common.ret

if.entry37:                                       ; preds = %ifend11
  %47 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %48 = tail call ptr %47(ptr nonnull %17)
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @83, ptr %48)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %52, align 8
  %memberidx.i108 = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  store ptr %51, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx1.i109, align 4
  %memberidx2.i110 = getelementptr inbounds %string, ptr %52, i64 0, i32 3
  store i64 %50, ptr %memberidx2.i110, align 4
  tail call void @free(ptr %48)
  br label %common.ret

if.entry42:                                       ; preds = %ifend11
  %53 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %54 = tail call ptr %53(ptr nonnull %17)
  %55 = alloca ptr, align 8
  %56 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %55, ptr nonnull @84, ptr %54)
  %57 = load ptr, ptr %55, align 8
  %58 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i111 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i111, align 8
  %memberidx1.i112 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i112, align 4
  %memberidx2.i113 = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 %56, ptr %memberidx2.i113, align 4
  tail call void @free(ptr %54)
  br label %common.ret

if.entry47:                                       ; preds = %ifend3
  %59 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %59, ptr noundef nonnull align 8 dereferenceable(3) @85, i64 3, i1 false)
  %60 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %60, align 8
  %memberidx.i.i117 = getelementptr inbounds %string, ptr %60, i64 0, i32 1
  store ptr %59, ptr %memberidx.i.i117, align 8
  %memberidx1.i.i118 = getelementptr inbounds %string, ptr %60, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i118, align 4
  %memberidx2.i.i119 = getelementptr inbounds %string, ptr %60, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i119, align 4
  br label %common.ret

if.entry51:                                       ; preds = %ifend3
  %61 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %61, ptr noundef nonnull align 8 dereferenceable(3) @86, i64 3, i1 false)
  %62 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %62, align 8
  %memberidx.i.i120 = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i.i120, align 8
  %memberidx1.i.i121 = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  store i64 3, ptr %memberidx1.i.i121, align 4
  %memberidx2.i.i122 = getelementptr inbounds %string, ptr %62, i64 0, i32 3
  store i64 3, ptr %memberidx2.i.i122, align 4
  br label %common.ret

if.entry55:                                       ; preds = %ifend3
  %63 = tail call ptr @malloc(i32 4)
  store i32 1684631414, ptr %63, align 8
  %64 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %64, align 8
  %memberidx.i.i123 = getelementptr inbounds %string, ptr %64, i64 0, i32 1
  store ptr %63, ptr %memberidx.i.i123, align 8
  %memberidx1.i.i124 = getelementptr inbounds %string, ptr %64, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i124, align 4
  %memberidx2.i.i125 = getelementptr inbounds %string, ptr %64, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i125, align 4
  br label %common.ret

if.entry59:                                       ; preds = %ifend3
  %65 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %65, ptr noundef nonnull align 8 dereferenceable(6) @87, i64 6, i1 false)
  %66 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %66, align 8
  %memberidx.i.i114 = getelementptr inbounds %string, ptr %66, i64 0, i32 1
  store ptr %65, ptr %memberidx.i.i114, align 8
  %memberidx1.i.i115 = getelementptr inbounds %string, ptr %66, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i115, align 4
  %memberidx2.i.i116 = getelementptr inbounds %string, ptr %66, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i116, align 4
  br label %common.ret

ifend61:                                          ; preds = %ifend3
  %67 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %67, ptr noundef nonnull align 8 dereferenceable(7) @88, i64 7, i1 false)
  %68 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %68, align 8
  %memberidx.i.i81 = getelementptr inbounds %string, ptr %68, i64 0, i32 1
  store ptr %67, ptr %memberidx.i.i81, align 8
  %memberidx1.i.i82 = getelementptr inbounds %string, ptr %68, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i82, align 4
  %memberidx2.i.i83 = getelementptr inbounds %string, ptr %68, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i83, align 4
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind readonly
define internal fastcc i64 @evaluate_const_int_expression(ptr %0, ptr nocapture readonly %1) unnamed_addr #12 {
  %memberidx.i = getelementptr inbounds %Program, ptr %0, i64 0, i32 1
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry12, %2
  %accumulator.tr.ph = phi i64 [ %11, %if.entry12 ], [ 0, %2 ]
  %.tr157.ph = phi ptr [ %10, %if.entry12 ], [ %1, %2 ]
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer, %if.entry86
  %.tr157 = phi ptr [ %72, %if.entry86 ], [ %.tr157.ph, %tailrecurse.outer ]
  %memberidx = getelementptr inbounds %Expression, ptr %.tr157, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry3
    i64 8, label %if.entry8
    i64 9, label %if.entry72
    i64 7, label %if.entry86
  ]

common.ret169:                                    ; preds = %if.entry81, %if.entry76, %if.entry66, %if.entry60, %if.entry54, %if.entry48, %if.entry42, %if.entry36, %if.entry30, %if.entry24, %if.entry18, %common.ret
  %common.ret169.op = phi i64 [ %accumulator.ret.tr, %common.ret ], [ %accumulator.ret.tr158, %if.entry18 ], [ %accumulator.ret.tr159, %if.entry24 ], [ %accumulator.ret.tr160, %if.entry30 ], [ %accumulator.ret.tr161, %if.entry36 ], [ %accumulator.ret.tr162, %if.entry42 ], [ %accumulator.ret.tr163, %if.entry48 ], [ %accumulator.ret.tr164, %if.entry54 ], [ %accumulator.ret.tr165, %if.entry60 ], [ %accumulator.ret.tr166, %if.entry66 ], [ %accumulator.ret.tr167, %if.entry76 ], [ %accumulator.ret.tr168, %if.entry81 ]
  ret i64 %common.ret169.op

common.ret:                                       ; preds = %if.entry8, %tailrecurse, %if.entry72, %if.entry3, %if.entry
  %common.ret.op = phi i64 [ %4, %if.entry ], [ %6, %if.entry3 ], [ -99999999, %if.entry72 ], [ -99999999, %tailrecurse ], [ -99999999, %if.entry8 ]
  %accumulator.ret.tr = add nsw i64 %common.ret.op, %accumulator.tr.ph
  br label %common.ret169

if.entry:                                         ; preds = %tailrecurse
  %memberidx1 = getelementptr inbounds %IntExpression, ptr %.tr157, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  br label %common.ret

if.entry3:                                        ; preds = %tailrecurse
  %memberidx6 = getelementptr inbounds %FloatExpression, ptr %.tr157, i64 0, i32 4
  %5 = load double, ptr %memberidx6, align 8
  %6 = fptosi double %5 to i64
  br label %common.ret

if.entry8:                                        ; preds = %tailrecurse
  %memberidx11 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 5
  %7 = load i64, ptr %memberidx11, align 4
  switch i64 %7, label %common.ret [
    i64 1, label %if.entry12
    i64 2, label %if.entry18
    i64 3, label %if.entry24
    i64 4, label %if.entry30
    i64 5, label %if.entry36
    i64 13, label %if.entry42
    i64 14, label %if.entry48
    i64 15, label %if.entry54
    i64 16, label %if.entry60
    i64 17, label %if.entry66
  ]

if.entry12:                                       ; preds = %if.entry8
  %memberidx15 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %8 = load ptr, ptr %memberidx15, align 8
  %9 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %8)
  %memberidx16 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %10 = load ptr, ptr %memberidx16, align 8
  %11 = add nsw i64 %9, %accumulator.tr.ph
  br label %tailrecurse.outer

if.entry18:                                       ; preds = %if.entry8
  %memberidx21 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %12 = load ptr, ptr %memberidx21, align 8
  %13 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %12)
  %memberidx22 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %14 = load ptr, ptr %memberidx22, align 8
  %15 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %14)
  %16 = add i64 %13, %accumulator.tr.ph
  %accumulator.ret.tr158 = sub i64 %16, %15
  br label %common.ret169

if.entry24:                                       ; preds = %if.entry8
  %memberidx27 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %17 = load ptr, ptr %memberidx27, align 8
  %18 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %17)
  %memberidx28 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %19 = load ptr, ptr %memberidx28, align 8
  %20 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %19)
  %21 = mul nsw i64 %20, %18
  %accumulator.ret.tr159 = add nsw i64 %21, %accumulator.tr.ph
  br label %common.ret169

if.entry30:                                       ; preds = %if.entry8
  %memberidx33 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %22 = load ptr, ptr %memberidx33, align 8
  %23 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %22)
  %memberidx34 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %24 = load ptr, ptr %memberidx34, align 8
  %25 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %24)
  %26 = sdiv i64 %23, %25
  %accumulator.ret.tr160 = add nsw i64 %26, %accumulator.tr.ph
  br label %common.ret169

if.entry36:                                       ; preds = %if.entry8
  %memberidx39 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %27 = load ptr, ptr %memberidx39, align 8
  %28 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %27)
  %memberidx40 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %29 = load ptr, ptr %memberidx40, align 8
  %30 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %29)
  %31 = srem i64 %28, %30
  %accumulator.ret.tr161 = add nsw i64 %31, %accumulator.tr.ph
  br label %common.ret169

if.entry42:                                       ; preds = %if.entry8
  %memberidx45 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %32 = load ptr, ptr %memberidx45, align 8
  %33 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %32)
  %memberidx46 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %34 = load ptr, ptr %memberidx46, align 8
  %35 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %34)
  %36 = shl i64 %33, %35
  %accumulator.ret.tr162 = add nsw i64 %36, %accumulator.tr.ph
  br label %common.ret169

if.entry48:                                       ; preds = %if.entry8
  %memberidx51 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %37 = load ptr, ptr %memberidx51, align 8
  %38 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %37)
  %memberidx52 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %39 = load ptr, ptr %memberidx52, align 8
  %40 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %39)
  %41 = lshr i64 %38, %40
  %accumulator.ret.tr163 = add nsw i64 %41, %accumulator.tr.ph
  br label %common.ret169

if.entry54:                                       ; preds = %if.entry8
  %memberidx57 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %42 = load ptr, ptr %memberidx57, align 8
  %43 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %42)
  %memberidx58 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %44 = load ptr, ptr %memberidx58, align 8
  %45 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %44)
  %46 = or i64 %45, %43
  %accumulator.ret.tr164 = add nsw i64 %46, %accumulator.tr.ph
  br label %common.ret169

if.entry60:                                       ; preds = %if.entry8
  %memberidx63 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %47 = load ptr, ptr %memberidx63, align 8
  %48 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %47)
  %memberidx64 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %49 = load ptr, ptr %memberidx64, align 8
  %50 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %49)
  %51 = and i64 %50, %48
  %accumulator.ret.tr165 = add nsw i64 %51, %accumulator.tr.ph
  br label %common.ret169

if.entry66:                                       ; preds = %if.entry8
  %memberidx69 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %52 = load ptr, ptr %memberidx69, align 8
  %53 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %52)
  %memberidx70 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %54 = load ptr, ptr %memberidx70, align 8
  %55 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %54)
  %56 = xor i64 %55, %53
  %accumulator.ret.tr166 = add nsw i64 %56, %accumulator.tr.ph
  br label %common.ret169

if.entry72:                                       ; preds = %tailrecurse
  %memberidx75 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 4
  %57 = load i64, ptr %memberidx75, align 4
  switch i64 %57, label %common.ret [
    i64 6, label %if.entry76
    i64 7, label %if.entry81
  ]

if.entry76:                                       ; preds = %if.entry72
  %memberidx79 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 5
  %58 = load ptr, ptr %memberidx79, align 8
  %59 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %58)
  %accumulator.ret.tr167 = sub i64 %accumulator.tr.ph, %59
  br label %common.ret169

if.entry81:                                       ; preds = %if.entry72
  %memberidx84 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 5
  %60 = load ptr, ptr %memberidx84, align 8
  %61 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %60)
  %62 = xor i64 %61, -1
  %accumulator.ret.tr168 = add nsw i64 %accumulator.tr.ph, %62
  br label %common.ret169

if.entry86:                                       ; preds = %tailrecurse
  %memberidx89 = getelementptr inbounds %VarAccessExpression, ptr %.tr157, i64 0, i32 4
  %63 = load ptr, ptr %memberidx89, align 8
  %64 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %66, i64 %65
  %67 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %67, i64 0, i32 2
  %68 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 2
  %69 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Const_, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %70, i64 %69
  %71 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx90 = getelementptr inbounds %Const, ptr %71, i64 0, i32 2
  %72 = load ptr, ptr %memberidx90, align 8
  br label %tailrecurse
}

define internal fastcc i1 @is_operator_overload_name(ptr readonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %2, ptr noundef nonnull align 8 dereferenceable(6) @104, i64 6, i1 false)
  %3 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %3, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %3, i64 0, i32 1
  store ptr %2, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %3, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %3, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %string, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %4, 6
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %1
  %memberidx2.i = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx2.i, align 8
  %6 = tail call i64 @memcmp(ptr %5, ptr nonnull %2, i64 6)
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend.i449, %ifend87, %ifend.i438, %ifend.i427, %ifend.i416, %ifend.i405, %ifend.i394, %ifend.i383, %ifend.i372, %ifend.i361, %ifend.i350, %ifend.i339, %ifend.i328, %ifend.i317, %ifend.i306, %ifend.i295, %ifend.i284, %ifend.i273, %ifend.i262, %ifend.i251, %ifend.i240, %ifend.i229, %ifend.i218, %ifend.i207, %ifend.i196, %ifend.i185, %ifend.i174, %ifend.i163, %ifend.i152, %ifend.i141, %ifend.i130, %ifend.i
  %common.ret.op = phi i1 [ true, %ifend.i ], [ true, %ifend.i130 ], [ true, %ifend.i141 ], [ true, %ifend.i152 ], [ true, %ifend.i163 ], [ true, %ifend.i174 ], [ true, %ifend.i185 ], [ true, %ifend.i196 ], [ true, %ifend.i207 ], [ true, %ifend.i218 ], [ true, %ifend.i229 ], [ true, %ifend.i240 ], [ true, %ifend.i251 ], [ true, %ifend.i262 ], [ true, %ifend.i273 ], [ true, %ifend.i284 ], [ true, %ifend.i295 ], [ true, %ifend.i306 ], [ true, %ifend.i317 ], [ true, %ifend.i328 ], [ true, %ifend.i339 ], [ true, %ifend.i350 ], [ true, %ifend.i361 ], [ true, %ifend.i372 ], [ true, %ifend.i383 ], [ true, %ifend.i394 ], [ true, %ifend.i405 ], [ true, %ifend.i416 ], [ true, %ifend.i427 ], [ true, %ifend.i438 ], [ %187, %ifend.i449 ], [ false, %ifend87 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %1, %ifend.i
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @105, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %9, align 8
  %memberidx.i.i121 = getelementptr inbounds %string, ptr %9, i64 0, i32 1
  store ptr %8, ptr %memberidx.i.i121, align 8
  %memberidx1.i.i122 = getelementptr inbounds %string, ptr %9, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i122, align 4
  %memberidx2.i.i123 = getelementptr inbounds %string, ptr %9, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i123, align 4
  %10 = load i64, ptr %memberidx.i, align 4
  %.not.i126 = icmp eq i64 %10, 7
  br i1 %.not.i126, label %ifend.i130, label %ifend3

ifend.i130:                                       ; preds = %ifend
  %memberidx2.i128 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %11 = load ptr, ptr %memberidx2.i128, align 8
  %12 = tail call i64 @memcmp(ptr %11, ptr nonnull %8, i64 7)
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %common.ret, label %ifend3

ifend3:                                           ; preds = %ifend, %ifend.i130
  %14 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %14, ptr noundef nonnull align 8 dereferenceable(7) @106, i64 7, i1 false)
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %15, align 8
  %memberidx.i.i132 = getelementptr inbounds %string, ptr %15, i64 0, i32 1
  store ptr %14, ptr %memberidx.i.i132, align 8
  %memberidx1.i.i133 = getelementptr inbounds %string, ptr %15, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i133, align 4
  %memberidx2.i.i134 = getelementptr inbounds %string, ptr %15, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i134, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i137 = icmp eq i64 %16, 7
  br i1 %.not.i137, label %ifend.i141, label %ifend6

ifend.i141:                                       ; preds = %ifend3
  %memberidx2.i139 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %17 = load ptr, ptr %memberidx2.i139, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 7)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %common.ret, label %ifend6

ifend6:                                           ; preds = %ifend3, %ifend.i141
  %20 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %20, ptr noundef nonnull align 8 dereferenceable(7) @107, i64 7, i1 false)
  %21 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %21, align 8
  %memberidx.i.i143 = getelementptr inbounds %string, ptr %21, i64 0, i32 1
  store ptr %20, ptr %memberidx.i.i143, align 8
  %memberidx1.i.i144 = getelementptr inbounds %string, ptr %21, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i144, align 4
  %memberidx2.i.i145 = getelementptr inbounds %string, ptr %21, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i145, align 4
  %22 = load i64, ptr %memberidx.i, align 4
  %.not.i148 = icmp eq i64 %22, 7
  br i1 %.not.i148, label %ifend.i152, label %ifend9

ifend.i152:                                       ; preds = %ifend6
  %memberidx2.i150 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i150, align 8
  %24 = tail call i64 @memcmp(ptr %23, ptr nonnull %20, i64 7)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend6, %ifend.i152
  %26 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %26, ptr noundef nonnull align 8 dereferenceable(7) @108, i64 7, i1 false)
  %27 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %27, align 8
  %memberidx.i.i154 = getelementptr inbounds %string, ptr %27, i64 0, i32 1
  store ptr %26, ptr %memberidx.i.i154, align 8
  %memberidx1.i.i155 = getelementptr inbounds %string, ptr %27, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i155, align 4
  %memberidx2.i.i156 = getelementptr inbounds %string, ptr %27, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i156, align 4
  %28 = load i64, ptr %memberidx.i, align 4
  %.not.i159 = icmp eq i64 %28, 7
  br i1 %.not.i159, label %ifend.i163, label %ifend12

ifend.i163:                                       ; preds = %ifend9
  %memberidx2.i161 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %29 = load ptr, ptr %memberidx2.i161, align 8
  %30 = tail call i64 @memcmp(ptr %29, ptr nonnull %26, i64 7)
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %common.ret, label %ifend12

ifend12:                                          ; preds = %ifend9, %ifend.i163
  %32 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %32, ptr noundef nonnull align 8 dereferenceable(6) @109, i64 6, i1 false)
  %33 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %33, align 8
  %memberidx.i.i165 = getelementptr inbounds %string, ptr %33, i64 0, i32 1
  store ptr %32, ptr %memberidx.i.i165, align 8
  %memberidx1.i.i166 = getelementptr inbounds %string, ptr %33, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i166, align 4
  %memberidx2.i.i167 = getelementptr inbounds %string, ptr %33, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i167, align 4
  %34 = load i64, ptr %memberidx.i, align 4
  %.not.i170 = icmp eq i64 %34, 6
  br i1 %.not.i170, label %ifend.i174, label %ifend15

ifend.i174:                                       ; preds = %ifend12
  %memberidx2.i172 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %35 = load ptr, ptr %memberidx2.i172, align 8
  %36 = tail call i64 @memcmp(ptr %35, ptr nonnull %32, i64 6)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %common.ret, label %ifend15

ifend15:                                          ; preds = %ifend12, %ifend.i174
  %38 = tail call ptr @malloc(i32 8)
  store i64 6872318640199393119, ptr %38, align 8
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i176 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i176, align 8
  %memberidx1.i.i177 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i177, align 4
  %memberidx2.i.i178 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i178, align 4
  %40 = load i64, ptr %memberidx.i, align 4
  %.not.i181 = icmp eq i64 %40, 8
  br i1 %.not.i181, label %ifend.i185, label %ifend18

ifend.i185:                                       ; preds = %ifend15
  %memberidx2.i183 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2.i183, align 8
  %42 = tail call i64 @memcmp(ptr %41, ptr nonnull %38, i64 8)
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %common.ret, label %ifend18

ifend18:                                          ; preds = %ifend15, %ifend.i185
  %44 = tail call ptr @malloc(i32 8)
  store i64 6872318631895850847, ptr %44, align 8
  %45 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %45, align 8
  %memberidx.i.i187 = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  store ptr %44, ptr %memberidx.i.i187, align 8
  %memberidx1.i.i188 = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i188, align 4
  %memberidx2.i.i189 = getelementptr inbounds %string, ptr %45, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i189, align 4
  %46 = load i64, ptr %memberidx.i, align 4
  %.not.i192 = icmp eq i64 %46, 8
  br i1 %.not.i192, label %ifend.i196, label %ifend21

ifend.i196:                                       ; preds = %ifend18
  %memberidx2.i194 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %47 = load ptr, ptr %memberidx2.i194, align 8
  %48 = tail call i64 @memcmp(ptr %47, ptr nonnull %44, i64 8)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %common.ret, label %ifend21

ifend21:                                          ; preds = %ifend18, %ifend.i196
  %50 = tail call ptr @malloc(i32 8)
  store i64 6872318674845130591, ptr %50, align 8
  %51 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %51, align 8
  %memberidx.i.i198 = getelementptr inbounds %string, ptr %51, i64 0, i32 1
  store ptr %50, ptr %memberidx.i.i198, align 8
  %memberidx1.i.i199 = getelementptr inbounds %string, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i199, align 4
  %memberidx2.i.i200 = getelementptr inbounds %string, ptr %51, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i200, align 4
  %52 = load i64, ptr %memberidx.i, align 4
  %.not.i203 = icmp eq i64 %52, 8
  br i1 %.not.i203, label %ifend.i207, label %ifend24

ifend.i207:                                       ; preds = %ifend21
  %memberidx2.i205 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %53 = load ptr, ptr %memberidx2.i205, align 8
  %54 = tail call i64 @memcmp(ptr %53, ptr nonnull %50, i64 8)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend21, %ifend.i207
  %56 = tail call ptr @malloc(i32 8)
  store i64 6872318717592887135, ptr %56, align 8
  %57 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %57, align 8
  %memberidx.i.i209 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  store ptr %56, ptr %memberidx.i.i209, align 8
  %memberidx1.i.i210 = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i210, align 4
  %memberidx2.i.i211 = getelementptr inbounds %string, ptr %57, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i211, align 4
  %58 = load i64, ptr %memberidx.i, align 4
  %.not.i214 = icmp eq i64 %58, 8
  br i1 %.not.i214, label %ifend.i218, label %ifend27

ifend.i218:                                       ; preds = %ifend24
  %memberidx2.i216 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %59 = load ptr, ptr %memberidx2.i216, align 8
  %60 = tail call i64 @memcmp(ptr %59, ptr nonnull %56, i64 8)
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend24, %ifend.i218
  %62 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %62, ptr noundef nonnull align 8 dereferenceable(7) @110, i64 7, i1 false)
  %63 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %63, align 8
  %memberidx.i.i220 = getelementptr inbounds %string, ptr %63, i64 0, i32 1
  store ptr %62, ptr %memberidx.i.i220, align 8
  %memberidx1.i.i221 = getelementptr inbounds %string, ptr %63, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i221, align 4
  %memberidx2.i.i222 = getelementptr inbounds %string, ptr %63, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i222, align 4
  %64 = load i64, ptr %memberidx.i, align 4
  %.not.i225 = icmp eq i64 %64, 7
  br i1 %.not.i225, label %ifend.i229, label %ifend30

ifend.i229:                                       ; preds = %ifend27
  %memberidx2.i227 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i227, align 8
  %66 = tail call i64 @memcmp(ptr %65, ptr nonnull %62, i64 7)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %common.ret, label %ifend30

ifend30:                                          ; preds = %ifend27, %ifend.i229
  %68 = tail call ptr @malloc(i32 8)
  store i64 6872318640367165279, ptr %68, align 8
  %69 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %69, align 8
  %memberidx.i.i231 = getelementptr inbounds %string, ptr %69, i64 0, i32 1
  store ptr %68, ptr %memberidx.i.i231, align 8
  %memberidx1.i.i232 = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i232, align 4
  %memberidx2.i.i233 = getelementptr inbounds %string, ptr %69, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i233, align 4
  %70 = load i64, ptr %memberidx.i, align 4
  %.not.i236 = icmp eq i64 %70, 8
  br i1 %.not.i236, label %ifend.i240, label %ifend33

ifend.i240:                                       ; preds = %ifend30
  %memberidx2.i238 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %71 = load ptr, ptr %memberidx2.i238, align 8
  %72 = tail call i64 @memcmp(ptr %71, ptr nonnull %68, i64 8)
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %common.ret, label %ifend33

ifend33:                                          ; preds = %ifend30, %ifend.i240
  %74 = tail call ptr @malloc(i32 8)
  store i64 6872318700514991967, ptr %74, align 8
  %75 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %75, align 8
  %memberidx.i.i242 = getelementptr inbounds %string, ptr %75, i64 0, i32 1
  store ptr %74, ptr %memberidx.i.i242, align 8
  %memberidx1.i.i243 = getelementptr inbounds %string, ptr %75, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i243, align 4
  %memberidx2.i.i244 = getelementptr inbounds %string, ptr %75, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i244, align 4
  %76 = load i64, ptr %memberidx.i, align 4
  %.not.i247 = icmp eq i64 %76, 8
  br i1 %.not.i247, label %ifend.i251, label %ifend36

ifend.i251:                                       ; preds = %ifend33
  %memberidx2.i249 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %77 = load ptr, ptr %memberidx2.i249, align 8
  %78 = tail call i64 @memcmp(ptr %77, ptr nonnull %74, i64 8)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %common.ret, label %ifend36

ifend36:                                          ; preds = %ifend33, %ifend.i251
  %80 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %80, ptr noundef nonnull align 8 dereferenceable(11) @111, i64 11, i1 false)
  %81 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %81, align 8
  %memberidx.i.i253 = getelementptr inbounds %string, ptr %81, i64 0, i32 1
  store ptr %80, ptr %memberidx.i.i253, align 8
  %memberidx1.i.i254 = getelementptr inbounds %string, ptr %81, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i254, align 4
  %memberidx2.i.i255 = getelementptr inbounds %string, ptr %81, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i255, align 4
  %82 = load i64, ptr %memberidx.i, align 4
  %.not.i258 = icmp eq i64 %82, 11
  br i1 %.not.i258, label %ifend.i262, label %ifend39

ifend.i262:                                       ; preds = %ifend36
  %memberidx2.i260 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %83 = load ptr, ptr %memberidx2.i260, align 8
  %84 = tail call i64 @memcmp(ptr %83, ptr nonnull %80, i64 11)
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %common.ret, label %ifend39

ifend39:                                          ; preds = %ifend36, %ifend.i262
  %86 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %86, ptr noundef nonnull align 8 dereferenceable(11) @112, i64 11, i1 false)
  %87 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %87, align 8
  %memberidx.i.i264 = getelementptr inbounds %string, ptr %87, i64 0, i32 1
  store ptr %86, ptr %memberidx.i.i264, align 8
  %memberidx1.i.i265 = getelementptr inbounds %string, ptr %87, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i265, align 4
  %memberidx2.i.i266 = getelementptr inbounds %string, ptr %87, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i266, align 4
  %88 = load i64, ptr %memberidx.i, align 4
  %.not.i269 = icmp eq i64 %88, 11
  br i1 %.not.i269, label %ifend.i273, label %ifend42

ifend.i273:                                       ; preds = %ifend39
  %memberidx2.i271 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %89 = load ptr, ptr %memberidx2.i271, align 8
  %90 = tail call i64 @memcmp(ptr %89, ptr nonnull %86, i64 11)
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %common.ret, label %ifend42

ifend42:                                          ; preds = %ifend39, %ifend.i273
  %92 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %92, ptr noundef nonnull align 8 dereferenceable(6) @113, i64 6, i1 false)
  %93 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %93, align 8
  %memberidx.i.i275 = getelementptr inbounds %string, ptr %93, i64 0, i32 1
  store ptr %92, ptr %memberidx.i.i275, align 8
  %memberidx1.i.i276 = getelementptr inbounds %string, ptr %93, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i276, align 4
  %memberidx2.i.i277 = getelementptr inbounds %string, ptr %93, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i277, align 4
  %94 = load i64, ptr %memberidx.i, align 4
  %.not.i280 = icmp eq i64 %94, 6
  br i1 %.not.i280, label %ifend.i284, label %ifend45

ifend.i284:                                       ; preds = %ifend42
  %memberidx2.i282 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %95 = load ptr, ptr %memberidx2.i282, align 8
  %96 = tail call i64 @memcmp(ptr %95, ptr nonnull %92, i64 6)
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %common.ret, label %ifend45

ifend45:                                          ; preds = %ifend42, %ifend.i284
  %98 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %98, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  %99 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %99, align 8
  %memberidx.i.i286 = getelementptr inbounds %string, ptr %99, i64 0, i32 1
  store ptr %98, ptr %memberidx.i.i286, align 8
  %memberidx1.i.i287 = getelementptr inbounds %string, ptr %99, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i287, align 4
  %memberidx2.i.i288 = getelementptr inbounds %string, ptr %99, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i288, align 4
  %100 = load i64, ptr %memberidx.i, align 4
  %.not.i291 = icmp eq i64 %100, 6
  br i1 %.not.i291, label %ifend.i295, label %ifend48

ifend.i295:                                       ; preds = %ifend45
  %memberidx2.i293 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %101 = load ptr, ptr %memberidx2.i293, align 8
  %102 = tail call i64 @memcmp(ptr %101, ptr nonnull %98, i64 6)
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %common.ret, label %ifend48

ifend48:                                          ; preds = %ifend45, %ifend.i295
  %104 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %104, ptr noundef nonnull align 8 dereferenceable(7) @115, i64 7, i1 false)
  %105 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %105, align 8
  %memberidx.i.i297 = getelementptr inbounds %string, ptr %105, i64 0, i32 1
  store ptr %104, ptr %memberidx.i.i297, align 8
  %memberidx1.i.i298 = getelementptr inbounds %string, ptr %105, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i298, align 4
  %memberidx2.i.i299 = getelementptr inbounds %string, ptr %105, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i299, align 4
  %106 = load i64, ptr %memberidx.i, align 4
  %.not.i302 = icmp eq i64 %106, 7
  br i1 %.not.i302, label %ifend.i306, label %ifend51

ifend.i306:                                       ; preds = %ifend48
  %memberidx2.i304 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %107 = load ptr, ptr %memberidx2.i304, align 8
  %108 = tail call i64 @memcmp(ptr %107, ptr nonnull %104, i64 7)
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %common.ret, label %ifend51

ifend51:                                          ; preds = %ifend48, %ifend.i306
  %110 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %110, ptr noundef nonnull align 8 dereferenceable(7) @116, i64 7, i1 false)
  %111 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %111, align 8
  %memberidx.i.i308 = getelementptr inbounds %string, ptr %111, i64 0, i32 1
  store ptr %110, ptr %memberidx.i.i308, align 8
  %memberidx1.i.i309 = getelementptr inbounds %string, ptr %111, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i309, align 4
  %memberidx2.i.i310 = getelementptr inbounds %string, ptr %111, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i310, align 4
  %112 = load i64, ptr %memberidx.i, align 4
  %.not.i313 = icmp eq i64 %112, 7
  br i1 %.not.i313, label %ifend.i317, label %ifend54

ifend.i317:                                       ; preds = %ifend51
  %memberidx2.i315 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %113 = load ptr, ptr %memberidx2.i315, align 8
  %114 = tail call i64 @memcmp(ptr %113, ptr nonnull %110, i64 7)
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %common.ret, label %ifend54

ifend54:                                          ; preds = %ifend51, %ifend.i317
  %116 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %116, ptr noundef nonnull align 8 dereferenceable(6) @117, i64 6, i1 false)
  %117 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %117, align 8
  %memberidx.i.i319 = getelementptr inbounds %string, ptr %117, i64 0, i32 1
  store ptr %116, ptr %memberidx.i.i319, align 8
  %memberidx1.i.i320 = getelementptr inbounds %string, ptr %117, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i320, align 4
  %memberidx2.i.i321 = getelementptr inbounds %string, ptr %117, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i321, align 4
  %118 = load i64, ptr %memberidx.i, align 4
  %.not.i324 = icmp eq i64 %118, 6
  br i1 %.not.i324, label %ifend.i328, label %ifend57

ifend.i328:                                       ; preds = %ifend54
  %memberidx2.i326 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %119 = load ptr, ptr %memberidx2.i326, align 8
  %120 = tail call i64 @memcmp(ptr %119, ptr nonnull %116, i64 6)
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %common.ret, label %ifend57

ifend57:                                          ; preds = %ifend54, %ifend.i328
  %122 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %122, ptr noundef nonnull align 8 dereferenceable(6) @118, i64 6, i1 false)
  %123 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %123, align 8
  %memberidx.i.i330 = getelementptr inbounds %string, ptr %123, i64 0, i32 1
  store ptr %122, ptr %memberidx.i.i330, align 8
  %memberidx1.i.i331 = getelementptr inbounds %string, ptr %123, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i331, align 4
  %memberidx2.i.i332 = getelementptr inbounds %string, ptr %123, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i332, align 4
  %124 = load i64, ptr %memberidx.i, align 4
  %.not.i335 = icmp eq i64 %124, 6
  br i1 %.not.i335, label %ifend.i339, label %ifend60

ifend.i339:                                       ; preds = %ifend57
  %memberidx2.i337 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %125 = load ptr, ptr %memberidx2.i337, align 8
  %126 = tail call i64 @memcmp(ptr %125, ptr nonnull %122, i64 6)
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %common.ret, label %ifend60

ifend60:                                          ; preds = %ifend57, %ifend.i339
  %128 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %128, ptr noundef nonnull align 8 dereferenceable(6) @119, i64 6, i1 false)
  %129 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %129, align 8
  %memberidx.i.i341 = getelementptr inbounds %string, ptr %129, i64 0, i32 1
  store ptr %128, ptr %memberidx.i.i341, align 8
  %memberidx1.i.i342 = getelementptr inbounds %string, ptr %129, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i342, align 4
  %memberidx2.i.i343 = getelementptr inbounds %string, ptr %129, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i343, align 4
  %130 = load i64, ptr %memberidx.i, align 4
  %.not.i346 = icmp eq i64 %130, 6
  br i1 %.not.i346, label %ifend.i350, label %ifend63

ifend.i350:                                       ; preds = %ifend60
  %memberidx2.i348 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %131 = load ptr, ptr %memberidx2.i348, align 8
  %132 = tail call i64 @memcmp(ptr %131, ptr nonnull %128, i64 6)
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %common.ret, label %ifend63

ifend63:                                          ; preds = %ifend60, %ifend.i350
  %134 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %134, ptr noundef nonnull align 8 dereferenceable(6) @120, i64 6, i1 false)
  %135 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %135, align 8
  %memberidx.i.i352 = getelementptr inbounds %string, ptr %135, i64 0, i32 1
  store ptr %134, ptr %memberidx.i.i352, align 8
  %memberidx1.i.i353 = getelementptr inbounds %string, ptr %135, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i353, align 4
  %memberidx2.i.i354 = getelementptr inbounds %string, ptr %135, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i354, align 4
  %136 = load i64, ptr %memberidx.i, align 4
  %.not.i357 = icmp eq i64 %136, 6
  br i1 %.not.i357, label %ifend.i361, label %ifend66

ifend.i361:                                       ; preds = %ifend63
  %memberidx2.i359 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %137 = load ptr, ptr %memberidx2.i359, align 8
  %138 = tail call i64 @memcmp(ptr %137, ptr nonnull %134, i64 6)
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %common.ret, label %ifend66

ifend66:                                          ; preds = %ifend63, %ifend.i361
  %140 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %140, ptr noundef nonnull align 8 dereferenceable(6) @121, i64 6, i1 false)
  %141 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %141, align 8
  %memberidx.i.i363 = getelementptr inbounds %string, ptr %141, i64 0, i32 1
  store ptr %140, ptr %memberidx.i.i363, align 8
  %memberidx1.i.i364 = getelementptr inbounds %string, ptr %141, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i364, align 4
  %memberidx2.i.i365 = getelementptr inbounds %string, ptr %141, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i365, align 4
  %142 = load i64, ptr %memberidx.i, align 4
  %.not.i368 = icmp eq i64 %142, 6
  br i1 %.not.i368, label %ifend.i372, label %ifend69

ifend.i372:                                       ; preds = %ifend66
  %memberidx2.i370 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %143 = load ptr, ptr %memberidx2.i370, align 8
  %144 = tail call i64 @memcmp(ptr %143, ptr nonnull %140, i64 6)
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %common.ret, label %ifend69

ifend69:                                          ; preds = %ifend66, %ifend.i372
  %146 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %146, ptr noundef nonnull align 8 dereferenceable(6) @122, i64 6, i1 false)
  %147 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %147, align 8
  %memberidx.i.i374 = getelementptr inbounds %string, ptr %147, i64 0, i32 1
  store ptr %146, ptr %memberidx.i.i374, align 8
  %memberidx1.i.i375 = getelementptr inbounds %string, ptr %147, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i375, align 4
  %memberidx2.i.i376 = getelementptr inbounds %string, ptr %147, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i376, align 4
  %148 = load i64, ptr %memberidx.i, align 4
  %.not.i379 = icmp eq i64 %148, 6
  br i1 %.not.i379, label %ifend.i383, label %ifend72

ifend.i383:                                       ; preds = %ifend69
  %memberidx2.i381 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %149 = load ptr, ptr %memberidx2.i381, align 8
  %150 = tail call i64 @memcmp(ptr %149, ptr nonnull %146, i64 6)
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %common.ret, label %ifend72

ifend72:                                          ; preds = %ifend69, %ifend.i383
  %152 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %152, ptr noundef nonnull align 8 dereferenceable(7) @123, i64 7, i1 false)
  %153 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %153, align 8
  %memberidx.i.i385 = getelementptr inbounds %string, ptr %153, i64 0, i32 1
  store ptr %152, ptr %memberidx.i.i385, align 8
  %memberidx1.i.i386 = getelementptr inbounds %string, ptr %153, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i386, align 4
  %memberidx2.i.i387 = getelementptr inbounds %string, ptr %153, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i387, align 4
  %154 = load i64, ptr %memberidx.i, align 4
  %.not.i390 = icmp eq i64 %154, 7
  br i1 %.not.i390, label %ifend.i394, label %ifend75

ifend.i394:                                       ; preds = %ifend72
  %memberidx2.i392 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %155 = load ptr, ptr %memberidx2.i392, align 8
  %156 = tail call i64 @memcmp(ptr %155, ptr nonnull %152, i64 7)
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %common.ret, label %ifend75

ifend75:                                          ; preds = %ifend72, %ifend.i394
  %158 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %158, ptr noundef nonnull align 8 dereferenceable(7) @124, i64 7, i1 false)
  %159 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %159, align 8
  %memberidx.i.i396 = getelementptr inbounds %string, ptr %159, i64 0, i32 1
  store ptr %158, ptr %memberidx.i.i396, align 8
  %memberidx1.i.i397 = getelementptr inbounds %string, ptr %159, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i397, align 4
  %memberidx2.i.i398 = getelementptr inbounds %string, ptr %159, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i398, align 4
  %160 = load i64, ptr %memberidx.i, align 4
  %.not.i401 = icmp eq i64 %160, 7
  br i1 %.not.i401, label %ifend.i405, label %ifend78

ifend.i405:                                       ; preds = %ifend75
  %memberidx2.i403 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %161 = load ptr, ptr %memberidx2.i403, align 8
  %162 = tail call i64 @memcmp(ptr %161, ptr nonnull %158, i64 7)
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %common.ret, label %ifend78

ifend78:                                          ; preds = %ifend75, %ifend.i405
  %164 = tail call ptr @malloc(i32 8)
  store i64 6872318721989304159, ptr %164, align 8
  %165 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %165, align 8
  %memberidx.i.i407 = getelementptr inbounds %string, ptr %165, i64 0, i32 1
  store ptr %164, ptr %memberidx.i.i407, align 8
  %memberidx1.i.i408 = getelementptr inbounds %string, ptr %165, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i408, align 4
  %memberidx2.i.i409 = getelementptr inbounds %string, ptr %165, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i409, align 4
  %166 = load i64, ptr %memberidx.i, align 4
  %.not.i412 = icmp eq i64 %166, 8
  br i1 %.not.i412, label %ifend.i416, label %ifend81

ifend.i416:                                       ; preds = %ifend78
  %memberidx2.i414 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %167 = load ptr, ptr %memberidx2.i414, align 8
  %168 = tail call i64 @memcmp(ptr %167, ptr nonnull %164, i64 8)
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %common.ret, label %ifend81

ifend81:                                          ; preds = %ifend78, %ifend.i416
  %170 = tail call ptr @malloc(i32 8)
  store i64 6872318640384728927, ptr %170, align 8
  %171 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %171, align 8
  %memberidx.i.i418 = getelementptr inbounds %string, ptr %171, i64 0, i32 1
  store ptr %170, ptr %memberidx.i.i418, align 8
  %memberidx1.i.i419 = getelementptr inbounds %string, ptr %171, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i419, align 4
  %memberidx2.i.i420 = getelementptr inbounds %string, ptr %171, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i420, align 4
  %172 = load i64, ptr %memberidx.i, align 4
  %.not.i423 = icmp eq i64 %172, 8
  br i1 %.not.i423, label %ifend.i427, label %ifend84

ifend.i427:                                       ; preds = %ifend81
  %memberidx2.i425 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %173 = load ptr, ptr %memberidx2.i425, align 8
  %174 = tail call i64 @memcmp(ptr %173, ptr nonnull %170, i64 8)
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %common.ret, label %ifend84

ifend84:                                          ; preds = %ifend81, %ifend.i427
  %176 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %176, align 8
  %177 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %177, align 8
  %memberidx.i.i429 = getelementptr inbounds %string, ptr %177, i64 0, i32 1
  store ptr %176, ptr %memberidx.i.i429, align 8
  %memberidx1.i.i430 = getelementptr inbounds %string, ptr %177, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i430, align 4
  %memberidx2.i.i431 = getelementptr inbounds %string, ptr %177, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i431, align 4
  %178 = load i64, ptr %memberidx.i, align 4
  %.not.i434 = icmp eq i64 %178, 8
  br i1 %.not.i434, label %ifend.i438, label %ifend87

ifend.i438:                                       ; preds = %ifend84
  %memberidx2.i436 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %179 = load ptr, ptr %memberidx2.i436, align 8
  %180 = tail call i64 @memcmp(ptr %179, ptr nonnull %176, i64 8)
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %common.ret, label %ifend87

ifend87:                                          ; preds = %ifend84, %ifend.i438
  %182 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %182, ptr noundef nonnull align 8 dereferenceable(7) @125, i64 7, i1 false)
  %183 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %183, align 8
  %memberidx.i.i440 = getelementptr inbounds %string, ptr %183, i64 0, i32 1
  store ptr %182, ptr %memberidx.i.i440, align 8
  %memberidx1.i.i441 = getelementptr inbounds %string, ptr %183, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i441, align 4
  %memberidx2.i.i442 = getelementptr inbounds %string, ptr %183, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i442, align 4
  %184 = load i64, ptr %memberidx.i, align 4
  %.not.i445 = icmp eq i64 %184, 7
  br i1 %.not.i445, label %ifend.i449, label %common.ret

ifend.i449:                                       ; preds = %ifend87
  %memberidx2.i447 = getelementptr inbounds %string, ptr %0, i64 0, i32 1
  %185 = load ptr, ptr %memberidx2.i447, align 8
  %186 = tail call i64 @memcmp(ptr %185, ptr nonnull %182, i64 7)
  %187 = icmp eq i64 %186, 0
  br label %common.ret
}

define internal fastcc noalias ptr @bin_op_to_op_overload_name(i64 %0) unnamed_addr {
  switch i64 %0, label %common.ret [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 20, label %if.entry16
    i64 21, label %if.entry19
    i64 22, label %if.entry22
    i64 23, label %if.entry25
    i64 24, label %if.entry28
    i64 25, label %if.entry31
    i64 7, label %if.entry34
    i64 8, label %if.entry37
    i64 9, label %if.entry40
    i64 10, label %if.entry43
    i64 11, label %if.entry46
    i64 12, label %if.entry49
    i64 13, label %if.entry52
    i64 14, label %if.entry55
    i64 29, label %if.entry58
    i64 30, label %if.entry61
    i64 15, label %if.entry64
    i64 16, label %if.entry67
    i64 17, label %if.entry70
    i64 26, label %if.entry73
    i64 28, label %if.entry76
    i64 18, label %if.entry79
  ]

common.ret.sink.split:                            ; preds = %if.entry, %if.entry1, %if.entry4, %if.entry7, %if.entry10, %if.entry13, %if.entry16, %if.entry19, %if.entry22, %if.entry25, %if.entry28, %if.entry31, %if.entry34, %if.entry37, %if.entry40, %if.entry43, %if.entry46, %if.entry49, %if.entry52, %if.entry55, %if.entry58, %if.entry61, %if.entry64, %if.entry67, %if.entry70, %if.entry73, %if.entry76, %if.entry79
  %.sink193 = phi ptr [ %30, %if.entry79 ], [ %29, %if.entry76 ], [ %28, %if.entry73 ], [ %27, %if.entry70 ], [ %26, %if.entry67 ], [ %25, %if.entry64 ], [ %24, %if.entry61 ], [ %23, %if.entry58 ], [ %22, %if.entry55 ], [ %21, %if.entry52 ], [ %20, %if.entry49 ], [ %19, %if.entry46 ], [ %18, %if.entry43 ], [ %17, %if.entry40 ], [ %16, %if.entry37 ], [ %15, %if.entry34 ], [ %14, %if.entry31 ], [ %13, %if.entry28 ], [ %12, %if.entry25 ], [ %11, %if.entry22 ], [ %10, %if.entry19 ], [ %9, %if.entry16 ], [ %8, %if.entry13 ], [ %7, %if.entry10 ], [ %6, %if.entry7 ], [ %5, %if.entry4 ], [ %4, %if.entry1 ], [ %3, %if.entry ]
  %.sink191 = phi i64 [ 6, %if.entry79 ], [ 8, %if.entry76 ], [ 8, %if.entry73 ], [ 7, %if.entry70 ], [ 7, %if.entry67 ], [ 6, %if.entry64 ], [ 7, %if.entry61 ], [ 7, %if.entry58 ], [ 6, %if.entry55 ], [ 6, %if.entry52 ], [ 6, %if.entry49 ], [ 6, %if.entry46 ], [ 6, %if.entry43 ], [ 6, %if.entry40 ], [ 6, %if.entry37 ], [ 6, %if.entry34 ], [ 8, %if.entry31 ], [ 8, %if.entry28 ], [ 8, %if.entry25 ], [ 8, %if.entry22 ], [ 8, %if.entry19 ], [ 8, %if.entry16 ], [ 7, %if.entry13 ], [ 7, %if.entry10 ], [ 7, %if.entry7 ], [ 7, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i.i187 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %.sink193, ptr %memberidx.i.i187, align 8
  %memberidx1.i.i188 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %.sink191, ptr %memberidx1.i.i188, align 4
  %memberidx2.i.i189 = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %.sink191, ptr %memberidx2.i.i189, align 4
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %1
  %common.ret.op = phi ptr [ null, %1 ], [ %2, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %3 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @105, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @106, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry4:                                        ; preds = %1
  %5 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %5, ptr noundef nonnull align 8 dereferenceable(7) @107, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry7:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %6, ptr noundef nonnull align 8 dereferenceable(7) @108, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry10:                                       ; preds = %1
  %7 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %7, ptr noundef nonnull align 8 dereferenceable(7) @124, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry13:                                       ; preds = %1
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @123, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry16:                                       ; preds = %1
  %9 = tail call ptr @malloc(i32 8)
  store i64 6872318640199393119, ptr %9, align 8
  br label %common.ret.sink.split

if.entry19:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 8)
  store i64 6872318631895850847, ptr %10, align 8
  br label %common.ret.sink.split

if.entry22:                                       ; preds = %1
  %11 = tail call ptr @malloc(i32 8)
  store i64 6872318674845130591, ptr %11, align 8
  br label %common.ret.sink.split

if.entry25:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 8)
  store i64 6872318717592887135, ptr %12, align 8
  br label %common.ret.sink.split

if.entry28:                                       ; preds = %1
  %13 = tail call ptr @malloc(i32 8)
  store i64 6872318640384728927, ptr %13, align 8
  br label %common.ret.sink.split

if.entry31:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 8)
  store i64 6872318721989304159, ptr %14, align 8
  br label %common.ret.sink.split

if.entry34:                                       ; preds = %1
  %15 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %15, ptr noundef nonnull align 8 dereferenceable(6) @164, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry37:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %16, ptr noundef nonnull align 8 dereferenceable(6) @122, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry40:                                       ; preds = %1
  %17 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %17, ptr noundef nonnull align 8 dereferenceable(6) @118, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry43:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %18, ptr noundef nonnull align 8 dereferenceable(6) @121, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry46:                                       ; preds = %1
  %19 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %19, ptr noundef nonnull align 8 dereferenceable(6) @104, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry49:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %20, ptr noundef nonnull align 8 dereferenceable(6) @120, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry52:                                       ; preds = %1
  %21 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %21, ptr noundef nonnull align 8 dereferenceable(6) @113, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry55:                                       ; preds = %1
  %22 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %22, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry58:                                       ; preds = %1
  %23 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %23, ptr noundef nonnull align 8 dereferenceable(7) @115, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry61:                                       ; preds = %1
  %24 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %24, ptr noundef nonnull align 8 dereferenceable(7) @116, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry64:                                       ; preds = %1
  %25 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %25, ptr noundef nonnull align 8 dereferenceable(6) @109, i64 6, i1 false)
  br label %common.ret.sink.split

if.entry67:                                       ; preds = %1
  %26 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %26, ptr noundef nonnull align 8 dereferenceable(7) @165, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry70:                                       ; preds = %1
  %27 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %27, ptr noundef nonnull align 8 dereferenceable(7) @166, i64 7, i1 false)
  br label %common.ret.sink.split

if.entry73:                                       ; preds = %1
  %28 = tail call ptr @malloc(i32 8)
  store i64 6872318640367165279, ptr %28, align 8
  br label %common.ret.sink.split

if.entry76:                                       ; preds = %1
  %29 = tail call ptr @malloc(i32 8)
  store i64 6872318700514991967, ptr %29, align 8
  br label %common.ret.sink.split

if.entry79:                                       ; preds = %1
  %30 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %30, ptr noundef nonnull align 8 dereferenceable(6) @117, i64 6, i1 false)
  br label %common.ret.sink.split
}

define internal fastcc noalias ptr @dump_bin_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend54 [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 7, label %if.entry16
    i64 8, label %if.entry19
    i64 9, label %if.entry22
    i64 10, label %if.entry25
    i64 11, label %if.entry28
    i64 12, label %if.entry31
    i64 13, label %if.entry34
    i64 14, label %if.entry37
    i64 15, label %if.entry40
    i64 16, label %if.entry43
    i64 17, label %if.entry46
    i64 18, label %if.entry49
    i64 19, label %if.entry52
  ]

common.ret:                                       ; preds = %ifend54, %if.entry52, %if.entry49, %if.entry46, %if.entry43, %if.entry40, %if.entry37, %if.entry34, %if.entry31, %if.entry28, %if.entry25, %if.entry22, %if.entry19, %if.entry16, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink133 = phi ptr [ %22, %ifend54 ], [ %21, %if.entry52 ], [ %20, %if.entry49 ], [ %19, %if.entry46 ], [ %18, %if.entry43 ], [ %17, %if.entry40 ], [ %16, %if.entry37 ], [ %15, %if.entry34 ], [ %14, %if.entry31 ], [ %13, %if.entry28 ], [ %12, %if.entry25 ], [ %11, %if.entry22 ], [ %10, %if.entry19 ], [ %9, %if.entry16 ], [ %8, %if.entry13 ], [ %7, %if.entry10 ], [ %6, %if.entry7 ], [ %5, %if.entry4 ], [ %4, %if.entry1 ], [ %3, %if.entry ]
  %.sink131 = phi i64 [ 2, %ifend54 ], [ 1, %if.entry52 ], [ 2, %if.entry49 ], [ 1, %if.entry46 ], [ 3, %if.entry43 ], [ 2, %if.entry40 ], [ 2, %if.entry37 ], [ 2, %if.entry34 ], [ 2, %if.entry31 ], [ 2, %if.entry28 ], [ 2, %if.entry25 ], [ 1, %if.entry22 ], [ 2, %if.entry19 ], [ 1, %if.entry16 ], [ 1, %if.entry13 ], [ 2, %if.entry10 ], [ 1, %if.entry7 ], [ 1, %if.entry4 ], [ 1, %if.entry1 ], [ 1, %if.entry ]
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i.i127 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %.sink133, ptr %memberidx.i.i127, align 8
  %memberidx1.i.i128 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %.sink131, ptr %memberidx1.i.i128, align 4
  %memberidx2.i.i129 = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %.sink131, ptr %memberidx2.i.i129, align 4
  ret ptr %2

if.entry:                                         ; preds = %1
  %3 = tail call ptr @malloc(i32 1)
  store i8 43, ptr %3, align 8
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 1)
  store i8 45, ptr %4, align 8
  br label %common.ret

if.entry4:                                        ; preds = %1
  %5 = tail call ptr @malloc(i32 1)
  store i8 42, ptr %5, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 1)
  store i8 47, ptr %6, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %7 = tail call ptr @malloc(i32 2)
  store i16 10794, ptr %7, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %8 = tail call ptr @malloc(i32 1)
  store i8 94, ptr %8, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %9 = tail call ptr @malloc(i32 1)
  store i8 62, ptr %9, align 8
  br label %common.ret

if.entry19:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 2)
  store i16 15678, ptr %10, align 8
  br label %common.ret

if.entry22:                                       ; preds = %1
  %11 = tail call ptr @malloc(i32 1)
  store i8 60, ptr %11, align 8
  br label %common.ret

if.entry25:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 2)
  store i16 15676, ptr %12, align 8
  br label %common.ret

if.entry28:                                       ; preds = %1
  %13 = tail call ptr @malloc(i32 2)
  store i16 15677, ptr %13, align 8
  br label %common.ret

if.entry31:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 2)
  store i16 15649, ptr %14, align 8
  br label %common.ret

if.entry34:                                       ; preds = %1
  %15 = tail call ptr @malloc(i32 2)
  store i16 15420, ptr %15, align 8
  br label %common.ret

if.entry37:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 2)
  store i16 15934, ptr %16, align 8
  br label %common.ret

if.entry40:                                       ; preds = %1
  %17 = tail call ptr @malloc(i32 2)
  store i16 29295, ptr %17, align 8
  br label %common.ret

if.entry43:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %18, ptr noundef nonnull align 8 dereferenceable(3) @34, i64 3, i1 false)
  br label %common.ret

if.entry46:                                       ; preds = %1
  %19 = tail call ptr @malloc(i32 1)
  store i8 94, ptr %19, align 8
  br label %common.ret

if.entry49:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 2)
  store i16 28265, ptr %20, align 8
  br label %common.ret

if.entry52:                                       ; preds = %1
  %21 = tail call ptr @malloc(i32 1)
  store i8 61, ptr %21, align 8
  br label %common.ret

ifend54:                                          ; preds = %1
  %22 = tail call ptr @malloc(i32 2)
  store i16 11822, ptr %22, align 8
  br label %common.ret
}

define internal fastcc void @check_cast_lower_bits(ptr nocapture %0, ptr nocapture %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %1, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %6 = load ptr, ptr %memberidx2, align 8
  %7 = load i64, ptr %4, align 4
  %8 = load i64, ptr %6, align 4
  %.not = icmp eq i64 %7, %8
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %2
  %9 = and i64 %7, -2
  %10 = icmp eq i64 %9, 8
  %11 = add i64 %8, -1
  %12 = icmp ult i64 %11, 7
  %13 = and i1 %10, %12
  br i1 %13, label %if.entry5, label %else6

ifend:                                            ; preds = %if.entry10, %ifend17, %if.entry5, %2
  ret void

if.entry5:                                        ; preds = %if.entry
  %14 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %14, align 4
  %memberidx.i.i.i59 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i59, align 4
  %memberidx1.i.i.i60 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 1
  %memberidx.i.i61 = getelementptr inbounds %TypeCastExpression, ptr %14, i64 0, i32 4
  store ptr %5, ptr %memberidx.i.i61, align 8
  %memberidx1.i.i62 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 3
  store ptr %4, ptr %memberidx1.i.i62, align 8
  %memberidx3.i.i64 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 1
  %15 = load i1, ptr %memberidx3.i.i64, align 1
  store i1 %15, ptr %memberidx1.i.i.i60, align 1
  store ptr %14, ptr %1, align 8
  br label %ifend

else6:                                            ; preds = %if.entry
  %16 = add i64 %7, -1
  %17 = icmp ult i64 %16, 7
  %18 = and i64 %8, -2
  %19 = icmp eq i64 %18, 8
  %20 = and i1 %17, %19
  br i1 %20, label %if.entry10, label %else11

if.entry10:                                       ; preds = %else6
  %21 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %21, align 4
  %memberidx.i.i.i65 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i65, align 4
  %memberidx1.i.i.i66 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %memberidx.i.i67 = getelementptr inbounds %TypeCastExpression, ptr %21, i64 0, i32 4
  store ptr %3, ptr %memberidx.i.i67, align 8
  %memberidx1.i.i68 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  store ptr %6, ptr %memberidx1.i.i68, align 8
  %memberidx3.i.i70 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 1
  %22 = load i1, ptr %memberidx3.i.i70, align 1
  store i1 %22, ptr %memberidx1.i.i.i66, align 1
  store ptr %21, ptr %0, align 8
  br label %ifend

else11:                                           ; preds = %else6
  %23 = icmp sgt i64 %7, %8
  %ternary.i = select i1 %23, ptr %4, ptr %6
  %24 = load i64, ptr %ternary.i, align 4
  %25 = add i64 %24, -1
  %26 = icmp ult i64 %25, 7
  %27 = and i1 %12, %26
  br i1 %27, label %if.entry15, label %ifend17

if.entry15:                                       ; preds = %else11
  %memberidx18 = getelementptr inbounds %IntType, ptr %ternary.i, i64 0, i32 1
  %28 = load i1, ptr %memberidx18, align 1
  %memberidx19 = getelementptr inbounds %IntType, ptr %6, i64 0, i32 1
  %29 = load i1, ptr %memberidx19, align 1
  %30 = xor i1 %28, %29
  br i1 %30, label %if.entry20, label %ifend17

ifend17:                                          ; preds = %if.entry20, %if.entry15, %else11
  %31 = phi ptr [ %.pre, %if.entry20 ], [ %3, %if.entry15 ], [ %3, %else11 ]
  %32 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %32, align 4
  %memberidx.i.i.i53 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i53, align 4
  %memberidx1.i.i.i54 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 1
  %memberidx.i.i55 = getelementptr inbounds %TypeCastExpression, ptr %32, i64 0, i32 4
  store ptr %31, ptr %memberidx.i.i55, align 8
  %memberidx1.i.i56 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i56, align 8
  %memberidx3.i.i58 = getelementptr inbounds %Expression, ptr %31, i64 0, i32 1
  %33 = load i1, ptr %memberidx3.i.i58, align 1
  store i1 %33, ptr %memberidx1.i.i.i54, align 1
  store ptr %32, ptr %0, align 8
  %34 = load ptr, ptr %1, align 8
  %35 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %35, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %TypeCastExpression, ptr %35, i64 0, i32 4
  store ptr %34, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Expression, ptr %34, i64 0, i32 1
  %36 = load i1, ptr %memberidx3.i.i, align 1
  store i1 %36, ptr %memberidx1.i.i.i, align 1
  store ptr %35, ptr %1, align 8
  br label %ifend

if.entry20:                                       ; preds = %if.entry15
  store i1 true, ptr %memberidx19, align 1
  store i1 true, ptr %memberidx18, align 1
  %.pre = load ptr, ptr %0, align 8
  br label %ifend17
}

define internal fastcc noalias ptr @dump_unary_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend15 [
    i64 2, label %if.entry
    i64 3, label %if.entry1
    i64 4, label %if.entry4
    i64 5, label %if.entry7
    i64 6, label %if.entry10
    i64 7, label %if.entry13
  ]

common.ret:                                       ; preds = %ifend15, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink42 = phi ptr [ %9, %ifend15 ], [ %8, %if.entry13 ], [ %7, %if.entry10 ], [ %6, %if.entry7 ], [ %5, %if.entry4 ], [ %4, %if.entry1 ], [ %3, %if.entry ]
  %.sink40 = phi i64 [ 1, %ifend15 ], [ 1, %if.entry13 ], [ 1, %if.entry10 ], [ 8, %if.entry7 ], [ 8, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %2 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %2, align 8
  %memberidx.i.i36 = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  store ptr %.sink42, ptr %memberidx.i.i36, align 8
  %memberidx1.i.i37 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  store i64 %.sink40, ptr %memberidx1.i.i37, align 4
  %memberidx2.i.i38 = getelementptr inbounds %string, ptr %2, i64 0, i32 3
  store i64 %.sink40, ptr %memberidx2.i.i38, align 4
  ret ptr %2

if.entry:                                         ; preds = %1
  %3 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @173, i64 7, i1 false)
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @174, i64 7, i1 false)
  br label %common.ret

if.entry4:                                        ; preds = %1
  %5 = tail call ptr @malloc(i32 8)
  store i64 3110625547759087656, ptr %5, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 8)
  store i64 3255303685788364840, ptr %6, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %7 = tail call ptr @malloc(i32 1)
  store i8 45, ptr %7, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %8 = tail call ptr @malloc(i32 1)
  store i8 33, ptr %8, align 8
  br label %common.ret

ifend15:                                          ; preds = %1
  %9 = tail call ptr @malloc(i32 1)
  store i8 38, ptr %9, align 8
  br label %common.ret
}

define internal fastcc ptr @CodeGen_store_expr_to_mem(ptr nocapture %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %args = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %Expression, ptr %3, i64 0, i32 2
  %5 = load i64, ptr %memberidx, align 4
  %6 = icmp ne i64 %5, 6
  %memberidx1 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 1
  %7 = load i1, ptr %memberidx1, align 1
  %8 = or i1 %7, %6
  br i1 %8, label %else, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx2 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = load i64, ptr %9, align 4
  %.not = icmp eq i64 %10, 19
  br i1 %.not, label %ifend6, label %if.entry4

else:                                             ; preds = %4
  %11 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %3)
  br label %ifend

common.ret:                                       ; preds = %if.entry4, %ifend
  %common.ret.op = phi ptr [ %value.0, %ifend ], [ %18, %if.entry4 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else, %ifend6
  %value.0 = phi ptr [ %19, %ifend6 ], [ %11, %else ]
  %12 = tail call ptr @LLVMBuildStore(ptr %1, ptr %value.0, ptr %2)
  br label %common.ret

if.entry4:                                        ; preds = %if.entry
  %13 = tail call ptr @LLVMIntType(i64 64)
  %14 = tail call ptr @LLVMConstInt(ptr %13, i64 0, i1 false)
  store ptr %14, ptr %args, align 8
  %15 = getelementptr inbounds ptr, ptr %args, i64 1
  store ptr %14, ptr %15, align 8
  %16 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %9, i1 true)
  %17 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %16, ptr %2, ptr nonnull %args, i64 2, ptr nonnull @71)
  %18 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %17, ptr nonnull %3)
  br label %common.ret

ifend6:                                           ; preds = %if.entry
  %19 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %9, ptr nonnull %3)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_array_exp(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 19
  br i1 %6, label %if.entry, label %ifend

common.ret:                                       ; preds = %for.end, %if.entry
  %common.ret.op = phi ptr [ %7, %if.entry ], [ %38, %for.end ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %7 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %4, ptr nonnull %2)
  br label %common.ret

ifend:                                            ; preds = %3
  %memberidx3 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 1
  %8 = load i1, ptr %memberidx3, align 1
  br i1 %8, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend
  %9 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %9, ptr noundef nonnull align 8 dereferenceable(54) @234, i64 54, i1 false)
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i, align 4
  %11 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %11, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %12, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  store ptr %11, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %13 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %14 = tail call ptr %13(ptr nonnull %12)
  %15 = load i64, ptr %memberidx1.i.i.i, align 4
  tail call void @write(i64 1, ptr %14, i64 %15)
  %16 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %16)
  tail call void @free(ptr %12)
  %17 = load ptr, ptr %10, align 8
  %memberidx.i.i.i36 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %17, i64 0, i32 3
  %18 = load ptr, ptr %memberidx.i.i.i36, align 8
  %19 = tail call ptr %18(ptr nonnull %10)
  %20 = load i64, ptr %memberidx1.i.i, align 4
  tail call void @write(i64 1, ptr %19, i64 %20)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  %21 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %21)
  tail call void @free(ptr %10)
  tail call void @exit(i64 -1)
  %.pre = load ptr, ptr %memberidx, align 8
  br label %ifend6

ifend6:                                           ; preds = %ifend, %if.entry4
  %22 = phi ptr [ %4, %ifend ], [ %.pre, %if.entry4 ]
  %memberidx8 = getelementptr inbounds %ArrayType, ptr %22, i64 0, i32 1
  %23 = load ptr, ptr %memberidx8, align 8
  %24 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %23, i1 true)
  %memberidx9 = getelementptr inbounds %ArrayExpression, ptr %2, i64 0, i32 4
  %25 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Expression_, ptr %25, i64 0, i32 2
  %26 = load i64, ptr %memberidx10, align 4
  %27 = alloca ptr, i64 %26, align 8
  %28 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %25, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i, align 8
  %30 = load i64, ptr %memberidx10, align 4
  store i1 false, ptr %28, align 1
  %memberidx1.i.i29 = getelementptr inbounds %ArrayIterator_Expression_, ptr %28, i64 0, i32 1
  %memberidx2.i.i30 = getelementptr inbounds %ArrayIterator_Expression_, ptr %28, i64 0, i32 3
  store ptr %29, ptr %memberidx2.i.i30, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %28, i64 0, i32 2
  store i64 %30, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i29, align 4
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %for.end, label %for.body

for.body:                                         ; preds = %ifend6, %for.body
  %32 = phi i64 [ %35, %for.body ], [ 1, %ifend6 ]
  %value.041.in = phi ptr [ %ptridx.i34, %for.body ], [ %29, %ifend6 ]
  %idx.040 = phi i64 [ %33, %for.body ], [ 0, %ifend6 ]
  %value.041 = load ptr, ptr %value.041.in, align 8
  %33 = add nuw nsw i64 %idx.040, 1
  %ptridx = getelementptr inbounds ptr, ptr %27, i64 %idx.040
  %34 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.041)
  store ptr %34, ptr %ptridx, align 8
  %35 = add nuw nsw i64 %32, 1
  store i64 %35, ptr %memberidx1.i.i29, align 4
  %ptridx.i34 = getelementptr inbounds ptr, ptr %29, i64 %32
  %.not = icmp slt i64 %32, %30
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend6
  tail call void @free(ptr nonnull %28)
  %36 = load ptr, ptr %memberidx9, align 8
  %memberidx14 = getelementptr inbounds %Array_Expression_, ptr %36, i64 0, i32 2
  %37 = load i64, ptr %memberidx14, align 4
  %38 = call ptr @LLVMConstArray(ptr %24, ptr nonnull %27, i64 %37)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_var_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 1
  %9 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %10, i64 %9
  %11 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 1
  %12 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Var_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx2 = getelementptr inbounds %Var, ptr %15, i64 0, i32 2
  %16 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 3
  %17 = load i1, ptr %memberidx3, align 1
  br i1 %17, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %memberidx4 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 1
  %18 = load ptr, ptr %memberidx4, align 8
  %19 = load ptr, ptr %18, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %19, i64 0, i32 5
  %20 = load ptr, ptr %memberidx5, align 8
  %21 = tail call ptr %20(ptr nonnull %18)
  %22 = load ptr, ptr %15, align 8
  %23 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %22, i1 true)
  %24 = load ptr, ptr %0, align 8
  %25 = tail call ptr @LLVMAddGlobal(ptr %24, ptr %23, ptr %21)
  %.not31 = icmp eq ptr %16, null
  br i1 %.not31, label %ifend10, label %if.entry8

else:                                             ; preds = %3
  %memberidx.i32 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %26 = load ptr, ptr %memberidx.i32, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %27 = load i64, ptr %6, align 4
  %28 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @222, i64 %9, i64 %27, i64 %13)
  %29 = load ptr, ptr %5, align 8
  %30 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %30, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 1
  store ptr %29, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 2
  store i64 %28, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %30, i64 0, i32 3
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %31 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %30)
  %memberidx.i40 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %26, i64 0, i32 1
  %32 = load i64, ptr %memberidx.i40, align 4
  %33 = urem i64 %31, %32
  %34 = load ptr, ptr %26, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %34, i64 %33
  %35 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %35, null
  br i1 %.not.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %else, %else.i
  %36 = phi ptr [ %46, %else.i ], [ %34, %else ]
  %37 = phi i64 [ %47, %else.i ], [ %32, %else ]
  %38 = phi ptr [ %50, %else.i ], [ %35, %else ]
  %hash.0.i = phi i64 [ %49, %else.i ], [ %33, %else ]
  %39 = load ptr, ptr %38, align 8
  %memberidx.i.i41 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  %40 = load i64, ptr %memberidx.i.i41, align 4
  %41 = load i64, ptr %memberidx1.i.i.i, align 4
  %.not.i.i = icmp eq i64 %40, %41
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i42 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  %42 = load ptr, ptr %memberidx2.i.i42, align 8
  %43 = load ptr, ptr %memberidx.i.i.i, align 8
  %44 = call i64 @memcmp(ptr %42, ptr %43, i64 %40)
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i40, align 4
  %.pre45 = load ptr, ptr %26, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre46.pre = load ptr, ptr %26, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre46.pre, i64 %hash.0.i
  %.pre47.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre47.pre, null
  br i1 %.not29.i, label %Map_string_LLVMValueRef____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %46 = phi ptr [ %.pre45, %ifend.i.i.else.i_crit_edge ], [ %36, %while.entry.i ]
  %47 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %37, %while.entry.i ]
  %48 = add nuw i64 %hash.0.i, 1
  %49 = urem i64 %48, %47
  %ptridx7.i = getelementptr inbounds ptr, ptr %46, i64 %49
  %50 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %50, null
  br i1 %.not30.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre47.pre, i64 0, i32 1
  %51 = load ptr, ptr %memberidx15.i, align 8
  br label %Map_string_LLVMValueRef____getitem__.exit

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %else, %while.end.i, %if.entry10.i
  %common.ret.op.i = phi ptr [ %51, %if.entry10.i ], [ null, %while.end.i ], [ null, %else ], [ null, %else.i ]
  %.not = icmp eq ptr %16, null
  br i1 %.not, label %ifend, label %if.entry11

ifend:                                            ; preds = %if.entry11, %Map_string_LLVMValueRef____getitem__.exit, %ifend10
  ret void

if.entry8:                                        ; preds = %if.entry
  %52 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %16)
  tail call void @LLVMSetInitializer(ptr %25, ptr %52)
  br label %ifend10

ifend10:                                          ; preds = %if.entry, %if.entry8
  %memberidx.i34 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %53 = load ptr, ptr %memberidx.i34, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %54 = load i64, ptr %memberidx1.i, align 4
  %55 = load i64, ptr %6, align 4
  %56 = load i64, ptr %memberidx3.i, align 4
  %57 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @222, i64 %54, i64 %55, i64 %56)
  %58 = load ptr, ptr %4, align 8
  %59 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %59, align 8
  %memberidx.i.i.i37 = getelementptr inbounds %string, ptr %59, i64 0, i32 1
  store ptr %58, ptr %memberidx.i.i.i37, align 8
  %memberidx1.i.i.i38 = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  store i64 %57, ptr %memberidx1.i.i.i38, align 4
  %memberidx2.i.i.i39 = getelementptr inbounds %string, ptr %59, i64 0, i32 3
  store i64 %57, ptr %memberidx2.i.i.i39, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %53, ptr nonnull %59, ptr %25)
  br label %ifend

if.entry11:                                       ; preds = %Map_string_LLVMValueRef____getitem__.exit
  %60 = call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i, ptr nonnull %16)
  br label %ifend
}

define internal fastcc void @CodeGen_codegen_const_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 2
  %5 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %9, i64 %8
  %10 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 2
  %11 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %5, i64 0, i32 2
  %12 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Const_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx2 = getelementptr inbounds %Const, ptr %14, i64 0, i32 2
  %15 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx3, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %16, i1 true)
  %memberidx4 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 1
  %18 = load ptr, ptr %memberidx4, align 8
  %19 = load ptr, ptr %18, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %19, i64 0, i32 5
  %20 = load ptr, ptr %memberidx5, align 8
  %21 = tail call ptr %20(ptr nonnull %18)
  %memberidx6 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 3
  %22 = load i1, ptr %memberidx6, align 1
  br i1 %22, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %23 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %15)
  %24 = load ptr, ptr %0, align 8
  %25 = tail call ptr @LLVMAddGlobal(ptr %24, ptr %17, ptr %21)
  tail call void @LLVMSetInitializer(ptr %25, ptr %23)
  tail call void @LLVMSetGlobalConstant(ptr %25, i1 true)
  br label %ifend

else:                                             ; preds = %3
  %26 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %17, ptr %21)
  %27 = tail call fastcc ptr @CodeGen_store_expr_to_mem(ptr nonnull %0, ptr %1, ptr %26, ptr nonnull %15)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %ptr.0 = phi ptr [ %25, %if.entry ], [ %26, %else ]
  %memberidx.i25 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %28 = load ptr, ptr %memberidx.i25, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %29 = load i64, ptr %memberidx1.i, align 4
  %30 = load i64, ptr %5, align 4
  %31 = load i64, ptr %memberidx3.i, align 4
  %32 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @222, i64 %29, i64 %30, i64 %31)
  %33 = load ptr, ptr %4, align 8
  %34 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 %32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 %32, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %28, ptr nonnull %34, ptr %ptr.0)
  ret void
}

define internal fastcc void @Map_string_LLVMValueRef__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.041 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.041
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.041, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.040 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %i1.040
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %i1.040, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_LLVMValueRef____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_LLVMValueRef__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i38 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %25, %ifend9 ], [ %13, %while.entry.preheader ]
  %16 = phi i64 [ %26, %ifend9 ], [ %11, %while.entry.preheader ]
  %17 = phi ptr [ %29, %ifend9 ], [ %14, %while.entry.preheader ]
  %hash.0 = phi i64 [ %28, %ifend9 ], [ %12, %while.entry.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = load i64, ptr %memberidx1.i38, align 4
  %.not.i = icmp eq i64 %19, %20
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load ptr, ptr %memberidx3.i, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %ifend15.loopexit, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre45 = load ptr, ptr %0, align 8
  br label %ifend9

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %25 = phi ptr [ %.pre45, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %26 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %27 = add nuw i64 %hash.0, 1
  %28 = urem i64 %27, %26
  %ptridx12 = getelementptr inbounds ptr, ptr %25, i64 %28
  %29 = load ptr, ptr %ptridx12, align 8
  %.not37 = icmp eq ptr %29, null
  br i1 %.not37, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %30 = phi ptr [ %13, %ifend ], [ %25, %ifend9 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %28, %ifend9 ]
  %31 = load i64, ptr %memberidx, align 4
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx, align 4
  br label %ifend15

ifend15.loopexit:                                 ; preds = %ifend.i
  %.pre46 = load ptr, ptr %0, align 8
  br label %ifend15

ifend15:                                          ; preds = %ifend15.loopexit, %if.entry13
  %33 = phi ptr [ %30, %if.entry13 ], [ %.pre46, %ifend15.loopexit ]
  %hash.141 = phi i64 [ %hash.1.ph, %if.entry13 ], [ %hash.0, %ifend15.loopexit ]
  %ptridx19 = getelementptr inbounds ptr, ptr %33, i64 %hash.141
  %34 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %34, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %34, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %34, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @24, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_store_array_elements(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %next_args = alloca [1 x ptr], align 8
  %4 = tail call ptr @LLVMIntType(i64 64)
  %5 = tail call ptr @LLVMConstInt(ptr %4, i64 1, i1 false)
  store ptr %5, ptr %next_args, align 8
  %6 = tail call ptr @LLVMTypeOf(ptr %2)
  %memberidx = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %8 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 2
  %10 = load i64, ptr %memberidx1.i, align 4
  %11 = icmp slt i64 %10, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %value.019.in = phi ptr [ %ptridx.i15, %for.body ], [ %9, %for.entry ]
  %addr.018 = phi ptr [ %15, %for.body ], [ %2, %for.entry ]
  %value.019 = load ptr, ptr %value.019.in, align 8
  %13 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.019)
  %14 = call ptr @LLVMBuildStore(ptr %1, ptr %13, ptr %addr.018)
  %15 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %6, ptr %addr.018, ptr nonnull %next_args, i64 1, ptr nonnull @71)
  %16 = add nuw nsw i64 %12, 1
  %ptridx.i15 = getelementptr inbounds ptr, ptr %9, i64 %12
  %.not = icmp slt i64 %12, %10
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %addr.0.lcssa = phi ptr [ %2, %for.entry ], [ %15, %for.body ]
  tail call void @free(ptr nonnull %8)
  ret ptr %addr.0.lcssa
}

define internal fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %Program, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i, align 8
  %6 = load i64, ptr %2, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %7, i64 %6
  %8 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %2, i64 0, i32 1
  %10 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %11, i64 %10
  %12 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx2 = getelementptr inbounds %Scope, ptr %12, i64 0, i32 1
  %13 = load ptr, ptr %memberidx2, align 8
  %14 = tail call ptr @malloc(i32 25)
  %15 = load ptr, ptr %13, align 8
  %memberidx1.i = getelementptr inbounds %Map_string_VarId_, ptr %13, i64 0, i32 1
  %16 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i50 = getelementptr inbounds %Map_string_VarId_, ptr %13, i64 0, i32 2
  %17 = load i64, ptr %memberidx2.i50, align 4
  %memberidx1.i.i = getelementptr inbounds %MapIterator_string_VarId_, ptr %14, i64 0, i32 1
  store ptr %15, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_string_VarId_, ptr %14, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_VarId_, ptr %14, i64 0, i32 3
  %18 = add nsw i64 %16, -1
  store i64 %18, ptr %memberidx2.i.i, align 4
  %19 = icmp sgt i64 %16, 0
  br i1 %19, label %while.entry.i, label %MapIterator_string_VarId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %20 = phi i64 [ %23, %ifend.i ], [ %18, %for.entry ]
  %21 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %15, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %21, i64 1
  %22 = load ptr, ptr %21, align 8
  %.not.i = icmp eq ptr %22, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_VarId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %23 = add nsw i64 %20, -1
  store i64 %23, ptr %memberidx2.i.i, align 4
  %24 = icmp sgt i64 %20, 0
  br i1 %24, label %while.entry.i, label %MapIterator_string_VarId__next.exit.loopexit

MapIterator_string_VarId__next.exit.loopexit:     ; preds = %ifend.i, %while.entry.i
  %25 = phi i64 [ %23, %ifend.i ], [ %20, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_VarId__next.exit

MapIterator_string_VarId__next.exit:              ; preds = %MapIterator_string_VarId__next.exit.loopexit, %for.entry
  %26 = phi i64 [ %25, %MapIterator_string_VarId__next.exit.loopexit ], [ %18, %for.entry ]
  %.pn111 = phi ptr [ %incdec.ptr.i, %MapIterator_string_VarId__next.exit.loopexit ], [ %15, %for.entry ]
  %storemerge102105 = add nsw i64 %17, -1
  store i64 %storemerge102105, ptr %memberidx3.i.i, align 4
  %storemerge106 = icmp slt i64 %17, 1
  store i1 %storemerge106, ptr %14, align 1
  br i1 %storemerge106, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_string_VarId__next.exit
  %memberidx.i68 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_VarId__next.exit80
  %27 = phi i64 [ %storemerge102105, %for.body.lr.ph ], [ %storemerge102, %MapIterator_string_VarId__next.exit80 ]
  %28 = phi i64 [ %26, %for.body.lr.ph ], [ %66, %MapIterator_string_VarId__next.exit80 ]
  %memberidx1.i.i.promoted = phi ptr [ %.pn111, %for.body.lr.ph ], [ %.pn110, %MapIterator_string_VarId__next.exit80 ]
  %var_value_type.0107 = phi ptr [ undef, %for.body.lr.ph ], [ %var_value_type.1, %MapIterator_string_VarId__next.exit80 ]
  %var_entry.0.in = getelementptr inbounds ptr, ptr %memberidx1.i.i.promoted, i64 -1
  %var_entry.0 = load ptr, ptr %var_entry.0.in, align 8
  %29 = load ptr, ptr %var_entry.0, align 8
  %memberidx5 = getelementptr inbounds %MapEntry_string_VarId_, ptr %var_entry.0, i64 0, i32 1
  %30 = load ptr, ptr %memberidx5, align 8
  %31 = load i64, ptr %30, align 4
  switch i64 %31, label %ifend [
    i64 1, label %if.entry
    i64 0, label %if.entry10
    i64 2, label %if.entry16
  ]

for.end:                                          ; preds = %MapIterator_string_VarId__next.exit80, %MapIterator_string_VarId__next.exit
  tail call void @free(ptr nonnull %14)
  %memberidx23 = getelementptr inbounds %Scope, ptr %12, i64 0, i32 7
  %32 = load ptr, ptr %memberidx23, align 8
  %33 = call ptr @malloc(i32 25)
  %memberidx.i53 = getelementptr inbounds %Array_ScopeId_, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i53, align 8
  %memberidx1.i54 = getelementptr inbounds %Array_ScopeId_, ptr %32, i64 0, i32 2
  %35 = load i64, ptr %memberidx1.i54, align 4
  store i1 false, ptr %33, align 1
  %memberidx1.i.i55 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %33, i64 0, i32 1
  %memberidx2.i.i56 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %33, i64 0, i32 3
  store ptr %34, ptr %memberidx2.i.i56, align 8
  %memberidx3.i.i57 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %33, i64 0, i32 2
  store i64 %35, ptr %memberidx3.i.i57, align 4
  store i64 1, ptr %memberidx1.i.i55, align 4
  %36 = icmp slt i64 %35, 1
  br i1 %36, label %for.end27, label %for.body25

if.entry:                                         ; preds = %for.body
  %37 = load ptr, ptr %memberidx, align 8
  %memberidx.i60 = getelementptr inbounds %Program, ptr %37, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i60, align 8
  %memberidx1.i61 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %39 = load i64, ptr %memberidx1.i61, align 4
  %memberidx.i.i62 = getelementptr inbounds %Array_Module_, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i.i62, align 8
  %ptridx.i.i63 = getelementptr inbounds ptr, ptr %40, i64 %39
  %41 = load ptr, ptr %ptridx.i.i63, align 8
  %memberidx2.i64 = getelementptr inbounds %Module, ptr %41, i64 0, i32 1
  %42 = load ptr, ptr %memberidx2.i64, align 8
  %memberidx3.i65 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %43 = load i64, ptr %memberidx3.i65, align 4
  %memberidx.i5.i66 = getelementptr inbounds %Array_Var_, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i5.i66, align 8
  %ptridx.i6.i67 = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i6.i67, align 8
  br label %ifend.sink.split

ifend.sink.split:                                 ; preds = %if.entry, %if.entry10, %if.entry16
  %.sink = phi ptr [ %84, %if.entry16 ], [ %memberidx14, %if.entry10 ], [ %45, %if.entry ]
  %46 = load ptr, ptr %.sink, align 8
  br label %ifend

ifend:                                            ; preds = %ifend.sink.split, %for.body
  %var_value_type.1 = phi ptr [ %var_value_type.0107, %for.body ], [ %46, %ifend.sink.split ]
  %47 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %var_value_type.1, i1 true)
  %48 = load ptr, ptr %29, align 8
  %memberidx21 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %48, i64 0, i32 5
  %49 = load ptr, ptr %memberidx21, align 8
  %50 = call ptr %49(ptr nonnull %29)
  %51 = call ptr @LLVMBuildAlloca(ptr %1, ptr %47, ptr %50)
  %52 = load ptr, ptr %memberidx.i68, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i.i69 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %53 = load i64, ptr %memberidx.i.i69, align 4
  %54 = load i64, ptr %30, align 4
  %memberidx2.i.i70 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %55 = load i64, ptr %memberidx2.i.i70, align 4
  %56 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @222, i64 %53, i64 %54, i64 %55)
  %57 = load ptr, ptr %3, align 8
  %58 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 %56, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %52, ptr nonnull %58, ptr %51)
  %59 = add nsw i64 %28, -1
  store i64 %59, ptr %memberidx2.i.i, align 4
  %60 = icmp sgt i64 %28, 0
  br i1 %60, label %while.entry.i75, label %MapIterator_string_VarId__next.exit80

while.entry.i75:                                  ; preds = %ifend, %ifend.i79
  %61 = phi i64 [ %64, %ifend.i79 ], [ %59, %ifend ]
  %62 = phi ptr [ %incdec.ptr.i73, %ifend.i79 ], [ %memberidx1.i.i.promoted, %ifend ]
  %incdec.ptr.i73 = getelementptr inbounds ptr, ptr %62, i64 1
  %63 = load ptr, ptr %62, align 8
  %.not.i74 = icmp eq ptr %63, null
  br i1 %.not.i74, label %ifend.i79, label %MapIterator_string_VarId__next.exit80.loopexit

ifend.i79:                                        ; preds = %while.entry.i75
  %64 = add nsw i64 %61, -1
  store i64 %64, ptr %memberidx2.i.i, align 4
  %.not112 = icmp eq i64 %61, 0
  br i1 %.not112, label %MapIterator_string_VarId__next.exit80.loopexit, label %while.entry.i75

MapIterator_string_VarId__next.exit80.loopexit:   ; preds = %ifend.i79, %while.entry.i75
  %65 = phi i64 [ -1, %ifend.i79 ], [ %61, %while.entry.i75 ]
  store ptr %incdec.ptr.i73, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_VarId__next.exit80

MapIterator_string_VarId__next.exit80:            ; preds = %MapIterator_string_VarId__next.exit80.loopexit, %ifend
  %66 = phi i64 [ %65, %MapIterator_string_VarId__next.exit80.loopexit ], [ %59, %ifend ]
  %.pn110 = phi ptr [ %incdec.ptr.i73, %MapIterator_string_VarId__next.exit80.loopexit ], [ %memberidx1.i.i.promoted, %ifend ]
  %storemerge102 = add nsw i64 %27, -1
  store i64 %storemerge102, ptr %memberidx3.i.i, align 4
  %storemerge = icmp slt i64 %27, 1
  store i1 %storemerge, ptr %14, align 1
  br i1 %storemerge, label %for.end, label %for.body

if.entry10:                                       ; preds = %for.body
  %67 = load ptr, ptr %memberidx, align 8
  %memberidx.i81 = getelementptr inbounds %Program, ptr %67, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %69 = load i64, ptr %memberidx1.i82, align 4
  %memberidx.i.i83 = getelementptr inbounds %Array_Module_, ptr %68, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i.i83, align 8
  %ptridx.i.i84 = getelementptr inbounds ptr, ptr %70, i64 %69
  %71 = load ptr, ptr %ptridx.i.i84, align 8
  %memberidx2.i85 = getelementptr inbounds %Module, ptr %71, i64 0, i32 4
  %72 = load ptr, ptr %memberidx2.i85, align 8
  %memberidx3.i86 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %73 = load i64, ptr %memberidx3.i86, align 4
  %memberidx.i5.i87 = getelementptr inbounds %Array_Function_, ptr %72, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i5.i87, align 8
  %ptridx.i6.i88 = getelementptr inbounds ptr, ptr %74, i64 %73
  %75 = load ptr, ptr %ptridx.i6.i88, align 8
  %memberidx14 = getelementptr inbounds %Function, ptr %75, i64 0, i32 4
  br label %ifend.sink.split

if.entry16:                                       ; preds = %for.body
  %76 = load ptr, ptr %memberidx, align 8
  %memberidx.i89 = getelementptr inbounds %Program, ptr %76, i64 0, i32 1
  %77 = load ptr, ptr %memberidx.i89, align 8
  %memberidx1.i90 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %78 = load i64, ptr %memberidx1.i90, align 4
  %memberidx.i.i91 = getelementptr inbounds %Array_Module_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i.i91, align 8
  %ptridx.i.i92 = getelementptr inbounds ptr, ptr %79, i64 %78
  %80 = load ptr, ptr %ptridx.i.i92, align 8
  %memberidx2.i93 = getelementptr inbounds %Module, ptr %80, i64 0, i32 2
  %81 = load ptr, ptr %memberidx2.i93, align 8
  %memberidx3.i94 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %82 = load i64, ptr %memberidx3.i94, align 4
  %memberidx.i5.i95 = getelementptr inbounds %Array_Const_, ptr %81, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i5.i95, align 8
  %ptridx.i6.i96 = getelementptr inbounds ptr, ptr %83, i64 %82
  %84 = load ptr, ptr %ptridx.i6.i96, align 8
  br label %ifend.sink.split

for.body25:                                       ; preds = %for.end, %for.body25
  %85 = phi i64 [ %86, %for.body25 ], [ 1, %for.end ]
  %child_scope.0104.in = phi ptr [ %ptridx.i99, %for.body25 ], [ %34, %for.end ]
  %child_scope.0104 = load ptr, ptr %child_scope.0104.in, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr %0, ptr %1, ptr %child_scope.0104)
  %86 = add nuw nsw i64 %85, 1
  store i64 %86, ptr %memberidx1.i.i55, align 4
  %ptridx.i99 = getelementptr inbounds ptr, ptr %34, i64 %85
  %.not = icmp slt i64 %85, %35
  br i1 %.not, label %for.body25, label %for.end27

for.end27:                                        ; preds = %for.body25, %for.end
  tail call void @free(ptr nonnull %33)
  ret void
}

define internal fastcc ptr @CodeGen_codegen_type(ptr nocapture %0, ptr nocapture readonly %1, i1 %2) unnamed_addr {
  %4 = load i64, ptr %1, align 4
  switch i64 %4, label %ifend55 [
    i64 10, label %if.entry
    i64 0, label %if.entry2
    i64 1, label %if.entry6
    i64 2, label %if.entry10
    i64 3, label %if.entry14
    i64 4, label %if.entry18
    i64 6, label %if.entry22
    i64 5, label %if.entry26
    i64 7, label %if.entry30
    i64 8, label %if.entry34
    i64 9, label %if.entry38
    i64 13, label %if.entry42
    i64 14, label %if.entry47
    i64 19, label %if.entry53
  ]

common.ret:                                       ; preds = %if.entry72, %for.end, %true_block75, %true_block, %if.entry86, %ifend84, %if.entry47, %if.entry42, %if.entry38, %if.entry34, %if.entry30, %if.entry26, %if.entry22, %if.entry18, %if.entry14, %if.entry10, %if.entry6, %if.entry2, %if.entry
  %common.ret.op = phi ptr [ %5, %if.entry ], [ %6, %if.entry2 ], [ %7, %if.entry6 ], [ %8, %if.entry10 ], [ %9, %if.entry14 ], [ %10, %if.entry18 ], [ %11, %if.entry22 ], [ %12, %if.entry26 ], [ %13, %if.entry30 ], [ %14, %if.entry34 ], [ %15, %if.entry38 ], [ %18, %if.entry42 ], [ %22, %if.entry47 ], [ null, %ifend84 ], [ %85, %if.entry86 ], [ %41, %true_block ], [ %58, %true_block75 ], [ %40, %for.end ], [ %57, %if.entry72 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %5 = tail call ptr @LLVMVoidType()
  br label %common.ret

if.entry2:                                        ; preds = %3
  %6 = tail call ptr @LLVMInt1Type()
  br label %common.ret

if.entry6:                                        ; preds = %3
  %7 = tail call ptr @LLVMIntType(i64 4)
  br label %common.ret

if.entry10:                                       ; preds = %3
  %8 = tail call ptr @LLVMInt8Type()
  br label %common.ret

if.entry14:                                       ; preds = %3
  %9 = tail call ptr @LLVMInt16Type()
  br label %common.ret

if.entry18:                                       ; preds = %3
  %10 = tail call ptr @LLVMInt32Type()
  br label %common.ret

if.entry22:                                       ; preds = %3
  %11 = tail call ptr @LLVMIntType(i64 64)
  br label %common.ret

if.entry26:                                       ; preds = %3
  %12 = tail call ptr @LLVMInt64Type()
  br label %common.ret

if.entry30:                                       ; preds = %3
  %13 = tail call ptr @LLVMInt128Type()
  br label %common.ret

if.entry34:                                       ; preds = %3
  %14 = tail call ptr @LLVMFloatType()
  br label %common.ret

if.entry38:                                       ; preds = %3
  %15 = tail call ptr @LLVMDoubleType()
  br label %common.ret

if.entry42:                                       ; preds = %3
  %memberidx45 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %16 = load ptr, ptr %memberidx45, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %16, i1 true)
  %18 = tail call ptr @LLVMPointerType(ptr %17, i64 0)
  br label %common.ret

if.entry47:                                       ; preds = %3
  %memberidx50 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %19 = load ptr, ptr %memberidx50, align 8
  %20 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %19, i1 true)
  %memberidx51 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %21 = load i64, ptr %memberidx51, align 4
  %22 = tail call ptr @LLVMArrayType(ptr %20, i64 %21)
  br label %common.ret

if.entry53:                                       ; preds = %3
  %memberidx56 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 3
  %23 = load ptr, ptr %memberidx56, align 8
  %.pr = load i64, ptr %23, align 4
  br label %ifend55

ifend55:                                          ; preds = %3, %if.entry53
  %24 = phi i64 [ %4, %3 ], [ %.pr, %if.entry53 ]
  %tt.0 = phi ptr [ %1, %3 ], [ %23, %if.entry53 ]
  switch i64 %24, label %ifend70 [
    i64 15, label %if.entry57
    i64 11, label %if.entry68
  ]

if.entry57:                                       ; preds = %ifend55
  %memberidx60 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 1
  %25 = load ptr, ptr %memberidx60, align 8
  %memberidx61 = getelementptr inbounds %Array_Type_, ptr %25, i64 0, i32 2
  %26 = load i64, ptr %memberidx61, align 4
  %27 = alloca ptr, i64 %26, align 8
  %28 = tail call ptr @malloc(i32 25)
  %memberidx.i135 = getelementptr inbounds %Array_Type_, ptr %25, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i135, align 8
  %30 = load i64, ptr %memberidx61, align 4
  store i1 false, ptr %28, align 1
  %memberidx1.i.i136 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 1
  %memberidx2.i.i137 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 3
  store ptr %29, ptr %memberidx2.i.i137, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 2
  store i64 %30, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i136, align 4
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry57, %for.body
  %32 = phi i64 [ %35, %for.body ], [ 1, %if.entry57 ]
  %arg_ty.0168.in = phi ptr [ %ptridx.i, %for.body ], [ %29, %if.entry57 ]
  %idx.0167 = phi i64 [ %33, %for.body ], [ 0, %if.entry57 ]
  %arg_ty.0168 = load ptr, ptr %arg_ty.0168.in, align 8
  %33 = add nuw nsw i64 %idx.0167, 1
  %ptridx = getelementptr inbounds ptr, ptr %27, i64 %idx.0167
  %34 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %arg_ty.0168, i1 true)
  store ptr %34, ptr %ptridx, align 8
  %35 = add nuw nsw i64 %32, 1
  store i64 %35, ptr %memberidx1.i.i136, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %29, i64 %32
  %.not169 = icmp slt i64 %32, %30
  br i1 %.not169, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.entry57
  tail call void @free(ptr nonnull %28)
  %memberidx64 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 2
  %36 = load ptr, ptr %memberidx64, align 8
  %37 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %36, i1 true)
  %38 = load ptr, ptr %memberidx60, align 8
  %memberidx66 = getelementptr inbounds %Array_Type_, ptr %38, i64 0, i32 2
  %39 = load i64, ptr %memberidx66, align 4
  %40 = call ptr @LLVMFunctionType(ptr %37, ptr nonnull %27, i64 %39, i1 false)
  br i1 %2, label %true_block, label %common.ret

true_block:                                       ; preds = %for.end
  %41 = call ptr @LLVMPointerType(ptr %40, i64 0)
  br label %common.ret

if.entry68:                                       ; preds = %ifend55
  %memberidx71 = getelementptr inbounds %ObjectType, ptr %tt.0, i64 0, i32 1
  %42 = load ptr, ptr %memberidx71, align 8
  %43 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %42)
  %.not.i = icmp eq ptr %43, null
  br i1 %.not.i, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %if.entry72

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry68
  %memberidx.i138 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %44 = load ptr, ptr %memberidx.i138, align 8
  %memberidx.i.i139 = getelementptr inbounds %Program, ptr %44, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i139, align 8
  %46 = load i64, ptr %42, align 4
  %memberidx.i.i.i140 = getelementptr inbounds %Array_Module_, ptr %45, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i.i140, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %47, i64 %46
  %48 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i141 = getelementptr inbounds %Module, ptr %48, i64 0, i32 3
  %49 = load ptr, ptr %memberidx2.i.i141, align 8
  %memberidx3.i.i142 = getelementptr inbounds %TypeId, ptr %42, i64 0, i32 2
  %50 = load i64, ptr %memberidx3.i.i142, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %49, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %51, i64 %50
  %52 = load ptr, ptr %ptridx.i6.i.i, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %52)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %52)
  %53 = load ptr, ptr %52, align 8
  %54 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %53)
  %.not130 = icmp eq ptr %54, null
  br i1 %.not130, label %CodeGen_get_or_codegen_class_from_typeid.exit.ifend70_crit_edge, label %if.entry72

CodeGen_get_or_codegen_class_from_typeid.exit.ifend70_crit_edge: ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %.pre = load i64, ptr %tt.0, align 4
  br label %ifend70

ifend70:                                          ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit.ifend70_crit_edge, %ifend55
  %55 = phi i64 [ %.pre, %CodeGen_get_or_codegen_class_from_typeid.exit.ifend70_crit_edge ], [ %24, %ifend55 ]
  %56 = icmp eq i64 %55, 12
  br i1 %56, label %if.entry82, label %ifend84

if.entry72:                                       ; preds = %if.entry68, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i162 = phi ptr [ %54, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %43, %if.entry68 ]
  %57 = load ptr, ptr %common.ret.op.i162, align 8
  br i1 %2, label %true_block75, label %common.ret

true_block75:                                     ; preds = %if.entry72
  %58 = tail call ptr @LLVMPointerType(ptr %57, i64 0)
  br label %common.ret

if.entry82:                                       ; preds = %ifend70
  %memberidx85 = getelementptr inbounds %EnumType, ptr %tt.0, i64 0, i32 1
  %59 = load ptr, ptr %memberidx85, align 8
  %60 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %59)
  %.not.i143 = icmp eq ptr %60, null
  br i1 %.not.i143, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %if.entry86

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry82
  %memberidx.i146 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %61 = load ptr, ptr %memberidx.i146, align 8
  %memberidx.i.i147 = getelementptr inbounds %Program, ptr %61, i64 0, i32 1
  %62 = load ptr, ptr %memberidx.i.i147, align 8
  %63 = load i64, ptr %59, align 4
  %memberidx.i.i.i148 = getelementptr inbounds %Array_Module_, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i.i.i148, align 8
  %ptridx.i.i.i149 = getelementptr inbounds ptr, ptr %64, i64 %63
  %65 = load ptr, ptr %ptridx.i.i.i149, align 8
  %memberidx2.i.i150 = getelementptr inbounds %Module, ptr %65, i64 0, i32 6
  %66 = load ptr, ptr %memberidx2.i.i150, align 8
  %memberidx3.i.i151 = getelementptr inbounds %TypeId, ptr %59, i64 0, i32 2
  %67 = load i64, ptr %memberidx3.i.i151, align 4
  %memberidx.i5.i.i152 = getelementptr inbounds %Array_Enum_, ptr %66, i64 0, i32 1
  %68 = load ptr, ptr %memberidx.i5.i.i152, align 8
  %ptridx.i6.i.i153 = getelementptr inbounds ptr, ptr %68, i64 %67
  %69 = load ptr, ptr %ptridx.i6.i.i153, align 8
  tail call fastcc void @CodeGen_declare_enum(ptr %0, ptr %69)
  %70 = load ptr, ptr %69, align 8
  %71 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %70)
  %.not = icmp eq ptr %71, null
  br i1 %.not, label %ifend84, label %if.entry86

ifend84:                                          ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit, %ifend70
  %72 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %72, ptr noundef nonnull align 8 dereferenceable(32) @223, i64 32, i1 false)
  %73 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %73, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %73, i64 0, i32 1
  store ptr %72, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %73, i64 0, i32 2
  store i64 32, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %73, i64 0, i32 3
  store i64 32, ptr %memberidx2.i.i, align 4
  %74 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %74, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %75 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %75, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %75, i64 0, i32 1
  store ptr %74, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %75, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %75, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %76 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %77 = tail call ptr %76(ptr nonnull %75)
  %78 = load i64, ptr %memberidx1.i.i.i, align 4
  tail call void @write(i64 1, ptr %77, i64 %78)
  %79 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %79)
  tail call void @free(ptr %75)
  %80 = load ptr, ptr %73, align 8
  %memberidx.i.i.i155 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %80, i64 0, i32 3
  %81 = load ptr, ptr %memberidx.i.i.i155, align 8
  %82 = tail call ptr %81(ptr nonnull %73)
  %83 = load i64, ptr %memberidx1.i.i, align 4
  tail call void @write(i64 1, ptr %82, i64 %83)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  %84 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %84)
  tail call void @free(ptr %73)
  tail call void @exit(i64 -1)
  br label %common.ret

if.entry86:                                       ; preds = %if.entry82, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i144165 = phi ptr [ %71, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %60, %if.entry82 ]
  %85 = load ptr, ptr %common.ret.op.i144165, align 8
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_var_access_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpression, ptr %2, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %4)
  %memberidx1 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %6, i1 true)
  %8 = icmp eq ptr %5, null
  br i1 %8, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %9 = tail call ptr @malloc(i32 50)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %9, ptr noundef nonnull align 8 dereferenceable(50) @245, i64 50, i1 false)
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 50, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 50, ptr %memberidx2.i.i, align 4
  %11 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %11, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %12 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %12, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 1
  store ptr %11, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %12, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %13 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %14 = tail call ptr %13(ptr nonnull %12)
  %15 = load i64, ptr %memberidx1.i.i.i, align 4
  tail call void @write(i64 1, ptr %14, i64 %15)
  %16 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %16)
  tail call void @free(ptr %12)
  %17 = load ptr, ptr %10, align 8
  %memberidx.i.i.i18 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %17, i64 0, i32 3
  %18 = load ptr, ptr %memberidx.i.i.i18, align 8
  %19 = tail call ptr %18(ptr nonnull %10)
  %20 = load i64, ptr %memberidx1.i.i, align 4
  tail call void @write(i64 1, ptr %19, i64 %20)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  %21 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %21)
  tail call void @free(ptr %10)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %22 = load ptr, ptr %memberidx, align 8
  %23 = load i64, ptr %22, align 4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %common.ret, label %ifend6

common.ret:                                       ; preds = %ifend, %ifend10, %if.entry8
  %common.ret.op = phi ptr [ %26, %if.entry8 ], [ %27, %ifend10 ], [ %5, %ifend ]
  ret ptr %common.ret.op

ifend6:                                           ; preds = %ifend
  %memberidx7 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %25 = load i1, ptr %memberidx7, align 1
  br i1 %25, label %if.entry8, label %ifend10

if.entry8:                                        ; preds = %ifend6
  %26 = tail call ptr @LLVMGetInitializer(ptr %5)
  br label %common.ret

ifend10:                                          ; preds = %ifend6
  %27 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %7, ptr %5, ptr nonnull @71)
  br label %common.ret
}

define internal fastcc void @Map_string_uint__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_uint_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_uint_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.041 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.041
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.041, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.040 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %i1.040
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_uint_, ptr %15, i64 0, i32 1
  %17 = load i64, ptr %memberidx20, align 4
  tail call fastcc void @Map_string_uint____setitem__(ptr nonnull %0, ptr %16, i64 %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %i1.040, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_uint____setitem__(ptr nocapture %0, ptr %1, i64 %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_uint_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_uint_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_uint__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_uint__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i38 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %25, %ifend9 ], [ %13, %while.entry.preheader ]
  %16 = phi i64 [ %26, %ifend9 ], [ %11, %while.entry.preheader ]
  %17 = phi ptr [ %29, %ifend9 ], [ %14, %while.entry.preheader ]
  %hash.0 = phi i64 [ %28, %ifend9 ], [ %12, %while.entry.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = load i64, ptr %memberidx1.i38, align 4
  %.not.i = icmp eq i64 %19, %20
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load ptr, ptr %memberidx3.i, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %ifend15.loopexit, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre45 = load ptr, ptr %0, align 8
  br label %ifend9

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %25 = phi ptr [ %.pre45, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %26 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %27 = add nuw i64 %hash.0, 1
  %28 = urem i64 %27, %26
  %ptridx12 = getelementptr inbounds ptr, ptr %25, i64 %28
  %29 = load ptr, ptr %ptridx12, align 8
  %.not37 = icmp eq ptr %29, null
  br i1 %.not37, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %30 = phi ptr [ %13, %ifend ], [ %25, %ifend9 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %28, %ifend9 ]
  %31 = load i64, ptr %memberidx, align 4
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx, align 4
  br label %ifend15

ifend15.loopexit:                                 ; preds = %ifend.i
  %.pre46 = load ptr, ptr %0, align 8
  br label %ifend15

ifend15:                                          ; preds = %ifend15.loopexit, %if.entry13
  %33 = phi ptr [ %30, %if.entry13 ], [ %.pre46, %ifend15.loopexit ]
  %hash.141 = phi i64 [ %hash.1.ph, %if.entry13 ], [ %hash.0, %ifend15.loopexit ]
  %ptridx19 = getelementptr inbounds ptr, ptr %33, i64 %hash.141
  %34 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %34, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_uint_, ptr %34, i64 0, i32 1
  store i64 %2, ptr %memberidx1.i, align 4
  store ptr %34, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_uint__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @24, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @CodeGen_codegen_class(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %indices = alloca [1 x ptr], align 8
  %8 = load ptr, ptr %1, align 8
  %9 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %8)
  %memberidx1 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = tail call ptr @malloc(i32 25)
  %memberidx.i = getelementptr inbounds %Array_ClassMethod_, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Array_ClassMethod_, ptr %10, i64 0, i32 2
  %13 = load i64, ptr %memberidx1.i, align 4
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 3
  store ptr %12, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 2
  store i64 %13, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %14 = icmp slt i64 %13, 1
  %method.0340 = load ptr, ptr %12, align 8
  store i1 %14, ptr %11, align 1
  br i1 %14, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx5 = getelementptr inbounds %CGClassType, ptr %9, i64 0, i32 3
  %memberidx8 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %memberidx18 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx.i169 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %memberidx24 = getelementptr inbounds %CGClassType, ptr %9, i64 0, i32 4
  %memberidx31 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx43 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %memberidx53 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %memberidx.i229 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %15 = phi i64 [ 1, %for.body.lr.ph ], [ %17, %for.incr ]
  %method.0341 = phi ptr [ %method.0340, %for.body.lr.ph ], [ %method.0, %for.incr ]
  %memberidx3 = getelementptr inbounds %ClassMethod, ptr %method.0341, i64 0, i32 7
  %16 = load i1, ptr %memberidx3, align 1
  br i1 %16, label %for.incr, label %ifend

for.incr:                                         ; preds = %for.body, %CodeGen_codegen_block.exit
  %17 = add nuw nsw i64 %15, 1
  store i64 %17, ptr %memberidx1.i.i, align 4
  %ptridx.i114 = getelementptr inbounds ptr, ptr %12, i64 %15
  %18 = icmp sge i64 %15, %13
  %method.0 = load ptr, ptr %ptridx.i114, align 8
  store i1 %18, ptr %11, align 1
  br i1 %18, label %for.end, label %for.body

for.end:                                          ; preds = %for.incr, %for.entry
  tail call void @free(ptr nonnull %11)
  ret void

ifend:                                            ; preds = %for.body
  %19 = load ptr, ptr %method.0341, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  %memberidx.i116 = getelementptr inbounds %PropId, ptr %19, i64 0, i32 1
  %20 = load ptr, ptr %memberidx.i116, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %21 = load i64, ptr %20, align 4
  %memberidx1.i.i117 = getelementptr inbounds %TypeId, ptr %20, i64 0, i32 1
  %22 = load i64, ptr %memberidx1.i.i117, align 4
  %memberidx2.i.i118 = getelementptr inbounds %TypeId, ptr %20, i64 0, i32 2
  %23 = load i64, ptr %memberidx2.i.i118, align 4
  %24 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @222, i64 %21, i64 %22, i64 %23)
  %25 = load ptr, ptr %6, align 8
  %26 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %26, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  store ptr %25, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  store i64 %24, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %26, i64 0, i32 3
  store i64 %24, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %27 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %28 = call ptr %27(ptr nonnull %26)
  %29 = load i64, ptr %19, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %19, i64 0, i32 2
  %30 = load i64, ptr %memberidx3.i, align 4
  %31 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %7, ptr nonnull @238, ptr %28, i64 %29, i64 %30)
  %32 = load ptr, ptr %7, align 8
  %33 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %33, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %33, i64 0, i32 1
  store ptr %32, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %33, i64 0, i32 2
  store i64 %31, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %33, i64 0, i32 3
  store i64 %31, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %28)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  %34 = load ptr, ptr %memberidx5, align 8
  %35 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %33)
  %memberidx.i120 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %34, i64 0, i32 1
  %36 = load i64, ptr %memberidx.i120, align 4
  %37 = urem i64 %35, %36
  %38 = load ptr, ptr %34, align 8
  %ptridx.i121 = getelementptr inbounds ptr, ptr %38, i64 %37
  %39 = load ptr, ptr %ptridx.i121, align 8
  %.not.i = icmp eq ptr %39, null
  br i1 %.not.i, label %while.end.i, label %while.entry.i

while.entry.i:                                    ; preds = %ifend, %else.i
  %40 = phi ptr [ %54, %else.i ], [ %38, %ifend ]
  %41 = phi i64 [ %55, %else.i ], [ %36, %ifend ]
  %42 = phi ptr [ %58, %else.i ], [ %39, %ifend ]
  %hash.0.i = phi i64 [ %57, %else.i ], [ %37, %ifend ]
  %43 = load ptr, ptr %42, align 8
  %memberidx.i.i122 = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i.i122, align 4
  %45 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i = icmp eq i64 %44, %45
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i124 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  %46 = load ptr, ptr %memberidx2.i.i124, align 8
  %47 = load ptr, ptr %memberidx.i.i, align 8
  %48 = call i64 @memcmp(ptr %46, ptr %47, i64 %44)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i120, align 4
  %.pre342 = load ptr, ptr %34, align 8
  br label %else.i

while.end.i:                                      ; preds = %else.i, %ifend.i.i, %ifend
  %memberidx6 = getelementptr inbounds %ClassMethod, ptr %method.0341, i64 0, i32 3
  %50 = load ptr, ptr %memberidx6, align 8
  %51 = call ptr @malloc(i32 11)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %51, ptr noundef nonnull align 8 dereferenceable(11) @139, i64 11, i1 false)
  %52 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %52, align 8
  %memberidx.i.i126 = getelementptr inbounds %string, ptr %52, i64 0, i32 1
  store ptr %51, ptr %memberidx.i.i126, align 8
  %memberidx1.i.i127 = getelementptr inbounds %string, ptr %52, i64 0, i32 2
  store i64 11, ptr %memberidx1.i.i127, align 4
  %memberidx2.i.i128 = getelementptr inbounds %string, ptr %52, i64 0, i32 3
  store i64 11, ptr %memberidx2.i.i128, align 4
  %memberidx.i129 = getelementptr inbounds %string, ptr %50, i64 0, i32 2
  %53 = load i64, ptr %memberidx.i129, align 4
  %.not.i131 = icmp eq i64 %53, 11
  br i1 %.not.i131, label %ifend.i, label %string___eq__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %54 = phi ptr [ %.pre342, %ifend.i.i.else.i_crit_edge ], [ %40, %while.entry.i ]
  %55 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %41, %while.entry.i ]
  %56 = add nuw i64 %hash.0.i, 1
  %57 = urem i64 %56, %55
  %ptridx7.i = getelementptr inbounds ptr, ptr %54, i64 %57
  %58 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %58, null
  br i1 %.not30.i, label %while.end.i, label %while.entry.i

ifend.i:                                          ; preds = %while.end.i
  %memberidx2.i133 = getelementptr inbounds %string, ptr %50, i64 0, i32 1
  %59 = load ptr, ptr %memberidx2.i133, align 8
  %60 = call i64 @memcmp(ptr %59, ptr nonnull %51, i64 11)
  %61 = icmp eq i64 %60, 0
  br label %string___eq__.exit

string___eq__.exit:                               ; preds = %while.end.i, %ifend.i
  %common.ret.op.i132 = phi i1 [ %61, %ifend.i ], [ false, %while.end.i ]
  %62 = load ptr, ptr %0, align 8
  %63 = load ptr, ptr %memberidx8, align 8
  %64 = load ptr, ptr %63, align 8
  %memberidx9 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %64, i64 0, i32 5
  %65 = load ptr, ptr %memberidx9, align 8
  %66 = call ptr %65(ptr nonnull %63)
  %67 = load ptr, ptr %memberidx6, align 8
  %68 = load ptr, ptr %67, align 8
  %memberidx11 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %68, i64 0, i32 5
  %69 = load ptr, ptr %memberidx11, align 8
  %70 = call ptr %69(ptr nonnull %67)
  %71 = alloca ptr, align 8
  %72 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %71, ptr nonnull @94, ptr %66, ptr %70)
  %73 = load ptr, ptr %71, align 8
  %74 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %74, align 8
  %memberidx.i135 = getelementptr inbounds %string, ptr %74, i64 0, i32 1
  store ptr %73, ptr %memberidx.i135, align 8
  %memberidx1.i136 = getelementptr inbounds %string, ptr %74, i64 0, i32 2
  store i64 %72, ptr %memberidx1.i136, align 4
  %memberidx2.i137 = getelementptr inbounds %string, ptr %74, i64 0, i32 3
  store i64 %72, ptr %memberidx2.i137, align 4
  tail call void @free(ptr %66)
  tail call void @free(ptr %70)
  %75 = load ptr, ptr %74, align 8
  %memberidx12 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %75, i64 0, i32 5
  %76 = load ptr, ptr %memberidx12, align 8
  %77 = call ptr %76(ptr nonnull %74)
  %78 = call ptr @LLVMGetNamedFunction(ptr %62, ptr %77)
  %79 = call ptr @LLVMAppendBasicBlock(ptr %78, ptr nonnull @71)
  %80 = call ptr @LLVMCreateBuilder()
  call void @LLVMPositionBuilderAtEnd(ptr %80, ptr %79)
  %memberidx13 = getelementptr inbounds %ClassMethod, ptr %method.0341, i64 0, i32 8
  %81 = load ptr, ptr %memberidx13, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nonnull %0, ptr %80, ptr %81)
  %memberidx14 = getelementptr inbounds %ClassMethod, ptr %method.0341, i64 0, i32 1
  %82 = load i1, ptr %memberidx14, align 1
  br i1 %82, label %for.entry44, label %if.entry15

if.entry15:                                       ; preds = %string___eq__.exit
  %83 = call ptr @LLVMGetParam(ptr %78, i64 0)
  %84 = load ptr, ptr %memberidx18, align 8
  %85 = load ptr, ptr %memberidx13, align 8
  %memberidx.i138 = getelementptr inbounds %Program, ptr %84, i64 0, i32 1
  %86 = load ptr, ptr %memberidx.i138, align 8
  %87 = load i64, ptr %85, align 4
  %memberidx.i.i139 = getelementptr inbounds %Array_Module_, ptr %86, i64 0, i32 1
  %88 = load ptr, ptr %memberidx.i.i139, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %88, i64 %87
  %89 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i140 = getelementptr inbounds %Module, ptr %89, i64 0, i32 7
  %90 = load ptr, ptr %memberidx2.i140, align 8
  %memberidx3.i141 = getelementptr inbounds %ScopeId, ptr %85, i64 0, i32 1
  %91 = load i64, ptr %memberidx3.i141, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %90, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %92, i64 %91
  %93 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx20 = getelementptr inbounds %Scope, ptr %93, i64 0, i32 1
  %94 = load ptr, ptr %memberidx20, align 8
  %95 = call ptr @malloc(i32 4)
  store i32 1936287860, ptr %95, align 8
  %96 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %96, align 8
  %memberidx.i.i142 = getelementptr inbounds %string, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i.i142, align 8
  %memberidx1.i.i143 = getelementptr inbounds %string, ptr %96, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i143, align 4
  %memberidx2.i.i144 = getelementptr inbounds %string, ptr %96, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i144, align 4
  %97 = call fastcc i64 @Map_string_VarId__hash_fnc(ptr nonnull %96)
  %memberidx.i145 = getelementptr inbounds %Map_string_VarId_, ptr %94, i64 0, i32 1
  %98 = load i64, ptr %memberidx.i145, align 4
  %99 = urem i64 %97, %98
  %100 = load ptr, ptr %94, align 8
  %ptridx.i146 = getelementptr inbounds ptr, ptr %100, i64 %99
  br label %while.entry.i153

while.entry.i153:                                 ; preds = %else.i165, %if.entry15
  %ptridx7.i163.sink = phi ptr [ %ptridx7.i163, %else.i165 ], [ %ptridx.i146, %if.entry15 ]
  %101 = phi ptr [ %124, %else.i165 ], [ %100, %if.entry15 ]
  %102 = phi i64 [ %125, %else.i165 ], [ %98, %if.entry15 ]
  %hash.0.i148 = phi i64 [ %127, %else.i165 ], [ %99, %if.entry15 ]
  %103 = load ptr, ptr %ptridx7.i163.sink, align 8, !nonnull !0
  %104 = load ptr, ptr %103, align 8
  %memberidx.i.i150 = getelementptr inbounds %string, ptr %104, i64 0, i32 2
  %105 = load i64, ptr %memberidx.i.i150, align 4
  %106 = load i64, ptr %memberidx1.i.i143, align 4
  %.not.i.i152 = icmp eq i64 %105, %106
  br i1 %.not.i.i152, label %ifend.i.i156, label %else.i165

ifend.i.i156:                                     ; preds = %while.entry.i153
  %memberidx2.i.i154 = getelementptr inbounds %string, ptr %104, i64 0, i32 1
  %107 = load ptr, ptr %memberidx2.i.i154, align 8
  %108 = load ptr, ptr %memberidx.i.i142, align 8
  %109 = call i64 @memcmp(ptr %107, ptr %108, i64 %105)
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %ifend.i.i156.while.end.i162.loopexit_crit_edge, label %ifend.i.i156.else.i165_crit_edge

ifend.i.i156.while.end.i162.loopexit_crit_edge:   ; preds = %ifend.i.i156
  %.pre345.pre = load ptr, ptr %94, align 8
  %ptridx9.i160.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre345.pre, i64 %hash.0.i148
  %.pre346.pre = load ptr, ptr %ptridx9.i160.phi.trans.insert.phi.trans.insert, align 8
  %memberidx15.i167 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre346.pre, i64 0, i32 1
  %111 = load ptr, ptr %memberidx15.i167, align 8
  %112 = load ptr, ptr %memberidx.i169, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %memberidx.i.i170 = getelementptr inbounds %VarId, ptr %111, i64 0, i32 1
  %113 = load i64, ptr %memberidx.i.i170, align 4
  %114 = load i64, ptr %111, align 4
  %memberidx2.i.i171 = getelementptr inbounds %VarId, ptr %111, i64 0, i32 2
  %115 = load i64, ptr %memberidx2.i.i171, align 4
  %116 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @222, i64 %113, i64 %114, i64 %115)
  %117 = load ptr, ptr %5, align 8
  %118 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %118, align 8
  %memberidx.i.i.i172 = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  store ptr %117, ptr %memberidx.i.i.i172, align 8
  %memberidx1.i.i.i173 = getelementptr inbounds %string, ptr %118, i64 0, i32 2
  store i64 %116, ptr %memberidx1.i.i.i173, align 4
  %memberidx2.i.i.i174 = getelementptr inbounds %string, ptr %118, i64 0, i32 3
  store i64 %116, ptr %memberidx2.i.i.i174, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %119 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %118)
  %memberidx.i244 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %112, i64 0, i32 1
  %120 = load i64, ptr %memberidx.i244, align 4
  %121 = urem i64 %119, %120
  %122 = load ptr, ptr %112, align 8
  %ptridx.i245 = getelementptr inbounds ptr, ptr %122, i64 %121
  %123 = load ptr, ptr %ptridx.i245, align 8
  %.not.i246 = icmp eq ptr %123, null
  br i1 %.not.i246, label %Map_string_LLVMValueRef____getitem__.exit268, label %while.entry.i252

ifend.i.i156.else.i165_crit_edge:                 ; preds = %ifend.i.i156
  %.pre343 = load i64, ptr %memberidx.i145, align 4
  %.pre344 = load ptr, ptr %94, align 8
  br label %else.i165

else.i165:                                        ; preds = %ifend.i.i156.else.i165_crit_edge, %while.entry.i153
  %124 = phi ptr [ %.pre344, %ifend.i.i156.else.i165_crit_edge ], [ %101, %while.entry.i153 ]
  %125 = phi i64 [ %.pre343, %ifend.i.i156.else.i165_crit_edge ], [ %102, %while.entry.i153 ]
  %126 = add nuw i64 %hash.0.i148, 1
  %127 = urem i64 %126, %125
  %ptridx7.i163 = getelementptr inbounds ptr, ptr %124, i64 %127
  br label %while.entry.i153

while.entry.i252:                                 ; preds = %ifend.i.i156.while.end.i162.loopexit_crit_edge, %else.i264
  %128 = phi ptr [ %138, %else.i264 ], [ %122, %ifend.i.i156.while.end.i162.loopexit_crit_edge ]
  %129 = phi i64 [ %139, %else.i264 ], [ %120, %ifend.i.i156.while.end.i162.loopexit_crit_edge ]
  %130 = phi ptr [ %142, %else.i264 ], [ %123, %ifend.i.i156.while.end.i162.loopexit_crit_edge ]
  %hash.0.i247 = phi i64 [ %141, %else.i264 ], [ %121, %ifend.i.i156.while.end.i162.loopexit_crit_edge ]
  %131 = load ptr, ptr %130, align 8
  %memberidx.i.i249 = getelementptr inbounds %string, ptr %131, i64 0, i32 2
  %132 = load i64, ptr %memberidx.i.i249, align 4
  %133 = load i64, ptr %memberidx1.i.i.i173, align 4
  %.not.i.i251 = icmp eq i64 %132, %133
  br i1 %.not.i.i251, label %ifend.i.i255, label %else.i264

ifend.i.i255:                                     ; preds = %while.entry.i252
  %memberidx2.i.i253 = getelementptr inbounds %string, ptr %131, i64 0, i32 1
  %134 = load ptr, ptr %memberidx2.i.i253, align 8
  %135 = load ptr, ptr %memberidx.i.i.i172, align 8
  %136 = call i64 @memcmp(ptr %134, ptr %135, i64 %132)
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %while.end.i261, label %ifend.i.i255.else.i264_crit_edge

ifend.i.i255.else.i264_crit_edge:                 ; preds = %ifend.i.i255
  %.pre347 = load i64, ptr %memberidx.i244, align 4
  %.pre348 = load ptr, ptr %112, align 8
  br label %else.i264

while.end.i261:                                   ; preds = %ifend.i.i255
  %.pre349.pre = load ptr, ptr %112, align 8
  %ptridx9.i259.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre349.pre, i64 %hash.0.i247
  %.pre350.pre = load ptr, ptr %ptridx9.i259.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i260 = icmp eq ptr %.pre350.pre, null
  br i1 %.not29.i260, label %Map_string_LLVMValueRef____getitem__.exit268, label %if.entry10.i267

else.i264:                                        ; preds = %ifend.i.i255.else.i264_crit_edge, %while.entry.i252
  %138 = phi ptr [ %.pre348, %ifend.i.i255.else.i264_crit_edge ], [ %128, %while.entry.i252 ]
  %139 = phi i64 [ %.pre347, %ifend.i.i255.else.i264_crit_edge ], [ %129, %while.entry.i252 ]
  %140 = add nuw i64 %hash.0.i247, 1
  %141 = urem i64 %140, %139
  %ptridx7.i262 = getelementptr inbounds ptr, ptr %138, i64 %141
  %142 = load ptr, ptr %ptridx7.i262, align 8
  %.not30.i263 = icmp eq ptr %142, null
  br i1 %.not30.i263, label %Map_string_LLVMValueRef____getitem__.exit268, label %while.entry.i252

if.entry10.i267:                                  ; preds = %while.end.i261
  %memberidx15.i266 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre350.pre, i64 0, i32 1
  %143 = load ptr, ptr %memberidx15.i266, align 8
  br label %Map_string_LLVMValueRef____getitem__.exit268

Map_string_LLVMValueRef____getitem__.exit268:     ; preds = %else.i264, %ifend.i.i156.while.end.i162.loopexit_crit_edge, %while.end.i261, %if.entry10.i267
  %common.ret.op.i265 = phi ptr [ %143, %if.entry10.i267 ], [ null, %while.end.i261 ], [ null, %ifend.i.i156.while.end.i162.loopexit_crit_edge ], [ null, %else.i264 ]
  %144 = call ptr @LLVMBuildStore(ptr %80, ptr %83, ptr %common.ret.op.i265)
  br i1 %common.ret.op.i132, label %if.entry21, label %for.entry44

if.entry21:                                       ; preds = %Map_string_LLVMValueRef____getitem__.exit268
  %145 = load ptr, ptr %memberidx24, align 8
  %.not = icmp eq ptr %145, null
  br i1 %.not, label %ifend27, label %if.entry25

if.entry25:                                       ; preds = %if.entry21
  %146 = load ptr, ptr %9, align 8
  %147 = call ptr @LLVMPointerType(ptr %146, i64 0)
  %148 = call ptr @LLVMIntType(i64 64)
  %149 = call ptr @LLVMConstInt(ptr %148, i64 0, i1 false)
  store ptr %149, ptr %indices, align 8
  %150 = call ptr @LLVMBuildInBoundsGEP2(ptr %80, ptr %147, ptr %83, ptr nonnull %indices, i64 1, ptr nonnull @71)
  %151 = load ptr, ptr %memberidx24, align 8
  %152 = call ptr @LLVMBuildStore(ptr %80, ptr %151, ptr %150)
  br label %ifend27

ifend27:                                          ; preds = %if.entry21, %if.entry25
  %153 = load ptr, ptr %memberidx31, align 8
  %.not109 = icmp eq ptr %153, null
  br i1 %.not109, label %for.entry44, label %if.entry32

if.entry32:                                       ; preds = %ifend27
  %154 = load ptr, ptr %memberidx18, align 8
  %155 = load ptr, ptr %memberidx13, align 8
  %memberidx.i175 = getelementptr inbounds %Program, ptr %154, i64 0, i32 1
  %156 = load ptr, ptr %memberidx.i175, align 8
  %157 = load i64, ptr %155, align 4
  %memberidx.i.i176 = getelementptr inbounds %Array_Module_, ptr %156, i64 0, i32 1
  %158 = load ptr, ptr %memberidx.i.i176, align 8
  %ptridx.i.i177 = getelementptr inbounds ptr, ptr %158, i64 %157
  %159 = load ptr, ptr %ptridx.i.i177, align 8
  %memberidx2.i178 = getelementptr inbounds %Module, ptr %159, i64 0, i32 7
  %160 = load ptr, ptr %memberidx2.i178, align 8
  %memberidx3.i179 = getelementptr inbounds %ScopeId, ptr %155, i64 0, i32 1
  %161 = load i64, ptr %memberidx3.i179, align 4
  %memberidx.i5.i180 = getelementptr inbounds %Array_Scope_, ptr %160, i64 0, i32 1
  %162 = load ptr, ptr %memberidx.i5.i180, align 8
  %ptridx.i6.i181 = getelementptr inbounds ptr, ptr %162, i64 %161
  %163 = load ptr, ptr %ptridx.i6.i181, align 8
  %memberidx37 = getelementptr inbounds %Scope, ptr %163, i64 0, i32 1
  %164 = load ptr, ptr %memberidx37, align 8
  %165 = call ptr @malloc(i32 5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %165, ptr noundef nonnull align 8 dereferenceable(5) @143, i64 5, i1 false)
  %166 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %166, align 8
  %memberidx.i.i182 = getelementptr inbounds %string, ptr %166, i64 0, i32 1
  store ptr %165, ptr %memberidx.i.i182, align 8
  %memberidx1.i.i183 = getelementptr inbounds %string, ptr %166, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i183, align 4
  %memberidx2.i.i184 = getelementptr inbounds %string, ptr %166, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i184, align 4
  %167 = call fastcc i64 @Map_string_VarId__hash_fnc(ptr nonnull %166)
  %memberidx.i185 = getelementptr inbounds %Map_string_VarId_, ptr %164, i64 0, i32 1
  %168 = load i64, ptr %memberidx.i185, align 4
  %169 = urem i64 %167, %168
  %170 = load ptr, ptr %164, align 8
  %ptridx.i186 = getelementptr inbounds ptr, ptr %170, i64 %169
  %171 = load ptr, ptr %ptridx.i186, align 8
  %.not.i187 = icmp eq ptr %171, null
  br i1 %.not.i187, label %for.entry44, label %while.entry.i193

while.entry.i193:                                 ; preds = %if.entry32, %else.i205
  %172 = phi ptr [ %182, %else.i205 ], [ %170, %if.entry32 ]
  %173 = phi i64 [ %183, %else.i205 ], [ %168, %if.entry32 ]
  %174 = phi ptr [ %186, %else.i205 ], [ %171, %if.entry32 ]
  %hash.0.i188 = phi i64 [ %185, %else.i205 ], [ %169, %if.entry32 ]
  %175 = load ptr, ptr %174, align 8
  %memberidx.i.i190 = getelementptr inbounds %string, ptr %175, i64 0, i32 2
  %176 = load i64, ptr %memberidx.i.i190, align 4
  %177 = load i64, ptr %memberidx1.i.i183, align 4
  %.not.i.i192 = icmp eq i64 %176, %177
  br i1 %.not.i.i192, label %ifend.i.i196, label %else.i205

ifend.i.i196:                                     ; preds = %while.entry.i193
  %memberidx2.i.i194 = getelementptr inbounds %string, ptr %175, i64 0, i32 1
  %178 = load ptr, ptr %memberidx2.i.i194, align 8
  %179 = load ptr, ptr %memberidx.i.i182, align 8
  %180 = call i64 @memcmp(ptr %178, ptr %179, i64 %176)
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %while.end.i202, label %ifend.i.i196.else.i205_crit_edge

ifend.i.i196.else.i205_crit_edge:                 ; preds = %ifend.i.i196
  %.pre351 = load i64, ptr %memberidx.i185, align 4
  %.pre352 = load ptr, ptr %164, align 8
  br label %else.i205

while.end.i202:                                   ; preds = %ifend.i.i196
  %.pre353.pre = load ptr, ptr %164, align 8
  %ptridx9.i200.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre353.pre, i64 %hash.0.i188
  %.pre354.pre = load ptr, ptr %ptridx9.i200.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i201 = icmp eq ptr %.pre354.pre, null
  br i1 %.not29.i201, label %for.entry44, label %Map_string_VarId____getitem__.exit209

else.i205:                                        ; preds = %ifend.i.i196.else.i205_crit_edge, %while.entry.i193
  %182 = phi ptr [ %.pre352, %ifend.i.i196.else.i205_crit_edge ], [ %172, %while.entry.i193 ]
  %183 = phi i64 [ %.pre351, %ifend.i.i196.else.i205_crit_edge ], [ %173, %while.entry.i193 ]
  %184 = add nuw i64 %hash.0.i188, 1
  %185 = urem i64 %184, %183
  %ptridx7.i203 = getelementptr inbounds ptr, ptr %182, i64 %185
  %186 = load ptr, ptr %ptridx7.i203, align 8
  %.not30.i204 = icmp eq ptr %186, null
  br i1 %.not30.i204, label %for.entry44, label %while.entry.i193

Map_string_VarId____getitem__.exit209:            ; preds = %while.end.i202
  %memberidx15.i207 = getelementptr inbounds %MapEntry_string_VarId_, ptr %.pre354.pre, i64 0, i32 1
  %187 = load ptr, ptr %memberidx15.i207, align 8
  %.not110 = icmp eq ptr %187, null
  br i1 %.not110, label %for.entry44, label %if.entry38

if.entry38:                                       ; preds = %Map_string_VarId____getitem__.exit209
  %memberidx41 = getelementptr inbounds %ObjectType, ptr %153, i64 0, i32 1
  %188 = load ptr, ptr %memberidx41, align 8
  %189 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %188)
  %.not.i236 = icmp eq ptr %189, null
  br i1 %.not.i236, label %ifend.i243, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i243:                                       ; preds = %if.entry38
  %190 = load ptr, ptr %memberidx18, align 8
  %memberidx.i.i239 = getelementptr inbounds %Program, ptr %190, i64 0, i32 1
  %191 = load ptr, ptr %memberidx.i.i239, align 8
  %192 = load i64, ptr %188, align 4
  %memberidx.i.i.i240 = getelementptr inbounds %Array_Module_, ptr %191, i64 0, i32 1
  %193 = load ptr, ptr %memberidx.i.i.i240, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %193, i64 %192
  %194 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i241 = getelementptr inbounds %Module, ptr %194, i64 0, i32 3
  %195 = load ptr, ptr %memberidx2.i.i241, align 8
  %memberidx3.i.i242 = getelementptr inbounds %TypeId, ptr %188, i64 0, i32 2
  %196 = load i64, ptr %memberidx3.i.i242, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %195, i64 0, i32 1
  %197 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %197, i64 %196
  %198 = load ptr, ptr %ptridx.i6.i.i, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %198)
  call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %198)
  %199 = load ptr, ptr %198, align 8
  %200 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %199)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry38, %ifend.i243
  %common.ret.op.i237 = phi ptr [ %200, %ifend.i243 ], [ %189, %if.entry38 ]
  %memberidx42 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i237, i64 0, i32 6
  %201 = load ptr, ptr %memberidx42, align 8
  %202 = load ptr, ptr %memberidx.i169, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i.i211 = getelementptr inbounds %VarId, ptr %187, i64 0, i32 1
  %203 = load i64, ptr %memberidx.i.i211, align 4
  %204 = load i64, ptr %187, align 4
  %memberidx2.i.i212 = getelementptr inbounds %VarId, ptr %187, i64 0, i32 2
  %205 = load i64, ptr %memberidx2.i.i212, align 4
  %206 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @222, i64 %203, i64 %204, i64 %205)
  %207 = load ptr, ptr %4, align 8
  %208 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %208, align 8
  %memberidx.i.i.i213 = getelementptr inbounds %string, ptr %208, i64 0, i32 1
  store ptr %207, ptr %memberidx.i.i.i213, align 8
  %memberidx1.i.i.i214 = getelementptr inbounds %string, ptr %208, i64 0, i32 2
  store i64 %206, ptr %memberidx1.i.i.i214, align 4
  %memberidx2.i.i.i215 = getelementptr inbounds %string, ptr %208, i64 0, i32 3
  store i64 %206, ptr %memberidx2.i.i.i215, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %209 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %208)
  %memberidx.i269 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %202, i64 0, i32 1
  %210 = load i64, ptr %memberidx.i269, align 4
  %211 = urem i64 %209, %210
  %212 = load ptr, ptr %202, align 8
  %ptridx.i270 = getelementptr inbounds ptr, ptr %212, i64 %211
  %213 = load ptr, ptr %ptridx.i270, align 8
  %.not.i271 = icmp eq ptr %213, null
  br i1 %.not.i271, label %Map_string_LLVMValueRef____getitem__.exit293, label %while.entry.i277

while.entry.i277:                                 ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit, %else.i289
  %214 = phi ptr [ %224, %else.i289 ], [ %212, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %215 = phi i64 [ %225, %else.i289 ], [ %210, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %216 = phi ptr [ %228, %else.i289 ], [ %213, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %hash.0.i272 = phi i64 [ %227, %else.i289 ], [ %211, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %217 = load ptr, ptr %216, align 8
  %memberidx.i.i274 = getelementptr inbounds %string, ptr %217, i64 0, i32 2
  %218 = load i64, ptr %memberidx.i.i274, align 4
  %219 = load i64, ptr %memberidx1.i.i.i214, align 4
  %.not.i.i276 = icmp eq i64 %218, %219
  br i1 %.not.i.i276, label %ifend.i.i280, label %else.i289

ifend.i.i280:                                     ; preds = %while.entry.i277
  %memberidx2.i.i278 = getelementptr inbounds %string, ptr %217, i64 0, i32 1
  %220 = load ptr, ptr %memberidx2.i.i278, align 8
  %221 = load ptr, ptr %memberidx.i.i.i213, align 8
  %222 = call i64 @memcmp(ptr %220, ptr %221, i64 %218)
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %while.end.i286, label %ifend.i.i280.else.i289_crit_edge

ifend.i.i280.else.i289_crit_edge:                 ; preds = %ifend.i.i280
  %.pre355 = load i64, ptr %memberidx.i269, align 4
  %.pre356 = load ptr, ptr %202, align 8
  br label %else.i289

while.end.i286:                                   ; preds = %ifend.i.i280
  %.pre357.pre = load ptr, ptr %202, align 8
  %ptridx9.i284.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre357.pre, i64 %hash.0.i272
  %.pre358.pre = load ptr, ptr %ptridx9.i284.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i285 = icmp eq ptr %.pre358.pre, null
  br i1 %.not29.i285, label %Map_string_LLVMValueRef____getitem__.exit293, label %if.entry10.i292

else.i289:                                        ; preds = %ifend.i.i280.else.i289_crit_edge, %while.entry.i277
  %224 = phi ptr [ %.pre356, %ifend.i.i280.else.i289_crit_edge ], [ %214, %while.entry.i277 ]
  %225 = phi i64 [ %.pre355, %ifend.i.i280.else.i289_crit_edge ], [ %215, %while.entry.i277 ]
  %226 = add nuw i64 %hash.0.i272, 1
  %227 = urem i64 %226, %225
  %ptridx7.i287 = getelementptr inbounds ptr, ptr %224, i64 %227
  %228 = load ptr, ptr %ptridx7.i287, align 8
  %.not30.i288 = icmp eq ptr %228, null
  br i1 %.not30.i288, label %Map_string_LLVMValueRef____getitem__.exit293, label %while.entry.i277

if.entry10.i292:                                  ; preds = %while.end.i286
  %memberidx15.i291 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre358.pre, i64 0, i32 1
  %229 = load ptr, ptr %memberidx15.i291, align 8
  br label %Map_string_LLVMValueRef____getitem__.exit293

Map_string_LLVMValueRef____getitem__.exit293:     ; preds = %else.i289, %CodeGen_get_or_codegen_class_from_typeid.exit, %while.end.i286, %if.entry10.i292
  %common.ret.op.i290 = phi ptr [ %229, %if.entry10.i292 ], [ null, %while.end.i286 ], [ null, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ null, %else.i289 ]
  %230 = call ptr @LLVMBuildStore(ptr %80, ptr %201, ptr %common.ret.op.i290)
  %231 = load ptr, ptr %memberidx43, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %232 = load i64, ptr %memberidx.i.i211, align 4
  %233 = load i64, ptr %187, align 4
  %234 = load i64, ptr %memberidx2.i.i212, align 4
  %235 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @222, i64 %232, i64 %233, i64 %234)
  %236 = load ptr, ptr %3, align 8
  %237 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %237, align 8
  %memberidx.i.i218 = getelementptr inbounds %string, ptr %237, i64 0, i32 1
  store ptr %236, ptr %memberidx.i.i218, align 8
  %memberidx1.i.i219 = getelementptr inbounds %string, ptr %237, i64 0, i32 2
  store i64 %235, ptr %memberidx1.i.i219, align 4
  %memberidx2.i.i220 = getelementptr inbounds %string, ptr %237, i64 0, i32 3
  store i64 %235, ptr %memberidx2.i.i220, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %231, ptr nonnull %237, ptr %83)
  br label %for.entry44

for.entry44:                                      ; preds = %else.i205, %if.entry32, %while.end.i202, %Map_string_LLVMValueRef____getitem__.exit268, %ifend27, %Map_string_VarId____getitem__.exit209, %Map_string_LLVMValueRef____getitem__.exit293, %string___eq__.exit
  %offset.0 = phi i64 [ 0, %string___eq__.exit ], [ 1, %Map_string_LLVMValueRef____getitem__.exit293 ], [ 1, %Map_string_VarId____getitem__.exit209 ], [ 1, %ifend27 ], [ 1, %Map_string_LLVMValueRef____getitem__.exit268 ], [ 1, %while.end.i202 ], [ 1, %if.entry32 ], [ 1, %else.i205 ]
  %memberidx49 = getelementptr inbounds %ClassMethod, ptr %method.0341, i64 0, i32 6
  %238 = load ptr, ptr %memberidx49, align 8
  %memberidx50336 = getelementptr inbounds %Array_FunctionArg_, ptr %238, i64 0, i32 2
  %239 = load i64, ptr %memberidx50336, align 4
  %240 = icmp sgt i64 %239, 0
  br i1 %240, label %for.body46, label %for.end48

for.body46:                                       ; preds = %for.entry44, %Map_string_LLVMValueRef____getitem__.exit318
  %i.0337 = phi i64 [ %276, %Map_string_LLVMValueRef____getitem__.exit318 ], [ 0, %for.entry44 ]
  %241 = add nuw nsw i64 %i.0337, %offset.0
  %242 = call ptr @LLVMGetParam(ptr %78, i64 %241)
  %243 = load ptr, ptr %memberidx49, align 8
  %memberidx.i221 = getelementptr inbounds %Array_FunctionArg_, ptr %243, i64 0, i32 1
  %244 = load ptr, ptr %memberidx.i221, align 8
  %ptridx.i222 = getelementptr inbounds ptr, ptr %244, i64 %i.0337
  %245 = load ptr, ptr %ptridx.i222, align 8
  %memberidx52 = getelementptr inbounds %FunctionArg, ptr %245, i64 0, i32 4
  %246 = load ptr, ptr %memberidx52, align 8
  %247 = load ptr, ptr %memberidx.i169, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %memberidx.i.i224 = getelementptr inbounds %VarId, ptr %246, i64 0, i32 1
  %248 = load i64, ptr %memberidx.i.i224, align 4
  %249 = load i64, ptr %246, align 4
  %memberidx2.i.i225 = getelementptr inbounds %VarId, ptr %246, i64 0, i32 2
  %250 = load i64, ptr %memberidx2.i.i225, align 4
  %251 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @222, i64 %248, i64 %249, i64 %250)
  %252 = load ptr, ptr %2, align 8
  %253 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %253, align 8
  %memberidx.i.i.i226 = getelementptr inbounds %string, ptr %253, i64 0, i32 1
  store ptr %252, ptr %memberidx.i.i.i226, align 8
  %memberidx1.i.i.i227 = getelementptr inbounds %string, ptr %253, i64 0, i32 2
  store i64 %251, ptr %memberidx1.i.i.i227, align 4
  %memberidx2.i.i.i228 = getelementptr inbounds %string, ptr %253, i64 0, i32 3
  store i64 %251, ptr %memberidx2.i.i.i228, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  %254 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %253)
  %memberidx.i294 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %247, i64 0, i32 1
  %255 = load i64, ptr %memberidx.i294, align 4
  %256 = urem i64 %254, %255
  %257 = load ptr, ptr %247, align 8
  %ptridx.i295 = getelementptr inbounds ptr, ptr %257, i64 %256
  %258 = load ptr, ptr %ptridx.i295, align 8
  %.not.i296 = icmp eq ptr %258, null
  br i1 %.not.i296, label %Map_string_LLVMValueRef____getitem__.exit318, label %while.entry.i302

while.entry.i302:                                 ; preds = %for.body46, %else.i314
  %259 = phi ptr [ %269, %else.i314 ], [ %257, %for.body46 ]
  %260 = phi i64 [ %270, %else.i314 ], [ %255, %for.body46 ]
  %261 = phi ptr [ %273, %else.i314 ], [ %258, %for.body46 ]
  %hash.0.i297 = phi i64 [ %272, %else.i314 ], [ %256, %for.body46 ]
  %262 = load ptr, ptr %261, align 8
  %memberidx.i.i299 = getelementptr inbounds %string, ptr %262, i64 0, i32 2
  %263 = load i64, ptr %memberidx.i.i299, align 4
  %264 = load i64, ptr %memberidx1.i.i.i227, align 4
  %.not.i.i301 = icmp eq i64 %263, %264
  br i1 %.not.i.i301, label %ifend.i.i305, label %else.i314

ifend.i.i305:                                     ; preds = %while.entry.i302
  %memberidx2.i.i303 = getelementptr inbounds %string, ptr %262, i64 0, i32 1
  %265 = load ptr, ptr %memberidx2.i.i303, align 8
  %266 = load ptr, ptr %memberidx.i.i.i226, align 8
  %267 = call i64 @memcmp(ptr %265, ptr %266, i64 %263)
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %while.end.i311, label %ifend.i.i305.else.i314_crit_edge

ifend.i.i305.else.i314_crit_edge:                 ; preds = %ifend.i.i305
  %.pre359 = load i64, ptr %memberidx.i294, align 4
  %.pre360 = load ptr, ptr %247, align 8
  br label %else.i314

while.end.i311:                                   ; preds = %ifend.i.i305
  %.pre361.pre = load ptr, ptr %247, align 8
  %ptridx9.i309.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre361.pre, i64 %hash.0.i297
  %.pre362.pre = load ptr, ptr %ptridx9.i309.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i310 = icmp eq ptr %.pre362.pre, null
  br i1 %.not29.i310, label %Map_string_LLVMValueRef____getitem__.exit318, label %if.entry10.i317

else.i314:                                        ; preds = %ifend.i.i305.else.i314_crit_edge, %while.entry.i302
  %269 = phi ptr [ %.pre360, %ifend.i.i305.else.i314_crit_edge ], [ %259, %while.entry.i302 ]
  %270 = phi i64 [ %.pre359, %ifend.i.i305.else.i314_crit_edge ], [ %260, %while.entry.i302 ]
  %271 = add nuw i64 %hash.0.i297, 1
  %272 = urem i64 %271, %270
  %ptridx7.i312 = getelementptr inbounds ptr, ptr %269, i64 %272
  %273 = load ptr, ptr %ptridx7.i312, align 8
  %.not30.i313 = icmp eq ptr %273, null
  br i1 %.not30.i313, label %Map_string_LLVMValueRef____getitem__.exit318, label %while.entry.i302

if.entry10.i317:                                  ; preds = %while.end.i311
  %memberidx15.i316 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre362.pre, i64 0, i32 1
  %274 = load ptr, ptr %memberidx15.i316, align 8
  br label %Map_string_LLVMValueRef____getitem__.exit318

Map_string_LLVMValueRef____getitem__.exit318:     ; preds = %else.i314, %for.body46, %while.end.i311, %if.entry10.i317
  %common.ret.op.i315 = phi ptr [ %274, %if.entry10.i317 ], [ null, %while.end.i311 ], [ null, %for.body46 ], [ null, %else.i314 ]
  %275 = call ptr @LLVMBuildStore(ptr %80, ptr %242, ptr %common.ret.op.i315)
  %276 = add nuw nsw i64 %i.0337, 1
  %277 = load ptr, ptr %memberidx49, align 8
  %memberidx50 = getelementptr inbounds %Array_FunctionArg_, ptr %277, i64 0, i32 2
  %278 = load i64, ptr %memberidx50, align 4
  %279 = icmp slt i64 %276, %278
  br i1 %279, label %for.body46, label %for.end48

for.end48:                                        ; preds = %Map_string_LLVMValueRef____getitem__.exit318, %for.entry44
  %280 = load ptr, ptr %memberidx53, align 8
  store ptr %78, ptr %memberidx53, align 8
  %memberidx55 = getelementptr inbounds %ClassMethod, ptr %method.0341, i64 0, i32 5
  %281 = load ptr, ptr %memberidx55, align 8
  %282 = load i1, ptr %memberidx.i229, align 1
  store i1 false, ptr %memberidx.i229, align 1
  %283 = load ptr, ptr %281, align 8
  %284 = call ptr @malloc(i32 25)
  %memberidx.i.i230 = getelementptr inbounds %Array_Statement_, ptr %283, i64 0, i32 1
  %285 = load ptr, ptr %memberidx.i.i230, align 8
  %memberidx1.i.i231 = getelementptr inbounds %Array_Statement_, ptr %283, i64 0, i32 2
  %286 = load i64, ptr %memberidx1.i.i231, align 4
  %memberidx1.i.i.i232 = getelementptr inbounds %ArrayIterator_Statement_, ptr %284, i64 0, i32 1
  %287 = icmp slt i64 %286, 1
  br i1 %287, label %CodeGen_codegen_block.exit, label %for.body.i

for.body.i:                                       ; preds = %for.end48, %for.body.i
  %288 = phi i64 [ %289, %for.body.i ], [ 1, %for.end48 ]
  %statement.0.i339.in = phi ptr [ %ptridx.i14.i, %for.body.i ], [ %285, %for.end48 ]
  %statement.0.i339 = load ptr, ptr %statement.0.i339.in, align 8
  call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %80, ptr %statement.0.i339)
  %289 = add nuw nsw i64 %288, 1
  store i64 %289, ptr %memberidx1.i.i.i232, align 4
  %ptridx.i14.i = getelementptr inbounds ptr, ptr %285, i64 %288
  %.not373 = icmp slt i64 %288, %286
  br i1 %.not373, label %for.body.i, label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.body.i, %for.end48
  call void @free(ptr nonnull %284)
  store i1 %282, ptr %memberidx.i229, align 1
  store ptr %280, ptr %memberidx53, align 8
  call void @LLVMDisposeBuilder(ptr %80)
  br label %for.incr
}

define internal fastcc ptr @CodeGen_codegen_string_to_cstring(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %args = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx2 = getelementptr inbounds %Program, ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %memberidx2, align 8
  %memberidx.i36 = getelementptr inbounds %Array_Module_, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i36, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx3 = getelementptr inbounds %Module, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = load i64, ptr %8, align 4
  %ptridx.i.i35 = getelementptr inbounds ptr, ptr %6, i64 %9
  %10 = load ptr, ptr %ptridx.i.i35, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 7
  %11 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %8, i64 0, i32 1
  %12 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Scope_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i6.i, align 8
  %memberidx4 = getelementptr inbounds %Scope, ptr %14, i64 0, i32 2
  %15 = load ptr, ptr %memberidx4, align 8
  %16 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %16, ptr noundef nonnull align 8 dereferenceable(6) @177, i64 6, i1 false)
  %17 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %17, align 8
  %memberidx.i.i30 = getelementptr inbounds %string, ptr %17, i64 0, i32 1
  store ptr %16, ptr %memberidx.i.i30, align 8
  %memberidx1.i.i31 = getelementptr inbounds %string, ptr %17, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i31, align 4
  %memberidx2.i.i32 = getelementptr inbounds %string, ptr %17, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i32, align 4
  %18 = tail call fastcc i64 @Map_string_ClassId__hash_fnc(ptr nonnull %17)
  %memberidx.i21 = getelementptr inbounds %Map_string_ClassId_, ptr %15, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i21, align 4
  %20 = urem i64 %18, %19
  %21 = load ptr, ptr %15, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %21, i64 %20
  %22 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %22, null
  br i1 %.not.i, label %get_class_from_type.exit, label %while.entry.i

while.entry.i:                                    ; preds = %3, %else.i
  %23 = phi ptr [ %33, %else.i ], [ %21, %3 ]
  %24 = phi i64 [ %34, %else.i ], [ %19, %3 ]
  %25 = phi ptr [ %37, %else.i ], [ %22, %3 ]
  %hash.0.i = phi i64 [ %36, %else.i ], [ %20, %3 ]
  %26 = load ptr, ptr %25, align 8
  %memberidx.i.i22 = getelementptr inbounds %string, ptr %26, i64 0, i32 2
  %27 = load i64, ptr %memberidx.i.i22, align 4
  %28 = load i64, ptr %memberidx1.i.i31, align 4
  %.not.i.i24 = icmp eq i64 %27, %28
  br i1 %.not.i.i24, label %ifend.i.i27, label %else.i

ifend.i.i27:                                      ; preds = %while.entry.i
  %memberidx2.i.i25 = getelementptr inbounds %string, ptr %26, i64 0, i32 1
  %29 = load ptr, ptr %memberidx2.i.i25, align 8
  %30 = load ptr, ptr %memberidx.i.i30, align 8
  %31 = tail call i64 @memcmp(ptr %29, ptr %30, i64 %27)
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %while.end.i, label %ifend.i.i27.else.i_crit_edge

ifend.i.i27.else.i_crit_edge:                     ; preds = %ifend.i.i27
  %.pre = load i64, ptr %memberidx.i21, align 4
  %.pre51 = load ptr, ptr %15, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i27
  %.pre52.pre = load ptr, ptr %15, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre52.pre, i64 %hash.0.i
  %.pre53.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre53.pre, null
  br i1 %.not29.i, label %get_class_from_type.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i27.else.i_crit_edge, %while.entry.i
  %33 = phi ptr [ %.pre51, %ifend.i.i27.else.i_crit_edge ], [ %23, %while.entry.i ]
  %34 = phi i64 [ %.pre, %ifend.i.i27.else.i_crit_edge ], [ %24, %while.entry.i ]
  %35 = add nuw i64 %hash.0.i, 1
  %36 = urem i64 %35, %34
  %ptridx7.i = getelementptr inbounds ptr, ptr %33, i64 %36
  %37 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %37, null
  br i1 %.not30.i, label %get_class_from_type.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_ClassId_, ptr %.pre53.pre, i64 0, i32 1
  %38 = load ptr, ptr %memberidx15.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %else.i, %3, %while.end.i, %if.entry10.i
  %common.ret.op.i29 = phi ptr [ %38, %if.entry10.i ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  %39 = alloca %ObjectType, align 8
  store i64 11, ptr %39, align 8
  %memberidx.i20 = getelementptr inbounds %ObjectType, ptr %39, i64 0, i32 1
  store ptr %common.ret.op.i29, ptr %memberidx.i20, align 8
  %40 = load ptr, ptr %memberidx, align 8
  %41 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %41, ptr noundef nonnull align 8 dereferenceable(10) @253, i64 10, i1 false)
  %42 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %42, align 8
  %memberidx.i.i17 = getelementptr inbounds %string, ptr %42, i64 0, i32 1
  store ptr %41, ptr %memberidx.i.i17, align 8
  %memberidx1.i.i18 = getelementptr inbounds %string, ptr %42, i64 0, i32 2
  store i64 10, ptr %memberidx1.i.i18, align 4
  %memberidx2.i.i19 = getelementptr inbounds %string, ptr %42, i64 0, i32 3
  store i64 10, ptr %memberidx2.i.i19, align 4
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %39, i64 0, i32 1
  %43 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i42 = getelementptr inbounds %Program, ptr %40, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i.i42, align 8
  %45 = load i64, ptr %43, align 4
  %memberidx.i.i.i43 = getelementptr inbounds %Array_Module_, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i.i.i43, align 8
  %ptridx.i.i.i44 = getelementptr inbounds ptr, ptr %46, i64 %45
  %47 = load ptr, ptr %ptridx.i.i.i44, align 8
  %memberidx2.i.i45 = getelementptr inbounds %Module, ptr %47, i64 0, i32 3
  %48 = load ptr, ptr %memberidx2.i.i45, align 8
  %memberidx3.i.i46 = getelementptr inbounds %TypeId, ptr %43, i64 0, i32 2
  %49 = load i64, ptr %memberidx3.i.i46, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %50, i64 %49
  %51 = load ptr, ptr %ptridx.i6.i.i, align 8
  %52 = icmp eq ptr %51, null
  br i1 %52, label %get_class_prop_type_with_name.exit, label %ifend.i

ifend.i:                                          ; preds = %get_class_from_type.exit
  %memberidx.i = getelementptr inbounds %Class, ptr %51, i64 0, i32 6
  %53 = load ptr, ptr %memberidx.i, align 8
  %54 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr nonnull %42)
  %memberidx.i.i14 = getelementptr inbounds %Map_string_PropId_, ptr %53, i64 0, i32 1
  %55 = load i64, ptr %memberidx.i.i14, align 4
  %56 = urem i64 %54, %55
  %57 = load ptr, ptr %53, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %57, i64 %56
  %58 = load ptr, ptr %ptridx.i.i, align 8
  %.not.i.i = icmp eq ptr %58, null
  br i1 %.not.i.i, label %get_class_prop_type_with_name.exit, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %ifend.i, %else.i.i
  %59 = phi ptr [ %69, %else.i.i ], [ %57, %ifend.i ]
  %60 = phi i64 [ %70, %else.i.i ], [ %55, %ifend.i ]
  %61 = phi ptr [ %73, %else.i.i ], [ %58, %ifend.i ]
  %hash.0.i.i = phi i64 [ %72, %else.i.i ], [ %56, %ifend.i ]
  %62 = load ptr, ptr %61, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %62, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i.i.i, align 4
  %64 = load i64, ptr %memberidx1.i.i18, align 4
  %.not.i.i.i = icmp eq i64 %63, %64
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %62, i64 0, i32 1
  %65 = load ptr, ptr %memberidx2.i.i.i, align 8
  %66 = load ptr, ptr %memberidx.i.i17, align 8
  %67 = tail call i64 @memcmp(ptr %65, ptr %66, i64 %63)
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre55 = load i64, ptr %memberidx.i.i14, align 4
  %.pre56 = load ptr, ptr %53, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre57.pre = load ptr, ptr %53, align 8
  %ptridx9.i.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre57.pre, i64 %hash.0.i.i
  %.pre58.pre = load ptr, ptr %ptridx9.i.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i.i = icmp eq ptr %.pre58.pre, null
  br i1 %.not29.i.i, label %get_class_prop_type_with_name.exit, label %Map_string_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %69 = phi ptr [ %.pre56, %ifend.i.i.i.else.i.i_crit_edge ], [ %59, %while.entry.i.i ]
  %70 = phi i64 [ %.pre55, %ifend.i.i.i.else.i.i_crit_edge ], [ %60, %while.entry.i.i ]
  %71 = add nuw i64 %hash.0.i.i, 1
  %72 = urem i64 %71, %70
  %ptridx7.i.i = getelementptr inbounds ptr, ptr %69, i64 %72
  %73 = load ptr, ptr %ptridx7.i.i, align 8
  %.not30.i.i = icmp eq ptr %73, null
  br i1 %.not30.i.i, label %get_class_prop_type_with_name.exit, label %while.entry.i.i

Map_string_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx15.i.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre58.pre, i64 0, i32 1
  %74 = load ptr, ptr %memberidx15.i.i, align 8
  %75 = icmp eq ptr %74, null
  br i1 %75, label %get_class_prop_type_with_name.exit, label %ifend3.i

ifend3.i:                                         ; preds = %Map_string_PropId____getitem__.exit.i
  %memberidx.i.i7.i = getelementptr inbounds %PropId, ptr %74, i64 0, i32 1
  %76 = load ptr, ptr %memberidx.i.i7.i, align 8
  %77 = load ptr, ptr %memberidx.i.i42, align 8
  %78 = load i64, ptr %76, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %79, i64 %78
  %80 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %80, i64 0, i32 3
  %81 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %76, i64 0, i32 2
  %82 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %81, i64 0, i32 1
  %83 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %ptridx.i6.i.i.i.i = getelementptr inbounds ptr, ptr %83, i64 %82
  %84 = load ptr, ptr %ptridx.i6.i.i.i.i, align 8
  %85 = load i64, ptr %74, align 4
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend3.i
  %memberidx1.i.i15 = getelementptr inbounds %Class, ptr %84, i64 0, i32 5
  %87 = load ptr, ptr %memberidx1.i.i15, align 8
  %memberidx2.i.i16 = getelementptr inbounds %PropId, ptr %74, i64 0, i32 2
  %88 = load i64, ptr %memberidx2.i.i16, align 4
  %memberidx.i12.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %87, i64 0, i32 1
  %89 = load ptr, ptr %memberidx.i12.i.i, align 8
  %ptridx.i13.i.i = getelementptr inbounds ptr, ptr %89, i64 %88
  %90 = load ptr, ptr %ptridx.i13.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %90, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend3.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %84, i64 0, i32 4
  %91 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %74, i64 0, i32 2
  %92 = load i64, ptr %memberidx5.i.i, align 4
  %memberidx.i11.i.i = getelementptr inbounds %Array_ClassField_, ptr %91, i64 0, i32 1
  %93 = load ptr, ptr %memberidx.i11.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %93, i64 %92
  %94 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %94, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i8.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  br label %get_class_prop_type_with_name.exit

get_class_prop_type_with_name.exit:               ; preds = %else.i.i, %ifend.i, %while.end.i.i, %get_class_from_type.exit, %Map_string_PropId____getitem__.exit.i, %get_class_prop_type.exit.i
  %common.ret.op.i = phi ptr [ %common.ret.op.i8.i, %get_class_prop_type.exit.i ], [ null, %get_class_from_type.exit ], [ null, %Map_string_PropId____getitem__.exit.i ], [ null, %while.end.i.i ], [ null, %ifend.i ], [ null, %else.i.i ]
  %95 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %95, ptr noundef nonnull align 8 dereferenceable(10) @253, i64 10, i1 false)
  %96 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %96, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 1
  store ptr %95, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 2
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %96, i64 0, i32 3
  store i64 10, ptr %memberidx2.i.i, align 4
  %97 = call fastcc ptr @CodeGen_get_member_with_name(ptr %0, ptr %1, ptr %2, ptr nonnull %39, ptr nonnull %96, ptr null)
  store ptr %2, ptr %args, align 8
  %98 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %common.ret.op.i, i1 false)
  %99 = call ptr @LLVMBuildCall2(ptr %1, ptr %98, ptr %97, ptr nonnull %args, i64 1, ptr nonnull @71)
  ret ptr %99
}

define internal fastcc void @CodeGen_codegen_statement(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %4 = load i64, ptr %2, align 4
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %memberidx.i70 = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i70, align 8
  %7 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %6)
  %memberidx1.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1.i, align 8
  %9 = tail call ptr @LLVMAppendBasicBlock(ptr %8, ptr nonnull @255)
  %10 = load ptr, ptr %memberidx1.i, align 8
  %11 = tail call ptr @LLVMAppendBasicBlock(ptr %10, ptr nonnull @37)
  %12 = load ptr, ptr %memberidx1.i, align 8
  %13 = tail call ptr @LLVMAppendBasicBlock(ptr %12, ptr nonnull @256)
  %14 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %7, ptr %9, ptr %11)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %9)
  %memberidx4.i = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 2
  %15 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i82 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %16 = load i1, ptr %memberidx.i82, align 1
  store i1 false, ptr %memberidx.i82, align 1
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 25)
  %memberidx.i.i83 = getelementptr inbounds %Array_Statement_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i.i83, align 8
  %memberidx1.i.i84 = getelementptr inbounds %Array_Statement_, ptr %17, i64 0, i32 2
  %20 = load i64, ptr %memberidx1.i.i84, align 4
  store i1 false, ptr %18, align 1
  %memberidx1.i.i.i85 = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 1
  %memberidx2.i.i.i86 = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 3
  store ptr %19, ptr %memberidx2.i.i.i86, align 8
  %memberidx3.i.i.i87 = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 2
  store i64 %20, ptr %memberidx3.i.i.i87, align 4
  store i64 1, ptr %memberidx1.i.i.i85, align 4
  %21 = icmp slt i64 %20, 1
  br i1 %21, label %CodeGen_codegen_block.exit99, label %for.body.i98

for.body.i98:                                     ; preds = %if.entry, %for.body.i98
  %22 = phi i64 [ %23, %for.body.i98 ], [ 1, %if.entry ]
  %statement.0.i92130.in = phi ptr [ %ptridx.i14.i96, %for.body.i98 ], [ %19, %if.entry ]
  %statement.0.i92130 = load ptr, ptr %statement.0.i92130.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i92130)
  %23 = add nuw nsw i64 %22, 1
  store i64 %23, ptr %memberidx1.i.i.i85, align 4
  %ptridx.i14.i96 = getelementptr inbounds ptr, ptr %19, i64 %22
  %.not136 = icmp slt i64 %22, %20
  br i1 %.not136, label %for.body.i98, label %CodeGen_codegen_block.exit99

CodeGen_codegen_block.exit99:                     ; preds = %for.body.i98, %if.entry
  tail call void @free(ptr nonnull %18)
  store i1 %16, ptr %memberidx.i82, align 1
  %24 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i.i71 = getelementptr inbounds %Block, ptr %24, i64 0, i32 1
  %25 = load i1, ptr %memberidx.i.i71, align 1
  %memberidx1.i.i72 = getelementptr inbounds %Block, ptr %24, i64 0, i32 2
  %26 = load i1, ptr %memberidx1.i.i72, align 1
  %27 = or i1 %25, %26
  %memberidx2.i.i73 = getelementptr inbounds %Block, ptr %24, i64 0, i32 3
  %28 = load i1, ptr %memberidx2.i.i73, align 1
  %29 = or i1 %27, %28
  br i1 %29, label %ifend.i77, label %if.entry.i74

if.entry.i74:                                     ; preds = %CodeGen_codegen_block.exit99
  %30 = tail call ptr @LLVMBuildBr(ptr %1, ptr %13)
  br label %ifend.i77

ifend.i77:                                        ; preds = %if.entry.i74, %CodeGen_codegen_block.exit99
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %11)
  %memberidx6.i75 = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 3
  %31 = load ptr, ptr %memberidx6.i75, align 8
  %.not.i76 = icmp eq ptr %31, null
  br i1 %.not.i76, label %if.entry12.i, label %if.entry7.i

if.entry7.i:                                      ; preds = %ifend.i77
  %32 = load i1, ptr %memberidx.i82, align 1
  store i1 false, ptr %memberidx.i82, align 1
  %33 = load ptr, ptr %31, align 8
  %34 = tail call ptr @malloc(i32 25)
  %memberidx.i.i101 = getelementptr inbounds %Array_Statement_, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i.i101, align 8
  %memberidx1.i.i102 = getelementptr inbounds %Array_Statement_, ptr %33, i64 0, i32 2
  %36 = load i64, ptr %memberidx1.i.i102, align 4
  store i1 false, ptr %34, align 1
  %memberidx1.i.i.i103 = getelementptr inbounds %ArrayIterator_Statement_, ptr %34, i64 0, i32 1
  %memberidx2.i.i.i104 = getelementptr inbounds %ArrayIterator_Statement_, ptr %34, i64 0, i32 3
  store ptr %35, ptr %memberidx2.i.i.i104, align 8
  %memberidx3.i.i.i105 = getelementptr inbounds %ArrayIterator_Statement_, ptr %34, i64 0, i32 2
  store i64 %36, ptr %memberidx3.i.i.i105, align 4
  store i64 1, ptr %memberidx1.i.i.i103, align 4
  %37 = icmp slt i64 %36, 1
  br i1 %37, label %CodeGen_codegen_block.exit117, label %for.body.i116

for.body.i116:                                    ; preds = %if.entry7.i, %for.body.i116
  %38 = phi i64 [ %39, %for.body.i116 ], [ 1, %if.entry7.i ]
  %statement.0.i110127.in = phi ptr [ %ptridx.i14.i114, %for.body.i116 ], [ %35, %if.entry7.i ]
  %statement.0.i110127 = load ptr, ptr %statement.0.i110127.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i110127)
  %39 = add nuw nsw i64 %38, 1
  store i64 %39, ptr %memberidx1.i.i.i103, align 4
  %ptridx.i14.i114 = getelementptr inbounds ptr, ptr %35, i64 %38
  %.not137 = icmp slt i64 %38, %36
  br i1 %.not137, label %for.body.i116, label %CodeGen_codegen_block.exit117

CodeGen_codegen_block.exit117:                    ; preds = %for.body.i116, %if.entry7.i
  tail call void @free(ptr nonnull %34)
  store i1 %32, ptr %memberidx.i82, align 1
  %40 = load ptr, ptr %memberidx6.i75, align 8
  %memberidx.i42.i = getelementptr inbounds %Block, ptr %40, i64 0, i32 1
  %41 = load i1, ptr %memberidx.i42.i, align 1
  %memberidx1.i43.i = getelementptr inbounds %Block, ptr %40, i64 0, i32 2
  %42 = load i1, ptr %memberidx1.i43.i, align 1
  %43 = or i1 %41, %42
  %memberidx2.i44.i = getelementptr inbounds %Block, ptr %40, i64 0, i32 3
  %44 = load i1, ptr %memberidx2.i44.i, align 1
  %45 = or i1 %43, %44
  br i1 %45, label %else13.i, label %if.entry12.i

if.entry12.i:                                     ; preds = %ifend.i77, %CodeGen_codegen_block.exit117
  %46 = tail call ptr @LLVMBuildBr(ptr %1, ptr %13)
  br label %CodeGen_codegen_if_stmt.exit

else13.i:                                         ; preds = %CodeGen_codegen_block.exit117
  br i1 %29, label %if.entry15.i, label %CodeGen_codegen_if_stmt.exit

if.entry15.i:                                     ; preds = %else13.i
  tail call void @LLVMDeleteBasicBlock(ptr %13)
  br label %CodeGen_codegen_if_stmt.exit

CodeGen_codegen_if_stmt.exit:                     ; preds = %if.entry12.i, %else13.i, %if.entry15.i
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %13)
  %.pr = load i64, ptr %2, align 4
  br label %ifend

ifend:                                            ; preds = %3, %CodeGen_codegen_if_stmt.exit
  %47 = phi i64 [ %4, %3 ], [ %.pr, %CodeGen_codegen_if_stmt.exit ]
  %48 = icmp eq i64 %47, 3
  br i1 %48, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  tail call fastcc void @CodeGen_codegen_for_stmt(ptr %0, ptr %1, ptr nonnull %2)
  %.pre = load i64, ptr %2, align 4
  br label %ifend4

ifend4:                                           ; preds = %ifend, %if.entry2
  %49 = phi i64 [ %47, %ifend ], [ %.pre, %if.entry2 ]
  %50 = icmp eq i64 %49, 4
  br i1 %50, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend4
  %memberidx.i66 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i66, align 8
  %52 = tail call ptr @LLVMAppendBasicBlock(ptr %51, ptr nonnull @262)
  %53 = load ptr, ptr %memberidx.i66, align 8
  %54 = tail call ptr @LLVMAppendBasicBlock(ptr %53, ptr nonnull @263)
  %memberidx2.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %55 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i67 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %56 = load ptr, ptr %memberidx3.i67, align 8
  store ptr %54, ptr %memberidx2.i, align 8
  store ptr %52, ptr %memberidx3.i67, align 8
  %memberidx6.i = getelementptr inbounds %WhileStatement, ptr %2, i64 0, i32 1
  %57 = load ptr, ptr %memberidx6.i, align 8
  %58 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %57)
  %59 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %58, ptr %52, ptr %54)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %52)
  %memberidx7.i = getelementptr inbounds %WhileStatement, ptr %2, i64 0, i32 2
  %60 = load ptr, ptr %memberidx7.i, align 8
  %memberidx.i78 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %61 = load i1, ptr %memberidx.i78, align 1
  store i1 false, ptr %memberidx.i78, align 1
  %62 = load ptr, ptr %60, align 8
  %63 = tail call ptr @malloc(i32 25)
  %memberidx.i.i79 = getelementptr inbounds %Array_Statement_, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i.i79, align 8
  %memberidx1.i.i80 = getelementptr inbounds %Array_Statement_, ptr %62, i64 0, i32 2
  %65 = load i64, ptr %memberidx1.i.i80, align 4
  store i1 false, ptr %63, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %63, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %63, i64 0, i32 3
  store ptr %64, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %63, i64 0, i32 2
  store i64 %65, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %66 = icmp slt i64 %65, 1
  br i1 %66, label %CodeGen_codegen_block.exit, label %for.body.i

for.body.i:                                       ; preds = %if.entry6, %for.body.i
  %67 = phi i64 [ %68, %for.body.i ], [ 1, %if.entry6 ]
  %statement.0.i125.in = phi ptr [ %ptridx.i14.i, %for.body.i ], [ %64, %if.entry6 ]
  %statement.0.i125 = load ptr, ptr %statement.0.i125.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i125)
  %68 = add nuw nsw i64 %67, 1
  store i64 %68, ptr %memberidx1.i.i.i, align 4
  %ptridx.i14.i = getelementptr inbounds ptr, ptr %64, i64 %67
  %.not = icmp slt i64 %67, %65
  br i1 %.not, label %for.body.i, label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.body.i, %if.entry6
  tail call void @free(ptr nonnull %63)
  store i1 %61, ptr %memberidx.i78, align 1
  %69 = load ptr, ptr %memberidx7.i, align 8
  %memberidx.i.i = getelementptr inbounds %Block, ptr %69, i64 0, i32 1
  %70 = load i1, ptr %memberidx.i.i, align 1
  %memberidx1.i.i = getelementptr inbounds %Block, ptr %69, i64 0, i32 2
  %71 = load i1, ptr %memberidx1.i.i, align 1
  %72 = or i1 %70, %71
  %memberidx2.i.i = getelementptr inbounds %Block, ptr %69, i64 0, i32 3
  %73 = load i1, ptr %memberidx2.i.i, align 1
  %74 = or i1 %72, %73
  br i1 %74, label %CodeGen_codegen_while_stmt.exit, label %if.entry.i68

if.entry.i68:                                     ; preds = %CodeGen_codegen_block.exit
  %75 = load ptr, ptr %memberidx6.i, align 8
  %76 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %75)
  %77 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %76, ptr %52, ptr %54)
  br label %CodeGen_codegen_while_stmt.exit

CodeGen_codegen_while_stmt.exit:                  ; preds = %CodeGen_codegen_block.exit, %if.entry.i68
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %54)
  store ptr %55, ptr %memberidx2.i, align 8
  store ptr %56, ptr %memberidx3.i67, align 8
  %.pr121 = load i64, ptr %2, align 4
  br label %ifend8

ifend8:                                           ; preds = %ifend4, %CodeGen_codegen_while_stmt.exit
  %78 = phi i64 [ %49, %ifend4 ], [ %.pr121, %CodeGen_codegen_while_stmt.exit ]
  %79 = icmp eq i64 %78, 5
  br i1 %79, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %ifend8
  %memberidx13 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %80 = load ptr, ptr %memberidx13, align 8
  %81 = tail call ptr @LLVMBuildBr(ptr %1, ptr %80)
  %.pre134 = load i64, ptr %2, align 4
  br label %ifend12

ifend12:                                          ; preds = %ifend8, %if.entry10
  %82 = phi i64 [ %78, %ifend8 ], [ %.pre134, %if.entry10 ]
  %83 = icmp eq i64 %82, 6
  br i1 %83, label %if.entry15, label %ifend17

if.entry15:                                       ; preds = %ifend12
  %memberidx18 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %84 = load ptr, ptr %memberidx18, align 8
  %85 = tail call ptr @LLVMBuildBr(ptr %1, ptr %84)
  %.pr122 = load i64, ptr %2, align 4
  br label %ifend17

ifend17:                                          ; preds = %ifend12, %if.entry15
  %86 = phi i64 [ %82, %ifend12 ], [ %.pr122, %if.entry15 ]
  %87 = icmp eq i64 %86, 1
  br i1 %87, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %ifend17
  tail call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr %1, ptr nonnull %2)
  %.pre135 = load i64, ptr %2, align 4
  br label %ifend22

ifend22:                                          ; preds = %ifend17, %if.entry20
  %88 = phi i64 [ %86, %ifend17 ], [ %.pre135, %if.entry20 ]
  %89 = icmp eq i64 %88, 2
  br i1 %89, label %if.entry24, label %ifend26

if.entry24:                                       ; preds = %ifend22
  tail call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr %1, ptr nonnull %2)
  %.pr123 = load i64, ptr %2, align 4
  br label %ifend26

ifend26:                                          ; preds = %ifend22, %if.entry24
  %90 = phi i64 [ %88, %ifend22 ], [ %.pr123, %if.entry24 ]
  %91 = icmp eq i64 %90, 7
  br i1 %91, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend26
  %memberidx.i = getelementptr inbounds %ReturnStatement, ptr %2, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %92, null
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry28
  %93 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %92)
  %94 = load ptr, ptr %memberidx.i, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %94, i64 0, i32 3
  %95 = load ptr, ptr %memberidx3.i, align 8
  %96 = load i64, ptr %95, align 4
  %.not12.i = icmp eq i64 %96, 10
  br i1 %.not12.i, label %ifend.i, label %if.entry5.i

ifend.i:                                          ; preds = %if.entry.i, %if.entry28
  %97 = tail call ptr @LLVMBuildRetVoid(ptr %1)
  br label %ifend30

if.entry5.i:                                      ; preds = %if.entry.i
  %98 = tail call ptr @LLVMBuildRet(ptr %1, ptr %93)
  br label %ifend30

ifend30:                                          ; preds = %if.entry5.i, %ifend.i, %ifend26
  %99 = load i64, ptr %2, align 4
  %100 = icmp eq i64 %99, 8
  br i1 %100, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend30
  %101 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %2)
  br label %ifend34

ifend34:                                          ; preds = %ifend30, %if.entry32
  ret void
}

define internal fastcc void @Map_string_CGClassType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.041 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.041
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.041, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.040 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %i1.040
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_CGClassType____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %i1.040, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_CGClassType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_CGClassType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_CGClassType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_CGClassType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i38 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %25, %ifend9 ], [ %13, %while.entry.preheader ]
  %16 = phi i64 [ %26, %ifend9 ], [ %11, %while.entry.preheader ]
  %17 = phi ptr [ %29, %ifend9 ], [ %14, %while.entry.preheader ]
  %hash.0 = phi i64 [ %28, %ifend9 ], [ %12, %while.entry.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = load i64, ptr %memberidx1.i38, align 4
  %.not.i = icmp eq i64 %19, %20
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load ptr, ptr %memberidx3.i, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %ifend15.loopexit, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre45 = load ptr, ptr %0, align 8
  br label %ifend9

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %25 = phi ptr [ %.pre45, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %26 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %27 = add nuw i64 %hash.0, 1
  %28 = urem i64 %27, %26
  %ptridx12 = getelementptr inbounds ptr, ptr %25, i64 %28
  %29 = load ptr, ptr %ptridx12, align 8
  %.not37 = icmp eq ptr %29, null
  br i1 %.not37, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %30 = phi ptr [ %13, %ifend ], [ %25, %ifend9 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %28, %ifend9 ]
  %31 = load i64, ptr %memberidx, align 4
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx, align 4
  br label %ifend15

ifend15.loopexit:                                 ; preds = %ifend.i
  %.pre46 = load ptr, ptr %0, align 8
  br label %ifend15

ifend15:                                          ; preds = %ifend15.loopexit, %if.entry13
  %33 = phi ptr [ %30, %if.entry13 ], [ %.pre46, %ifend15.loopexit ]
  %hash.141 = phi i64 [ %hash.1.ph, %if.entry13 ], [ %hash.0, %ifend15.loopexit ]
  %ptridx19 = getelementptr inbounds ptr, ptr %33, i64 %hash.141
  %34 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %34, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %34, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %34, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_CGClassType__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @24, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_LLVMValueRef__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_LLVMValueRef__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_LLVMValueRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc ptr @CodeGen_get_string_val(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr nocapture %4, i64 %5) unnamed_addr {
  %indices = alloca [1 x ptr], align 8
  %7 = load i64, ptr %3, align 4
  switch i64 %7, label %is_object.exit351 [
    i64 0, label %if.entry
    i64 19, label %if.entry.i348
  ]

common.ret:                                       ; preds = %ifend4, %if.entry.i, %Map_string_LLVMValueRef____getitem__.exit, %if.entry.i152, %Map_string_LLVMValueRef____getitem__.exit250, %CodeGen_get_or_codegen_enum_from_typeid.exit, %Array_LLVMValueRef____sl__.exit126, %Array_LLVMValueRef____sl__.exit175, %CodeGen_createGlobalLLVMString.exit191
  %common.ret.op = phi ptr [ %68, %CodeGen_createGlobalLLVMString.exit191 ], [ %101, %Array_LLVMValueRef____sl__.exit175 ], [ %235, %Array_LLVMValueRef____sl__.exit126 ], [ %323, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %172, %if.entry.i152 ], [ %167, %Map_string_LLVMValueRef____getitem__.exit250 ], [ %304, %if.entry.i ], [ %299, %Map_string_LLVMValueRef____getitem__.exit ], [ %2, %ifend4 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %6
  %8 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %9, align 8
  %memberidx.i.i201 = getelementptr inbounds %string, ptr %9, i64 0, i32 1
  store ptr %8, ptr %memberidx.i.i201, align 8
  %memberidx1.i.i202 = getelementptr inbounds %string, ptr %9, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i202, align 4
  %memberidx2.i.i203 = getelementptr inbounds %string, ptr %9, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i203, align 4
  %memberidx.i195 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %memberidx.i195, align 8
  %11 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %9)
  %memberidx.i276 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %10, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i276, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %10, align 8
  %ptridx.i277 = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i277, align 8
  %.not.i278 = icmp eq ptr %15, null
  br i1 %.not.i278, label %if.entry.i197, label %while.entry.i284

while.entry.i284:                                 ; preds = %if.entry, %else.i296
  %16 = phi ptr [ %26, %else.i296 ], [ %14, %if.entry ]
  %17 = phi i64 [ %27, %else.i296 ], [ %12, %if.entry ]
  %18 = phi ptr [ %30, %else.i296 ], [ %15, %if.entry ]
  %hash.0.i279 = phi i64 [ %29, %else.i296 ], [ %13, %if.entry ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i.i281 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i281, align 4
  %21 = load i64, ptr %memberidx1.i.i202, align 4
  %.not.i.i283 = icmp eq i64 %20, %21
  br i1 %.not.i.i283, label %ifend.i.i287, label %else.i296

ifend.i.i287:                                     ; preds = %while.entry.i284
  %memberidx2.i.i285 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i.i285, align 8
  %23 = load ptr, ptr %memberidx.i.i201, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.i293, label %ifend.i.i287.else.i296_crit_edge

ifend.i.i287.else.i296_crit_edge:                 ; preds = %ifend.i.i287
  %.pre = load i64, ptr %memberidx.i276, align 4
  %.pre384 = load ptr, ptr %10, align 8
  br label %else.i296

while.end.i293:                                   ; preds = %ifend.i.i287
  %.pre385.pre = load ptr, ptr %10, align 8
  %ptridx9.i291.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre385.pre, i64 %hash.0.i279
  %.pre386.pre = load ptr, ptr %ptridx9.i291.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i292 = icmp eq ptr %.pre386.pre, null
  br i1 %.not29.i292, label %if.entry.i197, label %Map_string_LLVMValueRef____getitem__.exit300

else.i296:                                        ; preds = %ifend.i.i287.else.i296_crit_edge, %while.entry.i284
  %26 = phi ptr [ %.pre384, %ifend.i.i287.else.i296_crit_edge ], [ %16, %while.entry.i284 ]
  %27 = phi i64 [ %.pre, %ifend.i.i287.else.i296_crit_edge ], [ %17, %while.entry.i284 ]
  %28 = add nuw i64 %hash.0.i279, 1
  %29 = urem i64 %28, %27
  %ptridx7.i294 = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx7.i294, align 8
  %.not30.i295 = icmp eq ptr %30, null
  br i1 %.not30.i295, label %if.entry.i197, label %while.entry.i284

Map_string_LLVMValueRef____getitem__.exit300:     ; preds = %while.end.i293
  %memberidx15.i298 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre386.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx15.i298, align 8
  %32 = icmp eq ptr %31, null
  br i1 %32, label %if.entry.i197, label %CodeGen_createGlobalLLVMString.exit200

if.entry.i197:                                    ; preds = %else.i296, %if.entry, %while.end.i293, %Map_string_LLVMValueRef____getitem__.exit300
  %33 = load ptr, ptr %9, align 8
  %memberidx1.i196 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %33, i64 0, i32 5
  %34 = load ptr, ptr %memberidx1.i196, align 8
  %35 = tail call ptr %34(ptr nonnull %9)
  %36 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %35, ptr nonnull @71)
  %37 = load ptr, ptr %memberidx.i195, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %37, ptr nonnull %9, ptr %36)
  br label %CodeGen_createGlobalLLVMString.exit200

CodeGen_createGlobalLLVMString.exit200:           ; preds = %Map_string_LLVMValueRef____getitem__.exit300, %if.entry.i197
  %str.0.i198 = phi ptr [ %36, %if.entry.i197 ], [ %31, %Map_string_LLVMValueRef____getitem__.exit300 ]
  %38 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %38, ptr noundef nonnull align 8 dereferenceable(5) @90, i64 5, i1 false)
  %39 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i192 = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i192, align 8
  %memberidx1.i.i193 = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 5, ptr %memberidx1.i.i193, align 4
  %memberidx2.i.i194 = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 5, ptr %memberidx2.i.i194, align 4
  %40 = load ptr, ptr %memberidx.i195, align 8
  %41 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %39)
  %memberidx.i251 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %40, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i251, align 4
  %43 = urem i64 %41, %42
  %44 = load ptr, ptr %40, align 8
  %ptridx.i252 = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i252, align 8
  %.not.i253 = icmp eq ptr %45, null
  br i1 %.not.i253, label %if.entry.i188, label %while.entry.i259

while.entry.i259:                                 ; preds = %CodeGen_createGlobalLLVMString.exit200, %else.i271
  %46 = phi ptr [ %56, %else.i271 ], [ %44, %CodeGen_createGlobalLLVMString.exit200 ]
  %47 = phi i64 [ %57, %else.i271 ], [ %42, %CodeGen_createGlobalLLVMString.exit200 ]
  %48 = phi ptr [ %60, %else.i271 ], [ %45, %CodeGen_createGlobalLLVMString.exit200 ]
  %hash.0.i254 = phi i64 [ %59, %else.i271 ], [ %43, %CodeGen_createGlobalLLVMString.exit200 ]
  %49 = load ptr, ptr %48, align 8
  %memberidx.i.i256 = getelementptr inbounds %string, ptr %49, i64 0, i32 2
  %50 = load i64, ptr %memberidx.i.i256, align 4
  %51 = load i64, ptr %memberidx1.i.i193, align 4
  %.not.i.i258 = icmp eq i64 %50, %51
  br i1 %.not.i.i258, label %ifend.i.i262, label %else.i271

ifend.i.i262:                                     ; preds = %while.entry.i259
  %memberidx2.i.i260 = getelementptr inbounds %string, ptr %49, i64 0, i32 1
  %52 = load ptr, ptr %memberidx2.i.i260, align 8
  %53 = load ptr, ptr %memberidx.i.i192, align 8
  %54 = tail call i64 @memcmp(ptr %52, ptr %53, i64 %50)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %while.end.i268, label %ifend.i.i262.else.i271_crit_edge

ifend.i.i262.else.i271_crit_edge:                 ; preds = %ifend.i.i262
  %.pre387 = load i64, ptr %memberidx.i251, align 4
  %.pre388 = load ptr, ptr %40, align 8
  br label %else.i271

while.end.i268:                                   ; preds = %ifend.i.i262
  %.pre389.pre = load ptr, ptr %40, align 8
  %ptridx9.i266.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre389.pre, i64 %hash.0.i254
  %.pre390.pre = load ptr, ptr %ptridx9.i266.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i267 = icmp eq ptr %.pre390.pre, null
  br i1 %.not29.i267, label %if.entry.i188, label %Map_string_LLVMValueRef____getitem__.exit275

else.i271:                                        ; preds = %ifend.i.i262.else.i271_crit_edge, %while.entry.i259
  %56 = phi ptr [ %.pre388, %ifend.i.i262.else.i271_crit_edge ], [ %46, %while.entry.i259 ]
  %57 = phi i64 [ %.pre387, %ifend.i.i262.else.i271_crit_edge ], [ %47, %while.entry.i259 ]
  %58 = add nuw i64 %hash.0.i254, 1
  %59 = urem i64 %58, %57
  %ptridx7.i269 = getelementptr inbounds ptr, ptr %56, i64 %59
  %60 = load ptr, ptr %ptridx7.i269, align 8
  %.not30.i270 = icmp eq ptr %60, null
  br i1 %.not30.i270, label %if.entry.i188, label %while.entry.i259

Map_string_LLVMValueRef____getitem__.exit275:     ; preds = %while.end.i268
  %memberidx15.i273 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre390.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx15.i273, align 8
  %62 = icmp eq ptr %61, null
  br i1 %62, label %if.entry.i188, label %CodeGen_createGlobalLLVMString.exit191

if.entry.i188:                                    ; preds = %else.i271, %CodeGen_createGlobalLLVMString.exit200, %while.end.i268, %Map_string_LLVMValueRef____getitem__.exit275
  %63 = load ptr, ptr %39, align 8
  %memberidx1.i187 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %63, i64 0, i32 5
  %64 = load ptr, ptr %memberidx1.i187, align 8
  %65 = tail call ptr %64(ptr nonnull %39)
  %66 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %65, ptr nonnull @71)
  %67 = load ptr, ptr %memberidx.i195, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %67, ptr nonnull %39, ptr %66)
  br label %CodeGen_createGlobalLLVMString.exit191

CodeGen_createGlobalLLVMString.exit191:           ; preds = %Map_string_LLVMValueRef____getitem__.exit275, %if.entry.i188
  %str.0.i189 = phi ptr [ %66, %if.entry.i188 ], [ %61, %Map_string_LLVMValueRef____getitem__.exit275 ]
  %68 = tail call ptr @LLVMBuildSelect(ptr %1, ptr %2, ptr %str.0.i198, ptr %str.0.i189, ptr nonnull @71)
  br label %common.ret

if.entry.i348:                                    ; preds = %6, %if.entry.i348
  %.tr5.i346 = phi ptr [ %69, %if.entry.i348 ], [ %3, %6 ]
  %memberidx1.i347 = getelementptr inbounds %GenericType, ptr %.tr5.i346, i64 0, i32 3
  %69 = load ptr, ptr %memberidx1.i347, align 8
  %70 = load i64, ptr %69, align 4
  %71 = icmp eq i64 %70, 19
  br i1 %71, label %if.entry.i348, label %is_object.exit351

is_object.exit351:                                ; preds = %if.entry.i348, %6
  %.lcssa.i349 = phi i64 [ %7, %6 ], [ %70, %if.entry.i348 ]
  %72 = icmp eq i64 %.lcssa.i349, 11
  br i1 %72, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %is_object.exit351
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %73 = load ptr, ptr %memberidx, align 8
  %74 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %74, ptr noundef nonnull align 8 dereferenceable(6) @177, i64 6, i1 false)
  %75 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %75, align 8
  %memberidx.i.i183 = getelementptr inbounds %string, ptr %75, i64 0, i32 1
  store ptr %74, ptr %memberidx.i.i183, align 8
  %memberidx1.i.i184 = getelementptr inbounds %string, ptr %75, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i184, align 4
  %memberidx2.i.i185 = getelementptr inbounds %string, ptr %75, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i185, align 4
  %76 = load i64, ptr %3, align 4
  %77 = icmp eq i64 %76, 19
  br i1 %77, label %if.entry.i342, label %is_object.exit345.thread

if.entry.i342:                                    ; preds = %if.entry2, %if.entry.i342
  %.tr5.i340 = phi ptr [ %78, %if.entry.i342 ], [ %3, %if.entry2 ]
  %memberidx1.i341 = getelementptr inbounds %GenericType, ptr %.tr5.i340, i64 0, i32 3
  %78 = load ptr, ptr %memberidx1.i341, align 8
  %79 = load i64, ptr %78, align 4
  switch i64 %79, label %ifend7 [
    i64 19, label %if.entry.i342
    i64 11, label %tailrecurse.i326.preheader
  ]

is_object.exit345.thread:                         ; preds = %if.entry2
  %80 = icmp eq i64 %76, 11
  br i1 %80, label %if.entry3.i338, label %ifend7

tailrecurse.i326.preheader:                       ; preds = %if.entry.i342
  br i1 %77, label %if.entry.i329, label %if.entry3.i338

if.entry.i329:                                    ; preds = %tailrecurse.i326.preheader, %if.entry.i329
  %.tr11.i325376 = phi ptr [ %81, %if.entry.i329 ], [ %3, %tailrecurse.i326.preheader ]
  %memberidx1.i328 = getelementptr inbounds %GenericType, ptr %.tr11.i325376, i64 0, i32 3
  %81 = load ptr, ptr %memberidx1.i328, align 8
  %82 = load i64, ptr %81, align 4
  %switch = icmp eq i64 %82, 19
  br i1 %switch, label %if.entry.i329, label %if.entry3.i338

if.entry3.i338:                                   ; preds = %if.entry.i329, %is_object.exit345.thread, %tailrecurse.i326.preheader
  %.tr11.i325.lcssa = phi ptr [ %3, %tailrecurse.i326.preheader ], [ %3, %is_object.exit345.thread ], [ %81, %if.entry.i329 ]
  %memberidx6.i330 = getelementptr inbounds %ObjectType, ptr %.tr11.i325.lcssa, i64 0, i32 1
  %83 = load ptr, ptr %memberidx6.i330, align 8
  %memberidx.i.i331 = getelementptr inbounds %Program, ptr %73, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i.i331, align 8
  %85 = load i64, ptr %83, align 4
  %memberidx.i.i.i332 = getelementptr inbounds %Array_Module_, ptr %84, i64 0, i32 1
  %86 = load ptr, ptr %memberidx.i.i.i332, align 8
  %ptridx.i.i.i333 = getelementptr inbounds ptr, ptr %86, i64 %85
  %87 = load ptr, ptr %ptridx.i.i.i333, align 8
  %memberidx2.i.i334 = getelementptr inbounds %Module, ptr %87, i64 0, i32 3
  %88 = load ptr, ptr %memberidx2.i.i334, align 8
  %memberidx3.i.i335 = getelementptr inbounds %TypeId, ptr %83, i64 0, i32 2
  %89 = load i64, ptr %memberidx3.i.i335, align 4
  %memberidx.i5.i.i336 = getelementptr inbounds %Array_Class_, ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %memberidx.i5.i.i336, align 8
  %ptridx.i6.i.i337 = getelementptr inbounds ptr, ptr %90, i64 %89
  %91 = load ptr, ptr %ptridx.i6.i.i337, align 8
  %memberidx.i177 = getelementptr inbounds %Class, ptr %91, i64 0, i32 1
  %92 = load ptr, ptr %memberidx.i177, align 8
  %memberidx.i.i178 = getelementptr inbounds %string, ptr %92, i64 0, i32 2
  %93 = load i64, ptr %memberidx.i.i178, align 4
  %.not.i.i = icmp eq i64 %93, 6
  br i1 %.not.i.i, label %string___eq__.exit.i, label %ifend7

string___eq__.exit.i:                             ; preds = %if.entry3.i338
  %memberidx2.i.i181 = getelementptr inbounds %string, ptr %92, i64 0, i32 1
  %94 = load ptr, ptr %memberidx2.i.i181, align 8
  %95 = tail call i64 @memcmp(ptr %94, ptr %74, i64 6)
  %96 = icmp eq i64 %95, 0
  %97 = load ptr, ptr %91, align 8
  %98 = load i64, ptr %97, align 4
  %99 = icmp eq i64 %98, 1
  %100 = and i1 %96, %99
  br i1 %100, label %if.entry5, label %ifend7

ifend4:                                           ; preds = %is_object.exit351
  switch i64 %7, label %common.ret [
    i64 15, label %if.entry35
    i64 12, label %if.entry39
  ]

if.entry5:                                        ; preds = %string___eq__.exit.i
  %101 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %2)
  %memberidx.i166 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %102 = load i64, ptr %memberidx.i166, align 4
  %memberidx1.i167 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 3
  %103 = load i64, ptr %memberidx1.i167, align 4
  %.not.i168 = icmp slt i64 %102, %103
  br i1 %.not.i168, label %if.entry5.Array_LLVMValueRef____sl__.exit175_crit_edge, label %if.entry.i171

if.entry5.Array_LLVMValueRef____sl__.exit175_crit_edge: ; preds = %if.entry5
  %memberidx4.i172.phi.trans.insert = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %.pre405 = load ptr, ptr %memberidx4.i172.phi.trans.insert, align 8
  br label %Array_LLVMValueRef____sl__.exit175

if.entry.i171:                                    ; preds = %if.entry5
  %104 = shl nuw i64 %103, 1
  store i64 %104, ptr %memberidx1.i167, align 4
  %memberidx2.i.i170 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %105 = load ptr, ptr %memberidx2.i.i170, align 8
  %106 = shl i64 %103, 4
  %107 = tail call ptr @realloc(ptr %105, i64 %106)
  store ptr %107, ptr %memberidx2.i.i170, align 8
  %.pre404 = load i64, ptr %memberidx.i166, align 4
  br label %Array_LLVMValueRef____sl__.exit175

Array_LLVMValueRef____sl__.exit175:               ; preds = %if.entry5.Array_LLVMValueRef____sl__.exit175_crit_edge, %if.entry.i171
  %108 = phi ptr [ %.pre405, %if.entry5.Array_LLVMValueRef____sl__.exit175_crit_edge ], [ %107, %if.entry.i171 ]
  %109 = phi i64 [ %102, %if.entry5.Array_LLVMValueRef____sl__.exit175_crit_edge ], [ %.pre404, %if.entry.i171 ]
  %110 = add nsw i64 %109, 1
  store i64 %110, ptr %memberidx.i166, align 4
  %ptridx.i173 = getelementptr inbounds ptr, ptr %108, i64 %109
  store ptr %101, ptr %ptridx.i173, align 8
  br label %common.ret

ifend7:                                           ; preds = %if.entry.i342, %is_object.exit345.thread, %if.entry3.i338, %string___eq__.exit.i
  %111 = load ptr, ptr %memberidx, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i316, %ifend7
  %.tr11.i = phi ptr [ %3, %ifend7 ], [ %113, %if.entry.i316 ]
  %112 = load i64, ptr %.tr11.i, align 4
  switch i64 %112, label %get_class_from_type.exit [
    i64 19, label %if.entry.i316
    i64 11, label %if.entry3.i
  ]

if.entry.i316:                                    ; preds = %tailrecurse.i
  %memberidx1.i315 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %113 = load ptr, ptr %memberidx1.i315, align 8
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i317 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %114 = load ptr, ptr %memberidx6.i317, align 8
  %memberidx.i.i318 = getelementptr inbounds %Program, ptr %111, i64 0, i32 1
  %115 = load ptr, ptr %memberidx.i.i318, align 8
  %116 = load i64, ptr %114, align 4
  %memberidx.i.i.i319 = getelementptr inbounds %Array_Module_, ptr %115, i64 0, i32 1
  %117 = load ptr, ptr %memberidx.i.i.i319, align 8
  %ptridx.i.i.i320 = getelementptr inbounds ptr, ptr %117, i64 %116
  %118 = load ptr, ptr %ptridx.i.i.i320, align 8
  %memberidx2.i.i321 = getelementptr inbounds %Module, ptr %118, i64 0, i32 3
  %119 = load ptr, ptr %memberidx2.i.i321, align 8
  %memberidx3.i.i322 = getelementptr inbounds %TypeId, ptr %114, i64 0, i32 2
  %120 = load i64, ptr %memberidx3.i.i322, align 4
  %memberidx.i5.i.i323 = getelementptr inbounds %Array_Class_, ptr %119, i64 0, i32 1
  %121 = load ptr, ptr %memberidx.i5.i.i323, align 8
  %ptridx.i6.i.i324 = getelementptr inbounds ptr, ptr %121, i64 %120
  %122 = load ptr, ptr %ptridx.i6.i.i324, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i314 = phi ptr [ %122, %if.entry3.i ], [ null, %tailrecurse.i ]
  %123 = alloca %StringBuilder, align 8
  %memberidx9 = getelementptr inbounds %Class, ptr %common.ret.op.i314, i64 0, i32 1
  %124 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %string, ptr %124, i64 0, i32 2
  %125 = load i64, ptr %memberidx10, align 4
  %126 = add nuw i64 %125, 14
  store ptr @VTableStringBuilder, ptr %123, align 8
  %memberidx.i162 = getelementptr inbounds %StringBuilder, ptr %123, i64 0, i32 2
  store i64 %126, ptr %memberidx.i162, align 8
  %memberidx1.i163 = getelementptr inbounds %StringBuilder, ptr %123, i64 0, i32 1
  %127 = trunc i64 %126 to i32
  %128 = tail call ptr @malloc(i32 %127)
  store ptr %128, ptr %memberidx1.i163, align 8
  %memberidx3.i164 = getelementptr inbounds %StringBuilder, ptr %123, i64 0, i32 3
  store ptr %128, ptr %memberidx3.i164, align 8
  %memberidx5.i165 = getelementptr inbounds %StringBuilder, ptr %123, i64 0, i32 4
  store i64 0, ptr %memberidx5.i165, align 8
  %129 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr }>, ptr @VTableStringBuilder, i64 0, i32 1), align 8
  %130 = load ptr, ptr %memberidx9, align 8
  %131 = load ptr, ptr %130, align 8
  %memberidx13 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %131, i64 0, i32 5
  %132 = load ptr, ptr %memberidx13, align 8
  %133 = tail call ptr %132(ptr nonnull %130)
  %134 = alloca ptr, align 8
  %135 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %134, ptr nonnull @226, ptr %133)
  %136 = load ptr, ptr %134, align 8
  %137 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %137, align 8
  %memberidx.i159 = getelementptr inbounds %string, ptr %137, i64 0, i32 1
  store ptr %136, ptr %memberidx.i159, align 8
  %memberidx1.i160 = getelementptr inbounds %string, ptr %137, i64 0, i32 2
  store i64 %135, ptr %memberidx1.i160, align 4
  %memberidx2.i161 = getelementptr inbounds %string, ptr %137, i64 0, i32 3
  store i64 %135, ptr %memberidx2.i161, align 4
  tail call void @free(ptr %133)
  call void %129(ptr nonnull %123, ptr nonnull %137)
  %138 = icmp eq i64 %5, 3
  br i1 %138, label %if.entry14, label %ifend16

if.entry14:                                       ; preds = %get_class_from_type.exit
  %139 = load ptr, ptr %123, align 8
  %memberidx17 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %139, i64 0, i32 1
  %140 = load ptr, ptr %memberidx17, align 8
  %141 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %141, ptr noundef nonnull align 8 dereferenceable(6) @227, i64 6, i1 false)
  %142 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %142, align 8
  %memberidx.i.i156 = getelementptr inbounds %string, ptr %142, i64 0, i32 1
  store ptr %141, ptr %memberidx.i.i156, align 8
  %memberidx1.i.i157 = getelementptr inbounds %string, ptr %142, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i157, align 4
  %memberidx2.i.i158 = getelementptr inbounds %string, ptr %142, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i158, align 4
  call void %140(ptr nonnull %123, ptr nonnull %142)
  %143 = load ptr, ptr %123, align 8
  %memberidx18 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %143, i64 0, i32 3
  %144 = load ptr, ptr %memberidx18, align 8
  %145 = call ptr %144(ptr nonnull %123)
  %memberidx.i150 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %146 = load ptr, ptr %memberidx.i150, align 8
  %147 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %145)
  %memberidx.i226 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %146, i64 0, i32 1
  %148 = load i64, ptr %memberidx.i226, align 4
  %149 = urem i64 %147, %148
  %150 = load ptr, ptr %146, align 8
  %ptridx.i227 = getelementptr inbounds ptr, ptr %150, i64 %149
  %151 = load ptr, ptr %ptridx.i227, align 8
  %.not.i228 = icmp eq ptr %151, null
  br i1 %.not.i228, label %if.entry.i152, label %while.entry.i234.preheader

while.entry.i234.preheader:                       ; preds = %if.entry14
  %memberidx1.i.i232 = getelementptr inbounds %string, ptr %145, i64 0, i32 2
  %memberidx3.i.i236 = getelementptr inbounds %string, ptr %145, i64 0, i32 1
  br label %while.entry.i234

while.entry.i234:                                 ; preds = %while.entry.i234.preheader, %else.i246
  %152 = phi ptr [ %162, %else.i246 ], [ %150, %while.entry.i234.preheader ]
  %153 = phi i64 [ %163, %else.i246 ], [ %148, %while.entry.i234.preheader ]
  %154 = phi ptr [ %166, %else.i246 ], [ %151, %while.entry.i234.preheader ]
  %hash.0.i229 = phi i64 [ %165, %else.i246 ], [ %149, %while.entry.i234.preheader ]
  %155 = load ptr, ptr %154, align 8
  %memberidx.i.i231 = getelementptr inbounds %string, ptr %155, i64 0, i32 2
  %156 = load i64, ptr %memberidx.i.i231, align 4
  %157 = load i64, ptr %memberidx1.i.i232, align 4
  %.not.i.i233 = icmp eq i64 %156, %157
  br i1 %.not.i.i233, label %ifend.i.i237, label %else.i246

ifend.i.i237:                                     ; preds = %while.entry.i234
  %memberidx2.i.i235 = getelementptr inbounds %string, ptr %155, i64 0, i32 1
  %158 = load ptr, ptr %memberidx2.i.i235, align 8
  %159 = load ptr, ptr %memberidx3.i.i236, align 8
  %160 = call i64 @memcmp(ptr %158, ptr %159, i64 %156)
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %while.end.i243, label %ifend.i.i237.else.i246_crit_edge

ifend.i.i237.else.i246_crit_edge:                 ; preds = %ifend.i.i237
  %.pre400 = load i64, ptr %memberidx.i226, align 4
  %.pre401 = load ptr, ptr %146, align 8
  br label %else.i246

while.end.i243:                                   ; preds = %ifend.i.i237
  %.pre402.pre = load ptr, ptr %146, align 8
  %ptridx9.i241.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre402.pre, i64 %hash.0.i229
  %.pre403.pre = load ptr, ptr %ptridx9.i241.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i242 = icmp eq ptr %.pre403.pre, null
  br i1 %.not29.i242, label %if.entry.i152, label %Map_string_LLVMValueRef____getitem__.exit250

else.i246:                                        ; preds = %ifend.i.i237.else.i246_crit_edge, %while.entry.i234
  %162 = phi ptr [ %.pre401, %ifend.i.i237.else.i246_crit_edge ], [ %152, %while.entry.i234 ]
  %163 = phi i64 [ %.pre400, %ifend.i.i237.else.i246_crit_edge ], [ %153, %while.entry.i234 ]
  %164 = add nuw i64 %hash.0.i229, 1
  %165 = urem i64 %164, %163
  %ptridx7.i244 = getelementptr inbounds ptr, ptr %162, i64 %165
  %166 = load ptr, ptr %ptridx7.i244, align 8
  %.not30.i245 = icmp eq ptr %166, null
  br i1 %.not30.i245, label %if.entry.i152, label %while.entry.i234

Map_string_LLVMValueRef____getitem__.exit250:     ; preds = %while.end.i243
  %memberidx15.i248 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre403.pre, i64 0, i32 1
  %167 = load ptr, ptr %memberidx15.i248, align 8
  %168 = icmp eq ptr %167, null
  br i1 %168, label %if.entry.i152, label %common.ret

if.entry.i152:                                    ; preds = %else.i246, %if.entry14, %while.end.i243, %Map_string_LLVMValueRef____getitem__.exit250
  %169 = load ptr, ptr %145, align 8
  %memberidx1.i151 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %169, i64 0, i32 5
  %170 = load ptr, ptr %memberidx1.i151, align 8
  %171 = call ptr %170(ptr nonnull %145)
  %172 = call ptr @LLVMBuildGlobalString(ptr %1, ptr %171, ptr nonnull @71)
  %173 = load ptr, ptr %memberidx.i150, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %173, ptr nonnull %145, ptr %172)
  br label %common.ret

ifend16:                                          ; preds = %get_class_from_type.exit
  %memberidx19 = getelementptr inbounds %Class, ptr %common.ret.op.i314, i64 0, i32 6
  %174 = load ptr, ptr %memberidx19, align 8
  %memberidx20 = getelementptr inbounds %Map_string_PropId_, ptr %174, i64 0, i32 2
  %175 = load i64, ptr %memberidx20, align 4
  %176 = alloca ptr, i64 %175, align 8
  %177 = call ptr @malloc(i32 25)
  %178 = load ptr, ptr %174, align 8
  %memberidx1.i146 = getelementptr inbounds %Map_string_PropId_, ptr %174, i64 0, i32 1
  %179 = load i64, ptr %memberidx1.i146, align 4
  %180 = load i64, ptr %memberidx20, align 4
  store i1 false, ptr %177, align 1
  %memberidx1.i.i148 = getelementptr inbounds %MapIterator_string_PropId_, ptr %177, i64 0, i32 1
  store ptr %178, ptr %memberidx1.i.i148, align 8
  %memberidx2.i.i149 = getelementptr inbounds %MapIterator_string_PropId_, ptr %177, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %177, i64 0, i32 3
  store i64 %180, ptr %memberidx3.i.i, align 4
  %181 = add nsw i64 %179, -1
  store i64 %181, ptr %memberidx2.i.i149, align 4
  %182 = icmp sgt i64 %179, 0
  br i1 %182, label %while.entry.i140, label %MapIterator_string_PropId__next.exit145

while.entry.i140:                                 ; preds = %ifend16, %ifend.i144
  %183 = phi i64 [ %186, %ifend.i144 ], [ %181, %ifend16 ]
  %184 = phi ptr [ %incdec.ptr.i138, %ifend.i144 ], [ %178, %ifend16 ]
  %incdec.ptr.i138 = getelementptr inbounds ptr, ptr %184, i64 1
  %185 = load ptr, ptr %184, align 8
  %.not.i139 = icmp eq ptr %185, null
  br i1 %.not.i139, label %ifend.i144, label %MapIterator_string_PropId__next.exit145.loopexit

ifend.i144:                                       ; preds = %while.entry.i140
  %186 = add nsw i64 %183, -1
  store i64 %186, ptr %memberidx2.i.i149, align 4
  %187 = icmp sgt i64 %183, 0
  br i1 %187, label %while.entry.i140, label %MapIterator_string_PropId__next.exit145.loopexit

MapIterator_string_PropId__next.exit145.loopexit: ; preds = %ifend.i144, %while.entry.i140
  %188 = phi i64 [ %186, %ifend.i144 ], [ %183, %while.entry.i140 ]
  store ptr %incdec.ptr.i138, ptr %memberidx1.i.i148, align 8
  br label %MapIterator_string_PropId__next.exit145

MapIterator_string_PropId__next.exit145:          ; preds = %MapIterator_string_PropId__next.exit145.loopexit, %ifend16
  %189 = phi i64 [ %188, %MapIterator_string_PropId__next.exit145.loopexit ], [ %181, %ifend16 ]
  %memberidx1.i.i148.promoted362 = phi ptr [ %incdec.ptr.i138, %MapIterator_string_PropId__next.exit145.loopexit ], [ %178, %ifend16 ]
  %storemerge366 = icmp slt i64 %180, 1
  br i1 %storemerge366, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit145
  %190 = add nuw i64 %5, 1
  %memberidx.i110 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %memberidx1.i111 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 3
  %memberidx2.i.i114 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit
  %191 = phi i64 [ %189, %for.body.lr.ph ], [ %275, %MapIterator_string_PropId__next.exit ]
  %storemerge357371.in = phi i64 [ %180, %for.body.lr.ph ], [ %storemerge357371, %MapIterator_string_PropId__next.exit ]
  %idx.0370 = phi i64 [ 0, %for.body.lr.ph ], [ %254, %MapIterator_string_PropId__next.exit ]
  %incdec.ptr.i.lcssa364369 = phi ptr [ %memberidx1.i.i148.promoted362, %for.body.lr.ph ], [ %incdec.ptr.i.lcssa363, %MapIterator_string_PropId__next.exit ]
  %storemerge357371 = add nsw i64 %storemerge357371.in, -1
  %field_entry.0372.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa364369, i64 -1
  %field_entry.0372 = load ptr, ptr %field_entry.0372.in, align 8
  %192 = load ptr, ptr %memberidx, align 8
  %memberidx24 = getelementptr inbounds %MapEntry_string_PropId_, ptr %field_entry.0372, i64 0, i32 1
  %193 = load ptr, ptr %memberidx24, align 8
  %memberidx.i.i130 = getelementptr inbounds %PropId, ptr %193, i64 0, i32 1
  %194 = load ptr, ptr %memberidx.i.i130, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %192, i64 0, i32 1
  %195 = load ptr, ptr %memberidx.i.i.i, align 8
  %196 = load i64, ptr %194, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %195, i64 0, i32 1
  %197 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %197, i64 %196
  %198 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %198, i64 0, i32 3
  %199 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %194, i64 0, i32 2
  %200 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %199, i64 0, i32 1
  %201 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %201, i64 %200
  %202 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %203 = load i64, ptr %193, align 4
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %if.entry.i133, label %ifend.i135

if.entry.i133:                                    ; preds = %for.body
  %memberidx1.i131 = getelementptr inbounds %Class, ptr %202, i64 0, i32 5
  %205 = load ptr, ptr %memberidx1.i131, align 8
  %memberidx2.i132 = getelementptr inbounds %PropId, ptr %193, i64 0, i32 2
  %206 = load i64, ptr %memberidx2.i132, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %205, i64 0, i32 1
  %207 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %207, i64 %206
  %208 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %208, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i135:                                       ; preds = %for.body
  %memberidx4.i134 = getelementptr inbounds %Class, ptr %202, i64 0, i32 4
  %209 = load ptr, ptr %memberidx4.i134, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %193, i64 0, i32 2
  %210 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %209, i64 0, i32 1
  %211 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %211, i64 %210
  %212 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %212, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i133, %ifend.i135
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i133 ], [ %memberidx6.i, %ifend.i135 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %213 = load ptr, ptr %field_entry.0372, align 8
  %214 = call fastcc ptr @CodeGen_get_member_with_name(ptr nonnull %0, ptr %1, ptr %2, ptr nonnull %3, ptr %213, ptr null)
  %215 = call fastcc ptr @CodeGen_get_string_val(ptr nonnull %0, ptr %1, ptr %214, ptr %common.ret.op.i, ptr %4, i64 %190)
  %216 = load i64, ptr %common.ret.op.i, align 4
  %217 = icmp eq i64 %216, 19
  br i1 %217, label %if.entry.i312, label %is_object.exit

if.entry.i312:                                    ; preds = %get_class_prop_type.exit, %if.entry.i312
  %.tr5.i = phi ptr [ %218, %if.entry.i312 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i311 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %218 = load ptr, ptr %memberidx1.i311, align 8
  %219 = load i64, ptr %218, align 4
  %220 = icmp eq i64 %219, 19
  br i1 %220, label %if.entry.i312, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i312, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %216, %get_class_prop_type.exit ], [ %219, %if.entry.i312 ]
  %221 = icmp eq i64 %.lcssa.i, 11
  %222 = call ptr @LLVMTypeOf(ptr %215)
  %223 = call i64 @LLVMGetTypeKind(ptr %222)
  %224 = icmp ne i64 %223, 12
  %225 = call i1 @LLVMIsGlobalConstant(ptr %215)
  %226 = or i1 %221, %225
  %227 = or i1 %224, %226
  br i1 %227, label %ifend28, label %if.entry26

for.end:                                          ; preds = %MapIterator_string_PropId__next.exit, %MapIterator_string_PropId__next.exit145
  tail call void @free(ptr nonnull %177)
  %228 = load ptr, ptr %123, align 8
  %memberidx33 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %228, i64 0, i32 1
  %229 = load ptr, ptr %memberidx33, align 8
  %230 = call ptr @malloc(i32 1)
  store i8 125, ptr %230, align 8
  %231 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %231, align 8
  %memberidx.i.i127 = getelementptr inbounds %string, ptr %231, i64 0, i32 1
  store ptr %230, ptr %memberidx.i.i127, align 8
  %memberidx1.i.i128 = getelementptr inbounds %string, ptr %231, i64 0, i32 2
  store i64 1, ptr %memberidx1.i.i128, align 4
  %memberidx2.i.i129 = getelementptr inbounds %string, ptr %231, i64 0, i32 3
  store i64 1, ptr %memberidx2.i.i129, align 4
  call void %229(ptr nonnull %123, ptr nonnull %231)
  %232 = load ptr, ptr %123, align 8
  %memberidx34 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %232, i64 0, i32 3
  %233 = load ptr, ptr %memberidx34, align 8
  %234 = call ptr %233(ptr nonnull %123)
  %235 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr %234, ptr nonnull %176, i64 %175, ptr null)
  %memberidx.i117 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %236 = load i64, ptr %memberidx.i117, align 4
  %memberidx1.i118 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 3
  %237 = load i64, ptr %memberidx1.i118, align 4
  %.not.i119 = icmp slt i64 %236, %237
  br i1 %.not.i119, label %for.end.Array_LLVMValueRef____sl__.exit126_crit_edge, label %if.entry.i122

for.end.Array_LLVMValueRef____sl__.exit126_crit_edge: ; preds = %for.end
  %memberidx4.i123.phi.trans.insert = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %.pre399 = load ptr, ptr %memberidx4.i123.phi.trans.insert, align 8
  br label %Array_LLVMValueRef____sl__.exit126

if.entry.i122:                                    ; preds = %for.end
  %238 = shl nuw i64 %237, 1
  store i64 %238, ptr %memberidx1.i118, align 4
  %memberidx2.i.i121 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %239 = load ptr, ptr %memberidx2.i.i121, align 8
  %240 = shl i64 %237, 4
  %241 = call ptr @realloc(ptr %239, i64 %240)
  store ptr %241, ptr %memberidx2.i.i121, align 8
  %.pre398 = load i64, ptr %memberidx.i117, align 4
  br label %Array_LLVMValueRef____sl__.exit126

Array_LLVMValueRef____sl__.exit126:               ; preds = %for.end.Array_LLVMValueRef____sl__.exit126_crit_edge, %if.entry.i122
  %242 = phi ptr [ %.pre399, %for.end.Array_LLVMValueRef____sl__.exit126_crit_edge ], [ %241, %if.entry.i122 ]
  %243 = phi i64 [ %236, %for.end.Array_LLVMValueRef____sl__.exit126_crit_edge ], [ %.pre398, %if.entry.i122 ]
  %244 = add nsw i64 %243, 1
  store i64 %244, ptr %memberidx.i117, align 4
  %ptridx.i124 = getelementptr inbounds ptr, ptr %242, i64 %243
  store ptr %235, ptr %ptridx.i124, align 8
  br label %common.ret

if.entry26:                                       ; preds = %is_object.exit
  %245 = load i64, ptr %memberidx.i110, align 4
  %246 = load i64, ptr %memberidx1.i111, align 4
  %.not.i112 = icmp slt i64 %245, %246
  br i1 %.not.i112, label %if.entry26.Array_LLVMValueRef____sl__.exit_crit_edge, label %if.entry.i115

if.entry26.Array_LLVMValueRef____sl__.exit_crit_edge: ; preds = %if.entry26
  %.pre397 = load ptr, ptr %memberidx2.i.i114, align 8
  br label %Array_LLVMValueRef____sl__.exit

if.entry.i115:                                    ; preds = %if.entry26
  %247 = shl nuw i64 %246, 1
  store i64 %247, ptr %memberidx1.i111, align 4
  %248 = load ptr, ptr %memberidx2.i.i114, align 8
  %249 = shl i64 %246, 4
  %250 = call ptr @realloc(ptr %248, i64 %249)
  store ptr %250, ptr %memberidx2.i.i114, align 8
  %.pre396 = load i64, ptr %memberidx.i110, align 4
  br label %Array_LLVMValueRef____sl__.exit

Array_LLVMValueRef____sl__.exit:                  ; preds = %if.entry26.Array_LLVMValueRef____sl__.exit_crit_edge, %if.entry.i115
  %251 = phi ptr [ %.pre397, %if.entry26.Array_LLVMValueRef____sl__.exit_crit_edge ], [ %250, %if.entry.i115 ]
  %252 = phi i64 [ %245, %if.entry26.Array_LLVMValueRef____sl__.exit_crit_edge ], [ %.pre396, %if.entry.i115 ]
  %253 = add nsw i64 %252, 1
  store i64 %253, ptr %memberidx.i110, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %251, i64 %252
  store ptr %215, ptr %ptridx.i, align 8
  br label %ifend28

ifend28:                                          ; preds = %is_object.exit, %Array_LLVMValueRef____sl__.exit
  %254 = add nuw nsw i64 %idx.0370, 1
  %ptridx = getelementptr inbounds ptr, ptr %176, i64 %idx.0370
  store ptr %215, ptr %ptridx, align 8
  %255 = load ptr, ptr %123, align 8
  %memberidx29 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %255, i64 0, i32 1
  %256 = load ptr, ptr %memberidx29, align 8
  %257 = load ptr, ptr %field_entry.0372, align 8
  %258 = load ptr, ptr %257, align 8
  %memberidx31 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %258, i64 0, i32 5
  %259 = load ptr, ptr %memberidx31, align 8
  %260 = call ptr %259(ptr nonnull %257)
  %261 = call fastcc ptr @get_format_from_type(ptr nonnull %common.ret.op.i)
  %262 = load ptr, ptr %261, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %262, i64 0, i32 5
  %263 = load ptr, ptr %memberidx32, align 8
  %264 = call ptr %263(ptr nonnull %261)
  %265 = alloca ptr, align 8
  %266 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %265, ptr nonnull @230, ptr %260, ptr %264)
  %267 = load ptr, ptr %265, align 8
  %268 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %268, align 8
  %memberidx.i107 = getelementptr inbounds %string, ptr %268, i64 0, i32 1
  store ptr %267, ptr %memberidx.i107, align 8
  %memberidx1.i108 = getelementptr inbounds %string, ptr %268, i64 0, i32 2
  store i64 %266, ptr %memberidx1.i108, align 4
  %memberidx2.i109 = getelementptr inbounds %string, ptr %268, i64 0, i32 3
  store i64 %266, ptr %memberidx2.i109, align 4
  tail call void @free(ptr %260)
  tail call void @free(ptr %264)
  call void %256(ptr nonnull %123, ptr nonnull %268)
  %269 = add nsw i64 %191, -1
  store i64 %269, ptr %memberidx2.i.i149, align 4
  %270 = icmp sgt i64 %191, 0
  br i1 %270, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %ifend28, %ifend.i
  %271 = phi i64 [ %274, %ifend.i ], [ %269, %ifend28 ]
  %272 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa364369, %ifend28 ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %272, i64 1
  %273 = load ptr, ptr %272, align 8
  %.not.i = icmp eq ptr %273, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %274 = add nsw i64 %271, -1
  store i64 %274, ptr %memberidx2.i.i149, align 4
  %.not = icmp eq i64 %271, 0
  br i1 %.not, label %MapIterator_string_PropId__next.exit, label %while.entry.i

MapIterator_string_PropId__next.exit:             ; preds = %while.entry.i, %ifend.i, %ifend28
  %275 = phi i64 [ %269, %ifend28 ], [ %271, %while.entry.i ], [ -1, %ifend.i ]
  %incdec.ptr.i.lcssa363 = phi ptr [ %incdec.ptr.i.lcssa364369, %ifend28 ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge = icmp slt i64 %storemerge357371.in, 2
  br i1 %storemerge, label %for.end, label %for.body

if.entry35:                                       ; preds = %ifend4
  %276 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %276, ptr noundef nonnull align 8 dereferenceable(10) @231, i64 10, i1 false)
  %277 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %277, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %277, i64 0, i32 1
  store ptr %276, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %277, i64 0, i32 2
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %277, i64 0, i32 3
  store i64 10, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %278 = load ptr, ptr %memberidx.i, align 8
  %279 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %277)
  %memberidx.i213 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %278, i64 0, i32 1
  %280 = load i64, ptr %memberidx.i213, align 4
  %281 = urem i64 %279, %280
  %282 = load ptr, ptr %278, align 8
  %ptridx.i214 = getelementptr inbounds ptr, ptr %282, i64 %281
  %283 = load ptr, ptr %ptridx.i214, align 8
  %.not.i215 = icmp eq ptr %283, null
  br i1 %.not.i215, label %if.entry.i, label %while.entry.i219

while.entry.i219:                                 ; preds = %if.entry35, %else.i
  %284 = phi ptr [ %294, %else.i ], [ %282, %if.entry35 ]
  %285 = phi i64 [ %295, %else.i ], [ %280, %if.entry35 ]
  %286 = phi ptr [ %298, %else.i ], [ %283, %if.entry35 ]
  %hash.0.i = phi i64 [ %297, %else.i ], [ %281, %if.entry35 ]
  %287 = load ptr, ptr %286, align 8
  %memberidx.i.i216 = getelementptr inbounds %string, ptr %287, i64 0, i32 2
  %288 = load i64, ptr %memberidx.i.i216, align 4
  %289 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i218 = icmp eq i64 %288, %289
  br i1 %.not.i.i218, label %ifend.i.i222, label %else.i

ifend.i.i222:                                     ; preds = %while.entry.i219
  %memberidx2.i.i220 = getelementptr inbounds %string, ptr %287, i64 0, i32 1
  %290 = load ptr, ptr %memberidx2.i.i220, align 8
  %291 = load ptr, ptr %memberidx.i.i, align 8
  %292 = tail call i64 @memcmp(ptr %290, ptr %291, i64 %288)
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %while.end.i, label %ifend.i.i222.else.i_crit_edge

ifend.i.i222.else.i_crit_edge:                    ; preds = %ifend.i.i222
  %.pre391 = load i64, ptr %memberidx.i213, align 4
  %.pre392 = load ptr, ptr %278, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i222
  %.pre393.pre = load ptr, ptr %278, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre393.pre, i64 %hash.0.i
  %.pre394.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre394.pre, null
  br i1 %.not29.i, label %if.entry.i, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i222.else.i_crit_edge, %while.entry.i219
  %294 = phi ptr [ %.pre392, %ifend.i.i222.else.i_crit_edge ], [ %284, %while.entry.i219 ]
  %295 = phi i64 [ %.pre391, %ifend.i.i222.else.i_crit_edge ], [ %285, %while.entry.i219 ]
  %296 = add nuw i64 %hash.0.i, 1
  %297 = urem i64 %296, %295
  %ptridx7.i = getelementptr inbounds ptr, ptr %294, i64 %297
  %298 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %298, null
  br i1 %.not30.i, label %if.entry.i, label %while.entry.i219

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre394.pre, i64 0, i32 1
  %299 = load ptr, ptr %memberidx15.i, align 8
  %300 = icmp eq ptr %299, null
  br i1 %300, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %else.i, %if.entry35, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %301 = load ptr, ptr %277, align 8
  %memberidx1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %301, i64 0, i32 5
  %302 = load ptr, ptr %memberidx1.i, align 8
  %303 = tail call ptr %302(ptr nonnull %277)
  %304 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %303, ptr nonnull @71)
  %305 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %305, ptr nonnull %277, ptr %304)
  br label %common.ret

if.entry39:                                       ; preds = %ifend4
  %memberidx42 = getelementptr inbounds %EnumType, ptr %3, i64 0, i32 1
  %306 = load ptr, ptr %memberidx42, align 8
  %307 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %306)
  %.not.i204 = icmp eq ptr %307, null
  br i1 %.not.i204, label %ifend.i212, label %CodeGen_get_or_codegen_enum_from_typeid.exit

ifend.i212:                                       ; preds = %if.entry39
  %memberidx.i207 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %308 = load ptr, ptr %memberidx.i207, align 8
  %memberidx.i.i208 = getelementptr inbounds %Program, ptr %308, i64 0, i32 1
  %309 = load ptr, ptr %memberidx.i.i208, align 8
  %310 = load i64, ptr %306, align 4
  %memberidx.i.i.i209 = getelementptr inbounds %Array_Module_, ptr %309, i64 0, i32 1
  %311 = load ptr, ptr %memberidx.i.i.i209, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %311, i64 %310
  %312 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i210 = getelementptr inbounds %Module, ptr %312, i64 0, i32 6
  %313 = load ptr, ptr %memberidx2.i.i210, align 8
  %memberidx3.i.i211 = getelementptr inbounds %TypeId, ptr %306, i64 0, i32 2
  %314 = load i64, ptr %memberidx3.i.i211, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Enum_, ptr %313, i64 0, i32 1
  %315 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %315, i64 %314
  %316 = load ptr, ptr %ptridx.i6.i.i, align 8
  tail call fastcc void @CodeGen_declare_enum(ptr %0, ptr %316)
  %317 = load ptr, ptr %316, align 8
  %318 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %317)
  br label %CodeGen_get_or_codegen_enum_from_typeid.exit

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry39, %ifend.i212
  %common.ret.op.i205 = phi ptr [ %318, %ifend.i212 ], [ %307, %if.entry39 ]
  %memberidx43 = getelementptr inbounds %CGEnumType, ptr %common.ret.op.i205, i64 0, i32 2
  %319 = load ptr, ptr %memberidx43, align 8
  store ptr %2, ptr %indices, align 8
  %320 = tail call ptr @LLVMTypeOf(ptr %319)
  %321 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %320, ptr %319, ptr nonnull %indices, i64 1, ptr nonnull @71)
  %322 = call ptr @LLVMTypeOf(ptr %321)
  %323 = call ptr @LLVMBuildLoad2(ptr %1, ptr %322, ptr %321, ptr nonnull @71)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_var_expr_mem(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %3)
  %5 = icmp eq ptr %4, null
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  %6 = tail call ptr @malloc(i32 45)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %6, ptr noundef nonnull align 8 dereferenceable(45) @235, i64 45, i1 false)
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 45, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 45, ptr %memberidx2.i.i, align 4
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %9, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %9, i64 0, i32 1
  store ptr %8, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %9, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %9, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %10 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %11 = tail call ptr %10(ptr nonnull %9)
  %12 = load i64, ptr %memberidx1.i.i.i, align 4
  tail call void @write(i64 1, ptr %11, i64 %12)
  %13 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %13)
  tail call void @free(ptr %9)
  %14 = load ptr, ptr %7, align 8
  %memberidx.i.i.i2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %14, i64 0, i32 3
  %15 = load ptr, ptr %memberidx.i.i.i2, align 8
  %16 = tail call ptr %15(ptr nonnull %7)
  %17 = load i64, ptr %memberidx1.i.i, align 4
  tail call void @write(i64 1, ptr %16, i64 %17)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  %18 = load ptr, ptr %memberidx.i.i, align 8
  tail call void @free(ptr %18)
  tail call void @free(ptr %7)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  ret ptr %4
}

define internal fastcc ptr @CodeGen_get_index_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %indices_1 = alloca [1 x ptr], align 8
  %indices = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 5
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %4)
  %memberidx1 = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %7 = load ptr, ptr %memberidx2, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 13
  br i1 %9, label %true_block, label %false_block

true_block:                                       ; preds = %3
  %memberidx3 = getelementptr inbounds %PointerType, ptr %7, i64 0, i32 1
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %10, i1 true)
  br label %end

false_block:                                      ; preds = %3
  %12 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %7, i1 true)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %11, %true_block ], [ %12, %false_block ]
  %13 = load i64, ptr %7, align 4
  %14 = icmp eq i64 %13, 14
  br i1 %14, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend, %CodeGen_get_expr_mem.exit
  %common.ret.op = phi ptr [ %24, %CodeGen_get_expr_mem.exit ], [ %27, %ifend ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %end
  %15 = tail call ptr @LLVMIntType(i64 64)
  %16 = tail call ptr @LLVMConstInt(ptr %15, i64 0, i1 false)
  store ptr %16, ptr %indices, align 8
  %17 = getelementptr inbounds ptr, ptr %indices, i64 1
  store ptr %5, ptr %17, align 8
  %18 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Expression, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  switch i64 %19, label %ifend8.i [
    i64 7, label %if.entry.i
    i64 13, label %if.entry2.i
    i64 12, label %if.entry6.i
  ]

if.entry.i:                                       ; preds = %if.entry
  %20 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %18)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry
  %21 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %18)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry
  %22 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %18, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry
  %23 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %18)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i = phi ptr [ %20, %if.entry.i ], [ %21, %if.entry2.i ], [ %22, %if.entry6.i ], [ %23, %ifend8.i ]
  %24 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %common.ret.op.i, ptr nonnull %indices, i64 2, ptr nonnull @236)
  br label %common.ret

ifend:                                            ; preds = %end
  store ptr %5, ptr %indices_1, align 8
  %25 = load ptr, ptr %memberidx1, align 8
  %26 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %25)
  %27 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %26, ptr nonnull %indices_1, i64 1, ptr nonnull @237)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_member_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %indices_buffer = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %7 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %PropId, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %8)
  %.not.i97 = icmp eq ptr %9, null
  br i1 %.not.i97, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %4
  %memberidx.i99 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %10 = load ptr, ptr %memberidx.i99, align 8
  %memberidx.i.i100 = getelementptr inbounds %Program, ptr %10, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i100, align 8
  %12 = load i64, ptr %8, align 4
  %memberidx.i.i.i101 = getelementptr inbounds %Array_Module_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i.i.i101, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i102 = getelementptr inbounds %Module, ptr %14, i64 0, i32 3
  %15 = load ptr, ptr %memberidx2.i.i102, align 8
  %memberidx3.i.i103 = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %16 = load i64, ptr %memberidx3.i.i103, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %17, i64 %16
  %18 = load ptr, ptr %ptridx.i6.i.i, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %18)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %18)
  %19 = load ptr, ptr %18, align 8
  %20 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %19)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %4, %ifend.i
  %common.ret.op.i98 = phi ptr [ %20, %ifend.i ], [ %9, %4 ]
  %21 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i = getelementptr inbounds %PropId, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %23 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %25 = load i64, ptr %memberidx2.i.i, align 4
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @222, i64 %23, i64 %24, i64 %25)
  %27 = load ptr, ptr %5, align 8
  %28 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %28, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 1
  store ptr %27, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 3
  store i64 %26, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %29 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %30 = call ptr %29(ptr nonnull %28)
  %31 = load i64, ptr %21, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %21, i64 0, i32 2
  %32 = load i64, ptr %memberidx3.i, align 4
  %33 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @238, ptr %30, i64 %31, i64 %32)
  %34 = load ptr, ptr %6, align 8
  %35 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %35, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %35, i64 0, i32 1
  store ptr %34, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %35, i64 0, i32 2
  store i64 %33, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %35, i64 0, i32 3
  store i64 %33, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %30)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %36 = load ptr, ptr %common.ret.op.i98, align 8
  %memberidx4 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i98, i64 0, i32 3
  %37 = load ptr, ptr %memberidx4, align 8
  %38 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %35)
  %memberidx.i44 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %37, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i44, align 4
  %40 = urem i64 %38, %39
  %41 = load ptr, ptr %37, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %41, i64 %40
  %42 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %42, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit, %else.i
  %43 = phi ptr [ %53, %else.i ], [ %41, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %44 = phi i64 [ %54, %else.i ], [ %39, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %45 = phi ptr [ %57, %else.i ], [ %42, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %hash.0.i = phi i64 [ %56, %else.i ], [ %40, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %46 = load ptr, ptr %45, align 8
  %memberidx.i.i45 = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  %47 = load i64, ptr %memberidx.i.i45, align 4
  %48 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i = icmp eq i64 %47, %48
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i47 = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  %49 = load ptr, ptr %memberidx2.i.i47, align 8
  %50 = load ptr, ptr %memberidx.i.i, align 8
  %51 = call i64 @memcmp(ptr %49, ptr %50, i64 %47)
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i44, align 4
  %.pre113 = load ptr, ptr %37, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre114.pre = load ptr, ptr %37, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre114.pre, i64 %hash.0.i
  %.pre115.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre115.pre, null
  br i1 %.not29.i, label %ifend, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %53 = phi ptr [ %.pre113, %ifend.i.i.else.i_crit_edge ], [ %43, %while.entry.i ]
  %54 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %44, %while.entry.i ]
  %55 = add nuw i64 %hash.0.i, 1
  %56 = urem i64 %55, %54
  %ptridx7.i = getelementptr inbounds ptr, ptr %53, i64 %56
  %57 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %57, null
  br i1 %.not30.i, label %ifend, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre115.pre, i64 0, i32 1
  %58 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %58, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_string_LLVMValueRef____getitem__.exit, %ifend12
  %common.ret.op = phi ptr [ %126, %ifend12 ], [ %58, %Map_string_LLVMValueRef____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %CodeGen_get_or_codegen_class_from_typeid.exit, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %59 = icmp eq ptr %3, null
  br i1 %59, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend
  %memberidx8 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %60 = load ptr, ptr %memberidx8, align 8
  %61 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %60)
  br label %ifend7

ifend7:                                           ; preds = %ifend, %if.entry5
  %ptr.0 = phi ptr [ %61, %if.entry5 ], [ %3, %ifend ]
  %62 = call ptr @LLVMInt32Type()
  %63 = call ptr @LLVMConstInt(ptr %62, i64 0, i1 false)
  store ptr %63, ptr %indices_buffer, align 8
  %64 = getelementptr inbounds ptr, ptr %indices_buffer, i64 1
  store ptr null, ptr %64, align 8
  %memberidx9 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %65 = load ptr, ptr %memberidx9, align 8
  %66 = load i64, ptr %65, align 4
  %67 = icmp eq i64 %66, 15
  br i1 %67, label %else11, label %if.entry10

if.entry10:                                       ; preds = %ifend7
  %memberidx13 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i98, i64 0, i32 5
  %68 = load ptr, ptr %memberidx13, align 8
  %69 = icmp ne ptr %68, null
  %. = zext i1 %69 to i64
  %70 = call ptr @LLVMInt32Type()
  %memberidx14 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i98, i64 0, i32 2
  %71 = load ptr, ptr %memberidx14, align 8
  %72 = call fastcc i64 @Map_string_uint__hash_fnc(ptr nonnull %35)
  %memberidx.i48 = getelementptr inbounds %Map_string_uint_, ptr %71, i64 0, i32 1
  %73 = load i64, ptr %memberidx.i48, align 4
  %74 = urem i64 %72, %73
  %75 = load ptr, ptr %71, align 8
  %ptridx.i49 = getelementptr inbounds ptr, ptr %75, i64 %74
  %76 = load ptr, ptr %ptridx.i49, align 8
  %.not.i50 = icmp eq ptr %76, null
  br i1 %.not.i50, label %Map_string_uint____getitem__.exit, label %while.entry.i56

while.entry.i56:                                  ; preds = %if.entry10, %else.i68
  %77 = phi ptr [ %87, %else.i68 ], [ %75, %if.entry10 ]
  %78 = phi i64 [ %88, %else.i68 ], [ %73, %if.entry10 ]
  %79 = phi ptr [ %91, %else.i68 ], [ %76, %if.entry10 ]
  %hash.0.i51 = phi i64 [ %90, %else.i68 ], [ %74, %if.entry10 ]
  %80 = load ptr, ptr %79, align 8
  %memberidx.i.i53 = getelementptr inbounds %string, ptr %80, i64 0, i32 2
  %81 = load i64, ptr %memberidx.i.i53, align 4
  %82 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i55 = icmp eq i64 %81, %82
  br i1 %.not.i.i55, label %ifend.i.i59, label %else.i68

ifend.i.i59:                                      ; preds = %while.entry.i56
  %memberidx2.i.i57 = getelementptr inbounds %string, ptr %80, i64 0, i32 1
  %83 = load ptr, ptr %memberidx2.i.i57, align 8
  %84 = load ptr, ptr %memberidx.i.i, align 8
  %85 = call i64 @memcmp(ptr %83, ptr %84, i64 %81)
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %while.end.i65, label %ifend.i.i59.else.i68_crit_edge

ifend.i.i59.else.i68_crit_edge:                   ; preds = %ifend.i.i59
  %.pre116 = load i64, ptr %memberidx.i48, align 4
  %.pre117 = load ptr, ptr %71, align 8
  br label %else.i68

while.end.i65:                                    ; preds = %ifend.i.i59
  %.pre118.pre = load ptr, ptr %71, align 8
  %ptridx9.i63.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre118.pre, i64 %hash.0.i51
  %.pre119.pre = load ptr, ptr %ptridx9.i63.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i64 = icmp eq ptr %.pre119.pre, null
  br i1 %.not29.i64, label %Map_string_uint____getitem__.exit, label %if.entry10.i71

else.i68:                                         ; preds = %ifend.i.i59.else.i68_crit_edge, %while.entry.i56
  %87 = phi ptr [ %.pre117, %ifend.i.i59.else.i68_crit_edge ], [ %77, %while.entry.i56 ]
  %88 = phi i64 [ %.pre116, %ifend.i.i59.else.i68_crit_edge ], [ %78, %while.entry.i56 ]
  %89 = add nuw i64 %hash.0.i51, 1
  %90 = urem i64 %89, %88
  %ptridx7.i66 = getelementptr inbounds ptr, ptr %87, i64 %90
  %91 = load ptr, ptr %ptridx7.i66, align 8
  %.not30.i67 = icmp eq ptr %91, null
  br i1 %.not30.i67, label %Map_string_uint____getitem__.exit, label %while.entry.i56

if.entry10.i71:                                   ; preds = %while.end.i65
  %memberidx15.i70 = getelementptr inbounds %MapEntry_string_uint_, ptr %.pre119.pre, i64 0, i32 1
  %92 = load i64, ptr %memberidx15.i70, align 4
  br label %Map_string_uint____getitem__.exit

Map_string_uint____getitem__.exit:                ; preds = %else.i68, %if.entry10, %while.end.i65, %if.entry10.i71
  %common.ret.op.i69 = phi i64 [ %92, %if.entry10.i71 ], [ 0, %while.end.i65 ], [ 0, %if.entry10 ], [ 0, %else.i68 ]
  %93 = add nuw i64 %common.ret.op.i69, %.
  %94 = call ptr @LLVMConstInt(ptr %70, i64 %93, i1 false)
  store ptr %94, ptr %64, align 8
  br label %ifend12

else11:                                           ; preds = %ifend7
  %95 = call ptr @LLVMInt32Type()
  %96 = call ptr @LLVMConstInt(ptr %95, i64 0, i1 false)
  store ptr %96, ptr %64, align 8
  %97 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %36, ptr %ptr.0, ptr nonnull %indices_buffer, i64 2, ptr nonnull @71)
  %memberidx18 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i98, i64 0, i32 5
  %98 = load ptr, ptr %memberidx18, align 8
  %99 = call ptr @LLVMPointerType(ptr %98, i64 0)
  %100 = call ptr @LLVMBuildLoad2(ptr %1, ptr %99, ptr %97, ptr nonnull @71)
  %101 = call ptr @LLVMInt32Type()
  %memberidx20 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i98, i64 0, i32 1
  %102 = load ptr, ptr %memberidx20, align 8
  %103 = call fastcc i64 @Map_string_uint__hash_fnc(ptr nonnull %35)
  %memberidx.i72 = getelementptr inbounds %Map_string_uint_, ptr %102, i64 0, i32 1
  %104 = load i64, ptr %memberidx.i72, align 4
  %105 = urem i64 %103, %104
  %106 = load ptr, ptr %102, align 8
  %ptridx.i73 = getelementptr inbounds ptr, ptr %106, i64 %105
  %107 = load ptr, ptr %ptridx.i73, align 8
  %.not.i74 = icmp eq ptr %107, null
  br i1 %.not.i74, label %Map_string_uint____getitem__.exit96, label %while.entry.i80

while.entry.i80:                                  ; preds = %else11, %else.i92
  %108 = phi ptr [ %118, %else.i92 ], [ %106, %else11 ]
  %109 = phi i64 [ %119, %else.i92 ], [ %104, %else11 ]
  %110 = phi ptr [ %122, %else.i92 ], [ %107, %else11 ]
  %hash.0.i75 = phi i64 [ %121, %else.i92 ], [ %105, %else11 ]
  %111 = load ptr, ptr %110, align 8
  %memberidx.i.i77 = getelementptr inbounds %string, ptr %111, i64 0, i32 2
  %112 = load i64, ptr %memberidx.i.i77, align 4
  %113 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i79 = icmp eq i64 %112, %113
  br i1 %.not.i.i79, label %ifend.i.i83, label %else.i92

ifend.i.i83:                                      ; preds = %while.entry.i80
  %memberidx2.i.i81 = getelementptr inbounds %string, ptr %111, i64 0, i32 1
  %114 = load ptr, ptr %memberidx2.i.i81, align 8
  %115 = load ptr, ptr %memberidx.i.i, align 8
  %116 = call i64 @memcmp(ptr %114, ptr %115, i64 %112)
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %while.end.i89, label %ifend.i.i83.else.i92_crit_edge

ifend.i.i83.else.i92_crit_edge:                   ; preds = %ifend.i.i83
  %.pre120 = load i64, ptr %memberidx.i72, align 4
  %.pre121 = load ptr, ptr %102, align 8
  br label %else.i92

while.end.i89:                                    ; preds = %ifend.i.i83
  %.pre122.pre = load ptr, ptr %102, align 8
  %ptridx9.i87.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre122.pre, i64 %hash.0.i75
  %.pre123.pre = load ptr, ptr %ptridx9.i87.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i88 = icmp eq ptr %.pre123.pre, null
  br i1 %.not29.i88, label %Map_string_uint____getitem__.exit96, label %if.entry10.i95

else.i92:                                         ; preds = %ifend.i.i83.else.i92_crit_edge, %while.entry.i80
  %118 = phi ptr [ %.pre121, %ifend.i.i83.else.i92_crit_edge ], [ %108, %while.entry.i80 ]
  %119 = phi i64 [ %.pre120, %ifend.i.i83.else.i92_crit_edge ], [ %109, %while.entry.i80 ]
  %120 = add nuw i64 %hash.0.i75, 1
  %121 = urem i64 %120, %119
  %ptridx7.i90 = getelementptr inbounds ptr, ptr %118, i64 %121
  %122 = load ptr, ptr %ptridx7.i90, align 8
  %.not30.i91 = icmp eq ptr %122, null
  br i1 %.not30.i91, label %Map_string_uint____getitem__.exit96, label %while.entry.i80

if.entry10.i95:                                   ; preds = %while.end.i89
  %memberidx15.i94 = getelementptr inbounds %MapEntry_string_uint_, ptr %.pre123.pre, i64 0, i32 1
  %123 = load i64, ptr %memberidx15.i94, align 4
  br label %Map_string_uint____getitem__.exit96

Map_string_uint____getitem__.exit96:              ; preds = %else.i92, %else11, %while.end.i89, %if.entry10.i95
  %common.ret.op.i93 = phi i64 [ %123, %if.entry10.i95 ], [ 0, %while.end.i89 ], [ 0, %else11 ], [ 0, %else.i92 ]
  %124 = call ptr @LLVMConstInt(ptr %101, i64 %common.ret.op.i93, i1 false)
  store ptr %124, ptr %64, align 8
  %125 = load ptr, ptr %memberidx18, align 8
  br label %ifend12

ifend12:                                          ; preds = %Map_string_uint____getitem__.exit96, %Map_string_uint____getitem__.exit
  %struct_type.0 = phi ptr [ %36, %Map_string_uint____getitem__.exit ], [ %125, %Map_string_uint____getitem__.exit96 ]
  %ptr.1 = phi ptr [ %ptr.0, %Map_string_uint____getitem__.exit ], [ %100, %Map_string_uint____getitem__.exit96 ]
  %126 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %struct_type.0, ptr %ptr.1, ptr nonnull %indices_buffer, i64 2, ptr nonnull @239)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_builtin_array(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
end:
  %args = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %4, i1 false)
  %memberidx1 = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %8, i1 true)
  %10 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %5, ptr nonnull @71)
  %memberidx2 = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Expression_, ptr %11, i64 0, i32 2
  %12 = load i64, ptr %memberidx3, align 4
  %13 = tail call i64 @llvm.smax.i64(i64 %12, i64 1)
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 %13, i1 false)
  %16 = tail call ptr @LLVMIntType(i64 64)
  %17 = tail call ptr @LLVMConstInt(ptr %16, i64 %12, i1 false)
  store ptr %10, ptr %args, align 8
  %18 = getelementptr inbounds ptr, ptr %args, i64 1
  %19 = tail call ptr @LLVMSizeOf(ptr %9)
  %20 = tail call ptr @LLVMConstMul(ptr %15, ptr %19)
  store ptr %20, ptr %18, align 8
  %memberidx.i32 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %21 = load i64, ptr %4, align 4
  %cond56 = icmp eq i64 %21, 19
  br i1 %cond56, label %if.entry.i48, label %get_class_from_type.exit

if.entry.i48:                                     ; preds = %end, %if.entry.i48
  %.tr11.i57 = phi ptr [ %22, %if.entry.i48 ], [ %4, %end ]
  %memberidx1.i47 = getelementptr inbounds %GenericType, ptr %.tr11.i57, i64 0, i32 3
  %22 = load ptr, ptr %memberidx1.i47, align 8
  %23 = load i64, ptr %22, align 4
  %cond = icmp eq i64 %23, 19
  br i1 %cond, label %if.entry.i48, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i48, %end
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %4, i64 0, i32 1
  %24 = load ptr, ptr %memberidx1.i, align 8
  %25 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %24)
  %.not.i33 = icmp eq ptr %25, null
  br i1 %.not.i33, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %26 = load ptr, ptr %memberidx.i32, align 8
  %memberidx.i.i36 = getelementptr inbounds %Program, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx.i.i36, align 8
  %28 = load i64, ptr %24, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %29, i64 %28
  %30 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i37 = getelementptr inbounds %Module, ptr %30, i64 0, i32 3
  %31 = load ptr, ptr %memberidx2.i.i37, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 2
  %32 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %31, i64 0, i32 1
  %33 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %33, i64 %32
  %34 = load ptr, ptr %ptridx.i6.i.i, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %34)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %34)
  %35 = load ptr, ptr %34, align 8
  %36 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %35)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %36, %ifend.i ], [ %25, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 6
  %37 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %37, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %38 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %37)
  %39 = call ptr @LLVMBuildCall2(ptr %1, ptr %38, ptr nonnull %37, ptr nonnull %args, i64 2, ptr nonnull @71)
  br label %CodeGen_build_constructor_call.exit

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %40 = tail call ptr @malloc(i32 47)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %40, ptr noundef nonnull align 8 dereferenceable(47) @264, i64 47, i1 false)
  %41 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %41, align 8
  %memberidx.i.i38 = getelementptr inbounds %string, ptr %41, i64 0, i32 1
  store ptr %40, ptr %memberidx.i.i38, align 8
  %memberidx1.i.i39 = getelementptr inbounds %string, ptr %41, i64 0, i32 2
  store i64 47, ptr %memberidx1.i.i39, align 4
  %memberidx2.i.i40 = getelementptr inbounds %string, ptr %41, i64 0, i32 3
  store i64 47, ptr %memberidx2.i.i40, align 4
  %42 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %42, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %43 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %43, align 8
  %memberidx.i.i.i41 = getelementptr inbounds %string, ptr %43, i64 0, i32 1
  store ptr %42, ptr %memberidx.i.i.i41, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %43, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %43, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %44 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %45 = tail call ptr %44(ptr nonnull %43)
  %46 = load i64, ptr %memberidx1.i.i.i, align 4
  tail call void @write(i64 1, ptr %45, i64 %46)
  %47 = load ptr, ptr %memberidx.i.i.i41, align 8
  tail call void @free(ptr %47)
  tail call void @free(ptr %43)
  %48 = load ptr, ptr %41, align 8
  %memberidx.i.i.i42 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %48, i64 0, i32 3
  %49 = load ptr, ptr %memberidx.i.i.i42, align 8
  %50 = tail call ptr %49(ptr nonnull %41)
  %51 = load i64, ptr %memberidx1.i.i39, align 4
  tail call void @write(i64 1, ptr %50, i64 %51)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  %52 = load ptr, ptr %memberidx.i.i38, align 8
  tail call void @free(ptr %52)
  tail call void @free(ptr %41)
  tail call void @exit(i64 -1)
  br label %CodeGen_build_constructor_call.exit

CodeGen_build_constructor_call.exit:              ; preds = %if.entry.i, %else.i
  %53 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %53, ptr noundef nonnull align 8 dereferenceable(6) @240, i64 6, i1 false)
  %54 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %54, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %54, i64 0, i32 1
  store ptr %53, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %54, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %54, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i, align 4
  %55 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %10, ptr nonnull %4, ptr nonnull %54)
  %56 = call ptr @LLVMPointerType(ptr %9, i64 0)
  %57 = call ptr @LLVMBuildLoad2(ptr %1, ptr %56, ptr %55, ptr nonnull @71)
  %58 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %57, ptr %3)
  %59 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %59, ptr noundef nonnull align 8 dereferenceable(6) @241, i64 6, i1 false)
  %60 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %60, align 8
  %memberidx.i.i29 = getelementptr inbounds %string, ptr %60, i64 0, i32 1
  store ptr %59, ptr %memberidx.i.i29, align 8
  %memberidx1.i.i30 = getelementptr inbounds %string, ptr %60, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i30, align 4
  %memberidx2.i.i31 = getelementptr inbounds %string, ptr %60, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i31, align 4
  %61 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %10, ptr nonnull %4, ptr nonnull %60)
  %62 = call ptr @LLVMBuildStore(ptr %1, ptr %17, ptr %61)
  ret ptr %10
}

define internal fastcc void @CodeGen_declare_class(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = tail call ptr @malloc(i32 56)
  %5 = tail call ptr @malloc(i32 24)
  %6 = tail call ptr @malloc(i32 2048)
  store ptr %6, ptr %5, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i79 = phi i64 [ 0, %2 ], [ %8, %for.body.i.i ]
  %7 = load ptr, ptr %5, align 8
  %ptridx.i.i71 = getelementptr inbounds ptr, ptr %7, i64 %i.0.i.i79
  store ptr null, ptr %ptridx.i.i71, align 8
  %8 = add nuw nsw i64 %i.0.i.i79, 1
  %9 = icmp ult i64 %i.0.i.i79, 255
  br i1 %9, label %for.body.i.i, label %Map_string_uint__constructor.exit.i

Map_string_uint__constructor.exit.i:              ; preds = %for.body.i.i
  %memberidx.i70 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 1
  %memberidx2.i.i72 = getelementptr inbounds %Map_string_uint_, ptr %5, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i72, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_string_uint_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %5, ptr %memberidx.i70, align 8
  %10 = tail call ptr @malloc(i32 24)
  %11 = tail call ptr @malloc(i32 2048)
  store ptr %11, ptr %10, align 8
  br label %for.body.i12.i

for.body.i12.i:                                   ; preds = %Map_string_uint__constructor.exit.i, %for.body.i12.i
  %i.0.i9.i78 = phi i64 [ 0, %Map_string_uint__constructor.exit.i ], [ %13, %for.body.i12.i ]
  %12 = load ptr, ptr %10, align 8
  %ptridx.i11.i = getelementptr inbounds ptr, ptr %12, i64 %i.0.i9.i78
  store ptr null, ptr %ptridx.i11.i, align 8
  %13 = add nuw nsw i64 %i.0.i9.i78, 1
  %14 = icmp ult i64 %i.0.i9.i78, 255
  br i1 %14, label %for.body.i12.i, label %Map_string_uint__constructor.exit15.i

Map_string_uint__constructor.exit15.i:            ; preds = %for.body.i12.i
  %memberidx1.i73 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 2
  %memberidx2.i13.i = getelementptr inbounds %Map_string_uint_, ptr %10, i64 0, i32 1
  store i64 256, ptr %memberidx2.i13.i, align 4
  %memberidx3.i14.i = getelementptr inbounds %Map_string_uint_, ptr %10, i64 0, i32 2
  store i64 0, ptr %memberidx3.i14.i, align 4
  store ptr %10, ptr %memberidx1.i73, align 8
  %15 = tail call ptr @malloc(i32 24)
  %16 = tail call ptr @malloc(i32 2048)
  store ptr %16, ptr %15, align 8
  br label %for.body.i19.i

for.body.i19.i:                                   ; preds = %Map_string_uint__constructor.exit15.i, %for.body.i19.i
  %i.0.i16.i77 = phi i64 [ 0, %Map_string_uint__constructor.exit15.i ], [ %18, %for.body.i19.i ]
  %17 = load ptr, ptr %15, align 8
  %ptridx.i18.i = getelementptr inbounds ptr, ptr %17, i64 %i.0.i16.i77
  store ptr null, ptr %ptridx.i18.i, align 8
  %18 = add nuw nsw i64 %i.0.i16.i77, 1
  %19 = icmp ult i64 %i.0.i16.i77, 255
  br i1 %19, label %for.body.i19.i, label %CGClassType_constructor.exit

CGClassType_constructor.exit:                     ; preds = %for.body.i19.i
  %memberidx2.i74 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 3
  %memberidx2.i20.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %15, i64 0, i32 1
  store i64 256, ptr %memberidx2.i20.i, align 4
  %memberidx3.i21.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %15, i64 0, i32 2
  store i64 0, ptr %memberidx3.i21.i, align 4
  store ptr %15, ptr %memberidx2.i74, align 8
  %memberidx3.i75 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx3.i75, i8 0, i64 16, i1 false)
  %20 = load ptr, ptr %0, align 8
  %21 = tail call ptr @LLVMGetModuleContext(ptr %20)
  %memberidx2 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2, align 8
  %23 = load ptr, ptr %22, align 8
  %memberidx3 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx3, align 8
  %25 = tail call ptr %24(ptr nonnull %22)
  %26 = tail call ptr @LLVMStructCreateNamed(ptr %21, ptr %25)
  store ptr %26, ptr %4, align 8
  %27 = load ptr, ptr %1, align 8
  %memberidx.i66 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %28 = load ptr, ptr %memberidx.i66, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %29 = load i64, ptr %27, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %27, i64 0, i32 1
  %30 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i67 = getelementptr inbounds %TypeId, ptr %27, i64 0, i32 2
  %31 = load i64, ptr %memberidx2.i.i67, align 4
  %32 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @222, i64 %29, i64 %30, i64 %31)
  %33 = load ptr, ptr %3, align 8
  %34 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i.i.i68 = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i.i.i68, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 %32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i69 = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 %32, ptr %memberidx2.i.i.i69, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_string_CGClassType____setitem__(ptr %28, ptr nonnull %34, ptr nonnull %4)
  %35 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMTypeRef_, ptr %35, align 8
  %memberidx.i63 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %35, i64 0, i32 2
  %memberidx1.i64 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %35, i64 0, i32 3
  store i64 8, ptr %memberidx1.i64, align 4
  %memberidx2.i65 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %35, i64 0, i32 1
  %36 = call ptr @malloc(i32 64)
  store ptr %36, ptr %memberidx2.i65, align 8
  store i64 0, ptr %memberidx.i63, align 4
  call fastcc void @CodeGen_declare_static_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1)
  call fastcc void @CodeGen_declare_class_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1, ptr nonnull %35)
  %37 = load ptr, ptr %4, align 8
  %38 = load ptr, ptr %memberidx2.i65, align 8
  %39 = load i64, ptr %memberidx.i63, align 4
  call void @LLVMStructSetBody(ptr %37, ptr %38, i64 %39, i1 true)
  call void @free(ptr %38)
  tail call void @free(ptr %35)
  %memberidx10 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %40 = load ptr, ptr %memberidx10, align 8
  %.not = icmp eq ptr %40, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %CGClassType_constructor.exit
  %memberidx11 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %41 = load ptr, ptr %memberidx11, align 8
  %memberidx.i.i58 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 1
  %42 = load ptr, ptr %memberidx.i.i58, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %41, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i.i.i, align 8
  %44 = load i64, ptr %42, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %43, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %45, i64 %44
  %46 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %46, i64 0, i32 3
  %47 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %42, i64 0, i32 2
  %48 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %49, i64 %48
  %50 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %51 = load i64, ptr %40, align 4
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %if.entry
  %memberidx1.i59 = getelementptr inbounds %Class, ptr %50, i64 0, i32 5
  %53 = load ptr, ptr %memberidx1.i59, align 8
  %memberidx2.i60 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %54 = load i64, ptr %memberidx2.i60, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %53, i64 0, i32 1
  %55 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %55, i64 %54
  %56 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %56, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx4.i = getelementptr inbounds %Class, ptr %50, i64 0, i32 4
  %57 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %58 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %57, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %59, i64 %58
  %60 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i61 = getelementptr inbounds %ClassField, ptr %60, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i61, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %61 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %61, align 8
  %memberidx.i55 = getelementptr inbounds %Array_Type_, ptr %61, i64 0, i32 2
  store i64 0, ptr %memberidx.i55, align 4
  %memberidx1.i56 = getelementptr inbounds %Array_Type_, ptr %61, i64 0, i32 3
  store i64 8, ptr %memberidx1.i56, align 4
  %memberidx2.i57 = getelementptr inbounds %Array_Type_, ptr %61, i64 0, i32 1
  %62 = call ptr @malloc(i32 64)
  store ptr %62, ptr %memberidx2.i57, align 8
  %63 = tail call ptr @malloc(i32 16)
  %64 = load ptr, ptr %1, align 8
  store i64 11, ptr %63, align 4
  %memberidx.i54 = getelementptr inbounds %ObjectType, ptr %63, i64 0, i32 1
  store ptr %64, ptr %memberidx.i54, align 8
  store ptr %63, ptr %62, align 8
  store i64 1, ptr %memberidx.i55, align 4
  %memberidx16 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 1
  %65 = load ptr, ptr %memberidx16, align 8
  %memberidx2.i53 = getelementptr inbounds %Array_Type_, ptr %65, i64 0, i32 2
  %66 = load i64, ptr %memberidx2.i53, align 4
  %67 = icmp sgt i64 %66, 7
  br i1 %67, label %while.entry.i, label %Array_Type____adda__.exit

while.entry.i:                                    ; preds = %get_class_prop_type.exit, %while.entry.i
  %68 = phi ptr [ %72, %while.entry.i ], [ %62, %get_class_prop_type.exit ]
  %69 = phi i64 [ %70, %while.entry.i ], [ 8, %get_class_prop_type.exit ]
  %70 = shl nuw i64 %69, 1
  store i64 %70, ptr %memberidx1.i56, align 4
  %71 = shl i64 %69, 4
  %72 = call ptr @realloc(ptr %68, i64 %71)
  store ptr %72, ptr %memberidx2.i57, align 8
  %73 = add i64 %70, -1
  %74 = load i64, ptr %memberidx2.i53, align 4
  %75 = icmp slt i64 %73, %74
  br i1 %75, label %while.entry.i, label %Array_Type____adda__.exit

Array_Type____adda__.exit:                        ; preds = %while.entry.i, %get_class_prop_type.exit
  %76 = phi i64 [ %66, %get_class_prop_type.exit ], [ %74, %while.entry.i ]
  %77 = phi ptr [ %62, %get_class_prop_type.exit ], [ %72, %while.entry.i ]
  %78 = getelementptr inbounds ptr, ptr %77, i64 1
  %memberidx8.i = getelementptr inbounds %Array_Type_, ptr %65, i64 0, i32 1
  %79 = load ptr, ptr %memberidx8.i, align 8
  %80 = shl i64 %76, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1073741824 %78, ptr align 8 %79, i64 %80, i1 false)
  %81 = load i64, ptr %memberidx2.i53, align 4
  %82 = add nuw i64 %81, 1
  store i64 %82, ptr %memberidx.i55, align 4
  %83 = load ptr, ptr %memberidx16, align 8
  %memberidx.i50 = getelementptr inbounds %Array_Type_, ptr %83, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i50, align 8
  call void @free(ptr %84)
  tail call void @free(ptr %83)
  store ptr %61, ptr %memberidx16, align 8
  %85 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 false)
  %memberidx19 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 6
  %86 = load ptr, ptr %memberidx2, align 8
  %87 = load ptr, ptr %86, align 8
  %memberidx21 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %87, i64 0, i32 5
  %88 = load ptr, ptr %memberidx21, align 8
  %89 = call ptr %88(ptr nonnull %86)
  %90 = alloca ptr, align 8
  %91 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %90, ptr nonnull @267, ptr %89)
  %92 = load ptr, ptr %90, align 8
  %93 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %93, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %93, i64 0, i32 1
  store ptr %92, ptr %memberidx.i, align 8
  %memberidx1.i49 = getelementptr inbounds %string, ptr %93, i64 0, i32 2
  store i64 %91, ptr %memberidx1.i49, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %93, i64 0, i32 3
  store i64 %91, ptr %memberidx2.i, align 4
  tail call void @free(ptr %89)
  %94 = load ptr, ptr %0, align 8
  %95 = load ptr, ptr %93, align 8
  %memberidx1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %95, i64 0, i32 5
  %96 = load ptr, ptr %memberidx1.i, align 8
  %97 = call ptr %96(ptr nonnull %93)
  %98 = call ptr @LLVMAddFunction(ptr %94, ptr %97, ptr %85)
  store ptr %98, ptr %memberidx19, align 8
  br label %ifend

else:                                             ; preds = %CGClassType_constructor.exit
  %memberidx22 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 6
  store ptr null, ptr %memberidx22, align 8
  br label %ifend

ifend:                                            ; preds = %else, %Array_Type____adda__.exit
  ret void
}

define internal fastcc ptr @CodeGen_get_class_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @222, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_string_CGClassType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_string_CGClassType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %15, null
  br i1 %.not.i, label %Map_string_CGClassType____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %16 = phi ptr [ %26, %else.i ], [ %14, %2 ]
  %17 = phi i64 [ %27, %else.i ], [ %12, %2 ]
  %18 = phi ptr [ %30, %else.i ], [ %15, %2 ]
  %hash.0.i = phi i64 [ %29, %else.i ], [ %13, %2 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i.i1 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i1, align 4
  %21 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %20, %21
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i3 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i.i3, align 8
  %23 = load ptr, ptr %memberidx.i.i, align 8
  %24 = call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre5 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre6.pre = load ptr, ptr %4, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre6.pre, i64 %hash.0.i
  %.pre7.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre7.pre, null
  br i1 %.not29.i, label %Map_string_CGClassType____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %26 = phi ptr [ %.pre5, %ifend.i.i.else.i_crit_edge ], [ %16, %while.entry.i ]
  %27 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %17, %while.entry.i ]
  %28 = add nuw i64 %hash.0.i, 1
  %29 = urem i64 %28, %27
  %ptridx7.i = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %30, null
  br i1 %.not30.i, label %Map_string_CGClassType____getitem__.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_CGClassType_, ptr %.pre7.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx15.i, align 8
  br label %Map_string_CGClassType____getitem__.exit

Map_string_CGClassType____getitem__.exit:         ; preds = %else.i, %2, %while.end.i, %if.entry10.i
  %common.ret.op.i = phi ptr [ %31, %if.entry10.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_enum_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @222, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %10, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %10, i64 0, i32 3
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_string_CGEnumType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_string_CGEnumType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %15, null
  br i1 %.not.i, label %Map_string_CGEnumType____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %16 = phi ptr [ %26, %else.i ], [ %14, %2 ]
  %17 = phi i64 [ %27, %else.i ], [ %12, %2 ]
  %18 = phi ptr [ %30, %else.i ], [ %15, %2 ]
  %hash.0.i = phi i64 [ %29, %else.i ], [ %13, %2 ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i.i1 = getelementptr inbounds %string, ptr %19, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i1, align 4
  %21 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %20, %21
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i3 = getelementptr inbounds %string, ptr %19, i64 0, i32 1
  %22 = load ptr, ptr %memberidx2.i.i3, align 8
  %23 = load ptr, ptr %memberidx.i.i, align 8
  %24 = call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre5 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre6.pre = load ptr, ptr %4, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre6.pre, i64 %hash.0.i
  %.pre7.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre7.pre, null
  br i1 %.not29.i, label %Map_string_CGEnumType____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %26 = phi ptr [ %.pre5, %ifend.i.i.else.i_crit_edge ], [ %16, %while.entry.i ]
  %27 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %17, %while.entry.i ]
  %28 = add nuw i64 %hash.0.i, 1
  %29 = urem i64 %28, %27
  %ptridx7.i = getelementptr inbounds ptr, ptr %26, i64 %29
  %30 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %30, null
  br i1 %.not30.i, label %Map_string_CGEnumType____getitem__.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %.pre7.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx15.i, align 8
  br label %Map_string_CGEnumType____getitem__.exit

Map_string_CGEnumType____getitem__.exit:          ; preds = %else.i, %2, %while.end.i, %if.entry10.i
  %common.ret.op.i = phi ptr [ %31, %if.entry10.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_member_mem_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3, ptr %4) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx, align 8
  %7 = load i64, ptr %3, align 4
  %switch10 = icmp eq i64 %7, 19
  br i1 %switch10, label %if.entry.i3, label %if.entry3.i

if.entry.i3:                                      ; preds = %5, %if.entry.i3
  %.tr11.i11 = phi ptr [ %8, %if.entry.i3 ], [ %3, %5 ]
  %memberidx1.i2 = getelementptr inbounds %GenericType, ptr %.tr11.i11, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1.i2, align 8
  %9 = load i64, ptr %8, align 4
  %switch = icmp eq i64 %9, 19
  br i1 %switch, label %if.entry.i3, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i3, %5
  %.tr11.i.lcssa = phi ptr [ %3, %5 ], [ %8, %if.entry.i3 ]
  %memberidx6.i4 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %10 = load ptr, ptr %memberidx6.i4, align 8
  %memberidx.i.i5 = getelementptr inbounds %Program, ptr %6, i64 0, i32 1
  %11 = load ptr, ptr %memberidx.i.i5, align 8
  %12 = load i64, ptr %10, align 4
  %memberidx.i.i.i6 = getelementptr inbounds %Array_Module_, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %memberidx.i.i.i6, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i7 = getelementptr inbounds %Module, ptr %14, i64 0, i32 3
  %15 = load ptr, ptr %memberidx2.i.i7, align 8
  %memberidx3.i.i8 = getelementptr inbounds %TypeId, ptr %10, i64 0, i32 2
  %16 = load i64, ptr %memberidx3.i.i8, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %17, i64 %16
  %18 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %18, i64 0, i32 6
  %19 = load ptr, ptr %memberidx1, align 8
  %20 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_string_PropId_, ptr %19, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %19, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %23, i64 %22
  %24 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %24, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %25 = phi ptr [ %35, %else.i ], [ %23, %while.entry.i.preheader ]
  %26 = phi i64 [ %36, %else.i ], [ %21, %while.entry.i.preheader ]
  %27 = phi ptr [ %39, %else.i ], [ %24, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %38, %else.i ], [ %22, %while.entry.i.preheader ]
  %28 = load ptr, ptr %27, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx.i.i, align 4
  %30 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %29, %30
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 1
  %31 = load ptr, ptr %memberidx2.i.i, align 8
  %32 = load ptr, ptr %memberidx3.i.i, align 8
  %33 = tail call i64 @memcmp(ptr %31, ptr %32, i64 %29)
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre12 = load ptr, ptr %19, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre13.pre = load ptr, ptr %19, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre13.pre, i64 %hash.0.i
  %.pre14.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre14.pre, null
  br i1 %.not29.i, label %common.ret, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %35 = phi ptr [ %.pre12, %ifend.i.i.else.i_crit_edge ], [ %25, %while.entry.i ]
  %36 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %26, %while.entry.i ]
  %37 = add nuw i64 %hash.0.i, 1
  %38 = urem i64 %37, %36
  %ptridx7.i = getelementptr inbounds ptr, ptr %35, i64 %38
  %39 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %39, null
  br i1 %.not30.i, label %common.ret, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre14.pre, i64 0, i32 1
  %40 = load ptr, ptr %memberidx15.i, align 8
  %41 = icmp eq ptr %40, null
  br i1 %41, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_string_PropId____getitem__.exit, %ifend5
  %common.ret.op = phi ptr [ %63, %ifend5 ], [ null, %Map_string_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %42 = load ptr, ptr %memberidx, align 8
  %memberidx.i.i12 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 1
  %43 = load ptr, ptr %memberidx.i.i12, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i.i.i, align 8
  %45 = load i64, ptr %43, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %46, i64 %45
  %47 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %47, i64 0, i32 3
  %48 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %43, i64 0, i32 2
  %49 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %50, i64 %49
  %51 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %52 = load i64, ptr %40, align 4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %51, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %55 = load i64, ptr %memberidx2.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %54, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %56, i64 %55
  %57 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %57, i64 0, i32 4
  br label %ifend5

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %51, i64 0, i32 4
  %58 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %59 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %58, i64 0, i32 1
  %60 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %60, i64 %59
  %61 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %61, i64 0, i32 4
  br label %ifend5

ifend5:                                           ; preds = %ifend.i, %if.entry.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i13 = load ptr, ptr %common.ret.op.in.i, align 8
  %62 = alloca %MemberExpression, align 8
  store i64 8, ptr %62, align 8
  %memberidx.i.i14 = getelementptr inbounds %Expression, ptr %62, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i14, align 4
  %memberidx1.i.i15 = getelementptr inbounds %Expression, ptr %62, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i15, align 8
  %memberidx.i16 = getelementptr inbounds %MemberExpression, ptr %62, i64 0, i32 4
  store ptr null, ptr %memberidx.i16, align 8
  %memberidx1.i17 = getelementptr inbounds %MemberExpression, ptr %62, i64 0, i32 5
  store ptr %40, ptr %memberidx1.i17, align 8
  %memberidx2.i18 = getelementptr inbounds %Expression, ptr %62, i64 0, i32 3
  store ptr %common.ret.op.i13, ptr %memberidx2.i18, align 8
  %63 = call fastcc ptr @CodeGen_get_member_expr_mem(ptr nonnull %0, ptr %1, ptr nonnull %62, ptr %2)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_member_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr %4, ptr writeonly %5) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %3, align 4
  %switch35 = icmp eq i64 %8, 19
  br i1 %switch35, label %if.entry.i28, label %if.entry3.i

if.entry.i28:                                     ; preds = %6, %if.entry.i28
  %.tr11.i36 = phi ptr [ %9, %if.entry.i28 ], [ %3, %6 ]
  %memberidx1.i27 = getelementptr inbounds %GenericType, ptr %.tr11.i36, i64 0, i32 3
  %9 = load ptr, ptr %memberidx1.i27, align 8
  %10 = load i64, ptr %9, align 4
  %switch = icmp eq i64 %10, 19
  br i1 %switch, label %if.entry.i28, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i28, %6
  %.tr11.i.lcssa = phi ptr [ %3, %6 ], [ %9, %if.entry.i28 ]
  %memberidx6.i29 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i29, align 8
  %memberidx.i.i30 = getelementptr inbounds %Program, ptr %7, i64 0, i32 1
  %12 = load ptr, ptr %memberidx.i.i30, align 8
  %13 = load i64, ptr %11, align 4
  %memberidx.i.i.i31 = getelementptr inbounds %Array_Module_, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i.i.i31, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %14, i64 %13
  %15 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i32 = getelementptr inbounds %Module, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2.i.i32, align 8
  %memberidx3.i.i33 = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i33, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %18, i64 %17
  %19 = load ptr, ptr %ptridx.i6.i.i, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %19, i64 0, i32 6
  %20 = load ptr, ptr %memberidx1, align 8
  %21 = tail call fastcc i64 @Map_string_PropId__hash_fnc(ptr %4)
  %memberidx.i15 = getelementptr inbounds %Map_string_PropId_, ptr %20, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i15, align 4
  %23 = urem i64 %21, %22
  %24 = load ptr, ptr %20, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %24, i64 %23
  %25 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %25, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i17 = getelementptr inbounds %string, ptr %4, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %26 = phi ptr [ %36, %else.i ], [ %24, %while.entry.i.preheader ]
  %27 = phi i64 [ %37, %else.i ], [ %22, %while.entry.i.preheader ]
  %28 = phi ptr [ %40, %else.i ], [ %25, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %39, %else.i ], [ %23, %while.entry.i.preheader ]
  %29 = load ptr, ptr %28, align 8
  %memberidx.i.i16 = getelementptr inbounds %string, ptr %29, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i16, align 4
  %31 = load i64, ptr %memberidx1.i.i17, align 4
  %.not.i.i = icmp eq i64 %30, %31
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i = getelementptr inbounds %string, ptr %29, i64 0, i32 1
  %32 = load ptr, ptr %memberidx2.i.i, align 8
  %33 = load ptr, ptr %memberidx3.i.i, align 8
  %34 = tail call i64 @memcmp(ptr %32, ptr %33, i64 %30)
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i15, align 4
  %.pre37 = load ptr, ptr %20, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre38.pre = load ptr, ptr %20, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre38.pre, i64 %hash.0.i
  %.pre39.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre39.pre, null
  br i1 %.not29.i, label %common.ret, label %Map_string_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %36 = phi ptr [ %.pre37, %ifend.i.i.else.i_crit_edge ], [ %26, %while.entry.i ]
  %37 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %38 = add nuw i64 %hash.0.i, 1
  %39 = urem i64 %38, %37
  %ptridx7.i = getelementptr inbounds ptr, ptr %36, i64 %39
  %40 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %40, null
  br i1 %.not30.i, label %common.ret, label %while.entry.i

Map_string_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_PropId_, ptr %.pre39.pre, i64 0, i32 1
  %41 = load ptr, ptr %memberidx15.i, align 8
  %42 = icmp eq ptr %41, null
  br i1 %42, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_string_PropId____getitem__.exit, %ifend5
  %common.ret.op = phi ptr [ %65, %ifend5 ], [ null, %Map_string_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_string_PropId____getitem__.exit
  %43 = load ptr, ptr %memberidx, align 8
  %memberidx.i.i18 = getelementptr inbounds %PropId, ptr %41, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i.i18, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %43, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i.i, align 8
  %46 = load i64, ptr %44, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %45, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %47, i64 %46
  %48 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %48, i64 0, i32 3
  %49 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %44, i64 0, i32 2
  %50 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %49, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %51, i64 %50
  %52 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %53 = load i64, ptr %41, align 4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i20 = getelementptr inbounds %Class, ptr %52, i64 0, i32 5
  %55 = load ptr, ptr %memberidx1.i20, align 8
  %memberidx2.i21 = getelementptr inbounds %PropId, ptr %41, i64 0, i32 2
  %56 = load i64, ptr %memberidx2.i21, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %57, i64 %56
  %58 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %58, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %52, i64 0, i32 4
  %59 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %41, i64 0, i32 2
  %60 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %59, i64 0, i32 1
  %61 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %61, i64 %60
  %62 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %62, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i19 = load ptr, ptr %common.ret.op.in.i, align 8
  %.not = icmp eq ptr %5, null
  br i1 %.not, label %ifend5, label %if.entry3

if.entry3:                                        ; preds = %get_class_prop_type.exit
  store ptr %common.ret.op.i19, ptr %5, align 8
  br label %ifend5

ifend5:                                           ; preds = %get_class_prop_type.exit, %if.entry3
  %63 = alloca %Expression, align 8
  store i64 8, ptr %63, align 8
  %memberidx.i22 = getelementptr inbounds %Expression, ptr %63, i64 0, i32 2
  store i64 7, ptr %memberidx.i22, align 4
  %memberidx1.i23 = getelementptr inbounds %Expression, ptr %63, i64 0, i32 1
  store i1 false, ptr %memberidx1.i23, align 8
  %memberidx6 = getelementptr inbounds %Expression, ptr %63, i64 0, i32 3
  store ptr %3, ptr %memberidx6, align 8
  %64 = alloca %MemberExpression, align 8
  store i64 8, ptr %64, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %64, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %64, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 8
  %memberidx.i = getelementptr inbounds %MemberExpression, ptr %64, i64 0, i32 4
  store ptr %63, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %MemberExpression, ptr %64, i64 0, i32 5
  store ptr %41, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Expression, ptr %64, i64 0, i32 3
  store ptr %common.ret.op.i19, ptr %memberidx2.i, align 8
  %65 = call fastcc ptr @CodeGen_codegen_member_exp(ptr nonnull %0, ptr %1, ptr nonnull %64, ptr %2)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_for_stmt(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @LLVMAppendBasicBlock(ptr %4, ptr nonnull @257)
  %6 = tail call ptr @LLVMBuildBr(ptr %1, ptr %5)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %5)
  %memberidx1 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1, align 8
  %.not = icmp eq ptr %7, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %7)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %memberidx3 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 2
  %8 = load ptr, ptr %memberidx3, align 8
  %.not95 = icmp eq ptr %8, null
  br i1 %.not95, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %8)
  br label %ifend6

ifend6:                                           ; preds = %ifend, %if.entry4
  %9 = load ptr, ptr %memberidx, align 8
  %10 = tail call ptr @LLVMAppendBasicBlock(ptr %9, ptr nonnull @258)
  %11 = load ptr, ptr %memberidx, align 8
  %12 = tail call ptr @LLVMAppendBasicBlock(ptr %11, ptr nonnull @259)
  %13 = load ptr, ptr %memberidx, align 8
  %14 = tail call ptr @LLVMAppendBasicBlock(ptr %13, ptr nonnull @260)
  %15 = load ptr, ptr %memberidx, align 8
  %16 = tail call ptr @LLVMAppendBasicBlock(ptr %15, ptr nonnull @261)
  %memberidx12 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %memberidx12, align 8
  %memberidx13 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %memberidx13, align 8
  store ptr %16, ptr %memberidx12, align 8
  store ptr %14, ptr %memberidx13, align 8
  %19 = tail call ptr @LLVMBuildBr(ptr %1, ptr %10)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %10)
  %20 = tail call ptr @LLVMInt1Type()
  %21 = tail call ptr @LLVMConstInt(ptr %20, i64 1, i1 false)
  %memberidx16 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %memberidx16, align 8
  %.not96 = icmp eq ptr %22, null
  br i1 %.not96, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend6
  %23 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %22)
  br label %ifend19

ifend19:                                          ; preds = %ifend6, %if.entry17
  %condition.0 = phi ptr [ %23, %if.entry17 ], [ %21, %ifend6 ]
  %24 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %condition.0, ptr %12, ptr %16)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %12)
  %memberidx21 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 5
  %25 = load ptr, ptr %memberidx21, align 8
  %memberidx.i106 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %26 = load i1, ptr %memberidx.i106, align 1
  store i1 false, ptr %memberidx.i106, align 1
  %27 = load ptr, ptr %25, align 8
  %28 = tail call ptr @malloc(i32 25)
  %memberidx.i.i107 = getelementptr inbounds %Array_Statement_, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i.i107, align 8
  %memberidx1.i.i108 = getelementptr inbounds %Array_Statement_, ptr %27, i64 0, i32 2
  %30 = load i64, ptr %memberidx1.i.i108, align 4
  store i1 false, ptr %28, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 3
  store ptr %29, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 2
  store i64 %30, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %CodeGen_codegen_block.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend19, %for.body.i
  %32 = phi i64 [ %33, %for.body.i ], [ 1, %ifend19 ]
  %statement.0.i115.in = phi ptr [ %ptridx.i14.i, %for.body.i ], [ %29, %ifend19 ]
  %statement.0.i115 = load ptr, ptr %statement.0.i115.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i115)
  %33 = add nuw nsw i64 %32, 1
  store i64 %33, ptr %memberidx1.i.i.i, align 4
  %ptridx.i14.i = getelementptr inbounds ptr, ptr %29, i64 %32
  %.not116 = icmp slt i64 %32, %30
  br i1 %.not116, label %for.body.i, label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.body.i, %ifend19
  tail call void @free(ptr nonnull %28)
  store i1 %26, ptr %memberidx.i106, align 1
  %34 = load ptr, ptr %memberidx21, align 8
  %memberidx.i = getelementptr inbounds %Block, ptr %34, i64 0, i32 1
  %35 = load i1, ptr %memberidx.i, align 1
  %memberidx1.i = getelementptr inbounds %Block, ptr %34, i64 0, i32 2
  %36 = load i1, ptr %memberidx1.i, align 1
  %37 = or i1 %35, %36
  %memberidx2.i = getelementptr inbounds %Block, ptr %34, i64 0, i32 3
  %38 = load i1, ptr %memberidx2.i, align 1
  %39 = or i1 %37, %38
  br i1 %39, label %ifend25, label %if.entry23

if.entry23:                                       ; preds = %CodeGen_codegen_block.exit
  %40 = tail call ptr @LLVMBuildBr(ptr %1, ptr %14)
  br label %ifend25

ifend25:                                          ; preds = %CodeGen_codegen_block.exit, %if.entry23
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %14)
  %memberidx26 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 4
  %41 = load ptr, ptr %memberidx26, align 8
  %.not97 = icmp eq ptr %41, null
  br i1 %.not97, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend25
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %41)
  br label %ifend29

ifend29:                                          ; preds = %ifend25, %if.entry27
  %42 = tail call ptr @LLVMBuildBr(ptr %1, ptr %10)
  store ptr %17, ptr %memberidx12, align 8
  store ptr %18, ptr %memberidx13, align 8
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %16)
  %43 = load ptr, ptr %memberidx1, align 8
  %.not98 = icmp eq ptr %43, null
  br i1 %.not98, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %ifend29
  %memberidx38 = getelementptr inbounds %VarDeclaration, ptr %43, i64 0, i32 2
  %44 = load ptr, ptr %memberidx38, align 8
  %45 = alloca %VarAccessExpression, align 8
  %memberidx39 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %46 = load ptr, ptr %memberidx39, align 8
  %memberidx.i99 = getelementptr inbounds %Program, ptr %46, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i99, align 8
  %memberidx1.i100 = getelementptr inbounds %VarId, ptr %44, i64 0, i32 1
  %48 = load i64, ptr %memberidx1.i100, align 4
  %memberidx.i.i = getelementptr inbounds %Array_Module_, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %49, i64 %48
  %50 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx2.i101 = getelementptr inbounds %Module, ptr %50, i64 0, i32 1
  %51 = load ptr, ptr %memberidx2.i101, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %44, i64 0, i32 2
  %52 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i5.i = getelementptr inbounds %Array_Var_, ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i5.i, align 8
  %ptridx.i6.i = getelementptr inbounds ptr, ptr %53, i64 %52
  %54 = load ptr, ptr %ptridx.i6.i, align 8
  %55 = load ptr, ptr %54, align 8
  store i64 8, ptr %45, align 8
  %memberidx.i.i102 = getelementptr inbounds %Expression, ptr %45, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i102, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %45, i64 0, i32 1
  %memberidx.i103 = getelementptr inbounds %VarAccessExpression, ptr %45, i64 0, i32 4
  store ptr %44, ptr %memberidx.i103, align 8
  %memberidx1.i104 = getelementptr inbounds %Expression, ptr %45, i64 0, i32 3
  store ptr %55, ptr %memberidx1.i104, align 8
  %56 = load i64, ptr %44, align 4
  %57 = icmp eq i64 %56, 2
  store i1 %57, ptr %memberidx1.i.i, align 8
  %58 = call fastcc ptr @CodeGen_codegen_var_access_exp(ptr nonnull %0, ptr %1, ptr nonnull %45)
  %59 = tail call ptr @LLVMBuildFree(ptr %1, ptr %58)
  br label %ifend36

ifend36:                                          ; preds = %ifend29, %if.entry34
  ret void
}

define internal fastcc ptr @CodeGen_codegen_member_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %7, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = load i64, ptr %8, align 4
  %10 = icmp eq i64 %9, 19
  br i1 %10, label %if.entry.i164, label %is_object.exit

if.entry.i164:                                    ; preds = %4, %if.entry.i164
  %.tr5.i = phi ptr [ %11, %if.entry.i164 ], [ %8, %4 ]
  %memberidx1.i163 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %11 = load ptr, ptr %memberidx1.i163, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 19
  br i1 %13, label %if.entry.i164, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i164, %4
  %.lcssa.i = phi i64 [ %9, %4 ], [ %12, %if.entry.i164 ]
  %14 = icmp eq i64 %.lcssa.i, 11
  br i1 %14, label %if.entry, label %ifend

if.entry:                                         ; preds = %is_object.exit
  %15 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr %2, ptr %3)
  %memberidx2 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %16 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %17 = load ptr, ptr %memberidx3, align 8
  %memberidx.i.i = getelementptr inbounds %PropId, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %16, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i.i.i, align 8
  %20 = load i64, ptr %18, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %19, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %21, i64 %20
  %22 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %22, i64 0, i32 3
  %23 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %18, i64 0, i32 2
  %24 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %25, i64 %24
  %26 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %27 = load i64, ptr %17, align 4
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %if.entry
  %memberidx1.i = getelementptr inbounds %Class, ptr %26, i64 0, i32 5
  %29 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %17, i64 0, i32 2
  %30 = load i64, ptr %memberidx2.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %31, i64 %30
  %32 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %32, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx4.i = getelementptr inbounds %Class, ptr %26, i64 0, i32 4
  %33 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %17, i64 0, i32 2
  %34 = load i64, ptr %memberidx5.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %35, i64 %34
  %36 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %36, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load i64, ptr %common.ret.op.in.i, align 4
  %37 = icmp eq i64 %common.ret.op.i, 1
  %memberidx4 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %38 = load ptr, ptr %memberidx4, align 8
  %39 = load i64, ptr %38, align 4
  %40 = icmp eq i64 %39, 15
  %41 = and i1 %37, %40
  br i1 %41, label %common.ret, label %ifend7

ifend:                                            ; preds = %is_object.exit
  %memberidx10 = getelementptr inbounds %VarAccessExpression, ptr %7, i64 0, i32 4
  %42 = load ptr, ptr %memberidx10, align 8
  %memberidx11 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %43 = load ptr, ptr %memberidx11, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i = getelementptr inbounds %PropId, ptr %43, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %45 = load i64, ptr %44, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %44, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %44, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i.i, align 4
  %48 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @222, i64 %45, i64 %46, i64 %47)
  %49 = load ptr, ptr %5, align 8
  %50 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %50, align 8
  %memberidx.i.i.i60 = getelementptr inbounds %string, ptr %50, i64 0, i32 1
  store ptr %49, ptr %memberidx.i.i.i60, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %50, i64 0, i32 2
  store i64 %48, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i61 = getelementptr inbounds %string, ptr %50, i64 0, i32 3
  store i64 %48, ptr %memberidx2.i.i.i61, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %51 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %52 = call ptr %51(ptr nonnull %50)
  %53 = load i64, ptr %43, align 4
  %memberidx3.i63 = getelementptr inbounds %PropId, ptr %43, i64 0, i32 2
  %54 = load i64, ptr %memberidx3.i63, align 4
  %55 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @238, ptr %52, i64 %53, i64 %54)
  %56 = load ptr, ptr %6, align 8
  %57 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %57, align 8
  %memberidx.i.i64 = getelementptr inbounds %string, ptr %57, i64 0, i32 1
  store ptr %56, ptr %memberidx.i.i64, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %57, i64 0, i32 2
  store i64 %55, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %57, i64 0, i32 3
  store i64 %55, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %52)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %58 = load i64, ptr %42, align 4
  switch i64 %58, label %common.ret [
    i64 3, label %if.entry13
    i64 4, label %if.entry29
  ]

common.ret:                                       ; preds = %else.i122, %ifend34, %if.entry10.i125, %while.end.i119, %ifend22, %ifend, %get_class_prop_visibility.exit, %ifend26, %ifend7
  %common.ret.op = phi ptr [ %60, %ifend7 ], [ %128, %ifend26 ], [ %15, %get_class_prop_visibility.exit ], [ null, %ifend ], [ %common.ret.op.i79169, %ifend22 ], [ %177, %if.entry10.i125 ], [ null, %while.end.i119 ], [ null, %ifend34 ], [ null, %else.i122 ]
  ret ptr %common.ret.op

ifend7:                                           ; preds = %get_class_prop_visibility.exit
  %59 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr nonnull %38, i1 true)
  %60 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %59, ptr %15, ptr nonnull @71)
  br label %common.ret

if.entry13:                                       ; preds = %ifend
  %61 = call ptr @malloc(i32 24)
  %memberidx.i65 = getelementptr inbounds %VarId, ptr %42, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i65, align 4
  %memberidx1.i66 = getelementptr inbounds %VarId, ptr %42, i64 0, i32 2
  %63 = load i64, ptr %memberidx1.i66, align 4
  store i64 %62, ptr %61, align 4
  %memberidx1.i.i.i67 = getelementptr inbounds %TypeId, ptr %61, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i67, align 4
  %memberidx2.i.i.i68 = getelementptr inbounds %TypeId, ptr %61, i64 0, i32 2
  store i64 %63, ptr %memberidx2.i.i.i68, align 4
  %64 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr nonnull %61)
  %.not.i136 = icmp eq ptr %64, null
  br i1 %.not.i136, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %ifend18

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry13
  %memberidx.i139 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %65 = load ptr, ptr %memberidx.i139, align 8
  %memberidx.i.i140 = getelementptr inbounds %Program, ptr %65, i64 0, i32 1
  %66 = load ptr, ptr %memberidx.i.i140, align 8
  %memberidx.i.i.i141 = getelementptr inbounds %Array_Module_, ptr %66, i64 0, i32 1
  %67 = load ptr, ptr %memberidx.i.i.i141, align 8
  %ptridx.i.i.i142 = getelementptr inbounds ptr, ptr %67, i64 %62
  %68 = load ptr, ptr %ptridx.i.i.i142, align 8
  %memberidx2.i.i143 = getelementptr inbounds %Module, ptr %68, i64 0, i32 3
  %69 = load ptr, ptr %memberidx2.i.i143, align 8
  %memberidx.i5.i.i145 = getelementptr inbounds %Array_Class_, ptr %69, i64 0, i32 1
  %70 = load ptr, ptr %memberidx.i5.i.i145, align 8
  %ptridx.i6.i.i146 = getelementptr inbounds ptr, ptr %70, i64 %63
  %71 = load ptr, ptr %ptridx.i6.i.i146, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %71)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %71)
  %72 = load ptr, ptr %71, align 8
  %73 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %72)
  %74 = icmp eq ptr %73, null
  br i1 %74, label %if.entry16, label %ifend18

if.entry16:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %75 = call ptr @malloc(i32 51)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(51) %75, ptr noundef nonnull align 8 dereferenceable(51) @250, i64 51, i1 false)
  %76 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %76, align 8
  %memberidx.i.i69 = getelementptr inbounds %string, ptr %76, i64 0, i32 1
  store ptr %75, ptr %memberidx.i.i69, align 8
  %memberidx1.i.i70 = getelementptr inbounds %string, ptr %76, i64 0, i32 2
  store i64 51, ptr %memberidx1.i.i70, align 4
  %memberidx2.i.i71 = getelementptr inbounds %string, ptr %76, i64 0, i32 3
  store i64 51, ptr %memberidx2.i.i71, align 4
  %77 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %77, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %78 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %78, align 8
  %memberidx.i.i.i72 = getelementptr inbounds %string, ptr %78, i64 0, i32 1
  store ptr %77, ptr %memberidx.i.i.i72, align 8
  %memberidx1.i.i.i73 = getelementptr inbounds %string, ptr %78, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i73, align 4
  %memberidx2.i.i.i74 = getelementptr inbounds %string, ptr %78, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i74, align 4
  %79 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %80 = call ptr %79(ptr nonnull %78)
  %81 = load i64, ptr %memberidx1.i.i.i73, align 4
  call void @write(i64 1, ptr %80, i64 %81)
  %82 = load ptr, ptr %memberidx.i.i.i72, align 8
  call void @free(ptr %82)
  call void @free(ptr %78)
  %83 = load ptr, ptr %76, align 8
  %memberidx.i.i.i148 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %83, i64 0, i32 3
  %84 = load ptr, ptr %memberidx.i.i.i148, align 8
  %85 = call ptr %84(ptr nonnull %76)
  %86 = load i64, ptr %memberidx1.i.i70, align 4
  call void @write(i64 1, ptr %85, i64 %86)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %87 = load ptr, ptr %memberidx.i.i69, align 8
  call void @free(ptr %87)
  call void @free(ptr %76)
  call void @exit(i64 -1)
  unreachable

ifend18:                                          ; preds = %if.entry13, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i137167 = phi ptr [ %73, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %64, %if.entry13 ]
  %memberidx19 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i137167, i64 0, i32 3
  %88 = load ptr, ptr %memberidx19, align 8
  %89 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %57)
  %memberidx.i75 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %88, i64 0, i32 1
  %90 = load i64, ptr %memberidx.i75, align 4
  %91 = urem i64 %89, %90
  %92 = load ptr, ptr %88, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %92, i64 %91
  %93 = load ptr, ptr %ptridx.i, align 8
  %.not.i = icmp eq ptr %93, null
  br i1 %.not.i, label %if.entry20, label %while.entry.i

while.entry.i:                                    ; preds = %ifend18, %else.i
  %94 = phi ptr [ %104, %else.i ], [ %92, %ifend18 ]
  %95 = phi i64 [ %105, %else.i ], [ %90, %ifend18 ]
  %96 = phi ptr [ %108, %else.i ], [ %93, %ifend18 ]
  %hash.0.i = phi i64 [ %107, %else.i ], [ %91, %ifend18 ]
  %97 = load ptr, ptr %96, align 8
  %memberidx.i.i76 = getelementptr inbounds %string, ptr %97, i64 0, i32 2
  %98 = load i64, ptr %memberidx.i.i76, align 4
  %99 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i = icmp eq i64 %98, %99
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i78 = getelementptr inbounds %string, ptr %97, i64 0, i32 1
  %100 = load ptr, ptr %memberidx2.i.i78, align 8
  %101 = load ptr, ptr %memberidx.i.i64, align 8
  %102 = call i64 @memcmp(ptr %100, ptr %101, i64 %98)
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre176 = load i64, ptr %memberidx.i75, align 4
  %.pre177 = load ptr, ptr %88, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre178.pre = load ptr, ptr %88, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre178.pre, i64 %hash.0.i
  %.pre179.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre179.pre, null
  br i1 %.not29.i, label %if.entry20, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %104 = phi ptr [ %.pre177, %ifend.i.i.else.i_crit_edge ], [ %94, %while.entry.i ]
  %105 = phi i64 [ %.pre176, %ifend.i.i.else.i_crit_edge ], [ %95, %while.entry.i ]
  %106 = add nuw i64 %hash.0.i, 1
  %107 = urem i64 %106, %105
  %ptridx7.i = getelementptr inbounds ptr, ptr %104, i64 %107
  %108 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %108, null
  br i1 %.not30.i, label %if.entry20, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre179.pre, i64 0, i32 1
  %109 = load ptr, ptr %memberidx15.i, align 8
  %110 = icmp eq ptr %109, null
  br i1 %110, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %else.i, %ifend18, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %111 = call ptr @malloc(i32 59)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(59) %111, ptr noundef nonnull align 8 dereferenceable(59) @251, i64 59, i1 false)
  %112 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %112, align 8
  %memberidx.i.i80 = getelementptr inbounds %string, ptr %112, i64 0, i32 1
  store ptr %111, ptr %memberidx.i.i80, align 8
  %memberidx1.i.i81 = getelementptr inbounds %string, ptr %112, i64 0, i32 2
  store i64 59, ptr %memberidx1.i.i81, align 4
  %memberidx2.i.i82 = getelementptr inbounds %string, ptr %112, i64 0, i32 3
  store i64 59, ptr %memberidx2.i.i82, align 4
  %113 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %113, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %114 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %114, align 8
  %memberidx.i.i.i83 = getelementptr inbounds %string, ptr %114, i64 0, i32 1
  store ptr %113, ptr %memberidx.i.i.i83, align 8
  %memberidx1.i.i.i84 = getelementptr inbounds %string, ptr %114, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i84, align 4
  %memberidx2.i.i.i85 = getelementptr inbounds %string, ptr %114, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i85, align 4
  %115 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %116 = call ptr %115(ptr nonnull %114)
  %117 = load i64, ptr %memberidx1.i.i.i84, align 4
  call void @write(i64 1, ptr %116, i64 %117)
  %118 = load ptr, ptr %memberidx.i.i.i83, align 8
  call void @free(ptr %118)
  call void @free(ptr %114)
  %119 = load ptr, ptr %112, align 8
  %memberidx.i.i.i151 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %119, i64 0, i32 3
  %120 = load ptr, ptr %memberidx.i.i.i151, align 8
  %121 = call ptr %120(ptr nonnull %112)
  %122 = load i64, ptr %memberidx1.i.i81, align 4
  call void @write(i64 1, ptr %121, i64 %122)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %123 = load ptr, ptr %memberidx.i.i80, align 8
  call void @free(ptr %123)
  call void @free(ptr %112)
  call void @exit(i64 -1)
  br label %ifend22

ifend22:                                          ; preds = %Map_string_LLVMValueRef____getitem__.exit, %if.entry20
  %common.ret.op.i79169 = phi ptr [ %109, %Map_string_LLVMValueRef____getitem__.exit ], [ null, %if.entry20 ]
  %memberidx23 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %124 = load ptr, ptr %memberidx23, align 8
  %125 = load i64, ptr %124, align 4
  %126 = icmp eq i64 %125, 15
  br i1 %126, label %common.ret, label %ifend26

ifend26:                                          ; preds = %ifend22
  %127 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %124, i1 true)
  %128 = call ptr @LLVMBuildLoad2(ptr %1, ptr %127, ptr %common.ret.op.i79169, ptr nonnull @71)
  br label %common.ret

if.entry29:                                       ; preds = %ifend
  %129 = call ptr @malloc(i32 24)
  %memberidx.i89 = getelementptr inbounds %VarId, ptr %42, i64 0, i32 1
  %130 = load i64, ptr %memberidx.i89, align 4
  %memberidx1.i90 = getelementptr inbounds %VarId, ptr %42, i64 0, i32 2
  %131 = load i64, ptr %memberidx1.i90, align 4
  store i64 %130, ptr %129, align 4
  %memberidx1.i.i.i91 = getelementptr inbounds %TypeId, ptr %129, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i91, align 4
  %memberidx2.i.i.i92 = getelementptr inbounds %TypeId, ptr %129, i64 0, i32 2
  store i64 %131, ptr %memberidx2.i.i.i92, align 4
  %132 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr nonnull %129)
  %.not.i127 = icmp eq ptr %132, null
  br i1 %.not.i127, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %ifend34

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry29
  %memberidx.i130 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %133 = load ptr, ptr %memberidx.i130, align 8
  %memberidx.i.i131 = getelementptr inbounds %Program, ptr %133, i64 0, i32 1
  %134 = load ptr, ptr %memberidx.i.i131, align 8
  %memberidx.i.i.i132 = getelementptr inbounds %Array_Module_, ptr %134, i64 0, i32 1
  %135 = load ptr, ptr %memberidx.i.i.i132, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %135, i64 %130
  %136 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i133 = getelementptr inbounds %Module, ptr %136, i64 0, i32 6
  %137 = load ptr, ptr %memberidx2.i.i133, align 8
  %memberidx.i5.i.i = getelementptr inbounds %Array_Enum_, ptr %137, i64 0, i32 1
  %138 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %138, i64 %131
  %139 = load ptr, ptr %ptridx.i6.i.i, align 8
  call fastcc void @CodeGen_declare_enum(ptr %0, ptr %139)
  %140 = load ptr, ptr %139, align 8
  %141 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %140)
  %142 = icmp eq ptr %141, null
  br i1 %142, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit
  %143 = call ptr @malloc(i32 50)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %143, ptr noundef nonnull align 8 dereferenceable(50) @252, i64 50, i1 false)
  %144 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %144, align 8
  %memberidx.i.i93 = getelementptr inbounds %string, ptr %144, i64 0, i32 1
  store ptr %143, ptr %memberidx.i.i93, align 8
  %memberidx1.i.i94 = getelementptr inbounds %string, ptr %144, i64 0, i32 2
  store i64 50, ptr %memberidx1.i.i94, align 4
  %memberidx2.i.i95 = getelementptr inbounds %string, ptr %144, i64 0, i32 3
  store i64 50, ptr %memberidx2.i.i95, align 4
  %145 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %145, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %146 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %146, align 8
  %memberidx.i.i.i96 = getelementptr inbounds %string, ptr %146, i64 0, i32 1
  store ptr %145, ptr %memberidx.i.i.i96, align 8
  %memberidx1.i.i.i97 = getelementptr inbounds %string, ptr %146, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i97, align 4
  %memberidx2.i.i.i98 = getelementptr inbounds %string, ptr %146, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i98, align 4
  %147 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %148 = call ptr %147(ptr nonnull %146)
  %149 = load i64, ptr %memberidx1.i.i.i97, align 4
  call void @write(i64 1, ptr %148, i64 %149)
  %150 = load ptr, ptr %memberidx.i.i.i96, align 8
  call void @free(ptr %150)
  call void @free(ptr %146)
  %151 = load ptr, ptr %144, align 8
  %memberidx.i.i.i154 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %151, i64 0, i32 3
  %152 = load ptr, ptr %memberidx.i.i.i154, align 8
  %153 = call ptr %152(ptr nonnull %144)
  %154 = load i64, ptr %memberidx1.i.i94, align 4
  call void @write(i64 1, ptr %153, i64 %154)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %155 = load ptr, ptr %memberidx.i.i93, align 8
  call void @free(ptr %155)
  call void @free(ptr %144)
  call void @exit(i64 -1)
  unreachable

ifend34:                                          ; preds = %if.entry29, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i128172 = phi ptr [ %141, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %132, %if.entry29 ]
  %memberidx35 = getelementptr inbounds %CGEnumType, ptr %common.ret.op.i128172, i64 0, i32 1
  %156 = load ptr, ptr %memberidx35, align 8
  %157 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %57)
  %memberidx.i102 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %156, i64 0, i32 1
  %158 = load i64, ptr %memberidx.i102, align 4
  %159 = urem i64 %157, %158
  %160 = load ptr, ptr %156, align 8
  %ptridx.i103 = getelementptr inbounds ptr, ptr %160, i64 %159
  %161 = load ptr, ptr %ptridx.i103, align 8
  %.not.i104 = icmp eq ptr %161, null
  br i1 %.not.i104, label %common.ret, label %while.entry.i110

while.entry.i110:                                 ; preds = %ifend34, %else.i122
  %162 = phi ptr [ %172, %else.i122 ], [ %160, %ifend34 ]
  %163 = phi i64 [ %173, %else.i122 ], [ %158, %ifend34 ]
  %164 = phi ptr [ %176, %else.i122 ], [ %161, %ifend34 ]
  %hash.0.i105 = phi i64 [ %175, %else.i122 ], [ %159, %ifend34 ]
  %165 = load ptr, ptr %164, align 8
  %memberidx.i.i107 = getelementptr inbounds %string, ptr %165, i64 0, i32 2
  %166 = load i64, ptr %memberidx.i.i107, align 4
  %167 = load i64, ptr %memberidx1.i6.i, align 4
  %.not.i.i109 = icmp eq i64 %166, %167
  br i1 %.not.i.i109, label %ifend.i.i113, label %else.i122

ifend.i.i113:                                     ; preds = %while.entry.i110
  %memberidx2.i.i111 = getelementptr inbounds %string, ptr %165, i64 0, i32 1
  %168 = load ptr, ptr %memberidx2.i.i111, align 8
  %169 = load ptr, ptr %memberidx.i.i64, align 8
  %170 = call i64 @memcmp(ptr %168, ptr %169, i64 %166)
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %while.end.i119, label %ifend.i.i113.else.i122_crit_edge

ifend.i.i113.else.i122_crit_edge:                 ; preds = %ifend.i.i113
  %.pre = load i64, ptr %memberidx.i102, align 4
  %.pre173 = load ptr, ptr %156, align 8
  br label %else.i122

while.end.i119:                                   ; preds = %ifend.i.i113
  %.pre174.pre = load ptr, ptr %156, align 8
  %ptridx9.i117.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre174.pre, i64 %hash.0.i105
  %.pre175.pre = load ptr, ptr %ptridx9.i117.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i118 = icmp eq ptr %.pre175.pre, null
  br i1 %.not29.i118, label %common.ret, label %if.entry10.i125

else.i122:                                        ; preds = %ifend.i.i113.else.i122_crit_edge, %while.entry.i110
  %172 = phi ptr [ %.pre173, %ifend.i.i113.else.i122_crit_edge ], [ %162, %while.entry.i110 ]
  %173 = phi i64 [ %.pre, %ifend.i.i113.else.i122_crit_edge ], [ %163, %while.entry.i110 ]
  %174 = add nuw i64 %hash.0.i105, 1
  %175 = urem i64 %174, %173
  %ptridx7.i120 = getelementptr inbounds ptr, ptr %172, i64 %175
  %176 = load ptr, ptr %ptridx7.i120, align 8
  %.not30.i121 = icmp eq ptr %176, null
  br i1 %.not30.i121, label %common.ret, label %while.entry.i110

if.entry10.i125:                                  ; preds = %while.end.i119
  %memberidx15.i124 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre175.pre, i64 0, i32 1
  %177 = load ptr, ptr %memberidx15.i124, align 8
  br label %common.ret
}

define internal fastcc void @CodeGen_declare_static_props(ptr nocapture %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Class, ptr %2, i64 0, i32 7
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr @malloc(i32 25)
  %7 = load ptr, ptr %5, align 8
  %memberidx1.i55 = getelementptr inbounds %Map_string_PropId_, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i55, align 4
  %memberidx2.i56 = getelementptr inbounds %Map_string_PropId_, ptr %5, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i56, align 4
  store i1 false, ptr %6, align 1
  %memberidx1.i.i57 = getelementptr inbounds %MapIterator_string_PropId_, ptr %6, i64 0, i32 1
  store ptr %7, ptr %memberidx1.i.i57, align 8
  %memberidx2.i.i58 = getelementptr inbounds %MapIterator_string_PropId_, ptr %6, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %6, i64 0, i32 3
  store i64 %9, ptr %memberidx3.i.i, align 4
  %10 = add nsw i64 %8, -1
  store i64 %10, ptr %memberidx2.i.i58, align 4
  %11 = icmp sgt i64 %8, 0
  br i1 %11, label %while.entry.i49, label %MapIterator_string_PropId__next.exit54

while.entry.i49:                                  ; preds = %for.entry, %ifend.i53
  %12 = phi i64 [ %15, %ifend.i53 ], [ %10, %for.entry ]
  %13 = phi ptr [ %incdec.ptr.i47, %ifend.i53 ], [ %7, %for.entry ]
  %incdec.ptr.i47 = getelementptr inbounds ptr, ptr %13, i64 1
  %14 = load ptr, ptr %13, align 8
  %.not.i48 = icmp eq ptr %14, null
  br i1 %.not.i48, label %ifend.i53, label %MapIterator_string_PropId__next.exit54.loopexit

ifend.i53:                                        ; preds = %while.entry.i49
  %15 = add nsw i64 %12, -1
  store i64 %15, ptr %memberidx2.i.i58, align 4
  %16 = icmp sgt i64 %12, 0
  br i1 %16, label %while.entry.i49, label %MapIterator_string_PropId__next.exit54.loopexit

MapIterator_string_PropId__next.exit54.loopexit:  ; preds = %ifend.i53, %while.entry.i49
  %17 = phi i64 [ %15, %ifend.i53 ], [ %12, %while.entry.i49 ]
  store ptr %incdec.ptr.i47, ptr %memberidx1.i.i57, align 8
  br label %MapIterator_string_PropId__next.exit54

MapIterator_string_PropId__next.exit54:           ; preds = %MapIterator_string_PropId__next.exit54.loopexit, %for.entry
  %18 = phi i64 [ %17, %MapIterator_string_PropId__next.exit54.loopexit ], [ %10, %for.entry ]
  %memberidx1.i.i57.promoted67 = phi ptr [ %incdec.ptr.i47, %MapIterator_string_PropId__next.exit54.loopexit ], [ %7, %for.entry ]
  %storemerge64 = icmp slt i64 %9, 1
  br i1 %storemerge64, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit54
  %memberidx4 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx5 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx11 = getelementptr inbounds %Class, ptr %2, i64 0, i32 4
  %memberidx14 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit
  %19 = phi i64 [ %18, %for.body.lr.ph ], [ %95, %MapIterator_string_PropId__next.exit ]
  %incdec.ptr.i.lcssa69 = phi ptr [ %memberidx1.i.i57.promoted67, %for.body.lr.ph ], [ %incdec.ptr.i.lcssa68, %MapIterator_string_PropId__next.exit ]
  %storemerge6265.in = phi i64 [ %9, %for.body.lr.ph ], [ %storemerge6265, %MapIterator_string_PropId__next.exit ]
  %storemerge6265 = add nsw i64 %storemerge6265.in, -1
  %entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa69, i64 -1
  %entry.0 = load ptr, ptr %entry.0.in, align 8
  %memberidx2 = getelementptr inbounds %MapEntry_string_PropId_, ptr %entry.0, i64 0, i32 1
  %20 = load ptr, ptr %memberidx2, align 8
  %21 = load ptr, ptr %entry.0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i39 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i39, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %23 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %25 = load i64, ptr %memberidx2.i.i, align 4
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @222, i64 %23, i64 %24, i64 %25)
  %27 = load ptr, ptr %3, align 8
  %28 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %28, align 8
  %memberidx.i.i.i40 = getelementptr inbounds %string, ptr %28, i64 0, i32 1
  store ptr %27, ptr %memberidx.i.i.i40, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i41 = getelementptr inbounds %string, ptr %28, i64 0, i32 3
  store i64 %26, ptr %memberidx2.i.i.i41, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %29 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %30 = call ptr %29(ptr nonnull %28)
  %31 = load i64, ptr %20, align 4
  %memberidx3.i43 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 2
  %32 = load i64, ptr %memberidx3.i43, align 4
  %33 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @238, ptr %30, i64 %31, i64 %32)
  %34 = load ptr, ptr %4, align 8
  %35 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %35, align 8
  %memberidx.i.i44 = getelementptr inbounds %string, ptr %35, i64 0, i32 1
  store ptr %34, ptr %memberidx.i.i44, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %35, i64 0, i32 2
  store i64 %33, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %35, i64 0, i32 3
  store i64 %33, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %30)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %36 = load ptr, ptr %memberidx4, align 8
  %37 = load ptr, ptr %memberidx.i39, align 8
  %memberidx.i.i.i = getelementptr inbounds %Program, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i.i.i, align 8
  %39 = load i64, ptr %37, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %40, i64 %39
  %41 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %41, i64 0, i32 3
  %42 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %37, i64 0, i32 2
  %43 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %46 = load i64, ptr %20, align 4
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %if.entry.i, label %ifend.i38

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i36 = getelementptr inbounds %Class, ptr %45, i64 0, i32 5
  %48 = load ptr, ptr %memberidx1.i36, align 8
  %49 = load i64, ptr %memberidx3.i43, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %48, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %50, i64 %49
  %51 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %51, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i38:                                        ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %45, i64 0, i32 4
  %52 = load ptr, ptr %memberidx4.i, align 8
  %53 = load i64, ptr %memberidx3.i43, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %54, i64 %53
  %55 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %55, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i38
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i38 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %56 = load i64, ptr %common.ret.op.i, align 4
  %57 = icmp eq i64 %56, 19
  br i1 %57, label %if.entry.i60, label %is_object.exit

if.entry.i60:                                     ; preds = %get_class_prop_type.exit, %if.entry.i60
  %.tr5.i = phi ptr [ %58, %if.entry.i60 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i59 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %58 = load ptr, ptr %memberidx1.i59, align 8
  %59 = load i64, ptr %58, align 4
  %60 = icmp eq i64 %59, 19
  br i1 %60, label %if.entry.i60, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i60, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %56, %get_class_prop_type.exit ], [ %59, %if.entry.i60 ]
  %61 = icmp eq i64 %.lcssa.i, 11
  %62 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %common.ret.op.i, i1 %61)
  %63 = load ptr, ptr %memberidx5, align 8
  %64 = load ptr, ptr %63, align 8
  %memberidx6 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %64, i64 0, i32 5
  %65 = load ptr, ptr %memberidx6, align 8
  %66 = call ptr %65(ptr nonnull %63)
  %67 = load ptr, ptr %21, align 8
  %memberidx7 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %67, i64 0, i32 5
  %68 = load ptr, ptr %memberidx7, align 8
  %69 = call ptr %68(ptr nonnull %21)
  %70 = alloca ptr, align 8
  %71 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %70, ptr nonnull @94, ptr %66, ptr %69)
  %72 = load ptr, ptr %70, align 8
  %73 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %73, align 8
  %memberidx.i33 = getelementptr inbounds %string, ptr %73, i64 0, i32 1
  store ptr %72, ptr %memberidx.i33, align 8
  %memberidx1.i34 = getelementptr inbounds %string, ptr %73, i64 0, i32 2
  store i64 %71, ptr %memberidx1.i34, align 4
  %memberidx2.i35 = getelementptr inbounds %string, ptr %73, i64 0, i32 3
  store i64 %71, ptr %memberidx2.i35, align 4
  tail call void @free(ptr %66)
  tail call void @free(ptr %69)
  %74 = load i64, ptr %20, align 4
  %75 = icmp eq i64 %74, 0
  %76 = load ptr, ptr %0, align 8
  %77 = load ptr, ptr %73, align 8
  %memberidx1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %77, i64 0, i32 5
  %78 = load ptr, ptr %memberidx1.i, align 8
  %79 = call ptr %78(ptr nonnull %73)
  br i1 %75, label %if.entry, label %else

for.end:                                          ; preds = %MapIterator_string_PropId__next.exit, %MapIterator_string_PropId__next.exit54
  tail call void @free(ptr nonnull %6)
  ret void

if.entry:                                         ; preds = %is_object.exit
  %80 = call ptr @LLVMAddFunction(ptr %76, ptr %79, ptr %62)
  br label %ifend

else:                                             ; preds = %is_object.exit
  %81 = call ptr @LLVMAddGlobal(ptr %76, ptr %62, ptr %79)
  %82 = load ptr, ptr %memberidx11, align 8
  %83 = load i64, ptr %memberidx3.i43, align 4
  %memberidx.i32 = getelementptr inbounds %Array_ClassField_, ptr %82, i64 0, i32 1
  %84 = load ptr, ptr %memberidx.i32, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %84, i64 %83
  %85 = load ptr, ptr %ptridx.i, align 8
  %memberidx13 = getelementptr inbounds %ClassField, ptr %85, i64 0, i32 5
  %86 = load ptr, ptr %memberidx13, align 8
  %87 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr null, ptr %86)
  call void @LLVMSetInitializer(ptr %81, ptr %87)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %static_prop_value.0 = phi ptr [ %80, %if.entry ], [ %81, %else ]
  %88 = load ptr, ptr %memberidx14, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %88, ptr nonnull %35, ptr %static_prop_value.0)
  %89 = add nsw i64 %19, -1
  store i64 %89, ptr %memberidx2.i.i58, align 4
  %90 = icmp sgt i64 %19, 0
  br i1 %90, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %ifend, %ifend.i
  %91 = phi i64 [ %94, %ifend.i ], [ %89, %ifend ]
  %92 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa69, %ifend ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %92, i64 1
  %93 = load ptr, ptr %92, align 8
  %.not.i = icmp eq ptr %93, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %94 = add nsw i64 %91, -1
  store i64 %94, ptr %memberidx2.i.i58, align 4
  %.not = icmp eq i64 %91, 0
  br i1 %.not, label %MapIterator_string_PropId__next.exit, label %while.entry.i

MapIterator_string_PropId__next.exit:             ; preds = %while.entry.i, %ifend.i, %ifend
  %95 = phi i64 [ %89, %ifend ], [ %91, %while.entry.i ], [ -1, %ifend.i ]
  %incdec.ptr.i.lcssa68 = phi ptr [ %incdec.ptr.i.lcssa69, %ifend ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge = icmp slt i64 %storemerge6265.in, 2
  br i1 %storemerge, label %for.end, label %for.body
}

define internal fastcc void @CodeGen_codegen_function(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Function, ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load ptr, ptr %5, align 8
  %memberidx1 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = tail call ptr %7(ptr nonnull %5)
  %9 = load ptr, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %Function, ptr %1, i64 0, i32 4
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %10, i1 false)
  %12 = tail call ptr @LLVMAddFunction(ptr %9, ptr %8, ptr %11)
  %13 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %14 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %13, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i.i, align 4
  %16 = load i64, ptr %13, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %13, i64 0, i32 2
  %17 = load i64, ptr %memberidx2.i.i, align 4
  %18 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @222, i64 %15, i64 %16, i64 %17)
  %19 = load ptr, ptr %4, align 8
  %20 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %20, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  store ptr %19, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %20, i64 0, i32 3
  store i64 %18, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %14, ptr nonnull %20, ptr %12)
  %memberidx5 = getelementptr inbounds %Function, ptr %1, i64 0, i32 6
  %21 = load i1, ptr %memberidx5, align 1
  br i1 %21, label %if.entry, label %ifend

common.ret:                                       ; preds = %CodeGen_codegen_block.exit, %if.entry
  ret void

if.entry:                                         ; preds = %2
  call void @LLVMSetLinkage(ptr %12, i64 0)
  br label %common.ret

ifend:                                            ; preds = %2
  %22 = call ptr @LLVMCreateBuilder()
  %23 = call ptr @LLVMAppendBasicBlock(ptr %12, ptr nonnull @71)
  call void @LLVMPositionBuilderAtEnd(ptr %22, ptr %23)
  %memberidx6 = getelementptr inbounds %Function, ptr %1, i64 0, i32 5
  %24 = load ptr, ptr %memberidx6, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nonnull %0, ptr %22, ptr %24)
  %memberidx7 = getelementptr inbounds %Function, ptr %1, i64 0, i32 2
  %25 = load ptr, ptr %memberidx7, align 8
  %memberidx861 = getelementptr inbounds %Array_FunctionArg_, ptr %25, i64 0, i32 2
  %26 = load i64, ptr %memberidx861, align 4
  %27 = icmp sgt i64 %26, 0
  br i1 %27, label %for.body, label %for.end

for.body:                                         ; preds = %ifend, %Map_string_LLVMValueRef____getitem__.exit
  %28 = phi ptr [ %63, %Map_string_LLVMValueRef____getitem__.exit ], [ %25, %ifend ]
  %i.062 = phi i64 [ %62, %Map_string_LLVMValueRef____getitem__.exit ], [ 0, %ifend ]
  %memberidx.i41 = getelementptr inbounds %Array_FunctionArg_, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx.i41, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %29, i64 %i.062
  %30 = load ptr, ptr %ptridx.i, align 8
  %memberidx10 = getelementptr inbounds %FunctionArg, ptr %30, i64 0, i32 4
  %31 = load ptr, ptr %memberidx10, align 8
  %32 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i.i43 = getelementptr inbounds %VarId, ptr %31, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i.i43, align 4
  %34 = load i64, ptr %31, align 4
  %memberidx2.i.i44 = getelementptr inbounds %VarId, ptr %31, i64 0, i32 2
  %35 = load i64, ptr %memberidx2.i.i44, align 4
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @222, i64 %33, i64 %34, i64 %35)
  %37 = load ptr, ptr %3, align 8
  %38 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %38, align 8
  %memberidx.i.i.i45 = getelementptr inbounds %string, ptr %38, i64 0, i32 1
  store ptr %37, ptr %memberidx.i.i.i45, align 8
  %memberidx1.i.i.i46 = getelementptr inbounds %string, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx1.i.i.i46, align 4
  %memberidx2.i.i.i47 = getelementptr inbounds %string, ptr %38, i64 0, i32 3
  store i64 %36, ptr %memberidx2.i.i.i47, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %39 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %38)
  %memberidx.i53 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %32, i64 0, i32 1
  %40 = load i64, ptr %memberidx.i53, align 4
  %41 = urem i64 %39, %40
  %42 = load ptr, ptr %32, align 8
  %ptridx.i54 = getelementptr inbounds ptr, ptr %42, i64 %41
  %43 = load ptr, ptr %ptridx.i54, align 8
  %.not.i = icmp eq ptr %43, null
  br i1 %.not.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %for.body, %else.i
  %44 = phi ptr [ %54, %else.i ], [ %42, %for.body ]
  %45 = phi i64 [ %55, %else.i ], [ %40, %for.body ]
  %46 = phi ptr [ %58, %else.i ], [ %43, %for.body ]
  %hash.0.i = phi i64 [ %57, %else.i ], [ %41, %for.body ]
  %47 = load ptr, ptr %46, align 8
  %memberidx.i.i55 = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  %48 = load i64, ptr %memberidx.i.i55, align 4
  %49 = load i64, ptr %memberidx1.i.i.i46, align 4
  %.not.i.i = icmp eq i64 %48, %49
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i57 = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  %50 = load ptr, ptr %memberidx2.i.i57, align 8
  %51 = load ptr, ptr %memberidx.i.i.i45, align 8
  %52 = call i64 @memcmp(ptr %50, ptr %51, i64 %48)
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i53, align 4
  %.pre63 = load ptr, ptr %32, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre64.pre = load ptr, ptr %32, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre64.pre, i64 %hash.0.i
  %.pre65.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre65.pre, null
  br i1 %.not29.i, label %Map_string_LLVMValueRef____getitem__.exit, label %if.entry10.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %54 = phi ptr [ %.pre63, %ifend.i.i.else.i_crit_edge ], [ %44, %while.entry.i ]
  %55 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %45, %while.entry.i ]
  %56 = add nuw i64 %hash.0.i, 1
  %57 = urem i64 %56, %55
  %ptridx7.i = getelementptr inbounds ptr, ptr %54, i64 %57
  %58 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %58, null
  br i1 %.not30.i, label %Map_string_LLVMValueRef____getitem__.exit, label %while.entry.i

if.entry10.i:                                     ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre65.pre, i64 0, i32 1
  %59 = load ptr, ptr %memberidx15.i, align 8
  br label %Map_string_LLVMValueRef____getitem__.exit

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %for.body, %while.end.i, %if.entry10.i
  %common.ret.op.i = phi ptr [ %59, %if.entry10.i ], [ null, %while.end.i ], [ null, %for.body ], [ null, %else.i ]
  %60 = call ptr @LLVMGetParam(ptr %12, i64 %i.062)
  %61 = call ptr @LLVMBuildStore(ptr %22, ptr %60, ptr %common.ret.op.i)
  %62 = add nuw nsw i64 %i.062, 1
  %63 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_FunctionArg_, ptr %63, i64 0, i32 2
  %64 = load i64, ptr %memberidx8, align 4
  %65 = icmp slt i64 %62, %64
  br i1 %65, label %for.body, label %for.end

for.end:                                          ; preds = %Map_string_LLVMValueRef____getitem__.exit, %ifend
  %memberidx11 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %66 = load ptr, ptr %memberidx11, align 8
  store ptr %12, ptr %memberidx11, align 8
  %memberidx13 = getelementptr inbounds %Function, ptr %1, i64 0, i32 3
  %67 = load ptr, ptr %memberidx13, align 8
  %memberidx.i48 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %68 = load i1, ptr %memberidx.i48, align 1
  store i1 false, ptr %memberidx.i48, align 1
  %69 = load ptr, ptr %67, align 8
  %70 = call ptr @malloc(i32 25)
  %memberidx.i.i49 = getelementptr inbounds %Array_Statement_, ptr %69, i64 0, i32 1
  %71 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Statement_, ptr %69, i64 0, i32 2
  %72 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %70, align 1
  %memberidx1.i.i.i50 = getelementptr inbounds %ArrayIterator_Statement_, ptr %70, i64 0, i32 1
  %memberidx2.i.i.i51 = getelementptr inbounds %ArrayIterator_Statement_, ptr %70, i64 0, i32 3
  store ptr %71, ptr %memberidx2.i.i.i51, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %70, i64 0, i32 2
  store i64 %72, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i50, align 4
  %73 = icmp slt i64 %72, 1
  br i1 %73, label %CodeGen_codegen_block.exit, label %for.body.i

for.body.i:                                       ; preds = %for.end, %for.body.i
  %74 = phi i64 [ %75, %for.body.i ], [ 1, %for.end ]
  %statement.0.i60.in = phi ptr [ %ptridx.i14.i, %for.body.i ], [ %71, %for.end ]
  %statement.0.i60 = load ptr, ptr %statement.0.i60.in, align 8
  call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %22, ptr %statement.0.i60)
  %75 = add nuw nsw i64 %74, 1
  store i64 %75, ptr %memberidx1.i.i.i50, align 4
  %ptridx.i14.i = getelementptr inbounds ptr, ptr %71, i64 %74
  %.not = icmp slt i64 %74, %72
  br i1 %.not, label %for.body.i, label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.body.i, %for.end
  call void @free(ptr nonnull %70)
  store i1 %68, ptr %memberidx.i48, align 1
  call void @LLVMDisposeBuilder(ptr %22)
  store ptr %66, ptr %memberidx11, align 8
  br label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn
define internal ptr @Array_LLVMTypeRef__pop(ptr nocapture %0) #7 {
  %memberidx = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = add nsw i64 %2, -1
  store i64 %3, ptr %memberidx, align 4
  %memberidx2 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx2, align 8
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %2
  %5 = load ptr, ptr %ptridx, align 8
  ret ptr %5
}

; Function Attrs: nofree norecurse nosync nounwind readonly
define internal i64 @Array_LLVMTypeRef__find(ptr nocapture readonly %0, ptr readnone %1) #0 {
for.entry:
  %memberidx = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 2
  %2 = load i64, ptr %memberidx, align 4
  %3 = icmp sgt i64 %2, 0
  br i1 %3, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx1 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %i.06 = phi i64 [ 0, %for.body.lr.ph ], [ %7, %ifend ]
  %ptridx = getelementptr inbounds ptr, ptr %4, i64 %i.06
  %5 = load ptr, ptr %ptridx, align 8
  %6 = icmp eq ptr %5, %1
  br i1 %6, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %for.body, %for.entry
  %common.ret.op = phi i64 [ -1, %for.entry ], [ %i.06, %for.body ], [ -1, %ifend ]
  ret i64 %common.ret.op

ifend:                                            ; preds = %for.body
  %7 = add nuw nsw i64 %i.06, 1
  %8 = icmp slt i64 %7, %2
  br i1 %8, label %for.body, label %common.ret
}

define internal fastcc void @CodeGen_declare_class_props(ptr nocapture %0, ptr nocapture %1, ptr nocapture readonly %2, ptr nocapture %3) unnamed_addr {
for.entry:
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMValueRef_, ptr %6, align 8
  %memberidx.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %6, i64 0, i32 2
  %memberidx1.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %6, i64 0, i32 3
  store i64 8, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %6, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %memberidx2.i, align 8
  store i64 0, ptr %memberidx.i, align 4
  %8 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMTypeRef_, ptr %8, align 8
  %memberidx.i147 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %8, i64 0, i32 2
  %memberidx1.i148 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %8, i64 0, i32 3
  store i64 8, ptr %memberidx1.i148, align 4
  %memberidx2.i149 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %8, i64 0, i32 1
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %memberidx2.i149, align 8
  store i64 0, ptr %memberidx.i147, align 4
  %10 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMTypeRef_, ptr %10, align 8
  %memberidx.i150 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %10, i64 0, i32 2
  %memberidx1.i151 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %10, i64 0, i32 3
  store i64 8, ptr %memberidx1.i151, align 4
  %memberidx2.i152 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %10, i64 0, i32 1
  %11 = tail call ptr @malloc(i32 64)
  store ptr %11, ptr %memberidx2.i152, align 8
  store i64 0, ptr %memberidx.i150, align 4
  %memberidx6 = getelementptr inbounds %Class, ptr %2, i64 0, i32 6
  %12 = load ptr, ptr %memberidx6, align 8
  %13 = tail call ptr @malloc(i32 25)
  %14 = load ptr, ptr %12, align 8
  %memberidx1.i153 = getelementptr inbounds %Map_string_PropId_, ptr %12, i64 0, i32 1
  %15 = load i64, ptr %memberidx1.i153, align 4
  %memberidx2.i154 = getelementptr inbounds %Map_string_PropId_, ptr %12, i64 0, i32 2
  %16 = load i64, ptr %memberidx2.i154, align 4
  %memberidx1.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %13, i64 0, i32 1
  store ptr %14, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %13, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_string_PropId_, ptr %13, i64 0, i32 3
  %17 = add nsw i64 %15, -1
  store i64 %17, ptr %memberidx2.i.i, align 4
  %18 = icmp sgt i64 %15, 0
  br i1 %18, label %while.entry.i, label %MapIterator_string_PropId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %19 = phi i64 [ %22, %ifend.i ], [ %17, %for.entry ]
  %20 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %14, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %20, i64 1
  %21 = load ptr, ptr %20, align 8
  %.not.i = icmp eq ptr %21, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_string_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %22 = add nsw i64 %19, -1
  store i64 %22, ptr %memberidx2.i.i, align 4
  %23 = icmp sgt i64 %19, 0
  br i1 %23, label %while.entry.i, label %MapIterator_string_PropId__next.exit.loopexit

MapIterator_string_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_PropId__next.exit

MapIterator_string_PropId__next.exit:             ; preds = %MapIterator_string_PropId__next.exit.loopexit, %for.entry
  %storemerge333348 = add nsw i64 %16, -1
  store i64 %storemerge333348, ptr %memberidx3.i.i, align 4
  %storemerge349 = icmp slt i64 %16, 1
  store i1 %storemerge349, ptr %13, align 1
  br i1 %storemerge349, label %for.end.thread, label %for.body.lr.ph

for.end.thread:                                   ; preds = %MapIterator_string_PropId__next.exit
  tail call void @free(ptr nonnull %13)
  br label %ifend61

for.body.lr.ph:                                   ; preds = %MapIterator_string_PropId__next.exit
  %memberidx10 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx13 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 2
  %memberidx25 = getelementptr inbounds %Class, ptr %2, i64 0, i32 5
  %memberidx31 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx51 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 1
  %memberidx38 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_string_PropId__next.exit199
  %.pn = load ptr, ptr %memberidx1.i.i, align 8
  %entry.0.in = getelementptr inbounds ptr, ptr %.pn, i64 -1
  %entry.0 = load ptr, ptr %entry.0.in, align 8
  %memberidx8 = getelementptr inbounds %MapEntry_string_PropId_, ptr %entry.0, i64 0, i32 1
  %24 = load ptr, ptr %memberidx8, align 8
  %25 = load ptr, ptr %entry.0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %memberidx.i157 = getelementptr inbounds %PropId, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %memberidx.i157, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %27 = load i64, ptr %26, align 4
  %memberidx1.i.i158 = getelementptr inbounds %TypeId, ptr %26, i64 0, i32 1
  %28 = load i64, ptr %memberidx1.i.i158, align 4
  %memberidx2.i.i159 = getelementptr inbounds %TypeId, ptr %26, i64 0, i32 2
  %29 = load i64, ptr %memberidx2.i.i159, align 4
  %30 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @222, i64 %27, i64 %28, i64 %29)
  %31 = load ptr, ptr %4, align 8
  %32 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %32, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 1
  store ptr %31, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 2
  store i64 %30, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %32, i64 0, i32 3
  store i64 %30, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %33 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %34 = call ptr %33(ptr nonnull %32)
  %35 = load i64, ptr %24, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %24, i64 0, i32 2
  %36 = load i64, ptr %memberidx3.i, align 4
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @238, ptr %34, i64 %35, i64 %36)
  %38 = load ptr, ptr %5, align 8
  %39 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %39, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %39, i64 0, i32 1
  store ptr %38, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %39, i64 0, i32 3
  store i64 %37, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %34)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %40 = load ptr, ptr %memberidx10, align 8
  %41 = load ptr, ptr %memberidx.i157, align 8
  %memberidx.i.i.i162 = getelementptr inbounds %Program, ptr %40, i64 0, i32 1
  %42 = load ptr, ptr %memberidx.i.i.i162, align 8
  %43 = load i64, ptr %41, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %memberidx.i.i.i.i, align 8
  %ptridx.i.i.i.i = getelementptr inbounds ptr, ptr %44, i64 %43
  %45 = load ptr, ptr %ptridx.i.i.i.i, align 8
  %memberidx2.i.i.i163 = getelementptr inbounds %Module, ptr %45, i64 0, i32 3
  %46 = load ptr, ptr %memberidx2.i.i.i163, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %41, i64 0, i32 2
  %47 = load i64, ptr %memberidx3.i.i.i, align 4
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_Class_, ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i5.i.i.i, align 8
  %ptridx.i6.i.i.i = getelementptr inbounds ptr, ptr %48, i64 %47
  %49 = load ptr, ptr %ptridx.i6.i.i.i, align 8
  %50 = load i64, ptr %24, align 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %get_vtable_index.exit.thread, label %get_vtable_index.exit

get_vtable_index.exit.thread:                     ; preds = %for.body
  %memberidx1.i164 = getelementptr inbounds %Class, ptr %49, i64 0, i32 5
  %52 = load ptr, ptr %memberidx1.i164, align 8
  %53 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i12.i = getelementptr inbounds %Array_ClassMethod_, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %memberidx.i12.i, align 8
  %ptridx.i13.i = getelementptr inbounds ptr, ptr %54, i64 %53
  %55 = load ptr, ptr %ptridx.i13.i, align 8
  %memberidx3.i166 = getelementptr inbounds %ClassMethod, ptr %55, i64 0, i32 4
  %common.ret.op.i325 = load ptr, ptr %memberidx3.i166, align 8
  %memberidx3.i182 = getelementptr inbounds %ClassMethod, ptr %55, i64 0, i32 9
  %common.ret.op.i177330 = load i64, ptr %memberidx3.i182, align 4
  br label %else

get_vtable_index.exit:                            ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %49, i64 0, i32 4
  %56 = load ptr, ptr %memberidx4.i, align 8
  %57 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i11.i = getelementptr inbounds %Array_ClassField_, ptr %56, i64 0, i32 1
  %58 = load ptr, ptr %memberidx.i11.i, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %58, i64 %57
  %59 = load ptr, ptr %ptridx.i.i, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %59, i64 0, i32 4
  %common.ret.op.i = load ptr, ptr %memberidx6.i, align 8
  %memberidx6.i188 = getelementptr inbounds %ClassField, ptr %59, i64 0, i32 6
  %common.ret.op.i177 = load i64, ptr %memberidx6.i188, align 4
  %60 = icmp eq i64 %50, 1
  br i1 %60, label %if.entry, label %else

for.incr:                                         ; preds = %resize_type_array.exit, %resize_type_array.exit294, %if.entry35
  %61 = load i64, ptr %memberidx2.i.i, align 4
  %62 = add nsw i64 %61, -1
  store i64 %62, ptr %memberidx2.i.i, align 4
  %63 = icmp sgt i64 %61, 0
  br i1 %63, label %while.entry.i194.preheader, label %MapIterator_string_PropId__next.exit199

while.entry.i194.preheader:                       ; preds = %for.incr
  %memberidx1.i.i.promoted = load ptr, ptr %memberidx1.i.i, align 8
  br label %while.entry.i194

while.entry.i194:                                 ; preds = %while.entry.i194.preheader, %ifend.i198
  %64 = phi i64 [ %62, %while.entry.i194.preheader ], [ %67, %ifend.i198 ]
  %65 = phi ptr [ %memberidx1.i.i.promoted, %while.entry.i194.preheader ], [ %incdec.ptr.i192, %ifend.i198 ]
  %incdec.ptr.i192 = getelementptr inbounds ptr, ptr %65, i64 1
  %66 = load ptr, ptr %65, align 8
  %.not.i193 = icmp eq ptr %66, null
  br i1 %.not.i193, label %ifend.i198, label %MapIterator_string_PropId__next.exit199.loopexit

ifend.i198:                                       ; preds = %while.entry.i194
  %67 = add nsw i64 %64, -1
  store i64 %67, ptr %memberidx2.i.i, align 4
  %68 = icmp sgt i64 %64, 0
  br i1 %68, label %while.entry.i194, label %MapIterator_string_PropId__next.exit199.loopexit

MapIterator_string_PropId__next.exit199.loopexit: ; preds = %ifend.i198, %while.entry.i194
  store ptr %incdec.ptr.i192, ptr %memberidx1.i.i, align 8
  br label %MapIterator_string_PropId__next.exit199

MapIterator_string_PropId__next.exit199:          ; preds = %MapIterator_string_PropId__next.exit199.loopexit, %for.incr
  %69 = load i64, ptr %memberidx3.i.i, align 4
  %storemerge333 = add nsw i64 %69, -1
  store i64 %storemerge333, ptr %memberidx3.i.i, align 4
  %storemerge = icmp slt i64 %69, 1
  store i1 %storemerge, ptr %13, align 1
  br i1 %storemerge, label %for.end, label %for.body

for.end:                                          ; preds = %MapIterator_string_PropId__next.exit199
  %.pre362 = load i64, ptr %memberidx.i147, align 4
  tail call void @free(ptr nonnull %13)
  %70 = icmp sgt i64 %.pre362, 0
  br i1 %70, label %if.entry59, label %ifend61

if.entry:                                         ; preds = %get_vtable_index.exit
  %71 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 true)
  %72 = load ptr, ptr %memberidx13, align 8
  call fastcc void @Map_string_uint____setitem__(ptr %72, ptr nonnull %39, i64 %common.ret.op.i177)
  %73 = load i64, ptr %memberidx.i150, align 4
  %.not.i201334 = icmp sgt i64 %73, %common.ret.op.i177
  br i1 %.not.i201334, label %if.entry.resize_type_array.exit_crit_edge, label %for.body.i.lr.ph

if.entry.resize_type_array.exit_crit_edge:        ; preds = %if.entry
  %.pre = load ptr, ptr %memberidx2.i152, align 8
  br label %resize_type_array.exit

for.body.i.lr.ph:                                 ; preds = %if.entry
  %memberidx1.i151.promoted = load i64, ptr %memberidx1.i151, align 4
  %memberidx2.i152.promoted = load ptr, ptr %memberidx2.i152, align 8
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %Array_LLVMTypeRef____sl__.exit.i
  %74 = phi ptr [ %memberidx2.i152.promoted, %for.body.i.lr.ph ], [ %80, %Array_LLVMTypeRef____sl__.exit.i ]
  %75 = phi i64 [ %memberidx1.i151.promoted, %for.body.i.lr.ph ], [ %81, %Array_LLVMTypeRef____sl__.exit.i ]
  %76 = phi i64 [ %73, %for.body.i.lr.ph ], [ %82, %Array_LLVMTypeRef____sl__.exit.i ]
  %i.0.i335 = phi i64 [ %73, %for.body.i.lr.ph ], [ %83, %Array_LLVMTypeRef____sl__.exit.i ]
  %.not.i.i = icmp slt i64 %76, %75
  br i1 %.not.i.i, label %Array_LLVMTypeRef____sl__.exit.i, label %if.entry.i.i

if.entry.i.i:                                     ; preds = %for.body.i
  %77 = shl nuw i64 %75, 1
  %78 = shl i64 %75, 4
  %79 = call ptr @realloc(ptr %74, i64 %78)
  br label %Array_LLVMTypeRef____sl__.exit.i

Array_LLVMTypeRef____sl__.exit.i:                 ; preds = %if.entry.i.i, %for.body.i
  %80 = phi ptr [ %79, %if.entry.i.i ], [ %74, %for.body.i ]
  %81 = phi i64 [ %77, %if.entry.i.i ], [ %75, %for.body.i ]
  %82 = add nsw i64 %76, 1
  %ptridx.i.i206 = getelementptr inbounds ptr, ptr %80, i64 %76
  store ptr null, ptr %ptridx.i.i206, align 8
  %83 = add nsw i64 %i.0.i335, 1
  %.not.i201.not = icmp slt i64 %i.0.i335, %common.ret.op.i177
  br i1 %.not.i201.not, label %for.body.i, label %for.cond.i.resize_type_array.exit_crit_edge

for.cond.i.resize_type_array.exit_crit_edge:      ; preds = %Array_LLVMTypeRef____sl__.exit.i
  store i64 %82, ptr %memberidx.i150, align 4
  store i64 %81, ptr %memberidx1.i151, align 4
  store ptr %80, ptr %memberidx2.i152, align 8
  br label %resize_type_array.exit

resize_type_array.exit:                           ; preds = %if.entry.resize_type_array.exit_crit_edge, %for.cond.i.resize_type_array.exit_crit_edge
  %84 = phi ptr [ %.pre, %if.entry.resize_type_array.exit_crit_edge ], [ %80, %for.cond.i.resize_type_array.exit_crit_edge ]
  %ptridx.i = getelementptr inbounds ptr, ptr %84, i64 %common.ret.op.i177
  store ptr %71, ptr %ptridx.i, align 8
  br label %for.incr

else:                                             ; preds = %get_vtable_index.exit.thread, %get_vtable_index.exit
  %common.ret.op.i177332 = phi i64 [ %common.ret.op.i177330, %get_vtable_index.exit.thread ], [ %common.ret.op.i177, %get_vtable_index.exit ]
  %common.ret.op.i326331 = phi ptr [ %common.ret.op.i325, %get_vtable_index.exit.thread ], [ %common.ret.op.i, %get_vtable_index.exit ]
  %85 = load ptr, ptr %2, align 8
  %86 = icmp eq ptr %41, %85
  br i1 %86, label %if.entry16, label %else17

if.entry16:                                       ; preds = %else
  %87 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_Type_, ptr %87, align 8
  %memberidx.i208 = getelementptr inbounds %Array_Type_, ptr %87, i64 0, i32 2
  store i64 0, ptr %memberidx.i208, align 4
  %memberidx1.i209 = getelementptr inbounds %Array_Type_, ptr %87, i64 0, i32 3
  store i64 8, ptr %memberidx1.i209, align 4
  %memberidx2.i210 = getelementptr inbounds %Array_Type_, ptr %87, i64 0, i32 1
  %88 = call ptr @malloc(i32 64)
  store ptr %88, ptr %memberidx2.i210, align 8
  %89 = tail call ptr @malloc(i32 16)
  %90 = load ptr, ptr %2, align 8
  store i64 11, ptr %89, align 4
  %memberidx.i211 = getelementptr inbounds %ObjectType, ptr %89, i64 0, i32 1
  store ptr %90, ptr %memberidx.i211, align 8
  store ptr %89, ptr %88, align 8
  store i64 1, ptr %memberidx.i208, align 4
  %memberidx22 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i326331, i64 0, i32 1
  %91 = load ptr, ptr %memberidx22, align 8
  %92 = load i64, ptr %memberidx1.i209, align 4
  %93 = add i64 %92, -1
  %memberidx2.i214 = getelementptr inbounds %Array_Type_, ptr %91, i64 0, i32 2
  %94 = load i64, ptr %memberidx2.i214, align 4
  %95 = icmp slt i64 %93, %94
  %.pre359 = load ptr, ptr %memberidx2.i210, align 8
  br i1 %95, label %while.entry.i217, label %Array_Type____adda__.exit

while.entry.i217:                                 ; preds = %if.entry16, %while.entry.i217
  %96 = phi ptr [ %100, %while.entry.i217 ], [ %.pre359, %if.entry16 ]
  %97 = phi i64 [ %101, %while.entry.i217 ], [ %92, %if.entry16 ]
  %98 = shl nuw i64 %97, 1
  store i64 %98, ptr %memberidx1.i209, align 4
  %99 = shl i64 %97, 4
  %100 = call ptr @realloc(ptr %96, i64 %99)
  store ptr %100, ptr %memberidx2.i210, align 8
  %101 = load i64, ptr %memberidx1.i209, align 4
  %102 = load i64, ptr %memberidx.i208, align 4
  %103 = sub nuw i64 %101, %102
  %104 = load i64, ptr %memberidx2.i214, align 4
  %105 = icmp slt i64 %103, %104
  br i1 %105, label %while.entry.i217, label %Array_Type____adda__.exit

Array_Type____adda__.exit:                        ; preds = %while.entry.i217, %if.entry16
  %106 = phi i64 [ %94, %if.entry16 ], [ %104, %while.entry.i217 ]
  %107 = phi i64 [ 1, %if.entry16 ], [ %102, %while.entry.i217 ]
  %108 = phi ptr [ %.pre359, %if.entry16 ], [ %100, %while.entry.i217 ]
  %109 = getelementptr inbounds ptr, ptr %108, i64 %107
  %memberidx8.i219 = getelementptr inbounds %Array_Type_, ptr %91, i64 0, i32 1
  %110 = load ptr, ptr %memberidx8.i219, align 8
  %111 = shl i64 %106, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %109, ptr align 8 %110, i64 %111, i1 false)
  %112 = load i64, ptr %memberidx.i208, align 4
  %113 = load i64, ptr %memberidx2.i214, align 4
  %114 = add nuw i64 %113, %112
  store i64 %114, ptr %memberidx.i208, align 4
  %115 = load ptr, ptr %memberidx22, align 8
  %memberidx.i220 = getelementptr inbounds %Array_Type_, ptr %115, i64 0, i32 1
  %116 = load ptr, ptr %memberidx.i220, align 8
  call void @free(ptr %116)
  tail call void @free(ptr %115)
  store ptr %87, ptr %memberidx22, align 8
  %117 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %common.ret.op.i326331, i1 false)
  %118 = load ptr, ptr %memberidx25, align 8
  %119 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i221 = getelementptr inbounds %Array_ClassMethod_, ptr %118, i64 0, i32 1
  %120 = load ptr, ptr %memberidx.i221, align 8
  %ptridx.i222 = getelementptr inbounds ptr, ptr %120, i64 %119
  %121 = load ptr, ptr %ptridx.i222, align 8
  %memberidx27 = getelementptr inbounds %ClassMethod, ptr %121, i64 0, i32 7
  %122 = load i1, ptr %memberidx27, align 1
  br i1 %122, label %ifend30, label %if.entry28

else17:                                           ; preds = %else
  %123 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i326331, i1 false)
  %124 = load ptr, ptr %memberidx10, align 8
  %125 = load ptr, ptr %memberidx.i157, align 8
  %memberidx.i.i224 = getelementptr inbounds %Program, ptr %124, i64 0, i32 1
  %126 = load ptr, ptr %memberidx.i.i224, align 8
  %127 = load i64, ptr %125, align 4
  %memberidx.i.i.i225 = getelementptr inbounds %Array_Module_, ptr %126, i64 0, i32 1
  %128 = load ptr, ptr %memberidx.i.i.i225, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %128, i64 %127
  %129 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i226 = getelementptr inbounds %Module, ptr %129, i64 0, i32 3
  %130 = load ptr, ptr %memberidx2.i.i226, align 8
  %memberidx3.i.i227 = getelementptr inbounds %TypeId, ptr %125, i64 0, i32 2
  %131 = load i64, ptr %memberidx3.i.i227, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %130, i64 0, i32 1
  %132 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %132, i64 %131
  %133 = load ptr, ptr %ptridx.i6.i.i, align 8
  %134 = load ptr, ptr %0, align 8
  %memberidx41 = getelementptr inbounds %Class, ptr %133, i64 0, i32 1
  %135 = load ptr, ptr %memberidx41, align 8
  %136 = load ptr, ptr %135, align 8
  %memberidx42 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %136, i64 0, i32 5
  %137 = load ptr, ptr %memberidx42, align 8
  %138 = call ptr %137(ptr nonnull %135)
  %139 = load ptr, ptr %25, align 8
  %memberidx43 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %139, i64 0, i32 5
  %140 = load ptr, ptr %memberidx43, align 8
  %141 = call ptr %140(ptr nonnull %25)
  %142 = alloca ptr, align 8
  %143 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %142, ptr nonnull @94, ptr %138, ptr %141)
  %144 = load ptr, ptr %142, align 8
  %145 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %145, align 8
  %memberidx.i228 = getelementptr inbounds %string, ptr %145, i64 0, i32 1
  store ptr %144, ptr %memberidx.i228, align 8
  %memberidx1.i229 = getelementptr inbounds %string, ptr %145, i64 0, i32 2
  store i64 %143, ptr %memberidx1.i229, align 4
  %memberidx2.i230 = getelementptr inbounds %string, ptr %145, i64 0, i32 3
  store i64 %143, ptr %memberidx2.i230, align 4
  tail call void @free(ptr %138)
  tail call void @free(ptr %141)
  %146 = load ptr, ptr %145, align 8
  %memberidx44 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %146, i64 0, i32 5
  %147 = load ptr, ptr %memberidx44, align 8
  %148 = call ptr %147(ptr nonnull %145)
  %149 = call ptr @LLVMGetNamedFunction(ptr %134, ptr %148)
  %150 = icmp eq ptr %149, null
  br i1 %150, label %if.entry45, label %ifend18

ifend18:                                          ; preds = %if.entry45, %else17, %get_class_prop_visibility.exit
  %llvm_method_type.0 = phi ptr [ %117, %get_class_prop_visibility.exit ], [ %123, %if.entry45 ], [ %123, %else17 ]
  %llvm_method_val.0 = phi ptr [ %llvm_method_val.1, %get_class_prop_visibility.exit ], [ null, %if.entry45 ], [ %149, %else17 ]
  %prop_owner.0 = phi ptr [ %2, %get_class_prop_visibility.exit ], [ %133, %if.entry45 ], [ %133, %else17 ]
  %151 = load ptr, ptr %memberidx51, align 8
  call fastcc void @Map_string_uint____setitem__(ptr %151, ptr nonnull %39, i64 %common.ret.op.i177332)
  %memberidx52 = getelementptr inbounds %Class, ptr %prop_owner.0, i64 0, i32 5
  %152 = load ptr, ptr %memberidx52, align 8
  %153 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i231 = getelementptr inbounds %Array_ClassMethod_, ptr %152, i64 0, i32 1
  %154 = load ptr, ptr %memberidx.i231, align 8
  %ptridx.i232 = getelementptr inbounds ptr, ptr %154, i64 %153
  %155 = load ptr, ptr %ptridx.i232, align 8
  %memberidx54 = getelementptr inbounds %ClassMethod, ptr %155, i64 0, i32 7
  %156 = load i1, ptr %memberidx54, align 1
  br i1 %156, label %ifend57, label %if.entry55

if.entry28:                                       ; preds = %Array_Type____adda__.exit
  %157 = load ptr, ptr %memberidx31, align 8
  %158 = load ptr, ptr %157, align 8
  %memberidx32 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %158, i64 0, i32 5
  %159 = load ptr, ptr %memberidx32, align 8
  %160 = call ptr %159(ptr nonnull %157)
  %161 = load ptr, ptr %25, align 8
  %memberidx33 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %161, i64 0, i32 5
  %162 = load ptr, ptr %memberidx33, align 8
  %163 = call ptr %162(ptr nonnull %25)
  %164 = alloca ptr, align 8
  %165 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %164, ptr nonnull @94, ptr %160, ptr %163)
  %166 = load ptr, ptr %164, align 8
  %167 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %167, align 8
  %memberidx.i233 = getelementptr inbounds %string, ptr %167, i64 0, i32 1
  store ptr %166, ptr %memberidx.i233, align 8
  %memberidx1.i234 = getelementptr inbounds %string, ptr %167, i64 0, i32 2
  store i64 %165, ptr %memberidx1.i234, align 4
  %memberidx2.i235 = getelementptr inbounds %string, ptr %167, i64 0, i32 3
  store i64 %165, ptr %memberidx2.i235, align 4
  tail call void @free(ptr %160)
  tail call void @free(ptr %163)
  %168 = load ptr, ptr %0, align 8
  %169 = load ptr, ptr %167, align 8
  %memberidx1.i236 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %169, i64 0, i32 5
  %170 = load ptr, ptr %memberidx1.i236, align 8
  %171 = call ptr %170(ptr nonnull %167)
  %172 = call ptr @LLVMAddFunction(ptr %168, ptr %171, ptr %117)
  br label %ifend30

ifend30:                                          ; preds = %Array_Type____adda__.exit, %if.entry28
  %llvm_method_val.1 = phi ptr [ %172, %if.entry28 ], [ null, %Array_Type____adda__.exit ]
  %173 = load ptr, ptr %memberidx10, align 8
  %174 = load ptr, ptr %memberidx.i157, align 8
  %memberidx.i.i.i238 = getelementptr inbounds %Program, ptr %173, i64 0, i32 1
  %175 = load ptr, ptr %memberidx.i.i.i238, align 8
  %176 = load i64, ptr %174, align 4
  %memberidx.i.i.i.i239 = getelementptr inbounds %Array_Module_, ptr %175, i64 0, i32 1
  %177 = load ptr, ptr %memberidx.i.i.i.i239, align 8
  %ptridx.i.i.i.i240 = getelementptr inbounds ptr, ptr %177, i64 %176
  %178 = load ptr, ptr %ptridx.i.i.i.i240, align 8
  %memberidx2.i.i.i241 = getelementptr inbounds %Module, ptr %178, i64 0, i32 3
  %179 = load ptr, ptr %memberidx2.i.i.i241, align 8
  %memberidx3.i.i.i242 = getelementptr inbounds %TypeId, ptr %174, i64 0, i32 2
  %180 = load i64, ptr %memberidx3.i.i.i242, align 4
  %memberidx.i5.i.i.i243 = getelementptr inbounds %Array_Class_, ptr %179, i64 0, i32 1
  %181 = load ptr, ptr %memberidx.i5.i.i.i243, align 8
  %ptridx.i6.i.i.i244 = getelementptr inbounds ptr, ptr %181, i64 %180
  %182 = load ptr, ptr %ptridx.i6.i.i.i244, align 8
  %183 = load i64, ptr %24, align 4
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %if.entry.i252, label %ifend.i258

if.entry.i252:                                    ; preds = %ifend30
  %memberidx1.i247 = getelementptr inbounds %Class, ptr %182, i64 0, i32 5
  %185 = load ptr, ptr %memberidx1.i247, align 8
  %186 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i12.i249 = getelementptr inbounds %Array_ClassMethod_, ptr %185, i64 0, i32 1
  %187 = load ptr, ptr %memberidx.i12.i249, align 8
  %ptridx.i13.i250 = getelementptr inbounds ptr, ptr %187, i64 %186
  %188 = load ptr, ptr %ptridx.i13.i250, align 8
  %memberidx3.i251 = getelementptr inbounds %ClassMethod, ptr %188, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i258:                                       ; preds = %ifend30
  %memberidx4.i253 = getelementptr inbounds %Class, ptr %182, i64 0, i32 4
  %189 = load ptr, ptr %memberidx4.i253, align 8
  %190 = load i64, ptr %memberidx3.i, align 4
  %memberidx.i11.i255 = getelementptr inbounds %Array_ClassField_, ptr %189, i64 0, i32 1
  %191 = load ptr, ptr %memberidx.i11.i255, align 8
  %ptridx.i.i256 = getelementptr inbounds ptr, ptr %191, i64 %190
  %192 = load ptr, ptr %ptridx.i.i256, align 8
  %memberidx6.i257 = getelementptr inbounds %ClassField, ptr %192, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i252, %ifend.i258
  %common.ret.op.in.i245 = phi ptr [ %memberidx3.i251, %if.entry.i252 ], [ %memberidx6.i257, %ifend.i258 ]
  %common.ret.op.i246 = load i64, ptr %common.ret.op.in.i245, align 4
  %193 = icmp eq i64 %common.ret.op.i246, 1
  br i1 %193, label %if.entry35, label %ifend18

if.entry35:                                       ; preds = %get_class_prop_visibility.exit
  %194 = load ptr, ptr %memberidx38, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %194, ptr nonnull %39, ptr %llvm_method_val.1)
  br label %for.incr

if.entry45:                                       ; preds = %else17
  %195 = load ptr, ptr %memberidx41, align 8
  %196 = load ptr, ptr %195, align 8
  %memberidx49 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %196, i64 0, i32 5
  %197 = load ptr, ptr %memberidx49, align 8
  %198 = call ptr %197(ptr nonnull %195)
  %199 = load ptr, ptr %25, align 8
  %memberidx50 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %199, i64 0, i32 5
  %200 = load ptr, ptr %memberidx50, align 8
  %201 = call ptr %200(ptr nonnull %25)
  %202 = alloca ptr, align 8
  %203 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %202, ptr nonnull @265, ptr %198, ptr %201)
  %204 = load ptr, ptr %202, align 8
  %205 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %205, align 8
  %memberidx.i259 = getelementptr inbounds %string, ptr %205, i64 0, i32 1
  store ptr %204, ptr %memberidx.i259, align 8
  %memberidx1.i260 = getelementptr inbounds %string, ptr %205, i64 0, i32 2
  store i64 %203, ptr %memberidx1.i260, align 4
  %memberidx2.i261 = getelementptr inbounds %string, ptr %205, i64 0, i32 3
  store i64 %203, ptr %memberidx2.i261, align 4
  tail call void @free(ptr %198)
  tail call void @free(ptr %201)
  %206 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %206, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %207 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %207, align 8
  %memberidx.i.i.i262 = getelementptr inbounds %string, ptr %207, i64 0, i32 1
  store ptr %206, ptr %memberidx.i.i.i262, align 8
  %memberidx1.i.i.i263 = getelementptr inbounds %string, ptr %207, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i263, align 4
  %memberidx2.i.i.i264 = getelementptr inbounds %string, ptr %207, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i264, align 4
  %208 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %209 = call ptr %208(ptr nonnull %207)
  %210 = load i64, ptr %memberidx1.i.i.i263, align 4
  call void @write(i64 1, ptr %209, i64 %210)
  %211 = load ptr, ptr %memberidx.i.i.i262, align 8
  call void @free(ptr %211)
  call void @free(ptr %207)
  %212 = load ptr, ptr %205, align 8
  %memberidx.i.i.i320 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %212, i64 0, i32 3
  %213 = load ptr, ptr %memberidx.i.i.i320, align 8
  %214 = call ptr %213(ptr nonnull %205)
  %215 = load i64, ptr %memberidx1.i260, align 4
  call void @write(i64 1, ptr %214, i64 %215)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %216 = load ptr, ptr %memberidx.i259, align 8
  call void @free(ptr %216)
  call void @free(ptr %205)
  call void @exit(i64 -1)
  br label %ifend18

if.entry55:                                       ; preds = %ifend18
  %217 = load i64, ptr %memberidx.i, align 4
  %.not.i267338 = icmp sgt i64 %217, %common.ret.op.i177332
  br i1 %.not.i267338, label %if.entry55.resize_value_array.exit_crit_edge, label %for.body.i272.lr.ph

if.entry55.resize_value_array.exit_crit_edge:     ; preds = %if.entry55
  %.pre361 = load ptr, ptr %memberidx2.i, align 8
  br label %resize_value_array.exit

for.body.i272.lr.ph:                              ; preds = %if.entry55
  %memberidx1.i.promoted = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i.promoted = load ptr, ptr %memberidx2.i, align 8
  br label %for.body.i272

for.body.i272:                                    ; preds = %for.body.i272.lr.ph, %Array_LLVMValueRef____sl__.exit.i
  %218 = phi ptr [ %memberidx2.i.promoted, %for.body.i272.lr.ph ], [ %224, %Array_LLVMValueRef____sl__.exit.i ]
  %219 = phi i64 [ %memberidx1.i.promoted, %for.body.i272.lr.ph ], [ %225, %Array_LLVMValueRef____sl__.exit.i ]
  %220 = phi i64 [ %217, %for.body.i272.lr.ph ], [ %226, %Array_LLVMValueRef____sl__.exit.i ]
  %i.0.i266339 = phi i64 [ %217, %for.body.i272.lr.ph ], [ %227, %Array_LLVMValueRef____sl__.exit.i ]
  %.not.i.i271 = icmp slt i64 %220, %219
  br i1 %.not.i.i271, label %Array_LLVMValueRef____sl__.exit.i, label %if.entry.i.i275

if.entry.i.i275:                                  ; preds = %for.body.i272
  %221 = shl nuw i64 %219, 1
  %222 = shl i64 %219, 4
  %223 = call ptr @realloc(ptr %218, i64 %222)
  br label %Array_LLVMValueRef____sl__.exit.i

Array_LLVMValueRef____sl__.exit.i:                ; preds = %if.entry.i.i275, %for.body.i272
  %224 = phi ptr [ %223, %if.entry.i.i275 ], [ %218, %for.body.i272 ]
  %225 = phi i64 [ %221, %if.entry.i.i275 ], [ %219, %for.body.i272 ]
  %226 = add nsw i64 %220, 1
  %ptridx.i.i277 = getelementptr inbounds ptr, ptr %224, i64 %220
  store ptr null, ptr %ptridx.i.i277, align 8
  %227 = add nsw i64 %i.0.i266339, 1
  %.not.i267.not = icmp slt i64 %i.0.i266339, %common.ret.op.i177332
  br i1 %.not.i267.not, label %for.body.i272, label %for.cond.i268.resize_value_array.exit_crit_edge

for.cond.i268.resize_value_array.exit_crit_edge:  ; preds = %Array_LLVMValueRef____sl__.exit.i
  store i64 %226, ptr %memberidx.i, align 4
  store i64 %225, ptr %memberidx1.i, align 4
  store ptr %224, ptr %memberidx2.i, align 8
  br label %resize_value_array.exit

resize_value_array.exit:                          ; preds = %if.entry55.resize_value_array.exit_crit_edge, %for.cond.i268.resize_value_array.exit_crit_edge
  %228 = phi ptr [ %.pre361, %if.entry55.resize_value_array.exit_crit_edge ], [ %224, %for.cond.i268.resize_value_array.exit_crit_edge ]
  %ptridx.i279 = getelementptr inbounds ptr, ptr %228, i64 %common.ret.op.i177332
  store ptr %llvm_method_val.0, ptr %ptridx.i279, align 8
  br label %ifend57

ifend57:                                          ; preds = %ifend18, %resize_value_array.exit
  %229 = load i64, ptr %memberidx.i147, align 4
  %.not.i282343 = icmp sgt i64 %229, %common.ret.op.i177332
  br i1 %.not.i282343, label %resize_type_array.exit294, label %for.body.i287.lr.ph

for.body.i287.lr.ph:                              ; preds = %ifend57
  %memberidx1.i148.promoted = load i64, ptr %memberidx1.i148, align 4
  %memberidx2.i149.promoted = load ptr, ptr %memberidx2.i149, align 8
  br label %for.body.i287

for.body.i287:                                    ; preds = %for.body.i287.lr.ph, %Array_LLVMTypeRef____sl__.exit.i293
  %230 = phi ptr [ %memberidx2.i149.promoted, %for.body.i287.lr.ph ], [ %236, %Array_LLVMTypeRef____sl__.exit.i293 ]
  %231 = phi i64 [ %memberidx1.i148.promoted, %for.body.i287.lr.ph ], [ %237, %Array_LLVMTypeRef____sl__.exit.i293 ]
  %232 = phi i64 [ %229, %for.body.i287.lr.ph ], [ %238, %Array_LLVMTypeRef____sl__.exit.i293 ]
  %i.0.i281344 = phi i64 [ %229, %for.body.i287.lr.ph ], [ %239, %Array_LLVMTypeRef____sl__.exit.i293 ]
  %.not.i.i286 = icmp slt i64 %232, %231
  br i1 %.not.i.i286, label %Array_LLVMTypeRef____sl__.exit.i293, label %if.entry.i.i290

if.entry.i.i290:                                  ; preds = %for.body.i287
  %233 = shl nuw i64 %231, 1
  %234 = shl i64 %231, 4
  %235 = call ptr @realloc(ptr %230, i64 %234)
  br label %Array_LLVMTypeRef____sl__.exit.i293

Array_LLVMTypeRef____sl__.exit.i293:              ; preds = %if.entry.i.i290, %for.body.i287
  %236 = phi ptr [ %235, %if.entry.i.i290 ], [ %230, %for.body.i287 ]
  %237 = phi i64 [ %233, %if.entry.i.i290 ], [ %231, %for.body.i287 ]
  %238 = add nsw i64 %232, 1
  %ptridx.i.i292 = getelementptr inbounds ptr, ptr %236, i64 %232
  store ptr null, ptr %ptridx.i.i292, align 8
  %239 = add nsw i64 %i.0.i281344, 1
  %.not.i282.not = icmp slt i64 %i.0.i281344, %common.ret.op.i177332
  br i1 %.not.i282.not, label %for.body.i287, label %for.cond.i283.resize_type_array.exit294_crit_edge

for.cond.i283.resize_type_array.exit294_crit_edge: ; preds = %Array_LLVMTypeRef____sl__.exit.i293
  store i64 %238, ptr %memberidx.i147, align 4
  store i64 %237, ptr %memberidx1.i148, align 4
  store ptr %236, ptr %memberidx2.i149, align 8
  br label %resize_type_array.exit294

resize_type_array.exit294:                        ; preds = %for.cond.i283.resize_type_array.exit294_crit_edge, %ifend57
  %240 = call ptr @LLVMPointerType(ptr %llvm_method_type.0, i64 0)
  %241 = load ptr, ptr %memberidx2.i149, align 8
  %ptridx.i296 = getelementptr inbounds ptr, ptr %241, i64 %common.ret.op.i177332
  store ptr %240, ptr %ptridx.i296, align 8
  br label %for.incr

if.entry59:                                       ; preds = %for.end
  %242 = load ptr, ptr %memberidx2.i149, align 8
  %243 = call ptr @LLVMStructType(ptr %242, i64 %.pre362, i1 true)
  %memberidx64 = getelementptr inbounds %Class, ptr %2, i64 0, i32 10
  %244 = load i1, ptr %memberidx64, align 1
  br i1 %244, label %ifend67, label %if.entry65

ifend61:                                          ; preds = %for.end.thread, %for.end, %Array_LLVMTypeRef____sl__.exit
  %memberidx.i297 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 3
  %245 = load i64, ptr %memberidx.i297, align 4
  %memberidx1.i298 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 2
  %246 = load i64, ptr %memberidx1.i298, align 4
  %247 = sub nuw i64 %245, %246
  %248 = load i64, ptr %memberidx.i150, align 4
  %249 = icmp slt i64 %247, %248
  %memberidx2.i.i301 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  %.pre365 = load ptr, ptr %memberidx2.i.i301, align 8
  br i1 %249, label %while.entry.i302, label %Array_LLVMTypeRef____adda__.exit

while.entry.i302:                                 ; preds = %ifend61, %while.entry.i302
  %250 = phi ptr [ %254, %while.entry.i302 ], [ %.pre365, %ifend61 ]
  %251 = phi i64 [ %255, %while.entry.i302 ], [ %245, %ifend61 ]
  %252 = shl nuw i64 %251, 1
  store i64 %252, ptr %memberidx.i297, align 4
  %253 = shl i64 %251, 4
  %254 = call ptr @realloc(ptr %250, i64 %253)
  store ptr %254, ptr %memberidx2.i.i301, align 8
  %255 = load i64, ptr %memberidx.i297, align 4
  %256 = load i64, ptr %memberidx1.i298, align 4
  %257 = sub nuw i64 %255, %256
  %258 = icmp slt i64 %257, %248
  br i1 %258, label %while.entry.i302, label %Array_LLVMTypeRef____adda__.exit

Array_LLVMTypeRef____adda__.exit:                 ; preds = %while.entry.i302, %ifend61
  %259 = phi i64 [ %246, %ifend61 ], [ %256, %while.entry.i302 ]
  %260 = phi ptr [ %.pre365, %ifend61 ], [ %254, %while.entry.i302 ]
  %261 = getelementptr inbounds ptr, ptr %260, i64 %259
  %262 = load ptr, ptr %memberidx2.i152, align 8
  %263 = shl i64 %248, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 1073741824 %261, ptr align 8 %262, i64 %263, i1 false)
  %264 = load i64, ptr %memberidx1.i298, align 4
  %265 = add nuw i64 %264, %248
  store i64 %265, ptr %memberidx1.i298, align 4
  call void @free(ptr %262)
  tail call void @free(ptr %10)
  %266 = load ptr, ptr %memberidx2.i149, align 8
  call void @free(ptr %266)
  tail call void @free(ptr %8)
  %267 = load ptr, ptr %memberidx2.i, align 8
  call void @free(ptr %267)
  tail call void @free(ptr %6)
  ret void

if.entry65:                                       ; preds = %if.entry59
  %memberidx68 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 4
  %268 = load ptr, ptr %0, align 8
  %memberidx70 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %269 = load ptr, ptr %memberidx70, align 8
  %270 = load ptr, ptr %269, align 8
  %memberidx71 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %270, i64 0, i32 5
  %271 = load ptr, ptr %memberidx71, align 8
  %272 = call ptr %271(ptr nonnull %269)
  %273 = alloca ptr, align 8
  %274 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %273, ptr nonnull @266, ptr %272)
  %275 = load ptr, ptr %273, align 8
  %276 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %276, align 8
  %memberidx.i308 = getelementptr inbounds %string, ptr %276, i64 0, i32 1
  store ptr %275, ptr %memberidx.i308, align 8
  %memberidx1.i309 = getelementptr inbounds %string, ptr %276, i64 0, i32 2
  store i64 %274, ptr %memberidx1.i309, align 4
  %memberidx2.i310 = getelementptr inbounds %string, ptr %276, i64 0, i32 3
  store i64 %274, ptr %memberidx2.i310, align 4
  tail call void @free(ptr %272)
  %277 = load ptr, ptr %276, align 8
  %memberidx72 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %277, i64 0, i32 5
  %278 = load ptr, ptr %memberidx72, align 8
  %279 = call ptr %278(ptr nonnull %276)
  %280 = call ptr @LLVMAddGlobal(ptr %268, ptr %243, ptr %279)
  store ptr %280, ptr %memberidx68, align 8
  %281 = load ptr, ptr %memberidx2.i, align 8
  %282 = load i64, ptr %memberidx.i, align 4
  %283 = call ptr @LLVMConstStruct(ptr %281, i64 %282, i1 true)
  %284 = load ptr, ptr %memberidx68, align 8
  call void @LLVMSetInitializer(ptr %284, ptr %283)
  br label %ifend67

ifend67:                                          ; preds = %if.entry59, %if.entry65
  %memberidx76 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 5
  store ptr %243, ptr %memberidx76, align 8
  %285 = call ptr @LLVMPointerType(ptr %243, i64 0)
  %memberidx.i311 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 2
  %286 = load i64, ptr %memberidx.i311, align 4
  %memberidx1.i312 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 3
  %287 = load i64, ptr %memberidx1.i312, align 4
  %.not.i313 = icmp slt i64 %286, %287
  br i1 %.not.i313, label %ifend67.Array_LLVMTypeRef____sl__.exit_crit_edge, label %if.entry.i316

ifend67.Array_LLVMTypeRef____sl__.exit_crit_edge: ; preds = %ifend67
  %memberidx4.i317.phi.trans.insert = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  %.pre364 = load ptr, ptr %memberidx4.i317.phi.trans.insert, align 8
  br label %Array_LLVMTypeRef____sl__.exit

if.entry.i316:                                    ; preds = %ifend67
  %288 = shl nuw i64 %287, 1
  store i64 %288, ptr %memberidx1.i312, align 4
  %memberidx2.i.i315 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  %289 = load ptr, ptr %memberidx2.i.i315, align 8
  %290 = shl i64 %287, 4
  %291 = call ptr @realloc(ptr %289, i64 %290)
  store ptr %291, ptr %memberidx2.i.i315, align 8
  %.pre363 = load i64, ptr %memberidx.i311, align 4
  br label %Array_LLVMTypeRef____sl__.exit

Array_LLVMTypeRef____sl__.exit:                   ; preds = %ifend67.Array_LLVMTypeRef____sl__.exit_crit_edge, %if.entry.i316
  %292 = phi ptr [ %.pre364, %ifend67.Array_LLVMTypeRef____sl__.exit_crit_edge ], [ %291, %if.entry.i316 ]
  %293 = phi i64 [ %286, %ifend67.Array_LLVMTypeRef____sl__.exit_crit_edge ], [ %.pre363, %if.entry.i316 ]
  %294 = add nsw i64 %293, 1
  store i64 %294, ptr %memberidx.i311, align 4
  %ptridx.i318 = getelementptr inbounds ptr, ptr %292, i64 %293
  store ptr %285, ptr %ptridx.i318, align 8
  br label %ifend61
}

define internal fastcc ptr @CodeGen_get_or_codegen_var(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %7 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i.i, align 4
  %9 = load i64, ptr %1, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 2
  %10 = load i64, ptr %memberidx2.i.i, align 4
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @222, i64 %8, i64 %9, i64 %10)
  %12 = load ptr, ptr %6, align 8
  %13 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %13, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 1
  store ptr %12, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %13, i64 0, i32 3
  store i64 %11, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %14 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %13)
  %memberidx.i136 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %7, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i136, align 4
  %16 = urem i64 %14, %15
  %17 = load ptr, ptr %7, align 8
  %ptridx.i137 = getelementptr inbounds ptr, ptr %17, i64 %16
  %18 = load ptr, ptr %ptridx.i137, align 8
  %.not.i = icmp eq ptr %18, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %19 = phi ptr [ %29, %else.i ], [ %17, %2 ]
  %20 = phi i64 [ %30, %else.i ], [ %15, %2 ]
  %21 = phi ptr [ %33, %else.i ], [ %18, %2 ]
  %hash.0.i = phi i64 [ %32, %else.i ], [ %16, %2 ]
  %22 = load ptr, ptr %21, align 8
  %memberidx.i.i138 = getelementptr inbounds %string, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx.i.i138, align 4
  %24 = load i64, ptr %memberidx1.i.i.i, align 4
  %.not.i.i = icmp eq i64 %23, %24
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i140 = getelementptr inbounds %string, ptr %22, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2.i.i140, align 8
  %26 = load ptr, ptr %memberidx.i.i.i, align 8
  %27 = call i64 @memcmp(ptr %25, ptr %26, i64 %23)
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i136, align 4
  %.pre253 = load ptr, ptr %7, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre254.pre = load ptr, ptr %7, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre254.pre, i64 %hash.0.i
  %.pre255.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre255.pre, null
  br i1 %.not29.i, label %ifend, label %Map_string_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %29 = phi ptr [ %.pre253, %ifend.i.i.else.i_crit_edge ], [ %19, %while.entry.i ]
  %30 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %20, %while.entry.i ]
  %31 = add nuw i64 %hash.0.i, 1
  %32 = urem i64 %31, %30
  %ptridx7.i = getelementptr inbounds ptr, ptr %29, i64 %32
  %33 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %33, null
  br i1 %.not30.i, label %ifend, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre255.pre, i64 0, i32 1
  %34 = load ptr, ptr %memberidx15.i, align 8
  %.not = icmp eq ptr %34, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %else.i162, %else.i187, %else.i212, %if.entry48, %if.entry31, %if.entry14, %if.entry10.i215, %while.end.i209, %if.entry10.i190, %while.end.i184, %if.entry10.i165, %while.end.i159, %Map_string_LLVMValueRef____getitem__.exit, %for.end43, %ifend20
  %common.ret.op = phi ptr [ null, %ifend20 ], [ null, %for.end43 ], [ %34, %Map_string_LLVMValueRef____getitem__.exit ], [ %81, %if.entry10.i165 ], [ null, %while.end.i159 ], [ %122, %if.entry10.i190 ], [ null, %while.end.i184 ], [ %161, %if.entry10.i215 ], [ null, %while.end.i209 ], [ null, %if.entry14 ], [ null, %if.entry31 ], [ null, %if.entry48 ], [ null, %else.i212 ], [ null, %else.i187 ], [ null, %else.i162 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %2, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %35 = load ptr, ptr %memberidx, align 8
  %memberidx3 = getelementptr inbounds %Program, ptr %35, i64 0, i32 1
  %36 = load ptr, ptr %memberidx3, align 8
  %37 = load i64, ptr %memberidx.i.i, align 4
  %memberidx.i83 = getelementptr inbounds %Array_Module_, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i83, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %38, i64 %37
  %39 = load ptr, ptr %ptridx.i, align 8
  %40 = load i64, ptr %1, align 4
  %41 = icmp eq i64 %40, 2
  br i1 %41, label %for.entry, label %ifend8

ifend8:                                           ; preds = %ifend, %for.end
  %42 = phi i64 [ %40, %ifend ], [ %.pr, %for.end ]
  %43 = icmp eq i64 %42, 1
  br i1 %43, label %for.entry21, label %ifend20

for.entry:                                        ; preds = %ifend
  %memberidx9 = getelementptr inbounds %Module, ptr %39, i64 0, i32 8
  %44 = load ptr, ptr %memberidx9, align 8
  %45 = call ptr @malloc(i32 25)
  %memberidx.i84 = getelementptr inbounds %Array_ConstDeclaration_, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %44, i64 0, i32 2
  %47 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %45, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %45, i64 0, i32 1
  %memberidx2.i.i85 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %45, i64 0, i32 3
  store ptr %46, ptr %memberidx2.i.i85, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %45, i64 0, i32 2
  store i64 %47, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %48 = icmp slt i64 %47, 1
  br i1 %48, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %49 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend16
  %50 = phi i64 [ 1, %for.body.lr.ph ], [ %82, %ifend16 ]
  %global_const.0243.in = phi ptr [ %46, %for.body.lr.ph ], [ %ptridx.i96, %ifend16 ]
  %global_const.0243 = load ptr, ptr %global_const.0243.in, align 8
  %memberidx11 = getelementptr inbounds %ConstDeclaration, ptr %global_const.0243, i64 0, i32 2
  %51 = load ptr, ptr %memberidx11, align 8
  %memberidx12 = getelementptr inbounds %VarId, ptr %51, i64 0, i32 2
  %52 = load i64, ptr %memberidx12, align 4
  %53 = icmp eq i64 %52, %49
  br i1 %53, label %if.entry14, label %ifend16

for.end:                                          ; preds = %ifend16, %for.entry
  tail call void @free(ptr nonnull %45)
  %.pr = load i64, ptr %1, align 4
  br label %ifend8

if.entry14:                                       ; preds = %for.body
  store i1 false, ptr %45, align 1
  call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr null, ptr nonnull %global_const.0243)
  %54 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %55 = load i64, ptr %memberidx.i.i, align 4
  %56 = load i64, ptr %1, align 4
  %57 = load i64, ptr %memberidx2.i.i, align 4
  %58 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @222, i64 %55, i64 %56, i64 %57)
  %59 = load ptr, ptr %5, align 8
  %60 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %60, align 8
  %memberidx.i.i.i91 = getelementptr inbounds %string, ptr %60, i64 0, i32 1
  store ptr %59, ptr %memberidx.i.i.i91, align 8
  %memberidx1.i.i.i92 = getelementptr inbounds %string, ptr %60, i64 0, i32 2
  store i64 %58, ptr %memberidx1.i.i.i92, align 4
  %memberidx2.i.i.i93 = getelementptr inbounds %string, ptr %60, i64 0, i32 3
  store i64 %58, ptr %memberidx2.i.i.i93, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %61 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %60)
  %memberidx.i142 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %54, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i142, align 4
  %63 = urem i64 %61, %62
  %64 = load ptr, ptr %54, align 8
  %ptridx.i143 = getelementptr inbounds ptr, ptr %64, i64 %63
  %65 = load ptr, ptr %ptridx.i143, align 8
  %.not.i144 = icmp eq ptr %65, null
  br i1 %.not.i144, label %common.ret, label %while.entry.i150

while.entry.i150:                                 ; preds = %if.entry14, %else.i162
  %66 = phi ptr [ %76, %else.i162 ], [ %64, %if.entry14 ]
  %67 = phi i64 [ %77, %else.i162 ], [ %62, %if.entry14 ]
  %68 = phi ptr [ %80, %else.i162 ], [ %65, %if.entry14 ]
  %hash.0.i145 = phi i64 [ %79, %else.i162 ], [ %63, %if.entry14 ]
  %69 = load ptr, ptr %68, align 8
  %memberidx.i.i147 = getelementptr inbounds %string, ptr %69, i64 0, i32 2
  %70 = load i64, ptr %memberidx.i.i147, align 4
  %71 = load i64, ptr %memberidx1.i.i.i92, align 4
  %.not.i.i149 = icmp eq i64 %70, %71
  br i1 %.not.i.i149, label %ifend.i.i153, label %else.i162

ifend.i.i153:                                     ; preds = %while.entry.i150
  %memberidx2.i.i151 = getelementptr inbounds %string, ptr %69, i64 0, i32 1
  %72 = load ptr, ptr %memberidx2.i.i151, align 8
  %73 = load ptr, ptr %memberidx.i.i.i91, align 8
  %74 = call i64 @memcmp(ptr %72, ptr %73, i64 %70)
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %while.end.i159, label %ifend.i.i153.else.i162_crit_edge

ifend.i.i153.else.i162_crit_edge:                 ; preds = %ifend.i.i153
  %.pre256 = load i64, ptr %memberidx.i142, align 4
  %.pre257 = load ptr, ptr %54, align 8
  br label %else.i162

while.end.i159:                                   ; preds = %ifend.i.i153
  %.pre258.pre = load ptr, ptr %54, align 8
  %ptridx9.i157.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre258.pre, i64 %hash.0.i145
  %.pre259.pre = load ptr, ptr %ptridx9.i157.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i158 = icmp eq ptr %.pre259.pre, null
  br i1 %.not29.i158, label %common.ret, label %if.entry10.i165

else.i162:                                        ; preds = %ifend.i.i153.else.i162_crit_edge, %while.entry.i150
  %76 = phi ptr [ %.pre257, %ifend.i.i153.else.i162_crit_edge ], [ %66, %while.entry.i150 ]
  %77 = phi i64 [ %.pre256, %ifend.i.i153.else.i162_crit_edge ], [ %67, %while.entry.i150 ]
  %78 = add nuw i64 %hash.0.i145, 1
  %79 = urem i64 %78, %77
  %ptridx7.i160 = getelementptr inbounds ptr, ptr %76, i64 %79
  %80 = load ptr, ptr %ptridx7.i160, align 8
  %.not30.i161 = icmp eq ptr %80, null
  br i1 %.not30.i161, label %common.ret, label %while.entry.i150

if.entry10.i165:                                  ; preds = %while.end.i159
  %memberidx15.i164 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre259.pre, i64 0, i32 1
  %81 = load ptr, ptr %memberidx15.i164, align 8
  br label %common.ret

ifend16:                                          ; preds = %for.body
  %82 = add nuw nsw i64 %50, 1
  store i64 %82, ptr %memberidx1.i.i, align 4
  %ptridx.i96 = getelementptr inbounds ptr, ptr %46, i64 %50
  %.not279 = icmp slt i64 %50, %47
  br i1 %.not279, label %for.body, label %for.end

ifend20:                                          ; preds = %ifend8, %for.end26
  %83 = phi i64 [ %42, %ifend8 ], [ %.pre264, %for.end26 ]
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %for.entry38, label %common.ret

for.entry21:                                      ; preds = %ifend8
  %memberidx22 = getelementptr inbounds %Module, ptr %39, i64 0, i32 9
  %85 = load ptr, ptr %memberidx22, align 8
  %86 = call ptr @malloc(i32 25)
  %memberidx.i98 = getelementptr inbounds %Array_VarDeclaration_, ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i98, align 8
  %memberidx1.i99 = getelementptr inbounds %Array_VarDeclaration_, ptr %85, i64 0, i32 2
  %88 = load i64, ptr %memberidx1.i99, align 4
  store i1 false, ptr %86, align 1
  %memberidx1.i.i100 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %86, i64 0, i32 1
  %memberidx2.i.i101 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %86, i64 0, i32 3
  store ptr %87, ptr %memberidx2.i.i101, align 8
  %memberidx3.i.i102 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %86, i64 0, i32 2
  store i64 %88, ptr %memberidx3.i.i102, align 4
  store i64 1, ptr %memberidx1.i.i100, align 4
  %89 = icmp slt i64 %88, 1
  br i1 %89, label %for.end26, label %for.body24.lr.ph

for.body24.lr.ph:                                 ; preds = %for.entry21
  %90 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body24

for.body24:                                       ; preds = %for.body24.lr.ph, %ifend33
  %91 = phi i64 [ 1, %for.body24.lr.ph ], [ %123, %ifend33 ]
  %global_var.0238.in = phi ptr [ %87, %for.body24.lr.ph ], [ %ptridx.i115, %ifend33 ]
  %global_var.0238 = load ptr, ptr %global_var.0238.in, align 8
  %memberidx28 = getelementptr inbounds %VarDeclaration, ptr %global_var.0238, i64 0, i32 2
  %92 = load ptr, ptr %memberidx28, align 8
  %memberidx29 = getelementptr inbounds %VarId, ptr %92, i64 0, i32 2
  %93 = load i64, ptr %memberidx29, align 4
  %94 = icmp eq i64 %93, %90
  br i1 %94, label %if.entry31, label %ifend33

for.end26:                                        ; preds = %ifend33, %for.entry21
  tail call void @free(ptr nonnull %86)
  %.pre264 = load i64, ptr %1, align 4
  br label %ifend20

if.entry31:                                       ; preds = %for.body24
  store i1 false, ptr %86, align 1
  call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr null, ptr nonnull %global_var.0238)
  %95 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %96 = load i64, ptr %memberidx.i.i, align 4
  %97 = load i64, ptr %1, align 4
  %98 = load i64, ptr %memberidx2.i.i, align 4
  %99 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @222, i64 %96, i64 %97, i64 %98)
  %100 = load ptr, ptr %4, align 8
  %101 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %101, align 8
  %memberidx.i.i.i110 = getelementptr inbounds %string, ptr %101, i64 0, i32 1
  store ptr %100, ptr %memberidx.i.i.i110, align 8
  %memberidx1.i.i.i111 = getelementptr inbounds %string, ptr %101, i64 0, i32 2
  store i64 %99, ptr %memberidx1.i.i.i111, align 4
  %memberidx2.i.i.i112 = getelementptr inbounds %string, ptr %101, i64 0, i32 3
  store i64 %99, ptr %memberidx2.i.i.i112, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %102 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %101)
  %memberidx.i167 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %95, i64 0, i32 1
  %103 = load i64, ptr %memberidx.i167, align 4
  %104 = urem i64 %102, %103
  %105 = load ptr, ptr %95, align 8
  %ptridx.i168 = getelementptr inbounds ptr, ptr %105, i64 %104
  %106 = load ptr, ptr %ptridx.i168, align 8
  %.not.i169 = icmp eq ptr %106, null
  br i1 %.not.i169, label %common.ret, label %while.entry.i175

while.entry.i175:                                 ; preds = %if.entry31, %else.i187
  %107 = phi ptr [ %117, %else.i187 ], [ %105, %if.entry31 ]
  %108 = phi i64 [ %118, %else.i187 ], [ %103, %if.entry31 ]
  %109 = phi ptr [ %121, %else.i187 ], [ %106, %if.entry31 ]
  %hash.0.i170 = phi i64 [ %120, %else.i187 ], [ %104, %if.entry31 ]
  %110 = load ptr, ptr %109, align 8
  %memberidx.i.i172 = getelementptr inbounds %string, ptr %110, i64 0, i32 2
  %111 = load i64, ptr %memberidx.i.i172, align 4
  %112 = load i64, ptr %memberidx1.i.i.i111, align 4
  %.not.i.i174 = icmp eq i64 %111, %112
  br i1 %.not.i.i174, label %ifend.i.i178, label %else.i187

ifend.i.i178:                                     ; preds = %while.entry.i175
  %memberidx2.i.i176 = getelementptr inbounds %string, ptr %110, i64 0, i32 1
  %113 = load ptr, ptr %memberidx2.i.i176, align 8
  %114 = load ptr, ptr %memberidx.i.i.i110, align 8
  %115 = call i64 @memcmp(ptr %113, ptr %114, i64 %111)
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %while.end.i184, label %ifend.i.i178.else.i187_crit_edge

ifend.i.i178.else.i187_crit_edge:                 ; preds = %ifend.i.i178
  %.pre260 = load i64, ptr %memberidx.i167, align 4
  %.pre261 = load ptr, ptr %95, align 8
  br label %else.i187

while.end.i184:                                   ; preds = %ifend.i.i178
  %.pre262.pre = load ptr, ptr %95, align 8
  %ptridx9.i182.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre262.pre, i64 %hash.0.i170
  %.pre263.pre = load ptr, ptr %ptridx9.i182.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i183 = icmp eq ptr %.pre263.pre, null
  br i1 %.not29.i183, label %common.ret, label %if.entry10.i190

else.i187:                                        ; preds = %ifend.i.i178.else.i187_crit_edge, %while.entry.i175
  %117 = phi ptr [ %.pre261, %ifend.i.i178.else.i187_crit_edge ], [ %107, %while.entry.i175 ]
  %118 = phi i64 [ %.pre260, %ifend.i.i178.else.i187_crit_edge ], [ %108, %while.entry.i175 ]
  %119 = add nuw i64 %hash.0.i170, 1
  %120 = urem i64 %119, %118
  %ptridx7.i185 = getelementptr inbounds ptr, ptr %117, i64 %120
  %121 = load ptr, ptr %ptridx7.i185, align 8
  %.not30.i186 = icmp eq ptr %121, null
  br i1 %.not30.i186, label %common.ret, label %while.entry.i175

if.entry10.i190:                                  ; preds = %while.end.i184
  %memberidx15.i189 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre263.pre, i64 0, i32 1
  %122 = load ptr, ptr %memberidx15.i189, align 8
  br label %common.ret

ifend33:                                          ; preds = %for.body24
  %123 = add nuw nsw i64 %91, 1
  store i64 %123, ptr %memberidx1.i.i100, align 4
  %ptridx.i115 = getelementptr inbounds ptr, ptr %87, i64 %91
  %.not278 = icmp slt i64 %91, %88
  br i1 %.not278, label %for.body24, label %for.end26

for.entry38:                                      ; preds = %ifend20
  %memberidx39 = getelementptr inbounds %Module, ptr %39, i64 0, i32 4
  %124 = load ptr, ptr %memberidx39, align 8
  %125 = call ptr @malloc(i32 25)
  %memberidx.i117 = getelementptr inbounds %Array_Function_, ptr %124, i64 0, i32 1
  %126 = load ptr, ptr %memberidx.i117, align 8
  %memberidx1.i118 = getelementptr inbounds %Array_Function_, ptr %124, i64 0, i32 2
  %127 = load i64, ptr %memberidx1.i118, align 4
  store i1 false, ptr %125, align 1
  %memberidx1.i.i119 = getelementptr inbounds %ArrayIterator_Function_, ptr %125, i64 0, i32 1
  %memberidx2.i.i120 = getelementptr inbounds %ArrayIterator_Function_, ptr %125, i64 0, i32 3
  store ptr %126, ptr %memberidx2.i.i120, align 8
  %memberidx3.i.i121 = getelementptr inbounds %ArrayIterator_Function_, ptr %125, i64 0, i32 2
  store i64 %127, ptr %memberidx3.i.i121, align 4
  store i64 1, ptr %memberidx1.i.i119, align 4
  %128 = icmp slt i64 %127, 1
  br i1 %128, label %for.end43, label %for.body41.lr.ph

for.body41.lr.ph:                                 ; preds = %for.entry38
  %129 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body41

for.body41:                                       ; preds = %for.body41.lr.ph, %ifend50
  %130 = phi i64 [ 1, %for.body41.lr.ph ], [ %162, %ifend50 ]
  %function.0234.in = phi ptr [ %126, %for.body41.lr.ph ], [ %ptridx.i134, %ifend50 ]
  %function.0234 = load ptr, ptr %function.0234.in, align 8
  %131 = load ptr, ptr %function.0234, align 8
  %memberidx46 = getelementptr inbounds %VarId, ptr %131, i64 0, i32 2
  %132 = load i64, ptr %memberidx46, align 4
  %133 = icmp eq i64 %132, %129
  br i1 %133, label %if.entry48, label %ifend50

for.end43:                                        ; preds = %ifend50, %for.entry38
  tail call void @free(ptr nonnull %125)
  br label %common.ret

if.entry48:                                       ; preds = %for.body41
  store i1 false, ptr %125, align 1
  call fastcc void @CodeGen_codegen_function(ptr %0, ptr nonnull %function.0234)
  %134 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %135 = load i64, ptr %memberidx.i.i, align 4
  %136 = load i64, ptr %1, align 4
  %137 = load i64, ptr %memberidx2.i.i, align 4
  %138 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @222, i64 %135, i64 %136, i64 %137)
  %139 = load ptr, ptr %3, align 8
  %140 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %140, align 8
  %memberidx.i.i.i129 = getelementptr inbounds %string, ptr %140, i64 0, i32 1
  store ptr %139, ptr %memberidx.i.i.i129, align 8
  %memberidx1.i.i.i130 = getelementptr inbounds %string, ptr %140, i64 0, i32 2
  store i64 %138, ptr %memberidx1.i.i.i130, align 4
  %memberidx2.i.i.i131 = getelementptr inbounds %string, ptr %140, i64 0, i32 3
  store i64 %138, ptr %memberidx2.i.i.i131, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %141 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %140)
  %memberidx.i192 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %134, i64 0, i32 1
  %142 = load i64, ptr %memberidx.i192, align 4
  %143 = urem i64 %141, %142
  %144 = load ptr, ptr %134, align 8
  %ptridx.i193 = getelementptr inbounds ptr, ptr %144, i64 %143
  %145 = load ptr, ptr %ptridx.i193, align 8
  %.not.i194 = icmp eq ptr %145, null
  br i1 %.not.i194, label %common.ret, label %while.entry.i200

while.entry.i200:                                 ; preds = %if.entry48, %else.i212
  %146 = phi ptr [ %156, %else.i212 ], [ %144, %if.entry48 ]
  %147 = phi i64 [ %157, %else.i212 ], [ %142, %if.entry48 ]
  %148 = phi ptr [ %160, %else.i212 ], [ %145, %if.entry48 ]
  %hash.0.i195 = phi i64 [ %159, %else.i212 ], [ %143, %if.entry48 ]
  %149 = load ptr, ptr %148, align 8
  %memberidx.i.i197 = getelementptr inbounds %string, ptr %149, i64 0, i32 2
  %150 = load i64, ptr %memberidx.i.i197, align 4
  %151 = load i64, ptr %memberidx1.i.i.i130, align 4
  %.not.i.i199 = icmp eq i64 %150, %151
  br i1 %.not.i.i199, label %ifend.i.i203, label %else.i212

ifend.i.i203:                                     ; preds = %while.entry.i200
  %memberidx2.i.i201 = getelementptr inbounds %string, ptr %149, i64 0, i32 1
  %152 = load ptr, ptr %memberidx2.i.i201, align 8
  %153 = load ptr, ptr %memberidx.i.i.i129, align 8
  %154 = call i64 @memcmp(ptr %152, ptr %153, i64 %150)
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %while.end.i209, label %ifend.i.i203.else.i212_crit_edge

ifend.i.i203.else.i212_crit_edge:                 ; preds = %ifend.i.i203
  %.pre265 = load i64, ptr %memberidx.i192, align 4
  %.pre266 = load ptr, ptr %134, align 8
  br label %else.i212

while.end.i209:                                   ; preds = %ifend.i.i203
  %.pre267.pre = load ptr, ptr %134, align 8
  %ptridx9.i207.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre267.pre, i64 %hash.0.i195
  %.pre268.pre = load ptr, ptr %ptridx9.i207.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i208 = icmp eq ptr %.pre268.pre, null
  br i1 %.not29.i208, label %common.ret, label %if.entry10.i215

else.i212:                                        ; preds = %ifend.i.i203.else.i212_crit_edge, %while.entry.i200
  %156 = phi ptr [ %.pre266, %ifend.i.i203.else.i212_crit_edge ], [ %146, %while.entry.i200 ]
  %157 = phi i64 [ %.pre265, %ifend.i.i203.else.i212_crit_edge ], [ %147, %while.entry.i200 ]
  %158 = add nuw i64 %hash.0.i195, 1
  %159 = urem i64 %158, %157
  %ptridx7.i210 = getelementptr inbounds ptr, ptr %156, i64 %159
  %160 = load ptr, ptr %ptridx7.i210, align 8
  %.not30.i211 = icmp eq ptr %160, null
  br i1 %.not30.i211, label %common.ret, label %while.entry.i200

if.entry10.i215:                                  ; preds = %while.end.i209
  %memberidx15.i214 = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre268.pre, i64 0, i32 1
  %161 = load ptr, ptr %memberidx15.i214, align 8
  br label %common.ret

ifend50:                                          ; preds = %for.body41
  %162 = add nuw nsw i64 %130, 1
  store i64 %162, ptr %memberidx1.i.i119, align 4
  %ptridx.i134 = getelementptr inbounds ptr, ptr %126, i64 %130
  %.not277 = icmp slt i64 %130, %127
  br i1 %.not277, label %for.body41, label %for.end43
}

define internal fastcc void @CodeGen_declare_enum(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call ptr @malloc(i32 2048)
  store ptr %8, ptr %7, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i83 = phi i64 [ 0, %2 ], [ %10, %for.body.i.i ]
  %9 = load ptr, ptr %7, align 8
  %ptridx.i.i = getelementptr inbounds ptr, ptr %9, i64 %i.0.i.i83
  store ptr null, ptr %ptridx.i.i, align 8
  %10 = add nuw nsw i64 %i.0.i.i83, 1
  %11 = icmp ult i64 %i.0.i.i83, 255
  br i1 %11, label %for.body.i.i, label %CGEnumType_constructor.exit

CGEnumType_constructor.exit:                      ; preds = %for.body.i.i
  %memberidx.i75 = getelementptr inbounds %CGEnumType, ptr %6, i64 0, i32 1
  %memberidx2.i.i76 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %7, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i76, align 4
  %memberidx3.i.i77 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %7, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i77, align 4
  store ptr %7, ptr %memberidx.i75, align 8
  %memberidx = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  %12 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_EnumField_, ptr %12, i64 0, i32 2
  %13 = load i64, ptr %memberidx1, align 4
  %14 = icmp sgt i64 %13, 0
  br i1 %14, label %if.entry, label %else

if.entry:                                         ; preds = %CGEnumType_constructor.exit
  %memberidx.i74 = getelementptr inbounds %Array_EnumField_, ptr %12, i64 0, i32 1
  %15 = load ptr, ptr %memberidx.i74, align 8
  %16 = load ptr, ptr %15, align 8
  %memberidx4 = getelementptr inbounds %EnumField, ptr %16, i64 0, i32 2
  %17 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  %18 = load ptr, ptr %memberidx5, align 8
  %19 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %18, i1 true)
  br label %ifend

else:                                             ; preds = %CGEnumType_constructor.exit
  %20 = tail call ptr @LLVMIntType(i64 64)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %storemerge = phi ptr [ %20, %else ], [ %19, %if.entry ]
  store ptr %storemerge, ptr %6, align 8
  %21 = load ptr, ptr %memberidx, align 8
  %memberidx8 = getelementptr inbounds %Array_EnumField_, ptr %21, i64 0, i32 2
  %22 = load i64, ptr %memberidx8, align 4
  %23 = alloca ptr, i64 %22, align 8
  %24 = tail call ptr @malloc(i32 25)
  %memberidx.i70 = getelementptr inbounds %Array_EnumField_, ptr %21, i64 0, i32 1
  %25 = load ptr, ptr %memberidx.i70, align 8
  %26 = load i64, ptr %memberidx8, align 4
  store i1 false, ptr %24, align 1
  %memberidx1.i.i72 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %24, i64 0, i32 1
  %memberidx2.i.i73 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %24, i64 0, i32 3
  store ptr %25, ptr %memberidx2.i.i73, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_EnumField_, ptr %24, i64 0, i32 2
  store i64 %26, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i72, align 4
  %27 = icmp slt i64 %26, 1
  br i1 %27, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %ifend
  %memberidx14 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %28 = phi i64 [ 1, %for.body.lr.ph ], [ %68, %for.body ]
  %enum_field.081.in = phi ptr [ %25, %for.body.lr.ph ], [ %ptridx.i, %for.body ]
  %idx.080 = phi i64 [ 0, %for.body.lr.ph ], [ %67, %for.body ]
  %enum_field.081 = load ptr, ptr %enum_field.081.in, align 8
  %29 = load ptr, ptr %enum_field.081, align 8
  %30 = load ptr, ptr %memberidx.i75, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i59 = getelementptr inbounds %PropId, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %memberidx.i59, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %32 = load i64, ptr %31, align 4
  %memberidx1.i.i60 = getelementptr inbounds %TypeId, ptr %31, i64 0, i32 1
  %33 = load i64, ptr %memberidx1.i.i60, align 4
  %memberidx2.i.i61 = getelementptr inbounds %TypeId, ptr %31, i64 0, i32 2
  %34 = load i64, ptr %memberidx2.i.i61, align 4
  %35 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @222, i64 %32, i64 %33, i64 %34)
  %36 = load ptr, ptr %3, align 8
  %37 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %37, align 8
  %memberidx.i.i.i62 = getelementptr inbounds %string, ptr %37, i64 0, i32 1
  store ptr %36, ptr %memberidx.i.i.i62, align 8
  %memberidx1.i.i.i63 = getelementptr inbounds %string, ptr %37, i64 0, i32 2
  store i64 %35, ptr %memberidx1.i.i.i63, align 4
  %memberidx2.i.i.i64 = getelementptr inbounds %string, ptr %37, i64 0, i32 3
  store i64 %35, ptr %memberidx2.i.i.i64, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %38 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %39 = call ptr %38(ptr nonnull %37)
  %40 = load i64, ptr %29, align 4
  %memberidx3.i = getelementptr inbounds %PropId, ptr %29, i64 0, i32 2
  %41 = load i64, ptr %memberidx3.i, align 4
  %42 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @238, ptr %39, i64 %40, i64 %41)
  %43 = load ptr, ptr %4, align 8
  %44 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %44, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %44, i64 0, i32 1
  store ptr %43, ptr %memberidx.i.i, align 8
  %memberidx1.i6.i = getelementptr inbounds %string, ptr %44, i64 0, i32 2
  store i64 %42, ptr %memberidx1.i6.i, align 4
  %memberidx2.i7.i = getelementptr inbounds %string, ptr %44, i64 0, i32 3
  store i64 %42, ptr %memberidx2.i7.i, align 4
  call void @free(ptr %39)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %memberidx13 = getelementptr inbounds %EnumField, ptr %enum_field.081, i64 0, i32 2
  %45 = load ptr, ptr %memberidx13, align 8
  %46 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr null, ptr %45)
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %30, ptr nonnull %44, ptr %46)
  %47 = load ptr, ptr %memberidx14, align 8
  %48 = load ptr, ptr %47, align 8
  %memberidx15 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %48, i64 0, i32 5
  %49 = load ptr, ptr %memberidx15, align 8
  %50 = call ptr %49(ptr nonnull %47)
  %memberidx16 = getelementptr inbounds %EnumField, ptr %enum_field.081, i64 0, i32 1
  %51 = load ptr, ptr %memberidx16, align 8
  %52 = load ptr, ptr %51, align 8
  %memberidx17 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %52, i64 0, i32 5
  %53 = load ptr, ptr %memberidx17, align 8
  %54 = call ptr %53(ptr nonnull %51)
  %55 = alloca ptr, align 8
  %56 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %55, ptr nonnull @268, ptr %50, ptr %54)
  %57 = load ptr, ptr %55, align 8
  %58 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %58, align 8
  %memberidx.i56 = getelementptr inbounds %string, ptr %58, i64 0, i32 1
  store ptr %57, ptr %memberidx.i56, align 8
  %memberidx1.i57 = getelementptr inbounds %string, ptr %58, i64 0, i32 2
  store i64 %56, ptr %memberidx1.i57, align 4
  %memberidx2.i58 = getelementptr inbounds %string, ptr %58, i64 0, i32 3
  store i64 %56, ptr %memberidx2.i58, align 4
  tail call void @free(ptr %50)
  tail call void @free(ptr %54)
  %59 = load ptr, ptr %58, align 8
  %memberidx18 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %59, i64 0, i32 5
  %60 = load ptr, ptr %memberidx18, align 8
  %61 = call ptr %60(ptr nonnull %58)
  %62 = load i64, ptr %memberidx1.i57, align 4
  %63 = call ptr @LLVMConstString(ptr %61, i64 %62, i1 false)
  %64 = load ptr, ptr %0, align 8
  %65 = call ptr @LLVMTypeOf(ptr %63)
  %66 = call ptr @LLVMAddGlobal(ptr %64, ptr %65, ptr nonnull @71)
  call void @LLVMSetInitializer(ptr %66, ptr %63)
  %67 = add nuw nsw i64 %idx.080, 1
  %ptridx = getelementptr inbounds ptr, ptr %23, i64 %idx.080
  store ptr %66, ptr %ptridx, align 8
  %68 = add nuw nsw i64 %28, 1
  store i64 %68, ptr %memberidx1.i.i72, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %25, i64 %28
  %.not = icmp slt i64 %28, %26
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend
  %idx.0.lcssa = phi i64 [ 0, %ifend ], [ %67, %for.body ]
  tail call void @free(ptr nonnull %24)
  %69 = call ptr @LLVMInt8Type()
  %70 = call ptr @LLVMPointerType(ptr %69, i64 0)
  %71 = call ptr @LLVMConstArray(ptr %70, ptr nonnull %23, i64 %idx.0.lcssa)
  %72 = load ptr, ptr %0, align 8
  %73 = call ptr @LLVMTypeOf(ptr %71)
  %memberidx22 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 1
  %74 = load ptr, ptr %memberidx22, align 8
  %75 = load ptr, ptr %74, align 8
  %memberidx23 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %75, i64 0, i32 5
  %76 = load ptr, ptr %memberidx23, align 8
  %77 = call ptr %76(ptr nonnull %74)
  %78 = alloca ptr, align 8
  %79 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %78, ptr nonnull @269, ptr %77)
  %80 = load ptr, ptr %78, align 8
  %81 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %81, align 8
  %memberidx.i53 = getelementptr inbounds %string, ptr %81, i64 0, i32 1
  store ptr %80, ptr %memberidx.i53, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %81, i64 0, i32 2
  store i64 %79, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %81, i64 0, i32 3
  store i64 %79, ptr %memberidx2.i, align 4
  tail call void @free(ptr %77)
  %82 = load ptr, ptr %81, align 8
  %memberidx24 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %82, i64 0, i32 5
  %83 = load ptr, ptr %memberidx24, align 8
  %84 = call ptr %83(ptr nonnull %81)
  %85 = call ptr @LLVMAddGlobal(ptr %72, ptr %73, ptr %84)
  call void @LLVMSetInitializer(ptr %85, ptr %71)
  %memberidx25 = getelementptr inbounds %CGEnumType, ptr %6, i64 0, i32 2
  store ptr %85, ptr %memberidx25, align 8
  %86 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %87 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %88 = load i64, ptr %86, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %86, i64 0, i32 1
  %89 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %86, i64 0, i32 2
  %90 = load i64, ptr %memberidx2.i.i, align 4
  %91 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @222, i64 %88, i64 %89, i64 %90)
  %92 = load ptr, ptr %5, align 8
  %93 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %93, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %93, i64 0, i32 1
  store ptr %92, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %93, i64 0, i32 2
  store i64 %91, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %93, i64 0, i32 3
  store i64 %91, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call fastcc void @Map_string_CGEnumType____setitem__(ptr %87, ptr nonnull %93, ptr nonnull %6)
  ret void
}

define internal fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr nocapture readonly %0, ptr %1, ptr %2, ptr nocapture readonly %3, i64 %4, ptr writeonly %5) unnamed_addr {
  %arg_types = alloca [2 x ptr], align 8
  %7 = tail call ptr @LLVMInt8Type()
  %8 = tail call ptr @LLVMPointerType(ptr %7, i64 0)
  %9 = tail call ptr @LLVMIntType(i64 64)
  %10 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %8, ptr nonnull @71)
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %11 = load ptr, ptr %memberidx.i, align 8
  %12 = tail call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr %2)
  %memberidx.i25 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %11, i64 0, i32 1
  %13 = load i64, ptr %memberidx.i25, align 4
  %14 = urem i64 %12, %13
  %15 = load ptr, ptr %11, align 8
  %ptridx.i = getelementptr inbounds ptr, ptr %15, i64 %14
  %16 = load ptr, ptr %ptridx.i, align 8
  %.not.i26 = icmp eq ptr %16, null
  br i1 %.not.i26, label %if.entry.i, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %6
  %memberidx1.i.i28 = getelementptr inbounds %string, ptr %2, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %string, ptr %2, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i30
  %17 = phi ptr [ %27, %else.i30 ], [ %15, %while.entry.i.preheader ]
  %18 = phi i64 [ %28, %else.i30 ], [ %13, %while.entry.i.preheader ]
  %19 = phi ptr [ %31, %else.i30 ], [ %16, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %30, %else.i30 ], [ %14, %while.entry.i.preheader ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i27 = getelementptr inbounds %string, ptr %20, i64 0, i32 2
  %21 = load i64, ptr %memberidx.i.i27, align 4
  %22 = load i64, ptr %memberidx1.i.i28, align 4
  %.not.i.i = icmp eq i64 %21, %22
  br i1 %.not.i.i, label %ifend.i.i, label %else.i30

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i29 = getelementptr inbounds %string, ptr %20, i64 0, i32 1
  %23 = load ptr, ptr %memberidx2.i.i29, align 8
  %24 = load ptr, ptr %memberidx3.i.i, align 8
  %25 = tail call i64 @memcmp(ptr %23, ptr %24, i64 %21)
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %while.end.i, label %ifend.i.i.else.i30_crit_edge

ifend.i.i.else.i30_crit_edge:                     ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i25, align 4
  %.pre35 = load ptr, ptr %11, align 8
  br label %else.i30

while.end.i:                                      ; preds = %ifend.i.i
  %.pre36.pre = load ptr, ptr %11, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre36.pre, i64 %hash.0.i
  %.pre37.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre37.pre, null
  br i1 %.not29.i, label %if.entry.i, label %Map_string_LLVMValueRef____getitem__.exit

else.i30:                                         ; preds = %ifend.i.i.else.i30_crit_edge, %while.entry.i
  %27 = phi ptr [ %.pre35, %ifend.i.i.else.i30_crit_edge ], [ %17, %while.entry.i ]
  %28 = phi i64 [ %.pre, %ifend.i.i.else.i30_crit_edge ], [ %18, %while.entry.i ]
  %29 = add nuw i64 %hash.0.i, 1
  %30 = urem i64 %29, %28
  %ptridx7.i = getelementptr inbounds ptr, ptr %27, i64 %30
  %31 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %31, null
  br i1 %.not30.i, label %if.entry.i, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre37.pre, i64 0, i32 1
  %32 = load ptr, ptr %memberidx15.i, align 8
  %33 = icmp eq ptr %32, null
  br i1 %33, label %if.entry.i, label %CodeGen_createGlobalLLVMString.exit

if.entry.i:                                       ; preds = %else.i30, %6, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %34 = load ptr, ptr %2, align 8
  %memberidx1.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %34, i64 0, i32 5
  %35 = load ptr, ptr %memberidx1.i, align 8
  %36 = tail call ptr %35(ptr nonnull %2)
  %37 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %36, ptr nonnull @71)
  %38 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %38, ptr nonnull %2, ptr %37)
  br label %CodeGen_createGlobalLLVMString.exit

CodeGen_createGlobalLLVMString.exit:              ; preds = %Map_string_LLVMValueRef____getitem__.exit, %if.entry.i
  %str.0.i = phi ptr [ %37, %if.entry.i ], [ %32, %Map_string_LLVMValueRef____getitem__.exit ]
  %39 = add nuw i64 %4, 2
  %40 = alloca ptr, i64 %39, align 8
  store ptr %10, ptr %40, align 8
  %ptridx1 = getelementptr inbounds ptr, ptr %40, i64 1
  store ptr %str.0.i, ptr %ptridx1, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 2
  %42 = shl i64 %4, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1073741824 %41, ptr align 8 %3, i64 %42, i1 false)
  store ptr %8, ptr %arg_types, align 8
  %43 = getelementptr inbounds ptr, ptr %arg_types, i64 1
  store ptr %8, ptr %43, align 8
  %44 = load ptr, ptr %0, align 8
  %45 = tail call ptr @malloc(i32 8)
  store i64 7382647088337679201, ptr %45, align 8
  %46 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %46, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %46, i64 0, i32 1
  store ptr %45, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %46, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %46, i64 0, i32 3
  store i64 8, ptr %memberidx2.i.i, align 4
  %47 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i21 = getelementptr inbounds %IntrinsicResult, ptr %47, i64 0, i32 1
  store i64 0, ptr %47, align 8
  %48 = call ptr @LLVMFunctionType(ptr %9, ptr nonnull %arg_types, i64 2, i1 true)
  store ptr %48, ptr %memberidx1.i.i21, align 8
  %49 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %50 = call ptr %49(ptr nonnull %46)
  %51 = call ptr @LLVMGetNamedFunction(ptr %44, ptr %50)
  %.not.i = icmp eq ptr %51, null
  br i1 %.not.i, label %else.i, label %get_intrinsic.exit

else.i:                                           ; preds = %CodeGen_createGlobalLLVMString.exit
  %52 = call ptr @LLVMAddFunction(ptr %44, ptr %50, ptr %48)
  br label %get_intrinsic.exit

get_intrinsic.exit:                               ; preds = %CodeGen_createGlobalLLVMString.exit, %else.i
  %storemerge.i = phi ptr [ %52, %else.i ], [ %51, %CodeGen_createGlobalLLVMString.exit ]
  store ptr %storemerge.i, ptr %47, align 8
  %53 = call ptr @LLVMBuildCall2(ptr %1, ptr %48, ptr %storemerge.i, ptr nonnull %40, i64 %39, ptr nonnull @71)
  %.not = icmp eq ptr %5, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %get_intrinsic.exit
  store ptr %53, ptr %5, align 8
  br label %ifend

ifend:                                            ; preds = %get_intrinsic.exit, %if.entry
  %54 = call ptr @LLVMBuildLoad2(ptr %1, ptr %8, ptr %10, ptr nonnull @71)
  ret ptr %54
}

define internal fastcc ptr @CodeGen_codegen_string(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %str_len = alloca ptr, align 8
  %args = alloca [2 x ptr], align 8
  %args1 = alloca [3 x ptr], align 8
  %memberidx = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %4 = alloca %StringBuilder, align 8
  %memberidx2 = getelementptr inbounds %string, ptr %3, i64 0, i32 2
  %5 = load i64, ptr %memberidx2, align 4
  %memberidx3 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 5
  %6 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Array_uint_, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx4, align 4
  %8 = shl nuw i64 %7, 1
  %9 = add nuw i64 %8, %5
  store ptr @VTableStringBuilder, ptr %4, align 8
  %memberidx.i111 = getelementptr inbounds %StringBuilder, ptr %4, i64 0, i32 2
  store i64 %9, ptr %memberidx.i111, align 8
  %memberidx1.i112 = getelementptr inbounds %StringBuilder, ptr %4, i64 0, i32 1
  %10 = trunc i64 %9 to i32
  %11 = tail call ptr @malloc(i32 %10)
  store ptr %11, ptr %memberidx1.i112, align 8
  %memberidx3.i = getelementptr inbounds %StringBuilder, ptr %4, i64 0, i32 3
  store ptr %11, ptr %memberidx3.i, align 8
  %memberidx5.i113 = getelementptr inbounds %StringBuilder, ptr %4, i64 0, i32 4
  store i64 0, ptr %memberidx5.i113, align 8
  %12 = load ptr, ptr %3, align 8
  %memberidx5 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %12, i64 0, i32 3
  %13 = load ptr, ptr %memberidx5, align 8
  %14 = tail call ptr %13(ptr nonnull %3)
  %15 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMValueRef_, ptr %15, align 8
  %memberidx.i108 = getelementptr inbounds %Array_LLVMValueRef_, ptr %15, i64 0, i32 2
  %memberidx1.i109 = getelementptr inbounds %Array_LLVMValueRef_, ptr %15, i64 0, i32 3
  store i64 8, ptr %memberidx1.i109, align 4
  %memberidx2.i110 = getelementptr inbounds %Array_LLVMValueRef_, ptr %15, i64 0, i32 1
  %16 = tail call ptr @malloc(i32 64)
  store ptr %16, ptr %memberidx2.i110, align 8
  store i64 0, ptr %memberidx.i108, align 4
  %memberidx8 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 6
  %17 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %Array_Expression_, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx9, align 4
  %19 = alloca ptr, i64 %18, align 8
  %20 = icmp sgt i64 %18, 0
  br i1 %20, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %chars.0173 = phi ptr [ %34, %for.body ], [ %14, %for.entry ]
  %curr_ind.0172 = phi i64 [ %28, %for.body ], [ 0, %for.entry ]
  %i.0171 = phi i64 [ %37, %for.body ], [ 0, %for.entry ]
  %21 = load ptr, ptr %memberidx8, align 8
  %memberidx.i106 = getelementptr inbounds %Array_Expression_, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i106, align 8
  %ptridx.i107 = getelementptr inbounds ptr, ptr %22, i64 %i.0171
  %23 = load ptr, ptr %ptridx.i107, align 8
  %memberidx11 = getelementptr inbounds %Expression, ptr %23, i64 0, i32 3
  %24 = load ptr, ptr %memberidx11, align 8
  %25 = call fastcc ptr @get_format_from_type(ptr %24)
  %26 = load ptr, ptr %memberidx3, align 8
  %memberidx.i104 = getelementptr inbounds %Array_uint_, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx.i104, align 8
  %ptridx.i105 = getelementptr inbounds i64, ptr %27, i64 %i.0171
  %28 = load i64, ptr %ptridx.i105, align 4
  %29 = sub nuw i64 %28, %curr_ind.0172
  %30 = load ptr, ptr %4, align 8
  %31 = load ptr, ptr %30, align 8
  call void %31(ptr nonnull %4, ptr %chars.0173, i64 %29)
  %32 = load ptr, ptr %4, align 8
  %memberidx14 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %32, i64 0, i32 1
  %33 = load ptr, ptr %memberidx14, align 8
  call void %33(ptr nonnull %4, ptr %25)
  %34 = getelementptr inbounds i8, ptr %chars.0173, i64 %29
  %35 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %23)
  %ptridx = getelementptr inbounds ptr, ptr %19, i64 %i.0171
  %36 = call fastcc ptr @CodeGen_get_string_val(ptr %0, ptr %1, ptr %35, ptr %24, ptr nonnull %15, i64 0)
  store ptr %36, ptr %ptridx, align 8
  %37 = add nuw nsw i64 %i.0171, 1
  %38 = icmp slt i64 %37, %18
  br i1 %38, label %for.body, label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.body
  %.pre = load ptr, ptr %4, align 8
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.entry
  %39 = phi ptr [ @VTableStringBuilder, %for.entry ], [ %.pre, %for.end.loopexit ]
  %curr_ind.0.lcssa = phi i64 [ 0, %for.entry ], [ %28, %for.end.loopexit ]
  %chars.0.lcssa = phi ptr [ %14, %for.entry ], [ %34, %for.end.loopexit ]
  %40 = load ptr, ptr %39, align 8
  %41 = load i64, ptr %memberidx2, align 4
  %42 = sub nuw i64 %41, %curr_ind.0.lcssa
  call void %40(ptr nonnull %4, ptr %chars.0.lcssa, i64 %42)
  %43 = load ptr, ptr %4, align 8
  %memberidx17 = getelementptr inbounds <{ ptr, ptr, ptr, ptr }>, ptr %43, i64 0, i32 3
  %44 = load ptr, ptr %memberidx17, align 8
  %45 = call ptr %44(ptr nonnull %4)
  %memberidx18 = getelementptr inbounds %string, ptr %45, i64 0, i32 2
  %46 = load i64, ptr %memberidx18, align 4
  %47 = call ptr @LLVMIntType(i64 64)
  %48 = call ptr @LLVMConstInt(ptr %47, i64 %46, i1 false)
  store ptr %48, ptr %str_len, align 8
  br i1 %20, label %true_block, label %false_block

true_block:                                       ; preds = %for.end
  %49 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr nonnull %45, ptr nonnull %19, i64 %18, ptr nonnull %str_len)
  br label %end

false_block:                                      ; preds = %for.end
  %memberidx.i102 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %50 = load ptr, ptr %memberidx.i102, align 8
  %51 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %45)
  %memberidx.i121 = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %50, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i121, align 4
  %53 = urem i64 %51, %52
  %54 = load ptr, ptr %50, align 8
  %ptridx.i122 = getelementptr inbounds ptr, ptr %54, i64 %53
  %55 = load ptr, ptr %ptridx.i122, align 8
  %.not.i123 = icmp eq ptr %55, null
  br i1 %.not.i123, label %if.entry.i, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %false_block
  %memberidx3.i.i127 = getelementptr inbounds %string, ptr %45, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i128
  %56 = phi ptr [ %66, %else.i128 ], [ %54, %while.entry.i.preheader ]
  %57 = phi i64 [ %67, %else.i128 ], [ %52, %while.entry.i.preheader ]
  %58 = phi ptr [ %70, %else.i128 ], [ %55, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %69, %else.i128 ], [ %53, %while.entry.i.preheader ]
  %59 = load ptr, ptr %58, align 8
  %memberidx.i.i124 = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  %60 = load i64, ptr %memberidx.i.i124, align 4
  %61 = load i64, ptr %memberidx18, align 4
  %.not.i.i = icmp eq i64 %60, %61
  br i1 %.not.i.i, label %ifend.i.i, label %else.i128

ifend.i.i:                                        ; preds = %while.entry.i
  %memberidx2.i.i126 = getelementptr inbounds %string, ptr %59, i64 0, i32 1
  %62 = load ptr, ptr %memberidx2.i.i126, align 8
  %63 = load ptr, ptr %memberidx3.i.i127, align 8
  %64 = call i64 @memcmp(ptr %62, ptr %63, i64 %60)
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %while.end.i, label %ifend.i.i.else.i128_crit_edge

ifend.i.i.else.i128_crit_edge:                    ; preds = %ifend.i.i
  %.pre179 = load i64, ptr %memberidx.i121, align 4
  %.pre180 = load ptr, ptr %50, align 8
  br label %else.i128

while.end.i:                                      ; preds = %ifend.i.i
  %.pre181.pre = load ptr, ptr %50, align 8
  %ptridx9.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre181.pre, i64 %hash.0.i
  %.pre182.pre = load ptr, ptr %ptridx9.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i = icmp eq ptr %.pre182.pre, null
  br i1 %.not29.i, label %if.entry.i, label %Map_string_LLVMValueRef____getitem__.exit

else.i128:                                        ; preds = %ifend.i.i.else.i128_crit_edge, %while.entry.i
  %66 = phi ptr [ %.pre180, %ifend.i.i.else.i128_crit_edge ], [ %56, %while.entry.i ]
  %67 = phi i64 [ %.pre179, %ifend.i.i.else.i128_crit_edge ], [ %57, %while.entry.i ]
  %68 = add nuw i64 %hash.0.i, 1
  %69 = urem i64 %68, %67
  %ptridx7.i = getelementptr inbounds ptr, ptr %66, i64 %69
  %70 = load ptr, ptr %ptridx7.i, align 8
  %.not30.i = icmp eq ptr %70, null
  br i1 %.not30.i, label %if.entry.i, label %while.entry.i

Map_string_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx15.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre182.pre, i64 0, i32 1
  %71 = load ptr, ptr %memberidx15.i, align 8
  %72 = icmp eq ptr %71, null
  br i1 %72, label %if.entry.i, label %end

if.entry.i:                                       ; preds = %else.i128, %false_block, %while.end.i, %Map_string_LLVMValueRef____getitem__.exit
  %73 = load ptr, ptr %45, align 8
  %memberidx1.i103 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %73, i64 0, i32 5
  %74 = load ptr, ptr %memberidx1.i103, align 8
  %75 = call ptr %74(ptr nonnull %45)
  %76 = call ptr @LLVMBuildGlobalString(ptr %1, ptr %75, ptr nonnull @71)
  %77 = load ptr, ptr %memberidx.i102, align 8
  call fastcc void @Map_string_LLVMValueRef____setitem__(ptr %77, ptr nonnull %45, ptr %76)
  br label %end

end:                                              ; preds = %if.entry.i, %Map_string_LLVMValueRef____getitem__.exit, %true_block
  %ternary = phi ptr [ %49, %true_block ], [ %76, %if.entry.i ], [ %71, %Map_string_LLVMValueRef____getitem__.exit ]
  %memberidx19 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %78 = load ptr, ptr %memberidx19, align 8
  %79 = load i64, ptr %78, align 4
  %80 = icmp eq i64 %79, 19
  br i1 %80, label %if.entry.i164, label %is_object.exit

if.entry.i164:                                    ; preds = %end, %if.entry.i164
  %.tr5.i = phi ptr [ %81, %if.entry.i164 ], [ %78, %end ]
  %memberidx1.i163 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %81 = load ptr, ptr %memberidx1.i163, align 8
  %82 = load i64, ptr %81, align 4
  %83 = icmp eq i64 %82, 19
  br i1 %83, label %if.entry.i164, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i164, %end
  %.lcssa.i = phi i64 [ %79, %end ], [ %82, %if.entry.i164 ]
  %84 = icmp eq i64 %.lcssa.i, 11
  br i1 %84, label %if.entry, label %for.entry32

if.entry:                                         ; preds = %is_object.exit
  %85 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %78, i1 false)
  %86 = call i1 @LLVMIsConstant(ptr %ternary)
  %87 = call i1 @LLVMIsGlobalConstant(ptr %ternary)
  %88 = and i1 %86, %87
  br i1 %88, label %if.entry21, label %else22

if.entry21:                                       ; preds = %if.entry
  %89 = load ptr, ptr %0, align 8
  %90 = call ptr @LLVMGetNamedFunction(ptr %89, ptr nonnull @232)
  %91 = icmp eq ptr %90, null
  br i1 %91, label %if.entry25, label %ifend27

else22:                                           ; preds = %if.entry
  %92 = call ptr @LLVMBuildMalloc(ptr %1, ptr %85, ptr nonnull @71)
  store ptr %92, ptr %args1, align 8
  %93 = getelementptr inbounds ptr, ptr %args1, i64 1
  store ptr %ternary, ptr %93, align 8
  %94 = getelementptr inbounds ptr, ptr %args1, i64 2
  %95 = load ptr, ptr %str_len, align 8
  store ptr %95, ptr %94, align 8
  %96 = load ptr, ptr %memberidx19, align 8
  %memberidx.i114 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %97 = load i64, ptr %96, align 4
  %cond169 = icmp eq i64 %97, 19
  br i1 %cond169, label %if.entry.i155, label %get_class_from_type.exit

if.entry.i155:                                    ; preds = %else22, %if.entry.i155
  %.tr11.i170 = phi ptr [ %98, %if.entry.i155 ], [ %96, %else22 ]
  %memberidx1.i154 = getelementptr inbounds %GenericType, ptr %.tr11.i170, i64 0, i32 3
  %98 = load ptr, ptr %memberidx1.i154, align 8
  %99 = load i64, ptr %98, align 4
  %cond = icmp eq i64 %99, 19
  br i1 %cond, label %if.entry.i155, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i155, %else22
  %memberidx1.i115 = getelementptr inbounds %ObjectType, ptr %96, i64 0, i32 1
  %100 = load ptr, ptr %memberidx1.i115, align 8
  %101 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %100)
  %.not.i129 = icmp eq ptr %101, null
  br i1 %.not.i129, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %102 = load ptr, ptr %memberidx.i114, align 8
  %memberidx.i.i133 = getelementptr inbounds %Program, ptr %102, i64 0, i32 1
  %103 = load ptr, ptr %memberidx.i.i133, align 8
  %104 = load i64, ptr %100, align 4
  %memberidx.i.i.i134 = getelementptr inbounds %Array_Module_, ptr %103, i64 0, i32 1
  %105 = load ptr, ptr %memberidx.i.i.i134, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %105, i64 %104
  %106 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i135 = getelementptr inbounds %Module, ptr %106, i64 0, i32 3
  %107 = load ptr, ptr %memberidx2.i.i135, align 8
  %memberidx3.i.i136 = getelementptr inbounds %TypeId, ptr %100, i64 0, i32 2
  %108 = load i64, ptr %memberidx3.i.i136, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %107, i64 0, i32 1
  %109 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %109, i64 %108
  %110 = load ptr, ptr %ptridx.i6.i.i, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %110)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %110)
  %111 = load ptr, ptr %110, align 8
  %112 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %111)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i130 = phi ptr [ %112, %ifend.i ], [ %101, %get_class_from_type.exit ]
  %memberidx2.i116 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i130, i64 0, i32 6
  %113 = load ptr, ptr %memberidx2.i116, align 8
  %.not.i = icmp eq ptr %113, null
  br i1 %.not.i, label %else.i, label %if.entry.i117

if.entry.i117:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %114 = call ptr @LLVM_GetFunctionType(ptr nonnull %113)
  %115 = call ptr @LLVMBuildCall2(ptr %1, ptr %114, ptr nonnull %113, ptr nonnull %args1, i64 3, ptr nonnull @71)
  br label %for.entry32

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %116 = call ptr @malloc(i32 47)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %116, ptr noundef nonnull align 8 dereferenceable(47) @264, i64 47, i1 false)
  %117 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %117, align 8
  %memberidx.i.i137 = getelementptr inbounds %string, ptr %117, i64 0, i32 1
  store ptr %116, ptr %memberidx.i.i137, align 8
  %memberidx1.i.i138 = getelementptr inbounds %string, ptr %117, i64 0, i32 2
  store i64 47, ptr %memberidx1.i.i138, align 4
  %memberidx2.i.i139 = getelementptr inbounds %string, ptr %117, i64 0, i32 3
  store i64 47, ptr %memberidx2.i.i139, align 4
  %118 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %118, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %119 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %119, align 8
  %memberidx.i.i.i140 = getelementptr inbounds %string, ptr %119, i64 0, i32 1
  store ptr %118, ptr %memberidx.i.i.i140, align 8
  %memberidx1.i.i.i141 = getelementptr inbounds %string, ptr %119, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i141, align 4
  %memberidx2.i.i.i142 = getelementptr inbounds %string, ptr %119, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i142, align 4
  %120 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %121 = call ptr %120(ptr nonnull %119)
  %122 = load i64, ptr %memberidx1.i.i.i141, align 4
  call void @write(i64 1, ptr %121, i64 %122)
  %123 = load ptr, ptr %memberidx.i.i.i140, align 8
  call void @free(ptr %123)
  call void @free(ptr %119)
  %124 = load ptr, ptr %117, align 8
  %memberidx.i.i.i146 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %124, i64 0, i32 3
  %125 = load ptr, ptr %memberidx.i.i.i146, align 8
  %126 = call ptr %125(ptr nonnull %117)
  %127 = load i64, ptr %memberidx1.i.i138, align 4
  call void @write(i64 1, ptr %126, i64 %127)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %128 = load ptr, ptr %memberidx.i.i137, align 8
  call void @free(ptr %128)
  call void @free(ptr %117)
  call void @exit(i64 -1)
  br label %for.entry32

if.entry25:                                       ; preds = %if.entry21
  %129 = call ptr @malloc(i32 54)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %129, ptr noundef nonnull align 8 dereferenceable(54) @233, i64 54, i1 false)
  %130 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %130, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %130, i64 0, i32 1
  store ptr %129, ptr %memberidx.i.i, align 8
  %memberidx1.i.i100 = getelementptr inbounds %string, ptr %130, i64 0, i32 2
  store i64 54, ptr %memberidx1.i.i100, align 4
  %memberidx2.i.i101 = getelementptr inbounds %string, ptr %130, i64 0, i32 3
  store i64 54, ptr %memberidx2.i.i101, align 4
  %131 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %131, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %132 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %132, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %132, i64 0, i32 1
  store ptr %131, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %132, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %132, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i, align 4
  %133 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %134 = call ptr %133(ptr nonnull %132)
  %135 = load i64, ptr %memberidx1.i.i.i, align 4
  call void @write(i64 1, ptr %134, i64 %135)
  %136 = load ptr, ptr %memberidx.i.i.i, align 8
  call void @free(ptr %136)
  call void @free(ptr %132)
  %137 = load ptr, ptr %130, align 8
  %memberidx.i.i.i118 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %137, i64 0, i32 3
  %138 = load ptr, ptr %memberidx.i.i.i118, align 8
  %139 = call ptr %138(ptr nonnull %130)
  %140 = load i64, ptr %memberidx1.i.i100, align 4
  call void @write(i64 1, ptr %139, i64 %140)
  call void @write(i64 1, ptr nonnull @0, i64 1)
  %141 = load ptr, ptr %memberidx.i.i, align 8
  call void @free(ptr %141)
  call void @free(ptr %130)
  call void @exit(i64 -1)
  br label %ifend27

ifend27:                                          ; preds = %if.entry21, %if.entry25
  store ptr %ternary, ptr %args, align 8
  %142 = getelementptr inbounds ptr, ptr %args, i64 1
  %143 = load ptr, ptr %str_len, align 8
  store ptr %143, ptr %142, align 8
  %144 = call ptr @LLVM_GetFunctionType(ptr %90)
  %145 = call ptr @LLVMBuildCall2(ptr %1, ptr %144, ptr %90, ptr nonnull %args, i64 2, ptr nonnull @71)
  br label %for.entry32

for.entry32:                                      ; preds = %else.i, %if.entry.i117, %ifend27, %is_object.exit
  %str.0 = phi ptr [ %145, %ifend27 ], [ %ternary, %is_object.exit ], [ %92, %if.entry.i117 ], [ %92, %else.i ]
  %146 = call ptr @malloc(i32 25)
  %147 = load ptr, ptr %memberidx2.i110, align 8
  %148 = load i64, ptr %memberidx.i108, align 4
  store i1 false, ptr %146, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %146, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %146, i64 0, i32 3
  store ptr %147, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %146, i64 0, i32 2
  store i64 %148, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %149 = icmp slt i64 %148, 1
  br i1 %149, label %for.end36, label %for.body34

for.body34:                                       ; preds = %for.entry32, %for.body34
  %150 = phi i64 [ %152, %for.body34 ], [ 1, %for.entry32 ]
  %mem.0168.in = phi ptr [ %ptridx.i, %for.body34 ], [ %147, %for.entry32 ]
  %mem.0168 = load ptr, ptr %mem.0168.in, align 8
  %151 = call ptr @LLVMBuildFree(ptr %1, ptr %mem.0168)
  %152 = add nuw nsw i64 %150, 1
  store i64 %152, ptr %memberidx1.i.i, align 4
  %ptridx.i = getelementptr inbounds ptr, ptr %147, i64 %150
  %.not = icmp slt i64 %150, %148
  br i1 %.not, label %for.body34, label %for.end36

for.end36:                                        ; preds = %for.body34, %for.entry32
  tail call void @free(ptr nonnull %146)
  call void @free(ptr %147)
  tail call void @free(ptr %15)
  ret ptr %str.0
}

define internal fastcc ptr @CodeGen_codegen_expression(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %args.i = alloca [1 x ptr], align 8
  %func_ty.i = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %args.i.i = alloca [2 x ptr], align 8
  %arg_types.i.i = alloca [2 x ptr], align 8
  %5 = alloca ptr, align 8
  %indices.i = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 2
  %6 = load i64, ptr %memberidx, align 4
  switch i64 %6, label %common.ret241 [
    i64 4, label %if.entry
    i64 0, label %if.entry2
    i64 1, label %if.entry6
    i64 5, label %if.entry10
    i64 2, label %if.entry14
    i64 7, label %if.entry18
    i64 8, label %if.entry22
    i64 9, label %if.entry26
    i64 14, label %if.entry30
    i64 13, label %CodeGen_get_expr_mem.exit209
    i64 12, label %if.entry38
    i64 11, label %if.entry42
    i64 15, label %if.entry46
    i64 10, label %if.entry50
    i64 6, label %if.entry54
    i64 16, label %if.entry58
  ]

common.ret241:                                    ; preds = %if.entry, %if.entry2, %if.entry6, %if.entry10, %if.entry14, %if.entry18, %CodeGen_codegen_bin_exp.exit, %CodeGen_codegen_unary_exp.exit, %CodeGen_codegen_call_exp.exit, %CodeGen_get_expr_mem.exit209, %if.entry38, %if.entry42, %if.entry54, %if.entry58, %true_block.i168, %false_block.i169, %true_block6.i, %false_block7.i, %true_block14.i, %false_block15.i, %true_block22.i, %false_block23.i, %true_block32.i, %false_block33.i, %true_block36.i, %false_block37.i, %3, %if.entry46
  %common.ret241.op = phi ptr [ %377, %if.entry46 ], [ %9, %if.entry ], [ %13, %if.entry2 ], [ %17, %if.entry6 ], [ %20, %if.entry10 ], [ %21, %if.entry14 ], [ %22, %if.entry18 ], [ %common.ret.op.i, %CodeGen_codegen_bin_exp.exit ], [ %common.ret.op.i131, %CodeGen_codegen_unary_exp.exit ], [ %352, %CodeGen_codegen_call_exp.exit ], [ %356, %CodeGen_get_expr_mem.exit209 ], [ %357, %if.entry38 ], [ %358, %if.entry42 ], [ %417, %if.entry54 ], [ %418, %if.entry58 ], [ %397, %true_block.i168 ], [ %398, %false_block.i169 ], [ %404, %true_block6.i ], [ %405, %false_block7.i ], [ %407, %true_block14.i ], [ %408, %false_block15.i ], [ %411, %true_block22.i ], [ %412, %false_block23.i ], [ %413, %true_block32.i ], [ %414, %false_block33.i ], [ %415, %true_block36.i ], [ %416, %false_block37.i ], [ null, %3 ]
  ret ptr %common.ret241.op

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %BooleanExpression, ptr %2, i64 0, i32 4
  %7 = load i1, ptr %memberidx.i, align 1
  %8 = tail call ptr @LLVMInt1Type()
  %..i.i = zext i1 %7 to i64
  %9 = tail call ptr @LLVMConstInt(ptr %8, i64 %..i.i, i1 false)
  br label %common.ret241

if.entry2:                                        ; preds = %3
  %memberidx.i118 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %memberidx.i118, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %10, i1 true)
  %memberidx1.i = getelementptr inbounds %IntExpression, ptr %2, i64 0, i32 4
  %12 = load i64, ptr %memberidx1.i, align 4
  %13 = tail call ptr @LLVMConstInt(ptr %11, i64 %12, i1 true)
  br label %common.ret241

if.entry6:                                        ; preds = %3
  %memberidx.i119 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %14 = load ptr, ptr %memberidx.i119, align 8
  %15 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %14, i1 true)
  %memberidx1.i120 = getelementptr inbounds %FloatExpression, ptr %2, i64 0, i32 4
  %16 = load double, ptr %memberidx1.i120, align 8
  %17 = tail call ptr @LLVMConstReal(ptr %15, double %16)
  br label %common.ret241

if.entry10:                                       ; preds = %3
  %memberidx.i121 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %18 = load ptr, ptr %memberidx.i121, align 8
  %19 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %18, i1 true)
  %20 = tail call ptr @LLVMConstNull(ptr %19)
  br label %common.ret241

if.entry14:                                       ; preds = %3
  %21 = tail call fastcc ptr @CodeGen_codegen_string(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret241

if.entry18:                                       ; preds = %3
  %22 = tail call fastcc ptr @CodeGen_codegen_var_access_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret241

if.entry22:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %indices.i)
  %memberidx.i122 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 5
  %23 = load i64, ptr %memberidx.i122, align 4
  %memberidx1.i123 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 4
  %24 = load ptr, ptr %memberidx1.i123, align 8
  %memberidx2.i = getelementptr inbounds %Expression, ptr %24, i64 0, i32 3
  %25 = load ptr, ptr %memberidx2.i, align 8
  %26 = load i64, ptr %25, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 6
  %27 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx5.i, align 8
  %29 = load i64, ptr %28, align 4
  %.not.i = icmp eq i64 %26, %29
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry22
  switch i64 %23, label %ifend15.i [
    i64 11, label %if.entry7.i
    i64 12, label %if.entry10.i
    i64 19, label %if.entry13.i
  ]

ifend.i:                                          ; preds = %if.entry22
  %30 = icmp eq i64 %23, 19
  br i1 %30, label %if.entry13.i, label %ifend15.i

if.entry7.i:                                      ; preds = %if.entry.i
  %31 = tail call ptr @LLVMInt1Type()
  %32 = tail call ptr @LLVMConstInt(ptr %31, i64 0, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

if.entry10.i:                                     ; preds = %if.entry.i
  %33 = tail call ptr @LLVMInt1Type()
  %34 = tail call ptr @LLVMConstInt(ptr %33, i64 1, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

if.entry13.i:                                     ; preds = %if.entry.i, %ifend.i
  %memberidx.i178 = getelementptr inbounds %Expression, ptr %24, i64 0, i32 2
  %35 = load i64, ptr %memberidx.i178, align 4
  switch i64 %35, label %ifend8.i [
    i64 7, label %if.entry.i180
    i64 13, label %if.entry2.i
    i64 12, label %if.entry6.i
  ]

if.entry.i180:                                    ; preds = %if.entry13.i
  %36 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry13.i
  %37 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry13.i
  %38 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %24, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry13.i
  %39 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i180, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i179 = phi ptr [ %36, %if.entry.i180 ], [ %37, %if.entry2.i ], [ %38, %if.entry6.i ], [ %39, %ifend8.i ]
  %40 = load ptr, ptr %memberidx4.i, align 8
  %41 = tail call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i179, ptr %40)
  br label %CodeGen_codegen_bin_exp.exit

ifend15.i:                                        ; preds = %if.entry.i, %ifend.i
  %42 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %24)
  %43 = load ptr, ptr %memberidx4.i, align 8
  %44 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %43)
  %45 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %45, i64 0, i32 2
  %46 = load i64, ptr %memberidx.i.i, align 4
  %47 = icmp eq i64 %46, 5
  %48 = icmp eq i64 %23, 11
  %49 = icmp eq i64 %23, 12
  %50 = add i64 %23, -11
  %51 = icmp ult i64 %50, 2
  %52 = and i1 %51, %47
  br i1 %52, label %if.entry19.i, label %ifend21.i

if.entry19.i:                                     ; preds = %ifend15.i
  %53 = tail call i1 @LLVMIsConstant(ptr %42)
  br i1 %53, label %if.entry22.i, label %ifend24.i

ifend21.i:                                        ; preds = %ifend15.i
  %54 = load ptr, ptr %memberidx1.i123, align 8
  %memberidx30.i = getelementptr inbounds %Expression, ptr %54, i64 0, i32 3
  %55 = load ptr, ptr %memberidx30.i, align 8
  %memberidx32.i = getelementptr inbounds %Expression, ptr %45, i64 0, i32 3
  %56 = load ptr, ptr %memberidx32.i, align 8
  %57 = load i64, ptr %56, align 4
  %58 = add i64 %57, -1
  %59 = icmp ult i64 %58, 9
  %60 = icmp eq i64 %23, 6
  %61 = and i1 %60, %59
  br i1 %61, label %if.entry33.i, label %ifend35.i

if.entry22.i:                                     ; preds = %if.entry19.i
  %62 = tail call i1 @LLVMIsNull(ptr %42)
  %63 = tail call ptr @LLVMInt1Type()
  %..i.i124 = zext i1 %62 to i64
  %64 = tail call ptr @LLVMConstInt(ptr %63, i64 %..i.i124, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

ifend24.i:                                        ; preds = %if.entry19.i
  br i1 %48, label %true_block25.i, label %false_block26.i

true_block25.i:                                   ; preds = %ifend24.i
  %65 = tail call ptr @LLVMBuildIsNull(ptr %1, ptr %42, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

false_block26.i:                                  ; preds = %ifend24.i
  %66 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %42, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry33.i:                                     ; preds = %ifend21.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store ptr %42, ptr %args.i.i, align 8
  %67 = getelementptr inbounds ptr, ptr %args.i.i, i64 1
  store ptr %44, ptr %67, align 8
  %68 = tail call fastcc ptr @dump_type(ptr nonnull %56, i1 true)
  %69 = load ptr, ptr %68, align 8
  %memberidx.i455.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %69, i64 0, i32 5
  %70 = load ptr, ptr %memberidx.i455.i, align 8
  %71 = tail call ptr %70(ptr nonnull %68)
  %72 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @242, ptr %71)
  %73 = load ptr, ptr %5, align 8
  %74 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %74, align 8
  %memberidx.i.i456.i = getelementptr inbounds %string, ptr %74, i64 0, i32 1
  store ptr %73, ptr %memberidx.i.i456.i, align 8
  %memberidx1.i.i457.i = getelementptr inbounds %string, ptr %74, i64 0, i32 2
  store i64 %72, ptr %memberidx1.i.i457.i, align 4
  %memberidx2.i.i458.i = getelementptr inbounds %string, ptr %74, i64 0, i32 3
  store i64 %72, ptr %memberidx2.i.i458.i, align 4
  call void @free(ptr %71)
  %75 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %56, i1 true)
  store ptr %75, ptr %arg_types.i.i, align 8
  %76 = getelementptr inbounds ptr, ptr %arg_types.i.i, i64 1
  store ptr %75, ptr %76, align 8
  %77 = load ptr, ptr %0, align 8
  %78 = call ptr @malloc(i32 16)
  %memberidx1.i.i.i459.i = getelementptr inbounds %IntrinsicResult, ptr %78, i64 0, i32 1
  store i64 0, ptr %78, align 8
  %79 = call ptr @LLVMFunctionType(ptr %75, ptr nonnull %arg_types.i.i, i64 2, i1 false)
  store ptr %79, ptr %memberidx1.i.i.i459.i, align 8
  %80 = load ptr, ptr %74, align 8
  %memberidx1.i13.i.i = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %80, i64 0, i32 5
  %81 = load ptr, ptr %memberidx1.i13.i.i, align 8
  %82 = call ptr %81(ptr nonnull %74)
  %83 = call ptr @LLVMGetNamedFunction(ptr %77, ptr %82)
  %.not.i.i.i = icmp eq ptr %83, null
  br i1 %.not.i.i.i, label %else.i.i.i, label %CodeGen_codegen_pow_expr.exit.i

else.i.i.i:                                       ; preds = %if.entry33.i
  %84 = call ptr @LLVMAddFunction(ptr %77, ptr %82, ptr %79)
  br label %CodeGen_codegen_pow_expr.exit.i

CodeGen_codegen_pow_expr.exit.i:                  ; preds = %if.entry33.i, %else.i.i.i
  %storemerge.i.i.i = phi ptr [ %84, %else.i.i.i ], [ %83, %if.entry33.i ]
  store ptr %storemerge.i.i.i, ptr %78, align 8
  %85 = call ptr @LLVMBuildCall2(ptr %1, ptr %79, ptr %storemerge.i.i.i, ptr nonnull %args.i.i, i64 2, ptr nonnull @71)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  br label %CodeGen_codegen_bin_exp.exit

ifend35.i:                                        ; preds = %ifend21.i
  %86 = load i64, ptr %55, align 4
  %87 = icmp eq i64 %86, 13
  br i1 %87, label %if.entry36.i, label %ifend38.i

if.entry36.i:                                     ; preds = %ifend35.i
  %88 = icmp eq i64 %23, 1
  br i1 %88, label %end41.i, label %false_block40.i

ifend38.i:                                        ; preds = %ifend35.i
  %89 = tail call i1 @LLVMIsConstant(ptr %42)
  %90 = tail call i1 @LLVMIsConstant(ptr %44)
  %91 = and i1 %89, %90
  %92 = load i64, ptr %56, align 4
  %93 = load i64, ptr %55, align 4
  %94 = icmp eq i64 %93, 19
  br i1 %94, label %if.entry.i230, label %is_object.exit233

if.entry.i230:                                    ; preds = %ifend38.i, %if.entry.i230
  %.tr5.i228 = phi ptr [ %95, %if.entry.i230 ], [ %55, %ifend38.i ]
  %memberidx1.i229 = getelementptr inbounds %GenericType, ptr %.tr5.i228, i64 0, i32 3
  %95 = load ptr, ptr %memberidx1.i229, align 8
  %96 = load i64, ptr %95, align 4
  %97 = icmp eq i64 %96, 19
  br i1 %97, label %if.entry.i230, label %is_object.exit233

is_object.exit233:                                ; preds = %if.entry.i230, %ifend38.i
  %.lcssa.i231 = phi i64 [ %93, %ifend38.i ], [ %96, %if.entry.i230 ]
  %98 = icmp eq i64 %.lcssa.i231, 11
  %99 = icmp eq i64 %92, 19
  br i1 %99, label %if.entry.i224, label %is_object.exit227

if.entry.i224:                                    ; preds = %is_object.exit233, %if.entry.i224
  %.tr5.i222 = phi ptr [ %100, %if.entry.i224 ], [ %56, %is_object.exit233 ]
  %memberidx1.i223 = getelementptr inbounds %GenericType, ptr %.tr5.i222, i64 0, i32 3
  %100 = load ptr, ptr %memberidx1.i223, align 8
  %101 = load i64, ptr %100, align 4
  %102 = icmp eq i64 %101, 19
  br i1 %102, label %if.entry.i224, label %is_object.exit227

is_object.exit227:                                ; preds = %if.entry.i224, %is_object.exit233
  %.lcssa.i225 = phi i64 [ %92, %is_object.exit233 ], [ %101, %if.entry.i224 ]
  %103 = icmp eq i64 %.lcssa.i225, 11
  %104 = and i1 %98, %103
  %105 = and i1 %51, %104
  %106 = freeze i1 %105
  br i1 %106, label %if.entry46.i, label %switch.early.test

switch.early.test:                                ; preds = %is_object.exit227
  switch i64 %92, label %else47.i [
    i64 12, label %if.entry46.i
    i64 7, label %if.entry46.i
    i64 6, label %if.entry46.i
    i64 5, label %if.entry46.i
    i64 4, label %if.entry46.i
    i64 3, label %if.entry46.i
    i64 2, label %if.entry46.i
    i64 1, label %if.entry46.i
  ]

false_block40.i:                                  ; preds = %if.entry36.i
  %107 = tail call i1 @LLVMIsConstant(ptr %44)
  br i1 %107, label %true_block.i.i, label %false_block.i.i

true_block.i.i:                                   ; preds = %false_block40.i
  %108 = tail call ptr @LLVMConstNeg(ptr %44)
  br label %end41.i

false_block.i.i:                                  ; preds = %false_block40.i
  %109 = tail call ptr @LLVMBuildNeg(ptr %1, ptr %44, ptr nonnull @71)
  br label %end41.i

end41.i:                                          ; preds = %true_block.i.i, %false_block.i.i, %if.entry36.i
  %ternary42.i = phi ptr [ %44, %if.entry36.i ], [ %108, %true_block.i.i ], [ %109, %false_block.i.i ]
  store ptr %ternary42.i, ptr %indices.i, align 8
  %memberidx43.i = getelementptr inbounds %PointerType, ptr %55, i64 0, i32 1
  %110 = load ptr, ptr %memberidx43.i, align 8
  %111 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %110, i1 true)
  %112 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %111, ptr %42, ptr nonnull %indices.i, i64 1, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry46.i:                                     ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %is_object.exit227
  switch i64 %23, label %else106.i [
    i64 1, label %if.entry49.i
    i64 2, label %if.entry65.i
    i64 3, label %if.entry81.i
    i64 4, label %if.entry97.i
    i64 5, label %if.entry105.i
  ]

else47.i:                                         ; preds = %switch.early.test
  %113 = and i64 %92, -2
  %114 = icmp eq i64 %113, 8
  br i1 %114, label %if.entry167.i, label %else168.i

ifend48.i:                                        ; preds = %else126.i, %else214.i, %else186.i, %else168.i
  %115 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %115, ptr noundef nonnull align 8 dereferenceable(33) @243, i64 33, i1 false)
  %116 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %116, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %116, i64 0, i32 1
  store ptr %115, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %116, i64 0, i32 2
  store i64 33, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %116, i64 0, i32 3
  store i64 33, ptr %memberidx2.i.i.i, align 4
  %117 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %117, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %118 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %118, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %string, ptr %118, i64 0, i32 1
  store ptr %117, ptr %memberidx.i.i.i.i, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %string, ptr %118, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %string, ptr %118, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i.i, align 4
  %119 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %120 = tail call ptr %119(ptr nonnull %118)
  %121 = load i64, ptr %memberidx1.i.i.i.i, align 4
  tail call void @write(i64 1, ptr %120, i64 %121)
  %122 = load ptr, ptr %memberidx.i.i.i.i, align 8
  tail call void @free(ptr %122)
  tail call void @free(ptr %118)
  %123 = load ptr, ptr %116, align 8
  %memberidx.i.i.i175 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %123, i64 0, i32 3
  %124 = load ptr, ptr %memberidx.i.i.i175, align 8
  %125 = tail call ptr %124(ptr nonnull %116)
  %126 = load i64, ptr %memberidx1.i.i.i, align 4
  tail call void @write(i64 1, ptr %125, i64 %126)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  %127 = load ptr, ptr %memberidx.i.i.i, align 8
  tail call void @free(ptr %127)
  tail call void @free(ptr %116)
  tail call void @exit(i64 -1)
  br label %CodeGen_codegen_bin_exp.exit

if.entry49.i:                                     ; preds = %if.entry46.i
  %memberidx52.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %128 = load ptr, ptr %memberidx52.i, align 8
  %memberidx53.i = getelementptr inbounds %IntType, ptr %128, i64 0, i32 1
  %129 = load i1, ptr %memberidx53.i, align 1
  br i1 %129, label %if.entry54.i, label %ifend56.i

if.entry54.i:                                     ; preds = %if.entry49.i
  br i1 %91, label %true_block57.i, label %false_block58.i

ifend56.i:                                        ; preds = %if.entry49.i
  br i1 %91, label %true_block61.i, label %false_block62.i

true_block57.i:                                   ; preds = %if.entry54.i
  %130 = tail call ptr @LLVMConstNSWAdd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block58.i:                                  ; preds = %if.entry54.i
  %131 = tail call ptr @LLVMBuildNSWAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

true_block61.i:                                   ; preds = %ifend56.i
  %132 = tail call ptr @LLVMConstNUWAdd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block62.i:                                  ; preds = %ifend56.i
  %133 = tail call ptr @LLVMBuildNUWAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry65.i:                                     ; preds = %if.entry46.i
  %memberidx68.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %134 = load ptr, ptr %memberidx68.i, align 8
  %memberidx69.i = getelementptr inbounds %IntType, ptr %134, i64 0, i32 1
  %135 = load i1, ptr %memberidx69.i, align 1
  br i1 %135, label %if.entry70.i, label %ifend72.i

if.entry70.i:                                     ; preds = %if.entry65.i
  br i1 %91, label %true_block73.i, label %false_block74.i

ifend72.i:                                        ; preds = %if.entry65.i
  br i1 %91, label %true_block77.i, label %false_block78.i

true_block73.i:                                   ; preds = %if.entry70.i
  %136 = tail call ptr @LLVMConstNSWSub(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block74.i:                                  ; preds = %if.entry70.i
  %137 = tail call ptr @LLVMBuildNSWSub(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

true_block77.i:                                   ; preds = %ifend72.i
  %138 = tail call ptr @LLVMConstNUWSub(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block78.i:                                  ; preds = %ifend72.i
  %139 = tail call ptr @LLVMBuildNUWSub(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry81.i:                                     ; preds = %if.entry46.i
  %memberidx84.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %140 = load ptr, ptr %memberidx84.i, align 8
  %memberidx85.i = getelementptr inbounds %IntType, ptr %140, i64 0, i32 1
  %141 = load i1, ptr %memberidx85.i, align 1
  br i1 %141, label %if.entry86.i, label %ifend88.i

if.entry86.i:                                     ; preds = %if.entry81.i
  br i1 %91, label %true_block89.i, label %false_block90.i

ifend88.i:                                        ; preds = %if.entry81.i
  br i1 %91, label %true_block93.i, label %false_block94.i

true_block89.i:                                   ; preds = %if.entry86.i
  %142 = tail call ptr @LLVMConstNSWMul(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block90.i:                                  ; preds = %if.entry86.i
  %143 = tail call ptr @LLVMBuildNSWMul(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

true_block93.i:                                   ; preds = %ifend88.i
  %144 = tail call ptr @LLVMConstNUWMul(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block94.i:                                  ; preds = %ifend88.i
  %145 = tail call ptr @LLVMBuildNUWMul(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry97.i:                                     ; preds = %if.entry46.i
  %memberidx100.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %146 = load ptr, ptr %memberidx100.i, align 8
  %memberidx101.i = getelementptr inbounds %IntType, ptr %146, i64 0, i32 1
  %147 = load i1, ptr %memberidx101.i, align 1
  br i1 %147, label %if.entry102.i, label %ifend104.i

if.entry102.i:                                    ; preds = %if.entry97.i
  %148 = tail call ptr @LLVMBuildSDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

ifend104.i:                                       ; preds = %if.entry97.i
  %149 = tail call ptr @LLVMBuildUDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry105.i:                                    ; preds = %if.entry46.i
  %memberidx108.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %150 = load ptr, ptr %memberidx108.i, align 8
  %memberidx109.i = getelementptr inbounds %IntType, ptr %150, i64 0, i32 1
  %151 = load i1, ptr %memberidx109.i, align 1
  br i1 %151, label %if.entry110.i, label %ifend112.i

else106.i:                                        ; preds = %if.entry46.i
  %152 = add i64 %23, -7
  %153 = icmp ult i64 %152, 4
  br i1 %153, label %if.entry113.i, label %else114.i

if.entry110.i:                                    ; preds = %if.entry105.i
  %154 = tail call ptr @LLVMBuildSRem(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

ifend112.i:                                       ; preds = %if.entry105.i
  %155 = tail call ptr @LLVMBuildURem(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry113.i:                                    ; preds = %else106.i
  %156 = add nuw nsw i64 %23, 31
  br i1 %91, label %true_block121.i, label %false_block122.i

else114.i:                                        ; preds = %else106.i
  br i1 %51, label %if.entry125.i, label %else126.i

true_block121.i:                                  ; preds = %if.entry113.i
  %157 = tail call ptr @LLVMConstICmp(i64 %156, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block122.i:                                 ; preds = %if.entry113.i
  %158 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %156, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry125.i:                                    ; preds = %else114.i
  %159 = add nuw nsw i64 %23, 21
  br i1 %91, label %true_block128.i, label %false_block129.i

else126.i:                                        ; preds = %else114.i
  switch i64 %23, label %ifend48.i [
    i64 13, label %if.entry132.i
    i64 14, label %if.entry139.i
    i64 15, label %if.entry146.i
    i64 16, label %if.entry153.i
    i64 17, label %if.entry160.i
  ]

true_block128.i:                                  ; preds = %if.entry125.i
  %160 = tail call ptr @LLVMConstICmp(i64 %159, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block129.i:                                 ; preds = %if.entry125.i
  %161 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %159, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry132.i:                                    ; preds = %else126.i
  br i1 %91, label %true_block135.i, label %false_block136.i

true_block135.i:                                  ; preds = %if.entry132.i
  %162 = tail call ptr @LLVMConstShl(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block136.i:                                 ; preds = %if.entry132.i
  %163 = tail call ptr @LLVMBuildShl(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry139.i:                                    ; preds = %else126.i
  br i1 %91, label %true_block142.i, label %false_block143.i

true_block142.i:                                  ; preds = %if.entry139.i
  %164 = tail call ptr @LLVMConstLShr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block143.i:                                 ; preds = %if.entry139.i
  %165 = tail call ptr @LLVMBuildLShr(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry146.i:                                    ; preds = %else126.i
  br i1 %91, label %true_block149.i, label %false_block150.i

true_block149.i:                                  ; preds = %if.entry146.i
  %166 = tail call ptr @LLVMConstOr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block150.i:                                 ; preds = %if.entry146.i
  %167 = tail call ptr @LLVMBuildOr(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry153.i:                                    ; preds = %else126.i
  br i1 %91, label %true_block156.i, label %false_block157.i

true_block156.i:                                  ; preds = %if.entry153.i
  %168 = tail call ptr @LLVMConstAnd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block157.i:                                 ; preds = %if.entry153.i
  %169 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry160.i:                                    ; preds = %else126.i
  br i1 %91, label %true_block163.i, label %false_block164.i

true_block163.i:                                  ; preds = %if.entry160.i
  %170 = tail call ptr @LLVMConstXor(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block164.i:                                 ; preds = %if.entry160.i
  %171 = tail call ptr @LLVMBuildXor(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry167.i:                                    ; preds = %else47.i
  switch i64 %23, label %else183.i [
    i64 1, label %if.entry170.i
    i64 2, label %if.entry173.i
    i64 3, label %if.entry176.i
    i64 4, label %if.entry179.i
    i64 5, label %if.entry182.i
  ]

else168.i:                                        ; preds = %else47.i
  %172 = icmp eq i64 %92, 0
  br i1 %172, label %if.entry203.i, label %ifend48.i

if.entry170.i:                                    ; preds = %if.entry167.i
  %173 = tail call ptr @LLVMBuildFAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry173.i:                                    ; preds = %if.entry167.i
  %174 = tail call ptr @LLVMBuildFSub(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry176.i:                                    ; preds = %if.entry167.i
  %175 = tail call ptr @LLVMBuildFMul(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry179.i:                                    ; preds = %if.entry167.i
  %176 = tail call ptr @LLVMBuildFDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry182.i:                                    ; preds = %if.entry167.i
  %177 = tail call ptr @LLVMBuildFRem(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

else183.i:                                        ; preds = %if.entry167.i
  %178 = add i64 %23, -7
  %179 = icmp ult i64 %178, 4
  br i1 %179, label %if.entry185.i, label %else186.i

if.entry185.i:                                    ; preds = %else183.i
  %180 = add nsw i64 %23, -5
  br i1 %91, label %true_block188.i, label %false_block189.i

else186.i:                                        ; preds = %else183.i
  br i1 %51, label %if.entry192.i, label %ifend48.i

true_block188.i:                                  ; preds = %if.entry185.i
  %181 = tail call ptr @LLVMConstFCmp(i64 %180, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block189.i:                                 ; preds = %if.entry185.i
  %182 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %180, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry192.i:                                    ; preds = %else186.i
  %.227.i = select i1 %49, i64 6, i64 1
  br i1 %91, label %true_block199.i, label %false_block200.i

true_block199.i:                                  ; preds = %if.entry192.i
  %183 = tail call ptr @LLVMConstFCmp(i64 %.227.i, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block200.i:                                 ; preds = %if.entry192.i
  %184 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %.227.i, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry203.i:                                    ; preds = %else168.i
  switch i64 %23, label %else214.i [
    i64 16, label %if.entry206.i
    i64 11, label %if.entry206.i
    i64 15, label %if.entry213.i
  ]

if.entry206.i:                                    ; preds = %if.entry203.i, %if.entry203.i
  br i1 %91, label %true_block209.i, label %false_block210.i

true_block209.i:                                  ; preds = %if.entry206.i
  %185 = tail call ptr @LLVMConstAnd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block210.i:                                 ; preds = %if.entry206.i
  %186 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry213.i:                                    ; preds = %if.entry203.i
  br i1 %91, label %true_block216.i, label %false_block217.i

else214.i:                                        ; preds = %if.entry203.i
  br i1 %49, label %if.entry220.i, label %ifend48.i

true_block216.i:                                  ; preds = %if.entry213.i
  %187 = tail call ptr @LLVMConstOr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block217.i:                                 ; preds = %if.entry213.i
  %188 = tail call ptr @LLVMBuildOr(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

if.entry220.i:                                    ; preds = %else214.i
  br i1 %91, label %true_block223.i, label %false_block224.i

true_block223.i:                                  ; preds = %if.entry220.i
  %189 = tail call ptr @LLVMConstXor(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block224.i:                                 ; preds = %if.entry220.i
  %190 = tail call ptr @LLVMBuildXor(ptr %1, ptr %42, ptr %44, ptr nonnull @71)
  br label %CodeGen_codegen_bin_exp.exit

CodeGen_codegen_bin_exp.exit:                     ; preds = %if.entry7.i, %if.entry10.i, %CodeGen_get_expr_mem.exit, %if.entry22.i, %true_block25.i, %false_block26.i, %CodeGen_codegen_pow_expr.exit.i, %end41.i, %ifend48.i, %true_block57.i, %false_block58.i, %true_block61.i, %false_block62.i, %true_block73.i, %false_block74.i, %true_block77.i, %false_block78.i, %true_block89.i, %false_block90.i, %true_block93.i, %false_block94.i, %if.entry102.i, %ifend104.i, %if.entry110.i, %ifend112.i, %true_block121.i, %false_block122.i, %true_block128.i, %false_block129.i, %true_block135.i, %false_block136.i, %true_block142.i, %false_block143.i, %true_block149.i, %false_block150.i, %true_block156.i, %false_block157.i, %true_block163.i, %false_block164.i, %if.entry170.i, %if.entry173.i, %if.entry176.i, %if.entry179.i, %if.entry182.i, %true_block188.i, %false_block189.i, %true_block199.i, %false_block200.i, %true_block209.i, %false_block210.i, %true_block216.i, %false_block217.i, %true_block223.i, %false_block224.i
  %common.ret.op.i = phi ptr [ %32, %if.entry7.i ], [ %34, %if.entry10.i ], [ %41, %CodeGen_get_expr_mem.exit ], [ %64, %if.entry22.i ], [ %85, %CodeGen_codegen_pow_expr.exit.i ], [ %112, %end41.i ], [ null, %ifend48.i ], [ %148, %if.entry102.i ], [ %149, %ifend104.i ], [ %154, %if.entry110.i ], [ %155, %ifend112.i ], [ %173, %if.entry170.i ], [ %174, %if.entry173.i ], [ %175, %if.entry176.i ], [ %176, %if.entry179.i ], [ %177, %if.entry182.i ], [ %65, %true_block25.i ], [ %66, %false_block26.i ], [ %130, %true_block57.i ], [ %131, %false_block58.i ], [ %132, %true_block61.i ], [ %133, %false_block62.i ], [ %136, %true_block73.i ], [ %137, %false_block74.i ], [ %138, %true_block77.i ], [ %139, %false_block78.i ], [ %142, %true_block89.i ], [ %143, %false_block90.i ], [ %144, %true_block93.i ], [ %145, %false_block94.i ], [ %157, %true_block121.i ], [ %158, %false_block122.i ], [ %160, %true_block128.i ], [ %161, %false_block129.i ], [ %162, %true_block135.i ], [ %163, %false_block136.i ], [ %164, %true_block142.i ], [ %165, %false_block143.i ], [ %166, %true_block149.i ], [ %167, %false_block150.i ], [ %168, %true_block156.i ], [ %169, %false_block157.i ], [ %170, %true_block163.i ], [ %171, %false_block164.i ], [ %181, %true_block188.i ], [ %182, %false_block189.i ], [ %183, %true_block199.i ], [ %184, %false_block200.i ], [ %185, %true_block209.i ], [ %186, %false_block210.i ], [ %187, %true_block216.i ], [ %188, %false_block217.i ], [ %189, %true_block223.i ], [ %190, %false_block224.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %indices.i)
  br label %common.ret241

if.entry26:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %indices.i)
  %memberidx.i126 = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 4
  %191 = load i64, ptr %memberidx.i126, align 4
  %memberidx1.i127 = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 5
  %192 = load ptr, ptr %memberidx1.i127, align 8
  %193 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %192)
  switch i64 %191, label %ifend29.i [
    i64 1, label %if.entry.i129
    i64 6, label %if.entry7.i132
    i64 7, label %if.entry27.i
  ]

if.entry.i129:                                    ; preds = %if.entry26
  %memberidx2.i128 = getelementptr inbounds %Expression, ptr %192, i64 0, i32 3
  %194 = load ptr, ptr %memberidx2.i128, align 8
  %195 = load i64, ptr %194, align 4
  %196 = icmp eq i64 %195, 19
  br i1 %196, label %if.entry.i220, label %is_object.exit

if.entry.i220:                                    ; preds = %if.entry.i129, %if.entry.i220
  %.tr5.i = phi ptr [ %197, %if.entry.i220 ], [ %194, %if.entry.i129 ]
  %memberidx1.i219 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %197 = load ptr, ptr %memberidx1.i219, align 8
  %198 = load i64, ptr %197, align 4
  %199 = icmp eq i64 %198, 19
  br i1 %199, label %if.entry.i220, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i220, %if.entry.i129
  %.lcssa.i = phi i64 [ %195, %if.entry.i129 ], [ %198, %if.entry.i220 ]
  %200 = icmp eq i64 %.lcssa.i, 11
  br i1 %200, label %if.entry3.i, label %ifend5.i

if.entry3.i:                                      ; preds = %is_object.exit
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %func_ty.i)
  %201 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %201, ptr noundef nonnull align 8 dereferenceable(7) @125, i64 7, i1 false)
  %202 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %202, align 8
  %memberidx.i.i.i234 = getelementptr inbounds %string, ptr %202, i64 0, i32 1
  store ptr %201, ptr %memberidx.i.i.i234, align 8
  %memberidx1.i.i.i235 = getelementptr inbounds %string, ptr %202, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i235, align 4
  %memberidx2.i.i.i236 = getelementptr inbounds %string, ptr %202, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i236, align 4
  %203 = call fastcc ptr @CodeGen_get_member_with_name(ptr %0, ptr %1, ptr %193, ptr nonnull %194, ptr nonnull %202, ptr nonnull %func_ty.i)
  %204 = icmp eq ptr %203, null
  br i1 %204, label %CodeGen_codegen_del_call.exit, label %ifend.i237

ifend.i237:                                       ; preds = %if.entry3.i
  store ptr %193, ptr %args.i, align 8
  %205 = load ptr, ptr %func_ty.i, align 8
  %206 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %205, i1 false)
  %207 = call ptr @LLVMBuildCall2(ptr %1, ptr %206, ptr nonnull %203, ptr nonnull %args.i, i64 1, ptr nonnull @71)
  br label %CodeGen_codegen_del_call.exit

CodeGen_codegen_del_call.exit:                    ; preds = %if.entry3.i, %ifend.i237
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %func_ty.i)
  br label %ifend5.i

ifend5.i:                                         ; preds = %CodeGen_codegen_del_call.exit, %is_object.exit
  %208 = call ptr @LLVMBuildFree(ptr %1, ptr %193)
  br label %CodeGen_codegen_unary_exp.exit

if.entry7.i132:                                   ; preds = %if.entry26
  %memberidx10.i = getelementptr inbounds %Expression, ptr %192, i64 0, i32 3
  %209 = load ptr, ptr %memberidx10.i, align 8
  %210 = load i64, ptr %209, align 4
  %211 = add i64 %210, -1
  %212 = icmp ult i64 %211, 7
  br i1 %212, label %if.entry11.i, label %else12.i

if.entry11.i:                                     ; preds = %if.entry7.i132
  %memberidx15.i = getelementptr inbounds %IntType, ptr %209, i64 0, i32 1
  %213 = load i1, ptr %memberidx15.i, align 1
  %214 = tail call i1 @LLVMIsConstant(ptr %193)
  br i1 %213, label %if.entry16.i, label %ifend18.i

else12.i:                                         ; preds = %if.entry7.i132
  %215 = and i64 %210, -2
  %216 = icmp eq i64 %215, 8
  br i1 %216, label %if.entry24.i, label %CodeGen_codegen_unary_exp.exit

if.entry16.i:                                     ; preds = %if.entry11.i
  br i1 %214, label %true_block.i133, label %false_block.i134

ifend18.i:                                        ; preds = %if.entry11.i
  br i1 %214, label %true_block19.i, label %false_block20.i

true_block.i133:                                  ; preds = %if.entry16.i
  %217 = tail call ptr @LLVMConstNSWNeg(ptr %193)
  br label %CodeGen_codegen_unary_exp.exit

false_block.i134:                                 ; preds = %if.entry16.i
  %218 = tail call ptr @LLVMBuildNSWNeg(ptr %1, ptr %193, ptr nonnull @71)
  br label %CodeGen_codegen_unary_exp.exit

true_block19.i:                                   ; preds = %ifend18.i
  %219 = tail call ptr @LLVMConstNUWNeg(ptr %193)
  br label %CodeGen_codegen_unary_exp.exit

false_block20.i:                                  ; preds = %ifend18.i
  %220 = tail call ptr @LLVMBuildNUWNeg(ptr %1, ptr %193, ptr nonnull @71)
  br label %CodeGen_codegen_unary_exp.exit

if.entry24.i:                                     ; preds = %else12.i
  %221 = tail call ptr @LLVMBuildFNeg(ptr %1, ptr %193, ptr nonnull @71)
  br label %CodeGen_codegen_unary_exp.exit

if.entry27.i:                                     ; preds = %if.entry26
  %222 = tail call i1 @LLVMIsConstant(ptr %193)
  br i1 %222, label %true_block30.i, label %false_block31.i

ifend29.i:                                        ; preds = %if.entry26
  %223 = icmp eq i64 %191, 8
  switch i64 %191, label %CodeGen_codegen_unary_exp.exit [
    i64 8, label %if.entry34.i
    i64 5, label %if.entry34.i
    i64 4, label %if.entry34.i
    i64 3, label %if.entry34.i
    i64 2, label %if.entry34.i
  ]

true_block30.i:                                   ; preds = %if.entry27.i
  %224 = tail call ptr @LLVMConstNot(ptr %193)
  br label %CodeGen_codegen_unary_exp.exit

false_block31.i:                                  ; preds = %if.entry27.i
  %225 = tail call ptr @LLVMBuildNot(ptr %1, ptr %193, ptr nonnull @71)
  br label %CodeGen_codegen_unary_exp.exit

if.entry34.i:                                     ; preds = %ifend29.i, %ifend29.i, %ifend29.i, %ifend29.i, %ifend29.i
  %memberidx.i182 = getelementptr inbounds %Expression, ptr %192, i64 0, i32 2
  %226 = load i64, ptr %memberidx.i182, align 4
  switch i64 %226, label %ifend8.i189 [
    i64 7, label %if.entry.i184
    i64 13, label %if.entry2.i186
    i64 12, label %if.entry6.i188
  ]

if.entry.i184:                                    ; preds = %if.entry34.i
  %227 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %192)
  br label %CodeGen_get_expr_mem.exit190

if.entry2.i186:                                   ; preds = %if.entry34.i
  %228 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %192)
  br label %CodeGen_get_expr_mem.exit190

if.entry6.i188:                                   ; preds = %if.entry34.i
  %229 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %192, ptr null)
  br label %CodeGen_get_expr_mem.exit190

ifend8.i189:                                      ; preds = %if.entry34.i
  %230 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %192)
  br label %CodeGen_get_expr_mem.exit190

CodeGen_get_expr_mem.exit190:                     ; preds = %if.entry.i184, %if.entry2.i186, %if.entry6.i188, %ifend8.i189
  %common.ret.op.i183 = phi ptr [ %227, %if.entry.i184 ], [ %228, %if.entry2.i186 ], [ %229, %if.entry6.i188 ], [ %230, %ifend8.i189 ]
  br i1 %223, label %CodeGen_codegen_unary_exp.exit, label %ifend39.i

ifend39.i:                                        ; preds = %CodeGen_get_expr_mem.exit190
  %memberidx40.i = getelementptr inbounds %Expression, ptr %192, i64 0, i32 3
  %231 = load ptr, ptr %memberidx40.i, align 8
  %232 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %231, i1 true)
  %233 = icmp eq i64 %191, 2
  %234 = icmp eq i64 %191, 4
  %235 = or i1 %233, %234
  %..i = select i1 %235, i64 1, i64 -1
  %236 = load ptr, ptr %memberidx40.i, align 8
  %237 = load i64, ptr %236, align 4
  %238 = icmp eq i64 %237, 13
  br i1 %238, label %if.entry46.i135, label %else47.i136

if.entry46.i135:                                  ; preds = %ifend39.i
  %memberidx50.i = getelementptr inbounds %PointerType, ptr %236, i64 0, i32 1
  %239 = load ptr, ptr %memberidx50.i, align 8
  %240 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %239, i1 true)
  %241 = tail call ptr @LLVMInt32Type()
  %242 = tail call ptr @LLVMConstInt(ptr %241, i64 %..i, i1 true)
  store ptr %242, ptr %indices.i, align 8
  %243 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %240, ptr %193, ptr nonnull %indices.i, i64 1, ptr nonnull @244)
  br label %ifend48.i137

else47.i136:                                      ; preds = %ifend39.i
  %244 = add i64 %237, -1
  %245 = icmp ult i64 %244, 9
  br i1 %245, label %if.entry53.i, label %ifend48.i137

ifend48.i137:                                     ; preds = %end58.i, %else47.i136, %if.entry46.i135
  %new_value.0.i = phi ptr [ %243, %if.entry46.i135 ], [ %252, %end58.i ], [ null, %else47.i136 ]
  %246 = call ptr @LLVMBuildStore(ptr %1, ptr %new_value.0.i, ptr %common.ret.op.i183)
  %247 = icmp ugt i64 %191, 2
  %ternary64.i = select i1 %247, ptr %193, ptr %new_value.0.i
  br label %CodeGen_codegen_unary_exp.exit

if.entry53.i:                                     ; preds = %else47.i136
  %248 = icmp ult i64 %244, 7
  br i1 %248, label %true_block56.i, label %false_block57.i

true_block56.i:                                   ; preds = %if.entry53.i
  %249 = tail call ptr @LLVMConstInt(ptr %232, i64 %..i, i1 false)
  br label %end58.i

false_block57.i:                                  ; preds = %if.entry53.i
  %250 = sitofp i64 %..i to double
  %251 = tail call ptr @LLVMConstReal(ptr %232, double %250)
  br label %end58.i

end58.i:                                          ; preds = %false_block57.i, %true_block56.i
  %ternary60.i = phi ptr [ %249, %true_block56.i ], [ %251, %false_block57.i ]
  %252 = tail call ptr @LLVMBuildNSWAdd(ptr %1, ptr %193, ptr %ternary60.i, ptr nonnull @71)
  br label %ifend48.i137

CodeGen_codegen_unary_exp.exit:                   ; preds = %else12.i, %CodeGen_get_expr_mem.exit190, %ifend29.i, %ifend5.i, %true_block.i133, %false_block.i134, %true_block19.i, %false_block20.i, %if.entry24.i, %true_block30.i, %false_block31.i, %ifend48.i137
  %common.ret.op.i131 = phi ptr [ null, %ifend5.i ], [ %221, %if.entry24.i ], [ %ternary64.i, %ifend48.i137 ], [ %217, %true_block.i133 ], [ %218, %false_block.i134 ], [ %219, %true_block19.i ], [ %220, %false_block20.i ], [ %224, %true_block30.i ], [ %225, %false_block31.i ], [ %193, %ifend29.i ], [ %common.ret.op.i183, %CodeGen_get_expr_mem.exit190 ], [ %193, %else12.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %indices.i)
  br label %common.ret241

if.entry30:                                       ; preds = %3
  %253 = tail call ptr @malloc(i32 32)
  store ptr @VTableArray_LLVMValueRef_, ptr %253, align 8
  %memberidx.i.i138 = getelementptr inbounds %Array_LLVMValueRef_, ptr %253, i64 0, i32 2
  %memberidx1.i.i139 = getelementptr inbounds %Array_LLVMValueRef_, ptr %253, i64 0, i32 3
  store i64 8, ptr %memberidx1.i.i139, align 4
  %memberidx2.i.i = getelementptr inbounds %Array_LLVMValueRef_, ptr %253, i64 0, i32 1
  %254 = tail call ptr @malloc(i32 64)
  store ptr %254, ptr %memberidx2.i.i, align 8
  store i64 0, ptr %memberidx.i.i138, align 4
  %memberidx2.i141 = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 4
  %255 = load ptr, ptr %memberidx2.i141, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %255, i64 0, i32 2
  %256 = load i64, ptr %memberidx3.i, align 4
  %257 = icmp eq i64 %256, 12
  br i1 %257, label %if.entry.i146, label %if.entry14.i

if.entry.i146:                                    ; preds = %if.entry30
  %memberidx5.i142 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %258 = load ptr, ptr %memberidx5.i142, align 8
  %memberidx6.i = getelementptr inbounds %MemberExpression, ptr %255, i64 0, i32 5
  %259 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i.i143 = getelementptr inbounds %PropId, ptr %259, i64 0, i32 1
  %260 = load ptr, ptr %memberidx.i.i.i143, align 8
  %memberidx.i.i.i.i144 = getelementptr inbounds %Program, ptr %258, i64 0, i32 1
  %261 = load ptr, ptr %memberidx.i.i.i.i144, align 8
  %262 = load i64, ptr %260, align 4
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %261, i64 0, i32 1
  %263 = load ptr, ptr %memberidx.i.i.i.i.i, align 8
  %ptridx.i.i.i.i.i = getelementptr inbounds ptr, ptr %263, i64 %262
  %264 = load ptr, ptr %ptridx.i.i.i.i.i, align 8
  %memberidx2.i.i.i.i145 = getelementptr inbounds %Module, ptr %264, i64 0, i32 3
  %265 = load ptr, ptr %memberidx2.i.i.i.i145, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %260, i64 0, i32 2
  %266 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_Class_, ptr %265, i64 0, i32 1
  %267 = load ptr, ptr %memberidx.i5.i.i.i.i, align 8
  %ptridx.i6.i.i.i.i = getelementptr inbounds ptr, ptr %267, i64 %266
  %268 = load ptr, ptr %ptridx.i6.i.i.i.i, align 8
  %memberidx.i65.i = getelementptr inbounds %Class, ptr %268, i64 0, i32 5
  %269 = load ptr, ptr %memberidx.i65.i, align 8
  %memberidx1.i66.i = getelementptr inbounds %PropId, ptr %259, i64 0, i32 2
  %270 = load i64, ptr %memberidx1.i66.i, align 4
  %memberidx.i3.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %269, i64 0, i32 1
  %271 = load ptr, ptr %memberidx.i3.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %271, i64 %270
  %272 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx7.i = getelementptr inbounds %ClassMethod, ptr %272, i64 0, i32 1
  %273 = load i1, ptr %memberidx7.i, align 1
  br i1 %273, label %ifend21.i153, label %if.entry8.i

ifend.i147:                                       ; preds = %ifend.i200, %if.entry8.i
  %memberidx13.i = getelementptr inbounds %MemberExpression, ptr %255, i64 0, i32 4
  %274 = load ptr, ptr %memberidx13.i, align 8
  %275 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %274)
  %276 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr nonnull %0, ptr %1, ptr nonnull %255, ptr %275)
  store i64 1, ptr %memberidx.i.i138, align 4
  store ptr %275, ptr %254, align 8
  %277 = icmp eq ptr %276, null
  br i1 %277, label %ifend.i147.if.entry14.i_crit_edge, label %for.entry.i

ifend.i147.if.entry14.i_crit_edge:                ; preds = %ifend.i147
  %.pre = load ptr, ptr %memberidx2.i141, align 8
  %memberidx18.i.phi.trans.insert = getelementptr inbounds %Expression, ptr %.pre, i64 0, i32 2
  %.pre249 = load i64, ptr %memberidx18.i.phi.trans.insert, align 4
  br label %if.entry14.i

if.entry8.i:                                      ; preds = %if.entry.i146
  %278 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr nonnull %260)
  %.not.i191 = icmp eq ptr %278, null
  br i1 %.not.i191, label %ifend.i200, label %ifend.i147

ifend.i200:                                       ; preds = %if.entry8.i
  %279 = load ptr, ptr %memberidx5.i142, align 8
  %memberidx.i.i195 = getelementptr inbounds %Program, ptr %279, i64 0, i32 1
  %280 = load ptr, ptr %memberidx.i.i195, align 8
  %281 = load i64, ptr %260, align 4
  %memberidx.i.i.i196 = getelementptr inbounds %Array_Module_, ptr %280, i64 0, i32 1
  %282 = load ptr, ptr %memberidx.i.i.i196, align 8
  %ptridx.i.i.i197 = getelementptr inbounds ptr, ptr %282, i64 %281
  %283 = load ptr, ptr %ptridx.i.i.i197, align 8
  %memberidx2.i.i198 = getelementptr inbounds %Module, ptr %283, i64 0, i32 3
  %284 = load ptr, ptr %memberidx2.i.i198, align 8
  %285 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %284, i64 0, i32 1
  %286 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %286, i64 %285
  %287 = load ptr, ptr %ptridx.i6.i.i, align 8
  tail call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %287)
  tail call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %287)
  %288 = load ptr, ptr %287, align 8
  %289 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %288)
  br label %ifend.i147

if.entry14.i:                                     ; preds = %ifend.i147.if.entry14.i_crit_edge, %if.entry30
  %290 = phi i64 [ 1, %ifend.i147.if.entry14.i_crit_edge ], [ 0, %if.entry30 ]
  %291 = phi i64 [ %.pre249, %ifend.i147.if.entry14.i_crit_edge ], [ %256, %if.entry30 ]
  %292 = phi ptr [ %.pre, %ifend.i147.if.entry14.i_crit_edge ], [ %255, %if.entry30 ]
  %293 = icmp eq i64 %291, 7
  br i1 %293, label %if.entry19.i150, label %ifend21.i153

if.entry19.i150:                                  ; preds = %if.entry14.i
  %memberidx23.i = getelementptr inbounds %VarAccessExpression, ptr %292, i64 0, i32 4
  %294 = load ptr, ptr %memberidx23.i, align 8
  %memberidx24.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %295 = load ptr, ptr %memberidx24.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i70.i = getelementptr inbounds %VarId, ptr %294, i64 0, i32 1
  %296 = load i64, ptr %memberidx.i70.i, align 4
  %297 = load i64, ptr %294, align 4
  %memberidx2.i71.i = getelementptr inbounds %VarId, ptr %294, i64 0, i32 2
  %298 = load i64, ptr %memberidx2.i71.i, align 4
  %299 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @222, i64 %296, i64 %297, i64 %298)
  %300 = load ptr, ptr %4, align 8
  %301 = call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %301, align 8
  %memberidx.i.i72.i = getelementptr inbounds %string, ptr %301, i64 0, i32 1
  store ptr %300, ptr %memberidx.i.i72.i, align 8
  %memberidx1.i.i.i149 = getelementptr inbounds %string, ptr %301, i64 0, i32 2
  store i64 %299, ptr %memberidx1.i.i.i149, align 4
  %memberidx2.i.i73.i = getelementptr inbounds %string, ptr %301, i64 0, i32 3
  store i64 %299, ptr %memberidx2.i.i73.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %302 = call fastcc i64 @Map_string_LLVMValueRef__hash_fnc(ptr nonnull %301)
  %memberidx.i74.i = getelementptr inbounds %Map_string_LLVMValueRef_, ptr %295, i64 0, i32 1
  %303 = load i64, ptr %memberidx.i74.i, align 4
  %304 = urem i64 %302, %303
  %305 = load ptr, ptr %295, align 8
  %ptridx.i75.i = getelementptr inbounds ptr, ptr %305, i64 %304
  %306 = load ptr, ptr %ptridx.i75.i, align 8
  %.not.i76.i = icmp eq ptr %306, null
  br i1 %.not.i76.i, label %ifend21.i153, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %if.entry19.i150, %else.i.i
  %307 = phi ptr [ %317, %else.i.i ], [ %305, %if.entry19.i150 ]
  %308 = phi i64 [ %318, %else.i.i ], [ %303, %if.entry19.i150 ]
  %309 = phi ptr [ %321, %else.i.i ], [ %306, %if.entry19.i150 ]
  %hash.0.i.i = phi i64 [ %320, %else.i.i ], [ %304, %if.entry19.i150 ]
  %310 = load ptr, ptr %309, align 8
  %memberidx.i.i77.i = getelementptr inbounds %string, ptr %310, i64 0, i32 2
  %311 = load i64, ptr %memberidx.i.i77.i, align 4
  %312 = load i64, ptr %memberidx1.i.i.i149, align 4
  %.not.i.i.i151 = icmp eq i64 %311, %312
  br i1 %.not.i.i.i151, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %memberidx2.i.i79.i = getelementptr inbounds %string, ptr %310, i64 0, i32 1
  %313 = load ptr, ptr %memberidx2.i.i79.i, align 8
  %314 = load ptr, ptr %memberidx.i.i72.i, align 8
  %315 = call i64 @memcmp(ptr %313, ptr %314, i64 %311)
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre250 = load i64, ptr %memberidx.i74.i, align 4
  %.pre251 = load ptr, ptr %295, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre252.pre = load ptr, ptr %295, align 8
  %ptridx9.i.i.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre252.pre, i64 %hash.0.i.i
  %.pre253.pre = load ptr, ptr %ptridx9.i.i.phi.trans.insert.phi.trans.insert, align 8
  %.not29.i.i = icmp eq ptr %.pre253.pre, null
  br i1 %.not29.i.i, label %ifend21.i153, label %Map_string_LLVMValueRef____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %317 = phi ptr [ %.pre251, %ifend.i.i.i.else.i.i_crit_edge ], [ %307, %while.entry.i.i ]
  %318 = phi i64 [ %.pre250, %ifend.i.i.i.else.i.i_crit_edge ], [ %308, %while.entry.i.i ]
  %319 = add nuw i64 %hash.0.i.i, 1
  %320 = urem i64 %319, %318
  %ptridx7.i.i = getelementptr inbounds ptr, ptr %317, i64 %320
  %321 = load ptr, ptr %ptridx7.i.i, align 8
  %.not30.i.i = icmp eq ptr %321, null
  br i1 %.not30.i.i, label %ifend21.i153, label %while.entry.i.i

Map_string_LLVMValueRef____getitem__.exit.i:      ; preds = %while.end.i.i
  %memberidx15.i.i = getelementptr inbounds %MapEntry_string_LLVMValueRef_, ptr %.pre253.pre, i64 0, i32 1
  %322 = load ptr, ptr %memberidx15.i.i, align 8
  %.not.i152 = icmp eq ptr %322, null
  br i1 %.not.i152, label %ifend21.i153, label %Array_LLVMValueRef____sl__.exit88.i

ifend21.i153:                                     ; preds = %else.i.i, %if.entry19.i150, %if.entry.i146, %while.end.i.i, %Array_LLVMValueRef____sl__.exit88.i, %Map_string_LLVMValueRef____getitem__.exit.i, %if.entry14.i
  %323 = phi i64 [ %290, %while.end.i.i ], [ %326, %Array_LLVMValueRef____sl__.exit88.i ], [ %290, %Map_string_LLVMValueRef____getitem__.exit.i ], [ %290, %if.entry14.i ], [ 0, %if.entry.i146 ], [ %290, %if.entry19.i150 ], [ %290, %else.i.i ]
  %324 = load ptr, ptr %memberidx2.i141, align 8
  %325 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %324)
  br label %for.entry.i

Array_LLVMValueRef____sl__.exit88.i:              ; preds = %Map_string_LLVMValueRef____getitem__.exit.i
  %326 = add nuw nsw i64 %290, 1
  store i64 %326, ptr %memberidx.i.i138, align 4
  %ptridx.i87.i = getelementptr inbounds ptr, ptr %254, i64 %290
  store ptr %322, ptr %ptridx.i87.i, align 8
  br label %ifend21.i153

for.entry.i:                                      ; preds = %ifend21.i153, %ifend.i147
  %327 = phi i64 [ %323, %ifend21.i153 ], [ 1, %ifend.i147 ]
  %func.1.i = phi ptr [ %325, %ifend21.i153 ], [ %276, %ifend.i147 ]
  %memberidx29.i = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 5
  %328 = load ptr, ptr %memberidx29.i, align 8
  %329 = call ptr @malloc(i32 25)
  %memberidx.i89.i = getelementptr inbounds %Array_Expression_, ptr %328, i64 0, i32 1
  %330 = load ptr, ptr %memberidx.i89.i, align 8
  %memberidx1.i90.i = getelementptr inbounds %Array_Expression_, ptr %328, i64 0, i32 2
  %331 = load i64, ptr %memberidx1.i90.i, align 4
  store i1 false, ptr %329, align 1
  %memberidx1.i.i91.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %329, i64 0, i32 1
  %memberidx2.i.i92.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %329, i64 0, i32 3
  store ptr %330, ptr %memberidx2.i.i92.i, align 8
  %memberidx3.i.i93.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %329, i64 0, i32 2
  store i64 %331, ptr %memberidx3.i.i93.i, align 4
  store i64 1, ptr %memberidx1.i.i91.i, align 4
  %332 = icmp slt i64 %331, 1
  br i1 %332, label %CodeGen_codegen_call_exp.exit, label %for.body.i

for.body.i:                                       ; preds = %for.entry.i, %Array_LLVMValueRef____sl__.exit105.i
  %333 = phi ptr [ %340, %Array_LLVMValueRef____sl__.exit105.i ], [ %254, %for.entry.i ]
  %334 = phi i64 [ %341, %Array_LLVMValueRef____sl__.exit105.i ], [ 8, %for.entry.i ]
  %335 = phi i64 [ %342, %Array_LLVMValueRef____sl__.exit105.i ], [ %327, %for.entry.i ]
  %call_arg.0.i245.in = phi ptr [ %ptridx.i108.i, %Array_LLVMValueRef____sl__.exit105.i ], [ %330, %for.entry.i ]
  %call_arg.0.i245 = load ptr, ptr %call_arg.0.i245.in, align 8
  %336 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %call_arg.0.i245)
  %.not.i99.i = icmp slt i64 %335, %334
  br i1 %.not.i99.i, label %Array_LLVMValueRef____sl__.exit105.i, label %if.entry.i102.i

if.entry.i102.i:                                  ; preds = %for.body.i
  %337 = shl nuw i64 %334, 1
  store i64 %337, ptr %memberidx1.i.i139, align 4
  %338 = shl i64 %334, 4
  %339 = call ptr @realloc(ptr %333, i64 %338)
  store ptr %339, ptr %memberidx2.i.i, align 8
  br label %Array_LLVMValueRef____sl__.exit105.i

Array_LLVMValueRef____sl__.exit105.i:             ; preds = %if.entry.i102.i, %for.body.i
  %340 = phi ptr [ %339, %if.entry.i102.i ], [ %333, %for.body.i ]
  %341 = phi i64 [ %337, %if.entry.i102.i ], [ %334, %for.body.i ]
  %342 = add nsw i64 %335, 1
  store i64 %342, ptr %memberidx.i.i138, align 4
  %ptridx.i104.i = getelementptr inbounds ptr, ptr %340, i64 %335
  store ptr %336, ptr %ptridx.i104.i, align 8
  %343 = load i64, ptr %memberidx1.i.i91.i, align 4
  %344 = add nsw i64 %343, 1
  store i64 %344, ptr %memberidx1.i.i91.i, align 4
  %345 = load ptr, ptr %memberidx2.i.i92.i, align 8
  %ptridx.i108.i = getelementptr inbounds ptr, ptr %345, i64 %343
  %346 = load i64, ptr %memberidx3.i.i93.i, align 4
  %.not = icmp slt i64 %343, %346
  br i1 %.not, label %for.body.i, label %CodeGen_codegen_call_exp.exit

CodeGen_codegen_call_exp.exit:                    ; preds = %Array_LLVMValueRef____sl__.exit105.i, %for.entry.i
  %347 = phi i64 [ %327, %for.entry.i ], [ %342, %Array_LLVMValueRef____sl__.exit105.i ]
  %348 = phi ptr [ %254, %for.entry.i ], [ %340, %Array_LLVMValueRef____sl__.exit105.i ]
  call void @free(ptr nonnull %329)
  %349 = load ptr, ptr %memberidx2.i141, align 8
  %memberidx32.i155 = getelementptr inbounds %Expression, ptr %349, i64 0, i32 3
  %350 = load ptr, ptr %memberidx32.i155, align 8
  %351 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %350, i1 false)
  %352 = call ptr @LLVMBuildCall2(ptr %1, ptr %351, ptr %func.1.i, ptr %348, i64 %347, ptr nonnull @71)
  br label %common.ret241

CodeGen_get_expr_mem.exit209:                     ; preds = %3
  %353 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %2)
  %memberidx.i156 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %354 = load ptr, ptr %memberidx.i156, align 8
  %355 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %354, i1 true)
  %356 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %355, ptr %353, ptr nonnull @71)
  br label %common.ret241

if.entry38:                                       ; preds = %3
  %357 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr %0, ptr %1, ptr nonnull %2, ptr null)
  br label %common.ret241

if.entry42:                                       ; preds = %3
  %358 = tail call fastcc ptr @CodeGen_codegen_new_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret241

if.entry46:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i.i)
  %memberidx.i157 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %359 = load ptr, ptr %memberidx.i157, align 8
  %360 = tail call ptr @LLVMAppendBasicBlock(ptr %359, ptr nonnull @246)
  %361 = load ptr, ptr %memberidx.i157, align 8
  %362 = tail call ptr @LLVMAppendBasicBlock(ptr %361, ptr nonnull @247)
  %363 = load ptr, ptr %memberidx.i157, align 8
  %364 = tail call ptr @LLVMAppendBasicBlock(ptr %363, ptr nonnull @248)
  %memberidx3.i158 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 4
  %365 = load ptr, ptr %memberidx3.i158, align 8
  %366 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %365)
  %367 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %366, ptr %360, ptr %362)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %360)
  %memberidx4.i159 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 5
  %368 = load ptr, ptr %memberidx4.i159, align 8
  %369 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %368)
  %370 = tail call ptr @LLVMBuildBr(ptr %1, ptr %364)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %362)
  %memberidx5.i160 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 6
  %371 = load ptr, ptr %memberidx5.i160, align 8
  %372 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %371)
  %373 = tail call ptr @LLVMBuildBr(ptr %1, ptr %364)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %364)
  %374 = load ptr, ptr %memberidx4.i159, align 8
  %memberidx7.i161 = getelementptr inbounds %Expression, ptr %374, i64 0, i32 3
  %375 = load ptr, ptr %memberidx7.i161, align 8
  %376 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %375, i1 true)
  %377 = tail call ptr @LLVMBuildPhi(ptr %1, ptr %376, ptr nonnull @249)
  store ptr %369, ptr %arg_types.i.i, align 8
  %378 = getelementptr inbounds ptr, ptr %arg_types.i.i, i64 1
  store ptr %372, ptr %378, align 8
  store ptr %360, ptr %args.i.i, align 8
  %379 = getelementptr inbounds ptr, ptr %args.i.i, i64 1
  store ptr %362, ptr %379, align 8
  call void @LLVMAddIncoming(ptr %377, ptr nonnull %arg_types.i.i, ptr nonnull %args.i.i, i64 2)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i.i)
  br label %common.ret241

if.entry50:                                       ; preds = %3
  %memberidx.i162 = getelementptr inbounds %TypeCastExpression, ptr %2, i64 0, i32 4
  %380 = load ptr, ptr %memberidx.i162, align 8
  %memberidx1.i163 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %381 = load ptr, ptr %memberidx1.i163, align 8
  %382 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %380)
  %383 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %381, i1 true)
  %384 = tail call i1 @LLVMIsConstant(ptr %382)
  %385 = load i64, ptr %381, align 4
  %386 = icmp eq i64 %385, 0
  br i1 %386, label %if.entry.i164, label %ifend.i166

if.entry.i164:                                    ; preds = %if.entry50
  br i1 %384, label %true_block.i168, label %false_block.i169

ifend.i166:                                       ; preds = %if.entry50
  %memberidx2.i165 = getelementptr inbounds %Expression, ptr %380, i64 0, i32 3
  %387 = load ptr, ptr %memberidx2.i165, align 8
  %388 = load i64, ptr %387, align 4
  %389 = add i64 %388, -1
  %390 = icmp ult i64 %389, 7
  %391 = and i64 %385, -2
  %392 = icmp eq i64 %391, 8
  %393 = and i1 %392, %390
  br i1 %393, label %if.entry3.i171, label %else4.i

true_block.i168:                                  ; preds = %if.entry.i164
  %394 = tail call i1 @LLVMIsNull(ptr %382)
  %395 = xor i1 %394, true
  %396 = tail call ptr @LLVMInt1Type()
  %..i.i167 = zext i1 %395 to i64
  %397 = tail call ptr @LLVMConstInt(ptr %396, i64 %..i.i167, i1 false)
  br label %common.ret241

false_block.i169:                                 ; preds = %if.entry.i164
  %398 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %382, ptr nonnull @71)
  br label %common.ret241

if.entry3.i171:                                   ; preds = %ifend.i166
  br i1 %384, label %true_block6.i, label %false_block7.i

else4.i:                                          ; preds = %ifend.i166
  %399 = and i64 %388, -2
  %400 = icmp eq i64 %399, 8
  %401 = add i64 %385, -1
  %402 = icmp ult i64 %401, 7
  %403 = and i1 %402, %400
  br i1 %403, label %if.entry11.i172, label %else12.i173

true_block6.i:                                    ; preds = %if.entry3.i171
  %404 = tail call ptr @LLVMConstSIToFP(ptr %382, ptr %383)
  br label %common.ret241

false_block7.i:                                   ; preds = %if.entry3.i171
  %405 = tail call ptr @LLVMBuildSIToFP(ptr %1, ptr %382, ptr %383, ptr nonnull @71)
  br label %common.ret241

if.entry11.i172:                                  ; preds = %else4.i
  br i1 %384, label %true_block14.i, label %false_block15.i

else12.i173:                                      ; preds = %else4.i
  %406 = and i1 %402, %390
  br i1 %406, label %if.entry19.i174, label %else20.i

true_block14.i:                                   ; preds = %if.entry11.i172
  %407 = tail call ptr @LLVMConstFPToSI(ptr %382, ptr %383)
  br label %common.ret241

false_block15.i:                                  ; preds = %if.entry11.i172
  %408 = tail call ptr @LLVMBuildFPToSI(ptr %1, ptr %382, ptr %383, ptr nonnull @71)
  br label %common.ret241

if.entry19.i174:                                  ; preds = %else12.i173
  %memberidx25.i = getelementptr inbounds %IntType, ptr %381, i64 0, i32 1
  %409 = load i1, ptr %memberidx25.i, align 1
  br i1 %384, label %true_block22.i, label %false_block23.i

else20.i:                                         ; preds = %else12.i173
  %410 = and i1 %392, %400
  br i1 %410, label %if.entry29.i, label %ifend31.i

true_block22.i:                                   ; preds = %if.entry19.i174
  %411 = tail call ptr @LLVMConstIntCast(ptr %382, ptr %383, i1 %409)
  br label %common.ret241

false_block23.i:                                  ; preds = %if.entry19.i174
  %412 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %382, ptr %383, i1 %409, ptr nonnull @71)
  br label %common.ret241

if.entry29.i:                                     ; preds = %else20.i
  br i1 %384, label %true_block32.i, label %false_block33.i

ifend31.i:                                        ; preds = %else20.i
  br i1 %384, label %true_block36.i, label %false_block37.i

true_block32.i:                                   ; preds = %if.entry29.i
  %413 = tail call ptr @LLVMConstFPCast(ptr %382, ptr %383)
  br label %common.ret241

false_block33.i:                                  ; preds = %if.entry29.i
  %414 = tail call ptr @LLVMBuildFPCast(ptr %1, ptr %382, ptr %383, ptr nonnull @71)
  br label %common.ret241

true_block36.i:                                   ; preds = %ifend31.i
  %415 = tail call ptr @LLVMConstBitCast(ptr %382, ptr %383)
  br label %common.ret241

false_block37.i:                                  ; preds = %ifend31.i
  %416 = tail call ptr @LLVMBuildBitCast(ptr %1, ptr %382, ptr %383, ptr nonnull @71)
  br label %common.ret241

if.entry54:                                       ; preds = %3
  %417 = tail call fastcc ptr @CodeGen_codegen_array_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret241

if.entry58:                                       ; preds = %3
  %418 = tail call fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret241
}

define internal fastcc void @Map_string_CGEnumType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.041 = phi i64 [ %12, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %11, i64 %i.041
  store ptr null, ptr %ptridx, align 8
  %12 = add nuw nsw i64 %i.041, 1
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.040 = phi i64 [ %18, %ifend ], [ 0, %for.cond14.preheader ]
  %ptridx18 = getelementptr inbounds ptr, ptr %2, i64 %i1.040
  %15 = load ptr, ptr %ptridx18, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %16 = load ptr, ptr %15, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %memberidx20, align 8
  tail call fastcc void @Map_string_CGEnumType____setitem__(ptr nonnull %0, ptr %16, ptr %17)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %18 = add nuw nsw i64 %i1.040, 1
  %19 = icmp slt i64 %18, %1
  br i1 %19, label %for.body15, label %for.end17
}

define internal fastcc void @Map_string_CGEnumType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_string_CGEnumType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_string_CGEnumType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_string_CGEnumType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %ptridx = getelementptr inbounds ptr, ptr %13, i64 %12
  %14 = load ptr, ptr %ptridx, align 8
  %.not = icmp eq ptr %14, null
  br i1 %.not, label %if.entry13, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i38 = getelementptr inbounds %string, ptr %1, i64 0, i32 2
  %memberidx3.i = getelementptr inbounds %string, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend9
  %15 = phi ptr [ %25, %ifend9 ], [ %13, %while.entry.preheader ]
  %16 = phi i64 [ %26, %ifend9 ], [ %11, %while.entry.preheader ]
  %17 = phi ptr [ %29, %ifend9 ], [ %14, %while.entry.preheader ]
  %hash.0 = phi i64 [ %28, %ifend9 ], [ %12, %while.entry.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %18, i64 0, i32 2
  %19 = load i64, ptr %memberidx.i, align 4
  %20 = load i64, ptr %memberidx1.i38, align 4
  %.not.i = icmp eq i64 %19, %20
  br i1 %.not.i, label %ifend.i, label %ifend9

ifend.i:                                          ; preds = %while.entry
  %memberidx2.i = getelementptr inbounds %string, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i, align 8
  %22 = load ptr, ptr %memberidx3.i, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %ifend15.loopexit, label %ifend.i.ifend9_crit_edge

ifend.i.ifend9_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre45 = load ptr, ptr %0, align 8
  br label %ifend9

ifend9:                                           ; preds = %ifend.i.ifend9_crit_edge, %while.entry
  %25 = phi ptr [ %.pre45, %ifend.i.ifend9_crit_edge ], [ %15, %while.entry ]
  %26 = phi i64 [ %.pre, %ifend.i.ifend9_crit_edge ], [ %16, %while.entry ]
  %27 = add nuw i64 %hash.0, 1
  %28 = urem i64 %27, %26
  %ptridx12 = getelementptr inbounds ptr, ptr %25, i64 %28
  %29 = load ptr, ptr %ptridx12, align 8
  %.not37 = icmp eq ptr %29, null
  br i1 %.not37, label %if.entry13, label %while.entry

if.entry13:                                       ; preds = %ifend9, %ifend
  %30 = phi ptr [ %13, %ifend ], [ %25, %ifend9 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %28, %ifend9 ]
  %31 = load i64, ptr %memberidx, align 4
  %32 = add nsw i64 %31, 1
  store i64 %32, ptr %memberidx, align 4
  br label %ifend15

ifend15.loopexit:                                 ; preds = %ifend.i
  %.pre46 = load ptr, ptr %0, align 8
  br label %ifend15

ifend15:                                          ; preds = %ifend15.loopexit, %if.entry13
  %33 = phi ptr [ %30, %if.entry13 ], [ %.pre46, %ifend15.loopexit ]
  %hash.141 = phi i64 [ %hash.1.ph, %if.entry13 ], [ %hash.0, %ifend15.loopexit ]
  %ptridx19 = getelementptr inbounds ptr, ptr %33, i64 %hash.141
  %34 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %34, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_string_CGEnumType_, ptr %34, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %34, ptr %ptridx19, align 8
  ret void
}

define internal fastcc i64 @Map_string_CGEnumType__hash_fnc(ptr %0) unnamed_addr {
for.entry:
  %1 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %1, i64 0, i32 5
  %2 = load ptr, ptr %memberidx, align 8
  %3 = tail call ptr %2(ptr nonnull %0)
  %4 = alloca ptr, align 8
  %5 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @24, ptr %3)
  %6 = load ptr, ptr %4, align 8
  %7 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %7, align 8
  %memberidx.i = getelementptr inbounds %string, ptr %7, i64 0, i32 1
  store ptr %6, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %string, ptr %7, i64 0, i32 2
  store i64 %5, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %string, ptr %7, i64 0, i32 3
  store i64 %5, ptr %memberidx2.i, align 4
  tail call void @free(ptr %3)
  %8 = load i64, ptr %memberidx1.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %16, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %15, %for.body ], [ 0, %for.entry ]
  %10 = shl i64 %hash.01, 1
  %11 = load ptr, ptr %7, align 8
  %memberidx2 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = call i8 %12(ptr nonnull %7, i64 %i.02)
  %14 = zext i8 %13 to i64
  %15 = add nuw i64 %10, %14
  %16 = add nuw nsw i64 %i.02, 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %15, %for.body ]
  %19 = load ptr, ptr %memberidx.i, align 8
  call void @free(ptr %19)
  tail call void @free(ptr nonnull %7)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_codegen_new_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 6
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 13
  br i1 %7, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %8 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %4, i1 true)
  %memberidx2 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %9 = load ptr, ptr %memberidx2, align 8
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx.i, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %11)
  %memberidx3 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %13 = load i1, ptr %memberidx3, align 1
  br i1 %13, label %if.entry4, label %else5

else:                                             ; preds = %3
  %14 = load i64, ptr %4, align 4
  %15 = icmp eq i64 %14, 19
  br i1 %15, label %if.entry.i61, label %is_object.exit

if.entry.i61:                                     ; preds = %else, %if.entry.i61
  %.tr5.i = phi ptr [ %16, %if.entry.i61 ], [ %4, %else ]
  %memberidx1.i60 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i60, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 19
  br i1 %18, label %if.entry.i61, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i61, %else
  %.lcssa.i = phi i64 [ %14, %else ], [ %17, %if.entry.i61 ]
  %19 = icmp eq i64 %.lcssa.i, 11
  br i1 %19, label %if.entry7, label %ifend

ifend:                                            ; preds = %else.i, %if.entry.i, %is_object.exit, %if.entry4, %else5
  %ptr.0 = phi ptr [ %20, %if.entry4 ], [ %21, %else5 ], [ null, %is_object.exit ], [ %ptr.1, %if.entry.i ], [ %ptr.1, %else.i ]
  ret ptr %ptr.0

if.entry4:                                        ; preds = %if.entry
  %20 = tail call ptr @LLVMBuildArrayMalloc(ptr %1, ptr %8, ptr %12, ptr nonnull @71)
  br label %ifend

else5:                                            ; preds = %if.entry
  %21 = tail call ptr @LLVMBuildArrayAlloca(ptr %1, ptr %8, ptr %12, ptr nonnull @71)
  br label %ifend

if.entry7:                                        ; preds = %is_object.exit
  %memberidx10 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %22 = load ptr, ptr %memberidx10, align 8
  %memberidx11 = getelementptr inbounds %Array_Expression_, ptr %22, i64 0, i32 2
  %23 = load i64, ptr %memberidx11, align 4
  %24 = add nuw i64 %23, 1
  %25 = alloca ptr, i64 %24, align 8
  %26 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %4, i1 false)
  %memberidx12 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %27 = load i1, ptr %memberidx12, align 1
  br i1 %27, label %if.entry13, label %else14

if.entry13:                                       ; preds = %if.entry7
  %28 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %26, ptr nonnull @71)
  br label %ifend15

else14:                                           ; preds = %if.entry7
  %29 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %26, ptr nonnull @71)
  br label %ifend15

ifend15:                                          ; preds = %else14, %if.entry13
  %ptr.1 = phi ptr [ %28, %if.entry13 ], [ %29, %else14 ]
  store ptr %ptr.1, ptr %25, align 8
  %30 = load ptr, ptr %memberidx10, align 8
  %31 = tail call ptr @malloc(i32 25)
  %memberidx.i.i = getelementptr inbounds %Array_Expression_, ptr %30, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Expression_, ptr %30, i64 0, i32 2
  %33 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %31, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 3
  store ptr %32, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 2
  store i64 %33, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend15, %for.body.i
  %35 = phi i64 [ %38, %for.body.i ], [ 1, %ifend15 ]
  %item.0.i76.in = phi ptr [ %ptridx.i7.i, %for.body.i ], [ %32, %ifend15 ]
  %start.0.i75 = phi i64 [ %36, %for.body.i ], [ 1, %ifend15 ]
  %item.0.i76 = load ptr, ptr %item.0.i76.in, align 8
  %36 = add nuw nsw i64 %start.0.i75, 1
  %ptridx.i = getelementptr inbounds ptr, ptr %25, i64 %start.0.i75
  %37 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %item.0.i76)
  store ptr %37, ptr %ptridx.i, align 8
  %38 = add nuw nsw i64 %35, 1
  store i64 %38, ptr %memberidx1.i.i.i, align 4
  %ptridx.i7.i = getelementptr inbounds ptr, ptr %32, i64 %35
  %.not = icmp slt i64 %35, %33
  br i1 %.not, label %for.body.i, label %CodeGen_evaluate_expression_list.exit

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend15
  tail call void @free(ptr nonnull %31)
  %memberidx.i44 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %39 = load i64, ptr %4, align 4
  %cond72 = icmp eq i64 %39, 19
  br i1 %cond72, label %if.entry.i65, label %get_class_from_type.exit

if.entry.i65:                                     ; preds = %CodeGen_evaluate_expression_list.exit, %if.entry.i65
  %.tr11.i73 = phi ptr [ %40, %if.entry.i65 ], [ %4, %CodeGen_evaluate_expression_list.exit ]
  %memberidx1.i64 = getelementptr inbounds %GenericType, ptr %.tr11.i73, i64 0, i32 3
  %40 = load ptr, ptr %memberidx1.i64, align 8
  %41 = load i64, ptr %40, align 4
  %cond = icmp eq i64 %41, 19
  br i1 %cond, label %if.entry.i65, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i65, %CodeGen_evaluate_expression_list.exit
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %4, i64 0, i32 1
  %42 = load ptr, ptr %memberidx1.i, align 8
  %43 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %42)
  %.not.i45 = icmp eq ptr %43, null
  br i1 %.not.i45, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %44 = load ptr, ptr %memberidx.i44, align 8
  %memberidx.i.i48 = getelementptr inbounds %Program, ptr %44, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i48, align 8
  %46 = load i64, ptr %42, align 4
  %memberidx.i.i.i = getelementptr inbounds %Array_Module_, ptr %45, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i.i, align 8
  %ptridx.i.i.i = getelementptr inbounds ptr, ptr %47, i64 %46
  %48 = load ptr, ptr %ptridx.i.i.i, align 8
  %memberidx2.i.i49 = getelementptr inbounds %Module, ptr %48, i64 0, i32 3
  %49 = load ptr, ptr %memberidx2.i.i49, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %42, i64 0, i32 2
  %50 = load i64, ptr %memberidx3.i.i, align 4
  %memberidx.i5.i.i = getelementptr inbounds %Array_Class_, ptr %49, i64 0, i32 1
  %51 = load ptr, ptr %memberidx.i5.i.i, align 8
  %ptridx.i6.i.i = getelementptr inbounds ptr, ptr %51, i64 %50
  %52 = load ptr, ptr %ptridx.i6.i.i, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %52)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %52)
  %53 = load ptr, ptr %52, align 8
  %54 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %53)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %54, %ifend.i ], [ %43, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 6
  %55 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %55, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %56 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %55)
  %57 = call ptr @LLVMBuildCall2(ptr %1, ptr %56, ptr nonnull %55, ptr nonnull %25, i64 %24, ptr nonnull @71)
  br label %ifend

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %58 = tail call ptr @malloc(i32 47)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %58, ptr noundef nonnull align 8 dereferenceable(47) @264, i64 47, i1 false)
  %59 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %59, align 8
  %memberidx.i.i50 = getelementptr inbounds %string, ptr %59, i64 0, i32 1
  store ptr %58, ptr %memberidx.i.i50, align 8
  %memberidx1.i.i51 = getelementptr inbounds %string, ptr %59, i64 0, i32 2
  store i64 47, ptr %memberidx1.i.i51, align 4
  %memberidx2.i.i52 = getelementptr inbounds %string, ptr %59, i64 0, i32 3
  store i64 47, ptr %memberidx2.i.i52, align 4
  %60 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %60, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %61 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %61, align 8
  %memberidx.i.i.i53 = getelementptr inbounds %string, ptr %61, i64 0, i32 1
  store ptr %60, ptr %memberidx.i.i.i53, align 8
  %memberidx1.i.i.i54 = getelementptr inbounds %string, ptr %61, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i54, align 4
  %memberidx2.i.i.i55 = getelementptr inbounds %string, ptr %61, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i55, align 4
  %62 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %63 = tail call ptr %62(ptr nonnull %61)
  %64 = load i64, ptr %memberidx1.i.i.i54, align 4
  tail call void @write(i64 1, ptr %63, i64 %64)
  %65 = load ptr, ptr %memberidx.i.i.i53, align 8
  tail call void @free(ptr %65)
  tail call void @free(ptr %61)
  %66 = load ptr, ptr %59, align 8
  %memberidx.i.i.i56 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %66, i64 0, i32 3
  %67 = load ptr, ptr %memberidx.i.i.i56, align 8
  %68 = tail call ptr %67(ptr nonnull %59)
  %69 = load i64, ptr %memberidx1.i.i51, align 4
  tail call void @write(i64 1, ptr %68, i64 %69)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  %70 = load ptr, ptr %memberidx.i.i50, align 8
  tail call void @free(ptr %70)
  tail call void @free(ptr %59)
  tail call void @exit(i64 -1)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %arg_types.i142 = alloca [3 x ptr], align 8
  %arg_types.i131 = alloca [2 x ptr], align 8
  %args.i = alloca [1 x ptr], align 8
  %arg_types.i = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = icmp slt i64 %4, 3
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 5
  %6 = load ptr, ptr %memberidx1, align 8
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx.i, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %8)
  %10 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %9)
  switch i64 %4, label %ifend10 [
    i64 0, label %if.entry2
    i64 1, label %if.entry5
    i64 2, label %if.entry8
  ]

ifend:                                            ; preds = %3
  %memberidx12 = getelementptr inbounds %Array_Expression_, ptr %6, i64 0, i32 2
  %11 = load i64, ptr %memberidx12, align 4
  %12 = alloca ptr, i64 %11, align 8
  %13 = tail call ptr @malloc(i32 25)
  %memberidx.i.i159 = getelementptr inbounds %Array_Expression_, ptr %6, i64 0, i32 1
  %14 = load ptr, ptr %memberidx.i.i159, align 8
  %15 = load i64, ptr %memberidx12, align 4
  store i1 false, ptr %13, align 1
  %memberidx1.i.i.i161 = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 1
  %memberidx2.i.i.i162 = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 3
  store ptr %14, ptr %memberidx2.i.i.i162, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 2
  store i64 %15, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i161, align 4
  %16 = icmp slt i64 %15, 1
  br i1 %16, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend, %for.body.i
  %17 = phi i64 [ %20, %for.body.i ], [ 1, %ifend ]
  %item.0.i176.in = phi ptr [ %ptridx.i7.i, %for.body.i ], [ %14, %ifend ]
  %start.0.i175 = phi i64 [ %18, %for.body.i ], [ 0, %ifend ]
  %item.0.i176 = load ptr, ptr %item.0.i176.in, align 8
  %18 = add nuw nsw i64 %start.0.i175, 1
  %ptridx.i = getelementptr inbounds ptr, ptr %12, i64 %start.0.i175
  %19 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %item.0.i176)
  store ptr %19, ptr %ptridx.i, align 8
  %20 = add nuw nsw i64 %17, 1
  store i64 %20, ptr %memberidx1.i.i.i161, align 4
  %ptridx.i7.i = getelementptr inbounds ptr, ptr %14, i64 %17
  %.not = icmp slt i64 %17, %15
  br i1 %.not, label %for.body.i, label %CodeGen_evaluate_expression_list.exit

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend
  tail call void @free(ptr nonnull %13)
  %21 = load ptr, ptr %memberidx1, align 8
  %memberidx.i104 = getelementptr inbounds %Array_Expression_, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i104, align 8
  %23 = load ptr, ptr %22, align 8
  %memberidx15 = getelementptr inbounds %Expression, ptr %23, i64 0, i32 3
  %24 = load ptr, ptr %memberidx15, align 8
  %memberidx16 = getelementptr inbounds %PointerType, ptr %24, i64 0, i32 1
  %25 = load ptr, ptr %memberidx16, align 8
  %26 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %25, i1 true)
  %27 = tail call ptr @LLVMSizeOf(ptr %26)
  %28 = icmp eq i64 %4, 6
  br i1 %28, label %if.entry17, label %ifend19

if.entry2:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %29 = tail call ptr @LLVMInt8Type()
  %30 = tail call ptr @LLVMPointerType(ptr %29, i64 0)
  store ptr %30, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %31 = tail call ptr @LLVMDoubleType()
  %32 = load ptr, ptr %0, align 8
  %33 = tail call ptr @malloc(i32 4)
  store i32 1718580321, ptr %33, align 8
  %34 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %34, align 8
  %memberidx.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 1
  store ptr %33, ptr %memberidx.i.i.i, align 8
  %memberidx1.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %string, ptr %34, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i, align 4
  %35 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i7.i = getelementptr inbounds %IntrinsicResult, ptr %35, i64 0, i32 1
  store i64 0, ptr %35, align 8
  %36 = call ptr @LLVMFunctionType(ptr %31, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %36, ptr %memberidx1.i.i7.i, align 8
  %37 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %38 = call ptr %37(ptr nonnull %34)
  %39 = call ptr @LLVMGetNamedFunction(ptr %32, ptr %38)
  %.not.i.i = icmp eq ptr %39, null
  br i1 %.not.i.i, label %else.i.i, label %ifend4.thread

else.i.i:                                         ; preds = %if.entry2
  %40 = call ptr @LLVMAddFunction(ptr %32, ptr %38, ptr %36)
  br label %ifend4.thread

ifend4.thread:                                    ; preds = %else.i.i, %if.entry2
  %storemerge.i.i = phi ptr [ %40, %else.i.i ], [ %39, %if.entry2 ]
  store ptr %storemerge.i.i, ptr %35, align 8
  %41 = call ptr @LLVMBuildCall2(ptr %1, ptr %36, ptr %storemerge.i.i, ptr nonnull %args.i, i64 1, ptr nonnull @71)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

if.entry5:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %42 = tail call ptr @LLVMInt8Type()
  %43 = tail call ptr @LLVMPointerType(ptr %42, i64 0)
  store ptr %43, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %44 = tail call ptr @LLVMInt32Type()
  %45 = load ptr, ptr %0, align 8
  %46 = tail call ptr @malloc(i32 4)
  store i32 1768911969, ptr %46, align 8
  %47 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %47, align 8
  %memberidx.i.i.i107 = getelementptr inbounds %string, ptr %47, i64 0, i32 1
  store ptr %46, ptr %memberidx.i.i.i107, align 8
  %memberidx1.i.i.i108 = getelementptr inbounds %string, ptr %47, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i108, align 4
  %memberidx2.i.i.i109 = getelementptr inbounds %string, ptr %47, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i109, align 4
  %48 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i7.i110 = getelementptr inbounds %IntrinsicResult, ptr %48, i64 0, i32 1
  store i64 0, ptr %48, align 8
  %49 = call ptr @LLVMFunctionType(ptr %44, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %49, ptr %memberidx1.i.i7.i110, align 8
  %50 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %51 = call ptr %50(ptr nonnull %47)
  %52 = call ptr @LLVMGetNamedFunction(ptr %45, ptr %51)
  %.not.i.i113 = icmp eq ptr %52, null
  br i1 %.not.i.i113, label %else.i.i115, label %CodeGen_codegen_atoi_call.exit

else.i.i115:                                      ; preds = %if.entry5
  %53 = call ptr @LLVMAddFunction(ptr %45, ptr %51, ptr %49)
  br label %CodeGen_codegen_atoi_call.exit

CodeGen_codegen_atoi_call.exit:                   ; preds = %if.entry5, %else.i.i115
  %storemerge.i.i116 = phi ptr [ %53, %else.i.i115 ], [ %52, %if.entry5 ]
  store ptr %storemerge.i.i116, ptr %48, align 8
  %54 = call ptr @LLVMBuildCall2(ptr %1, ptr %49, ptr %storemerge.i.i116, ptr nonnull %args.i, i64 1, ptr nonnull @71)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

if.entry8:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %55 = tail call ptr @LLVMInt8Type()
  %56 = tail call ptr @LLVMPointerType(ptr %55, i64 0)
  store ptr %56, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %57 = tail call ptr @LLVMInt64Type()
  %58 = load ptr, ptr %0, align 8
  %59 = tail call ptr @malloc(i32 4)
  store i32 1819243617, ptr %59, align 8
  %60 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %60, align 8
  %memberidx.i.i.i120 = getelementptr inbounds %string, ptr %60, i64 0, i32 1
  store ptr %59, ptr %memberidx.i.i.i120, align 8
  %memberidx1.i.i.i121 = getelementptr inbounds %string, ptr %60, i64 0, i32 2
  store i64 4, ptr %memberidx1.i.i.i121, align 4
  %memberidx2.i.i.i122 = getelementptr inbounds %string, ptr %60, i64 0, i32 3
  store i64 4, ptr %memberidx2.i.i.i122, align 4
  %61 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i7.i123 = getelementptr inbounds %IntrinsicResult, ptr %61, i64 0, i32 1
  store i64 0, ptr %61, align 8
  %62 = call ptr @LLVMFunctionType(ptr %57, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %62, ptr %memberidx1.i.i7.i123, align 8
  %63 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %64 = call ptr %63(ptr nonnull %60)
  %65 = call ptr @LLVMGetNamedFunction(ptr %58, ptr %64)
  %.not.i.i126 = icmp eq ptr %65, null
  br i1 %.not.i.i126, label %else.i.i128, label %CodeGen_codegen_atol_call.exit

else.i.i128:                                      ; preds = %if.entry8
  %66 = call ptr @LLVMAddFunction(ptr %58, ptr %64, ptr %62)
  br label %CodeGen_codegen_atol_call.exit

CodeGen_codegen_atol_call.exit:                   ; preds = %if.entry8, %else.i.i128
  %storemerge.i.i129 = phi ptr [ %66, %else.i.i128 ], [ %65, %if.entry8 ]
  store ptr %storemerge.i.i129, ptr %61, align 8
  %67 = call ptr @LLVMBuildCall2(ptr %1, ptr %62, ptr %storemerge.i.i129, ptr nonnull %args.i, i64 1, ptr nonnull @71)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

common.ret:                                       ; preds = %ifend42, %if.entry40, %if.entry34, %if.entry27, %CodeGen_codegen_memcmp_call.exit, %CodeGen_codegen_realloc_call.exit, %ifend10
  %common.ret.op = phi ptr [ %value.2, %ifend10 ], [ %84, %CodeGen_codegen_realloc_call.exit ], [ %102, %CodeGen_codegen_memcmp_call.exit ], [ %109, %if.entry27 ], [ %111, %if.entry34 ], [ %112, %if.entry40 ], [ null, %ifend42 ]
  ret ptr %common.ret.op

ifend10:                                          ; preds = %if.entry, %CodeGen_codegen_atoi_call.exit, %ifend4.thread, %CodeGen_codegen_atol_call.exit
  %value.2 = phi ptr [ %67, %CodeGen_codegen_atol_call.exit ], [ %41, %ifend4.thread ], [ %54, %CodeGen_codegen_atoi_call.exit ], [ null, %if.entry ]
  %68 = call ptr @LLVMBuildFree(ptr %1, ptr %10)
  br label %common.ret

if.entry17:                                       ; preds = %CodeGen_evaluate_expression_list.exit
  %ptridx = getelementptr inbounds ptr, ptr %12, i64 1
  %69 = load ptr, ptr %ptridx, align 8
  %70 = tail call ptr @LLVMBuildMul(ptr %1, ptr %69, ptr %27, ptr nonnull @71)
  store ptr %70, ptr %ptridx, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i131)
  %71 = tail call ptr @LLVMInt8Type()
  %72 = tail call ptr @LLVMPointerType(ptr %71, i64 0)
  store ptr %72, ptr %arg_types.i131, align 8
  %73 = getelementptr inbounds ptr, ptr %arg_types.i131, i64 1
  %74 = tail call ptr @LLVMIntType(i64 64)
  store ptr %74, ptr %73, align 8
  %75 = load ptr, ptr %0, align 8
  %76 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %76, ptr noundef nonnull align 8 dereferenceable(7) @224, i64 7, i1 false)
  %77 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %77, align 8
  %memberidx.i.i.i132 = getelementptr inbounds %string, ptr %77, i64 0, i32 1
  store ptr %76, ptr %memberidx.i.i.i132, align 8
  %memberidx1.i.i.i133 = getelementptr inbounds %string, ptr %77, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i133, align 4
  %memberidx2.i.i.i134 = getelementptr inbounds %string, ptr %77, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i134, align 4
  %78 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i6.i = getelementptr inbounds %IntrinsicResult, ptr %78, i64 0, i32 1
  store i64 0, ptr %78, align 8
  %79 = call ptr @LLVMFunctionType(ptr %72, ptr nonnull %arg_types.i131, i64 2, i1 false)
  store ptr %79, ptr %memberidx1.i.i6.i, align 8
  %80 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %81 = call ptr %80(ptr nonnull %77)
  %82 = call ptr @LLVMGetNamedFunction(ptr %75, ptr %81)
  %.not.i.i137 = icmp eq ptr %82, null
  br i1 %.not.i.i137, label %else.i.i139, label %CodeGen_codegen_realloc_call.exit

else.i.i139:                                      ; preds = %if.entry17
  %83 = call ptr @LLVMAddFunction(ptr %75, ptr %81, ptr %79)
  br label %CodeGen_codegen_realloc_call.exit

CodeGen_codegen_realloc_call.exit:                ; preds = %if.entry17, %else.i.i139
  %storemerge.i.i140 = phi ptr [ %83, %else.i.i139 ], [ %82, %if.entry17 ]
  store ptr %storemerge.i.i140, ptr %78, align 8
  %84 = call ptr @LLVMBuildCall2(ptr %1, ptr %79, ptr %storemerge.i.i140, ptr nonnull %12, i64 2, ptr nonnull @71)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i131)
  br label %common.ret

ifend19:                                          ; preds = %CodeGen_evaluate_expression_list.exit
  %ptridx21 = getelementptr inbounds ptr, ptr %12, i64 2
  %85 = load ptr, ptr %ptridx21, align 8
  %86 = tail call ptr @LLVMBuildMul(ptr %1, ptr %85, ptr %27, ptr nonnull @71)
  store ptr %86, ptr %ptridx21, align 8
  %87 = icmp eq i64 %4, 7
  br i1 %87, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %ifend19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %arg_types.i142)
  %88 = tail call ptr @LLVMInt8Type()
  %89 = tail call ptr @LLVMPointerType(ptr %88, i64 0)
  %90 = tail call ptr @LLVMIntType(i64 64)
  store ptr %89, ptr %arg_types.i142, align 8
  %91 = getelementptr inbounds ptr, ptr %arg_types.i142, i64 1
  store ptr %89, ptr %91, align 8
  %92 = getelementptr inbounds ptr, ptr %arg_types.i142, i64 2
  store ptr %90, ptr %92, align 8
  %93 = load ptr, ptr %0, align 8
  %94 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %94, ptr noundef nonnull align 8 dereferenceable(6) @225, i64 6, i1 false)
  %95 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %95, align 8
  %memberidx.i.i.i143 = getelementptr inbounds %string, ptr %95, i64 0, i32 1
  store ptr %94, ptr %memberidx.i.i.i143, align 8
  %memberidx1.i.i.i144 = getelementptr inbounds %string, ptr %95, i64 0, i32 2
  store i64 6, ptr %memberidx1.i.i.i144, align 4
  %memberidx2.i.i.i145 = getelementptr inbounds %string, ptr %95, i64 0, i32 3
  store i64 6, ptr %memberidx2.i.i.i145, align 4
  %96 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i7.i146 = getelementptr inbounds %IntrinsicResult, ptr %96, i64 0, i32 1
  store i64 0, ptr %96, align 8
  %97 = call ptr @LLVMFunctionType(ptr %90, ptr nonnull %arg_types.i142, i64 3, i1 false)
  store ptr %97, ptr %memberidx1.i.i7.i146, align 8
  %98 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 5), align 8
  %99 = call ptr %98(ptr nonnull %95)
  %100 = call ptr @LLVMGetNamedFunction(ptr %93, ptr %99)
  %.not.i.i149 = icmp eq ptr %100, null
  br i1 %.not.i.i149, label %else.i.i151, label %CodeGen_codegen_memcmp_call.exit

else.i.i151:                                      ; preds = %if.entry23
  %101 = call ptr @LLVMAddFunction(ptr %93, ptr %99, ptr %97)
  br label %CodeGen_codegen_memcmp_call.exit

CodeGen_codegen_memcmp_call.exit:                 ; preds = %if.entry23, %else.i.i151
  %storemerge.i.i152 = phi ptr [ %101, %else.i.i151 ], [ %100, %if.entry23 ]
  store ptr %storemerge.i.i152, ptr %96, align 8
  %102 = call ptr @LLVMBuildCall2(ptr %1, ptr %97, ptr %storemerge.i.i152, ptr nonnull %12, i64 3, ptr nonnull @71)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %arg_types.i142)
  br label %common.ret

ifend25:                                          ; preds = %ifend19
  %103 = load ptr, ptr %12, align 8
  %104 = tail call i64 @LLVMGetAlignment(ptr %103)
  %105 = icmp eq i64 %4, 5
  %ptridx31 = getelementptr inbounds ptr, ptr %12, i64 1
  %106 = load ptr, ptr %ptridx31, align 8
  br i1 %105, label %if.entry27, label %ifend29

if.entry27:                                       ; preds = %ifend25
  %107 = tail call ptr @LLVMInt8Type()
  %108 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %106, ptr %107, i1 false, ptr nonnull @71)
  %109 = tail call ptr @LLVMBuildMemSet(ptr %1, ptr %103, ptr %108, ptr %86, i64 %104)
  br label %common.ret

ifend29:                                          ; preds = %ifend25
  %110 = tail call i64 @LLVMGetAlignment(ptr %106)
  switch i64 %4, label %ifend42 [
    i64 3, label %if.entry34
    i64 4, label %if.entry40
  ]

if.entry34:                                       ; preds = %ifend29
  %111 = tail call ptr @LLVMBuildMemCpy(ptr %1, ptr %103, i64 %104, ptr %106, i64 %110, ptr %86)
  br label %common.ret

if.entry40:                                       ; preds = %ifend29
  %112 = tail call ptr @LLVMBuildMemMove(ptr %1, ptr %103, i64 %104, ptr %106, i64 %110, ptr %86)
  br label %common.ret

ifend42:                                          ; preds = %ifend29
  %113 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %113, ptr noundef nonnull align 8 dereferenceable(21) @254, i64 21, i1 false)
  %114 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %114, align 8
  %memberidx.i.i154 = getelementptr inbounds %string, ptr %114, i64 0, i32 1
  store ptr %113, ptr %memberidx.i.i154, align 8
  %memberidx1.i.i155 = getelementptr inbounds %string, ptr %114, i64 0, i32 2
  store i64 21, ptr %memberidx1.i.i155, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %114, i64 0, i32 3
  store i64 21, ptr %memberidx2.i.i, align 4
  %115 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %115, ptr noundef nonnull align 8 dereferenceable(7) @19, i64 7, i1 false)
  %116 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %116, align 8
  %memberidx.i.i.i156 = getelementptr inbounds %string, ptr %116, i64 0, i32 1
  store ptr %115, ptr %memberidx.i.i.i156, align 8
  %memberidx1.i.i.i157 = getelementptr inbounds %string, ptr %116, i64 0, i32 2
  store i64 7, ptr %memberidx1.i.i.i157, align 4
  %memberidx2.i.i.i158 = getelementptr inbounds %string, ptr %116, i64 0, i32 3
  store i64 7, ptr %memberidx2.i.i.i158, align 4
  %117 = load ptr, ptr getelementptr inbounds (<{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr @VTablestring, i64 0, i32 3), align 8
  %118 = tail call ptr %117(ptr nonnull %116)
  %119 = load i64, ptr %memberidx1.i.i.i157, align 4
  tail call void @write(i64 1, ptr %118, i64 %119)
  %120 = load ptr, ptr %memberidx.i.i.i156, align 8
  tail call void @free(ptr %120)
  tail call void @free(ptr %116)
  %121 = load ptr, ptr %114, align 8
  %memberidx.i.i.i164 = getelementptr inbounds <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>, ptr %121, i64 0, i32 3
  %122 = load ptr, ptr %memberidx.i.i.i164, align 8
  %123 = tail call ptr %122(ptr nonnull %114)
  %124 = load i64, ptr %memberidx1.i.i155, align 4
  tail call void @write(i64 1, ptr %123, i64 %124)
  tail call void @write(i64 1, ptr nonnull @0, i64 1)
  %125 = load ptr, ptr %memberidx.i.i154, align 8
  tail call void @free(ptr %125)
  tail call void @free(ptr %114)
  tail call void @exit(i64 -1)
  br label %common.ret
}

declare ptr @LLVMModuleCreateWithName(ptr) local_unnamed_addr

declare i1 @LLVMIsConstant(ptr) local_unnamed_addr

declare ptr @LLVMConstNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstInt(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMInt1Type() local_unnamed_addr

declare ptr @LLVMIntType(i64) local_unnamed_addr

declare ptr @LLVMVoidType() local_unnamed_addr

declare ptr @LLVMInt8Type() local_unnamed_addr

declare ptr @LLVMInt16Type() local_unnamed_addr

declare ptr @LLVMInt32Type() local_unnamed_addr

declare ptr @LLVMInt64Type() local_unnamed_addr

declare ptr @LLVMInt128Type() local_unnamed_addr

declare ptr @LLVMFloatType() local_unnamed_addr

declare ptr @LLVMDoubleType() local_unnamed_addr

declare ptr @LLVMPointerType(ptr, i64) local_unnamed_addr

declare ptr @LLVMArrayType(ptr, i64) local_unnamed_addr

declare ptr @LLVMFunctionType(ptr, ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMBuildRet(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildRetVoid(ptr) local_unnamed_addr

declare ptr @LLVMConstReal(ptr, double) local_unnamed_addr

declare ptr @LLVMAddFunction(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCall2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMBuildGlobalString(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAlloca(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildLoad2(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSelect(ptr, ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetTypeKind(ptr) local_unnamed_addr

declare ptr @LLVMTypeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsGlobalConstant(ptr) local_unnamed_addr

define internal fastcc noalias ptr @get_format_from_type(ptr nocapture readonly %0) unnamed_addr {
  %2 = load i64, ptr %0, align 4
  %3 = add i64 %2, -1
  %4 = icmp ult i64 %3, 7
  br i1 %4, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  switch i64 %2, label %ifend7 [
    i64 7, label %if.entry1
    i64 5, label %if.entry5
  ]

ifend:                                            ; preds = %1
  switch i64 %2, label %ifend18 [
    i64 8, label %if.entry9
    i64 9, label %if.entry13
    i64 13, label %if.entry16
  ]

common.ret:                                       ; preds = %ifend18, %if.entry16, %if.entry13, %if.entry9, %ifend7, %if.entry5, %if.entry1
  %.sink46 = phi ptr [ %12, %ifend18 ], [ %11, %if.entry16 ], [ %10, %if.entry13 ], [ %9, %if.entry9 ], [ %8, %ifend7 ], [ %7, %if.entry5 ], [ %6, %if.entry1 ]
  %.sink44 = phi i64 [ 2, %ifend18 ], [ 4, %if.entry16 ], [ 3, %if.entry13 ], [ 2, %if.entry9 ], [ 2, %ifend7 ], [ 3, %if.entry5 ], [ 4, %if.entry1 ]
  %5 = tail call ptr @malloc(i32 32)
  store ptr @VTablestring, ptr %5, align 8
  %memberidx.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 1
  store ptr %.sink46, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 2
  store i64 %.sink44, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %string, ptr %5, i64 0, i32 3
  store i64 %.sink44, ptr %memberidx2.i.i, align 4
  ret ptr %5

if.entry1:                                        ; preds = %if.entry
  %6 = tail call ptr @malloc(i32 4)
  store i32 1684827173, ptr %6, align 8
  br label %common.ret

if.entry5:                                        ; preds = %if.entry
  %7 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %7, ptr noundef nonnull align 8 dereferenceable(3) @228, i64 3, i1 false)
  br label %common.ret

ifend7:                                           ; preds = %if.entry
  %8 = tail call ptr @malloc(i32 2)
  store i16 25637, ptr %8, align 8
  br label %common.ret

if.entry9:                                        ; preds = %ifend
  %9 = tail call ptr @malloc(i32 2)
  store i16 26149, ptr %9, align 8
  br label %common.ret

if.entry13:                                       ; preds = %ifend
  %10 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %10, ptr noundef nonnull align 8 dereferenceable(3) @229, i64 3, i1 false)
  br label %common.ret

if.entry16:                                       ; preds = %ifend
  %11 = tail call ptr @malloc(i32 4)
  store i32 1478850608, ptr %11, align 8
  br label %common.ret

ifend18:                                          ; preds = %ifend
  %12 = tail call ptr @malloc(i32 2)
  store i16 29477, ptr %12, align 8
  br label %common.ret
}

declare ptr @LLVMBuildInBoundsGEP2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVM_GetFunctionType(ptr) local_unnamed_addr

declare ptr @LLVMBuildMalloc(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFree(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildStore(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstArray(ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMConstMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMSizeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsNull(ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNotNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWAdd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWAdd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWSub(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWSub(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildUDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildURem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstICmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildICmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstShl(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildShl(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstLShr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildLShr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstOr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildOr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstAnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAnd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstXor(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildXor(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFCmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFCmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstSIToFP(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSIToFP(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFPToSI(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPToSI(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstIntCast(ptr, ptr, i1) local_unnamed_addr

declare ptr @LLVMBuildIntCast2(ptr, ptr, ptr, i1, ptr) local_unnamed_addr

declare ptr @LLVMConstFPCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstBitCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBitCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNot(ptr) local_unnamed_addr

declare ptr @LLVMBuildNot(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetInitializer(ptr) local_unnamed_addr

declare ptr @LLVMConstNull(ptr) local_unnamed_addr

declare ptr @LLVMAppendBasicBlock(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCondBr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMPositionBuilderAtEnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildPhi(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMAddIncoming(ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildArrayMalloc(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildArrayAlloca(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetAlignment(ptr) local_unnamed_addr

declare ptr @LLVMBuildMemSet(ptr, ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildMemCpy(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMBuildMemMove(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare void @LLVMDeleteBasicBlock(ptr) local_unnamed_addr

declare ptr @LLVMAddGlobal(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMSetInitializer(ptr, ptr) local_unnamed_addr

declare void @LLVMSetGlobalConstant(ptr, i1) local_unnamed_addr

declare void @LLVMSetLinkage(ptr, i64) local_unnamed_addr

declare ptr @LLVMCreateBuilder() local_unnamed_addr

declare ptr @LLVMGetParam(ptr, i64) local_unnamed_addr

declare void @LLVMDisposeBuilder(ptr) local_unnamed_addr

declare ptr @LLVMStructType(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMConstStruct(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMStructCreateNamed(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetModuleContext(ptr) local_unnamed_addr

declare void @LLVMStructSetBody(ptr, ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMConstString(ptr, i64, i1) local_unnamed_addr

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #13

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #14

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #14

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #15

attributes #0 = { nofree norecurse nosync nounwind readonly }
attributes #1 = { argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn }
attributes #2 = { mustprogress nofree norecurse nosync nounwind readonly willreturn }
attributes #3 = { argmemonly mustprogress nocallback nofree nounwind willreturn }
attributes #4 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1) "alloc-family"="malloc" }
attributes #5 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free") "alloc-family"="malloc" }
attributes #6 = { argmemonly mustprogress nofree nounwind readonly willreturn }
attributes #7 = { mustprogress nofree norecurse nosync nounwind willreturn }
attributes #8 = { nofree }
attributes #9 = { nofree nounwind }
attributes #10 = { mustprogress nounwind willreturn }
attributes #11 = { mustprogress nofree nounwind readonly willreturn }
attributes #12 = { nofree nosync nounwind readonly }
attributes #13 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #14 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }
attributes #15 = { argmemonly nocallback nofree nounwind willreturn writeonly }

!0 = !{}
