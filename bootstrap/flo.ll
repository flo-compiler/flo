; ModuleID = '../src/main.flo'
source_filename = "../src/main.flo"
target triple = "x86_64-pc-linux-gnu"

%CodeGen = type <{ ptr, ptr, ptr, ptr, ptr, i1, ptr, ptr, ptr, ptr, ptr }>
%TypeChecker = type <{ ptr, ptr, ptr, ptr, ptr, ptr, i1, i1, ptr }>
%String = type <{ ptr, i64, i64 }>
%FlagBool = type <{ i64, ptr, ptr, i1 }>
%Flag = type <{ i64, ptr, ptr }>
%FlagString = type <{ i64, ptr, ptr, ptr }>
%FlagInt = type <{ i64, ptr, ptr, i64 }>
%Compiler = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_FloFile_ = type <{ ptr, i64, i64 }>
%Array_FloError_ = type <{ ptr, i64, i64 }>
%Map_String_FileId_ = type <{ ptr, i64, i64 }>
%Array_Module_ = type <{ ptr, i64, i64 }>
%Map_String_Generic_ = type <{ ptr, i64, i64 }>
%Module = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Map_String_LLVMValueRef_ = type <{ ptr, i64, i64 }>
%Map_String_CGClassType_ = type <{ ptr, i64, i64 }>
%Map_String_CGEnumType_ = type <{ ptr, i64, i64 }>
%Array_Enum_ = type <{ ptr, i64, i64 }>
%ArrayIterator_Enum_ = type <{ i1, i64, i64, ptr }>
%Array_Class_ = type <{ ptr, i64, i64 }>
%ArrayIterator_Class_ = type <{ i1, i64, i64, ptr }>
%Array_ConstDeclaration_ = type <{ ptr, i64, i64 }>
%ArrayIterator_ConstDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_VarDeclaration_ = type <{ ptr, i64, i64 }>
%ArrayIterator_VarDeclaration_ = type <{ i1, i64, i64, ptr }>
%Array_Function_ = type <{ ptr, i64, i64 }>
%ArrayIterator_Function_ = type <{ i1, i64, i64, ptr }>
%MapIterator_String_LLVMValueRef_ = type <{ i1, ptr, i64, i64 }>
%MapIterator_String_CGClassType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_String_CGClassType_ = type <{ ptr, ptr }>
%MapIterator_String_CGEnumType_ = type <{ i1, ptr, i64, i64 }>
%MapEntry_String_CGEnumType_ = type <{ ptr, ptr }>
%ArrayIterator_Module_ = type <{ i1, i64, i64, ptr }>
%Array_Var_ = type <{ ptr, i64, i64 }>
%Class = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i64, i1 }>
%Array_ClassField_ = type <{ ptr, i64, i64 }>
%Array_ClassMethod_ = type <{ ptr, i64, i64 }>
%Enum = type <{ ptr, ptr, ptr, ptr }>
%Array_EnumField_ = type <{ ptr, i64, i64 }>
%EnumField = type <{ ptr, ptr, ptr }>
%ScopeId = type <{ i64, i64 }>
%GeneratedModule = type <{ ptr, ptr, ptr }>
%FloFile = type <{ ptr, ptr }>
%FloError = type <{ i64, ptr, ptr }>
%FloRange = type <{ i64, i64, i64, i64 }>
%Range = type <{ i64, i64 }>
%RangeIterator = type <{ i1, i64, i64 }>
%MapEntry_String_FileId_ = type <{ ptr, ptr }>
%Map_String_VarId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_VarId_ = type <{ ptr, ptr }>
%Scope = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Map_String_EnumId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_EnumId_ = type <{ ptr, ptr }>
%Map_String_Type_ = type <{ ptr, i64, i64 }>
%MapEntry_String_Type_ = type <{ ptr, ptr }>
%Map_String_ClassId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_ClassId_ = type <{ ptr, ptr }>
%Map_String_PropId_ = type <{ ptr, i64, i64 }>
%MapEntry_String_PropId_ = type <{ ptr, ptr }>
%Array_FunctionDeclarationNode_ = type <{ ptr, i64, i64 }>
%ModuleAST = type <{ ptr, ptr, ptr, ptr, ptr, ptr, ptr }>
%Array_ClassDeclarationNode_ = type <{ ptr, i64, i64 }>
%Array_ImportNode_ = type <{ ptr, i64, i64 }>
%Array_ConstDeclarationStatement_ = type <{ ptr, i64, i64 }>
%Array_VarDeclarationStatement_ = type <{ ptr, i64, i64 }>
%Array_EnumNode_ = type <{ ptr, i64, i64 }>
%Array_TypeAliasNode_ = type <{ ptr, i64, i64 }>
%Lexer = type <{ i8, ptr, ptr, i64, i64, i64 }>
%Array_Token_ = type <{ ptr, i64, i64 }>
%Token = type <{ i64, ptr }>
%IntToken = type <{ i64, ptr, i64 }>
%IdentifierToken = type <{ i64, ptr, ptr }>
%Array_Array_Token__ = type <{ ptr, i64, i64 }>
%Array_uint_ = type <{ ptr, i64, i64 }>
%StrToken = type <{ i64, ptr, ptr, ptr, ptr }>
%FloatToken = type <{ i64, ptr, double }>
%CharToken = type <{ i64, ptr, i8 }>
%Parser = type <{ ptr, ptr, ptr, i64 }>
%FunctionDeclarationNode = type <{ ptr, ptr, ptr, ptr, i1 }>
%Array_ArgNode_ = type <{ ptr, i64, i64 }>
%TypeNode = type <{ ptr, i64 }>
%RecordTypeNode = type <{ ptr, i64, ptr, ptr }>
%Array_TypeNode_ = type <{ ptr, i64, i64 }>
%ClassDeclarationNode = type <{ ptr, ptr, ptr, ptr, ptr }>
%Array_FieldNode_ = type <{ ptr, i64, i64 }>
%Array_MethodNode_ = type <{ ptr, i64, i64 }>
%Array_GenericParameterNode_ = type <{ ptr, i64, i64 }>
%FieldNode = type <{ ptr, i64, ptr, ptr }>
%MethodNode = type <{ ptr, ptr, ptr, i64, ptr, i1, i1 }>
%EnumNode = type <{ ptr, ptr, ptr }>
%Array_EnumNodeField_ = type <{ ptr, i64, i64 }>
%EnumNodeField = type <{ ptr, ptr }>
%Array_ImportClause_ = type <{ ptr, i64, i64 }>
%ImportNode = type <{ ptr, ptr, ptr }>
%ImportClause = type <{ ptr, ptr }>
%TypeAliasNode = type <{ ptr, ptr }>
%BlockNode = type <{ ptr, ptr }>
%Array_StatementNode_ = type <{ ptr, i64, i64 }>
%TupleTypeNode = type <{ ptr, i64, ptr }>
%FunctionTypeNode = type <{ ptr, i64, ptr, ptr }>
%PointerTypeNode = type <{ ptr, i64, ptr }>
%ArrayTypeNode = type <{ ptr, i64, ptr, ptr }>
%Array_ExpressionNode_ = type <{ ptr, i64, i64 }>
%StatementNode = type <{ ptr, i64 }>
%ExpressionNode = type <{ ptr, i64, i64 }>
%StringExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%VarDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%NewExpressionNode = type <{ ptr, i64, i64, ptr, i1, ptr }>
%IfStatementNode = type <{ ptr, i64, ptr, ptr, ptr }>
%WhileStatementNode = type <{ ptr, i64, ptr, ptr }>
%ForStatementNode = type <{ ptr, i64, ptr, ptr, ptr, ptr, i64, ptr, ptr }>
%ReturnStatementNode = type <{ ptr, i64, ptr }>
%ConstDeclarationStatement = type <{ ptr, i64, ptr, ptr, ptr }>
%TupleExpressionNode = type <{ ptr, i64, i64, ptr }>
%ArgNode = type <{ ptr, ptr, ptr }>
%IntExpressionNode = type <{ ptr, i64, i64, ptr }>
%FloatExpressionNode = type <{ ptr, i64, i64, ptr }>
%CharExpressionNode = type <{ ptr, i64, i64, ptr }>
%VarAccessExpressionNode = type <{ ptr, i64, i64, ptr }>
%CallExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%ExpressionIndexNode = type <{ ptr, i64, i64, ptr, ptr }>
%MemberExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%UnaryExpressionNode = type <{ ptr, i64, i64, i64, ptr }>
%ArrayExpressionNode = type <{ ptr, i64, i64, ptr }>
%BinaryExpressionNode = type <{ ptr, i64, i64, ptr, i64, ptr }>
%MatchExpressionNode = type <{ ptr, i64, i64, ptr, ptr, ptr }>
%Array_MatchExpressionCaseNode_ = type <{ ptr, i64, i64 }>
%MatchExpressionCaseNode = type <{ ptr, ptr }>
%TypeCastExpressionNode = type <{ ptr, i64, i64, ptr, ptr }>
%TernaryExpressionNode = type <{ ptr, i64, i64, ptr, ptr, ptr }>
%Array_Scope_ = type <{ ptr, i64, i64 }>
%Array_Const_ = type <{ ptr, i64, i64 }>
%ArrayIterator_ImportNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_EnumNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ClassDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_TypeAliasNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ConstDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%ConstDeclaration = type <{ i64, ptr, ptr, i1 }>
%ArrayIterator_VarDeclarationStatement_ = type <{ i1, i64, i64, ptr }>
%VarDeclaration = type <{ i64, ptr, ptr, i1 }>
%VarId = type <{ i64, i64, i64 }>
%Var = type <{ ptr, ptr, ptr }>
%Expression = type <{ i64, i1, i64, ptr }>
%ArrayIterator_FunctionDeclarationNode_ = type <{ i1, i64, i64, ptr }>
%Function = type <{ ptr, ptr, ptr, ptr, ptr, ptr, i1 }>
%Block = type <{ ptr, i1, i1, i1, ptr }>
%FunctionType = type <{ i64, ptr, ptr, i1 }>
%ReturnStatement = type <{ i64, ptr }>
%Array_Statement_ = type <{ ptr, i64, i64 }>
%TypeId = type <{ i64, i64, i64 }>
%MapIterator_String_Type_ = type <{ i1, ptr, i64, i64 }>
%GenericType = type <{ i64, ptr, ptr, ptr }>
%ObjectType = type <{ i64, ptr }>
%Array_Expression_ = type <{ ptr, i64, i64 }>
%StringExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%IntrinsicCall = type <{ i64, i1, i64, ptr, i64, ptr }>
%TypeCastExpression = type <{ i64, i1, i64, ptr, ptr }>
%Array_Type_ = type <{ ptr, i64, i64 }>
%Array_FunctionArg_ = type <{ ptr, i64, i64 }>
%FunctionArg = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%MapIterator_String_PropId_ = type <{ i1, ptr, i64, i64 }>
%PropId = type <{ i64, ptr, i64 }>
%ClassMethod = type <{ ptr, i1, i64, ptr, ptr, ptr, ptr, i1, ptr }>
%ClassField = type <{ ptr, i1, i64, ptr, ptr, i64, ptr }>
%Type = type <{ i64 }>
%MatchExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr, i1 }>
%Array_MatchExpressionCase_ = type <{ ptr, i64, i64 }>
%ArrayIterator_MatchExpressionCaseNode_ = type <{ i1, i64, i64, ptr }>
%MatchExpressionCase = type <{ i64, ptr, ptr }>
%Const = type <{ ptr, ptr, ptr }>
%EnumType = type <{ i64, ptr }>
%MemberExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%CallExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%BinaryExpression = type <{ i64, i1, i64, ptr, ptr, i64, ptr }>
%IntType = type <{ i64, i1 }>
%NewExpression = type <{ i64, i1, i64, ptr, ptr, i1, ptr }>
%VarAccessExpression = type <{ i64, i1, i64, ptr, ptr }>
%PointerType = type <{ i64, ptr }>
%ArrayType = type <{ i64, ptr, i64 }>
%ArrayIterator_TypeNode_ = type <{ i1, i64, i64, ptr }>
%TupleType = type <{ i64, ptr }>
%IfStatement = type <{ i64, ptr, ptr, ptr }>
%ForStatement = type <{ i64, ptr, ptr, ptr, ptr, ptr }>
%Array_ScopeId_ = type <{ ptr, i64, i64 }>
%UnaryExpression = type <{ i64, i1, i64, ptr, i64, ptr }>
%WhileStatement = type <{ i64, ptr, ptr }>
%IndexExpression = type <{ i64, i1, i64, ptr, ptr, ptr }>
%TernaryExpression = type <{ i64, i1, i64, ptr, ptr, ptr, ptr }>
%MapEntry_String_Generic_ = type <{ ptr, ptr }>
%Generic = type <{ i64, ptr }>
%IntExpression = type <{ i64, i1, i64, ptr, i64 }>
%ArrayIterator_StatementNode_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ImportClause_ = type <{ i1, i64, i64, ptr }>
%ModuleVarId = type <{ i64, i64, i64, ptr }>
%ArrayIterator_ArgNode_ = type <{ i1, i64, i64, ptr }>
%ArrayExpression = type <{ i64, i1, i64, ptr, ptr }>
%FloatExpression = type <{ i64, i1, i64, ptr, double }>
%ArrayIterator_ExpressionNode_ = type <{ i1, i64, i64, ptr }>
%TupleExpression = type <{ i64, i1, i64, ptr, ptr }>
%BooleanExpression = type <{ i64, i1, i64, ptr, i1 }>
%ArrayIterator_Expression_ = type <{ i1, i64, i64, ptr }>
%MapEntry_String_LLVMValueRef_ = type <{ ptr, ptr }>
%MapIterator_String_VarId_ = type <{ i1, ptr, i64, i64 }>
%ArrayIterator_ScopeId_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_Type_ = type <{ i1, i64, i64, ptr }>
%Map_String_uint_ = type <{ ptr, i64, i64 }>
%MapEntry_String_uint_ = type <{ ptr, i64 }>
%ArrayIterator_MatchExpressionCase_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_Statement_ = type <{ i1, i64, i64, ptr }>
%ArrayIterator_ClassMethod_ = type <{ i1, i64, i64, ptr }>
%CGClassType = type <{ ptr, ptr, ptr, ptr, ptr }>
%Array_LLVMValueRef_ = type <{ ptr, i64, i64 }>
%CGEnumType = type <{ ptr, ptr, ptr }>
%Array_LLVMTypeRef_ = type <{ ptr, i64, i64 }>
%ArrayIterator_EnumField_ = type <{ i1, i64, i64, ptr }>
%IntrinsicResult = type <{ ptr, ptr }>
%ArrayIterator_LLVMValueRef_ = type <{ i1, i64, i64, ptr }>

@0 = private unnamed_addr constant [8 x i8] c"Panic: \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [10 x i8] c"error: %s\00", align 1
@3 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@4 = private unnamed_addr constant [49 x i8] c"Main function not found in module; can't execute\00", align 1
@5 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@6 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@7 = private unnamed_addr constant [22 x i8] c"builtins/builtins.flo\00", align 1
@8 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@9 = private unnamed_addr constant [8 x i8] c"\1B[1;31m\00", align 1
@10 = private unnamed_addr constant [22 x i8] c"[Illegal Character]: \00", align 1
@11 = private unnamed_addr constant [17 x i8] c"[Syntax Error]: \00", align 1
@12 = private unnamed_addr constant [13 x i8] c"[IO Error]: \00", align 1
@13 = private unnamed_addr constant [15 x i8] c"[Type Error]: \00", align 1
@14 = private unnamed_addr constant [15 x i8] c"[Name Error]: \00", align 1
@15 = private unnamed_addr constant [10 x i8] c"[Error]: \00", align 1
@16 = private unnamed_addr constant [19 x i8] c"File '%s', line %u\00", align 1
@17 = internal global [13 x i8] c"FlagType.INT\00"
@18 = internal global [14 x i8] c"FlagType.BOOL\00"
@19 = internal global [13 x i8] c"FlagType.STR\00"
@FlagType_names = internal unnamed_addr constant [3 x ptr] [ptr @17, ptr @18, ptr @19]
@flags_length = internal unnamed_addr global i64 0
@flags_buffer = internal unnamed_addr global [250 x ptr] zeroinitializer
@20 = private unnamed_addr constant [6 x i8] c"0.0.1\00", align 1
@21 = private unnamed_addr constant [23 x i8] c"Show this help message\00", align 1
@22 = private unnamed_addr constant [6 x i8] c"-emit\00", align 1
@23 = private unnamed_addr constant [276 x i8] c"Emit output in a particular format. Options are:\0A\09\09 \E2\80\A2 exe - Generates an executable.\0A\09\09 \E2\80\A2 llvm-ir - Generates a file containing LLVM IR.\0A\09\09 \E2\80\A2 llvm-bc - Generates a file containing LLVM bitcode.\0A\09\09 \E2\80\A2 obj - Generates an object file\0A\09\09 \E2\80\A2 asm - Generates Assembly code.\00", align 1
@24 = private unnamed_addr constant [36 x i8] c"Specify file to put the output into\00", align 1
@25 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@26 = private unnamed_addr constant [26 x i8] c"Specify runtime directory\00", align 1
@27 = private unnamed_addr constant [20 x i8] c"/usr/local/flo/lib/\00", align 1
@28 = private unnamed_addr constant [8 x i8] c"-target\00", align 1
@29 = private unnamed_addr constant [34 x i8] c"Compile to specific target triple\00", align 1
@30 = private unnamed_addr constant [69 x i8] c"Specify a library to link against (should be a comma seperated list)\00", align 1
@31 = private unnamed_addr constant [42 x i8] c"Specify the compiler's optimization level\00", align 1
@32 = private unnamed_addr constant [13 x i8] c"Show version\00", align 1
@33 = private unnamed_addr constant [34 x i8] c"Missing value after -%s argument.\00", align 1
@34 = private unnamed_addr constant [8 x i8] c"Usage: \00", align 1
@35 = private unnamed_addr constant [30 x i8] c" [OPTIONS]? <file>\0A\0AOPTIONS:\0A\00", align 1
@36 = private unnamed_addr constant [4 x i8] c"-%s\00", align 1
@37 = private unnamed_addr constant [7 x i8] c" <val>\00", align 1
@38 = private unnamed_addr constant [25 x i8] c"No input file specified.\00", align 1
@39 = private unnamed_addr constant [33 x i8] c"Runtime directory not found '%s'\00", align 1
@40 = private unnamed_addr constant [32 x i8] c"No such file or directory: '%s'\00", align 1
@41 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@42 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@43 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@44 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@45 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@46 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@47 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@48 = private unnamed_addr constant [4 x i8] c"fnc\00", align 1
@49 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@50 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@51 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@52 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@53 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@54 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@55 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@56 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@57 = private unnamed_addr constant [4 x i8] c"del\00", align 1
@58 = private unnamed_addr constant [4 x i8] c"033\00", align 1
@59 = private unnamed_addr constant [4 x i8] c"x1b\00", align 1
@60 = private unnamed_addr constant [6 x i8] c"u001b\00", align 1
@61 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@62 = private unnamed_addr constant [24 x i8] c"Illegal character: '%s'\00", align 1
@63 = private unnamed_addr constant [23 x i8] c"Expected an Identifier\00", align 1
@64 = private unnamed_addr constant [13 x i8] c"Expected '='\00", align 1
@65 = private unnamed_addr constant [13 x i8] c"Expected ':'\00", align 1
@66 = private unnamed_addr constant [13 x i8] c"Expected '('\00", align 1
@67 = private unnamed_addr constant [13 x i8] c"Expected ')'\00", align 1
@68 = private unnamed_addr constant [13 x i8] c"Expected '{'\00", align 1
@69 = private unnamed_addr constant [13 x i8] c"Expected '}'\00", align 1
@70 = private unnamed_addr constant [13 x i8] c"Expected ','\00", align 1
@71 = private unnamed_addr constant [13 x i8] c"Expected '<'\00", align 1
@72 = private unnamed_addr constant [13 x i8] c"Expected '>'\00", align 1
@73 = private unnamed_addr constant [14 x i8] c"Expected '->'\00", align 1
@74 = private unnamed_addr constant [4 x i8] c"Map\00", align 1
@75 = private unnamed_addr constant [6 x i8] c"Array\00", align 1
@76 = private unnamed_addr constant [29 x i8] c"Expected an Expression value\00", align 1
@77 = private unnamed_addr constant [29 x i8] c"'%s' has no type information\00", align 1
@78 = private unnamed_addr constant [20 x i8] c"Expected ':' or '('\00", align 1
@79 = private unnamed_addr constant [88 x i8] c"Illegal expression expected: 'fnc', 'class', 'type', 'enum', 'import', 'const' or 'let'\00", align 1
@80 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@81 = private unnamed_addr constant [11 x i8] c"(%s) => %s\00", align 1
@82 = private unnamed_addr constant [4 x i8] c"%s*\00", align 1
@83 = private unnamed_addr constant [7 x i8] c"%s[%u]\00", align 1
@84 = private unnamed_addr constant [5 x i8] c"(%s)\00", align 1
@85 = private unnamed_addr constant [10 x i8] c"Namespace\00", align 1
@86 = private unnamed_addr constant [7 x i8] c"Record\00", align 1
@87 = private unnamed_addr constant [4 x i8] c"i%u\00", align 1
@88 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@89 = private unnamed_addr constant [4 x i8] c"%s4\00", align 1
@90 = private unnamed_addr constant [4 x i8] c"%s8\00", align 1
@91 = private unnamed_addr constant [5 x i8] c"%s16\00", align 1
@92 = private unnamed_addr constant [5 x i8] c"%s32\00", align 1
@93 = private unnamed_addr constant [5 x i8] c"%s64\00", align 1
@94 = private unnamed_addr constant [6 x i8] c"%s128\00", align 1
@95 = private unnamed_addr constant [4 x i8] c"f32\00", align 1
@96 = private unnamed_addr constant [4 x i8] c"f64\00", align 1
@97 = private unnamed_addr constant [7 x i8] c"record\00", align 1
@98 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@99 = private unnamed_addr constant [13 x i8] c"__generics__\00", align 1
@100 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@101 = private unnamed_addr constant [68 x i8] c"Name '%s' has already been used for another type. consider renaming\00", align 1
@102 = private unnamed_addr constant [41 x i8] c"Generic expects %u parameters but got %u\00", align 1
@103 = private unnamed_addr constant [4 x i8] c"%s_\00", align 1
@104 = private unnamed_addr constant [6 x i8] c"%s_%s\00", align 1
@105 = private unnamed_addr constant [55 x i8] c"Initilializer for global variable has to be a constant\00", align 1
@106 = private unnamed_addr constant [56 x i8] c"Expected type of '%s' but got type of '%s' on signature\00", align 1
@107 = private unnamed_addr constant [50 x i8] c"Import statement path can't be a formatted string\00", align 1
@108 = private unnamed_addr constant [28 x i8] c"%s not found in module \22\22%s\00", align 1
@109 = private unnamed_addr constant [37 x i8] c"Illegal re-declaration of const '%s'\00", align 1
@110 = private unnamed_addr constant [48 x i8] c"Illegal re-declaration of type '%s' as function\00", align 1
@111 = private unnamed_addr constant [53 x i8] c"Expected an int type for enum type but got type '%s'\00", align 1
@112 = private unnamed_addr constant [38 x i8] c"Enum initializer has to be a constant\00", align 1
@113 = private unnamed_addr constant [36 x i8] c"Expected type '%s' but got type '%s\00", align 1
@114 = private unnamed_addr constant [7 x i8] c"__eq__\00", align 1
@115 = private unnamed_addr constant [8 x i8] c"__add__\00", align 1
@116 = private unnamed_addr constant [8 x i8] c"__sub__\00", align 1
@117 = private unnamed_addr constant [8 x i8] c"__mul__\00", align 1
@118 = private unnamed_addr constant [8 x i8] c"__div__\00", align 1
@119 = private unnamed_addr constant [7 x i8] c"__or__\00", align 1
@120 = private unnamed_addr constant [8 x i8] c"__ora__\00", align 1
@121 = private unnamed_addr constant [12 x i8] c"__getitem__\00", align 1
@122 = private unnamed_addr constant [12 x i8] c"__setitem__\00", align 1
@123 = private unnamed_addr constant [7 x i8] c"__sl__\00", align 1
@124 = private unnamed_addr constant [7 x i8] c"__sr__\00", align 1
@125 = private unnamed_addr constant [8 x i8] c"__sla__\00", align 1
@126 = private unnamed_addr constant [8 x i8] c"__sra__\00", align 1
@127 = private unnamed_addr constant [7 x i8] c"__in__\00", align 1
@128 = private unnamed_addr constant [7 x i8] c"__lt__\00", align 1
@129 = private unnamed_addr constant [7 x i8] c"__lg__\00", align 1
@130 = private unnamed_addr constant [7 x i8] c"__ne__\00", align 1
@131 = private unnamed_addr constant [7 x i8] c"__le__\00", align 1
@132 = private unnamed_addr constant [7 x i8] c"__ge__\00", align 1
@133 = private unnamed_addr constant [8 x i8] c"__pow__\00", align 1
@134 = private unnamed_addr constant [8 x i8] c"__mod__\00", align 1
@135 = private unnamed_addr constant [8 x i8] c"__del__\00", align 1
@136 = private unnamed_addr constant [76 x i8] c" is reserved only for operator overloads and cannot be used as a field name\00", align 1
@137 = private unnamed_addr constant [36 x i8] c"Field %s in class %s already exists\00", align 1
@138 = private unnamed_addr constant [89 x i8] c"Signature of inherited field %s in class %s does not match expected parent signature '%s\00", align 1
@139 = private unnamed_addr constant [49 x i8] c"Expected inherited field %s in class %s to be %s\00", align 1
@140 = private unnamed_addr constant [68 x i8] c"Expected type '%s' but got type '%s' on static field initialization\00", align 1
@141 = private unnamed_addr constant [46 x i8] c"Static field initializer has to be a constant\00", align 1
@142 = private unnamed_addr constant [65 x i8] c"Expected %u arguments for binary operator overload %s but got %u\00", align 1
@143 = private unnamed_addr constant [45 x i8] c"Binary operator overload %s cannot be static\00", align 1
@144 = private unnamed_addr constant [75 x i8] c"__iter__ method must return an iteratable object {done: bool, next(): any}\00", align 1
@145 = private unnamed_addr constant [37 x i8] c"Method %s in class %s already exists\00", align 1
@146 = private unnamed_addr constant [91 x i8] c"Signature of inherited method %s in class %s does not match expected parent signature '%s'\00", align 1
@147 = private unnamed_addr constant [50 x i8] c"Expected inherited method %s in class %s to be %s\00", align 1
@148 = private unnamed_addr constant [32 x i8] c"Static method can't be abstract\00", align 1
@149 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@150 = private unnamed_addr constant [34 x i8] c"Class constructor can't be static\00", align 1
@151 = private unnamed_addr constant [36 x i8] c"Class constructor can't be abstract\00", align 1
@152 = private unnamed_addr constant [59 x i8] c"Can't have a abstract private method use protected instead\00", align 1
@153 = private unnamed_addr constant [6 x i8] c"super\00", align 1
@154 = private unnamed_addr constant [42 x i8] c"Can only inherit from class not type '%s'\00", align 1
@155 = private unnamed_addr constant [81 x i8] c"Class with constructor must implement all it's methods missing %s implementation\00", align 1
@156 = private unnamed_addr constant [39 x i8] c"Method missing ending return statement\00", align 1
@157 = private unnamed_addr constant [41 x i8] c"Function missing ending return statement\00", align 1
@158 = private unnamed_addr constant [24 x i8] c"length has to be an int\00", align 1
@159 = private unnamed_addr constant [24 x i8] c"length has to be a uint\00", align 1
@160 = private unnamed_addr constant [31 x i8] c"length is a non-constant value\00", align 1
@161 = private unnamed_addr constant [29 x i8] c"length should be an unsigned\00", align 1
@162 = private unnamed_addr constant [4 x i8] c"u16\00", align 1
@163 = private unnamed_addr constant [4 x i8] c"u32\00", align 1
@164 = private unnamed_addr constant [4 x i8] c"u64\00", align 1
@165 = private unnamed_addr constant [4 x i8] c"i16\00", align 1
@166 = private unnamed_addr constant [4 x i8] c"i32\00", align 1
@167 = private unnamed_addr constant [4 x i8] c"i64\00", align 1
@168 = private unnamed_addr constant [20 x i8] c"Undefined type '%s'\00", align 1
@169 = private unnamed_addr constant [48 x i8] c"Expected element type of '%s' but got type '%s'\00", align 1
@170 = private unnamed_addr constant [38 x i8] c"Const 'null' cannot be of type 'void'\00", align 1
@171 = private unnamed_addr constant [24 x i8] c"Undefined variable '%s'\00", align 1
@172 = private unnamed_addr constant [34 x i8] c"Assigment target is not a mutable\00", align 1
@173 = private unnamed_addr constant [52 x i8] c"Illegal assignment of variable of type '%s' to '%s'\00", align 1
@174 = private unnamed_addr constant [7 x i8] c"__gt__\00", align 1
@175 = private unnamed_addr constant [8 x i8] c"__and__\00", align 1
@176 = private unnamed_addr constant [8 x i8] c"__xor__\00", align 1
@177 = private unnamed_addr constant [37 x i8] c"Expected type '%s' but got type '%s'\00", align 1
@178 = private unnamed_addr constant [55 x i8] c"Unsupported binary operator overload for operator '%s'\00", align 1
@179 = private unnamed_addr constant [108 x i8] c"No binary operator overload for '%s' in object of class '%s' please implement the method %s to support this\00", align 1
@180 = private unnamed_addr constant [114 x i8] c"No operator overload for index set operator on %s object please implement method __setitem__ to use in this class\00", align 1
@181 = private unnamed_addr constant [6 x i8] c"Range\00", align 1
@182 = private unnamed_addr constant [58 x i8] c"Illegal binary operation '%s' between types '%s' and '%s'\00", align 1
@183 = private unnamed_addr constant [8 x i8] c"++(pre)\00", align 1
@184 = private unnamed_addr constant [8 x i8] c"--(pre)\00", align 1
@185 = private unnamed_addr constant [39 x i8] c"Illegal unary operation %s on constant\00", align 1
@186 = private unnamed_addr constant [40 x i8] c"Illegal unary operation %s on type '%s'\00", align 1
@187 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@188 = private unnamed_addr constant [30 x i8] c"Cannot cast type '%s' to '%s'\00", align 1
@189 = private unnamed_addr constant [45 x i8] c"Cannot construct an object of abstract class\00", align 1
@190 = private unnamed_addr constant [55 x i8] c"Expected %u argument(s) on constructor call but got %u\00", align 1
@191 = private unnamed_addr constant [71 x i8] c"Expected type '%s' but got type '%s' as constructor call argument (%d)\00", align 1
@192 = private unnamed_addr constant [68 x i8] c"New operator expects 1 argument for pointers but got %u argument(s)\00", align 1
@193 = private unnamed_addr constant [74 x i8] c"New operator for pointers expects argument of type '%s' but got type '%s'\00", align 1
@194 = private unnamed_addr constant [68 x i8] c"New operator expects either an a pointer or an object not a(n) '%s'\00", align 1
@195 = private unnamed_addr constant [76 x i8] c"Property '%s' is defined as private and only accessible within the class %s\00", align 1
@196 = private unnamed_addr constant [71 x i8] c"Property '%s' is defined as %s and only accessible within the class %s\00", align 1
@197 = private unnamed_addr constant [52 x i8] c"Property '%s' doesn't exist in object of class '%s'\00", align 1
@198 = private unnamed_addr constant [51 x i8] c"Property '%s' is not a static member in class '%s'\00", align 1
@199 = private unnamed_addr constant [40 x i8] c"'%s' is not an element of enum the '%s'\00", align 1
@200 = private unnamed_addr constant [10 x i8] c"copy_from\00", align 1
@201 = private unnamed_addr constant [10 x i8] c"move_from\00", align 1
@202 = private unnamed_addr constant [10 x i8] c"fill_with\00", align 1
@203 = private unnamed_addr constant [7 x i8] c"resize\00", align 1
@204 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@205 = private unnamed_addr constant [28 x i8] c"intrinsic %s is not defined\00", align 1
@206 = private unnamed_addr constant [38 x i8] c"Cannot get property '%s' of type '%s'\00", align 1
@207 = private unnamed_addr constant [53 x i8] c"Expected type '%s' from first case but got type '%s'\00", align 1
@208 = private unnamed_addr constant [122 x i8] c"No operator overload for indexing operator on %s object please implement method __getitem__ to use indexing in this class\00", align 1
@209 = private unnamed_addr constant [35 x i8] c"Expected an integer type for index\00", align 1
@210 = private unnamed_addr constant [87 x i8] c"Expected an unsigned integer for tuple index but index value is '%s' (which is signed)\00", align 1
@211 = private unnamed_addr constant [41 x i8] c"Expected an constant int for tuple index\00", align 1
@212 = private unnamed_addr constant [37 x i8] c"Index out of range for tuple type %s\00", align 1
@213 = private unnamed_addr constant [39 x i8] c"Cannot index into a value of type '%s'\00", align 1
@214 = private unnamed_addr constant [47 x i8] c"Expected a function type for call but got '%s'\00", align 1
@215 = private unnamed_addr constant [52 x i8] c"Expected %u argument(s) on function call but got %u\00", align 1
@216 = private unnamed_addr constant [63 x i8] c"Expected type '%s' but got type '%s' as function call argument\00", align 1
@217 = private unnamed_addr constant [58 x i8] c"Expected argument %u to be of type '%s' but got type '%s'\00", align 1
@218 = private unnamed_addr constant [66 x i8] c"Expected argument 1 to be of type to be of a pointer but got '%s'\00", align 1
@219 = private unnamed_addr constant [49 x i8] c"Expected 2 arguments on function call but got %u\00", align 1
@220 = private unnamed_addr constant [49 x i8] c"Expected 3 arguments on function call but got %u\00", align 1
@221 = private unnamed_addr constant [7 x i8] c"3.4E38\00", align 1
@222 = private unnamed_addr constant [32 x i8] c"Cannot match on constant 'null'\00", align 1
@223 = private unnamed_addr constant [85 x i8] c"Operator overload == for '%s' should return a boolean to be used in match expression\00", align 1
@224 = private unnamed_addr constant [67 x i8] c"Expected type '%s' from match expression subject but got type '%s'\00", align 1
@225 = private unnamed_addr constant [57 x i8] c"Expected match case block to yield '%s' but yielded '%s'\00", align 1
@226 = private unnamed_addr constant [56 x i8] c"Non-exhaustable match expression, expected an else-case\00", align 1
@227 = private unnamed_addr constant [62 x i8] c"Expected match else-case block to yield '%s' but yielded '%s'\00", align 1
@228 = private unnamed_addr constant [26 x i8] c"Variable '%s' has no type\00", align 1
@229 = private unnamed_addr constant [70 x i8] c"Cannot declare a value as null without any type hint for future usage\00", align 1
@230 = private unnamed_addr constant [61 x i8] c"Expected type '%s' but got type '%s' on variable declaration\00", align 1
@231 = private unnamed_addr constant [39 x i8] c"Cannot declare a variable of type void\00", align 1
@232 = private unnamed_addr constant [57 x i8] c"Illegal re-declaration of already declared variable '%s'\00", align 1
@233 = private unnamed_addr constant [49 x i8] c"Cannot assign a non-constant value to a constant\00", align 1
@234 = private unnamed_addr constant [58 x i8] c"Expected type '%s' but got type '%s' on const declaration\00", align 1
@235 = private unnamed_addr constant [36 x i8] c"Cannot declare a const of type void\00", align 1
@236 = private unnamed_addr constant [29 x i8] c"Iterator has to be an object\00", align 1
@237 = private unnamed_addr constant [47 x i8] c"Iterator type has to have __iter__ as property\00", align 1
@238 = private unnamed_addr constant [7 x i8] c"tmp_it\00", align 1
@239 = private unnamed_addr constant [30 x i8] c"Illegal break outside of loop\00", align 1
@240 = private unnamed_addr constant [33 x i8] c"Illegal continue outside of loop\00", align 1
@241 = private unnamed_addr constant [57 x i8] c"Expected return type of '%s' but got return type of '%s'\00", align 1
@242 = private unnamed_addr constant [33 x i8] c"Function return type is not void\00", align 1
@243 = private unnamed_addr constant [9 x i8] c"%u;%d;%u\00", align 1
@244 = private unnamed_addr constant [33 x i8] c"Type could not be code generated\00", align 1
@245 = private unnamed_addr constant [8 x i8] c"realloc\00", align 1
@246 = private unnamed_addr constant [7 x i8] c"memcmp\00", align 1
@247 = private unnamed_addr constant [6 x i8] c"%s {\0A\00", align 1
@248 = private unnamed_addr constant [7 x i8] c" ... }\00", align 1
@249 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@250 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@251 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@252 = private unnamed_addr constant [13 x i8] c" '%s': %s, \0A\00", align 1
@253 = private unnamed_addr constant [11 x i8] c"<function>\00", align 1
@254 = private unnamed_addr constant [18 x i8] c"String_from_bytes\00", align 1
@255 = private unnamed_addr constant [55 x i8] c"Could not find function 'String.from_bytes' in program\00", align 1
@256 = private unnamed_addr constant [55 x i8] c"Array expression is not a constant (codegen_array_exp)\00", align 1
@257 = private unnamed_addr constant [55 x i8] c"Array expression is not a constant (codegen_tuple_exp)\00", align 1
@258 = private unnamed_addr constant [46 x i8] c"This should never happen! (get_expr_mem: var)\00", align 1
@259 = private unnamed_addr constant [9 x i8] c"%s;%d;%u\00", align 1
@260 = private unnamed_addr constant [10 x i8] c"memberidx\00", align 1
@261 = private unnamed_addr constant [7 x i8] c"buffer\00", align 1
@262 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@263 = private unnamed_addr constant [12 x i8] c"llvm.pow.%s\00", align 1
@264 = private unnamed_addr constant [34 x i8] c"Unknown bin expression case case!\00", align 1
@265 = private unnamed_addr constant [11 x i8] c"incdec.ptr\00", align 1
@266 = private unnamed_addr constant [51 x i8] c"This should never happen; (codegen_var_access_exp)\00", align 1
@267 = private unnamed_addr constant [11 x i8] c"true_block\00", align 1
@268 = private unnamed_addr constant [12 x i8] c"false_block\00", align 1
@269 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@270 = private unnamed_addr constant [8 x i8] c"ternary\00", align 1
@271 = private unnamed_addr constant [11 x i8] c"match.else\00", align 1
@272 = private unnamed_addr constant [10 x i8] c"match.end\00", align 1
@273 = private unnamed_addr constant [11 x i8] c"match.case\00", align 1
@274 = private unnamed_addr constant [16 x i8] c"match.case.else\00", align 1
@275 = private unnamed_addr constant [15 x i8] c"match.phi.node\00", align 1
@276 = private unnamed_addr constant [52 x i8] c"this should not happen; (codegen_member_exp); class\00", align 1
@277 = private unnamed_addr constant [60 x i8] c"This should never happen; (codegen_member_expr; class prop)\00", align 1
@278 = private unnamed_addr constant [51 x i8] c"this should not happen; (codegen_member_exp); enum\00", align 1
@279 = private unnamed_addr constant [11 x i8] c"to_cstring\00", align 1
@280 = private unnamed_addr constant [22 x i8] c"instrinsic not found!\00", align 1
@281 = private unnamed_addr constant [9 x i8] c"if.entry\00", align 1
@282 = private unnamed_addr constant [6 x i8] c"ifend\00", align 1
@283 = private unnamed_addr constant [10 x i8] c"for.entry\00", align 1
@284 = private unnamed_addr constant [9 x i8] c"for.cond\00", align 1
@285 = private unnamed_addr constant [9 x i8] c"for.body\00", align 1
@286 = private unnamed_addr constant [9 x i8] c"for.incr\00", align 1
@287 = private unnamed_addr constant [8 x i8] c"for.end\00", align 1
@288 = private unnamed_addr constant [12 x i8] c"while.entry\00", align 1
@289 = private unnamed_addr constant [10 x i8] c"while.end\00", align 1
@290 = private unnamed_addr constant [48 x i8] c"Could not find constructor for constructor call\00", align 1
@291 = private unnamed_addr constant [15 x i8] c"%s_constructor\00", align 1
@292 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@293 = private unnamed_addr constant [9 x i8] c"%s_names\00", align 1
@294 = private unnamed_addr constant [4 x i8] c"exe\00", align 1
@295 = private unnamed_addr constant [14 x i8] c"/tmp/output.o\00", align 1
@296 = private unnamed_addr constant [5 x i8] c"-l%s\00", align 1
@297 = private unnamed_addr constant [11 x i8] c"-target %s\00", align 1
@298 = private unnamed_addr constant [79 x i8] c"FlagString {\0A 'name': %s, \0A 'value': %s, \0A 'description': %s, \0A 'type': %s, \0A}\00", align 1
@299 = private unnamed_addr constant [37 x i8] c"%s -no-pie %s /tmp/output.o %s -o %s\00", align 1
@300 = private unnamed_addr constant [8 x i8] c"llvm-ir\00", align 1
@301 = private unnamed_addr constant [8 x i8] c"llvm-bc\00", align 1
@302 = private unnamed_addr constant [4 x i8] c"obj\00", align 1
@303 = private unnamed_addr constant [4 x i8] c"asm\00", align 1

; Function Attrs: nofree
declare void @system(ptr nocapture noundef readonly) local_unnamed_addr #0

define i64 @main(i64 %0, ptr nocapture readonly %1) local_unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %engine.i = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca %CodeGen, align 8
  %10 = alloca %TypeChecker, align 8
  %11 = alloca ptr, align 8
  %12 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %12, ptr noundef nonnull align 8 dereferenceable(5) @20, i64 5, i1 false)
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i, align 4
  %14 = alloca %FlagBool, align 8
  %15 = tail call ptr @malloc(i32 1)
  store i8 104, ptr %15, align 8
  %16 = tail call ptr @malloc(i32 24)
  store ptr %15, ptr %16, align 8
  %memberidx1.i.i96 = getelementptr inbounds %String, ptr %16, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i96, align 4
  %memberidx2.i.i97 = getelementptr inbounds %String, ptr %16, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i97, align 4
  %17 = tail call ptr @malloc(i32 22)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(22) %17, ptr noundef nonnull align 8 dereferenceable(22) @21, i64 22, i1 false)
  %18 = tail call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  %memberidx1.i.i98 = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  store i64 22, ptr %memberidx1.i.i98, align 4
  %memberidx2.i.i99 = getelementptr inbounds %String, ptr %18, i64 0, i32 2
  store i64 22, ptr %memberidx2.i.i99, align 4
  store i64 1, ptr %14, align 8
  %memberidx1.i.i100 = getelementptr inbounds %Flag, ptr %14, i64 0, i32 1
  store ptr %16, ptr %memberidx1.i.i100, align 8
  %memberidx2.i.i101 = getelementptr inbounds %Flag, ptr %14, i64 0, i32 2
  store ptr %18, ptr %memberidx2.i.i101, align 8
  %19 = load i64, ptr @flags_length, align 8
  %20 = icmp slt i64 %19, 250
  br i1 %20, label %if.entry.i.i.i, label %FlagBool_constructor.exit

if.entry.i.i.i:                                   ; preds = %2
  %21 = add nsw i64 %19, 1
  store i64 %21, ptr @flags_length, align 8
  %22 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %19
  store ptr %14, ptr %22, align 8
  br label %FlagBool_constructor.exit

FlagBool_constructor.exit:                        ; preds = %2, %if.entry.i.i.i
  %memberidx.i = getelementptr inbounds %FlagBool, ptr %14, i64 0, i32 3
  store i1 false, ptr %memberidx.i, align 8
  %23 = alloca %FlagString, align 8
  %24 = call ptr @malloc(i32 5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %24, ptr noundef nonnull align 8 dereferenceable(5) @22, i64 5, i1 false)
  %25 = call ptr @malloc(i32 24)
  store ptr %24, ptr %25, align 8
  %memberidx1.i.i102 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i102, align 4
  %memberidx2.i.i103 = getelementptr inbounds %String, ptr %25, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i103, align 4
  %26 = call ptr @malloc(i32 275)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(275) %26, ptr noundef nonnull align 8 dereferenceable(275) @23, i64 275, i1 false)
  %27 = call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i104 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 275, ptr %memberidx1.i.i104, align 4
  %memberidx2.i.i105 = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 275, ptr %memberidx2.i.i105, align 4
  %28 = call ptr @malloc(i32 4)
  store i32 1667594341, ptr %28, align 8
  %29 = call ptr @malloc(i32 24)
  store ptr %28, ptr %29, align 8
  %memberidx1.i.i106 = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i106, align 4
  %memberidx2.i.i107 = getelementptr inbounds %String, ptr %29, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i107, align 4
  store i64 2, ptr %23, align 8
  %memberidx1.i.i108 = getelementptr inbounds %Flag, ptr %23, i64 0, i32 1
  store ptr %25, ptr %memberidx1.i.i108, align 8
  %memberidx2.i.i109 = getelementptr inbounds %Flag, ptr %23, i64 0, i32 2
  store ptr %27, ptr %memberidx2.i.i109, align 8
  %30 = load i64, ptr @flags_length, align 8
  %31 = icmp slt i64 %30, 250
  br i1 %31, label %if.entry.i.i.i110, label %FlagString_constructor.exit

if.entry.i.i.i110:                                ; preds = %FlagBool_constructor.exit
  %32 = add nsw i64 %30, 1
  store i64 %32, ptr @flags_length, align 8
  %33 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %30
  store ptr %23, ptr %33, align 8
  br label %FlagString_constructor.exit

FlagString_constructor.exit:                      ; preds = %FlagBool_constructor.exit, %if.entry.i.i.i110
  %memberidx.i111 = getelementptr inbounds %FlagString, ptr %23, i64 0, i32 3
  store ptr %29, ptr %memberidx.i111, align 8
  %34 = alloca %FlagString, align 8
  %35 = call ptr @malloc(i32 1)
  store i8 111, ptr %35, align 8
  %36 = call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i.i112 = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i112, align 4
  %memberidx2.i.i113 = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i113, align 4
  %37 = call ptr @malloc(i32 35)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %37, ptr noundef nonnull align 8 dereferenceable(35) @24, i64 35, i1 false)
  %38 = call ptr @malloc(i32 24)
  store ptr %37, ptr %38, align 8
  %memberidx1.i.i114 = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  store i64 35, ptr %memberidx1.i.i114, align 4
  %memberidx2.i.i115 = getelementptr inbounds %String, ptr %38, i64 0, i32 2
  store i64 35, ptr %memberidx2.i.i115, align 4
  %39 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %39, ptr noundef nonnull align 8 dereferenceable(6) @25, i64 6, i1 false)
  %40 = call ptr @malloc(i32 24)
  store ptr %39, ptr %40, align 8
  %memberidx1.i.i116 = getelementptr inbounds %String, ptr %40, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i116, align 4
  %memberidx2.i.i117 = getelementptr inbounds %String, ptr %40, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i117, align 4
  store i64 2, ptr %34, align 8
  %memberidx1.i.i118 = getelementptr inbounds %Flag, ptr %34, i64 0, i32 1
  store ptr %36, ptr %memberidx1.i.i118, align 8
  %memberidx2.i.i119 = getelementptr inbounds %Flag, ptr %34, i64 0, i32 2
  store ptr %38, ptr %memberidx2.i.i119, align 8
  %41 = load i64, ptr @flags_length, align 8
  %42 = icmp slt i64 %41, 250
  br i1 %42, label %if.entry.i.i.i120, label %FlagString_constructor.exit122

if.entry.i.i.i120:                                ; preds = %FlagString_constructor.exit
  %43 = add nsw i64 %41, 1
  store i64 %43, ptr @flags_length, align 8
  %44 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %41
  store ptr %34, ptr %44, align 8
  br label %FlagString_constructor.exit122

FlagString_constructor.exit122:                   ; preds = %FlagString_constructor.exit, %if.entry.i.i.i120
  %memberidx.i121 = getelementptr inbounds %FlagString, ptr %34, i64 0, i32 3
  store ptr %40, ptr %memberidx.i121, align 8
  %45 = alloca %FlagString, align 8
  %46 = call ptr @malloc(i32 1)
  store i8 73, ptr %46, align 8
  %47 = call ptr @malloc(i32 24)
  store ptr %46, ptr %47, align 8
  %memberidx1.i.i123 = getelementptr inbounds %String, ptr %47, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i123, align 4
  %memberidx2.i.i124 = getelementptr inbounds %String, ptr %47, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i124, align 4
  %48 = call ptr @malloc(i32 25)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(25) %48, ptr noundef nonnull align 8 dereferenceable(25) @26, i64 25, i1 false)
  %49 = call ptr @malloc(i32 24)
  store ptr %48, ptr %49, align 8
  %memberidx1.i.i125 = getelementptr inbounds %String, ptr %49, i64 0, i32 1
  store i64 25, ptr %memberidx1.i.i125, align 4
  %memberidx2.i.i126 = getelementptr inbounds %String, ptr %49, i64 0, i32 2
  store i64 25, ptr %memberidx2.i.i126, align 4
  %50 = call ptr @malloc(i32 19)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(19) %50, ptr noundef nonnull align 8 dereferenceable(19) @27, i64 19, i1 false)
  %51 = call ptr @malloc(i32 24)
  store ptr %50, ptr %51, align 8
  %memberidx1.i.i127 = getelementptr inbounds %String, ptr %51, i64 0, i32 1
  store i64 19, ptr %memberidx1.i.i127, align 4
  %memberidx2.i.i128 = getelementptr inbounds %String, ptr %51, i64 0, i32 2
  store i64 19, ptr %memberidx2.i.i128, align 4
  store i64 2, ptr %45, align 8
  %memberidx1.i.i129 = getelementptr inbounds %Flag, ptr %45, i64 0, i32 1
  store ptr %47, ptr %memberidx1.i.i129, align 8
  %memberidx2.i.i130 = getelementptr inbounds %Flag, ptr %45, i64 0, i32 2
  store ptr %49, ptr %memberidx2.i.i130, align 8
  %52 = load i64, ptr @flags_length, align 8
  %53 = icmp slt i64 %52, 250
  br i1 %53, label %if.entry.i.i.i131, label %FlagString_constructor.exit133

if.entry.i.i.i131:                                ; preds = %FlagString_constructor.exit122
  %54 = add nsw i64 %52, 1
  store i64 %54, ptr @flags_length, align 8
  %55 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %52
  store ptr %45, ptr %55, align 8
  br label %FlagString_constructor.exit133

FlagString_constructor.exit133:                   ; preds = %FlagString_constructor.exit122, %if.entry.i.i.i131
  %memberidx.i132 = getelementptr inbounds %FlagString, ptr %45, i64 0, i32 3
  store ptr %51, ptr %memberidx.i132, align 8
  %56 = alloca %FlagString, align 8
  %57 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %57, ptr noundef nonnull align 8 dereferenceable(7) @28, i64 7, i1 false)
  %58 = call ptr @malloc(i32 24)
  store ptr %57, ptr %58, align 8
  %memberidx1.i.i134 = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i134, align 4
  %memberidx2.i.i135 = getelementptr inbounds %String, ptr %58, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i135, align 4
  %59 = call ptr @malloc(i32 33)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %59, ptr noundef nonnull align 8 dereferenceable(33) @29, i64 33, i1 false)
  %60 = call ptr @malloc(i32 24)
  store ptr %59, ptr %60, align 8
  %memberidx1.i.i136 = getelementptr inbounds %String, ptr %60, i64 0, i32 1
  store i64 33, ptr %memberidx1.i.i136, align 4
  %memberidx2.i.i137 = getelementptr inbounds %String, ptr %60, i64 0, i32 2
  store i64 33, ptr %memberidx2.i.i137, align 4
  %61 = call ptr @LLVMGetDefaultTargetTriple()
  %62 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %61)
  %63 = trunc i64 %62 to i32
  %64 = call ptr @malloc(i32 %63)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %64, ptr align 8 %61, i64 %62, i1 false)
  %65 = call ptr @malloc(i32 24)
  store ptr %64, ptr %65, align 8
  %memberidx1.i.i138 = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  store i64 %62, ptr %memberidx1.i.i138, align 4
  %memberidx2.i.i139 = getelementptr inbounds %String, ptr %65, i64 0, i32 2
  store i64 %62, ptr %memberidx2.i.i139, align 4
  store i64 2, ptr %56, align 8
  %memberidx1.i.i140 = getelementptr inbounds %Flag, ptr %56, i64 0, i32 1
  store ptr %58, ptr %memberidx1.i.i140, align 8
  %memberidx2.i.i141 = getelementptr inbounds %Flag, ptr %56, i64 0, i32 2
  store ptr %60, ptr %memberidx2.i.i141, align 8
  %66 = load i64, ptr @flags_length, align 8
  %67 = icmp slt i64 %66, 250
  br i1 %67, label %if.entry.i.i.i142, label %FlagString_constructor.exit144

if.entry.i.i.i142:                                ; preds = %FlagString_constructor.exit133
  %68 = add nsw i64 %66, 1
  store i64 %68, ptr @flags_length, align 8
  %69 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %66
  store ptr %56, ptr %69, align 8
  br label %FlagString_constructor.exit144

FlagString_constructor.exit144:                   ; preds = %FlagString_constructor.exit133, %if.entry.i.i.i142
  %memberidx.i143 = getelementptr inbounds %FlagString, ptr %56, i64 0, i32 3
  store ptr %65, ptr %memberidx.i143, align 8
  %70 = alloca %FlagString, align 8
  %71 = call ptr @malloc(i32 1)
  store i8 108, ptr %71, align 8
  %72 = call ptr @malloc(i32 24)
  store ptr %71, ptr %72, align 8
  %memberidx1.i.i145 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i145, align 4
  %memberidx2.i.i146 = getelementptr inbounds %String, ptr %72, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i146, align 4
  %73 = call ptr @malloc(i32 68)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %73, ptr noundef nonnull align 8 dereferenceable(68) @30, i64 68, i1 false)
  %74 = call ptr @malloc(i32 24)
  store ptr %73, ptr %74, align 8
  %memberidx1.i.i147 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  store i64 68, ptr %memberidx1.i.i147, align 4
  %memberidx2.i.i148 = getelementptr inbounds %String, ptr %74, i64 0, i32 2
  store i64 68, ptr %memberidx2.i.i148, align 4
  store i64 2, ptr %70, align 8
  %memberidx1.i.i149 = getelementptr inbounds %Flag, ptr %70, i64 0, i32 1
  store ptr %72, ptr %memberidx1.i.i149, align 8
  %memberidx2.i.i150 = getelementptr inbounds %Flag, ptr %70, i64 0, i32 2
  store ptr %74, ptr %memberidx2.i.i150, align 8
  %75 = load i64, ptr @flags_length, align 8
  %76 = icmp slt i64 %75, 250
  br i1 %76, label %if.entry.i.i.i151, label %FlagString_constructor.exit153

if.entry.i.i.i151:                                ; preds = %FlagString_constructor.exit144
  %77 = add nsw i64 %75, 1
  store i64 %77, ptr @flags_length, align 8
  %78 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %75
  store ptr %70, ptr %78, align 8
  br label %FlagString_constructor.exit153

FlagString_constructor.exit153:                   ; preds = %FlagString_constructor.exit144, %if.entry.i.i.i151
  %memberidx.i152 = getelementptr inbounds %FlagString, ptr %70, i64 0, i32 3
  store ptr null, ptr %memberidx.i152, align 8
  %79 = alloca %FlagInt, align 8
  %80 = call ptr @malloc(i32 1)
  store i8 79, ptr %80, align 8
  %81 = call ptr @malloc(i32 24)
  store ptr %80, ptr %81, align 8
  %memberidx1.i.i154 = getelementptr inbounds %String, ptr %81, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i154, align 4
  %memberidx2.i.i155 = getelementptr inbounds %String, ptr %81, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i155, align 4
  %82 = call ptr @malloc(i32 41)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(41) %82, ptr noundef nonnull align 8 dereferenceable(41) @31, i64 41, i1 false)
  %83 = call ptr @malloc(i32 24)
  store ptr %82, ptr %83, align 8
  %memberidx1.i.i156 = getelementptr inbounds %String, ptr %83, i64 0, i32 1
  store i64 41, ptr %memberidx1.i.i156, align 4
  %memberidx2.i.i157 = getelementptr inbounds %String, ptr %83, i64 0, i32 2
  store i64 41, ptr %memberidx2.i.i157, align 4
  store i64 0, ptr %79, align 8
  %memberidx1.i.i158 = getelementptr inbounds %Flag, ptr %79, i64 0, i32 1
  store ptr %81, ptr %memberidx1.i.i158, align 8
  %memberidx2.i.i159 = getelementptr inbounds %Flag, ptr %79, i64 0, i32 2
  store ptr %83, ptr %memberidx2.i.i159, align 8
  %84 = load i64, ptr @flags_length, align 8
  %85 = icmp slt i64 %84, 250
  br i1 %85, label %if.entry.i.i.i160, label %FlagInt_constructor.exit

if.entry.i.i.i160:                                ; preds = %FlagString_constructor.exit153
  %86 = add nsw i64 %84, 1
  store i64 %86, ptr @flags_length, align 8
  %87 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %84
  store ptr %79, ptr %87, align 8
  br label %FlagInt_constructor.exit

FlagInt_constructor.exit:                         ; preds = %FlagString_constructor.exit153, %if.entry.i.i.i160
  %memberidx.i161 = getelementptr inbounds %FlagInt, ptr %79, i64 0, i32 3
  store i64 1, ptr %memberidx.i161, align 8
  %88 = alloca %FlagBool, align 8
  %89 = call ptr @malloc(i32 1)
  store i8 118, ptr %89, align 8
  %90 = call ptr @malloc(i32 24)
  store ptr %89, ptr %90, align 8
  %memberidx1.i.i162 = getelementptr inbounds %String, ptr %90, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i162, align 4
  %memberidx2.i.i163 = getelementptr inbounds %String, ptr %90, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i163, align 4
  %91 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %91, ptr noundef nonnull align 8 dereferenceable(12) @32, i64 12, i1 false)
  %92 = call ptr @malloc(i32 24)
  store ptr %91, ptr %92, align 8
  %memberidx1.i.i164 = getelementptr inbounds %String, ptr %92, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i164, align 4
  %memberidx2.i.i165 = getelementptr inbounds %String, ptr %92, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i165, align 4
  store i64 1, ptr %88, align 8
  %memberidx1.i.i166 = getelementptr inbounds %Flag, ptr %88, i64 0, i32 1
  store ptr %90, ptr %memberidx1.i.i166, align 8
  %memberidx2.i.i167 = getelementptr inbounds %Flag, ptr %88, i64 0, i32 2
  store ptr %92, ptr %memberidx2.i.i167, align 8
  %93 = load i64, ptr @flags_length, align 8
  %94 = icmp slt i64 %93, 250
  br i1 %94, label %if.entry.i.i.i168, label %FlagBool_constructor.exit170

if.entry.i.i.i168:                                ; preds = %FlagInt_constructor.exit
  %95 = add nsw i64 %93, 1
  store i64 %95, ptr @flags_length, align 8
  %96 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %93
  store ptr %88, ptr %96, align 8
  br label %FlagBool_constructor.exit170

FlagBool_constructor.exit170:                     ; preds = %FlagInt_constructor.exit, %if.entry.i.i.i168
  %memberidx.i169 = getelementptr inbounds %FlagBool, ptr %88, i64 0, i32 3
  store i1 false, ptr %memberidx.i169, align 8
  %97 = call fastcc ptr @parse_flags(i64 %0, ptr %1)
  %98 = load i1, ptr %memberidx.i169, align 8
  br i1 %98, label %if.entry, label %ifend

common.ret:                                       ; preds = %TypeChecker_check.exit, %ifend20, %ifend15, %ifend33, %if.entry13, %if.entry9, %if.entry5, %if.entry2, %if.entry
  %common.ret.op = phi i64 [ 0, %if.entry ], [ 0, %if.entry2 ], [ 1, %if.entry5 ], [ 1, %if.entry9 ], [ 1, %if.entry13 ], [ %code.0, %ifend33 ], [ 1, %ifend15 ], [ 1, %ifend20 ], [ 1, %TypeChecker_check.exit ]
  ret i64 %common.ret.op

if.entry:                                         ; preds = %FlagBool_constructor.exit170
  %99 = call i64 @write(i64 1, ptr nonnull %12, i64 5)
  %100 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr nonnull %12)
  call void @free(ptr nonnull %13)
  br label %common.ret

ifend:                                            ; preds = %FlagBool_constructor.exit170
  %101 = load i1, ptr %memberidx.i, align 8
  br i1 %101, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %102 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %102, ptr noundef nonnull align 8 dereferenceable(7) @34, i64 7, i1 false)
  %103 = call ptr @malloc(i32 24)
  %104 = call i64 @write(i64 1, ptr %102, i64 7)
  call void @free(ptr %102)
  call void @free(ptr %103)
  %105 = load ptr, ptr %1, align 8
  %106 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %105)
  %107 = trunc i64 %106 to i32
  %108 = call ptr @malloc(i32 %107)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %108, ptr align 8 %105, i64 %106, i1 false)
  %109 = call ptr @malloc(i32 24)
  %110 = call i64 @write(i64 1, ptr %108, i64 %106)
  call void @free(ptr %108)
  call void @free(ptr %109)
  %111 = call ptr @malloc(i32 29)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %111, ptr noundef nonnull align 8 dereferenceable(29) @35, i64 29, i1 false)
  %112 = call ptr @malloc(i32 24)
  %113 = call i64 @write(i64 1, ptr %111, i64 29)
  %114 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %111)
  call void @free(ptr %112)
  call fastcc void @print_flags()
  br label %common.ret

ifend4:                                           ; preds = %ifend
  %115 = icmp eq ptr %97, null
  br i1 %115, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend4
  %116 = call ptr @malloc(i32 24)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %116, ptr noundef nonnull align 8 dereferenceable(24) @38, i64 24, i1 false)
  %117 = call ptr @malloc(i32 24)
  store ptr %116, ptr %117, align 8
  %memberidx1.i.i179 = getelementptr inbounds %String, ptr %117, i64 0, i32 1
  store i64 24, ptr %memberidx1.i.i179, align 4
  %memberidx2.i.i180 = getelementptr inbounds %String, ptr %117, i64 0, i32 2
  store i64 24, ptr %memberidx2.i.i180, align 4
  call fastcc void @print_message_error(i64 4, ptr nonnull %117)
  br label %common.ret

ifend7:                                           ; preds = %ifend4
  %118 = tail call ptr @malloc(i32 56)
  %memberidx.i181 = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 4
  %119 = call ptr @malloc(i32 24)
  %memberidx.i.i182 = getelementptr inbounds %Array_FloFile_, ptr %119, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i182, align 4
  %memberidx1.i.i183 = getelementptr inbounds %Array_FloFile_, ptr %119, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i183, align 4
  %120 = call ptr @malloc(i32 64)
  store ptr %120, ptr %119, align 8
  store i64 0, ptr %memberidx.i.i182, align 4
  store ptr %119, ptr %memberidx.i181, align 8
  store ptr null, ptr %118, align 8
  %memberidx4.i = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 2
  store ptr null, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 5
  %121 = call ptr @malloc(i32 24)
  %memberidx.i13.i = getelementptr inbounds %Array_FloError_, ptr %121, i64 0, i32 1
  store i64 0, ptr %memberidx.i13.i, align 4
  %memberidx1.i14.i = getelementptr inbounds %Array_FloError_, ptr %121, i64 0, i32 2
  store i64 8, ptr %memberidx1.i14.i, align 4
  %122 = call ptr @malloc(i32 64)
  store ptr %122, ptr %121, align 8
  store i64 0, ptr %memberidx.i13.i, align 4
  store ptr %121, ptr %memberidx5.i, align 8
  %123 = call ptr @malloc(i32 24)
  %124 = call ptr @malloc(i32 2048)
  store ptr %124, ptr %123, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %ifend7, %for.body.i.i
  %i.0.i.i494 = phi i64 [ 0, %ifend7 ], [ %127, %for.body.i.i ]
  %125 = load ptr, ptr %123, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %i.0.i.i494
  store ptr null, ptr %126, align 8
  %127 = add nuw nsw i64 %i.0.i.i494, 1
  %128 = icmp ult i64 %i.0.i.i494, 255
  br i1 %128, label %for.body.i.i, label %Compiler_constructor.exit

Compiler_constructor.exit:                        ; preds = %for.body.i.i
  %memberidx8.i = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 6
  %memberidx2.i.i184 = getelementptr inbounds %Map_String_FileId_, ptr %123, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i184, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_String_FileId_, ptr %123, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %123, ptr %memberidx8.i, align 8
  %129 = load ptr, ptr %memberidx.i132, align 8
  %memberidx.i.i.i185 = getelementptr inbounds %String, ptr %129, i64 0, i32 1
  %130 = load i64, ptr %memberidx.i.i.i185, align 4
  %131 = trunc i64 %130 to i32
  %132 = add i32 %131, 1
  %133 = call ptr @malloc(i32 %132)
  %134 = load ptr, ptr %129, align 8
  %135 = load i64, ptr %memberidx.i.i.i185, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %133, ptr align 8 %134, i64 %135, i1 false)
  %136 = getelementptr inbounds i8, ptr %133, i64 %135
  store i8 0, ptr %136, align 1
  %137 = call i64 @access(ptr %133, i64 0)
  %138 = icmp eq i64 %137, 0
  call void @free(ptr %133)
  br i1 %138, label %ifend.i, label %if.entry9

ifend.i:                                          ; preds = %Compiler_constructor.exit
  %memberidx.i186 = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 1
  store ptr %129, ptr %memberidx.i186, align 8
  %139 = call ptr @malloc(i32 21)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %139, ptr noundef nonnull align 8 dereferenceable(21) @7, i64 21, i1 false)
  %140 = call ptr @malloc(i32 24)
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11)
  %141 = load i64, ptr %memberidx.i.i.i185, align 4
  %142 = trunc i64 %141 to i32
  %143 = add i32 %142, 1
  %144 = call ptr @malloc(i32 %143)
  %145 = load ptr, ptr %129, align 8
  %146 = load i64, ptr %memberidx.i.i.i185, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %144, ptr align 8 %145, i64 %146, i1 false)
  %147 = getelementptr inbounds i8, ptr %144, i64 %146
  store i8 0, ptr %147, align 1
  %148 = call ptr @malloc(i32 22)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %148, ptr noundef nonnull align 8 dereferenceable(21) %139, i64 21, i1 false)
  %149 = getelementptr inbounds i8, ptr %148, i64 21
  store i8 0, ptr %149, align 1
  %150 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %11, ptr nonnull @8, ptr %144, ptr %148)
  %151 = load ptr, ptr %11, align 8
  %152 = call ptr @malloc(i32 24)
  store ptr %151, ptr %152, align 8
  %memberidx1.i.i7.i = getelementptr inbounds %String, ptr %152, i64 0, i32 1
  store i64 %150, ptr %memberidx1.i.i7.i, align 4
  %memberidx2.i.i8.i = getelementptr inbounds %String, ptr %152, i64 0, i32 2
  store i64 %150, ptr %memberidx2.i.i8.i, align 4
  call void @free(ptr %144)
  call void @free(ptr %148)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11)
  store ptr %152, ptr %memberidx1.i, align 8
  call void @free(ptr %139)
  call void @free(ptr %140)
  %153 = call fastcc ptr @Compiler_register_file(ptr nonnull %118, ptr nonnull %97)
  %154 = call fastcc i1 @Compiler_set_current_file(ptr nonnull %118, ptr %153)
  br i1 %154, label %ifend15, label %if.entry13

if.entry9:                                        ; preds = %Compiler_constructor.exit
  %155 = load ptr, ptr %memberidx.i132, align 8
  %memberidx.i187 = getelementptr inbounds %String, ptr %155, i64 0, i32 1
  %156 = load i64, ptr %memberidx.i187, align 4
  %157 = trunc i64 %156 to i32
  %158 = add i32 %157, 1
  %159 = call ptr @malloc(i32 %158)
  %160 = load ptr, ptr %155, align 8
  %161 = load i64, ptr %memberidx.i187, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %159, ptr align 8 %160, i64 %161, i1 false)
  %162 = getelementptr inbounds i8, ptr %159, i64 %161
  store i8 0, ptr %162, align 1
  %163 = alloca ptr, align 8
  %164 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %163, ptr nonnull @39, ptr %159)
  %165 = load ptr, ptr %163, align 8
  %166 = tail call ptr @malloc(i32 24)
  store ptr %165, ptr %166, align 8
  %memberidx1.i188 = getelementptr inbounds %String, ptr %166, i64 0, i32 1
  store i64 %164, ptr %memberidx1.i188, align 4
  %memberidx2.i189 = getelementptr inbounds %String, ptr %166, i64 0, i32 2
  store i64 %164, ptr %memberidx2.i189, align 4
  tail call void @free(ptr %159)
  call fastcc void @print_message_error(i64 3, ptr nonnull %166)
  br label %common.ret

if.entry13:                                       ; preds = %ifend.i
  %memberidx.i190 = getelementptr inbounds %String, ptr %97, i64 0, i32 1
  %167 = load i64, ptr %memberidx.i190, align 4
  %168 = trunc i64 %167 to i32
  %169 = add i32 %168, 1
  %170 = call ptr @malloc(i32 %169)
  %171 = load ptr, ptr %97, align 8
  %172 = load i64, ptr %memberidx.i190, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %170, ptr align 8 %171, i64 %172, i1 false)
  %173 = getelementptr inbounds i8, ptr %170, i64 %172
  store i8 0, ptr %173, align 1
  %174 = alloca ptr, align 8
  %175 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %174, ptr nonnull @40, ptr %170)
  %176 = load ptr, ptr %174, align 8
  %177 = tail call ptr @malloc(i32 24)
  store ptr %176, ptr %177, align 8
  %memberidx1.i191 = getelementptr inbounds %String, ptr %177, i64 0, i32 1
  store i64 %175, ptr %memberidx1.i191, align 4
  %memberidx2.i192 = getelementptr inbounds %String, ptr %177, i64 0, i32 2
  store i64 %175, ptr %memberidx2.i192, align 4
  tail call void @free(ptr %170)
  call fastcc void @print_message_error(i64 3, ptr nonnull %177)
  br label %common.ret

ifend15:                                          ; preds = %ifend.i
  %178 = load ptr, ptr %memberidx4.i, align 8
  %179 = load ptr, ptr %memberidx5.i, align 8
  %180 = call fastcc ptr @Lexer_tokenize(ptr %178, ptr %179)
  %181 = call fastcc i1 @Compiler_print_errors(ptr nonnull %118)
  br i1 %181, label %common.ret, label %ifend20

ifend20:                                          ; preds = %ifend15
  %182 = load ptr, ptr %memberidx5.i, align 8
  %183 = call fastcc ptr @Parser_parse(ptr %180, ptr %182)
  %184 = call fastcc i1 @Compiler_print_errors(ptr nonnull %118)
  br i1 %184, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend20
  call void @llvm.lifetime.start.p0(i64 58, ptr nonnull %10)
  %memberidx.i.i193 = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 5
  store ptr %118, ptr %memberidx.i.i193, align 8
  %memberidx1.i.i194 = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 6
  store i1 false, ptr %memberidx1.i.i194, align 8
  %185 = call ptr @malloc(i32 8)
  %186 = call ptr @malloc(i32 24)
  %memberidx.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %186, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Array_Module_, ptr %186, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i.i, align 4
  %187 = call ptr @malloc(i32 64)
  store ptr %187, ptr %186, align 8
  store i64 0, ptr %memberidx.i.i.i.i, align 4
  store ptr %186, ptr %185, align 8
  store ptr %185, ptr %10, align 8
  %188 = call ptr @malloc(i32 24)
  %189 = call ptr @malloc(i32 2048)
  store ptr %189, ptr %188, align 8
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %ifend24, %for.body.i.i.i
  %i.0.i.i.i493 = phi i64 [ 0, %ifend24 ], [ %192, %for.body.i.i.i ]
  %190 = load ptr, ptr %188, align 8
  %191 = getelementptr inbounds ptr, ptr %190, i64 %i.0.i.i.i493
  store ptr null, ptr %191, align 8
  %192 = add nuw nsw i64 %i.0.i.i.i493, 1
  %193 = icmp ult i64 %i.0.i.i.i493, 255
  br i1 %193, label %for.body.i.i.i, label %TypeChecker_constructor.exit.i

TypeChecker_constructor.exit.i:                   ; preds = %for.body.i.i.i
  %memberidx3.i.i196 = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 8
  %memberidx2.i7.i.i = getelementptr inbounds %Map_String_Generic_, ptr %188, i64 0, i32 1
  store i64 256, ptr %memberidx2.i7.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %Map_String_Generic_, ptr %188, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i.i, align 4
  store ptr %188, ptr %memberidx3.i.i196, align 8
  %194 = load ptr, ptr %memberidx.i.i193, align 8
  %195 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %195, ptr noundef nonnull align 8 dereferenceable(12) @99, i64 12, i1 false)
  %196 = call ptr @malloc(i32 24)
  store ptr %195, ptr %196, align 8
  %memberidx1.i.i.i13.i = getelementptr inbounds %String, ptr %196, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i.i13.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %String, ptr %196, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i.i.i, align 4
  %197 = call fastcc ptr @Compiler_register_file(ptr %194, ptr nonnull %196)
  %198 = call ptr @malloc(i32 56)
  call fastcc void @ModuleAST_constructor(ptr %198)
  %199 = call ptr @malloc(i32 12)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %199, ptr noundef nonnull align 8 dereferenceable(12) @99, i64 12, i1 false)
  %200 = call ptr @malloc(i32 24)
  store ptr %199, ptr %200, align 8
  %memberidx1.i.i2.i.i = getelementptr inbounds %String, ptr %200, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i2.i.i, align 4
  %memberidx2.i.i3.i.i = getelementptr inbounds %String, ptr %200, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i3.i.i, align 4
  %201 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %10, ptr %198, ptr nonnull %200)
  %202 = load ptr, ptr %memberidx.i.i193, align 8
  %memberidx1.i15.i = getelementptr inbounds %Compiler, ptr %202, i64 0, i32 3
  %203 = load ptr, ptr %memberidx1.i15.i, align 8
  %204 = call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr nonnull %10, ptr %203, ptr null)
  %205 = load ptr, ptr %memberidx.i.i193, align 8
  %memberidx1.i17.i = getelementptr inbounds %Compiler, ptr %205, i64 0, i32 5
  %206 = load ptr, ptr %memberidx1.i17.i, align 8
  %memberidx2.i.i197 = getelementptr inbounds %Array_FloError_, ptr %206, i64 0, i32 1
  %207 = load i64, ptr %memberidx2.i.i197, align 4
  %208 = icmp sgt i64 %207, 0
  br i1 %208, label %TypeChecker_check.exit, label %ifend.i198

ifend.i198:                                       ; preds = %TypeChecker_constructor.exit.i
  %memberidx.i18.i = getelementptr inbounds %TypeChecker, ptr %10, i64 0, i32 4
  %209 = load ptr, ptr %10, align 8
  %210 = load ptr, ptr %209, align 8
  %211 = load ptr, ptr %210, align 8
  %212 = load ptr, ptr %211, align 8
  %memberidx1.i19.i = getelementptr inbounds %Module, ptr %212, i64 0, i32 5
  %213 = load ptr, ptr %memberidx1.i19.i, align 8
  store ptr %213, ptr %memberidx.i18.i, align 8
  %214 = load ptr, ptr %209, align 8
  %215 = load ptr, ptr %214, align 8
  %216 = getelementptr inbounds ptr, ptr %215, i64 1
  %217 = load ptr, ptr %216, align 8
  call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %10, ptr %217)
  %218 = load ptr, ptr %memberidx.i.i193, align 8
  %memberidx1.i21.i = getelementptr inbounds %Compiler, ptr %218, i64 0, i32 5
  %219 = load ptr, ptr %memberidx1.i21.i, align 8
  %memberidx2.i22.i = getelementptr inbounds %Array_FloError_, ptr %219, i64 0, i32 1
  %220 = load i64, ptr %memberidx2.i22.i, align 4
  %221 = icmp sgt i64 %220, 0
  br i1 %221, label %TypeChecker_check.exit, label %ifend3.i

ifend3.i:                                         ; preds = %ifend.i198
  %222 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %10, ptr %183, ptr nonnull %97)
  %223 = load ptr, ptr %10, align 8
  br label %TypeChecker_check.exit

TypeChecker_check.exit:                           ; preds = %TypeChecker_constructor.exit.i, %ifend.i198, %ifend3.i
  %common.ret.op.i = phi ptr [ %223, %ifend3.i ], [ null, %TypeChecker_constructor.exit.i ], [ null, %ifend.i198 ]
  call void @llvm.lifetime.end.p0(i64 58, ptr nonnull %10)
  %224 = call fastcc i1 @Compiler_print_errors(ptr nonnull %118)
  br i1 %224, label %common.ret, label %ifend27

ifend27:                                          ; preds = %TypeChecker_check.exit
  call void @llvm.lifetime.start.p0(i64 81, ptr nonnull %9)
  %225 = load ptr, ptr %common.ret.op.i, align 8
  %226 = load ptr, ptr %225, align 8
  %227 = getelementptr inbounds ptr, ptr %226, i64 2
  %228 = load ptr, ptr %227, align 8
  %229 = load ptr, ptr %228, align 8
  %memberidx.i.i199 = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 4
  store ptr %common.ret.op.i, ptr %memberidx.i.i199, align 8
  %230 = call ptr @malloc(i32 24)
  %231 = call ptr @malloc(i32 2048)
  store ptr %231, ptr %230, align 8
  br label %for.body.i.i.i202

for.body.i.i.i202:                                ; preds = %ifend27, %for.body.i.i.i202
  %i.0.i.i.i200492 = phi i64 [ 0, %ifend27 ], [ %234, %for.body.i.i.i202 ]
  %232 = load ptr, ptr %230, align 8
  %233 = getelementptr inbounds ptr, ptr %232, i64 %i.0.i.i.i200492
  store ptr null, ptr %233, align 8
  %234 = add nuw nsw i64 %i.0.i.i.i200492, 1
  %235 = icmp ult i64 %i.0.i.i.i200492, 255
  br i1 %235, label %for.body.i.i.i202, label %Map_String_LLVMValueRef__constructor.exit.i.i

Map_String_LLVMValueRef__constructor.exit.i.i:    ; preds = %for.body.i.i.i202
  %memberidx1.i79.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 6
  %memberidx2.i.i.i203 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %230, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i.i203, align 4
  %memberidx3.i.i.i204 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %230, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i.i204, align 4
  store ptr %230, ptr %memberidx1.i79.i, align 8
  %236 = call ptr @malloc(i32 24)
  %237 = call ptr @malloc(i32 2048)
  store ptr %237, ptr %236, align 8
  br label %for.body.i21.i.i

for.body.i21.i.i:                                 ; preds = %Map_String_LLVMValueRef__constructor.exit.i.i, %for.body.i21.i.i
  %i.0.i19.i.i491 = phi i64 [ 0, %Map_String_LLVMValueRef__constructor.exit.i.i ], [ %240, %for.body.i21.i.i ]
  %238 = load ptr, ptr %236, align 8
  %239 = getelementptr inbounds ptr, ptr %238, i64 %i.0.i19.i.i491
  store ptr null, ptr %239, align 8
  %240 = add nuw nsw i64 %i.0.i19.i.i491, 1
  %241 = icmp ult i64 %i.0.i19.i.i491, 255
  br i1 %241, label %for.body.i21.i.i, label %Map_String_LLVMValueRef__constructor.exit24.i.i

Map_String_LLVMValueRef__constructor.exit24.i.i:  ; preds = %for.body.i21.i.i
  %memberidx2.i.i205 = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 7
  %memberidx2.i22.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %236, i64 0, i32 1
  store i64 256, ptr %memberidx2.i22.i.i, align 4
  %memberidx3.i23.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %236, i64 0, i32 2
  store i64 0, ptr %memberidx3.i23.i.i, align 4
  store ptr %236, ptr %memberidx2.i.i205, align 8
  %242 = call ptr @malloc(i32 24)
  %243 = call ptr @malloc(i32 2048)
  store ptr %243, ptr %242, align 8
  br label %for.body.i27.i.i

for.body.i27.i.i:                                 ; preds = %Map_String_LLVMValueRef__constructor.exit24.i.i, %for.body.i27.i.i
  %i.0.i25.i.i490 = phi i64 [ 0, %Map_String_LLVMValueRef__constructor.exit24.i.i ], [ %246, %for.body.i27.i.i ]
  %244 = load ptr, ptr %242, align 8
  %245 = getelementptr inbounds ptr, ptr %244, i64 %i.0.i25.i.i490
  store ptr null, ptr %245, align 8
  %246 = add nuw nsw i64 %i.0.i25.i.i490, 1
  %247 = icmp ult i64 %i.0.i25.i.i490, 255
  br i1 %247, label %for.body.i27.i.i, label %Map_String_CGClassType__constructor.exit.i.i

Map_String_CGClassType__constructor.exit.i.i:     ; preds = %for.body.i27.i.i
  %memberidx3.i.i206 = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 8
  %memberidx2.i28.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %242, i64 0, i32 1
  store i64 256, ptr %memberidx2.i28.i.i, align 4
  %memberidx3.i29.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %242, i64 0, i32 2
  store i64 0, ptr %memberidx3.i29.i.i, align 4
  store ptr %242, ptr %memberidx3.i.i206, align 8
  %248 = call ptr @malloc(i32 24)
  %249 = call ptr @malloc(i32 2048)
  store ptr %249, ptr %248, align 8
  br label %for.body.i32.i.i

for.body.i32.i.i:                                 ; preds = %Map_String_CGClassType__constructor.exit.i.i, %for.body.i32.i.i
  %i.0.i30.i.i489 = phi i64 [ 0, %Map_String_CGClassType__constructor.exit.i.i ], [ %252, %for.body.i32.i.i ]
  %250 = load ptr, ptr %248, align 8
  %251 = getelementptr inbounds ptr, ptr %250, i64 %i.0.i30.i.i489
  store ptr null, ptr %251, align 8
  %252 = add nuw nsw i64 %i.0.i30.i.i489, 1
  %253 = icmp ult i64 %i.0.i30.i.i489, 255
  br i1 %253, label %for.body.i32.i.i, label %Map_String_CGEnumType__constructor.exit.i.i

Map_String_CGEnumType__constructor.exit.i.i:      ; preds = %for.body.i32.i.i
  %memberidx4.i.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 9
  %memberidx2.i33.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %248, i64 0, i32 1
  store i64 256, ptr %memberidx2.i33.i.i, align 4
  %memberidx3.i34.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %248, i64 0, i32 2
  store i64 0, ptr %memberidx3.i34.i.i, align 4
  store ptr %248, ptr %memberidx4.i.i, align 8
  %254 = call ptr @malloc(i32 24)
  %255 = call ptr @malloc(i32 2048)
  store ptr %255, ptr %254, align 8
  br label %for.body.i37.i.i

for.body.i37.i.i:                                 ; preds = %Map_String_CGEnumType__constructor.exit.i.i, %for.body.i37.i.i
  %i.0.i35.i.i488 = phi i64 [ 0, %Map_String_CGEnumType__constructor.exit.i.i ], [ %258, %for.body.i37.i.i ]
  %256 = load ptr, ptr %254, align 8
  %257 = getelementptr inbounds ptr, ptr %256, i64 %i.0.i35.i.i488
  store ptr null, ptr %257, align 8
  %258 = add nuw nsw i64 %i.0.i35.i.i488, 1
  %259 = icmp ult i64 %i.0.i35.i.i488, 255
  br i1 %259, label %for.body.i37.i.i, label %CodeGen_constructor.exit.i

CodeGen_constructor.exit.i:                       ; preds = %for.body.i37.i.i
  %memberidx5.i.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 10
  %memberidx2.i38.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %254, i64 0, i32 1
  store i64 256, ptr %memberidx2.i38.i.i, align 4
  %memberidx3.i39.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %254, i64 0, i32 2
  store i64 0, ptr %memberidx3.i39.i.i, align 4
  store ptr %254, ptr %memberidx5.i.i, align 8
  %memberidx6.i.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 5
  store i1 true, ptr %memberidx6.i.i, align 8
  %memberidx8.i.i = getelementptr inbounds %CodeGen, ptr %9, i64 0, i32 2
  %memberidx.i.i80.i = getelementptr inbounds %String, ptr %229, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx8.i.i, i8 0, i64 16, i1 false)
  %260 = load i64, ptr %memberidx.i.i80.i, align 4
  %261 = trunc i64 %260 to i32
  %262 = add i32 %261, 1
  %263 = call ptr @malloc(i32 %262)
  %264 = load ptr, ptr %229, align 8
  %265 = load i64, ptr %memberidx.i.i80.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %263, ptr align 8 %264, i64 %265, i1 false)
  %266 = getelementptr inbounds i8, ptr %263, i64 %265
  store i8 0, ptr %266, align 1
  %267 = call ptr @LLVMModuleCreateWithName(ptr %263)
  store ptr %267, ptr %9, align 8
  %memberidx8.i207 = getelementptr inbounds %Module, ptr %228, i64 0, i32 6
  %268 = load ptr, ptr %memberidx8.i207, align 8
  %269 = call ptr @malloc(i32 25)
  %270 = load ptr, ptr %268, align 8
  %memberidx1.i81.i = getelementptr inbounds %Array_Enum_, ptr %268, i64 0, i32 1
  %271 = load i64, ptr %memberidx1.i81.i, align 4
  store i1 false, ptr %269, align 1
  %memberidx1.i.i.i208 = getelementptr inbounds %ArrayIterator_Enum_, ptr %269, i64 0, i32 1
  %memberidx2.i.i82.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %269, i64 0, i32 3
  store ptr %270, ptr %memberidx2.i.i82.i, align 8
  %memberidx3.i.i83.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %269, i64 0, i32 2
  store i64 %271, ptr %memberidx3.i.i83.i, align 4
  store i64 1, ptr %memberidx1.i.i.i208, align 4
  %272 = icmp slt i64 %271, 1
  br i1 %272, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %CodeGen_constructor.exit.i, %for.body.i
  %273 = phi i64 [ %274, %for.body.i ], [ 1, %CodeGen_constructor.exit.i ]
  %enum_.0.i486.in = phi ptr [ %275, %for.body.i ], [ %270, %CodeGen_constructor.exit.i ]
  %enum_.0.i486 = load ptr, ptr %enum_.0.i486.in, align 8
  call fastcc void @CodeGen_declare_enum(ptr nonnull %9, ptr %enum_.0.i486)
  %274 = add nuw nsw i64 %273, 1
  store i64 %274, ptr %memberidx1.i.i.i208, align 4
  %275 = getelementptr inbounds ptr, ptr %270, i64 %273
  %.not558 = icmp slt i64 %273, %271
  br i1 %.not558, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %CodeGen_constructor.exit.i
  call void @free(ptr nonnull %269)
  %memberidx11.i = getelementptr inbounds %Module, ptr %228, i64 0, i32 3
  %276 = load ptr, ptr %memberidx11.i, align 8
  %277 = call ptr @malloc(i32 25)
  %278 = load ptr, ptr %276, align 8
  %memberidx1.i90.i = getelementptr inbounds %Array_Class_, ptr %276, i64 0, i32 1
  %279 = load i64, ptr %memberidx1.i90.i, align 4
  store i1 false, ptr %277, align 1
  %memberidx1.i.i91.i = getelementptr inbounds %ArrayIterator_Class_, ptr %277, i64 0, i32 1
  %memberidx2.i.i92.i = getelementptr inbounds %ArrayIterator_Class_, ptr %277, i64 0, i32 3
  store ptr %278, ptr %memberidx2.i.i92.i, align 8
  %memberidx3.i.i93.i = getelementptr inbounds %ArrayIterator_Class_, ptr %277, i64 0, i32 2
  store i64 %279, ptr %memberidx3.i.i93.i, align 4
  store i64 1, ptr %memberidx1.i.i91.i, align 4
  %280 = icmp slt i64 %279, 1
  br i1 %280, label %for.end15.i, label %for.body13.i

for.body13.i:                                     ; preds = %for.end.i, %for.body13.i
  %281 = phi i64 [ %282, %for.body13.i ], [ 1, %for.end.i ]
  %class_.0.i483.in = phi ptr [ %283, %for.body13.i ], [ %278, %for.end.i ]
  %class_.0.i483 = load ptr, ptr %class_.0.i483.in, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %9, ptr %class_.0.i483)
  %282 = add nuw nsw i64 %281, 1
  store i64 %282, ptr %memberidx1.i.i91.i, align 4
  %283 = getelementptr inbounds ptr, ptr %278, i64 %281
  %.not559 = icmp slt i64 %281, %279
  br i1 %.not559, label %for.body13.i, label %for.end15.i

for.end15.i:                                      ; preds = %for.body13.i, %for.end.i
  call void @free(ptr nonnull %277)
  %memberidx18.i = getelementptr inbounds %Module, ptr %228, i64 0, i32 8
  %284 = load ptr, ptr %memberidx18.i, align 8
  %285 = call ptr @malloc(i32 25)
  %286 = load ptr, ptr %284, align 8
  %memberidx1.i100.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %284, i64 0, i32 1
  %287 = load i64, ptr %memberidx1.i100.i, align 4
  store i1 false, ptr %285, align 1
  %memberidx1.i.i101.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %285, i64 0, i32 1
  %memberidx2.i.i102.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %285, i64 0, i32 3
  store ptr %286, ptr %memberidx2.i.i102.i, align 8
  %memberidx3.i.i103.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %285, i64 0, i32 2
  store i64 %287, ptr %memberidx3.i.i103.i, align 4
  store i64 1, ptr %memberidx1.i.i101.i, align 4
  %288 = icmp slt i64 %287, 1
  br i1 %288, label %for.end22.i, label %for.body20.i

for.body20.i:                                     ; preds = %for.end15.i, %for.body20.i
  %289 = phi i64 [ %290, %for.body20.i ], [ 1, %for.end15.i ]
  %const_.0.i480.in = phi ptr [ %291, %for.body20.i ], [ %286, %for.end15.i ]
  %const_.0.i480 = load ptr, ptr %const_.0.i480.in, align 8
  call fastcc void @CodeGen_codegen_const_declaration(ptr nonnull %9, ptr null, ptr %const_.0.i480)
  %290 = add nuw nsw i64 %289, 1
  store i64 %290, ptr %memberidx1.i.i101.i, align 4
  %291 = getelementptr inbounds ptr, ptr %286, i64 %289
  %.not560 = icmp slt i64 %289, %287
  br i1 %.not560, label %for.body20.i, label %for.end22.i

for.end22.i:                                      ; preds = %for.body20.i, %for.end15.i
  call void @free(ptr nonnull %285)
  %memberidx25.i = getelementptr inbounds %Module, ptr %228, i64 0, i32 9
  %292 = load ptr, ptr %memberidx25.i, align 8
  %293 = call ptr @malloc(i32 25)
  %294 = load ptr, ptr %292, align 8
  %memberidx1.i110.i = getelementptr inbounds %Array_VarDeclaration_, ptr %292, i64 0, i32 1
  %295 = load i64, ptr %memberidx1.i110.i, align 4
  store i1 false, ptr %293, align 1
  %memberidx1.i.i111.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %293, i64 0, i32 1
  %memberidx2.i.i112.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %293, i64 0, i32 3
  store ptr %294, ptr %memberidx2.i.i112.i, align 8
  %memberidx3.i.i113.i = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %293, i64 0, i32 2
  store i64 %295, ptr %memberidx3.i.i113.i, align 4
  store i64 1, ptr %memberidx1.i.i111.i, align 4
  %296 = icmp slt i64 %295, 1
  br i1 %296, label %for.end29.i, label %for.body27.i

for.body27.i:                                     ; preds = %for.end22.i, %for.body27.i
  %297 = phi i64 [ %298, %for.body27.i ], [ 1, %for.end22.i ]
  %var_.0.i477.in = phi ptr [ %299, %for.body27.i ], [ %294, %for.end22.i ]
  %var_.0.i477 = load ptr, ptr %var_.0.i477.in, align 8
  call fastcc void @CodeGen_codegen_var_declaration(ptr nonnull %9, ptr null, ptr %var_.0.i477)
  %298 = add nuw nsw i64 %297, 1
  store i64 %298, ptr %memberidx1.i.i111.i, align 4
  %299 = getelementptr inbounds ptr, ptr %294, i64 %297
  %.not561 = icmp slt i64 %297, %295
  br i1 %.not561, label %for.body27.i, label %for.end29.i

for.end29.i:                                      ; preds = %for.body27.i, %for.end22.i
  call void @free(ptr nonnull %293)
  %300 = load ptr, ptr %memberidx11.i, align 8
  %301 = call ptr @malloc(i32 25)
  %302 = load ptr, ptr %300, align 8
  %memberidx1.i120.i = getelementptr inbounds %Array_Class_, ptr %300, i64 0, i32 1
  %303 = load i64, ptr %memberidx1.i120.i, align 4
  store i1 false, ptr %301, align 1
  %memberidx1.i.i121.i = getelementptr inbounds %ArrayIterator_Class_, ptr %301, i64 0, i32 1
  %memberidx2.i.i122.i = getelementptr inbounds %ArrayIterator_Class_, ptr %301, i64 0, i32 3
  store ptr %302, ptr %memberidx2.i.i122.i, align 8
  %memberidx3.i.i123.i = getelementptr inbounds %ArrayIterator_Class_, ptr %301, i64 0, i32 2
  store i64 %303, ptr %memberidx3.i.i123.i, align 4
  store i64 1, ptr %memberidx1.i.i121.i, align 4
  %304 = icmp slt i64 %303, 1
  br i1 %304, label %for.end36.i, label %for.body34.i

for.body34.i:                                     ; preds = %for.end29.i, %for.body34.i
  %305 = phi i64 [ %306, %for.body34.i ], [ 1, %for.end29.i ]
  %class_4.0.i474.in = phi ptr [ %307, %for.body34.i ], [ %302, %for.end29.i ]
  %class_4.0.i474 = load ptr, ptr %class_4.0.i474.in, align 8
  call fastcc void @CodeGen_codegen_class(ptr nonnull %9, ptr %class_4.0.i474)
  %306 = add nuw nsw i64 %305, 1
  store i64 %306, ptr %memberidx1.i.i121.i, align 4
  %307 = getelementptr inbounds ptr, ptr %302, i64 %305
  %.not562 = icmp slt i64 %305, %303
  br i1 %.not562, label %for.body34.i, label %for.end36.i

for.end36.i:                                      ; preds = %for.body34.i, %for.end29.i
  call void @free(ptr nonnull %301)
  %memberidx39.i = getelementptr inbounds %Module, ptr %228, i64 0, i32 4
  %308 = load ptr, ptr %memberidx39.i, align 8
  %309 = call ptr @malloc(i32 25)
  %310 = load ptr, ptr %308, align 8
  %memberidx1.i130.i = getelementptr inbounds %Array_Function_, ptr %308, i64 0, i32 1
  %311 = load i64, ptr %memberidx1.i130.i, align 4
  store i1 false, ptr %309, align 1
  %memberidx1.i.i131.i = getelementptr inbounds %ArrayIterator_Function_, ptr %309, i64 0, i32 1
  %memberidx2.i.i132.i = getelementptr inbounds %ArrayIterator_Function_, ptr %309, i64 0, i32 3
  store ptr %310, ptr %memberidx2.i.i132.i, align 8
  %memberidx3.i.i133.i = getelementptr inbounds %ArrayIterator_Function_, ptr %309, i64 0, i32 2
  store i64 %311, ptr %memberidx3.i.i133.i, align 4
  store i64 1, ptr %memberidx1.i.i131.i, align 4
  %312 = icmp slt i64 %311, 1
  br i1 %312, label %for.end43.i, label %for.body41.i

for.body41.i:                                     ; preds = %for.end36.i, %for.body41.i
  %313 = phi i64 [ %314, %for.body41.i ], [ 1, %for.end36.i ]
  %func_.0.i471.in = phi ptr [ %315, %for.body41.i ], [ %310, %for.end36.i ]
  %func_.0.i471 = load ptr, ptr %func_.0.i471.in, align 8
  call fastcc void @CodeGen_codegen_function(ptr nonnull %9, ptr %func_.0.i471)
  %314 = add nuw nsw i64 %313, 1
  store i64 %314, ptr %memberidx1.i.i131.i, align 4
  %315 = getelementptr inbounds ptr, ptr %310, i64 %313
  %.not563 = icmp slt i64 %313, %311
  br i1 %.not563, label %for.body41.i, label %for.end43.i

for.end43.i:                                      ; preds = %for.body41.i, %for.end36.i
  call void @free(ptr nonnull %309)
  %316 = load ptr, ptr %memberidx1.i79.i, align 8
  %317 = call ptr @malloc(i32 25)
  %318 = load ptr, ptr %316, align 8
  %memberidx1.i.i141.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %316, i64 0, i32 1
  %319 = load i64, ptr %memberidx1.i.i141.i, align 4
  %memberidx2.i.i142.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %316, i64 0, i32 2
  %320 = load i64, ptr %memberidx2.i.i142.i, align 4
  store i1 false, ptr %317, align 1
  %memberidx1.i.i.i143.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %317, i64 0, i32 1
  store ptr %318, ptr %memberidx1.i.i.i143.i, align 8
  %memberidx2.i.i.i144.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %317, i64 0, i32 2
  %memberidx3.i.i.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %317, i64 0, i32 3
  store i64 %320, ptr %memberidx3.i.i.i.i, align 4
  %321 = add nsw i64 %319, -1
  store i64 %321, ptr %memberidx2.i.i.i144.i, align 4
  %322 = icmp sgt i64 %319, 0
  br i1 %322, label %while.entry.i.i.i, label %MapIterator_String_LLVMValueRef__next.exit.i.i

while.entry.i.i.i:                                ; preds = %for.end43.i, %ifend.i.i.i
  %323 = phi i64 [ %326, %ifend.i.i.i ], [ %321, %for.end43.i ]
  %324 = phi ptr [ %incdec.ptr.i.i.i, %ifend.i.i.i ], [ %318, %for.end43.i ]
  %incdec.ptr.i.i.i = getelementptr inbounds ptr, ptr %324, i64 1
  %325 = load ptr, ptr %324, align 8
  %.not.i.i.i = icmp eq ptr %325, null
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit

ifend.i.i.i:                                      ; preds = %while.entry.i.i.i
  %326 = add nsw i64 %323, -1
  store i64 %326, ptr %memberidx2.i.i.i144.i, align 4
  %327 = icmp sgt i64 %323, 0
  br i1 %327, label %while.entry.i.i.i, label %MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit

MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit: ; preds = %while.entry.i.i.i, %ifend.i.i.i
  %memberidx2.i.i.i144.i.promoted541 = phi i64 [ %323, %while.entry.i.i.i ], [ %326, %ifend.i.i.i ]
  store ptr %incdec.ptr.i.i.i, ptr %memberidx1.i.i.i143.i, align 8
  br label %MapIterator_String_LLVMValueRef__next.exit.i.i

MapIterator_String_LLVMValueRef__next.exit.i.i:   ; preds = %MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit, %for.end43.i
  %memberidx2.i.i.i144.i.promoted = phi i64 [ %memberidx2.i.i.i144.i.promoted541, %MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit ], [ %321, %for.end43.i ]
  %memberidx1.i.i.i143.i.promoted466 = phi ptr [ %incdec.ptr.i.i.i, %MapIterator_String_LLVMValueRef__next.exit.i.i.loopexit ], [ %318, %for.end43.i ]
  %storemerge362462 = icmp slt i64 %320, 1
  br i1 %storemerge362462, label %for.end.i.i, label %for.body.i.i210

for.body.i.i210:                                  ; preds = %MapIterator_String_LLVMValueRef__next.exit.i.i, %MapIterator_String_LLVMValueRef__next.exit81.i.i
  %328 = phi i64 [ %339, %MapIterator_String_LLVMValueRef__next.exit81.i.i ], [ %memberidx2.i.i.i144.i.promoted, %MapIterator_String_LLVMValueRef__next.exit.i.i ]
  %incdec.ptr.i75.i.i.lcssa468 = phi ptr [ %incdec.ptr.i75.i.i.lcssa467, %MapIterator_String_LLVMValueRef__next.exit81.i.i ], [ %memberidx1.i.i.i143.i.promoted466, %MapIterator_String_LLVMValueRef__next.exit.i.i ]
  %storemerge381463.in = phi i64 [ %storemerge381463, %MapIterator_String_LLVMValueRef__next.exit81.i.i ], [ %320, %MapIterator_String_LLVMValueRef__next.exit.i.i ]
  %storemerge381463 = add nsw i64 %storemerge381463.in, -1
  %var_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i75.i.i.lcssa468, i64 -1
  %var_entry.0.i.i = load ptr, ptr %var_entry.0.i.i.in, align 8
  %329 = load ptr, ptr %var_entry.0.i.i, align 8
  %330 = load ptr, ptr %329, align 8
  call void @free(ptr %330)
  call void @free(ptr %329)
  %331 = add nsw i64 %328, -1
  %332 = icmp sgt i64 %328, 0
  br i1 %332, label %while.entry.i77.i.i.preheader, label %MapIterator_String_LLVMValueRef__next.exit81.i.i

while.entry.i77.i.i.preheader:                    ; preds = %for.body.i.i210
  %333 = shl i64 %328, 3
  %uglygep538 = getelementptr i8, ptr %incdec.ptr.i75.i.i.lcssa468, i64 %333
  br label %while.entry.i77.i.i

while.entry.i77.i.i:                              ; preds = %while.entry.i77.i.i.preheader, %ifend.i80.i.i
  %334 = phi i64 [ %337, %ifend.i80.i.i ], [ %331, %while.entry.i77.i.i.preheader ]
  %335 = phi ptr [ %incdec.ptr.i75.i.i, %ifend.i80.i.i ], [ %incdec.ptr.i75.i.i.lcssa468, %while.entry.i77.i.i.preheader ]
  %incdec.ptr.i75.i.i = getelementptr inbounds ptr, ptr %335, i64 1
  %336 = load ptr, ptr %335, align 8
  %.not.i76.i.i = icmp eq ptr %336, null
  br i1 %.not.i76.i.i, label %ifend.i80.i.i, label %MapIterator_String_LLVMValueRef__next.exit81.i.i

ifend.i80.i.i:                                    ; preds = %while.entry.i77.i.i
  %337 = add nsw i64 %334, -1
  %338 = icmp sgt i64 %334, 0
  br i1 %338, label %while.entry.i77.i.i, label %MapIterator_String_LLVMValueRef__next.exit81.i.i

MapIterator_String_LLVMValueRef__next.exit81.i.i: ; preds = %ifend.i80.i.i, %while.entry.i77.i.i, %for.body.i.i210
  %339 = phi i64 [ %331, %for.body.i.i210 ], [ -1, %ifend.i80.i.i ], [ %334, %while.entry.i77.i.i ]
  %incdec.ptr.i75.i.i.lcssa467 = phi ptr [ %incdec.ptr.i75.i.i.lcssa468, %for.body.i.i210 ], [ %uglygep538, %ifend.i80.i.i ], [ %incdec.ptr.i75.i.i, %while.entry.i77.i.i ]
  %storemerge362 = icmp slt i64 %storemerge381463.in, 2
  br i1 %storemerge362, label %for.cond.i.i209.for.end.i.i_crit_edge, label %for.body.i.i210

for.cond.i.i209.for.end.i.i_crit_edge:            ; preds = %MapIterator_String_LLVMValueRef__next.exit81.i.i
  store ptr %incdec.ptr.i75.i.i.lcssa467, ptr %memberidx1.i.i.i143.i, align 8
  store i64 %339, ptr %memberidx2.i.i.i144.i, align 4
  %.pre = load ptr, ptr %316, align 8
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i209.for.end.i.i_crit_edge, %MapIterator_String_LLVMValueRef__next.exit.i.i
  %340 = phi ptr [ %.pre, %for.cond.i.i209.for.end.i.i_crit_edge ], [ %318, %MapIterator_String_LLVMValueRef__next.exit.i.i ]
  call void @free(ptr nonnull %317)
  call void @free(ptr %340)
  call void @free(ptr %316)
  %341 = load ptr, ptr %memberidx2.i.i205, align 8
  %342 = call ptr @malloc(i32 25)
  %343 = load ptr, ptr %341, align 8
  %memberidx1.i90.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %341, i64 0, i32 1
  %344 = load i64, ptr %memberidx1.i90.i.i, align 4
  %memberidx2.i91.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %341, i64 0, i32 2
  %345 = load i64, ptr %memberidx2.i91.i.i, align 4
  store i1 false, ptr %342, align 1
  %memberidx1.i.i92.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %342, i64 0, i32 1
  store ptr %343, ptr %memberidx1.i.i92.i.i, align 8
  %memberidx2.i.i93.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %342, i64 0, i32 2
  %memberidx3.i.i94.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %342, i64 0, i32 3
  store i64 %345, ptr %memberidx3.i.i94.i.i, align 4
  %346 = add nsw i64 %344, -1
  store i64 %346, ptr %memberidx2.i.i93.i.i, align 4
  %347 = icmp sgt i64 %344, 0
  br i1 %347, label %while.entry.i99.i.i, label %MapIterator_String_LLVMValueRef__next.exit103.i.i

while.entry.i99.i.i:                              ; preds = %for.end.i.i, %ifend.i102.i.i
  %348 = phi i64 [ %351, %ifend.i102.i.i ], [ %346, %for.end.i.i ]
  %349 = phi ptr [ %incdec.ptr.i97.i.i, %ifend.i102.i.i ], [ %343, %for.end.i.i ]
  %incdec.ptr.i97.i.i = getelementptr inbounds ptr, ptr %349, i64 1
  %350 = load ptr, ptr %349, align 8
  %.not.i98.i.i = icmp eq ptr %350, null
  br i1 %.not.i98.i.i, label %ifend.i102.i.i, label %MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit

ifend.i102.i.i:                                   ; preds = %while.entry.i99.i.i
  %351 = add nsw i64 %348, -1
  store i64 %351, ptr %memberidx2.i.i93.i.i, align 4
  %352 = icmp sgt i64 %348, 0
  br i1 %352, label %while.entry.i99.i.i, label %MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit

MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit: ; preds = %while.entry.i99.i.i, %ifend.i102.i.i
  %memberidx2.i.i93.i.i.promoted544 = phi i64 [ %348, %while.entry.i99.i.i ], [ %351, %ifend.i102.i.i ]
  store ptr %incdec.ptr.i97.i.i, ptr %memberidx1.i.i92.i.i, align 8
  br label %MapIterator_String_LLVMValueRef__next.exit103.i.i

MapIterator_String_LLVMValueRef__next.exit103.i.i: ; preds = %MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit, %for.end.i.i
  %memberidx2.i.i93.i.i.promoted = phi i64 [ %memberidx2.i.i93.i.i.promoted544, %MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit ], [ %346, %for.end.i.i ]
  %memberidx1.i.i92.i.i.promoted456 = phi ptr [ %incdec.ptr.i97.i.i, %MapIterator_String_LLVMValueRef__next.exit103.i.i.loopexit ], [ %343, %for.end.i.i ]
  %storemerge364452 = icmp slt i64 %345, 1
  br i1 %storemerge364452, label %for.end13.i.i, label %for.body11.i.i

for.body11.i.i:                                   ; preds = %MapIterator_String_LLVMValueRef__next.exit103.i.i, %MapIterator_String_LLVMValueRef__next.exit126.i.i
  %353 = phi i64 [ %364, %MapIterator_String_LLVMValueRef__next.exit126.i.i ], [ %memberidx2.i.i93.i.i.promoted, %MapIterator_String_LLVMValueRef__next.exit103.i.i ]
  %incdec.ptr.i120.i.i.lcssa458 = phi ptr [ %incdec.ptr.i120.i.i.lcssa457, %MapIterator_String_LLVMValueRef__next.exit126.i.i ], [ %memberidx1.i.i92.i.i.promoted456, %MapIterator_String_LLVMValueRef__next.exit103.i.i ]
  %storemerge382453.in = phi i64 [ %storemerge382453, %MapIterator_String_LLVMValueRef__next.exit126.i.i ], [ %345, %MapIterator_String_LLVMValueRef__next.exit103.i.i ]
  %storemerge382453 = add nsw i64 %storemerge382453.in, -1
  %string_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i120.i.i.lcssa458, i64 -1
  %string_entry.0.i.i = load ptr, ptr %string_entry.0.i.i.in, align 8
  %354 = load ptr, ptr %string_entry.0.i.i, align 8
  %355 = load ptr, ptr %354, align 8
  call void @free(ptr %355)
  call void @free(ptr %354)
  %356 = add nsw i64 %353, -1
  %357 = icmp sgt i64 %353, 0
  br i1 %357, label %while.entry.i122.i.i.preheader, label %MapIterator_String_LLVMValueRef__next.exit126.i.i

while.entry.i122.i.i.preheader:                   ; preds = %for.body11.i.i
  %358 = shl i64 %353, 3
  %uglygep537 = getelementptr i8, ptr %incdec.ptr.i120.i.i.lcssa458, i64 %358
  br label %while.entry.i122.i.i

while.entry.i122.i.i:                             ; preds = %while.entry.i122.i.i.preheader, %ifend.i125.i.i
  %359 = phi i64 [ %362, %ifend.i125.i.i ], [ %356, %while.entry.i122.i.i.preheader ]
  %360 = phi ptr [ %incdec.ptr.i120.i.i, %ifend.i125.i.i ], [ %incdec.ptr.i120.i.i.lcssa458, %while.entry.i122.i.i.preheader ]
  %incdec.ptr.i120.i.i = getelementptr inbounds ptr, ptr %360, i64 1
  %361 = load ptr, ptr %360, align 8
  %.not.i121.i.i = icmp eq ptr %361, null
  br i1 %.not.i121.i.i, label %ifend.i125.i.i, label %MapIterator_String_LLVMValueRef__next.exit126.i.i

ifend.i125.i.i:                                   ; preds = %while.entry.i122.i.i
  %362 = add nsw i64 %359, -1
  %363 = icmp sgt i64 %359, 0
  br i1 %363, label %while.entry.i122.i.i, label %MapIterator_String_LLVMValueRef__next.exit126.i.i

MapIterator_String_LLVMValueRef__next.exit126.i.i: ; preds = %ifend.i125.i.i, %while.entry.i122.i.i, %for.body11.i.i
  %364 = phi i64 [ %356, %for.body11.i.i ], [ -1, %ifend.i125.i.i ], [ %359, %while.entry.i122.i.i ]
  %incdec.ptr.i120.i.i.lcssa457 = phi ptr [ %incdec.ptr.i120.i.i.lcssa458, %for.body11.i.i ], [ %uglygep537, %ifend.i125.i.i ], [ %incdec.ptr.i120.i.i, %while.entry.i122.i.i ]
  %storemerge364 = icmp slt i64 %storemerge382453.in, 2
  br i1 %storemerge364, label %for.cond10.i.i.for.end13.i.i_crit_edge, label %for.body11.i.i

for.cond10.i.i.for.end13.i.i_crit_edge:           ; preds = %MapIterator_String_LLVMValueRef__next.exit126.i.i
  store ptr %incdec.ptr.i120.i.i.lcssa457, ptr %memberidx1.i.i92.i.i, align 8
  store i64 %364, ptr %memberidx2.i.i93.i.i, align 4
  %.pre545 = load ptr, ptr %341, align 8
  br label %for.end13.i.i

for.end13.i.i:                                    ; preds = %for.cond10.i.i.for.end13.i.i_crit_edge, %MapIterator_String_LLVMValueRef__next.exit103.i.i
  %365 = phi ptr [ %.pre545, %for.cond10.i.i.for.end13.i.i_crit_edge ], [ %343, %MapIterator_String_LLVMValueRef__next.exit103.i.i ]
  call void @free(ptr nonnull %342)
  call void @free(ptr %365)
  call void @free(ptr %341)
  %366 = load ptr, ptr %memberidx5.i.i, align 8
  %367 = call ptr @malloc(i32 25)
  %368 = load ptr, ptr %366, align 8
  %memberidx1.i127.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %366, i64 0, i32 1
  %369 = load i64, ptr %memberidx1.i127.i.i, align 4
  %memberidx2.i128.i.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %366, i64 0, i32 2
  %370 = load i64, ptr %memberidx2.i128.i.i, align 4
  store i1 false, ptr %367, align 1
  %memberidx1.i.i129.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %367, i64 0, i32 1
  store ptr %368, ptr %memberidx1.i.i129.i.i, align 8
  %memberidx2.i.i130.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %367, i64 0, i32 2
  %memberidx3.i.i131.i.i = getelementptr inbounds %MapIterator_String_LLVMValueRef_, ptr %367, i64 0, i32 3
  store i64 %370, ptr %memberidx3.i.i131.i.i, align 4
  %371 = add nsw i64 %369, -1
  store i64 %371, ptr %memberidx2.i.i130.i.i, align 4
  %372 = icmp sgt i64 %369, 0
  br i1 %372, label %while.entry.i136.i.i, label %MapIterator_String_LLVMValueRef__next.exit140.i.i

while.entry.i136.i.i:                             ; preds = %for.end13.i.i, %ifend.i139.i.i
  %373 = phi i64 [ %376, %ifend.i139.i.i ], [ %371, %for.end13.i.i ]
  %374 = phi ptr [ %incdec.ptr.i134.i.i, %ifend.i139.i.i ], [ %368, %for.end13.i.i ]
  %incdec.ptr.i134.i.i = getelementptr inbounds ptr, ptr %374, i64 1
  %375 = load ptr, ptr %374, align 8
  %.not.i135.i.i = icmp eq ptr %375, null
  br i1 %.not.i135.i.i, label %ifend.i139.i.i, label %MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit

ifend.i139.i.i:                                   ; preds = %while.entry.i136.i.i
  %376 = add nsw i64 %373, -1
  store i64 %376, ptr %memberidx2.i.i130.i.i, align 4
  %377 = icmp sgt i64 %373, 0
  br i1 %377, label %while.entry.i136.i.i, label %MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit

MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit: ; preds = %while.entry.i136.i.i, %ifend.i139.i.i
  %memberidx2.i.i130.i.i.promoted548 = phi i64 [ %373, %while.entry.i136.i.i ], [ %376, %ifend.i139.i.i ]
  store ptr %incdec.ptr.i134.i.i, ptr %memberidx1.i.i129.i.i, align 8
  br label %MapIterator_String_LLVMValueRef__next.exit140.i.i

MapIterator_String_LLVMValueRef__next.exit140.i.i: ; preds = %MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit, %for.end13.i.i
  %memberidx2.i.i130.i.i.promoted = phi i64 [ %memberidx2.i.i130.i.i.promoted548, %MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit ], [ %371, %for.end13.i.i ]
  %memberidx1.i.i129.i.i.promoted446 = phi ptr [ %incdec.ptr.i134.i.i, %MapIterator_String_LLVMValueRef__next.exit140.i.i.loopexit ], [ %368, %for.end13.i.i ]
  %storemerge366442 = icmp slt i64 %370, 1
  br i1 %storemerge366442, label %for.end22.i.i, label %for.body20.i.i

for.body20.i.i:                                   ; preds = %MapIterator_String_LLVMValueRef__next.exit140.i.i, %MapIterator_String_LLVMValueRef__next.exit157.i.i
  %378 = phi i64 [ %389, %MapIterator_String_LLVMValueRef__next.exit157.i.i ], [ %memberidx2.i.i130.i.i.promoted, %MapIterator_String_LLVMValueRef__next.exit140.i.i ]
  %incdec.ptr.i151.i.i.lcssa448 = phi ptr [ %incdec.ptr.i151.i.i.lcssa447, %MapIterator_String_LLVMValueRef__next.exit157.i.i ], [ %memberidx1.i.i129.i.i.promoted446, %MapIterator_String_LLVMValueRef__next.exit140.i.i ]
  %storemerge383443.in = phi i64 [ %storemerge383443, %MapIterator_String_LLVMValueRef__next.exit157.i.i ], [ %370, %MapIterator_String_LLVMValueRef__next.exit140.i.i ]
  %storemerge383443 = add nsw i64 %storemerge383443.in, -1
  %func_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i151.i.i.lcssa448, i64 -1
  %func_entry.0.i.i = load ptr, ptr %func_entry.0.i.i.in, align 8
  %379 = load ptr, ptr %func_entry.0.i.i, align 8
  %380 = load ptr, ptr %379, align 8
  call void @free(ptr %380)
  call void @free(ptr %379)
  %381 = add nsw i64 %378, -1
  %382 = icmp sgt i64 %378, 0
  br i1 %382, label %while.entry.i153.i.i.preheader, label %MapIterator_String_LLVMValueRef__next.exit157.i.i

while.entry.i153.i.i.preheader:                   ; preds = %for.body20.i.i
  %383 = shl i64 %378, 3
  %uglygep536 = getelementptr i8, ptr %incdec.ptr.i151.i.i.lcssa448, i64 %383
  br label %while.entry.i153.i.i

while.entry.i153.i.i:                             ; preds = %while.entry.i153.i.i.preheader, %ifend.i156.i.i
  %384 = phi i64 [ %387, %ifend.i156.i.i ], [ %381, %while.entry.i153.i.i.preheader ]
  %385 = phi ptr [ %incdec.ptr.i151.i.i, %ifend.i156.i.i ], [ %incdec.ptr.i151.i.i.lcssa448, %while.entry.i153.i.i.preheader ]
  %incdec.ptr.i151.i.i = getelementptr inbounds ptr, ptr %385, i64 1
  %386 = load ptr, ptr %385, align 8
  %.not.i152.i.i = icmp eq ptr %386, null
  br i1 %.not.i152.i.i, label %ifend.i156.i.i, label %MapIterator_String_LLVMValueRef__next.exit157.i.i

ifend.i156.i.i:                                   ; preds = %while.entry.i153.i.i
  %387 = add nsw i64 %384, -1
  %388 = icmp sgt i64 %384, 0
  br i1 %388, label %while.entry.i153.i.i, label %MapIterator_String_LLVMValueRef__next.exit157.i.i

MapIterator_String_LLVMValueRef__next.exit157.i.i: ; preds = %ifend.i156.i.i, %while.entry.i153.i.i, %for.body20.i.i
  %389 = phi i64 [ %381, %for.body20.i.i ], [ -1, %ifend.i156.i.i ], [ %384, %while.entry.i153.i.i ]
  %incdec.ptr.i151.i.i.lcssa447 = phi ptr [ %incdec.ptr.i151.i.i.lcssa448, %for.body20.i.i ], [ %uglygep536, %ifend.i156.i.i ], [ %incdec.ptr.i151.i.i, %while.entry.i153.i.i ]
  %storemerge366 = icmp slt i64 %storemerge383443.in, 2
  br i1 %storemerge366, label %for.cond19.i.i.for.end22.i.i_crit_edge, label %for.body20.i.i

for.cond19.i.i.for.end22.i.i_crit_edge:           ; preds = %MapIterator_String_LLVMValueRef__next.exit157.i.i
  store ptr %incdec.ptr.i151.i.i.lcssa447, ptr %memberidx1.i.i129.i.i, align 8
  store i64 %389, ptr %memberidx2.i.i130.i.i, align 4
  %.pre549 = load ptr, ptr %366, align 8
  br label %for.end22.i.i

for.end22.i.i:                                    ; preds = %for.cond19.i.i.for.end22.i.i_crit_edge, %MapIterator_String_LLVMValueRef__next.exit140.i.i
  %390 = phi ptr [ %.pre549, %for.cond19.i.i.for.end22.i.i_crit_edge ], [ %368, %MapIterator_String_LLVMValueRef__next.exit140.i.i ]
  call void @free(ptr nonnull %367)
  call void @free(ptr %390)
  call void @free(ptr %366)
  %391 = load ptr, ptr %memberidx3.i.i206, align 8
  %392 = call ptr @malloc(i32 25)
  %393 = load ptr, ptr %391, align 8
  %memberidx1.i167.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %391, i64 0, i32 1
  %394 = load i64, ptr %memberidx1.i167.i.i, align 4
  %memberidx2.i168.i.i = getelementptr inbounds %Map_String_CGClassType_, ptr %391, i64 0, i32 2
  %395 = load i64, ptr %memberidx2.i168.i.i, align 4
  store i1 false, ptr %392, align 1
  %memberidx1.i.i169.i.i = getelementptr inbounds %MapIterator_String_CGClassType_, ptr %392, i64 0, i32 1
  store ptr %393, ptr %memberidx1.i.i169.i.i, align 8
  %memberidx2.i.i170.i.i = getelementptr inbounds %MapIterator_String_CGClassType_, ptr %392, i64 0, i32 2
  %memberidx3.i.i171.i.i = getelementptr inbounds %MapIterator_String_CGClassType_, ptr %392, i64 0, i32 3
  store i64 %395, ptr %memberidx3.i.i171.i.i, align 4
  %396 = add nsw i64 %394, -1
  store i64 %396, ptr %memberidx2.i.i170.i.i, align 4
  %397 = icmp sgt i64 %394, 0
  br i1 %397, label %while.entry.i162.i.i, label %MapIterator_String_CGClassType__next.exit166.i.i

while.entry.i162.i.i:                             ; preds = %for.end22.i.i, %ifend.i165.i.i
  %398 = phi i64 [ %401, %ifend.i165.i.i ], [ %396, %for.end22.i.i ]
  %399 = phi ptr [ %incdec.ptr.i160.i.i, %ifend.i165.i.i ], [ %393, %for.end22.i.i ]
  %incdec.ptr.i160.i.i = getelementptr inbounds ptr, ptr %399, i64 1
  %400 = load ptr, ptr %399, align 8
  %.not.i161.i.i = icmp eq ptr %400, null
  br i1 %.not.i161.i.i, label %ifend.i165.i.i, label %MapIterator_String_CGClassType__next.exit166.i.i.loopexit

ifend.i165.i.i:                                   ; preds = %while.entry.i162.i.i
  %401 = add nsw i64 %398, -1
  store i64 %401, ptr %memberidx2.i.i170.i.i, align 4
  %402 = icmp sgt i64 %398, 0
  br i1 %402, label %while.entry.i162.i.i, label %MapIterator_String_CGClassType__next.exit166.i.i.loopexit

MapIterator_String_CGClassType__next.exit166.i.i.loopexit: ; preds = %while.entry.i162.i.i, %ifend.i165.i.i
  %memberidx2.i.i170.i.i.promoted552 = phi i64 [ %398, %while.entry.i162.i.i ], [ %401, %ifend.i165.i.i ]
  store ptr %incdec.ptr.i160.i.i, ptr %memberidx1.i.i169.i.i, align 8
  br label %MapIterator_String_CGClassType__next.exit166.i.i

MapIterator_String_CGClassType__next.exit166.i.i: ; preds = %MapIterator_String_CGClassType__next.exit166.i.i.loopexit, %for.end22.i.i
  %memberidx2.i.i170.i.i.promoted = phi i64 [ %memberidx2.i.i170.i.i.promoted552, %MapIterator_String_CGClassType__next.exit166.i.i.loopexit ], [ %396, %for.end22.i.i ]
  %memberidx1.i.i169.i.i.promoted436 = phi ptr [ %incdec.ptr.i160.i.i, %MapIterator_String_CGClassType__next.exit166.i.i.loopexit ], [ %393, %for.end22.i.i ]
  %storemerge368432 = icmp slt i64 %395, 1
  br i1 %storemerge368432, label %for.end31.i.i, label %for.body29.i.i

for.body29.i.i:                                   ; preds = %MapIterator_String_CGClassType__next.exit166.i.i, %MapIterator_String_CGClassType__next.exit.i.i
  %403 = phi i64 [ %415, %MapIterator_String_CGClassType__next.exit.i.i ], [ %memberidx2.i.i170.i.i.promoted, %MapIterator_String_CGClassType__next.exit166.i.i ]
  %incdec.ptr.i143.i.i.lcssa438 = phi ptr [ %incdec.ptr.i143.i.i.lcssa437, %MapIterator_String_CGClassType__next.exit.i.i ], [ %memberidx1.i.i169.i.i.promoted436, %MapIterator_String_CGClassType__next.exit166.i.i ]
  %storemerge384433.in = phi i64 [ %storemerge384433, %MapIterator_String_CGClassType__next.exit.i.i ], [ %395, %MapIterator_String_CGClassType__next.exit166.i.i ]
  %storemerge384433 = add nsw i64 %storemerge384433.in, -1
  %class_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i143.i.i.lcssa438, i64 -1
  %class_entry.0.i.i = load ptr, ptr %class_entry.0.i.i.in, align 8
  %404 = load ptr, ptr %class_entry.0.i.i, align 8
  %405 = load ptr, ptr %404, align 8
  call void @free(ptr %405)
  call void @free(ptr %404)
  %memberidx34.i.i = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %class_entry.0.i.i, i64 0, i32 1
  %406 = load ptr, ptr %memberidx34.i.i, align 8
  call void @free(ptr %406)
  %407 = add nsw i64 %403, -1
  %408 = icmp sgt i64 %403, 0
  br i1 %408, label %while.entry.i145.i.i.preheader, label %MapIterator_String_CGClassType__next.exit.i.i

while.entry.i145.i.i.preheader:                   ; preds = %for.body29.i.i
  %409 = shl i64 %403, 3
  %uglygep535 = getelementptr i8, ptr %incdec.ptr.i143.i.i.lcssa438, i64 %409
  br label %while.entry.i145.i.i

while.entry.i145.i.i:                             ; preds = %while.entry.i145.i.i.preheader, %ifend.i148.i.i
  %410 = phi i64 [ %413, %ifend.i148.i.i ], [ %407, %while.entry.i145.i.i.preheader ]
  %411 = phi ptr [ %incdec.ptr.i143.i.i, %ifend.i148.i.i ], [ %incdec.ptr.i143.i.i.lcssa438, %while.entry.i145.i.i.preheader ]
  %incdec.ptr.i143.i.i = getelementptr inbounds ptr, ptr %411, i64 1
  %412 = load ptr, ptr %411, align 8
  %.not.i144.i.i = icmp eq ptr %412, null
  br i1 %.not.i144.i.i, label %ifend.i148.i.i, label %MapIterator_String_CGClassType__next.exit.i.i

ifend.i148.i.i:                                   ; preds = %while.entry.i145.i.i
  %413 = add nsw i64 %410, -1
  %414 = icmp sgt i64 %410, 0
  br i1 %414, label %while.entry.i145.i.i, label %MapIterator_String_CGClassType__next.exit.i.i

MapIterator_String_CGClassType__next.exit.i.i:    ; preds = %ifend.i148.i.i, %while.entry.i145.i.i, %for.body29.i.i
  %415 = phi i64 [ %407, %for.body29.i.i ], [ -1, %ifend.i148.i.i ], [ %410, %while.entry.i145.i.i ]
  %incdec.ptr.i143.i.i.lcssa437 = phi ptr [ %incdec.ptr.i143.i.i.lcssa438, %for.body29.i.i ], [ %uglygep535, %ifend.i148.i.i ], [ %incdec.ptr.i143.i.i, %while.entry.i145.i.i ]
  %storemerge368 = icmp slt i64 %storemerge384433.in, 2
  br i1 %storemerge368, label %for.cond28.i.i.for.end31.i.i_crit_edge, label %for.body29.i.i

for.cond28.i.i.for.end31.i.i_crit_edge:           ; preds = %MapIterator_String_CGClassType__next.exit.i.i
  store ptr %incdec.ptr.i143.i.i.lcssa437, ptr %memberidx1.i.i169.i.i, align 8
  store i64 %415, ptr %memberidx2.i.i170.i.i, align 4
  %.pre553 = load ptr, ptr %391, align 8
  br label %for.end31.i.i

for.end31.i.i:                                    ; preds = %for.cond28.i.i.for.end31.i.i_crit_edge, %MapIterator_String_CGClassType__next.exit166.i.i
  %416 = phi ptr [ %.pre553, %for.cond28.i.i.for.end31.i.i_crit_edge ], [ %393, %MapIterator_String_CGClassType__next.exit166.i.i ]
  call void @free(ptr nonnull %392)
  call void @free(ptr %416)
  call void @free(ptr %391)
  %417 = load ptr, ptr %memberidx4.i.i, align 8
  %418 = call ptr @malloc(i32 25)
  %419 = load ptr, ptr %417, align 8
  %memberidx1.i113.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %417, i64 0, i32 1
  %420 = load i64, ptr %memberidx1.i113.i.i, align 4
  %memberidx2.i114.i.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %417, i64 0, i32 2
  %421 = load i64, ptr %memberidx2.i114.i.i, align 4
  store i1 false, ptr %418, align 1
  %memberidx1.i.i115.i.i = getelementptr inbounds %MapIterator_String_CGEnumType_, ptr %418, i64 0, i32 1
  store ptr %419, ptr %memberidx1.i.i115.i.i, align 8
  %memberidx2.i.i116.i.i = getelementptr inbounds %MapIterator_String_CGEnumType_, ptr %418, i64 0, i32 2
  %memberidx3.i.i117.i.i = getelementptr inbounds %MapIterator_String_CGEnumType_, ptr %418, i64 0, i32 3
  store i64 %421, ptr %memberidx3.i.i117.i.i, align 4
  %422 = add nsw i64 %420, -1
  store i64 %422, ptr %memberidx2.i.i116.i.i, align 4
  %423 = icmp sgt i64 %420, 0
  br i1 %423, label %while.entry.i108.i.i, label %MapIterator_String_CGEnumType__next.exit112.i.i

while.entry.i108.i.i:                             ; preds = %for.end31.i.i, %ifend.i111.i.i
  %424 = phi i64 [ %427, %ifend.i111.i.i ], [ %422, %for.end31.i.i ]
  %425 = phi ptr [ %incdec.ptr.i106.i.i, %ifend.i111.i.i ], [ %419, %for.end31.i.i ]
  %incdec.ptr.i106.i.i = getelementptr inbounds ptr, ptr %425, i64 1
  %426 = load ptr, ptr %425, align 8
  %.not.i107.i.i = icmp eq ptr %426, null
  br i1 %.not.i107.i.i, label %ifend.i111.i.i, label %MapIterator_String_CGEnumType__next.exit112.i.i.loopexit

ifend.i111.i.i:                                   ; preds = %while.entry.i108.i.i
  %427 = add nsw i64 %424, -1
  store i64 %427, ptr %memberidx2.i.i116.i.i, align 4
  %428 = icmp sgt i64 %424, 0
  br i1 %428, label %while.entry.i108.i.i, label %MapIterator_String_CGEnumType__next.exit112.i.i.loopexit

MapIterator_String_CGEnumType__next.exit112.i.i.loopexit: ; preds = %while.entry.i108.i.i, %ifend.i111.i.i
  %memberidx2.i.i116.i.i.promoted556 = phi i64 [ %424, %while.entry.i108.i.i ], [ %427, %ifend.i111.i.i ]
  store ptr %incdec.ptr.i106.i.i, ptr %memberidx1.i.i115.i.i, align 8
  br label %MapIterator_String_CGEnumType__next.exit112.i.i

MapIterator_String_CGEnumType__next.exit112.i.i:  ; preds = %MapIterator_String_CGEnumType__next.exit112.i.i.loopexit, %for.end31.i.i
  %memberidx2.i.i116.i.i.promoted = phi i64 [ %memberidx2.i.i116.i.i.promoted556, %MapIterator_String_CGEnumType__next.exit112.i.i.loopexit ], [ %422, %for.end31.i.i ]
  %memberidx1.i.i115.i.i.promoted426 = phi ptr [ %incdec.ptr.i106.i.i, %MapIterator_String_CGEnumType__next.exit112.i.i.loopexit ], [ %419, %for.end31.i.i ]
  %storemerge370422 = icmp slt i64 %421, 1
  br i1 %storemerge370422, label %CodeGen_destroy.exit.i, label %for.body39.i.i

for.body39.i.i:                                   ; preds = %MapIterator_String_CGEnumType__next.exit112.i.i, %MapIterator_String_CGEnumType__next.exit.i.i
  %429 = phi i64 [ %441, %MapIterator_String_CGEnumType__next.exit.i.i ], [ %memberidx2.i.i116.i.i.promoted, %MapIterator_String_CGEnumType__next.exit112.i.i ]
  %incdec.ptr.i84.i.i.lcssa428 = phi ptr [ %incdec.ptr.i84.i.i.lcssa427, %MapIterator_String_CGEnumType__next.exit.i.i ], [ %memberidx1.i.i115.i.i.promoted426, %MapIterator_String_CGEnumType__next.exit112.i.i ]
  %storemerge385423.in = phi i64 [ %storemerge385423, %MapIterator_String_CGEnumType__next.exit.i.i ], [ %421, %MapIterator_String_CGEnumType__next.exit112.i.i ]
  %storemerge385423 = add nsw i64 %storemerge385423.in, -1
  %enum_entry.0.i.i.in = getelementptr inbounds ptr, ptr %incdec.ptr.i84.i.i.lcssa428, i64 -1
  %enum_entry.0.i.i = load ptr, ptr %enum_entry.0.i.i.in, align 8
  %430 = load ptr, ptr %enum_entry.0.i.i, align 8
  %431 = load ptr, ptr %430, align 8
  call void @free(ptr %431)
  call void @free(ptr %430)
  %memberidx44.i.i = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %enum_entry.0.i.i, i64 0, i32 1
  %432 = load ptr, ptr %memberidx44.i.i, align 8
  call void @free(ptr %432)
  %433 = add nsw i64 %429, -1
  %434 = icmp sgt i64 %429, 0
  br i1 %434, label %while.entry.i86.i.i.preheader, label %MapIterator_String_CGEnumType__next.exit.i.i

while.entry.i86.i.i.preheader:                    ; preds = %for.body39.i.i
  %435 = shl i64 %429, 3
  %uglygep = getelementptr i8, ptr %incdec.ptr.i84.i.i.lcssa428, i64 %435
  br label %while.entry.i86.i.i

while.entry.i86.i.i:                              ; preds = %while.entry.i86.i.i.preheader, %ifend.i89.i.i
  %436 = phi i64 [ %439, %ifend.i89.i.i ], [ %433, %while.entry.i86.i.i.preheader ]
  %437 = phi ptr [ %incdec.ptr.i84.i.i, %ifend.i89.i.i ], [ %incdec.ptr.i84.i.i.lcssa428, %while.entry.i86.i.i.preheader ]
  %incdec.ptr.i84.i.i = getelementptr inbounds ptr, ptr %437, i64 1
  %438 = load ptr, ptr %437, align 8
  %.not.i85.i.i = icmp eq ptr %438, null
  br i1 %.not.i85.i.i, label %ifend.i89.i.i, label %MapIterator_String_CGEnumType__next.exit.i.i

ifend.i89.i.i:                                    ; preds = %while.entry.i86.i.i
  %439 = add nsw i64 %436, -1
  %440 = icmp sgt i64 %436, 0
  br i1 %440, label %while.entry.i86.i.i, label %MapIterator_String_CGEnumType__next.exit.i.i

MapIterator_String_CGEnumType__next.exit.i.i:     ; preds = %ifend.i89.i.i, %while.entry.i86.i.i, %for.body39.i.i
  %441 = phi i64 [ %433, %for.body39.i.i ], [ -1, %ifend.i89.i.i ], [ %436, %while.entry.i86.i.i ]
  %incdec.ptr.i84.i.i.lcssa427 = phi ptr [ %incdec.ptr.i84.i.i.lcssa428, %for.body39.i.i ], [ %uglygep, %ifend.i89.i.i ], [ %incdec.ptr.i84.i.i, %while.entry.i86.i.i ]
  %storemerge370 = icmp slt i64 %storemerge385423.in, 2
  br i1 %storemerge370, label %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge, label %for.body39.i.i

for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge:  ; preds = %MapIterator_String_CGEnumType__next.exit.i.i
  store ptr %incdec.ptr.i84.i.i.lcssa427, ptr %memberidx1.i.i115.i.i, align 8
  store i64 %441, ptr %memberidx2.i.i116.i.i, align 4
  %.pre557 = load ptr, ptr %417, align 8
  br label %CodeGen_destroy.exit.i

CodeGen_destroy.exit.i:                           ; preds = %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge, %MapIterator_String_CGEnumType__next.exit112.i.i
  %442 = phi ptr [ %.pre557, %for.cond38.i.i.CodeGen_destroy.exit.i_crit_edge ], [ %419, %MapIterator_String_CGEnumType__next.exit112.i.i ]
  call void @free(ptr nonnull %418)
  call void @free(ptr %442)
  call void @free(ptr %417)
  %443 = load ptr, ptr %common.ret.op.i, align 8
  %444 = call ptr @malloc(i32 25)
  %445 = load ptr, ptr %443, align 8
  %memberidx1.i.i146.i = getelementptr inbounds %Array_Module_, ptr %443, i64 0, i32 1
  %446 = load i64, ptr %memberidx1.i.i146.i, align 4
  %memberidx1.i.i.i147.i = getelementptr inbounds %ArrayIterator_Module_, ptr %444, i64 0, i32 1
  %memberidx2.i.i.i148.i = getelementptr inbounds %ArrayIterator_Module_, ptr %444, i64 0, i32 3
  store ptr %445, ptr %memberidx2.i.i.i148.i, align 8
  %memberidx3.i.i.i149.i = getelementptr inbounds %ArrayIterator_Module_, ptr %444, i64 0, i32 2
  store i64 %446, ptr %memberidx3.i.i.i149.i, align 4
  store i64 1, ptr %memberidx1.i.i.i147.i, align 4
  %447 = icmp slt i64 %446, 1
  %module.0.i.i418 = load ptr, ptr %445, align 8
  store i1 %447, ptr %444, align 1
  br i1 %447, label %Program___del__.exit.i, label %for.body.i156.i

for.body.i156.i:                                  ; preds = %CodeGen_destroy.exit.i, %Module___del__.exit.i.i
  %448 = phi i64 [ %564, %Module___del__.exit.i.i ], [ 1, %CodeGen_destroy.exit.i ]
  %module.0.i.i419 = phi ptr [ %module.0.i.i, %Module___del__.exit.i.i ], [ %module.0.i.i418, %CodeGen_destroy.exit.i ]
  %memberidx.i7.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 4
  %449 = load ptr, ptr %memberidx.i7.i.i, align 8
  %450 = call ptr @malloc(i32 25)
  %451 = load ptr, ptr %449, align 8
  %memberidx1.i.i8.i.i = getelementptr inbounds %Array_Function_, ptr %449, i64 0, i32 1
  %452 = load i64, ptr %memberidx1.i.i8.i.i, align 4
  %453 = icmp slt i64 %452, 1
  br i1 %453, label %for.end.i.i.i, label %for.body.i.i158.i

for.body.i.i158.i:                                ; preds = %for.body.i156.i, %for.body.i.i158.i
  %454 = phi i64 [ %455, %for.body.i.i158.i ], [ 1, %for.body.i156.i ]
  %func.0.i.i.i387.in = phi ptr [ %456, %for.body.i.i158.i ], [ %451, %for.body.i156.i ]
  %func.0.i.i.i387 = load ptr, ptr %func.0.i.i.i387.in, align 8
  call void @free(ptr %func.0.i.i.i387)
  %455 = add nuw nsw i64 %454, 1
  %456 = getelementptr inbounds ptr, ptr %451, i64 %454
  %.not564 = icmp slt i64 %454, %452
  br i1 %.not564, label %for.body.i.i158.i, label %for.end.i.i.i

for.end.i.i.i:                                    ; preds = %for.body.i.i158.i, %for.body.i156.i
  call void @free(ptr nonnull %450)
  %memberidx8.i.i159.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 1
  %457 = load ptr, ptr %memberidx8.i.i159.i, align 8
  %458 = call ptr @malloc(i32 25)
  %459 = load ptr, ptr %457, align 8
  %memberidx1.i91.i.i.i = getelementptr inbounds %Array_Var_, ptr %457, i64 0, i32 1
  %460 = load i64, ptr %memberidx1.i91.i.i.i, align 4
  %461 = icmp slt i64 %460, 1
  br i1 %461, label %for.end12.i.i.i, label %for.body10.i.i.i

for.body10.i.i.i:                                 ; preds = %for.end.i.i.i, %for.body10.i.i.i
  %462 = phi i64 [ %463, %for.body10.i.i.i ], [ 1, %for.end.i.i.i ]
  %var.0.i.i.i389.in = phi ptr [ %464, %for.body10.i.i.i ], [ %459, %for.end.i.i.i ]
  %var.0.i.i.i389 = load ptr, ptr %var.0.i.i.i389.in, align 8
  call void @free(ptr %var.0.i.i.i389)
  %463 = add nuw nsw i64 %462, 1
  %464 = getelementptr inbounds ptr, ptr %459, i64 %462
  %.not565 = icmp slt i64 %462, %460
  br i1 %.not565, label %for.body10.i.i.i, label %for.end12.i.i.i

for.end12.i.i.i:                                  ; preds = %for.body10.i.i.i, %for.end.i.i.i
  call void @free(ptr nonnull %458)
  %memberidx15.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 3
  %465 = load ptr, ptr %memberidx15.i.i.i, align 8
  %466 = call ptr @malloc(i32 25)
  %467 = load ptr, ptr %465, align 8
  %memberidx1.i101.i.i.i = getelementptr inbounds %Array_Class_, ptr %465, i64 0, i32 1
  %468 = load i64, ptr %memberidx1.i101.i.i.i, align 4
  %memberidx1.i.i102.i.i.i = getelementptr inbounds %ArrayIterator_Class_, ptr %466, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i102.i.i.i, align 4
  %memberidx2.i.i103.i.i.i = getelementptr inbounds %ArrayIterator_Class_, ptr %466, i64 0, i32 3
  store ptr %467, ptr %memberidx2.i.i103.i.i.i, align 8
  %469 = icmp slt i64 %468, 1
  br i1 %469, label %for.end19.i.i.i, label %for.body17.i.i.i

for.body17.i.i.i:                                 ; preds = %for.end12.i.i.i, %Class___del__.exit.i.i.i
  %470 = phi i64 [ %495, %Class___del__.exit.i.i.i ], [ 1, %for.end12.i.i.i ]
  %mod_class.0.i.i.i401.in = phi ptr [ %496, %Class___del__.exit.i.i.i ], [ %467, %for.end12.i.i.i ]
  %mod_class.0.i.i.i401 = load ptr, ptr %mod_class.0.i.i.i401.in, align 8
  %471 = load ptr, ptr %mod_class.0.i.i.i401, align 8
  call void @free(ptr %471)
  %memberidx2.i108.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 1
  %472 = load ptr, ptr %memberidx2.i108.i.i.i, align 8
  %473 = load ptr, ptr %472, align 8
  call void @free(ptr %473)
  call void @free(ptr %472)
  %memberidx3.i.i10.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 2
  %474 = load ptr, ptr %memberidx3.i.i10.i.i, align 8
  %.not.i.i.i.i = icmp eq ptr %474, null
  br i1 %.not.i.i.i.i, label %for.entry.i.i.i.i, label %if.entry.i.i.i.i

if.entry.i.i.i.i:                                 ; preds = %for.body17.i.i.i
  call void @free(ptr nonnull %474)
  br label %for.entry.i.i.i.i

for.entry.i.i.i.i:                                ; preds = %if.entry.i.i.i.i, %for.body17.i.i.i
  %memberidx5.i109.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 4
  %475 = load ptr, ptr %memberidx5.i109.i.i.i, align 8
  %476 = call ptr @malloc(i32 25)
  %477 = load ptr, ptr %475, align 8
  %memberidx1.i.i110.i.i.i = getelementptr inbounds %Array_ClassField_, ptr %475, i64 0, i32 1
  %478 = load i64, ptr %memberidx1.i.i110.i.i.i, align 4
  %479 = icmp slt i64 %478, 1
  br i1 %479, label %for.end.i.i.i.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.entry.i.i.i.i, %for.body.i.i.i.i
  %480 = phi i64 [ %481, %for.body.i.i.i.i ], [ 1, %for.entry.i.i.i.i ]
  %field.0.i.i.i.i393.in = phi ptr [ %482, %for.body.i.i.i.i ], [ %477, %for.entry.i.i.i.i ]
  %field.0.i.i.i.i393 = load ptr, ptr %field.0.i.i.i.i393.in, align 8
  call void @free(ptr %field.0.i.i.i.i393)
  %481 = add nuw nsw i64 %480, 1
  %482 = getelementptr inbounds ptr, ptr %477, i64 %480
  %.not566 = icmp slt i64 %480, %478
  br i1 %.not566, label %for.body.i.i.i.i, label %for.end.i.i.i.i

for.end.i.i.i.i:                                  ; preds = %for.body.i.i.i.i, %for.entry.i.i.i.i
  call void @free(ptr nonnull %476)
  %memberidx8.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 5
  %483 = load ptr, ptr %memberidx8.i.i.i.i, align 8
  %484 = call ptr @malloc(i32 25)
  %485 = load ptr, ptr %483, align 8
  %memberidx1.i32.i.i.i.i = getelementptr inbounds %Array_ClassMethod_, ptr %483, i64 0, i32 1
  %486 = load i64, ptr %memberidx1.i32.i.i.i.i, align 4
  %487 = icmp slt i64 %486, 1
  br i1 %487, label %Class___del__.exit.i.i.i, label %for.body10.i.i.i.i

for.body10.i.i.i.i:                               ; preds = %for.end.i.i.i.i, %for.body10.i.i.i.i
  %488 = phi i64 [ %489, %for.body10.i.i.i.i ], [ 1, %for.end.i.i.i.i ]
  %method.0.i.i.i.i397.in = phi ptr [ %490, %for.body10.i.i.i.i ], [ %485, %for.end.i.i.i.i ]
  %method.0.i.i.i.i397 = load ptr, ptr %method.0.i.i.i.i397.in, align 8
  call void @free(ptr %method.0.i.i.i.i397)
  %489 = add nuw nsw i64 %488, 1
  %490 = getelementptr inbounds ptr, ptr %485, i64 %488
  %.not567 = icmp slt i64 %488, %486
  br i1 %.not567, label %for.body10.i.i.i.i, label %Class___del__.exit.i.i.i

Class___del__.exit.i.i.i:                         ; preds = %for.body10.i.i.i.i, %for.end.i.i.i.i
  call void @free(ptr nonnull %484)
  %memberidx14.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 6
  %491 = load ptr, ptr %memberidx14.i.i.i.i, align 8
  %492 = load ptr, ptr %491, align 8
  call void @free(ptr %492)
  call void @free(ptr %491)
  %memberidx15.i.i.i.i = getelementptr inbounds %Class, ptr %mod_class.0.i.i.i401, i64 0, i32 7
  %493 = load ptr, ptr %memberidx15.i.i.i.i, align 8
  %494 = load ptr, ptr %493, align 8
  call void @free(ptr %494)
  call void @free(ptr %493)
  call void @free(ptr %mod_class.0.i.i.i401)
  %495 = add nuw nsw i64 %470, 1
  store i64 %495, ptr %memberidx1.i.i102.i.i.i, align 4
  %496 = getelementptr inbounds ptr, ptr %467, i64 %470
  %.not568 = icmp slt i64 %470, %468
  br i1 %.not568, label %for.body17.i.i.i, label %for.end19.i.i.i

for.end19.i.i.i:                                  ; preds = %Class___del__.exit.i.i.i, %for.end12.i.i.i
  call void @free(ptr nonnull %466)
  %memberidx22.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 6
  %497 = load ptr, ptr %memberidx22.i.i.i, align 8
  %498 = call ptr @malloc(i32 25)
  %499 = load ptr, ptr %497, align 8
  %memberidx1.i115.i.i.i = getelementptr inbounds %Array_Enum_, ptr %497, i64 0, i32 1
  %500 = load i64, ptr %memberidx1.i115.i.i.i, align 4
  %memberidx1.i.i116.i.i.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %498, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i116.i.i.i, align 4
  %memberidx2.i.i117.i.i.i = getelementptr inbounds %ArrayIterator_Enum_, ptr %498, i64 0, i32 3
  store ptr %499, ptr %memberidx2.i.i117.i.i.i, align 8
  %501 = icmp slt i64 %500, 1
  br i1 %501, label %for.end26.i.i.i, label %for.body24.i.i.i

for.body24.i.i.i:                                 ; preds = %for.end19.i.i.i, %Enum___del__.exit.i.i.i
  %502 = phi i64 [ %522, %Enum___del__.exit.i.i.i ], [ 1, %for.end19.i.i.i ]
  %mod_enum.0.i.i.i408.in = phi ptr [ %523, %Enum___del__.exit.i.i.i ], [ %499, %for.end19.i.i.i ]
  %mod_enum.0.i.i.i408 = load ptr, ptr %mod_enum.0.i.i.i408.in, align 8
  %503 = load ptr, ptr %mod_enum.0.i.i.i408, align 8
  call void @free(ptr %503)
  %memberidx1.i122.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i408, i64 0, i32 1
  %504 = load ptr, ptr %memberidx1.i122.i.i.i, align 8
  %505 = load ptr, ptr %504, align 8
  call void @free(ptr %505)
  call void @free(ptr %504)
  %memberidx2.i123.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i408, i64 0, i32 2
  %506 = load ptr, ptr %memberidx2.i123.i.i.i, align 8
  %507 = call ptr @malloc(i32 25)
  %508 = load ptr, ptr %506, align 8
  %memberidx1.i.i124.i.i.i = getelementptr inbounds %Array_EnumField_, ptr %506, i64 0, i32 1
  %509 = load i64, ptr %memberidx1.i.i124.i.i.i, align 4
  %510 = icmp slt i64 %509, 1
  br i1 %510, label %Enum___del__.exit.i.i.i, label %for.body.i134.i.i.i

for.body.i134.i.i.i:                              ; preds = %for.body24.i.i.i, %for.body.i134.i.i.i
  %511 = phi i64 [ %516, %for.body.i134.i.i.i ], [ 1, %for.body24.i.i.i ]
  %field.0.i132.i.i.i404.in = phi ptr [ %517, %for.body.i134.i.i.i ], [ %508, %for.body24.i.i.i ]
  %field.0.i132.i.i.i404 = load ptr, ptr %field.0.i132.i.i.i404.in, align 8
  %512 = load ptr, ptr %field.0.i132.i.i.i404, align 8
  call void @free(ptr %512)
  %memberidx1.i13.i.i.i.i = getelementptr inbounds %EnumField, ptr %field.0.i132.i.i.i404, i64 0, i32 1
  %513 = load ptr, ptr %memberidx1.i13.i.i.i.i, align 8
  %514 = load ptr, ptr %513, align 8
  call void @free(ptr %514)
  call void @free(ptr %513)
  %memberidx2.i14.i.i.i.i = getelementptr inbounds %EnumField, ptr %field.0.i132.i.i.i404, i64 0, i32 2
  %515 = load ptr, ptr %memberidx2.i14.i.i.i.i, align 8
  call void @free(ptr %515)
  call void @free(ptr %field.0.i132.i.i.i404)
  %516 = add nuw nsw i64 %511, 1
  %517 = getelementptr inbounds ptr, ptr %508, i64 %511
  %.not569 = icmp slt i64 %511, %509
  br i1 %.not569, label %for.body.i134.i.i.i, label %Enum___del__.exit.i.i.i

Enum___del__.exit.i.i.i:                          ; preds = %for.body.i134.i.i.i, %for.body24.i.i.i
  call void @free(ptr nonnull %507)
  %518 = load ptr, ptr %memberidx2.i123.i.i.i, align 8
  %519 = load ptr, ptr %518, align 8
  call void @free(ptr %519)
  call void @free(ptr %518)
  %memberidx5.i135.i.i.i = getelementptr inbounds %Enum, ptr %mod_enum.0.i.i.i408, i64 0, i32 3
  %520 = load ptr, ptr %memberidx5.i135.i.i.i, align 8
  %521 = load ptr, ptr %520, align 8
  call void @free(ptr %521)
  call void @free(ptr %520)
  call void @free(ptr %mod_enum.0.i.i.i408)
  %522 = add nuw nsw i64 %502, 1
  store i64 %522, ptr %memberidx1.i.i116.i.i.i, align 4
  %523 = getelementptr inbounds ptr, ptr %499, i64 %502
  %.not570 = icmp slt i64 %502, %500
  br i1 %.not570, label %for.body24.i.i.i, label %for.end26.i.i.i

for.end26.i.i.i:                                  ; preds = %Enum___del__.exit.i.i.i, %for.end19.i.i.i
  call void @free(ptr nonnull %498)
  %memberidx29.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 8
  %524 = load ptr, ptr %memberidx29.i.i.i, align 8
  %525 = call ptr @malloc(i32 25)
  %526 = load ptr, ptr %524, align 8
  %memberidx1.i140.i.i.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %524, i64 0, i32 1
  %527 = load i64, ptr %memberidx1.i140.i.i.i, align 4
  %528 = icmp slt i64 %527, 1
  br i1 %528, label %for.end33.i.i.i, label %for.body31.i.i.i

for.body31.i.i.i:                                 ; preds = %for.end26.i.i.i, %for.body31.i.i.i
  %529 = phi i64 [ %530, %for.body31.i.i.i ], [ 1, %for.end26.i.i.i ]
  %global_const.0.i.i.i411.in = phi ptr [ %531, %for.body31.i.i.i ], [ %526, %for.end26.i.i.i ]
  %global_const.0.i.i.i411 = load ptr, ptr %global_const.0.i.i.i411.in, align 8
  call void @free(ptr %global_const.0.i.i.i411)
  %530 = add nuw nsw i64 %529, 1
  %531 = getelementptr inbounds ptr, ptr %526, i64 %529
  %.not571 = icmp slt i64 %529, %527
  br i1 %.not571, label %for.body31.i.i.i, label %for.end33.i.i.i

for.end33.i.i.i:                                  ; preds = %for.body31.i.i.i, %for.end26.i.i.i
  call void @free(ptr nonnull %525)
  %memberidx36.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 9
  %532 = load ptr, ptr %memberidx36.i.i.i, align 8
  %533 = call ptr @malloc(i32 25)
  %534 = load ptr, ptr %532, align 8
  %memberidx1.i150.i.i.i = getelementptr inbounds %Array_VarDeclaration_, ptr %532, i64 0, i32 1
  %535 = load i64, ptr %memberidx1.i150.i.i.i, align 4
  %536 = icmp slt i64 %535, 1
  br i1 %536, label %Module___del__.exit.i.i, label %for.body38.i.i.i

for.body38.i.i.i:                                 ; preds = %for.end33.i.i.i, %for.body38.i.i.i
  %537 = phi i64 [ %538, %for.body38.i.i.i ], [ 1, %for.end33.i.i.i ]
  %global_var.0.i.i.i415.in = phi ptr [ %539, %for.body38.i.i.i ], [ %534, %for.end33.i.i.i ]
  %global_var.0.i.i.i415 = load ptr, ptr %global_var.0.i.i.i415.in, align 8
  call void @free(ptr %global_var.0.i.i.i415)
  %538 = add nuw nsw i64 %537, 1
  %539 = getelementptr inbounds ptr, ptr %534, i64 %537
  %.not572 = icmp slt i64 %537, %535
  br i1 %.not572, label %for.body38.i.i.i, label %Module___del__.exit.i.i

Module___del__.exit.i.i:                          ; preds = %for.body38.i.i.i, %for.end33.i.i.i
  call void @free(ptr nonnull %533)
  %memberidx42.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 7
  %540 = load ptr, ptr %memberidx42.i.i.i, align 8
  %memberidx43.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 5
  %541 = load ptr, ptr %memberidx43.i.i.i, align 8
  %memberidx44.i.i.i = getelementptr inbounds %ScopeId, ptr %541, i64 0, i32 1
  %542 = load i64, ptr %memberidx44.i.i.i, align 4
  %543 = load ptr, ptr %540, align 8
  %544 = getelementptr inbounds ptr, ptr %543, i64 %542
  %545 = load ptr, ptr %544, align 8
  call fastcc void @Scope___del__(ptr %545)
  call void @free(ptr %545)
  %546 = load ptr, ptr %module.0.i.i419, align 8
  %547 = load ptr, ptr %546, align 8
  call void @free(ptr %547)
  call void @free(ptr %546)
  %548 = load ptr, ptr %memberidx.i7.i.i, align 8
  %549 = load ptr, ptr %548, align 8
  call void @free(ptr %549)
  call void @free(ptr %548)
  %550 = load ptr, ptr %memberidx8.i.i159.i, align 8
  %551 = load ptr, ptr %550, align 8
  call void @free(ptr %551)
  call void @free(ptr %550)
  %552 = load ptr, ptr %memberidx15.i.i.i, align 8
  %553 = load ptr, ptr %552, align 8
  call void @free(ptr %553)
  call void @free(ptr %552)
  %554 = load ptr, ptr %memberidx22.i.i.i, align 8
  %555 = load ptr, ptr %554, align 8
  call void @free(ptr %555)
  call void @free(ptr %554)
  %556 = load ptr, ptr %memberidx42.i.i.i, align 8
  %557 = load ptr, ptr %556, align 8
  call void @free(ptr %557)
  call void @free(ptr %556)
  %558 = load ptr, ptr %memberidx29.i.i.i, align 8
  %559 = load ptr, ptr %558, align 8
  call void @free(ptr %559)
  call void @free(ptr %558)
  %560 = load ptr, ptr %memberidx36.i.i.i, align 8
  %561 = load ptr, ptr %560, align 8
  call void @free(ptr %561)
  call void @free(ptr %560)
  %memberidx53.i.i.i = getelementptr inbounds %Module, ptr %module.0.i.i419, i64 0, i32 2
  %562 = load ptr, ptr %memberidx53.i.i.i, align 8
  %563 = load ptr, ptr %562, align 8
  call void @free(ptr %563)
  call void @free(ptr %562)
  call void @free(ptr %module.0.i.i419)
  %564 = add nuw nsw i64 %448, 1
  store i64 %564, ptr %memberidx1.i.i.i147.i, align 4
  %565 = getelementptr inbounds ptr, ptr %445, i64 %448
  %566 = icmp sge i64 %448, %446
  %module.0.i.i = load ptr, ptr %565, align 8
  store i1 %566, ptr %444, align 1
  br i1 %566, label %Program___del__.exit.i, label %for.body.i156.i

Program___del__.exit.i:                           ; preds = %Module___del__.exit.i.i, %CodeGen_destroy.exit.i
  call void @free(ptr nonnull %444)
  %567 = load ptr, ptr %common.ret.op.i, align 8
  %568 = load ptr, ptr %567, align 8
  call void @free(ptr %568)
  call void @free(ptr %567)
  call void @free(ptr nonnull %common.ret.op.i)
  %569 = call ptr @malloc(i32 24)
  %570 = load ptr, ptr %9, align 8
  store ptr %570, ptr %569, align 8
  %memberidx1.i.i211 = getelementptr inbounds %GeneratedModule, ptr %569, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i211, align 8
  %571 = call i1 @LLVMVerifyModule(ptr %570, i64 1, ptr nonnull %memberidx1.i.i211)
  br i1 %571, label %if.entry.i.i, label %CodeGen_codegen.exit

if.entry.i.i:                                     ; preds = %Program___del__.exit.i
  %572 = call ptr @malloc(i32 8)
  store i64 7812670522611888741, ptr %572, align 8
  %573 = call ptr @malloc(i32 24)
  store ptr %572, ptr %573, align 8
  %memberidx1.i.i.i.i212 = getelementptr inbounds %String, ptr %573, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i.i.i212, align 4
  %memberidx2.i.i.i.i213 = getelementptr inbounds %String, ptr %573, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i.i.i213, align 4
  call fastcc void @GeneratedModule_write_ir(ptr nonnull %569, ptr nonnull %573)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  %574 = load ptr, ptr %memberidx1.i.i211, align 8
  %575 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %574)
  %576 = trunc i64 %575 to i32
  %577 = call ptr @malloc(i32 %576)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %577, ptr align 8 %574, i64 %575, i1 false)
  %578 = call ptr @malloc(i32 24)
  store ptr %577, ptr %578, align 8
  %memberidx1.i.i13.i.i = getelementptr inbounds %String, ptr %578, i64 0, i32 1
  store i64 %575, ptr %memberidx1.i.i13.i.i, align 4
  %memberidx2.i.i14.i.i = getelementptr inbounds %String, ptr %578, i64 0, i32 2
  store i64 %575, ptr %memberidx2.i.i14.i.i, align 4
  %579 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %579)
  %580 = add i32 %576, 1
  %581 = call ptr @malloc(i32 %580)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %581, ptr align 8 %577, i64 %575, i1 false)
  %582 = getelementptr inbounds i8, ptr %581, i64 %575
  store i8 0, ptr %582, align 1
  %583 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @2, ptr %581)
  %584 = load ptr, ptr %8, align 8
  %585 = call ptr @malloc(i32 24)
  call void @free(ptr %581)
  %586 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %586, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %587 = call ptr @malloc(i32 24)
  %588 = call i64 @write(i64 1, ptr %586, i64 7)
  call void @free(ptr %586)
  call void @free(ptr %587)
  %589 = call i64 @write(i64 1, ptr %584, i64 %583)
  %590 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %584)
  call void @free(ptr %585)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  br label %CodeGen_codegen.exit

CodeGen_codegen.exit:                             ; preds = %Program___del__.exit.i, %if.entry.i.i
  call void @LLVM_InitializeAllTargetInfos()
  call void @LLVM_InitializeAllTargets()
  call void @LLVM_InitializeAllTargetMCs()
  call void @LLVM_InitializeAllAsmParsers()
  call void @LLVM_InitializeAllAsmPrinters()
  call void @llvm.lifetime.end.p0(i64 81, ptr nonnull %9)
  %591 = load i64, ptr %memberidx.i161, align 8
  %592 = icmp eq i64 %591, 0
  br i1 %592, label %GeneratedModule_run_passes.exit, label %ifend.i216

ifend.i216:                                       ; preds = %CodeGen_codegen.exit
  %593 = call ptr @LLVMCreatePassManager()
  %594 = load ptr, ptr %569, align 8
  %595 = call ptr @LLVMCreateFunctionPassManagerForModule(ptr %594)
  %596 = call ptr @LLVMPassManagerBuilderCreate()
  call void @LLVMAddInternalizePass(ptr %593, i64 1)
  call void @LLVMAddGlobalDCEPass(ptr %593)
  call void @LLVMAddGlobalOptimizerPass(ptr %593)
  call void @LLVMAddInstructionCombiningPass(ptr %593)
  call void @LLVMAddScalarReplAggregatesPass(ptr %593)
  call void @LLVMAddFunctionInliningPass(ptr %593)
  call void @LLVMPassManagerBuilderSetOptLevel(ptr %596, i64 %591)
  call void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr %596, i64 255)
  call void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr %596, ptr %595)
  %597 = load ptr, ptr %569, align 8
  %598 = call ptr @LLVMGetFirstFunction(ptr %597)
  %.not.i = icmp eq ptr %598, null
  br i1 %.not.i, label %while.end.i, label %while.entry.i

while.entry.i:                                    ; preds = %ifend.i216, %while.entry.i
  %func.0.i = phi ptr [ %600, %while.entry.i ], [ %598, %ifend.i216 ]
  %599 = call i1 @LLVMRunFunctionPassManager(ptr %595, ptr nonnull %func.0.i)
  %600 = call ptr @LLVMGetNextFunction(ptr nonnull %func.0.i)
  %.not23.i = icmp eq ptr %600, null
  br i1 %.not23.i, label %while.end.i, label %while.entry.i

while.end.i:                                      ; preds = %while.entry.i, %ifend.i216
  call void @LLVMPassManagerBuilderPopulateModulePassManager(ptr %596, ptr %593)
  %601 = load ptr, ptr %569, align 8
  %602 = call i1 @LLVMRunPassManager(ptr %593, ptr %601)
  call void @LLVMDisposePassManager(ptr %595)
  call void @LLVMPassManagerBuilderDispose(ptr %596)
  call void @LLVMDisposePassManager(ptr %593)
  br label %GeneratedModule_run_passes.exit

GeneratedModule_run_passes.exit:                  ; preds = %CodeGen_codegen.exit, %while.end.i
  %603 = load ptr, ptr %memberidx.i143, align 8
  call fastcc void @GeneratedModule_set_target_machine(ptr nonnull %569, ptr %603)
  %604 = load ptr, ptr %memberidx.i111, align 8
  %605 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %605, ptr noundef nonnull align 8 dereferenceable(3) @294, i64 3, i1 false)
  %606 = call ptr @malloc(i32 24)
  store ptr %605, ptr %606, align 8
  %memberidx1.i.i217 = getelementptr inbounds %String, ptr %606, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i217, align 4
  %memberidx2.i.i218 = getelementptr inbounds %String, ptr %606, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i218, align 4
  %memberidx.i219 = getelementptr inbounds %String, ptr %604, i64 0, i32 1
  %607 = load i64, ptr %memberidx.i219, align 4
  %.not.i221 = icmp eq i64 %607, 3
  br i1 %.not.i221, label %ifend.i223, label %else32

ifend.i223:                                       ; preds = %GeneratedModule_run_passes.exit
  %608 = load ptr, ptr %604, align 8
  %609 = call i64 @memcmp(ptr %608, ptr nonnull %605, i64 3)
  %610 = icmp eq i64 %609, 0
  br i1 %610, label %if.entry31, label %else32

if.entry31:                                       ; preds = %ifend.i223
  %611 = call ptr @malloc(i32 13)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %611, ptr noundef nonnull align 8 dereferenceable(13) @295, i64 13, i1 false)
  %612 = call ptr @malloc(i32 24)
  store ptr %611, ptr %612, align 8
  %memberidx1.i.i224 = getelementptr inbounds %String, ptr %612, i64 0, i32 1
  store i64 13, ptr %memberidx1.i.i224, align 4
  %memberidx2.i.i225 = getelementptr inbounds %String, ptr %612, i64 0, i32 2
  store i64 13, ptr %memberidx2.i.i225, align 4
  %613 = call ptr @malloc(i32 14)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %613, ptr noundef nonnull align 8 dereferenceable(13) %611, i64 13, i1 false)
  %614 = getelementptr inbounds i8, ptr %613, i64 13
  store i8 0, ptr %614, align 1
  %memberidx.i226 = getelementptr inbounds %GeneratedModule, ptr %569, i64 0, i32 2
  %615 = load ptr, ptr %memberidx.i226, align 8
  %616 = load ptr, ptr %569, align 8
  %617 = call i1 @LLVMTargetMachineEmitToFile(ptr %615, ptr %616, ptr %613, i64 1, ptr nonnull %memberidx1.i.i211)
  br i1 %617, label %if.entry.i, label %GeneratedModule_write_obj.exit

if.entry.i:                                       ; preds = %if.entry31
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %618 = load ptr, ptr %memberidx1.i.i211, align 8
  %619 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %618)
  %620 = trunc i64 %619 to i32
  %621 = call ptr @malloc(i32 %620)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %621, ptr align 8 %618, i64 %619, i1 false)
  %622 = call ptr @malloc(i32 24)
  store ptr %621, ptr %622, align 8
  %memberidx1.i.i327 = getelementptr inbounds %String, ptr %622, i64 0, i32 1
  store i64 %619, ptr %memberidx1.i.i327, align 4
  %memberidx2.i.i328 = getelementptr inbounds %String, ptr %622, i64 0, i32 2
  store i64 %619, ptr %memberidx2.i.i328, align 4
  %623 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %623)
  %624 = add i32 %620, 1
  %625 = call ptr @malloc(i32 %624)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %625, ptr align 8 %621, i64 %619, i1 false)
  %626 = getelementptr inbounds i8, ptr %625, i64 %619
  store i8 0, ptr %626, align 1
  %627 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @2, ptr %625)
  %628 = load ptr, ptr %4, align 8
  %629 = call ptr @malloc(i32 24)
  call void @free(ptr %625)
  %630 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %630, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %631 = call ptr @malloc(i32 24)
  %632 = call i64 @write(i64 1, ptr %630, i64 7)
  call void @free(ptr %630)
  call void @free(ptr %631)
  %633 = call i64 @write(i64 1, ptr %628, i64 %627)
  %634 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %628)
  call void @free(ptr %629)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %GeneratedModule_write_obj.exit

GeneratedModule_write_obj.exit:                   ; preds = %if.entry31, %if.entry.i
  call void @free(ptr nonnull %613)
  call void @free(ptr nonnull %611)
  call void @free(ptr nonnull %612)
  %635 = load ptr, ptr %memberidx.i152, align 8
  %.not = icmp eq ptr %635, null
  br i1 %.not, label %false_block, label %true_block

else32:                                           ; preds = %GeneratedModule_run_passes.exit, %ifend.i223
  %636 = load ptr, ptr %memberidx.i111, align 8
  %637 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %637, ptr noundef nonnull align 8 dereferenceable(7) @300, i64 7, i1 false)
  %638 = call ptr @malloc(i32 24)
  store ptr %637, ptr %638, align 8
  %memberidx1.i.i229 = getelementptr inbounds %String, ptr %638, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i229, align 4
  %memberidx2.i.i230 = getelementptr inbounds %String, ptr %638, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i230, align 4
  %memberidx.i231 = getelementptr inbounds %String, ptr %636, i64 0, i32 1
  %639 = load i64, ptr %memberidx.i231, align 4
  %.not.i233 = icmp eq i64 %639, 7
  br i1 %.not.i233, label %ifend.i235, label %else43

ifend.i235:                                       ; preds = %else32
  %640 = load ptr, ptr %636, align 8
  %641 = call i64 @memcmp(ptr %640, ptr nonnull %637, i64 7)
  %642 = icmp eq i64 %641, 0
  br i1 %642, label %if.entry42, label %else43

ifend33:                                          ; preds = %GeneratedModule_write_asm.exit, %GeneratedModule_exec.exit, %GeneratedModule_write_obj.exit283, %if.entry47, %if.entry42, %end
  %code.0 = phi i64 [ 0, %end ], [ 0, %if.entry42 ], [ 0, %if.entry47 ], [ 0, %GeneratedModule_write_obj.exit283 ], [ 0, %GeneratedModule_write_asm.exit ], [ %common.ret.op.i313, %GeneratedModule_exec.exit ]
  tail call void @free(ptr %183)
  br label %common.ret

true_block:                                       ; preds = %GeneratedModule_write_obj.exit
  %memberidx.i237 = getelementptr inbounds %String, ptr %635, i64 0, i32 1
  %643 = load i64, ptr %memberidx.i237, align 4
  %644 = trunc i64 %643 to i32
  %645 = add i32 %644, 1
  %646 = call ptr @malloc(i32 %645)
  %647 = load ptr, ptr %635, align 8
  %648 = load i64, ptr %memberidx.i237, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %646, ptr align 8 %647, i64 %648, i1 false)
  %649 = getelementptr inbounds i8, ptr %646, i64 %648
  store i8 0, ptr %649, align 1
  %650 = alloca ptr, align 8
  %651 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %650, ptr nonnull @296, ptr %646)
  %652 = load ptr, ptr %650, align 8
  %653 = tail call ptr @malloc(i32 24)
  store ptr %652, ptr %653, align 8
  %memberidx1.i238 = getelementptr inbounds %String, ptr %653, i64 0, i32 1
  store i64 %651, ptr %memberidx1.i238, align 4
  %memberidx2.i239 = getelementptr inbounds %String, ptr %653, i64 0, i32 2
  store i64 %651, ptr %memberidx2.i239, align 4
  tail call void @free(ptr %646)
  br label %end

false_block:                                      ; preds = %GeneratedModule_write_obj.exit
  %654 = call ptr @malloc(i32 0)
  %655 = call ptr @malloc(i32 24)
  store ptr %654, ptr %655, align 8
  %memberidx1.i.i240 = getelementptr inbounds %String, ptr %655, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i240, i8 0, i64 16, i1 false)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %653, %true_block ], [ %655, %false_block ]
  %656 = call ptr @malloc(i32 8)
  store i64 3832894680125762659, ptr %656, align 8
  %657 = call ptr @malloc(i32 24)
  store ptr %656, ptr %657, align 8
  %memberidx.i244 = getelementptr inbounds %String, ptr %ternary, i64 0, i32 1
  %658 = load i64, ptr %memberidx.i244, align 4
  %659 = trunc i64 %658 to i32
  %660 = add i32 %659, 1
  %661 = call ptr @malloc(i32 %660)
  %662 = load ptr, ptr %ternary, align 8
  %663 = load i64, ptr %memberidx.i244, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %661, ptr align 8 %662, i64 %663, i1 false)
  %664 = getelementptr inbounds i8, ptr %661, i64 %663
  store i8 0, ptr %664, align 1
  %665 = alloca ptr, align 8
  %666 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %665, ptr nonnull @297, ptr %661)
  %667 = load ptr, ptr %665, align 8
  %668 = tail call ptr @malloc(i32 24)
  store ptr %667, ptr %668, align 8
  tail call void @free(ptr %661)
  %669 = call ptr @malloc(i32 9)
  %670 = load i64, ptr %656, align 8
  store i64 %670, ptr %669, align 8
  %671 = getelementptr inbounds i8, ptr %669, i64 8
  store i8 0, ptr %671, align 1
  %672 = trunc i64 %666 to i32
  %673 = add i32 %672, 1
  %674 = call ptr @malloc(i32 %673)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %674, ptr align 8 %667, i64 %666, i1 false)
  %675 = getelementptr inbounds i8, ptr %674, i64 %666
  store i8 0, ptr %675, align 1
  %676 = load ptr, ptr %memberidx1.i.i149, align 8
  %memberidx.i249 = getelementptr inbounds %String, ptr %676, i64 0, i32 1
  %677 = load i64, ptr %memberidx.i249, align 4
  %678 = trunc i64 %677 to i32
  %679 = add i32 %678, 1
  %680 = call ptr @malloc(i32 %679)
  %681 = load ptr, ptr %676, align 8
  %682 = load i64, ptr %memberidx.i249, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %680, ptr align 8 %681, i64 %682, i1 false)
  %683 = getelementptr inbounds i8, ptr %680, i64 %682
  store i8 0, ptr %683, align 1
  %684 = load ptr, ptr %memberidx.i152, align 8
  %memberidx.i250 = getelementptr inbounds %String, ptr %684, i64 0, i32 1
  %685 = load i64, ptr %memberidx.i250, align 4
  %686 = trunc i64 %685 to i32
  %687 = add i32 %686, 1
  %688 = call ptr @malloc(i32 %687)
  %689 = load ptr, ptr %684, align 8
  %690 = load i64, ptr %memberidx.i250, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %688, ptr align 8 %689, i64 %690, i1 false)
  %691 = getelementptr inbounds i8, ptr %688, i64 %690
  store i8 0, ptr %691, align 1
  %692 = load ptr, ptr %memberidx2.i.i150, align 8
  %memberidx.i251 = getelementptr inbounds %String, ptr %692, i64 0, i32 1
  %693 = load i64, ptr %memberidx.i251, align 4
  %694 = trunc i64 %693 to i32
  %695 = add i32 %694, 1
  %696 = call ptr @malloc(i32 %695)
  %697 = load ptr, ptr %692, align 8
  %698 = load i64, ptr %memberidx.i251, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %696, ptr align 8 %697, i64 %698, i1 false)
  %699 = getelementptr inbounds i8, ptr %696, i64 %698
  store i8 0, ptr %699, align 1
  %700 = load i64, ptr %70, align 8
  %701 = getelementptr inbounds ptr, ptr @FlagType_names, i64 %700
  %702 = load ptr, ptr %701, align 8
  %703 = alloca ptr, align 8
  %704 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %703, ptr nonnull @298, ptr %680, ptr %688, ptr %696, ptr %702)
  %705 = load ptr, ptr %703, align 8
  %706 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i252 = getelementptr inbounds %String, ptr %706, i64 0, i32 1
  %707 = load i64, ptr %memberidx.i252, align 4
  %708 = trunc i64 %707 to i32
  %709 = add i32 %708, 1
  %710 = call ptr @malloc(i32 %709)
  %711 = load ptr, ptr %706, align 8
  %712 = load i64, ptr %memberidx.i252, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %710, ptr align 8 %711, i64 %712, i1 false)
  %713 = getelementptr inbounds i8, ptr %710, i64 %712
  store i8 0, ptr %713, align 1
  %714 = alloca ptr, align 8
  %715 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %714, ptr nonnull @299, ptr nonnull %669, ptr %674, ptr %705, ptr %710)
  %716 = load ptr, ptr %714, align 8
  tail call void @free(ptr %669)
  tail call void @free(ptr %674)
  tail call void @free(ptr %680)
  tail call void @free(ptr %688)
  tail call void @free(ptr %696)
  tail call void @free(ptr %705)
  tail call void @free(ptr %710)
  call void @system(ptr %716)
  call void @free(ptr %667)
  tail call void @free(ptr %668)
  %717 = load ptr, ptr %ternary, align 8
  call void @free(ptr %717)
  tail call void @free(ptr nonnull %ternary)
  call void @free(ptr %656)
  tail call void @free(ptr %657)
  br label %ifend33

if.entry42:                                       ; preds = %ifend.i235
  %718 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i253 = getelementptr inbounds %String, ptr %718, i64 0, i32 1
  %719 = load i64, ptr %memberidx.i253, align 4
  %720 = trunc i64 %719 to i32
  %721 = add i32 %720, 1
  %722 = call ptr @malloc(i32 %721)
  %723 = load ptr, ptr %718, align 8
  %724 = load i64, ptr %memberidx.i253, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %722, ptr align 8 %723, i64 %724, i1 false)
  %725 = getelementptr inbounds i8, ptr %722, i64 %724
  store i8 0, ptr %725, align 1
  %726 = alloca ptr, align 8
  %727 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %726, ptr nonnull @6, ptr %722)
  %728 = load ptr, ptr %726, align 8
  %729 = tail call ptr @malloc(i32 24)
  store ptr %728, ptr %729, align 8
  %memberidx1.i254 = getelementptr inbounds %String, ptr %729, i64 0, i32 1
  store i64 %727, ptr %memberidx1.i254, align 4
  %memberidx2.i255 = getelementptr inbounds %String, ptr %729, i64 0, i32 2
  store i64 %727, ptr %memberidx2.i255, align 4
  tail call void @free(ptr %722)
  call fastcc void @GeneratedModule_write_ir(ptr nonnull %569, ptr nonnull %729)
  br label %ifend33

else43:                                           ; preds = %else32, %ifend.i235
  %730 = load ptr, ptr %memberidx.i111, align 8
  %731 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %731, ptr noundef nonnull align 8 dereferenceable(7) @301, i64 7, i1 false)
  %732 = call ptr @malloc(i32 24)
  store ptr %731, ptr %732, align 8
  %memberidx1.i.i256 = getelementptr inbounds %String, ptr %732, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i256, align 4
  %memberidx2.i.i257 = getelementptr inbounds %String, ptr %732, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i257, align 4
  %memberidx.i258 = getelementptr inbounds %String, ptr %730, i64 0, i32 1
  %733 = load i64, ptr %memberidx.i258, align 4
  %.not.i260 = icmp eq i64 %733, 7
  br i1 %.not.i260, label %ifend.i262, label %else48

ifend.i262:                                       ; preds = %else43
  %734 = load ptr, ptr %730, align 8
  %735 = call i64 @memcmp(ptr %734, ptr nonnull %731, i64 7)
  %736 = icmp eq i64 %735, 0
  br i1 %736, label %if.entry47, label %else48

if.entry47:                                       ; preds = %ifend.i262
  %737 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i264 = getelementptr inbounds %String, ptr %737, i64 0, i32 1
  %738 = load i64, ptr %memberidx.i264, align 4
  %739 = trunc i64 %738 to i32
  %740 = add i32 %739, 1
  %741 = call ptr @malloc(i32 %740)
  %742 = load ptr, ptr %737, align 8
  %743 = load i64, ptr %memberidx.i264, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %741, ptr align 8 %742, i64 %743, i1 false)
  %744 = getelementptr inbounds i8, ptr %741, i64 %743
  store i8 0, ptr %744, align 1
  %745 = alloca ptr, align 8
  %746 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %745, ptr nonnull @6, ptr %741)
  %747 = load ptr, ptr %745, align 8
  %748 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %741)
  %749 = trunc i64 %746 to i32
  %750 = add i32 %749, 1
  %751 = call ptr @malloc(i32 %750)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %751, ptr align 8 %747, i64 %746, i1 false)
  %752 = getelementptr inbounds i8, ptr %751, i64 %746
  store i8 0, ptr %752, align 1
  %753 = load ptr, ptr %569, align 8
  %754 = call i64 @LLVMWriteBitcodeToFile(ptr %753, ptr %751)
  call void @free(ptr %751)
  call void @free(ptr %747)
  call void @free(ptr %748)
  br label %ifend33

else48:                                           ; preds = %else43, %ifend.i262
  %755 = load ptr, ptr %memberidx.i111, align 8
  %756 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %756, ptr noundef nonnull align 8 dereferenceable(3) @302, i64 3, i1 false)
  %757 = call ptr @malloc(i32 24)
  store ptr %756, ptr %757, align 8
  %memberidx1.i.i268 = getelementptr inbounds %String, ptr %757, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i268, align 4
  %memberidx2.i.i269 = getelementptr inbounds %String, ptr %757, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i269, align 4
  %memberidx.i270 = getelementptr inbounds %String, ptr %755, i64 0, i32 1
  %758 = load i64, ptr %memberidx.i270, align 4
  %.not.i272 = icmp eq i64 %758, 3
  br i1 %.not.i272, label %ifend.i274, label %else53

ifend.i274:                                       ; preds = %else48
  %759 = load ptr, ptr %755, align 8
  %760 = call i64 @memcmp(ptr %759, ptr nonnull %756, i64 3)
  %761 = icmp eq i64 %760, 0
  br i1 %761, label %if.entry52, label %else53

if.entry52:                                       ; preds = %ifend.i274
  %762 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i276 = getelementptr inbounds %String, ptr %762, i64 0, i32 1
  %763 = load i64, ptr %memberidx.i276, align 4
  %764 = trunc i64 %763 to i32
  %765 = add i32 %764, 1
  %766 = call ptr @malloc(i32 %765)
  %767 = load ptr, ptr %762, align 8
  %768 = load i64, ptr %memberidx.i276, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %766, ptr align 8 %767, i64 %768, i1 false)
  %769 = getelementptr inbounds i8, ptr %766, i64 %768
  store i8 0, ptr %769, align 1
  %770 = alloca ptr, align 8
  %771 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %770, ptr nonnull @6, ptr %766)
  %772 = load ptr, ptr %770, align 8
  %773 = tail call ptr @malloc(i32 24)
  store ptr %772, ptr %773, align 8
  %memberidx1.i277 = getelementptr inbounds %String, ptr %773, i64 0, i32 1
  store i64 %771, ptr %memberidx1.i277, align 4
  %memberidx2.i278 = getelementptr inbounds %String, ptr %773, i64 0, i32 2
  store i64 %771, ptr %memberidx2.i278, align 4
  tail call void @free(ptr %766)
  %774 = trunc i64 %771 to i32
  %775 = add i32 %774, 1
  %776 = call ptr @malloc(i32 %775)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %776, ptr align 8 %772, i64 %771, i1 false)
  %777 = getelementptr inbounds i8, ptr %776, i64 %771
  store i8 0, ptr %777, align 1
  %memberidx.i279 = getelementptr inbounds %GeneratedModule, ptr %569, i64 0, i32 2
  %778 = load ptr, ptr %memberidx.i279, align 8
  %779 = load ptr, ptr %569, align 8
  %780 = call i1 @LLVMTargetMachineEmitToFile(ptr %778, ptr %779, ptr %776, i64 1, ptr nonnull %memberidx1.i.i211)
  br i1 %780, label %if.entry.i281, label %GeneratedModule_write_obj.exit283

if.entry.i281:                                    ; preds = %if.entry52
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %781 = load ptr, ptr %memberidx1.i.i211, align 8
  %782 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %781)
  %783 = trunc i64 %782 to i32
  %784 = call ptr @malloc(i32 %783)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %784, ptr align 8 %781, i64 %782, i1 false)
  %785 = call ptr @malloc(i32 24)
  store ptr %784, ptr %785, align 8
  %memberidx1.i.i332 = getelementptr inbounds %String, ptr %785, i64 0, i32 1
  store i64 %782, ptr %memberidx1.i.i332, align 4
  %memberidx2.i.i333 = getelementptr inbounds %String, ptr %785, i64 0, i32 2
  store i64 %782, ptr %memberidx2.i.i333, align 4
  %786 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %786)
  %787 = add i32 %783, 1
  %788 = call ptr @malloc(i32 %787)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %788, ptr align 8 %784, i64 %782, i1 false)
  %789 = getelementptr inbounds i8, ptr %788, i64 %782
  store i8 0, ptr %789, align 1
  %790 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %788)
  %791 = load ptr, ptr %3, align 8
  %792 = call ptr @malloc(i32 24)
  call void @free(ptr %788)
  %793 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %793, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %794 = call ptr @malloc(i32 24)
  %795 = call i64 @write(i64 1, ptr %793, i64 7)
  call void @free(ptr %793)
  call void @free(ptr %794)
  %796 = call i64 @write(i64 1, ptr %791, i64 %790)
  %797 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %791)
  call void @free(ptr %792)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %GeneratedModule_write_obj.exit283

GeneratedModule_write_obj.exit283:                ; preds = %if.entry52, %if.entry.i281
  call void @free(ptr nonnull %776)
  call void @free(ptr %772)
  call void @free(ptr nonnull %773)
  br label %ifend33

else53:                                           ; preds = %else48, %ifend.i274
  %798 = load ptr, ptr %memberidx.i111, align 8
  %799 = call ptr @malloc(i32 3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %799, ptr noundef nonnull align 8 dereferenceable(3) @303, i64 3, i1 false)
  %800 = call ptr @malloc(i32 24)
  store ptr %799, ptr %800, align 8
  %memberidx1.i.i284 = getelementptr inbounds %String, ptr %800, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i284, align 4
  %memberidx2.i.i285 = getelementptr inbounds %String, ptr %800, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i285, align 4
  %memberidx.i286 = getelementptr inbounds %String, ptr %798, i64 0, i32 1
  %801 = load i64, ptr %memberidx.i286, align 4
  %.not.i288 = icmp eq i64 %801, 3
  br i1 %.not.i288, label %ifend.i290, label %else58

ifend.i290:                                       ; preds = %else53
  %802 = load ptr, ptr %798, align 8
  %803 = call i64 @memcmp(ptr %802, ptr nonnull %799, i64 3)
  %804 = icmp eq i64 %803, 0
  br i1 %804, label %if.entry57, label %else58

if.entry57:                                       ; preds = %ifend.i290
  %805 = load ptr, ptr %memberidx.i121, align 8
  %memberidx.i292 = getelementptr inbounds %String, ptr %805, i64 0, i32 1
  %806 = load i64, ptr %memberidx.i292, align 4
  %807 = trunc i64 %806 to i32
  %808 = add i32 %807, 1
  %809 = call ptr @malloc(i32 %808)
  %810 = load ptr, ptr %805, align 8
  %811 = load i64, ptr %memberidx.i292, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %809, ptr align 8 %810, i64 %811, i1 false)
  %812 = getelementptr inbounds i8, ptr %809, i64 %811
  store i8 0, ptr %812, align 1
  %813 = alloca ptr, align 8
  %814 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %813, ptr nonnull @6, ptr %809)
  %815 = load ptr, ptr %813, align 8
  %816 = tail call ptr @malloc(i32 24)
  store ptr %815, ptr %816, align 8
  %memberidx1.i293 = getelementptr inbounds %String, ptr %816, i64 0, i32 1
  store i64 %814, ptr %memberidx1.i293, align 4
  %memberidx2.i294 = getelementptr inbounds %String, ptr %816, i64 0, i32 2
  store i64 %814, ptr %memberidx2.i294, align 4
  tail call void @free(ptr %809)
  %817 = trunc i64 %814 to i32
  %818 = add i32 %817, 1
  %819 = call ptr @malloc(i32 %818)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %819, ptr align 8 %815, i64 %814, i1 false)
  %820 = getelementptr inbounds i8, ptr %819, i64 %814
  store i8 0, ptr %820, align 1
  %memberidx.i296 = getelementptr inbounds %GeneratedModule, ptr %569, i64 0, i32 2
  %821 = load ptr, ptr %memberidx.i296, align 8
  %822 = load ptr, ptr %569, align 8
  %823 = call i1 @LLVMTargetMachineEmitToFile(ptr %821, ptr %822, ptr %819, i64 0, ptr nonnull %memberidx1.i.i211)
  br i1 %823, label %if.entry.i304, label %GeneratedModule_write_asm.exit

if.entry.i304:                                    ; preds = %if.entry57
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  %824 = load ptr, ptr %memberidx1.i.i211, align 8
  %825 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %824)
  %826 = trunc i64 %825 to i32
  %827 = call ptr @malloc(i32 %826)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %827, ptr align 8 %824, i64 %825, i1 false)
  %828 = call ptr @malloc(i32 24)
  store ptr %827, ptr %828, align 8
  %memberidx1.i.i11.i = getelementptr inbounds %String, ptr %828, i64 0, i32 1
  store i64 %825, ptr %memberidx1.i.i11.i, align 4
  %memberidx2.i.i12.i = getelementptr inbounds %String, ptr %828, i64 0, i32 2
  store i64 %825, ptr %memberidx2.i.i12.i, align 4
  %829 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %829)
  %830 = add i32 %826, 1
  %831 = call ptr @malloc(i32 %830)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %831, ptr align 8 %827, i64 %825, i1 false)
  %832 = getelementptr inbounds i8, ptr %831, i64 %825
  store i8 0, ptr %832, align 1
  %833 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %7, ptr nonnull @2, ptr %831)
  %834 = load ptr, ptr %7, align 8
  %835 = call ptr @malloc(i32 24)
  call void @free(ptr %831)
  %836 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %836, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %837 = call ptr @malloc(i32 24)
  %838 = call i64 @write(i64 1, ptr %836, i64 7)
  call void @free(ptr %836)
  call void @free(ptr %837)
  %839 = call i64 @write(i64 1, ptr %834, i64 %833)
  %840 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %834)
  call void @free(ptr %835)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  br label %GeneratedModule_write_asm.exit

GeneratedModule_write_asm.exit:                   ; preds = %if.entry57, %if.entry.i304
  call void @free(ptr nonnull %819)
  call void @free(ptr %815)
  call void @free(ptr nonnull %816)
  br label %ifend33

else58:                                           ; preds = %else53, %ifend.i290
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %engine.i)
  call void @LLVMLinkInMCJIT()
  store ptr null, ptr %engine.i, align 8
  %841 = load ptr, ptr %569, align 8
  %842 = call i1 @LLVMCreateExecutionEngineForModule(ptr nonnull %engine.i, ptr %841, ptr nonnull %memberidx1.i.i211)
  br i1 %842, label %if.entry.i311, label %ifend.i312

if.entry.i311:                                    ; preds = %else58
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %843 = load ptr, ptr %memberidx1.i.i211, align 8
  %844 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %843)
  %845 = trunc i64 %844 to i32
  %846 = call ptr @malloc(i32 %845)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %846, ptr align 8 %843, i64 %844, i1 false)
  %847 = call ptr @malloc(i32 24)
  store ptr %846, ptr %847, align 8
  %memberidx1.i.i32.i = getelementptr inbounds %String, ptr %847, i64 0, i32 1
  store i64 %844, ptr %memberidx1.i.i32.i, align 4
  %memberidx2.i.i33.i = getelementptr inbounds %String, ptr %847, i64 0, i32 2
  store i64 %844, ptr %memberidx2.i.i33.i, align 4
  %848 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %848)
  %849 = add i32 %845, 1
  %850 = call ptr @malloc(i32 %849)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %850, ptr align 8 %846, i64 %844, i1 false)
  %851 = getelementptr inbounds i8, ptr %850, i64 %844
  store i8 0, ptr %851, align 1
  %852 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @2, ptr %850)
  %853 = load ptr, ptr %6, align 8
  %854 = call ptr @malloc(i32 24)
  call void @free(ptr %850)
  %855 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %855, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %856 = call ptr @malloc(i32 24)
  %857 = call i64 @write(i64 1, ptr %855, i64 7)
  call void @free(ptr %855)
  call void @free(ptr %856)
  %858 = call i64 @write(i64 1, ptr %853, i64 %852)
  %859 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %853)
  call void @free(ptr %854)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  br label %ifend.i312

ifend.i312:                                       ; preds = %if.entry.i311, %else58
  %860 = load ptr, ptr %569, align 8
  %861 = call ptr @LLVMGetNamedFunction(ptr %860, ptr nonnull @3)
  %862 = icmp eq ptr %861, null
  br i1 %862, label %if.entry4.i, label %ifend6.i

if.entry4.i:                                      ; preds = %ifend.i312
  %863 = call ptr @malloc(i32 48)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %863, ptr noundef nonnull align 8 dereferenceable(48) @4, i64 48, i1 false)
  %864 = call ptr @malloc(i32 24)
  %865 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %865, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %866 = call ptr @malloc(i32 24)
  %867 = call i64 @write(i64 1, ptr %865, i64 7)
  call void @free(ptr %865)
  call void @free(ptr %866)
  %868 = call i64 @write(i64 1, ptr %863, i64 48)
  %869 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %863)
  call void @free(ptr %864)
  call void @exit(i64 -1)
  br label %GeneratedModule_exec.exit

ifend6.i:                                         ; preds = %ifend.i312
  %870 = load ptr, ptr %engine.i, align 8
  %871 = call i64 @LLVMRunFunctionAsMain(ptr %870, ptr nonnull %861, i64 0, ptr null, ptr null)
  %872 = load ptr, ptr %engine.i, align 8
  %873 = load ptr, ptr %569, align 8
  %874 = call i1 @LLVMRemoveModule(ptr %872, ptr %873, ptr nonnull %569, ptr nonnull %memberidx1.i.i211)
  br i1 %874, label %if.entry12.i, label %GeneratedModule_exec.exit

if.entry12.i:                                     ; preds = %ifend6.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %875 = load ptr, ptr %memberidx1.i.i211, align 8
  %876 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %875)
  %877 = trunc i64 %876 to i32
  %878 = call ptr @malloc(i32 %877)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %878, ptr align 8 %875, i64 %876, i1 false)
  %879 = call ptr @malloc(i32 24)
  store ptr %878, ptr %879, align 8
  %memberidx1.i.i38.i = getelementptr inbounds %String, ptr %879, i64 0, i32 1
  store i64 %876, ptr %memberidx1.i.i38.i, align 4
  %memberidx2.i.i39.i = getelementptr inbounds %String, ptr %879, i64 0, i32 2
  store i64 %876, ptr %memberidx2.i.i39.i, align 4
  %880 = load ptr, ptr %memberidx1.i.i211, align 8
  call void @LLVMDisposeMessage(ptr %880)
  %881 = add i32 %877, 1
  %882 = call ptr @malloc(i32 %881)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %882, ptr align 8 %878, i64 %876, i1 false)
  %883 = getelementptr inbounds i8, ptr %882, i64 %876
  store i8 0, ptr %883, align 1
  %884 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @2, ptr %882)
  %885 = load ptr, ptr %5, align 8
  %886 = call ptr @malloc(i32 24)
  call void @free(ptr %882)
  %887 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %887, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %888 = call ptr @malloc(i32 24)
  %889 = call i64 @write(i64 1, ptr %887, i64 7)
  call void @free(ptr %887)
  call void @free(ptr %888)
  %890 = call i64 @write(i64 1, ptr %885, i64 %884)
  %891 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %885)
  call void @free(ptr %886)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  br label %GeneratedModule_exec.exit

GeneratedModule_exec.exit:                        ; preds = %ifend6.i, %if.entry12.i, %if.entry4.i
  %common.ret.op.i313 = phi i64 [ 1, %if.entry4.i ], [ %871, %if.entry12.i ], [ %871, %ifend6.i ]
  %.sink = load ptr, ptr %engine.i, align 8
  call void @LLVMDisposeExecutionEngine(ptr %.sink)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %engine.i)
  br label %ifend33
}

declare noalias ptr @malloc(i32) local_unnamed_addr

; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1

declare i64 @memcmp(ptr, ptr, i64) local_unnamed_addr

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free")
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(ptr nocapture) local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1)
declare noalias noundef ptr @realloc(ptr allocptr nocapture, i64 noundef) local_unnamed_addr #4

define internal fastcc void @GeneratedModule_set_target_machine(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %target = alloca ptr, align 8
  %memberidx = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %4 = load i64, ptr %memberidx, align 4
  %5 = add nuw i64 %4, 1
  %6 = alloca i8, i64 %5, align 1
  %7 = load ptr, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %6, ptr align 8 %7, i64 %4, i1 false)
  %8 = getelementptr inbounds i8, ptr %6, i64 %4
  store i8 0, ptr %8, align 1
  store ptr null, ptr %target, align 8
  %memberidx3 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %9 = call i1 @LLVMGetTargetFromTriple(ptr nonnull %6, ptr nonnull %target, ptr nonnull %memberidx3)
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %10 = load ptr, ptr %memberidx3, align 8
  %11 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %10)
  %12 = trunc i64 %11 to i32
  %13 = call ptr @malloc(i32 %12)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %10, i64 %11, i1 false)
  %14 = call ptr @malloc(i32 24)
  store ptr %13, ptr %14, align 8
  %memberidx1.i.i23 = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  store i64 %11, ptr %memberidx1.i.i23, align 4
  %memberidx2.i.i24 = getelementptr inbounds %String, ptr %14, i64 0, i32 2
  store i64 %11, ptr %memberidx2.i.i24, align 4
  %15 = load ptr, ptr %memberidx3, align 8
  call void @LLVMDisposeMessage(ptr %15)
  %16 = add i32 %12, 1
  %17 = call ptr @malloc(i32 %16)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %13, i64 %11, i1 false)
  %18 = getelementptr inbounds i8, ptr %17, i64 %11
  store i8 0, ptr %18, align 1
  %19 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %17)
  %20 = load ptr, ptr %3, align 8
  %21 = call ptr @malloc(i32 24)
  call void @free(ptr %17)
  %22 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %22, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %23 = call ptr @malloc(i32 24)
  %24 = call i64 @write(i64 1, ptr %22, i64 7)
  call void @free(ptr %22)
  call void @free(ptr %23)
  %25 = call i64 @write(i64 1, ptr %20, i64 %19)
  %26 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %20)
  call void @free(ptr %21)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  %memberidx5 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 2
  %27 = load ptr, ptr %target, align 8
  %28 = call ptr @LLVMGetHostCPUFeatures()
  %29 = call ptr @LLVMCreateTargetMachine(ptr %27, ptr nonnull %6, ptr nonnull @5, ptr %28, i64 3, i64 0, i64 0)
  store ptr %29, ptr %memberidx5, align 8
  %30 = load ptr, ptr %0, align 8
  %31 = call ptr @LLVMCreateTargetDataLayout(ptr %29)
  call void @LLVMSetDataLayout(ptr %30, ptr %31)
  %32 = load ptr, ptr %0, align 8
  %33 = load ptr, ptr %memberidx5, align 8
  %34 = call ptr @LLVMGetTargetMachineTriple(ptr %33)
  call void @LLVMSetTarget(ptr %32, ptr %34)
  ret void
}

define internal fastcc void @GeneratedModule_write_ir(ptr %0, ptr nocapture %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %4 = load i64, ptr %memberidx.i, align 4
  %5 = trunc i64 %4 to i32
  %6 = add i32 %5, 1
  %7 = tail call ptr @malloc(i32 %6)
  %8 = load ptr, ptr %1, align 8
  %9 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %8, i64 %9, i1 false)
  %10 = getelementptr inbounds i8, ptr %7, i64 %9
  store i8 0, ptr %10, align 1
  %11 = load ptr, ptr %0, align 8
  %memberidx1 = getelementptr inbounds %GeneratedModule, ptr %0, i64 0, i32 1
  %12 = tail call i1 @LLVMPrintModuleToFile(ptr %11, ptr %7, ptr nonnull %memberidx1)
  br i1 %12, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %13 = load ptr, ptr %memberidx1, align 8
  %14 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %13)
  %15 = trunc i64 %14 to i32
  %16 = tail call ptr @malloc(i32 %15)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %13, i64 %14, i1 false)
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  %memberidx1.i.i9 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  store i64 %14, ptr %memberidx1.i.i9, align 4
  %memberidx2.i.i10 = getelementptr inbounds %String, ptr %17, i64 0, i32 2
  store i64 %14, ptr %memberidx2.i.i10, align 4
  %18 = load ptr, ptr %memberidx1, align 8
  tail call void @LLVMDisposeMessage(ptr %18)
  %19 = add i32 %15, 1
  %20 = tail call ptr @malloc(i32 %19)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %16, i64 %14, i1 false)
  %21 = getelementptr inbounds i8, ptr %20, i64 %14
  store i8 0, ptr %21, align 1
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @2, ptr %20)
  %23 = load ptr, ptr %3, align 8
  %24 = call ptr @malloc(i32 24)
  call void @free(ptr %20)
  %25 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %25, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %26 = call ptr @malloc(i32 24)
  %27 = call i64 @write(i64 1, ptr %25, i64 7)
  call void @free(ptr %25)
  call void @free(ptr %26)
  %28 = call i64 @write(i64 1, ptr %23, i64 %22)
  %29 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %23)
  call void @free(ptr %24)
  call void @exit(i64 -1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  tail call void @free(ptr nonnull %7)
  %30 = load ptr, ptr %1, align 8
  call void @free(ptr %30)
  tail call void @free(ptr nonnull %1)
  ret void
}

declare i1 @LLVMVerifyModule(ptr, i64, ptr) local_unnamed_addr

declare void @LLVM_InitializeAllTargetInfos() local_unnamed_addr

declare void @LLVM_InitializeAllTargets() local_unnamed_addr

declare void @LLVM_InitializeAllTargetMCs() local_unnamed_addr

declare void @LLVM_InitializeAllAsmParsers() local_unnamed_addr

declare void @LLVM_InitializeAllAsmPrinters() local_unnamed_addr

declare void @LLVMDisposeMessage(ptr) local_unnamed_addr

; Function Attrs: nofree
declare noundef i64 @write(i64 noundef, ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #0

declare void @exit(i64) local_unnamed_addr

declare i64 @asprintf(ptr, ptr, ...) local_unnamed_addr

declare ptr @LLVMCreatePassManager() local_unnamed_addr

declare ptr @LLVMCreateFunctionPassManagerForModule(ptr) local_unnamed_addr

declare ptr @LLVMPassManagerBuilderCreate() local_unnamed_addr

declare void @LLVMAddInternalizePass(ptr, i64) local_unnamed_addr

declare void @LLVMAddGlobalDCEPass(ptr) local_unnamed_addr

declare void @LLVMAddGlobalOptimizerPass(ptr) local_unnamed_addr

declare void @LLVMAddInstructionCombiningPass(ptr) local_unnamed_addr

declare void @LLVMAddScalarReplAggregatesPass(ptr) local_unnamed_addr

declare void @LLVMAddFunctionInliningPass(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderSetOptLevel(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderUseInlinerWithThreshold(ptr, i64) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetFirstFunction(ptr) local_unnamed_addr

declare i1 @LLVMRunFunctionPassManager(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNextFunction(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderPopulateModulePassManager(ptr, ptr) local_unnamed_addr

declare i1 @LLVMRunPassManager(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposePassManager(ptr) local_unnamed_addr

declare void @LLVMPassManagerBuilderDispose(ptr) local_unnamed_addr

declare void @LLVMLinkInMCJIT() local_unnamed_addr

declare i1 @LLVMCreateExecutionEngineForModule(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetNamedFunction(ptr, ptr) local_unnamed_addr

declare void @LLVMDisposeExecutionEngine(ptr) local_unnamed_addr

declare i64 @LLVMRunFunctionAsMain(ptr, ptr, i64, ptr, ptr) local_unnamed_addr

declare i1 @LLVMRemoveModule(ptr, ptr, ptr, ptr) local_unnamed_addr

declare i1 @LLVMGetTargetFromTriple(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetMachine(ptr, ptr, ptr, ptr, i64, i64, i64) local_unnamed_addr

declare ptr @LLVMGetHostCPUFeatures() local_unnamed_addr

declare void @LLVMSetDataLayout(ptr, ptr) local_unnamed_addr

declare ptr @LLVMCreateTargetDataLayout(ptr) local_unnamed_addr

declare void @LLVMSetTarget(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetTargetMachineTriple(ptr) local_unnamed_addr

declare i1 @LLVMTargetMachineEmitToFile(ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare i1 @LLVMPrintModuleToFile(ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMWriteBitcodeToFile(ptr, ptr) local_unnamed_addr

define internal fastcc i1 @Compiler_print_errors(ptr nocapture readonly %0) unnamed_addr {
  %2 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 5
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_FloError_, ptr %3, i64 0, i32 1
  %4 = load i64, ptr %memberidx1, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %if.entry, label %common.ret

common.ret:                                       ; preds = %1, %print_error.exit
  ret i1 %5

if.entry:                                         ; preds = %1
  %6 = load ptr, ptr %3, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx3 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = load ptr, ptr %0, align 8
  %10 = load i64, ptr %9, align 4
  %11 = load ptr, ptr %8, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx6 = getelementptr inbounds %FloFile, ptr %13, i64 0, i32 1
  %14 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  %15 = load ptr, ptr %memberidx7, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %16 = load i64, ptr %7, align 4
  %memberidx1.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 1
  %17 = load ptr, ptr %memberidx1.i, align 8
  tail call fastcc void @print_message_error(i64 %16, ptr %17)
  %memberidx.i.i = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i.i, align 4
  %19 = trunc i64 %18 to i32
  %20 = add i32 %19, 1
  %21 = tail call ptr @malloc(i32 %20)
  %22 = load ptr, ptr %14, align 8
  %23 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %22, i64 %23, i1 false)
  %24 = getelementptr inbounds i8, ptr %21, i64 %23
  store i8 0, ptr %24, align 1
  %memberidx2.i = getelementptr inbounds %FloError, ptr %7, i64 0, i32 2
  %25 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  %26 = load i64, ptr %memberidx3.i, align 4
  %27 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @16, ptr %21, i64 %26)
  %28 = load ptr, ptr %2, align 8
  %29 = call ptr @malloc(i32 24)
  call void @free(ptr %21)
  %30 = call i64 @write(i64 1, ptr %28, i64 %27)
  %31 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %28)
  call void @free(ptr %29)
  %32 = load ptr, ptr %memberidx2.i, align 8
  %memberidx.i8.i = getelementptr inbounds %FloRange, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i8.i, align 4
  %34 = load ptr, ptr %15, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 %33
  %36 = load i8, ptr %35, align 1
  %37 = icmp ne i8 %36, 10
  %memberidx.i.i.i = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i.i.i, align 4
  %39 = icmp sgt i64 %38, %33
  %40 = and i1 %37, %39
  br i1 %40, label %while.entry.i.i.i, label %get_next_line_index.exit.i.i

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %start.0.i.i.i = phi i64 [ %41, %while.entry.i.i.i ], [ %33, %if.entry ]
  %41 = add nsw i64 %start.0.i.i.i, 1
  %42 = getelementptr inbounds i8, ptr %34, i64 %41
  %43 = load i8, ptr %42, align 1
  %44 = icmp ne i8 %43, 10
  %45 = icmp slt i64 %41, %38
  %46 = and i1 %44, %45
  br i1 %46, label %while.entry.i.i.i, label %get_next_line_index.exit.i.i

get_next_line_index.exit.i.i:                     ; preds = %while.entry.i.i.i, %if.entry
  %start.1.i.i.i = phi i64 [ %33, %if.entry ], [ %41, %while.entry.i.i.i ]
  %47 = load i64, ptr %32, align 4
  %memberidx4.i.i = getelementptr inbounds %FloRange, ptr %32, i64 0, i32 2
  %48 = load i64, ptr %memberidx4.i.i, align 4
  %49 = sub nsw i64 %47, %48
  %50 = sub nuw i64 %start.1.i.i.i, %49
  %51 = trunc i64 %50 to i32
  %52 = call ptr @malloc(i32 %51)
  %53 = load ptr, ptr %15, align 8
  %54 = getelementptr inbounds i8, ptr %53, i64 %49
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %52, ptr align 2147483648 %54, i64 %50, i1 false)
  %55 = call ptr @malloc(i32 24)
  %56 = call i64 @write(i64 1, ptr %52, i64 %50)
  %57 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %52)
  call void @free(ptr %55)
  %58 = load i64, ptr %memberidx4.i.i, align 4
  %59 = load i64, ptr %memberidx.i8.i, align 4
  %60 = load i64, ptr %32, align 4
  %61 = sub nuw i64 %59, %60
  %62 = call ptr @malloc(i32 16)
  store i64 0, ptr %62, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Range, ptr %62, i64 0, i32 1
  store i64 %58, ptr %memberidx1.i.i.i, align 4
  %63 = call ptr @malloc(i32 17)
  %memberidx.i.i29.i.i = getelementptr inbounds %RangeIterator, ptr %63, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i29.i.i, align 4
  %memberidx1.i.i30.i.i = getelementptr inbounds %RangeIterator, ptr %63, i64 0, i32 2
  store i64 %58, ptr %memberidx1.i.i30.i.i, align 4
  %64 = icmp slt i64 %58, 1
  store i1 %64, ptr %63, align 1
  br i1 %64, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %get_next_line_index.exit.i.i, %for.body.i.i
  %storemerge14 = phi i64 [ %69, %for.body.i.i ], [ 1, %get_next_line_index.exit.i.i ]
  %65 = call ptr @malloc(i32 1)
  store i8 32, ptr %65, align 8
  %66 = call ptr @malloc(i32 24)
  %67 = call i64 @write(i64 1, ptr nonnull %65, i64 1)
  call void @free(ptr %65)
  call void @free(ptr %66)
  %68 = icmp sge i64 %storemerge14, %58
  store i1 %68, ptr %63, align 1
  %69 = add nuw nsw i64 %storemerge14, 1
  br i1 %68, label %for.end.i.i, label %for.body.i.i

for.end.i.i:                                      ; preds = %for.body.i.i, %get_next_line_index.exit.i.i
  call void @free(ptr nonnull %63)
  %70 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %70, ptr noundef nonnull align 8 dereferenceable(7) @9, i64 7, i1 false)
  %71 = call ptr @malloc(i32 24)
  %72 = call i64 @write(i64 1, ptr %70, i64 7)
  call void @free(ptr %70)
  call void @free(ptr %71)
  %73 = call ptr @malloc(i32 16)
  store i64 0, ptr %73, align 4
  %memberidx1.i38.i.i = getelementptr inbounds %Range, ptr %73, i64 0, i32 1
  store i64 %61, ptr %memberidx1.i38.i.i, align 4
  %74 = call ptr @malloc(i32 17)
  %memberidx.i.i40.i.i = getelementptr inbounds %RangeIterator, ptr %74, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i40.i.i, align 4
  %memberidx1.i.i41.i.i = getelementptr inbounds %RangeIterator, ptr %74, i64 0, i32 2
  store i64 %61, ptr %memberidx1.i.i41.i.i, align 4
  %75 = icmp slt i64 %61, 1
  store i1 %75, ptr %74, align 1
  br i1 %75, label %print_error.exit, label %for.body11.i.i

for.body11.i.i:                                   ; preds = %for.end.i.i, %for.body11.i.i
  %storemerge1213 = phi i64 [ %80, %for.body11.i.i ], [ 1, %for.end.i.i ]
  %76 = call ptr @malloc(i32 1)
  store i8 94, ptr %76, align 8
  %77 = call ptr @malloc(i32 24)
  %78 = call i64 @write(i64 1, ptr nonnull %76, i64 1)
  call void @free(ptr %76)
  call void @free(ptr %77)
  %79 = icmp sge i64 %storemerge1213, %61
  store i1 %79, ptr %74, align 1
  %80 = add nuw nsw i64 %storemerge1213, 1
  br i1 %79, label %print_error.exit, label %for.body11.i.i

print_error.exit:                                 ; preds = %for.body11.i.i, %for.end.i.i
  call void @free(ptr nonnull %74)
  %81 = call ptr @malloc(i32 4)
  store i32 1831885595, ptr %81, align 8
  %82 = call ptr @malloc(i32 24)
  %83 = call i64 @write(i64 1, ptr nonnull %81, i64 4)
  call void @free(ptr %81)
  call void @free(ptr %82)
  %84 = call ptr @malloc(i32 1)
  store i8 10, ptr %84, align 8
  %85 = call ptr @malloc(i32 24)
  %86 = call i64 @write(i64 1, ptr nonnull %84, i64 1)
  call void @free(ptr %84)
  call void @free(ptr %85)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  br label %common.ret
}

define internal fastcc ptr @Compiler_register_file(ptr nocapture readonly %0, ptr %1) unnamed_addr {
  %buf.i.i = alloca [400 x i8], align 1
  %3 = tail call ptr @malloc(i32 1)
  store i8 64, ptr %3, align 8
  %4 = tail call ptr @malloc(i32 24)
  store ptr %3, ptr %4, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i.i, align 4
  %memberidx.i = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i.i.i, align 4
  %7 = add i64 %6, -1
  %.not.i.i.i30 = icmp slt i64 %7, 0
  br i1 %.not.i.i.i30, label %String_replace.exit.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %2, %ifend.i.i.i
  %index.0.i.i.i31 = phi i64 [ %15, %ifend.i.i.i ], [ 0, %2 ]
  %8 = load i8, ptr %3, align 1
  %9 = load ptr, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 %index.0.i.i.i31
  %11 = load i8, ptr %10, align 1
  %12 = icmp eq i8 %8, %11
  br i1 %12, label %if.entry.i.i.i, label %ifend.i.i.i

if.entry.i.i.i:                                   ; preds = %for.body.i.i.i
  %13 = tail call i64 @memcmp(ptr nonnull %3, ptr nonnull %10, i64 1)
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %if.entry.i.i, label %ifend.i.i.i

ifend.i.i.i:                                      ; preds = %if.entry.i.i.i, %for.body.i.i.i
  %15 = add nuw nsw i64 %index.0.i.i.i31, 1
  %.not.i.i.i.not = icmp slt i64 %index.0.i.i.i31, %7
  br i1 %.not.i.i.i.not, label %for.body.i.i.i, label %String_replace.exit.i

if.entry.i.i:                                     ; preds = %if.entry.i.i.i
  %16 = load i64, ptr %memberidx.i.i.i, align 4
  %17 = add i64 %16, -1
  %memberidx2.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %18 = load i64, ptr %memberidx2.i.i, align 4
  %19 = add nuw i64 %17, %18
  %20 = trunc i64 %19 to i32
  %21 = tail call ptr @malloc(i32 %20)
  %22 = load ptr, ptr %1, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %22, i64 %index.0.i.i.i31, i1 false)
  %23 = getelementptr inbounds i8, ptr %21, i64 %index.0.i.i.i31
  %24 = load ptr, ptr %5, align 8
  %25 = load i64, ptr %memberidx2.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %23, ptr align 8 %24, i64 %25, i1 false)
  %26 = add nsw i64 %25, %index.0.i.i.i31
  %27 = getelementptr inbounds i8, ptr %21, i64 %26
  %28 = add nuw nsw i64 %index.0.i.i.i31, 1
  %29 = getelementptr inbounds i8, ptr %22, i64 %28
  %30 = load i64, ptr %memberidx.i.i.i, align 4
  %31 = sub nuw i64 %30, %28
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %27, ptr nonnull align 2147483648 %29, i64 %31, i1 false)
  %32 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %32, align 8
  %memberidx1.i42.i.i = getelementptr inbounds %String, ptr %32, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i42.i.i, align 4
  %memberidx2.i.i5.i = getelementptr inbounds %String, ptr %32, i64 0, i32 2
  store i64 %19, ptr %memberidx2.i.i5.i, align 4
  br label %String_replace.exit.i

String_replace.exit.i:                            ; preds = %ifend.i.i.i, %2, %if.entry.i.i
  %common.ret.op.i.i = phi ptr [ %32, %if.entry.i.i ], [ %1, %2 ], [ %1, %ifend.i.i.i ]
  %33 = tail call ptr @malloc(i32 4)
  store i32 1869375022, ptr %33, align 8
  %34 = tail call ptr @malloc(i32 24)
  store ptr %33, ptr %34, align 8
  %memberidx1.i.i6.i = getelementptr inbounds %String, ptr %34, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i6.i, align 4
  %memberidx2.i.i7.i = getelementptr inbounds %String, ptr %34, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i7.i, align 4
  %memberidx.i8.i = getelementptr inbounds %String, ptr %common.ret.op.i.i, i64 0, i32 1
  %35 = load i64, ptr %memberidx.i8.i, align 4
  %36 = icmp slt i64 %35, 4
  br i1 %36, label %if.entry.i, label %ifend.i11.i

ifend.i11.i:                                      ; preds = %String_replace.exit.i
  %37 = load ptr, ptr %common.ret.op.i.i, align 8
  %38 = getelementptr inbounds i8, ptr %37, i64 %35
  %39 = getelementptr inbounds i8, ptr %38, i64 -4
  %40 = tail call i64 @memcmp(ptr nonnull %39, ptr nonnull %33, i64 4)
  %41 = icmp eq i64 %40, 0
  %.pre35 = load i64, ptr %memberidx.i8.i, align 4
  %extract.t51 = trunc i64 %.pre35 to i32
  br i1 %41, label %Compiler_find_module_path.exit, label %if.entry.i

if.entry.i:                                       ; preds = %ifend.i11.i, %String_replace.exit.i
  %42 = phi i64 [ %35, %String_replace.exit.i ], [ %.pre35, %ifend.i11.i ]
  %43 = add nuw i64 %42, 4
  %memberidx.i.i.i.i = getelementptr inbounds %String, ptr %common.ret.op.i.i, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i.i.i.i, align 4
  %45 = icmp slt i64 %44, %43
  %46 = load ptr, ptr %common.ret.op.i.i, align 8
  br i1 %45, label %if.entry.i.i.i.i, label %String___adda__.exit.i

if.entry.i.i.i.i:                                 ; preds = %if.entry.i
  %47 = tail call ptr @realloc(ptr %46, i64 %43)
  store ptr %47, ptr %common.ret.op.i.i, align 8
  store i64 %43, ptr %memberidx.i.i.i.i, align 4
  %.pre34 = load i64, ptr %memberidx.i8.i, align 4
  br label %String___adda__.exit.i

String___adda__.exit.i:                           ; preds = %if.entry.i, %if.entry.i.i.i.i
  %48 = phi i64 [ %.pre34, %if.entry.i.i.i.i ], [ %42, %if.entry.i ]
  %49 = phi ptr [ %47, %if.entry.i.i.i.i ], [ %46, %if.entry.i ]
  %50 = getelementptr inbounds i8, ptr %49, i64 %48
  %51 = load i32, ptr %33, align 8
  store i32 %51, ptr %50, align 2147483648
  %52 = load i64, ptr %memberidx.i8.i, align 4
  %53 = add nuw i64 %52, 4
  store i64 %53, ptr %memberidx.i8.i, align 4
  %extract.t50 = trunc i64 %53 to i32
  br label %Compiler_find_module_path.exit

Compiler_find_module_path.exit:                   ; preds = %ifend.i11.i, %String___adda__.exit.i
  %.pre35.sink.off0 = phi i32 [ %extract.t50, %String___adda__.exit.i ], [ %extract.t51, %ifend.i11.i ]
  call void @llvm.lifetime.start.p0(i64 400, ptr nonnull %buf.i.i)
  %54 = add i32 %.pre35.sink.off0, 1
  %55 = tail call ptr @malloc(i32 %54)
  %56 = load ptr, ptr %common.ret.op.i.i, align 8
  %57 = load i64, ptr %memberidx.i8.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %55, ptr align 8 %56, i64 %57, i1 false)
  %58 = getelementptr inbounds i8, ptr %55, i64 %57
  store i8 0, ptr %58, align 1
  %59 = call ptr @realpath(ptr %55, ptr nonnull %buf.i.i)
  %60 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %buf.i.i)
  %61 = trunc i64 %60 to i32
  %62 = call ptr @malloc(i32 %61)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %62, ptr nonnull align 8 %buf.i.i, i64 %60, i1 false)
  %63 = call ptr @malloc(i32 24)
  store ptr %62, ptr %63, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %String, ptr %63, i64 0, i32 1
  store i64 %60, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %String, ptr %63, i64 0, i32 2
  store i64 %60, ptr %memberidx2.i.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 400, ptr nonnull %buf.i.i)
  %memberidx = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 6
  %64 = load ptr, ptr %memberidx, align 8
  %65 = call fastcc i64 @Map_String_FileId__hash_fnc(ptr nonnull %63)
  %memberidx.i15 = getelementptr inbounds %Map_String_FileId_, ptr %64, i64 0, i32 1
  %66 = load i64, ptr %memberidx.i15, align 4
  %67 = urem i64 %65, %66
  %68 = load ptr, ptr %64, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  %.not.i = icmp eq ptr %70, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %Compiler_find_module_path.exit, %else.i
  %71 = phi ptr [ %79, %else.i ], [ %68, %Compiler_find_module_path.exit ]
  %72 = phi i64 [ %80, %else.i ], [ %66, %Compiler_find_module_path.exit ]
  %73 = phi ptr [ %84, %else.i ], [ %70, %Compiler_find_module_path.exit ]
  %hash.0.i = phi i64 [ %82, %else.i ], [ %67, %Compiler_find_module_path.exit ]
  %74 = load ptr, ptr %73, align 8
  %memberidx.i.i16 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx.i.i16, align 4
  %.not.i.i = icmp eq i64 %75, %60
  br i1 %.not.i.i, label %ifend.i.i18, label %else.i

ifend.i.i18:                                      ; preds = %while.entry.i
  %76 = load ptr, ptr %74, align 8
  %77 = call i64 @memcmp(ptr %76, ptr %62, i64 %60)
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %while.end.i, label %ifend.i.i18.else.i_crit_edge

ifend.i.i18.else.i_crit_edge:                     ; preds = %ifend.i.i18
  %.pre36 = load i64, ptr %memberidx.i15, align 4
  %.pre37 = load ptr, ptr %64, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i18
  %.pre38.pre = load ptr, ptr %64, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre38.pre, i64 %hash.0.i
  %.pre39.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre39.pre, null
  br i1 %.not25.i, label %ifend, label %Map_String_FileId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i18.else.i_crit_edge, %while.entry.i
  %79 = phi ptr [ %.pre37, %ifend.i.i18.else.i_crit_edge ], [ %71, %while.entry.i ]
  %80 = phi i64 [ %.pre36, %ifend.i.i18.else.i_crit_edge ], [ %72, %while.entry.i ]
  %81 = add nuw i64 %hash.0.i, 1
  %82 = urem i64 %81, %80
  %83 = getelementptr inbounds ptr, ptr %79, i64 %82
  %84 = load ptr, ptr %83, align 8
  %.not26.i = icmp eq ptr %84, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_String_FileId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_FileId_, ptr %.pre39.pre, i64 0, i32 1
  %85 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %85, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_String_FileId____getitem__.exit, %Array_FloFile____sl__.exit
  %common.ret.op = phi ptr [ %86, %Array_FloFile____sl__.exit ], [ %85, %Map_String_FileId____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %Compiler_find_module_path.exit, %while.end.i, %Map_String_FileId____getitem__.exit
  %86 = tail call ptr @malloc(i32 8)
  %memberidx1 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %87 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FloFile_, ptr %87, i64 0, i32 1
  %88 = load i64, ptr %memberidx2, align 4
  store i64 %88, ptr %86, align 4
  %89 = load ptr, ptr %memberidx, align 8
  call fastcc void @Map_String_FileId____setitem__(ptr %89, ptr nonnull %63, ptr nonnull %86)
  %90 = load ptr, ptr %memberidx1, align 8
  %91 = tail call ptr @malloc(i32 16)
  store ptr %63, ptr %91, align 8
  %memberidx1.i = getelementptr inbounds %FloFile, ptr %91, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx.i20 = getelementptr inbounds %Array_FloFile_, ptr %90, i64 0, i32 1
  %92 = load i64, ptr %memberidx.i20, align 4
  %93 = add i64 %92, 1
  %memberidx.i.i21 = getelementptr inbounds %Array_FloFile_, ptr %90, i64 0, i32 2
  %94 = load i64, ptr %memberidx.i.i21, align 4
  %95 = icmp slt i64 %94, %93
  %.pre40 = load ptr, ptr %90, align 8
  br i1 %95, label %while.entry.i.i, label %Array_FloFile____sl__.exit

while.entry.i.i:                                  ; preds = %ifend, %while.entry.i.i
  %96 = phi ptr [ %100, %while.entry.i.i ], [ %.pre40, %ifend ]
  %97 = phi i64 [ %101, %while.entry.i.i ], [ %94, %ifend ]
  %98 = shl nuw i64 %97, 1
  store i64 %98, ptr %memberidx.i.i21, align 4
  %99 = shl i64 %97, 4
  %100 = call ptr @realloc(ptr %96, i64 %99)
  store ptr %100, ptr %90, align 8
  %101 = load i64, ptr %memberidx.i.i21, align 4
  %102 = icmp slt i64 %101, %93
  br i1 %102, label %while.entry.i.i, label %Array_FloFile____sl__.exit.loopexit

Array_FloFile____sl__.exit.loopexit:              ; preds = %while.entry.i.i
  %.pre41 = load i64, ptr %memberidx.i20, align 4
  %.pre45 = add nsw i64 %.pre41, 1
  br label %Array_FloFile____sl__.exit

Array_FloFile____sl__.exit:                       ; preds = %ifend, %Array_FloFile____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre45, %Array_FloFile____sl__.exit.loopexit ], [ %93, %ifend ]
  %103 = phi ptr [ %100, %Array_FloFile____sl__.exit.loopexit ], [ %.pre40, %ifend ]
  %104 = phi i64 [ %.pre41, %Array_FloFile____sl__.exit.loopexit ], [ %92, %ifend ]
  store i64 %.pre-phi, ptr %memberidx.i20, align 4
  %105 = getelementptr inbounds ptr, ptr %103, i64 %104
  store ptr %91, ptr %105, align 8
  br label %common.ret
}

define internal fastcc i1 @Compiler_set_current_file(ptr nocapture %0, ptr %1) unnamed_addr {
  %buffer.i = alloca [1024 x i8], align 1
  %3 = load i64, ptr %1, align 4
  %4 = icmp slt i64 %3, 0
  %memberidx2 = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 4
  %5 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_FloFile_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx3, align 4
  %7 = icmp sgt i64 %3, %6
  %8 = or i1 %4, %7
  br i1 %8, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend, %2, %File_read_all.exit
  %common.ret.op = phi i1 [ true, %File_read_all.exit ], [ false, %2 ], [ false, %ifend ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %2
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %3
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %11, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %13 = load i64, ptr %memberidx.i.i, align 4
  %14 = trunc i64 %13 to i32
  %15 = add i32 %14, 1
  %16 = tail call ptr @malloc(i32 %15)
  %17 = load ptr, ptr %12, align 8
  %18 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %17, i64 %18, i1 false)
  %19 = getelementptr inbounds i8, ptr %16, i64 %18
  store i8 0, ptr %19, align 1
  %20 = tail call i64 @open(ptr %16, i64 4, i64 438)
  tail call void @free(ptr %16)
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend
  %22 = tail call ptr @malloc(i32 8)
  store i64 %20, ptr %22, align 4
  %memberidx.i = getelementptr inbounds %Compiler, ptr %0, i64 0, i32 2
  %23 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %23, null
  br i1 %.not.i, label %Compiler_unlink_current_file_contents.exit, label %if.entry.i

if.entry.i:                                       ; preds = %ifend9
  %24 = load ptr, ptr %23, align 8
  tail call void @free(ptr %24)
  tail call void @free(ptr nonnull %23)
  br label %Compiler_unlink_current_file_contents.exit

Compiler_unlink_current_file_contents.exit:       ; preds = %ifend9, %if.entry.i
  call void @llvm.lifetime.start.p0(i64 1024, ptr nonnull %buffer.i)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1024) %buffer.i, i8 0, i64 1024, i1 false)
  %25 = tail call ptr @malloc(i32 1024)
  %26 = tail call ptr @malloc(i32 24)
  store ptr %25, ptr %26, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %26, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i, align 4
  %memberidx.i.i22 = getelementptr inbounds %String, ptr %26, i64 0, i32 2
  store i64 1024, ptr %memberidx.i.i22, align 4
  %27 = load i64, ptr %22, align 4
  %28 = call i64 @read(i64 %27, ptr nonnull %buffer.i, i64 1024)
  %.not.i23 = icmp eq i64 %28, 0
  br i1 %.not.i23, label %File_read_all.exit, label %while.entry.i

while.entry.i:                                    ; preds = %Compiler_unlink_current_file_contents.exit, %String_append_bytes_length.exit.i
  %29 = phi i64 [ %39, %String_append_bytes_length.exit.i ], [ 0, %Compiler_unlink_current_file_contents.exit ]
  %read_len.0.i = phi i64 [ %40, %String_append_bytes_length.exit.i ], [ %28, %Compiler_unlink_current_file_contents.exit ]
  %30 = add nuw i64 %29, %read_len.0.i
  %31 = load i64, ptr %memberidx.i.i22, align 4
  %32 = icmp slt i64 %31, %30
  %33 = load ptr, ptr %26, align 8
  br i1 %32, label %if.entry.i.i.i, label %String_append_bytes_length.exit.i

if.entry.i.i.i:                                   ; preds = %while.entry.i
  %34 = tail call ptr @realloc(ptr %33, i64 %30)
  store ptr %34, ptr %26, align 8
  store i64 %30, ptr %memberidx.i.i22, align 4
  %.pre30 = load i64, ptr %memberidx1.i.i.i, align 4
  br label %String_append_bytes_length.exit.i

String_append_bytes_length.exit.i:                ; preds = %while.entry.i, %if.entry.i.i.i
  %35 = phi i64 [ %.pre30, %if.entry.i.i.i ], [ %29, %while.entry.i ]
  %36 = phi ptr [ %34, %if.entry.i.i.i ], [ %33, %while.entry.i ]
  %37 = getelementptr inbounds i8, ptr %36, i64 %35
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %37, ptr nonnull align 8 %buffer.i, i64 %read_len.0.i, i1 false)
  %38 = load i64, ptr %memberidx1.i.i.i, align 4
  %39 = add nuw i64 %38, %read_len.0.i
  store i64 %39, ptr %memberidx1.i.i.i, align 4
  %40 = call i64 @read(i64 %27, ptr nonnull %buffer.i, i64 1024)
  %.not4.i = icmp eq i64 %40, 0
  br i1 %.not4.i, label %File_read_all.exit, label %while.entry.i

File_read_all.exit:                               ; preds = %String_append_bytes_length.exit.i, %Compiler_unlink_current_file_contents.exit
  call void @llvm.lifetime.end.p0(i64 1024, ptr nonnull %buffer.i)
  store ptr %26, ptr %memberidx.i, align 8
  store ptr %1, ptr %0, align 8
  %41 = tail call i64 @close(i64 %27)
  br label %common.ret
}

define internal fastcc void @Map_String_FileId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_FileId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_FileId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_FileId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_FileId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_FileId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_FileId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_FileId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_FileId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

; Function Attrs: nofree
declare noundef i64 @open(ptr nocapture noundef readonly, i64 noundef, i64 noundef) local_unnamed_addr #0

; Function Attrs: nofree
declare noundef i64 @read(i64 noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare noundef i64 @access(ptr nocapture noundef readonly, i64 noundef) local_unnamed_addr #5

declare i64 @close(i64) local_unnamed_addr

; Function Attrs: nofree nounwind
declare noundef ptr @realpath(ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #5

declare ptr @dirname(ptr) local_unnamed_addr

define internal fastcc void @print_message_error(i64 %0, ptr nocapture %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %3, ptr noundef nonnull align 8 dereferenceable(7) @9, i64 7, i1 false)
  %4 = tail call ptr @malloc(i32 24)
  %5 = tail call i64 @write(i64 1, ptr %3, i64 7)
  tail call void @free(ptr %3)
  tail call void @free(ptr %4)
  switch i64 %0, label %else11 [
    i64 0, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 5, label %if.entry7
    i64 1, label %if.entry10
  ]

if.entry:                                         ; preds = %2
  %6 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %6, ptr noundef nonnull align 8 dereferenceable(21) @10, i64 21, i1 false)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call i64 @write(i64 1, ptr %6, i64 21)
  br label %ifend

ifend:                                            ; preds = %if.entry10, %else11, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink34 = phi ptr [ %26, %if.entry10 ], [ %29, %else11 ], [ %23, %if.entry7 ], [ %20, %if.entry4 ], [ %17, %if.entry1 ], [ %6, %if.entry ]
  %.sink = phi ptr [ %27, %if.entry10 ], [ %30, %else11 ], [ %24, %if.entry7 ], [ %21, %if.entry4 ], [ %18, %if.entry1 ], [ %7, %if.entry ]
  tail call void @free(ptr %.sink34)
  tail call void @free(ptr %.sink)
  %9 = tail call ptr @malloc(i32 4)
  store i32 1831885595, ptr %9, align 8
  %10 = tail call ptr @malloc(i32 24)
  %11 = tail call i64 @write(i64 1, ptr nonnull %9, i64 4)
  tail call void @free(ptr %9)
  tail call void @free(ptr %10)
  %12 = load ptr, ptr %1, align 8
  %memberidx.i.i.i18 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %13 = load i64, ptr %memberidx.i.i.i18, align 4
  %14 = tail call i64 @write(i64 1, ptr %12, i64 %13)
  %15 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %16 = load ptr, ptr %1, align 8
  tail call void @free(ptr %16)
  tail call void @free(ptr %1)
  ret void

if.entry1:                                        ; preds = %2
  %17 = tail call ptr @malloc(i32 16)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %17, ptr noundef nonnull align 8 dereferenceable(16) @11, i64 16, i1 false)
  %18 = tail call ptr @malloc(i32 24)
  %19 = tail call i64 @write(i64 1, ptr %17, i64 16)
  br label %ifend

if.entry4:                                        ; preds = %2
  %20 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %20, ptr noundef nonnull align 8 dereferenceable(12) @12, i64 12, i1 false)
  %21 = tail call ptr @malloc(i32 24)
  %22 = tail call i64 @write(i64 1, ptr %20, i64 12)
  br label %ifend

if.entry7:                                        ; preds = %2
  %23 = tail call ptr @malloc(i32 14)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %23, ptr noundef nonnull align 8 dereferenceable(14) @13, i64 14, i1 false)
  %24 = tail call ptr @malloc(i32 24)
  %25 = tail call i64 @write(i64 1, ptr %23, i64 14)
  br label %ifend

if.entry10:                                       ; preds = %2
  %26 = tail call ptr @malloc(i32 14)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(14) %26, ptr noundef nonnull align 8 dereferenceable(14) @14, i64 14, i1 false)
  %27 = tail call ptr @malloc(i32 24)
  %28 = tail call i64 @write(i64 1, ptr %26, i64 14)
  br label %ifend

else11:                                           ; preds = %2
  %29 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %29, ptr noundef nonnull align 8 dereferenceable(9) @15, i64 9, i1 false)
  %30 = tail call ptr @malloc(i32 24)
  %31 = tail call i64 @write(i64 1, ptr %29, i64 9)
  br label %ifend
}

define internal fastcc void @Map_String_VarId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_VarId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_VarId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_VarId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_VarId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_VarId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

; Function Attrs: mustprogress nounwind willreturn
define internal fastcc void @Scope___del__(ptr nocapture readonly %0) unnamed_addr #6 {
  %2 = load ptr, ptr %0, align 8
  tail call void @free(ptr %2)
  %memberidx1 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load ptr, ptr %3, align 8
  tail call void @free(ptr %4)
  tail call void @free(ptr %3)
  %memberidx2 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %memberidx2, align 8
  %6 = load ptr, ptr %5, align 8
  tail call void @free(ptr %6)
  tail call void @free(ptr %5)
  %memberidx3 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 3
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = load ptr, ptr %7, align 8
  tail call void @free(ptr %8)
  tail call void @free(ptr %7)
  %memberidx4 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 4
  %9 = load ptr, ptr %memberidx4, align 8
  %10 = load ptr, ptr %9, align 8
  tail call void @free(ptr %10)
  tail call void @free(ptr %9)
  %memberidx5 = getelementptr inbounds %Scope, ptr %0, i64 0, i32 6
  %11 = load ptr, ptr %memberidx5, align 8
  %12 = load ptr, ptr %11, align 8
  tail call void @free(ptr %12)
  tail call void @free(ptr %11)
  ret void
}

define internal fastcc void @Map_String_EnumId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_EnumId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_EnumId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_EnumId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_EnumId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_EnumId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_EnumId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_EnumId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_String_Type__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_Type_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_Type____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_Type_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_Type__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_Type__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_Type_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_Type__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_String_ClassId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_ClassId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_ClassId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_ClassId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_ClassId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_ClassId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_ClassId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @Map_String_PropId__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_PropId_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_PropId____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_PropId____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_PropId_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_PropId__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_PropId__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @ModuleAST_constructor(ptr nocapture writeonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 1
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %2, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %3 = tail call ptr @malloc(i32 64)
  store ptr %3, ptr %2, align 8
  store i64 0, ptr %memberidx.i, align 4
  store ptr %2, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 1
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i27 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 1
  store i64 0, ptr %memberidx.i27, align 4
  %memberidx1.i28 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i28, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i27, align 4
  store ptr %4, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 3
  %6 = tail call ptr @malloc(i32 24)
  %memberidx.i29 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 1
  store i64 0, ptr %memberidx.i29, align 4
  %memberidx1.i30 = getelementptr inbounds %Array_ImportNode_, ptr %6, i64 0, i32 2
  store i64 8, ptr %memberidx1.i30, align 4
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %6, align 8
  store i64 0, ptr %memberidx.i29, align 4
  store ptr %6, ptr %memberidx6, align 8
  %memberidx9 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 4
  %8 = tail call ptr @malloc(i32 24)
  %memberidx.i31 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 1
  store i64 0, ptr %memberidx.i31, align 4
  %memberidx1.i32 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %8, i64 0, i32 2
  store i64 8, ptr %memberidx1.i32, align 4
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %8, align 8
  store i64 0, ptr %memberidx.i31, align 4
  store ptr %8, ptr %memberidx9, align 8
  %memberidx12 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 5
  %10 = tail call ptr @malloc(i32 24)
  %memberidx.i33 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 1
  store i64 0, ptr %memberidx.i33, align 4
  %memberidx1.i34 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %10, i64 0, i32 2
  store i64 8, ptr %memberidx1.i34, align 4
  %11 = tail call ptr @malloc(i32 64)
  store ptr %11, ptr %10, align 8
  store i64 0, ptr %memberidx.i33, align 4
  store ptr %10, ptr %memberidx12, align 8
  %memberidx15 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 2
  %12 = tail call ptr @malloc(i32 24)
  %memberidx.i35 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 1
  store i64 0, ptr %memberidx.i35, align 4
  %memberidx1.i36 = getelementptr inbounds %Array_EnumNode_, ptr %12, i64 0, i32 2
  store i64 8, ptr %memberidx1.i36, align 4
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %12, align 8
  store i64 0, ptr %memberidx.i35, align 4
  store ptr %12, ptr %memberidx15, align 8
  %memberidx18 = getelementptr inbounds %ModuleAST, ptr %0, i64 0, i32 6
  %14 = tail call ptr @malloc(i32 24)
  %memberidx.i37 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 1
  store i64 0, ptr %memberidx.i37, align 4
  %memberidx1.i38 = getelementptr inbounds %Array_TypeAliasNode_, ptr %14, i64 0, i32 2
  store i64 8, ptr %memberidx1.i38, align 4
  %15 = tail call ptr @malloc(i32 64)
  store ptr %15, ptr %14, align 8
  store i64 0, ptr %memberidx.i37, align 4
  store ptr %14, ptr %memberidx18, align 8
  ret void
}

declare ptr @LLVMGetDefaultTargetTriple() local_unnamed_addr

define internal fastcc ptr @parse_flags(i64 %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = icmp sgt i64 %0, 1
  br i1 %2, label %for.body, label %common.ret

for.body:                                         ; preds = %for.entry, %for.incr
  %arg.068 = phi ptr [ %arg.1, %for.incr ], [ null, %for.entry ]
  %i.067 = phi i64 [ %6, %for.incr ], [ 1, %for.entry ]
  %3 = getelementptr inbounds ptr, ptr %1, i64 %i.067
  %4 = load ptr, ptr %3, align 8
  %5 = load i8, ptr %4, align 1
  %.not = icmp eq i8 %5, 45
  br i1 %.not, label %ifend, label %if.entry

for.incr:                                         ; preds = %if.entry1, %if.entry, %for.end8
  %i.1 = phi i64 [ %i.067, %if.entry1 ], [ %i.067, %if.entry ], [ %i.2, %for.end8 ]
  %arg.1 = phi ptr [ %19, %if.entry1 ], [ %arg.068, %if.entry ], [ %arg.068, %for.end8 ]
  %6 = add nsw i64 %i.1, 1
  %7 = icmp slt i64 %6, %0
  br i1 %7, label %for.body, label %common.ret

common.ret:                                       ; preds = %for.incr, %for.entry, %if.entry17
  %arg.065 = phi ptr [ %arg.068, %if.entry17 ], [ null, %for.entry ], [ %arg.1, %for.incr ]
  ret ptr %arg.065

if.entry:                                         ; preds = %for.body
  %8 = icmp eq ptr %arg.068, null
  br i1 %8, label %if.entry1, label %for.incr

ifend:                                            ; preds = %for.body
  %9 = getelementptr inbounds i8, ptr %4, i64 1
  %10 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %9)
  %11 = trunc i64 %10 to i32
  %12 = tail call ptr @malloc(i32 %11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr nonnull align 8 %9, i64 %10, i1 false)
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %14 = load i64, ptr @flags_length, align 8
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %for.body6, label %for.end8

if.entry1:                                        ; preds = %if.entry
  %16 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %4)
  %17 = trunc i64 %16 to i32
  %18 = tail call ptr @malloc(i32 %17)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr nonnull align 8 %4, i64 %16, i1 false)
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i53 = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 %16, ptr %memberidx1.i.i53, align 4
  %memberidx2.i.i54 = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 %16, ptr %memberidx2.i.i54, align 4
  br label %for.incr

for.body6:                                        ; preds = %ifend, %for.incr7
  %j.066 = phi i64 [ %27, %for.incr7 ], [ 0, %ifend ]
  %20 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %j.066
  %21 = load ptr, ptr %20, align 8
  %memberidx = getelementptr inbounds %Flag, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %23, %10
  br i1 %.not.i, label %ifend.i, label %for.incr7

ifend.i:                                          ; preds = %for.body6
  %24 = load ptr, ptr %22, align 8
  %25 = tail call i64 @memcmp(ptr %24, ptr %12, i64 %10)
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %if.entry9, label %for.incr7

for.incr7:                                        ; preds = %for.body6, %ifend.i, %if.entry13
  %27 = add nuw nsw i64 %j.066, 1
  %28 = load i64, ptr @flags_length, align 8
  %29 = icmp slt i64 %27, %28
  br i1 %29, label %for.body6, label %for.end8

for.end8:                                         ; preds = %for.incr7, %ifend, %if.entry26, %ifend23
  %i.2 = phi i64 [ %32, %if.entry26 ], [ %32, %ifend23 ], [ %i.067, %ifend ], [ %i.067, %for.incr7 ]
  tail call void @free(ptr %12)
  tail call void @free(ptr %13)
  br label %for.incr

if.entry9:                                        ; preds = %ifend.i
  %30 = load i64, ptr %21, align 4
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %if.entry13, label %ifend15

if.entry13:                                       ; preds = %if.entry9
  %memberidx16 = getelementptr inbounds %FlagBool, ptr %21, i64 0, i32 3
  store i1 true, ptr %memberidx16, align 1
  br label %for.incr7

ifend15:                                          ; preds = %if.entry9
  %32 = add nuw i64 %i.067, 1
  %.not52 = icmp slt i64 %32, %0
  br i1 %.not52, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend15
  %33 = add i32 %11, 1
  %34 = tail call ptr @malloc(i32 %33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %12, i64 %10, i1 false)
  %35 = getelementptr inbounds i8, ptr %34, i64 %10
  store i8 0, ptr %35, align 1
  %36 = alloca ptr, align 8
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %36, ptr nonnull @33, ptr %34)
  %38 = load ptr, ptr %36, align 8
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i56 = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i56, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i, align 4
  tail call void @free(ptr %34)
  %40 = call i64 @write(i64 1, ptr %38, i64 %37)
  %41 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  br label %common.ret

ifend19:                                          ; preds = %ifend15
  %42 = getelementptr inbounds ptr, ptr %1, i64 %32
  %43 = load ptr, ptr %42, align 8
  %44 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %43)
  %45 = trunc i64 %44 to i32
  %46 = tail call ptr @malloc(i32 %45)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %46, ptr align 8 %43, i64 %44, i1 false)
  %47 = tail call ptr @malloc(i32 24)
  store ptr %46, ptr %47, align 8
  %memberidx1.i.i57 = getelementptr inbounds %String, ptr %47, i64 0, i32 1
  store i64 %44, ptr %memberidx1.i.i57, align 4
  %memberidx2.i.i58 = getelementptr inbounds %String, ptr %47, i64 0, i32 2
  store i64 %44, ptr %memberidx2.i.i58, align 4
  %48 = load i64, ptr %21, align 4
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %if.entry21, label %ifend23

if.entry21:                                       ; preds = %ifend19
  %memberidx24 = getelementptr inbounds %FlagInt, ptr %21, i64 0, i32 3
  %50 = add i32 %45, 1
  %51 = tail call ptr @malloc(i32 %50)
  %52 = load ptr, ptr %47, align 8
  %53 = load i64, ptr %memberidx1.i.i57, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %51, ptr align 8 %52, i64 %53, i1 false)
  %54 = getelementptr inbounds i8, ptr %51, i64 %53
  store i8 0, ptr %54, align 1
  %55 = tail call i64 @atol(ptr nocapture %51)
  tail call void @free(ptr %51)
  store i64 %55, ptr %memberidx24, align 4
  %56 = load ptr, ptr %47, align 8
  tail call void @free(ptr %56)
  tail call void @free(ptr nonnull %47)
  %.pr = load i64, ptr %21, align 4
  br label %ifend23

ifend23:                                          ; preds = %ifend19, %if.entry21
  %57 = phi i64 [ %48, %ifend19 ], [ %.pr, %if.entry21 ]
  %58 = icmp eq i64 %57, 2
  br i1 %58, label %if.entry26, label %for.end8

if.entry26:                                       ; preds = %ifend23
  %memberidx29 = getelementptr inbounds %FlagString, ptr %21, i64 0, i32 3
  store ptr %47, ptr %memberidx29, align 8
  br label %for.end8
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare i64 @atol(ptr nocapture) local_unnamed_addr #7

define internal fastcc void @print_flags() unnamed_addr {
for.entry:
  %0 = load i64, ptr @flags_length, align 8
  %1 = icmp sgt i64 %0, 0
  br i1 %1, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %ifend
  %i.026 = phi i64 [ %39, %ifend ], [ 0, %for.entry ]
  %2 = getelementptr inbounds [250 x ptr], ptr @flags_buffer, i64 0, i64 %i.026
  %3 = load ptr, ptr %2, align 8
  %memberidx = getelementptr inbounds %Flag, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx.i, align 4
  %6 = trunc i64 %5 to i32
  %7 = add i32 %6, 1
  %8 = call ptr @malloc(i32 %7)
  %9 = load ptr, ptr %4, align 8
  %10 = load i64, ptr %memberidx.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %9, i64 %10, i1 false)
  %11 = getelementptr inbounds i8, ptr %8, i64 %10
  store i8 0, ptr %11, align 1
  %12 = alloca ptr, align 8
  %13 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %12, ptr nonnull @36, ptr %8)
  %14 = load ptr, ptr %12, align 8
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 %13, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 %13, ptr %memberidx2.i, align 4
  tail call void @free(ptr %8)
  %16 = call i64 @write(i64 1, ptr %14, i64 %13)
  %17 = load i64, ptr %3, align 4
  switch i64 %17, label %else4 [
    i64 0, label %if.entry
    i64 2, label %if.entry3
  ]

for.end:                                          ; preds = %ifend, %for.entry
  ret void

if.entry:                                         ; preds = %for.body
  %18 = call ptr @malloc(i32 4)
  store i32 1047411744, ptr %18, align 8
  %19 = call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i, align 4
  %20 = call i64 @write(i64 1, ptr nonnull %18, i64 4)
  br label %ifend

ifend:                                            ; preds = %if.entry3, %else4, %if.entry
  %21 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %22 = call ptr @malloc(i32 2)
  store i16 2313, ptr %22, align 8
  %23 = call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  %memberidx1.i.i14 = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i14, align 4
  %memberidx2.i.i15 = getelementptr inbounds %String, ptr %23, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i15, align 4
  %24 = call i64 @write(i64 1, ptr nonnull %22, i64 2)
  %memberidx6 = getelementptr inbounds %Flag, ptr %3, i64 0, i32 2
  %25 = load ptr, ptr %memberidx6, align 8
  %memberidx.i17 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i17, align 4
  %27 = trunc i64 %26 to i32
  %28 = add i32 %27, 1
  %29 = call ptr @malloc(i32 %28)
  %30 = load ptr, ptr %25, align 8
  %31 = load i64, ptr %memberidx.i17, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %29, ptr align 8 %30, i64 %31, i1 false)
  %32 = getelementptr inbounds i8, ptr %29, i64 %31
  store i8 0, ptr %32, align 1
  %33 = alloca ptr, align 8
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %33, ptr nonnull @6, ptr %29)
  %35 = load ptr, ptr %33, align 8
  %36 = tail call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i18 = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i18, align 4
  %memberidx2.i19 = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i19, align 4
  tail call void @free(ptr %29)
  %37 = call i64 @write(i64 1, ptr %35, i64 %34)
  %38 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %39 = add nuw nsw i64 %i.026, 1
  %40 = load i64, ptr @flags_length, align 8
  %41 = icmp slt i64 %39, %40
  br i1 %41, label %for.body, label %for.end

if.entry3:                                        ; preds = %for.body
  %42 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %42, ptr noundef nonnull align 8 dereferenceable(6) @37, i64 6, i1 false)
  %43 = call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  %memberidx1.i.i21 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i21, align 4
  %memberidx2.i.i22 = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i22, align 4
  %44 = call i64 @write(i64 1, ptr %42, i64 6)
  br label %ifend

else4:                                            ; preds = %for.body
  %45 = call ptr @malloc(i32 1)
  store i8 32, ptr %45, align 8
  %46 = call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i.i24 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i24, align 4
  %memberidx2.i.i25 = getelementptr inbounds %String, ptr %46, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i25, align 4
  %47 = call i64 @write(i64 1, ptr nonnull %45, i64 1)
  br label %ifend
}

define internal fastcc noalias ptr @Lexer_tokenize(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Lexer, align 8
  %memberidx.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 1
  store ptr %0, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 2
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 5
  store i64 1, ptr %memberidx3.i, align 4
  %memberidx4.i = getelementptr inbounds %Lexer, ptr %3, i64 0, i32 4
  store i64 0, ptr %memberidx4.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx2.i.i, align 4
  %5 = icmp slt i64 %4, 0
  br i1 %5, label %end.i.thread, label %end.i

end.i.thread:                                     ; preds = %2
  store i8 0, ptr %3, align 8
  br label %Lexer_advance.exit

end.i:                                            ; preds = %2
  store i64 0, ptr %memberidx2.i, align 4
  %6 = load ptr, ptr %0, align 8
  %7 = load i8, ptr %6, align 1
  store i8 %7, ptr %3, align 8
  switch i8 %7, label %if.entry9.i [
    i8 10, label %if.entry.i
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i:                                       ; preds = %end.i
  store i64 2, ptr %memberidx3.i, align 4
  br label %Lexer_advance.exit

if.entry9.i:                                      ; preds = %end.i
  store i64 1, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i, %if.entry9.i
  %8 = phi i64 [ -1, %end.i.thread ], [ 0, %end.i ], [ 0, %if.entry.i ], [ 0, %if.entry9.i ]
  %9 = tail call ptr @malloc(i32 24)
  %memberidx.i51 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 1
  %memberidx1.i52 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 2
  store i64 8, ptr %memberidx1.i52, align 4
  %10 = tail call ptr @malloc(i32 64)
  store ptr %10, ptr %9, align 8
  store i64 0, ptr %memberidx.i51, align 4
  %11 = load i64, ptr %memberidx2.i.i, align 4
  %12 = icmp sge i64 %8, %11
  %memberidx3 = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 1
  %13 = load i64, ptr %memberidx3, align 4
  %14 = icmp ne i64 %13, 0
  %15 = or i1 %12, %14
  br i1 %15, label %while.end, label %while.entry

while.entry:                                      ; preds = %Lexer_advance.exit, %Lexer_advance.exit46
  %16 = phi ptr [ %27, %Lexer_advance.exit46 ], [ %10, %Lexer_advance.exit ]
  %memberidx1.i52.promoted59 = phi i64 [ %29, %Lexer_advance.exit46 ], [ 8, %Lexer_advance.exit ]
  %17 = phi i64 [ %.pre-phi71, %Lexer_advance.exit46 ], [ 0, %Lexer_advance.exit ]
  %18 = call fastcc ptr @Lexer_lex_token(ptr nonnull %3)
  %19 = add i64 %17, 1
  %20 = icmp slt i64 %memberidx1.i52.promoted59, %19
  br i1 %20, label %while.entry.i.i49, label %Array_Token____sl__.exit50

while.entry.i.i49:                                ; preds = %while.entry, %while.entry.i.i49
  %21 = phi ptr [ %25, %while.entry.i.i49 ], [ %16, %while.entry ]
  %22 = phi i64 [ %23, %while.entry.i.i49 ], [ %memberidx1.i52.promoted59, %while.entry ]
  %23 = shl nuw i64 %22, 1
  %24 = shl i64 %22, 4
  %25 = call ptr @realloc(ptr %21, i64 %24)
  %26 = icmp slt i64 %23, %19
  br i1 %26, label %while.entry.i.i49, label %Array_Token____sl__.exit50.loopexit

Array_Token____sl__.exit50.loopexit:              ; preds = %while.entry.i.i49
  store i64 %23, ptr %memberidx1.i52, align 4
  store ptr %25, ptr %9, align 8
  %.pre = load i64, ptr %memberidx.i51, align 4
  %.pre70 = add nsw i64 %.pre, 1
  br label %Array_Token____sl__.exit50

Array_Token____sl__.exit50:                       ; preds = %Array_Token____sl__.exit50.loopexit, %while.entry
  %.pre-phi71 = phi i64 [ %.pre70, %Array_Token____sl__.exit50.loopexit ], [ %19, %while.entry ]
  %27 = phi ptr [ %25, %Array_Token____sl__.exit50.loopexit ], [ %16, %while.entry ]
  %28 = phi i64 [ %.pre, %Array_Token____sl__.exit50.loopexit ], [ %17, %while.entry ]
  %29 = phi i64 [ %23, %Array_Token____sl__.exit50.loopexit ], [ %memberidx1.i52.promoted59, %while.entry ]
  store i64 %.pre-phi71, ptr %memberidx.i51, align 4
  %30 = getelementptr inbounds ptr, ptr %27, i64 %28
  store ptr %18, ptr %30, align 8
  %31 = load i64, ptr %memberidx2.i, align 4
  %32 = load ptr, ptr %memberidx.i, align 8
  %memberidx2.i.i33 = getelementptr inbounds %String, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx2.i.i33, align 4
  %.not = icmp slt i64 %31, %33
  br i1 %.not, label %end.i38, label %end.i38.thread

end.i38.thread:                                   ; preds = %Array_Token____sl__.exit50
  store i8 0, ptr %3, align 8
  br label %Lexer_advance.exit46

end.i38:                                          ; preds = %Array_Token____sl__.exit50
  %34 = add nsw i64 %31, 1
  store i64 %34, ptr %memberidx2.i, align 4
  %35 = load ptr, ptr %32, align 8
  %36 = getelementptr inbounds i8, ptr %35, i64 %34
  %37 = load i8, ptr %36, align 1
  store i8 %37, ptr %3, align 8
  switch i8 %37, label %if.entry9.i45 [
    i8 10, label %if.entry.i41
    i8 0, label %Lexer_advance.exit46
  ]

if.entry.i41:                                     ; preds = %end.i38
  store i64 0, ptr %memberidx4.i, align 4
  %38 = load i64, ptr %memberidx3.i, align 4
  %39 = add nsw i64 %38, 1
  store i64 %39, ptr %memberidx3.i, align 4
  br label %Lexer_advance.exit46

if.entry9.i45:                                    ; preds = %end.i38
  %40 = load i64, ptr %memberidx4.i, align 4
  %41 = add nsw i64 %40, 1
  store i64 %41, ptr %memberidx4.i, align 4
  br label %Lexer_advance.exit46

Lexer_advance.exit46:                             ; preds = %end.i38.thread, %end.i38, %if.entry.i41, %if.entry9.i45
  %42 = phi i64 [ %31, %end.i38.thread ], [ %34, %end.i38 ], [ %34, %if.entry.i41 ], [ %34, %if.entry9.i45 ]
  %43 = load i64, ptr %memberidx2.i.i33, align 4
  %44 = icmp sge i64 %42, %43
  %45 = load ptr, ptr %memberidx1.i, align 8
  %memberidx5 = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 1
  %46 = load i64, ptr %memberidx5, align 4
  %47 = icmp ne i64 %46, 0
  %48 = or i1 %44, %47
  br i1 %48, label %while.end, label %while.entry

while.end:                                        ; preds = %Lexer_advance.exit46, %Lexer_advance.exit
  %.promoted = phi ptr [ %10, %Lexer_advance.exit ], [ %27, %Lexer_advance.exit46 ]
  %memberidx1.i52.promoted = phi i64 [ 8, %Lexer_advance.exit ], [ %29, %Lexer_advance.exit46 ]
  %49 = tail call ptr @malloc(i32 16)
  %50 = tail call ptr @malloc(i32 32)
  %51 = load i64, ptr %memberidx4.i, align 4
  %52 = load i64, ptr %memberidx3.i, align 4
  %memberidx2.i26 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %50, i8 0, i64 16, i1 false)
  store i64 %51, ptr %memberidx2.i26, align 4
  %memberidx3.i27 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 3
  store i64 %52, ptr %memberidx3.i27, align 4
  store i64 46, ptr %49, align 4
  %memberidx1.i24 = getelementptr inbounds %Token, ptr %49, i64 0, i32 1
  store ptr %50, ptr %memberidx1.i24, align 8
  %53 = load i64, ptr %memberidx.i51, align 4
  %54 = add i64 %53, 1
  %55 = icmp slt i64 %memberidx1.i52.promoted, %54
  br i1 %55, label %while.entry.i.i, label %Array_Token____sl__.exit

while.entry.i.i:                                  ; preds = %while.end, %while.entry.i.i
  %56 = phi ptr [ %60, %while.entry.i.i ], [ %.promoted, %while.end ]
  %57 = phi i64 [ %58, %while.entry.i.i ], [ %memberidx1.i52.promoted, %while.end ]
  %58 = shl nuw i64 %57, 1
  %59 = shl i64 %57, 4
  %60 = call ptr @realloc(ptr %56, i64 %59)
  %61 = icmp slt i64 %58, %54
  br i1 %61, label %while.entry.i.i, label %Array_Token____sl__.exit.loopexit

Array_Token____sl__.exit.loopexit:                ; preds = %while.entry.i.i
  store i64 %58, ptr %memberidx1.i52, align 4
  store ptr %60, ptr %9, align 8
  %.pre68 = load i64, ptr %memberidx.i51, align 4
  %.pre69 = add nsw i64 %.pre68, 1
  br label %Array_Token____sl__.exit

Array_Token____sl__.exit:                         ; preds = %Array_Token____sl__.exit.loopexit, %while.end
  %.pre-phi = phi i64 [ %.pre69, %Array_Token____sl__.exit.loopexit ], [ %54, %while.end ]
  %62 = phi ptr [ %60, %Array_Token____sl__.exit.loopexit ], [ %.promoted, %while.end ]
  %63 = phi i64 [ %.pre68, %Array_Token____sl__.exit.loopexit ], [ %53, %while.end ]
  store i64 %.pre-phi, ptr %memberidx.i51, align 4
  %64 = getelementptr inbounds ptr, ptr %62, i64 %63
  store ptr %49, ptr %64, align 8
  ret ptr %9
}

define internal fastcc noalias ptr @Lexer_base_int_token(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx2.i.i, align 4
  %.not = icmp slt i64 %3, %5
  br i1 %.not, label %end.i, label %end.i.thread

end.i.thread:                                     ; preds = %2
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit

end.i:                                            ; preds = %2
  %6 = add nsw i64 %3, 1
  store i64 %6, ptr %memberidx.i.i, align 4
  %7 = load ptr, ptr %4, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 %6
  %9 = load i8, ptr %8, align 1
  store i8 %9, ptr %0, align 1
  switch i8 %9, label %if.entry9.i [
    i8 10, label %if.entry.i
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i:                                       ; preds = %end.i
  %memberidx5.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i, align 4
  %memberidx6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %10 = load i64, ptr %memberidx6.i, align 4
  %11 = add nsw i64 %10, 1
  store i64 %11, ptr %memberidx6.i, align 4
  br label %Lexer_advance.exit

if.entry9.i:                                      ; preds = %end.i
  %memberidx12.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %memberidx12.i, align 4
  %13 = add nsw i64 %12, 1
  store i64 %13, ptr %memberidx12.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i, %if.entry9.i
  %14 = phi i64 [ %3, %end.i.thread ], [ %6, %end.i ], [ %6, %if.entry.i ], [ %6, %if.entry9.i ]
  %15 = add nsw i64 %14, 1
  %16 = load i64, ptr %memberidx2.i.i, align 4
  %17 = icmp slt i64 %15, %16
  br i1 %17, label %if.entry.i50, label %Lexer_peek.exit51

if.entry.i50:                                     ; preds = %Lexer_advance.exit
  %18 = load ptr, ptr %4, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 %15
  %20 = load i8, ptr %19, align 1
  br label %Lexer_peek.exit51

Lexer_peek.exit51:                                ; preds = %Lexer_advance.exit, %if.entry.i50
  %common.ret.op.i49 = phi i8 [ %20, %if.entry.i50 ], [ 0, %Lexer_advance.exit ]
  %21 = add i8 %common.ret.op.i49, -97
  %22 = icmp ult i8 %21, 26
  %23 = add i8 %common.ret.op.i49, -32
  %common.ret.op.i59 = select i1 %22, i8 %23, i8 %common.ret.op.i49
  %24 = icmp slt i64 %1, 10
  %25 = icmp sgt i8 %common.ret.op.i59, 47
  %26 = sext i8 %common.ret.op.i59 to i64
  %27 = add nsw i64 %1, 48
  %28 = icmp sge i64 %27, %26
  %29 = and i1 %25, %28
  br i1 %24, label %in_base_range.exit58, label %in_base_range.exit58.thread

in_base_range.exit58:                             ; preds = %Lexer_peek.exit51
  %.not62 = icmp slt i64 %14, %16
  %30 = and i1 %.not62, %29
  br i1 %30, label %while.entry.us.preheader, label %while.end

in_base_range.exit58.thread:                      ; preds = %Lexer_peek.exit51
  %31 = icmp sgt i8 %common.ret.op.i59, 64
  %32 = add nuw nsw i64 %1, 65
  %33 = icmp sge i64 %32, %26
  %34 = and i1 %31, %33
  %35 = or i1 %29, %34
  %.not6275 = icmp slt i64 %14, %16
  %36 = and i1 %.not6275, %35
  br i1 %36, label %while.entry.preheader69, label %while.end

while.entry.preheader69:                          ; preds = %in_base_range.exit58.thread
  %memberidx5.i3176 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i3277 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %37 = add nuw nsw i64 %1, 48
  %38 = add nuw nsw i64 %1, 65
  br label %while.entry

while.entry.us.preheader:                         ; preds = %in_base_range.exit58
  %memberidx5.i31 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i32 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %39 = add nsw i64 %1, 48
  br label %while.entry.us

while.entry.us:                                   ; preds = %while.entry.us.preheader, %Lexer_peek.exit.us
  %40 = phi i64 [ %55, %Lexer_peek.exit.us ], [ %14, %while.entry.us.preheader ]
  %41 = phi i64 [ %57, %Lexer_peek.exit.us ], [ %16, %while.entry.us.preheader ]
  %length.0.us = phi i64 [ %46, %Lexer_peek.exit.us ], [ 3, %while.entry.us.preheader ]
  %current_char.0.us = phi i8 [ %common.ret.op.i17.us, %Lexer_peek.exit.us ], [ %common.ret.op.i59, %while.entry.us.preheader ]
  %value.0.us = phi i64 [ %45, %Lexer_peek.exit.us ], [ 0, %while.entry.us.preheader ]
  %42 = mul nuw i64 %value.0.us, %1
  %43 = icmp ugt i8 %current_char.0.us, 64
  %spec.select.v.us = select i1 %43, i8 -55, i8 -48
  %spec.select.us = add nsw i8 %spec.select.v.us, %current_char.0.us
  %44 = zext i8 %spec.select.us to i64
  %45 = add nuw i64 %42, %44
  %46 = add nuw nsw i64 %length.0.us, 1
  %.not63.us = icmp slt i64 %40, %41
  br i1 %.not63.us, label %end.i30.us, label %end.i30.thread.us

end.i30.thread.us:                                ; preds = %while.entry.us
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit39.us

end.i30.us:                                       ; preds = %while.entry.us
  %47 = add nsw i64 %40, 1
  store i64 %47, ptr %memberidx.i.i, align 4
  %48 = load ptr, ptr %4, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 %47
  %50 = load i8, ptr %49, align 1
  store i8 %50, ptr %0, align 1
  switch i8 %50, label %if.entry9.i38.us [
    i8 10, label %if.entry.i33.us
    i8 0, label %Lexer_advance.exit39.us
  ]

if.entry.i33.us:                                  ; preds = %end.i30.us
  store i64 0, ptr %memberidx5.i31, align 4
  %51 = load i64, ptr %memberidx6.i32, align 4
  %52 = add nsw i64 %51, 1
  store i64 %52, ptr %memberidx6.i32, align 4
  br label %Lexer_advance.exit39.us

if.entry9.i38.us:                                 ; preds = %end.i30.us
  %53 = load i64, ptr %memberidx5.i31, align 4
  %54 = add nsw i64 %53, 1
  store i64 %54, ptr %memberidx5.i31, align 4
  br label %Lexer_advance.exit39.us

Lexer_advance.exit39.us:                          ; preds = %if.entry9.i38.us, %if.entry.i33.us, %end.i30.us, %end.i30.thread.us
  %55 = phi i64 [ %47, %if.entry9.i38.us ], [ %47, %if.entry.i33.us ], [ %47, %end.i30.us ], [ %40, %end.i30.thread.us ]
  %56 = add nsw i64 %55, 1
  %57 = load i64, ptr %memberidx2.i.i, align 4
  %58 = icmp slt i64 %56, %57
  br i1 %58, label %if.entry.i22.us, label %Lexer_peek.exit.us

if.entry.i22.us:                                  ; preds = %Lexer_advance.exit39.us
  %59 = load ptr, ptr %4, align 8
  %60 = getelementptr inbounds i8, ptr %59, i64 %56
  %61 = load i8, ptr %60, align 1
  br label %Lexer_peek.exit.us

Lexer_peek.exit.us:                               ; preds = %if.entry.i22.us, %Lexer_advance.exit39.us
  %common.ret.op.i21.us = phi i8 [ %61, %if.entry.i22.us ], [ 0, %Lexer_advance.exit39.us ]
  %62 = add i8 %common.ret.op.i21.us, -97
  %63 = icmp ult i8 %62, 26
  %64 = add i8 %common.ret.op.i21.us, -32
  %common.ret.op.i17.us = select i1 %63, i8 %64, i8 %common.ret.op.i21.us
  %65 = icmp sgt i8 %common.ret.op.i17.us, 47
  %66 = sext i8 %common.ret.op.i17.us to i64
  %67 = icmp sge i64 %39, %66
  %68 = and i1 %65, %67
  %.not64.us = icmp slt i64 %55, %57
  %69 = and i1 %.not64.us, %68
  br i1 %69, label %while.entry.us, label %while.end

while.entry:                                      ; preds = %while.entry.preheader69, %Lexer_peek.exit
  %70 = phi i64 [ %94, %Lexer_peek.exit ], [ %14, %while.entry.preheader69 ]
  %71 = phi i64 [ %96, %Lexer_peek.exit ], [ %16, %while.entry.preheader69 ]
  %length.0 = phi i64 [ %76, %Lexer_peek.exit ], [ 3, %while.entry.preheader69 ]
  %current_char.0 = phi i8 [ %common.ret.op.i17, %Lexer_peek.exit ], [ %common.ret.op.i59, %while.entry.preheader69 ]
  %value.0 = phi i64 [ %75, %Lexer_peek.exit ], [ 0, %while.entry.preheader69 ]
  %72 = mul nuw i64 %value.0, %1
  %73 = icmp ugt i8 %current_char.0, 64
  %spec.select.v = select i1 %73, i8 -55, i8 -48
  %spec.select = add nsw i8 %spec.select.v, %current_char.0
  %74 = zext i8 %spec.select to i64
  %75 = add nuw i64 %72, %74
  %76 = add nuw nsw i64 %length.0, 1
  %.not63 = icmp slt i64 %70, %71
  br i1 %.not63, label %end.i30, label %end.i30.thread

end.i30.thread:                                   ; preds = %while.entry
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit39

while.end:                                        ; preds = %Lexer_peek.exit, %Lexer_peek.exit.us, %in_base_range.exit58.thread, %in_base_range.exit58
  %length.1 = phi i64 [ 3, %in_base_range.exit58 ], [ 3, %in_base_range.exit58.thread ], [ %46, %Lexer_peek.exit.us ], [ %76, %Lexer_peek.exit ]
  %value.1 = phi i64 [ 0, %in_base_range.exit58 ], [ 0, %in_base_range.exit58.thread ], [ %45, %Lexer_peek.exit.us ], [ %75, %Lexer_peek.exit ]
  %77 = tail call ptr @malloc(i32 24)
  %78 = tail call ptr @malloc(i32 32)
  %79 = load i64, ptr %memberidx.i.i, align 4
  %80 = sub i64 1, %length.1
  %81 = add i64 %80, %79
  %82 = add nsw i64 %79, 1
  %memberidx2.i43 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %83 = load i64, ptr %memberidx2.i43, align 4
  %84 = sub nuw i64 %83, %length.1
  %memberidx3.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %85 = load i64, ptr %memberidx3.i, align 4
  store i64 %81, ptr %78, align 4
  %memberidx1.i.i44 = getelementptr inbounds %FloRange, ptr %78, i64 0, i32 1
  store i64 %82, ptr %memberidx1.i.i44, align 4
  %memberidx2.i.i45 = getelementptr inbounds %FloRange, ptr %78, i64 0, i32 2
  store i64 %84, ptr %memberidx2.i.i45, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %78, i64 0, i32 3
  store i64 %85, ptr %memberidx3.i.i, align 4
  store i64 31, ptr %77, align 4
  %memberidx1.i.i40 = getelementptr inbounds %Token, ptr %77, i64 0, i32 1
  store ptr %78, ptr %memberidx1.i.i40, align 8
  %memberidx.i41 = getelementptr inbounds %IntToken, ptr %77, i64 0, i32 2
  store i64 %value.1, ptr %memberidx.i41, align 4
  ret ptr %77

end.i30:                                          ; preds = %while.entry
  %86 = add nsw i64 %70, 1
  store i64 %86, ptr %memberidx.i.i, align 4
  %87 = load ptr, ptr %4, align 8
  %88 = getelementptr inbounds i8, ptr %87, i64 %86
  %89 = load i8, ptr %88, align 1
  store i8 %89, ptr %0, align 1
  switch i8 %89, label %if.entry9.i38 [
    i8 10, label %if.entry.i33
    i8 0, label %Lexer_advance.exit39
  ]

if.entry.i33:                                     ; preds = %end.i30
  store i64 0, ptr %memberidx5.i3176, align 4
  %90 = load i64, ptr %memberidx6.i3277, align 4
  %91 = add nsw i64 %90, 1
  store i64 %91, ptr %memberidx6.i3277, align 4
  br label %Lexer_advance.exit39

if.entry9.i38:                                    ; preds = %end.i30
  %92 = load i64, ptr %memberidx5.i3176, align 4
  %93 = add nsw i64 %92, 1
  store i64 %93, ptr %memberidx5.i3176, align 4
  br label %Lexer_advance.exit39

Lexer_advance.exit39:                             ; preds = %end.i30.thread, %end.i30, %if.entry.i33, %if.entry9.i38
  %94 = phi i64 [ %70, %end.i30.thread ], [ %86, %end.i30 ], [ %86, %if.entry.i33 ], [ %86, %if.entry9.i38 ]
  %95 = add nsw i64 %94, 1
  %96 = load i64, ptr %memberidx2.i.i, align 4
  %97 = icmp slt i64 %95, %96
  br i1 %97, label %if.entry.i22, label %Lexer_peek.exit

if.entry.i22:                                     ; preds = %Lexer_advance.exit39
  %98 = load ptr, ptr %4, align 8
  %99 = getelementptr inbounds i8, ptr %98, i64 %95
  %100 = load i8, ptr %99, align 1
  br label %Lexer_peek.exit

Lexer_peek.exit:                                  ; preds = %Lexer_advance.exit39, %if.entry.i22
  %common.ret.op.i21 = phi i8 [ %100, %if.entry.i22 ], [ 0, %Lexer_advance.exit39 ]
  %101 = add i8 %common.ret.op.i21, -97
  %102 = icmp ult i8 %101, 26
  %103 = add i8 %common.ret.op.i21, -32
  %common.ret.op.i17 = select i1 %102, i8 %103, i8 %common.ret.op.i21
  %104 = icmp sgt i8 %common.ret.op.i17, 47
  %105 = sext i8 %common.ret.op.i17 to i64
  %106 = icmp sge i64 %37, %105
  %107 = and i1 %104, %106
  %108 = icmp sgt i8 %common.ret.op.i17, 64
  %109 = icmp sge i64 %38, %105
  %110 = and i1 %108, %109
  %111 = or i1 %107, %110
  %.not64 = icmp slt i64 %94, %96
  %112 = and i1 %.not64, %111
  br i1 %112, label %while.entry, label %while.end
}

define internal fastcc noalias ptr @Lexer_lex_token(ptr %0) unnamed_addr {
  %2 = load i8, ptr %0, align 1
  switch i8 %2, label %ifend [
    i8 32, label %if.entry
    i8 9, label %if.entry
  ]

common.ret:                                       ; preds = %ifend6.i947, %Lexer_advance.exit53.i939, %ifend3.i915, %Lexer_advance.exit.i877, %ifend6.i846, %Lexer_advance.exit53.i838, %ifend3.i814, %Lexer_advance.exit.i776, %ifend.i745, %Lexer_advance.exit.i737, %ifend.i706, %Lexer_advance.exit.i698, %ifend.i564, %Lexer_advance.exit.i556, %ifend.i475, %Lexer_advance.exit.i467, %ifend.i436, %Lexer_advance.exit.i431, %ifend6.i412, %Lexer_advance.exit53.i404, %ifend3.i380, %Lexer_advance.exit.i347, %ifend6.i, %Lexer_advance.exit53.i, %Lexer_advance.exit88.i, %Lexer_advance.exit.i298, %ifend3.i, %Lexer_advance.exit47.i275, %Lexer_advance.exit.i258, %end.i218, %if.entry6.i, %if.entry2.i190, %if.entry.i188, %ifend4.i, %ifend.i, %Array_FloError____sl__.exit, %if.entry87, %Lexer_dot_token.exit, %if.entry69, %if.entry66, %Lexer_char_token.exit, %if.entry60, %if.entry57, %if.entry54, %if.entry51, %if.entry48, %if.entry45, %if.entry42, %Lexer_advance.exit523, %if.entry18, %if.entry15, %if.entry12, %Lexer_string_token.exit, %Lexer_advance.exit
  %common.ret.op = phi ptr [ %14, %Lexer_advance.exit ], [ %464, %Lexer_string_token.exit ], [ %543, %if.entry12 ], [ %550, %if.entry15 ], [ %557, %if.entry18 ], [ %879, %Lexer_advance.exit523 ], [ %902, %if.entry42 ], [ %909, %if.entry45 ], [ %916, %if.entry48 ], [ %923, %if.entry51 ], [ %930, %if.entry54 ], [ %937, %if.entry57 ], [ %944, %if.entry60 ], [ %982, %Lexer_char_token.exit ], [ %991, %if.entry66 ], [ %998, %if.entry69 ], [ %1194, %Lexer_dot_token.exit ], [ %1203, %if.entry87 ], [ null, %Array_FloError____sl__.exit ], [ %178, %ifend.i ], [ %179, %ifend4.i ], [ %477, %if.entry.i188 ], [ %479, %if.entry2.i190 ], [ %481, %if.entry6.i ], [ %514, %end.i218 ], [ %577, %Lexer_advance.exit.i258 ], [ %598, %ifend3.i ], [ %590, %Lexer_advance.exit47.i275 ], [ %618, %Lexer_advance.exit.i298 ], [ %654, %ifend6.i ], [ %631, %Lexer_advance.exit88.i ], [ %646, %Lexer_advance.exit53.i ], [ %675, %Lexer_advance.exit.i347 ], [ %694, %ifend3.i380 ], [ %706, %Lexer_advance.exit53.i404 ], [ %714, %ifend6.i412 ], [ %735, %Lexer_advance.exit.i431 ], [ %743, %ifend.i436 ], [ %763, %Lexer_advance.exit.i467 ], [ %771, %ifend.i475 ], [ %887, %Lexer_advance.exit.i556 ], [ %895, %ifend.i564 ], [ %1018, %Lexer_advance.exit.i698 ], [ %1026, %ifend.i706 ], [ %1046, %Lexer_advance.exit.i737 ], [ %1054, %ifend.i745 ], [ %1074, %Lexer_advance.exit.i776 ], [ %1093, %ifend3.i814 ], [ %1105, %Lexer_advance.exit53.i838 ], [ %1113, %ifend6.i846 ], [ %1134, %Lexer_advance.exit.i877 ], [ %1153, %ifend3.i915 ], [ %1165, %Lexer_advance.exit53.i939 ], [ %1173, %ifend6.i947 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1, %1
  %memberidx.i.i166 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %3 = load i64, ptr %memberidx.i.i166, align 4
  %memberidx1.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx2.i.i, align 4
  %.not1175 = icmp slt i64 %3, %5
  br i1 %.not1175, label %end.i, label %end.i.thread

end.i.thread:                                     ; preds = %if.entry
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit

end.i:                                            ; preds = %if.entry
  %6 = add nsw i64 %3, 1
  store i64 %6, ptr %memberidx.i.i166, align 4
  %7 = load ptr, ptr %4, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 %6
  %9 = load i8, ptr %8, align 1
  store i8 %9, ptr %0, align 1
  switch i8 %9, label %if.entry9.i [
    i8 10, label %if.entry.i
    i8 0, label %Lexer_advance.exit
  ]

if.entry.i:                                       ; preds = %end.i
  %memberidx5.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i, align 4
  %memberidx6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %10 = load i64, ptr %memberidx6.i, align 4
  %11 = add nsw i64 %10, 1
  store i64 %11, ptr %memberidx6.i, align 4
  br label %Lexer_advance.exit

if.entry9.i:                                      ; preds = %end.i
  %memberidx12.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %12 = load i64, ptr %memberidx12.i, align 4
  %13 = add nsw i64 %12, 1
  store i64 %13, ptr %memberidx12.i, align 4
  br label %Lexer_advance.exit

Lexer_advance.exit:                               ; preds = %end.i.thread, %end.i, %if.entry.i, %if.entry9.i
  %14 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

ifend:                                            ; preds = %1
  %15 = and i8 %2, -33
  %16 = add i8 %15, -65
  %17 = icmp ult i8 %16, 26
  %18 = icmp eq i8 %2, 95
  %19 = or i1 %18, %17
  br i1 %19, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %memberidx.i169 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %20 = load i64, ptr %memberidx.i169, align 4
  %21 = add nsw i64 %20, 1
  %memberidx1.i.i171 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %22 = load ptr, ptr %memberidx1.i.i171, align 8
  %memberidx2.i.i172 = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx2.i.i172, align 4
  %24 = icmp slt i64 %21, %23
  br i1 %24, label %if.entry.i64.i, label %Lexer_peek.exit65.i

if.entry.i64.i:                                   ; preds = %if.entry3
  %25 = load ptr, ptr %22, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 %21
  %27 = load i8, ptr %26, align 1
  br label %Lexer_peek.exit65.i

Lexer_peek.exit65.i:                              ; preds = %if.entry.i64.i, %if.entry3
  %common.ret.op.i63.i = phi i8 [ %27, %if.entry.i64.i ], [ 0, %if.entry3 ]
  %28 = and i8 %common.ret.op.i63.i, -33
  %29 = add i8 %28, -65
  %30 = icmp ult i8 %29, 26
  %31 = icmp eq i8 %common.ret.op.i63.i, 95
  %32 = or i1 %31, %30
  %33 = add i8 %common.ret.op.i63.i, -48
  %34 = icmp ult i8 %33, 10
  %35 = or i1 %34, %32
  %.not1169 = icmp slt i64 %20, %23
  %36 = and i1 %.not1169, %35
  br i1 %36, label %while.entry.i.preheader, label %while.end.i

while.entry.i.preheader:                          ; preds = %Lexer_peek.exit65.i
  %memberidx5.i77.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i78.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Lexer_peek.exit91.i
  %37 = phi i64 [ %48, %Lexer_peek.exit91.i ], [ %20, %while.entry.i.preheader ]
  %38 = phi i64 [ %50, %Lexer_peek.exit91.i ], [ %23, %while.entry.i.preheader ]
  %length.0.i = phi i64 [ %39, %Lexer_peek.exit91.i ], [ 1, %while.entry.i.preheader ]
  %39 = add nuw nsw i64 %length.0.i, 1
  %.not1173 = icmp slt i64 %37, %38
  br i1 %.not1173, label %end.i76.i, label %end.i76.i.thread

end.i76.i.thread:                                 ; preds = %while.entry.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit85.i

end.i76.i:                                        ; preds = %while.entry.i
  %40 = add nsw i64 %37, 1
  store i64 %40, ptr %memberidx.i169, align 4
  %41 = load ptr, ptr %22, align 8
  %42 = getelementptr inbounds i8, ptr %41, i64 %40
  %43 = load i8, ptr %42, align 1
  store i8 %43, ptr %0, align 1
  switch i8 %43, label %if.entry9.i84.i [
    i8 10, label %if.entry.i79.i
    i8 0, label %Lexer_advance.exit85.i
  ]

if.entry.i79.i:                                   ; preds = %end.i76.i
  store i64 0, ptr %memberidx5.i77.i, align 4
  %44 = load i64, ptr %memberidx6.i78.i, align 4
  %45 = add nsw i64 %44, 1
  store i64 %45, ptr %memberidx6.i78.i, align 4
  br label %Lexer_advance.exit85.i

if.entry9.i84.i:                                  ; preds = %end.i76.i
  %46 = load i64, ptr %memberidx5.i77.i, align 4
  %47 = add nsw i64 %46, 1
  store i64 %47, ptr %memberidx5.i77.i, align 4
  br label %Lexer_advance.exit85.i

Lexer_advance.exit85.i:                           ; preds = %end.i76.i.thread, %end.i76.i, %if.entry9.i84.i, %if.entry.i79.i
  %48 = phi i64 [ %37, %end.i76.i.thread ], [ %40, %end.i76.i ], [ %40, %if.entry9.i84.i ], [ %40, %if.entry.i79.i ]
  %49 = add nsw i64 %48, 1
  %50 = load i64, ptr %memberidx2.i.i172, align 4
  %51 = icmp slt i64 %49, %50
  br i1 %51, label %if.entry.i90.i, label %Lexer_peek.exit91.i

if.entry.i90.i:                                   ; preds = %Lexer_advance.exit85.i
  %52 = load ptr, ptr %22, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 %49
  %54 = load i8, ptr %53, align 1
  br label %Lexer_peek.exit91.i

Lexer_peek.exit91.i:                              ; preds = %if.entry.i90.i, %Lexer_advance.exit85.i
  %common.ret.op.i89.i = phi i8 [ %54, %if.entry.i90.i ], [ 0, %Lexer_advance.exit85.i ]
  %55 = and i8 %common.ret.op.i89.i, -33
  %56 = add i8 %55, -65
  %57 = icmp ult i8 %56, 26
  %58 = icmp eq i8 %common.ret.op.i89.i, 95
  %59 = or i1 %58, %57
  %60 = add i8 %common.ret.op.i89.i, -48
  %61 = icmp ult i8 %60, 10
  %62 = or i1 %61, %59
  %.not1174 = icmp slt i64 %48, %50
  %63 = and i1 %.not1174, %62
  br i1 %63, label %while.entry.i, label %while.end.i

while.end.i:                                      ; preds = %Lexer_peek.exit91.i, %Lexer_peek.exit65.i
  %64 = phi i64 [ 1, %Lexer_peek.exit65.i ], [ %39, %Lexer_peek.exit91.i ]
  %65 = trunc i64 %64 to i32
  %66 = tail call ptr @malloc(i32 %65)
  %67 = load ptr, ptr %22, align 8
  %68 = getelementptr inbounds i8, ptr %67, i64 %20
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %66, ptr align 2147483648 %68, i64 %64, i1 false)
  %69 = tail call ptr @malloc(i32 24)
  store ptr %66, ptr %69, align 8
  %memberidx1.i.i95.i = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  store i64 %64, ptr %memberidx1.i.i95.i, align 4
  %memberidx2.i.i96.i = getelementptr inbounds %String, ptr %69, i64 0, i32 2
  store i64 %64, ptr %memberidx2.i.i96.i, align 4
  %70 = tail call ptr @malloc(i32 32)
  %71 = load i64, ptr %memberidx.i169, align 4
  %72 = sub i64 1, %64
  %73 = add i64 %72, %71
  %74 = add nsw i64 %71, 1
  %memberidx2.i98.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %75 = load i64, ptr %memberidx2.i98.i, align 4
  %76 = sub nuw i64 %75, %64
  %memberidx3.i.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %77 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %73, ptr %70, align 4
  %memberidx1.i.i99.i = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 1
  store i64 %74, ptr %memberidx1.i.i99.i, align 4
  %memberidx2.i.i100.i = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 2
  store i64 %76, ptr %memberidx2.i.i100.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %70, i64 0, i32 3
  store i64 %77, ptr %memberidx3.i.i.i, align 4
  %78 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %78, ptr noundef nonnull align 8 dereferenceable(3) @41, i64 3, i1 false)
  %79 = tail call ptr @malloc(i32 24)
  store ptr %78, ptr %79, align 8
  %memberidx1.i.i.i.i = getelementptr inbounds %String, ptr %79, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %String, ptr %79, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i.i.i, align 4
  %.not.i.i.i = icmp eq i64 %64, 3
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %ifend.i.i

ifend.i.i.i:                                      ; preds = %while.end.i
  %80 = tail call i64 @memcmp(ptr %66, ptr nonnull %78, i64 3)
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %if.entry.i175, label %ifend.i.i

ifend.i.i:                                        ; preds = %while.end.i, %ifend.i.i.i
  %82 = tail call ptr @malloc(i32 2)
  store i16 29295, ptr %82, align 8
  %83 = tail call ptr @malloc(i32 24)
  store ptr %82, ptr %83, align 8
  %memberidx1.i.i89.i.i = getelementptr inbounds %String, ptr %83, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i89.i.i, align 4
  %memberidx2.i.i90.i.i = getelementptr inbounds %String, ptr %83, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i90.i.i, align 4
  %.not.i93.i.i = icmp eq i64 %64, 2
  br i1 %.not.i93.i.i, label %ifend.i95.i.i, label %ifend3.i.i

ifend.i95.i.i:                                    ; preds = %ifend.i.i
  %84 = tail call i64 @memcmp(ptr %66, ptr nonnull %82, i64 2)
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %if.entry.i175, label %ifend3.i.i

ifend3.i.i:                                       ; preds = %ifend.i.i, %ifend.i95.i.i
  %86 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %86, ptr noundef nonnull align 8 dereferenceable(5) @42, i64 5, i1 false)
  %87 = tail call ptr @malloc(i32 24)
  store ptr %86, ptr %87, align 8
  %memberidx1.i.i97.i.i = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i97.i.i, align 4
  %memberidx2.i.i98.i.i = getelementptr inbounds %String, ptr %87, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i98.i.i, align 4
  %.not.i101.i.i = icmp eq i64 %64, 5
  br i1 %.not.i101.i.i, label %ifend.i103.i.i, label %ifend6.i.i

ifend.i103.i.i:                                   ; preds = %ifend3.i.i
  %88 = tail call i64 @memcmp(ptr %66, ptr nonnull %86, i64 5)
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %if.entry.i175, label %ifend6.i.i

ifend6.i.i:                                       ; preds = %ifend3.i.i, %ifend.i103.i.i
  %90 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %90, ptr noundef nonnull align 8 dereferenceable(3) @43, i64 3, i1 false)
  %91 = tail call ptr @malloc(i32 24)
  store ptr %90, ptr %91, align 8
  %memberidx1.i.i105.i.i = getelementptr inbounds %String, ptr %91, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i105.i.i, align 4
  %memberidx2.i.i106.i.i = getelementptr inbounds %String, ptr %91, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i106.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i111.i.i, label %ifend9.i.i

ifend.i111.i.i:                                   ; preds = %ifend6.i.i
  %92 = tail call i64 @memcmp(ptr %66, ptr nonnull %90, i64 3)
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %if.entry.i175, label %ifend9.i.i

ifend9.i.i:                                       ; preds = %ifend6.i.i, %ifend.i111.i.i
  %94 = tail call ptr @malloc(i32 2)
  store i16 26217, ptr %94, align 8
  %95 = tail call ptr @malloc(i32 24)
  store ptr %94, ptr %95, align 8
  %memberidx1.i.i113.i.i = getelementptr inbounds %String, ptr %95, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i113.i.i, align 4
  %memberidx2.i.i114.i.i = getelementptr inbounds %String, ptr %95, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i114.i.i, align 4
  br i1 %.not.i93.i.i, label %ifend.i119.i.i, label %ifend12.i.i

ifend.i119.i.i:                                   ; preds = %ifend9.i.i
  %96 = tail call i64 @memcmp(ptr %66, ptr nonnull %94, i64 2)
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %if.entry.i175, label %ifend12.i.i

ifend12.i.i:                                      ; preds = %ifend9.i.i, %ifend.i119.i.i
  %98 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %98, ptr noundef nonnull align 8 dereferenceable(5) @44, i64 5, i1 false)
  %99 = tail call ptr @malloc(i32 24)
  store ptr %98, ptr %99, align 8
  %memberidx1.i.i121.i.i = getelementptr inbounds %String, ptr %99, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i121.i.i, align 4
  %memberidx2.i.i122.i.i = getelementptr inbounds %String, ptr %99, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i122.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i127.i.i, label %ifend15.i.i

ifend.i127.i.i:                                   ; preds = %ifend12.i.i
  %100 = tail call i64 @memcmp(ptr %66, ptr nonnull %98, i64 5)
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %if.entry.i175, label %ifend15.i.i

ifend15.i.i:                                      ; preds = %ifend12.i.i, %ifend.i127.i.i
  %102 = tail call ptr @malloc(i32 4)
  store i32 1702063205, ptr %102, align 8
  %103 = tail call ptr @malloc(i32 24)
  store ptr %102, ptr %103, align 8
  %memberidx1.i.i129.i.i = getelementptr inbounds %String, ptr %103, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i129.i.i, align 4
  %memberidx2.i.i130.i.i = getelementptr inbounds %String, ptr %103, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i130.i.i, align 4
  %.not.i133.i.i = icmp eq i64 %64, 4
  br i1 %.not.i133.i.i, label %ifend.i135.i.i, label %ifend18.i.i

ifend.i135.i.i:                                   ; preds = %ifend15.i.i
  %104 = tail call i64 @memcmp(ptr %66, ptr nonnull %102, i64 4)
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %if.entry.i175, label %ifend18.i.i

ifend18.i.i:                                      ; preds = %ifend15.i.i, %ifend.i135.i.i
  %106 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %106, ptr noundef nonnull align 8 dereferenceable(3) @46, i64 3, i1 false)
  %107 = tail call ptr @malloc(i32 24)
  store ptr %106, ptr %107, align 8
  %memberidx1.i.i137.i.i = getelementptr inbounds %String, ptr %107, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i137.i.i, align 4
  %memberidx2.i.i138.i.i = getelementptr inbounds %String, ptr %107, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i138.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i143.i.i, label %ifend21.i.i

ifend.i143.i.i:                                   ; preds = %ifend18.i.i
  %108 = tail call i64 @memcmp(ptr %66, ptr nonnull %106, i64 3)
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %if.entry.i175, label %ifend21.i.i

ifend21.i.i:                                      ; preds = %ifend18.i.i, %ifend.i143.i.i
  %110 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %110, ptr noundef nonnull align 8 dereferenceable(5) @47, i64 5, i1 false)
  %111 = tail call ptr @malloc(i32 24)
  store ptr %110, ptr %111, align 8
  %memberidx1.i.i145.i.i = getelementptr inbounds %String, ptr %111, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i145.i.i, align 4
  %memberidx2.i.i146.i.i = getelementptr inbounds %String, ptr %111, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i146.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i151.i.i, label %ifend24.i.i

ifend.i151.i.i:                                   ; preds = %ifend21.i.i
  %112 = tail call i64 @memcmp(ptr %66, ptr nonnull %110, i64 5)
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %if.entry.i175, label %ifend24.i.i

ifend24.i.i:                                      ; preds = %ifend21.i.i, %ifend.i151.i.i
  %114 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %114, ptr noundef nonnull align 8 dereferenceable(3) @48, i64 3, i1 false)
  %115 = tail call ptr @malloc(i32 24)
  store ptr %114, ptr %115, align 8
  %memberidx1.i.i153.i.i = getelementptr inbounds %String, ptr %115, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i153.i.i, align 4
  %memberidx2.i.i154.i.i = getelementptr inbounds %String, ptr %115, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i154.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i159.i.i, label %ifend27.i.i

ifend.i159.i.i:                                   ; preds = %ifend24.i.i
  %116 = tail call i64 @memcmp(ptr %66, ptr nonnull %114, i64 3)
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %if.entry.i175, label %ifend27.i.i

ifend27.i.i:                                      ; preds = %ifend24.i.i, %ifend.i159.i.i
  %118 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %118, ptr noundef nonnull align 8 dereferenceable(5) @49, i64 5, i1 false)
  %119 = tail call ptr @malloc(i32 24)
  store ptr %118, ptr %119, align 8
  %memberidx1.i.i161.i.i = getelementptr inbounds %String, ptr %119, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i161.i.i, align 4
  %memberidx2.i.i162.i.i = getelementptr inbounds %String, ptr %119, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i162.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i167.i.i, label %ifend30.i.i

ifend.i167.i.i:                                   ; preds = %ifend27.i.i
  %120 = tail call i64 @memcmp(ptr %66, ptr nonnull %118, i64 5)
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %if.entry.i175, label %ifend30.i.i

ifend30.i.i:                                      ; preds = %ifend27.i.i, %ifend.i167.i.i
  %122 = tail call ptr @malloc(i32 8)
  store i64 7310870969309884259, ptr %122, align 8
  %123 = tail call ptr @malloc(i32 24)
  store ptr %122, ptr %123, align 8
  %memberidx1.i.i169.i.i = getelementptr inbounds %String, ptr %123, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i169.i.i, align 4
  %memberidx2.i.i170.i.i = getelementptr inbounds %String, ptr %123, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i170.i.i, align 4
  %.not.i173.i.i = icmp eq i64 %64, 8
  br i1 %.not.i173.i.i, label %ifend.i175.i.i, label %ifend33.i.i

ifend.i175.i.i:                                   ; preds = %ifend30.i.i
  %124 = tail call i64 @memcmp(ptr %66, ptr nonnull %122, i64 8)
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %if.entry.i175, label %ifend33.i.i

ifend33.i.i:                                      ; preds = %ifend30.i.i, %ifend.i175.i.i
  %126 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %126, ptr noundef nonnull align 8 dereferenceable(6) @50, i64 6, i1 false)
  %127 = tail call ptr @malloc(i32 24)
  store ptr %126, ptr %127, align 8
  %memberidx1.i.i177.i.i = getelementptr inbounds %String, ptr %127, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i177.i.i, align 4
  %memberidx2.i.i178.i.i = getelementptr inbounds %String, ptr %127, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i178.i.i, align 4
  %.not.i181.i.i = icmp eq i64 %64, 6
  br i1 %.not.i181.i.i, label %ifend.i183.i.i, label %ifend36.i.i

ifend.i183.i.i:                                   ; preds = %ifend33.i.i
  %128 = tail call i64 @memcmp(ptr %66, ptr nonnull %126, i64 6)
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %if.entry.i175, label %ifend36.i.i

ifend36.i.i:                                      ; preds = %ifend33.i.i, %ifend.i183.i.i
  %130 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %130, ptr noundef nonnull align 8 dereferenceable(6) @51, i64 6, i1 false)
  %131 = tail call ptr @malloc(i32 24)
  store ptr %130, ptr %131, align 8
  %memberidx1.i.i185.i.i = getelementptr inbounds %String, ptr %131, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i185.i.i, align 4
  %memberidx2.i.i186.i.i = getelementptr inbounds %String, ptr %131, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i186.i.i, align 4
  br i1 %.not.i181.i.i, label %ifend.i191.i.i, label %ifend39.i.i

ifend.i191.i.i:                                   ; preds = %ifend36.i.i
  %132 = tail call i64 @memcmp(ptr %66, ptr nonnull %130, i64 6)
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %if.entry.i175, label %ifend39.i.i

ifend39.i.i:                                      ; preds = %ifend36.i.i, %ifend.i191.i.i
  %134 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %134, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  %135 = tail call ptr @malloc(i32 24)
  store ptr %134, ptr %135, align 8
  %memberidx1.i.i193.i.i = getelementptr inbounds %String, ptr %135, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i193.i.i, align 4
  %memberidx2.i.i194.i.i = getelementptr inbounds %String, ptr %135, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i194.i.i, align 4
  %.not.i197.i.i = icmp eq i64 %64, 7
  br i1 %.not.i197.i.i, label %ifend.i199.i.i, label %ifend42.i.i

ifend.i199.i.i:                                   ; preds = %ifend39.i.i
  %136 = tail call i64 @memcmp(ptr %66, ptr nonnull %134, i64 7)
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %if.entry.i175, label %ifend42.i.i

ifend42.i.i:                                      ; preds = %ifend39.i.i, %ifend.i199.i.i
  %138 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %138, ptr noundef nonnull align 8 dereferenceable(6) @53, i64 6, i1 false)
  %139 = tail call ptr @malloc(i32 24)
  store ptr %138, ptr %139, align 8
  %memberidx1.i.i201.i.i = getelementptr inbounds %String, ptr %139, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i201.i.i, align 4
  %memberidx2.i.i202.i.i = getelementptr inbounds %String, ptr %139, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i202.i.i, align 4
  br i1 %.not.i181.i.i, label %ifend.i207.i.i, label %ifend45.i.i

ifend.i207.i.i:                                   ; preds = %ifend42.i.i
  %140 = tail call i64 @memcmp(ptr %66, ptr nonnull %138, i64 6)
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %if.entry.i175, label %ifend45.i.i

ifend45.i.i:                                      ; preds = %ifend42.i.i, %ifend.i207.i.i
  %142 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %142, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  %143 = tail call ptr @malloc(i32 24)
  store ptr %142, ptr %143, align 8
  %memberidx1.i.i209.i.i = getelementptr inbounds %String, ptr %143, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i209.i.i, align 4
  %memberidx2.i.i210.i.i = getelementptr inbounds %String, ptr %143, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i210.i.i, align 4
  %.not.i213.i.i = icmp eq i64 %64, 9
  br i1 %.not.i213.i.i, label %ifend.i215.i.i, label %ifend48.i.i

ifend.i215.i.i:                                   ; preds = %ifend45.i.i
  %144 = tail call i64 @memcmp(ptr %66, ptr nonnull %142, i64 9)
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %if.entry.i175, label %ifend48.i.i

ifend48.i.i:                                      ; preds = %ifend45.i.i, %ifend.i215.i.i
  %146 = tail call ptr @malloc(i32 2)
  store i16 28265, ptr %146, align 8
  %147 = tail call ptr @malloc(i32 24)
  store ptr %146, ptr %147, align 8
  %memberidx1.i.i217.i.i = getelementptr inbounds %String, ptr %147, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i217.i.i, align 4
  %memberidx2.i.i218.i.i = getelementptr inbounds %String, ptr %147, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i218.i.i, align 4
  br i1 %.not.i93.i.i, label %ifend.i223.i.i, label %ifend51.i.i

ifend.i223.i.i:                                   ; preds = %ifend48.i.i
  %148 = tail call i64 @memcmp(ptr %66, ptr nonnull %146, i64 2)
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %if.entry.i175, label %ifend51.i.i

ifend51.i.i:                                      ; preds = %ifend48.i.i, %ifend.i223.i.i
  %150 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %150, ptr noundef nonnull align 8 dereferenceable(5) @55, i64 5, i1 false)
  %151 = tail call ptr @malloc(i32 24)
  store ptr %150, ptr %151, align 8
  %memberidx1.i.i225.i.i = getelementptr inbounds %String, ptr %151, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i225.i.i, align 4
  %memberidx2.i.i226.i.i = getelementptr inbounds %String, ptr %151, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i226.i.i, align 4
  br i1 %.not.i101.i.i, label %ifend.i231.i.i, label %ifend54.i.i

ifend.i231.i.i:                                   ; preds = %ifend51.i.i
  %152 = tail call i64 @memcmp(ptr %66, ptr nonnull %150, i64 5)
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %if.entry.i175, label %ifend54.i.i

ifend54.i.i:                                      ; preds = %ifend51.i.i, %ifend.i231.i.i
  %154 = tail call ptr @malloc(i32 4)
  store i32 1836412517, ptr %154, align 8
  %155 = tail call ptr @malloc(i32 24)
  store ptr %154, ptr %155, align 8
  %memberidx1.i.i233.i.i = getelementptr inbounds %String, ptr %155, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i233.i.i, align 4
  %memberidx2.i.i234.i.i = getelementptr inbounds %String, ptr %155, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i234.i.i, align 4
  br i1 %.not.i133.i.i, label %ifend.i239.i.i, label %ifend57.i.i

ifend.i239.i.i:                                   ; preds = %ifend54.i.i
  %156 = tail call i64 @memcmp(ptr %66, ptr nonnull %154, i64 4)
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %if.entry.i175, label %ifend57.i.i

ifend57.i.i:                                      ; preds = %ifend54.i.i, %ifend.i239.i.i
  %158 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %158, ptr noundef nonnull align 8 dereferenceable(3) @56, i64 3, i1 false)
  %159 = tail call ptr @malloc(i32 24)
  store ptr %158, ptr %159, align 8
  %memberidx1.i.i241.i.i = getelementptr inbounds %String, ptr %159, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i241.i.i, align 4
  %memberidx2.i.i242.i.i = getelementptr inbounds %String, ptr %159, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i242.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i247.i.i, label %ifend60.i.i

ifend.i247.i.i:                                   ; preds = %ifend57.i.i
  %160 = tail call i64 @memcmp(ptr %66, ptr nonnull %158, i64 3)
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %if.entry.i175, label %ifend60.i.i

ifend60.i.i:                                      ; preds = %ifend57.i.i, %ifend.i247.i.i
  %162 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %162, ptr noundef nonnull align 8 dereferenceable(3) @57, i64 3, i1 false)
  %163 = tail call ptr @malloc(i32 24)
  store ptr %162, ptr %163, align 8
  %memberidx1.i.i249.i.i = getelementptr inbounds %String, ptr %163, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i249.i.i, align 4
  %memberidx2.i.i250.i.i = getelementptr inbounds %String, ptr %163, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i250.i.i, align 4
  br i1 %.not.i.i.i, label %ifend.i255.i.i, label %ifend63.i.i

ifend.i255.i.i:                                   ; preds = %ifend60.i.i
  %164 = tail call i64 @memcmp(ptr %66, ptr nonnull %162, i64 3)
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %if.entry.i175, label %ifend63.i.i

ifend63.i.i:                                      ; preds = %ifend60.i.i, %ifend.i255.i.i
  %166 = tail call ptr @malloc(i32 2)
  store i16 29537, ptr %166, align 8
  %167 = tail call ptr @malloc(i32 24)
  store ptr %166, ptr %167, align 8
  %memberidx1.i.i257.i.i = getelementptr inbounds %String, ptr %167, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i257.i.i, align 4
  %memberidx2.i.i258.i.i = getelementptr inbounds %String, ptr %167, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i258.i.i, align 4
  br i1 %.not.i93.i.i, label %ifend.i263.i.i, label %ifend.i

ifend.i263.i.i:                                   ; preds = %ifend63.i.i
  %168 = tail call i64 @memcmp(ptr %66, ptr nonnull %166, i64 2)
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %if.entry.i175, label %ifend.i

if.entry.i175:                                    ; preds = %ifend.i263.i.i, %ifend.i.i.i, %ifend.i95.i.i, %ifend.i103.i.i, %ifend.i111.i.i, %ifend.i119.i.i, %ifend.i127.i.i, %ifend.i135.i.i, %ifend.i143.i.i, %ifend.i151.i.i, %ifend.i159.i.i, %ifend.i167.i.i, %ifend.i175.i.i, %ifend.i183.i.i, %ifend.i191.i.i, %ifend.i199.i.i, %ifend.i207.i.i, %ifend.i215.i.i, %ifend.i223.i.i, %ifend.i231.i.i, %ifend.i239.i.i, %ifend.i247.i.i, %ifend.i255.i.i
  %common.ret.op.i59.i.ph = phi i64 [ 73, %ifend.i255.i.i ], [ 72, %ifend.i247.i.i ], [ 71, %ifend.i239.i.i ], [ 70, %ifend.i231.i.i ], [ 69, %ifend.i223.i.i ], [ 68, %ifend.i215.i.i ], [ 67, %ifend.i207.i.i ], [ 66, %ifend.i199.i.i ], [ 65, %ifend.i191.i.i ], [ 64, %ifend.i183.i.i ], [ 63, %ifend.i175.i.i ], [ 62, %ifend.i167.i.i ], [ 61, %ifend.i159.i.i ], [ 60, %ifend.i151.i.i ], [ 59, %ifend.i143.i.i ], [ 58, %ifend.i135.i.i ], [ 57, %ifend.i127.i.i ], [ 56, %ifend.i119.i.i ], [ 55, %ifend.i111.i.i ], [ 54, %ifend.i103.i.i ], [ 9, %ifend.i95.i.i ], [ 8, %ifend.i.i.i ], [ 74, %ifend.i263.i.i ]
  %170 = load i64, ptr %memberidx.i169, align 4
  %171 = add nsw i64 %170, 1
  %172 = load ptr, ptr %memberidx1.i.i171, align 8
  %memberidx2.i53.i = getelementptr inbounds %String, ptr %172, i64 0, i32 1
  %173 = load i64, ptr %memberidx2.i53.i, align 4
  %174 = icmp slt i64 %171, %173
  br i1 %174, label %if.entry.i55.i, label %ifend4.i

if.entry.i55.i:                                   ; preds = %if.entry.i175
  %175 = load ptr, ptr %172, align 8
  %176 = getelementptr inbounds i8, ptr %175, i64 %171
  %177 = load i8, ptr %176, align 1
  %phi.cmp1170 = icmp eq i8 %177, 61
  br i1 %phi.cmp1170, label %if.entry2.i, label %ifend4.i

ifend.i:                                          ; preds = %ifend63.i.i, %ifend.i263.i.i
  %178 = tail call ptr @malloc(i32 24)
  store i64 53, ptr %178, align 4
  %memberidx1.i.i49.i = getelementptr inbounds %Token, ptr %178, i64 0, i32 1
  store ptr %70, ptr %memberidx1.i.i49.i, align 8
  %memberidx.i50.i = getelementptr inbounds %IdentifierToken, ptr %178, i64 0, i32 2
  store ptr %69, ptr %memberidx.i50.i, align 8
  br label %common.ret

if.entry2.i:                                      ; preds = %if.entry.i55.i
  %trunc = trunc i64 %common.ret.op.i59.i.ph to i7
  switch i7 %trunc, label %ifend4.i [
    i7 8, label %end.i39.i
    i7 9, label %if.entry8.i
  ]

ifend4.i:                                         ; preds = %if.entry2.i, %if.entry.i42.i, %if.entry9.i46.i, %end.i39.i, %end.i.i.thread, %if.entry.i31.i, %if.entry9.i.i, %end.i.i, %if.entry.i175, %if.entry.i55.i
  %keyword.0.i = phi i64 [ %common.ret.op.i59.i.ph, %if.entry.i55.i ], [ %common.ret.op.i59.i.ph, %if.entry.i175 ], [ 19, %end.i.i ], [ 19, %if.entry9.i.i ], [ 19, %if.entry.i31.i ], [ 19, %end.i.i.thread ], [ 18, %end.i39.i ], [ 18, %if.entry9.i46.i ], [ 18, %if.entry.i42.i ], [ %common.ret.op.i59.i.ph, %if.entry2.i ]
  %179 = tail call ptr @malloc(i32 16)
  store i64 %keyword.0.i, ptr %179, align 4
  %memberidx1.i48.i = getelementptr inbounds %Token, ptr %179, i64 0, i32 1
  store ptr %70, ptr %memberidx1.i48.i, align 8
  br label %common.ret

end.i39.i:                                        ; preds = %if.entry2.i
  store i64 %171, ptr %memberidx.i169, align 4
  %180 = load ptr, ptr %172, align 8
  %181 = getelementptr inbounds i8, ptr %180, i64 %171
  %182 = load i8, ptr %181, align 1
  store i8 %182, ptr %0, align 1
  switch i8 %182, label %if.entry9.i46.i [
    i8 10, label %if.entry.i42.i
    i8 0, label %ifend4.i
  ]

if.entry.i42.i:                                   ; preds = %end.i39.i
  store i64 0, ptr %memberidx2.i98.i, align 4
  %183 = load i64, ptr %memberidx3.i.i, align 4
  %184 = add nsw i64 %183, 1
  store i64 %184, ptr %memberidx3.i.i, align 4
  br label %ifend4.i

if.entry9.i46.i:                                  ; preds = %end.i39.i
  %185 = load i64, ptr %memberidx2.i98.i, align 4
  %186 = add nsw i64 %185, 1
  store i64 %186, ptr %memberidx2.i98.i, align 4
  br label %ifend4.i

if.entry8.i:                                      ; preds = %if.entry2.i
  %.not1171 = icmp slt i64 %170, %173
  br i1 %.not1171, label %end.i.i, label %end.i.i.thread

end.i.i.thread:                                   ; preds = %if.entry8.i
  store i8 0, ptr %0, align 1
  br label %ifend4.i

end.i.i:                                          ; preds = %if.entry8.i
  store i64 %171, ptr %memberidx.i169, align 4
  %187 = load ptr, ptr %172, align 8
  %188 = getelementptr inbounds i8, ptr %187, i64 %171
  %189 = load i8, ptr %188, align 1
  store i8 %189, ptr %0, align 1
  switch i8 %189, label %if.entry9.i.i [
    i8 10, label %if.entry.i31.i
    i8 0, label %ifend4.i
  ]

if.entry.i31.i:                                   ; preds = %end.i.i
  store i64 0, ptr %memberidx2.i98.i, align 4
  %190 = load i64, ptr %memberidx3.i.i, align 4
  %191 = add nsw i64 %190, 1
  store i64 %191, ptr %memberidx3.i.i, align 4
  br label %ifend4.i

if.entry9.i.i:                                    ; preds = %end.i.i
  %192 = load i64, ptr %memberidx2.i98.i, align 4
  %193 = add nsw i64 %192, 1
  store i64 %193, ptr %memberidx2.i98.i, align 4
  br label %ifend4.i

ifend5:                                           ; preds = %ifend
  %194 = icmp eq i8 %2, 34
  br i1 %194, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend5
  %195 = tail call ptr @malloc(i32 24)
  %memberidx.i.i990 = getelementptr inbounds %Array_Array_Token__, ptr %195, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i990, align 4
  %memberidx1.i.i991 = getelementptr inbounds %Array_Array_Token__, ptr %195, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i991, align 4
  %196 = tail call ptr @malloc(i32 64)
  store ptr %196, ptr %195, align 8
  store i64 0, ptr %memberidx.i.i990, align 4
  %197 = tail call ptr @malloc(i32 24)
  %memberidx.i69.i = getelementptr inbounds %Array_uint_, ptr %197, i64 0, i32 1
  store i64 0, ptr %memberidx.i69.i, align 4
  %memberidx1.i70.i = getelementptr inbounds %Array_uint_, ptr %197, i64 0, i32 2
  store i64 8, ptr %memberidx1.i70.i, align 4
  %198 = tail call ptr @malloc(i32 64)
  store ptr %198, ptr %197, align 8
  store i64 0, ptr %memberidx.i69.i, align 4
  %memberidx.i.i.i994 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %199 = load i64, ptr %memberidx.i.i.i994, align 4
  %memberidx1.i.i.i995 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %200 = load ptr, ptr %memberidx1.i.i.i995, align 8
  %memberidx2.i.i.i996 = getelementptr inbounds %String, ptr %200, i64 0, i32 1
  %201 = load i64, ptr %memberidx2.i.i.i996, align 4
  %.not1160 = icmp slt i64 %199, %201
  br i1 %.not1160, label %end.i.i1001, label %end.i.i1001.thread

end.i.i1001.thread:                               ; preds = %if.entry6
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i1011

end.i.i1001:                                      ; preds = %if.entry6
  %202 = add nsw i64 %199, 1
  store i64 %202, ptr %memberidx.i.i.i994, align 4
  %203 = load ptr, ptr %200, align 8
  %204 = getelementptr inbounds i8, ptr %203, i64 %202
  %205 = load i8, ptr %204, align 1
  store i8 %205, ptr %0, align 1
  switch i8 %205, label %if.entry9.i.i1008 [
    i8 10, label %if.entry.i.i1004
    i8 0, label %Lexer_advance.exit.i1011
  ]

if.entry.i.i1004:                                 ; preds = %end.i.i1001
  %memberidx5.i.i1002 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i1002, align 4
  %memberidx6.i.i1003 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %206 = load i64, ptr %memberidx6.i.i1003, align 4
  %207 = add nsw i64 %206, 1
  store i64 %207, ptr %memberidx6.i.i1003, align 4
  br label %Lexer_advance.exit.i1011

if.entry9.i.i1008:                                ; preds = %end.i.i1001
  %memberidx12.i.i1007 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %208 = load i64, ptr %memberidx12.i.i1007, align 4
  %209 = add nsw i64 %208, 1
  store i64 %209, ptr %memberidx12.i.i1007, align 4
  br label %Lexer_advance.exit.i1011

Lexer_advance.exit.i1011:                         ; preds = %end.i.i1001.thread, %end.i.i1001, %if.entry9.i.i1008, %if.entry.i.i1004
  %210 = tail call ptr @malloc(i32 1)
  %211 = tail call ptr @malloc(i32 24)
  store ptr %210, ptr %211, align 8
  %memberidx1.i.i72.i = getelementptr inbounds %String, ptr %211, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i72.i, align 4
  %memberidx.i74.i = getelementptr inbounds %String, ptr %211, i64 0, i32 2
  store i64 1, ptr %memberidx.i74.i, align 4
  %212 = load i64, ptr %memberidx.i.i.i994, align 4
  %213 = load ptr, ptr %memberidx1.i.i.i995, align 8
  %memberidx2.i77.i1010 = getelementptr inbounds %String, ptr %213, i64 0, i32 1
  %214 = load i64, ptr %memberidx2.i77.i1010, align 4
  %.not1161 = icmp slt i64 %212, %214
  br i1 %.not1161, label %while.entry.i1013.preheader, label %while.end.i1022

while.entry.i1013.preheader:                      ; preds = %Lexer_advance.exit.i1011
  %memberidx5.i99.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i100.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %.pre1244 = load i8, ptr %0, align 1
  br label %while.entry.i1013.outer

while.entry.i1013.outer:                          ; preds = %while.entry.i1013.preheader, %Lexer_advance.exit128.i
  %215 = phi ptr [ %210, %while.entry.i1013.preheader ], [ %333, %Lexer_advance.exit128.i ]
  %216 = phi i64 [ 1, %while.entry.i1013.preheader ], [ %334, %Lexer_advance.exit128.i ]
  %217 = phi i64 [ 0, %while.entry.i1013.preheader ], [ %330, %Lexer_advance.exit128.i ]
  %218 = phi i8 [ %.pre1244, %while.entry.i1013.preheader ], [ %348, %Lexer_advance.exit128.i ]
  %escape_next.0.i.ph = phi i1 [ false, %while.entry.i1013.preheader ], [ %329, %Lexer_advance.exit128.i ]
  %length.0.i1012.ph = phi i64 [ 2, %while.entry.i1013.preheader ], [ %328, %Lexer_advance.exit128.i ]
  %219 = icmp ne i8 %218, 34
  %220 = or i1 %escape_next.0.i.ph, %219
  br i1 %220, label %ifend.i1029.lr.ph, label %while.end.i1022

ifend.i1029.lr.ph:                                ; preds = %while.entry.i1013.outer
  %221 = add nsw i64 %length.0.i1012.ph, -2
  br label %ifend.i1029

while.end.i1022:                                  ; preds = %while.entry.i1013.outer, %Lexer_advance.exit128.i, %Array_Array_Token_____sl__.exit.i, %Lexer_advance.exit.i1011
  %222 = phi ptr [ %210, %Lexer_advance.exit.i1011 ], [ %215, %Array_Array_Token_____sl__.exit.i ], [ %215, %while.entry.i1013.outer ], [ %333, %Lexer_advance.exit128.i ]
  %223 = phi i64 [ 0, %Lexer_advance.exit.i1011 ], [ %217, %Array_Array_Token_____sl__.exit.i ], [ %217, %while.entry.i1013.outer ], [ %330, %Lexer_advance.exit128.i ]
  %length.1.i1014 = phi i64 [ 2, %Lexer_advance.exit.i1011 ], [ %length.0.i1012.ph, %Array_Array_Token_____sl__.exit.i ], [ %length.0.i1012.ph, %while.entry.i1013.outer ], [ %328, %Lexer_advance.exit128.i ]
  %224 = tail call ptr @malloc(i32 32)
  %225 = load i64, ptr %memberidx.i.i.i994, align 4
  %226 = sub i64 1, %length.1.i1014
  %227 = add i64 %226, %225
  %228 = add nsw i64 %225, 1
  %memberidx2.i79.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %229 = load i64, ptr %memberidx2.i79.i, align 4
  %230 = sub nuw i64 %229, %length.1.i1014
  %memberidx3.i.i1015 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %231 = load i64, ptr %memberidx3.i.i1015, align 4
  store i64 %227, ptr %224, align 4
  %memberidx1.i.i80.i1016 = getelementptr inbounds %FloRange, ptr %224, i64 0, i32 1
  store i64 %228, ptr %memberidx1.i.i80.i1016, align 4
  %memberidx2.i.i81.i1017 = getelementptr inbounds %FloRange, ptr %224, i64 0, i32 2
  store i64 %230, ptr %memberidx2.i.i81.i1017, align 4
  %memberidx3.i.i.i1018 = getelementptr inbounds %FloRange, ptr %224, i64 0, i32 3
  store i64 %231, ptr %memberidx3.i.i.i1018, align 4
  %232 = trunc i64 %223 to i32
  %233 = tail call ptr @malloc(i32 %232)
  %234 = tail call ptr @malloc(i32 24)
  store ptr %233, ptr %234, align 8
  %memberidx1.i.i.i.i1020 = getelementptr inbounds %String, ptr %234, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i.i1020, align 4
  %memberidx.i.i83.i = getelementptr inbounds %String, ptr %234, i64 0, i32 2
  store i64 %223, ptr %memberidx.i.i83.i, align 4
  %235 = icmp sgt i64 %223, 0
  br i1 %235, label %for.body.i.i.lr.ph, label %Lexer_string_token.exit

for.body.i.i.lr.ph:                               ; preds = %while.end.i1022
  %236 = getelementptr i8, ptr %222, i64 1
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.lr.ph, %for.incr.i.i
  %237 = phi i64 [ 0, %for.body.i.i.lr.ph ], [ %241, %for.incr.i.i ]
  %i.0.i.i1235 = phi i64 [ 0, %for.body.i.i.lr.ph ], [ %242, %for.incr.i.i ]
  %238 = getelementptr inbounds i8, ptr %222, i64 %i.0.i.i1235
  %239 = load i8, ptr %238, align 1
  %240 = icmp eq i8 %239, 92
  br i1 %240, label %if.entry.i84.i, label %ifend.i.i1023

for.incr.i.i:                                     ; preds = %String___adda__.exit.i.i, %String___adda__.exit48.i.i, %String_append_byte.exit.i.i
  %241 = phi i64 [ %277, %String___adda__.exit48.i.i ], [ %294, %String___adda__.exit.i.i ], [ %255, %String_append_byte.exit.i.i ]
  %i.1.i.i = phi i64 [ %244, %String___adda__.exit48.i.i ], [ %295, %String___adda__.exit.i.i ], [ %i.2.i.i, %String_append_byte.exit.i.i ]
  %242 = add nsw i64 %i.1.i.i, 1
  %243 = icmp slt i64 %242, %223
  br i1 %243, label %for.body.i.i, label %Lexer_string_token.exit

if.entry.i84.i:                                   ; preds = %for.body.i.i
  %244 = add nuw i64 %i.0.i.i1235, 3
  %245 = icmp slt i64 %244, %223
  br i1 %245, label %if.entry3.i.i, label %ifend5.i.i

ifend.i.i1023:                                    ; preds = %ifend27.i.i.i, %get_escape_char.exit.i.i.fold.split, %get_escape_char.exit.i.i.fold.split1176, %get_escape_char.exit.i.i.fold.split1177, %get_escape_char.exit.i.i.fold.split1178, %get_escape_char.exit.i.i.fold.split1179, %get_escape_char.exit.i.i.fold.split1180, %get_escape_char.exit.i.i.fold.split1181, %get_escape_char.exit.i.i.fold.split1182, %get_escape_char.exit.i.i.fold.split1183, %ifend5.i.i, %for.body.i.i
  %char.0.i.i = phi i8 [ %239, %for.body.i.i ], [ 7, %ifend5.i.i ], [ %264, %ifend27.i.i.i ], [ 8, %get_escape_char.exit.i.i.fold.split ], [ 9, %get_escape_char.exit.i.i.fold.split1176 ], [ 12, %get_escape_char.exit.i.i.fold.split1177 ], [ 10, %get_escape_char.exit.i.i.fold.split1178 ], [ 13, %get_escape_char.exit.i.i.fold.split1179 ], [ 11, %get_escape_char.exit.i.i.fold.split1180 ], [ 0, %get_escape_char.exit.i.i.fold.split1181 ], [ %264, %get_escape_char.exit.i.i.fold.split1182 ], [ %264, %get_escape_char.exit.i.i.fold.split1183 ]
  %i.2.i.i = phi i64 [ %i.0.i.i1235, %for.body.i.i ], [ %262, %ifend5.i.i ], [ %262, %ifend27.i.i.i ], [ %262, %get_escape_char.exit.i.i.fold.split ], [ %262, %get_escape_char.exit.i.i.fold.split1176 ], [ %262, %get_escape_char.exit.i.i.fold.split1177 ], [ %262, %get_escape_char.exit.i.i.fold.split1178 ], [ %262, %get_escape_char.exit.i.i.fold.split1179 ], [ %262, %get_escape_char.exit.i.i.fold.split1180 ], [ %262, %get_escape_char.exit.i.i.fold.split1181 ], [ %262, %get_escape_char.exit.i.i.fold.split1182 ], [ %262, %get_escape_char.exit.i.i.fold.split1183 ]
  %246 = add nuw i64 %237, 1
  %247 = load i64, ptr %memberidx.i.i83.i, align 4
  %248 = icmp slt i64 %247, %246
  %249 = load ptr, ptr %234, align 8
  br i1 %248, label %if.entry.i.i.i.i, label %String_append_byte.exit.i.i

if.entry.i.i.i.i:                                 ; preds = %ifend.i.i1023
  %250 = tail call ptr @realloc(ptr %249, i64 %246)
  store ptr %250, ptr %234, align 8
  store i64 %246, ptr %memberidx.i.i83.i, align 4
  %.pre1263 = load i64, ptr %memberidx1.i.i.i.i1020, align 4
  br label %String_append_byte.exit.i.i

String_append_byte.exit.i.i:                      ; preds = %ifend.i.i1023, %if.entry.i.i.i.i
  %251 = phi ptr [ %250, %if.entry.i.i.i.i ], [ %249, %ifend.i.i1023 ]
  %252 = phi i64 [ %.pre1263, %if.entry.i.i.i.i ], [ %237, %ifend.i.i1023 ]
  %253 = getelementptr inbounds i8, ptr %251, i64 %252
  store i8 %char.0.i.i, ptr %253, align 1
  %254 = load i64, ptr %memberidx1.i.i.i.i1020, align 4
  %255 = add nuw i64 %254, 1
  store i64 %255, ptr %memberidx1.i.i.i.i1020, align 4
  br label %for.incr.i.i

if.entry3.i.i:                                    ; preds = %if.entry.i84.i
  %256 = getelementptr i8, ptr %236, i64 %i.0.i.i1235
  %257 = tail call i64 @memcmp(ptr %256, ptr nonnull @58, i64 3)
  %258 = icmp eq i64 %257, 0
  %259 = tail call i64 @memcmp(ptr %256, ptr nonnull @59, i64 3)
  %260 = icmp eq i64 %259, 0
  %261 = or i1 %258, %260
  br i1 %261, label %if.entry6.i.i, label %ifend8.i.i

ifend5.i.i:                                       ; preds = %if.entry10.i.i, %ifend8.i.i, %if.entry.i84.i
  %262 = add nsw i64 %i.0.i.i1235, 1
  %263 = getelementptr inbounds i8, ptr %222, i64 %262
  %264 = load i8, ptr %263, align 1
  switch i8 %264, label %ifend27.i.i.i [
    i8 97, label %ifend.i.i1023
    i8 98, label %get_escape_char.exit.i.i.fold.split
    i8 116, label %get_escape_char.exit.i.i.fold.split1176
    i8 102, label %get_escape_char.exit.i.i.fold.split1177
    i8 110, label %get_escape_char.exit.i.i.fold.split1178
    i8 114, label %get_escape_char.exit.i.i.fold.split1179
    i8 118, label %get_escape_char.exit.i.i.fold.split1180
    i8 48, label %get_escape_char.exit.i.i.fold.split1181
    i8 39, label %get_escape_char.exit.i.i.fold.split1182
    i8 34, label %get_escape_char.exit.i.i.fold.split1183
  ]

ifend27.i.i.i:                                    ; preds = %ifend5.i.i
  br label %ifend.i.i1023

get_escape_char.exit.i.i.fold.split:              ; preds = %ifend5.i.i
  br label %ifend.i.i1023

get_escape_char.exit.i.i.fold.split1176:          ; preds = %ifend5.i.i
  br label %ifend.i.i1023

get_escape_char.exit.i.i.fold.split1177:          ; preds = %ifend5.i.i
  br label %ifend.i.i1023

get_escape_char.exit.i.i.fold.split1178:          ; preds = %ifend5.i.i
  br label %ifend.i.i1023

get_escape_char.exit.i.i.fold.split1179:          ; preds = %ifend5.i.i
  br label %ifend.i.i1023

get_escape_char.exit.i.i.fold.split1180:          ; preds = %ifend5.i.i
  br label %ifend.i.i1023

get_escape_char.exit.i.i.fold.split1181:          ; preds = %ifend5.i.i
  br label %ifend.i.i1023

get_escape_char.exit.i.i.fold.split1182:          ; preds = %ifend5.i.i
  br label %ifend.i.i1023

get_escape_char.exit.i.i.fold.split1183:          ; preds = %ifend5.i.i
  br label %ifend.i.i1023

if.entry6.i.i:                                    ; preds = %if.entry3.i.i
  %265 = tail call ptr @malloc(i32 1)
  store i8 27, ptr %265, align 8
  %266 = tail call ptr @malloc(i32 24)
  store ptr %265, ptr %266, align 8
  %memberidx1.i.i42.i.i = getelementptr inbounds %String, ptr %266, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i42.i.i, align 4
  %memberidx2.i.i43.i.i = getelementptr inbounds %String, ptr %266, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i43.i.i, align 4
  %267 = add nuw i64 %237, 1
  %268 = load i64, ptr %memberidx.i.i83.i, align 4
  %269 = icmp slt i64 %268, %267
  %270 = load ptr, ptr %234, align 8
  br i1 %269, label %if.entry.i.i.i47.i.i, label %String___adda__.exit48.i.i

if.entry.i.i.i47.i.i:                             ; preds = %if.entry6.i.i
  %271 = tail call ptr @realloc(ptr %270, i64 %267)
  store ptr %271, ptr %234, align 8
  store i64 %267, ptr %memberidx.i.i83.i, align 4
  %.pre1268 = load i64, ptr %memberidx1.i.i.i.i1020, align 4
  br label %String___adda__.exit48.i.i

String___adda__.exit48.i.i:                       ; preds = %if.entry6.i.i, %if.entry.i.i.i47.i.i
  %272 = phi i64 [ %.pre1268, %if.entry.i.i.i47.i.i ], [ %237, %if.entry6.i.i ]
  %273 = phi ptr [ %271, %if.entry.i.i.i47.i.i ], [ %270, %if.entry6.i.i ]
  %274 = getelementptr inbounds i8, ptr %273, i64 %272
  %275 = load i8, ptr %265, align 8
  store i8 %275, ptr %274, align 2147483648
  %276 = load i64, ptr %memberidx1.i.i.i.i1020, align 4
  %277 = add nuw i64 %276, 1
  store i64 %277, ptr %memberidx1.i.i.i.i1020, align 4
  br label %for.incr.i.i

ifend8.i.i:                                       ; preds = %if.entry3.i.i
  %278 = add nuw i64 %i.0.i.i1235, 6
  %279 = icmp slt i64 %278, %223
  br i1 %279, label %if.entry10.i.i, label %ifend5.i.i

if.entry10.i.i:                                   ; preds = %ifend8.i.i
  %280 = tail call i64 @memcmp(ptr %256, ptr nonnull @60, i64 5)
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %if.entry13.i.i, label %ifend5.i.i

if.entry13.i.i:                                   ; preds = %if.entry10.i.i
  %282 = tail call ptr @malloc(i32 1)
  store i8 27, ptr %282, align 8
  %283 = tail call ptr @malloc(i32 24)
  store ptr %282, ptr %283, align 8
  %memberidx1.i.i40.i.i = getelementptr inbounds %String, ptr %283, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i40.i.i, align 4
  %memberidx2.i.i41.i.i = getelementptr inbounds %String, ptr %283, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i41.i.i, align 4
  %284 = add nuw i64 %237, 1
  %285 = load i64, ptr %memberidx.i.i83.i, align 4
  %286 = icmp slt i64 %285, %284
  %287 = load ptr, ptr %234, align 8
  br i1 %286, label %if.entry.i.i.i.i.i, label %String___adda__.exit.i.i

if.entry.i.i.i.i.i:                               ; preds = %if.entry13.i.i
  %288 = tail call ptr @realloc(ptr %287, i64 %284)
  store ptr %288, ptr %234, align 8
  store i64 %284, ptr %memberidx.i.i83.i, align 4
  %.pre1266 = load i64, ptr %memberidx1.i.i.i.i1020, align 4
  br label %String___adda__.exit.i.i

String___adda__.exit.i.i:                         ; preds = %if.entry13.i.i, %if.entry.i.i.i.i.i
  %289 = phi i64 [ %.pre1266, %if.entry.i.i.i.i.i ], [ %237, %if.entry13.i.i ]
  %290 = phi ptr [ %288, %if.entry.i.i.i.i.i ], [ %287, %if.entry13.i.i ]
  %291 = getelementptr inbounds i8, ptr %290, i64 %289
  %292 = load i8, ptr %282, align 8
  store i8 %292, ptr %291, align 2147483648
  %293 = load i64, ptr %memberidx1.i.i.i.i1020, align 4
  %294 = add nuw i64 %293, 1
  store i64 %294, ptr %memberidx1.i.i.i.i1020, align 4
  %295 = add nuw i64 %i.0.i.i1235, 5
  br label %for.incr.i.i

ifend.i1029:                                      ; preds = %ifend.i1029.lr.ph, %Array_Array_Token_____sl__.exit.i
  %296 = phi i8 [ %218, %ifend.i1029.lr.ph ], [ %425, %Array_Array_Token_____sl__.exit.i ]
  %escape_next.0.i1236 = phi i1 [ %escape_next.0.i.ph, %ifend.i1029.lr.ph ], [ false, %Array_Array_Token_____sl__.exit.i ]
  %297 = icmp ne i8 %296, 36
  %298 = or i1 %escape_next.0.i1236, %297
  br i1 %298, label %ifend8.i1032, label %if.entry6.i1031

if.entry6.i1031:                                  ; preds = %ifend.i1029
  %299 = load i64, ptr %memberidx.i69.i, align 4
  %300 = add i64 %299, 1
  %301 = load i64, ptr %memberidx1.i70.i, align 4
  %302 = icmp slt i64 %301, %300
  %.pre1245 = load ptr, ptr %197, align 8
  br i1 %302, label %while.entry.i.i.i, label %Array_uint____sl__.exit.i

while.entry.i.i.i:                                ; preds = %if.entry6.i1031, %while.entry.i.i.i
  %303 = phi ptr [ %307, %while.entry.i.i.i ], [ %.pre1245, %if.entry6.i1031 ]
  %304 = phi i64 [ %308, %while.entry.i.i.i ], [ %301, %if.entry6.i1031 ]
  %305 = shl nuw i64 %304, 1
  store i64 %305, ptr %memberidx1.i70.i, align 4
  %306 = shl i64 %304, 4
  %307 = tail call ptr @realloc(ptr %303, i64 %306)
  store ptr %307, ptr %197, align 8
  %308 = load i64, ptr %memberidx1.i70.i, align 4
  %309 = icmp slt i64 %308, %300
  br i1 %309, label %while.entry.i.i.i, label %Array_uint____sl__.exit.i.loopexit

Array_uint____sl__.exit.i.loopexit:               ; preds = %while.entry.i.i.i
  %.pre1246 = load i64, ptr %memberidx.i69.i, align 4
  %.pre1269 = add nsw i64 %.pre1246, 1
  br label %Array_uint____sl__.exit.i

Array_uint____sl__.exit.i:                        ; preds = %if.entry6.i1031, %Array_uint____sl__.exit.i.loopexit
  %.pre-phi = phi i64 [ %.pre1269, %Array_uint____sl__.exit.i.loopexit ], [ %300, %if.entry6.i1031 ]
  %310 = phi ptr [ %307, %Array_uint____sl__.exit.i.loopexit ], [ %.pre1245, %if.entry6.i1031 ]
  %311 = phi i64 [ %.pre1246, %Array_uint____sl__.exit.i.loopexit ], [ %299, %if.entry6.i1031 ]
  store i64 %.pre-phi, ptr %memberidx.i69.i, align 4
  %312 = getelementptr inbounds i64, ptr %310, i64 %311
  store i64 %221, ptr %312, align 4
  %313 = load i64, ptr %memberidx.i.i.i994, align 4
  %314 = load ptr, ptr %memberidx1.i.i.i995, align 8
  %memberidx2.i.i93.i = getelementptr inbounds %String, ptr %314, i64 0, i32 1
  %315 = load i64, ptr %memberidx2.i.i93.i, align 4
  %.not1162 = icmp slt i64 %313, %315
  br i1 %.not1162, label %end.i98.i, label %end.i98.i.thread

end.i98.i.thread:                                 ; preds = %Array_uint____sl__.exit.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit107.i

end.i98.i:                                        ; preds = %Array_uint____sl__.exit.i
  %316 = add nsw i64 %313, 1
  store i64 %316, ptr %memberidx.i.i.i994, align 4
  %317 = load ptr, ptr %314, align 8
  %318 = getelementptr inbounds i8, ptr %317, i64 %316
  %319 = load i8, ptr %318, align 1
  store i8 %319, ptr %0, align 1
  switch i8 %319, label %if.entry9.i106.i [
    i8 10, label %if.entry.i101.i
    i8 0, label %Lexer_advance.exit107.i
  ]

if.entry.i101.i:                                  ; preds = %end.i98.i
  store i64 0, ptr %memberidx5.i99.i, align 4
  %320 = load i64, ptr %memberidx6.i100.i, align 4
  %321 = add nsw i64 %320, 1
  store i64 %321, ptr %memberidx6.i100.i, align 4
  br label %Lexer_advance.exit107.i

if.entry9.i106.i:                                 ; preds = %end.i98.i
  %322 = load i64, ptr %memberidx5.i99.i, align 4
  %323 = add nsw i64 %322, 1
  store i64 %323, ptr %memberidx5.i99.i, align 4
  br label %Lexer_advance.exit107.i

Lexer_advance.exit107.i:                          ; preds = %end.i98.i.thread, %end.i98.i, %if.entry9.i106.i, %if.entry.i101.i
  %324 = tail call ptr @malloc(i32 24)
  %memberidx.i108.i = getelementptr inbounds %Array_Token_, ptr %324, i64 0, i32 1
  store i64 0, ptr %memberidx.i108.i, align 4
  %memberidx1.i109.i = getelementptr inbounds %Array_Token_, ptr %324, i64 0, i32 2
  store i64 8, ptr %memberidx1.i109.i, align 4
  %325 = tail call ptr @malloc(i32 64)
  store ptr %325, ptr %324, align 8
  store i64 0, ptr %memberidx.i108.i, align 4
  %326 = load i8, ptr %0, align 1
  %327 = icmp eq i8 %326, 40
  br i1 %327, label %if.entry12.i, label %else13.i

ifend8.i1032:                                     ; preds = %ifend.i1029
  %328 = add nuw nsw i64 %length.0.i1012.ph, 1
  %329 = icmp eq i8 %296, 92
  %330 = add nuw i64 %217, 1
  %331 = icmp slt i64 %216, %330
  br i1 %331, label %if.entry.i.i.i, label %String_append_byte.exit.i

if.entry.i.i.i:                                   ; preds = %ifend8.i1032
  %332 = tail call ptr @realloc(ptr %215, i64 %330)
  store ptr %332, ptr %211, align 8
  store i64 %330, ptr %memberidx.i74.i, align 4
  br label %String_append_byte.exit.i

String_append_byte.exit.i:                        ; preds = %if.entry.i.i.i, %ifend8.i1032
  %333 = phi ptr [ %332, %if.entry.i.i.i ], [ %215, %ifend8.i1032 ]
  %334 = phi i64 [ %330, %if.entry.i.i.i ], [ %216, %ifend8.i1032 ]
  %335 = getelementptr inbounds i8, ptr %333, i64 %217
  store i8 %296, ptr %335, align 1
  store i64 %330, ptr %memberidx1.i.i72.i, align 4
  %336 = load i64, ptr %memberidx.i.i.i994, align 4
  %337 = load ptr, ptr %memberidx1.i.i.i995, align 8
  %memberidx2.i.i114.i = getelementptr inbounds %String, ptr %337, i64 0, i32 1
  %338 = load i64, ptr %memberidx2.i.i114.i, align 4
  %.not1167 = icmp slt i64 %336, %338
  br i1 %.not1167, label %end.i119.i, label %end.i119.i.thread

end.i119.i.thread:                                ; preds = %String_append_byte.exit.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit128.i

end.i119.i:                                       ; preds = %String_append_byte.exit.i
  %339 = add nsw i64 %336, 1
  store i64 %339, ptr %memberidx.i.i.i994, align 4
  %340 = load ptr, ptr %337, align 8
  %341 = getelementptr inbounds i8, ptr %340, i64 %339
  %342 = load i8, ptr %341, align 1
  store i8 %342, ptr %0, align 1
  switch i8 %342, label %if.entry9.i127.i [
    i8 10, label %if.entry.i122.i
    i8 0, label %Lexer_advance.exit128.i
  ]

if.entry.i122.i:                                  ; preds = %end.i119.i
  store i64 0, ptr %memberidx5.i99.i, align 4
  %343 = load i64, ptr %memberidx6.i100.i, align 4
  %344 = add nsw i64 %343, 1
  store i64 %344, ptr %memberidx6.i100.i, align 4
  br label %Lexer_advance.exit128.i

if.entry9.i127.i:                                 ; preds = %end.i119.i
  %345 = load i64, ptr %memberidx5.i99.i, align 4
  %346 = add nsw i64 %345, 1
  store i64 %346, ptr %memberidx5.i99.i, align 4
  br label %Lexer_advance.exit128.i

Lexer_advance.exit128.i:                          ; preds = %end.i119.i.thread, %end.i119.i, %if.entry9.i127.i, %if.entry.i122.i
  %347 = phi i64 [ %336, %end.i119.i.thread ], [ %339, %end.i119.i ], [ %339, %if.entry9.i127.i ], [ %339, %if.entry.i122.i ]
  %348 = phi i8 [ 0, %end.i119.i.thread ], [ %342, %end.i119.i ], [ %342, %if.entry9.i127.i ], [ 10, %if.entry.i122.i ]
  %349 = load i64, ptr %memberidx2.i.i114.i, align 4
  %.not1168 = icmp slt i64 %347, %349
  br i1 %.not1168, label %while.entry.i1013.outer, label %while.end.i1022

if.entry12.i:                                     ; preds = %Lexer_advance.exit107.i
  %350 = load i64, ptr %memberidx.i.i.i994, align 4
  %351 = load ptr, ptr %memberidx1.i.i.i995, align 8
  %memberidx2.i.i134.i = getelementptr inbounds %String, ptr %351, i64 0, i32 1
  %352 = load i64, ptr %memberidx2.i.i134.i, align 4
  %.not1164 = icmp slt i64 %350, %352
  br i1 %.not1164, label %end.i139.i, label %end.i139.i.thread

end.i139.i.thread:                                ; preds = %if.entry12.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit148.i

end.i139.i:                                       ; preds = %if.entry12.i
  %353 = add nsw i64 %350, 1
  store i64 %353, ptr %memberidx.i.i.i994, align 4
  %354 = load ptr, ptr %351, align 8
  %355 = getelementptr inbounds i8, ptr %354, i64 %353
  %356 = load i8, ptr %355, align 1
  store i8 %356, ptr %0, align 1
  switch i8 %356, label %if.entry9.i147.i [
    i8 10, label %if.entry.i142.i
    i8 0, label %Lexer_advance.exit148.i
  ]

if.entry.i142.i:                                  ; preds = %end.i139.i
  store i64 0, ptr %memberidx5.i99.i, align 4
  %357 = load i64, ptr %memberidx6.i100.i, align 4
  %358 = add nsw i64 %357, 1
  store i64 %358, ptr %memberidx6.i100.i, align 4
  br label %Lexer_advance.exit148.i

if.entry9.i147.i:                                 ; preds = %end.i139.i
  %359 = load i64, ptr %memberidx5.i99.i, align 4
  %360 = add nsw i64 %359, 1
  store i64 %360, ptr %memberidx5.i99.i, align 4
  br label %Lexer_advance.exit148.i

Lexer_advance.exit148.i:                          ; preds = %end.i139.i.thread, %end.i139.i, %if.entry9.i147.i, %if.entry.i142.i
  %361 = phi i8 [ 0, %end.i139.i.thread ], [ %356, %end.i139.i ], [ %356, %if.entry9.i147.i ], [ 10, %if.entry.i142.i ]
  %362 = phi i64 [ %350, %end.i139.i.thread ], [ %353, %end.i139.i ], [ %353, %if.entry9.i147.i ], [ %353, %if.entry.i142.i ]
  %363 = icmp eq i8 %361, 41
  %364 = load i64, ptr %memberidx2.i.i134.i, align 4
  %365 = icmp sge i64 %362, %364
  %366 = or i1 %363, %365
  br i1 %366, label %ifend14.i, label %while.entry15.i

else13.i:                                         ; preds = %Lexer_advance.exit107.i
  %367 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %368 = load i64, ptr %memberidx.i108.i, align 4
  %369 = add i64 %368, 1
  %370 = load i64, ptr %memberidx1.i109.i, align 4
  %371 = icmp slt i64 %370, %369
  %.pre1248 = load ptr, ptr %324, align 8
  br i1 %371, label %while.entry.i.i154.i, label %Array_Token____sl__.exit.i

while.entry.i.i154.i:                             ; preds = %else13.i, %while.entry.i.i154.i
  %372 = phi ptr [ %376, %while.entry.i.i154.i ], [ %.pre1248, %else13.i ]
  %373 = phi i64 [ %377, %while.entry.i.i154.i ], [ %370, %else13.i ]
  %374 = shl nuw i64 %373, 1
  store i64 %374, ptr %memberidx1.i109.i, align 4
  %375 = shl i64 %373, 4
  %376 = tail call ptr @realloc(ptr %372, i64 %375)
  store ptr %376, ptr %324, align 8
  %377 = load i64, ptr %memberidx1.i109.i, align 4
  %378 = icmp slt i64 %377, %369
  br i1 %378, label %while.entry.i.i154.i, label %Array_Token____sl__.exit.i.loopexit

Array_Token____sl__.exit.i.loopexit:              ; preds = %while.entry.i.i154.i
  %.pre1249 = load i64, ptr %memberidx.i108.i, align 4
  %.pre1276 = add nsw i64 %.pre1249, 1
  br label %Array_Token____sl__.exit.i

Array_Token____sl__.exit.i:                       ; preds = %else13.i, %Array_Token____sl__.exit.i.loopexit
  %.pre-phi1277 = phi i64 [ %.pre1276, %Array_Token____sl__.exit.i.loopexit ], [ %369, %else13.i ]
  %379 = phi ptr [ %376, %Array_Token____sl__.exit.i.loopexit ], [ %.pre1248, %else13.i ]
  %380 = phi i64 [ %.pre1249, %Array_Token____sl__.exit.i.loopexit ], [ %368, %else13.i ]
  store i64 %.pre-phi1277, ptr %memberidx.i108.i, align 4
  %381 = getelementptr inbounds ptr, ptr %379, i64 %380
  store ptr %367, ptr %381, align 8
  %.pre1254 = load i64, ptr %memberidx.i.i.i994, align 4
  %.pre1255 = load ptr, ptr %memberidx1.i.i.i995, align 8
  %memberidx2.i.i157.i.phi.trans.insert = getelementptr inbounds %String, ptr %.pre1255, i64 0, i32 1
  %.pre1256 = load i64, ptr %memberidx2.i.i157.i.phi.trans.insert, align 4
  br label %ifend14.i

ifend14.i:                                        ; preds = %Lexer_advance.exit203.i, %Array_Token____sl__.exit.i, %Lexer_advance.exit148.i
  %382 = phi i64 [ %.pre1256, %Array_Token____sl__.exit.i ], [ %364, %Lexer_advance.exit148.i ], [ %462, %Lexer_advance.exit203.i ]
  %383 = phi ptr [ %.pre1255, %Array_Token____sl__.exit.i ], [ %351, %Lexer_advance.exit148.i ], [ %447, %Lexer_advance.exit203.i ]
  %384 = phi i64 [ %.pre1254, %Array_Token____sl__.exit.i ], [ %362, %Lexer_advance.exit148.i ], [ %457, %Lexer_advance.exit203.i ]
  %.not1163 = icmp slt i64 %384, %382
  br i1 %.not1163, label %end.i162.i, label %end.i162.i.thread

end.i162.i.thread:                                ; preds = %ifend14.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit171.i

end.i162.i:                                       ; preds = %ifend14.i
  %385 = add nsw i64 %384, 1
  store i64 %385, ptr %memberidx.i.i.i994, align 4
  %386 = load ptr, ptr %383, align 8
  %387 = getelementptr inbounds i8, ptr %386, i64 %385
  %388 = load i8, ptr %387, align 1
  store i8 %388, ptr %0, align 1
  switch i8 %388, label %if.entry9.i170.i [
    i8 10, label %if.entry.i165.i
    i8 0, label %Lexer_advance.exit171.i
  ]

if.entry.i165.i:                                  ; preds = %end.i162.i
  store i64 0, ptr %memberidx5.i99.i, align 4
  %389 = load i64, ptr %memberidx6.i100.i, align 4
  %390 = add nsw i64 %389, 1
  store i64 %390, ptr %memberidx6.i100.i, align 4
  br label %Lexer_advance.exit171.i

if.entry9.i170.i:                                 ; preds = %end.i162.i
  %391 = load i64, ptr %memberidx5.i99.i, align 4
  %392 = add nsw i64 %391, 1
  store i64 %392, ptr %memberidx5.i99.i, align 4
  br label %Lexer_advance.exit171.i

Lexer_advance.exit171.i:                          ; preds = %end.i162.i.thread, %end.i162.i, %if.entry9.i170.i, %if.entry.i165.i
  %393 = tail call ptr @malloc(i32 16)
  %394 = tail call ptr @malloc(i32 32)
  %395 = load i64, ptr %memberidx5.i99.i, align 4
  %396 = load i64, ptr %memberidx6.i100.i, align 4
  %memberidx2.i173.i = getelementptr inbounds %FloRange, ptr %394, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %394, i8 0, i64 16, i1 false)
  store i64 %395, ptr %memberidx2.i173.i, align 4
  %memberidx3.i174.i = getelementptr inbounds %FloRange, ptr %394, i64 0, i32 3
  store i64 %396, ptr %memberidx3.i174.i, align 4
  store i64 46, ptr %393, align 4
  %memberidx1.i175.i = getelementptr inbounds %Token, ptr %393, i64 0, i32 1
  store ptr %394, ptr %memberidx1.i175.i, align 8
  %397 = load i64, ptr %memberidx.i108.i, align 4
  %398 = add i64 %397, 1
  %399 = load i64, ptr %memberidx1.i109.i, align 4
  %400 = icmp slt i64 %399, %398
  %.pre1257 = load ptr, ptr %324, align 8
  br i1 %400, label %while.entry.i.i178.i, label %Array_Token____sl__.exit179.i

while.entry.i.i178.i:                             ; preds = %Lexer_advance.exit171.i, %while.entry.i.i178.i
  %401 = phi ptr [ %405, %while.entry.i.i178.i ], [ %.pre1257, %Lexer_advance.exit171.i ]
  %402 = phi i64 [ %406, %while.entry.i.i178.i ], [ %399, %Lexer_advance.exit171.i ]
  %403 = shl nuw i64 %402, 1
  store i64 %403, ptr %memberidx1.i109.i, align 4
  %404 = shl i64 %402, 4
  %405 = tail call ptr @realloc(ptr %401, i64 %404)
  store ptr %405, ptr %324, align 8
  %406 = load i64, ptr %memberidx1.i109.i, align 4
  %407 = icmp slt i64 %406, %398
  br i1 %407, label %while.entry.i.i178.i, label %Array_Token____sl__.exit179.i.loopexit

Array_Token____sl__.exit179.i.loopexit:           ; preds = %while.entry.i.i178.i
  %.pre1258 = load i64, ptr %memberidx.i108.i, align 4
  %.pre1270 = add nsw i64 %.pre1258, 1
  br label %Array_Token____sl__.exit179.i

Array_Token____sl__.exit179.i:                    ; preds = %Lexer_advance.exit171.i, %Array_Token____sl__.exit179.i.loopexit
  %.pre-phi1271 = phi i64 [ %.pre1270, %Array_Token____sl__.exit179.i.loopexit ], [ %398, %Lexer_advance.exit171.i ]
  %408 = phi ptr [ %405, %Array_Token____sl__.exit179.i.loopexit ], [ %.pre1257, %Lexer_advance.exit171.i ]
  %409 = phi i64 [ %.pre1258, %Array_Token____sl__.exit179.i.loopexit ], [ %397, %Lexer_advance.exit171.i ]
  store i64 %.pre-phi1271, ptr %memberidx.i108.i, align 4
  %410 = getelementptr inbounds ptr, ptr %408, i64 %409
  store ptr %393, ptr %410, align 8
  %411 = load i64, ptr %memberidx.i.i990, align 4
  %412 = add i64 %411, 1
  %413 = load i64, ptr %memberidx1.i.i991, align 4
  %414 = icmp slt i64 %413, %412
  %.pre1260 = load ptr, ptr %195, align 8
  br i1 %414, label %while.entry.i.i182.i, label %Array_Array_Token_____sl__.exit.i

while.entry.i.i182.i:                             ; preds = %Array_Token____sl__.exit179.i, %while.entry.i.i182.i
  %415 = phi ptr [ %419, %while.entry.i.i182.i ], [ %.pre1260, %Array_Token____sl__.exit179.i ]
  %416 = phi i64 [ %420, %while.entry.i.i182.i ], [ %413, %Array_Token____sl__.exit179.i ]
  %417 = shl nuw i64 %416, 1
  store i64 %417, ptr %memberidx1.i.i991, align 4
  %418 = shl i64 %416, 4
  %419 = tail call ptr @realloc(ptr %415, i64 %418)
  store ptr %419, ptr %195, align 8
  %420 = load i64, ptr %memberidx1.i.i991, align 4
  %421 = icmp slt i64 %420, %412
  br i1 %421, label %while.entry.i.i182.i, label %Array_Array_Token_____sl__.exit.i.loopexit

Array_Array_Token_____sl__.exit.i.loopexit:       ; preds = %while.entry.i.i182.i
  %.pre1261 = load i64, ptr %memberidx.i.i990, align 4
  %.pre1272 = add nsw i64 %.pre1261, 1
  br label %Array_Array_Token_____sl__.exit.i

Array_Array_Token_____sl__.exit.i:                ; preds = %Array_Token____sl__.exit179.i, %Array_Array_Token_____sl__.exit.i.loopexit
  %.pre-phi1273 = phi i64 [ %.pre1272, %Array_Array_Token_____sl__.exit.i.loopexit ], [ %412, %Array_Token____sl__.exit179.i ]
  %422 = phi ptr [ %419, %Array_Array_Token_____sl__.exit.i.loopexit ], [ %.pre1260, %Array_Token____sl__.exit179.i ]
  %423 = phi i64 [ %.pre1261, %Array_Array_Token_____sl__.exit.i.loopexit ], [ %411, %Array_Token____sl__.exit179.i ]
  store i64 %.pre-phi1273, ptr %memberidx.i.i990, align 4
  %424 = getelementptr inbounds ptr, ptr %422, i64 %423
  store ptr %324, ptr %424, align 8
  %425 = load i8, ptr %0, align 1
  %.not = icmp eq i8 %425, 34
  br i1 %.not, label %while.end.i1022, label %ifend.i1029

while.entry15.i:                                  ; preds = %Lexer_advance.exit148.i, %Lexer_advance.exit203.i
  %426 = phi i8 [ %458, %Lexer_advance.exit203.i ], [ %361, %Lexer_advance.exit148.i ]
  %active_open_pars.0.i = phi i64 [ %active_open_pars.2.i, %Lexer_advance.exit203.i ], [ 0, %Lexer_advance.exit148.i ]
  %427 = icmp eq i8 %426, 40
  %428 = zext i1 %427 to i64
  %spec.select = add nsw i64 %active_open_pars.0.i, %428
  %429 = icmp eq i8 %426, 41
  %430 = sext i1 %429 to i64
  %active_open_pars.2.i = add nsw i64 %spec.select, %430
  %431 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  %432 = load i64, ptr %memberidx.i108.i, align 4
  %433 = add i64 %432, 1
  %434 = load i64, ptr %memberidx1.i109.i, align 4
  %435 = icmp slt i64 %434, %433
  %.pre1251 = load ptr, ptr %324, align 8
  br i1 %435, label %while.entry.i.i185.i, label %Array_Token____sl__.exit186.i

while.entry.i.i185.i:                             ; preds = %while.entry15.i, %while.entry.i.i185.i
  %436 = phi ptr [ %440, %while.entry.i.i185.i ], [ %.pre1251, %while.entry15.i ]
  %437 = phi i64 [ %441, %while.entry.i.i185.i ], [ %434, %while.entry15.i ]
  %438 = shl nuw i64 %437, 1
  store i64 %438, ptr %memberidx1.i109.i, align 4
  %439 = shl i64 %437, 4
  %440 = tail call ptr @realloc(ptr %436, i64 %439)
  store ptr %440, ptr %324, align 8
  %441 = load i64, ptr %memberidx1.i109.i, align 4
  %442 = icmp slt i64 %441, %433
  br i1 %442, label %while.entry.i.i185.i, label %Array_Token____sl__.exit186.i.loopexit

Array_Token____sl__.exit186.i.loopexit:           ; preds = %while.entry.i.i185.i
  %.pre1252 = load i64, ptr %memberidx.i108.i, align 4
  %.pre1274 = add nsw i64 %.pre1252, 1
  br label %Array_Token____sl__.exit186.i

Array_Token____sl__.exit186.i:                    ; preds = %while.entry15.i, %Array_Token____sl__.exit186.i.loopexit
  %.pre-phi1275 = phi i64 [ %.pre1274, %Array_Token____sl__.exit186.i.loopexit ], [ %433, %while.entry15.i ]
  %443 = phi ptr [ %440, %Array_Token____sl__.exit186.i.loopexit ], [ %.pre1251, %while.entry15.i ]
  %444 = phi i64 [ %.pre1252, %Array_Token____sl__.exit186.i.loopexit ], [ %432, %while.entry15.i ]
  store i64 %.pre-phi1275, ptr %memberidx.i108.i, align 4
  %445 = getelementptr inbounds ptr, ptr %443, i64 %444
  store ptr %431, ptr %445, align 8
  %446 = load i64, ptr %memberidx.i.i.i994, align 4
  %447 = load ptr, ptr %memberidx1.i.i.i995, align 8
  %memberidx2.i.i189.i = getelementptr inbounds %String, ptr %447, i64 0, i32 1
  %448 = load i64, ptr %memberidx2.i.i189.i, align 4
  %.not1165 = icmp slt i64 %446, %448
  br i1 %.not1165, label %end.i194.i, label %end.i194.i.thread

end.i194.i.thread:                                ; preds = %Array_Token____sl__.exit186.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit203.i

end.i194.i:                                       ; preds = %Array_Token____sl__.exit186.i
  %449 = add nsw i64 %446, 1
  store i64 %449, ptr %memberidx.i.i.i994, align 4
  %450 = load ptr, ptr %447, align 8
  %451 = getelementptr inbounds i8, ptr %450, i64 %449
  %452 = load i8, ptr %451, align 1
  store i8 %452, ptr %0, align 1
  switch i8 %452, label %if.entry9.i202.i [
    i8 10, label %if.entry.i197.i
    i8 0, label %Lexer_advance.exit203.i
  ]

if.entry.i197.i:                                  ; preds = %end.i194.i
  store i64 0, ptr %memberidx5.i99.i, align 4
  %453 = load i64, ptr %memberidx6.i100.i, align 4
  %454 = add nsw i64 %453, 1
  store i64 %454, ptr %memberidx6.i100.i, align 4
  br label %Lexer_advance.exit203.i

if.entry9.i202.i:                                 ; preds = %end.i194.i
  %455 = load i64, ptr %memberidx5.i99.i, align 4
  %456 = add nsw i64 %455, 1
  store i64 %456, ptr %memberidx5.i99.i, align 4
  br label %Lexer_advance.exit203.i

Lexer_advance.exit203.i:                          ; preds = %end.i194.i.thread, %end.i194.i, %if.entry9.i202.i, %if.entry.i197.i
  %457 = phi i64 [ %446, %end.i194.i.thread ], [ %449, %end.i194.i ], [ %449, %if.entry9.i202.i ], [ %449, %if.entry.i197.i ]
  %458 = phi i8 [ 0, %end.i194.i.thread ], [ %452, %end.i194.i ], [ %452, %if.entry9.i202.i ], [ 10, %if.entry.i197.i ]
  %459 = icmp ne i8 %458, 41
  %460 = icmp ne i64 %active_open_pars.2.i, 0
  %461 = or i1 %460, %459
  %462 = load i64, ptr %memberidx2.i.i189.i, align 4
  %.not1166 = icmp slt i64 %457, %462
  %463 = and i1 %461, %.not1166
  br i1 %463, label %while.entry15.i, label %ifend14.i

Lexer_string_token.exit:                          ; preds = %for.incr.i.i, %while.end.i1022
  %464 = tail call ptr @malloc(i32 40)
  store i64 34, ptr %464, align 4
  %memberidx1.i.i85.i = getelementptr inbounds %Token, ptr %464, i64 0, i32 1
  store ptr %224, ptr %memberidx1.i.i85.i, align 8
  %memberidx.i86.i1026 = getelementptr inbounds %StrToken, ptr %464, i64 0, i32 2
  store ptr %234, ptr %memberidx.i86.i1026, align 8
  %memberidx1.i87.i1027 = getelementptr inbounds %StrToken, ptr %464, i64 0, i32 3
  store ptr %197, ptr %memberidx1.i87.i1027, align 8
  %memberidx2.i88.i1028 = getelementptr inbounds %StrToken, ptr %464, i64 0, i32 4
  store ptr %195, ptr %memberidx2.i88.i1028, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend5
  %465 = add i8 %2, -48
  %466 = icmp ult i8 %465, 10
  br i1 %466, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend8
  %467 = icmp eq i8 %2, 48
  %memberidx.i.i181 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %468 = load i64, ptr %memberidx.i.i181, align 4
  %469 = add nsw i64 %468, 1
  %memberidx1.i.i182 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %470 = load ptr, ptr %memberidx1.i.i182, align 8
  %memberidx2.i.i183 = getelementptr inbounds %String, ptr %470, i64 0, i32 1
  %471 = load i64, ptr %memberidx2.i.i183, align 4
  %472 = icmp slt i64 %469, %471
  br i1 %472, label %Lexer_peek.exit.i186, label %Lexer_peek.exit66.i

Lexer_peek.exit.i186:                             ; preds = %if.entry9
  %473 = load ptr, ptr %470, align 8
  %474 = getelementptr inbounds i8, ptr %473, i64 %469
  %475 = load i8, ptr %474, align 1
  %phi.cmp1154 = icmp eq i8 %475, 98
  %476 = and i1 %467, %phi.cmp1154
  br i1 %476, label %if.entry.i188, label %Lexer_peek.exit49.i

if.entry.i188:                                    ; preds = %Lexer_peek.exit.i186
  %477 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 2)
  br label %common.ret

Lexer_peek.exit49.i:                              ; preds = %Lexer_peek.exit.i186
  %phi.cmp1155 = icmp eq i8 %475, 111
  %478 = and i1 %467, %phi.cmp1155
  br i1 %478, label %if.entry2.i190, label %Lexer_peek.exit57.i

if.entry2.i190:                                   ; preds = %Lexer_peek.exit49.i
  %479 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 8)
  br label %common.ret

Lexer_peek.exit57.i:                              ; preds = %Lexer_peek.exit49.i
  %phi.cmp1156 = icmp eq i8 %475, 120
  %480 = and i1 %467, %phi.cmp1156
  br i1 %480, label %if.entry6.i, label %Lexer_peek.exit66.i

if.entry6.i:                                      ; preds = %Lexer_peek.exit57.i
  %481 = tail call fastcc ptr @Lexer_base_int_token(ptr nonnull %0, i64 16)
  br label %common.ret

Lexer_peek.exit66.i:                              ; preds = %Lexer_peek.exit57.i, %if.entry9
  %common.ret.op.i64.i = phi i8 [ 0, %if.entry9 ], [ %475, %Lexer_peek.exit57.i ]
  %482 = add i8 %common.ret.op.i64.i, -48
  %483 = icmp ult i8 %482, 10
  %484 = icmp eq i8 %common.ret.op.i64.i, 46
  %485 = or i1 %484, %483
  %.not1157 = icmp slt i64 %468, %471
  %486 = and i1 %.not1157, %485
  br i1 %486, label %while.entry.i193.preheader, label %while.end.i197

while.entry.i193.preheader:                       ; preds = %Lexer_peek.exit66.i
  %memberidx5.i.i203 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i.i204 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i193

while.entry.i193:                                 ; preds = %while.entry.i193.preheader, %Lexer_peek.exit75.i
  %487 = phi i64 [ %528, %Lexer_peek.exit75.i ], [ %468, %while.entry.i193.preheader ]
  %488 = phi i8 [ %529, %Lexer_peek.exit75.i ], [ %2, %while.entry.i193.preheader ]
  %489 = phi i64 [ %531, %Lexer_peek.exit75.i ], [ %471, %while.entry.i193.preheader ]
  %length.0.i192 = phi i64 [ %519, %Lexer_peek.exit75.i ], [ 1, %while.entry.i193.preheader ]
  %is_float.0.i = phi i1 [ %spec.select1184, %Lexer_peek.exit75.i ], [ false, %while.entry.i193.preheader ]
  %next_char.0.i = phi i8 [ %common.ret.op.i73.i, %Lexer_peek.exit75.i ], [ %common.ret.op.i64.i, %while.entry.i193.preheader ]
  %490 = icmp eq i8 %next_char.0.i, 46
  %491 = add nsw i64 %487, 2
  %492 = icmp slt i64 %491, %489
  br i1 %492, label %if.entry.i93.i, label %Lexer_peek.exit94.i

if.entry.i93.i:                                   ; preds = %while.entry.i193
  %493 = load ptr, ptr %470, align 8
  %494 = getelementptr inbounds i8, ptr %493, i64 %491
  %495 = load i8, ptr %494, align 1
  br label %Lexer_peek.exit94.i

Lexer_peek.exit94.i:                              ; preds = %if.entry.i93.i, %while.entry.i193
  %common.ret.op.i92.i = phi i8 [ %495, %if.entry.i93.i ], [ 0, %while.entry.i193 ]
  %496 = add i8 %common.ret.op.i92.i, -58
  %497 = icmp ult i8 %496, -10
  %498 = or i1 %is_float.0.i, %497
  %499 = and i1 %490, %498
  br i1 %499, label %while.end.i197, label %ifend11.i

while.end.i197:                                   ; preds = %Lexer_peek.exit75.i, %Lexer_peek.exit94.i, %Lexer_peek.exit66.i
  %length.1.i194 = phi i64 [ 1, %Lexer_peek.exit66.i ], [ %519, %Lexer_peek.exit75.i ], [ %length.0.i192, %Lexer_peek.exit94.i ]
  %is_float.1.i = phi i1 [ false, %Lexer_peek.exit66.i ], [ %spec.select1184, %Lexer_peek.exit75.i ], [ %is_float.0.i, %Lexer_peek.exit94.i ]
  %500 = tail call ptr @malloc(i32 32)
  %501 = load i64, ptr %memberidx.i.i181, align 4
  %502 = sub nsw i64 %501, %length.1.i194
  %503 = add nsw i64 %502, 1
  %504 = add nsw i64 %501, 1
  %memberidx2.i86.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %505 = load i64, ptr %memberidx2.i86.i, align 4
  %506 = sub nuw i64 %505, %length.1.i194
  %memberidx3.i.i195 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %507 = load i64, ptr %memberidx3.i.i195, align 4
  store i64 %503, ptr %500, align 4
  %memberidx1.i.i87.i = getelementptr inbounds %FloRange, ptr %500, i64 0, i32 1
  store i64 %504, ptr %memberidx1.i.i87.i, align 4
  %memberidx2.i.i88.i = getelementptr inbounds %FloRange, ptr %500, i64 0, i32 2
  store i64 %506, ptr %memberidx2.i.i88.i, align 4
  %memberidx3.i.i.i196 = getelementptr inbounds %FloRange, ptr %500, i64 0, i32 3
  store i64 %507, ptr %memberidx3.i.i.i196, align 4
  %508 = load ptr, ptr %memberidx1.i.i182, align 8
  %509 = trunc i64 %length.1.i194 to i32
  %510 = tail call ptr @malloc(i32 %509)
  %511 = load ptr, ptr %508, align 8
  %512 = getelementptr inbounds i8, ptr %511, i64 %503
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %510, ptr align 2147483648 %512, i64 %length.1.i194, i1 false)
  %513 = tail call ptr @malloc(i32 24)
  store ptr %510, ptr %513, align 8
  %memberidx1.i.i80.i = getelementptr inbounds %String, ptr %513, i64 0, i32 1
  store i64 %length.1.i194, ptr %memberidx1.i.i80.i, align 4
  %memberidx2.i.i81.i = getelementptr inbounds %String, ptr %513, i64 0, i32 2
  store i64 %length.1.i194, ptr %memberidx2.i.i81.i, align 4
  %514 = tail call ptr @malloc(i32 24)
  %515 = add i32 %509, 1
  %516 = tail call ptr @malloc(i32 %515)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %516, ptr align 8 %510, i64 %length.1.i194, i1 false)
  %517 = getelementptr inbounds i8, ptr %516, i64 %length.1.i194
  store i8 0, ptr %517, align 1
  br i1 %is_float.1.i, label %true_block.i, label %false_block.i216

ifend11.i:                                        ; preds = %Lexer_peek.exit94.i
  %518 = icmp eq i8 %488, 46
  %spec.select1184 = select i1 %518, i1 true, i1 %is_float.0.i
  %519 = add nuw nsw i64 %length.0.i192, 1
  %.not1158 = icmp slt i64 %487, %489
  br i1 %.not1158, label %end.i.i202, label %end.i.i202.thread

end.i.i202.thread:                                ; preds = %ifend11.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i210

end.i.i202:                                       ; preds = %ifend11.i
  %520 = add nsw i64 %487, 1
  store i64 %520, ptr %memberidx.i.i181, align 4
  %521 = load ptr, ptr %470, align 8
  %522 = getelementptr inbounds i8, ptr %521, i64 %520
  %523 = load i8, ptr %522, align 1
  store i8 %523, ptr %0, align 1
  switch i8 %523, label %if.entry9.i.i209 [
    i8 10, label %if.entry.i79.i205
    i8 0, label %Lexer_advance.exit.i210
  ]

if.entry.i79.i205:                                ; preds = %end.i.i202
  store i64 0, ptr %memberidx5.i.i203, align 4
  %524 = load i64, ptr %memberidx6.i.i204, align 4
  %525 = add nsw i64 %524, 1
  store i64 %525, ptr %memberidx6.i.i204, align 4
  br label %Lexer_advance.exit.i210

if.entry9.i.i209:                                 ; preds = %end.i.i202
  %526 = load i64, ptr %memberidx5.i.i203, align 4
  %527 = add nsw i64 %526, 1
  store i64 %527, ptr %memberidx5.i.i203, align 4
  br label %Lexer_advance.exit.i210

Lexer_advance.exit.i210:                          ; preds = %end.i.i202.thread, %end.i.i202, %if.entry9.i.i209, %if.entry.i79.i205
  %528 = phi i64 [ %487, %end.i.i202.thread ], [ %520, %end.i.i202 ], [ %520, %if.entry9.i.i209 ], [ %520, %if.entry.i79.i205 ]
  %529 = phi i8 [ 0, %end.i.i202.thread ], [ %523, %end.i.i202 ], [ %523, %if.entry9.i.i209 ], [ 10, %if.entry.i79.i205 ]
  %530 = add nsw i64 %528, 1
  %531 = load i64, ptr %memberidx2.i.i183, align 4
  %532 = icmp slt i64 %530, %531
  br i1 %532, label %if.entry.i74.i, label %Lexer_peek.exit75.i

if.entry.i74.i:                                   ; preds = %Lexer_advance.exit.i210
  %533 = load ptr, ptr %470, align 8
  %534 = getelementptr inbounds i8, ptr %533, i64 %530
  %535 = load i8, ptr %534, align 1
  br label %Lexer_peek.exit75.i

Lexer_peek.exit75.i:                              ; preds = %if.entry.i74.i, %Lexer_advance.exit.i210
  %common.ret.op.i73.i = phi i8 [ %535, %if.entry.i74.i ], [ 0, %Lexer_advance.exit.i210 ]
  %536 = add i8 %common.ret.op.i73.i, -48
  %537 = icmp ult i8 %536, 10
  %538 = icmp eq i8 %common.ret.op.i73.i, 46
  %539 = or i1 %538, %537
  %.not1159 = icmp slt i64 %528, %531
  %540 = and i1 %.not1159, %539
  br i1 %540, label %while.entry.i193, label %while.end.i197

true_block.i:                                     ; preds = %while.end.i197
  %541 = tail call double @atof(ptr %516)
  tail call void @free(ptr %516)
  store i64 32, ptr %514, align 4
  %memberidx1.i.i58.i212 = getelementptr inbounds %Token, ptr %514, i64 0, i32 1
  store ptr %500, ptr %memberidx1.i.i58.i212, align 8
  %memberidx.i59.i = getelementptr inbounds %FloatToken, ptr %514, i64 0, i32 2
  store double %541, ptr %memberidx.i59.i, align 8
  br label %end.i218

false_block.i216:                                 ; preds = %while.end.i197
  %542 = tail call i64 @atol(ptr nocapture %516)
  tail call void @free(ptr %516)
  store i64 31, ptr %514, align 4
  %memberidx1.i.i.i214 = getelementptr inbounds %Token, ptr %514, i64 0, i32 1
  store ptr %500, ptr %memberidx1.i.i.i214, align 8
  %memberidx.i50.i215 = getelementptr inbounds %IntToken, ptr %514, i64 0, i32 2
  store i64 %542, ptr %memberidx.i50.i215, align 4
  br label %end.i218

end.i218:                                         ; preds = %false_block.i216, %true_block.i
  tail call void @free(ptr %510)
  tail call void @free(ptr nonnull %513)
  br label %common.ret

ifend11:                                          ; preds = %ifend8
  switch i8 %2, label %ifend89 [
    i8 58, label %if.entry12
    i8 59, label %if.entry15
    i8 44, label %if.entry18
    i8 43, label %if.entry21
    i8 45, label %if.entry24
    i8 42, label %if.entry27
    i8 37, label %if.entry30
    i8 94, label %if.entry33
    i8 47, label %if.entry36
    i8 40, label %if.entry42
    i8 41, label %if.entry45
    i8 123, label %if.entry48
    i8 125, label %if.entry51
    i8 91, label %if.entry54
    i8 93, label %if.entry57
    i8 13, label %if.entry60
    i8 10, label %if.entry60
    i8 39, label %if.entry63
    i8 63, label %if.entry66
    i8 38, label %if.entry69
    i8 61, label %if.entry72
    i8 33, label %if.entry75
    i8 62, label %if.entry78
    i8 60, label %if.entry81
    i8 46, label %if.entry84
    i8 0, label %if.entry87
  ]

if.entry12:                                       ; preds = %ifend11
  %543 = tail call ptr @malloc(i32 16)
  %544 = tail call ptr @malloc(i32 32)
  %memberidx.i219 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %545 = load i64, ptr %memberidx.i219, align 4
  %546 = add nsw i64 %545, 1
  %memberidx2.i220 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %547 = load i64, ptr %memberidx2.i220, align 4
  %548 = add i64 %547, -1
  %memberidx3.i221 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %549 = load i64, ptr %memberidx3.i221, align 4
  store i64 %545, ptr %544, align 4
  %memberidx1.i.i222 = getelementptr inbounds %FloRange, ptr %544, i64 0, i32 1
  store i64 %546, ptr %memberidx1.i.i222, align 4
  %memberidx2.i.i223 = getelementptr inbounds %FloRange, ptr %544, i64 0, i32 2
  store i64 %548, ptr %memberidx2.i.i223, align 4
  %memberidx3.i.i224 = getelementptr inbounds %FloRange, ptr %544, i64 0, i32 3
  store i64 %549, ptr %memberidx3.i.i224, align 4
  store i64 1, ptr %543, align 4
  %memberidx1.i225 = getelementptr inbounds %Token, ptr %543, i64 0, i32 1
  store ptr %544, ptr %memberidx1.i225, align 8
  br label %common.ret

if.entry15:                                       ; preds = %ifend11
  %550 = tail call ptr @malloc(i32 16)
  %551 = tail call ptr @malloc(i32 32)
  %memberidx.i226 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %552 = load i64, ptr %memberidx.i226, align 4
  %553 = add nsw i64 %552, 1
  %memberidx2.i227 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %554 = load i64, ptr %memberidx2.i227, align 4
  %555 = add i64 %554, -1
  %memberidx3.i228 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %556 = load i64, ptr %memberidx3.i228, align 4
  store i64 %552, ptr %551, align 4
  %memberidx1.i.i229 = getelementptr inbounds %FloRange, ptr %551, i64 0, i32 1
  store i64 %553, ptr %memberidx1.i.i229, align 4
  %memberidx2.i.i230 = getelementptr inbounds %FloRange, ptr %551, i64 0, i32 2
  store i64 %555, ptr %memberidx2.i.i230, align 4
  %memberidx3.i.i231 = getelementptr inbounds %FloRange, ptr %551, i64 0, i32 3
  store i64 %556, ptr %memberidx3.i.i231, align 4
  store i64 2, ptr %550, align 4
  %memberidx1.i232 = getelementptr inbounds %Token, ptr %550, i64 0, i32 1
  store ptr %551, ptr %memberidx1.i232, align 8
  br label %common.ret

if.entry18:                                       ; preds = %ifend11
  %557 = tail call ptr @malloc(i32 16)
  %558 = tail call ptr @malloc(i32 32)
  %memberidx.i233 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %559 = load i64, ptr %memberidx.i233, align 4
  %560 = add nsw i64 %559, 1
  %memberidx2.i234 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %561 = load i64, ptr %memberidx2.i234, align 4
  %562 = add i64 %561, -1
  %memberidx3.i235 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %563 = load i64, ptr %memberidx3.i235, align 4
  store i64 %559, ptr %558, align 4
  %memberidx1.i.i236 = getelementptr inbounds %FloRange, ptr %558, i64 0, i32 1
  store i64 %560, ptr %memberidx1.i.i236, align 4
  %memberidx2.i.i237 = getelementptr inbounds %FloRange, ptr %558, i64 0, i32 2
  store i64 %562, ptr %memberidx2.i.i237, align 4
  %memberidx3.i.i238 = getelementptr inbounds %FloRange, ptr %558, i64 0, i32 3
  store i64 %563, ptr %memberidx3.i.i238, align 4
  store i64 3, ptr %557, align 4
  %memberidx1.i239 = getelementptr inbounds %Token, ptr %557, i64 0, i32 1
  store ptr %558, ptr %memberidx1.i239, align 8
  br label %common.ret

if.entry21:                                       ; preds = %ifend11
  %memberidx.i.i240 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %564 = load i64, ptr %memberidx.i.i240, align 4
  %565 = add nsw i64 %564, 1
  %memberidx1.i.i241 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %566 = load ptr, ptr %memberidx1.i.i241, align 8
  %memberidx2.i.i242 = getelementptr inbounds %String, ptr %566, i64 0, i32 1
  %567 = load i64, ptr %memberidx2.i.i242, align 4
  %568 = icmp slt i64 %565, %567
  br i1 %568, label %if.entry.i.i243, label %ifend3.i

if.entry.i.i243:                                  ; preds = %if.entry21
  %569 = load ptr, ptr %566, align 8
  %570 = getelementptr inbounds i8, ptr %569, i64 %565
  %571 = load i8, ptr %570, align 1
  switch i8 %571, label %ifend3.i [
    i8 43, label %end.i.i251
    i8 61, label %end.i39.i267
  ]

end.i.i251:                                       ; preds = %if.entry.i.i243
  store i64 %565, ptr %memberidx.i.i240, align 4
  %572 = load ptr, ptr %566, align 8
  %573 = getelementptr inbounds i8, ptr %572, i64 %565
  %574 = load i8, ptr %573, align 1
  store i8 %574, ptr %0, align 1
  switch i8 %574, label %if.entry9.i.i257 [
    i8 10, label %if.entry.i17.i
    i8 0, label %Lexer_advance.exit.i258
  ]

if.entry.i17.i:                                   ; preds = %end.i.i251
  %memberidx5.i.i252 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i252, align 4
  %memberidx6.i.i253 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i258.sink.split

if.entry9.i.i257:                                 ; preds = %end.i.i251
  %memberidx12.i.i256 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i258.sink.split

Lexer_advance.exit.i258.sink.split:               ; preds = %if.entry.i17.i, %if.entry9.i.i257
  %memberidx12.i.i256.sink1302 = phi ptr [ %memberidx12.i.i256, %if.entry9.i.i257 ], [ %memberidx6.i.i253, %if.entry.i17.i ]
  %575 = load i64, ptr %memberidx12.i.i256.sink1302, align 4
  %576 = add nsw i64 %575, 1
  store i64 %576, ptr %memberidx12.i.i256.sink1302, align 4
  br label %Lexer_advance.exit.i258

Lexer_advance.exit.i258:                          ; preds = %Lexer_advance.exit.i258.sink.split, %end.i.i251
  %577 = tail call ptr @malloc(i32 16)
  %578 = tail call ptr @malloc(i32 32)
  %579 = load i64, ptr %memberidx.i.i240, align 4
  %580 = add nsw i64 %579, -1
  %581 = add nsw i64 %579, 1
  %memberidx2.i26.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %582 = load i64, ptr %memberidx2.i26.i, align 4
  %583 = add i64 %582, -2
  %memberidx3.i27.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %584 = load i64, ptr %memberidx3.i27.i, align 4
  store i64 %580, ptr %578, align 4
  %memberidx1.i.i28.i = getelementptr inbounds %FloRange, ptr %578, i64 0, i32 1
  store i64 %581, ptr %memberidx1.i.i28.i, align 4
  %memberidx2.i.i29.i = getelementptr inbounds %FloRange, ptr %578, i64 0, i32 2
  store i64 %583, ptr %memberidx2.i.i29.i, align 4
  %memberidx3.i.i30.i = getelementptr inbounds %FloRange, ptr %578, i64 0, i32 3
  store i64 %584, ptr %memberidx3.i.i30.i, align 4
  store i64 23, ptr %577, align 4
  %memberidx1.i31.i = getelementptr inbounds %Token, ptr %577, i64 0, i32 1
  store ptr %578, ptr %memberidx1.i31.i, align 8
  br label %common.ret

end.i39.i267:                                     ; preds = %if.entry.i.i243
  store i64 %565, ptr %memberidx.i.i240, align 4
  %585 = load ptr, ptr %566, align 8
  %586 = getelementptr inbounds i8, ptr %585, i64 %565
  %587 = load i8, ptr %586, align 1
  store i8 %587, ptr %0, align 1
  switch i8 %587, label %if.entry9.i46.i274 [
    i8 10, label %if.entry.i42.i270
    i8 0, label %Lexer_advance.exit47.i275
  ]

if.entry.i42.i270:                                ; preds = %end.i39.i267
  %memberidx5.i40.i268 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i40.i268, align 4
  %memberidx6.i41.i269 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit47.i275.sink.split

if.entry9.i46.i274:                               ; preds = %end.i39.i267
  %memberidx12.i45.i273 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit47.i275.sink.split

Lexer_advance.exit47.i275.sink.split:             ; preds = %if.entry.i42.i270, %if.entry9.i46.i274
  %memberidx12.i45.i273.sink1304 = phi ptr [ %memberidx12.i45.i273, %if.entry9.i46.i274 ], [ %memberidx6.i41.i269, %if.entry.i42.i270 ]
  %588 = load i64, ptr %memberidx12.i45.i273.sink1304, align 4
  %589 = add nsw i64 %588, 1
  store i64 %589, ptr %memberidx12.i45.i273.sink1304, align 4
  br label %Lexer_advance.exit47.i275

Lexer_advance.exit47.i275:                        ; preds = %Lexer_advance.exit47.i275.sink.split, %end.i39.i267
  %590 = tail call ptr @malloc(i32 16)
  %591 = tail call ptr @malloc(i32 32)
  %592 = load i64, ptr %memberidx.i.i240, align 4
  %593 = add nsw i64 %592, -1
  %594 = add nsw i64 %592, 1
  %memberidx2.i20.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %595 = load i64, ptr %memberidx2.i20.i, align 4
  %596 = add i64 %595, -2
  %memberidx3.i21.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %597 = load i64, ptr %memberidx3.i21.i, align 4
  store i64 %593, ptr %591, align 4
  %memberidx1.i.i22.i = getelementptr inbounds %FloRange, ptr %591, i64 0, i32 1
  store i64 %594, ptr %memberidx1.i.i22.i, align 4
  %memberidx2.i.i23.i = getelementptr inbounds %FloRange, ptr %591, i64 0, i32 2
  store i64 %596, ptr %memberidx2.i.i23.i, align 4
  %memberidx3.i.i24.i = getelementptr inbounds %FloRange, ptr %591, i64 0, i32 3
  store i64 %597, ptr %memberidx3.i.i24.i, align 4
  store i64 14, ptr %590, align 4
  %memberidx1.i18.i = getelementptr inbounds %Token, ptr %590, i64 0, i32 1
  store ptr %591, ptr %memberidx1.i18.i, align 8
  br label %common.ret

ifend3.i:                                         ; preds = %if.entry.i.i243, %if.entry21
  %598 = tail call ptr @malloc(i32 16)
  %599 = tail call ptr @malloc(i32 32)
  %600 = load i64, ptr %memberidx.i.i240, align 4
  %601 = add nsw i64 %600, 1
  %memberidx2.i12.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %602 = load i64, ptr %memberidx2.i12.i, align 4
  %603 = add i64 %602, -1
  %memberidx3.i.i276 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %604 = load i64, ptr %memberidx3.i.i276, align 4
  store i64 %600, ptr %599, align 4
  %memberidx1.i.i.i277 = getelementptr inbounds %FloRange, ptr %599, i64 0, i32 1
  store i64 %601, ptr %memberidx1.i.i.i277, align 4
  %memberidx2.i.i.i278 = getelementptr inbounds %FloRange, ptr %599, i64 0, i32 2
  store i64 %603, ptr %memberidx2.i.i.i278, align 4
  %memberidx3.i.i.i279 = getelementptr inbounds %FloRange, ptr %599, i64 0, i32 3
  store i64 %604, ptr %memberidx3.i.i.i279, align 4
  store i64 6, ptr %598, align 4
  %memberidx1.i10.i = getelementptr inbounds %Token, ptr %598, i64 0, i32 1
  store ptr %599, ptr %memberidx1.i10.i, align 8
  br label %common.ret

if.entry24:                                       ; preds = %ifend11
  %memberidx.i.i280 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %605 = load i64, ptr %memberidx.i.i280, align 4
  %606 = add nsw i64 %605, 1
  %memberidx1.i.i281 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %607 = load ptr, ptr %memberidx1.i.i281, align 8
  %memberidx2.i.i282 = getelementptr inbounds %String, ptr %607, i64 0, i32 1
  %608 = load i64, ptr %memberidx2.i.i282, align 4
  %609 = icmp slt i64 %606, %608
  br i1 %609, label %if.entry.i.i283, label %ifend6.i

if.entry.i.i283:                                  ; preds = %if.entry24
  %610 = load ptr, ptr %607, align 8
  %611 = getelementptr inbounds i8, ptr %610, i64 %606
  %612 = load i8, ptr %611, align 1
  switch i8 %612, label %ifend6.i [
    i8 45, label %end.i.i291
    i8 61, label %end.i80.i
    i8 62, label %if.entry4.i
  ]

end.i.i291:                                       ; preds = %if.entry.i.i283
  store i64 %606, ptr %memberidx.i.i280, align 4
  %613 = load ptr, ptr %607, align 8
  %614 = getelementptr inbounds i8, ptr %613, i64 %606
  %615 = load i8, ptr %614, align 1
  store i8 %615, ptr %0, align 1
  switch i8 %615, label %if.entry9.i.i297 [
    i8 10, label %if.entry.i23.i
    i8 0, label %Lexer_advance.exit.i298
  ]

if.entry.i23.i:                                   ; preds = %end.i.i291
  %memberidx5.i.i292 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i292, align 4
  %memberidx6.i.i293 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i298.sink.split

if.entry9.i.i297:                                 ; preds = %end.i.i291
  %memberidx12.i.i296 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i298.sink.split

Lexer_advance.exit.i298.sink.split:               ; preds = %if.entry.i23.i, %if.entry9.i.i297
  %memberidx12.i.i296.sink1306 = phi ptr [ %memberidx12.i.i296, %if.entry9.i.i297 ], [ %memberidx6.i.i293, %if.entry.i23.i ]
  %616 = load i64, ptr %memberidx12.i.i296.sink1306, align 4
  %617 = add nsw i64 %616, 1
  store i64 %617, ptr %memberidx12.i.i296.sink1306, align 4
  br label %Lexer_advance.exit.i298

Lexer_advance.exit.i298:                          ; preds = %Lexer_advance.exit.i298.sink.split, %end.i.i291
  %618 = tail call ptr @malloc(i32 16)
  %619 = tail call ptr @malloc(i32 32)
  %620 = load i64, ptr %memberidx.i.i280, align 4
  %621 = add nsw i64 %620, -1
  %622 = add nsw i64 %620, 1
  %memberidx2.i32.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %623 = load i64, ptr %memberidx2.i32.i, align 4
  %624 = add i64 %623, -2
  %memberidx3.i33.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %625 = load i64, ptr %memberidx3.i33.i, align 4
  store i64 %621, ptr %619, align 4
  %memberidx1.i.i34.i = getelementptr inbounds %FloRange, ptr %619, i64 0, i32 1
  store i64 %622, ptr %memberidx1.i.i34.i, align 4
  %memberidx2.i.i35.i = getelementptr inbounds %FloRange, ptr %619, i64 0, i32 2
  store i64 %624, ptr %memberidx2.i.i35.i, align 4
  %memberidx3.i.i36.i = getelementptr inbounds %FloRange, ptr %619, i64 0, i32 3
  store i64 %625, ptr %memberidx3.i.i36.i, align 4
  store i64 24, ptr %618, align 4
  %memberidx1.i37.i = getelementptr inbounds %Token, ptr %618, i64 0, i32 1
  store ptr %619, ptr %memberidx1.i37.i, align 8
  br label %common.ret

end.i80.i:                                        ; preds = %if.entry.i.i283
  store i64 %606, ptr %memberidx.i.i280, align 4
  %626 = load ptr, ptr %607, align 8
  %627 = getelementptr inbounds i8, ptr %626, i64 %606
  %628 = load i8, ptr %627, align 1
  store i8 %628, ptr %0, align 1
  switch i8 %628, label %if.entry9.i87.i [
    i8 10, label %if.entry.i83.i
    i8 0, label %Lexer_advance.exit88.i
  ]

if.entry.i83.i:                                   ; preds = %end.i80.i
  %memberidx5.i81.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i, align 4
  %memberidx6.i82.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i.sink.split

if.entry9.i87.i:                                  ; preds = %end.i80.i
  %memberidx12.i86.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i.sink.split

Lexer_advance.exit88.i.sink.split:                ; preds = %if.entry.i83.i, %if.entry9.i87.i
  %memberidx12.i86.i.sink1308 = phi ptr [ %memberidx12.i86.i, %if.entry9.i87.i ], [ %memberidx6.i82.i, %if.entry.i83.i ]
  %629 = load i64, ptr %memberidx12.i86.i.sink1308, align 4
  %630 = add nsw i64 %629, 1
  store i64 %630, ptr %memberidx12.i86.i.sink1308, align 4
  br label %Lexer_advance.exit88.i

Lexer_advance.exit88.i:                           ; preds = %Lexer_advance.exit88.i.sink.split, %end.i80.i
  %631 = tail call ptr @malloc(i32 16)
  %632 = tail call ptr @malloc(i32 32)
  %633 = load i64, ptr %memberidx.i.i280, align 4
  %634 = add nsw i64 %633, -1
  %635 = add nsw i64 %633, 1
  %memberidx2.i62.i305 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %636 = load i64, ptr %memberidx2.i62.i305, align 4
  %637 = add i64 %636, -2
  %memberidx3.i63.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %638 = load i64, ptr %memberidx3.i63.i, align 4
  store i64 %634, ptr %632, align 4
  %memberidx1.i.i64.i = getelementptr inbounds %FloRange, ptr %632, i64 0, i32 1
  store i64 %635, ptr %memberidx1.i.i64.i, align 4
  %memberidx2.i.i65.i = getelementptr inbounds %FloRange, ptr %632, i64 0, i32 2
  store i64 %637, ptr %memberidx2.i.i65.i, align 4
  %memberidx3.i.i66.i = getelementptr inbounds %FloRange, ptr %632, i64 0, i32 3
  store i64 %638, ptr %memberidx3.i.i66.i, align 4
  store i64 13, ptr %631, align 4
  %memberidx1.i60.i = getelementptr inbounds %Token, ptr %631, i64 0, i32 1
  store ptr %632, ptr %memberidx1.i60.i, align 8
  br label %common.ret

if.entry4.i:                                      ; preds = %if.entry.i.i283
  %.not1147 = icmp slt i64 %605, %608
  br i1 %.not1147, label %end.i45.i, label %end.i45.i.thread

end.i45.i.thread:                                 ; preds = %if.entry4.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit53.i

end.i45.i:                                        ; preds = %if.entry4.i
  store i64 %606, ptr %memberidx.i.i280, align 4
  %639 = load ptr, ptr %607, align 8
  %640 = getelementptr inbounds i8, ptr %639, i64 %606
  %641 = load i8, ptr %640, align 1
  store i8 %641, ptr %0, align 1
  switch i8 %641, label %if.entry9.i52.i [
    i8 10, label %if.entry.i48.i306
    i8 0, label %Lexer_advance.exit53.i
  ]

if.entry.i48.i306:                                ; preds = %end.i45.i
  %memberidx5.i46.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i, align 4
  %memberidx6.i47.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %642 = load i64, ptr %memberidx6.i47.i, align 4
  %643 = add nsw i64 %642, 1
  store i64 %643, ptr %memberidx6.i47.i, align 4
  br label %Lexer_advance.exit53.i

if.entry9.i52.i:                                  ; preds = %end.i45.i
  %memberidx12.i51.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %644 = load i64, ptr %memberidx12.i51.i, align 4
  %645 = add nsw i64 %644, 1
  store i64 %645, ptr %memberidx12.i51.i, align 4
  br label %Lexer_advance.exit53.i

Lexer_advance.exit53.i:                           ; preds = %end.i45.i.thread, %end.i45.i, %if.entry9.i52.i, %if.entry.i48.i306
  %646 = tail call ptr @malloc(i32 16)
  %647 = tail call ptr @malloc(i32 32)
  %648 = load i64, ptr %memberidx.i.i280, align 4
  %649 = add nsw i64 %648, -1
  %650 = add nsw i64 %648, 1
  %memberidx2.i26.i308 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %651 = load i64, ptr %memberidx2.i26.i308, align 4
  %652 = add i64 %651, -2
  %memberidx3.i27.i309 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %653 = load i64, ptr %memberidx3.i27.i309, align 4
  store i64 %649, ptr %647, align 4
  %memberidx1.i.i28.i310 = getelementptr inbounds %FloRange, ptr %647, i64 0, i32 1
  store i64 %650, ptr %memberidx1.i.i28.i310, align 4
  %memberidx2.i.i29.i311 = getelementptr inbounds %FloRange, ptr %647, i64 0, i32 2
  store i64 %652, ptr %memberidx2.i.i29.i311, align 4
  %memberidx3.i.i30.i312 = getelementptr inbounds %FloRange, ptr %647, i64 0, i32 3
  store i64 %653, ptr %memberidx3.i.i30.i312, align 4
  store i64 45, ptr %646, align 4
  %memberidx1.i24.i = getelementptr inbounds %Token, ptr %646, i64 0, i32 1
  store ptr %647, ptr %memberidx1.i24.i, align 8
  br label %common.ret

ifend6.i:                                         ; preds = %if.entry.i.i283, %if.entry24
  %654 = tail call ptr @malloc(i32 16)
  %655 = tail call ptr @malloc(i32 32)
  %656 = load i64, ptr %memberidx.i.i280, align 4
  %657 = add nsw i64 %656, -1
  %658 = add nsw i64 %656, 1
  %memberidx2.i18.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %659 = load i64, ptr %memberidx2.i18.i, align 4
  %660 = add i64 %659, -2
  %memberidx3.i.i313 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %661 = load i64, ptr %memberidx3.i.i313, align 4
  store i64 %657, ptr %655, align 4
  %memberidx1.i.i.i314 = getelementptr inbounds %FloRange, ptr %655, i64 0, i32 1
  store i64 %658, ptr %memberidx1.i.i.i314, align 4
  %memberidx2.i.i.i315 = getelementptr inbounds %FloRange, ptr %655, i64 0, i32 2
  store i64 %660, ptr %memberidx2.i.i.i315, align 4
  %memberidx3.i.i.i316 = getelementptr inbounds %FloRange, ptr %655, i64 0, i32 3
  store i64 %661, ptr %memberidx3.i.i.i316, align 4
  store i64 5, ptr %654, align 4
  %memberidx1.i16.i = getelementptr inbounds %Token, ptr %654, i64 0, i32 1
  store ptr %655, ptr %memberidx1.i16.i, align 8
  br label %common.ret

if.entry27:                                       ; preds = %ifend11
  %memberidx.i.i317 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %662 = load i64, ptr %memberidx.i.i317, align 4
  %663 = add nsw i64 %662, 1
  %memberidx1.i.i318 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %664 = load ptr, ptr %memberidx1.i.i318, align 8
  %memberidx2.i.i319 = getelementptr inbounds %String, ptr %664, i64 0, i32 1
  %665 = load i64, ptr %memberidx2.i.i319, align 4
  %666 = icmp slt i64 %663, %665
  br i1 %666, label %if.entry.i.i320, label %ifend3.i380

if.entry.i.i320:                                  ; preds = %if.entry27
  %667 = load ptr, ptr %664, align 8
  %668 = getelementptr inbounds i8, ptr %667, i64 %663
  %669 = load i8, ptr %668, align 1
  switch i8 %669, label %ifend3.i380 [
    i8 61, label %end.i.i332
    i8 42, label %end.i80.i363
  ]

end.i.i332:                                       ; preds = %if.entry.i.i320
  store i64 %663, ptr %memberidx.i.i317, align 4
  %670 = load ptr, ptr %664, align 8
  %671 = getelementptr inbounds i8, ptr %670, i64 %663
  %672 = load i8, ptr %671, align 1
  store i8 %672, ptr %0, align 1
  switch i8 %672, label %if.entry9.i.i339 [
    i8 10, label %if.entry.i23.i335
    i8 0, label %Lexer_advance.exit.i347
  ]

if.entry.i23.i335:                                ; preds = %end.i.i332
  %memberidx5.i.i333 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i333, align 4
  %memberidx6.i.i334 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i347.sink.split

if.entry9.i.i339:                                 ; preds = %end.i.i332
  %memberidx12.i.i338 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i347.sink.split

Lexer_advance.exit.i347.sink.split:               ; preds = %if.entry.i23.i335, %if.entry9.i.i339
  %memberidx12.i.i338.sink1310 = phi ptr [ %memberidx12.i.i338, %if.entry9.i.i339 ], [ %memberidx6.i.i334, %if.entry.i23.i335 ]
  %673 = load i64, ptr %memberidx12.i.i338.sink1310, align 4
  %674 = add nsw i64 %673, 1
  store i64 %674, ptr %memberidx12.i.i338.sink1310, align 4
  br label %Lexer_advance.exit.i347

Lexer_advance.exit.i347:                          ; preds = %Lexer_advance.exit.i347.sink.split, %end.i.i332
  %675 = tail call ptr @malloc(i32 16)
  %676 = tail call ptr @malloc(i32 32)
  %677 = load i64, ptr %memberidx.i.i317, align 4
  %678 = add nsw i64 %677, -1
  %679 = add nsw i64 %677, 1
  %memberidx2.i32.i341 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %680 = load i64, ptr %memberidx2.i32.i341, align 4
  %681 = add i64 %680, -2
  %memberidx3.i33.i342 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %682 = load i64, ptr %memberidx3.i33.i342, align 4
  store i64 %678, ptr %676, align 4
  %memberidx1.i.i34.i343 = getelementptr inbounds %FloRange, ptr %676, i64 0, i32 1
  store i64 %679, ptr %memberidx1.i.i34.i343, align 4
  %memberidx2.i.i35.i344 = getelementptr inbounds %FloRange, ptr %676, i64 0, i32 2
  store i64 %681, ptr %memberidx2.i.i35.i344, align 4
  %memberidx3.i.i36.i345 = getelementptr inbounds %FloRange, ptr %676, i64 0, i32 3
  store i64 %682, ptr %memberidx3.i.i36.i345, align 4
  store i64 12, ptr %675, align 4
  %memberidx1.i37.i346 = getelementptr inbounds %Token, ptr %675, i64 0, i32 1
  store ptr %676, ptr %memberidx1.i37.i346, align 8
  br label %common.ret

end.i80.i363:                                     ; preds = %if.entry.i.i320
  store i64 %663, ptr %memberidx.i.i317, align 4
  %683 = load ptr, ptr %664, align 8
  %684 = getelementptr inbounds i8, ptr %683, i64 %663
  %685 = load i8, ptr %684, align 1
  store i8 %685, ptr %0, align 1
  switch i8 %685, label %if.entry9.i87.i370 [
    i8 10, label %if.entry.i83.i366
    i8 0, label %Lexer_advance.exit88.i374
  ]

if.entry.i83.i366:                                ; preds = %end.i80.i363
  %memberidx5.i81.i364 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i364, align 4
  %memberidx6.i82.i365 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i374.sink.split

if.entry9.i87.i370:                               ; preds = %end.i80.i363
  %memberidx12.i86.i369 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i374.sink.split

Lexer_advance.exit88.i374.sink.split:             ; preds = %if.entry.i83.i366, %if.entry9.i87.i370
  %memberidx12.i86.i369.sink1312 = phi ptr [ %memberidx12.i86.i369, %if.entry9.i87.i370 ], [ %memberidx6.i82.i365, %if.entry.i83.i366 ]
  %686 = load i64, ptr %memberidx12.i86.i369.sink1312, align 4
  %687 = add nsw i64 %686, 1
  store i64 %687, ptr %memberidx12.i86.i369.sink1312, align 4
  br label %Lexer_advance.exit88.i374

Lexer_advance.exit88.i374:                        ; preds = %Lexer_advance.exit88.i374.sink.split, %end.i80.i363
  %688 = add nsw i64 %662, 2
  %689 = load i64, ptr %memberidx2.i.i319, align 4
  %690 = icmp slt i64 %688, %689
  br i1 %690, label %if.entry.i71.i375, label %ifend6.i412

if.entry.i71.i375:                                ; preds = %Lexer_advance.exit88.i374
  %691 = load ptr, ptr %664, align 8
  %692 = getelementptr inbounds i8, ptr %691, i64 %688
  %693 = load i8, ptr %692, align 1
  %phi.cmp1141 = icmp eq i8 %693, 61
  br i1 %phi.cmp1141, label %end.i45.i389, label %ifend6.i412

ifend3.i380:                                      ; preds = %if.entry.i.i320, %if.entry27
  %694 = tail call ptr @malloc(i32 16)
  %695 = tail call ptr @malloc(i32 32)
  %696 = load i64, ptr %memberidx.i.i317, align 4
  %697 = add nsw i64 %696, 1
  %memberidx2.i56.i378 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %698 = load i64, ptr %memberidx2.i56.i378, align 4
  %699 = add i64 %698, -1
  %memberidx3.i57.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %700 = load i64, ptr %memberidx3.i57.i, align 4
  store i64 %696, ptr %695, align 4
  %memberidx1.i.i58.i379 = getelementptr inbounds %FloRange, ptr %695, i64 0, i32 1
  store i64 %697, ptr %memberidx1.i.i58.i379, align 4
  %memberidx2.i.i59.i = getelementptr inbounds %FloRange, ptr %695, i64 0, i32 2
  store i64 %699, ptr %memberidx2.i.i59.i, align 4
  %memberidx3.i.i60.i = getelementptr inbounds %FloRange, ptr %695, i64 0, i32 3
  store i64 %700, ptr %memberidx3.i.i60.i, align 4
  store i64 4, ptr %694, align 4
  %memberidx1.i54.i = getelementptr inbounds %Token, ptr %694, i64 0, i32 1
  store ptr %695, ptr %memberidx1.i54.i, align 8
  br label %common.ret

end.i45.i389:                                     ; preds = %if.entry.i71.i375
  store i64 %688, ptr %memberidx.i.i317, align 4
  %701 = load ptr, ptr %664, align 8
  %702 = getelementptr inbounds i8, ptr %701, i64 %688
  %703 = load i8, ptr %702, align 1
  store i8 %703, ptr %0, align 1
  switch i8 %703, label %if.entry9.i52.i396 [
    i8 10, label %if.entry.i48.i392
    i8 0, label %Lexer_advance.exit53.i404
  ]

if.entry.i48.i392:                                ; preds = %end.i45.i389
  %memberidx5.i46.i390 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i390, align 4
  %memberidx6.i47.i391 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit53.i404.sink.split

if.entry9.i52.i396:                               ; preds = %end.i45.i389
  %memberidx12.i51.i395 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit53.i404.sink.split

Lexer_advance.exit53.i404.sink.split:             ; preds = %if.entry.i48.i392, %if.entry9.i52.i396
  %memberidx12.i51.i395.sink1314 = phi ptr [ %memberidx12.i51.i395, %if.entry9.i52.i396 ], [ %memberidx6.i47.i391, %if.entry.i48.i392 ]
  %704 = load i64, ptr %memberidx12.i51.i395.sink1314, align 4
  %705 = add nsw i64 %704, 1
  store i64 %705, ptr %memberidx12.i51.i395.sink1314, align 4
  br label %Lexer_advance.exit53.i404

Lexer_advance.exit53.i404:                        ; preds = %Lexer_advance.exit53.i404.sink.split, %end.i45.i389
  %706 = tail call ptr @malloc(i32 16)
  %707 = tail call ptr @malloc(i32 32)
  %708 = load i64, ptr %memberidx.i.i317, align 4
  %709 = add nsw i64 %708, -2
  %710 = add nsw i64 %708, 1
  %memberidx2.i26.i398 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %711 = load i64, ptr %memberidx2.i26.i398, align 4
  %712 = add i64 %711, -3
  %memberidx3.i27.i399 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %713 = load i64, ptr %memberidx3.i27.i399, align 4
  store i64 %709, ptr %707, align 4
  %memberidx1.i.i28.i400 = getelementptr inbounds %FloRange, ptr %707, i64 0, i32 1
  store i64 %710, ptr %memberidx1.i.i28.i400, align 4
  %memberidx2.i.i29.i401 = getelementptr inbounds %FloRange, ptr %707, i64 0, i32 2
  store i64 %712, ptr %memberidx2.i.i29.i401, align 4
  %memberidx3.i.i30.i402 = getelementptr inbounds %FloRange, ptr %707, i64 0, i32 3
  store i64 %713, ptr %memberidx3.i.i30.i402, align 4
  store i64 17, ptr %706, align 4
  %memberidx1.i24.i403 = getelementptr inbounds %Token, ptr %706, i64 0, i32 1
  store ptr %707, ptr %memberidx1.i24.i403, align 8
  br label %common.ret

ifend6.i412:                                      ; preds = %Lexer_advance.exit88.i374, %if.entry.i71.i375
  %714 = tail call ptr @malloc(i32 16)
  %715 = tail call ptr @malloc(i32 32)
  %716 = load i64, ptr %memberidx.i.i317, align 4
  %717 = add nsw i64 %716, -1
  %718 = add nsw i64 %716, 1
  %memberidx2.i18.i406 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %719 = load i64, ptr %memberidx2.i18.i406, align 4
  %720 = add i64 %719, -2
  %memberidx3.i.i407 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %721 = load i64, ptr %memberidx3.i.i407, align 4
  store i64 %717, ptr %715, align 4
  %memberidx1.i.i.i408 = getelementptr inbounds %FloRange, ptr %715, i64 0, i32 1
  store i64 %718, ptr %memberidx1.i.i.i408, align 4
  %memberidx2.i.i.i409 = getelementptr inbounds %FloRange, ptr %715, i64 0, i32 2
  store i64 %720, ptr %memberidx2.i.i.i409, align 4
  %memberidx3.i.i.i410 = getelementptr inbounds %FloRange, ptr %715, i64 0, i32 3
  store i64 %721, ptr %memberidx3.i.i.i410, align 4
  store i64 11, ptr %714, align 4
  %memberidx1.i16.i411 = getelementptr inbounds %Token, ptr %714, i64 0, i32 1
  store ptr %715, ptr %memberidx1.i16.i411, align 8
  br label %common.ret

if.entry30:                                       ; preds = %ifend11
  %memberidx.i.i413 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %722 = load i64, ptr %memberidx.i.i413, align 4
  %723 = add nsw i64 %722, 1
  %memberidx1.i.i414 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %724 = load ptr, ptr %memberidx1.i.i414, align 8
  %memberidx2.i.i415 = getelementptr inbounds %String, ptr %724, i64 0, i32 1
  %725 = load i64, ptr %memberidx2.i.i415, align 4
  %726 = icmp slt i64 %723, %725
  br i1 %726, label %if.entry.i.i416, label %ifend.i436

if.entry.i.i416:                                  ; preds = %if.entry30
  %727 = load ptr, ptr %724, align 8
  %728 = getelementptr inbounds i8, ptr %727, i64 %723
  %729 = load i8, ptr %728, align 1
  %phi.cmp1136 = icmp eq i8 %729, 61
  br i1 %phi.cmp1136, label %end.i.i424, label %ifend.i436

end.i.i424:                                       ; preds = %if.entry.i.i416
  store i64 %723, ptr %memberidx.i.i413, align 4
  %730 = load ptr, ptr %724, align 8
  %731 = getelementptr inbounds i8, ptr %730, i64 %723
  %732 = load i8, ptr %731, align 1
  store i8 %732, ptr %0, align 1
  switch i8 %732, label %if.entry9.i.i430 [
    i8 10, label %if.entry.i11.i
    i8 0, label %Lexer_advance.exit.i431
  ]

if.entry.i11.i:                                   ; preds = %end.i.i424
  %memberidx5.i.i425 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i425, align 4
  %memberidx6.i.i426 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i431.sink.split

if.entry9.i.i430:                                 ; preds = %end.i.i424
  %memberidx12.i.i429 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i431.sink.split

Lexer_advance.exit.i431.sink.split:               ; preds = %if.entry.i11.i, %if.entry9.i.i430
  %memberidx12.i.i429.sink1316 = phi ptr [ %memberidx12.i.i429, %if.entry9.i.i430 ], [ %memberidx6.i.i426, %if.entry.i11.i ]
  %733 = load i64, ptr %memberidx12.i.i429.sink1316, align 4
  %734 = add nsw i64 %733, 1
  store i64 %734, ptr %memberidx12.i.i429.sink1316, align 4
  br label %Lexer_advance.exit.i431

Lexer_advance.exit.i431:                          ; preds = %Lexer_advance.exit.i431.sink.split, %end.i.i424
  %735 = tail call ptr @malloc(i32 16)
  %736 = tail call ptr @malloc(i32 32)
  %737 = load i64, ptr %memberidx.i.i413, align 4
  %738 = add nsw i64 %737, -1
  %739 = add nsw i64 %737, 1
  %memberidx2.i14.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %740 = load i64, ptr %memberidx2.i14.i, align 4
  %741 = add i64 %740, -2
  %memberidx3.i15.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %742 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %738, ptr %736, align 4
  %memberidx1.i.i16.i = getelementptr inbounds %FloRange, ptr %736, i64 0, i32 1
  store i64 %739, ptr %memberidx1.i.i16.i, align 4
  %memberidx2.i.i17.i = getelementptr inbounds %FloRange, ptr %736, i64 0, i32 2
  store i64 %741, ptr %memberidx2.i.i17.i, align 4
  %memberidx3.i.i18.i = getelementptr inbounds %FloRange, ptr %736, i64 0, i32 3
  store i64 %742, ptr %memberidx3.i.i18.i, align 4
  store i64 16, ptr %735, align 4
  %memberidx1.i12.i = getelementptr inbounds %Token, ptr %735, i64 0, i32 1
  store ptr %736, ptr %memberidx1.i12.i, align 8
  br label %common.ret

ifend.i436:                                       ; preds = %if.entry30, %if.entry.i.i416
  %743 = tail call ptr @malloc(i32 16)
  %744 = tail call ptr @malloc(i32 32)
  %745 = load i64, ptr %memberidx.i.i413, align 4
  %746 = add nsw i64 %745, 1
  %memberidx2.i6.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %747 = load i64, ptr %memberidx2.i6.i, align 4
  %748 = add i64 %747, -1
  %memberidx3.i.i432 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %749 = load i64, ptr %memberidx3.i.i432, align 4
  store i64 %745, ptr %744, align 4
  %memberidx1.i.i.i433 = getelementptr inbounds %FloRange, ptr %744, i64 0, i32 1
  store i64 %746, ptr %memberidx1.i.i.i433, align 4
  %memberidx2.i.i.i434 = getelementptr inbounds %FloRange, ptr %744, i64 0, i32 2
  store i64 %748, ptr %memberidx2.i.i.i434, align 4
  %memberidx3.i.i.i435 = getelementptr inbounds %FloRange, ptr %744, i64 0, i32 3
  store i64 %749, ptr %memberidx3.i.i.i435, align 4
  store i64 10, ptr %743, align 4
  %memberidx1.i4.i = getelementptr inbounds %Token, ptr %743, i64 0, i32 1
  store ptr %744, ptr %memberidx1.i4.i, align 8
  br label %common.ret

if.entry33:                                       ; preds = %ifend11
  %memberidx.i.i437 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %750 = load i64, ptr %memberidx.i.i437, align 4
  %751 = add nsw i64 %750, 1
  %memberidx1.i.i438 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %752 = load ptr, ptr %memberidx1.i.i438, align 8
  %memberidx2.i.i439 = getelementptr inbounds %String, ptr %752, i64 0, i32 1
  %753 = load i64, ptr %memberidx2.i.i439, align 4
  %754 = icmp slt i64 %751, %753
  br i1 %754, label %if.entry.i.i440, label %ifend.i475

if.entry.i.i440:                                  ; preds = %if.entry33
  %755 = load ptr, ptr %752, align 8
  %756 = getelementptr inbounds i8, ptr %755, i64 %751
  %757 = load i8, ptr %756, align 1
  %phi.cmp1134 = icmp eq i8 %757, 61
  br i1 %phi.cmp1134, label %end.i.i452, label %ifend.i475

end.i.i452:                                       ; preds = %if.entry.i.i440
  store i64 %751, ptr %memberidx.i.i437, align 4
  %758 = load ptr, ptr %752, align 8
  %759 = getelementptr inbounds i8, ptr %758, i64 %751
  %760 = load i8, ptr %759, align 1
  store i8 %760, ptr %0, align 1
  switch i8 %760, label %if.entry9.i.i459 [
    i8 10, label %if.entry.i11.i455
    i8 0, label %Lexer_advance.exit.i467
  ]

if.entry.i11.i455:                                ; preds = %end.i.i452
  %memberidx5.i.i453 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i453, align 4
  %memberidx6.i.i454 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i467.sink.split

if.entry9.i.i459:                                 ; preds = %end.i.i452
  %memberidx12.i.i458 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i467.sink.split

Lexer_advance.exit.i467.sink.split:               ; preds = %if.entry.i11.i455, %if.entry9.i.i459
  %memberidx12.i.i458.sink1318 = phi ptr [ %memberidx12.i.i458, %if.entry9.i.i459 ], [ %memberidx6.i.i454, %if.entry.i11.i455 ]
  %761 = load i64, ptr %memberidx12.i.i458.sink1318, align 4
  %762 = add nsw i64 %761, 1
  store i64 %762, ptr %memberidx12.i.i458.sink1318, align 4
  br label %Lexer_advance.exit.i467

Lexer_advance.exit.i467:                          ; preds = %Lexer_advance.exit.i467.sink.split, %end.i.i452
  %763 = tail call ptr @malloc(i32 16)
  %764 = tail call ptr @malloc(i32 32)
  %765 = load i64, ptr %memberidx.i.i437, align 4
  %766 = add nsw i64 %765, -1
  %767 = add nsw i64 %765, 1
  %memberidx2.i14.i461 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %768 = load i64, ptr %memberidx2.i14.i461, align 4
  %769 = add i64 %768, -2
  %memberidx3.i15.i462 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %770 = load i64, ptr %memberidx3.i15.i462, align 4
  store i64 %766, ptr %764, align 4
  %memberidx1.i.i16.i463 = getelementptr inbounds %FloRange, ptr %764, i64 0, i32 1
  store i64 %767, ptr %memberidx1.i.i16.i463, align 4
  %memberidx2.i.i17.i464 = getelementptr inbounds %FloRange, ptr %764, i64 0, i32 2
  store i64 %769, ptr %memberidx2.i.i17.i464, align 4
  %memberidx3.i.i18.i465 = getelementptr inbounds %FloRange, ptr %764, i64 0, i32 3
  store i64 %770, ptr %memberidx3.i.i18.i465, align 4
  store i64 20, ptr %763, align 4
  %memberidx1.i12.i466 = getelementptr inbounds %Token, ptr %763, i64 0, i32 1
  store ptr %764, ptr %memberidx1.i12.i466, align 8
  br label %common.ret

ifend.i475:                                       ; preds = %if.entry33, %if.entry.i.i440
  %771 = tail call ptr @malloc(i32 16)
  %772 = tail call ptr @malloc(i32 32)
  %773 = load i64, ptr %memberidx.i.i437, align 4
  %774 = add nsw i64 %773, 1
  %memberidx2.i6.i469 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %775 = load i64, ptr %memberidx2.i6.i469, align 4
  %776 = add i64 %775, -1
  %memberidx3.i.i470 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %777 = load i64, ptr %memberidx3.i.i470, align 4
  store i64 %773, ptr %772, align 4
  %memberidx1.i.i.i471 = getelementptr inbounds %FloRange, ptr %772, i64 0, i32 1
  store i64 %774, ptr %memberidx1.i.i.i471, align 4
  %memberidx2.i.i.i472 = getelementptr inbounds %FloRange, ptr %772, i64 0, i32 2
  store i64 %776, ptr %memberidx2.i.i.i472, align 4
  %memberidx3.i.i.i473 = getelementptr inbounds %FloRange, ptr %772, i64 0, i32 3
  store i64 %777, ptr %memberidx3.i.i.i473, align 4
  store i64 51, ptr %771, align 4
  %memberidx1.i4.i474 = getelementptr inbounds %Token, ptr %771, i64 0, i32 1
  store ptr %772, ptr %memberidx1.i4.i474, align 8
  br label %common.ret

if.entry36:                                       ; preds = %ifend11
  %memberidx.i.i476 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %778 = load i64, ptr %memberidx.i.i476, align 4
  %779 = add nsw i64 %778, 1
  %memberidx1.i.i477 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %780 = load ptr, ptr %memberidx1.i.i477, align 8
  %memberidx2.i.i478 = getelementptr inbounds %String, ptr %780, i64 0, i32 1
  %781 = load i64, ptr %memberidx2.i.i478, align 4
  %782 = icmp slt i64 %779, %781
  br i1 %782, label %Lexer_peek.exit.i481, label %ifend.i564

Lexer_peek.exit.i481:                             ; preds = %if.entry36
  %783 = load ptr, ptr %780, align 8
  %784 = getelementptr inbounds i8, ptr %783, i64 %779
  %785 = load i8, ptr %784, align 1
  switch i8 %785, label %ifend.i564 [
    i8 42, label %end.i142.i
    i8 47, label %end.i54.i
    i8 61, label %if.entry.i536
  ]

end.i142.i:                                       ; preds = %Lexer_peek.exit.i481
  store i64 %779, ptr %memberidx.i.i476, align 4
  %786 = load ptr, ptr %780, align 8
  %787 = getelementptr inbounds i8, ptr %786, i64 %779
  %788 = load i8, ptr %787, align 1
  store i8 %788, ptr %0, align 1
  switch i8 %788, label %if.entry9.i149.i [
    i8 10, label %if.entry.i145.i
    i8 0, label %Lexer_advance.exit150.i
  ]

if.entry.i145.i:                                  ; preds = %end.i142.i
  %memberidx5.i143.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i143.i, align 4
  %memberidx6.i144.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit150.i.sink.split

if.entry9.i149.i:                                 ; preds = %end.i142.i
  %memberidx12.i148.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit150.i.sink.split

Lexer_advance.exit150.i.sink.split:               ; preds = %if.entry.i145.i, %if.entry9.i149.i
  %memberidx12.i148.i.sink1320 = phi ptr [ %memberidx12.i148.i, %if.entry9.i149.i ], [ %memberidx6.i144.i, %if.entry.i145.i ]
  %789 = load i64, ptr %memberidx12.i148.i.sink1320, align 4
  %790 = add nsw i64 %789, 1
  store i64 %790, ptr %memberidx12.i148.i.sink1320, align 4
  br label %Lexer_advance.exit150.i

Lexer_advance.exit150.i:                          ; preds = %Lexer_advance.exit150.i.sink.split, %end.i142.i
  %791 = load i64, ptr %memberidx2.i.i478, align 4
  %.not1129 = icmp slt i64 %779, %791
  br i1 %.not1129, label %while.entry.i485.preheader, label %while.end.i488

while.entry.i485.preheader:                       ; preds = %Lexer_advance.exit150.i
  %memberidx5.i74.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i75.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry.i485

while.entry.i485:                                 ; preds = %while.entry.i485.preheader, %Lexer_advance.exit81.i
  %792 = phi i64 [ %779, %while.entry.i485.preheader ], [ %834, %Lexer_advance.exit81.i ]
  %793 = phi i64 [ %791, %while.entry.i485.preheader ], [ %835, %Lexer_advance.exit81.i ]
  %794 = add nsw i64 %792, 1
  %795 = icmp slt i64 %794, %793
  br i1 %795, label %if.entry.i124.i, label %Lexer_peek.exit125.i

if.entry.i124.i:                                  ; preds = %while.entry.i485
  %796 = load ptr, ptr %780, align 8
  %797 = getelementptr inbounds i8, ptr %796, i64 %794
  %798 = load i8, ptr %797, align 1
  br label %Lexer_peek.exit125.i

Lexer_peek.exit125.i:                             ; preds = %if.entry.i124.i, %while.entry.i485
  %common.ret.op.i123.i = phi i8 [ %798, %if.entry.i124.i ], [ 0, %while.entry.i485 ]
  %799 = add nsw i64 %792, 2
  %800 = icmp slt i64 %799, %793
  br i1 %800, label %Lexer_peek.exit119.i, label %ifend3.i490

Lexer_peek.exit119.i:                             ; preds = %Lexer_peek.exit125.i
  %801 = icmp eq i8 %common.ret.op.i123.i, 42
  %802 = load ptr, ptr %780, align 8
  %803 = getelementptr inbounds i8, ptr %802, i64 %799
  %804 = load i8, ptr %803, align 1
  %805 = icmp eq i8 %804, 47
  %806 = and i1 %801, %805
  br i1 %806, label %while.end.i488, label %ifend3.i490

while.end.i488:                                   ; preds = %Lexer_advance.exit81.i, %Lexer_peek.exit119.i, %Lexer_advance.exit150.i
  %807 = phi i64 [ %791, %Lexer_advance.exit150.i ], [ %835, %Lexer_advance.exit81.i ], [ %793, %Lexer_peek.exit119.i ]
  %808 = phi i64 [ %779, %Lexer_advance.exit150.i ], [ %834, %Lexer_advance.exit81.i ], [ %792, %Lexer_peek.exit119.i ]
  %.not1132 = icmp slt i64 %808, %807
  br i1 %.not1132, label %end.i105.i, label %end.i105.i.thread

end.i105.i.thread:                                ; preds = %while.end.i488
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit113.i

end.i105.i:                                       ; preds = %while.end.i488
  %809 = add nsw i64 %808, 1
  store i64 %809, ptr %memberidx.i.i476, align 4
  %810 = load ptr, ptr %780, align 8
  %811 = getelementptr inbounds i8, ptr %810, i64 %809
  %812 = load i8, ptr %811, align 1
  store i8 %812, ptr %0, align 1
  switch i8 %812, label %if.entry9.i112.i [
    i8 10, label %if.entry.i108.i
    i8 0, label %Lexer_advance.exit113.i
  ]

if.entry.i108.i:                                  ; preds = %end.i105.i
  %memberidx5.i106.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i106.i, align 4
  %memberidx6.i107.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %813 = load i64, ptr %memberidx6.i107.i, align 4
  %814 = add nsw i64 %813, 1
  store i64 %814, ptr %memberidx6.i107.i, align 4
  br label %Lexer_advance.exit113.i

if.entry9.i112.i:                                 ; preds = %end.i105.i
  %memberidx12.i111.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %815 = load i64, ptr %memberidx12.i111.i, align 4
  %816 = add nsw i64 %815, 1
  store i64 %816, ptr %memberidx12.i111.i, align 4
  br label %Lexer_advance.exit113.i

Lexer_advance.exit113.i:                          ; preds = %end.i105.i.thread, %end.i105.i, %if.entry9.i112.i, %if.entry.i108.i
  %817 = phi i64 [ %808, %end.i105.i.thread ], [ %809, %end.i105.i ], [ %809, %if.entry9.i112.i ], [ %809, %if.entry.i108.i ]
  %818 = load i64, ptr %memberidx2.i.i478, align 4
  %.not1133 = icmp slt i64 %817, %818
  br i1 %.not1133, label %end.i89.i, label %end.i89.i.thread

end.i89.i.thread:                                 ; preds = %Lexer_advance.exit113.i
  store i8 0, ptr %0, align 1
  br label %if.entry39

end.i89.i:                                        ; preds = %Lexer_advance.exit113.i
  %819 = add nsw i64 %817, 1
  store i64 %819, ptr %memberidx.i.i476, align 4
  %820 = load ptr, ptr %780, align 8
  %821 = getelementptr inbounds i8, ptr %820, i64 %819
  %822 = load i8, ptr %821, align 1
  store i8 %822, ptr %0, align 1
  switch i8 %822, label %if.entry9.i96.i [
    i8 10, label %if.entry.i92.i
    i8 0, label %if.entry39
  ]

if.entry.i92.i:                                   ; preds = %end.i89.i
  %memberidx5.i90.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i90.i, align 4
  %memberidx6.i91.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %823 = load i64, ptr %memberidx6.i91.i, align 4
  %824 = add nsw i64 %823, 1
  store i64 %824, ptr %memberidx6.i91.i, align 4
  br label %if.entry39

if.entry9.i96.i:                                  ; preds = %end.i89.i
  %memberidx12.i95.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %825 = load i64, ptr %memberidx12.i95.i, align 4
  %826 = add nsw i64 %825, 1
  store i64 %826, ptr %memberidx12.i95.i, align 4
  br label %if.entry39

ifend3.i490:                                      ; preds = %Lexer_peek.exit125.i, %Lexer_peek.exit119.i
  %.not1130 = icmp slt i64 %792, %793
  br i1 %.not1130, label %end.i73.i, label %end.i73.i.thread

end.i73.i.thread:                                 ; preds = %ifend3.i490
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit81.i

end.i73.i:                                        ; preds = %ifend3.i490
  store i64 %794, ptr %memberidx.i.i476, align 4
  %827 = load ptr, ptr %780, align 8
  %828 = getelementptr inbounds i8, ptr %827, i64 %794
  %829 = load i8, ptr %828, align 1
  store i8 %829, ptr %0, align 1
  switch i8 %829, label %if.entry9.i80.i [
    i8 10, label %if.entry.i76.i
    i8 0, label %Lexer_advance.exit81.i
  ]

if.entry.i76.i:                                   ; preds = %end.i73.i
  store i64 0, ptr %memberidx5.i74.i, align 4
  %830 = load i64, ptr %memberidx6.i75.i, align 4
  %831 = add nsw i64 %830, 1
  store i64 %831, ptr %memberidx6.i75.i, align 4
  br label %Lexer_advance.exit81.i

if.entry9.i80.i:                                  ; preds = %end.i73.i
  %832 = load i64, ptr %memberidx5.i74.i, align 4
  %833 = add nsw i64 %832, 1
  store i64 %833, ptr %memberidx5.i74.i, align 4
  br label %Lexer_advance.exit81.i

Lexer_advance.exit81.i:                           ; preds = %end.i73.i.thread, %end.i73.i, %if.entry9.i80.i, %if.entry.i76.i
  %834 = phi i64 [ %792, %end.i73.i.thread ], [ %794, %end.i73.i ], [ %794, %if.entry9.i80.i ], [ %794, %if.entry.i76.i ]
  %835 = load i64, ptr %memberidx2.i.i478, align 4
  %.not1131 = icmp slt i64 %834, %835
  br i1 %.not1131, label %while.entry.i485, label %while.end.i488

end.i54.i:                                        ; preds = %Lexer_peek.exit.i481
  store i64 %779, ptr %memberidx.i.i476, align 4
  %836 = load ptr, ptr %780, align 8
  %837 = getelementptr inbounds i8, ptr %836, i64 %779
  %838 = load i8, ptr %837, align 1
  store i8 %838, ptr %0, align 1
  switch i8 %838, label %if.entry9.i61.i [
    i8 10, label %if.entry.i57.i
    i8 0, label %Lexer_advance.exit62.i
  ]

if.entry.i57.i:                                   ; preds = %end.i54.i
  %memberidx5.i55.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i55.i, align 4
  %memberidx6.i56.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit62.i.sink.split

if.entry9.i61.i:                                  ; preds = %end.i54.i
  %memberidx12.i60.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit62.i.sink.split

Lexer_advance.exit62.i.sink.split:                ; preds = %if.entry.i57.i, %if.entry9.i61.i
  %memberidx12.i60.i.sink1322 = phi ptr [ %memberidx12.i60.i, %if.entry9.i61.i ], [ %memberidx6.i56.i, %if.entry.i57.i ]
  %839 = load i64, ptr %memberidx12.i60.i.sink1322, align 4
  %840 = add nsw i64 %839, 1
  store i64 %840, ptr %memberidx12.i60.i.sink1322, align 4
  br label %Lexer_advance.exit62.i

Lexer_advance.exit62.i:                           ; preds = %Lexer_advance.exit62.i.sink.split, %end.i54.i
  %841 = add nsw i64 %778, 2
  %842 = load i64, ptr %memberidx2.i.i478, align 4
  %843 = icmp slt i64 %841, %842
  br i1 %843, label %if.entry.i45.i, label %Lexer_peek.exit46.i

if.entry.i45.i:                                   ; preds = %Lexer_advance.exit62.i
  %844 = load ptr, ptr %780, align 8
  %845 = getelementptr inbounds i8, ptr %844, i64 %841
  %846 = load i8, ptr %845, align 1
  %phi.cmp1126 = icmp eq i8 %846, 10
  br label %Lexer_peek.exit46.i

Lexer_peek.exit46.i:                              ; preds = %if.entry.i45.i, %Lexer_advance.exit62.i
  %common.ret.op.i44.i = phi i1 [ %phi.cmp1126, %if.entry.i45.i ], [ false, %Lexer_advance.exit62.i ]
  %847 = icmp sge i64 %779, %842
  %848 = or i1 %847, %common.ret.op.i44.i
  br i1 %848, label %if.entry39, label %while.entry7.i.preheader

while.entry7.i.preheader:                         ; preds = %Lexer_peek.exit46.i
  %memberidx5.i.i500 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %memberidx6.i.i501 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %while.entry7.i

while.entry7.i:                                   ; preds = %while.entry7.i.preheader, %Lexer_peek.exit34.i
  %849 = phi i64 [ %779, %while.entry7.i.preheader ], [ %859, %Lexer_peek.exit34.i ]
  %850 = phi i64 [ %842, %while.entry7.i.preheader ], [ %861, %Lexer_peek.exit34.i ]
  %.not1127 = icmp slt i64 %849, %850
  br i1 %.not1127, label %end.i.i499, label %end.i.i499.thread

end.i.i499.thread:                                ; preds = %while.entry7.i
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i506

end.i.i499:                                       ; preds = %while.entry7.i
  %851 = add nsw i64 %849, 1
  store i64 %851, ptr %memberidx.i.i476, align 4
  %852 = load ptr, ptr %780, align 8
  %853 = getelementptr inbounds i8, ptr %852, i64 %851
  %854 = load i8, ptr %853, align 1
  store i8 %854, ptr %0, align 1
  switch i8 %854, label %if.entry9.i.i505 [
    i8 10, label %if.entry.i37.i
    i8 0, label %Lexer_advance.exit.i506
  ]

if.entry.i37.i:                                   ; preds = %end.i.i499
  store i64 0, ptr %memberidx5.i.i500, align 4
  %855 = load i64, ptr %memberidx6.i.i501, align 4
  %856 = add nsw i64 %855, 1
  store i64 %856, ptr %memberidx6.i.i501, align 4
  br label %Lexer_advance.exit.i506

if.entry9.i.i505:                                 ; preds = %end.i.i499
  %857 = load i64, ptr %memberidx5.i.i500, align 4
  %858 = add nsw i64 %857, 1
  store i64 %858, ptr %memberidx5.i.i500, align 4
  br label %Lexer_advance.exit.i506

Lexer_advance.exit.i506:                          ; preds = %end.i.i499.thread, %end.i.i499, %if.entry9.i.i505, %if.entry.i37.i
  %859 = phi i64 [ %849, %end.i.i499.thread ], [ %851, %end.i.i499 ], [ %851, %if.entry9.i.i505 ], [ %851, %if.entry.i37.i ]
  %860 = add nsw i64 %859, 1
  %861 = load i64, ptr %memberidx2.i.i478, align 4
  %862 = icmp slt i64 %860, %861
  br i1 %862, label %if.entry.i33.i, label %Lexer_peek.exit34.i

if.entry.i33.i:                                   ; preds = %Lexer_advance.exit.i506
  %863 = load ptr, ptr %780, align 8
  %864 = getelementptr inbounds i8, ptr %863, i64 %860
  %865 = load i8, ptr %864, align 1
  br label %Lexer_peek.exit34.i

Lexer_peek.exit34.i:                              ; preds = %if.entry.i33.i, %Lexer_advance.exit.i506
  %common.ret.op.i32.i = phi i8 [ %865, %if.entry.i33.i ], [ 0, %Lexer_advance.exit.i506 ]
  %866 = icmp eq i8 %common.ret.op.i32.i, 10
  %867 = icmp sge i64 %859, %861
  %868 = or i1 %867, %866
  br i1 %868, label %if.entry39, label %while.entry7.i

if.entry39:                                       ; preds = %Lexer_peek.exit34.i, %end.i89.i.thread, %Lexer_peek.exit46.i, %end.i89.i, %if.entry9.i96.i, %if.entry.i92.i
  %869 = phi i64 [ %817, %end.i89.i.thread ], [ %779, %Lexer_peek.exit46.i ], [ %819, %end.i89.i ], [ %819, %if.entry9.i96.i ], [ %819, %if.entry.i92.i ], [ %859, %Lexer_peek.exit34.i ]
  %870 = load i64, ptr %memberidx2.i.i478, align 4
  %.not1124 = icmp slt i64 %869, %870
  br i1 %.not1124, label %end.i514, label %end.i514.thread

end.i514.thread:                                  ; preds = %if.entry39
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit523

end.i514:                                         ; preds = %if.entry39
  %871 = add nsw i64 %869, 1
  store i64 %871, ptr %memberidx.i.i476, align 4
  %872 = load ptr, ptr %780, align 8
  %873 = getelementptr inbounds i8, ptr %872, i64 %871
  %874 = load i8, ptr %873, align 1
  store i8 %874, ptr %0, align 1
  switch i8 %874, label %if.entry9.i522 [
    i8 10, label %if.entry.i517
    i8 0, label %Lexer_advance.exit523
  ]

if.entry.i517:                                    ; preds = %end.i514
  %memberidx5.i515 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i515, align 4
  %memberidx6.i516 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %875 = load i64, ptr %memberidx6.i516, align 4
  %876 = add nsw i64 %875, 1
  store i64 %876, ptr %memberidx6.i516, align 4
  br label %Lexer_advance.exit523

if.entry9.i522:                                   ; preds = %end.i514
  %memberidx12.i521 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %877 = load i64, ptr %memberidx12.i521, align 4
  %878 = add nsw i64 %877, 1
  store i64 %878, ptr %memberidx12.i521, align 4
  br label %Lexer_advance.exit523

Lexer_advance.exit523:                            ; preds = %end.i514.thread, %end.i514, %if.entry.i517, %if.entry9.i522
  %879 = tail call fastcc ptr @Lexer_lex_token(ptr nonnull %0)
  br label %common.ret

if.entry.i536:                                    ; preds = %Lexer_peek.exit.i481
  %.not1123 = icmp slt i64 %778, %781
  br i1 %.not1123, label %end.i.i541, label %end.i.i541.thread

end.i.i541.thread:                                ; preds = %if.entry.i536
  store i8 0, ptr %0, align 1
  br label %Lexer_advance.exit.i556

end.i.i541:                                       ; preds = %if.entry.i536
  store i64 %779, ptr %memberidx.i.i476, align 4
  %880 = load ptr, ptr %780, align 8
  %881 = getelementptr inbounds i8, ptr %880, i64 %779
  %882 = load i8, ptr %881, align 1
  store i8 %882, ptr %0, align 1
  switch i8 %882, label %if.entry9.i.i548 [
    i8 10, label %if.entry.i11.i544
    i8 0, label %Lexer_advance.exit.i556
  ]

if.entry.i11.i544:                                ; preds = %end.i.i541
  %memberidx5.i.i542 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i542, align 4
  %memberidx6.i.i543 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %883 = load i64, ptr %memberidx6.i.i543, align 4
  %884 = add nsw i64 %883, 1
  store i64 %884, ptr %memberidx6.i.i543, align 4
  br label %Lexer_advance.exit.i556

if.entry9.i.i548:                                 ; preds = %end.i.i541
  %memberidx12.i.i547 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %885 = load i64, ptr %memberidx12.i.i547, align 4
  %886 = add nsw i64 %885, 1
  store i64 %886, ptr %memberidx12.i.i547, align 4
  br label %Lexer_advance.exit.i556

Lexer_advance.exit.i556:                          ; preds = %end.i.i541.thread, %end.i.i541, %if.entry9.i.i548, %if.entry.i11.i544
  %887 = tail call ptr @malloc(i32 16)
  %888 = tail call ptr @malloc(i32 32)
  %889 = load i64, ptr %memberidx.i.i476, align 4
  %890 = add nsw i64 %889, -1
  %891 = add nsw i64 %889, 1
  %memberidx2.i14.i550 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %892 = load i64, ptr %memberidx2.i14.i550, align 4
  %893 = add i64 %892, -2
  %memberidx3.i15.i551 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %894 = load i64, ptr %memberidx3.i15.i551, align 4
  store i64 %890, ptr %888, align 4
  %memberidx1.i.i16.i552 = getelementptr inbounds %FloRange, ptr %888, i64 0, i32 1
  store i64 %891, ptr %memberidx1.i.i16.i552, align 4
  %memberidx2.i.i17.i553 = getelementptr inbounds %FloRange, ptr %888, i64 0, i32 2
  store i64 %893, ptr %memberidx2.i.i17.i553, align 4
  %memberidx3.i.i18.i554 = getelementptr inbounds %FloRange, ptr %888, i64 0, i32 3
  store i64 %894, ptr %memberidx3.i.i18.i554, align 4
  store i64 15, ptr %887, align 4
  %memberidx1.i12.i555 = getelementptr inbounds %Token, ptr %887, i64 0, i32 1
  store ptr %888, ptr %memberidx1.i12.i555, align 8
  br label %common.ret

ifend.i564:                                       ; preds = %Lexer_peek.exit.i481, %if.entry36
  %895 = tail call ptr @malloc(i32 16)
  %896 = tail call ptr @malloc(i32 32)
  %897 = load i64, ptr %memberidx.i.i476, align 4
  %898 = add nsw i64 %897, 1
  %memberidx2.i6.i558 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %899 = load i64, ptr %memberidx2.i6.i558, align 4
  %900 = add i64 %899, -1
  %memberidx3.i.i559 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %901 = load i64, ptr %memberidx3.i.i559, align 4
  store i64 %897, ptr %896, align 4
  %memberidx1.i.i.i560 = getelementptr inbounds %FloRange, ptr %896, i64 0, i32 1
  store i64 %898, ptr %memberidx1.i.i.i560, align 4
  %memberidx2.i.i.i561 = getelementptr inbounds %FloRange, ptr %896, i64 0, i32 2
  store i64 %900, ptr %memberidx2.i.i.i561, align 4
  %memberidx3.i.i.i562 = getelementptr inbounds %FloRange, ptr %896, i64 0, i32 3
  store i64 %901, ptr %memberidx3.i.i.i562, align 4
  store i64 7, ptr %895, align 4
  %memberidx1.i4.i563 = getelementptr inbounds %Token, ptr %895, i64 0, i32 1
  store ptr %896, ptr %memberidx1.i4.i563, align 8
  br label %common.ret

if.entry42:                                       ; preds = %ifend11
  %902 = tail call ptr @malloc(i32 16)
  %903 = tail call ptr @malloc(i32 32)
  %memberidx.i565 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %904 = load i64, ptr %memberidx.i565, align 4
  %905 = add nsw i64 %904, 1
  %memberidx2.i566 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %906 = load i64, ptr %memberidx2.i566, align 4
  %907 = add i64 %906, -1
  %memberidx3.i567 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %908 = load i64, ptr %memberidx3.i567, align 4
  store i64 %904, ptr %903, align 4
  %memberidx1.i.i568 = getelementptr inbounds %FloRange, ptr %903, i64 0, i32 1
  store i64 %905, ptr %memberidx1.i.i568, align 4
  %memberidx2.i.i569 = getelementptr inbounds %FloRange, ptr %903, i64 0, i32 2
  store i64 %907, ptr %memberidx2.i.i569, align 4
  %memberidx3.i.i570 = getelementptr inbounds %FloRange, ptr %903, i64 0, i32 3
  store i64 %908, ptr %memberidx3.i.i570, align 4
  store i64 25, ptr %902, align 4
  %memberidx1.i571 = getelementptr inbounds %Token, ptr %902, i64 0, i32 1
  store ptr %903, ptr %memberidx1.i571, align 8
  br label %common.ret

if.entry45:                                       ; preds = %ifend11
  %909 = tail call ptr @malloc(i32 16)
  %910 = tail call ptr @malloc(i32 32)
  %memberidx.i572 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %911 = load i64, ptr %memberidx.i572, align 4
  %912 = add nsw i64 %911, 1
  %memberidx2.i573 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %913 = load i64, ptr %memberidx2.i573, align 4
  %914 = add i64 %913, -1
  %memberidx3.i574 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %915 = load i64, ptr %memberidx3.i574, align 4
  store i64 %911, ptr %910, align 4
  %memberidx1.i.i575 = getelementptr inbounds %FloRange, ptr %910, i64 0, i32 1
  store i64 %912, ptr %memberidx1.i.i575, align 4
  %memberidx2.i.i576 = getelementptr inbounds %FloRange, ptr %910, i64 0, i32 2
  store i64 %914, ptr %memberidx2.i.i576, align 4
  %memberidx3.i.i577 = getelementptr inbounds %FloRange, ptr %910, i64 0, i32 3
  store i64 %915, ptr %memberidx3.i.i577, align 4
  store i64 26, ptr %909, align 4
  %memberidx1.i578 = getelementptr inbounds %Token, ptr %909, i64 0, i32 1
  store ptr %910, ptr %memberidx1.i578, align 8
  br label %common.ret

if.entry48:                                       ; preds = %ifend11
  %916 = tail call ptr @malloc(i32 16)
  %917 = tail call ptr @malloc(i32 32)
  %memberidx.i579 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %918 = load i64, ptr %memberidx.i579, align 4
  %919 = add nsw i64 %918, 1
  %memberidx2.i580 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %920 = load i64, ptr %memberidx2.i580, align 4
  %921 = add i64 %920, -1
  %memberidx3.i581 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %922 = load i64, ptr %memberidx3.i581, align 4
  store i64 %918, ptr %917, align 4
  %memberidx1.i.i582 = getelementptr inbounds %FloRange, ptr %917, i64 0, i32 1
  store i64 %919, ptr %memberidx1.i.i582, align 4
  %memberidx2.i.i583 = getelementptr inbounds %FloRange, ptr %917, i64 0, i32 2
  store i64 %921, ptr %memberidx2.i.i583, align 4
  %memberidx3.i.i584 = getelementptr inbounds %FloRange, ptr %917, i64 0, i32 3
  store i64 %922, ptr %memberidx3.i.i584, align 4
  store i64 27, ptr %916, align 4
  %memberidx1.i585 = getelementptr inbounds %Token, ptr %916, i64 0, i32 1
  store ptr %917, ptr %memberidx1.i585, align 8
  br label %common.ret

if.entry51:                                       ; preds = %ifend11
  %923 = tail call ptr @malloc(i32 16)
  %924 = tail call ptr @malloc(i32 32)
  %memberidx.i586 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %925 = load i64, ptr %memberidx.i586, align 4
  %926 = add nsw i64 %925, 1
  %memberidx2.i587 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %927 = load i64, ptr %memberidx2.i587, align 4
  %928 = add i64 %927, -1
  %memberidx3.i588 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %929 = load i64, ptr %memberidx3.i588, align 4
  store i64 %925, ptr %924, align 4
  %memberidx1.i.i589 = getelementptr inbounds %FloRange, ptr %924, i64 0, i32 1
  store i64 %926, ptr %memberidx1.i.i589, align 4
  %memberidx2.i.i590 = getelementptr inbounds %FloRange, ptr %924, i64 0, i32 2
  store i64 %928, ptr %memberidx2.i.i590, align 4
  %memberidx3.i.i591 = getelementptr inbounds %FloRange, ptr %924, i64 0, i32 3
  store i64 %929, ptr %memberidx3.i.i591, align 4
  store i64 28, ptr %923, align 4
  %memberidx1.i592 = getelementptr inbounds %Token, ptr %923, i64 0, i32 1
  store ptr %924, ptr %memberidx1.i592, align 8
  br label %common.ret

if.entry54:                                       ; preds = %ifend11
  %930 = tail call ptr @malloc(i32 16)
  %931 = tail call ptr @malloc(i32 32)
  %memberidx.i593 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %932 = load i64, ptr %memberidx.i593, align 4
  %933 = add nsw i64 %932, 1
  %memberidx2.i594 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %934 = load i64, ptr %memberidx2.i594, align 4
  %935 = add i64 %934, -1
  %memberidx3.i595 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %936 = load i64, ptr %memberidx3.i595, align 4
  store i64 %932, ptr %931, align 4
  %memberidx1.i.i596 = getelementptr inbounds %FloRange, ptr %931, i64 0, i32 1
  store i64 %933, ptr %memberidx1.i.i596, align 4
  %memberidx2.i.i597 = getelementptr inbounds %FloRange, ptr %931, i64 0, i32 2
  store i64 %935, ptr %memberidx2.i.i597, align 4
  %memberidx3.i.i598 = getelementptr inbounds %FloRange, ptr %931, i64 0, i32 3
  store i64 %936, ptr %memberidx3.i.i598, align 4
  store i64 29, ptr %930, align 4
  %memberidx1.i599 = getelementptr inbounds %Token, ptr %930, i64 0, i32 1
  store ptr %931, ptr %memberidx1.i599, align 8
  br label %common.ret

if.entry57:                                       ; preds = %ifend11
  %937 = tail call ptr @malloc(i32 16)
  %938 = tail call ptr @malloc(i32 32)
  %memberidx.i600 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %939 = load i64, ptr %memberidx.i600, align 4
  %940 = add nsw i64 %939, 1
  %memberidx2.i601 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %941 = load i64, ptr %memberidx2.i601, align 4
  %942 = add i64 %941, -1
  %memberidx3.i602 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %943 = load i64, ptr %memberidx3.i602, align 4
  store i64 %939, ptr %938, align 4
  %memberidx1.i.i603 = getelementptr inbounds %FloRange, ptr %938, i64 0, i32 1
  store i64 %940, ptr %memberidx1.i.i603, align 4
  %memberidx2.i.i604 = getelementptr inbounds %FloRange, ptr %938, i64 0, i32 2
  store i64 %942, ptr %memberidx2.i.i604, align 4
  %memberidx3.i.i605 = getelementptr inbounds %FloRange, ptr %938, i64 0, i32 3
  store i64 %943, ptr %memberidx3.i.i605, align 4
  store i64 30, ptr %937, align 4
  %memberidx1.i606 = getelementptr inbounds %Token, ptr %937, i64 0, i32 1
  store ptr %938, ptr %memberidx1.i606, align 8
  br label %common.ret

if.entry60:                                       ; preds = %ifend11, %ifend11
  %944 = tail call ptr @malloc(i32 16)
  %945 = tail call ptr @malloc(i32 32)
  %memberidx.i607 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %946 = load i64, ptr %memberidx.i607, align 4
  %947 = add nsw i64 %946, 1
  %memberidx2.i608 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %948 = load i64, ptr %memberidx2.i608, align 4
  %949 = add i64 %948, -1
  %memberidx3.i609 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %950 = load i64, ptr %memberidx3.i609, align 4
  store i64 %946, ptr %945, align 4
  %memberidx1.i.i610 = getelementptr inbounds %FloRange, ptr %945, i64 0, i32 1
  store i64 %947, ptr %memberidx1.i.i610, align 4
  %memberidx2.i.i611 = getelementptr inbounds %FloRange, ptr %945, i64 0, i32 2
  store i64 %949, ptr %memberidx2.i.i611, align 4
  %memberidx3.i.i612 = getelementptr inbounds %FloRange, ptr %945, i64 0, i32 3
  store i64 %950, ptr %memberidx3.i.i612, align 4
  store i64 33, ptr %944, align 4
  %memberidx1.i613 = getelementptr inbounds %Token, ptr %944, i64 0, i32 1
  store ptr %945, ptr %memberidx1.i613, align 8
  br label %common.ret

if.entry63:                                       ; preds = %ifend11
  %memberidx.i.i.i614 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %951 = load i64, ptr %memberidx.i.i.i614, align 4
  %memberidx1.i.i.i615 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %952 = load ptr, ptr %memberidx1.i.i.i615, align 8
  %memberidx2.i.i.i616 = getelementptr inbounds %String, ptr %952, i64 0, i32 1
  %953 = load i64, ptr %memberidx2.i.i.i616, align 4
  %.not1119 = icmp slt i64 %951, %953
  br i1 %.not1119, label %end.i.i621, label %end.i.i621.thread

end.i.i621.thread:                                ; preds = %if.entry63
  store i8 0, ptr %0, align 1
  br label %ifend.i646

end.i.i621:                                       ; preds = %if.entry63
  %954 = add nsw i64 %951, 1
  store i64 %954, ptr %memberidx.i.i.i614, align 4
  %955 = load ptr, ptr %952, align 8
  %956 = getelementptr inbounds i8, ptr %955, i64 %954
  %957 = load i8, ptr %956, align 1
  store i8 %957, ptr %0, align 1
  switch i8 %957, label %Lexer_advance.exit.i629 [
    i8 10, label %if.entry.i.i624
    i8 0, label %ifend.i646
  ]

if.entry.i.i624:                                  ; preds = %end.i.i621
  %memberidx5.i.i622 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i622, align 4
  %memberidx6.i.i623 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %958 = load i64, ptr %memberidx6.i.i623, align 4
  %959 = add nsw i64 %958, 1
  store i64 %959, ptr %memberidx6.i.i623, align 4
  br label %ifend.i646

Lexer_advance.exit.i629:                          ; preds = %end.i.i621
  %memberidx12.i.i627 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %960 = load i64, ptr %memberidx12.i.i627, align 4
  %961 = add nsw i64 %960, 1
  store i64 %961, ptr %memberidx12.i.i627, align 4
  %962 = icmp eq i8 %957, 92
  br i1 %962, label %if.entry.i632, label %ifend.i646

if.entry.i632:                                    ; preds = %Lexer_advance.exit.i629
  %963 = load i64, ptr %memberidx2.i.i.i616, align 4
  %.not1121 = icmp slt i64 %954, %963
  br i1 %.not1121, label %end.i22.i, label %end.i22.i.thread

end.i22.i.thread:                                 ; preds = %if.entry.i632
  store i8 0, ptr %0, align 1
  br label %ifend27.i.i643

end.i22.i:                                        ; preds = %if.entry.i632
  %964 = add nsw i64 %951, 2
  store i64 %964, ptr %memberidx.i.i.i614, align 4
  %965 = load ptr, ptr %952, align 8
  %966 = getelementptr inbounds i8, ptr %965, i64 %964
  %967 = load i8, ptr %966, align 1
  store i8 %967, ptr %0, align 1
  switch i8 %967, label %Lexer_advance.exit30.i [
    i8 10, label %if.entry.i25.i
    i8 0, label %ifend27.i.i643
  ]

if.entry.i25.i:                                   ; preds = %end.i22.i
  store i64 0, ptr %memberidx12.i.i627, align 4
  %memberidx6.i24.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %968 = load i64, ptr %memberidx6.i24.i, align 4
  %969 = add nsw i64 %968, 1
  store i64 %969, ptr %memberidx6.i24.i, align 4
  br label %ifend27.i.i643

Lexer_advance.exit30.i:                           ; preds = %end.i22.i
  %970 = add nsw i64 %960, 2
  store i64 %970, ptr %memberidx12.i.i627, align 4
  switch i8 %967, label %ifend27.i.i643 [
    i8 97, label %ifend.i646
    i8 98, label %get_escape_char.exit.i.fold.split
    i8 116, label %get_escape_char.exit.i.fold.split1185
    i8 102, label %get_escape_char.exit.i.fold.split1186
    i8 110, label %get_escape_char.exit.i.fold.split1187
    i8 114, label %get_escape_char.exit.i.fold.split1188
    i8 118, label %get_escape_char.exit.i.fold.split1189
    i8 48, label %get_escape_char.exit.i.fold.split1190
    i8 39, label %get_escape_char.exit.i.fold.split1191
    i8 34, label %get_escape_char.exit.i.fold.split1192
  ]

ifend27.i.i643:                                   ; preds = %if.entry.i25.i, %end.i22.i, %end.i22.i.thread, %Lexer_advance.exit30.i
  %971 = phi i64 [ %964, %Lexer_advance.exit30.i ], [ %964, %if.entry.i25.i ], [ %964, %end.i22.i ], [ %954, %end.i22.i.thread ]
  %ternary.i21.i12261228 = phi i8 [ %967, %Lexer_advance.exit30.i ], [ 10, %if.entry.i25.i ], [ %967, %end.i22.i ], [ 0, %end.i22.i.thread ]
  br label %ifend.i646

get_escape_char.exit.i.fold.split:                ; preds = %Lexer_advance.exit30.i
  br label %ifend.i646

get_escape_char.exit.i.fold.split1185:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i646

get_escape_char.exit.i.fold.split1186:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i646

get_escape_char.exit.i.fold.split1187:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i646

get_escape_char.exit.i.fold.split1188:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i646

get_escape_char.exit.i.fold.split1189:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i646

get_escape_char.exit.i.fold.split1190:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i646

get_escape_char.exit.i.fold.split1191:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i646

get_escape_char.exit.i.fold.split1192:            ; preds = %Lexer_advance.exit30.i
  br label %ifend.i646

ifend.i646:                                       ; preds = %if.entry.i.i624, %end.i.i621, %end.i.i621.thread, %ifend27.i.i643, %get_escape_char.exit.i.fold.split, %get_escape_char.exit.i.fold.split1185, %get_escape_char.exit.i.fold.split1186, %get_escape_char.exit.i.fold.split1187, %get_escape_char.exit.i.fold.split1188, %get_escape_char.exit.i.fold.split1189, %get_escape_char.exit.i.fold.split1190, %get_escape_char.exit.i.fold.split1191, %get_escape_char.exit.i.fold.split1192, %Lexer_advance.exit30.i, %Lexer_advance.exit.i629
  %972 = phi i64 [ %954, %Lexer_advance.exit.i629 ], [ %964, %Lexer_advance.exit30.i ], [ %964, %get_escape_char.exit.i.fold.split1192 ], [ %964, %get_escape_char.exit.i.fold.split1191 ], [ %964, %get_escape_char.exit.i.fold.split1190 ], [ %964, %get_escape_char.exit.i.fold.split1189 ], [ %964, %get_escape_char.exit.i.fold.split1188 ], [ %964, %get_escape_char.exit.i.fold.split1187 ], [ %964, %get_escape_char.exit.i.fold.split1186 ], [ %964, %get_escape_char.exit.i.fold.split1185 ], [ %964, %get_escape_char.exit.i.fold.split ], [ %971, %ifend27.i.i643 ], [ %951, %end.i.i621.thread ], [ %954, %end.i.i621 ], [ %954, %if.entry.i.i624 ]
  %length.0.i645 = phi i64 [ 3, %Lexer_advance.exit.i629 ], [ 5, %Lexer_advance.exit30.i ], [ 5, %get_escape_char.exit.i.fold.split1192 ], [ 5, %get_escape_char.exit.i.fold.split1191 ], [ 5, %get_escape_char.exit.i.fold.split1190 ], [ 5, %get_escape_char.exit.i.fold.split1189 ], [ 5, %get_escape_char.exit.i.fold.split1188 ], [ 5, %get_escape_char.exit.i.fold.split1187 ], [ 5, %get_escape_char.exit.i.fold.split1186 ], [ 5, %get_escape_char.exit.i.fold.split1185 ], [ 5, %get_escape_char.exit.i.fold.split ], [ 5, %ifend27.i.i643 ], [ 3, %end.i.i621.thread ], [ 3, %end.i.i621 ], [ 3, %if.entry.i.i624 ]
  %value.0.i = phi i8 [ %957, %Lexer_advance.exit.i629 ], [ 7, %Lexer_advance.exit30.i ], [ %967, %get_escape_char.exit.i.fold.split1192 ], [ %967, %get_escape_char.exit.i.fold.split1191 ], [ 0, %get_escape_char.exit.i.fold.split1190 ], [ 11, %get_escape_char.exit.i.fold.split1189 ], [ 13, %get_escape_char.exit.i.fold.split1188 ], [ 10, %get_escape_char.exit.i.fold.split1187 ], [ 12, %get_escape_char.exit.i.fold.split1186 ], [ 9, %get_escape_char.exit.i.fold.split1185 ], [ 8, %get_escape_char.exit.i.fold.split ], [ %ternary.i21.i12261228, %ifend27.i.i643 ], [ 0, %end.i.i621.thread ], [ %957, %end.i.i621 ], [ 10, %if.entry.i.i624 ]
  %973 = load i64, ptr %memberidx2.i.i.i616, align 4
  %.not1120 = icmp slt i64 %972, %973
  br i1 %.not1120, label %end.i38.i, label %end.i38.i.thread

end.i38.i.thread:                                 ; preds = %ifend.i646
  store i8 0, ptr %0, align 1
  br label %Lexer_char_token.exit

end.i38.i:                                        ; preds = %ifend.i646
  %974 = add nsw i64 %972, 1
  store i64 %974, ptr %memberidx.i.i.i614, align 4
  %975 = load ptr, ptr %952, align 8
  %976 = getelementptr inbounds i8, ptr %975, i64 %974
  %977 = load i8, ptr %976, align 1
  store i8 %977, ptr %0, align 1
  switch i8 %977, label %if.entry9.i45.i [
    i8 10, label %if.entry.i41.i
    i8 0, label %Lexer_char_token.exit
  ]

if.entry.i41.i:                                   ; preds = %end.i38.i
  %memberidx5.i39.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i39.i, align 4
  %memberidx6.i40.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %978 = load i64, ptr %memberidx6.i40.i, align 4
  %979 = add nsw i64 %978, 1
  store i64 %979, ptr %memberidx6.i40.i, align 4
  br label %Lexer_char_token.exit

if.entry9.i45.i:                                  ; preds = %end.i38.i
  %memberidx12.i44.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %980 = load i64, ptr %memberidx12.i44.i, align 4
  %981 = add nsw i64 %980, 1
  store i64 %981, ptr %memberidx12.i44.i, align 4
  br label %Lexer_char_token.exit

Lexer_char_token.exit:                            ; preds = %end.i38.i.thread, %end.i38.i, %if.entry.i41.i, %if.entry9.i45.i
  %982 = tail call ptr @malloc(i32 17)
  %983 = tail call ptr @malloc(i32 32)
  %984 = load i64, ptr %memberidx.i.i.i614, align 4
  %985 = sub nsw i64 1, %length.0.i645
  %986 = add i64 %985, %984
  %987 = add nsw i64 %984, 1
  %memberidx2.i12.i648 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %988 = load i64, ptr %memberidx2.i12.i648, align 4
  %989 = sub nuw i64 %988, %length.0.i645
  %memberidx3.i.i649 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %990 = load i64, ptr %memberidx3.i.i649, align 4
  store i64 %986, ptr %983, align 4
  %memberidx1.i.i13.i650 = getelementptr inbounds %FloRange, ptr %983, i64 0, i32 1
  store i64 %987, ptr %memberidx1.i.i13.i650, align 4
  %memberidx2.i.i14.i651 = getelementptr inbounds %FloRange, ptr %983, i64 0, i32 2
  store i64 %989, ptr %memberidx2.i.i14.i651, align 4
  %memberidx3.i.i.i652 = getelementptr inbounds %FloRange, ptr %983, i64 0, i32 3
  store i64 %990, ptr %memberidx3.i.i.i652, align 4
  store i64 35, ptr %982, align 4
  %memberidx1.i.i10.i = getelementptr inbounds %Token, ptr %982, i64 0, i32 1
  store ptr %983, ptr %memberidx1.i.i10.i, align 8
  %memberidx.i.i653 = getelementptr inbounds %CharToken, ptr %982, i64 0, i32 2
  store i8 %value.0.i, ptr %memberidx.i.i653, align 1
  br label %common.ret

if.entry66:                                       ; preds = %ifend11
  %991 = tail call ptr @malloc(i32 16)
  %992 = tail call ptr @malloc(i32 32)
  %memberidx.i654 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %993 = load i64, ptr %memberidx.i654, align 4
  %994 = add nsw i64 %993, 1
  %memberidx2.i655 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %995 = load i64, ptr %memberidx2.i655, align 4
  %996 = add i64 %995, -1
  %memberidx3.i656 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %997 = load i64, ptr %memberidx3.i656, align 4
  store i64 %993, ptr %992, align 4
  %memberidx1.i.i657 = getelementptr inbounds %FloRange, ptr %992, i64 0, i32 1
  store i64 %994, ptr %memberidx1.i.i657, align 4
  %memberidx2.i.i658 = getelementptr inbounds %FloRange, ptr %992, i64 0, i32 2
  store i64 %996, ptr %memberidx2.i.i658, align 4
  %memberidx3.i.i659 = getelementptr inbounds %FloRange, ptr %992, i64 0, i32 3
  store i64 %997, ptr %memberidx3.i.i659, align 4
  store i64 36, ptr %991, align 4
  %memberidx1.i660 = getelementptr inbounds %Token, ptr %991, i64 0, i32 1
  store ptr %992, ptr %memberidx1.i660, align 8
  br label %common.ret

if.entry69:                                       ; preds = %ifend11
  %998 = tail call ptr @malloc(i32 16)
  %999 = tail call ptr @malloc(i32 32)
  %memberidx.i661 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1000 = load i64, ptr %memberidx.i661, align 4
  %1001 = add nsw i64 %1000, 1
  %memberidx2.i662 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1002 = load i64, ptr %memberidx2.i662, align 4
  %1003 = add i64 %1002, -1
  %memberidx3.i663 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1004 = load i64, ptr %memberidx3.i663, align 4
  store i64 %1000, ptr %999, align 4
  %memberidx1.i.i664 = getelementptr inbounds %FloRange, ptr %999, i64 0, i32 1
  store i64 %1001, ptr %memberidx1.i.i664, align 4
  %memberidx2.i.i665 = getelementptr inbounds %FloRange, ptr %999, i64 0, i32 2
  store i64 %1003, ptr %memberidx2.i.i665, align 4
  %memberidx3.i.i666 = getelementptr inbounds %FloRange, ptr %999, i64 0, i32 3
  store i64 %1004, ptr %memberidx3.i.i666, align 4
  store i64 37, ptr %998, align 4
  %memberidx1.i667 = getelementptr inbounds %Token, ptr %998, i64 0, i32 1
  store ptr %999, ptr %memberidx1.i667, align 8
  br label %common.ret

if.entry72:                                       ; preds = %ifend11
  %memberidx.i.i668 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1005 = load i64, ptr %memberidx.i.i668, align 4
  %1006 = add nsw i64 %1005, 1
  %memberidx1.i.i669 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1007 = load ptr, ptr %memberidx1.i.i669, align 8
  %memberidx2.i.i670 = getelementptr inbounds %String, ptr %1007, i64 0, i32 1
  %1008 = load i64, ptr %memberidx2.i.i670, align 4
  %1009 = icmp slt i64 %1006, %1008
  br i1 %1009, label %if.entry.i.i671, label %ifend.i706

if.entry.i.i671:                                  ; preds = %if.entry72
  %1010 = load ptr, ptr %1007, align 8
  %1011 = getelementptr inbounds i8, ptr %1010, i64 %1006
  %1012 = load i8, ptr %1011, align 1
  %phi.cmp1117 = icmp eq i8 %1012, 61
  br i1 %phi.cmp1117, label %end.i.i683, label %ifend.i706

end.i.i683:                                       ; preds = %if.entry.i.i671
  store i64 %1006, ptr %memberidx.i.i668, align 4
  %1013 = load ptr, ptr %1007, align 8
  %1014 = getelementptr inbounds i8, ptr %1013, i64 %1006
  %1015 = load i8, ptr %1014, align 1
  store i8 %1015, ptr %0, align 1
  switch i8 %1015, label %if.entry9.i.i690 [
    i8 10, label %if.entry.i11.i686
    i8 0, label %Lexer_advance.exit.i698
  ]

if.entry.i11.i686:                                ; preds = %end.i.i683
  %memberidx5.i.i684 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i684, align 4
  %memberidx6.i.i685 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i698.sink.split

if.entry9.i.i690:                                 ; preds = %end.i.i683
  %memberidx12.i.i689 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i698.sink.split

Lexer_advance.exit.i698.sink.split:               ; preds = %if.entry.i11.i686, %if.entry9.i.i690
  %memberidx12.i.i689.sink1324 = phi ptr [ %memberidx12.i.i689, %if.entry9.i.i690 ], [ %memberidx6.i.i685, %if.entry.i11.i686 ]
  %1016 = load i64, ptr %memberidx12.i.i689.sink1324, align 4
  %1017 = add nsw i64 %1016, 1
  store i64 %1017, ptr %memberidx12.i.i689.sink1324, align 4
  br label %Lexer_advance.exit.i698

Lexer_advance.exit.i698:                          ; preds = %Lexer_advance.exit.i698.sink.split, %end.i.i683
  %1018 = tail call ptr @malloc(i32 16)
  %1019 = tail call ptr @malloc(i32 32)
  %1020 = load i64, ptr %memberidx.i.i668, align 4
  %1021 = add nsw i64 %1020, -1
  %1022 = add nsw i64 %1020, 1
  %memberidx2.i14.i692 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1023 = load i64, ptr %memberidx2.i14.i692, align 4
  %1024 = add i64 %1023, -2
  %memberidx3.i15.i693 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1025 = load i64, ptr %memberidx3.i15.i693, align 4
  store i64 %1021, ptr %1019, align 4
  %memberidx1.i.i16.i694 = getelementptr inbounds %FloRange, ptr %1019, i64 0, i32 1
  store i64 %1022, ptr %memberidx1.i.i16.i694, align 4
  %memberidx2.i.i17.i695 = getelementptr inbounds %FloRange, ptr %1019, i64 0, i32 2
  store i64 %1024, ptr %memberidx2.i.i17.i695, align 4
  %memberidx3.i.i18.i696 = getelementptr inbounds %FloRange, ptr %1019, i64 0, i32 3
  store i64 %1025, ptr %memberidx3.i.i18.i696, align 4
  store i64 39, ptr %1018, align 4
  %memberidx1.i12.i697 = getelementptr inbounds %Token, ptr %1018, i64 0, i32 1
  store ptr %1019, ptr %memberidx1.i12.i697, align 8
  br label %common.ret

ifend.i706:                                       ; preds = %if.entry72, %if.entry.i.i671
  %1026 = tail call ptr @malloc(i32 16)
  %1027 = tail call ptr @malloc(i32 32)
  %1028 = load i64, ptr %memberidx.i.i668, align 4
  %1029 = add nsw i64 %1028, 1
  %memberidx2.i6.i700 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1030 = load i64, ptr %memberidx2.i6.i700, align 4
  %1031 = add i64 %1030, -1
  %memberidx3.i.i701 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1032 = load i64, ptr %memberidx3.i.i701, align 4
  store i64 %1028, ptr %1027, align 4
  %memberidx1.i.i.i702 = getelementptr inbounds %FloRange, ptr %1027, i64 0, i32 1
  store i64 %1029, ptr %memberidx1.i.i.i702, align 4
  %memberidx2.i.i.i703 = getelementptr inbounds %FloRange, ptr %1027, i64 0, i32 2
  store i64 %1031, ptr %memberidx2.i.i.i703, align 4
  %memberidx3.i.i.i704 = getelementptr inbounds %FloRange, ptr %1027, i64 0, i32 3
  store i64 %1032, ptr %memberidx3.i.i.i704, align 4
  store i64 38, ptr %1026, align 4
  %memberidx1.i4.i705 = getelementptr inbounds %Token, ptr %1026, i64 0, i32 1
  store ptr %1027, ptr %memberidx1.i4.i705, align 8
  br label %common.ret

if.entry75:                                       ; preds = %ifend11
  %memberidx.i.i707 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1033 = load i64, ptr %memberidx.i.i707, align 4
  %1034 = add nsw i64 %1033, 1
  %memberidx1.i.i708 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1035 = load ptr, ptr %memberidx1.i.i708, align 8
  %memberidx2.i.i709 = getelementptr inbounds %String, ptr %1035, i64 0, i32 1
  %1036 = load i64, ptr %memberidx2.i.i709, align 4
  %1037 = icmp slt i64 %1034, %1036
  br i1 %1037, label %if.entry.i.i710, label %ifend.i745

if.entry.i.i710:                                  ; preds = %if.entry75
  %1038 = load ptr, ptr %1035, align 8
  %1039 = getelementptr inbounds i8, ptr %1038, i64 %1034
  %1040 = load i8, ptr %1039, align 1
  %phi.cmp1115 = icmp eq i8 %1040, 61
  br i1 %phi.cmp1115, label %end.i.i722, label %ifend.i745

end.i.i722:                                       ; preds = %if.entry.i.i710
  store i64 %1034, ptr %memberidx.i.i707, align 4
  %1041 = load ptr, ptr %1035, align 8
  %1042 = getelementptr inbounds i8, ptr %1041, i64 %1034
  %1043 = load i8, ptr %1042, align 1
  store i8 %1043, ptr %0, align 1
  switch i8 %1043, label %if.entry9.i.i729 [
    i8 10, label %if.entry.i11.i725
    i8 0, label %Lexer_advance.exit.i737
  ]

if.entry.i11.i725:                                ; preds = %end.i.i722
  %memberidx5.i.i723 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i723, align 4
  %memberidx6.i.i724 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i737.sink.split

if.entry9.i.i729:                                 ; preds = %end.i.i722
  %memberidx12.i.i728 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i737.sink.split

Lexer_advance.exit.i737.sink.split:               ; preds = %if.entry.i11.i725, %if.entry9.i.i729
  %memberidx12.i.i728.sink1326 = phi ptr [ %memberidx12.i.i728, %if.entry9.i.i729 ], [ %memberidx6.i.i724, %if.entry.i11.i725 ]
  %1044 = load i64, ptr %memberidx12.i.i728.sink1326, align 4
  %1045 = add nsw i64 %1044, 1
  store i64 %1045, ptr %memberidx12.i.i728.sink1326, align 4
  br label %Lexer_advance.exit.i737

Lexer_advance.exit.i737:                          ; preds = %Lexer_advance.exit.i737.sink.split, %end.i.i722
  %1046 = tail call ptr @malloc(i32 16)
  %1047 = tail call ptr @malloc(i32 32)
  %1048 = load i64, ptr %memberidx.i.i707, align 4
  %1049 = add nsw i64 %1048, -1
  %1050 = add nsw i64 %1048, 1
  %memberidx2.i14.i731 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1051 = load i64, ptr %memberidx2.i14.i731, align 4
  %1052 = add i64 %1051, -2
  %memberidx3.i15.i732 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1053 = load i64, ptr %memberidx3.i15.i732, align 4
  store i64 %1049, ptr %1047, align 4
  %memberidx1.i.i16.i733 = getelementptr inbounds %FloRange, ptr %1047, i64 0, i32 1
  store i64 %1050, ptr %memberidx1.i.i16.i733, align 4
  %memberidx2.i.i17.i734 = getelementptr inbounds %FloRange, ptr %1047, i64 0, i32 2
  store i64 %1052, ptr %memberidx2.i.i17.i734, align 4
  %memberidx3.i.i18.i735 = getelementptr inbounds %FloRange, ptr %1047, i64 0, i32 3
  store i64 %1053, ptr %memberidx3.i.i18.i735, align 4
  store i64 40, ptr %1046, align 4
  %memberidx1.i12.i736 = getelementptr inbounds %Token, ptr %1046, i64 0, i32 1
  store ptr %1047, ptr %memberidx1.i12.i736, align 8
  br label %common.ret

ifend.i745:                                       ; preds = %if.entry75, %if.entry.i.i710
  %1054 = tail call ptr @malloc(i32 16)
  %1055 = tail call ptr @malloc(i32 32)
  %1056 = load i64, ptr %memberidx.i.i707, align 4
  %1057 = add nsw i64 %1056, 1
  %memberidx2.i6.i739 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1058 = load i64, ptr %memberidx2.i6.i739, align 4
  %1059 = add i64 %1058, -1
  %memberidx3.i.i740 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1060 = load i64, ptr %memberidx3.i.i740, align 4
  store i64 %1056, ptr %1055, align 4
  %memberidx1.i.i.i741 = getelementptr inbounds %FloRange, ptr %1055, i64 0, i32 1
  store i64 %1057, ptr %memberidx1.i.i.i741, align 4
  %memberidx2.i.i.i742 = getelementptr inbounds %FloRange, ptr %1055, i64 0, i32 2
  store i64 %1059, ptr %memberidx2.i.i.i742, align 4
  %memberidx3.i.i.i743 = getelementptr inbounds %FloRange, ptr %1055, i64 0, i32 3
  store i64 %1060, ptr %memberidx3.i.i.i743, align 4
  store i64 47, ptr %1054, align 4
  %memberidx1.i4.i744 = getelementptr inbounds %Token, ptr %1054, i64 0, i32 1
  store ptr %1055, ptr %memberidx1.i4.i744, align 8
  br label %common.ret

if.entry78:                                       ; preds = %ifend11
  %memberidx.i.i746 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1061 = load i64, ptr %memberidx.i.i746, align 4
  %1062 = add nsw i64 %1061, 1
  %memberidx1.i.i747 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1063 = load ptr, ptr %memberidx1.i.i747, align 8
  %memberidx2.i.i748 = getelementptr inbounds %String, ptr %1063, i64 0, i32 1
  %1064 = load i64, ptr %memberidx2.i.i748, align 4
  %1065 = icmp slt i64 %1062, %1064
  br i1 %1065, label %if.entry.i.i749, label %ifend3.i814

if.entry.i.i749:                                  ; preds = %if.entry78
  %1066 = load ptr, ptr %1063, align 8
  %1067 = getelementptr inbounds i8, ptr %1066, i64 %1062
  %1068 = load i8, ptr %1067, align 1
  switch i8 %1068, label %ifend3.i814 [
    i8 61, label %end.i.i761
    i8 62, label %end.i80.i792
  ]

end.i.i761:                                       ; preds = %if.entry.i.i749
  store i64 %1062, ptr %memberidx.i.i746, align 4
  %1069 = load ptr, ptr %1063, align 8
  %1070 = getelementptr inbounds i8, ptr %1069, i64 %1062
  %1071 = load i8, ptr %1070, align 1
  store i8 %1071, ptr %0, align 1
  switch i8 %1071, label %if.entry9.i.i768 [
    i8 10, label %if.entry.i23.i764
    i8 0, label %Lexer_advance.exit.i776
  ]

if.entry.i23.i764:                                ; preds = %end.i.i761
  %memberidx5.i.i762 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i762, align 4
  %memberidx6.i.i763 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i776.sink.split

if.entry9.i.i768:                                 ; preds = %end.i.i761
  %memberidx12.i.i767 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i776.sink.split

Lexer_advance.exit.i776.sink.split:               ; preds = %if.entry.i23.i764, %if.entry9.i.i768
  %memberidx12.i.i767.sink1328 = phi ptr [ %memberidx12.i.i767, %if.entry9.i.i768 ], [ %memberidx6.i.i763, %if.entry.i23.i764 ]
  %1072 = load i64, ptr %memberidx12.i.i767.sink1328, align 4
  %1073 = add nsw i64 %1072, 1
  store i64 %1073, ptr %memberidx12.i.i767.sink1328, align 4
  br label %Lexer_advance.exit.i776

Lexer_advance.exit.i776:                          ; preds = %Lexer_advance.exit.i776.sink.split, %end.i.i761
  %1074 = tail call ptr @malloc(i32 16)
  %1075 = tail call ptr @malloc(i32 32)
  %1076 = load i64, ptr %memberidx.i.i746, align 4
  %1077 = add nsw i64 %1076, -1
  %1078 = add nsw i64 %1076, 1
  %memberidx2.i32.i770 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1079 = load i64, ptr %memberidx2.i32.i770, align 4
  %1080 = add i64 %1079, -2
  %memberidx3.i33.i771 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1081 = load i64, ptr %memberidx3.i33.i771, align 4
  store i64 %1077, ptr %1075, align 4
  %memberidx1.i.i34.i772 = getelementptr inbounds %FloRange, ptr %1075, i64 0, i32 1
  store i64 %1078, ptr %memberidx1.i.i34.i772, align 4
  %memberidx2.i.i35.i773 = getelementptr inbounds %FloRange, ptr %1075, i64 0, i32 2
  store i64 %1080, ptr %memberidx2.i.i35.i773, align 4
  %memberidx3.i.i36.i774 = getelementptr inbounds %FloRange, ptr %1075, i64 0, i32 3
  store i64 %1081, ptr %memberidx3.i.i36.i774, align 4
  store i64 44, ptr %1074, align 4
  %memberidx1.i37.i775 = getelementptr inbounds %Token, ptr %1074, i64 0, i32 1
  store ptr %1075, ptr %memberidx1.i37.i775, align 8
  br label %common.ret

end.i80.i792:                                     ; preds = %if.entry.i.i749
  store i64 %1062, ptr %memberidx.i.i746, align 4
  %1082 = load ptr, ptr %1063, align 8
  %1083 = getelementptr inbounds i8, ptr %1082, i64 %1062
  %1084 = load i8, ptr %1083, align 1
  store i8 %1084, ptr %0, align 1
  switch i8 %1084, label %if.entry9.i87.i799 [
    i8 10, label %if.entry.i83.i795
    i8 0, label %Lexer_advance.exit88.i803
  ]

if.entry.i83.i795:                                ; preds = %end.i80.i792
  %memberidx5.i81.i793 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i793, align 4
  %memberidx6.i82.i794 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i803.sink.split

if.entry9.i87.i799:                               ; preds = %end.i80.i792
  %memberidx12.i86.i798 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i803.sink.split

Lexer_advance.exit88.i803.sink.split:             ; preds = %if.entry.i83.i795, %if.entry9.i87.i799
  %memberidx12.i86.i798.sink1330 = phi ptr [ %memberidx12.i86.i798, %if.entry9.i87.i799 ], [ %memberidx6.i82.i794, %if.entry.i83.i795 ]
  %1085 = load i64, ptr %memberidx12.i86.i798.sink1330, align 4
  %1086 = add nsw i64 %1085, 1
  store i64 %1086, ptr %memberidx12.i86.i798.sink1330, align 4
  br label %Lexer_advance.exit88.i803

Lexer_advance.exit88.i803:                        ; preds = %Lexer_advance.exit88.i803.sink.split, %end.i80.i792
  %1087 = add nsw i64 %1061, 2
  %1088 = load i64, ptr %memberidx2.i.i748, align 4
  %1089 = icmp slt i64 %1087, %1088
  br i1 %1089, label %if.entry.i71.i804, label %ifend6.i846

if.entry.i71.i804:                                ; preds = %Lexer_advance.exit88.i803
  %1090 = load ptr, ptr %1063, align 8
  %1091 = getelementptr inbounds i8, ptr %1090, i64 %1087
  %1092 = load i8, ptr %1091, align 1
  %phi.cmp1112 = icmp eq i8 %1092, 61
  br i1 %phi.cmp1112, label %end.i45.i823, label %ifend6.i846

ifend3.i814:                                      ; preds = %if.entry.i.i749, %if.entry78
  %1093 = tail call ptr @malloc(i32 16)
  %1094 = tail call ptr @malloc(i32 32)
  %1095 = load i64, ptr %memberidx.i.i746, align 4
  %1096 = add nsw i64 %1095, 1
  %memberidx2.i56.i808 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1097 = load i64, ptr %memberidx2.i56.i808, align 4
  %1098 = add i64 %1097, -1
  %memberidx3.i57.i809 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1099 = load i64, ptr %memberidx3.i57.i809, align 4
  store i64 %1095, ptr %1094, align 4
  %memberidx1.i.i58.i810 = getelementptr inbounds %FloRange, ptr %1094, i64 0, i32 1
  store i64 %1096, ptr %memberidx1.i.i58.i810, align 4
  %memberidx2.i.i59.i811 = getelementptr inbounds %FloRange, ptr %1094, i64 0, i32 2
  store i64 %1098, ptr %memberidx2.i.i59.i811, align 4
  %memberidx3.i.i60.i812 = getelementptr inbounds %FloRange, ptr %1094, i64 0, i32 3
  store i64 %1099, ptr %memberidx3.i.i60.i812, align 4
  store i64 41, ptr %1093, align 4
  %memberidx1.i54.i813 = getelementptr inbounds %Token, ptr %1093, i64 0, i32 1
  store ptr %1094, ptr %memberidx1.i54.i813, align 8
  br label %common.ret

end.i45.i823:                                     ; preds = %if.entry.i71.i804
  store i64 %1087, ptr %memberidx.i.i746, align 4
  %1100 = load ptr, ptr %1063, align 8
  %1101 = getelementptr inbounds i8, ptr %1100, i64 %1087
  %1102 = load i8, ptr %1101, align 1
  store i8 %1102, ptr %0, align 1
  switch i8 %1102, label %if.entry9.i52.i830 [
    i8 10, label %if.entry.i48.i826
    i8 0, label %Lexer_advance.exit53.i838
  ]

if.entry.i48.i826:                                ; preds = %end.i45.i823
  %memberidx5.i46.i824 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i824, align 4
  %memberidx6.i47.i825 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit53.i838.sink.split

if.entry9.i52.i830:                               ; preds = %end.i45.i823
  %memberidx12.i51.i829 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit53.i838.sink.split

Lexer_advance.exit53.i838.sink.split:             ; preds = %if.entry.i48.i826, %if.entry9.i52.i830
  %memberidx12.i51.i829.sink1332 = phi ptr [ %memberidx12.i51.i829, %if.entry9.i52.i830 ], [ %memberidx6.i47.i825, %if.entry.i48.i826 ]
  %1103 = load i64, ptr %memberidx12.i51.i829.sink1332, align 4
  %1104 = add nsw i64 %1103, 1
  store i64 %1104, ptr %memberidx12.i51.i829.sink1332, align 4
  br label %Lexer_advance.exit53.i838

Lexer_advance.exit53.i838:                        ; preds = %Lexer_advance.exit53.i838.sink.split, %end.i45.i823
  %1105 = tail call ptr @malloc(i32 16)
  %1106 = tail call ptr @malloc(i32 32)
  %1107 = load i64, ptr %memberidx.i.i746, align 4
  %1108 = add nsw i64 %1107, -2
  %1109 = add nsw i64 %1107, 1
  %memberidx2.i26.i832 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1110 = load i64, ptr %memberidx2.i26.i832, align 4
  %1111 = add i64 %1110, -3
  %memberidx3.i27.i833 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1112 = load i64, ptr %memberidx3.i27.i833, align 4
  store i64 %1108, ptr %1106, align 4
  %memberidx1.i.i28.i834 = getelementptr inbounds %FloRange, ptr %1106, i64 0, i32 1
  store i64 %1109, ptr %memberidx1.i.i28.i834, align 4
  %memberidx2.i.i29.i835 = getelementptr inbounds %FloRange, ptr %1106, i64 0, i32 2
  store i64 %1111, ptr %memberidx2.i.i29.i835, align 4
  %memberidx3.i.i30.i836 = getelementptr inbounds %FloRange, ptr %1106, i64 0, i32 3
  store i64 %1112, ptr %memberidx3.i.i30.i836, align 4
  store i64 21, ptr %1105, align 4
  %memberidx1.i24.i837 = getelementptr inbounds %Token, ptr %1105, i64 0, i32 1
  store ptr %1106, ptr %memberidx1.i24.i837, align 8
  br label %common.ret

ifend6.i846:                                      ; preds = %Lexer_advance.exit88.i803, %if.entry.i71.i804
  %1113 = tail call ptr @malloc(i32 16)
  %1114 = tail call ptr @malloc(i32 32)
  %1115 = load i64, ptr %memberidx.i.i746, align 4
  %1116 = add nsw i64 %1115, -1
  %1117 = add nsw i64 %1115, 1
  %memberidx2.i18.i840 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1118 = load i64, ptr %memberidx2.i18.i840, align 4
  %1119 = add i64 %1118, -2
  %memberidx3.i.i841 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1120 = load i64, ptr %memberidx3.i.i841, align 4
  store i64 %1116, ptr %1114, align 4
  %memberidx1.i.i.i842 = getelementptr inbounds %FloRange, ptr %1114, i64 0, i32 1
  store i64 %1117, ptr %memberidx1.i.i.i842, align 4
  %memberidx2.i.i.i843 = getelementptr inbounds %FloRange, ptr %1114, i64 0, i32 2
  store i64 %1119, ptr %memberidx2.i.i.i843, align 4
  %memberidx3.i.i.i844 = getelementptr inbounds %FloRange, ptr %1114, i64 0, i32 3
  store i64 %1120, ptr %memberidx3.i.i.i844, align 4
  store i64 49, ptr %1113, align 4
  %memberidx1.i16.i845 = getelementptr inbounds %Token, ptr %1113, i64 0, i32 1
  store ptr %1114, ptr %memberidx1.i16.i845, align 8
  br label %common.ret

if.entry81:                                       ; preds = %ifend11
  %memberidx.i.i847 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1121 = load i64, ptr %memberidx.i.i847, align 4
  %1122 = add nsw i64 %1121, 1
  %memberidx1.i.i848 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1123 = load ptr, ptr %memberidx1.i.i848, align 8
  %memberidx2.i.i849 = getelementptr inbounds %String, ptr %1123, i64 0, i32 1
  %1124 = load i64, ptr %memberidx2.i.i849, align 4
  %1125 = icmp slt i64 %1122, %1124
  br i1 %1125, label %if.entry.i.i850, label %ifend3.i915

if.entry.i.i850:                                  ; preds = %if.entry81
  %1126 = load ptr, ptr %1123, align 8
  %1127 = getelementptr inbounds i8, ptr %1126, i64 %1122
  %1128 = load i8, ptr %1127, align 1
  switch i8 %1128, label %ifend3.i915 [
    i8 61, label %end.i.i862
    i8 60, label %end.i80.i893
  ]

end.i.i862:                                       ; preds = %if.entry.i.i850
  store i64 %1122, ptr %memberidx.i.i847, align 4
  %1129 = load ptr, ptr %1123, align 8
  %1130 = getelementptr inbounds i8, ptr %1129, i64 %1122
  %1131 = load i8, ptr %1130, align 1
  store i8 %1131, ptr %0, align 1
  switch i8 %1131, label %if.entry9.i.i869 [
    i8 10, label %if.entry.i23.i865
    i8 0, label %Lexer_advance.exit.i877
  ]

if.entry.i23.i865:                                ; preds = %end.i.i862
  %memberidx5.i.i863 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i863, align 4
  %memberidx6.i.i864 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit.i877.sink.split

if.entry9.i.i869:                                 ; preds = %end.i.i862
  %memberidx12.i.i868 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit.i877.sink.split

Lexer_advance.exit.i877.sink.split:               ; preds = %if.entry.i23.i865, %if.entry9.i.i869
  %memberidx12.i.i868.sink1334 = phi ptr [ %memberidx12.i.i868, %if.entry9.i.i869 ], [ %memberidx6.i.i864, %if.entry.i23.i865 ]
  %1132 = load i64, ptr %memberidx12.i.i868.sink1334, align 4
  %1133 = add nsw i64 %1132, 1
  store i64 %1133, ptr %memberidx12.i.i868.sink1334, align 4
  br label %Lexer_advance.exit.i877

Lexer_advance.exit.i877:                          ; preds = %Lexer_advance.exit.i877.sink.split, %end.i.i862
  %1134 = tail call ptr @malloc(i32 16)
  %1135 = tail call ptr @malloc(i32 32)
  %1136 = load i64, ptr %memberidx.i.i847, align 4
  %1137 = add nsw i64 %1136, -1
  %1138 = add nsw i64 %1136, 1
  %memberidx2.i32.i871 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1139 = load i64, ptr %memberidx2.i32.i871, align 4
  %1140 = add i64 %1139, -2
  %memberidx3.i33.i872 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1141 = load i64, ptr %memberidx3.i33.i872, align 4
  store i64 %1137, ptr %1135, align 4
  %memberidx1.i.i34.i873 = getelementptr inbounds %FloRange, ptr %1135, i64 0, i32 1
  store i64 %1138, ptr %memberidx1.i.i34.i873, align 4
  %memberidx2.i.i35.i874 = getelementptr inbounds %FloRange, ptr %1135, i64 0, i32 2
  store i64 %1140, ptr %memberidx2.i.i35.i874, align 4
  %memberidx3.i.i36.i875 = getelementptr inbounds %FloRange, ptr %1135, i64 0, i32 3
  store i64 %1141, ptr %memberidx3.i.i36.i875, align 4
  store i64 43, ptr %1134, align 4
  %memberidx1.i37.i876 = getelementptr inbounds %Token, ptr %1134, i64 0, i32 1
  store ptr %1135, ptr %memberidx1.i37.i876, align 8
  br label %common.ret

end.i80.i893:                                     ; preds = %if.entry.i.i850
  store i64 %1122, ptr %memberidx.i.i847, align 4
  %1142 = load ptr, ptr %1123, align 8
  %1143 = getelementptr inbounds i8, ptr %1142, i64 %1122
  %1144 = load i8, ptr %1143, align 1
  store i8 %1144, ptr %0, align 1
  switch i8 %1144, label %if.entry9.i87.i900 [
    i8 10, label %if.entry.i83.i896
    i8 0, label %Lexer_advance.exit88.i904
  ]

if.entry.i83.i896:                                ; preds = %end.i80.i893
  %memberidx5.i81.i894 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i81.i894, align 4
  %memberidx6.i82.i895 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit88.i904.sink.split

if.entry9.i87.i900:                               ; preds = %end.i80.i893
  %memberidx12.i86.i899 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit88.i904.sink.split

Lexer_advance.exit88.i904.sink.split:             ; preds = %if.entry.i83.i896, %if.entry9.i87.i900
  %memberidx12.i86.i899.sink1336 = phi ptr [ %memberidx12.i86.i899, %if.entry9.i87.i900 ], [ %memberidx6.i82.i895, %if.entry.i83.i896 ]
  %1145 = load i64, ptr %memberidx12.i86.i899.sink1336, align 4
  %1146 = add nsw i64 %1145, 1
  store i64 %1146, ptr %memberidx12.i86.i899.sink1336, align 4
  br label %Lexer_advance.exit88.i904

Lexer_advance.exit88.i904:                        ; preds = %Lexer_advance.exit88.i904.sink.split, %end.i80.i893
  %1147 = add nsw i64 %1121, 2
  %1148 = load i64, ptr %memberidx2.i.i849, align 4
  %1149 = icmp slt i64 %1147, %1148
  br i1 %1149, label %if.entry.i71.i905, label %ifend6.i947

if.entry.i71.i905:                                ; preds = %Lexer_advance.exit88.i904
  %1150 = load ptr, ptr %1123, align 8
  %1151 = getelementptr inbounds i8, ptr %1150, i64 %1147
  %1152 = load i8, ptr %1151, align 1
  %phi.cmp1106 = icmp eq i8 %1152, 61
  br i1 %phi.cmp1106, label %end.i45.i924, label %ifend6.i947

ifend3.i915:                                      ; preds = %if.entry.i.i850, %if.entry81
  %1153 = tail call ptr @malloc(i32 16)
  %1154 = tail call ptr @malloc(i32 32)
  %1155 = load i64, ptr %memberidx.i.i847, align 4
  %1156 = add nsw i64 %1155, 1
  %memberidx2.i56.i909 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1157 = load i64, ptr %memberidx2.i56.i909, align 4
  %1158 = add i64 %1157, -1
  %memberidx3.i57.i910 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1159 = load i64, ptr %memberidx3.i57.i910, align 4
  store i64 %1155, ptr %1154, align 4
  %memberidx1.i.i58.i911 = getelementptr inbounds %FloRange, ptr %1154, i64 0, i32 1
  store i64 %1156, ptr %memberidx1.i.i58.i911, align 4
  %memberidx2.i.i59.i912 = getelementptr inbounds %FloRange, ptr %1154, i64 0, i32 2
  store i64 %1158, ptr %memberidx2.i.i59.i912, align 4
  %memberidx3.i.i60.i913 = getelementptr inbounds %FloRange, ptr %1154, i64 0, i32 3
  store i64 %1159, ptr %memberidx3.i.i60.i913, align 4
  store i64 42, ptr %1153, align 4
  %memberidx1.i54.i914 = getelementptr inbounds %Token, ptr %1153, i64 0, i32 1
  store ptr %1154, ptr %memberidx1.i54.i914, align 8
  br label %common.ret

end.i45.i924:                                     ; preds = %if.entry.i71.i905
  store i64 %1147, ptr %memberidx.i.i847, align 4
  %1160 = load ptr, ptr %1123, align 8
  %1161 = getelementptr inbounds i8, ptr %1160, i64 %1147
  %1162 = load i8, ptr %1161, align 1
  store i8 %1162, ptr %0, align 1
  switch i8 %1162, label %if.entry9.i52.i931 [
    i8 10, label %if.entry.i48.i927
    i8 0, label %Lexer_advance.exit53.i939
  ]

if.entry.i48.i927:                                ; preds = %end.i45.i924
  %memberidx5.i46.i925 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i46.i925, align 4
  %memberidx6.i47.i926 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_advance.exit53.i939.sink.split

if.entry9.i52.i931:                               ; preds = %end.i45.i924
  %memberidx12.i51.i930 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_advance.exit53.i939.sink.split

Lexer_advance.exit53.i939.sink.split:             ; preds = %if.entry.i48.i927, %if.entry9.i52.i931
  %memberidx12.i51.i930.sink1338 = phi ptr [ %memberidx12.i51.i930, %if.entry9.i52.i931 ], [ %memberidx6.i47.i926, %if.entry.i48.i927 ]
  %1163 = load i64, ptr %memberidx12.i51.i930.sink1338, align 4
  %1164 = add nsw i64 %1163, 1
  store i64 %1164, ptr %memberidx12.i51.i930.sink1338, align 4
  br label %Lexer_advance.exit53.i939

Lexer_advance.exit53.i939:                        ; preds = %Lexer_advance.exit53.i939.sink.split, %end.i45.i924
  %1165 = tail call ptr @malloc(i32 16)
  %1166 = tail call ptr @malloc(i32 32)
  %1167 = load i64, ptr %memberidx.i.i847, align 4
  %1168 = add nsw i64 %1167, -2
  %1169 = add nsw i64 %1167, 1
  %memberidx2.i26.i933 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1170 = load i64, ptr %memberidx2.i26.i933, align 4
  %1171 = add i64 %1170, -3
  %memberidx3.i27.i934 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1172 = load i64, ptr %memberidx3.i27.i934, align 4
  store i64 %1168, ptr %1166, align 4
  %memberidx1.i.i28.i935 = getelementptr inbounds %FloRange, ptr %1166, i64 0, i32 1
  store i64 %1169, ptr %memberidx1.i.i28.i935, align 4
  %memberidx2.i.i29.i936 = getelementptr inbounds %FloRange, ptr %1166, i64 0, i32 2
  store i64 %1171, ptr %memberidx2.i.i29.i936, align 4
  %memberidx3.i.i30.i937 = getelementptr inbounds %FloRange, ptr %1166, i64 0, i32 3
  store i64 %1172, ptr %memberidx3.i.i30.i937, align 4
  store i64 22, ptr %1165, align 4
  %memberidx1.i24.i938 = getelementptr inbounds %Token, ptr %1165, i64 0, i32 1
  store ptr %1166, ptr %memberidx1.i24.i938, align 8
  br label %common.ret

ifend6.i947:                                      ; preds = %Lexer_advance.exit88.i904, %if.entry.i71.i905
  %1173 = tail call ptr @malloc(i32 16)
  %1174 = tail call ptr @malloc(i32 32)
  %1175 = load i64, ptr %memberidx.i.i847, align 4
  %1176 = add nsw i64 %1175, -1
  %1177 = add nsw i64 %1175, 1
  %memberidx2.i18.i941 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1178 = load i64, ptr %memberidx2.i18.i941, align 4
  %1179 = add i64 %1178, -2
  %memberidx3.i.i942 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1180 = load i64, ptr %memberidx3.i.i942, align 4
  store i64 %1176, ptr %1174, align 4
  %memberidx1.i.i.i943 = getelementptr inbounds %FloRange, ptr %1174, i64 0, i32 1
  store i64 %1177, ptr %memberidx1.i.i.i943, align 4
  %memberidx2.i.i.i944 = getelementptr inbounds %FloRange, ptr %1174, i64 0, i32 2
  store i64 %1179, ptr %memberidx2.i.i.i944, align 4
  %memberidx3.i.i.i945 = getelementptr inbounds %FloRange, ptr %1174, i64 0, i32 3
  store i64 %1180, ptr %memberidx3.i.i.i945, align 4
  store i64 48, ptr %1173, align 4
  %memberidx1.i16.i946 = getelementptr inbounds %Token, ptr %1173, i64 0, i32 1
  store ptr %1174, ptr %memberidx1.i16.i946, align 8
  br label %common.ret

if.entry84:                                       ; preds = %ifend11
  %memberidx.i.i948 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1181 = load i64, ptr %memberidx.i.i948, align 4
  %1182 = add nsw i64 %1181, 1
  %memberidx1.i.i949 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1183 = load ptr, ptr %memberidx1.i.i949, align 8
  %memberidx2.i.i950 = getelementptr inbounds %String, ptr %1183, i64 0, i32 1
  %1184 = load i64, ptr %memberidx2.i.i950, align 4
  %1185 = icmp slt i64 %1182, %1184
  br i1 %1185, label %if.entry.i.i951, label %Lexer_dot_token.exit

if.entry.i.i951:                                  ; preds = %if.entry84
  %1186 = load ptr, ptr %1183, align 8
  %1187 = getelementptr inbounds i8, ptr %1186, i64 %1182
  %1188 = load i8, ptr %1187, align 1
  %phi.cmp = icmp eq i8 %1188, 46
  br i1 %phi.cmp, label %end.i.i962, label %Lexer_dot_token.exit

end.i.i962:                                       ; preds = %if.entry.i.i951
  store i64 %1182, ptr %memberidx.i.i948, align 4
  %1189 = load ptr, ptr %1183, align 8
  %1190 = getelementptr inbounds i8, ptr %1189, i64 %1182
  %1191 = load i8, ptr %1190, align 1
  store i8 %1191, ptr %0, align 1
  switch i8 %1191, label %if.entry9.i.i969 [
    i8 10, label %if.entry.i11.i965
    i8 0, label %Lexer_dot_token.exit
  ]

if.entry.i11.i965:                                ; preds = %end.i.i962
  %memberidx5.i.i963 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  store i64 0, ptr %memberidx5.i.i963, align 4
  %memberidx6.i.i964 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  br label %Lexer_dot_token.exit.sink.split

if.entry9.i.i969:                                 ; preds = %end.i.i962
  %memberidx12.i.i968 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  br label %Lexer_dot_token.exit.sink.split

Lexer_dot_token.exit.sink.split:                  ; preds = %if.entry9.i.i969, %if.entry.i11.i965
  %memberidx6.i.i964.sink1340 = phi ptr [ %memberidx6.i.i964, %if.entry.i11.i965 ], [ %memberidx12.i.i968, %if.entry9.i.i969 ]
  %1192 = load i64, ptr %memberidx6.i.i964.sink1340, align 4
  %1193 = add nsw i64 %1192, 1
  store i64 %1193, ptr %memberidx6.i.i964.sink1340, align 4
  br label %Lexer_dot_token.exit

Lexer_dot_token.exit:                             ; preds = %Lexer_dot_token.exit.sink.split, %if.entry84, %end.i.i962, %if.entry.i.i951
  %length.0.i971 = phi i64 [ 1, %if.entry.i.i951 ], [ 2, %end.i.i962 ], [ 1, %if.entry84 ], [ 2, %Lexer_dot_token.exit.sink.split ]
  %token.0.i = phi i64 [ 50, %if.entry.i.i951 ], [ 52, %end.i.i962 ], [ 50, %if.entry84 ], [ 52, %Lexer_dot_token.exit.sink.split ]
  %1194 = tail call ptr @malloc(i32 16)
  %1195 = tail call ptr @malloc(i32 32)
  %1196 = load i64, ptr %memberidx.i.i948, align 4
  %1197 = sub nsw i64 1, %length.0.i971
  %1198 = add i64 %1197, %1196
  %1199 = add nsw i64 %1196, 1
  %memberidx2.i6.i973 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1200 = load i64, ptr %memberidx2.i6.i973, align 4
  %1201 = sub nuw i64 %1200, %length.0.i971
  %memberidx3.i.i974 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1202 = load i64, ptr %memberidx3.i.i974, align 4
  store i64 %1198, ptr %1195, align 4
  %memberidx1.i.i.i975 = getelementptr inbounds %FloRange, ptr %1195, i64 0, i32 1
  store i64 %1199, ptr %memberidx1.i.i.i975, align 4
  %memberidx2.i.i.i976 = getelementptr inbounds %FloRange, ptr %1195, i64 0, i32 2
  store i64 %1201, ptr %memberidx2.i.i.i976, align 4
  %memberidx3.i.i.i977 = getelementptr inbounds %FloRange, ptr %1195, i64 0, i32 3
  store i64 %1202, ptr %memberidx3.i.i.i977, align 4
  store i64 %token.0.i, ptr %1194, align 4
  %memberidx1.i4.i978 = getelementptr inbounds %Token, ptr %1194, i64 0, i32 1
  store ptr %1195, ptr %memberidx1.i4.i978, align 8
  br label %common.ret

if.entry87:                                       ; preds = %ifend11
  %1203 = tail call ptr @malloc(i32 16)
  %1204 = tail call ptr @malloc(i32 32)
  %memberidx90 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1205 = load i64, ptr %memberidx90, align 4
  %memberidx91 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1206 = load i64, ptr %memberidx91, align 4
  %memberidx2.i981 = getelementptr inbounds %FloRange, ptr %1204, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %1204, i8 0, i64 16, i1 false)
  store i64 %1205, ptr %memberidx2.i981, align 4
  %memberidx3.i982 = getelementptr inbounds %FloRange, ptr %1204, i64 0, i32 3
  store i64 %1206, ptr %memberidx3.i982, align 4
  store i64 46, ptr %1203, align 4
  %memberidx1.i983 = getelementptr inbounds %Token, ptr %1203, i64 0, i32 1
  store ptr %1204, ptr %memberidx1.i983, align 8
  br label %common.ret

ifend89:                                          ; preds = %ifend11
  %memberidx92 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 1
  %1207 = load ptr, ptr %memberidx92, align 8
  %memberidx93 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 3
  %1208 = load i64, ptr %memberidx93, align 4
  %1209 = tail call ptr @malloc(i32 1)
  %1210 = load ptr, ptr %1207, align 8
  %1211 = getelementptr inbounds i8, ptr %1210, i64 %1208
  %1212 = load i8, ptr %1211, align 2147483648
  store i8 %1212, ptr %1209, align 8
  %1213 = tail call ptr @malloc(i32 24)
  store ptr %1209, ptr %1213, align 8
  %memberidx1.i.i984 = getelementptr inbounds %String, ptr %1213, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i984, align 4
  %memberidx2.i.i985 = getelementptr inbounds %String, ptr %1213, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i985, align 4
  %1214 = load i64, ptr %memberidx93, align 4
  %1215 = alloca ptr, align 8
  %1216 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %1215, ptr nonnull @61, i64 %1214)
  %1217 = load ptr, ptr %1215, align 8
  %1218 = tail call ptr @malloc(i32 24)
  store ptr %1217, ptr %1218, align 8
  %memberidx1.i986 = getelementptr inbounds %String, ptr %1218, i64 0, i32 1
  store i64 %1216, ptr %memberidx1.i986, align 4
  %memberidx2.i987 = getelementptr inbounds %String, ptr %1218, i64 0, i32 2
  store i64 %1216, ptr %memberidx2.i987, align 4
  %1219 = call i64 @write(i64 1, ptr %1217, i64 %1216)
  %1220 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  %memberidx95 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 2
  %1221 = load ptr, ptr %memberidx95, align 8
  %1222 = tail call ptr @malloc(i32 24)
  %1223 = call ptr @malloc(i32 2)
  %1224 = load i8, ptr %1209, align 8
  store i8 %1224, ptr %1223, align 8
  %1225 = getelementptr inbounds i8, ptr %1223, i64 1
  store i8 0, ptr %1225, align 1
  %1226 = alloca ptr, align 8
  %1227 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %1226, ptr nonnull @62, ptr nonnull %1223)
  %1228 = load ptr, ptr %1226, align 8
  %1229 = tail call ptr @malloc(i32 24)
  store ptr %1228, ptr %1229, align 8
  %memberidx1.i524 = getelementptr inbounds %String, ptr %1229, i64 0, i32 1
  store i64 %1227, ptr %memberidx1.i524, align 4
  %memberidx2.i525 = getelementptr inbounds %String, ptr %1229, i64 0, i32 2
  store i64 %1227, ptr %memberidx2.i525, align 4
  tail call void @free(ptr %1223)
  %1230 = call ptr @malloc(i32 32)
  %1231 = load i64, ptr %memberidx93, align 4
  %1232 = add nsw i64 %1231, 1
  %memberidx2.i177 = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 4
  %1233 = load i64, ptr %memberidx2.i177, align 4
  %1234 = add i64 %1233, -1
  %memberidx3.i = getelementptr inbounds %Lexer, ptr %0, i64 0, i32 5
  %1235 = load i64, ptr %memberidx3.i, align 4
  store i64 %1231, ptr %1230, align 4
  %memberidx1.i.i178 = getelementptr inbounds %FloRange, ptr %1230, i64 0, i32 1
  store i64 %1232, ptr %memberidx1.i.i178, align 4
  %memberidx2.i.i179 = getelementptr inbounds %FloRange, ptr %1230, i64 0, i32 2
  store i64 %1234, ptr %memberidx2.i.i179, align 4
  %memberidx3.i.i180 = getelementptr inbounds %FloRange, ptr %1230, i64 0, i32 3
  store i64 %1235, ptr %memberidx3.i.i180, align 4
  store i64 0, ptr %1222, align 4
  %memberidx1.i167 = getelementptr inbounds %FloError, ptr %1222, i64 0, i32 2
  store ptr %1230, ptr %memberidx1.i167, align 8
  %memberidx2.i168 = getelementptr inbounds %FloError, ptr %1222, i64 0, i32 1
  store ptr %1229, ptr %memberidx2.i168, align 8
  %memberidx.i = getelementptr inbounds %Array_FloError_, ptr %1221, i64 0, i32 1
  %1236 = load i64, ptr %memberidx.i, align 4
  %1237 = add i64 %1236, 1
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %1221, i64 0, i32 2
  %1238 = load i64, ptr %memberidx.i.i, align 4
  %1239 = icmp slt i64 %1238, %1237
  %.pre = load ptr, ptr %1221, align 8
  br i1 %1239, label %while.entry.i.i, label %Array_FloError____sl__.exit

while.entry.i.i:                                  ; preds = %ifend89, %while.entry.i.i
  %1240 = phi ptr [ %1244, %while.entry.i.i ], [ %.pre, %ifend89 ]
  %1241 = phi i64 [ %1245, %while.entry.i.i ], [ %1238, %ifend89 ]
  %1242 = shl nuw i64 %1241, 1
  store i64 %1242, ptr %memberidx.i.i, align 4
  %1243 = shl i64 %1241, 4
  %1244 = call ptr @realloc(ptr %1240, i64 %1243)
  store ptr %1244, ptr %1221, align 8
  %1245 = load i64, ptr %memberidx.i.i, align 4
  %1246 = icmp slt i64 %1245, %1237
  br i1 %1246, label %while.entry.i.i, label %Array_FloError____sl__.exit.loopexit

Array_FloError____sl__.exit.loopexit:             ; preds = %while.entry.i.i
  %.pre1242 = load i64, ptr %memberidx.i, align 4
  %.pre1278 = add nsw i64 %.pre1242, 1
  br label %Array_FloError____sl__.exit

Array_FloError____sl__.exit:                      ; preds = %ifend89, %Array_FloError____sl__.exit.loopexit
  %.pre-phi1279 = phi i64 [ %.pre1278, %Array_FloError____sl__.exit.loopexit ], [ %1237, %ifend89 ]
  %1247 = phi ptr [ %1244, %Array_FloError____sl__.exit.loopexit ], [ %.pre, %ifend89 ]
  %1248 = phi i64 [ %.pre1242, %Array_FloError____sl__.exit.loopexit ], [ %1236, %ifend89 ]
  store i64 %.pre-phi1279, ptr %memberidx.i, align 4
  %1249 = getelementptr inbounds ptr, ptr %1247, i64 %1248
  store ptr %1222, ptr %1249, align 8
  call void @free(ptr %1209)
  tail call void @free(ptr %1213)
  br label %common.ret
}

; Function Attrs: mustprogress nofree nounwind readonly willreturn
declare double @atof(ptr nocapture) local_unnamed_addr #7

define internal fastcc noalias ptr @Parser_parse(ptr %0, ptr %1) unnamed_addr {
  %3 = alloca %Parser, align 8
  store ptr %0, ptr %3, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i68 = getelementptr inbounds %Array_Token_, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx2.i68, align 4
  %5 = icmp sgt i64 %4, -1
  br i1 %5, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %2
  %memberidx3.i = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  store i64 0, ptr %memberidx2.i, align 8
  %6 = load ptr, ptr %0, align 8
  %7 = load ptr, ptr %6, align 8
  store ptr %7, ptr %memberidx3.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %2, %if.entry.i
  %8 = phi i64 [ -1, %2 ], [ 0, %if.entry.i ]
  %9 = phi ptr [ undef, %2 ], [ %7, %if.entry.i ]
  %10 = tail call ptr @malloc(i32 56)
  tail call fastcc void @ModuleAST_constructor(ptr %10)
  %memberidx.i69 = getelementptr inbounds %Parser, ptr %3, i64 0, i32 2
  %11 = load i64, ptr %9, align 4
  %12 = icmp eq i64 %11, 33
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %1, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %12, %14
  br i1 %15, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %Parser_advance.exit
  %16 = load i64, ptr %memberidx2.i68, align 4
  %17 = icmp slt i64 %8, %16
  br i1 %17, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %18 = phi i64 [ %26, %Parser_advance.exit.i ], [ 33, %while.entry.i.preheader ]
  %19 = phi ptr [ %28, %Parser_advance.exit.i ], [ %9, %while.entry.i.preheader ]
  %20 = phi i64 [ %29, %Parser_advance.exit.i ], [ %8, %while.entry.i.preheader ]
  %21 = icmp slt i64 %20, %16
  br i1 %21, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %22 = add nsw i64 %20, 1
  store i64 %22, ptr %memberidx2.i, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  store ptr %25, ptr %memberidx.i69, align 8
  %.pre = load i64, ptr %25, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %26 = phi i64 [ %.pre, %if.entry.i.i ], [ %18, %while.entry.i ]
  %27 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %28 = phi ptr [ %25, %if.entry.i.i ], [ %19, %while.entry.i ]
  %29 = phi i64 [ %22, %if.entry.i.i ], [ %20, %while.entry.i ]
  %30 = icmp eq i64 %27, 33
  br i1 %30, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %Parser_advance.exit
  %31 = phi i64 [ %11, %Parser_advance.exit ], [ %26, %Parser_advance.exit.i ]
  %32 = phi ptr [ %9, %Parser_advance.exit ], [ %28, %Parser_advance.exit.i ]
  %33 = icmp ne i64 %31, 46
  %34 = and i1 %33, %14
  br i1 %34, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_new_lines.exit
  %memberidx37 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 6
  %memberidx32 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 5
  %memberidx26 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 4
  %memberidx20 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 3
  %memberidx14 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 2
  %memberidx8 = getelementptr inbounds %ModuleAST, ptr %10, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_new_lines.exit111
  %35 = phi i64 [ %31, %while.entry.preheader ], [ %162, %Parser_new_lines.exit111 ]
  %36 = phi ptr [ %32, %while.entry.preheader ], [ %163, %Parser_new_lines.exit111 ]
  switch i64 %35, label %else35 [
    i64 61, label %if.entry
    i64 70, label %if.entry5
    i64 71, label %if.entry11
    i64 65, label %if.entry17
    i64 54, label %if.entry23
    i64 55, label %if.entry29
    i64 53, label %if.entry.i222
  ]

while.end:                                        ; preds = %Parser_new_lines.exit111, %Parser_error.exit, %Parser_new_lines.exit
  ret ptr %10

if.entry:                                         ; preds = %while.entry
  %37 = load i64, ptr %memberidx2.i, align 8
  %38 = load ptr, ptr %3, align 8
  %memberidx2.i78 = getelementptr inbounds %Array_Token_, ptr %38, i64 0, i32 1
  %39 = load i64, ptr %memberidx2.i78, align 4
  %40 = icmp slt i64 %37, %39
  br i1 %40, label %if.entry.i80, label %Parser_advance.exit81

if.entry.i80:                                     ; preds = %if.entry
  %41 = add nsw i64 %37, 1
  store i64 %41, ptr %memberidx2.i, align 8
  %42 = load ptr, ptr %38, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  store ptr %44, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit81

Parser_advance.exit81:                            ; preds = %if.entry, %if.entry.i80
  %45 = load ptr, ptr %10, align 8
  %46 = call ptr @malloc(i32 33)
  %memberidx.i.i84 = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 1
  %47 = call ptr @malloc(i32 24)
  %memberidx.i.i.i85 = getelementptr inbounds %Array_ArgNode_, ptr %47, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i85, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %47, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i, align 4
  %48 = call ptr @malloc(i32 64)
  store ptr %48, ptr %47, align 8
  store i64 0, ptr %memberidx.i.i.i85, align 4
  store ptr %47, ptr %memberidx.i.i84, align 8
  %memberidx3.i.i87 = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 4
  store i1 false, ptr %memberidx3.i.i87, align 1
  %49 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %49, ptr %46, align 8
  %50 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %51 = load ptr, ptr %memberidx.i69, align 8
  %52 = load i64, ptr %51, align 4
  %.not.i = icmp eq i64 %52, 26
  br i1 %.not.i, label %Parser_new_lines.exit.i, label %ifend.i

ifend.i:                                          ; preds = %Parser_advance.exit81
  %53 = load ptr, ptr %memberidx.i.i84, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %53)
  %.pre366 = load ptr, ptr %memberidx.i69, align 8
  %.pre367 = load i64, ptr %.pre366, align 4
  %54 = icmp eq i64 %.pre367, 33
  %55 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx3.i.i.i, align 4
  %57 = icmp eq i64 %56, 0
  %58 = and i1 %54, %57
  br i1 %58, label %while.entry.i.i91.preheader, label %Parser_new_lines.exit.i

while.entry.i.i91.preheader:                      ; preds = %ifend.i
  %59 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %59, i64 0, i32 1
  %.pre368 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i.i91

while.entry.i.i91:                                ; preds = %while.entry.i.i91.preheader, %Parser_advance.exit.i.i
  %60 = phi i64 [ %.pre368, %while.entry.i.i91.preheader ], [ %69, %Parser_advance.exit.i.i ]
  %61 = load i64, ptr %memberidx2.i12.i.i, align 4
  %62 = icmp slt i64 %60, %61
  br i1 %62, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %while.entry.i.i91
  %63 = add nsw i64 %60, 1
  store i64 %63, ptr %memberidx2.i, align 8
  %64 = load ptr, ptr %59, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  store ptr %66, ptr %memberidx.i69, align 8
  %.pre369 = load i64, ptr %66, align 4
  %.pre370 = load i64, ptr %memberidx3.i.i.i, align 4
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %while.entry.i.i91
  %67 = phi i64 [ %.pre370, %if.entry.i.i.i ], [ 0, %while.entry.i.i91 ]
  %68 = phi i64 [ %.pre369, %if.entry.i.i.i ], [ 33, %while.entry.i.i91 ]
  %69 = phi i64 [ %63, %if.entry.i.i.i ], [ %60, %while.entry.i.i91 ]
  %70 = icmp eq i64 %68, 33
  %71 = icmp eq i64 %67, 0
  %72 = and i1 %70, %71
  br i1 %72, label %while.entry.i.i91, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i, %Parser_advance.exit81, %ifend.i
  %73 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %74 = load ptr, ptr %memberidx.i69, align 8
  %75 = load i64, ptr %74, align 4
  %76 = icmp eq i64 %75, 1
  br i1 %76, label %if.entry6.i, label %else7.i

if.entry6.i:                                      ; preds = %Parser_new_lines.exit.i
  %77 = load i64, ptr %memberidx2.i, align 8
  %78 = load ptr, ptr %3, align 8
  %memberidx2.i40.i = getelementptr inbounds %Array_Token_, ptr %78, i64 0, i32 1
  %79 = load i64, ptr %memberidx2.i40.i, align 4
  %80 = icmp slt i64 %77, %79
  br i1 %80, label %if.entry.i.i92, label %Parser_advance.exit.i93

if.entry.i.i92:                                   ; preds = %if.entry6.i
  %81 = add nsw i64 %77, 1
  store i64 %81, ptr %memberidx2.i, align 8
  %82 = load ptr, ptr %78, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  store ptr %84, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i93

Parser_advance.exit.i93:                          ; preds = %if.entry.i.i92, %if.entry6.i
  %memberidx9.i = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 3
  %85 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %85, ptr %memberidx9.i, align 8
  br label %ifend8.i

else7.i:                                          ; preds = %Parser_new_lines.exit.i
  %86 = call ptr @malloc(i32 24)
  %87 = call ptr @malloc(i32 4)
  store i32 1684631414, ptr %87, align 8
  %88 = call ptr @malloc(i32 24)
  store ptr %87, ptr %88, align 8
  %memberidx1.i.i42.i = getelementptr inbounds %String, ptr %88, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i42.i, align 4
  %memberidx2.i.i43.i = getelementptr inbounds %String, ptr %88, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i43.i, align 4
  %89 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %89, i8 0, i64 32, i1 false)
  store i64 53, ptr %86, align 4
  %memberidx1.i.i46.i = getelementptr inbounds %Token, ptr %86, i64 0, i32 1
  store ptr %89, ptr %memberidx1.i.i46.i, align 8
  %memberidx.i47.i = getelementptr inbounds %IdentifierToken, ptr %86, i64 0, i32 2
  store ptr %88, ptr %memberidx.i47.i, align 8
  %memberidx10.i = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 3
  %90 = call ptr @malloc(i32 32)
  %91 = load ptr, ptr %memberidx1.i.i46.i, align 8
  store ptr %91, ptr %90, align 8
  %memberidx.i.i62.i = getelementptr inbounds %TypeNode, ptr %90, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i62.i, align 4
  %memberidx.i63.i = getelementptr inbounds %RecordTypeNode, ptr %90, i64 0, i32 2
  store ptr %86, ptr %memberidx.i63.i, align 8
  %memberidx1.i64.i = getelementptr inbounds %RecordTypeNode, ptr %90, i64 0, i32 3
  %92 = call ptr @malloc(i32 24)
  %memberidx.i5.i.i = getelementptr inbounds %Array_TypeNode_, ptr %92, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i, align 4
  %memberidx1.i.i65.i = getelementptr inbounds %Array_TypeNode_, ptr %92, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i65.i, align 4
  %93 = call ptr @malloc(i32 64)
  store ptr %93, ptr %92, align 8
  store i64 0, ptr %memberidx.i5.i.i, align 4
  store ptr %92, ptr %memberidx1.i64.i, align 8
  store ptr %90, ptr %memberidx10.i, align 8
  br label %ifend8.i

ifend8.i:                                         ; preds = %else7.i, %Parser_advance.exit.i93
  %94 = load ptr, ptr %memberidx.i69, align 8
  %95 = load i64, ptr %94, align 4
  %96 = icmp eq i64 %95, 33
  %97 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i51.i = getelementptr inbounds %Array_FloError_, ptr %97, i64 0, i32 1
  %98 = load i64, ptr %memberidx3.i.i51.i, align 4
  %99 = icmp eq i64 %98, 0
  %100 = and i1 %96, %99
  br i1 %100, label %while.entry.i54.i.preheader, label %Parser_new_lines.exit61.i

while.entry.i54.i.preheader:                      ; preds = %ifend8.i
  %101 = load ptr, ptr %3, align 8
  %memberidx2.i12.i53.i = getelementptr inbounds %Array_Token_, ptr %101, i64 0, i32 1
  %.pre371 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i54.i

while.entry.i54.i:                                ; preds = %while.entry.i54.i.preheader, %Parser_advance.exit.i60.i
  %102 = phi i64 [ 33, %while.entry.i54.i.preheader ], [ %110, %Parser_advance.exit.i60.i ]
  %103 = phi i64 [ %.pre371, %while.entry.i54.i.preheader ], [ %113, %Parser_advance.exit.i60.i ]
  %104 = load i64, ptr %memberidx2.i12.i53.i, align 4
  %105 = icmp slt i64 %103, %104
  br i1 %105, label %if.entry.i.i56.i, label %Parser_advance.exit.i60.i

if.entry.i.i56.i:                                 ; preds = %while.entry.i54.i
  %106 = add nsw i64 %103, 1
  store i64 %106, ptr %memberidx2.i, align 8
  %107 = load ptr, ptr %101, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %106
  %109 = load ptr, ptr %108, align 8
  store ptr %109, ptr %memberidx.i69, align 8
  %.pre372 = load i64, ptr %109, align 4
  %.pre373 = load i64, ptr %memberidx3.i.i51.i, align 4
  br label %Parser_advance.exit.i60.i

Parser_advance.exit.i60.i:                        ; preds = %if.entry.i.i56.i, %while.entry.i54.i
  %110 = phi i64 [ %.pre372, %if.entry.i.i56.i ], [ %102, %while.entry.i54.i ]
  %111 = phi i64 [ %.pre373, %if.entry.i.i56.i ], [ 0, %while.entry.i54.i ]
  %112 = phi i64 [ %.pre372, %if.entry.i.i56.i ], [ 33, %while.entry.i54.i ]
  %113 = phi i64 [ %106, %if.entry.i.i56.i ], [ %103, %while.entry.i54.i ]
  %114 = icmp eq i64 %112, 33
  %115 = icmp eq i64 %111, 0
  %116 = and i1 %114, %115
  br i1 %116, label %while.entry.i54.i, label %Parser_new_lines.exit61.i

Parser_new_lines.exit61.i:                        ; preds = %Parser_advance.exit.i60.i, %ifend8.i
  %117 = phi i64 [ %95, %ifend8.i ], [ %110, %Parser_advance.exit.i60.i ]
  %118 = icmp eq i64 %117, 27
  br i1 %118, label %if.entry14.i, label %else15.i

if.entry14.i:                                     ; preds = %Parser_new_lines.exit61.i
  %memberidx17.i = getelementptr inbounds %FunctionDeclarationNode, ptr %46, i64 0, i32 2
  %119 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %119, ptr %memberidx17.i, align 8
  br label %Parser_parse_function.exit

else15.i:                                         ; preds = %Parser_new_lines.exit61.i
  store i1 true, ptr %memberidx3.i.i87, align 1
  br label %Parser_parse_function.exit

Parser_parse_function.exit:                       ; preds = %if.entry14.i, %else15.i
  %memberidx.i95 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %45, i64 0, i32 1
  %120 = load i64, ptr %memberidx.i95, align 4
  %121 = add i64 %120, 1
  %memberidx.i.i96 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %45, i64 0, i32 2
  %122 = load i64, ptr %memberidx.i.i96, align 4
  %123 = icmp slt i64 %122, %121
  %.pre374 = load ptr, ptr %45, align 8
  br i1 %123, label %while.entry.i.i97, label %Array_FunctionDeclarationNode____sl__.exit

while.entry.i.i97:                                ; preds = %Parser_parse_function.exit, %while.entry.i.i97
  %124 = phi ptr [ %128, %while.entry.i.i97 ], [ %.pre374, %Parser_parse_function.exit ]
  %125 = phi i64 [ %129, %while.entry.i.i97 ], [ %122, %Parser_parse_function.exit ]
  %126 = shl nuw i64 %125, 1
  store i64 %126, ptr %memberidx.i.i96, align 4
  %127 = shl i64 %125, 4
  %128 = call ptr @realloc(ptr %124, i64 %127)
  store ptr %128, ptr %45, align 8
  %129 = load i64, ptr %memberidx.i.i96, align 4
  %130 = icmp slt i64 %129, %121
  br i1 %130, label %while.entry.i.i97, label %Array_FunctionDeclarationNode____sl__.exit.loopexit

Array_FunctionDeclarationNode____sl__.exit.loopexit: ; preds = %while.entry.i.i97
  %.pre375 = load i64, ptr %memberidx.i95, align 4
  %.pre384 = add nsw i64 %.pre375, 1
  br label %Array_FunctionDeclarationNode____sl__.exit

Array_FunctionDeclarationNode____sl__.exit:       ; preds = %Parser_parse_function.exit, %Array_FunctionDeclarationNode____sl__.exit.loopexit
  %.pre-phi385 = phi i64 [ %.pre384, %Array_FunctionDeclarationNode____sl__.exit.loopexit ], [ %121, %Parser_parse_function.exit ]
  %131 = phi ptr [ %128, %Array_FunctionDeclarationNode____sl__.exit.loopexit ], [ %.pre374, %Parser_parse_function.exit ]
  %132 = phi i64 [ %.pre375, %Array_FunctionDeclarationNode____sl__.exit.loopexit ], [ %120, %Parser_parse_function.exit ]
  store i64 %.pre-phi385, ptr %memberidx.i95, align 4
  %133 = getelementptr inbounds ptr, ptr %131, i64 %132
  store ptr %46, ptr %133, align 8
  br label %ifend

ifend:                                            ; preds = %Array_VarDeclarationStatement____sl__.exit, %Array_TypeAliasNode____sl__.exit, %Array_ConstDeclarationStatement____sl__.exit, %Array_ImportNode____sl__.exit, %Array_EnumNode____sl__.exit, %Array_ClassDeclarationNode____sl__.exit, %Array_FunctionDeclarationNode____sl__.exit
  %134 = load ptr, ptr %memberidx.i69, align 8
  %135 = load i64, ptr %134, align 4
  %136 = icmp eq i64 %135, 33
  %137 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i101 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %138 = load i64, ptr %memberidx3.i.i101, align 4
  %139 = icmp eq i64 %138, 0
  %140 = and i1 %136, %139
  br i1 %140, label %while.entry.i104.preheader, label %Parser_new_lines.exit111

while.entry.i104.preheader:                       ; preds = %ifend
  %141 = load ptr, ptr %3, align 8
  %memberidx2.i12.i103 = getelementptr inbounds %Array_Token_, ptr %141, i64 0, i32 1
  %.pre377 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i104

while.entry.i104:                                 ; preds = %while.entry.i104.preheader, %Parser_advance.exit.i110
  %142 = phi i64 [ 0, %while.entry.i104.preheader ], [ %152, %Parser_advance.exit.i110 ]
  %143 = phi i64 [ 33, %while.entry.i104.preheader ], [ %153, %Parser_advance.exit.i110 ]
  %144 = phi ptr [ %134, %while.entry.i104.preheader ], [ %156, %Parser_advance.exit.i110 ]
  %145 = phi i64 [ %.pre377, %while.entry.i104.preheader ], [ %157, %Parser_advance.exit.i110 ]
  %146 = load i64, ptr %memberidx2.i12.i103, align 4
  %147 = icmp slt i64 %145, %146
  br i1 %147, label %if.entry.i.i106, label %Parser_advance.exit.i110

if.entry.i.i106:                                  ; preds = %while.entry.i104
  %148 = add nsw i64 %145, 1
  store i64 %148, ptr %memberidx2.i, align 8
  %149 = load ptr, ptr %141, align 8
  %150 = getelementptr inbounds ptr, ptr %149, i64 %148
  %151 = load ptr, ptr %150, align 8
  store ptr %151, ptr %memberidx.i69, align 8
  %.pre378 = load i64, ptr %151, align 4
  %.pre379 = load i64, ptr %memberidx3.i.i101, align 4
  br label %Parser_advance.exit.i110

Parser_advance.exit.i110:                         ; preds = %if.entry.i.i106, %while.entry.i104
  %152 = phi i64 [ %.pre379, %if.entry.i.i106 ], [ %142, %while.entry.i104 ]
  %153 = phi i64 [ %.pre378, %if.entry.i.i106 ], [ %143, %while.entry.i104 ]
  %154 = phi i64 [ %.pre379, %if.entry.i.i106 ], [ 0, %while.entry.i104 ]
  %155 = phi i64 [ %.pre378, %if.entry.i.i106 ], [ 33, %while.entry.i104 ]
  %156 = phi ptr [ %151, %if.entry.i.i106 ], [ %144, %while.entry.i104 ]
  %157 = phi i64 [ %148, %if.entry.i.i106 ], [ %145, %while.entry.i104 ]
  %158 = icmp eq i64 %155, 33
  %159 = icmp eq i64 %154, 0
  %160 = and i1 %158, %159
  br i1 %160, label %while.entry.i104, label %Parser_new_lines.exit111

Parser_new_lines.exit111:                         ; preds = %Parser_advance.exit.i110, %ifend
  %161 = phi i64 [ %138, %ifend ], [ %152, %Parser_advance.exit.i110 ]
  %162 = phi i64 [ %135, %ifend ], [ %153, %Parser_advance.exit.i110 ]
  %163 = phi ptr [ %134, %ifend ], [ %156, %Parser_advance.exit.i110 ]
  %164 = icmp ne i64 %162, 46
  %165 = icmp eq i64 %161, 0
  %166 = and i1 %164, %165
  br i1 %166, label %while.entry, label %while.end

if.entry5:                                        ; preds = %while.entry
  %167 = load ptr, ptr %memberidx8, align 8
  %168 = load i64, ptr %memberidx2.i, align 8
  %169 = load ptr, ptr %3, align 8
  %memberidx2.i.i116 = getelementptr inbounds %Array_Token_, ptr %169, i64 0, i32 1
  %170 = load i64, ptr %memberidx2.i.i116, align 4
  %171 = icmp slt i64 %168, %170
  br i1 %171, label %if.entry.i.i118, label %Parser_advance.exit.i121

if.entry.i.i118:                                  ; preds = %if.entry5
  %172 = add nsw i64 %168, 1
  store i64 %172, ptr %memberidx2.i, align 8
  %173 = load ptr, ptr %169, align 8
  %174 = getelementptr inbounds ptr, ptr %173, i64 %172
  %175 = load ptr, ptr %174, align 8
  store ptr %175, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i121

Parser_advance.exit.i121:                         ; preds = %if.entry.i.i118, %if.entry5
  %176 = call ptr @malloc(i32 40)
  %177 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %177, ptr %176, align 8
  %memberidx1.i.i119 = getelementptr inbounds %ClassDeclarationNode, ptr %176, i64 0, i32 3
  %178 = call ptr @malloc(i32 24)
  %memberidx.i.i23.i = getelementptr inbounds %Array_FieldNode_, ptr %178, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i23.i, align 4
  %memberidx1.i.i24.i = getelementptr inbounds %Array_FieldNode_, ptr %178, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i24.i, align 4
  %179 = call ptr @malloc(i32 64)
  store ptr %179, ptr %178, align 8
  store i64 0, ptr %memberidx.i.i23.i, align 4
  store ptr %178, ptr %memberidx1.i.i119, align 8
  %memberidx4.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %176, i64 0, i32 4
  %180 = call ptr @malloc(i32 24)
  %memberidx.i15.i.i = getelementptr inbounds %Array_MethodNode_, ptr %180, i64 0, i32 1
  store i64 0, ptr %memberidx.i15.i.i, align 4
  %memberidx1.i16.i.i = getelementptr inbounds %Array_MethodNode_, ptr %180, i64 0, i32 2
  store i64 8, ptr %memberidx1.i16.i.i, align 4
  %181 = call ptr @malloc(i32 64)
  store ptr %181, ptr %180, align 8
  store i64 0, ptr %memberidx.i15.i.i, align 4
  store ptr %180, ptr %memberidx4.i.i, align 8
  %memberidx7.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %176, i64 0, i32 1
  %182 = call ptr @malloc(i32 24)
  %memberidx.i17.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %182, i64 0, i32 1
  store i64 0, ptr %memberidx.i17.i.i, align 4
  %memberidx1.i18.i.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %182, i64 0, i32 2
  store i64 8, ptr %memberidx1.i18.i.i, align 4
  %183 = call ptr @malloc(i32 64)
  store ptr %183, ptr %182, align 8
  store i64 0, ptr %memberidx.i17.i.i, align 4
  store ptr %182, ptr %memberidx7.i.i, align 8
  %memberidx10.i.i = getelementptr inbounds %ClassDeclarationNode, ptr %176, i64 0, i32 2
  store ptr null, ptr %memberidx10.i.i, align 8
  %184 = load ptr, ptr %memberidx.i69, align 8
  %185 = load i64, ptr %184, align 4
  %186 = icmp eq i64 %185, 42
  br i1 %186, label %if.entry.i123, label %ifend.i124

if.entry.i123:                                    ; preds = %Parser_advance.exit.i121
  %187 = load i64, ptr %memberidx2.i, align 8
  %188 = load ptr, ptr %3, align 8
  %memberidx2.i.i28.i = getelementptr inbounds %Array_Token_, ptr %188, i64 0, i32 1
  %189 = load i64, ptr %memberidx2.i.i28.i, align 4
  %190 = icmp slt i64 %187, %189
  br i1 %190, label %if.entry.i.i30.i, label %Parser_advance.exit.i32.i

if.entry.i.i30.i:                                 ; preds = %if.entry.i123
  %191 = add nsw i64 %187, 1
  store i64 %191, ptr %memberidx2.i, align 8
  %192 = load ptr, ptr %188, align 8
  %193 = getelementptr inbounds ptr, ptr %192, i64 %191
  %194 = load ptr, ptr %193, align 8
  store ptr %194, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i32.i

Parser_advance.exit.i32.i:                        ; preds = %if.entry.i.i30.i, %if.entry.i123
  %195 = call ptr @malloc(i32 8)
  %196 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %196, ptr %195, align 8
  %197 = load i64, ptr %memberidx.i17.i.i, align 4
  %198 = add i64 %197, 1
  %199 = load i64, ptr %memberidx1.i18.i.i, align 4
  %200 = icmp slt i64 %199, %198
  %.pre321 = load ptr, ptr %182, align 8
  br i1 %200, label %while.entry.i.i19.i.i, label %Array_GenericParameterNode____sl__.exit20.i.i

while.entry.i.i19.i.i:                            ; preds = %Parser_advance.exit.i32.i, %while.entry.i.i19.i.i
  %201 = phi ptr [ %205, %while.entry.i.i19.i.i ], [ %.pre321, %Parser_advance.exit.i32.i ]
  %202 = phi i64 [ %206, %while.entry.i.i19.i.i ], [ %199, %Parser_advance.exit.i32.i ]
  %203 = shl nuw i64 %202, 1
  store i64 %203, ptr %memberidx1.i18.i.i, align 4
  %204 = shl i64 %202, 4
  %205 = call ptr @realloc(ptr %201, i64 %204)
  store ptr %205, ptr %182, align 8
  %206 = load i64, ptr %memberidx1.i18.i.i, align 4
  %207 = icmp slt i64 %206, %198
  br i1 %207, label %while.entry.i.i19.i.i, label %Array_GenericParameterNode____sl__.exit20.i.i.loopexit

Array_GenericParameterNode____sl__.exit20.i.i.loopexit: ; preds = %while.entry.i.i19.i.i
  %.pre322 = load i64, ptr %memberidx.i17.i.i, align 4
  %.pre386 = add nsw i64 %.pre322, 1
  br label %Array_GenericParameterNode____sl__.exit20.i.i

Array_GenericParameterNode____sl__.exit20.i.i:    ; preds = %Parser_advance.exit.i32.i, %Array_GenericParameterNode____sl__.exit20.i.i.loopexit
  %.pre-phi387 = phi i64 [ %.pre386, %Array_GenericParameterNode____sl__.exit20.i.i.loopexit ], [ %198, %Parser_advance.exit.i32.i ]
  %208 = phi ptr [ %205, %Array_GenericParameterNode____sl__.exit20.i.i.loopexit ], [ %.pre321, %Parser_advance.exit.i32.i ]
  %209 = phi i64 [ %.pre322, %Array_GenericParameterNode____sl__.exit20.i.i.loopexit ], [ %197, %Parser_advance.exit.i32.i ]
  store i64 %.pre-phi387, ptr %memberidx.i17.i.i, align 4
  %210 = getelementptr inbounds ptr, ptr %208, i64 %209
  store ptr %195, ptr %210, align 8
  %211 = load ptr, ptr %memberidx.i69, align 8
  %212 = load i64, ptr %211, align 4
  %213 = icmp eq i64 %212, 3
  %214 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i23.i.i = getelementptr inbounds %Array_FloError_, ptr %214, i64 0, i32 1
  %215 = load i64, ptr %memberidx3.i23.i.i, align 4
  %216 = icmp eq i64 %215, 0
  %217 = and i1 %213, %216
  br i1 %217, label %while.entry.i34.i, label %Parser_parse_generic_parameters.exit.i

while.entry.i34.i:                                ; preds = %Array_GenericParameterNode____sl__.exit20.i.i, %Array_GenericParameterNode____sl__.exit.i.i
  %218 = load i64, ptr %memberidx2.i, align 8
  %219 = load ptr, ptr %3, align 8
  %memberidx2.i25.i.i = getelementptr inbounds %Array_Token_, ptr %219, i64 0, i32 1
  %220 = load i64, ptr %memberidx2.i25.i.i, align 4
  %221 = icmp slt i64 %218, %220
  br i1 %221, label %if.entry.i27.i.i, label %Parser_advance.exit28.i.i

if.entry.i27.i.i:                                 ; preds = %while.entry.i34.i
  %222 = add nsw i64 %218, 1
  store i64 %222, ptr %memberidx2.i, align 8
  %223 = load ptr, ptr %219, align 8
  %224 = getelementptr inbounds ptr, ptr %223, i64 %222
  %225 = load ptr, ptr %224, align 8
  store ptr %225, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit28.i.i

Parser_advance.exit28.i.i:                        ; preds = %if.entry.i27.i.i, %while.entry.i34.i
  %226 = call ptr @malloc(i32 8)
  %227 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %227, ptr %226, align 8
  %228 = load i64, ptr %memberidx.i17.i.i, align 4
  %229 = add i64 %228, 1
  %230 = load i64, ptr %memberidx1.i18.i.i, align 4
  %231 = icmp slt i64 %230, %229
  %.pre324 = load ptr, ptr %182, align 8
  br i1 %231, label %while.entry.i.i.i36.i, label %Array_GenericParameterNode____sl__.exit.i.i

while.entry.i.i.i36.i:                            ; preds = %Parser_advance.exit28.i.i, %while.entry.i.i.i36.i
  %232 = phi ptr [ %236, %while.entry.i.i.i36.i ], [ %.pre324, %Parser_advance.exit28.i.i ]
  %233 = phi i64 [ %237, %while.entry.i.i.i36.i ], [ %230, %Parser_advance.exit28.i.i ]
  %234 = shl nuw i64 %233, 1
  store i64 %234, ptr %memberidx1.i18.i.i, align 4
  %235 = shl i64 %233, 4
  %236 = call ptr @realloc(ptr %232, i64 %235)
  store ptr %236, ptr %182, align 8
  %237 = load i64, ptr %memberidx1.i18.i.i, align 4
  %238 = icmp slt i64 %237, %229
  br i1 %238, label %while.entry.i.i.i36.i, label %Array_GenericParameterNode____sl__.exit.i.i.loopexit

Array_GenericParameterNode____sl__.exit.i.i.loopexit: ; preds = %while.entry.i.i.i36.i
  %.pre325 = load i64, ptr %memberidx.i17.i.i, align 4
  %.pre388 = add nsw i64 %.pre325, 1
  br label %Array_GenericParameterNode____sl__.exit.i.i

Array_GenericParameterNode____sl__.exit.i.i:      ; preds = %Parser_advance.exit28.i.i, %Array_GenericParameterNode____sl__.exit.i.i.loopexit
  %.pre-phi389 = phi i64 [ %.pre388, %Array_GenericParameterNode____sl__.exit.i.i.loopexit ], [ %229, %Parser_advance.exit28.i.i ]
  %239 = phi ptr [ %236, %Array_GenericParameterNode____sl__.exit.i.i.loopexit ], [ %.pre324, %Parser_advance.exit28.i.i ]
  %240 = phi i64 [ %.pre325, %Array_GenericParameterNode____sl__.exit.i.i.loopexit ], [ %228, %Parser_advance.exit28.i.i ]
  store i64 %.pre-phi389, ptr %memberidx.i17.i.i, align 4
  %241 = getelementptr inbounds ptr, ptr %239, i64 %240
  store ptr %226, ptr %241, align 8
  %242 = load ptr, ptr %memberidx.i69, align 8
  %243 = load i64, ptr %242, align 4
  %244 = icmp eq i64 %243, 3
  %245 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i15.i.i = getelementptr inbounds %Array_FloError_, ptr %245, i64 0, i32 1
  %246 = load i64, ptr %memberidx3.i15.i.i, align 4
  %247 = icmp eq i64 %246, 0
  %248 = and i1 %244, %247
  br i1 %248, label %while.entry.i34.i, label %Parser_parse_generic_parameters.exit.i

Parser_parse_generic_parameters.exit.i:           ; preds = %Array_GenericParameterNode____sl__.exit.i.i, %Array_GenericParameterNode____sl__.exit20.i.i
  %249 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 41)
  %.pre327 = load ptr, ptr %memberidx.i69, align 8
  %.pre328 = load i64, ptr %.pre327, align 4
  br label %ifend.i124

ifend.i124:                                       ; preds = %Parser_parse_generic_parameters.exit.i, %Parser_advance.exit.i121
  %250 = phi i64 [ %.pre328, %Parser_parse_generic_parameters.exit.i ], [ %185, %Parser_advance.exit.i121 ]
  %251 = icmp eq i64 %250, 25
  br i1 %251, label %if.entry5.i, label %ifend7.i

if.entry5.i:                                      ; preds = %ifend.i124
  %252 = load i64, ptr %memberidx2.i, align 8
  %253 = load ptr, ptr %3, align 8
  %memberidx2.i39.i = getelementptr inbounds %Array_Token_, ptr %253, i64 0, i32 1
  %254 = load i64, ptr %memberidx2.i39.i, align 4
  %255 = icmp slt i64 %252, %254
  br i1 %255, label %if.entry.i41.i, label %Parser_advance.exit43.i

if.entry.i41.i:                                   ; preds = %if.entry5.i
  %256 = add nsw i64 %252, 1
  store i64 %256, ptr %memberidx2.i, align 8
  %257 = load ptr, ptr %253, align 8
  %258 = getelementptr inbounds ptr, ptr %257, i64 %256
  %259 = load ptr, ptr %258, align 8
  store ptr %259, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit43.i

Parser_advance.exit43.i:                          ; preds = %if.entry.i41.i, %if.entry5.i
  %260 = call fastcc ptr @Parser_parse_object_type(ptr nonnull %3)
  store ptr %260, ptr %memberidx10.i.i, align 8
  %261 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %.pre329 = load ptr, ptr %memberidx.i69, align 8
  %.pre330 = load i64, ptr %.pre329, align 4
  br label %ifend7.i

ifend7.i:                                         ; preds = %Parser_advance.exit43.i, %ifend.i124
  %262 = phi i64 [ %.pre330, %Parser_advance.exit43.i ], [ %250, %ifend.i124 ]
  %263 = icmp eq i64 %262, 33
  %264 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i47.i = getelementptr inbounds %Array_FloError_, ptr %264, i64 0, i32 1
  %265 = load i64, ptr %memberidx3.i.i47.i, align 4
  %266 = icmp eq i64 %265, 0
  %267 = and i1 %263, %266
  br i1 %267, label %while.entry.i48.i.preheader, label %Parser_new_lines.exit.i132

while.entry.i48.i.preheader:                      ; preds = %ifend7.i
  %268 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i126 = getelementptr inbounds %Array_Token_, ptr %268, i64 0, i32 1
  %.pre331 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i48.i

while.entry.i48.i:                                ; preds = %while.entry.i48.i.preheader, %Parser_advance.exit.i50.i
  %269 = phi i64 [ %.pre331, %while.entry.i48.i.preheader ], [ %278, %Parser_advance.exit.i50.i ]
  %270 = load i64, ptr %memberidx2.i12.i.i126, align 4
  %271 = icmp slt i64 %269, %270
  br i1 %271, label %if.entry.i.i49.i, label %Parser_advance.exit.i50.i

if.entry.i.i49.i:                                 ; preds = %while.entry.i48.i
  %272 = add nsw i64 %269, 1
  store i64 %272, ptr %memberidx2.i, align 8
  %273 = load ptr, ptr %268, align 8
  %274 = getelementptr inbounds ptr, ptr %273, i64 %272
  %275 = load ptr, ptr %274, align 8
  store ptr %275, ptr %memberidx.i69, align 8
  %.pre332 = load i64, ptr %275, align 4
  %.pre333 = load i64, ptr %memberidx3.i.i47.i, align 4
  br label %Parser_advance.exit.i50.i

Parser_advance.exit.i50.i:                        ; preds = %if.entry.i.i49.i, %while.entry.i48.i
  %276 = phi i64 [ %.pre333, %if.entry.i.i49.i ], [ 0, %while.entry.i48.i ]
  %277 = phi i64 [ %.pre332, %if.entry.i.i49.i ], [ 33, %while.entry.i48.i ]
  %278 = phi i64 [ %272, %if.entry.i.i49.i ], [ %269, %while.entry.i48.i ]
  %279 = icmp eq i64 %277, 33
  %280 = icmp eq i64 %276, 0
  %281 = and i1 %279, %280
  br i1 %281, label %while.entry.i48.i, label %Parser_new_lines.exit.i132

Parser_new_lines.exit.i132:                       ; preds = %Parser_advance.exit.i50.i, %ifend7.i
  %282 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 27)
  %283 = load ptr, ptr %memberidx.i69, align 8
  %284 = load i64, ptr %283, align 4
  %285 = icmp eq i64 %284, 33
  %286 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %286, i64 0, i32 1
  %287 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %288 = icmp eq i64 %287, 0
  %289 = and i1 %285, %288
  br i1 %289, label %while.entry.i.i.i133.preheader, label %Parser_new_lines.exit.i.i

while.entry.i.i.i133.preheader:                   ; preds = %Parser_new_lines.exit.i132
  %290 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i.i = getelementptr inbounds %Array_Token_, ptr %290, i64 0, i32 1
  %.pre334 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i.i.i133

while.entry.i.i.i133:                             ; preds = %while.entry.i.i.i133.preheader, %Parser_advance.exit.i.i.i
  %291 = phi i64 [ 33, %while.entry.i.i.i133.preheader ], [ %299, %Parser_advance.exit.i.i.i ]
  %292 = phi i64 [ %.pre334, %while.entry.i.i.i133.preheader ], [ %302, %Parser_advance.exit.i.i.i ]
  %293 = load i64, ptr %memberidx2.i12.i.i.i, align 4
  %294 = icmp slt i64 %292, %293
  br i1 %294, label %if.entry.i.i.i.i, label %Parser_advance.exit.i.i.i

if.entry.i.i.i.i:                                 ; preds = %while.entry.i.i.i133
  %295 = add nsw i64 %292, 1
  store i64 %295, ptr %memberidx2.i, align 8
  %296 = load ptr, ptr %290, align 8
  %297 = getelementptr inbounds ptr, ptr %296, i64 %295
  %298 = load ptr, ptr %297, align 8
  store ptr %298, ptr %memberidx.i69, align 8
  %.pre335 = load i64, ptr %298, align 4
  %.pre336 = load i64, ptr %memberidx3.i.i.i.i, align 4
  br label %Parser_advance.exit.i.i.i

Parser_advance.exit.i.i.i:                        ; preds = %if.entry.i.i.i.i, %while.entry.i.i.i133
  %299 = phi i64 [ %.pre335, %if.entry.i.i.i.i ], [ %291, %while.entry.i.i.i133 ]
  %300 = phi i64 [ %.pre336, %if.entry.i.i.i.i ], [ 0, %while.entry.i.i.i133 ]
  %301 = phi i64 [ %.pre335, %if.entry.i.i.i.i ], [ 33, %while.entry.i.i.i133 ]
  %302 = phi i64 [ %295, %if.entry.i.i.i.i ], [ %292, %while.entry.i.i.i133 ]
  %303 = icmp eq i64 %301, 33
  %304 = icmp eq i64 %300, 0
  %305 = and i1 %303, %304
  br i1 %305, label %while.entry.i.i.i133, label %Parser_new_lines.exit.i.i

Parser_new_lines.exit.i.i:                        ; preds = %Parser_advance.exit.i.i.i, %Parser_new_lines.exit.i132
  %306 = phi i64 [ %284, %Parser_new_lines.exit.i132 ], [ %299, %Parser_advance.exit.i.i.i ]
  %307 = phi i64 [ %287, %Parser_new_lines.exit.i132 ], [ %300, %Parser_advance.exit.i.i.i ]
  %.fr = freeze i64 %307
  %308 = icmp eq i64 %.fr, 0
  br i1 %308, label %switch.early.test, label %while.end.i.i

switch.early.test:                                ; preds = %Parser_new_lines.exit.i.i
  switch i64 %306, label %while.entry.i.i135 [
    i64 46, label %while.end.i.i
    i64 28, label %while.end.i.i
  ]

while.entry.i.i135:                               ; preds = %switch.early.test, %switch.early.test273
  %309 = phi i64 [ %365, %switch.early.test273 ], [ %306, %switch.early.test ]
  switch i64 %309, label %while.entry.i.i135.ifend.i.i_crit_edge [
    i64 67, label %else.i.i
    i64 66, label %Parser_parse_access_modifier.exit.i.i.fold.split
    i64 68, label %else.i.i.fold.split
  ]

while.entry.i.i135.ifend.i.i_crit_edge:           ; preds = %while.entry.i.i135
  %.pre337 = load i64, ptr %memberidx2.i, align 8
  %.pre338 = load ptr, ptr %3, align 8
  br label %ifend.i.i

Parser_parse_access_modifier.exit.i.i.fold.split: ; preds = %while.entry.i.i135
  br label %else.i.i

while.end.i.i:                                    ; preds = %switch.early.test273, %switch.early.test273, %Parser_new_lines.exit100.i.i, %switch.early.test, %switch.early.test, %Parser_new_lines.exit.i.i
  %310 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 28)
  br label %Parser_parse_class.exit

else.i.i.fold.split:                              ; preds = %while.entry.i.i135
  br label %else.i.i

else.i.i:                                         ; preds = %while.entry.i.i135, %else.i.i.fold.split, %Parser_parse_access_modifier.exit.i.i.fold.split
  %common.ret.op.i.i.i.ph = phi i64 [ 1, %Parser_parse_access_modifier.exit.i.i.fold.split ], [ 2, %while.entry.i.i135 ], [ 3, %else.i.i.fold.split ]
  %311 = load i64, ptr %memberidx2.i, align 8
  %312 = load ptr, ptr %3, align 8
  %memberidx2.i58.i.i = getelementptr inbounds %Array_Token_, ptr %312, i64 0, i32 1
  %313 = load i64, ptr %memberidx2.i58.i.i, align 4
  %314 = icmp slt i64 %311, %313
  br i1 %314, label %if.entry.i.i.i136, label %ifend.i.i

if.entry.i.i.i136:                                ; preds = %else.i.i
  %315 = add nsw i64 %311, 1
  store i64 %315, ptr %memberidx2.i, align 8
  %316 = load ptr, ptr %312, align 8
  %317 = getelementptr inbounds ptr, ptr %316, i64 %315
  %318 = load ptr, ptr %317, align 8
  store ptr %318, ptr %memberidx.i69, align 8
  br label %ifend.i.i

ifend.i.i:                                        ; preds = %while.entry.i.i135.ifend.i.i_crit_edge, %else.i.i, %if.entry.i.i.i136
  %319 = phi ptr [ %312, %if.entry.i.i.i136 ], [ %312, %else.i.i ], [ %.pre338, %while.entry.i.i135.ifend.i.i_crit_edge ]
  %320 = phi i64 [ %315, %if.entry.i.i.i136 ], [ %311, %else.i.i ], [ %.pre337, %while.entry.i.i135.ifend.i.i_crit_edge ]
  %access_modifier.0.i.i = phi i64 [ %common.ret.op.i.i.i.ph, %if.entry.i.i.i136 ], [ %common.ret.op.i.i.i.ph, %else.i.i ], [ 2, %while.entry.i.i135.ifend.i.i_crit_edge ]
  %321 = add nsw i64 %320, 1
  %memberidx2.i62.i.i = getelementptr inbounds %Array_Token_, ptr %319, i64 0, i32 1
  %322 = load i64, ptr %memberidx2.i62.i.i, align 4
  %323 = icmp slt i64 %321, %322
  br i1 %323, label %Parser_peek.exit.i.i, label %Parser_peek.exit.i.i.thread

Parser_peek.exit.i.i:                             ; preds = %ifend.i.i
  %324 = load ptr, ptr %319, align 8
  %325 = getelementptr inbounds ptr, ptr %324, i64 %321
  %common.ret.op.i63.i.i = load ptr, ptr %325, align 8
  %326 = load i64, ptr %common.ret.op.i63.i.i, align 4
  %327 = icmp eq i64 %326, 1
  br i1 %327, label %if.entry3.i.i, label %Parser_peek.exit86.i.i

Parser_peek.exit.i.i.thread:                      ; preds = %ifend.i.i
  %328 = add i64 %322, -1
  %329 = load ptr, ptr %319, align 8
  %330 = getelementptr inbounds ptr, ptr %329, i64 %328
  %common.ret.op.i63.i.i277 = load ptr, ptr %330, align 8
  %331 = load i64, ptr %common.ret.op.i63.i.i277, align 4
  %332 = icmp eq i64 %331, 1
  br i1 %332, label %if.entry3.i.i, label %Parser_peek.exit86.i.i

if.entry3.i.i:                                    ; preds = %Parser_peek.exit.i.i.thread, %Parser_peek.exit.i.i
  %333 = call ptr @malloc(i32 32)
  %334 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %334, ptr %333, align 8
  %memberidx1.i68.i.i = getelementptr inbounds %FieldNode, ptr %333, i64 0, i32 2
  store ptr null, ptr %memberidx1.i68.i.i, align 8
  %335 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 1)
  %memberidx6.i.i = getelementptr inbounds %FieldNode, ptr %333, i64 0, i32 3
  %336 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %336, ptr %memberidx6.i.i, align 8
  %337 = load ptr, ptr %memberidx.i69, align 8
  %338 = load i64, ptr %337, align 4
  %339 = icmp eq i64 %338, 38
  br i1 %339, label %if.entry9.i.i, label %ifend11.i.i

Parser_peek.exit86.i.i:                           ; preds = %Parser_peek.exit.i.i.thread, %Parser_peek.exit.i.i
  %340 = phi i64 [ %326, %Parser_peek.exit.i.i ], [ %331, %Parser_peek.exit.i.i.thread ]
  %341 = icmp eq i64 %340, 25
  br i1 %341, label %if.entry16.i.i, label %else17.i.i

ifend5.i.i:                                       ; preds = %Array_MethodNode____sl__.exit.i.i, %Array_FieldNode____sl__.exit.i.i
  %342 = load ptr, ptr %memberidx.i69, align 8
  %343 = load i64, ptr %342, align 4
  %344 = icmp eq i64 %343, 33
  %345 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i90.i.i = getelementptr inbounds %Array_FloError_, ptr %345, i64 0, i32 1
  %346 = load i64, ptr %memberidx3.i.i90.i.i, align 4
  %347 = icmp eq i64 %346, 0
  %348 = and i1 %344, %347
  br i1 %348, label %while.entry.i93.i.i.preheader, label %Parser_new_lines.exit100.i.i

while.entry.i93.i.i.preheader:                    ; preds = %ifend5.i.i
  %349 = load ptr, ptr %3, align 8
  %memberidx2.i12.i92.i.i = getelementptr inbounds %Array_Token_, ptr %349, i64 0, i32 1
  %.pre360 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i93.i.i

while.entry.i93.i.i:                              ; preds = %while.entry.i93.i.i.preheader, %Parser_advance.exit.i99.i.i
  %350 = phi i64 [ 33, %while.entry.i93.i.i.preheader ], [ %358, %Parser_advance.exit.i99.i.i ]
  %351 = phi i64 [ %.pre360, %while.entry.i93.i.i.preheader ], [ %361, %Parser_advance.exit.i99.i.i ]
  %352 = load i64, ptr %memberidx2.i12.i92.i.i, align 4
  %353 = icmp slt i64 %351, %352
  br i1 %353, label %if.entry.i.i95.i.i, label %Parser_advance.exit.i99.i.i

if.entry.i.i95.i.i:                               ; preds = %while.entry.i93.i.i
  %354 = add nsw i64 %351, 1
  store i64 %354, ptr %memberidx2.i, align 8
  %355 = load ptr, ptr %349, align 8
  %356 = getelementptr inbounds ptr, ptr %355, i64 %354
  %357 = load ptr, ptr %356, align 8
  store ptr %357, ptr %memberidx.i69, align 8
  %.pre361 = load i64, ptr %357, align 4
  %.pre362 = load i64, ptr %memberidx3.i.i90.i.i, align 4
  br label %Parser_advance.exit.i99.i.i

Parser_advance.exit.i99.i.i:                      ; preds = %if.entry.i.i95.i.i, %while.entry.i93.i.i
  %358 = phi i64 [ %.pre361, %if.entry.i.i95.i.i ], [ %350, %while.entry.i93.i.i ]
  %359 = phi i64 [ %.pre362, %if.entry.i.i95.i.i ], [ 0, %while.entry.i93.i.i ]
  %360 = phi i64 [ %.pre361, %if.entry.i.i95.i.i ], [ 33, %while.entry.i93.i.i ]
  %361 = phi i64 [ %354, %if.entry.i.i95.i.i ], [ %351, %while.entry.i93.i.i ]
  %362 = icmp eq i64 %360, 33
  %363 = icmp eq i64 %359, 0
  %364 = and i1 %362, %363
  br i1 %364, label %while.entry.i93.i.i, label %Parser_new_lines.exit100.i.i

Parser_new_lines.exit100.i.i:                     ; preds = %Parser_advance.exit.i99.i.i, %ifend5.i.i
  %365 = phi i64 [ %343, %ifend5.i.i ], [ %358, %Parser_advance.exit.i99.i.i ]
  %366 = phi i64 [ %346, %ifend5.i.i ], [ %359, %Parser_advance.exit.i99.i.i ]
  %.fr278 = freeze i64 %366
  %367 = icmp eq i64 %.fr278, 0
  br i1 %367, label %switch.early.test273, label %while.end.i.i

switch.early.test273:                             ; preds = %Parser_new_lines.exit100.i.i
  switch i64 %365, label %while.entry.i.i135 [
    i64 46, label %while.end.i.i
    i64 28, label %while.end.i.i
  ]

if.entry9.i.i:                                    ; preds = %if.entry3.i.i
  %368 = load i64, ptr %memberidx2.i, align 8
  %369 = load ptr, ptr %3, align 8
  %memberidx2.i105.i.i = getelementptr inbounds %Array_Token_, ptr %369, i64 0, i32 1
  %370 = load i64, ptr %memberidx2.i105.i.i, align 4
  %371 = icmp slt i64 %368, %370
  br i1 %371, label %if.entry.i107.i.i, label %Parser_advance.exit109.i.i

if.entry.i107.i.i:                                ; preds = %if.entry9.i.i
  %372 = add nsw i64 %368, 1
  store i64 %372, ptr %memberidx2.i, align 8
  %373 = load ptr, ptr %369, align 8
  %374 = getelementptr inbounds ptr, ptr %373, i64 %372
  %375 = load ptr, ptr %374, align 8
  store ptr %375, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit109.i.i

Parser_advance.exit109.i.i:                       ; preds = %if.entry.i107.i.i, %if.entry9.i.i
  %376 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %376, ptr %memberidx1.i68.i.i, align 8
  br label %ifend11.i.i

ifend11.i.i:                                      ; preds = %Parser_advance.exit109.i.i, %if.entry3.i.i
  %memberidx13.i.i = getelementptr inbounds %FieldNode, ptr %333, i64 0, i32 1
  store i64 %access_modifier.0.i.i, ptr %memberidx13.i.i, align 4
  %377 = load ptr, ptr %memberidx1.i.i119, align 8
  %memberidx.i110.i.i = getelementptr inbounds %Array_FieldNode_, ptr %377, i64 0, i32 1
  %378 = load i64, ptr %memberidx.i110.i.i, align 4
  %379 = add i64 %378, 1
  %memberidx.i.i111.i.i = getelementptr inbounds %Array_FieldNode_, ptr %377, i64 0, i32 2
  %380 = load i64, ptr %memberidx.i.i111.i.i, align 4
  %381 = icmp slt i64 %380, %379
  %.pre357 = load ptr, ptr %377, align 8
  br i1 %381, label %while.entry.i.i112.i.i, label %Array_FieldNode____sl__.exit.i.i

while.entry.i.i112.i.i:                           ; preds = %ifend11.i.i, %while.entry.i.i112.i.i
  %382 = phi ptr [ %386, %while.entry.i.i112.i.i ], [ %.pre357, %ifend11.i.i ]
  %383 = phi i64 [ %387, %while.entry.i.i112.i.i ], [ %380, %ifend11.i.i ]
  %384 = shl nuw i64 %383, 1
  store i64 %384, ptr %memberidx.i.i111.i.i, align 4
  %385 = shl i64 %383, 4
  %386 = call ptr @realloc(ptr %382, i64 %385)
  store ptr %386, ptr %377, align 8
  %387 = load i64, ptr %memberidx.i.i111.i.i, align 4
  %388 = icmp slt i64 %387, %379
  br i1 %388, label %while.entry.i.i112.i.i, label %Array_FieldNode____sl__.exit.i.i.loopexit

Array_FieldNode____sl__.exit.i.i.loopexit:        ; preds = %while.entry.i.i112.i.i
  %.pre358 = load i64, ptr %memberidx.i110.i.i, align 4
  %.pre390 = add nsw i64 %.pre358, 1
  br label %Array_FieldNode____sl__.exit.i.i

Array_FieldNode____sl__.exit.i.i:                 ; preds = %ifend11.i.i, %Array_FieldNode____sl__.exit.i.i.loopexit
  %.pre-phi391 = phi i64 [ %.pre390, %Array_FieldNode____sl__.exit.i.i.loopexit ], [ %379, %ifend11.i.i ]
  %389 = phi ptr [ %386, %Array_FieldNode____sl__.exit.i.i.loopexit ], [ %.pre357, %ifend11.i.i ]
  %390 = phi i64 [ %.pre358, %Array_FieldNode____sl__.exit.i.i.loopexit ], [ %378, %ifend11.i.i ]
  store i64 %.pre-phi391, ptr %memberidx.i110.i.i, align 4
  %391 = getelementptr inbounds ptr, ptr %389, i64 %390
  store ptr %333, ptr %391, align 8
  br label %ifend5.i.i

if.entry16.i.i:                                   ; preds = %Parser_peek.exit86.i.i
  %392 = call ptr @malloc(i32 42)
  %393 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %393, ptr %392, align 8
  %memberidx1.i.i69.i.i = getelementptr inbounds %MethodNode, ptr %392, i64 0, i32 1
  %394 = call ptr @malloc(i32 24)
  %memberidx.i.i.i70.i.i = getelementptr inbounds %Array_ArgNode_, ptr %394, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i70.i.i, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %Array_ArgNode_, ptr %394, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i.i.i, align 4
  %395 = call ptr @malloc(i32 64)
  store ptr %395, ptr %394, align 8
  store i64 0, ptr %memberidx.i.i.i70.i.i, align 4
  store ptr %394, ptr %memberidx1.i.i69.i.i, align 8
  %memberidx4.i.i.i.i = getelementptr inbounds %MethodNode, ptr %392, i64 0, i32 5
  store i1 true, ptr %memberidx4.i.i.i.i, align 1
  %memberidx5.i.i.i.i = getelementptr inbounds %MethodNode, ptr %392, i64 0, i32 6
  store i1 false, ptr %memberidx5.i.i.i.i, align 1
  %396 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 25)
  %397 = load ptr, ptr %memberidx.i69, align 8
  %398 = load i64, ptr %397, align 4
  %399 = icmp eq i64 %398, 33
  %400 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %400, i64 0, i32 1
  %401 = load i64, ptr %memberidx3.i.i.i.i.i, align 4
  %402 = icmp eq i64 %401, 0
  %403 = and i1 %399, %402
  br i1 %403, label %while.entry.i.i73.i.i.preheader, label %Parser_new_lines.exit.i.i.i

while.entry.i.i73.i.i.preheader:                  ; preds = %if.entry16.i.i
  %404 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %404, i64 0, i32 1
  %.pre343 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i.i73.i.i

while.entry.i.i73.i.i:                            ; preds = %while.entry.i.i73.i.i.preheader, %Parser_advance.exit.i.i.i.i
  %405 = phi i64 [ 33, %while.entry.i.i73.i.i.preheader ], [ %414, %Parser_advance.exit.i.i.i.i ]
  %406 = phi ptr [ %397, %while.entry.i.i73.i.i.preheader ], [ %417, %Parser_advance.exit.i.i.i.i ]
  %407 = phi i64 [ %.pre343, %while.entry.i.i73.i.i.preheader ], [ %418, %Parser_advance.exit.i.i.i.i ]
  %408 = load i64, ptr %memberidx2.i12.i.i.i.i, align 4
  %409 = icmp slt i64 %407, %408
  br i1 %409, label %if.entry.i.i.i.i.i, label %Parser_advance.exit.i.i.i.i

if.entry.i.i.i.i.i:                               ; preds = %while.entry.i.i73.i.i
  %410 = add nsw i64 %407, 1
  store i64 %410, ptr %memberidx2.i, align 8
  %411 = load ptr, ptr %404, align 8
  %412 = getelementptr inbounds ptr, ptr %411, i64 %410
  %413 = load ptr, ptr %412, align 8
  store ptr %413, ptr %memberidx.i69, align 8
  %.pre344 = load i64, ptr %413, align 4
  %.pre345 = load i64, ptr %memberidx3.i.i.i.i.i, align 4
  br label %Parser_advance.exit.i.i.i.i

Parser_advance.exit.i.i.i.i:                      ; preds = %if.entry.i.i.i.i.i, %while.entry.i.i73.i.i
  %414 = phi i64 [ %.pre344, %if.entry.i.i.i.i.i ], [ %405, %while.entry.i.i73.i.i ]
  %415 = phi i64 [ %.pre345, %if.entry.i.i.i.i.i ], [ 0, %while.entry.i.i73.i.i ]
  %416 = phi i64 [ %.pre344, %if.entry.i.i.i.i.i ], [ 33, %while.entry.i.i73.i.i ]
  %417 = phi ptr [ %413, %if.entry.i.i.i.i.i ], [ %406, %while.entry.i.i73.i.i ]
  %418 = phi i64 [ %410, %if.entry.i.i.i.i.i ], [ %407, %while.entry.i.i73.i.i ]
  %419 = icmp eq i64 %416, 33
  %420 = icmp eq i64 %415, 0
  %421 = and i1 %419, %420
  br i1 %421, label %while.entry.i.i73.i.i, label %Parser_new_lines.exit.i.i.i

Parser_new_lines.exit.i.i.i:                      ; preds = %Parser_advance.exit.i.i.i.i, %if.entry16.i.i
  %422 = phi i64 [ %398, %if.entry16.i.i ], [ %414, %Parser_advance.exit.i.i.i.i ]
  %423 = phi ptr [ %397, %if.entry16.i.i ], [ %417, %Parser_advance.exit.i.i.i.i ]
  %.not.i.i.i = icmp eq i64 %422, 26
  br i1 %.not.i.i.i, label %ifend.i77.i.i, label %if.entry.i76.i.i

if.entry.i76.i.i:                                 ; preds = %Parser_new_lines.exit.i.i.i
  %memberidx3.i75.i.i = getelementptr inbounds %IdentifierToken, ptr %423, i64 0, i32 2
  %424 = load ptr, ptr %memberidx3.i75.i.i, align 8
  %425 = call ptr @malloc(i32 4)
  store i32 1936287860, ptr %425, align 8
  %426 = call ptr @malloc(i32 24)
  store ptr %425, ptr %426, align 8
  %memberidx1.i.i59.i.i.i = getelementptr inbounds %String, ptr %426, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i59.i.i.i, align 4
  %memberidx2.i.i60.i.i.i = getelementptr inbounds %String, ptr %426, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i60.i.i.i, align 4
  %memberidx.i61.i.i.i = getelementptr inbounds %String, ptr %424, i64 0, i32 1
  %427 = load i64, ptr %memberidx.i61.i.i.i, align 4
  %.not.i.i.i.i = icmp eq i64 %427, 4
  br i1 %.not.i.i.i.i, label %ifend.i.i.i.i, label %ifend.i77.i.i

ifend.i.i.i.i:                                    ; preds = %if.entry.i76.i.i
  %428 = load ptr, ptr %424, align 8
  %429 = call i64 @memcmp(ptr %428, ptr nonnull %425, i64 4)
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %if.entry4.i.i.i, label %ifend.i77.i.i

ifend.i77.i.i:                                    ; preds = %if.entry.i76.i.i, %if.entry4.i.i.i, %if.entry.i.i79.i.i, %ifend.i.i.i.i, %Parser_new_lines.exit.i.i.i
  %431 = load ptr, ptr %memberidx.i69, align 8
  %432 = load i64, ptr %431, align 4
  %.not57.i.i.i = icmp eq i64 %432, 26
  br i1 %.not57.i.i.i, label %Parser_new_lines.exit79.i.i.i, label %if.entry10.i.i.i

if.entry4.i.i.i:                                  ; preds = %ifend.i.i.i.i
  store i1 false, ptr %memberidx4.i.i.i.i, align 1
  %433 = load i64, ptr %memberidx2.i, align 8
  %434 = load ptr, ptr %3, align 8
  %memberidx2.i.i78.i.i = getelementptr inbounds %Array_Token_, ptr %434, i64 0, i32 1
  %435 = load i64, ptr %memberidx2.i.i78.i.i, align 4
  %436 = icmp slt i64 %433, %435
  br i1 %436, label %if.entry.i.i79.i.i, label %ifend.i77.i.i

if.entry.i.i79.i.i:                               ; preds = %if.entry4.i.i.i
  %437 = add nsw i64 %433, 1
  store i64 %437, ptr %memberidx2.i, align 8
  %438 = load ptr, ptr %434, align 8
  %439 = getelementptr inbounds ptr, ptr %438, i64 %437
  %440 = load ptr, ptr %439, align 8
  store ptr %440, ptr %memberidx.i69, align 8
  br label %ifend.i77.i.i

if.entry10.i.i.i:                                 ; preds = %ifend.i77.i.i
  %441 = load i1, ptr %memberidx4.i.i.i.i, align 1
  br i1 %441, label %ifend12.i.i.i, label %if.entry14.i.i.i

ifend12.i.i.i:                                    ; preds = %if.entry10.i.i.i, %if.entry14.i.i.i
  %442 = load ptr, ptr %memberidx1.i.i69.i.i, align 8
  call fastcc void @Parser_parse_args(ptr nonnull %3, ptr %442)
  %.pre346 = load ptr, ptr %memberidx.i69, align 8
  %.pre347 = load i64, ptr %.pre346, align 4
  %443 = icmp eq i64 %.pre347, 33
  %444 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i69.i.i.i = getelementptr inbounds %Array_FloError_, ptr %444, i64 0, i32 1
  %445 = load i64, ptr %memberidx3.i.i69.i.i.i, align 4
  %446 = icmp eq i64 %445, 0
  %447 = and i1 %443, %446
  br i1 %447, label %while.entry.i72.i.i.i.preheader, label %Parser_new_lines.exit79.i.i.i

while.entry.i72.i.i.i.preheader:                  ; preds = %ifend12.i.i.i
  %448 = load ptr, ptr %3, align 8
  %memberidx2.i12.i71.i.i.i = getelementptr inbounds %Array_Token_, ptr %448, i64 0, i32 1
  %.pre348 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i72.i.i.i

while.entry.i72.i.i.i:                            ; preds = %while.entry.i72.i.i.i.preheader, %Parser_advance.exit.i78.i.i.i
  %449 = phi i64 [ %.pre348, %while.entry.i72.i.i.i.preheader ], [ %458, %Parser_advance.exit.i78.i.i.i ]
  %450 = load i64, ptr %memberidx2.i12.i71.i.i.i, align 4
  %451 = icmp slt i64 %449, %450
  br i1 %451, label %if.entry.i.i74.i.i.i, label %Parser_advance.exit.i78.i.i.i

if.entry.i.i74.i.i.i:                             ; preds = %while.entry.i72.i.i.i
  %452 = add nsw i64 %449, 1
  store i64 %452, ptr %memberidx2.i, align 8
  %453 = load ptr, ptr %448, align 8
  %454 = getelementptr inbounds ptr, ptr %453, i64 %452
  %455 = load ptr, ptr %454, align 8
  store ptr %455, ptr %memberidx.i69, align 8
  %.pre349 = load i64, ptr %455, align 4
  %.pre350 = load i64, ptr %memberidx3.i.i69.i.i.i, align 4
  br label %Parser_advance.exit.i78.i.i.i

Parser_advance.exit.i78.i.i.i:                    ; preds = %if.entry.i.i74.i.i.i, %while.entry.i72.i.i.i
  %456 = phi i64 [ %.pre350, %if.entry.i.i74.i.i.i ], [ 0, %while.entry.i72.i.i.i ]
  %457 = phi i64 [ %.pre349, %if.entry.i.i74.i.i.i ], [ 33, %while.entry.i72.i.i.i ]
  %458 = phi i64 [ %452, %if.entry.i.i74.i.i.i ], [ %449, %while.entry.i72.i.i.i ]
  %459 = icmp eq i64 %457, 33
  %460 = icmp eq i64 %456, 0
  %461 = and i1 %459, %460
  br i1 %461, label %while.entry.i72.i.i.i, label %Parser_new_lines.exit79.i.i.i

Parser_new_lines.exit79.i.i.i:                    ; preds = %Parser_advance.exit.i78.i.i.i, %ifend.i77.i.i, %ifend12.i.i.i
  %462 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %463 = load ptr, ptr %memberidx.i69, align 8
  %464 = load i64, ptr %463, align 4
  %465 = icmp eq i64 %464, 1
  br i1 %465, label %if.entry20.i.i.i, label %else21.i.i.i

if.entry14.i.i.i:                                 ; preds = %if.entry10.i.i.i
  %466 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 3)
  br label %ifend12.i.i.i

if.entry20.i.i.i:                                 ; preds = %Parser_new_lines.exit79.i.i.i
  %467 = load i64, ptr %memberidx2.i, align 8
  %468 = load ptr, ptr %3, align 8
  %memberidx2.i81.i.i.i = getelementptr inbounds %Array_Token_, ptr %468, i64 0, i32 1
  %469 = load i64, ptr %memberidx2.i81.i.i.i, align 4
  %470 = icmp slt i64 %467, %469
  br i1 %470, label %if.entry.i83.i.i.i, label %Parser_advance.exit85.i.i.i

if.entry.i83.i.i.i:                               ; preds = %if.entry20.i.i.i
  %471 = add nsw i64 %467, 1
  store i64 %471, ptr %memberidx2.i, align 8
  %472 = load ptr, ptr %468, align 8
  %473 = getelementptr inbounds ptr, ptr %472, i64 %471
  %474 = load ptr, ptr %473, align 8
  store ptr %474, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit85.i.i.i

Parser_advance.exit85.i.i.i:                      ; preds = %if.entry.i83.i.i.i, %if.entry20.i.i.i
  %memberidx23.i.i.i = getelementptr inbounds %MethodNode, ptr %392, i64 0, i32 4
  %475 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %475, ptr %memberidx23.i.i.i, align 8
  br label %ifend22.i.i.i

else21.i.i.i:                                     ; preds = %Parser_new_lines.exit79.i.i.i
  %476 = call ptr @malloc(i32 24)
  %477 = call ptr @malloc(i32 4)
  store i32 1684631414, ptr %477, align 8
  %478 = call ptr @malloc(i32 24)
  store ptr %477, ptr %478, align 8
  %memberidx1.i.i105.i.i.i = getelementptr inbounds %String, ptr %478, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i105.i.i.i, align 4
  %memberidx2.i.i106.i.i.i = getelementptr inbounds %String, ptr %478, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i106.i.i.i, align 4
  %479 = call ptr @malloc(i32 32)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %479, i8 0, i64 32, i1 false)
  store i64 53, ptr %476, align 4
  %memberidx1.i.i110.i.i.i = getelementptr inbounds %Token, ptr %476, i64 0, i32 1
  store ptr %479, ptr %memberidx1.i.i110.i.i.i, align 8
  %memberidx.i111.i.i.i = getelementptr inbounds %IdentifierToken, ptr %476, i64 0, i32 2
  store ptr %478, ptr %memberidx.i111.i.i.i, align 8
  %memberidx24.i.i.i = getelementptr inbounds %MethodNode, ptr %392, i64 0, i32 4
  %480 = call ptr @malloc(i32 32)
  %481 = load ptr, ptr %memberidx1.i.i110.i.i.i, align 8
  store ptr %481, ptr %480, align 8
  %memberidx.i.i100.i.i.i = getelementptr inbounds %TypeNode, ptr %480, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i100.i.i.i, align 4
  %memberidx.i101.i.i.i = getelementptr inbounds %RecordTypeNode, ptr %480, i64 0, i32 2
  store ptr %476, ptr %memberidx.i101.i.i.i, align 8
  %memberidx1.i102.i.i.i = getelementptr inbounds %RecordTypeNode, ptr %480, i64 0, i32 3
  %482 = call ptr @malloc(i32 24)
  %memberidx.i5.i.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %482, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i.i.i, align 4
  %memberidx1.i.i103.i.i.i = getelementptr inbounds %Array_TypeNode_, ptr %482, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i103.i.i.i, align 4
  %483 = call ptr @malloc(i32 64)
  store ptr %483, ptr %482, align 8
  store i64 0, ptr %memberidx.i5.i.i.i.i, align 4
  store ptr %482, ptr %memberidx1.i102.i.i.i, align 8
  store ptr %480, ptr %memberidx24.i.i.i, align 8
  br label %ifend22.i.i.i

ifend22.i.i.i:                                    ; preds = %else21.i.i.i, %Parser_advance.exit85.i.i.i
  %484 = load ptr, ptr %memberidx.i69, align 8
  %485 = load i64, ptr %484, align 4
  %486 = icmp eq i64 %485, 33
  %487 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i89.i.i.i = getelementptr inbounds %Array_FloError_, ptr %487, i64 0, i32 1
  %488 = load i64, ptr %memberidx3.i.i89.i.i.i, align 4
  %489 = icmp eq i64 %488, 0
  %490 = and i1 %486, %489
  br i1 %490, label %while.entry.i92.i.i.i.preheader, label %Parser_new_lines.exit99.i.i.i

while.entry.i92.i.i.i.preheader:                  ; preds = %ifend22.i.i.i
  %491 = load ptr, ptr %3, align 8
  %memberidx2.i12.i91.i.i.i = getelementptr inbounds %Array_Token_, ptr %491, i64 0, i32 1
  %.pre351 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i92.i.i.i

while.entry.i92.i.i.i:                            ; preds = %while.entry.i92.i.i.i.preheader, %Parser_advance.exit.i98.i.i.i
  %492 = phi i64 [ 33, %while.entry.i92.i.i.i.preheader ], [ %500, %Parser_advance.exit.i98.i.i.i ]
  %493 = phi i64 [ %.pre351, %while.entry.i92.i.i.i.preheader ], [ %503, %Parser_advance.exit.i98.i.i.i ]
  %494 = load i64, ptr %memberidx2.i12.i91.i.i.i, align 4
  %495 = icmp slt i64 %493, %494
  br i1 %495, label %if.entry.i.i94.i.i.i, label %Parser_advance.exit.i98.i.i.i

if.entry.i.i94.i.i.i:                             ; preds = %while.entry.i92.i.i.i
  %496 = add nsw i64 %493, 1
  store i64 %496, ptr %memberidx2.i, align 8
  %497 = load ptr, ptr %491, align 8
  %498 = getelementptr inbounds ptr, ptr %497, i64 %496
  %499 = load ptr, ptr %498, align 8
  store ptr %499, ptr %memberidx.i69, align 8
  %.pre352 = load i64, ptr %499, align 4
  %.pre353 = load i64, ptr %memberidx3.i.i89.i.i.i, align 4
  br label %Parser_advance.exit.i98.i.i.i

Parser_advance.exit.i98.i.i.i:                    ; preds = %if.entry.i.i94.i.i.i, %while.entry.i92.i.i.i
  %500 = phi i64 [ %.pre352, %if.entry.i.i94.i.i.i ], [ %492, %while.entry.i92.i.i.i ]
  %501 = phi i64 [ %.pre353, %if.entry.i.i94.i.i.i ], [ 0, %while.entry.i92.i.i.i ]
  %502 = phi i64 [ %.pre352, %if.entry.i.i94.i.i.i ], [ 33, %while.entry.i92.i.i.i ]
  %503 = phi i64 [ %496, %if.entry.i.i94.i.i.i ], [ %493, %while.entry.i92.i.i.i ]
  %504 = icmp eq i64 %502, 33
  %505 = icmp eq i64 %501, 0
  %506 = and i1 %504, %505
  br i1 %506, label %while.entry.i92.i.i.i, label %Parser_new_lines.exit99.i.i.i

Parser_new_lines.exit99.i.i.i:                    ; preds = %Parser_advance.exit.i98.i.i.i, %ifend22.i.i.i
  %507 = phi i64 [ %485, %ifend22.i.i.i ], [ %500, %Parser_advance.exit.i98.i.i.i ]
  %508 = icmp eq i64 %507, 27
  br i1 %508, label %if.entry28.i.i.i, label %else29.i.i.i

if.entry28.i.i.i:                                 ; preds = %Parser_new_lines.exit99.i.i.i
  %memberidx31.i.i.i = getelementptr inbounds %MethodNode, ptr %392, i64 0, i32 2
  %509 = call fastcc ptr @Parser_parse_block(ptr nonnull %3)
  store ptr %509, ptr %memberidx31.i.i.i, align 8
  br label %Parser_parse_method.exit.i.i

else29.i.i.i:                                     ; preds = %Parser_new_lines.exit99.i.i.i
  store i1 true, ptr %memberidx5.i.i.i.i, align 1
  br label %Parser_parse_method.exit.i.i

Parser_parse_method.exit.i.i:                     ; preds = %else29.i.i.i, %if.entry28.i.i.i
  %memberidx19.i.i = getelementptr inbounds %MethodNode, ptr %392, i64 0, i32 3
  store i64 %access_modifier.0.i.i, ptr %memberidx19.i.i, align 4
  %510 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx.i66.i.i = getelementptr inbounds %Array_MethodNode_, ptr %510, i64 0, i32 1
  %511 = load i64, ptr %memberidx.i66.i.i, align 4
  %512 = add i64 %511, 1
  %memberidx.i.i67.i.i = getelementptr inbounds %Array_MethodNode_, ptr %510, i64 0, i32 2
  %513 = load i64, ptr %memberidx.i.i67.i.i, align 4
  %514 = icmp slt i64 %513, %512
  %.pre354 = load ptr, ptr %510, align 8
  br i1 %514, label %while.entry.i.i.i.i, label %Array_MethodNode____sl__.exit.i.i

while.entry.i.i.i.i:                              ; preds = %Parser_parse_method.exit.i.i, %while.entry.i.i.i.i
  %515 = phi ptr [ %519, %while.entry.i.i.i.i ], [ %.pre354, %Parser_parse_method.exit.i.i ]
  %516 = phi i64 [ %520, %while.entry.i.i.i.i ], [ %513, %Parser_parse_method.exit.i.i ]
  %517 = shl nuw i64 %516, 1
  store i64 %517, ptr %memberidx.i.i67.i.i, align 4
  %518 = shl i64 %516, 4
  %519 = call ptr @realloc(ptr %515, i64 %518)
  store ptr %519, ptr %510, align 8
  %520 = load i64, ptr %memberidx.i.i67.i.i, align 4
  %521 = icmp slt i64 %520, %512
  br i1 %521, label %while.entry.i.i.i.i, label %Array_MethodNode____sl__.exit.i.i.loopexit

Array_MethodNode____sl__.exit.i.i.loopexit:       ; preds = %while.entry.i.i.i.i
  %.pre355 = load i64, ptr %memberidx.i66.i.i, align 4
  %.pre394 = add nsw i64 %.pre355, 1
  br label %Array_MethodNode____sl__.exit.i.i

Array_MethodNode____sl__.exit.i.i:                ; preds = %Parser_parse_method.exit.i.i, %Array_MethodNode____sl__.exit.i.i.loopexit
  %.pre-phi395 = phi i64 [ %.pre394, %Array_MethodNode____sl__.exit.i.i.loopexit ], [ %512, %Parser_parse_method.exit.i.i ]
  %522 = phi ptr [ %519, %Array_MethodNode____sl__.exit.i.i.loopexit ], [ %.pre354, %Parser_parse_method.exit.i.i ]
  %523 = phi i64 [ %.pre355, %Array_MethodNode____sl__.exit.i.i.loopexit ], [ %511, %Parser_parse_method.exit.i.i ]
  store i64 %.pre-phi395, ptr %memberidx.i66.i.i, align 4
  %524 = getelementptr inbounds ptr, ptr %522, i64 %523
  store ptr %392, ptr %524, align 8
  br label %ifend5.i.i

else17.i.i:                                       ; preds = %Parser_peek.exit86.i.i
  %525 = call ptr @malloc(i32 19)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(19) %525, ptr noundef nonnull align 8 dereferenceable(19) @78, i64 19, i1 false)
  %526 = call ptr @malloc(i32 24)
  store ptr %525, ptr %526, align 8
  %memberidx1.i.i55.i.i = getelementptr inbounds %String, ptr %526, i64 0, i32 1
  store i64 19, ptr %memberidx1.i.i55.i.i, align 4
  %memberidx2.i.i56.i.i = getelementptr inbounds %String, ptr %526, i64 0, i32 2
  store i64 19, ptr %memberidx2.i.i56.i.i, align 4
  %527 = load ptr, ptr %memberidx1.i, align 8
  %528 = call ptr @malloc(i32 24)
  %529 = load ptr, ptr %memberidx.i69, align 8
  %memberidx2.i.i.i139 = getelementptr inbounds %Token, ptr %529, i64 0, i32 1
  %530 = load ptr, ptr %memberidx2.i.i.i139, align 8
  store i64 2, ptr %528, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloError, ptr %528, i64 0, i32 2
  store ptr %530, ptr %memberidx1.i.i.i.i, align 8
  %memberidx2.i.i50.i.i = getelementptr inbounds %FloError, ptr %528, i64 0, i32 1
  store ptr %526, ptr %memberidx2.i.i50.i.i, align 8
  %memberidx.i.i51.i.i = getelementptr inbounds %Array_FloError_, ptr %527, i64 0, i32 1
  %531 = load i64, ptr %memberidx.i.i51.i.i, align 4
  %532 = add i64 %531, 1
  %memberidx.i.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %527, i64 0, i32 2
  %533 = load i64, ptr %memberidx.i.i.i.i.i, align 4
  %534 = icmp slt i64 %533, %532
  %.pre340 = load ptr, ptr %527, align 8
  br i1 %534, label %while.entry.i.i.i.i.i, label %Parser_error.exit.i.i

while.entry.i.i.i.i.i:                            ; preds = %else17.i.i, %while.entry.i.i.i.i.i
  %535 = phi ptr [ %539, %while.entry.i.i.i.i.i ], [ %.pre340, %else17.i.i ]
  %536 = phi i64 [ %540, %while.entry.i.i.i.i.i ], [ %533, %else17.i.i ]
  %537 = shl nuw i64 %536, 1
  store i64 %537, ptr %memberidx.i.i.i.i.i, align 4
  %538 = shl i64 %536, 4
  %539 = call ptr @realloc(ptr %535, i64 %538)
  store ptr %539, ptr %527, align 8
  %540 = load i64, ptr %memberidx.i.i.i.i.i, align 4
  %541 = icmp slt i64 %540, %532
  br i1 %541, label %while.entry.i.i.i.i.i, label %Parser_error.exit.i.i.loopexit

Parser_error.exit.i.i.loopexit:                   ; preds = %while.entry.i.i.i.i.i
  %.pre341 = load i64, ptr %memberidx.i.i51.i.i, align 4
  %.pre396 = add nsw i64 %.pre341, 1
  br label %Parser_error.exit.i.i

Parser_error.exit.i.i:                            ; preds = %else17.i.i, %Parser_error.exit.i.i.loopexit
  %.pre-phi397 = phi i64 [ %.pre396, %Parser_error.exit.i.i.loopexit ], [ %532, %else17.i.i ]
  %542 = phi ptr [ %539, %Parser_error.exit.i.i.loopexit ], [ %.pre340, %else17.i.i ]
  %543 = phi i64 [ %.pre341, %Parser_error.exit.i.i.loopexit ], [ %531, %else17.i.i ]
  store i64 %.pre-phi397, ptr %memberidx.i.i51.i.i, align 4
  %544 = getelementptr inbounds ptr, ptr %542, i64 %543
  store ptr %528, ptr %544, align 8
  br label %Parser_parse_class.exit

Parser_parse_class.exit:                          ; preds = %while.end.i.i, %Parser_error.exit.i.i
  %memberidx.i140 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %167, i64 0, i32 1
  %545 = load i64, ptr %memberidx.i140, align 4
  %546 = add i64 %545, 1
  %memberidx.i.i141 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %167, i64 0, i32 2
  %547 = load i64, ptr %memberidx.i.i141, align 4
  %548 = icmp slt i64 %547, %546
  %.pre363 = load ptr, ptr %167, align 8
  br i1 %548, label %while.entry.i.i142, label %Array_ClassDeclarationNode____sl__.exit

while.entry.i.i142:                               ; preds = %Parser_parse_class.exit, %while.entry.i.i142
  %549 = phi ptr [ %553, %while.entry.i.i142 ], [ %.pre363, %Parser_parse_class.exit ]
  %550 = phi i64 [ %554, %while.entry.i.i142 ], [ %547, %Parser_parse_class.exit ]
  %551 = shl nuw i64 %550, 1
  store i64 %551, ptr %memberidx.i.i141, align 4
  %552 = shl i64 %550, 4
  %553 = call ptr @realloc(ptr %549, i64 %552)
  store ptr %553, ptr %167, align 8
  %554 = load i64, ptr %memberidx.i.i141, align 4
  %555 = icmp slt i64 %554, %546
  br i1 %555, label %while.entry.i.i142, label %Array_ClassDeclarationNode____sl__.exit.loopexit

Array_ClassDeclarationNode____sl__.exit.loopexit: ; preds = %while.entry.i.i142
  %.pre364 = load i64, ptr %memberidx.i140, align 4
  %.pre392 = add nsw i64 %.pre364, 1
  br label %Array_ClassDeclarationNode____sl__.exit

Array_ClassDeclarationNode____sl__.exit:          ; preds = %Parser_parse_class.exit, %Array_ClassDeclarationNode____sl__.exit.loopexit
  %.pre-phi393 = phi i64 [ %.pre392, %Array_ClassDeclarationNode____sl__.exit.loopexit ], [ %546, %Parser_parse_class.exit ]
  %556 = phi ptr [ %553, %Array_ClassDeclarationNode____sl__.exit.loopexit ], [ %.pre363, %Parser_parse_class.exit ]
  %557 = phi i64 [ %.pre364, %Array_ClassDeclarationNode____sl__.exit.loopexit ], [ %545, %Parser_parse_class.exit ]
  store i64 %.pre-phi393, ptr %memberidx.i140, align 4
  %558 = getelementptr inbounds ptr, ptr %556, i64 %557
  store ptr %176, ptr %558, align 8
  br label %ifend

if.entry11:                                       ; preds = %while.entry
  %559 = load ptr, ptr %memberidx14, align 8
  %560 = load i64, ptr %memberidx2.i, align 8
  %561 = load ptr, ptr %3, align 8
  %memberidx2.i.i144 = getelementptr inbounds %Array_Token_, ptr %561, i64 0, i32 1
  %562 = load i64, ptr %memberidx2.i.i144, align 4
  %563 = icmp slt i64 %560, %562
  br i1 %563, label %if.entry.i.i146, label %Parser_advance.exit.i151

if.entry.i.i146:                                  ; preds = %if.entry11
  %564 = add nsw i64 %560, 1
  store i64 %564, ptr %memberidx2.i, align 8
  %565 = load ptr, ptr %561, align 8
  %566 = getelementptr inbounds ptr, ptr %565, i64 %564
  %567 = load ptr, ptr %566, align 8
  store ptr %567, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i151

Parser_advance.exit.i151:                         ; preds = %if.entry.i.i146, %if.entry11
  %568 = call ptr @malloc(i32 24)
  %569 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %569, ptr %568, align 8
  %memberidx1.i.i147 = getelementptr inbounds %EnumNode, ptr %568, i64 0, i32 1
  %570 = call ptr @malloc(i32 24)
  %memberidx.i.i36.i = getelementptr inbounds %Array_EnumNodeField_, ptr %570, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i36.i, align 4
  %memberidx1.i.i.i148 = getelementptr inbounds %Array_EnumNodeField_, ptr %570, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i148, align 4
  %571 = call ptr @malloc(i32 64)
  store ptr %571, ptr %570, align 8
  store i64 0, ptr %memberidx.i.i36.i, align 4
  store ptr %570, ptr %memberidx1.i.i147, align 8
  %memberidx4.i.i149 = getelementptr inbounds %EnumNode, ptr %568, i64 0, i32 2
  store ptr null, ptr %memberidx4.i.i149, align 8
  %572 = load ptr, ptr %memberidx.i69, align 8
  %573 = load i64, ptr %572, align 4
  %574 = icmp eq i64 %573, 25
  br i1 %574, label %if.entry.i154, label %ifend.i158

if.entry.i154:                                    ; preds = %Parser_advance.exit.i151
  %575 = load i64, ptr %memberidx2.i, align 8
  %576 = load ptr, ptr %3, align 8
  %memberidx2.i39.i153 = getelementptr inbounds %Array_Token_, ptr %576, i64 0, i32 1
  %577 = load i64, ptr %memberidx2.i39.i153, align 4
  %578 = icmp slt i64 %575, %577
  br i1 %578, label %if.entry.i41.i156, label %Parser_advance.exit42.i

if.entry.i41.i156:                                ; preds = %if.entry.i154
  %579 = add nsw i64 %575, 1
  store i64 %579, ptr %memberidx2.i, align 8
  %580 = load ptr, ptr %576, align 8
  %581 = getelementptr inbounds ptr, ptr %580, i64 %579
  %582 = load ptr, ptr %581, align 8
  store ptr %582, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit42.i

Parser_advance.exit42.i:                          ; preds = %if.entry.i41.i156, %if.entry.i154
  %583 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %583, ptr %memberidx4.i.i149, align 8
  %584 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 26)
  %.pre305 = load ptr, ptr %memberidx.i69, align 8
  %.pre306 = load i64, ptr %.pre305, align 4
  br label %ifend.i158

ifend.i158:                                       ; preds = %Parser_advance.exit42.i, %Parser_advance.exit.i151
  %585 = phi i64 [ %.pre306, %Parser_advance.exit42.i ], [ %573, %Parser_advance.exit.i151 ]
  %586 = icmp eq i64 %585, 33
  %587 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i46.i = getelementptr inbounds %Array_FloError_, ptr %587, i64 0, i32 1
  %588 = load i64, ptr %memberidx3.i.i46.i, align 4
  %589 = icmp eq i64 %588, 0
  %590 = and i1 %586, %589
  br i1 %590, label %while.entry.i49.i.preheader, label %Parser_new_lines.exit56.i

while.entry.i49.i.preheader:                      ; preds = %ifend.i158
  %591 = load ptr, ptr %3, align 8
  %memberidx2.i12.i48.i = getelementptr inbounds %Array_Token_, ptr %591, i64 0, i32 1
  %.pre307 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i49.i

while.entry.i49.i:                                ; preds = %while.entry.i49.i.preheader, %Parser_advance.exit.i55.i
  %592 = phi i64 [ %.pre307, %while.entry.i49.i.preheader ], [ %601, %Parser_advance.exit.i55.i ]
  %593 = load i64, ptr %memberidx2.i12.i48.i, align 4
  %594 = icmp slt i64 %592, %593
  br i1 %594, label %if.entry.i.i51.i, label %Parser_advance.exit.i55.i

if.entry.i.i51.i:                                 ; preds = %while.entry.i49.i
  %595 = add nsw i64 %592, 1
  store i64 %595, ptr %memberidx2.i, align 8
  %596 = load ptr, ptr %591, align 8
  %597 = getelementptr inbounds ptr, ptr %596, i64 %595
  %598 = load ptr, ptr %597, align 8
  store ptr %598, ptr %memberidx.i69, align 8
  %.pre308 = load i64, ptr %598, align 4
  %.pre309 = load i64, ptr %memberidx3.i.i46.i, align 4
  br label %Parser_advance.exit.i55.i

Parser_advance.exit.i55.i:                        ; preds = %if.entry.i.i51.i, %while.entry.i49.i
  %599 = phi i64 [ %.pre309, %if.entry.i.i51.i ], [ 0, %while.entry.i49.i ]
  %600 = phi i64 [ %.pre308, %if.entry.i.i51.i ], [ 33, %while.entry.i49.i ]
  %601 = phi i64 [ %595, %if.entry.i.i51.i ], [ %592, %while.entry.i49.i ]
  %602 = icmp eq i64 %600, 33
  %603 = icmp eq i64 %599, 0
  %604 = and i1 %602, %603
  br i1 %604, label %while.entry.i49.i, label %Parser_new_lines.exit56.i

Parser_new_lines.exit56.i:                        ; preds = %Parser_advance.exit.i55.i, %ifend.i158
  %605 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 27)
  %606 = load ptr, ptr %memberidx.i69, align 8
  %607 = load i64, ptr %606, align 4
  %608 = icmp eq i64 %607, 33
  %609 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i60.i = getelementptr inbounds %Array_FloError_, ptr %609, i64 0, i32 1
  %610 = load i64, ptr %memberidx3.i.i60.i, align 4
  %611 = icmp eq i64 %610, 0
  %612 = and i1 %608, %611
  br i1 %612, label %while.entry.i63.i.preheader, label %Parser_new_lines.exit70.i

while.entry.i63.i.preheader:                      ; preds = %Parser_new_lines.exit56.i
  %613 = load ptr, ptr %3, align 8
  %memberidx2.i12.i62.i = getelementptr inbounds %Array_Token_, ptr %613, i64 0, i32 1
  %.pre310 = load i64, ptr %memberidx2.i, align 8
  br label %while.entry.i63.i

while.entry.i63.i:                                ; preds = %while.entry.i63.i.preheader, %Parser_advance.exit.i69.i
  %614 = phi i64 [ 33, %while.entry.i63.i.preheader ], [ %622, %Parser_advance.exit.i69.i ]
  %615 = phi i64 [ %.pre310, %while.entry.i63.i.preheader ], [ %625, %Parser_advance.exit.i69.i ]
  %616 = load i64, ptr %memberidx2.i12.i62.i, align 4
  %617 = icmp slt i64 %615, %616
  br i1 %617, label %if.entry.i.i65.i, label %Parser_advance.exit.i69.i

if.entry.i.i65.i:                                 ; preds = %while.entry.i63.i
  %618 = add nsw i64 %615, 1
  store i64 %618, ptr %memberidx2.i, align 8
  %619 = load ptr, ptr %613, align 8
  %620 = getelementptr inbounds ptr, ptr %619, i64 %618
  %621 = load ptr, ptr %620, align 8
  store ptr %621, ptr %memberidx.i69, align 8
  %.pre311 = load i64, ptr %621, align 4
  %.pre312 = load i64, ptr %memberidx3.i.i60.i, align 4
  br label %Parser_advance.exit.i69.i

Parser_advance.exit.i69.i:                        ; preds = %if.entry.i.i65.i, %while.entry.i63.i
  %622 = phi i64 [ %.pre311, %if.entry.i.i65.i ], [ %614, %while.entry.i63.i ]
  %623 = phi i64 [ %.pre312, %if.entry.i.i65.i ], [ 0, %while.entry.i63.i ]
  %624 = phi i64 [ %.pre311, %if.entry.i.i65.i ], [ 33, %while.entry.i63.i ]
  %625 = phi i64 [ %618, %if.entry.i.i65.i ], [ %615, %while.entry.i63.i ]
  %626 = icmp eq i64 %624, 33
  %627 = icmp eq i64 %623, 0
  %628 = and i1 %626, %627
  br i1 %628, label %while.entry.i63.i, label %Parser_new_lines.exit70.i

Parser_new_lines.exit70.i:                        ; preds = %Parser_advance.exit.i69.i, %Parser_new_lines.exit56.i
  %629 = phi i64 [ %607, %Parser_new_lines.exit56.i ], [ %622, %Parser_advance.exit.i69.i ]
  %630 = icmp eq i64 %629, 53
  br i1 %630, label %while.entry.i159, label %Parser_parse_enum.exit

while.entry.i159:                                 ; preds = %Parser_new_lines.exit70.i, %Parser_new_lines.exit.i176
  %631 = call ptr @malloc(i32 16)
  %632 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %632, ptr %631, align 8
  %memberidx1.i76.i = getelementptr inbounds %EnumNodeField, ptr %631, i64 0, i32 1
  store ptr null, ptr %memberidx1.i76.i, align 8
  %633 = load ptr, ptr %memberidx.i69, align 8
  %634 = load i64, ptr %633, align 4
  %635 = icmp eq i64 %634, 38
  br i1 %635, label %if.entry7.i, label %ifend9.i

if.entry7.i:                                      ; preds = %while.entry.i159
  %636 = load i64, ptr %memberidx2.i, align 8
  %637 = load ptr, ptr %3, align 8
  %memberidx2.i72.i = getelementptr inbounds %Array_Token_, ptr %637, i64 0, i32 1
  %638 = load i64, ptr %memberidx2.i72.i, align 4
  %639 = icmp slt i64 %636, %638
  br i1 %639, label %if.entry.i74.i, label %Parser_advance.exit75.i

if.entry.i74.i:                                   ; preds = %if.entry7.i
  %640 = add nsw i64 %636, 1
  store i64 %640, ptr %memberidx2.i, align 8
  %641 = load ptr, ptr %637, align 8
  %642 = getelementptr inbounds ptr, ptr %641, i64 %640
  %643 = load ptr, ptr %642, align 8
  store ptr %643, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit75.i

Parser_advance.exit75.i:                          ; preds = %if.entry.i74.i, %if.entry7.i
  %644 = call fastcc ptr @Parser_parse_expression(ptr nonnull %3)
  store ptr %644, ptr %memberidx1.i76.i, align 8
  br label %ifend9.i

ifend9.i:                                         ; preds = %Parser_advance.exit75.i, %while.entry.i159
  %645 = load ptr, ptr %memberidx1.i.i147, align 8
  %memberidx.i34.i = getelementptr inbounds %Array_EnumNodeField_, ptr %645, i64 0, i32 1
  %646 = load i64, ptr %memberidx.i34.i, align 4
  %647 = add i64 %646, 1
  %memberidx.i.i35.i = getelementptr inbounds %Array_EnumNodeField_, ptr %645, i64 0, i32 2
  %648 = load i64, ptr %memberidx.i.i35.i, align 4
  %649 = icmp slt i64 %648, %647
  %.pre313 = load ptr, ptr %645, align 8
  br i1 %649, label %while.entry.i.i.i162, label %Array_EnumNodeField____sl__.exit.i

while.entry.i.i.i162:                             ; preds = %ifend9.i, %while.entry.i.i.i162
  %650 = phi ptr [ %654, %while.entry.i.i.i162 ], [ %.pre313, %ifend9.i ]
  %651 = phi i64 [ %655, %while.entry.i.i.i162 ], [ %648, %ifend9.i ]
  %652 = shl nuw i64 %651, 1
  store i64 %652, ptr %memberidx.i.i35.i, align 4
  %653 = shl i64 %651, 4
  %654 = call ptr @realloc(ptr %650, i64 %653)
  store ptr %654, ptr %645, align 8
  %655 = load i64, ptr %memberidx.i.i35.i, align 4
  %656 = icmp slt i64 %655, %647
  br i1 %656, label %while.entry.i.i.i162, label %Array_EnumNodeField____sl__.exit.i.loopexit

Array_EnumNodeField____sl__.exit.i.loopexit:      ; preds = %while.entry.i.i.i162
  %.pre314 = load i64, ptr %memberidx.i34.i, align 4
  %.pre398 = add nsw i64 %.pre314, 1
  br label %Array_EnumNodeField____sl__.exit.i

Array_EnumNodeField____sl__.exit.i:               ; preds = %ifend9.i, %Array_EnumNodeField____sl__.exit.i.loopexit
  %.pre-phi399 = phi i64 [ %.pre398, %Array_EnumNodeField____sl__.exit.i.loopexit ], [ %647, %ifend9.i ]
  %657 = phi ptr [ %654, %Array_EnumNodeField____sl__.exit.i.loopexit ], [ %.pre313, %ifend9.i ]
  %658 = phi i64 [ %.pre314, %Array_EnumNodeField____sl__.exit.i.loopexit ], [ %646, %ifend9.i ]
  store i64 %.pre-phi399, ptr %memberidx.i34.i, align 4
  %659 = getelementptr inbounds ptr, ptr %657, i64 %658
  store ptr %631, ptr %659, align 8
  %660 = load ptr, ptr %memberidx.i69, align 8
  %661 = load i64, ptr %660, align 4
  %662 = icmp eq i64 %661, 33
  %663 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i.i.i166 = getelementptr inbounds %Array_FloError_, ptr %663, i64 0, i32 1
  %664 = load i64, ptr %memberidx3.i.i.i166, align 4
  %665 = icmp eq i64 %664, 0
  %666 = and i1 %662, %665
  br i1 %666, label %while.entry.i.i169.preheader, label %Parser_new_lines.exit.i176

while.entry.i.i169.preheader:                     ; preds = %Array_EnumNodeField____sl__.exit.i
  %667 = load ptr, ptr %3, align 8
  %memberidx2.i12.i.i168 = getelementptr inbounds %Array_Token_, ptr %667, i64 0, i32 1
  %668 = load i64, ptr %memberidx2.i, align 8
  %669 = load i64, ptr %memberidx2.i12.i.i168, align 4
  %670 = icmp slt i64 %668, %669
  br i1 %670, label %while.entry.i.i169, label %while.entry.i.i169.us

while.entry.i.i169.us:                            ; preds = %while.entry.i.i169.preheader, %while.entry.i.i169.us
  br label %while.entry.i.i169.us

while.entry.i.i169:                               ; preds = %while.entry.i.i169.preheader, %Parser_advance.exit.i.i175
  %671 = phi i64 [ %679, %Parser_advance.exit.i.i175 ], [ 33, %while.entry.i.i169.preheader ]
  %672 = phi i64 [ %682, %Parser_advance.exit.i.i175 ], [ %668, %while.entry.i.i169.preheader ]
  %673 = load i64, ptr %memberidx2.i12.i.i168, align 4
  %674 = icmp slt i64 %672, %673
  br i1 %674, label %if.entry.i.i.i171, label %Parser_advance.exit.i.i175

if.entry.i.i.i171:                                ; preds = %while.entry.i.i169
  %675 = add nsw i64 %672, 1
  store i64 %675, ptr %memberidx2.i, align 8
  %676 = load ptr, ptr %667, align 8
  %677 = getelementptr inbounds ptr, ptr %676, i64 %675
  %678 = load ptr, ptr %677, align 8
  store ptr %678, ptr %memberidx.i69, align 8
  %.pre316 = load i64, ptr %678, align 4
  %.pre317 = load i64, ptr %memberidx3.i.i.i166, align 4
  br label %Parser_advance.exit.i.i175

Parser_advance.exit.i.i175:                       ; preds = %if.entry.i.i.i171, %while.entry.i.i169
  %679 = phi i64 [ %.pre316, %if.entry.i.i.i171 ], [ %671, %while.entry.i.i169 ]
  %680 = phi i64 [ %.pre317, %if.entry.i.i.i171 ], [ 0, %while.entry.i.i169 ]
  %681 = phi i64 [ %.pre316, %if.entry.i.i.i171 ], [ 33, %while.entry.i.i169 ]
  %682 = phi i64 [ %675, %if.entry.i.i.i171 ], [ %672, %while.entry.i.i169 ]
  %683 = icmp eq i64 %681, 33
  %684 = icmp eq i64 %680, 0
  %685 = and i1 %683, %684
  br i1 %685, label %while.entry.i.i169, label %Parser_new_lines.exit.i176

Parser_new_lines.exit.i176:                       ; preds = %Parser_advance.exit.i.i175, %Array_EnumNodeField____sl__.exit.i
  %686 = phi i64 [ %661, %Array_EnumNodeField____sl__.exit.i ], [ %679, %Parser_advance.exit.i.i175 ]
  %687 = icmp eq i64 %686, 53
  br i1 %687, label %while.entry.i159, label %Parser_parse_enum.exit

Parser_parse_enum.exit:                           ; preds = %Parser_new_lines.exit.i176, %Parser_new_lines.exit70.i
  %688 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 28)
  %memberidx.i177 = getelementptr inbounds %Array_EnumNode_, ptr %559, i64 0, i32 1
  %689 = load i64, ptr %memberidx.i177, align 4
  %690 = add i64 %689, 1
  %memberidx.i.i178 = getelementptr inbounds %Array_EnumNode_, ptr %559, i64 0, i32 2
  %691 = load i64, ptr %memberidx.i.i178, align 4
  %692 = icmp slt i64 %691, %690
  %.pre318 = load ptr, ptr %559, align 8
  br i1 %692, label %while.entry.i.i179, label %Array_EnumNode____sl__.exit

while.entry.i.i179:                               ; preds = %Parser_parse_enum.exit, %while.entry.i.i179
  %693 = phi ptr [ %697, %while.entry.i.i179 ], [ %.pre318, %Parser_parse_enum.exit ]
  %694 = phi i64 [ %698, %while.entry.i.i179 ], [ %691, %Parser_parse_enum.exit ]
  %695 = shl nuw i64 %694, 1
  store i64 %695, ptr %memberidx.i.i178, align 4
  %696 = shl i64 %694, 4
  %697 = call ptr @realloc(ptr %693, i64 %696)
  store ptr %697, ptr %559, align 8
  %698 = load i64, ptr %memberidx.i.i178, align 4
  %699 = icmp slt i64 %698, %690
  br i1 %699, label %while.entry.i.i179, label %Array_EnumNode____sl__.exit.loopexit

Array_EnumNode____sl__.exit.loopexit:             ; preds = %while.entry.i.i179
  %.pre319 = load i64, ptr %memberidx.i177, align 4
  %.pre400 = add nsw i64 %.pre319, 1
  br label %Array_EnumNode____sl__.exit

Array_EnumNode____sl__.exit:                      ; preds = %Parser_parse_enum.exit, %Array_EnumNode____sl__.exit.loopexit
  %.pre-phi401 = phi i64 [ %.pre400, %Array_EnumNode____sl__.exit.loopexit ], [ %690, %Parser_parse_enum.exit ]
  %700 = phi ptr [ %697, %Array_EnumNode____sl__.exit.loopexit ], [ %.pre318, %Parser_parse_enum.exit ]
  %701 = phi i64 [ %.pre319, %Array_EnumNode____sl__.exit.loopexit ], [ %689, %Parser_parse_enum.exit ]
  store i64 %.pre-phi401, ptr %memberidx.i177, align 4
  %702 = getelementptr inbounds ptr, ptr %700, i64 %701
  store ptr %568, ptr %702, align 8
  br label %ifend

if.entry17:                                       ; preds = %while.entry
  %703 = load ptr, ptr %memberidx20, align 8
  %704 = load i64, ptr %memberidx2.i, align 8
  %705 = load ptr, ptr %3, align 8
  %memberidx2.i.i181 = getelementptr inbounds %Array_Token_, ptr %705, i64 0, i32 1
  %706 = load i64, ptr %memberidx2.i.i181, align 4
  %707 = icmp slt i64 %704, %706
  br i1 %707, label %if.entry.i.i183, label %Parser_advance.exit.i187

if.entry.i.i183:                                  ; preds = %if.entry17
  %708 = add nsw i64 %704, 1
  store i64 %708, ptr %memberidx2.i, align 8
  %709 = load ptr, ptr %705, align 8
  %710 = getelementptr inbounds ptr, ptr %709, i64 %708
  %711 = load ptr, ptr %710, align 8
  store ptr %711, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i187

Parser_advance.exit.i187:                         ; preds = %if.entry.i.i183, %if.entry17
  %712 = call ptr @malloc(i32 24)
  %713 = call ptr @malloc(i32 24)
  %memberidx.i.i.i184 = getelementptr inbounds %Array_ImportClause_, ptr %713, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i184, align 4
  %memberidx1.i.i.i185 = getelementptr inbounds %Array_ImportClause_, ptr %713, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i185, align 4
  %714 = call ptr @malloc(i32 64)
  store ptr %714, ptr %713, align 8
  store i64 0, ptr %memberidx.i.i.i184, align 4
  store ptr %713, ptr %712, align 8
  %memberidx3.i33.i = getelementptr inbounds %ImportNode, ptr %712, i64 0, i32 2
  store ptr null, ptr %memberidx3.i33.i, align 8
  %715 = load ptr, ptr %memberidx.i69, align 8
  %716 = load i64, ptr %715, align 4
  %717 = icmp eq i64 %716, 53
  br i1 %717, label %if.entry.i188, label %ifend.i198

if.entry.i188:                                    ; preds = %Parser_advance.exit.i187
  %718 = call ptr @malloc(i32 16)
  %719 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %719, ptr %718, align 8
  %memberidx1.i.i34.i = getelementptr inbounds %ImportClause, ptr %718, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i34.i, align 8
  %720 = load ptr, ptr %memberidx.i69, align 8
  %721 = load i64, ptr %720, align 4
  %722 = icmp eq i64 %721, 74
  br i1 %722, label %if.entry.i37.i, label %Parser_parse_import_clause.exit.i

if.entry.i37.i:                                   ; preds = %if.entry.i188
  %723 = load i64, ptr %memberidx2.i, align 8
  %724 = load ptr, ptr %3, align 8
  %memberidx2.i.i.i190 = getelementptr inbounds %Array_Token_, ptr %724, i64 0, i32 1
  %725 = load i64, ptr %memberidx2.i.i.i190, align 4
  %726 = icmp slt i64 %723, %725
  br i1 %726, label %if.entry.i.i.i192, label %Parser_advance.exit.i.i193

if.entry.i.i.i192:                                ; preds = %if.entry.i37.i
  %727 = add nsw i64 %723, 1
  store i64 %727, ptr %memberidx2.i, align 8
  %728 = load ptr, ptr %724, align 8
  %729 = getelementptr inbounds ptr, ptr %728, i64 %727
  %730 = load ptr, ptr %729, align 8
  store ptr %730, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i.i193

Parser_advance.exit.i.i193:                       ; preds = %if.entry.i.i.i192, %if.entry.i37.i
  %731 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %731, ptr %memberidx1.i.i34.i, align 8
  br label %Parser_parse_import_clause.exit.i

Parser_parse_import_clause.exit.i:                ; preds = %Parser_advance.exit.i.i193, %if.entry.i188
  %732 = load i64, ptr %memberidx.i.i.i184, align 4
  %733 = add i64 %732, 1
  %734 = load i64, ptr %memberidx1.i.i.i185, align 4
  %735 = icmp slt i64 %734, %733
  %.pre294 = load ptr, ptr %713, align 8
  br i1 %735, label %while.entry.i.i.i195, label %Array_ImportClause____sl__.exit.i

while.entry.i.i.i195:                             ; preds = %Parser_parse_import_clause.exit.i, %while.entry.i.i.i195
  %736 = phi ptr [ %740, %while.entry.i.i.i195 ], [ %.pre294, %Parser_parse_import_clause.exit.i ]
  %737 = phi i64 [ %741, %while.entry.i.i.i195 ], [ %734, %Parser_parse_import_clause.exit.i ]
  %738 = shl nuw i64 %737, 1
  store i64 %738, ptr %memberidx1.i.i.i185, align 4
  %739 = shl i64 %737, 4
  %740 = call ptr @realloc(ptr %736, i64 %739)
  store ptr %740, ptr %713, align 8
  %741 = load i64, ptr %memberidx1.i.i.i185, align 4
  %742 = icmp slt i64 %741, %733
  br i1 %742, label %while.entry.i.i.i195, label %Array_ImportClause____sl__.exit.i.loopexit

Array_ImportClause____sl__.exit.i.loopexit:       ; preds = %while.entry.i.i.i195
  %.pre295 = load i64, ptr %memberidx.i.i.i184, align 4
  %.pre402 = add nsw i64 %.pre295, 1
  br label %Array_ImportClause____sl__.exit.i

Array_ImportClause____sl__.exit.i:                ; preds = %Parser_parse_import_clause.exit.i, %Array_ImportClause____sl__.exit.i.loopexit
  %.pre-phi403 = phi i64 [ %.pre402, %Array_ImportClause____sl__.exit.i.loopexit ], [ %733, %Parser_parse_import_clause.exit.i ]
  %743 = phi ptr [ %740, %Array_ImportClause____sl__.exit.i.loopexit ], [ %.pre294, %Parser_parse_import_clause.exit.i ]
  %744 = phi i64 [ %.pre295, %Array_ImportClause____sl__.exit.i.loopexit ], [ %732, %Parser_parse_import_clause.exit.i ]
  store i64 %.pre-phi403, ptr %memberidx.i.i.i184, align 4
  %745 = getelementptr inbounds ptr, ptr %743, i64 %744
  store ptr %718, ptr %745, align 8
  %746 = load ptr, ptr %memberidx.i69, align 8
  %747 = load i64, ptr %746, align 4
  %748 = icmp eq i64 %747, 3
  %749 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i43.i = getelementptr inbounds %Array_FloError_, ptr %749, i64 0, i32 1
  %750 = load i64, ptr %memberidx3.i43.i, align 4
  %751 = icmp eq i64 %750, 0
  %752 = and i1 %748, %751
  br i1 %752, label %while.entry.i204, label %while.end.i

ifend.i198thread-pre-split:                       ; preds = %if.entry.i77.i, %if.entry.i.i79.i, %else.i81.i
  %.ph = phi ptr [ %814, %if.entry.i77.i ], [ %823, %if.entry.i.i79.i ], [ %.pre300, %else.i81.i ]
  %.pr = load i64, ptr %.ph, align 4
  br label %ifend.i198

ifend.i198:                                       ; preds = %ifend.i198thread-pre-split, %Parser_advance.exit.i187
  %753 = phi i64 [ %.pr, %ifend.i198thread-pre-split ], [ %716, %Parser_advance.exit.i187 ]
  %754 = phi ptr [ %.ph, %ifend.i198thread-pre-split ], [ %715, %Parser_advance.exit.i187 ]
  %memberidx8.i196 = getelementptr inbounds %ImportNode, ptr %712, i64 0, i32 1
  %755 = icmp eq i64 %753, 34
  br i1 %755, label %if.entry.i47.i, label %else.i.i203

if.entry.i47.i:                                   ; preds = %ifend.i198
  %756 = load i64, ptr %memberidx2.i, align 8
  %757 = load ptr, ptr %3, align 8
  %memberidx2.i.i46.i200 = getelementptr inbounds %Array_Token_, ptr %757, i64 0, i32 1
  %758 = load i64, ptr %memberidx2.i.i46.i200, align 4
  %759 = icmp slt i64 %756, %758
  br i1 %759, label %if.entry.i.i49.i201, label %Parser_eat.exit.i

if.entry.i.i49.i201:                              ; preds = %if.entry.i47.i
  %760 = add nsw i64 %756, 1
  store i64 %760, ptr %memberidx2.i, align 8
  %761 = load ptr, ptr %757, align 8
  %762 = getelementptr inbounds ptr, ptr %761, i64 %760
  %763 = load ptr, ptr %762, align 8
  store ptr %763, ptr %memberidx.i69, align 8
  br label %Parser_eat.exit.i

else.i.i203:                                      ; preds = %ifend.i198
  %764 = call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %754, i64 0, i32 1
  %765 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %764, align 4
  %memberidx1.i74.i.i = getelementptr inbounds %Token, ptr %764, i64 0, i32 1
  store ptr %765, ptr %memberidx1.i74.i.i, align 8
  %.pre301 = load ptr, ptr %memberidx.i69, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i47.i, %if.entry.i.i49.i201, %else.i.i203
  %766 = phi ptr [ %.pre301, %else.i.i203 ], [ %763, %if.entry.i.i49.i201 ], [ %754, %if.entry.i47.i ]
  %common.ret.op.i.i = phi ptr [ %764, %else.i.i203 ], [ %754, %if.entry.i.i49.i201 ], [ %754, %if.entry.i47.i ]
  store ptr %common.ret.op.i.i, ptr %memberidx8.i196, align 8
  %767 = load i64, ptr %766, align 4
  %768 = icmp eq i64 %767, 74
  br i1 %768, label %if.entry11.i, label %Parser_parse_import.exit

while.entry.i204:                                 ; preds = %Array_ImportClause____sl__.exit.i, %Array_ImportClause____sl__.exit69.i
  %769 = load i64, ptr %memberidx2.i, align 8
  %770 = load ptr, ptr %3, align 8
  %memberidx2.i52.i = getelementptr inbounds %Array_Token_, ptr %770, i64 0, i32 1
  %771 = load i64, ptr %memberidx2.i52.i, align 4
  %772 = icmp slt i64 %769, %771
  br i1 %772, label %if.entry.i54.i, label %Parser_advance.exit55.i

if.entry.i54.i:                                   ; preds = %while.entry.i204
  %773 = add nsw i64 %769, 1
  store i64 %773, ptr %memberidx2.i, align 8
  %774 = load ptr, ptr %770, align 8
  %775 = getelementptr inbounds ptr, ptr %774, i64 %773
  %776 = load ptr, ptr %775, align 8
  store ptr %776, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit55.i

Parser_advance.exit55.i:                          ; preds = %if.entry.i54.i, %while.entry.i204
  %777 = load ptr, ptr %712, align 8
  %778 = call ptr @malloc(i32 16)
  %779 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %779, ptr %778, align 8
  %memberidx1.i.i56.i = getelementptr inbounds %ImportClause, ptr %778, i64 0, i32 1
  store ptr null, ptr %memberidx1.i.i56.i, align 8
  %780 = load ptr, ptr %memberidx.i69, align 8
  %781 = load i64, ptr %780, align 4
  %782 = icmp eq i64 %781, 74
  br i1 %782, label %if.entry.i60.i, label %Parser_parse_import_clause.exit65.i

if.entry.i60.i:                                   ; preds = %Parser_advance.exit55.i
  %783 = load i64, ptr %memberidx2.i, align 8
  %784 = load ptr, ptr %3, align 8
  %memberidx2.i.i59.i207 = getelementptr inbounds %Array_Token_, ptr %784, i64 0, i32 1
  %785 = load i64, ptr %memberidx2.i.i59.i207, align 4
  %786 = icmp slt i64 %783, %785
  br i1 %786, label %if.entry.i.i62.i, label %Parser_advance.exit.i64.i

if.entry.i.i62.i:                                 ; preds = %if.entry.i60.i
  %787 = add nsw i64 %783, 1
  store i64 %787, ptr %memberidx2.i, align 8
  %788 = load ptr, ptr %784, align 8
  %789 = getelementptr inbounds ptr, ptr %788, i64 %787
  %790 = load ptr, ptr %789, align 8
  store ptr %790, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit.i64.i

Parser_advance.exit.i64.i:                        ; preds = %if.entry.i.i62.i, %if.entry.i60.i
  %791 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %791, ptr %memberidx1.i.i56.i, align 8
  br label %Parser_parse_import_clause.exit65.i

Parser_parse_import_clause.exit65.i:              ; preds = %Parser_advance.exit.i64.i, %Parser_advance.exit55.i
  %memberidx.i66.i = getelementptr inbounds %Array_ImportClause_, ptr %777, i64 0, i32 1
  %792 = load i64, ptr %memberidx.i66.i, align 4
  %793 = add i64 %792, 1
  %memberidx.i.i67.i = getelementptr inbounds %Array_ImportClause_, ptr %777, i64 0, i32 2
  %794 = load i64, ptr %memberidx.i.i67.i, align 4
  %795 = icmp slt i64 %794, %793
  %.pre297 = load ptr, ptr %777, align 8
  br i1 %795, label %while.entry.i.i68.i, label %Array_ImportClause____sl__.exit69.i

while.entry.i.i68.i:                              ; preds = %Parser_parse_import_clause.exit65.i, %while.entry.i.i68.i
  %796 = phi ptr [ %800, %while.entry.i.i68.i ], [ %.pre297, %Parser_parse_import_clause.exit65.i ]
  %797 = phi i64 [ %801, %while.entry.i.i68.i ], [ %794, %Parser_parse_import_clause.exit65.i ]
  %798 = shl nuw i64 %797, 1
  store i64 %798, ptr %memberidx.i.i67.i, align 4
  %799 = shl i64 %797, 4
  %800 = call ptr @realloc(ptr %796, i64 %799)
  store ptr %800, ptr %777, align 8
  %801 = load i64, ptr %memberidx.i.i67.i, align 4
  %802 = icmp slt i64 %801, %793
  br i1 %802, label %while.entry.i.i68.i, label %Array_ImportClause____sl__.exit69.i.loopexit

Array_ImportClause____sl__.exit69.i.loopexit:     ; preds = %while.entry.i.i68.i
  %.pre298 = load i64, ptr %memberidx.i66.i, align 4
  %.pre404 = add nsw i64 %.pre298, 1
  br label %Array_ImportClause____sl__.exit69.i

Array_ImportClause____sl__.exit69.i:              ; preds = %Parser_parse_import_clause.exit65.i, %Array_ImportClause____sl__.exit69.i.loopexit
  %.pre-phi405 = phi i64 [ %.pre404, %Array_ImportClause____sl__.exit69.i.loopexit ], [ %793, %Parser_parse_import_clause.exit65.i ]
  %803 = phi ptr [ %800, %Array_ImportClause____sl__.exit69.i.loopexit ], [ %.pre297, %Parser_parse_import_clause.exit65.i ]
  %804 = phi i64 [ %.pre298, %Array_ImportClause____sl__.exit69.i.loopexit ], [ %792, %Parser_parse_import_clause.exit65.i ]
  store i64 %.pre-phi405, ptr %memberidx.i66.i, align 4
  %805 = getelementptr inbounds ptr, ptr %803, i64 %804
  store ptr %778, ptr %805, align 8
  %806 = load ptr, ptr %memberidx.i69, align 8
  %807 = load i64, ptr %806, align 4
  %808 = icmp eq i64 %807, 3
  %809 = load ptr, ptr %memberidx1.i, align 8
  %memberidx3.i72.i = getelementptr inbounds %Array_FloError_, ptr %809, i64 0, i32 1
  %810 = load i64, ptr %memberidx3.i72.i, align 4
  %811 = icmp eq i64 %810, 0
  %812 = and i1 %808, %811
  br i1 %812, label %while.entry.i204, label %while.end.i

while.end.i:                                      ; preds = %Array_ImportClause____sl__.exit69.i, %Array_ImportClause____sl__.exit.i
  %813 = phi i64 [ %747, %Array_ImportClause____sl__.exit.i ], [ %807, %Array_ImportClause____sl__.exit69.i ]
  %814 = phi ptr [ %746, %Array_ImportClause____sl__.exit.i ], [ %806, %Array_ImportClause____sl__.exit69.i ]
  %815 = icmp eq i64 %813, 69
  br i1 %815, label %if.entry.i77.i, label %else.i81.i

if.entry.i77.i:                                   ; preds = %while.end.i
  %816 = load i64, ptr %memberidx2.i, align 8
  %817 = load ptr, ptr %3, align 8
  %memberidx2.i.i76.i = getelementptr inbounds %Array_Token_, ptr %817, i64 0, i32 1
  %818 = load i64, ptr %memberidx2.i.i76.i, align 4
  %819 = icmp slt i64 %816, %818
  br i1 %819, label %if.entry.i.i79.i, label %ifend.i198thread-pre-split

if.entry.i.i79.i:                                 ; preds = %if.entry.i77.i
  %820 = add nsw i64 %816, 1
  store i64 %820, ptr %memberidx2.i, align 8
  %821 = load ptr, ptr %817, align 8
  %822 = getelementptr inbounds ptr, ptr %821, i64 %820
  %823 = load ptr, ptr %822, align 8
  store ptr %823, ptr %memberidx.i69, align 8
  br label %ifend.i198thread-pre-split

else.i81.i:                                       ; preds = %while.end.i
  %824 = call ptr @malloc(i32 16)
  %memberidx35.i82.i = getelementptr inbounds %Token, ptr %814, i64 0, i32 1
  %825 = load ptr, ptr %memberidx35.i82.i, align 8
  store i64 46, ptr %824, align 4
  %memberidx1.i74.i83.i = getelementptr inbounds %Token, ptr %824, i64 0, i32 1
  store ptr %825, ptr %memberidx1.i74.i83.i, align 8
  %.pre300 = load ptr, ptr %memberidx.i69, align 8
  br label %ifend.i198thread-pre-split

if.entry11.i:                                     ; preds = %Parser_eat.exit.i
  %826 = load i64, ptr %memberidx2.i, align 8
  %827 = load ptr, ptr %3, align 8
  %memberidx2.i86.i = getelementptr inbounds %Array_Token_, ptr %827, i64 0, i32 1
  %828 = load i64, ptr %memberidx2.i86.i, align 4
  %829 = icmp slt i64 %826, %828
  br i1 %829, label %if.entry.i88.i, label %Parser_advance.exit89.i

if.entry.i88.i:                                   ; preds = %if.entry11.i
  %830 = add nsw i64 %826, 1
  store i64 %830, ptr %memberidx2.i, align 8
  %831 = load ptr, ptr %827, align 8
  %832 = getelementptr inbounds ptr, ptr %831, i64 %830
  %833 = load ptr, ptr %832, align 8
  store ptr %833, ptr %memberidx.i69, align 8
  br label %Parser_advance.exit89.i

Parser_advance.exit89.i:                          ; preds = %if.entry.i88.i, %if.entry11.i
  %834 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %834, ptr %memberidx3.i33.i, align 8
  br label %Parser_parse_import.exit

Parser_parse_import.exit:                         ; preds = %Parser_eat.exit.i, %Parser_advance.exit89.i
  %memberidx.i208 = getelementptr inbounds %Array_ImportNode_, ptr %703, i64 0, i32 1
  %835 = load i64, ptr %memberidx.i208, align 4
  %836 = add i64 %835, 1
  %memberidx.i.i209 = getelementptr inbounds %Array_ImportNode_, ptr %703, i64 0, i32 2
  %837 = load i64, ptr %memberidx.i.i209, align 4
  %838 = icmp slt i64 %837, %836
  %.pre302 = load ptr, ptr %703, align 8
  br i1 %838, label %while.entry.i.i210, label %Array_ImportNode____sl__.exit

while.entry.i.i210:                               ; preds = %Parser_parse_import.exit, %while.entry.i.i210
  %839 = phi ptr [ %843, %while.entry.i.i210 ], [ %.pre302, %Parser_parse_import.exit ]
  %840 = phi i64 [ %844, %while.entry.i.i210 ], [ %837, %Parser_parse_import.exit ]
  %841 = shl nuw i64 %840, 1
  store i64 %841, ptr %memberidx.i.i209, align 4
  %842 = shl i64 %840, 4
  %843 = call ptr @realloc(ptr %839, i64 %842)
  store ptr %843, ptr %703, align 8
  %844 = load i64, ptr %memberidx.i.i209, align 4
  %845 = icmp slt i64 %844, %836
  br i1 %845, label %while.entry.i.i210, label %Array_ImportNode____sl__.exit.loopexit

Array_ImportNode____sl__.exit.loopexit:           ; preds = %while.entry.i.i210
  %.pre303 = load i64, ptr %memberidx.i208, align 4
  %.pre406 = add nsw i64 %.pre303, 1
  br label %Array_ImportNode____sl__.exit

Array_ImportNode____sl__.exit:                    ; preds = %Parser_parse_import.exit, %Array_ImportNode____sl__.exit.loopexit
  %.pre-phi407 = phi i64 [ %.pre406, %Array_ImportNode____sl__.exit.loopexit ], [ %836, %Parser_parse_import.exit ]
  %846 = phi ptr [ %843, %Array_ImportNode____sl__.exit.loopexit ], [ %.pre302, %Parser_parse_import.exit ]
  %847 = phi i64 [ %.pre303, %Array_ImportNode____sl__.exit.loopexit ], [ %835, %Parser_parse_import.exit ]
  store i64 %.pre-phi407, ptr %memberidx.i208, align 4
  %848 = getelementptr inbounds ptr, ptr %846, i64 %847
  store ptr %712, ptr %848, align 8
  br label %ifend

if.entry23:                                       ; preds = %while.entry
  %849 = load ptr, ptr %memberidx26, align 8
  %850 = call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %3)
  %memberidx.i211 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %849, i64 0, i32 1
  %851 = load i64, ptr %memberidx.i211, align 4
  %852 = add i64 %851, 1
  %memberidx.i.i212 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %849, i64 0, i32 2
  %853 = load i64, ptr %memberidx.i.i212, align 4
  %854 = icmp slt i64 %853, %852
  %.pre291 = load ptr, ptr %849, align 8
  br i1 %854, label %while.entry.i.i213, label %Array_ConstDeclarationStatement____sl__.exit

while.entry.i.i213:                               ; preds = %if.entry23, %while.entry.i.i213
  %855 = phi ptr [ %859, %while.entry.i.i213 ], [ %.pre291, %if.entry23 ]
  %856 = phi i64 [ %860, %while.entry.i.i213 ], [ %853, %if.entry23 ]
  %857 = shl nuw i64 %856, 1
  store i64 %857, ptr %memberidx.i.i212, align 4
  %858 = shl i64 %856, 4
  %859 = call ptr @realloc(ptr %855, i64 %858)
  store ptr %859, ptr %849, align 8
  %860 = load i64, ptr %memberidx.i.i212, align 4
  %861 = icmp slt i64 %860, %852
  br i1 %861, label %while.entry.i.i213, label %Array_ConstDeclarationStatement____sl__.exit.loopexit

Array_ConstDeclarationStatement____sl__.exit.loopexit: ; preds = %while.entry.i.i213
  %.pre292 = load i64, ptr %memberidx.i211, align 4
  %.pre408 = add nsw i64 %.pre292, 1
  br label %Array_ConstDeclarationStatement____sl__.exit

Array_ConstDeclarationStatement____sl__.exit:     ; preds = %if.entry23, %Array_ConstDeclarationStatement____sl__.exit.loopexit
  %.pre-phi409 = phi i64 [ %.pre408, %Array_ConstDeclarationStatement____sl__.exit.loopexit ], [ %852, %if.entry23 ]
  %862 = phi ptr [ %859, %Array_ConstDeclarationStatement____sl__.exit.loopexit ], [ %.pre291, %if.entry23 ]
  %863 = phi i64 [ %.pre292, %Array_ConstDeclarationStatement____sl__.exit.loopexit ], [ %851, %if.entry23 ]
  store i64 %.pre-phi409, ptr %memberidx.i211, align 4
  %864 = getelementptr inbounds ptr, ptr %862, i64 %863
  store ptr %850, ptr %864, align 8
  br label %ifend

if.entry29:                                       ; preds = %while.entry
  %865 = load ptr, ptr %memberidx32, align 8
  %866 = call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %3)
  %memberidx.i214 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %865, i64 0, i32 1
  %867 = load i64, ptr %memberidx.i214, align 4
  %868 = add i64 %867, 1
  %memberidx.i.i215 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %865, i64 0, i32 2
  %869 = load i64, ptr %memberidx.i.i215, align 4
  %870 = icmp slt i64 %869, %868
  %.pre288 = load ptr, ptr %865, align 8
  br i1 %870, label %while.entry.i.i216, label %Array_VarDeclarationStatement____sl__.exit

while.entry.i.i216:                               ; preds = %if.entry29, %while.entry.i.i216
  %871 = phi ptr [ %875, %while.entry.i.i216 ], [ %.pre288, %if.entry29 ]
  %872 = phi i64 [ %876, %while.entry.i.i216 ], [ %869, %if.entry29 ]
  %873 = shl nuw i64 %872, 1
  store i64 %873, ptr %memberidx.i.i215, align 4
  %874 = shl i64 %872, 4
  %875 = call ptr @realloc(ptr %871, i64 %874)
  store ptr %875, ptr %865, align 8
  %876 = load i64, ptr %memberidx.i.i215, align 4
  %877 = icmp slt i64 %876, %868
  br i1 %877, label %while.entry.i.i216, label %Array_VarDeclarationStatement____sl__.exit.loopexit

Array_VarDeclarationStatement____sl__.exit.loopexit: ; preds = %while.entry.i.i216
  %.pre289 = load i64, ptr %memberidx.i214, align 4
  %.pre410 = add nsw i64 %.pre289, 1
  br label %Array_VarDeclarationStatement____sl__.exit

Array_VarDeclarationStatement____sl__.exit:       ; preds = %if.entry29, %Array_VarDeclarationStatement____sl__.exit.loopexit
  %.pre-phi411 = phi i64 [ %.pre410, %Array_VarDeclarationStatement____sl__.exit.loopexit ], [ %868, %if.entry29 ]
  %878 = phi ptr [ %875, %Array_VarDeclarationStatement____sl__.exit.loopexit ], [ %.pre288, %if.entry29 ]
  %879 = phi i64 [ %.pre289, %Array_VarDeclarationStatement____sl__.exit.loopexit ], [ %867, %if.entry29 ]
  store i64 %.pre-phi411, ptr %memberidx.i214, align 4
  %880 = getelementptr inbounds ptr, ptr %878, i64 %879
  store ptr %866, ptr %880, align 8
  br label %ifend

if.entry.i222:                                    ; preds = %while.entry
  %memberidx1.i217 = getelementptr inbounds %IdentifierToken, ptr %36, i64 0, i32 2
  %881 = load ptr, ptr %memberidx1.i217, align 8
  %882 = call ptr @malloc(i32 4)
  store i32 1701869940, ptr %882, align 8
  %883 = call ptr @malloc(i32 24)
  store ptr %882, ptr %883, align 8
  %memberidx1.i.i.i218 = getelementptr inbounds %String, ptr %883, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i218, align 4
  %memberidx2.i.i.i219 = getelementptr inbounds %String, ptr %883, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i219, align 4
  %memberidx.i.i220 = getelementptr inbounds %String, ptr %881, i64 0, i32 1
  %884 = load i64, ptr %memberidx.i.i220, align 4
  %.not.i.i = icmp eq i64 %884, 4
  br i1 %.not.i.i, label %ifend.i.i223, label %else35

ifend.i.i223:                                     ; preds = %if.entry.i222
  %885 = load ptr, ptr %881, align 8
  %886 = call i64 @memcmp(ptr %885, ptr nonnull %882, i64 4)
  %887 = icmp eq i64 %886, 0
  br i1 %887, label %if.entry34, label %else35

if.entry34:                                       ; preds = %ifend.i.i223
  %888 = load ptr, ptr %memberidx37, align 8
  %889 = load i64, ptr %memberidx2.i, align 8
  %890 = load ptr, ptr %3, align 8
  %memberidx2.i.i226 = getelementptr inbounds %Array_Token_, ptr %890, i64 0, i32 1
  %891 = load i64, ptr %memberidx2.i.i226, align 4
  %892 = icmp slt i64 %889, %891
  br i1 %892, label %if.entry.i.i228, label %Parser_parse_type_alias.exit

if.entry.i.i228:                                  ; preds = %if.entry34
  %893 = add nsw i64 %889, 1
  store i64 %893, ptr %memberidx2.i, align 8
  %894 = load ptr, ptr %890, align 8
  %895 = getelementptr inbounds ptr, ptr %894, i64 %893
  %896 = load ptr, ptr %895, align 8
  store ptr %896, ptr %memberidx.i69, align 8
  br label %Parser_parse_type_alias.exit

Parser_parse_type_alias.exit:                     ; preds = %if.entry34, %if.entry.i.i228
  %897 = call ptr @malloc(i32 16)
  %898 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 53)
  store ptr %898, ptr %897, align 8
  %899 = call fastcc ptr @Parser_eat(ptr nonnull %3, i64 38)
  %memberidx.i229 = getelementptr inbounds %TypeAliasNode, ptr %897, i64 0, i32 1
  %900 = call fastcc ptr @Parser_parse_type(ptr nonnull %3)
  store ptr %900, ptr %memberidx.i229, align 8
  %memberidx.i82 = getelementptr inbounds %Array_TypeAliasNode_, ptr %888, i64 0, i32 1
  %901 = load i64, ptr %memberidx.i82, align 4
  %902 = add i64 %901, 1
  %memberidx.i.i83 = getelementptr inbounds %Array_TypeAliasNode_, ptr %888, i64 0, i32 2
  %903 = load i64, ptr %memberidx.i.i83, align 4
  %904 = icmp slt i64 %903, %902
  %.pre285 = load ptr, ptr %888, align 8
  br i1 %904, label %while.entry.i.i, label %Array_TypeAliasNode____sl__.exit

while.entry.i.i:                                  ; preds = %Parser_parse_type_alias.exit, %while.entry.i.i
  %905 = phi ptr [ %909, %while.entry.i.i ], [ %.pre285, %Parser_parse_type_alias.exit ]
  %906 = phi i64 [ %910, %while.entry.i.i ], [ %903, %Parser_parse_type_alias.exit ]
  %907 = shl nuw i64 %906, 1
  store i64 %907, ptr %memberidx.i.i83, align 4
  %908 = shl i64 %906, 4
  %909 = call ptr @realloc(ptr %905, i64 %908)
  store ptr %909, ptr %888, align 8
  %910 = load i64, ptr %memberidx.i.i83, align 4
  %911 = icmp slt i64 %910, %902
  br i1 %911, label %while.entry.i.i, label %Array_TypeAliasNode____sl__.exit.loopexit

Array_TypeAliasNode____sl__.exit.loopexit:        ; preds = %while.entry.i.i
  %.pre286 = load i64, ptr %memberidx.i82, align 4
  %.pre412 = add nsw i64 %.pre286, 1
  br label %Array_TypeAliasNode____sl__.exit

Array_TypeAliasNode____sl__.exit:                 ; preds = %Parser_parse_type_alias.exit, %Array_TypeAliasNode____sl__.exit.loopexit
  %.pre-phi413 = phi i64 [ %.pre412, %Array_TypeAliasNode____sl__.exit.loopexit ], [ %902, %Parser_parse_type_alias.exit ]
  %912 = phi ptr [ %909, %Array_TypeAliasNode____sl__.exit.loopexit ], [ %.pre285, %Parser_parse_type_alias.exit ]
  %913 = phi i64 [ %.pre286, %Array_TypeAliasNode____sl__.exit.loopexit ], [ %901, %Parser_parse_type_alias.exit ]
  store i64 %.pre-phi413, ptr %memberidx.i82, align 4
  %914 = getelementptr inbounds ptr, ptr %912, i64 %913
  store ptr %897, ptr %914, align 8
  br label %ifend

else35:                                           ; preds = %while.entry, %if.entry.i222, %ifend.i.i223
  %915 = call ptr @malloc(i32 87)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(87) %915, ptr noundef nonnull align 8 dereferenceable(87) @79, i64 87, i1 false)
  %916 = call ptr @malloc(i32 24)
  store ptr %915, ptr %916, align 8
  %memberidx1.i.i72 = getelementptr inbounds %String, ptr %916, i64 0, i32 1
  store i64 87, ptr %memberidx1.i.i72, align 4
  %memberidx2.i.i73 = getelementptr inbounds %String, ptr %916, i64 0, i32 2
  store i64 87, ptr %memberidx2.i.i73, align 4
  %917 = load ptr, ptr %memberidx1.i, align 8
  %918 = call ptr @malloc(i32 24)
  %919 = load ptr, ptr %memberidx.i69, align 8
  %memberidx2.i66 = getelementptr inbounds %Token, ptr %919, i64 0, i32 1
  %920 = load ptr, ptr %memberidx2.i66, align 8
  store i64 2, ptr %918, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %918, i64 0, i32 2
  store ptr %920, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %918, i64 0, i32 1
  store ptr %916, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %917, i64 0, i32 1
  %921 = load i64, ptr %memberidx.i.i, align 4
  %922 = add i64 %921, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %917, i64 0, i32 2
  %923 = load i64, ptr %memberidx.i.i.i, align 4
  %924 = icmp slt i64 %923, %922
  %.pre380 = load ptr, ptr %917, align 8
  br i1 %924, label %while.entry.i.i.i, label %Parser_error.exit

while.entry.i.i.i:                                ; preds = %else35, %while.entry.i.i.i
  %925 = phi ptr [ %929, %while.entry.i.i.i ], [ %.pre380, %else35 ]
  %926 = phi i64 [ %930, %while.entry.i.i.i ], [ %923, %else35 ]
  %927 = shl nuw i64 %926, 1
  store i64 %927, ptr %memberidx.i.i.i, align 4
  %928 = shl i64 %926, 4
  %929 = call ptr @realloc(ptr %925, i64 %928)
  store ptr %929, ptr %917, align 8
  %930 = load i64, ptr %memberidx.i.i.i, align 4
  %931 = icmp slt i64 %930, %922
  br i1 %931, label %while.entry.i.i.i, label %Parser_error.exit.loopexit

Parser_error.exit.loopexit:                       ; preds = %while.entry.i.i.i
  %.pre381 = load i64, ptr %memberidx.i.i, align 4
  %.pre383 = add nsw i64 %.pre381, 1
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %else35, %Parser_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre383, %Parser_error.exit.loopexit ], [ %922, %else35 ]
  %932 = phi ptr [ %929, %Parser_error.exit.loopexit ], [ %.pre380, %else35 ]
  %933 = phi i64 [ %.pre381, %Parser_error.exit.loopexit ], [ %921, %else35 ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %934 = getelementptr inbounds ptr, ptr %932, i64 %933
  store ptr %918, ptr %934, align 8
  br label %while.end
}

define internal fastcc ptr @Parser_parse_block(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 16)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i = getelementptr inbounds %BlockNode, ptr %2, i64 0, i32 1
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_StatementNode_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %5, ptr %memberidx.i, align 8
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 33
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = icmp eq i64 %11, 0
  %13 = and i1 %9, %12
  br i1 %13, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %1
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i11.i, align 4
  %16 = load i64, ptr %memberidx2.i12.i, align 4
  %17 = icmp slt i64 %15, %16
  br i1 %17, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %18 = phi i64 [ %27, %Parser_advance.exit.i ], [ 0, %while.entry.i.preheader ]
  %19 = phi i64 [ %28, %Parser_advance.exit.i ], [ 33, %while.entry.i.preheader ]
  %20 = phi i64 [ %31, %Parser_advance.exit.i ], [ %15, %while.entry.i.preheader ]
  %21 = load i64, ptr %memberidx2.i12.i, align 4
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %23 = add nsw i64 %20, 1
  store i64 %23, ptr %memberidx.i11.i, align 4
  %24 = load ptr, ptr %14, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  store ptr %26, ptr %memberidx, align 8
  %.pre = load i64, ptr %26, align 4
  %.pre79 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %27 = phi i64 [ %.pre79, %if.entry.i.i ], [ %18, %while.entry.i ]
  %28 = phi i64 [ %.pre, %if.entry.i.i ], [ %19, %while.entry.i ]
  %29 = phi i64 [ %.pre79, %if.entry.i.i ], [ 0, %while.entry.i ]
  %30 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %31 = phi i64 [ %23, %if.entry.i.i ], [ %20, %while.entry.i ]
  %32 = icmp eq i64 %30, 33
  %33 = icmp eq i64 %29, 0
  %34 = and i1 %32, %33
  br i1 %34, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %1
  %35 = phi i64 [ %11, %1 ], [ %27, %Parser_advance.exit.i ]
  %36 = phi i64 [ %8, %1 ], [ %28, %Parser_advance.exit.i ]
  %37 = icmp eq i64 %36, 27
  br i1 %37, label %if.entry, label %else

if.entry:                                         ; preds = %Parser_new_lines.exit
  %memberidx.i26 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %38 = load i64, ptr %memberidx.i26, align 4
  %39 = load ptr, ptr %0, align 8
  %memberidx2.i27 = getelementptr inbounds %Array_Token_, ptr %39, i64 0, i32 1
  %40 = load i64, ptr %memberidx2.i27, align 4
  %41 = icmp slt i64 %38, %40
  br i1 %41, label %Parser_advance.exit, label %Parser_new_lines.exit41

Parser_advance.exit:                              ; preds = %if.entry
  %42 = add nsw i64 %38, 1
  store i64 %42, ptr %memberidx.i26, align 4
  %43 = load ptr, ptr %39, align 8
  %44 = getelementptr inbounds ptr, ptr %43, i64 %42
  %45 = load ptr, ptr %44, align 8
  store ptr %45, ptr %memberidx, align 8
  %.pre83 = load i64, ptr %45, align 4
  %.pre84 = load i64, ptr %memberidx3.i.i, align 4
  %46 = icmp eq i64 %.pre83, 33
  %47 = icmp eq i64 %.pre84, 0
  %48 = and i1 %46, %47
  br i1 %48, label %while.entry.i34.preheader, label %Parser_new_lines.exit41

while.entry.i34.preheader:                        ; preds = %Parser_advance.exit
  %49 = load i64, ptr %memberidx2.i27, align 4
  %50 = icmp slt i64 %42, %49
  br i1 %50, label %while.entry.i34, label %while.entry.i34.us

while.entry.i34.us:                               ; preds = %while.entry.i34.preheader, %while.entry.i34.us
  br label %while.entry.i34.us

while.entry.i34:                                  ; preds = %while.entry.i34.preheader, %Parser_advance.exit.i40
  %51 = phi i64 [ %60, %Parser_advance.exit.i40 ], [ 33, %while.entry.i34.preheader ]
  %52 = phi i64 [ %61, %Parser_advance.exit.i40 ], [ 0, %while.entry.i34.preheader ]
  %53 = phi i64 [ %64, %Parser_advance.exit.i40 ], [ %42, %while.entry.i34.preheader ]
  %54 = load i64, ptr %memberidx2.i27, align 4
  %55 = icmp slt i64 %53, %54
  br i1 %55, label %if.entry.i.i36, label %Parser_advance.exit.i40

if.entry.i.i36:                                   ; preds = %while.entry.i34
  %56 = add nsw i64 %53, 1
  store i64 %56, ptr %memberidx.i26, align 4
  %57 = load ptr, ptr %39, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  store ptr %59, ptr %memberidx, align 8
  %.pre85 = load i64, ptr %59, align 4
  %.pre86 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i40

Parser_advance.exit.i40:                          ; preds = %if.entry.i.i36, %while.entry.i34
  %60 = phi i64 [ %.pre85, %if.entry.i.i36 ], [ %51, %while.entry.i34 ]
  %61 = phi i64 [ %.pre86, %if.entry.i.i36 ], [ %52, %while.entry.i34 ]
  %62 = phi i64 [ %.pre86, %if.entry.i.i36 ], [ 0, %while.entry.i34 ]
  %63 = phi i64 [ %.pre85, %if.entry.i.i36 ], [ 33, %while.entry.i34 ]
  %64 = phi i64 [ %56, %if.entry.i.i36 ], [ %53, %while.entry.i34 ]
  %65 = icmp eq i64 %63, 33
  %66 = icmp eq i64 %62, 0
  %67 = and i1 %65, %66
  br i1 %67, label %while.entry.i34, label %Parser_new_lines.exit41

Parser_new_lines.exit41:                          ; preds = %Parser_advance.exit.i40, %if.entry, %Parser_advance.exit
  %68 = phi i64 [ %.pre83, %Parser_advance.exit ], [ 27, %if.entry ], [ %60, %Parser_advance.exit.i40 ]
  %69 = phi i64 [ %.pre84, %Parser_advance.exit ], [ %35, %if.entry ], [ %61, %Parser_advance.exit.i40 ]
  %.fr = freeze i64 %69
  %70 = icmp eq i64 %.fr, 0
  br i1 %70, label %switch.early.test, label %while.end

switch.early.test:                                ; preds = %Parser_new_lines.exit41
  switch i64 %68, label %while.entry [
    i64 46, label %while.end
    i64 28, label %while.end
  ]

else:                                             ; preds = %Parser_new_lines.exit
  %71 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %72 = load i64, ptr %memberidx.i.i, align 4
  %73 = add i64 %72, 1
  %74 = load i64, ptr %memberidx1.i.i, align 4
  %75 = icmp slt i64 %74, %73
  %.pre80 = load ptr, ptr %5, align 8
  br i1 %75, label %while.entry.i.i, label %Array_StatementNode____sl__.exit

while.entry.i.i:                                  ; preds = %else, %while.entry.i.i
  %76 = phi ptr [ %80, %while.entry.i.i ], [ %.pre80, %else ]
  %77 = phi i64 [ %81, %while.entry.i.i ], [ %74, %else ]
  %78 = shl nuw i64 %77, 1
  store i64 %78, ptr %memberidx1.i.i, align 4
  %79 = shl i64 %77, 4
  %80 = tail call ptr @realloc(ptr %76, i64 %79)
  store ptr %80, ptr %5, align 8
  %81 = load i64, ptr %memberidx1.i.i, align 4
  %82 = icmp slt i64 %81, %73
  br i1 %82, label %while.entry.i.i, label %Array_StatementNode____sl__.exit.loopexit

Array_StatementNode____sl__.exit.loopexit:        ; preds = %while.entry.i.i
  %.pre81 = load i64, ptr %memberidx.i.i, align 4
  %.pre93 = add nsw i64 %.pre81, 1
  br label %Array_StatementNode____sl__.exit

Array_StatementNode____sl__.exit:                 ; preds = %else, %Array_StatementNode____sl__.exit.loopexit
  %.pre-phi94 = phi i64 [ %.pre93, %Array_StatementNode____sl__.exit.loopexit ], [ %73, %else ]
  %83 = phi ptr [ %80, %Array_StatementNode____sl__.exit.loopexit ], [ %.pre80, %else ]
  %84 = phi i64 [ %.pre81, %Array_StatementNode____sl__.exit.loopexit ], [ %72, %else ]
  store i64 %.pre-phi94, ptr %memberidx.i.i, align 4
  %85 = getelementptr inbounds ptr, ptr %83, i64 %84
  store ptr %71, ptr %85, align 8
  br label %ifend

ifend:                                            ; preds = %Array_StatementNode____sl__.exit, %while.end
  ret ptr %2

while.entry:                                      ; preds = %switch.early.test, %switch.early.test71
  %86 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  %87 = load i64, ptr %memberidx.i.i, align 4
  %88 = add i64 %87, 1
  %89 = load i64, ptr %memberidx1.i.i, align 4
  %90 = icmp slt i64 %89, %88
  %.pre87 = load ptr, ptr %5, align 8
  br i1 %90, label %while.entry.i.i49, label %Array_StatementNode____sl__.exit50

while.entry.i.i49:                                ; preds = %while.entry, %while.entry.i.i49
  %91 = phi ptr [ %95, %while.entry.i.i49 ], [ %.pre87, %while.entry ]
  %92 = phi i64 [ %96, %while.entry.i.i49 ], [ %89, %while.entry ]
  %93 = shl nuw i64 %92, 1
  store i64 %93, ptr %memberidx1.i.i, align 4
  %94 = shl i64 %92, 4
  %95 = tail call ptr @realloc(ptr %91, i64 %94)
  store ptr %95, ptr %5, align 8
  %96 = load i64, ptr %memberidx1.i.i, align 4
  %97 = icmp slt i64 %96, %88
  br i1 %97, label %while.entry.i.i49, label %Array_StatementNode____sl__.exit50.loopexit

Array_StatementNode____sl__.exit50.loopexit:      ; preds = %while.entry.i.i49
  %.pre88 = load i64, ptr %memberidx.i.i, align 4
  %.pre92 = add nsw i64 %.pre88, 1
  br label %Array_StatementNode____sl__.exit50

Array_StatementNode____sl__.exit50:               ; preds = %while.entry, %Array_StatementNode____sl__.exit50.loopexit
  %.pre-phi = phi i64 [ %.pre92, %Array_StatementNode____sl__.exit50.loopexit ], [ %88, %while.entry ]
  %98 = phi ptr [ %95, %Array_StatementNode____sl__.exit50.loopexit ], [ %.pre87, %while.entry ]
  %99 = phi i64 [ %.pre88, %Array_StatementNode____sl__.exit50.loopexit ], [ %87, %while.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %100 = getelementptr inbounds ptr, ptr %98, i64 %99
  store ptr %86, ptr %100, align 8
  %101 = load ptr, ptr %memberidx, align 8
  %102 = load i64, ptr %101, align 4
  %103 = icmp eq i64 %102, 33
  %104 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i54 = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 1
  %105 = load i64, ptr %memberidx3.i.i54, align 4
  %106 = icmp eq i64 %105, 0
  %107 = and i1 %103, %106
  br i1 %107, label %while.entry.i57.preheader, label %Parser_new_lines.exit64

while.entry.i57.preheader:                        ; preds = %Array_StatementNode____sl__.exit50
  %108 = load ptr, ptr %0, align 8
  %memberidx2.i12.i56 = getelementptr inbounds %Array_Token_, ptr %108, i64 0, i32 1
  %109 = load i64, ptr %memberidx.i26, align 4
  %110 = load i64, ptr %memberidx2.i12.i56, align 4
  %111 = icmp slt i64 %109, %110
  br i1 %111, label %while.entry.i57, label %while.entry.i57.us

while.entry.i57.us:                               ; preds = %while.entry.i57.preheader, %while.entry.i57.us
  br label %while.entry.i57.us

while.entry.i57:                                  ; preds = %while.entry.i57.preheader, %Parser_advance.exit.i63
  %112 = phi i64 [ %121, %Parser_advance.exit.i63 ], [ 33, %while.entry.i57.preheader ]
  %113 = phi i64 [ %122, %Parser_advance.exit.i63 ], [ 0, %while.entry.i57.preheader ]
  %114 = phi i64 [ %125, %Parser_advance.exit.i63 ], [ %109, %while.entry.i57.preheader ]
  %115 = load i64, ptr %memberidx2.i12.i56, align 4
  %116 = icmp slt i64 %114, %115
  br i1 %116, label %if.entry.i.i59, label %Parser_advance.exit.i63

if.entry.i.i59:                                   ; preds = %while.entry.i57
  %117 = add nsw i64 %114, 1
  store i64 %117, ptr %memberidx.i26, align 4
  %118 = load ptr, ptr %108, align 8
  %119 = getelementptr inbounds ptr, ptr %118, i64 %117
  %120 = load ptr, ptr %119, align 8
  store ptr %120, ptr %memberidx, align 8
  %.pre90 = load i64, ptr %120, align 4
  %.pre91 = load i64, ptr %memberidx3.i.i54, align 4
  br label %Parser_advance.exit.i63

Parser_advance.exit.i63:                          ; preds = %if.entry.i.i59, %while.entry.i57
  %121 = phi i64 [ %.pre90, %if.entry.i.i59 ], [ %112, %while.entry.i57 ]
  %122 = phi i64 [ %.pre91, %if.entry.i.i59 ], [ %113, %while.entry.i57 ]
  %123 = phi i64 [ %.pre91, %if.entry.i.i59 ], [ 0, %while.entry.i57 ]
  %124 = phi i64 [ %.pre90, %if.entry.i.i59 ], [ 33, %while.entry.i57 ]
  %125 = phi i64 [ %117, %if.entry.i.i59 ], [ %114, %while.entry.i57 ]
  %126 = icmp eq i64 %124, 33
  %127 = icmp eq i64 %123, 0
  %128 = and i1 %126, %127
  br i1 %128, label %while.entry.i57, label %Parser_new_lines.exit64

Parser_new_lines.exit64:                          ; preds = %Parser_advance.exit.i63, %Array_StatementNode____sl__.exit50
  %129 = phi i64 [ %102, %Array_StatementNode____sl__.exit50 ], [ %121, %Parser_advance.exit.i63 ]
  %130 = phi i64 [ %105, %Array_StatementNode____sl__.exit50 ], [ %122, %Parser_advance.exit.i63 ]
  %.fr72 = freeze i64 %130
  %131 = icmp eq i64 %.fr72, 0
  br i1 %131, label %switch.early.test71, label %while.end

switch.early.test71:                              ; preds = %Parser_new_lines.exit64
  switch i64 %129, label %while.entry [
    i64 46, label %while.end
    i64 28, label %while.end
  ]

while.end:                                        ; preds = %switch.early.test71, %switch.early.test71, %Parser_new_lines.exit64, %switch.early.test, %switch.early.test, %Parser_new_lines.exit41
  %132 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 28)
  br label %ifend
}

define internal fastcc ptr @Parser_parse_type(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  switch i64 %3, label %ifend [
    i64 53, label %if.entry
    i64 25, label %if.entry5
    i64 29, label %if.entry10
  ]

if.entry:                                         ; preds = %1
  %4 = tail call fastcc ptr @Parser_parse_object_type(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %else.i169, %if.entry.i.i167, %if.entry.i165, %1, %ifend11.i, %if.entry9.i, %if.entry
  %type_node.0 = phi ptr [ %4, %if.entry ], [ %34, %if.entry9.i ], [ %41, %ifend11.i ], [ null, %1 ], [ %49, %if.entry.i165 ], [ %49, %if.entry.i.i167 ], [ %49, %else.i169 ]
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 29
  %8 = icmp eq i64 %6, 11
  %9 = or i1 %7, %8
  %10 = icmp eq i64 %6, 4
  %11 = or i1 %10, %9
  %memberidx2.i197 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %12 = load ptr, ptr %memberidx2.i197, align 8
  %memberidx3.i198 = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i198, align 4
  %14 = icmp eq i64 %13, 0
  %15 = and i1 %11, %14
  br i1 %15, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %ifend
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

if.entry5:                                        ; preds = %1
  %16 = tail call ptr @malloc(i32 24)
  %memberidx.i43.i = getelementptr inbounds %Array_TypeNode_, ptr %16, i64 0, i32 1
  store i64 0, ptr %memberidx.i43.i, align 4
  %memberidx1.i44.i = getelementptr inbounds %Array_TypeNode_, ptr %16, i64 0, i32 2
  store i64 8, ptr %memberidx1.i44.i, align 4
  %17 = tail call ptr @malloc(i32 64)
  store ptr %17, ptr %16, align 8
  store i64 0, ptr %memberidx.i43.i, align 4
  %18 = load ptr, ptr %memberidx, align 8
  %memberidx3.i201 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx3.i201, align 8
  %memberidx.i40.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %20 = load i64, ptr %memberidx.i40.i, align 4
  %21 = load ptr, ptr %0, align 8
  %memberidx2.i41.i = getelementptr inbounds %Array_Token_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx2.i41.i, align 4
  %23 = icmp slt i64 %20, %22
  br i1 %23, label %if.entry.i.i202, label %Parser_advance.exit.i203

if.entry.i.i202:                                  ; preds = %if.entry5
  %24 = add nsw i64 %20, 1
  store i64 %24, ptr %memberidx.i40.i, align 4
  %25 = load ptr, ptr %21, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  store ptr %27, ptr %memberidx, align 8
  br label %Parser_advance.exit.i203

Parser_advance.exit.i203:                         ; preds = %if.entry.i.i202, %if.entry5
  %28 = phi ptr [ %27, %if.entry.i.i202 ], [ %18, %if.entry5 ]
  %29 = load i64, ptr %28, align 4
  %.not.i = icmp eq i64 %29, 26
  br i1 %.not.i, label %ifend.i, label %if.entry.i204

if.entry.i204:                                    ; preds = %Parser_advance.exit.i203
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %16)
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry.i204, %Parser_advance.exit.i203
  %30 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %31 = load ptr, ptr %memberidx, align 8
  %32 = load i64, ptr %31, align 4
  %.not31.i = icmp eq i64 %32, 45
  br i1 %.not31.i, label %ifend11.i, label %if.entry9.i

if.entry9.i:                                      ; preds = %ifend.i
  %memberidx6.i = getelementptr inbounds %Token, ptr %30, i64 0, i32 1
  %33 = load ptr, ptr %memberidx6.i, align 8
  %34 = tail call ptr @malloc(i32 24)
  %35 = tail call ptr @malloc(i32 32)
  %36 = load i64, ptr %19, align 4
  %memberidx1.i34.i = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 1
  %37 = load i64, ptr %memberidx1.i34.i, align 4
  %memberidx2.i35.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i35.i, align 4
  %memberidx3.i36.i = getelementptr inbounds %FloRange, ptr %33, i64 0, i32 3
  %39 = load i64, ptr %memberidx3.i36.i, align 4
  store i64 %36, ptr %35, align 4
  %memberidx1.i.i37.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i.i37.i, align 4
  %memberidx2.i.i38.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 2
  store i64 %38, ptr %memberidx2.i.i38.i, align 4
  %memberidx3.i.i39.i = getelementptr inbounds %FloRange, ptr %35, i64 0, i32 3
  store i64 %39, ptr %memberidx3.i.i39.i, align 4
  store ptr %35, ptr %34, align 8
  %memberidx.i.i32.i = getelementptr inbounds %TypeNode, ptr %34, i64 0, i32 1
  store i64 15, ptr %memberidx.i.i32.i, align 4
  %memberidx.i33.i = getelementptr inbounds %TupleTypeNode, ptr %34, i64 0, i32 2
  store ptr %16, ptr %memberidx.i33.i, align 8
  br label %ifend

ifend11.i:                                        ; preds = %ifend.i
  %40 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 45)
  %41 = tail call ptr @malloc(i32 32)
  store ptr %19, ptr %41, align 8
  %memberidx.i.i.i = getelementptr inbounds %TypeNode, ptr %41, i64 0, i32 1
  store i64 16, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i206 = getelementptr inbounds %FunctionTypeNode, ptr %41, i64 0, i32 2
  store ptr %16, ptr %memberidx.i.i206, align 8
  %memberidx12.i = getelementptr inbounds %FunctionTypeNode, ptr %41, i64 0, i32 3
  %42 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %42, ptr %memberidx12.i, align 8
  %43 = load ptr, ptr %42, align 8
  %44 = tail call ptr @malloc(i32 32)
  %45 = load i64, ptr %19, align 4
  %memberidx1.i.i207 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i.i207, align 4
  %memberidx2.i.i208 = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i.i208, align 4
  %memberidx3.i.i209 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 3
  %48 = load i64, ptr %memberidx3.i.i209, align 4
  store i64 %45, ptr %44, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 2
  store i64 %47, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  store i64 %48, ptr %memberidx3.i.i.i, align 4
  store ptr %44, ptr %41, align 8
  br label %ifend

if.entry10:                                       ; preds = %1
  %49 = tail call ptr @malloc(i32 32)
  %50 = tail call ptr @malloc(i32 24)
  %51 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %51, ptr noundef nonnull align 8 dereferenceable(3) @74, i64 3, i1 false)
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i.i194 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i194, align 4
  %memberidx2.i.i195 = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i195, align 4
  %53 = load ptr, ptr %memberidx, align 8
  %memberidx14 = getelementptr inbounds %Token, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx14, align 8
  store i64 53, ptr %50, align 4
  %memberidx1.i.i192 = getelementptr inbounds %Token, ptr %50, i64 0, i32 1
  store ptr %54, ptr %memberidx1.i.i192, align 8
  %memberidx.i193 = getelementptr inbounds %IdentifierToken, ptr %50, i64 0, i32 2
  store ptr %52, ptr %memberidx.i193, align 8
  %55 = load ptr, ptr %memberidx14, align 8
  store ptr %55, ptr %49, align 8
  %memberidx.i.i186 = getelementptr inbounds %TypeNode, ptr %49, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i186, align 4
  %memberidx.i187 = getelementptr inbounds %RecordTypeNode, ptr %49, i64 0, i32 2
  store ptr %50, ptr %memberidx.i187, align 8
  %memberidx1.i188 = getelementptr inbounds %RecordTypeNode, ptr %49, i64 0, i32 3
  %56 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i189 = getelementptr inbounds %Array_TypeNode_, ptr %56, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i189, align 4
  %memberidx1.i.i190 = getelementptr inbounds %Array_TypeNode_, ptr %56, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i190, align 4
  %57 = tail call ptr @malloc(i32 64)
  store ptr %57, ptr %56, align 8
  store i64 0, ptr %memberidx.i5.i189, align 4
  store ptr %56, ptr %memberidx1.i188, align 8
  %memberidx.i181 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %58 = load i64, ptr %memberidx.i181, align 4
  %59 = load ptr, ptr %0, align 8
  %memberidx2.i182 = getelementptr inbounds %Array_Token_, ptr %59, i64 0, i32 1
  %60 = load i64, ptr %memberidx2.i182, align 4
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %if.entry.i184, label %Parser_advance.exit185

if.entry.i184:                                    ; preds = %if.entry10
  %62 = add nsw i64 %58, 1
  store i64 %62, ptr %memberidx.i181, align 4
  %63 = load ptr, ptr %59, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  store ptr %65, ptr %memberidx, align 8
  br label %Parser_advance.exit185

Parser_advance.exit185:                           ; preds = %if.entry10, %if.entry.i184
  %66 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %67 = load i64, ptr %memberidx.i5.i189, align 4
  %68 = add i64 %67, 1
  %69 = load i64, ptr %memberidx1.i.i190, align 4
  %70 = icmp slt i64 %69, %68
  %.pre = load ptr, ptr %56, align 8
  br i1 %70, label %while.entry.i.i179, label %Array_TypeNode____sl__.exit180

while.entry.i.i179:                               ; preds = %Parser_advance.exit185, %while.entry.i.i179
  %71 = phi ptr [ %75, %while.entry.i.i179 ], [ %.pre, %Parser_advance.exit185 ]
  %72 = phi i64 [ %76, %while.entry.i.i179 ], [ %69, %Parser_advance.exit185 ]
  %73 = shl nuw i64 %72, 1
  store i64 %73, ptr %memberidx1.i.i190, align 4
  %74 = shl i64 %72, 4
  %75 = tail call ptr @realloc(ptr %71, i64 %74)
  store ptr %75, ptr %56, align 8
  %76 = load i64, ptr %memberidx1.i.i190, align 4
  %77 = icmp slt i64 %76, %68
  br i1 %77, label %while.entry.i.i179, label %Array_TypeNode____sl__.exit180.loopexit

Array_TypeNode____sl__.exit180.loopexit:          ; preds = %while.entry.i.i179
  %.pre217 = load i64, ptr %memberidx.i5.i189, align 4
  %.pre225 = add nsw i64 %.pre217, 1
  br label %Array_TypeNode____sl__.exit180

Array_TypeNode____sl__.exit180:                   ; preds = %Parser_advance.exit185, %Array_TypeNode____sl__.exit180.loopexit
  %.pre-phi = phi i64 [ %.pre225, %Array_TypeNode____sl__.exit180.loopexit ], [ %68, %Parser_advance.exit185 ]
  %78 = phi ptr [ %75, %Array_TypeNode____sl__.exit180.loopexit ], [ %.pre, %Parser_advance.exit185 ]
  %79 = phi i64 [ %.pre217, %Array_TypeNode____sl__.exit180.loopexit ], [ %67, %Parser_advance.exit185 ]
  store i64 %.pre-phi, ptr %memberidx.i5.i189, align 4
  %80 = getelementptr inbounds ptr, ptr %78, i64 %79
  store ptr %66, ptr %80, align 8
  %81 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %82 = load ptr, ptr %memberidx1.i188, align 8
  %83 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i173 = getelementptr inbounds %Array_TypeNode_, ptr %82, i64 0, i32 1
  %84 = load i64, ptr %memberidx.i173, align 4
  %85 = add i64 %84, 1
  %memberidx.i.i174 = getelementptr inbounds %Array_TypeNode_, ptr %82, i64 0, i32 2
  %86 = load i64, ptr %memberidx.i.i174, align 4
  %87 = icmp slt i64 %86, %85
  %.pre219 = load ptr, ptr %82, align 8
  br i1 %87, label %while.entry.i.i175, label %Array_TypeNode____sl__.exit176

while.entry.i.i175:                               ; preds = %Array_TypeNode____sl__.exit180, %while.entry.i.i175
  %88 = phi ptr [ %92, %while.entry.i.i175 ], [ %.pre219, %Array_TypeNode____sl__.exit180 ]
  %89 = phi i64 [ %93, %while.entry.i.i175 ], [ %86, %Array_TypeNode____sl__.exit180 ]
  %90 = shl nuw i64 %89, 1
  store i64 %90, ptr %memberidx.i.i174, align 4
  %91 = shl i64 %89, 4
  %92 = tail call ptr @realloc(ptr %88, i64 %91)
  store ptr %92, ptr %82, align 8
  %93 = load i64, ptr %memberidx.i.i174, align 4
  %94 = icmp slt i64 %93, %85
  br i1 %94, label %while.entry.i.i175, label %Array_TypeNode____sl__.exit176.loopexit

Array_TypeNode____sl__.exit176.loopexit:          ; preds = %while.entry.i.i175
  %.pre220 = load i64, ptr %memberidx.i173, align 4
  %.pre226 = add nsw i64 %.pre220, 1
  br label %Array_TypeNode____sl__.exit176

Array_TypeNode____sl__.exit176:                   ; preds = %Array_TypeNode____sl__.exit180, %Array_TypeNode____sl__.exit176.loopexit
  %.pre-phi227 = phi i64 [ %.pre226, %Array_TypeNode____sl__.exit176.loopexit ], [ %85, %Array_TypeNode____sl__.exit180 ]
  %95 = phi ptr [ %92, %Array_TypeNode____sl__.exit176.loopexit ], [ %.pre219, %Array_TypeNode____sl__.exit180 ]
  %96 = phi i64 [ %.pre220, %Array_TypeNode____sl__.exit176.loopexit ], [ %84, %Array_TypeNode____sl__.exit180 ]
  store i64 %.pre-phi227, ptr %memberidx.i173, align 4
  %97 = getelementptr inbounds ptr, ptr %95, i64 %96
  store ptr %83, ptr %97, align 8
  %98 = load ptr, ptr %memberidx, align 8
  %99 = load i64, ptr %98, align 4
  %100 = icmp eq i64 %99, 30
  br i1 %100, label %if.entry.i165, label %else.i169

if.entry.i165:                                    ; preds = %Array_TypeNode____sl__.exit176
  %101 = load i64, ptr %memberidx.i181, align 4
  %102 = load ptr, ptr %0, align 8
  %memberidx2.i.i164 = getelementptr inbounds %Array_Token_, ptr %102, i64 0, i32 1
  %103 = load i64, ptr %memberidx2.i.i164, align 4
  %104 = icmp slt i64 %101, %103
  br i1 %104, label %if.entry.i.i167, label %ifend

if.entry.i.i167:                                  ; preds = %if.entry.i165
  %105 = add nsw i64 %101, 1
  store i64 %105, ptr %memberidx.i181, align 4
  %106 = load ptr, ptr %102, align 8
  %107 = getelementptr inbounds ptr, ptr %106, i64 %105
  %108 = load ptr, ptr %107, align 8
  store ptr %108, ptr %memberidx, align 8
  br label %ifend

else.i169:                                        ; preds = %Array_TypeNode____sl__.exit176
  %109 = tail call ptr @malloc(i32 16)
  %memberidx35.i170 = getelementptr inbounds %Token, ptr %98, i64 0, i32 1
  %110 = load ptr, ptr %memberidx35.i170, align 8
  store i64 46, ptr %109, align 4
  %memberidx1.i74.i171 = getelementptr inbounds %Token, ptr %109, i64 0, i32 1
  store ptr %110, ptr %memberidx1.i74.i171, align 8
  br label %ifend

while.entry:                                      ; preds = %while.entry.preheader, %ifend29
  %111 = phi i64 [ %135, %ifend29 ], [ %6, %while.entry.preheader ]
  %type_node.1 = phi ptr [ %type_node.3, %ifend29 ], [ %type_node.0, %while.entry.preheader ]
  %112 = icmp eq i64 %111, 29
  br i1 %112, label %if.entry27, label %else28

while.end:                                        ; preds = %ifend29, %ifend
  %type_node.2 = phi ptr [ %type_node.0, %ifend ], [ %type_node.3, %ifend29 ]
  ret ptr %type_node.2

if.entry27:                                       ; preds = %while.entry
  %113 = load i64, ptr %memberidx.i, align 4
  %114 = load ptr, ptr %0, align 8
  %memberidx2.i157 = getelementptr inbounds %Array_Token_, ptr %114, i64 0, i32 1
  %115 = load i64, ptr %memberidx2.i157, align 4
  %116 = icmp slt i64 %113, %115
  br i1 %116, label %Parser_advance.exit160, label %else33

Parser_advance.exit160:                           ; preds = %if.entry27
  %117 = add nsw i64 %113, 1
  store i64 %117, ptr %memberidx.i, align 4
  %118 = load ptr, ptr %114, align 8
  %119 = getelementptr inbounds ptr, ptr %118, i64 %117
  %120 = load ptr, ptr %119, align 8
  store ptr %120, ptr %memberidx, align 8
  %.pre222 = load i64, ptr %120, align 4
  %121 = icmp eq i64 %.pre222, 30
  br i1 %121, label %if.entry32, label %else33

else28:                                           ; preds = %while.entry
  %122 = tail call ptr @malloc(i32 24)
  %123 = load ptr, ptr %type_node.1, align 8
  %124 = load ptr, ptr %memberidx, align 8
  %memberidx48 = getelementptr inbounds %Token, ptr %124, i64 0, i32 1
  %125 = load ptr, ptr %memberidx48, align 8
  %126 = tail call ptr @malloc(i32 32)
  %127 = load i64, ptr %123, align 4
  %memberidx1.i150 = getelementptr inbounds %FloRange, ptr %125, i64 0, i32 1
  %128 = load i64, ptr %memberidx1.i150, align 4
  %memberidx2.i151 = getelementptr inbounds %FloRange, ptr %123, i64 0, i32 2
  %129 = load i64, ptr %memberidx2.i151, align 4
  %memberidx3.i152 = getelementptr inbounds %FloRange, ptr %125, i64 0, i32 3
  %130 = load i64, ptr %memberidx3.i152, align 4
  store i64 %127, ptr %126, align 4
  %memberidx1.i.i153 = getelementptr inbounds %FloRange, ptr %126, i64 0, i32 1
  store i64 %128, ptr %memberidx1.i.i153, align 4
  %memberidx2.i.i154 = getelementptr inbounds %FloRange, ptr %126, i64 0, i32 2
  store i64 %129, ptr %memberidx2.i.i154, align 4
  %memberidx3.i.i155 = getelementptr inbounds %FloRange, ptr %126, i64 0, i32 3
  store i64 %130, ptr %memberidx3.i.i155, align 4
  store ptr %126, ptr %122, align 8
  %memberidx.i.i148 = getelementptr inbounds %TypeNode, ptr %122, i64 0, i32 1
  store i64 13, ptr %memberidx.i.i148, align 4
  %memberidx.i149 = getelementptr inbounds %PointerTypeNode, ptr %122, i64 0, i32 2
  store ptr %type_node.1, ptr %memberidx.i149, align 8
  %131 = load ptr, ptr %memberidx, align 8
  %132 = load i64, ptr %131, align 4
  %133 = icmp eq i64 %132, 11
  br i1 %133, label %if.entry51, label %else52

ifend29:                                          ; preds = %if.entry.i, %else52, %else.i121, %if.entry.i.i119, %if.entry.i117, %Parser_eat.exit
  %type_node.3 = phi ptr [ %188, %Parser_eat.exit ], [ %type_node.4, %if.entry.i117 ], [ %type_node.4, %if.entry.i.i119 ], [ %type_node.4, %else.i121 ], [ %122, %else52 ], [ %122, %if.entry.i ]
  %134 = load ptr, ptr %memberidx, align 8
  %135 = load i64, ptr %134, align 4
  %136 = icmp eq i64 %135, 29
  %137 = icmp eq i64 %135, 11
  %138 = or i1 %136, %137
  %139 = icmp eq i64 %135, 4
  %140 = or i1 %139, %138
  %141 = load ptr, ptr %memberidx2.i197, align 8
  %memberidx3.i147 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 1
  %142 = load i64, ptr %memberidx3.i147, align 4
  %143 = icmp eq i64 %142, 0
  %144 = and i1 %140, %143
  br i1 %144, label %while.entry, label %while.end

if.entry32:                                       ; preds = %Parser_advance.exit160
  %145 = tail call ptr @malloc(i32 32)
  %146 = tail call ptr @malloc(i32 24)
  %147 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %147, ptr noundef nonnull align 8 dereferenceable(5) @75, i64 5, i1 false)
  %148 = tail call ptr @malloc(i32 24)
  store ptr %147, ptr %148, align 8
  %memberidx1.i.i143 = getelementptr inbounds %String, ptr %148, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i143, align 4
  %memberidx2.i.i144 = getelementptr inbounds %String, ptr %148, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i144, align 4
  %149 = load ptr, ptr %memberidx, align 8
  %memberidx36 = getelementptr inbounds %Token, ptr %149, i64 0, i32 1
  %150 = load ptr, ptr %memberidx36, align 8
  store i64 53, ptr %146, align 4
  %memberidx1.i.i141 = getelementptr inbounds %Token, ptr %146, i64 0, i32 1
  store ptr %150, ptr %memberidx1.i.i141, align 8
  %memberidx.i142 = getelementptr inbounds %IdentifierToken, ptr %146, i64 0, i32 2
  store ptr %148, ptr %memberidx.i142, align 8
  %151 = load ptr, ptr %memberidx36, align 8
  store ptr %151, ptr %145, align 8
  %memberidx.i.i136 = getelementptr inbounds %TypeNode, ptr %145, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i136, align 4
  %memberidx.i137 = getelementptr inbounds %RecordTypeNode, ptr %145, i64 0, i32 2
  store ptr %146, ptr %memberidx.i137, align 8
  %memberidx1.i138 = getelementptr inbounds %RecordTypeNode, ptr %145, i64 0, i32 3
  %152 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %152, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i139 = getelementptr inbounds %Array_TypeNode_, ptr %152, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i139, align 4
  %153 = tail call ptr @malloc(i32 64)
  store ptr %153, ptr %152, align 8
  store ptr %152, ptr %memberidx1.i138, align 8
  %154 = load i64, ptr %memberidx1.i.i139, align 4
  %155 = icmp slt i64 %154, 1
  br i1 %155, label %while.entry.i.i, label %Array_TypeNode____sl__.exit

while.entry.i.i:                                  ; preds = %if.entry32, %while.entry.i.i
  %156 = phi ptr [ %160, %while.entry.i.i ], [ %153, %if.entry32 ]
  %157 = phi i64 [ %158, %while.entry.i.i ], [ %154, %if.entry32 ]
  %158 = shl nuw i64 %157, 1
  %159 = shl i64 %157, 4
  %160 = tail call ptr @realloc(ptr %156, i64 %159)
  %161 = icmp slt i64 %158, 1
  br i1 %161, label %while.entry.i.i, label %Array_TypeNode____sl__.exit.loopexit

Array_TypeNode____sl__.exit.loopexit:             ; preds = %while.entry.i.i
  store i64 %158, ptr %memberidx1.i.i139, align 4
  store ptr %160, ptr %152, align 8
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %Array_TypeNode____sl__.exit.loopexit, %if.entry32
  %162 = phi ptr [ %153, %if.entry32 ], [ %160, %Array_TypeNode____sl__.exit.loopexit ]
  store i64 1, ptr %memberidx.i5.i, align 4
  store ptr %type_node.1, ptr %162, align 8
  %.pre223 = load ptr, ptr %145, align 8
  %.pre224 = load ptr, ptr %memberidx, align 8
  br label %ifend34

else33:                                           ; preds = %if.entry27, %Parser_advance.exit160
  %163 = tail call ptr @malloc(i32 32)
  %164 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %165 = load ptr, ptr %memberidx, align 8
  %memberidx41 = getelementptr inbounds %Token, ptr %165, i64 0, i32 1
  %166 = load ptr, ptr %memberidx41, align 8
  store ptr %166, ptr %163, align 8
  %memberidx.i.i131 = getelementptr inbounds %TypeNode, ptr %163, i64 0, i32 1
  store i64 14, ptr %memberidx.i.i131, align 4
  %memberidx.i132 = getelementptr inbounds %ArrayTypeNode, ptr %163, i64 0, i32 2
  store ptr %type_node.1, ptr %memberidx.i132, align 8
  %memberidx1.i133 = getelementptr inbounds %ArrayTypeNode, ptr %163, i64 0, i32 3
  store ptr %164, ptr %memberidx1.i133, align 8
  br label %ifend34

ifend34:                                          ; preds = %else33, %Array_TypeNode____sl__.exit
  %167 = phi ptr [ %.pre224, %Array_TypeNode____sl__.exit ], [ %165, %else33 ]
  %168 = phi ptr [ %.pre223, %Array_TypeNode____sl__.exit ], [ %166, %else33 ]
  %type_node.4 = phi ptr [ %145, %Array_TypeNode____sl__.exit ], [ %163, %else33 ]
  %memberidx45 = getelementptr inbounds %Token, ptr %167, i64 0, i32 1
  %169 = load ptr, ptr %memberidx45, align 8
  %170 = tail call ptr @malloc(i32 32)
  %171 = load i64, ptr %168, align 4
  %memberidx1.i125 = getelementptr inbounds %FloRange, ptr %169, i64 0, i32 1
  %172 = load i64, ptr %memberidx1.i125, align 4
  %memberidx2.i126 = getelementptr inbounds %FloRange, ptr %168, i64 0, i32 2
  %173 = load i64, ptr %memberidx2.i126, align 4
  %memberidx3.i127 = getelementptr inbounds %FloRange, ptr %169, i64 0, i32 3
  %174 = load i64, ptr %memberidx3.i127, align 4
  store i64 %171, ptr %170, align 4
  %memberidx1.i.i128 = getelementptr inbounds %FloRange, ptr %170, i64 0, i32 1
  store i64 %172, ptr %memberidx1.i.i128, align 4
  %memberidx2.i.i129 = getelementptr inbounds %FloRange, ptr %170, i64 0, i32 2
  store i64 %173, ptr %memberidx2.i.i129, align 4
  %memberidx3.i.i130 = getelementptr inbounds %FloRange, ptr %170, i64 0, i32 3
  store i64 %174, ptr %memberidx3.i.i130, align 4
  store ptr %170, ptr %type_node.4, align 8
  %175 = load ptr, ptr %memberidx, align 8
  %176 = load i64, ptr %175, align 4
  %177 = icmp eq i64 %176, 30
  br i1 %177, label %if.entry.i117, label %else.i121

if.entry.i117:                                    ; preds = %ifend34
  %178 = load i64, ptr %memberidx.i, align 4
  %179 = load ptr, ptr %0, align 8
  %memberidx2.i.i116 = getelementptr inbounds %Array_Token_, ptr %179, i64 0, i32 1
  %180 = load i64, ptr %memberidx2.i.i116, align 4
  %181 = icmp slt i64 %178, %180
  br i1 %181, label %if.entry.i.i119, label %ifend29

if.entry.i.i119:                                  ; preds = %if.entry.i117
  %182 = add nsw i64 %178, 1
  store i64 %182, ptr %memberidx.i, align 4
  %183 = load ptr, ptr %179, align 8
  %184 = getelementptr inbounds ptr, ptr %183, i64 %182
  %185 = load ptr, ptr %184, align 8
  store ptr %185, ptr %memberidx, align 8
  br label %ifend29

else.i121:                                        ; preds = %ifend34
  %186 = tail call ptr @malloc(i32 16)
  %memberidx35.i122 = getelementptr inbounds %Token, ptr %175, i64 0, i32 1
  %187 = load ptr, ptr %memberidx35.i122, align 8
  store i64 46, ptr %186, align 4
  %memberidx1.i74.i123 = getelementptr inbounds %Token, ptr %186, i64 0, i32 1
  store ptr %187, ptr %memberidx1.i74.i123, align 8
  br label %ifend29

if.entry51:                                       ; preds = %else28
  %188 = tail call ptr @malloc(i32 24)
  %189 = load ptr, ptr %122, align 8
  %190 = load ptr, ptr %memberidx, align 8
  %191 = load i64, ptr %190, align 4
  %192 = icmp eq i64 %191, 11
  br i1 %192, label %if.entry.i111, label %else.i

if.entry.i111:                                    ; preds = %if.entry51
  %193 = load i64, ptr %memberidx.i, align 4
  %194 = load ptr, ptr %0, align 8
  %memberidx2.i.i110 = getelementptr inbounds %Array_Token_, ptr %194, i64 0, i32 1
  %195 = load i64, ptr %memberidx2.i.i110, align 4
  %196 = icmp slt i64 %193, %195
  br i1 %196, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i111
  %197 = add nsw i64 %193, 1
  store i64 %197, ptr %memberidx.i, align 4
  %198 = load ptr, ptr %194, align 8
  %199 = getelementptr inbounds ptr, ptr %198, i64 %197
  %200 = load ptr, ptr %199, align 8
  store ptr %200, ptr %memberidx, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %if.entry51
  %201 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %190, i64 0, i32 1
  %202 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %201, align 4
  %memberidx1.i74.i = getelementptr inbounds %Token, ptr %201, i64 0, i32 1
  store ptr %202, ptr %memberidx1.i74.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i111, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %201, %else.i ], [ %190, %if.entry.i.i ], [ %190, %if.entry.i111 ]
  %memberidx55 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %203 = load ptr, ptr %memberidx55, align 8
  %204 = tail call ptr @malloc(i32 32)
  %205 = load i64, ptr %189, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %203, i64 0, i32 1
  %206 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i106 = getelementptr inbounds %FloRange, ptr %189, i64 0, i32 2
  %207 = load i64, ptr %memberidx2.i106, align 4
  %memberidx3.i107 = getelementptr inbounds %FloRange, ptr %203, i64 0, i32 3
  %208 = load i64, ptr %memberidx3.i107, align 4
  store i64 %205, ptr %204, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %204, i64 0, i32 1
  store i64 %206, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %204, i64 0, i32 2
  store i64 %207, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %204, i64 0, i32 3
  store i64 %208, ptr %memberidx3.i.i, align 4
  store ptr %204, ptr %188, align 8
  %memberidx.i.i = getelementptr inbounds %TypeNode, ptr %188, i64 0, i32 1
  store i64 13, ptr %memberidx.i.i, align 4
  %memberidx.i105 = getelementptr inbounds %PointerTypeNode, ptr %188, i64 0, i32 2
  store ptr %122, ptr %memberidx.i105, align 8
  br label %ifend29

else52:                                           ; preds = %else28
  %209 = load i64, ptr %memberidx.i, align 4
  %210 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %210, i64 0, i32 1
  %211 = load i64, ptr %memberidx2.i, align 4
  %212 = icmp slt i64 %209, %211
  br i1 %212, label %if.entry.i, label %ifend29

if.entry.i:                                       ; preds = %else52
  %213 = add nsw i64 %209, 1
  store i64 %213, ptr %memberidx.i, align 4
  %214 = load ptr, ptr %210, align 8
  %215 = getelementptr inbounds ptr, ptr %214, i64 %213
  %216 = load ptr, ptr %215, align 8
  store ptr %216, ptr %memberidx, align 8
  br label %ifend29
}

define internal fastcc void @Parser_parse_expression_list(ptr %0, ptr nocapture %1, i64 %2) unnamed_addr {
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 33
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx3.i.i, align 4
  %9 = icmp eq i64 %8, 0
  %10 = and i1 %6, %9
  br i1 %10, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %3
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i11.i, align 4
  %13 = load i64, ptr %memberidx2.i12.i, align 4
  %14 = icmp slt i64 %12, %13
  br i1 %14, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %15 = phi i64 [ %23, %Parser_advance.exit.i ], [ 33, %while.entry.i.preheader ]
  %16 = phi i64 [ %26, %Parser_advance.exit.i ], [ %12, %while.entry.i.preheader ]
  %17 = load i64, ptr %memberidx2.i12.i, align 4
  %18 = icmp slt i64 %16, %17
  br i1 %18, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %19 = add nsw i64 %16, 1
  store i64 %19, ptr %memberidx.i11.i, align 4
  %20 = load ptr, ptr %11, align 8
  %21 = getelementptr inbounds ptr, ptr %20, i64 %19
  %22 = load ptr, ptr %21, align 8
  store ptr %22, ptr %memberidx.i, align 8
  %.pre = load i64, ptr %22, align 4
  %.pre85 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %23 = phi i64 [ %.pre, %if.entry.i.i ], [ %15, %while.entry.i ]
  %24 = phi i64 [ %.pre85, %if.entry.i.i ], [ 0, %while.entry.i ]
  %25 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %26 = phi i64 [ %19, %if.entry.i.i ], [ %16, %while.entry.i ]
  %27 = icmp eq i64 %25, 33
  %28 = icmp eq i64 %24, 0
  %29 = and i1 %27, %28
  br i1 %29, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %3
  %30 = phi i64 [ %5, %3 ], [ %23, %Parser_advance.exit.i ]
  %31 = icmp eq i64 %30, %2
  br i1 %31, label %common.ret, label %ifend

common.ret:                                       ; preds = %Parser_advance.exit.i71, %while.end, %Parser_new_lines.exit
  ret void

ifend:                                            ; preds = %Parser_new_lines.exit
  %32 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %memberidx.i18 = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i18, align 4
  %34 = add i64 %33, 1
  %memberidx.i.i19 = getelementptr inbounds %Array_ExpressionNode_, ptr %1, i64 0, i32 2
  %35 = load i64, ptr %memberidx.i.i19, align 4
  %36 = icmp slt i64 %35, %34
  %.pre86 = load ptr, ptr %1, align 8
  br i1 %36, label %while.entry.i.i, label %Array_ExpressionNode____sl__.exit

while.entry.i.i:                                  ; preds = %ifend, %while.entry.i.i
  %37 = phi ptr [ %41, %while.entry.i.i ], [ %.pre86, %ifend ]
  %38 = phi i64 [ %42, %while.entry.i.i ], [ %35, %ifend ]
  %39 = shl nuw i64 %38, 1
  store i64 %39, ptr %memberidx.i.i19, align 4
  %40 = shl i64 %38, 4
  %41 = tail call ptr @realloc(ptr %37, i64 %40)
  store ptr %41, ptr %1, align 8
  %42 = load i64, ptr %memberidx.i.i19, align 4
  %43 = icmp slt i64 %42, %34
  br i1 %43, label %while.entry.i.i, label %Array_ExpressionNode____sl__.exit.loopexit

Array_ExpressionNode____sl__.exit.loopexit:       ; preds = %while.entry.i.i
  %.pre87 = load i64, ptr %memberidx.i18, align 4
  %.pre106 = add nsw i64 %.pre87, 1
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %ifend, %Array_ExpressionNode____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre106, %Array_ExpressionNode____sl__.exit.loopexit ], [ %34, %ifend ]
  %44 = phi ptr [ %41, %Array_ExpressionNode____sl__.exit.loopexit ], [ %.pre86, %ifend ]
  %45 = phi i64 [ %.pre87, %Array_ExpressionNode____sl__.exit.loopexit ], [ %33, %ifend ]
  store i64 %.pre-phi, ptr %memberidx.i18, align 4
  %46 = getelementptr inbounds ptr, ptr %44, i64 %45
  store ptr %32, ptr %46, align 8
  %47 = load ptr, ptr %memberidx.i, align 8
  %48 = load i64, ptr %47, align 4
  %49 = icmp eq i64 %48, 33
  %50 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i23 = getelementptr inbounds %Array_FloError_, ptr %50, i64 0, i32 1
  %51 = load i64, ptr %memberidx3.i.i23, align 4
  %52 = icmp eq i64 %51, 0
  %53 = and i1 %49, %52
  br i1 %53, label %while.entry.i26.preheader, label %Parser_new_lines.exit33

while.entry.i26.preheader:                        ; preds = %Array_ExpressionNode____sl__.exit
  %memberidx.i11.i24 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %54 = load ptr, ptr %0, align 8
  %memberidx2.i12.i25 = getelementptr inbounds %Array_Token_, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx.i11.i24, align 4
  %56 = load i64, ptr %memberidx2.i12.i25, align 4
  %57 = icmp slt i64 %55, %56
  br i1 %57, label %while.entry.i26, label %while.entry.i26.us

while.entry.i26.us:                               ; preds = %while.entry.i26.preheader, %while.entry.i26.us
  br label %while.entry.i26.us

while.entry.i26:                                  ; preds = %while.entry.i26.preheader, %Parser_advance.exit.i32
  %58 = phi i64 [ %67, %Parser_advance.exit.i32 ], [ 0, %while.entry.i26.preheader ]
  %59 = phi i64 [ %68, %Parser_advance.exit.i32 ], [ 33, %while.entry.i26.preheader ]
  %60 = phi i64 [ %71, %Parser_advance.exit.i32 ], [ %55, %while.entry.i26.preheader ]
  %61 = load i64, ptr %memberidx2.i12.i25, align 4
  %62 = icmp slt i64 %60, %61
  br i1 %62, label %if.entry.i.i28, label %Parser_advance.exit.i32

if.entry.i.i28:                                   ; preds = %while.entry.i26
  %63 = add nsw i64 %60, 1
  store i64 %63, ptr %memberidx.i11.i24, align 4
  %64 = load ptr, ptr %54, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  store ptr %66, ptr %memberidx.i, align 8
  %.pre89 = load i64, ptr %66, align 4
  %.pre90 = load i64, ptr %memberidx3.i.i23, align 4
  br label %Parser_advance.exit.i32

Parser_advance.exit.i32:                          ; preds = %if.entry.i.i28, %while.entry.i26
  %67 = phi i64 [ %.pre90, %if.entry.i.i28 ], [ %58, %while.entry.i26 ]
  %68 = phi i64 [ %.pre89, %if.entry.i.i28 ], [ %59, %while.entry.i26 ]
  %69 = phi i64 [ %.pre90, %if.entry.i.i28 ], [ 0, %while.entry.i26 ]
  %70 = phi i64 [ %.pre89, %if.entry.i.i28 ], [ 33, %while.entry.i26 ]
  %71 = phi i64 [ %63, %if.entry.i.i28 ], [ %60, %while.entry.i26 ]
  %72 = icmp eq i64 %70, 33
  %73 = icmp eq i64 %69, 0
  %74 = and i1 %72, %73
  br i1 %74, label %while.entry.i26, label %Parser_new_lines.exit33

Parser_new_lines.exit33:                          ; preds = %Parser_advance.exit.i32, %Array_ExpressionNode____sl__.exit
  %75 = phi i64 [ %51, %Array_ExpressionNode____sl__.exit ], [ %67, %Parser_advance.exit.i32 ]
  %76 = phi i64 [ %48, %Array_ExpressionNode____sl__.exit ], [ %68, %Parser_advance.exit.i32 ]
  %77 = icmp eq i64 %76, 3
  %78 = icmp eq i64 %75, 0
  %79 = and i1 %77, %78
  br i1 %79, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_new_lines.exit33
  %memberidx.i35 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_ExpressionNode____sl__.exit55
  %80 = phi ptr [ %50, %while.entry.preheader ], [ %125, %Array_ExpressionNode____sl__.exit55 ]
  %81 = load i64, ptr %memberidx.i35, align 4
  %82 = load ptr, ptr %0, align 8
  %memberidx2.i36 = getelementptr inbounds %Array_Token_, ptr %82, i64 0, i32 1
  %83 = load i64, ptr %memberidx2.i36, align 4
  %84 = icmp slt i64 %81, %83
  br i1 %84, label %Parser_advance.exit, label %Parser_new_lines.exit51

Parser_advance.exit:                              ; preds = %while.entry
  %85 = add nsw i64 %81, 1
  store i64 %85, ptr %memberidx.i35, align 4
  %86 = load ptr, ptr %82, align 8
  %87 = getelementptr inbounds ptr, ptr %86, i64 %85
  %88 = load ptr, ptr %87, align 8
  store ptr %88, ptr %memberidx.i, align 8
  %.pre91 = load i64, ptr %88, align 4
  %memberidx3.i.i41.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %80, i64 0, i32 1
  %.pre92 = load i64, ptr %memberidx3.i.i41.phi.trans.insert, align 4
  %89 = icmp eq i64 %.pre91, 33
  %memberidx3.i.i41 = getelementptr inbounds %Array_FloError_, ptr %80, i64 0, i32 1
  %90 = icmp eq i64 %.pre92, 0
  %91 = and i1 %89, %90
  br i1 %91, label %while.entry.i44.preheader, label %Parser_new_lines.exit51

while.entry.i44.preheader:                        ; preds = %Parser_advance.exit
  %92 = load i64, ptr %memberidx2.i36, align 4
  %93 = icmp slt i64 %85, %92
  br i1 %93, label %while.entry.i44, label %while.entry.i44.us

while.entry.i44.us:                               ; preds = %while.entry.i44.preheader, %while.entry.i44.us
  br label %while.entry.i44.us

while.entry.i44:                                  ; preds = %while.entry.i44.preheader, %Parser_advance.exit.i50
  %94 = phi i64 [ %103, %Parser_advance.exit.i50 ], [ %85, %while.entry.i44.preheader ]
  %95 = load i64, ptr %memberidx2.i36, align 4
  %96 = icmp slt i64 %94, %95
  br i1 %96, label %if.entry.i.i46, label %Parser_advance.exit.i50

if.entry.i.i46:                                   ; preds = %while.entry.i44
  %97 = add nsw i64 %94, 1
  store i64 %97, ptr %memberidx.i35, align 4
  %98 = load ptr, ptr %82, align 8
  %99 = getelementptr inbounds ptr, ptr %98, i64 %97
  %100 = load ptr, ptr %99, align 8
  store ptr %100, ptr %memberidx.i, align 8
  %.pre94 = load i64, ptr %100, align 4
  %.pre95 = load i64, ptr %memberidx3.i.i41, align 4
  br label %Parser_advance.exit.i50

Parser_advance.exit.i50:                          ; preds = %if.entry.i.i46, %while.entry.i44
  %101 = phi i64 [ %.pre95, %if.entry.i.i46 ], [ 0, %while.entry.i44 ]
  %102 = phi i64 [ %.pre94, %if.entry.i.i46 ], [ 33, %while.entry.i44 ]
  %103 = phi i64 [ %97, %if.entry.i.i46 ], [ %94, %while.entry.i44 ]
  %104 = icmp eq i64 %102, 33
  %105 = icmp eq i64 %101, 0
  %106 = and i1 %104, %105
  br i1 %106, label %while.entry.i44, label %Parser_new_lines.exit51

Parser_new_lines.exit51:                          ; preds = %Parser_advance.exit.i50, %while.entry, %Parser_advance.exit
  %107 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %108 = load i64, ptr %memberidx.i18, align 4
  %109 = add i64 %108, 1
  %110 = load i64, ptr %memberidx.i.i19, align 4
  %111 = icmp slt i64 %110, %109
  %.pre96 = load ptr, ptr %1, align 8
  br i1 %111, label %while.entry.i.i54, label %Array_ExpressionNode____sl__.exit55

while.entry.i.i54:                                ; preds = %Parser_new_lines.exit51, %while.entry.i.i54
  %112 = phi ptr [ %116, %while.entry.i.i54 ], [ %.pre96, %Parser_new_lines.exit51 ]
  %113 = phi i64 [ %117, %while.entry.i.i54 ], [ %110, %Parser_new_lines.exit51 ]
  %114 = shl nuw i64 %113, 1
  store i64 %114, ptr %memberidx.i.i19, align 4
  %115 = shl i64 %113, 4
  %116 = tail call ptr @realloc(ptr %112, i64 %115)
  store ptr %116, ptr %1, align 8
  %117 = load i64, ptr %memberidx.i.i19, align 4
  %118 = icmp slt i64 %117, %109
  br i1 %118, label %while.entry.i.i54, label %Array_ExpressionNode____sl__.exit55.loopexit

Array_ExpressionNode____sl__.exit55.loopexit:     ; preds = %while.entry.i.i54
  %.pre97 = load i64, ptr %memberidx.i18, align 4
  %.pre107 = add nsw i64 %.pre97, 1
  br label %Array_ExpressionNode____sl__.exit55

Array_ExpressionNode____sl__.exit55:              ; preds = %Parser_new_lines.exit51, %Array_ExpressionNode____sl__.exit55.loopexit
  %.pre-phi108 = phi i64 [ %.pre107, %Array_ExpressionNode____sl__.exit55.loopexit ], [ %109, %Parser_new_lines.exit51 ]
  %119 = phi ptr [ %116, %Array_ExpressionNode____sl__.exit55.loopexit ], [ %.pre96, %Parser_new_lines.exit51 ]
  %120 = phi i64 [ %.pre97, %Array_ExpressionNode____sl__.exit55.loopexit ], [ %108, %Parser_new_lines.exit51 ]
  store i64 %.pre-phi108, ptr %memberidx.i18, align 4
  %121 = getelementptr inbounds ptr, ptr %119, i64 %120
  store ptr %107, ptr %121, align 8
  %122 = load ptr, ptr %memberidx.i, align 8
  %123 = load i64, ptr %122, align 4
  %124 = icmp eq i64 %123, 3
  %125 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i58 = getelementptr inbounds %Array_FloError_, ptr %125, i64 0, i32 1
  %126 = load i64, ptr %memberidx3.i58, align 4
  %127 = icmp eq i64 %126, 0
  %128 = and i1 %124, %127
  br i1 %128, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_ExpressionNode____sl__.exit55, %Parser_new_lines.exit33
  %129 = phi i64 [ %75, %Parser_new_lines.exit33 ], [ %126, %Array_ExpressionNode____sl__.exit55 ]
  %130 = phi ptr [ %50, %Parser_new_lines.exit33 ], [ %125, %Array_ExpressionNode____sl__.exit55 ]
  %131 = phi i64 [ %76, %Parser_new_lines.exit33 ], [ %123, %Array_ExpressionNode____sl__.exit55 ]
  %132 = icmp eq i64 %131, 33
  %memberidx3.i.i62 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 1
  %133 = icmp eq i64 %129, 0
  %134 = and i1 %132, %133
  br i1 %134, label %while.entry.i65.preheader, label %common.ret

while.entry.i65.preheader:                        ; preds = %while.end
  %memberidx.i11.i63 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %135 = load ptr, ptr %0, align 8
  %memberidx2.i12.i64 = getelementptr inbounds %Array_Token_, ptr %135, i64 0, i32 1
  %136 = load i64, ptr %memberidx.i11.i63, align 4
  %137 = load i64, ptr %memberidx2.i12.i64, align 4
  %138 = icmp slt i64 %136, %137
  br i1 %138, label %while.entry.i65, label %while.entry.i65.us

while.entry.i65.us:                               ; preds = %while.entry.i65.preheader, %while.entry.i65.us
  br label %while.entry.i65.us

while.entry.i65:                                  ; preds = %while.entry.i65.preheader, %Parser_advance.exit.i71
  %139 = phi i64 [ %148, %Parser_advance.exit.i71 ], [ %136, %while.entry.i65.preheader ]
  %140 = load i64, ptr %memberidx2.i12.i64, align 4
  %141 = icmp slt i64 %139, %140
  br i1 %141, label %if.entry.i.i67, label %Parser_advance.exit.i71

if.entry.i.i67:                                   ; preds = %while.entry.i65
  %142 = add nsw i64 %139, 1
  store i64 %142, ptr %memberidx.i11.i63, align 4
  %143 = load ptr, ptr %135, align 8
  %144 = getelementptr inbounds ptr, ptr %143, i64 %142
  %145 = load ptr, ptr %144, align 8
  store ptr %145, ptr %memberidx.i, align 8
  %.pre99 = load i64, ptr %145, align 4
  %.pre100 = load i64, ptr %memberidx3.i.i62, align 4
  br label %Parser_advance.exit.i71

Parser_advance.exit.i71:                          ; preds = %if.entry.i.i67, %while.entry.i65
  %146 = phi i64 [ %.pre100, %if.entry.i.i67 ], [ 0, %while.entry.i65 ]
  %147 = phi i64 [ %.pre99, %if.entry.i.i67 ], [ 33, %while.entry.i65 ]
  %148 = phi i64 [ %142, %if.entry.i.i67 ], [ %139, %while.entry.i65 ]
  %149 = icmp eq i64 %147, 33
  %150 = icmp eq i64 %146, 0
  %151 = and i1 %149, %150
  br i1 %151, label %while.entry.i65, label %common.ret
}

define internal fastcc ptr @Parser_parse_string(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %1 = load ptr, ptr %memberidx.i, align 8
  %2 = load i64, ptr %1, align 4
  %3 = icmp eq i64 %2, 34
  br i1 %3, label %if.entry.i, label %else.i

if.entry.i:                                       ; preds = %for.entry
  %memberidx.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i.i, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx.i, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %for.entry
  %12 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %1, i64 0, i32 1
  %13 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %12, align 4
  %memberidx1.i74.i = getelementptr inbounds %Token, ptr %12, i64 0, i32 1
  store ptr %13, ptr %memberidx1.i74.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %12, %else.i ], [ %1, %if.entry.i.i ], [ %1, %if.entry.i ]
  %14 = alloca %Parser, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %15 = load ptr, ptr %memberidx, align 8
  store ptr null, ptr %14, align 8
  %memberidx1.i = getelementptr inbounds %Parser, ptr %14, i64 0, i32 1
  store ptr %15, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Parser, ptr %14, i64 0, i32 3
  store i64 -1, ptr %memberidx2.i, align 8
  %16 = tail call ptr @malloc(i32 24)
  %memberidx.i18 = getelementptr inbounds %Array_ExpressionNode_, ptr %16, i64 0, i32 1
  store i64 0, ptr %memberidx.i18, align 4
  %memberidx1.i19 = getelementptr inbounds %Array_ExpressionNode_, ptr %16, i64 0, i32 2
  store i64 8, ptr %memberidx1.i19, align 4
  %17 = tail call ptr @malloc(i32 64)
  store ptr %17, ptr %16, align 8
  store i64 0, ptr %memberidx.i18, align 4
  %memberidx3 = getelementptr inbounds %StrToken, ptr %common.ret.op.i, i64 0, i32 4
  %18 = load ptr, ptr %memberidx3, align 8
  %memberidx433 = getelementptr inbounds %Array_Array_Token__, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx433, align 4
  %20 = icmp sgt i64 %19, 0
  %21 = load ptr, ptr %memberidx.i, align 8
  %22 = load i64, ptr %21, align 4
  %23 = icmp ne i64 %22, 46
  %24 = load ptr, ptr %memberidx, align 8
  %memberidx3.i34 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx3.i34, align 4
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  %28 = and i1 %20, %27
  br i1 %28, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %Parser_eat.exit
  %memberidx3.i24 = getelementptr inbounds %Parser, ptr %14, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ExpressionNode____sl__.exit
  %29 = phi ptr [ %18, %for.body.lr.ph ], [ %53, %Array_ExpressionNode____sl__.exit ]
  %i.035 = phi i64 [ 0, %for.body.lr.ph ], [ %52, %Array_ExpressionNode____sl__.exit ]
  %30 = load ptr, ptr %29, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %i.035
  %32 = load ptr, ptr %31, align 8
  store ptr %32, ptr %14, align 8
  store i64 -1, ptr %memberidx2.i, align 8
  %memberidx2.i23 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx2.i23, align 4
  %34 = icmp sgt i64 %33, -1
  br i1 %34, label %if.entry.i25, label %Parser_advance.exit

if.entry.i25:                                     ; preds = %for.body
  store i64 0, ptr %memberidx2.i, align 8
  %35 = load ptr, ptr %32, align 8
  %36 = load ptr, ptr %35, align 8
  store ptr %36, ptr %memberidx3.i24, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %for.body, %if.entry.i25
  %37 = call fastcc ptr @Parser_parse_expression(ptr nonnull %14)
  %38 = load i64, ptr %memberidx.i18, align 4
  %39 = add i64 %38, 1
  %40 = load i64, ptr %memberidx1.i19, align 4
  %41 = icmp slt i64 %40, %39
  %.pre = load ptr, ptr %16, align 8
  br i1 %41, label %while.entry.i.i, label %Array_ExpressionNode____sl__.exit

while.entry.i.i:                                  ; preds = %Parser_advance.exit, %while.entry.i.i
  %42 = phi ptr [ %46, %while.entry.i.i ], [ %.pre, %Parser_advance.exit ]
  %43 = phi i64 [ %47, %while.entry.i.i ], [ %40, %Parser_advance.exit ]
  %44 = shl nuw i64 %43, 1
  store i64 %44, ptr %memberidx1.i19, align 4
  %45 = shl i64 %43, 4
  %46 = call ptr @realloc(ptr %42, i64 %45)
  store ptr %46, ptr %16, align 8
  %47 = load i64, ptr %memberidx1.i19, align 4
  %48 = icmp slt i64 %47, %39
  br i1 %48, label %while.entry.i.i, label %Array_ExpressionNode____sl__.exit.loopexit

Array_ExpressionNode____sl__.exit.loopexit:       ; preds = %while.entry.i.i
  %.pre36 = load i64, ptr %memberidx.i18, align 4
  %.pre38 = add nsw i64 %.pre36, 1
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %Parser_advance.exit, %Array_ExpressionNode____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre38, %Array_ExpressionNode____sl__.exit.loopexit ], [ %39, %Parser_advance.exit ]
  %49 = phi ptr [ %46, %Array_ExpressionNode____sl__.exit.loopexit ], [ %.pre, %Parser_advance.exit ]
  %50 = phi i64 [ %.pre36, %Array_ExpressionNode____sl__.exit.loopexit ], [ %38, %Parser_advance.exit ]
  store i64 %.pre-phi, ptr %memberidx.i18, align 4
  %51 = getelementptr inbounds ptr, ptr %49, i64 %50
  store ptr %37, ptr %51, align 8
  %52 = add nuw nsw i64 %i.035, 1
  %53 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Array_Array_Token__, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx4, align 4
  %55 = icmp slt i64 %52, %54
  %56 = load ptr, ptr %memberidx.i, align 8
  %57 = load i64, ptr %56, align 4
  %58 = icmp ne i64 %57, 46
  %59 = load ptr, ptr %memberidx, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %60 = load i64, ptr %memberidx3.i, align 4
  %61 = icmp eq i64 %60, 0
  %62 = and i1 %58, %61
  %63 = and i1 %55, %62
  br i1 %63, label %for.body, label %for.end

for.end:                                          ; preds = %Array_ExpressionNode____sl__.exit, %Parser_eat.exit
  %64 = tail call ptr @malloc(i32 40)
  %memberidx.i28 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i28, align 8
  store ptr %65, ptr %64, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %64, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i29 = getelementptr inbounds %ExpressionNode, ptr %64, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i29, align 4
  %memberidx1.i30 = getelementptr inbounds %StringExpressionNode, ptr %64, i64 0, i32 3
  store ptr %common.ret.op.i, ptr %memberidx1.i30, align 8
  %memberidx2.i31 = getelementptr inbounds %StringExpressionNode, ptr %64, i64 0, i32 4
  store ptr %16, ptr %memberidx2.i31, align 8
  ret ptr %64
}

define internal fastcc ptr @Parser_parse_variable_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 1, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 3
  %memberidx1.i = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 4
  %memberidx.i60 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx.i, i8 0, i64 16, i1 false)
  %5 = load i64, ptr %memberidx.i60, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i60, align 4
  %10 = load ptr, ptr %6, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %VarDeclarationStatement, ptr %2, i64 0, i32 2
  %13 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %13, ptr %memberidx2, align 8
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %17 = load i64, ptr %memberidx.i60, align 4
  %18 = load ptr, ptr %0, align 8
  %memberidx2.i62 = getelementptr inbounds %Array_Token_, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx2.i62, align 4
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %if.entry.i64, label %Parser_advance.exit65

if.entry.i64:                                     ; preds = %if.entry
  %21 = add nsw i64 %17, 1
  store i64 %21, ptr %memberidx.i60, align 4
  %22 = load ptr, ptr %18, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  store ptr %24, ptr %memberidx, align 8
  br label %Parser_advance.exit65

Parser_advance.exit65:                            ; preds = %if.entry, %if.entry.i64
  %25 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %25, ptr %memberidx.i, align 8
  %.pre = load ptr, ptr %memberidx, align 8
  %.pre94 = load i64, ptr %.pre, align 4
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit65
  %26 = phi ptr [ null, %Parser_advance.exit ], [ %25, %Parser_advance.exit65 ]
  %27 = phi i64 [ %15, %Parser_advance.exit ], [ %.pre94, %Parser_advance.exit65 ]
  %28 = phi ptr [ %14, %Parser_advance.exit ], [ %.pre, %Parser_advance.exit65 ]
  %memberidx7 = getelementptr inbounds %Token, ptr %28, i64 0, i32 1
  %29 = load ptr, ptr %memberidx7, align 8
  %30 = icmp eq i64 %27, 38
  br i1 %30, label %if.entry10, label %else11

if.entry10:                                       ; preds = %ifend
  %31 = load i64, ptr %memberidx.i60, align 4
  %32 = load ptr, ptr %0, align 8
  %memberidx2.i67 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx2.i67, align 4
  %34 = icmp slt i64 %31, %33
  br i1 %34, label %if.entry.i69, label %Parser_advance.exit70

if.entry.i69:                                     ; preds = %if.entry10
  %35 = add nsw i64 %31, 1
  store i64 %35, ptr %memberidx.i60, align 4
  %36 = load ptr, ptr %32, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8
  store ptr %38, ptr %memberidx, align 8
  br label %Parser_advance.exit70

Parser_advance.exit70:                            ; preds = %if.entry10, %if.entry.i69
  %39 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %39, ptr %memberidx1.i, align 8
  %40 = load ptr, ptr %39, align 8
  br label %ifend12

else11:                                           ; preds = %ifend
  %41 = icmp ne ptr %26, null
  %42 = icmp eq i64 %27, 25
  %43 = and i1 %42, %41
  br i1 %43, label %if.entry19, label %ifend12

ifend12:                                          ; preds = %Parser_advance.exit83, %else11, %Parser_advance.exit70
  %end_range.0 = phi ptr [ %40, %Parser_advance.exit70 ], [ %29, %Parser_advance.exit83 ], [ %29, %else11 ]
  %44 = tail call ptr @malloc(i32 32)
  %45 = load i64, ptr %4, align 4
  %memberidx1.i71 = getelementptr inbounds %FloRange, ptr %end_range.0, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i71, align 4
  %memberidx2.i72 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %47 = load i64, ptr %memberidx2.i72, align 4
  %memberidx3.i73 = getelementptr inbounds %FloRange, ptr %end_range.0, i64 0, i32 3
  %48 = load i64, ptr %memberidx3.i73, align 4
  store i64 %45, ptr %44, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 2
  store i64 %47, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  store i64 %48, ptr %memberidx3.i.i, align 4
  store ptr %44, ptr %2, align 8
  ret ptr %2

if.entry19:                                       ; preds = %else11
  %49 = tail call ptr @malloc(i32 41)
  %50 = load ptr, ptr %26, align 8
  %memberidx.i74 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 3
  store ptr %26, ptr %memberidx.i74, align 8
  %memberidx1.i75 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 4
  store i1 true, ptr %memberidx1.i75, align 1
  store ptr %50, ptr %49, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %49, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i76 = getelementptr inbounds %ExpressionNode, ptr %49, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i76, align 4
  %memberidx2.i77 = getelementptr inbounds %NewExpressionNode, ptr %49, i64 0, i32 5
  %51 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_ExpressionNode_, ptr %51, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i.i78 = getelementptr inbounds %Array_ExpressionNode_, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i78, align 4
  %52 = tail call ptr @malloc(i32 64)
  store ptr %52, ptr %51, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %51, ptr %memberidx2.i77, align 8
  store i1 false, ptr %memberidx1.i75, align 1
  %53 = load i64, ptr %memberidx.i60, align 4
  %54 = load ptr, ptr %0, align 8
  %memberidx2.i80 = getelementptr inbounds %Array_Token_, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx2.i80, align 4
  %56 = icmp slt i64 %53, %55
  br i1 %56, label %if.entry.i82, label %Parser_advance.exit83

if.entry.i82:                                     ; preds = %if.entry19
  %57 = add nsw i64 %53, 1
  store i64 %57, ptr %memberidx.i60, align 4
  %58 = load ptr, ptr %54, align 8
  %59 = getelementptr inbounds ptr, ptr %58, i64 %57
  %60 = load ptr, ptr %59, align 8
  store ptr %60, ptr %memberidx, align 8
  br label %Parser_advance.exit83

Parser_advance.exit83:                            ; preds = %if.entry19, %if.entry.i82
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %51, i64 26)
  %61 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx29 = getelementptr inbounds %Token, ptr %61, i64 0, i32 1
  %62 = load ptr, ptr %memberidx29, align 8
  %63 = tail call ptr @malloc(i32 32)
  %64 = load i64, ptr %50, align 4
  %memberidx1.i84 = getelementptr inbounds %FloRange, ptr %62, i64 0, i32 1
  %65 = load i64, ptr %memberidx1.i84, align 4
  %memberidx2.i85 = getelementptr inbounds %FloRange, ptr %50, i64 0, i32 2
  %66 = load i64, ptr %memberidx2.i85, align 4
  %memberidx3.i86 = getelementptr inbounds %FloRange, ptr %62, i64 0, i32 3
  %67 = load i64, ptr %memberidx3.i86, align 4
  store i64 %64, ptr %63, align 4
  %memberidx1.i.i87 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 1
  store i64 %65, ptr %memberidx1.i.i87, align 4
  %memberidx2.i.i88 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 2
  store i64 %66, ptr %memberidx2.i.i88, align 4
  %memberidx3.i.i89 = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 3
  store i64 %67, ptr %memberidx3.i.i89, align 4
  store ptr %63, ptr %49, align 8
  store ptr %49, ptr %memberidx1.i, align 8
  br label %ifend12
}

define internal fastcc ptr @Parser_parse_statement(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %ifend38 [
    i64 56, label %if.entry
    i64 60, label %if.entry6
    i64 59, label %if.entry11
    i64 64, label %if.entry16
    i64 55, label %if.entry21
    i64 54, label %if.entry26
    i64 63, label %if.entry31
    i64 62, label %if.entry36
  ]

common.ret:                                       ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %Parser_advance.exit.i, %if.entry.i65, %if.entry28.i, %ifend.i, %Parser_advance.exit35.i, %Parser_new_lines.exit.i, %Parser_advance.exit62, %Parser_advance.exit, %if.entry26, %if.entry21, %Parser_parse_while_statement.exit, %ifend38
  %common.ret.op = phi ptr [ %203, %ifend38 ], [ %61, %Parser_parse_while_statement.exit ], [ %183, %if.entry21 ], [ %184, %if.entry26 ], [ %193, %Parser_advance.exit ], [ %202, %Parser_advance.exit62 ], [ %5, %Parser_new_lines.exit.i ], [ %5, %Parser_advance.exit35.i ], [ %80, %ifend.i ], [ %80, %if.entry28.i ], [ %160, %switch.early.test ], [ %160, %if.entry.i65 ], [ %160, %Parser_advance.exit.i ], [ %160, %switch.early.test ], [ %160, %switch.early.test ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %5 = tail call ptr @malloc(i32 40)
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1.i93 = getelementptr inbounds %Token, ptr %6, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1.i93, align 8
  store ptr %7, ptr %5, align 8
  %memberidx.i.i.i94 = getelementptr inbounds %StatementNode, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i94, align 4
  %memberidx.i.i95 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 4
  store ptr null, ptr %memberidx.i.i95, align 8
  %memberidx.i24.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %8 = load i64, ptr %memberidx.i24.i, align 4
  %9 = load ptr, ptr %0, align 8
  %memberidx2.i.i96 = getelementptr inbounds %Array_Token_, ptr %9, i64 0, i32 1
  %10 = load i64, ptr %memberidx2.i.i96, align 4
  %11 = icmp slt i64 %8, %10
  br i1 %11, label %if.entry.i.i98, label %Parser_advance.exit.i105

if.entry.i.i98:                                   ; preds = %if.entry
  %12 = add nsw i64 %8, 1
  store i64 %12, ptr %memberidx.i24.i, align 4
  %13 = load ptr, ptr %9, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  store ptr %15, ptr %memberidx, align 8
  br label %Parser_advance.exit.i105

Parser_advance.exit.i105:                         ; preds = %if.entry.i.i98, %if.entry
  %memberidx2.i99 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 2
  %16 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %16, ptr %memberidx2.i99, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 32)
  %19 = load i64, ptr %7, align 4
  %memberidx1.i.i100 = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 1
  %20 = load i64, ptr %memberidx1.i.i100, align 4
  %memberidx2.i25.i = getelementptr inbounds %FloRange, ptr %7, i64 0, i32 2
  %21 = load i64, ptr %memberidx2.i25.i, align 4
  %memberidx3.i26.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 3
  %22 = load i64, ptr %memberidx3.i26.i, align 4
  store i64 %19, ptr %18, align 4
  %memberidx1.i.i.i101 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i.i.i101, align 4
  %memberidx2.i.i.i102 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 2
  store i64 %21, ptr %memberidx2.i.i.i102, align 4
  %memberidx3.i.i.i103 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 3
  store i64 %22, ptr %memberidx3.i.i.i103, align 4
  store ptr %18, ptr %5, align 8
  %memberidx7.i104 = getelementptr inbounds %IfStatementNode, ptr %5, i64 0, i32 3
  %23 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %23, ptr %memberidx7.i104, align 8
  %24 = load ptr, ptr %memberidx, align 8
  %25 = load i64, ptr %24, align 4
  %26 = icmp eq i64 %25, 33
  %memberidx2.i.i29.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %27 = load ptr, ptr %memberidx2.i.i29.i, align 8
  %memberidx3.i.i30.i = getelementptr inbounds %Array_FloError_, ptr %27, i64 0, i32 1
  %28 = load i64, ptr %memberidx3.i.i30.i, align 4
  %29 = icmp eq i64 %28, 0
  %30 = and i1 %26, %29
  br i1 %30, label %while.entry.i.i.preheader, label %Parser_new_lines.exit.i

while.entry.i.i.preheader:                        ; preds = %Parser_advance.exit.i105
  %31 = load ptr, ptr %0, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %31, i64 0, i32 1
  %32 = load i64, ptr %memberidx.i24.i, align 4
  %33 = load i64, ptr %memberidx2.i12.i.i, align 4
  %34 = icmp slt i64 %32, %33
  br i1 %34, label %while.entry.i.i, label %while.entry.i.i.us

while.entry.i.i.us:                               ; preds = %while.entry.i.i.preheader, %while.entry.i.i.us
  br label %while.entry.i.i.us

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i.i107
  %35 = phi i64 [ %43, %Parser_advance.exit.i.i107 ], [ 33, %while.entry.i.i.preheader ]
  %36 = phi i64 [ %46, %Parser_advance.exit.i.i107 ], [ %32, %while.entry.i.i.preheader ]
  %37 = load i64, ptr %memberidx2.i12.i.i, align 4
  %38 = icmp slt i64 %36, %37
  br i1 %38, label %if.entry.i.i.i106, label %Parser_advance.exit.i.i107

if.entry.i.i.i106:                                ; preds = %while.entry.i.i
  %39 = add nsw i64 %36, 1
  store i64 %39, ptr %memberidx.i24.i, align 4
  %40 = load ptr, ptr %31, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %39
  %42 = load ptr, ptr %41, align 8
  store ptr %42, ptr %memberidx, align 8
  %.pre131 = load i64, ptr %42, align 4
  %.pre132 = load i64, ptr %memberidx3.i.i30.i, align 4
  br label %Parser_advance.exit.i.i107

Parser_advance.exit.i.i107:                       ; preds = %if.entry.i.i.i106, %while.entry.i.i
  %43 = phi i64 [ %.pre131, %if.entry.i.i.i106 ], [ %35, %while.entry.i.i ]
  %44 = phi i64 [ %.pre132, %if.entry.i.i.i106 ], [ 0, %while.entry.i.i ]
  %45 = phi i64 [ %.pre131, %if.entry.i.i.i106 ], [ 33, %while.entry.i.i ]
  %46 = phi i64 [ %39, %if.entry.i.i.i106 ], [ %36, %while.entry.i.i ]
  %47 = icmp eq i64 %45, 33
  %48 = icmp eq i64 %44, 0
  %49 = and i1 %47, %48
  br i1 %49, label %while.entry.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i107, %Parser_advance.exit.i105
  %50 = phi i64 [ %25, %Parser_advance.exit.i105 ], [ %43, %Parser_advance.exit.i.i107 ]
  %51 = icmp eq i64 %50, 58
  br i1 %51, label %if.entry.i108, label %common.ret

if.entry.i108:                                    ; preds = %Parser_new_lines.exit.i
  %52 = load i64, ptr %memberidx.i24.i, align 4
  %53 = load ptr, ptr %0, align 8
  %memberidx2.i32.i = getelementptr inbounds %Array_Token_, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx2.i32.i, align 4
  %55 = icmp slt i64 %52, %54
  br i1 %55, label %if.entry.i34.i, label %Parser_advance.exit35.i

if.entry.i34.i:                                   ; preds = %if.entry.i108
  %56 = add nsw i64 %52, 1
  store i64 %56, ptr %memberidx.i24.i, align 4
  %57 = load ptr, ptr %53, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  store ptr %59, ptr %memberidx, align 8
  br label %Parser_advance.exit35.i

Parser_advance.exit35.i:                          ; preds = %if.entry.i34.i, %if.entry.i108
  %60 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %60, ptr %memberidx.i.i95, align 8
  br label %common.ret

if.entry6:                                        ; preds = %1
  %61 = tail call ptr @malloc(i32 32)
  %62 = load ptr, ptr %memberidx, align 8
  %memberidx1.i80 = getelementptr inbounds %Token, ptr %62, i64 0, i32 1
  %63 = load ptr, ptr %memberidx1.i80, align 8
  store ptr %63, ptr %61, align 8
  %memberidx.i.i.i81 = getelementptr inbounds %StatementNode, ptr %61, i64 0, i32 1
  store i64 4, ptr %memberidx.i.i.i81, align 4
  %memberidx.i.i82 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %64 = load i64, ptr %memberidx.i.i82, align 4
  %65 = load ptr, ptr %0, align 8
  %memberidx2.i.i83 = getelementptr inbounds %Array_Token_, ptr %65, i64 0, i32 1
  %66 = load i64, ptr %memberidx2.i.i83, align 4
  %67 = icmp slt i64 %64, %66
  br i1 %67, label %if.entry.i.i85, label %Parser_parse_while_statement.exit

if.entry.i.i85:                                   ; preds = %if.entry6
  %68 = add nsw i64 %64, 1
  store i64 %68, ptr %memberidx.i.i82, align 4
  %69 = load ptr, ptr %65, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  store ptr %71, ptr %memberidx, align 8
  br label %Parser_parse_while_statement.exit

Parser_parse_while_statement.exit:                ; preds = %if.entry6, %if.entry.i.i85
  %memberidx2.i86 = getelementptr inbounds %WhileStatementNode, ptr %61, i64 0, i32 2
  %72 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %72, ptr %memberidx2.i86, align 8
  %73 = load ptr, ptr %72, align 8
  %74 = tail call ptr @malloc(i32 32)
  %75 = load i64, ptr %63, align 4
  %memberidx1.i.i87 = getelementptr inbounds %FloRange, ptr %73, i64 0, i32 1
  %76 = load i64, ptr %memberidx1.i.i87, align 4
  %memberidx2.i16.i = getelementptr inbounds %FloRange, ptr %63, i64 0, i32 2
  %77 = load i64, ptr %memberidx2.i16.i, align 4
  %memberidx3.i17.i = getelementptr inbounds %FloRange, ptr %73, i64 0, i32 3
  %78 = load i64, ptr %memberidx3.i17.i, align 4
  store i64 %75, ptr %74, align 4
  %memberidx1.i.i.i88 = getelementptr inbounds %FloRange, ptr %74, i64 0, i32 1
  store i64 %76, ptr %memberidx1.i.i.i88, align 4
  %memberidx2.i.i.i89 = getelementptr inbounds %FloRange, ptr %74, i64 0, i32 2
  store i64 %77, ptr %memberidx2.i.i.i89, align 4
  %memberidx3.i.i.i90 = getelementptr inbounds %FloRange, ptr %74, i64 0, i32 3
  store i64 %78, ptr %memberidx3.i.i.i90, align 4
  store ptr %74, ptr %61, align 8
  %memberidx7.i = getelementptr inbounds %WhileStatementNode, ptr %61, i64 0, i32 3
  %79 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %79, ptr %memberidx7.i, align 8
  br label %common.ret

if.entry11:                                       ; preds = %1
  %80 = tail call ptr @malloc(i32 72)
  %81 = load ptr, ptr %memberidx, align 8
  %memberidx1.i67 = getelementptr inbounds %Token, ptr %81, i64 0, i32 1
  %82 = load ptr, ptr %memberidx1.i67, align 8
  %memberidx.i.i68 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 2
  %memberidx1.i.i69 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 3
  %memberidx2.i.i70 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 4
  %memberidx3.i.i71 = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 6
  store i64 0, ptr %memberidx3.i.i71, align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %memberidx.i.i68, i8 0, i64 24, i1 false)
  store ptr %82, ptr %80, align 8
  %memberidx.i.i.i72 = getelementptr inbounds %StatementNode, ptr %80, i64 0, i32 1
  store i64 3, ptr %memberidx.i.i.i72, align 4
  %memberidx.i60.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %83 = load i64, ptr %memberidx.i60.i, align 4
  %84 = load ptr, ptr %0, align 8
  %memberidx2.i61.i = getelementptr inbounds %Array_Token_, ptr %84, i64 0, i32 1
  %85 = load i64, ptr %memberidx2.i61.i, align 4
  %86 = icmp slt i64 %83, %85
  br i1 %86, label %if.entry.i.i73, label %Parser_advance.exit.i74

if.entry.i.i73:                                   ; preds = %if.entry11
  %87 = add nsw i64 %83, 1
  store i64 %87, ptr %memberidx.i60.i, align 4
  %88 = load ptr, ptr %84, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  store ptr %90, ptr %memberidx, align 8
  %.pre = load i64, ptr %memberidx2.i61.i, align 4
  br label %Parser_advance.exit.i74

Parser_advance.exit.i74:                          ; preds = %if.entry.i.i73, %if.entry11
  %91 = phi ptr [ %90, %if.entry.i.i73 ], [ %81, %if.entry11 ]
  %92 = phi i64 [ %.pre, %if.entry.i.i73 ], [ %85, %if.entry11 ]
  %93 = phi i64 [ %87, %if.entry.i.i73 ], [ %83, %if.entry11 ]
  %94 = add nsw i64 %93, 1
  %95 = icmp slt i64 %94, %92
  %96 = add i64 %92, -1
  %.sink134 = select i1 %95, i64 %94, i64 %96
  %97 = load ptr, ptr %84, align 8
  %98 = getelementptr inbounds ptr, ptr %97, i64 %.sink134
  %common.ret.op.i.i = load ptr, ptr %98, align 8
  %99 = load i64, ptr %common.ret.op.i.i, align 4
  %.not.i = icmp eq i64 %99, 69
  br i1 %.not.i, label %else.i, label %if.entry.i75

if.entry.i75:                                     ; preds = %Parser_advance.exit.i74
  %100 = load i64, ptr %91, align 4
  %.not57.i = icmp eq i64 %100, 2
  br i1 %.not57.i, label %if.entry.i82.i, label %ifend7.i

else.i:                                           ; preds = %Parser_advance.exit.i74
  store i64 1, ptr %memberidx3.i.i71, align 4
  %memberidx22.i = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 7
  %101 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %101, ptr %memberidx22.i, align 8
  %102 = load ptr, ptr %memberidx, align 8
  %103 = load i64, ptr %102, align 4
  %104 = icmp eq i64 %103, 69
  br i1 %104, label %if.entry.i69.i, label %else.i.i

if.entry.i69.i:                                   ; preds = %else.i
  %105 = load i64, ptr %memberidx.i60.i, align 4
  %106 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i76 = getelementptr inbounds %Array_Token_, ptr %106, i64 0, i32 1
  %107 = load i64, ptr %memberidx2.i.i.i76, align 4
  %108 = icmp slt i64 %105, %107
  br i1 %108, label %if.entry.i.i.i, label %Parser_eat.exit.i

if.entry.i.i.i:                                   ; preds = %if.entry.i69.i
  %109 = add nsw i64 %105, 1
  store i64 %109, ptr %memberidx.i60.i, align 4
  %110 = load ptr, ptr %106, align 8
  %111 = getelementptr inbounds ptr, ptr %110, i64 %109
  %112 = load ptr, ptr %111, align 8
  store ptr %112, ptr %memberidx, align 8
  br label %Parser_eat.exit.i

else.i.i:                                         ; preds = %else.i
  %113 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %102, i64 0, i32 1
  %114 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %113, align 4
  %memberidx1.i74.i.i = getelementptr inbounds %Token, ptr %113, i64 0, i32 1
  store ptr %114, ptr %memberidx1.i74.i.i, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i69.i, %if.entry.i.i.i, %else.i.i
  %memberidx23.i = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 5
  %115 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %115, ptr %memberidx23.i, align 8
  br label %ifend.i

ifend.i:                                          ; preds = %if.entry17.i, %Parser_eat.exit101.i, %Parser_eat.exit.i
  %116 = load ptr, ptr %memberidx, align 8
  %memberidx27.i = getelementptr inbounds %Token, ptr %116, i64 0, i32 1
  %117 = load ptr, ptr %memberidx27.i, align 8
  %118 = tail call ptr @malloc(i32 32)
  %119 = load i64, ptr %82, align 4
  %memberidx1.i70.i = getelementptr inbounds %FloRange, ptr %117, i64 0, i32 1
  %120 = load i64, ptr %memberidx1.i70.i, align 4
  %memberidx2.i71.i = getelementptr inbounds %FloRange, ptr %82, i64 0, i32 2
  %121 = load i64, ptr %memberidx2.i71.i, align 4
  %memberidx3.i72.i = getelementptr inbounds %FloRange, ptr %117, i64 0, i32 3
  %122 = load i64, ptr %memberidx3.i72.i, align 4
  store i64 %119, ptr %118, align 4
  %memberidx1.i.i.i78 = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 1
  store i64 %120, ptr %memberidx1.i.i.i78, align 4
  %memberidx2.i.i73.i = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 2
  store i64 %121, ptr %memberidx2.i.i73.i, align 4
  %memberidx3.i.i74.i = getelementptr inbounds %FloRange, ptr %118, i64 0, i32 3
  store i64 %122, ptr %memberidx3.i.i74.i, align 4
  store ptr %118, ptr %80, align 8
  %123 = load ptr, ptr %memberidx, align 8
  %124 = load i64, ptr %123, align 4
  %125 = icmp ne i64 %124, 46
  %memberidx2.i76.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %126 = load ptr, ptr %memberidx2.i76.i, align 8
  %memberidx3.i77.i = getelementptr inbounds %Array_FloError_, ptr %126, i64 0, i32 1
  %127 = load i64, ptr %memberidx3.i77.i, align 4
  %128 = icmp eq i64 %127, 0
  %129 = and i1 %125, %128
  br i1 %129, label %if.entry28.i, label %common.ret

ifend7.i:                                         ; preds = %if.entry.i75
  %130 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  store ptr %130, ptr %memberidx.i.i68, align 8
  %.pre125 = load ptr, ptr %memberidx, align 8
  %.pre126 = load i64, ptr %.pre125, align 4
  %phi.cmp = icmp eq i64 %.pre126, 2
  br i1 %phi.cmp, label %if.entry.i82.i, label %else.i86.i

if.entry.i82.i:                                   ; preds = %if.entry.i75, %ifend7.i
  %131 = phi ptr [ %.pre125, %ifend7.i ], [ %91, %if.entry.i75 ]
  %132 = load i64, ptr %memberidx.i60.i, align 4
  %133 = load ptr, ptr %0, align 8
  %memberidx2.i.i81.i = getelementptr inbounds %Array_Token_, ptr %133, i64 0, i32 1
  %134 = load i64, ptr %memberidx2.i.i81.i, align 4
  %135 = icmp slt i64 %132, %134
  br i1 %135, label %if.entry.i.i84.i, label %Parser_eat.exit89.i

if.entry.i.i84.i:                                 ; preds = %if.entry.i82.i
  %136 = add nsw i64 %132, 1
  store i64 %136, ptr %memberidx.i60.i, align 4
  %137 = load ptr, ptr %133, align 8
  %138 = getelementptr inbounds ptr, ptr %137, i64 %136
  %139 = load ptr, ptr %138, align 8
  store ptr %139, ptr %memberidx, align 8
  br label %Parser_eat.exit89.i

else.i86.i:                                       ; preds = %ifend7.i
  %140 = tail call ptr @malloc(i32 16)
  %memberidx35.i87.i = getelementptr inbounds %Token, ptr %.pre125, i64 0, i32 1
  %141 = load ptr, ptr %memberidx35.i87.i, align 8
  store i64 46, ptr %140, align 4
  %memberidx1.i74.i88.i = getelementptr inbounds %Token, ptr %140, i64 0, i32 1
  store ptr %141, ptr %memberidx1.i74.i88.i, align 8
  %.pre127 = load ptr, ptr %memberidx, align 8
  br label %Parser_eat.exit89.i

Parser_eat.exit89.i:                              ; preds = %if.entry.i82.i, %if.entry.i.i84.i, %else.i86.i
  %142 = phi ptr [ %131, %if.entry.i82.i ], [ %139, %if.entry.i.i84.i ], [ %.pre127, %else.i86.i ]
  %143 = load i64, ptr %142, align 4
  %.not58.i = icmp eq i64 %143, 2
  br i1 %.not58.i, label %if.entry.i94.i, label %ifend13.i

ifend13.i:                                        ; preds = %Parser_eat.exit89.i
  %144 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %144, ptr %memberidx1.i.i69, align 8
  %.pre128 = load ptr, ptr %memberidx, align 8
  %.pre129 = load i64, ptr %.pre128, align 4
  %phi.cmp133 = icmp eq i64 %.pre129, 2
  br i1 %phi.cmp133, label %if.entry.i94.i, label %else.i98.i

if.entry.i94.i:                                   ; preds = %Parser_eat.exit89.i, %ifend13.i
  %145 = phi ptr [ %.pre128, %ifend13.i ], [ %142, %Parser_eat.exit89.i ]
  %146 = load i64, ptr %memberidx.i60.i, align 4
  %147 = load ptr, ptr %0, align 8
  %memberidx2.i.i93.i = getelementptr inbounds %Array_Token_, ptr %147, i64 0, i32 1
  %148 = load i64, ptr %memberidx2.i.i93.i, align 4
  %149 = icmp slt i64 %146, %148
  br i1 %149, label %if.entry.i.i96.i, label %Parser_eat.exit101.i

if.entry.i.i96.i:                                 ; preds = %if.entry.i94.i
  %150 = add nsw i64 %146, 1
  store i64 %150, ptr %memberidx.i60.i, align 4
  %151 = load ptr, ptr %147, align 8
  %152 = getelementptr inbounds ptr, ptr %151, i64 %150
  %153 = load ptr, ptr %152, align 8
  store ptr %153, ptr %memberidx, align 8
  br label %Parser_eat.exit101.i

else.i98.i:                                       ; preds = %ifend13.i
  %154 = tail call ptr @malloc(i32 16)
  %memberidx35.i99.i = getelementptr inbounds %Token, ptr %.pre128, i64 0, i32 1
  %155 = load ptr, ptr %memberidx35.i99.i, align 8
  store i64 46, ptr %154, align 4
  %memberidx1.i74.i100.i = getelementptr inbounds %Token, ptr %154, i64 0, i32 1
  store ptr %155, ptr %memberidx1.i74.i100.i, align 8
  %.pre130 = load ptr, ptr %memberidx, align 8
  br label %Parser_eat.exit101.i

Parser_eat.exit101.i:                             ; preds = %if.entry.i94.i, %if.entry.i.i96.i, %else.i98.i
  %156 = phi ptr [ %145, %if.entry.i94.i ], [ %153, %if.entry.i.i96.i ], [ %.pre130, %else.i98.i ]
  %157 = load i64, ptr %156, align 4
  %.not59.i = icmp eq i64 %157, 27
  br i1 %.not59.i, label %ifend.i, label %if.entry17.i

if.entry17.i:                                     ; preds = %Parser_eat.exit101.i
  %158 = tail call fastcc ptr @Parser_parse_statement(ptr nonnull %0)
  store ptr %158, ptr %memberidx2.i.i70, align 8
  br label %ifend.i

if.entry28.i:                                     ; preds = %ifend.i
  %memberidx31.i = getelementptr inbounds %ForStatementNode, ptr %80, i64 0, i32 8
  %159 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %159, ptr %memberidx31.i, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %160 = tail call ptr @malloc(i32 24)
  %161 = load ptr, ptr %memberidx, align 8
  %memberidx1.i = getelementptr inbounds %Token, ptr %161, i64 0, i32 1
  %162 = load ptr, ptr %memberidx1.i, align 8
  %memberidx.i.i = getelementptr inbounds %ReturnStatementNode, ptr %160, i64 0, i32 2
  store ptr null, ptr %memberidx.i.i, align 8
  store ptr %162, ptr %160, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %160, i64 0, i32 1
  store i64 7, ptr %memberidx.i.i.i, align 4
  %memberidx.i19.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %163 = load i64, ptr %memberidx.i19.i, align 4
  %164 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %164, i64 0, i32 1
  %165 = load i64, ptr %memberidx2.i.i, align 4
  %166 = icmp slt i64 %163, %165
  br i1 %166, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %if.entry16
  %167 = add nsw i64 %163, 1
  store i64 %167, ptr %memberidx.i19.i, align 4
  %168 = load ptr, ptr %164, align 8
  %169 = getelementptr inbounds ptr, ptr %168, i64 %167
  %170 = load ptr, ptr %169, align 8
  store ptr %170, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %if.entry16
  %171 = phi ptr [ %170, %if.entry.i.i ], [ %161, %if.entry16 ]
  %memberidx2.i21.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %172 = load ptr, ptr %memberidx2.i21.i, align 8
  %memberidx3.i22.i = getelementptr inbounds %Array_FloError_, ptr %172, i64 0, i32 1
  %173 = load i64, ptr %memberidx3.i22.i, align 4
  %.fr = freeze i64 %173
  %174 = icmp eq i64 %.fr, 0
  br i1 %174, label %switch.early.test, label %common.ret

switch.early.test:                                ; preds = %Parser_advance.exit.i
  %175 = load i64, ptr %171, align 4
  switch i64 %175, label %if.entry.i65 [
    i64 46, label %common.ret
    i64 33, label %common.ret
    i64 28, label %common.ret
  ]

if.entry.i65:                                     ; preds = %switch.early.test
  %176 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %177 = load ptr, ptr %176, align 8
  %178 = tail call ptr @malloc(i32 32)
  %179 = load i64, ptr %162, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %177, i64 0, i32 1
  %180 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i23.i = getelementptr inbounds %FloRange, ptr %162, i64 0, i32 2
  %181 = load i64, ptr %memberidx2.i23.i, align 4
  %memberidx3.i24.i = getelementptr inbounds %FloRange, ptr %177, i64 0, i32 3
  %182 = load i64, ptr %memberidx3.i24.i, align 4
  store i64 %179, ptr %178, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %178, i64 0, i32 1
  store i64 %180, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %178, i64 0, i32 2
  store i64 %181, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %178, i64 0, i32 3
  store i64 %182, ptr %memberidx3.i.i.i, align 4
  store ptr %178, ptr %160, align 8
  store ptr %176, ptr %memberidx.i.i, align 8
  br label %common.ret

if.entry21:                                       ; preds = %1
  %183 = tail call fastcc ptr @Parser_parse_variable_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry26:                                       ; preds = %1
  %184 = tail call fastcc ptr @Parser_parse_const_declaration_statement(ptr nonnull %0)
  br label %common.ret

if.entry31:                                       ; preds = %1
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %185 = load i64, ptr %memberidx.i, align 4
  %186 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %186, i64 0, i32 1
  %187 = load i64, ptr %memberidx2.i, align 4
  %188 = icmp slt i64 %185, %187
  br i1 %188, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry31
  %189 = add nsw i64 %185, 1
  store i64 %189, ptr %memberidx.i, align 4
  %190 = load ptr, ptr %186, align 8
  %191 = getelementptr inbounds ptr, ptr %190, i64 %189
  %192 = load ptr, ptr %191, align 8
  store ptr %192, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry31, %if.entry.i
  %193 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %193, align 8
  %memberidx.i57 = getelementptr inbounds %StatementNode, ptr %193, i64 0, i32 1
  store i64 5, ptr %memberidx.i57, align 4
  br label %common.ret

if.entry36:                                       ; preds = %1
  %memberidx.i58 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %194 = load i64, ptr %memberidx.i58, align 4
  %195 = load ptr, ptr %0, align 8
  %memberidx2.i59 = getelementptr inbounds %Array_Token_, ptr %195, i64 0, i32 1
  %196 = load i64, ptr %memberidx2.i59, align 4
  %197 = icmp slt i64 %194, %196
  br i1 %197, label %if.entry.i61, label %Parser_advance.exit62

if.entry.i61:                                     ; preds = %if.entry36
  %198 = add nsw i64 %194, 1
  store i64 %198, ptr %memberidx.i58, align 4
  %199 = load ptr, ptr %195, align 8
  %200 = getelementptr inbounds ptr, ptr %199, i64 %198
  %201 = load ptr, ptr %200, align 8
  store ptr %201, ptr %memberidx, align 8
  br label %Parser_advance.exit62

Parser_advance.exit62:                            ; preds = %if.entry36, %if.entry.i61
  %202 = tail call ptr @malloc(i32 16)
  store ptr %3, ptr %202, align 8
  %memberidx.i63 = getelementptr inbounds %StatementNode, ptr %202, i64 0, i32 1
  store i64 6, ptr %memberidx.i63, align 4
  br label %common.ret

ifend38:                                          ; preds = %1
  %203 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  br label %common.ret
}

define internal fastcc void @Parser_parse_args(ptr %0, ptr nocapture %1) unnamed_addr {
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, 33
  %memberidx2.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx3.i.i, align 4
  %8 = icmp eq i64 %7, 0
  %9 = and i1 %5, %8
  br i1 %9, label %while.entry.i.preheader, label %Parser_new_lines.exit

while.entry.i.preheader:                          ; preds = %2
  %memberidx.i11.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load ptr, ptr %0, align 8
  %memberidx2.i12.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx.i11.i, align 4
  %12 = load i64, ptr %memberidx2.i12.i, align 4
  %13 = icmp slt i64 %11, %12
  br i1 %13, label %while.entry.i, label %while.entry.i.us

while.entry.i.us:                                 ; preds = %while.entry.i.preheader, %while.entry.i.us
  br label %while.entry.i.us

while.entry.i:                                    ; preds = %while.entry.i.preheader, %Parser_advance.exit.i
  %14 = phi i64 [ %23, %Parser_advance.exit.i ], [ %11, %while.entry.i.preheader ]
  %15 = load i64, ptr %memberidx2.i12.i, align 4
  %16 = icmp slt i64 %14, %15
  br i1 %16, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %while.entry.i
  %17 = add nsw i64 %14, 1
  store i64 %17, ptr %memberidx.i11.i, align 4
  %18 = load ptr, ptr %10, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  %.pre = load i64, ptr %20, align 4
  %.pre42 = load i64, ptr %memberidx3.i.i, align 4
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %while.entry.i
  %21 = phi i64 [ %.pre42, %if.entry.i.i ], [ 0, %while.entry.i ]
  %22 = phi i64 [ %.pre, %if.entry.i.i ], [ 33, %while.entry.i ]
  %23 = phi i64 [ %17, %if.entry.i.i ], [ %14, %while.entry.i ]
  %24 = icmp eq i64 %22, 33
  %25 = icmp eq i64 %21, 0
  %26 = and i1 %24, %25
  br i1 %26, label %while.entry.i, label %Parser_new_lines.exit

Parser_new_lines.exit:                            ; preds = %Parser_advance.exit.i, %2
  %27 = tail call fastcc ptr @Parser_parse_arg(ptr nonnull %0)
  %memberidx.i16 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %28 = load i64, ptr %memberidx.i16, align 4
  %29 = add i64 %28, 1
  %memberidx.i.i17 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i17, align 4
  %31 = icmp slt i64 %30, %29
  %.pre43 = load ptr, ptr %1, align 8
  br i1 %31, label %while.entry.i.i18, label %Array_ArgNode____sl__.exit19

while.entry.i.i18:                                ; preds = %Parser_new_lines.exit, %while.entry.i.i18
  %32 = phi ptr [ %36, %while.entry.i.i18 ], [ %.pre43, %Parser_new_lines.exit ]
  %33 = phi i64 [ %37, %while.entry.i.i18 ], [ %30, %Parser_new_lines.exit ]
  %34 = shl nuw i64 %33, 1
  store i64 %34, ptr %memberidx.i.i17, align 4
  %35 = shl i64 %33, 4
  %36 = tail call ptr @realloc(ptr %32, i64 %35)
  store ptr %36, ptr %1, align 8
  %37 = load i64, ptr %memberidx.i.i17, align 4
  %38 = icmp slt i64 %37, %29
  br i1 %38, label %while.entry.i.i18, label %Array_ArgNode____sl__.exit19.loopexit

Array_ArgNode____sl__.exit19.loopexit:            ; preds = %while.entry.i.i18
  %.pre44 = load i64, ptr %memberidx.i16, align 4
  %.pre51 = add nsw i64 %.pre44, 1
  br label %Array_ArgNode____sl__.exit19

Array_ArgNode____sl__.exit19:                     ; preds = %Parser_new_lines.exit, %Array_ArgNode____sl__.exit19.loopexit
  %.pre-phi = phi i64 [ %.pre51, %Array_ArgNode____sl__.exit19.loopexit ], [ %29, %Parser_new_lines.exit ]
  %39 = phi ptr [ %36, %Array_ArgNode____sl__.exit19.loopexit ], [ %.pre43, %Parser_new_lines.exit ]
  %40 = phi i64 [ %.pre44, %Array_ArgNode____sl__.exit19.loopexit ], [ %28, %Parser_new_lines.exit ]
  store i64 %.pre-phi, ptr %memberidx.i16, align 4
  %41 = getelementptr inbounds ptr, ptr %39, i64 %40
  store ptr %27, ptr %41, align 8
  %42 = load ptr, ptr %memberidx.i, align 8
  %43 = load i64, ptr %42, align 4
  %44 = icmp eq i64 %43, 3
  %45 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i22 = getelementptr inbounds %Array_FloError_, ptr %45, i64 0, i32 1
  %46 = load i64, ptr %memberidx3.i22, align 4
  %47 = icmp eq i64 %46, 0
  %48 = and i1 %44, %47
  br i1 %48, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Array_ArgNode____sl__.exit19
  %memberidx.i11.i27 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_ArgNode____sl__.exit
  %49 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 3)
  %50 = load ptr, ptr %memberidx.i, align 8
  %51 = load i64, ptr %50, align 4
  %52 = icmp eq i64 %51, 33
  %53 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i26 = getelementptr inbounds %Array_FloError_, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx3.i.i26, align 4
  %55 = icmp eq i64 %54, 0
  %56 = and i1 %52, %55
  br i1 %56, label %while.entry.i29.preheader, label %Parser_new_lines.exit36

while.entry.i29.preheader:                        ; preds = %while.entry
  %57 = load ptr, ptr %0, align 8
  %memberidx2.i12.i28 = getelementptr inbounds %Array_Token_, ptr %57, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i11.i27, align 4
  %59 = load i64, ptr %memberidx2.i12.i28, align 4
  %60 = icmp slt i64 %58, %59
  br i1 %60, label %while.entry.i29, label %while.entry.i29.us

while.entry.i29.us:                               ; preds = %while.entry.i29.preheader, %while.entry.i29.us
  br label %while.entry.i29.us

while.entry.i29:                                  ; preds = %while.entry.i29.preheader, %Parser_advance.exit.i35
  %61 = phi i64 [ %70, %Parser_advance.exit.i35 ], [ %58, %while.entry.i29.preheader ]
  %62 = load i64, ptr %memberidx2.i12.i28, align 4
  %63 = icmp slt i64 %61, %62
  br i1 %63, label %if.entry.i.i31, label %Parser_advance.exit.i35

if.entry.i.i31:                                   ; preds = %while.entry.i29
  %64 = add nsw i64 %61, 1
  store i64 %64, ptr %memberidx.i11.i27, align 4
  %65 = load ptr, ptr %57, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8
  store ptr %67, ptr %memberidx.i, align 8
  %.pre46 = load i64, ptr %67, align 4
  %.pre47 = load i64, ptr %memberidx3.i.i26, align 4
  br label %Parser_advance.exit.i35

Parser_advance.exit.i35:                          ; preds = %if.entry.i.i31, %while.entry.i29
  %68 = phi i64 [ %.pre47, %if.entry.i.i31 ], [ 0, %while.entry.i29 ]
  %69 = phi i64 [ %.pre46, %if.entry.i.i31 ], [ 33, %while.entry.i29 ]
  %70 = phi i64 [ %64, %if.entry.i.i31 ], [ %61, %while.entry.i29 ]
  %71 = icmp eq i64 %69, 33
  %72 = icmp eq i64 %68, 0
  %73 = and i1 %71, %72
  br i1 %73, label %while.entry.i29, label %Parser_new_lines.exit36

Parser_new_lines.exit36:                          ; preds = %Parser_advance.exit.i35, %while.entry
  %74 = tail call fastcc ptr @Parser_parse_arg(ptr nonnull %0)
  %75 = load i64, ptr %memberidx.i16, align 4
  %76 = add i64 %75, 1
  %77 = load i64, ptr %memberidx.i.i17, align 4
  %78 = icmp slt i64 %77, %76
  %.pre48 = load ptr, ptr %1, align 8
  br i1 %78, label %while.entry.i.i, label %Array_ArgNode____sl__.exit

while.entry.i.i:                                  ; preds = %Parser_new_lines.exit36, %while.entry.i.i
  %79 = phi ptr [ %83, %while.entry.i.i ], [ %.pre48, %Parser_new_lines.exit36 ]
  %80 = phi i64 [ %84, %while.entry.i.i ], [ %77, %Parser_new_lines.exit36 ]
  %81 = shl nuw i64 %80, 1
  store i64 %81, ptr %memberidx.i.i17, align 4
  %82 = shl i64 %80, 4
  %83 = tail call ptr @realloc(ptr %79, i64 %82)
  store ptr %83, ptr %1, align 8
  %84 = load i64, ptr %memberidx.i.i17, align 4
  %85 = icmp slt i64 %84, %76
  br i1 %85, label %while.entry.i.i, label %Array_ArgNode____sl__.exit.loopexit

Array_ArgNode____sl__.exit.loopexit:              ; preds = %while.entry.i.i
  %.pre49 = load i64, ptr %memberidx.i16, align 4
  %.pre52 = add nsw i64 %.pre49, 1
  br label %Array_ArgNode____sl__.exit

Array_ArgNode____sl__.exit:                       ; preds = %Parser_new_lines.exit36, %Array_ArgNode____sl__.exit.loopexit
  %.pre-phi53 = phi i64 [ %.pre52, %Array_ArgNode____sl__.exit.loopexit ], [ %76, %Parser_new_lines.exit36 ]
  %86 = phi ptr [ %83, %Array_ArgNode____sl__.exit.loopexit ], [ %.pre48, %Parser_new_lines.exit36 ]
  %87 = phi i64 [ %.pre49, %Array_ArgNode____sl__.exit.loopexit ], [ %75, %Parser_new_lines.exit36 ]
  store i64 %.pre-phi53, ptr %memberidx.i16, align 4
  %88 = getelementptr inbounds ptr, ptr %86, i64 %87
  store ptr %74, ptr %88, align 8
  %89 = load ptr, ptr %memberidx.i, align 8
  %90 = load i64, ptr %89, align 4
  %91 = icmp eq i64 %90, 3
  %92 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %93 = load i64, ptr %memberidx3.i, align 4
  %94 = icmp eq i64 %93, 0
  %95 = and i1 %91, %94
  br i1 %95, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_ArgNode____sl__.exit, %Array_ArgNode____sl__.exit19
  ret void
}

define internal fastcc ptr @Parser_parse_const_declaration_statement(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 40)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 2, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 3
  store ptr null, ptr %memberidx.i, align 8
  %memberidx.i24 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %5 = load i64, ptr %memberidx.i24, align 4
  %6 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp slt i64 %5, %7
  br i1 %8, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %9 = add nsw i64 %5, 1
  store i64 %9, ptr %memberidx.i24, align 4
  %10 = load ptr, ptr %6, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  store ptr %12, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %memberidx2 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 2
  %13 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  store ptr %13, ptr %memberidx2, align 8
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %17 = load i64, ptr %memberidx.i24, align 4
  %18 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds %Array_Token_, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx2.i26, align 4
  %20 = icmp slt i64 %17, %19
  br i1 %20, label %if.entry.i28, label %Parser_advance.exit29

if.entry.i28:                                     ; preds = %if.entry
  %21 = add nsw i64 %17, 1
  store i64 %21, ptr %memberidx.i24, align 4
  %22 = load ptr, ptr %18, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  store ptr %24, ptr %memberidx, align 8
  br label %Parser_advance.exit29

Parser_advance.exit29:                            ; preds = %if.entry, %if.entry.i28
  %25 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %25, ptr %memberidx.i, align 8
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Parser_advance.exit29
  %26 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 38)
  %memberidx6 = getelementptr inbounds %ConstDeclarationStatement, ptr %2, i64 0, i32 4
  %27 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %27, ptr %memberidx6, align 8
  %28 = load ptr, ptr %27, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i30 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i30, align 4
  %memberidx3.i31 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i31, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i, align 4
  store ptr %29, ptr %2, align 8
  ret ptr %2
}

define internal fastcc ptr @Parser_parse_tuple_expression_or_expression_par(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %12 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 3
  br i1 %15, label %if.entry, label %ifend

if.entry:                                         ; preds = %Parser_advance.exit
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = load ptr, ptr %0, align 8
  %memberidx2.i22 = getelementptr inbounds %Array_Token_, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx2.i22, align 4
  %19 = icmp slt i64 %16, %18
  br i1 %19, label %if.entry.i24, label %Array_ExpressionNode____sl__.exit

if.entry.i24:                                     ; preds = %if.entry
  %20 = add nsw i64 %16, 1
  store i64 %20, ptr %memberidx.i, align 4
  %21 = load ptr, ptr %17, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  store ptr %23, ptr %memberidx, align 8
  br label %Array_ExpressionNode____sl__.exit

Array_ExpressionNode____sl__.exit:                ; preds = %if.entry.i24, %if.entry
  %24 = tail call ptr @malloc(i32 32)
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %24, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %24, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i, align 4
  %memberidx.i26 = getelementptr inbounds %TupleExpressionNode, ptr %24, i64 0, i32 3
  %25 = tail call ptr @malloc(i32 24)
  %memberidx.i3.i = getelementptr inbounds %Array_ExpressionNode_, ptr %25, i64 0, i32 1
  store i64 0, ptr %memberidx.i3.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %25, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %26 = tail call ptr @malloc(i32 64)
  store ptr %26, ptr %25, align 8
  store ptr %25, ptr %memberidx.i26, align 8
  store i64 1, ptr %memberidx.i3.i, align 4
  store ptr %12, ptr %26, align 8
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %25, i64 26)
  %27 = load ptr, ptr %memberidx, align 8
  %memberidx8 = getelementptr inbounds %Token, ptr %27, i64 0, i32 1
  %28 = load ptr, ptr %memberidx8, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %3, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i30 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i30, align 4
  %memberidx3.i31 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i31, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i32 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i32, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i, align 4
  store ptr %29, ptr %24, align 8
  br label %ifend

ifend:                                            ; preds = %Parser_advance.exit, %Array_ExpressionNode____sl__.exit
  %expression.0 = phi ptr [ %24, %Array_ExpressionNode____sl__.exit ], [ %12, %Parser_advance.exit ]
  %34 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  ret ptr %expression.0
}

define internal fastcc void @Parser_parse_type_list(ptr %0, ptr nocapture %1) unnamed_addr {
  %3 = tail call fastcc ptr @Parser_parse_type(ptr %0)
  %memberidx.i18 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 1
  %4 = load i64, ptr %memberidx.i18, align 4
  %5 = add i64 %4, 1
  %memberidx.i.i19 = getelementptr inbounds %Array_TypeNode_, ptr %1, i64 0, i32 2
  %6 = load i64, ptr %memberidx.i.i19, align 4
  %7 = icmp slt i64 %6, %5
  %.pre = load ptr, ptr %1, align 8
  br i1 %7, label %while.entry.i.i20, label %Array_TypeNode____sl__.exit21

while.entry.i.i20:                                ; preds = %2, %while.entry.i.i20
  %8 = phi ptr [ %12, %while.entry.i.i20 ], [ %.pre, %2 ]
  %9 = phi i64 [ %13, %while.entry.i.i20 ], [ %6, %2 ]
  %10 = shl nuw i64 %9, 1
  store i64 %10, ptr %memberidx.i.i19, align 4
  %11 = shl i64 %9, 4
  %12 = tail call ptr @realloc(ptr %8, i64 %11)
  store ptr %12, ptr %1, align 8
  %13 = load i64, ptr %memberidx.i.i19, align 4
  %14 = icmp slt i64 %13, %5
  br i1 %14, label %while.entry.i.i20, label %Array_TypeNode____sl__.exit21.loopexit

Array_TypeNode____sl__.exit21.loopexit:           ; preds = %while.entry.i.i20
  %.pre22 = load i64, ptr %memberidx.i18, align 4
  %.pre27 = add nsw i64 %.pre22, 1
  br label %Array_TypeNode____sl__.exit21

Array_TypeNode____sl__.exit21:                    ; preds = %2, %Array_TypeNode____sl__.exit21.loopexit
  %.pre-phi = phi i64 [ %.pre27, %Array_TypeNode____sl__.exit21.loopexit ], [ %5, %2 ]
  %15 = phi ptr [ %12, %Array_TypeNode____sl__.exit21.loopexit ], [ %.pre, %2 ]
  %16 = phi i64 [ %.pre22, %Array_TypeNode____sl__.exit21.loopexit ], [ %4, %2 ]
  store i64 %.pre-phi, ptr %memberidx.i18, align 4
  %17 = getelementptr inbounds ptr, ptr %15, i64 %16
  store ptr %3, ptr %17, align 8
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %18 = load ptr, ptr %memberidx, align 8
  %19 = load i64, ptr %18, align 4
  %20 = icmp eq i64 %19, 3
  %memberidx2.i16 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2.i16, align 8
  %memberidx3.i17 = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx3.i17, align 4
  %23 = icmp eq i64 %22, 0
  %24 = and i1 %20, %23
  br i1 %24, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Array_TypeNode____sl__.exit21
  %memberidx.i12 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Array_TypeNode____sl__.exit
  %25 = load i64, ptr %memberidx.i12, align 4
  %26 = load ptr, ptr %0, align 8
  %memberidx2.i13 = getelementptr inbounds %Array_Token_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i13, align 4
  %28 = icmp slt i64 %25, %27
  br i1 %28, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %29 = add nsw i64 %25, 1
  store i64 %29, ptr %memberidx.i12, align 4
  %30 = load ptr, ptr %26, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %29
  %32 = load ptr, ptr %31, align 8
  store ptr %32, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %33 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %34 = load i64, ptr %memberidx.i18, align 4
  %35 = add i64 %34, 1
  %36 = load i64, ptr %memberidx.i.i19, align 4
  %37 = icmp slt i64 %36, %35
  %.pre24 = load ptr, ptr %1, align 8
  br i1 %37, label %while.entry.i.i, label %Array_TypeNode____sl__.exit

while.entry.i.i:                                  ; preds = %Parser_advance.exit, %while.entry.i.i
  %38 = phi ptr [ %42, %while.entry.i.i ], [ %.pre24, %Parser_advance.exit ]
  %39 = phi i64 [ %43, %while.entry.i.i ], [ %36, %Parser_advance.exit ]
  %40 = shl nuw i64 %39, 1
  store i64 %40, ptr %memberidx.i.i19, align 4
  %41 = shl i64 %39, 4
  %42 = tail call ptr @realloc(ptr %38, i64 %41)
  store ptr %42, ptr %1, align 8
  %43 = load i64, ptr %memberidx.i.i19, align 4
  %44 = icmp slt i64 %43, %35
  br i1 %44, label %while.entry.i.i, label %Array_TypeNode____sl__.exit.loopexit

Array_TypeNode____sl__.exit.loopexit:             ; preds = %while.entry.i.i
  %.pre25 = load i64, ptr %memberidx.i18, align 4
  %.pre28 = add nsw i64 %.pre25, 1
  br label %Array_TypeNode____sl__.exit

Array_TypeNode____sl__.exit:                      ; preds = %Parser_advance.exit, %Array_TypeNode____sl__.exit.loopexit
  %.pre-phi29 = phi i64 [ %.pre28, %Array_TypeNode____sl__.exit.loopexit ], [ %35, %Parser_advance.exit ]
  %45 = phi ptr [ %42, %Array_TypeNode____sl__.exit.loopexit ], [ %.pre24, %Parser_advance.exit ]
  %46 = phi i64 [ %.pre25, %Array_TypeNode____sl__.exit.loopexit ], [ %34, %Parser_advance.exit ]
  store i64 %.pre-phi29, ptr %memberidx.i18, align 4
  %47 = getelementptr inbounds ptr, ptr %45, i64 %46
  store ptr %33, ptr %47, align 8
  %48 = load ptr, ptr %memberidx, align 8
  %49 = load i64, ptr %48, align 4
  %50 = icmp eq i64 %49, 3
  %51 = load ptr, ptr %memberidx2.i16, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx3.i, align 4
  %53 = icmp eq i64 %52, 0
  %54 = and i1 %50, %53
  br i1 %54, label %while.entry, label %while.end

while.end:                                        ; preds = %Array_TypeNode____sl__.exit, %Array_TypeNode____sl__.exit21
  ret void
}

define internal fastcc noalias ptr @Parser_parse_arg(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 24)
  %3 = tail call fastcc ptr @Parser_eat(ptr %0, i64 53)
  store ptr %3, ptr %2, align 8
  %memberidx1.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 1
  %memberidx2.i = getelementptr inbounds %ArgNode, ptr %2, i64 0, i32 2
  %memberidx.i49 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %memberidx1.i, i8 0, i64 16, i1 false)
  %4 = load ptr, ptr %memberidx.i49, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp ne i64 %5, 46
  %memberidx2.i50 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %memberidx2.i50, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx3.i, align 4
  %9 = icmp eq i64 %8, 0
  %10 = and i1 %6, %9
  br i1 %10, label %ifend, label %common.ret

common.ret:                                       ; preds = %Parser_error.exit, %ifend13, %Parser_advance.exit, %1
  ret ptr %2

ifend:                                            ; preds = %1
  %11 = icmp eq i64 %5, 1
  br i1 %11, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx.i51 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %12 = load i64, ptr %memberidx.i51, align 4
  %13 = load ptr, ptr %0, align 8
  %memberidx2.i52 = getelementptr inbounds %Array_Token_, ptr %13, i64 0, i32 1
  %14 = load i64, ptr %memberidx2.i52, align 4
  %15 = icmp slt i64 %12, %14
  br i1 %15, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry2
  %16 = add nsw i64 %12, 1
  store i64 %16, ptr %memberidx.i51, align 4
  %17 = load ptr, ptr %13, align 8
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = load ptr, ptr %18, align 8
  store ptr %19, ptr %memberidx.i49, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry2, %if.entry.i
  %20 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  store ptr %20, ptr %memberidx1.i, align 8
  %21 = load ptr, ptr %memberidx.i49, align 8
  %22 = load i64, ptr %21, align 4
  %23 = icmp ne i64 %22, 46
  %24 = load ptr, ptr %memberidx2.i50, align 8
  %memberidx3.i59 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx3.i59, align 4
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  br i1 %27, label %ifend4, label %common.ret

ifend4:                                           ; preds = %Parser_advance.exit, %ifend
  %28 = phi ptr [ %20, %Parser_advance.exit ], [ null, %ifend ]
  %29 = phi i64 [ %22, %Parser_advance.exit ], [ %5, %ifend ]
  %30 = icmp eq i64 %29, 38
  br i1 %30, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %ifend4
  %memberidx.i60 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %31 = load i64, ptr %memberidx.i60, align 4
  %32 = load ptr, ptr %0, align 8
  %memberidx2.i61 = getelementptr inbounds %Array_Token_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx2.i61, align 4
  %34 = icmp slt i64 %31, %33
  br i1 %34, label %if.entry.i63, label %Parser_advance.exit64

if.entry.i63:                                     ; preds = %if.entry11
  %35 = add nsw i64 %31, 1
  store i64 %35, ptr %memberidx.i60, align 4
  %36 = load ptr, ptr %32, align 8
  %37 = getelementptr inbounds ptr, ptr %36, i64 %35
  %38 = load ptr, ptr %37, align 8
  store ptr %38, ptr %memberidx.i49, align 8
  br label %Parser_advance.exit64

Parser_advance.exit64:                            ; preds = %if.entry11, %if.entry.i63
  %39 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %39, ptr %memberidx2.i, align 8
  %phi.cmp = icmp eq ptr %39, null
  br label %ifend13

ifend13:                                          ; preds = %ifend4, %Parser_advance.exit64
  %40 = phi i1 [ true, %ifend4 ], [ %phi.cmp, %Parser_advance.exit64 ]
  %41 = icmp eq ptr %28, null
  %42 = and i1 %41, %40
  br i1 %42, label %if.entry17, label %common.ret

if.entry17:                                       ; preds = %ifend13
  %memberidx21 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %43 = load ptr, ptr %memberidx21, align 8
  %memberidx.i56 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i56, align 4
  %45 = trunc i64 %44 to i32
  %46 = add i32 %45, 1
  %47 = tail call ptr @malloc(i32 %46)
  %48 = load ptr, ptr %43, align 8
  %49 = load i64, ptr %memberidx.i56, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %48, i64 %49, i1 false)
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  store i8 0, ptr %50, align 1
  %51 = alloca ptr, align 8
  %52 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %51, ptr nonnull @77, ptr %47)
  %53 = load ptr, ptr %51, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i54 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 %52, ptr %memberidx1.i54, align 4
  %memberidx2.i55 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 %52, ptr %memberidx2.i55, align 4
  tail call void @free(ptr %47)
  %55 = load ptr, ptr %memberidx2.i50, align 8
  %56 = call ptr @malloc(i32 24)
  %57 = load ptr, ptr %memberidx.i49, align 8
  %memberidx2.i48 = getelementptr inbounds %Token, ptr %57, i64 0, i32 1
  %58 = load ptr, ptr %memberidx2.i48, align 8
  store i64 2, ptr %56, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 2
  store ptr %58, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 1
  store ptr %54, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i.i, align 4
  %60 = add i64 %59, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %61 = load i64, ptr %memberidx.i.i.i, align 4
  %62 = icmp slt i64 %61, %60
  %.pre = load ptr, ptr %55, align 8
  br i1 %62, label %while.entry.i.i.i, label %Parser_error.exit

while.entry.i.i.i:                                ; preds = %if.entry17, %while.entry.i.i.i
  %63 = phi ptr [ %67, %while.entry.i.i.i ], [ %.pre, %if.entry17 ]
  %64 = phi i64 [ %68, %while.entry.i.i.i ], [ %61, %if.entry17 ]
  %65 = shl nuw i64 %64, 1
  store i64 %65, ptr %memberidx.i.i.i, align 4
  %66 = shl i64 %64, 4
  %67 = call ptr @realloc(ptr %63, i64 %66)
  store ptr %67, ptr %55, align 8
  %68 = load i64, ptr %memberidx.i.i.i, align 4
  %69 = icmp slt i64 %68, %60
  br i1 %69, label %while.entry.i.i.i, label %Parser_error.exit.loopexit

Parser_error.exit.loopexit:                       ; preds = %while.entry.i.i.i
  %.pre66 = load i64, ptr %memberidx.i.i, align 4
  %.pre68 = add nsw i64 %.pre66, 1
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry17, %Parser_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre68, %Parser_error.exit.loopexit ], [ %60, %if.entry17 ]
  %70 = phi ptr [ %67, %Parser_error.exit.loopexit ], [ %.pre, %if.entry17 ]
  %71 = phi i64 [ %.pre66, %Parser_error.exit.loopexit ], [ %59, %if.entry17 ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %72 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %56, ptr %72, align 8
  %73 = load ptr, ptr %memberidx2.i50, align 8
  %memberidx24 = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 1
  %74 = load i64, ptr %memberidx24, align 4
  %75 = add i64 %74, -1
  %76 = load ptr, ptr %73, align 8
  %77 = getelementptr inbounds ptr, ptr %76, i64 %75
  %78 = load ptr, ptr %77, align 8
  %memberidx25 = getelementptr inbounds %FloError, ptr %78, i64 0, i32 2
  %memberidx27 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %79 = load ptr, ptr %memberidx27, align 8
  store ptr %79, ptr %memberidx25, align 8
  br label %common.ret
}

define internal fastcc ptr @Parser_parse_object_type(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_eat(ptr %0, i64 53)
  %3 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  store ptr %4, ptr %3, align 8
  %memberidx.i.i = getelementptr inbounds %TypeNode, ptr %3, i64 0, i32 1
  store i64 17, ptr %memberidx.i.i, align 4
  %memberidx.i28 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 2
  store ptr %2, ptr %memberidx.i28, align 8
  %memberidx1.i29 = getelementptr inbounds %RecordTypeNode, ptr %3, i64 0, i32 3
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i, align 4
  %memberidx1.i.i30 = getelementptr inbounds %Array_TypeNode_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i30, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i5.i, align 4
  store ptr %5, ptr %memberidx1.i29, align 8
  %memberidx1 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 42
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i26 = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx2.i26, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i, align 4
  %15 = load ptr, ptr %11, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %memberidx1, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  tail call fastcc void @Parser_parse_type_list(ptr nonnull %0, ptr nonnull %5)
  %18 = load ptr, ptr %memberidx1, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx5, align 8
  %20 = load i64, ptr %18, align 4
  %21 = icmp eq i64 %20, 49
  br i1 %21, label %if.entry8, label %else9

ifend:                                            ; preds = %1, %ifend10
  ret ptr %3

if.entry8:                                        ; preds = %Parser_advance.exit
  store i64 41, ptr %18, align 4
  br label %ifend10

else9:                                            ; preds = %Parser_advance.exit
  %22 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 41)
  br label %ifend10

ifend10:                                          ; preds = %else9, %if.entry8
  %23 = tail call ptr @malloc(i32 32)
  %24 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 1
  %25 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %26 = load i64, ptr %memberidx2.i, align 4
  %memberidx3.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 3
  %27 = load i64, ptr %memberidx3.i, align 4
  store i64 %24, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 1
  store i64 %25, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  store i64 %26, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 3
  store i64 %27, ptr %memberidx3.i.i, align 4
  store ptr %23, ptr %3, align 8
  br label %ifend
}

define internal fastcc ptr @Parser_parse_unary_expression_pre(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %4 = load i64, ptr %2, align 4
  switch i64 %4, label %else35.i.i [
    i64 23, label %ifend
    i64 24, label %Parser_is_unary_op.exit.fold.split
    i64 5, label %Parser_is_unary_op.exit.fold.split27
    i64 37, label %Parser_is_unary_op.exit.fold.split28
    i64 73, label %ifend.fold.split
    i64 34, label %if.entry.i.i29
    i64 31, label %if.entry4.i.i
    i64 32, label %if.entry9.i.i
    i64 35, label %if.entry14.i.i
    i64 53, label %if.entry19.i.i
    i64 29, label %if.entry24.i.i
    i64 72, label %if.entry29.i.i
    i64 25, label %if.entry34.i.i
  ]

Parser_is_unary_op.exit.fold.split:               ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split27:             ; preds = %1
  br label %ifend

Parser_is_unary_op.exit.fold.split28:             ; preds = %1
  br label %ifend

common.ret42.sink.split:                          ; preds = %Parser_advance.exit, %Parser_advance.exit.i
  %.sink47 = phi ptr [ %168, %Parser_advance.exit.i ], [ %185, %Parser_advance.exit ]
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %.sink47, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i.i23 = getelementptr inbounds %ExpressionNode, ptr %.sink47, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i.i23, align 4
  br label %common.ret42

common.ret42:                                     ; preds = %common.ret42.sink.split, %Parser_parse_lhs_expression_allow_call.exit
  %common.ret42.op = phi ptr [ %expression.1.i, %Parser_parse_lhs_expression_allow_call.exit ], [ %.sink47, %common.ret42.sink.split ]
  ret ptr %common.ret42.op

if.entry.i.i29:                                   ; preds = %1
  %5 = tail call fastcc ptr @Parser_parse_string(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry4.i.i:                                    ; preds = %1
  %6 = tail call ptr @malloc(i32 32)
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 31
  br i1 %9, label %if.entry.i.i60.i, label %else.i.i66.i

if.entry.i.i60.i:                                 ; preds = %if.entry4.i.i
  %memberidx.i.i.i58.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %10 = load i64, ptr %memberidx.i.i.i58.i, align 4
  %11 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i59.i = getelementptr inbounds %Array_Token_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx2.i.i.i59.i, align 4
  %13 = icmp slt i64 %10, %12
  br i1 %13, label %if.entry.i.i.i62.i, label %Parser_eat.exit.i70.i

if.entry.i.i.i62.i:                               ; preds = %if.entry.i.i60.i
  %14 = add nsw i64 %10, 1
  store i64 %14, ptr %memberidx.i.i.i58.i, align 4
  %15 = load ptr, ptr %11, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %memberidx, align 8
  br label %Parser_eat.exit.i70.i

else.i.i66.i:                                     ; preds = %if.entry4.i.i
  %18 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i64.i = getelementptr inbounds %Token, ptr %7, i64 0, i32 1
  %19 = load ptr, ptr %memberidx35.i.i64.i, align 8
  store i64 46, ptr %18, align 4
  %memberidx1.i74.i.i65.i = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  store ptr %19, ptr %memberidx1.i74.i.i65.i, align 8
  br label %Parser_eat.exit.i70.i

Parser_eat.exit.i70.i:                            ; preds = %else.i.i66.i, %if.entry.i.i.i62.i, %if.entry.i.i60.i
  %common.ret.op.i.i67.i = phi ptr [ %18, %else.i.i66.i ], [ %7, %if.entry.i.i.i62.i ], [ %7, %if.entry.i.i60.i ]
  %memberidx.i56.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i.i67.i, i64 0, i32 1
  %20 = load ptr, ptr %memberidx.i56.i.i, align 8
  store ptr %20, ptr %6, align 8
  %memberidx.i.i.i.i68.i = getelementptr inbounds %StatementNode, ptr %6, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i68.i, align 4
  %memberidx.i.i57.i.i = getelementptr inbounds %ExpressionNode, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i57.i.i, align 4
  %memberidx1.i.i69.i = getelementptr inbounds %IntExpressionNode, ptr %6, i64 0, i32 3
  store ptr %common.ret.op.i.i67.i, ptr %memberidx1.i.i69.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry9.i.i:                                    ; preds = %1
  %21 = tail call ptr @malloc(i32 32)
  %22 = load ptr, ptr %memberidx, align 8
  %23 = load i64, ptr %22, align 4
  %24 = icmp eq i64 %23, 32
  br i1 %24, label %if.entry.i62.i.i, label %else.i66.i.i

if.entry.i62.i.i:                                 ; preds = %if.entry9.i.i
  %memberidx.i.i60.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %25 = load i64, ptr %memberidx.i.i60.i.i, align 4
  %26 = load ptr, ptr %0, align 8
  %memberidx2.i.i61.i.i = getelementptr inbounds %Array_Token_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i.i61.i.i, align 4
  %28 = icmp slt i64 %25, %27
  br i1 %28, label %if.entry.i.i64.i.i, label %Parser_eat.exit69.i.i

if.entry.i.i64.i.i:                               ; preds = %if.entry.i62.i.i
  %29 = add nsw i64 %25, 1
  store i64 %29, ptr %memberidx.i.i60.i.i, align 4
  %30 = load ptr, ptr %26, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %29
  %32 = load ptr, ptr %31, align 8
  store ptr %32, ptr %memberidx, align 8
  br label %Parser_eat.exit69.i.i

else.i66.i.i:                                     ; preds = %if.entry9.i.i
  %33 = tail call ptr @malloc(i32 16)
  %memberidx35.i67.i.i = getelementptr inbounds %Token, ptr %22, i64 0, i32 1
  %34 = load ptr, ptr %memberidx35.i67.i.i, align 8
  store i64 46, ptr %33, align 4
  %memberidx1.i74.i68.i.i = getelementptr inbounds %Token, ptr %33, i64 0, i32 1
  store ptr %34, ptr %memberidx1.i74.i68.i.i, align 8
  br label %Parser_eat.exit69.i.i

Parser_eat.exit69.i.i:                            ; preds = %else.i66.i.i, %if.entry.i.i64.i.i, %if.entry.i62.i.i
  %common.ret.op.i59.i.i = phi ptr [ %33, %else.i66.i.i ], [ %22, %if.entry.i.i64.i.i ], [ %22, %if.entry.i62.i.i ]
  %memberidx.i70.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i59.i.i, i64 0, i32 1
  %35 = load ptr, ptr %memberidx.i70.i.i, align 8
  store ptr %35, ptr %21, align 8
  %memberidx.i.i.i71.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i71.i.i, align 4
  %memberidx.i.i72.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i72.i.i, align 4
  %memberidx1.i73.i.i = getelementptr inbounds %FloatExpressionNode, ptr %21, i64 0, i32 3
  store ptr %common.ret.op.i59.i.i, ptr %memberidx1.i73.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry14.i.i:                                   ; preds = %1
  %36 = tail call ptr @malloc(i32 32)
  %37 = load ptr, ptr %memberidx, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 35
  br i1 %39, label %if.entry.i78.i.i, label %else.i82.i.i

if.entry.i78.i.i:                                 ; preds = %if.entry14.i.i
  %memberidx.i.i76.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %40 = load i64, ptr %memberidx.i.i76.i.i, align 4
  %41 = load ptr, ptr %0, align 8
  %memberidx2.i.i77.i.i = getelementptr inbounds %Array_Token_, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx2.i.i77.i.i, align 4
  %43 = icmp slt i64 %40, %42
  br i1 %43, label %if.entry.i.i80.i.i, label %Parser_eat.exit85.i.i

if.entry.i.i80.i.i:                               ; preds = %if.entry.i78.i.i
  %44 = add nsw i64 %40, 1
  store i64 %44, ptr %memberidx.i.i76.i.i, align 4
  %45 = load ptr, ptr %41, align 8
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  %47 = load ptr, ptr %46, align 8
  store ptr %47, ptr %memberidx, align 8
  br label %Parser_eat.exit85.i.i

else.i82.i.i:                                     ; preds = %if.entry14.i.i
  %48 = tail call ptr @malloc(i32 16)
  %memberidx35.i83.i.i = getelementptr inbounds %Token, ptr %37, i64 0, i32 1
  %49 = load ptr, ptr %memberidx35.i83.i.i, align 8
  store i64 46, ptr %48, align 4
  %memberidx1.i74.i84.i.i = getelementptr inbounds %Token, ptr %48, i64 0, i32 1
  store ptr %49, ptr %memberidx1.i74.i84.i.i, align 8
  br label %Parser_eat.exit85.i.i

Parser_eat.exit85.i.i:                            ; preds = %else.i82.i.i, %if.entry.i.i80.i.i, %if.entry.i78.i.i
  %common.ret.op.i75.i.i = phi ptr [ %48, %else.i82.i.i ], [ %37, %if.entry.i.i80.i.i ], [ %37, %if.entry.i78.i.i ]
  %memberidx.i86.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i75.i.i, i64 0, i32 1
  %50 = load ptr, ptr %memberidx.i86.i.i, align 8
  store ptr %50, ptr %36, align 8
  %memberidx.i.i.i87.i.i = getelementptr inbounds %StatementNode, ptr %36, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i87.i.i, align 4
  %memberidx.i.i88.i.i = getelementptr inbounds %ExpressionNode, ptr %36, i64 0, i32 2
  store i64 3, ptr %memberidx.i.i88.i.i, align 4
  %memberidx1.i89.i.i = getelementptr inbounds %CharExpressionNode, ptr %36, i64 0, i32 3
  store ptr %common.ret.op.i75.i.i, ptr %memberidx1.i89.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry19.i.i:                                   ; preds = %1
  %51 = tail call ptr @malloc(i32 32)
  %52 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  %memberidx.i90.i.i = getelementptr inbounds %Token, ptr %52, i64 0, i32 1
  %53 = load ptr, ptr %memberidx.i90.i.i, align 8
  store ptr %53, ptr %51, align 8
  %memberidx.i.i.i91.i.i = getelementptr inbounds %StatementNode, ptr %51, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i91.i.i, align 4
  %memberidx.i.i92.i.i = getelementptr inbounds %ExpressionNode, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i92.i.i, align 4
  %memberidx1.i93.i.i = getelementptr inbounds %VarAccessExpressionNode, ptr %51, i64 0, i32 3
  store ptr %52, ptr %memberidx1.i93.i.i, align 8
  br label %Parser_parse_atom.exit.i

if.entry24.i.i:                                   ; preds = %1
  %54 = tail call fastcc ptr @Parser_parse_array_expression(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry29.i.i:                                   ; preds = %1
  %55 = tail call fastcc ptr @Parser_parse_new_expression(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

if.entry34.i.i:                                   ; preds = %1
  %56 = tail call fastcc ptr @Parser_parse_tuple_expression_or_expression_par(ptr nonnull %0)
  br label %Parser_parse_atom.exit.i

else35.i.i:                                       ; preds = %1
  %57 = tail call ptr @malloc(i32 28)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %57, ptr noundef nonnull align 8 dereferenceable(28) @76, i64 28, i1 false)
  %58 = tail call ptr @malloc(i32 24)
  store ptr %57, ptr %58, align 8
  %memberidx1.i.i.i71.i = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  store i64 28, ptr %memberidx1.i.i.i71.i, align 4
  %memberidx2.i.i94.i.i = getelementptr inbounds %String, ptr %58, i64 0, i32 2
  store i64 28, ptr %memberidx2.i.i94.i.i, align 4
  %memberidx.i95.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %59 = load ptr, ptr %memberidx.i95.i.i, align 8
  %60 = tail call ptr @malloc(i32 24)
  %61 = load ptr, ptr %memberidx, align 8
  %memberidx2.i.i72.i = getelementptr inbounds %Token, ptr %61, i64 0, i32 1
  %62 = load ptr, ptr %memberidx2.i.i72.i, align 8
  store i64 2, ptr %60, align 4
  %memberidx1.i.i97.i.i = getelementptr inbounds %FloError, ptr %60, i64 0, i32 2
  store ptr %62, ptr %memberidx1.i.i97.i.i, align 8
  %memberidx2.i.i98.i.i = getelementptr inbounds %FloError, ptr %60, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i98.i.i, align 8
  %memberidx.i.i99.i.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %63 = load i64, ptr %memberidx.i.i99.i.i, align 4
  %64 = add i64 %63, 1
  %memberidx.i.i.i100.i.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %65 = load i64, ptr %memberidx.i.i.i100.i.i, align 4
  %66 = icmp slt i64 %65, %64
  %.pre = load ptr, ptr %59, align 8
  br i1 %66, label %while.entry.i.i.i.i.i, label %Parser_error.exit.i.i

while.entry.i.i.i.i.i:                            ; preds = %else35.i.i, %while.entry.i.i.i.i.i
  %67 = phi ptr [ %71, %while.entry.i.i.i.i.i ], [ %.pre, %else35.i.i ]
  %68 = phi i64 [ %72, %while.entry.i.i.i.i.i ], [ %65, %else35.i.i ]
  %69 = shl nuw i64 %68, 1
  store i64 %69, ptr %memberidx.i.i.i100.i.i, align 4
  %70 = shl i64 %68, 4
  %71 = tail call ptr @realloc(ptr %67, i64 %70)
  store ptr %71, ptr %59, align 8
  %72 = load i64, ptr %memberidx.i.i.i100.i.i, align 4
  %73 = icmp slt i64 %72, %64
  br i1 %73, label %while.entry.i.i.i.i.i, label %Parser_error.exit.i.i.loopexit

Parser_error.exit.i.i.loopexit:                   ; preds = %while.entry.i.i.i.i.i
  %.pre43 = load i64, ptr %memberidx.i.i99.i.i, align 4
  %.pre45 = add nsw i64 %.pre43, 1
  br label %Parser_error.exit.i.i

Parser_error.exit.i.i:                            ; preds = %else35.i.i, %Parser_error.exit.i.i.loopexit
  %.pre-phi = phi i64 [ %.pre45, %Parser_error.exit.i.i.loopexit ], [ %64, %else35.i.i ]
  %74 = phi ptr [ %71, %Parser_error.exit.i.i.loopexit ], [ %.pre, %else35.i.i ]
  %75 = phi i64 [ %.pre43, %Parser_error.exit.i.i.loopexit ], [ %63, %else35.i.i ]
  store i64 %.pre-phi, ptr %memberidx.i.i99.i.i, align 4
  %76 = getelementptr inbounds ptr, ptr %74, i64 %75
  store ptr %60, ptr %76, align 8
  %77 = tail call ptr @malloc(i32 24)
  %78 = load ptr, ptr %memberidx, align 8
  %memberidx38.i.i = getelementptr inbounds %Token, ptr %78, i64 0, i32 1
  %79 = load ptr, ptr %memberidx38.i.i, align 8
  store ptr %79, ptr %77, align 8
  %memberidx.i.i101.i.i = getelementptr inbounds %StatementNode, ptr %77, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i101.i.i, align 4
  %memberidx.i102.i.i = getelementptr inbounds %ExpressionNode, ptr %77, i64 0, i32 2
  store i64 8, ptr %memberidx.i102.i.i, align 4
  br label %Parser_parse_atom.exit.i

Parser_parse_atom.exit.i:                         ; preds = %Parser_error.exit.i.i, %if.entry34.i.i, %if.entry29.i.i, %if.entry24.i.i, %if.entry19.i.i, %Parser_eat.exit85.i.i, %Parser_eat.exit69.i.i, %Parser_eat.exit.i70.i, %if.entry.i.i29
  %common.ret.op.i.i = phi ptr [ %5, %if.entry.i.i29 ], [ %77, %Parser_error.exit.i.i ], [ %6, %Parser_eat.exit.i70.i ], [ %21, %Parser_eat.exit69.i.i ], [ %36, %Parser_eat.exit85.i.i ], [ %51, %if.entry19.i.i ], [ %54, %if.entry24.i.i ], [ %55, %if.entry29.i.i ], [ %56, %if.entry34.i.i ]
  %80 = load ptr, ptr %memberidx, align 8
  %81 = load i64, ptr %80, align 4
  %82 = icmp ne i64 %81, 46
  %memberidx2.i.i31 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %83 = load ptr, ptr %memberidx2.i.i31, align 8
  %memberidx3.i.i32 = getelementptr inbounds %Array_FloError_, ptr %83, i64 0, i32 1
  %84 = load i64, ptr %memberidx3.i.i32, align 4
  %85 = icmp eq i64 %84, 0
  %86 = and i1 %82, %85
  br i1 %86, label %while.entry.i.preheader, label %Parser_parse_lhs_expression_allow_call.exit

while.entry.i.preheader:                          ; preds = %Parser_parse_atom.exit.i
  %memberidx.i.i.i.i35 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %ifend.i
  %87 = phi i64 [ %104, %ifend.i ], [ %81, %while.entry.i.preheader ]
  %88 = phi ptr [ %103, %ifend.i ], [ %80, %while.entry.i.preheader ]
  %expression.0.i = phi ptr [ %expression.2.i, %ifend.i ], [ %common.ret.op.i.i, %while.entry.i.preheader ]
  switch i64 %87, label %Parser_parse_lhs_expression_allow_call.exit [
    i64 25, label %if.entry.i33
    i64 29, label %if.entry.i.i29.i
    i64 50, label %if.entry.i.i.i
  ]

if.entry.i33:                                     ; preds = %while.entry.i
  %89 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 25)
  %90 = tail call ptr @malloc(i32 40)
  %91 = load ptr, ptr %memberidx, align 8
  %memberidx1.i45.i = getelementptr inbounds %Token, ptr %91, i64 0, i32 1
  %92 = load ptr, ptr %memberidx1.i45.i, align 8
  store ptr %92, ptr %90, align 8
  %memberidx.i.i.i.i46.i = getelementptr inbounds %StatementNode, ptr %90, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i46.i, align 4
  %memberidx.i.i.i47.i = getelementptr inbounds %ExpressionNode, ptr %90, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i.i47.i, align 4
  %memberidx.i.i48.i = getelementptr inbounds %CallExpressionNode, ptr %90, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i.i48.i, align 8
  %memberidx1.i.i49.i = getelementptr inbounds %CallExpressionNode, ptr %90, i64 0, i32 4
  %93 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %93, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  %memberidx1.i.i.i50.i = getelementptr inbounds %Array_ExpressionNode_, ptr %93, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i50.i, align 4
  %94 = tail call ptr @malloc(i32 64)
  store ptr %94, ptr %93, align 8
  store i64 0, ptr %memberidx.i5.i.i.i, align 4
  store ptr %93, ptr %memberidx1.i.i49.i, align 8
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %93, i64 26)
  %95 = load ptr, ptr %expression.0.i, align 8
  %96 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx5.i.i = getelementptr inbounds %Token, ptr %96, i64 0, i32 1
  %97 = load ptr, ptr %memberidx5.i.i, align 8
  %98 = tail call ptr @malloc(i32 32)
  %99 = load i64, ptr %95, align 4
  %memberidx1.i12.i.i = getelementptr inbounds %FloRange, ptr %97, i64 0, i32 1
  %100 = load i64, ptr %memberidx1.i12.i.i, align 4
  %memberidx2.i.i53.i = getelementptr inbounds %FloRange, ptr %95, i64 0, i32 2
  %101 = load i64, ptr %memberidx2.i.i53.i, align 4
  %memberidx3.i13.i.i = getelementptr inbounds %FloRange, ptr %97, i64 0, i32 3
  %102 = load i64, ptr %memberidx3.i13.i.i, align 4
  store i64 %99, ptr %98, align 4
  %memberidx1.i.i14.i.i = getelementptr inbounds %FloRange, ptr %98, i64 0, i32 1
  store i64 %100, ptr %memberidx1.i.i14.i.i, align 4
  %memberidx2.i.i.i54.i = getelementptr inbounds %FloRange, ptr %98, i64 0, i32 2
  store i64 %101, ptr %memberidx2.i.i.i54.i, align 4
  %memberidx3.i.i.i55.i = getelementptr inbounds %FloRange, ptr %98, i64 0, i32 3
  store i64 %102, ptr %memberidx3.i.i.i55.i, align 4
  store ptr %98, ptr %90, align 8
  br label %ifend.i

ifend.i:                                          ; preds = %Parser_parse_member_expression.exit.i, %Parser_parse_index_expression.exit.i, %if.entry.i33
  %expression.2.i = phi ptr [ %90, %if.entry.i33 ], [ %118, %Parser_parse_index_expression.exit.i ], [ %150, %Parser_parse_member_expression.exit.i ]
  %103 = load ptr, ptr %memberidx, align 8
  %104 = load i64, ptr %103, align 4
  %105 = icmp ne i64 %104, 46
  %106 = load ptr, ptr %memberidx2.i.i31, align 8
  %memberidx3.i25.i = getelementptr inbounds %Array_FloError_, ptr %106, i64 0, i32 1
  %107 = load i64, ptr %memberidx3.i25.i, align 4
  %108 = icmp eq i64 %107, 0
  %109 = and i1 %105, %108
  br i1 %109, label %while.entry.i, label %Parser_parse_lhs_expression_allow_call.exit

if.entry.i.i29.i:                                 ; preds = %while.entry.i
  %110 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %111 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i28.i = getelementptr inbounds %Array_Token_, ptr %111, i64 0, i32 1
  %112 = load i64, ptr %memberidx2.i.i.i28.i, align 4
  %113 = icmp slt i64 %110, %112
  br i1 %113, label %if.entry.i.i.i31.i, label %Parser_eat.exit.i.i

if.entry.i.i.i31.i:                               ; preds = %if.entry.i.i29.i
  %114 = add nsw i64 %110, 1
  store i64 %114, ptr %memberidx.i.i.i.i35, align 4
  %115 = load ptr, ptr %111, align 8
  %116 = getelementptr inbounds ptr, ptr %115, i64 %114
  %117 = load ptr, ptr %116, align 8
  store ptr %117, ptr %memberidx, align 8
  br label %Parser_eat.exit.i.i

Parser_eat.exit.i.i:                              ; preds = %if.entry.i.i.i31.i, %if.entry.i.i29.i
  %118 = tail call ptr @malloc(i32 40)
  %119 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %120 = load ptr, ptr %memberidx, align 8
  %memberidx1.i38.i = getelementptr inbounds %Token, ptr %120, i64 0, i32 1
  %121 = load ptr, ptr %memberidx1.i38.i, align 8
  %memberidx.i10.i.i = getelementptr inbounds %ExpressionIndexNode, ptr %118, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i10.i.i, align 8
  %memberidx1.i.i39.i = getelementptr inbounds %ExpressionIndexNode, ptr %118, i64 0, i32 4
  store ptr %119, ptr %memberidx1.i.i39.i, align 8
  store ptr %121, ptr %118, align 8
  %memberidx.i.i.i.i40.i = getelementptr inbounds %StatementNode, ptr %118, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i40.i, align 4
  %memberidx.i.i11.i.i = getelementptr inbounds %ExpressionNode, ptr %118, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i11.i.i, align 4
  %122 = load ptr, ptr %expression.0.i, align 8
  %123 = load i64, ptr %120, align 4
  %124 = icmp eq i64 %123, 30
  br i1 %124, label %if.entry.i16.i.i, label %else.i20.i.i

if.entry.i16.i.i:                                 ; preds = %Parser_eat.exit.i.i
  %125 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %126 = load ptr, ptr %0, align 8
  %memberidx2.i.i15.i.i = getelementptr inbounds %Array_Token_, ptr %126, i64 0, i32 1
  %127 = load i64, ptr %memberidx2.i.i15.i.i, align 4
  %128 = icmp slt i64 %125, %127
  br i1 %128, label %if.entry.i.i18.i.i, label %Parser_parse_index_expression.exit.i

if.entry.i.i18.i.i:                               ; preds = %if.entry.i16.i.i
  %129 = add nsw i64 %125, 1
  store i64 %129, ptr %memberidx.i.i.i.i35, align 4
  %130 = load ptr, ptr %126, align 8
  %131 = getelementptr inbounds ptr, ptr %130, i64 %129
  %132 = load ptr, ptr %131, align 8
  store ptr %132, ptr %memberidx, align 8
  br label %Parser_parse_index_expression.exit.i

else.i20.i.i:                                     ; preds = %Parser_eat.exit.i.i
  %133 = tail call ptr @malloc(i32 16)
  %134 = load ptr, ptr %memberidx1.i38.i, align 8
  store i64 46, ptr %133, align 4
  %memberidx1.i74.i22.i.i = getelementptr inbounds %Token, ptr %133, i64 0, i32 1
  store ptr %134, ptr %memberidx1.i74.i22.i.i, align 8
  br label %Parser_parse_index_expression.exit.i

Parser_parse_index_expression.exit.i:             ; preds = %else.i20.i.i, %if.entry.i.i18.i.i, %if.entry.i16.i.i
  %common.ret.op.i13.i.i = phi ptr [ %133, %else.i20.i.i ], [ %120, %if.entry.i.i18.i.i ], [ %120, %if.entry.i16.i.i ]
  %memberidx4.i.i = getelementptr inbounds %Token, ptr %common.ret.op.i13.i.i, i64 0, i32 1
  %135 = load ptr, ptr %memberidx4.i.i, align 8
  %136 = tail call ptr @malloc(i32 32)
  %137 = load i64, ptr %122, align 4
  %memberidx1.i24.i.i = getelementptr inbounds %FloRange, ptr %135, i64 0, i32 1
  %138 = load i64, ptr %memberidx1.i24.i.i, align 4
  %memberidx2.i.i41.i = getelementptr inbounds %FloRange, ptr %122, i64 0, i32 2
  %139 = load i64, ptr %memberidx2.i.i41.i, align 4
  %memberidx3.i.i42.i = getelementptr inbounds %FloRange, ptr %135, i64 0, i32 3
  %140 = load i64, ptr %memberidx3.i.i42.i, align 4
  store i64 %137, ptr %136, align 4
  %memberidx1.i.i.i43.i = getelementptr inbounds %FloRange, ptr %136, i64 0, i32 1
  store i64 %138, ptr %memberidx1.i.i.i43.i, align 4
  %memberidx2.i.i25.i.i = getelementptr inbounds %FloRange, ptr %136, i64 0, i32 2
  store i64 %139, ptr %memberidx2.i.i25.i.i, align 4
  %memberidx3.i.i26.i.i = getelementptr inbounds %FloRange, ptr %136, i64 0, i32 3
  store i64 %140, ptr %memberidx3.i.i26.i.i, align 4
  store ptr %136, ptr %118, align 8
  br label %ifend.i

if.entry.i.i.i:                                   ; preds = %while.entry.i
  %141 = load i64, ptr %memberidx.i.i.i.i35, align 4
  %142 = load ptr, ptr %0, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Array_Token_, ptr %142, i64 0, i32 1
  %143 = load i64, ptr %memberidx2.i.i.i.i, align 4
  %144 = icmp slt i64 %141, %143
  br i1 %144, label %if.entry.i.i.i.i, label %Parser_parse_member_expression.exit.i

if.entry.i.i.i.i:                                 ; preds = %if.entry.i.i.i
  %145 = add nsw i64 %141, 1
  store i64 %145, ptr %memberidx.i.i.i.i35, align 4
  %146 = load ptr, ptr %142, align 8
  %147 = getelementptr inbounds ptr, ptr %146, i64 %145
  %148 = load ptr, ptr %147, align 8
  store ptr %148, ptr %memberidx, align 8
  br label %Parser_parse_member_expression.exit.i

Parser_parse_member_expression.exit.i:            ; preds = %if.entry.i.i.i.i, %if.entry.i.i.i
  %149 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 53)
  %150 = tail call ptr @malloc(i32 40)
  %151 = load ptr, ptr %expression.0.i, align 8
  %memberidx1.i.i36 = getelementptr inbounds %Token, ptr %149, i64 0, i32 1
  %152 = load ptr, ptr %memberidx1.i.i36, align 8
  %153 = tail call ptr @malloc(i32 32)
  %154 = load i64, ptr %151, align 4
  %memberidx1.i.i.i37 = getelementptr inbounds %FloRange, ptr %152, i64 0, i32 1
  %155 = load i64, ptr %memberidx1.i.i.i37, align 4
  %memberidx2.i.i.i38 = getelementptr inbounds %FloRange, ptr %151, i64 0, i32 2
  %156 = load i64, ptr %memberidx2.i.i.i38, align 4
  %memberidx3.i.i.i39 = getelementptr inbounds %FloRange, ptr %152, i64 0, i32 3
  %157 = load i64, ptr %memberidx3.i.i.i39, align 4
  store i64 %154, ptr %153, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %153, i64 0, i32 1
  store i64 %155, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i5.i.i = getelementptr inbounds %FloRange, ptr %153, i64 0, i32 2
  store i64 %156, ptr %memberidx2.i.i5.i.i, align 4
  %memberidx3.i.i6.i.i = getelementptr inbounds %FloRange, ptr %153, i64 0, i32 3
  store i64 %157, ptr %memberidx3.i.i6.i.i, align 4
  store ptr %153, ptr %150, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %StatementNode, ptr %150, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i.i, align 4
  %memberidx.i.i7.i.i = getelementptr inbounds %ExpressionNode, ptr %150, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i7.i.i, align 4
  %memberidx.i8.i.i = getelementptr inbounds %MemberExpressionNode, ptr %150, i64 0, i32 3
  store ptr %expression.0.i, ptr %memberidx.i8.i.i, align 8
  %memberidx1.i9.i.i = getelementptr inbounds %MemberExpressionNode, ptr %150, i64 0, i32 4
  store ptr %149, ptr %memberidx1.i9.i.i, align 8
  br label %ifend.i

Parser_parse_lhs_expression_allow_call.exit:      ; preds = %while.entry.i, %ifend.i, %Parser_parse_atom.exit.i
  %158 = phi i64 [ %81, %Parser_parse_atom.exit.i ], [ %87, %while.entry.i ], [ %104, %ifend.i ]
  %159 = phi ptr [ %80, %Parser_parse_atom.exit.i ], [ %88, %while.entry.i ], [ %103, %ifend.i ]
  %expression.1.i = phi ptr [ %common.ret.op.i.i, %Parser_parse_atom.exit.i ], [ %expression.0.i, %while.entry.i ], [ %expression.2.i, %ifend.i ]
  switch i64 %158, label %common.ret42 [
    i64 23, label %ifend.i20
    i64 24, label %if.entry3.i
  ]

ifend.i20:                                        ; preds = %Parser_parse_lhs_expression_allow_call.exit, %if.entry3.i
  %op.0.i = phi i64 [ 5, %if.entry3.i ], [ 4, %Parser_parse_lhs_expression_allow_call.exit ]
  %memberidx.i.i18 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %160 = load i64, ptr %memberidx.i.i18, align 4
  %161 = load ptr, ptr %0, align 8
  %memberidx2.i.i19 = getelementptr inbounds %Array_Token_, ptr %161, i64 0, i32 1
  %162 = load i64, ptr %memberidx2.i.i19, align 4
  %163 = icmp slt i64 %160, %162
  br i1 %163, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %ifend.i20
  %164 = add nsw i64 %160, 1
  store i64 %164, ptr %memberidx.i.i18, align 4
  %165 = load ptr, ptr %161, align 8
  %166 = getelementptr inbounds ptr, ptr %165, i64 %164
  %167 = load ptr, ptr %166, align 8
  store ptr %167, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %ifend.i20
  %168 = tail call ptr @malloc(i32 40)
  %169 = load ptr, ptr %expression.1.i, align 8
  %memberidx7.i = getelementptr inbounds %Token, ptr %159, i64 0, i32 1
  %170 = load ptr, ptr %memberidx7.i, align 8
  %171 = tail call ptr @malloc(i32 32)
  %172 = load i64, ptr %169, align 4
  %memberidx1.i.i22 = getelementptr inbounds %FloRange, ptr %170, i64 0, i32 1
  %173 = load i64, ptr %memberidx1.i.i22, align 4
  %memberidx2.i14.i = getelementptr inbounds %FloRange, ptr %169, i64 0, i32 2
  %174 = load i64, ptr %memberidx2.i14.i, align 4
  %memberidx3.i15.i = getelementptr inbounds %FloRange, ptr %170, i64 0, i32 3
  %175 = load i64, ptr %memberidx3.i15.i, align 4
  store i64 %172, ptr %171, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %171, i64 0, i32 1
  store i64 %173, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %171, i64 0, i32 2
  store i64 %174, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %171, i64 0, i32 3
  store i64 %175, ptr %memberidx3.i.i.i, align 4
  %memberidx.i16.i = getelementptr inbounds %UnaryExpressionNode, ptr %168, i64 0, i32 3
  store i64 %op.0.i, ptr %memberidx.i16.i, align 4
  %memberidx1.i17.i = getelementptr inbounds %UnaryExpressionNode, ptr %168, i64 0, i32 4
  store ptr %expression.1.i, ptr %memberidx1.i17.i, align 8
  store ptr %171, ptr %168, align 8
  br label %common.ret42.sink.split

if.entry3.i:                                      ; preds = %Parser_parse_lhs_expression_allow_call.exit
  br label %ifend.i20

ifend.fold.split:                                 ; preds = %1
  br label %ifend

ifend:                                            ; preds = %1, %ifend.fold.split, %Parser_is_unary_op.exit.fold.split28, %Parser_is_unary_op.exit.fold.split27, %Parser_is_unary_op.exit.fold.split
  %common.ret.op.i41 = phi i64 [ 8, %Parser_is_unary_op.exit.fold.split28 ], [ 6, %Parser_is_unary_op.exit.fold.split27 ], [ 3, %Parser_is_unary_op.exit.fold.split ], [ 2, %1 ], [ 1, %ifend.fold.split ]
  %memberidx.i9 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %176 = load i64, ptr %memberidx.i9, align 4
  %177 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %177, i64 0, i32 1
  %178 = load i64, ptr %memberidx2.i, align 4
  %179 = icmp slt i64 %176, %178
  br i1 %179, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %ifend
  %180 = add nsw i64 %176, 1
  store i64 %180, ptr %memberidx.i9, align 4
  %181 = load ptr, ptr %177, align 8
  %182 = getelementptr inbounds ptr, ptr %181, i64 %180
  %183 = load ptr, ptr %182, align 8
  store ptr %183, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %ifend, %if.entry.i
  %184 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %185 = tail call ptr @malloc(i32 40)
  %186 = load ptr, ptr %184, align 8
  %187 = tail call ptr @malloc(i32 32)
  %188 = load i64, ptr %3, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %186, i64 0, i32 1
  %189 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i11 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %190 = load i64, ptr %memberidx2.i11, align 4
  %memberidx3.i12 = getelementptr inbounds %FloRange, ptr %186, i64 0, i32 3
  %191 = load i64, ptr %memberidx3.i12, align 4
  store i64 %188, ptr %187, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 1
  store i64 %189, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 2
  store i64 %190, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 3
  store i64 %191, ptr %memberidx3.i.i, align 4
  %memberidx.i13 = getelementptr inbounds %UnaryExpressionNode, ptr %185, i64 0, i32 3
  store i64 %common.ret.op.i41, ptr %memberidx.i13, align 4
  %memberidx1.i14 = getelementptr inbounds %UnaryExpressionNode, ptr %185, i64 0, i32 4
  store ptr %184, ptr %memberidx1.i14, align 8
  store ptr %187, ptr %185, align 8
  br label %common.ret42.sink.split
}

define internal fastcc ptr @Parser_eat(ptr nocapture %0, i64 %1) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %if.entry, label %else

common.ret:                                       ; preds = %if.entry.i, %if.entry, %ifend4
  %common.ret.op = phi ptr [ %34, %ifend4 ], [ %3, %if.entry ], [ %3, %if.entry.i ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %7, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  store ptr %13, ptr %memberidx, align 8
  br label %common.ret

else:                                             ; preds = %2
  switch i64 %1, label %ifend4 [
    i64 53, label %if.entry2
    i64 38, label %if.entry5
    i64 1, label %if.entry8
    i64 25, label %if.entry11
    i64 26, label %if.entry14
    i64 27, label %if.entry17
    i64 28, label %if.entry20
    i64 3, label %if.entry23
    i64 42, label %if.entry26
    i64 41, label %if.entry29
    i64 45, label %if.entry32
  ]

if.entry2:                                        ; preds = %else
  %14 = tail call ptr @malloc(i32 22)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(22) %14, ptr noundef nonnull align 8 dereferenceable(22) @63, i64 22, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i63 = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 22, ptr %memberidx1.i.i63, align 4
  %memberidx2.i.i64 = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 22, ptr %memberidx2.i.i64, align 4
  %memberidx.i65 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %16 = load ptr, ptr %memberidx.i65, align 8
  %17 = tail call ptr @malloc(i32 24)
  %18 = load ptr, ptr %memberidx, align 8
  %memberidx2.i67 = getelementptr inbounds %Token, ptr %18, i64 0, i32 1
  %19 = load ptr, ptr %memberidx2.i67, align 8
  store i64 2, ptr %17, align 4
  %memberidx1.i.i68 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 2
  store ptr %19, ptr %memberidx1.i.i68, align 8
  %memberidx2.i.i69 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 1
  store ptr %15, ptr %memberidx2.i.i69, align 8
  %memberidx.i.i70 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i.i70, align 4
  %21 = add i64 %20, 1
  %memberidx.i.i.i71 = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %22 = load i64, ptr %memberidx.i.i.i71, align 4
  %23 = icmp slt i64 %22, %21
  %.pre206 = load ptr, ptr %16, align 8
  br i1 %23, label %while.entry.i.i.i72, label %Parser_error.exit73

while.entry.i.i.i72:                              ; preds = %if.entry2, %while.entry.i.i.i72
  %24 = phi ptr [ %28, %while.entry.i.i.i72 ], [ %.pre206, %if.entry2 ]
  %25 = phi i64 [ %29, %while.entry.i.i.i72 ], [ %22, %if.entry2 ]
  %26 = shl nuw i64 %25, 1
  store i64 %26, ptr %memberidx.i.i.i71, align 4
  %27 = shl i64 %25, 4
  %28 = tail call ptr @realloc(ptr %24, i64 %27)
  store ptr %28, ptr %16, align 8
  %29 = load i64, ptr %memberidx.i.i.i71, align 4
  %30 = icmp slt i64 %29, %21
  br i1 %30, label %while.entry.i.i.i72, label %Parser_error.exit73.loopexit

Parser_error.exit73.loopexit:                     ; preds = %while.entry.i.i.i72
  %.pre207 = load i64, ptr %memberidx.i.i70, align 4
  %.pre209 = add nsw i64 %.pre207, 1
  br label %Parser_error.exit73

Parser_error.exit73:                              ; preds = %if.entry2, %Parser_error.exit73.loopexit
  %.pre-phi = phi i64 [ %.pre209, %Parser_error.exit73.loopexit ], [ %21, %if.entry2 ]
  %31 = phi ptr [ %28, %Parser_error.exit73.loopexit ], [ %.pre206, %if.entry2 ]
  %32 = phi i64 [ %.pre207, %Parser_error.exit73.loopexit ], [ %20, %if.entry2 ]
  store i64 %.pre-phi, ptr %memberidx.i.i70, align 4
  %33 = getelementptr inbounds ptr, ptr %31, i64 %32
  store ptr %17, ptr %33, align 8
  br label %ifend4

ifend4:                                           ; preds = %else, %Parser_error.exit, %Parser_error.exit173, %Parser_error.exit162, %Parser_error.exit151, %Parser_error.exit140, %Parser_error.exit129, %Parser_error.exit118, %Parser_error.exit107, %Parser_error.exit96, %Parser_error.exit85, %Parser_error.exit73
  %34 = tail call ptr @malloc(i32 16)
  %memberidx35 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %35 = load ptr, ptr %memberidx35, align 8
  store i64 46, ptr %34, align 4
  %memberidx1.i74 = getelementptr inbounds %Token, ptr %34, i64 0, i32 1
  store ptr %35, ptr %memberidx1.i74, align 8
  br label %common.ret

if.entry5:                                        ; preds = %else
  %36 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %36, ptr noundef nonnull align 8 dereferenceable(12) @64, i64 12, i1 false)
  %37 = tail call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  %memberidx1.i.i75 = getelementptr inbounds %String, ptr %37, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i75, align 4
  %memberidx2.i.i76 = getelementptr inbounds %String, ptr %37, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i76, align 4
  %memberidx.i77 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i77, align 8
  %39 = tail call ptr @malloc(i32 24)
  %40 = load ptr, ptr %memberidx, align 8
  %memberidx2.i79 = getelementptr inbounds %Token, ptr %40, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2.i79, align 8
  store i64 2, ptr %39, align 4
  %memberidx1.i.i80 = getelementptr inbounds %FloError, ptr %39, i64 0, i32 2
  store ptr %41, ptr %memberidx1.i.i80, align 8
  %memberidx2.i.i81 = getelementptr inbounds %FloError, ptr %39, i64 0, i32 1
  store ptr %37, ptr %memberidx2.i.i81, align 8
  %memberidx.i.i82 = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i.i82, align 4
  %43 = add i64 %42, 1
  %memberidx.i.i.i83 = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 2
  %44 = load i64, ptr %memberidx.i.i.i83, align 4
  %45 = icmp slt i64 %44, %43
  %.pre203 = load ptr, ptr %38, align 8
  br i1 %45, label %while.entry.i.i.i84, label %Parser_error.exit85

while.entry.i.i.i84:                              ; preds = %if.entry5, %while.entry.i.i.i84
  %46 = phi ptr [ %50, %while.entry.i.i.i84 ], [ %.pre203, %if.entry5 ]
  %47 = phi i64 [ %51, %while.entry.i.i.i84 ], [ %44, %if.entry5 ]
  %48 = shl nuw i64 %47, 1
  store i64 %48, ptr %memberidx.i.i.i83, align 4
  %49 = shl i64 %47, 4
  %50 = tail call ptr @realloc(ptr %46, i64 %49)
  store ptr %50, ptr %38, align 8
  %51 = load i64, ptr %memberidx.i.i.i83, align 4
  %52 = icmp slt i64 %51, %43
  br i1 %52, label %while.entry.i.i.i84, label %Parser_error.exit85.loopexit

Parser_error.exit85.loopexit:                     ; preds = %while.entry.i.i.i84
  %.pre204 = load i64, ptr %memberidx.i.i82, align 4
  %.pre210 = add nsw i64 %.pre204, 1
  br label %Parser_error.exit85

Parser_error.exit85:                              ; preds = %if.entry5, %Parser_error.exit85.loopexit
  %.pre-phi211 = phi i64 [ %.pre210, %Parser_error.exit85.loopexit ], [ %43, %if.entry5 ]
  %53 = phi ptr [ %50, %Parser_error.exit85.loopexit ], [ %.pre203, %if.entry5 ]
  %54 = phi i64 [ %.pre204, %Parser_error.exit85.loopexit ], [ %42, %if.entry5 ]
  store i64 %.pre-phi211, ptr %memberidx.i.i82, align 4
  %55 = getelementptr inbounds ptr, ptr %53, i64 %54
  store ptr %39, ptr %55, align 8
  br label %ifend4

if.entry8:                                        ; preds = %else
  %56 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %56, ptr noundef nonnull align 8 dereferenceable(12) @65, i64 12, i1 false)
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  %memberidx1.i.i86 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i86, align 4
  %memberidx2.i.i87 = getelementptr inbounds %String, ptr %57, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i87, align 4
  %memberidx.i88 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %58 = load ptr, ptr %memberidx.i88, align 8
  %59 = tail call ptr @malloc(i32 24)
  %60 = load ptr, ptr %memberidx, align 8
  %memberidx2.i90 = getelementptr inbounds %Token, ptr %60, i64 0, i32 1
  %61 = load ptr, ptr %memberidx2.i90, align 8
  store i64 2, ptr %59, align 4
  %memberidx1.i.i91 = getelementptr inbounds %FloError, ptr %59, i64 0, i32 2
  store ptr %61, ptr %memberidx1.i.i91, align 8
  %memberidx2.i.i92 = getelementptr inbounds %FloError, ptr %59, i64 0, i32 1
  store ptr %57, ptr %memberidx2.i.i92, align 8
  %memberidx.i.i93 = getelementptr inbounds %Array_FloError_, ptr %58, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i.i93, align 4
  %63 = add i64 %62, 1
  %memberidx.i.i.i94 = getelementptr inbounds %Array_FloError_, ptr %58, i64 0, i32 2
  %64 = load i64, ptr %memberidx.i.i.i94, align 4
  %65 = icmp slt i64 %64, %63
  %.pre200 = load ptr, ptr %58, align 8
  br i1 %65, label %while.entry.i.i.i95, label %Parser_error.exit96

while.entry.i.i.i95:                              ; preds = %if.entry8, %while.entry.i.i.i95
  %66 = phi ptr [ %70, %while.entry.i.i.i95 ], [ %.pre200, %if.entry8 ]
  %67 = phi i64 [ %71, %while.entry.i.i.i95 ], [ %64, %if.entry8 ]
  %68 = shl nuw i64 %67, 1
  store i64 %68, ptr %memberidx.i.i.i94, align 4
  %69 = shl i64 %67, 4
  %70 = tail call ptr @realloc(ptr %66, i64 %69)
  store ptr %70, ptr %58, align 8
  %71 = load i64, ptr %memberidx.i.i.i94, align 4
  %72 = icmp slt i64 %71, %63
  br i1 %72, label %while.entry.i.i.i95, label %Parser_error.exit96.loopexit

Parser_error.exit96.loopexit:                     ; preds = %while.entry.i.i.i95
  %.pre201 = load i64, ptr %memberidx.i.i93, align 4
  %.pre212 = add nsw i64 %.pre201, 1
  br label %Parser_error.exit96

Parser_error.exit96:                              ; preds = %if.entry8, %Parser_error.exit96.loopexit
  %.pre-phi213 = phi i64 [ %.pre212, %Parser_error.exit96.loopexit ], [ %63, %if.entry8 ]
  %73 = phi ptr [ %70, %Parser_error.exit96.loopexit ], [ %.pre200, %if.entry8 ]
  %74 = phi i64 [ %.pre201, %Parser_error.exit96.loopexit ], [ %62, %if.entry8 ]
  store i64 %.pre-phi213, ptr %memberidx.i.i93, align 4
  %75 = getelementptr inbounds ptr, ptr %73, i64 %74
  store ptr %59, ptr %75, align 8
  br label %ifend4

if.entry11:                                       ; preds = %else
  %76 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %76, ptr noundef nonnull align 8 dereferenceable(12) @66, i64 12, i1 false)
  %77 = tail call ptr @malloc(i32 24)
  store ptr %76, ptr %77, align 8
  %memberidx1.i.i97 = getelementptr inbounds %String, ptr %77, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i97, align 4
  %memberidx2.i.i98 = getelementptr inbounds %String, ptr %77, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i98, align 4
  %memberidx.i99 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i99, align 8
  %79 = tail call ptr @malloc(i32 24)
  %80 = load ptr, ptr %memberidx, align 8
  %memberidx2.i101 = getelementptr inbounds %Token, ptr %80, i64 0, i32 1
  %81 = load ptr, ptr %memberidx2.i101, align 8
  store i64 2, ptr %79, align 4
  %memberidx1.i.i102 = getelementptr inbounds %FloError, ptr %79, i64 0, i32 2
  store ptr %81, ptr %memberidx1.i.i102, align 8
  %memberidx2.i.i103 = getelementptr inbounds %FloError, ptr %79, i64 0, i32 1
  store ptr %77, ptr %memberidx2.i.i103, align 8
  %memberidx.i.i104 = getelementptr inbounds %Array_FloError_, ptr %78, i64 0, i32 1
  %82 = load i64, ptr %memberidx.i.i104, align 4
  %83 = add i64 %82, 1
  %memberidx.i.i.i105 = getelementptr inbounds %Array_FloError_, ptr %78, i64 0, i32 2
  %84 = load i64, ptr %memberidx.i.i.i105, align 4
  %85 = icmp slt i64 %84, %83
  %.pre197 = load ptr, ptr %78, align 8
  br i1 %85, label %while.entry.i.i.i106, label %Parser_error.exit107

while.entry.i.i.i106:                             ; preds = %if.entry11, %while.entry.i.i.i106
  %86 = phi ptr [ %90, %while.entry.i.i.i106 ], [ %.pre197, %if.entry11 ]
  %87 = phi i64 [ %91, %while.entry.i.i.i106 ], [ %84, %if.entry11 ]
  %88 = shl nuw i64 %87, 1
  store i64 %88, ptr %memberidx.i.i.i105, align 4
  %89 = shl i64 %87, 4
  %90 = tail call ptr @realloc(ptr %86, i64 %89)
  store ptr %90, ptr %78, align 8
  %91 = load i64, ptr %memberidx.i.i.i105, align 4
  %92 = icmp slt i64 %91, %83
  br i1 %92, label %while.entry.i.i.i106, label %Parser_error.exit107.loopexit

Parser_error.exit107.loopexit:                    ; preds = %while.entry.i.i.i106
  %.pre198 = load i64, ptr %memberidx.i.i104, align 4
  %.pre214 = add nsw i64 %.pre198, 1
  br label %Parser_error.exit107

Parser_error.exit107:                             ; preds = %if.entry11, %Parser_error.exit107.loopexit
  %.pre-phi215 = phi i64 [ %.pre214, %Parser_error.exit107.loopexit ], [ %83, %if.entry11 ]
  %93 = phi ptr [ %90, %Parser_error.exit107.loopexit ], [ %.pre197, %if.entry11 ]
  %94 = phi i64 [ %.pre198, %Parser_error.exit107.loopexit ], [ %82, %if.entry11 ]
  store i64 %.pre-phi215, ptr %memberidx.i.i104, align 4
  %95 = getelementptr inbounds ptr, ptr %93, i64 %94
  store ptr %79, ptr %95, align 8
  br label %ifend4

if.entry14:                                       ; preds = %else
  %96 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %96, ptr noundef nonnull align 8 dereferenceable(12) @67, i64 12, i1 false)
  %97 = tail call ptr @malloc(i32 24)
  store ptr %96, ptr %97, align 8
  %memberidx1.i.i108 = getelementptr inbounds %String, ptr %97, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i108, align 4
  %memberidx2.i.i109 = getelementptr inbounds %String, ptr %97, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i109, align 4
  %memberidx.i110 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %98 = load ptr, ptr %memberidx.i110, align 8
  %99 = tail call ptr @malloc(i32 24)
  %100 = load ptr, ptr %memberidx, align 8
  %memberidx2.i112 = getelementptr inbounds %Token, ptr %100, i64 0, i32 1
  %101 = load ptr, ptr %memberidx2.i112, align 8
  store i64 2, ptr %99, align 4
  %memberidx1.i.i113 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 2
  store ptr %101, ptr %memberidx1.i.i113, align 8
  %memberidx2.i.i114 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 1
  store ptr %97, ptr %memberidx2.i.i114, align 8
  %memberidx.i.i115 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 1
  %102 = load i64, ptr %memberidx.i.i115, align 4
  %103 = add i64 %102, 1
  %memberidx.i.i.i116 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 2
  %104 = load i64, ptr %memberidx.i.i.i116, align 4
  %105 = icmp slt i64 %104, %103
  %.pre194 = load ptr, ptr %98, align 8
  br i1 %105, label %while.entry.i.i.i117, label %Parser_error.exit118

while.entry.i.i.i117:                             ; preds = %if.entry14, %while.entry.i.i.i117
  %106 = phi ptr [ %110, %while.entry.i.i.i117 ], [ %.pre194, %if.entry14 ]
  %107 = phi i64 [ %111, %while.entry.i.i.i117 ], [ %104, %if.entry14 ]
  %108 = shl nuw i64 %107, 1
  store i64 %108, ptr %memberidx.i.i.i116, align 4
  %109 = shl i64 %107, 4
  %110 = tail call ptr @realloc(ptr %106, i64 %109)
  store ptr %110, ptr %98, align 8
  %111 = load i64, ptr %memberidx.i.i.i116, align 4
  %112 = icmp slt i64 %111, %103
  br i1 %112, label %while.entry.i.i.i117, label %Parser_error.exit118.loopexit

Parser_error.exit118.loopexit:                    ; preds = %while.entry.i.i.i117
  %.pre195 = load i64, ptr %memberidx.i.i115, align 4
  %.pre216 = add nsw i64 %.pre195, 1
  br label %Parser_error.exit118

Parser_error.exit118:                             ; preds = %if.entry14, %Parser_error.exit118.loopexit
  %.pre-phi217 = phi i64 [ %.pre216, %Parser_error.exit118.loopexit ], [ %103, %if.entry14 ]
  %113 = phi ptr [ %110, %Parser_error.exit118.loopexit ], [ %.pre194, %if.entry14 ]
  %114 = phi i64 [ %.pre195, %Parser_error.exit118.loopexit ], [ %102, %if.entry14 ]
  store i64 %.pre-phi217, ptr %memberidx.i.i115, align 4
  %115 = getelementptr inbounds ptr, ptr %113, i64 %114
  store ptr %99, ptr %115, align 8
  br label %ifend4

if.entry17:                                       ; preds = %else
  %116 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %116, ptr noundef nonnull align 8 dereferenceable(12) @68, i64 12, i1 false)
  %117 = tail call ptr @malloc(i32 24)
  store ptr %116, ptr %117, align 8
  %memberidx1.i.i119 = getelementptr inbounds %String, ptr %117, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i119, align 4
  %memberidx2.i.i120 = getelementptr inbounds %String, ptr %117, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i120, align 4
  %memberidx.i121 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %118 = load ptr, ptr %memberidx.i121, align 8
  %119 = tail call ptr @malloc(i32 24)
  %120 = load ptr, ptr %memberidx, align 8
  %memberidx2.i123 = getelementptr inbounds %Token, ptr %120, i64 0, i32 1
  %121 = load ptr, ptr %memberidx2.i123, align 8
  store i64 2, ptr %119, align 4
  %memberidx1.i.i124 = getelementptr inbounds %FloError, ptr %119, i64 0, i32 2
  store ptr %121, ptr %memberidx1.i.i124, align 8
  %memberidx2.i.i125 = getelementptr inbounds %FloError, ptr %119, i64 0, i32 1
  store ptr %117, ptr %memberidx2.i.i125, align 8
  %memberidx.i.i126 = getelementptr inbounds %Array_FloError_, ptr %118, i64 0, i32 1
  %122 = load i64, ptr %memberidx.i.i126, align 4
  %123 = add i64 %122, 1
  %memberidx.i.i.i127 = getelementptr inbounds %Array_FloError_, ptr %118, i64 0, i32 2
  %124 = load i64, ptr %memberidx.i.i.i127, align 4
  %125 = icmp slt i64 %124, %123
  %.pre191 = load ptr, ptr %118, align 8
  br i1 %125, label %while.entry.i.i.i128, label %Parser_error.exit129

while.entry.i.i.i128:                             ; preds = %if.entry17, %while.entry.i.i.i128
  %126 = phi ptr [ %130, %while.entry.i.i.i128 ], [ %.pre191, %if.entry17 ]
  %127 = phi i64 [ %131, %while.entry.i.i.i128 ], [ %124, %if.entry17 ]
  %128 = shl nuw i64 %127, 1
  store i64 %128, ptr %memberidx.i.i.i127, align 4
  %129 = shl i64 %127, 4
  %130 = tail call ptr @realloc(ptr %126, i64 %129)
  store ptr %130, ptr %118, align 8
  %131 = load i64, ptr %memberidx.i.i.i127, align 4
  %132 = icmp slt i64 %131, %123
  br i1 %132, label %while.entry.i.i.i128, label %Parser_error.exit129.loopexit

Parser_error.exit129.loopexit:                    ; preds = %while.entry.i.i.i128
  %.pre192 = load i64, ptr %memberidx.i.i126, align 4
  %.pre218 = add nsw i64 %.pre192, 1
  br label %Parser_error.exit129

Parser_error.exit129:                             ; preds = %if.entry17, %Parser_error.exit129.loopexit
  %.pre-phi219 = phi i64 [ %.pre218, %Parser_error.exit129.loopexit ], [ %123, %if.entry17 ]
  %133 = phi ptr [ %130, %Parser_error.exit129.loopexit ], [ %.pre191, %if.entry17 ]
  %134 = phi i64 [ %.pre192, %Parser_error.exit129.loopexit ], [ %122, %if.entry17 ]
  store i64 %.pre-phi219, ptr %memberidx.i.i126, align 4
  %135 = getelementptr inbounds ptr, ptr %133, i64 %134
  store ptr %119, ptr %135, align 8
  br label %ifend4

if.entry20:                                       ; preds = %else
  %136 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %136, ptr noundef nonnull align 8 dereferenceable(12) @69, i64 12, i1 false)
  %137 = tail call ptr @malloc(i32 24)
  store ptr %136, ptr %137, align 8
  %memberidx1.i.i130 = getelementptr inbounds %String, ptr %137, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i130, align 4
  %memberidx2.i.i131 = getelementptr inbounds %String, ptr %137, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i131, align 4
  %memberidx.i132 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %138 = load ptr, ptr %memberidx.i132, align 8
  %139 = tail call ptr @malloc(i32 24)
  %140 = load ptr, ptr %memberidx, align 8
  %memberidx2.i134 = getelementptr inbounds %Token, ptr %140, i64 0, i32 1
  %141 = load ptr, ptr %memberidx2.i134, align 8
  store i64 2, ptr %139, align 4
  %memberidx1.i.i135 = getelementptr inbounds %FloError, ptr %139, i64 0, i32 2
  store ptr %141, ptr %memberidx1.i.i135, align 8
  %memberidx2.i.i136 = getelementptr inbounds %FloError, ptr %139, i64 0, i32 1
  store ptr %137, ptr %memberidx2.i.i136, align 8
  %memberidx.i.i137 = getelementptr inbounds %Array_FloError_, ptr %138, i64 0, i32 1
  %142 = load i64, ptr %memberidx.i.i137, align 4
  %143 = add i64 %142, 1
  %memberidx.i.i.i138 = getelementptr inbounds %Array_FloError_, ptr %138, i64 0, i32 2
  %144 = load i64, ptr %memberidx.i.i.i138, align 4
  %145 = icmp slt i64 %144, %143
  %.pre188 = load ptr, ptr %138, align 8
  br i1 %145, label %while.entry.i.i.i139, label %Parser_error.exit140

while.entry.i.i.i139:                             ; preds = %if.entry20, %while.entry.i.i.i139
  %146 = phi ptr [ %150, %while.entry.i.i.i139 ], [ %.pre188, %if.entry20 ]
  %147 = phi i64 [ %151, %while.entry.i.i.i139 ], [ %144, %if.entry20 ]
  %148 = shl nuw i64 %147, 1
  store i64 %148, ptr %memberidx.i.i.i138, align 4
  %149 = shl i64 %147, 4
  %150 = tail call ptr @realloc(ptr %146, i64 %149)
  store ptr %150, ptr %138, align 8
  %151 = load i64, ptr %memberidx.i.i.i138, align 4
  %152 = icmp slt i64 %151, %143
  br i1 %152, label %while.entry.i.i.i139, label %Parser_error.exit140.loopexit

Parser_error.exit140.loopexit:                    ; preds = %while.entry.i.i.i139
  %.pre189 = load i64, ptr %memberidx.i.i137, align 4
  %.pre220 = add nsw i64 %.pre189, 1
  br label %Parser_error.exit140

Parser_error.exit140:                             ; preds = %if.entry20, %Parser_error.exit140.loopexit
  %.pre-phi221 = phi i64 [ %.pre220, %Parser_error.exit140.loopexit ], [ %143, %if.entry20 ]
  %153 = phi ptr [ %150, %Parser_error.exit140.loopexit ], [ %.pre188, %if.entry20 ]
  %154 = phi i64 [ %.pre189, %Parser_error.exit140.loopexit ], [ %142, %if.entry20 ]
  store i64 %.pre-phi221, ptr %memberidx.i.i137, align 4
  %155 = getelementptr inbounds ptr, ptr %153, i64 %154
  store ptr %139, ptr %155, align 8
  br label %ifend4

if.entry23:                                       ; preds = %else
  %156 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %156, ptr noundef nonnull align 8 dereferenceable(12) @70, i64 12, i1 false)
  %157 = tail call ptr @malloc(i32 24)
  store ptr %156, ptr %157, align 8
  %memberidx1.i.i141 = getelementptr inbounds %String, ptr %157, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i141, align 4
  %memberidx2.i.i142 = getelementptr inbounds %String, ptr %157, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i142, align 4
  %memberidx.i143 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %158 = load ptr, ptr %memberidx.i143, align 8
  %159 = tail call ptr @malloc(i32 24)
  %160 = load ptr, ptr %memberidx, align 8
  %memberidx2.i145 = getelementptr inbounds %Token, ptr %160, i64 0, i32 1
  %161 = load ptr, ptr %memberidx2.i145, align 8
  store i64 2, ptr %159, align 4
  %memberidx1.i.i146 = getelementptr inbounds %FloError, ptr %159, i64 0, i32 2
  store ptr %161, ptr %memberidx1.i.i146, align 8
  %memberidx2.i.i147 = getelementptr inbounds %FloError, ptr %159, i64 0, i32 1
  store ptr %157, ptr %memberidx2.i.i147, align 8
  %memberidx.i.i148 = getelementptr inbounds %Array_FloError_, ptr %158, i64 0, i32 1
  %162 = load i64, ptr %memberidx.i.i148, align 4
  %163 = add i64 %162, 1
  %memberidx.i.i.i149 = getelementptr inbounds %Array_FloError_, ptr %158, i64 0, i32 2
  %164 = load i64, ptr %memberidx.i.i.i149, align 4
  %165 = icmp slt i64 %164, %163
  %.pre185 = load ptr, ptr %158, align 8
  br i1 %165, label %while.entry.i.i.i150, label %Parser_error.exit151

while.entry.i.i.i150:                             ; preds = %if.entry23, %while.entry.i.i.i150
  %166 = phi ptr [ %170, %while.entry.i.i.i150 ], [ %.pre185, %if.entry23 ]
  %167 = phi i64 [ %171, %while.entry.i.i.i150 ], [ %164, %if.entry23 ]
  %168 = shl nuw i64 %167, 1
  store i64 %168, ptr %memberidx.i.i.i149, align 4
  %169 = shl i64 %167, 4
  %170 = tail call ptr @realloc(ptr %166, i64 %169)
  store ptr %170, ptr %158, align 8
  %171 = load i64, ptr %memberidx.i.i.i149, align 4
  %172 = icmp slt i64 %171, %163
  br i1 %172, label %while.entry.i.i.i150, label %Parser_error.exit151.loopexit

Parser_error.exit151.loopexit:                    ; preds = %while.entry.i.i.i150
  %.pre186 = load i64, ptr %memberidx.i.i148, align 4
  %.pre222 = add nsw i64 %.pre186, 1
  br label %Parser_error.exit151

Parser_error.exit151:                             ; preds = %if.entry23, %Parser_error.exit151.loopexit
  %.pre-phi223 = phi i64 [ %.pre222, %Parser_error.exit151.loopexit ], [ %163, %if.entry23 ]
  %173 = phi ptr [ %170, %Parser_error.exit151.loopexit ], [ %.pre185, %if.entry23 ]
  %174 = phi i64 [ %.pre186, %Parser_error.exit151.loopexit ], [ %162, %if.entry23 ]
  store i64 %.pre-phi223, ptr %memberidx.i.i148, align 4
  %175 = getelementptr inbounds ptr, ptr %173, i64 %174
  store ptr %159, ptr %175, align 8
  br label %ifend4

if.entry26:                                       ; preds = %else
  %176 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %176, ptr noundef nonnull align 8 dereferenceable(12) @71, i64 12, i1 false)
  %177 = tail call ptr @malloc(i32 24)
  store ptr %176, ptr %177, align 8
  %memberidx1.i.i152 = getelementptr inbounds %String, ptr %177, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i152, align 4
  %memberidx2.i.i153 = getelementptr inbounds %String, ptr %177, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i153, align 4
  %memberidx.i154 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %178 = load ptr, ptr %memberidx.i154, align 8
  %179 = tail call ptr @malloc(i32 24)
  %180 = load ptr, ptr %memberidx, align 8
  %memberidx2.i156 = getelementptr inbounds %Token, ptr %180, i64 0, i32 1
  %181 = load ptr, ptr %memberidx2.i156, align 8
  store i64 2, ptr %179, align 4
  %memberidx1.i.i157 = getelementptr inbounds %FloError, ptr %179, i64 0, i32 2
  store ptr %181, ptr %memberidx1.i.i157, align 8
  %memberidx2.i.i158 = getelementptr inbounds %FloError, ptr %179, i64 0, i32 1
  store ptr %177, ptr %memberidx2.i.i158, align 8
  %memberidx.i.i159 = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 1
  %182 = load i64, ptr %memberidx.i.i159, align 4
  %183 = add i64 %182, 1
  %memberidx.i.i.i160 = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 2
  %184 = load i64, ptr %memberidx.i.i.i160, align 4
  %185 = icmp slt i64 %184, %183
  %.pre182 = load ptr, ptr %178, align 8
  br i1 %185, label %while.entry.i.i.i161, label %Parser_error.exit162

while.entry.i.i.i161:                             ; preds = %if.entry26, %while.entry.i.i.i161
  %186 = phi ptr [ %190, %while.entry.i.i.i161 ], [ %.pre182, %if.entry26 ]
  %187 = phi i64 [ %191, %while.entry.i.i.i161 ], [ %184, %if.entry26 ]
  %188 = shl nuw i64 %187, 1
  store i64 %188, ptr %memberidx.i.i.i160, align 4
  %189 = shl i64 %187, 4
  %190 = tail call ptr @realloc(ptr %186, i64 %189)
  store ptr %190, ptr %178, align 8
  %191 = load i64, ptr %memberidx.i.i.i160, align 4
  %192 = icmp slt i64 %191, %183
  br i1 %192, label %while.entry.i.i.i161, label %Parser_error.exit162.loopexit

Parser_error.exit162.loopexit:                    ; preds = %while.entry.i.i.i161
  %.pre183 = load i64, ptr %memberidx.i.i159, align 4
  %.pre224 = add nsw i64 %.pre183, 1
  br label %Parser_error.exit162

Parser_error.exit162:                             ; preds = %if.entry26, %Parser_error.exit162.loopexit
  %.pre-phi225 = phi i64 [ %.pre224, %Parser_error.exit162.loopexit ], [ %183, %if.entry26 ]
  %193 = phi ptr [ %190, %Parser_error.exit162.loopexit ], [ %.pre182, %if.entry26 ]
  %194 = phi i64 [ %.pre183, %Parser_error.exit162.loopexit ], [ %182, %if.entry26 ]
  store i64 %.pre-phi225, ptr %memberidx.i.i159, align 4
  %195 = getelementptr inbounds ptr, ptr %193, i64 %194
  store ptr %179, ptr %195, align 8
  br label %ifend4

if.entry29:                                       ; preds = %else
  %196 = tail call ptr @malloc(i32 12)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(12) %196, ptr noundef nonnull align 8 dereferenceable(12) @72, i64 12, i1 false)
  %197 = tail call ptr @malloc(i32 24)
  store ptr %196, ptr %197, align 8
  %memberidx1.i.i163 = getelementptr inbounds %String, ptr %197, i64 0, i32 1
  store i64 12, ptr %memberidx1.i.i163, align 4
  %memberidx2.i.i164 = getelementptr inbounds %String, ptr %197, i64 0, i32 2
  store i64 12, ptr %memberidx2.i.i164, align 4
  %memberidx.i165 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %198 = load ptr, ptr %memberidx.i165, align 8
  %199 = tail call ptr @malloc(i32 24)
  %200 = load ptr, ptr %memberidx, align 8
  %memberidx2.i167 = getelementptr inbounds %Token, ptr %200, i64 0, i32 1
  %201 = load ptr, ptr %memberidx2.i167, align 8
  store i64 2, ptr %199, align 4
  %memberidx1.i.i168 = getelementptr inbounds %FloError, ptr %199, i64 0, i32 2
  store ptr %201, ptr %memberidx1.i.i168, align 8
  %memberidx2.i.i169 = getelementptr inbounds %FloError, ptr %199, i64 0, i32 1
  store ptr %197, ptr %memberidx2.i.i169, align 8
  %memberidx.i.i170 = getelementptr inbounds %Array_FloError_, ptr %198, i64 0, i32 1
  %202 = load i64, ptr %memberidx.i.i170, align 4
  %203 = add i64 %202, 1
  %memberidx.i.i.i171 = getelementptr inbounds %Array_FloError_, ptr %198, i64 0, i32 2
  %204 = load i64, ptr %memberidx.i.i.i171, align 4
  %205 = icmp slt i64 %204, %203
  %.pre179 = load ptr, ptr %198, align 8
  br i1 %205, label %while.entry.i.i.i172, label %Parser_error.exit173

while.entry.i.i.i172:                             ; preds = %if.entry29, %while.entry.i.i.i172
  %206 = phi ptr [ %210, %while.entry.i.i.i172 ], [ %.pre179, %if.entry29 ]
  %207 = phi i64 [ %211, %while.entry.i.i.i172 ], [ %204, %if.entry29 ]
  %208 = shl nuw i64 %207, 1
  store i64 %208, ptr %memberidx.i.i.i171, align 4
  %209 = shl i64 %207, 4
  %210 = tail call ptr @realloc(ptr %206, i64 %209)
  store ptr %210, ptr %198, align 8
  %211 = load i64, ptr %memberidx.i.i.i171, align 4
  %212 = icmp slt i64 %211, %203
  br i1 %212, label %while.entry.i.i.i172, label %Parser_error.exit173.loopexit

Parser_error.exit173.loopexit:                    ; preds = %while.entry.i.i.i172
  %.pre180 = load i64, ptr %memberidx.i.i170, align 4
  %.pre226 = add nsw i64 %.pre180, 1
  br label %Parser_error.exit173

Parser_error.exit173:                             ; preds = %if.entry29, %Parser_error.exit173.loopexit
  %.pre-phi227 = phi i64 [ %.pre226, %Parser_error.exit173.loopexit ], [ %203, %if.entry29 ]
  %213 = phi ptr [ %210, %Parser_error.exit173.loopexit ], [ %.pre179, %if.entry29 ]
  %214 = phi i64 [ %.pre180, %Parser_error.exit173.loopexit ], [ %202, %if.entry29 ]
  store i64 %.pre-phi227, ptr %memberidx.i.i170, align 4
  %215 = getelementptr inbounds ptr, ptr %213, i64 %214
  store ptr %199, ptr %215, align 8
  br label %ifend4

if.entry32:                                       ; preds = %else
  %216 = tail call ptr @malloc(i32 13)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(13) %216, ptr noundef nonnull align 8 dereferenceable(13) @73, i64 13, i1 false)
  %217 = tail call ptr @malloc(i32 24)
  store ptr %216, ptr %217, align 8
  %memberidx1.i.i174 = getelementptr inbounds %String, ptr %217, i64 0, i32 1
  store i64 13, ptr %memberidx1.i.i174, align 4
  %memberidx2.i.i175 = getelementptr inbounds %String, ptr %217, i64 0, i32 2
  store i64 13, ptr %memberidx2.i.i175, align 4
  %memberidx.i61 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %218 = load ptr, ptr %memberidx.i61, align 8
  %219 = tail call ptr @malloc(i32 24)
  %220 = load ptr, ptr %memberidx, align 8
  %memberidx2.i62 = getelementptr inbounds %Token, ptr %220, i64 0, i32 1
  %221 = load ptr, ptr %memberidx2.i62, align 8
  store i64 2, ptr %219, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %219, i64 0, i32 2
  store ptr %221, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %219, i64 0, i32 1
  store ptr %217, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %218, i64 0, i32 1
  %222 = load i64, ptr %memberidx.i.i, align 4
  %223 = add i64 %222, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %218, i64 0, i32 2
  %224 = load i64, ptr %memberidx.i.i.i, align 4
  %225 = icmp slt i64 %224, %223
  %.pre = load ptr, ptr %218, align 8
  br i1 %225, label %while.entry.i.i.i, label %Parser_error.exit

while.entry.i.i.i:                                ; preds = %if.entry32, %while.entry.i.i.i
  %226 = phi ptr [ %230, %while.entry.i.i.i ], [ %.pre, %if.entry32 ]
  %227 = phi i64 [ %231, %while.entry.i.i.i ], [ %224, %if.entry32 ]
  %228 = shl nuw i64 %227, 1
  store i64 %228, ptr %memberidx.i.i.i, align 4
  %229 = shl i64 %227, 4
  %230 = tail call ptr @realloc(ptr %226, i64 %229)
  store ptr %230, ptr %218, align 8
  %231 = load i64, ptr %memberidx.i.i.i, align 4
  %232 = icmp slt i64 %231, %223
  br i1 %232, label %while.entry.i.i.i, label %Parser_error.exit.loopexit

Parser_error.exit.loopexit:                       ; preds = %while.entry.i.i.i
  %.pre177 = load i64, ptr %memberidx.i.i, align 4
  %.pre228 = add nsw i64 %.pre177, 1
  br label %Parser_error.exit

Parser_error.exit:                                ; preds = %if.entry32, %Parser_error.exit.loopexit
  %.pre-phi229 = phi i64 [ %.pre228, %Parser_error.exit.loopexit ], [ %223, %if.entry32 ]
  %233 = phi ptr [ %230, %Parser_error.exit.loopexit ], [ %.pre, %if.entry32 ]
  %234 = phi i64 [ %.pre177, %Parser_error.exit.loopexit ], [ %222, %if.entry32 ]
  store i64 %.pre-phi229, ptr %memberidx.i.i, align 4
  %235 = getelementptr inbounds ptr, ptr %233, i64 %234
  store ptr %219, ptr %235, align 8
  br label %ifend4
}

define internal fastcc ptr @Parser_parse_array_expression(ptr %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 32)
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %memberidx1, align 8
  store ptr %4, ptr %2, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %2, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %2, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i, align 4
  %memberidx.i = getelementptr inbounds %ArrayExpressionNode, ptr %2, i64 0, i32 3
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i3.i = getelementptr inbounds %Array_ExpressionNode_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i3.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i3.i, align 4
  store ptr %5, ptr %memberidx.i, align 8
  %memberidx.i12 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %7 = load i64, ptr %memberidx.i12, align 4
  %8 = load ptr, ptr %0, align 8
  %memberidx2.i13 = getelementptr inbounds %Array_Token_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx2.i13, align 4
  %10 = icmp slt i64 %7, %9
  br i1 %10, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %11 = add nsw i64 %7, 1
  store i64 %11, ptr %memberidx.i12, align 4
  %12 = load ptr, ptr %8, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  store ptr %14, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %5, i64 30)
  %15 = load ptr, ptr %memberidx, align 8
  %16 = load i64, ptr %15, align 4
  %17 = icmp eq i64 %16, 30
  br i1 %17, label %if.entry.i16, label %else.i

if.entry.i16:                                     ; preds = %Parser_advance.exit
  %18 = load i64, ptr %memberidx.i12, align 4
  %19 = load ptr, ptr %0, align 8
  %memberidx2.i.i = getelementptr inbounds %Array_Token_, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx2.i.i, align 4
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %if.entry.i.i, label %Parser_eat.exit

if.entry.i.i:                                     ; preds = %if.entry.i16
  %22 = add nsw i64 %18, 1
  store i64 %22, ptr %memberidx.i12, align 4
  %23 = load ptr, ptr %19, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  store ptr %25, ptr %memberidx, align 8
  br label %Parser_eat.exit

else.i:                                           ; preds = %Parser_advance.exit
  %26 = tail call ptr @malloc(i32 16)
  %memberidx35.i = getelementptr inbounds %Token, ptr %15, i64 0, i32 1
  %27 = load ptr, ptr %memberidx35.i, align 8
  store i64 46, ptr %26, align 4
  %memberidx1.i74.i = getelementptr inbounds %Token, ptr %26, i64 0, i32 1
  store ptr %27, ptr %memberidx1.i74.i, align 8
  br label %Parser_eat.exit

Parser_eat.exit:                                  ; preds = %if.entry.i16, %if.entry.i.i, %else.i
  %common.ret.op.i = phi ptr [ %26, %else.i ], [ %15, %if.entry.i.i ], [ %15, %if.entry.i16 ]
  %memberidx5 = getelementptr inbounds %Token, ptr %common.ret.op.i, i64 0, i32 1
  %28 = load ptr, ptr %memberidx5, align 8
  %29 = tail call ptr @malloc(i32 32)
  %30 = load i64, ptr %4, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 1
  %31 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i17 = getelementptr inbounds %FloRange, ptr %4, i64 0, i32 2
  %32 = load i64, ptr %memberidx2.i17, align 4
  %memberidx3.i18 = getelementptr inbounds %FloRange, ptr %28, i64 0, i32 3
  %33 = load i64, ptr %memberidx3.i18, align 4
  store i64 %30, ptr %29, align 4
  %memberidx1.i.i19 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 1
  store i64 %31, ptr %memberidx1.i.i19, align 4
  %memberidx2.i.i20 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i20, align 4
  %memberidx3.i.i21 = getelementptr inbounds %FloRange, ptr %29, i64 0, i32 3
  store i64 %33, ptr %memberidx3.i.i21, align 4
  store ptr %29, ptr %2, align 8
  ret ptr %2
}

define internal fastcc ptr @Parser_parse_new_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %4 = load i64, ptr %memberidx.i, align 4
  %5 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp slt i64 %4, %6
  br i1 %7, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %1
  %8 = add nsw i64 %4, 1
  store i64 %8, ptr %memberidx.i, align 4
  %9 = load ptr, ptr %5, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  store ptr %11, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %1, %if.entry.i
  %12 = tail call ptr @malloc(i32 41)
  %13 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %memberidx.i14 = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 3
  store ptr %13, ptr %memberidx.i14, align 8
  %memberidx1.i = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 4
  store i1 true, ptr %memberidx1.i, align 1
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %12, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %12, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i, align 4
  %memberidx2.i15 = getelementptr inbounds %NewExpressionNode, ptr %12, i64 0, i32 5
  %14 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_ExpressionNode_, ptr %14, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_ExpressionNode_, ptr %14, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %15 = tail call ptr @malloc(i32 64)
  store ptr %15, ptr %14, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %14, ptr %memberidx2.i15, align 8
  %16 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 25)
  tail call fastcc void @Parser_parse_expression_list(ptr nonnull %0, ptr nonnull %14, i64 26)
  %17 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 26)
  %memberidx5 = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  %18 = load ptr, ptr %memberidx5, align 8
  %19 = tail call ptr @malloc(i32 32)
  %20 = load i64, ptr %3, align 4
  %memberidx1.i16 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 1
  %21 = load i64, ptr %memberidx1.i16, align 4
  %memberidx2.i17 = getelementptr inbounds %FloRange, ptr %3, i64 0, i32 2
  %22 = load i64, ptr %memberidx2.i17, align 4
  %memberidx3.i18 = getelementptr inbounds %FloRange, ptr %18, i64 0, i32 3
  %23 = load i64, ptr %memberidx3.i18, align 4
  store i64 %20, ptr %19, align 4
  %memberidx1.i.i19 = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 1
  store i64 %21, ptr %memberidx1.i.i19, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %19, i64 0, i32 3
  store i64 %23, ptr %memberidx3.i.i, align 4
  store ptr %19, ptr %12, align 8
  ret ptr %12
}

define internal fastcc ptr @Parser_parse_term_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend7.i [
    i64 4, label %Parser_is_term_expr_op.exit
    i64 7, label %Parser_is_term_expr_op.exit.fold.split
    i64 10, label %Parser_is_term_expr_op.exit.fold.split29
  ]

ifend7.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 11
  %spec.select.i = select i1 %5, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split:           ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit.fold.split29:         ; preds = %1
  br label %Parser_is_term_expr_op.exit

Parser_is_term_expr_op.exit:                      ; preds = %1, %Parser_is_term_expr_op.exit.fold.split29, %Parser_is_term_expr_op.exit.fold.split, %ifend7.i
  %common.ret.op.i = phi i64 [ 3, %1 ], [ %spec.select.i, %ifend7.i ], [ 4, %Parser_is_term_expr_op.exit.fold.split ], [ 5, %Parser_is_term_expr_op.exit.fold.split29 ]
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 46
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx3.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_is_term_expr_op.exit
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_term_expr_op.exit23
  %op.0 = phi i64 [ %common.ret.op.i18, %Parser_is_term_expr_op.exit23 ], [ %common.ret.op.i, %while.entry.preheader ]
  %unary.0 = phi ptr [ %21, %Parser_is_term_expr_op.exit23 ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_unary_expression_pre(ptr nonnull %0)
  %23 = load ptr, ptr %unary.0, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i15 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %unary.0, ptr %memberidx2.i15, align 8
  %memberidx3.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i16, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  switch i64 %31, label %ifend7.i22 [
    i64 4, label %Parser_is_term_expr_op.exit23
    i64 7, label %Parser_is_term_expr_op.exit23.fold.split
    i64 10, label %Parser_is_term_expr_op.exit23.fold.split30
  ]

ifend7.i22:                                       ; preds = %Parser_advance.exit
  %32 = icmp eq i64 %31, 11
  %spec.select.i21 = select i1 %32, i64 6, i64 0
  br label %Parser_is_term_expr_op.exit23

Parser_is_term_expr_op.exit23.fold.split:         ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit23

Parser_is_term_expr_op.exit23.fold.split30:       ; preds = %Parser_advance.exit
  br label %Parser_is_term_expr_op.exit23

Parser_is_term_expr_op.exit23:                    ; preds = %Parser_advance.exit, %Parser_is_term_expr_op.exit23.fold.split30, %Parser_is_term_expr_op.exit23.fold.split, %ifend7.i22
  %common.ret.op.i18 = phi i64 [ 3, %Parser_advance.exit ], [ %spec.select.i21, %ifend7.i22 ], [ 4, %Parser_is_term_expr_op.exit23.fold.split ], [ 5, %Parser_is_term_expr_op.exit23.fold.split30 ]
  %33 = icmp ne i64 %common.ret.op.i18, 0
  %34 = icmp ne i64 %31, 46
  %35 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i26 = getelementptr inbounds %Array_FloError_, ptr %35, i64 0, i32 1
  %36 = load i64, ptr %memberidx3.i26, align 4
  %37 = icmp eq i64 %36, 0
  %38 = and i1 %34, %37
  %39 = and i1 %33, %38
  br i1 %39, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_is_term_expr_op.exit23, %Parser_is_term_expr_op.exit
  %unary.1 = phi ptr [ %2, %Parser_is_term_expr_op.exit ], [ %21, %Parser_is_term_expr_op.exit23 ]
  ret ptr %unary.1
}

define internal fastcc ptr @Parser_parse_arithmetic_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_term_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %5 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx3.i, align 4
  %7 = icmp eq i64 %6, 0
  %8 = add i64 %4, -5
  %9 = icmp ult i64 %8, 2
  %10 = and i1 %9, %7
  br i1 %10, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %1
  %11 = icmp eq i64 %4, 6
  %12 = icmp eq i64 %4, 5
  %spec.select.i = select i1 %12, i64 2, i64 0
  %common.ret.op.i = select i1 %11, i64 1, i64 %spec.select.i
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_advance.exit
  %op.0 = phi i64 [ %common.ret.op.i18, %Parser_advance.exit ], [ %common.ret.op.i, %while.entry.preheader ]
  %term.0 = phi ptr [ %21, %Parser_advance.exit ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_term_expression(ptr nonnull %0)
  %23 = load ptr, ptr %term.0, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i14 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %term.0, ptr %memberidx2.i14, align 8
  %memberidx3.i15 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i15, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  %32 = icmp eq i64 %31, 6
  %33 = icmp eq i64 %31, 5
  %spec.select.i17 = select i1 %33, i64 2, i64 0
  %common.ret.op.i18 = select i1 %32, i64 1, i64 %spec.select.i17
  %34 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i21 = getelementptr inbounds %Array_FloError_, ptr %34, i64 0, i32 1
  %35 = load i64, ptr %memberidx3.i21, align 4
  %36 = icmp eq i64 %35, 0
  %37 = add i64 %31, -5
  %38 = icmp ult i64 %37, 2
  %39 = and i1 %38, %36
  br i1 %39, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_advance.exit, %1
  %term.1 = phi ptr [ %2, %1 ], [ %21, %Parser_advance.exit ]
  ret ptr %term.1
}

define internal fastcc ptr @Parser_parse_bitshift_expression(ptr %0) unnamed_addr {
  %2 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr %0)
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %3 = load ptr, ptr %memberidx.i, align 8
  %4 = load i64, ptr %3, align 4
  switch i64 %4, label %ifend4.i [
    i64 48, label %Parser_is_bitshift_expr_op.exit
    i64 49, label %Parser_is_bitshift_expr_op.exit.fold.split
  ]

ifend4.i:                                         ; preds = %1
  %5 = icmp eq i64 %4, 51
  %spec.select.i = select i1 %5, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit.fold.split:       ; preds = %1
  br label %Parser_is_bitshift_expr_op.exit

Parser_is_bitshift_expr_op.exit:                  ; preds = %1, %Parser_is_bitshift_expr_op.exit.fold.split, %ifend4.i
  %common.ret.op.i = phi i64 [ 13, %1 ], [ %spec.select.i, %ifend4.i ], [ 14, %Parser_is_bitshift_expr_op.exit.fold.split ]
  %6 = icmp ne i64 %common.ret.op.i, 0
  %7 = icmp ne i64 %4, 46
  %memberidx2.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx3.i, align 4
  %10 = icmp eq i64 %9, 0
  %11 = and i1 %7, %10
  %12 = and i1 %6, %11
  br i1 %12, label %while.entry.preheader, label %while.end

while.entry.preheader:                            ; preds = %Parser_is_bitshift_expr_op.exit
  %memberidx.i11 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_bitshift_expr_op.exit22
  %op.0 = phi i64 [ %common.ret.op.i18, %Parser_is_bitshift_expr_op.exit22 ], [ %common.ret.op.i, %while.entry.preheader ]
  %arith.0 = phi ptr [ %21, %Parser_is_bitshift_expr_op.exit22 ], [ %2, %while.entry.preheader ]
  %13 = load i64, ptr %memberidx.i11, align 4
  %14 = load ptr, ptr %0, align 8
  %memberidx2.i12 = getelementptr inbounds %Array_Token_, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx2.i12, align 4
  %16 = icmp slt i64 %13, %15
  br i1 %16, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %while.entry
  %17 = add nsw i64 %13, 1
  store i64 %17, ptr %memberidx.i11, align 4
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  store ptr %20, ptr %memberidx.i, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %while.entry, %if.entry.i
  %21 = tail call ptr @malloc(i32 48)
  %22 = tail call fastcc ptr @Parser_parse_arithmetic_expression(ptr nonnull %0)
  %23 = load ptr, ptr %arith.0, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 32)
  %26 = load i64, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 1
  %27 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %23, i64 0, i32 2
  %28 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %24, i64 0, i32 3
  %29 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %26, ptr %25, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 1
  store i64 %27, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %25, i64 0, i32 3
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store ptr %25, ptr %21, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %21, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %21, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i15 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 3
  store ptr %arith.0, ptr %memberidx2.i15, align 8
  %memberidx3.i16 = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i16, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %21, i64 0, i32 5
  store ptr %22, ptr %memberidx4.i, align 8
  %30 = load ptr, ptr %memberidx.i, align 8
  %31 = load i64, ptr %30, align 4
  switch i64 %31, label %ifend4.i21 [
    i64 48, label %Parser_is_bitshift_expr_op.exit22
    i64 49, label %Parser_is_bitshift_expr_op.exit22.fold.split
  ]

ifend4.i21:                                       ; preds = %Parser_advance.exit
  %32 = icmp eq i64 %31, 51
  %spec.select.i20 = select i1 %32, i64 17, i64 0
  br label %Parser_is_bitshift_expr_op.exit22

Parser_is_bitshift_expr_op.exit22.fold.split:     ; preds = %Parser_advance.exit
  br label %Parser_is_bitshift_expr_op.exit22

Parser_is_bitshift_expr_op.exit22:                ; preds = %Parser_advance.exit, %Parser_is_bitshift_expr_op.exit22.fold.split, %ifend4.i21
  %common.ret.op.i18 = phi i64 [ 13, %Parser_advance.exit ], [ %spec.select.i20, %ifend4.i21 ], [ 14, %Parser_is_bitshift_expr_op.exit22.fold.split ]
  %33 = icmp ne i64 %common.ret.op.i18, 0
  %34 = icmp ne i64 %31, 46
  %35 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i25 = getelementptr inbounds %Array_FloError_, ptr %35, i64 0, i32 1
  %36 = load i64, ptr %memberidx3.i25, align 4
  %37 = icmp eq i64 %36, 0
  %38 = and i1 %34, %37
  %39 = and i1 %33, %38
  br i1 %39, label %while.entry, label %while.end

while.end:                                        ; preds = %Parser_is_bitshift_expr_op.exit22, %Parser_is_bitshift_expr_op.exit
  %arith.1 = phi ptr [ %2, %Parser_is_bitshift_expr_op.exit ], [ %21, %Parser_is_bitshift_expr_op.exit22 ]
  ret ptr %arith.1
}

define internal fastcc ptr @Parser_parse_comparison_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 47
  br i1 %4, label %if.entry, label %ifend

common.ret61:                                     ; preds = %Parser_is_comp_expr_op.exit48, %Parser_is_comp_expr_op.exit, %Parser_advance.exit
  %common.ret61.op = phi ptr [ %15, %Parser_advance.exit ], [ %22, %Parser_is_comp_expr_op.exit ], [ %41, %Parser_is_comp_expr_op.exit48 ]
  ret ptr %common.ret61.op

if.entry:                                         ; preds = %1
  %memberidx1 = getelementptr inbounds %Token, ptr %2, i64 0, i32 1
  %5 = load ptr, ptr %memberidx1, align 8
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = load ptr, ptr %0, align 8
  %memberidx2.i = getelementptr inbounds %Array_Token_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp slt i64 %6, %8
  br i1 %9, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %if.entry
  %10 = add nsw i64 %6, 1
  store i64 %10, ptr %memberidx.i, align 4
  %11 = load ptr, ptr %7, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  store ptr %13, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %if.entry, %if.entry.i
  %14 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %15 = tail call ptr @malloc(i32 40)
  %16 = load ptr, ptr %14, align 8
  %17 = tail call ptr @malloc(i32 32)
  %18 = load i64, ptr %5, align 4
  %memberidx1.i = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 1
  %19 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i19 = getelementptr inbounds %FloRange, ptr %5, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i19, align 4
  %memberidx3.i20 = getelementptr inbounds %FloRange, ptr %16, i64 0, i32 3
  %21 = load i64, ptr %memberidx3.i20, align 4
  store i64 %18, ptr %17, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %17, i64 0, i32 3
  store i64 %21, ptr %memberidx3.i.i, align 4
  %memberidx.i21 = getelementptr inbounds %UnaryExpressionNode, ptr %15, i64 0, i32 3
  store i64 7, ptr %memberidx.i21, align 4
  %memberidx1.i22 = getelementptr inbounds %UnaryExpressionNode, ptr %15, i64 0, i32 4
  store ptr %14, ptr %memberidx1.i22, align 8
  store ptr %17, ptr %15, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %15, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %15, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i, align 4
  br label %common.ret61

ifend:                                            ; preds = %1
  %22 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %23 = load ptr, ptr %memberidx, align 8
  %24 = load i64, ptr %23, align 4
  switch i64 %24, label %ifend13.i [
    i64 41, label %Parser_is_comp_expr_op.exit
    i64 42, label %Parser_is_comp_expr_op.exit.fold.split
    i64 44, label %Parser_is_comp_expr_op.exit.fold.split55
    i64 43, label %Parser_is_comp_expr_op.exit.fold.split56
    i64 39, label %Parser_is_comp_expr_op.exit.fold.split57
  ]

ifend13.i:                                        ; preds = %ifend
  %25 = icmp eq i64 %24, 40
  %spec.select.i = select i1 %25, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split:           ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split55:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split56:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit.fold.split57:         ; preds = %ifend
  br label %Parser_is_comp_expr_op.exit

Parser_is_comp_expr_op.exit:                      ; preds = %ifend, %Parser_is_comp_expr_op.exit.fold.split57, %Parser_is_comp_expr_op.exit.fold.split56, %Parser_is_comp_expr_op.exit.fold.split55, %Parser_is_comp_expr_op.exit.fold.split, %ifend13.i
  %common.ret.op.i = phi i64 [ 7, %ifend ], [ %spec.select.i, %ifend13.i ], [ 9, %Parser_is_comp_expr_op.exit.fold.split ], [ 8, %Parser_is_comp_expr_op.exit.fold.split55 ], [ 10, %Parser_is_comp_expr_op.exit.fold.split56 ], [ 11, %Parser_is_comp_expr_op.exit.fold.split57 ]
  %26 = icmp ne i64 %common.ret.op.i, 0
  %27 = icmp ne i64 %24, 46
  %memberidx2.i25 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %28 = load ptr, ptr %memberidx2.i25, align 8
  %memberidx3.i26 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %29 = load i64, ptr %memberidx3.i26, align 4
  %30 = icmp eq i64 %29, 0
  %31 = and i1 %27, %30
  %32 = and i1 %26, %31
  br i1 %32, label %while.entry.preheader, label %common.ret61

while.entry.preheader:                            ; preds = %Parser_is_comp_expr_op.exit
  %memberidx.i27 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %Parser_is_comp_expr_op.exit48
  %bit.0 = phi ptr [ %41, %Parser_is_comp_expr_op.exit48 ], [ %22, %while.entry.preheader ]
  %op.0 = phi i64 [ %common.ret.op.i41, %Parser_is_comp_expr_op.exit48 ], [ %common.ret.op.i, %while.entry.preheader ]
  %33 = load i64, ptr %memberidx.i27, align 4
  %34 = load ptr, ptr %0, align 8
  %memberidx2.i28 = getelementptr inbounds %Array_Token_, ptr %34, i64 0, i32 1
  %35 = load i64, ptr %memberidx2.i28, align 4
  %36 = icmp slt i64 %33, %35
  br i1 %36, label %if.entry.i30, label %Parser_advance.exit32

if.entry.i30:                                     ; preds = %while.entry
  %37 = add nsw i64 %33, 1
  store i64 %37, ptr %memberidx.i27, align 4
  %38 = load ptr, ptr %34, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  store ptr %40, ptr %memberidx, align 8
  br label %Parser_advance.exit32

Parser_advance.exit32:                            ; preds = %while.entry, %if.entry.i30
  %41 = tail call ptr @malloc(i32 48)
  %42 = tail call fastcc ptr @Parser_parse_bitshift_expression(ptr nonnull %0)
  %43 = load ptr, ptr %bit.0, align 8
  %44 = load ptr, ptr %42, align 8
  %45 = tail call ptr @malloc(i32 32)
  %46 = load i64, ptr %43, align 4
  %memberidx1.i.i33 = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 1
  %47 = load i64, ptr %memberidx1.i.i33, align 4
  %memberidx2.i.i34 = getelementptr inbounds %FloRange, ptr %43, i64 0, i32 2
  %48 = load i64, ptr %memberidx2.i.i34, align 4
  %memberidx3.i.i35 = getelementptr inbounds %FloRange, ptr %44, i64 0, i32 3
  %49 = load i64, ptr %memberidx3.i.i35, align 4
  store i64 %46, ptr %45, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 1
  store i64 %47, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 2
  store i64 %48, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 3
  store i64 %49, ptr %memberidx3.i.i.i, align 4
  store ptr %45, ptr %41, align 8
  %memberidx.i.i.i36 = getelementptr inbounds %StatementNode, ptr %41, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i36, align 4
  %memberidx.i.i37 = getelementptr inbounds %ExpressionNode, ptr %41, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i37, align 4
  %memberidx2.i38 = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 3
  store ptr %bit.0, ptr %memberidx2.i38, align 8
  %memberidx3.i39 = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 4
  store i64 %op.0, ptr %memberidx3.i39, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %41, i64 0, i32 5
  store ptr %42, ptr %memberidx4.i, align 8
  %50 = load ptr, ptr %memberidx, align 8
  %51 = load i64, ptr %50, align 4
  switch i64 %51, label %ifend13.i47 [
    i64 41, label %Parser_is_comp_expr_op.exit48
    i64 42, label %Parser_is_comp_expr_op.exit48.fold.split
    i64 44, label %Parser_is_comp_expr_op.exit48.fold.split58
    i64 43, label %Parser_is_comp_expr_op.exit48.fold.split59
    i64 39, label %Parser_is_comp_expr_op.exit48.fold.split60
  ]

ifend13.i47:                                      ; preds = %Parser_advance.exit32
  %52 = icmp eq i64 %51, 40
  %spec.select.i46 = select i1 %52, i64 12, i64 0
  br label %Parser_is_comp_expr_op.exit48

Parser_is_comp_expr_op.exit48.fold.split:         ; preds = %Parser_advance.exit32
  br label %Parser_is_comp_expr_op.exit48

Parser_is_comp_expr_op.exit48.fold.split58:       ; preds = %Parser_advance.exit32
  br label %Parser_is_comp_expr_op.exit48

Parser_is_comp_expr_op.exit48.fold.split59:       ; preds = %Parser_advance.exit32
  br label %Parser_is_comp_expr_op.exit48

Parser_is_comp_expr_op.exit48.fold.split60:       ; preds = %Parser_advance.exit32
  br label %Parser_is_comp_expr_op.exit48

Parser_is_comp_expr_op.exit48:                    ; preds = %Parser_advance.exit32, %Parser_is_comp_expr_op.exit48.fold.split60, %Parser_is_comp_expr_op.exit48.fold.split59, %Parser_is_comp_expr_op.exit48.fold.split58, %Parser_is_comp_expr_op.exit48.fold.split, %ifend13.i47
  %common.ret.op.i41 = phi i64 [ 7, %Parser_advance.exit32 ], [ %spec.select.i46, %ifend13.i47 ], [ 9, %Parser_is_comp_expr_op.exit48.fold.split ], [ 8, %Parser_is_comp_expr_op.exit48.fold.split58 ], [ 10, %Parser_is_comp_expr_op.exit48.fold.split59 ], [ 11, %Parser_is_comp_expr_op.exit48.fold.split60 ]
  %53 = icmp ne i64 %common.ret.op.i41, 0
  %54 = icmp ne i64 %51, 46
  %55 = load ptr, ptr %memberidx2.i25, align 8
  %memberidx3.i51 = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx3.i51, align 4
  %57 = icmp eq i64 %56, 0
  %58 = and i1 %54, %57
  %59 = and i1 %53, %58
  br i1 %59, label %while.entry, label %common.ret61
}

define internal fastcc ptr @Parser_parse_expression(ptr %0) unnamed_addr {
  %memberidx = getelementptr inbounds %Parser, ptr %0, i64 0, i32 2
  %2 = load ptr, ptr %memberidx, align 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 57
  br i1 %4, label %if.entry, label %ifend

common.ret120:                                    ; preds = %Parser_parse_match_expression.exit, %Parser_is_assign_op.exit, %Parser_advance.exit, %Parser_advance.exit46
  %common.ret120.op = phi ptr [ %289, %Parser_advance.exit46 ], [ %311, %Parser_advance.exit ], [ %5, %Parser_parse_match_expression.exit ], [ %common.ret.op.i66, %Parser_is_assign_op.exit ]
  ret ptr %common.ret120.op

if.entry:                                         ; preds = %1
  %5 = tail call ptr @malloc(i32 48)
  %6 = load ptr, ptr %memberidx, align 8
  %7 = load i64, ptr %6, align 4
  %8 = icmp eq i64 %7, 57
  br i1 %8, label %if.entry.i89.i, label %else.i.i

if.entry.i89.i:                                   ; preds = %if.entry
  %memberidx.i.i87.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %9 = load i64, ptr %memberidx.i.i87.i, align 4
  %10 = load ptr, ptr %0, align 8
  %memberidx2.i.i88.i = getelementptr inbounds %Array_Token_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx2.i.i88.i, align 4
  %12 = icmp slt i64 %9, %11
  br i1 %12, label %if.entry.i.i91.i, label %Parser_eat.exit.i

if.entry.i.i91.i:                                 ; preds = %if.entry.i89.i
  %13 = add nsw i64 %9, 1
  store i64 %13, ptr %memberidx.i.i87.i, align 4
  %14 = load ptr, ptr %10, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  store ptr %16, ptr %memberidx, align 8
  br label %Parser_eat.exit.i

else.i.i:                                         ; preds = %if.entry
  %17 = tail call ptr @malloc(i32 16)
  %memberidx35.i.i = getelementptr inbounds %Token, ptr %6, i64 0, i32 1
  %18 = load ptr, ptr %memberidx35.i.i, align 8
  store i64 46, ptr %17, align 4
  %memberidx1.i74.i.i = getelementptr inbounds %Token, ptr %17, i64 0, i32 1
  store ptr %18, ptr %memberidx1.i74.i.i, align 8
  br label %Parser_eat.exit.i

Parser_eat.exit.i:                                ; preds = %if.entry.i89.i, %if.entry.i.i91.i, %else.i.i
  %common.ret.op.i.i = phi ptr [ %17, %else.i.i ], [ %6, %if.entry.i.i91.i ], [ %6, %if.entry.i89.i ]
  %memberidx.i50 = getelementptr inbounds %Token, ptr %common.ret.op.i.i, i64 0, i32 1
  %19 = load ptr, ptr %memberidx.i50, align 8
  store ptr %19, ptr %5, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %5, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i82.i = getelementptr inbounds %ExpressionNode, ptr %5, i64 0, i32 2
  store i64 17, ptr %memberidx.i.i82.i, align 4
  %memberidx.i83.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 4
  %20 = tail call ptr @malloc(i32 24)
  %memberidx.i5.i.i = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %20, i64 0, i32 1
  store i64 0, ptr %memberidx.i5.i.i, align 4
  %memberidx1.i.i.i51 = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %20, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i51, align 4
  %21 = tail call ptr @malloc(i32 64)
  store ptr %21, ptr %20, align 8
  store i64 0, ptr %memberidx.i5.i.i, align 4
  store ptr %20, ptr %memberidx.i83.i, align 8
  %memberidx3.i85.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 5
  store ptr null, ptr %memberidx3.i85.i, align 8
  %memberidx1.i = getelementptr inbounds %MatchExpressionNode, ptr %5, i64 0, i32 3
  %22 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  store ptr %22, ptr %memberidx1.i, align 8
  %23 = load ptr, ptr %memberidx, align 8
  %24 = load i64, ptr %23, align 4
  %25 = icmp eq i64 %24, 33
  %memberidx2.i.i70.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %26 = load ptr, ptr %memberidx2.i.i70.i, align 8
  %memberidx3.i.i71.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx3.i.i71.i, align 4
  %28 = icmp eq i64 %27, 0
  %29 = and i1 %25, %28
  br i1 %29, label %while.entry.i74.i.preheader, label %Parser_new_lines.exit81.i

while.entry.i74.i.preheader:                      ; preds = %Parser_eat.exit.i
  %memberidx.i11.i72.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %30 = load ptr, ptr %0, align 8
  %memberidx2.i12.i73.i = getelementptr inbounds %Array_Token_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i11.i72.i, align 4
  %32 = load i64, ptr %memberidx2.i12.i73.i, align 4
  %33 = icmp slt i64 %31, %32
  br i1 %33, label %while.entry.i74.i, label %while.entry.i74.i.us

while.entry.i74.i.us:                             ; preds = %while.entry.i74.i.preheader, %while.entry.i74.i.us
  br label %while.entry.i74.i.us

while.entry.i74.i:                                ; preds = %while.entry.i74.i.preheader, %Parser_advance.exit.i80.i
  %34 = phi i64 [ %43, %Parser_advance.exit.i80.i ], [ %31, %while.entry.i74.i.preheader ]
  %35 = load i64, ptr %memberidx2.i12.i73.i, align 4
  %36 = icmp slt i64 %34, %35
  br i1 %36, label %if.entry.i.i76.i, label %Parser_advance.exit.i80.i

if.entry.i.i76.i:                                 ; preds = %while.entry.i74.i
  %37 = add nsw i64 %34, 1
  store i64 %37, ptr %memberidx.i11.i72.i, align 4
  %38 = load ptr, ptr %30, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  store ptr %40, ptr %memberidx, align 8
  %.pre139 = load i64, ptr %40, align 4
  %.pre140 = load i64, ptr %memberidx3.i.i71.i, align 4
  br label %Parser_advance.exit.i80.i

Parser_advance.exit.i80.i:                        ; preds = %if.entry.i.i76.i, %while.entry.i74.i
  %41 = phi i64 [ %.pre140, %if.entry.i.i76.i ], [ 0, %while.entry.i74.i ]
  %42 = phi i64 [ %.pre139, %if.entry.i.i76.i ], [ 33, %while.entry.i74.i ]
  %43 = phi i64 [ %37, %if.entry.i.i76.i ], [ %34, %while.entry.i74.i ]
  %44 = icmp eq i64 %42, 33
  %45 = icmp eq i64 %41, 0
  %46 = and i1 %44, %45
  br i1 %46, label %while.entry.i74.i, label %Parser_new_lines.exit81.i

Parser_new_lines.exit81.i:                        ; preds = %Parser_advance.exit.i80.i, %Parser_eat.exit.i
  %47 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 27)
  %48 = load ptr, ptr %memberidx, align 8
  %49 = load i64, ptr %48, align 4
  %50 = icmp eq i64 %49, 33
  %51 = load ptr, ptr %memberidx2.i.i70.i, align 8
  %memberidx3.i.i57.i = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx3.i.i57.i, align 4
  %53 = icmp eq i64 %52, 0
  %54 = and i1 %50, %53
  br i1 %54, label %while.entry.i60.i.preheader, label %Parser_new_lines.exit67.i

while.entry.i60.i.preheader:                      ; preds = %Parser_new_lines.exit81.i
  %memberidx.i11.i58.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %55 = load ptr, ptr %0, align 8
  %memberidx2.i12.i59.i = getelementptr inbounds %Array_Token_, ptr %55, i64 0, i32 1
  %56 = load i64, ptr %memberidx.i11.i58.i, align 4
  %57 = load i64, ptr %memberidx2.i12.i59.i, align 4
  %58 = icmp slt i64 %56, %57
  br i1 %58, label %while.entry.i60.i, label %while.entry.i60.i.us

while.entry.i60.i.us:                             ; preds = %while.entry.i60.i.preheader, %while.entry.i60.i.us
  br label %while.entry.i60.i.us

while.entry.i60.i:                                ; preds = %while.entry.i60.i.preheader, %Parser_advance.exit.i66.i
  %59 = phi i64 [ %67, %Parser_advance.exit.i66.i ], [ 33, %while.entry.i60.i.preheader ]
  %60 = phi i64 [ %70, %Parser_advance.exit.i66.i ], [ %56, %while.entry.i60.i.preheader ]
  %61 = load i64, ptr %memberidx2.i12.i59.i, align 4
  %62 = icmp slt i64 %60, %61
  br i1 %62, label %if.entry.i.i62.i, label %Parser_advance.exit.i66.i

if.entry.i.i62.i:                                 ; preds = %while.entry.i60.i
  %63 = add nsw i64 %60, 1
  store i64 %63, ptr %memberidx.i11.i58.i, align 4
  %64 = load ptr, ptr %55, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  store ptr %66, ptr %memberidx, align 8
  %.pre141 = load i64, ptr %66, align 4
  %.pre142 = load i64, ptr %memberidx3.i.i57.i, align 4
  br label %Parser_advance.exit.i66.i

Parser_advance.exit.i66.i:                        ; preds = %if.entry.i.i62.i, %while.entry.i60.i
  %67 = phi i64 [ %.pre141, %if.entry.i.i62.i ], [ %59, %while.entry.i60.i ]
  %68 = phi i64 [ %.pre142, %if.entry.i.i62.i ], [ 0, %while.entry.i60.i ]
  %69 = phi i64 [ %.pre141, %if.entry.i.i62.i ], [ 33, %while.entry.i60.i ]
  %70 = phi i64 [ %63, %if.entry.i.i62.i ], [ %60, %while.entry.i60.i ]
  %71 = icmp eq i64 %69, 33
  %72 = icmp eq i64 %68, 0
  %73 = and i1 %71, %72
  br i1 %73, label %while.entry.i60.i, label %Parser_new_lines.exit67.i

Parser_new_lines.exit67.i:                        ; preds = %Parser_advance.exit.i66.i, %Parser_new_lines.exit81.i
  %74 = phi i64 [ %49, %Parser_new_lines.exit81.i ], [ %67, %Parser_advance.exit.i66.i ]
  %75 = phi i64 [ %52, %Parser_new_lines.exit81.i ], [ %68, %Parser_advance.exit.i66.i ]
  %.fr = freeze i64 %75
  %76 = icmp eq i64 %.fr, 0
  br i1 %76, label %switch.early.test, label %Parser_parse_match_expression.exit

switch.early.test:                                ; preds = %Parser_new_lines.exit67.i
  switch i64 %74, label %while.entry.i.preheader [
    i64 46, label %Parser_parse_match_expression.exit
    i64 28, label %Parser_parse_match_expression.exit
  ]

while.entry.i.preheader:                          ; preds = %switch.early.test
  %memberidx.i11.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %switch.early.test85
  %77 = phi i64 [ %74, %while.entry.i.preheader ], [ %160, %switch.early.test85 ]
  %78 = icmp eq i64 %77, 58
  br i1 %78, label %if.entry.i53, label %else.i

if.entry.i53:                                     ; preds = %while.entry.i
  %79 = load i64, ptr %memberidx.i11.i.i, align 4
  %80 = load ptr, ptr %0, align 8
  %memberidx2.i49.i = getelementptr inbounds %Array_Token_, ptr %80, i64 0, i32 1
  %81 = load i64, ptr %memberidx2.i49.i, align 4
  %82 = icmp slt i64 %79, %81
  br i1 %82, label %if.entry.i.i, label %Parser_advance.exit.i

if.entry.i.i:                                     ; preds = %if.entry.i53
  %83 = add nsw i64 %79, 1
  store i64 %83, ptr %memberidx.i11.i.i, align 4
  %84 = load ptr, ptr %80, align 8
  %85 = getelementptr inbounds ptr, ptr %84, i64 %83
  %86 = load ptr, ptr %85, align 8
  store ptr %86, ptr %memberidx, align 8
  br label %Parser_advance.exit.i

Parser_advance.exit.i:                            ; preds = %if.entry.i.i, %if.entry.i53
  %87 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %88 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  store ptr %88, ptr %memberidx3.i85.i, align 8
  %89 = load ptr, ptr %memberidx, align 8
  %90 = load i64, ptr %89, align 4
  %91 = icmp eq i64 %90, 33
  %92 = load ptr, ptr %memberidx2.i.i70.i, align 8
  %memberidx3.i.i37.i = getelementptr inbounds %Array_FloError_, ptr %92, i64 0, i32 1
  %93 = load i64, ptr %memberidx3.i.i37.i, align 4
  %94 = icmp eq i64 %93, 0
  %95 = and i1 %91, %94
  br i1 %95, label %while.entry.i40.i.preheader, label %ifend.i61

while.entry.i40.i.preheader:                      ; preds = %Parser_advance.exit.i
  %96 = load ptr, ptr %0, align 8
  %memberidx2.i12.i39.i = getelementptr inbounds %Array_Token_, ptr %96, i64 0, i32 1
  %97 = load i64, ptr %memberidx.i11.i.i, align 4
  %98 = load i64, ptr %memberidx2.i12.i39.i, align 4
  %99 = icmp slt i64 %97, %98
  br i1 %99, label %while.entry.i40.i, label %while.entry.i40.i.us

while.entry.i40.i.us:                             ; preds = %while.entry.i40.i.preheader, %while.entry.i40.i.us
  br label %while.entry.i40.i.us

while.entry.i40.i:                                ; preds = %while.entry.i40.i.preheader, %Parser_advance.exit.i46.i
  %100 = phi i64 [ %108, %Parser_advance.exit.i46.i ], [ 0, %while.entry.i40.i.preheader ]
  %101 = phi i64 [ %111, %Parser_advance.exit.i46.i ], [ %97, %while.entry.i40.i.preheader ]
  %102 = load i64, ptr %memberidx2.i12.i39.i, align 4
  %103 = icmp slt i64 %101, %102
  br i1 %103, label %if.entry.i.i42.i, label %Parser_advance.exit.i46.i

if.entry.i.i42.i:                                 ; preds = %while.entry.i40.i
  %104 = add nsw i64 %101, 1
  store i64 %104, ptr %memberidx.i11.i.i, align 4
  %105 = load ptr, ptr %96, align 8
  %106 = getelementptr inbounds ptr, ptr %105, i64 %104
  %107 = load ptr, ptr %106, align 8
  store ptr %107, ptr %memberidx, align 8
  %.pre148 = load i64, ptr %107, align 4
  %.pre149 = load i64, ptr %memberidx3.i.i37.i, align 4
  br label %Parser_advance.exit.i46.i

Parser_advance.exit.i46.i:                        ; preds = %if.entry.i.i42.i, %while.entry.i40.i
  %108 = phi i64 [ %.pre149, %if.entry.i.i42.i ], [ %100, %while.entry.i40.i ]
  %109 = phi i64 [ %.pre149, %if.entry.i.i42.i ], [ 0, %while.entry.i40.i ]
  %110 = phi i64 [ %.pre148, %if.entry.i.i42.i ], [ 33, %while.entry.i40.i ]
  %111 = phi i64 [ %104, %if.entry.i.i42.i ], [ %101, %while.entry.i40.i ]
  %112 = icmp eq i64 %110, 33
  %113 = icmp eq i64 %109, 0
  %114 = and i1 %112, %113
  br i1 %114, label %while.entry.i40.i, label %ifend.i61

else.i:                                           ; preds = %while.entry.i
  %115 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %116 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %117 = tail call fastcc ptr @Parser_parse_block(ptr nonnull %0)
  %118 = load ptr, ptr %memberidx, align 8
  %119 = load i64, ptr %118, align 4
  %120 = icmp eq i64 %119, 33
  %121 = load ptr, ptr %memberidx2.i.i70.i, align 8
  %memberidx3.i.i.i55 = getelementptr inbounds %Array_FloError_, ptr %121, i64 0, i32 1
  %122 = load i64, ptr %memberidx3.i.i.i55, align 4
  %123 = icmp eq i64 %122, 0
  %124 = and i1 %120, %123
  br i1 %124, label %while.entry.i.i.preheader, label %Parser_new_lines.exit.i

while.entry.i.i.preheader:                        ; preds = %else.i
  %125 = load ptr, ptr %0, align 8
  %memberidx2.i12.i.i = getelementptr inbounds %Array_Token_, ptr %125, i64 0, i32 1
  %126 = load i64, ptr %memberidx.i11.i.i, align 4
  %127 = load i64, ptr %memberidx2.i12.i.i, align 4
  %128 = icmp slt i64 %126, %127
  br i1 %128, label %while.entry.i.i, label %while.entry.i.i.us

while.entry.i.i.us:                               ; preds = %while.entry.i.i.preheader, %while.entry.i.i.us
  br label %while.entry.i.i.us

while.entry.i.i:                                  ; preds = %while.entry.i.i.preheader, %Parser_advance.exit.i.i
  %129 = phi i64 [ %138, %Parser_advance.exit.i.i ], [ %126, %while.entry.i.i.preheader ]
  %130 = load i64, ptr %memberidx2.i12.i.i, align 4
  %131 = icmp slt i64 %129, %130
  br i1 %131, label %if.entry.i.i.i, label %Parser_advance.exit.i.i

if.entry.i.i.i:                                   ; preds = %while.entry.i.i
  %132 = add nsw i64 %129, 1
  store i64 %132, ptr %memberidx.i11.i.i, align 4
  %133 = load ptr, ptr %125, align 8
  %134 = getelementptr inbounds ptr, ptr %133, i64 %132
  %135 = load ptr, ptr %134, align 8
  store ptr %135, ptr %memberidx, align 8
  %.pre143 = load i64, ptr %135, align 4
  %.pre144 = load i64, ptr %memberidx3.i.i.i55, align 4
  br label %Parser_advance.exit.i.i

Parser_advance.exit.i.i:                          ; preds = %if.entry.i.i.i, %while.entry.i.i
  %136 = phi i64 [ %.pre144, %if.entry.i.i.i ], [ 0, %while.entry.i.i ]
  %137 = phi i64 [ %.pre143, %if.entry.i.i.i ], [ 33, %while.entry.i.i ]
  %138 = phi i64 [ %132, %if.entry.i.i.i ], [ %129, %while.entry.i.i ]
  %139 = icmp eq i64 %137, 33
  %140 = icmp eq i64 %136, 0
  %141 = and i1 %139, %140
  br i1 %141, label %while.entry.i.i, label %Parser_new_lines.exit.i

Parser_new_lines.exit.i:                          ; preds = %Parser_advance.exit.i.i, %else.i
  %142 = tail call ptr @malloc(i32 16)
  store ptr %115, ptr %142, align 8
  %memberidx1.i.i56 = getelementptr inbounds %MatchExpressionCaseNode, ptr %142, i64 0, i32 1
  store ptr %117, ptr %memberidx1.i.i56, align 8
  %143 = load i64, ptr %memberidx.i5.i.i, align 4
  %144 = add i64 %143, 1
  %145 = load i64, ptr %memberidx1.i.i.i51, align 4
  %146 = icmp slt i64 %145, %144
  %.pre145 = load ptr, ptr %20, align 8
  br i1 %146, label %while.entry.i.i.i, label %Array_MatchExpressionCaseNode____sl__.exit.i

while.entry.i.i.i:                                ; preds = %Parser_new_lines.exit.i, %while.entry.i.i.i
  %147 = phi ptr [ %151, %while.entry.i.i.i ], [ %.pre145, %Parser_new_lines.exit.i ]
  %148 = phi i64 [ %152, %while.entry.i.i.i ], [ %145, %Parser_new_lines.exit.i ]
  %149 = shl nuw i64 %148, 1
  store i64 %149, ptr %memberidx1.i.i.i51, align 4
  %150 = shl i64 %148, 4
  %151 = tail call ptr @realloc(ptr %147, i64 %150)
  store ptr %151, ptr %20, align 8
  %152 = load i64, ptr %memberidx1.i.i.i51, align 4
  %153 = icmp slt i64 %152, %144
  br i1 %153, label %while.entry.i.i.i, label %Array_MatchExpressionCaseNode____sl__.exit.i.loopexit

Array_MatchExpressionCaseNode____sl__.exit.i.loopexit: ; preds = %while.entry.i.i.i
  %.pre146 = load i64, ptr %memberidx.i5.i.i, align 4
  %.pre152 = add nsw i64 %.pre146, 1
  br label %Array_MatchExpressionCaseNode____sl__.exit.i

Array_MatchExpressionCaseNode____sl__.exit.i:     ; preds = %Parser_new_lines.exit.i, %Array_MatchExpressionCaseNode____sl__.exit.i.loopexit
  %.pre-phi = phi i64 [ %.pre152, %Array_MatchExpressionCaseNode____sl__.exit.i.loopexit ], [ %144, %Parser_new_lines.exit.i ]
  %154 = phi ptr [ %151, %Array_MatchExpressionCaseNode____sl__.exit.i.loopexit ], [ %.pre145, %Parser_new_lines.exit.i ]
  %155 = phi i64 [ %.pre146, %Array_MatchExpressionCaseNode____sl__.exit.i.loopexit ], [ %143, %Parser_new_lines.exit.i ]
  store i64 %.pre-phi, ptr %memberidx.i5.i.i, align 4
  %156 = getelementptr inbounds ptr, ptr %154, i64 %155
  store ptr %142, ptr %156, align 8
  %.pre150 = load ptr, ptr %memberidx2.i.i70.i, align 8
  %memberidx3.i.i60.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre150, i64 0, i32 1
  %.pre151 = load i64, ptr %memberidx3.i.i60.phi.trans.insert, align 4
  br label %ifend.i61

ifend.i61:                                        ; preds = %Parser_advance.exit.i46.i, %Parser_advance.exit.i, %Array_MatchExpressionCaseNode____sl__.exit.i
  %157 = phi i64 [ %93, %Parser_advance.exit.i ], [ %.pre151, %Array_MatchExpressionCaseNode____sl__.exit.i ], [ %108, %Parser_advance.exit.i46.i ]
  %.fr119 = freeze i64 %157
  %158 = icmp eq i64 %.fr119, 0
  br i1 %158, label %switch.early.test85, label %Parser_parse_match_expression.exit

switch.early.test85:                              ; preds = %ifend.i61
  %159 = load ptr, ptr %memberidx, align 8
  %160 = load i64, ptr %159, align 4
  switch i64 %160, label %while.entry.i [
    i64 46, label %Parser_parse_match_expression.exit
    i64 28, label %Parser_parse_match_expression.exit
  ]

Parser_parse_match_expression.exit:               ; preds = %switch.early.test85, %switch.early.test85, %ifend.i61, %switch.early.test, %switch.early.test, %Parser_new_lines.exit67.i
  %161 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 28)
  br label %common.ret120

ifend:                                            ; preds = %1
  %162 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %163 = load ptr, ptr %memberidx, align 8
  %164 = load i64, ptr %163, align 4
  %165 = and i64 %164, -2
  %166 = icmp eq i64 %165, 8
  %167 = icmp ne i64 %164, 46
  %memberidx2.i.i19.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 1
  %168 = load ptr, ptr %memberidx2.i.i19.i, align 8
  %memberidx3.i.i20.i = getelementptr inbounds %Array_FloError_, ptr %168, i64 0, i32 1
  %169 = load i64, ptr %memberidx3.i.i20.i, align 4
  %170 = icmp eq i64 %169, 0
  %171 = and i1 %167, %170
  %172 = and i1 %166, %171
  br i1 %172, label %while.entry.i.i97.preheader, label %Parser_parse_bit_expression.exit.i

while.entry.i.i97.preheader:                      ; preds = %ifend
  %173 = icmp eq i64 %164, 9
  %174 = icmp eq i64 %164, 8
  %spec.select.i.i.i = select i1 %174, i64 16, i64 0
  %common.ret.op.i.i.i = select i1 %173, i64 15, i64 %spec.select.i.i.i
  %memberidx.i11.i.i95 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  br label %while.entry.i.i97

while.entry.i.i97:                                ; preds = %while.entry.i.i97.preheader, %Parser_advance.exit.i31.i
  %op.0.i.i = phi i64 [ %common.ret.op.i18.i.i, %Parser_advance.exit.i31.i ], [ %common.ret.op.i.i.i, %while.entry.i.i97.preheader ]
  %cmp.0.i.i = phi ptr [ %183, %Parser_advance.exit.i31.i ], [ %162, %while.entry.i.i97.preheader ]
  %175 = load i64, ptr %memberidx.i11.i.i95, align 4
  %176 = load ptr, ptr %0, align 8
  %memberidx2.i12.i.i96 = getelementptr inbounds %Array_Token_, ptr %176, i64 0, i32 1
  %177 = load i64, ptr %memberidx2.i12.i.i96, align 4
  %178 = icmp slt i64 %175, %177
  br i1 %178, label %if.entry.i.i21.i, label %Parser_advance.exit.i31.i

if.entry.i.i21.i:                                 ; preds = %while.entry.i.i97
  %179 = add nsw i64 %175, 1
  store i64 %179, ptr %memberidx.i11.i.i95, align 4
  %180 = load ptr, ptr %176, align 8
  %181 = getelementptr inbounds ptr, ptr %180, i64 %179
  %182 = load ptr, ptr %181, align 8
  store ptr %182, ptr %memberidx, align 8
  br label %Parser_advance.exit.i31.i

Parser_advance.exit.i31.i:                        ; preds = %if.entry.i.i21.i, %while.entry.i.i97
  %183 = tail call ptr @malloc(i32 48)
  %184 = tail call fastcc ptr @Parser_parse_comparison_expression(ptr nonnull %0)
  %185 = load ptr, ptr %cmp.0.i.i, align 8
  %186 = load ptr, ptr %184, align 8
  %187 = tail call ptr @malloc(i32 32)
  %188 = load i64, ptr %185, align 4
  %memberidx1.i.i.i22.i = getelementptr inbounds %FloRange, ptr %186, i64 0, i32 1
  %189 = load i64, ptr %memberidx1.i.i.i22.i, align 4
  %memberidx2.i.i.i23.i = getelementptr inbounds %FloRange, ptr %185, i64 0, i32 2
  %190 = load i64, ptr %memberidx2.i.i.i23.i, align 4
  %memberidx3.i.i.i24.i = getelementptr inbounds %FloRange, ptr %186, i64 0, i32 3
  %191 = load i64, ptr %memberidx3.i.i.i24.i, align 4
  store i64 %188, ptr %187, align 4
  %memberidx1.i.i.i.i25.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 1
  store i64 %189, ptr %memberidx1.i.i.i.i25.i, align 4
  %memberidx2.i.i.i.i26.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 2
  store i64 %190, ptr %memberidx2.i.i.i.i26.i, align 4
  %memberidx3.i.i.i.i27.i = getelementptr inbounds %FloRange, ptr %187, i64 0, i32 3
  store i64 %191, ptr %memberidx3.i.i.i.i27.i, align 4
  store ptr %187, ptr %183, align 8
  %memberidx.i.i.i.i28.i = getelementptr inbounds %StatementNode, ptr %183, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i28.i, align 4
  %memberidx.i.i.i29.i = getelementptr inbounds %ExpressionNode, ptr %183, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i.i29.i, align 4
  %memberidx2.i14.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %183, i64 0, i32 3
  store ptr %cmp.0.i.i, ptr %memberidx2.i14.i.i, align 8
  %memberidx3.i15.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %183, i64 0, i32 4
  store i64 %op.0.i.i, ptr %memberidx3.i15.i.i, align 4
  %memberidx4.i.i30.i = getelementptr inbounds %BinaryExpressionNode, ptr %183, i64 0, i32 5
  store ptr %184, ptr %memberidx4.i.i30.i, align 8
  %192 = load ptr, ptr %memberidx, align 8
  %193 = load i64, ptr %192, align 4
  %194 = icmp eq i64 %193, 9
  %195 = icmp eq i64 %193, 8
  %spec.select.i17.i.i = select i1 %195, i64 16, i64 0
  %common.ret.op.i18.i.i = select i1 %194, i64 15, i64 %spec.select.i17.i.i
  %196 = and i64 %193, -2
  %197 = icmp eq i64 %196, 8
  %198 = icmp ne i64 %193, 46
  %199 = load ptr, ptr %memberidx2.i.i19.i, align 8
  %memberidx3.i21.i.i = getelementptr inbounds %Array_FloError_, ptr %199, i64 0, i32 1
  %200 = load i64, ptr %memberidx3.i21.i.i, align 4
  %201 = icmp eq i64 %200, 0
  %202 = and i1 %198, %201
  %203 = and i1 %197, %202
  br i1 %203, label %while.entry.i.i97, label %Parser_parse_bit_expression.exit.i

Parser_parse_bit_expression.exit.i:               ; preds = %Parser_advance.exit.i31.i, %ifend
  %204 = phi i64 [ %169, %ifend ], [ %200, %Parser_advance.exit.i31.i ]
  %205 = phi i64 [ %164, %ifend ], [ %193, %Parser_advance.exit.i31.i ]
  %cmp.1.i.i = phi ptr [ %162, %ifend ], [ %183, %Parser_advance.exit.i31.i ]
  %206 = icmp eq i64 %205, 52
  %207 = icmp eq i64 %204, 0
  %208 = and i1 %206, %207
  br i1 %208, label %ifend.i.i, label %Parser_parse_range_expression.exit.i

ifend.i.i:                                        ; preds = %Parser_parse_bit_expression.exit.i
  %memberidx.i8.i.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %209 = load i64, ptr %memberidx.i8.i.i, align 4
  %210 = load ptr, ptr %0, align 8
  %memberidx2.i9.i.i99 = getelementptr inbounds %Array_Token_, ptr %210, i64 0, i32 1
  %211 = load i64, ptr %memberidx2.i9.i.i99, align 4
  %212 = icmp slt i64 %209, %211
  br i1 %212, label %if.entry.i.i.i101, label %Parser_advance.exit.i.i102

if.entry.i.i.i101:                                ; preds = %ifend.i.i
  %213 = add nsw i64 %209, 1
  store i64 %213, ptr %memberidx.i8.i.i, align 4
  %214 = load ptr, ptr %210, align 8
  %215 = getelementptr inbounds ptr, ptr %214, i64 %213
  %216 = load ptr, ptr %215, align 8
  store ptr %216, ptr %memberidx, align 8
  br label %Parser_advance.exit.i.i102

Parser_advance.exit.i.i102:                       ; preds = %if.entry.i.i.i101, %ifend.i.i
  %217 = tail call ptr @malloc(i32 48)
  %218 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %219 = load ptr, ptr %cmp.1.i.i, align 8
  %220 = load ptr, ptr %218, align 8
  %221 = tail call ptr @malloc(i32 32)
  %222 = load i64, ptr %219, align 4
  %memberidx1.i.i.i13.i = getelementptr inbounds %FloRange, ptr %220, i64 0, i32 1
  %223 = load i64, ptr %memberidx1.i.i.i13.i, align 4
  %memberidx2.i.i.i14.i = getelementptr inbounds %FloRange, ptr %219, i64 0, i32 2
  %224 = load i64, ptr %memberidx2.i.i.i14.i, align 4
  %memberidx3.i.i.i15.i = getelementptr inbounds %FloRange, ptr %220, i64 0, i32 3
  %225 = load i64, ptr %memberidx3.i.i.i15.i, align 4
  store i64 %222, ptr %221, align 4
  %memberidx1.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %221, i64 0, i32 1
  store i64 %223, ptr %memberidx1.i.i.i.i.i, align 4
  %memberidx2.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %221, i64 0, i32 2
  store i64 %224, ptr %memberidx2.i.i.i.i.i, align 4
  %memberidx3.i.i.i.i.i = getelementptr inbounds %FloRange, ptr %221, i64 0, i32 3
  store i64 %225, ptr %memberidx3.i.i.i.i.i, align 4
  store ptr %221, ptr %217, align 8
  %memberidx.i.i.i.i.i = getelementptr inbounds %StatementNode, ptr %217, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i.i, align 4
  %memberidx.i.i.i16.i = getelementptr inbounds %ExpressionNode, ptr %217, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i.i16.i, align 4
  %memberidx2.i11.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %217, i64 0, i32 3
  store ptr %cmp.1.i.i, ptr %memberidx2.i11.i.i, align 8
  %memberidx3.i12.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %217, i64 0, i32 4
  store i64 31, ptr %memberidx3.i12.i.i, align 4
  %memberidx4.i.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %217, i64 0, i32 5
  store ptr %218, ptr %memberidx4.i.i.i, align 8
  %.pre = load ptr, ptr %memberidx, align 8
  %.pre132 = load i64, ptr %.pre, align 4
  br label %Parser_parse_range_expression.exit.i

Parser_parse_range_expression.exit.i:             ; preds = %Parser_advance.exit.i.i102, %Parser_parse_bit_expression.exit.i
  %226 = phi i64 [ %.pre132, %Parser_advance.exit.i.i102 ], [ %205, %Parser_parse_bit_expression.exit.i ]
  %common.ret.op.i.i103 = phi ptr [ %217, %Parser_advance.exit.i.i102 ], [ %cmp.1.i.i, %Parser_parse_bit_expression.exit.i ]
  %.not.i = icmp eq i64 %226, 74
  br i1 %.not.i, label %ifend.i, label %Parser_parse_typecast_expression.exit

ifend.i:                                          ; preds = %Parser_parse_range_expression.exit.i
  %memberidx.i.i106 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %227 = load i64, ptr %memberidx.i.i106, align 4
  %228 = load ptr, ptr %0, align 8
  %memberidx2.i.i107 = getelementptr inbounds %Array_Token_, ptr %228, i64 0, i32 1
  %229 = load i64, ptr %memberidx2.i.i107, align 4
  %230 = icmp slt i64 %227, %229
  br i1 %230, label %if.entry.i.i109, label %Parser_advance.exit.i118

if.entry.i.i109:                                  ; preds = %ifend.i
  %231 = add nsw i64 %227, 1
  store i64 %231, ptr %memberidx.i.i106, align 4
  %232 = load ptr, ptr %228, align 8
  %233 = getelementptr inbounds ptr, ptr %232, i64 %231
  %234 = load ptr, ptr %233, align 8
  store ptr %234, ptr %memberidx, align 8
  br label %Parser_advance.exit.i118

Parser_advance.exit.i118:                         ; preds = %if.entry.i.i109, %ifend.i
  %235 = tail call ptr @malloc(i32 40)
  %236 = tail call fastcc ptr @Parser_parse_type(ptr nonnull %0)
  %237 = load ptr, ptr %common.ret.op.i.i103, align 8
  %238 = load ptr, ptr %236, align 8
  %239 = tail call ptr @malloc(i32 32)
  %240 = load i64, ptr %237, align 4
  %memberidx1.i.i.i110 = getelementptr inbounds %FloRange, ptr %238, i64 0, i32 1
  %241 = load i64, ptr %memberidx1.i.i.i110, align 4
  %memberidx2.i.i.i111 = getelementptr inbounds %FloRange, ptr %237, i64 0, i32 2
  %242 = load i64, ptr %memberidx2.i.i.i111, align 4
  %memberidx3.i.i.i112 = getelementptr inbounds %FloRange, ptr %238, i64 0, i32 3
  %243 = load i64, ptr %memberidx3.i.i.i112, align 4
  store i64 %240, ptr %239, align 4
  %memberidx1.i.i.i.i113 = getelementptr inbounds %FloRange, ptr %239, i64 0, i32 1
  store i64 %241, ptr %memberidx1.i.i.i.i113, align 4
  %memberidx2.i.i.i.i114 = getelementptr inbounds %FloRange, ptr %239, i64 0, i32 2
  store i64 %242, ptr %memberidx2.i.i.i.i114, align 4
  %memberidx3.i.i.i.i115 = getelementptr inbounds %FloRange, ptr %239, i64 0, i32 3
  store i64 %243, ptr %memberidx3.i.i.i.i115, align 4
  store ptr %239, ptr %235, align 8
  %memberidx.i.i.i.i116 = getelementptr inbounds %StatementNode, ptr %235, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i116, align 4
  %memberidx.i.i.i117 = getelementptr inbounds %ExpressionNode, ptr %235, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i117, align 4
  %memberidx2.i6.i = getelementptr inbounds %TypeCastExpressionNode, ptr %235, i64 0, i32 3
  store ptr %common.ret.op.i.i103, ptr %memberidx2.i6.i, align 8
  %memberidx3.i7.i = getelementptr inbounds %TypeCastExpressionNode, ptr %235, i64 0, i32 4
  store ptr %236, ptr %memberidx3.i7.i, align 8
  %.pre133 = load ptr, ptr %memberidx, align 8
  %.pre134 = load i64, ptr %.pre133, align 4
  br label %Parser_parse_typecast_expression.exit

Parser_parse_typecast_expression.exit:            ; preds = %Parser_parse_range_expression.exit.i, %Parser_advance.exit.i118
  %244 = phi i64 [ %.pre134, %Parser_advance.exit.i118 ], [ %226, %Parser_parse_range_expression.exit.i ]
  %common.ret.op.i105 = phi ptr [ %235, %Parser_advance.exit.i118 ], [ %common.ret.op.i.i103, %Parser_parse_range_expression.exit.i ]
  %245 = icmp eq i64 %244, 36
  %246 = load ptr, ptr %memberidx2.i.i19.i, align 8
  %memberidx3.i.i65 = getelementptr inbounds %Array_FloError_, ptr %246, i64 0, i32 1
  %247 = load i64, ptr %memberidx3.i.i65, align 4
  %248 = icmp eq i64 %247, 0
  %249 = and i1 %245, %248
  br i1 %249, label %ifend.i68, label %Parser_parse_ternary_expression.exit

ifend.i68:                                        ; preds = %Parser_parse_typecast_expression.exit
  %memberidx.i10.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %250 = load i64, ptr %memberidx.i10.i, align 4
  %251 = load ptr, ptr %0, align 8
  %memberidx2.i11.i = getelementptr inbounds %Array_Token_, ptr %251, i64 0, i32 1
  %252 = load i64, ptr %memberidx2.i11.i, align 4
  %253 = icmp slt i64 %250, %252
  br i1 %253, label %if.entry.i.i69, label %Parser_advance.exit.i75

if.entry.i.i69:                                   ; preds = %ifend.i68
  %254 = add nsw i64 %250, 1
  store i64 %254, ptr %memberidx.i10.i, align 4
  %255 = load ptr, ptr %251, align 8
  %256 = getelementptr inbounds ptr, ptr %255, i64 %254
  %257 = load ptr, ptr %256, align 8
  store ptr %257, ptr %memberidx, align 8
  br label %Parser_advance.exit.i75

Parser_advance.exit.i75:                          ; preds = %if.entry.i.i69, %ifend.i68
  %258 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %259 = tail call fastcc ptr @Parser_eat(ptr nonnull %0, i64 1)
  %260 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %261 = tail call ptr @malloc(i32 48)
  %262 = load ptr, ptr %common.ret.op.i105, align 8
  %263 = load ptr, ptr %260, align 8
  %264 = tail call ptr @malloc(i32 32)
  %265 = load i64, ptr %262, align 4
  %memberidx1.i.i.i70 = getelementptr inbounds %FloRange, ptr %263, i64 0, i32 1
  %266 = load i64, ptr %memberidx1.i.i.i70, align 4
  %memberidx2.i.i.i71 = getelementptr inbounds %FloRange, ptr %262, i64 0, i32 2
  %267 = load i64, ptr %memberidx2.i.i.i71, align 4
  %memberidx3.i.i.i72 = getelementptr inbounds %FloRange, ptr %263, i64 0, i32 3
  %268 = load i64, ptr %memberidx3.i.i.i72, align 4
  store i64 %265, ptr %264, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %264, i64 0, i32 1
  store i64 %266, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %264, i64 0, i32 2
  store i64 %267, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %264, i64 0, i32 3
  store i64 %268, ptr %memberidx3.i.i.i.i, align 4
  store ptr %264, ptr %261, align 8
  %memberidx.i.i.i.i73 = getelementptr inbounds %StatementNode, ptr %261, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i73, align 4
  %memberidx.i.i.i74 = getelementptr inbounds %ExpressionNode, ptr %261, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i.i74, align 4
  %memberidx2.i13.i = getelementptr inbounds %TernaryExpressionNode, ptr %261, i64 0, i32 3
  store ptr %common.ret.op.i105, ptr %memberidx2.i13.i, align 8
  %memberidx3.i14.i = getelementptr inbounds %TernaryExpressionNode, ptr %261, i64 0, i32 4
  store ptr %258, ptr %memberidx3.i14.i, align 8
  %memberidx4.i.i = getelementptr inbounds %TernaryExpressionNode, ptr %261, i64 0, i32 5
  store ptr %260, ptr %memberidx4.i.i, align 8
  %269 = load ptr, ptr %258, align 8
  %270 = load ptr, ptr %260, align 8
  %271 = tail call ptr @malloc(i32 32)
  %272 = load i64, ptr %269, align 4
  %memberidx1.i15.i.i = getelementptr inbounds %FloRange, ptr %270, i64 0, i32 1
  %273 = load i64, ptr %memberidx1.i15.i.i, align 4
  %memberidx2.i16.i.i = getelementptr inbounds %FloRange, ptr %269, i64 0, i32 2
  %274 = load i64, ptr %memberidx2.i16.i.i, align 4
  %memberidx3.i17.i.i = getelementptr inbounds %FloRange, ptr %270, i64 0, i32 3
  %275 = load i64, ptr %memberidx3.i17.i.i, align 4
  store i64 %272, ptr %271, align 4
  %memberidx1.i.i18.i.i = getelementptr inbounds %FloRange, ptr %271, i64 0, i32 1
  store i64 %273, ptr %memberidx1.i.i18.i.i, align 4
  %memberidx2.i.i19.i.i = getelementptr inbounds %FloRange, ptr %271, i64 0, i32 2
  store i64 %274, ptr %memberidx2.i.i19.i.i, align 4
  %memberidx3.i.i20.i.i = getelementptr inbounds %FloRange, ptr %271, i64 0, i32 3
  store i64 %275, ptr %memberidx3.i.i20.i.i, align 4
  store ptr %271, ptr %261, align 8
  %.pre135 = load ptr, ptr %memberidx, align 8
  %.pre136 = load i64, ptr %.pre135, align 4
  %.pre137 = load ptr, ptr %memberidx2.i.i19.i, align 8
  %memberidx3.i49.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre137, i64 0, i32 1
  %.pre138 = load i64, ptr %memberidx3.i49.phi.trans.insert, align 4
  br label %Parser_parse_ternary_expression.exit

Parser_parse_ternary_expression.exit:             ; preds = %Parser_parse_typecast_expression.exit, %Parser_advance.exit.i75
  %276 = phi i64 [ %.pre138, %Parser_advance.exit.i75 ], [ %247, %Parser_parse_typecast_expression.exit ]
  %277 = phi i64 [ %.pre136, %Parser_advance.exit.i75 ], [ %244, %Parser_parse_typecast_expression.exit ]
  %common.ret.op.i66 = phi ptr [ %261, %Parser_advance.exit.i75 ], [ %common.ret.op.i105, %Parser_parse_typecast_expression.exit ]
  %278 = icmp eq i64 %277, 69
  %279 = icmp eq i64 %276, 0
  %280 = and i1 %278, %279
  br i1 %280, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %Parser_parse_ternary_expression.exit
  %memberidx.i41 = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %281 = load i64, ptr %memberidx.i41, align 4
  %282 = load ptr, ptr %0, align 8
  %memberidx2.i42 = getelementptr inbounds %Array_Token_, ptr %282, i64 0, i32 1
  %283 = load i64, ptr %memberidx2.i42, align 4
  %284 = icmp slt i64 %281, %283
  br i1 %284, label %if.entry.i44, label %Parser_advance.exit46

if.entry.i44:                                     ; preds = %if.entry4
  %285 = add nsw i64 %281, 1
  store i64 %285, ptr %memberidx.i41, align 4
  %286 = load ptr, ptr %282, align 8
  %287 = getelementptr inbounds ptr, ptr %286, i64 %285
  %288 = load ptr, ptr %287, align 8
  store ptr %288, ptr %memberidx, align 8
  br label %Parser_advance.exit46

Parser_advance.exit46:                            ; preds = %if.entry4, %if.entry.i44
  %289 = tail call ptr @malloc(i32 48)
  %290 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %291 = load ptr, ptr %common.ret.op.i66, align 8
  %292 = load ptr, ptr %290, align 8
  %293 = tail call ptr @malloc(i32 32)
  %294 = load i64, ptr %291, align 4
  %memberidx1.i.i30 = getelementptr inbounds %FloRange, ptr %292, i64 0, i32 1
  %295 = load i64, ptr %memberidx1.i.i30, align 4
  %memberidx2.i.i31 = getelementptr inbounds %FloRange, ptr %291, i64 0, i32 2
  %296 = load i64, ptr %memberidx2.i.i31, align 4
  %memberidx3.i.i32 = getelementptr inbounds %FloRange, ptr %292, i64 0, i32 3
  %297 = load i64, ptr %memberidx3.i.i32, align 4
  store i64 %294, ptr %293, align 4
  %memberidx1.i.i.i33 = getelementptr inbounds %FloRange, ptr %293, i64 0, i32 1
  store i64 %295, ptr %memberidx1.i.i.i33, align 4
  %memberidx2.i.i.i34 = getelementptr inbounds %FloRange, ptr %293, i64 0, i32 2
  store i64 %296, ptr %memberidx2.i.i.i34, align 4
  %memberidx3.i.i.i35 = getelementptr inbounds %FloRange, ptr %293, i64 0, i32 3
  store i64 %297, ptr %memberidx3.i.i.i35, align 4
  store ptr %293, ptr %289, align 8
  %memberidx.i.i.i36 = getelementptr inbounds %StatementNode, ptr %289, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i36, align 4
  %memberidx.i.i37 = getelementptr inbounds %ExpressionNode, ptr %289, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i37, align 4
  %memberidx2.i38 = getelementptr inbounds %BinaryExpressionNode, ptr %289, i64 0, i32 3
  store ptr %common.ret.op.i66, ptr %memberidx2.i38, align 8
  %memberidx3.i39 = getelementptr inbounds %BinaryExpressionNode, ptr %289, i64 0, i32 4
  store i64 18, ptr %memberidx3.i39, align 4
  %memberidx4.i40 = getelementptr inbounds %BinaryExpressionNode, ptr %289, i64 0, i32 5
  store ptr %290, ptr %memberidx4.i40, align 8
  br label %common.ret120

ifend6:                                           ; preds = %Parser_parse_ternary_expression.exit
  switch i64 %277, label %ifend51.i [
    i64 38, label %Parser_is_assign_op.exit
    i64 12, label %Parser_is_assign_op.exit.fold.split
    i64 13, label %Parser_is_assign_op.exit.fold.split86
    i64 14, label %Parser_is_assign_op.exit.fold.split87
    i64 15, label %Parser_is_assign_op.exit.fold.split88
    i64 16, label %Parser_is_assign_op.exit.fold.split89
    i64 17, label %Parser_is_assign_op.exit.fold.split90
    i64 18, label %Parser_is_assign_op.exit.fold.split91
    i64 19, label %Parser_is_assign_op.exit.fold.split92
    i64 20, label %Parser_is_assign_op.exit.fold.split93
    i64 22, label %Parser_is_assign_op.exit.fold.split94
  ]

ifend51.i:                                        ; preds = %ifend6
  %298 = icmp eq i64 %277, 21
  %spec.select.i = select i1 %298, i64 30, i64 0
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split:              ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split86:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split87:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split88:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split89:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split90:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split91:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split92:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split93:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit.fold.split94:            ; preds = %ifend6
  br label %Parser_is_assign_op.exit

Parser_is_assign_op.exit:                         ; preds = %ifend6, %Parser_is_assign_op.exit.fold.split94, %Parser_is_assign_op.exit.fold.split93, %Parser_is_assign_op.exit.fold.split92, %Parser_is_assign_op.exit.fold.split91, %Parser_is_assign_op.exit.fold.split90, %Parser_is_assign_op.exit.fold.split89, %Parser_is_assign_op.exit.fold.split88, %Parser_is_assign_op.exit.fold.split87, %Parser_is_assign_op.exit.fold.split86, %Parser_is_assign_op.exit.fold.split, %ifend51.i
  %common.ret.op.i = phi i64 [ 19, %ifend6 ], [ %spec.select.i, %ifend51.i ], [ 22, %Parser_is_assign_op.exit.fold.split ], [ 21, %Parser_is_assign_op.exit.fold.split86 ], [ 20, %Parser_is_assign_op.exit.fold.split87 ], [ 23, %Parser_is_assign_op.exit.fold.split88 ], [ 24, %Parser_is_assign_op.exit.fold.split89 ], [ 25, %Parser_is_assign_op.exit.fold.split90 ], [ 26, %Parser_is_assign_op.exit.fold.split91 ], [ 27, %Parser_is_assign_op.exit.fold.split92 ], [ 28, %Parser_is_assign_op.exit.fold.split93 ], [ 29, %Parser_is_assign_op.exit.fold.split94 ]
  %299 = icmp ne i64 %common.ret.op.i, 0
  %300 = icmp ne i64 %277, 46
  %301 = and i1 %300, %279
  %302 = and i1 %301, %299
  br i1 %302, label %ifend9, label %common.ret120

ifend9:                                           ; preds = %Parser_is_assign_op.exit
  %memberidx.i = getelementptr inbounds %Parser, ptr %0, i64 0, i32 3
  %303 = load i64, ptr %memberidx.i, align 4
  %304 = load ptr, ptr %0, align 8
  %memberidx2.i24 = getelementptr inbounds %Array_Token_, ptr %304, i64 0, i32 1
  %305 = load i64, ptr %memberidx2.i24, align 4
  %306 = icmp slt i64 %303, %305
  br i1 %306, label %if.entry.i, label %Parser_advance.exit

if.entry.i:                                       ; preds = %ifend9
  %307 = add nsw i64 %303, 1
  store i64 %307, ptr %memberidx.i, align 4
  %308 = load ptr, ptr %304, align 8
  %309 = getelementptr inbounds ptr, ptr %308, i64 %307
  %310 = load ptr, ptr %309, align 8
  store ptr %310, ptr %memberidx, align 8
  br label %Parser_advance.exit

Parser_advance.exit:                              ; preds = %ifend9, %if.entry.i
  %311 = tail call ptr @malloc(i32 48)
  %312 = tail call fastcc ptr @Parser_parse_expression(ptr nonnull %0)
  %313 = load ptr, ptr %common.ret.op.i66, align 8
  %314 = load ptr, ptr %312, align 8
  %315 = tail call ptr @malloc(i32 32)
  %316 = load i64, ptr %313, align 4
  %memberidx1.i.i = getelementptr inbounds %FloRange, ptr %314, i64 0, i32 1
  %317 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %FloRange, ptr %313, i64 0, i32 2
  %318 = load i64, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %FloRange, ptr %314, i64 0, i32 3
  %319 = load i64, ptr %memberidx3.i.i, align 4
  store i64 %316, ptr %315, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %315, i64 0, i32 1
  store i64 %317, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %315, i64 0, i32 2
  store i64 %318, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %315, i64 0, i32 3
  store i64 %319, ptr %memberidx3.i.i.i, align 4
  store ptr %315, ptr %311, align 8
  %memberidx.i.i.i = getelementptr inbounds %StatementNode, ptr %311, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i, align 4
  %memberidx.i.i = getelementptr inbounds %ExpressionNode, ptr %311, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i, align 4
  %memberidx2.i = getelementptr inbounds %BinaryExpressionNode, ptr %311, i64 0, i32 3
  store ptr %common.ret.op.i66, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %BinaryExpressionNode, ptr %311, i64 0, i32 4
  store i64 %common.ret.op.i, ptr %memberidx3.i, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpressionNode, ptr %311, i64 0, i32 5
  store ptr %312, ptr %memberidx4.i, align 8
  br label %common.ret120
}

define internal fastcc ptr @TypeChecker_check_module(ptr %0, ptr nocapture readonly %1, ptr %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  store i1 false, ptr %memberidx, align 1
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %3 = load ptr, ptr %memberidx10, align 8
  %4 = tail call ptr @malloc(i32 80)
  store ptr %2, ptr %4, align 8
  %memberidx1.i205 = getelementptr inbounds %Module, ptr %4, i64 0, i32 4
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Function_, ptr %5, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %6 = tail call ptr @malloc(i32 64)
  store ptr %6, ptr %5, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %5, ptr %memberidx1.i205, align 8
  %memberidx4.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 1
  %7 = tail call ptr @malloc(i32 24)
  %memberidx.i33.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 1
  store i64 0, ptr %memberidx.i33.i, align 4
  %memberidx1.i34.i = getelementptr inbounds %Array_Var_, ptr %7, i64 0, i32 2
  store i64 8, ptr %memberidx1.i34.i, align 4
  %8 = tail call ptr @malloc(i32 64)
  store ptr %8, ptr %7, align 8
  store i64 0, ptr %memberidx.i33.i, align 4
  store ptr %7, ptr %memberidx4.i, align 8
  %memberidx7.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 3
  %9 = tail call ptr @malloc(i32 24)
  %memberidx.i35.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 1
  store i64 0, ptr %memberidx.i35.i, align 4
  %memberidx1.i36.i = getelementptr inbounds %Array_Class_, ptr %9, i64 0, i32 2
  store i64 8, ptr %memberidx1.i36.i, align 4
  %10 = tail call ptr @malloc(i32 64)
  store ptr %10, ptr %9, align 8
  store i64 0, ptr %memberidx.i35.i, align 4
  store ptr %9, ptr %memberidx7.i, align 8
  %memberidx10.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 6
  %11 = tail call ptr @malloc(i32 24)
  %memberidx.i37.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 1
  store i64 0, ptr %memberidx.i37.i, align 4
  %memberidx1.i38.i = getelementptr inbounds %Array_Enum_, ptr %11, i64 0, i32 2
  store i64 8, ptr %memberidx1.i38.i, align 4
  %12 = tail call ptr @malloc(i32 64)
  store ptr %12, ptr %11, align 8
  store i64 0, ptr %memberidx.i37.i, align 4
  store ptr %11, ptr %memberidx10.i, align 8
  %memberidx13.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 7
  %13 = tail call ptr @malloc(i32 24)
  %memberidx.i39.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 1
  store i64 0, ptr %memberidx.i39.i, align 4
  %memberidx1.i40.i = getelementptr inbounds %Array_Scope_, ptr %13, i64 0, i32 2
  store i64 8, ptr %memberidx1.i40.i, align 4
  %14 = tail call ptr @malloc(i32 64)
  store ptr %14, ptr %13, align 8
  store i64 0, ptr %memberidx.i39.i, align 4
  store ptr %13, ptr %memberidx13.i, align 8
  %memberidx16.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 8
  %15 = tail call ptr @malloc(i32 24)
  %memberidx.i41.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 1
  store i64 0, ptr %memberidx.i41.i, align 4
  %memberidx1.i42.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %15, i64 0, i32 2
  store i64 8, ptr %memberidx1.i42.i, align 4
  %16 = tail call ptr @malloc(i32 64)
  store ptr %16, ptr %15, align 8
  store i64 0, ptr %memberidx.i41.i, align 4
  store ptr %15, ptr %memberidx16.i, align 8
  %memberidx19.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 9
  %17 = tail call ptr @malloc(i32 24)
  %memberidx.i43.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 1
  store i64 0, ptr %memberidx.i43.i, align 4
  %memberidx1.i44.i = getelementptr inbounds %Array_VarDeclaration_, ptr %17, i64 0, i32 2
  store i64 8, ptr %memberidx1.i44.i, align 4
  %18 = tail call ptr @malloc(i32 64)
  store ptr %18, ptr %17, align 8
  store i64 0, ptr %memberidx.i43.i, align 4
  store ptr %17, ptr %memberidx19.i, align 8
  %memberidx22.i = getelementptr inbounds %Module, ptr %4, i64 0, i32 2
  %19 = tail call ptr @malloc(i32 24)
  %memberidx.i45.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 1
  store i64 0, ptr %memberidx.i45.i, align 4
  %memberidx1.i46.i = getelementptr inbounds %Array_Const_, ptr %19, i64 0, i32 2
  store i64 8, ptr %memberidx1.i46.i, align 4
  %20 = tail call ptr @malloc(i32 64)
  store ptr %20, ptr %19, align 8
  store i64 0, ptr %memberidx.i45.i, align 4
  store ptr %19, ptr %memberidx22.i, align 8
  %21 = load ptr, ptr %0, align 8
  %22 = load ptr, ptr %21, align 8
  %memberidx13 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx13, align 4
  %24 = add i64 %23, 1
  %memberidx.i.i207 = getelementptr inbounds %Array_Module_, ptr %22, i64 0, i32 2
  %25 = load i64, ptr %memberidx.i.i207, align 4
  %26 = icmp slt i64 %25, %24
  %.pre = load ptr, ptr %22, align 8
  br i1 %26, label %while.entry.i.i, label %Array_Module____sl__.exit

while.entry.i.i:                                  ; preds = %for.entry, %while.entry.i.i
  %27 = phi ptr [ %31, %while.entry.i.i ], [ %.pre, %for.entry ]
  %28 = phi i64 [ %32, %while.entry.i.i ], [ %25, %for.entry ]
  %29 = shl nuw i64 %28, 1
  store i64 %29, ptr %memberidx.i.i207, align 4
  %30 = shl i64 %28, 4
  %31 = tail call ptr @realloc(ptr %27, i64 %30)
  store ptr %31, ptr %22, align 8
  %32 = load i64, ptr %memberidx.i.i207, align 4
  %33 = icmp slt i64 %32, %24
  br i1 %33, label %while.entry.i.i, label %Array_Module____sl__.exit.loopexit

Array_Module____sl__.exit.loopexit:               ; preds = %while.entry.i.i
  %.pre400 = load i64, ptr %memberidx13, align 4
  %.pre420 = add nsw i64 %.pre400, 1
  br label %Array_Module____sl__.exit

Array_Module____sl__.exit:                        ; preds = %for.entry, %Array_Module____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre420, %Array_Module____sl__.exit.loopexit ], [ %24, %for.entry ]
  %34 = phi ptr [ %31, %Array_Module____sl__.exit.loopexit ], [ %.pre, %for.entry ]
  %35 = phi i64 [ %.pre400, %Array_Module____sl__.exit.loopexit ], [ %23, %for.entry ]
  store i64 %.pre-phi, ptr %memberidx13, align 4
  %36 = getelementptr inbounds ptr, ptr %34, i64 %35
  store ptr %4, ptr %36, align 8
  %37 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0, i64 %23)
  %memberidx16 = getelementptr inbounds %Module, ptr %4, i64 0, i32 5
  %38 = load ptr, ptr %37, align 8
  store ptr %38, ptr %memberidx16, align 8
  %memberidx18 = getelementptr inbounds %Scope, ptr %37, i64 0, i32 1
  %39 = load ptr, ptr %memberidx18, align 8
  %40 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %40, align 8
  %41 = tail call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  %memberidx1.i.i208 = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i208, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %41, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %39, ptr nonnull %41, ptr null)
  %42 = load ptr, ptr %memberidx18, align 8
  %43 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %43, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %44 = tail call ptr @malloc(i32 24)
  store ptr %43, ptr %44, align 8
  %memberidx1.i.i209 = getelementptr inbounds %String, ptr %44, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i209, align 4
  %memberidx2.i.i210 = getelementptr inbounds %String, ptr %44, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i210, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %42, ptr nonnull %44, ptr null)
  %45 = load ptr, ptr %memberidx18, align 8
  %46 = tail call ptr @malloc(i32 4)
  store i32 1819047278, ptr %46, align 8
  %47 = tail call ptr @malloc(i32 24)
  store ptr %46, ptr %47, align 8
  %memberidx1.i.i211 = getelementptr inbounds %String, ptr %47, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i211, align 4
  %memberidx2.i.i212 = getelementptr inbounds %String, ptr %47, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i212, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %45, ptr nonnull %47, ptr null)
  %48 = load ptr, ptr %37, align 8
  store ptr %48, ptr %memberidx10, align 8
  %memberidx24 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %memberidx25 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %memberidx26 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %memberidx24, i8 0, i64 24, i1 false)
  %49 = load ptr, ptr %memberidx26, align 8
  %50 = tail call ptr @malloc(i32 25)
  %51 = load ptr, ptr %49, align 8
  %memberidx1.i213 = getelementptr inbounds %Array_ImportNode_, ptr %49, i64 0, i32 1
  %52 = load i64, ptr %memberidx1.i213, align 4
  store i1 false, ptr %50, align 1
  %memberidx1.i.i214 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %50, i64 0, i32 1
  %memberidx2.i.i215 = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %50, i64 0, i32 3
  store ptr %51, ptr %memberidx2.i.i215, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportNode_, ptr %50, i64 0, i32 2
  store i64 %52, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i214, align 4
  %53 = icmp slt i64 %52, 1
  br i1 %53, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %Array_Module____sl__.exit
  %memberidx.i220 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend
  %54 = phi i64 [ 1, %for.body.lr.ph ], [ %64, %ifend ]
  %module_import.0386.in = phi ptr [ %51, %for.body.lr.ph ], [ %65, %ifend ]
  %module_import.0386 = load ptr, ptr %module_import.0386.in, align 8
  tail call fastcc void @TypeChecker_check_module_import(ptr nonnull %0, ptr %module_import.0386)
  %55 = load ptr, ptr %memberidx.i220, align 8
  %memberidx1.i221 = getelementptr inbounds %Compiler, ptr %55, i64 0, i32 5
  %56 = load ptr, ptr %memberidx1.i221, align 8
  %memberidx2.i222 = getelementptr inbounds %Array_FloError_, ptr %56, i64 0, i32 1
  %57 = load i64, ptr %memberidx2.i222, align 4
  %58 = icmp sgt i64 %57, 0
  br i1 %58, label %common.ret.loopexit, label %ifend

for.end:                                          ; preds = %ifend, %Array_Module____sl__.exit
  tail call void @free(ptr nonnull %50)
  %memberidx29 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 2
  %59 = load ptr, ptr %memberidx29, align 8
  %60 = tail call ptr @malloc(i32 25)
  %61 = load ptr, ptr %59, align 8
  %memberidx1.i223 = getelementptr inbounds %Array_EnumNode_, ptr %59, i64 0, i32 1
  %62 = load i64, ptr %memberidx1.i223, align 4
  store i1 false, ptr %60, align 1
  %memberidx1.i.i224 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %60, i64 0, i32 1
  %memberidx2.i.i225 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %60, i64 0, i32 3
  store ptr %61, ptr %memberidx2.i.i225, align 8
  %memberidx3.i.i226 = getelementptr inbounds %ArrayIterator_EnumNode_, ptr %60, i64 0, i32 2
  store i64 %62, ptr %memberidx3.i.i226, align 4
  store i64 1, ptr %memberidx1.i.i224, align 4
  %63 = icmp slt i64 %62, 1
  br i1 %63, label %for.end33, label %for.body31

common.ret.loopexit:                              ; preds = %for.body
  store i1 false, ptr %50, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %ifend116, %for.end81, %for.end40, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %for.end40 ], [ null, %for.end81 ], [ %spec.select, %ifend116 ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %for.body
  %64 = add nuw nsw i64 %54, 1
  store i64 %64, ptr %memberidx1.i.i214, align 4
  %65 = getelementptr inbounds ptr, ptr %51, i64 %54
  %.not433 = icmp slt i64 %54, %52
  br i1 %.not433, label %for.body, label %for.end

for.body31:                                       ; preds = %for.end, %for.body31
  %66 = phi i64 [ %67, %for.body31 ], [ 1, %for.end ]
  %enum_.0381.in = phi ptr [ %68, %for.body31 ], [ %61, %for.end ]
  %enum_.0381 = load ptr, ptr %enum_.0381.in, align 8
  tail call fastcc void @TypeChecker_declare_enum_within_module(ptr nonnull %0, ptr %enum_.0381)
  %67 = add nuw nsw i64 %66, 1
  store i64 %67, ptr %memberidx1.i.i224, align 4
  %68 = getelementptr inbounds ptr, ptr %61, i64 %66
  %.not434 = icmp slt i64 %66, %62
  br i1 %.not434, label %for.body31, label %for.end33

for.end33:                                        ; preds = %for.body31, %for.end
  tail call void @free(ptr nonnull %60)
  %memberidx36 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 1
  %69 = load ptr, ptr %memberidx36, align 8
  %70 = tail call ptr @malloc(i32 25)
  %71 = load ptr, ptr %69, align 8
  %memberidx1.i236 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %69, i64 0, i32 1
  %72 = load i64, ptr %memberidx1.i236, align 4
  store i1 false, ptr %70, align 1
  %memberidx1.i.i237 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %70, i64 0, i32 1
  %memberidx2.i.i238 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %70, i64 0, i32 3
  store ptr %71, ptr %memberidx2.i.i238, align 8
  %memberidx3.i.i239 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %70, i64 0, i32 2
  store i64 %72, ptr %memberidx3.i.i239, align 4
  store i64 1, ptr %memberidx1.i.i237, align 4
  %73 = icmp slt i64 %72, 1
  br i1 %73, label %for.end40, label %for.body38

for.body38:                                       ; preds = %for.end33, %for.body38
  %74 = phi i64 [ %75, %for.body38 ], [ 1, %for.end33 ]
  %class_.0378.in = phi ptr [ %76, %for.body38 ], [ %71, %for.end33 ]
  %class_.0378 = load ptr, ptr %class_.0378.in, align 8
  tail call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr %class_.0378)
  %75 = add nuw nsw i64 %74, 1
  store i64 %75, ptr %memberidx1.i.i237, align 4
  %76 = getelementptr inbounds ptr, ptr %71, i64 %74
  %.not435 = icmp slt i64 %74, %72
  br i1 %.not435, label %for.body38, label %for.end40

for.end40:                                        ; preds = %for.body38, %for.end33
  tail call void @free(ptr nonnull %70)
  %memberidx.i246 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %77 = load ptr, ptr %memberidx.i246, align 8
  %memberidx1.i247 = getelementptr inbounds %Compiler, ptr %77, i64 0, i32 5
  %78 = load ptr, ptr %memberidx1.i247, align 8
  %memberidx2.i248 = getelementptr inbounds %Array_FloError_, ptr %78, i64 0, i32 1
  %79 = load i64, ptr %memberidx2.i248, align 4
  %80 = icmp sgt i64 %79, 0
  br i1 %80, label %common.ret, label %for.entry45

for.entry45:                                      ; preds = %for.end40
  %memberidx46 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 6
  %81 = load ptr, ptr %memberidx46, align 8
  %82 = tail call ptr @malloc(i32 25)
  %83 = load ptr, ptr %81, align 8
  %memberidx1.i249 = getelementptr inbounds %Array_TypeAliasNode_, ptr %81, i64 0, i32 1
  %84 = load i64, ptr %memberidx1.i249, align 4
  store i1 false, ptr %82, align 1
  %memberidx1.i.i250 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %82, i64 0, i32 1
  %memberidx2.i.i251 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %82, i64 0, i32 3
  store ptr %83, ptr %memberidx2.i.i251, align 8
  %memberidx3.i.i252 = getelementptr inbounds %ArrayIterator_TypeAliasNode_, ptr %82, i64 0, i32 2
  store i64 %84, ptr %memberidx3.i.i252, align 4
  store i64 1, ptr %memberidx1.i.i250, align 4
  %85 = icmp slt i64 %84, 1
  br i1 %85, label %for.end50, label %for.body48.lr.ph

for.body48.lr.ph:                                 ; preds = %for.entry45
  %memberidx61 = getelementptr inbounds %Scope, ptr %37, i64 0, i32 6
  br label %for.body48

for.body48:                                       ; preds = %for.body48.lr.ph, %ifend58
  %86 = phi i64 [ 1, %for.body48.lr.ph ], [ %129, %ifend58 ]
  %type_alias_node.0375.in = phi ptr [ %83, %for.body48.lr.ph ], [ %130, %ifend58 ]
  %type_alias_node.0375 = load ptr, ptr %type_alias_node.0375.in, align 8
  %memberidx52 = getelementptr inbounds %TypeAliasNode, ptr %type_alias_node.0375, i64 0, i32 1
  %87 = load ptr, ptr %memberidx52, align 8
  %88 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %87)
  %89 = load ptr, ptr %type_alias_node.0375, align 8
  %memberidx54 = getelementptr inbounds %IdentifierToken, ptr %89, i64 0, i32 2
  %90 = load ptr, ptr %memberidx54, align 8
  %91 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %90)
  %92 = load i64, ptr %91, align 4
  %.not = icmp eq i64 %92, 21
  br i1 %.not, label %ifend58, label %if.entry56

for.end50:                                        ; preds = %ifend58, %for.entry45
  tail call void @free(ptr nonnull %82)
  %memberidx63 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 4
  %93 = load ptr, ptr %memberidx63, align 8
  %94 = tail call ptr @malloc(i32 25)
  %95 = load ptr, ptr %93, align 8
  %memberidx1.i256 = getelementptr inbounds %Array_ConstDeclarationStatement_, ptr %93, i64 0, i32 1
  %96 = load i64, ptr %memberidx1.i256, align 4
  store i1 false, ptr %94, align 1
  %memberidx1.i.i257 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %94, i64 0, i32 1
  %memberidx2.i.i258 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %94, i64 0, i32 3
  store ptr %95, ptr %memberidx2.i.i258, align 8
  %memberidx3.i.i259 = getelementptr inbounds %ArrayIterator_ConstDeclarationStatement_, ptr %94, i64 0, i32 2
  store i64 %96, ptr %memberidx3.i.i259, align 4
  store i64 1, ptr %memberidx1.i.i257, align 4
  %97 = icmp slt i64 %96, 1
  br i1 %97, label %for.end67, label %for.body65

if.entry56:                                       ; preds = %for.body48
  store i1 false, ptr %82, align 1
  %memberidx.i263 = getelementptr inbounds %String, ptr %90, i64 0, i32 1
  %98 = load i64, ptr %memberidx.i263, align 4
  %99 = trunc i64 %98 to i32
  %100 = add i32 %99, 1
  %101 = tail call ptr @malloc(i32 %100)
  %102 = load ptr, ptr %90, align 8
  %103 = load i64, ptr %memberidx.i263, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %101, ptr align 8 %102, i64 %103, i1 false)
  %104 = getelementptr inbounds i8, ptr %101, i64 %103
  store i8 0, ptr %104, align 1
  %105 = alloca ptr, align 8
  %106 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %105, ptr nonnull @101, ptr %101)
  %107 = load ptr, ptr %105, align 8
  %108 = tail call ptr @malloc(i32 24)
  store ptr %107, ptr %108, align 8
  %memberidx1.i264 = getelementptr inbounds %String, ptr %108, i64 0, i32 1
  store i64 %106, ptr %memberidx1.i264, align 4
  %memberidx2.i265 = getelementptr inbounds %String, ptr %108, i64 0, i32 2
  store i64 %106, ptr %memberidx2.i265, align 4
  tail call void @free(ptr %101)
  %109 = load ptr, ptr %type_alias_node.0375, align 8
  %memberidx60 = getelementptr inbounds %Token, ptr %109, i64 0, i32 1
  %110 = load ptr, ptr %memberidx60, align 8
  %111 = load ptr, ptr %memberidx.i246, align 8
  %memberidx1.i267 = getelementptr inbounds %Compiler, ptr %111, i64 0, i32 5
  %112 = load ptr, ptr %memberidx1.i267, align 8
  %113 = call ptr @malloc(i32 24)
  store i64 1, ptr %113, align 4
  %memberidx1.i.i268 = getelementptr inbounds %FloError, ptr %113, i64 0, i32 2
  store ptr %110, ptr %memberidx1.i.i268, align 8
  %memberidx2.i.i269 = getelementptr inbounds %FloError, ptr %113, i64 0, i32 1
  store ptr %108, ptr %memberidx2.i.i269, align 8
  %memberidx.i.i270 = getelementptr inbounds %Array_FloError_, ptr %112, i64 0, i32 1
  %114 = load i64, ptr %memberidx.i.i270, align 4
  %115 = add i64 %114, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %112, i64 0, i32 2
  %116 = load i64, ptr %memberidx.i.i.i, align 4
  %117 = icmp slt i64 %116, %115
  %.pre402 = load ptr, ptr %112, align 8
  br i1 %117, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry56, %while.entry.i.i.i
  %118 = phi ptr [ %122, %while.entry.i.i.i ], [ %.pre402, %if.entry56 ]
  %119 = phi i64 [ %123, %while.entry.i.i.i ], [ %116, %if.entry56 ]
  %120 = shl nuw i64 %119, 1
  store i64 %120, ptr %memberidx.i.i.i, align 4
  %121 = shl i64 %119, 4
  %122 = call ptr @realloc(ptr %118, i64 %121)
  store ptr %122, ptr %112, align 8
  %123 = load i64, ptr %memberidx.i.i.i, align 4
  %124 = icmp slt i64 %123, %115
  br i1 %124, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre403 = load i64, ptr %memberidx.i.i270, align 4
  %.pre431 = add nsw i64 %.pre403, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry56, %TypeChecker_error.exit.loopexit
  %.pre-phi432 = phi i64 [ %.pre431, %TypeChecker_error.exit.loopexit ], [ %115, %if.entry56 ]
  %125 = phi ptr [ %122, %TypeChecker_error.exit.loopexit ], [ %.pre402, %if.entry56 ]
  %126 = phi i64 [ %.pre403, %TypeChecker_error.exit.loopexit ], [ %114, %if.entry56 ]
  store i64 %.pre-phi432, ptr %memberidx.i.i270, align 4
  %127 = getelementptr inbounds ptr, ptr %125, i64 %126
  store ptr %113, ptr %127, align 8
  br label %common.ret

ifend58:                                          ; preds = %for.body48
  %128 = load ptr, ptr %memberidx61, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr %128, ptr %90, ptr %88)
  %129 = add nuw nsw i64 %86, 1
  store i64 %129, ptr %memberidx1.i.i250, align 4
  %130 = getelementptr inbounds ptr, ptr %83, i64 %86
  %.not436 = icmp slt i64 %86, %84
  br i1 %.not436, label %for.body48, label %for.end50

for.body65:                                       ; preds = %for.end50, %TypeChecker_declare_global_const.exit
  %131 = phi i64 [ %159, %TypeChecker_declare_global_const.exit ], [ 1, %for.end50 ]
  %global_const.0370.in = phi ptr [ %160, %TypeChecker_declare_global_const.exit ], [ %95, %for.end50 ]
  %global_const.0370 = load ptr, ptr %global_const.0370.in, align 8
  %132 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr nonnull %0, ptr %global_const.0370)
  %133 = load ptr, ptr %memberidx.i246, align 8
  %memberidx1.i.i275 = getelementptr inbounds %Compiler, ptr %133, i64 0, i32 5
  %134 = load ptr, ptr %memberidx1.i.i275, align 8
  %memberidx2.i.i276 = getelementptr inbounds %Array_FloError_, ptr %134, i64 0, i32 1
  %135 = load i64, ptr %memberidx2.i.i276, align 4
  %136 = icmp sgt i64 %135, 0
  br i1 %136, label %TypeChecker_declare_global_const.exit, label %ifend.i

ifend.i:                                          ; preds = %for.body65
  %memberidx.i277 = getelementptr inbounds %ConstDeclaration, ptr %132, i64 0, i32 3
  store i1 true, ptr %memberidx.i277, align 1
  %137 = load ptr, ptr %memberidx10, align 8
  %138 = load i64, ptr %137, align 4
  %139 = load ptr, ptr %0, align 8
  %140 = load ptr, ptr %139, align 8
  %141 = load ptr, ptr %140, align 8
  %142 = getelementptr inbounds ptr, ptr %141, i64 %138
  %143 = load ptr, ptr %142, align 8
  %memberidx1.i278 = getelementptr inbounds %Module, ptr %143, i64 0, i32 8
  %144 = load ptr, ptr %memberidx1.i278, align 8
  %memberidx.i5.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %144, i64 0, i32 1
  %145 = load i64, ptr %memberidx.i5.i, align 4
  %146 = add i64 %145, 1
  %memberidx.i.i.i279 = getelementptr inbounds %Array_ConstDeclaration_, ptr %144, i64 0, i32 2
  %147 = load i64, ptr %memberidx.i.i.i279, align 4
  %148 = icmp slt i64 %147, %146
  %.pre405 = load ptr, ptr %144, align 8
  br i1 %148, label %while.entry.i.i.i280, label %Array_ConstDeclaration____sl__.exit.i

while.entry.i.i.i280:                             ; preds = %ifend.i, %while.entry.i.i.i280
  %149 = phi ptr [ %153, %while.entry.i.i.i280 ], [ %.pre405, %ifend.i ]
  %150 = phi i64 [ %154, %while.entry.i.i.i280 ], [ %147, %ifend.i ]
  %151 = shl nuw i64 %150, 1
  store i64 %151, ptr %memberidx.i.i.i279, align 4
  %152 = shl i64 %150, 4
  %153 = tail call ptr @realloc(ptr %149, i64 %152)
  store ptr %153, ptr %144, align 8
  %154 = load i64, ptr %memberidx.i.i.i279, align 4
  %155 = icmp slt i64 %154, %146
  br i1 %155, label %while.entry.i.i.i280, label %Array_ConstDeclaration____sl__.exit.i.loopexit

Array_ConstDeclaration____sl__.exit.i.loopexit:   ; preds = %while.entry.i.i.i280
  %.pre406 = load i64, ptr %memberidx.i5.i, align 4
  %.pre429 = add nsw i64 %.pre406, 1
  br label %Array_ConstDeclaration____sl__.exit.i

Array_ConstDeclaration____sl__.exit.i:            ; preds = %ifend.i, %Array_ConstDeclaration____sl__.exit.i.loopexit
  %.pre-phi430 = phi i64 [ %.pre429, %Array_ConstDeclaration____sl__.exit.i.loopexit ], [ %146, %ifend.i ]
  %156 = phi ptr [ %153, %Array_ConstDeclaration____sl__.exit.i.loopexit ], [ %.pre405, %ifend.i ]
  %157 = phi i64 [ %.pre406, %Array_ConstDeclaration____sl__.exit.i.loopexit ], [ %145, %ifend.i ]
  store i64 %.pre-phi430, ptr %memberidx.i5.i, align 4
  %158 = getelementptr inbounds ptr, ptr %156, i64 %157
  store ptr %132, ptr %158, align 8
  br label %TypeChecker_declare_global_const.exit

TypeChecker_declare_global_const.exit:            ; preds = %for.body65, %Array_ConstDeclaration____sl__.exit.i
  %159 = add nuw nsw i64 %131, 1
  store i64 %159, ptr %memberidx1.i.i257, align 4
  %160 = getelementptr inbounds ptr, ptr %95, i64 %131
  %.not437 = icmp slt i64 %131, %96
  br i1 %.not437, label %for.body65, label %for.end67

for.end67:                                        ; preds = %TypeChecker_declare_global_const.exit, %for.end50
  tail call void @free(ptr nonnull %94)
  %memberidx70 = getelementptr inbounds %ModuleAST, ptr %1, i64 0, i32 5
  %161 = load ptr, ptr %memberidx70, align 8
  %162 = tail call ptr @malloc(i32 25)
  %163 = load ptr, ptr %161, align 8
  %memberidx1.i284 = getelementptr inbounds %Array_VarDeclarationStatement_, ptr %161, i64 0, i32 1
  %164 = load i64, ptr %memberidx1.i284, align 4
  store i1 false, ptr %162, align 1
  %memberidx1.i.i285 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %162, i64 0, i32 1
  %memberidx2.i.i286 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %162, i64 0, i32 3
  store ptr %163, ptr %memberidx2.i.i286, align 8
  %memberidx3.i.i287 = getelementptr inbounds %ArrayIterator_VarDeclarationStatement_, ptr %162, i64 0, i32 2
  store i64 %164, ptr %memberidx3.i.i287, align 4
  store i64 1, ptr %memberidx1.i.i285, align 4
  %165 = icmp slt i64 %164, 1
  br i1 %165, label %for.end74, label %for.body72

for.body72:                                       ; preds = %for.end67, %TypeChecker_declare_global_var.exit
  %166 = phi i64 [ %229, %TypeChecker_declare_global_var.exit ], [ 1, %for.end67 ]
  %global_var.0367.in = phi ptr [ %230, %TypeChecker_declare_global_var.exit ], [ %163, %for.end67 ]
  %global_var.0367 = load ptr, ptr %global_var.0367.in, align 8
  %167 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr nonnull %0, ptr %global_var.0367)
  %168 = load ptr, ptr %memberidx.i246, align 8
  %memberidx1.i.i292 = getelementptr inbounds %Compiler, ptr %168, i64 0, i32 5
  %169 = load ptr, ptr %memberidx1.i.i292, align 8
  %memberidx2.i.i293 = getelementptr inbounds %Array_FloError_, ptr %169, i64 0, i32 1
  %170 = load i64, ptr %memberidx2.i.i293, align 4
  %171 = icmp sgt i64 %170, 0
  br i1 %171, label %TypeChecker_declare_global_var.exit, label %ifend.i297

ifend.i297:                                       ; preds = %for.body72
  %172 = load ptr, ptr %0, align 8
  %memberidx1.i294 = getelementptr inbounds %VarDeclaration, ptr %167, i64 0, i32 2
  %173 = load ptr, ptr %memberidx1.i294, align 8
  %174 = load ptr, ptr %172, align 8
  %memberidx1.i24.i = getelementptr inbounds %VarId, ptr %173, i64 0, i32 1
  %175 = load i64, ptr %memberidx1.i24.i, align 4
  %176 = load ptr, ptr %174, align 8
  %177 = getelementptr inbounds ptr, ptr %176, i64 %175
  %178 = load ptr, ptr %177, align 8
  %memberidx2.i25.i = getelementptr inbounds %Module, ptr %178, i64 0, i32 1
  %179 = load ptr, ptr %memberidx2.i25.i, align 8
  %memberidx3.i.i295 = getelementptr inbounds %VarId, ptr %173, i64 0, i32 2
  %180 = load i64, ptr %memberidx3.i.i295, align 4
  %181 = load ptr, ptr %179, align 8
  %182 = getelementptr inbounds ptr, ptr %181, i64 %180
  %183 = load ptr, ptr %182, align 8
  %memberidx2.i296 = getelementptr inbounds %Var, ptr %183, i64 0, i32 2
  %184 = load ptr, ptr %memberidx2.i296, align 8
  %.not.i = icmp eq ptr %184, null
  br i1 %.not.i, label %ifend5.i, label %if.entry3.i

if.entry3.i:                                      ; preds = %ifend.i297
  %memberidx6.i298 = getelementptr inbounds %Expression, ptr %184, i64 0, i32 1
  %185 = load i1, ptr %memberidx6.i298, align 1
  br i1 %185, label %ifend5.i, label %if.entry7.i

ifend5.i:                                         ; preds = %if.entry3.i, %ifend.i297
  %memberidx12.i299 = getelementptr inbounds %VarDeclaration, ptr %167, i64 0, i32 3
  store i1 true, ptr %memberidx12.i299, align 1
  %186 = load ptr, ptr %memberidx10, align 8
  %187 = load i64, ptr %186, align 4
  %188 = load ptr, ptr %0, align 8
  %189 = load ptr, ptr %188, align 8
  %190 = load ptr, ptr %189, align 8
  %191 = getelementptr inbounds ptr, ptr %190, i64 %187
  %192 = load ptr, ptr %191, align 8
  %memberidx13.i300 = getelementptr inbounds %Module, ptr %192, i64 0, i32 9
  %193 = load ptr, ptr %memberidx13.i300, align 8
  %memberidx.i29.i = getelementptr inbounds %Array_VarDeclaration_, ptr %193, i64 0, i32 1
  %194 = load i64, ptr %memberidx.i29.i, align 4
  %195 = add i64 %194, 1
  %memberidx.i.i30.i = getelementptr inbounds %Array_VarDeclaration_, ptr %193, i64 0, i32 2
  %196 = load i64, ptr %memberidx.i.i30.i, align 4
  %197 = icmp slt i64 %196, %195
  %.pre411 = load ptr, ptr %193, align 8
  br i1 %197, label %while.entry.i.i.i301, label %Array_VarDeclaration____sl__.exit.i

while.entry.i.i.i301:                             ; preds = %ifend5.i, %while.entry.i.i.i301
  %198 = phi ptr [ %202, %while.entry.i.i.i301 ], [ %.pre411, %ifend5.i ]
  %199 = phi i64 [ %203, %while.entry.i.i.i301 ], [ %196, %ifend5.i ]
  %200 = shl nuw i64 %199, 1
  store i64 %200, ptr %memberidx.i.i30.i, align 4
  %201 = shl i64 %199, 4
  %202 = tail call ptr @realloc(ptr %198, i64 %201)
  store ptr %202, ptr %193, align 8
  %203 = load i64, ptr %memberidx.i.i30.i, align 4
  %204 = icmp slt i64 %203, %195
  br i1 %204, label %while.entry.i.i.i301, label %Array_VarDeclaration____sl__.exit.i.loopexit

Array_VarDeclaration____sl__.exit.i.loopexit:     ; preds = %while.entry.i.i.i301
  %.pre412 = load i64, ptr %memberidx.i29.i, align 4
  %.pre425 = add nsw i64 %.pre412, 1
  br label %Array_VarDeclaration____sl__.exit.i

Array_VarDeclaration____sl__.exit.i:              ; preds = %ifend5.i, %Array_VarDeclaration____sl__.exit.i.loopexit
  %.pre-phi426 = phi i64 [ %.pre425, %Array_VarDeclaration____sl__.exit.i.loopexit ], [ %195, %ifend5.i ]
  %205 = phi ptr [ %202, %Array_VarDeclaration____sl__.exit.i.loopexit ], [ %.pre411, %ifend5.i ]
  %206 = phi i64 [ %.pre412, %Array_VarDeclaration____sl__.exit.i.loopexit ], [ %194, %ifend5.i ]
  store i64 %.pre-phi426, ptr %memberidx.i29.i, align 4
  %207 = getelementptr inbounds ptr, ptr %205, i64 %206
  store ptr %167, ptr %207, align 8
  br label %TypeChecker_declare_global_var.exit

if.entry7.i:                                      ; preds = %if.entry3.i
  %208 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %208, ptr noundef nonnull align 8 dereferenceable(54) @105, i64 54, i1 false)
  %209 = tail call ptr @malloc(i32 24)
  store ptr %208, ptr %209, align 8
  %memberidx1.i.i27.i = getelementptr inbounds %String, ptr %209, i64 0, i32 1
  store i64 54, ptr %memberidx1.i.i27.i, align 4
  %memberidx2.i.i28.i = getelementptr inbounds %String, ptr %209, i64 0, i32 2
  store i64 54, ptr %memberidx2.i.i28.i, align 4
  %memberidx10.i302 = getelementptr inbounds %VarDeclarationStatement, ptr %global_var.0367, i64 0, i32 4
  %210 = load ptr, ptr %memberidx10.i302, align 8
  %211 = load ptr, ptr %210, align 8
  %212 = load ptr, ptr %memberidx.i246, align 8
  %memberidx1.i23.i = getelementptr inbounds %Compiler, ptr %212, i64 0, i32 5
  %213 = load ptr, ptr %memberidx1.i23.i, align 8
  %214 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %214, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloError, ptr %214, i64 0, i32 2
  store ptr %211, ptr %memberidx1.i.i.i, align 8
  %memberidx2.i.i.i = getelementptr inbounds %FloError, ptr %214, i64 0, i32 1
  store ptr %209, ptr %memberidx2.i.i.i, align 8
  %memberidx.i.i.i303 = getelementptr inbounds %Array_FloError_, ptr %213, i64 0, i32 1
  %215 = load i64, ptr %memberidx.i.i.i303, align 4
  %216 = add i64 %215, 1
  %memberidx.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %213, i64 0, i32 2
  %217 = load i64, ptr %memberidx.i.i.i.i, align 4
  %218 = icmp slt i64 %217, %216
  %.pre408 = load ptr, ptr %213, align 8
  br i1 %218, label %while.entry.i.i.i.i, label %TypeChecker_error.exit.i

while.entry.i.i.i.i:                              ; preds = %if.entry7.i, %while.entry.i.i.i.i
  %219 = phi ptr [ %223, %while.entry.i.i.i.i ], [ %.pre408, %if.entry7.i ]
  %220 = phi i64 [ %224, %while.entry.i.i.i.i ], [ %217, %if.entry7.i ]
  %221 = shl nuw i64 %220, 1
  store i64 %221, ptr %memberidx.i.i.i.i, align 4
  %222 = shl i64 %220, 4
  %223 = tail call ptr @realloc(ptr %219, i64 %222)
  store ptr %223, ptr %213, align 8
  %224 = load i64, ptr %memberidx.i.i.i.i, align 4
  %225 = icmp slt i64 %224, %216
  br i1 %225, label %while.entry.i.i.i.i, label %TypeChecker_error.exit.i.loopexit

TypeChecker_error.exit.i.loopexit:                ; preds = %while.entry.i.i.i.i
  %.pre409 = load i64, ptr %memberidx.i.i.i303, align 4
  %.pre427 = add nsw i64 %.pre409, 1
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %if.entry7.i, %TypeChecker_error.exit.i.loopexit
  %.pre-phi428 = phi i64 [ %.pre427, %TypeChecker_error.exit.i.loopexit ], [ %216, %if.entry7.i ]
  %226 = phi ptr [ %223, %TypeChecker_error.exit.i.loopexit ], [ %.pre408, %if.entry7.i ]
  %227 = phi i64 [ %.pre409, %TypeChecker_error.exit.i.loopexit ], [ %215, %if.entry7.i ]
  store i64 %.pre-phi428, ptr %memberidx.i.i.i303, align 4
  %228 = getelementptr inbounds ptr, ptr %226, i64 %227
  store ptr %214, ptr %228, align 8
  br label %TypeChecker_declare_global_var.exit

TypeChecker_declare_global_var.exit:              ; preds = %for.body72, %Array_VarDeclaration____sl__.exit.i, %TypeChecker_error.exit.i
  %229 = add nuw nsw i64 %166, 1
  store i64 %229, ptr %memberidx1.i.i285, align 4
  %230 = getelementptr inbounds ptr, ptr %163, i64 %166
  %.not438 = icmp slt i64 %166, %164
  br i1 %.not438, label %for.body72, label %for.end74

for.end74:                                        ; preds = %TypeChecker_declare_global_var.exit, %for.end67
  tail call void @free(ptr nonnull %162)
  %231 = load ptr, ptr %1, align 8
  %232 = tail call ptr @malloc(i32 25)
  %233 = load ptr, ptr %231, align 8
  %memberidx1.i307 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %231, i64 0, i32 1
  %234 = load i64, ptr %memberidx1.i307, align 4
  store i1 false, ptr %232, align 1
  %memberidx1.i.i308 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %232, i64 0, i32 1
  %memberidx2.i.i309 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %232, i64 0, i32 3
  store ptr %233, ptr %memberidx2.i.i309, align 8
  %memberidx3.i.i310 = getelementptr inbounds %ArrayIterator_FunctionDeclarationNode_, ptr %232, i64 0, i32 2
  store i64 %234, ptr %memberidx3.i.i310, align 4
  store i64 1, ptr %memberidx1.i.i308, align 4
  %235 = icmp slt i64 %234, 1
  br i1 %235, label %for.end81, label %for.body79

for.body79:                                       ; preds = %for.end74, %for.body79
  %236 = phi i64 [ %237, %for.body79 ], [ 1, %for.end74 ]
  %function.0364.in = phi ptr [ %238, %for.body79 ], [ %233, %for.end74 ]
  %function.0364 = load ptr, ptr %function.0364.in, align 8
  tail call fastcc void @TypeChecker_declare_function_within_module(ptr nonnull %0, ptr %function.0364)
  %237 = add nuw nsw i64 %236, 1
  store i64 %237, ptr %memberidx1.i.i308, align 4
  %238 = getelementptr inbounds ptr, ptr %233, i64 %236
  %.not439 = icmp slt i64 %236, %234
  br i1 %.not439, label %for.body79, label %for.end81

for.end81:                                        ; preds = %for.body79, %for.end74
  tail call void @free(ptr nonnull %232)
  %239 = load ptr, ptr %memberidx.i246, align 8
  %memberidx1.i318 = getelementptr inbounds %Compiler, ptr %239, i64 0, i32 5
  %240 = load ptr, ptr %memberidx1.i318, align 8
  %memberidx2.i319 = getelementptr inbounds %Array_FloError_, ptr %240, i64 0, i32 1
  %241 = load i64, ptr %memberidx2.i319, align 4
  %242 = icmp sgt i64 %241, 0
  br i1 %242, label %common.ret, label %for.cond87.preheader

for.cond87.preheader:                             ; preds = %for.end81
  %243 = load ptr, ptr %memberidx29, align 8
  %memberidx92361 = getelementptr inbounds %Array_EnumNode_, ptr %243, i64 0, i32 1
  %244 = load i64, ptr %memberidx92361, align 4
  %245 = icmp sgt i64 %244, 0
  br i1 %245, label %for.body88, label %for.entry95

for.body88:                                       ; preds = %for.cond87.preheader, %for.body88
  %246 = phi ptr [ %255, %for.body88 ], [ %243, %for.cond87.preheader ]
  %i.0362 = phi i64 [ %254, %for.body88 ], [ 0, %for.cond87.preheader ]
  %247 = load ptr, ptr %memberidx10.i, align 8
  %248 = load ptr, ptr %247, align 8
  %249 = getelementptr inbounds ptr, ptr %248, i64 %i.0362
  %250 = load ptr, ptr %249, align 8
  %251 = load ptr, ptr %246, align 8
  %252 = getelementptr inbounds ptr, ptr %251, i64 %i.0362
  %253 = load ptr, ptr %252, align 8
  tail call fastcc void @TypeChecker_check_enum_body(ptr nonnull %0, ptr %250, ptr %253)
  %254 = add nuw nsw i64 %i.0362, 1
  %255 = load ptr, ptr %memberidx29, align 8
  %memberidx92 = getelementptr inbounds %Array_EnumNode_, ptr %255, i64 0, i32 1
  %256 = load i64, ptr %memberidx92, align 4
  %257 = icmp slt i64 %254, %256
  br i1 %257, label %for.body88, label %for.entry95

for.entry95:                                      ; preds = %for.body88, %for.cond87.preheader
  %258 = load ptr, ptr %memberidx36, align 8
  %259 = tail call ptr @malloc(i32 25)
  %260 = load ptr, ptr %258, align 8
  %memberidx1.i320 = getelementptr inbounds %Array_ClassDeclarationNode_, ptr %258, i64 0, i32 1
  %261 = load i64, ptr %memberidx1.i320, align 4
  store i1 false, ptr %259, align 1
  %memberidx1.i.i321 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %259, i64 0, i32 1
  %memberidx2.i.i322 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %259, i64 0, i32 3
  store ptr %260, ptr %memberidx2.i.i322, align 8
  %memberidx3.i.i323 = getelementptr inbounds %ArrayIterator_ClassDeclarationNode_, ptr %259, i64 0, i32 2
  store i64 %261, ptr %memberidx3.i.i323, align 4
  store i64 1, ptr %memberidx1.i.i321, align 4
  %262 = icmp slt i64 %261, 1
  br i1 %262, label %for.end100, label %for.body98

for.body98:                                       ; preds = %for.entry95, %for.body98
  %263 = phi i64 [ %264, %for.body98 ], [ 1, %for.entry95 ]
  %class_7.0360.in = phi ptr [ %265, %for.body98 ], [ %260, %for.entry95 ]
  %class_7.0360 = load ptr, ptr %class_7.0360.in, align 8
  tail call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr %class_7.0360)
  %264 = add nuw nsw i64 %263, 1
  store i64 %264, ptr %memberidx1.i.i321, align 4
  %265 = getelementptr inbounds ptr, ptr %260, i64 %263
  %.not440 = icmp slt i64 %263, %261
  br i1 %.not440, label %for.body98, label %for.end100

for.end100:                                       ; preds = %for.body98, %for.entry95
  tail call void @free(ptr nonnull %259)
  %266 = load ptr, ptr %1, align 8
  %memberidx108357 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %266, i64 0, i32 1
  %267 = load i64, ptr %memberidx108357, align 4
  %268 = icmp sgt i64 %267, 0
  br i1 %268, label %for.body104, label %for.end106

for.body104:                                      ; preds = %for.end100, %TypeChecker_check_function_body.exit
  %269 = phi ptr [ %342, %TypeChecker_check_function_body.exit ], [ %266, %for.end100 ]
  %i9.0358 = phi i64 [ %341, %TypeChecker_check_function_body.exit ], [ 0, %for.end100 ]
  %270 = load ptr, ptr %memberidx1.i205, align 8
  %271 = load ptr, ptr %270, align 8
  %272 = getelementptr inbounds ptr, ptr %271, i64 %i9.0358
  %273 = load ptr, ptr %272, align 8
  %274 = load ptr, ptr %269, align 8
  %275 = getelementptr inbounds ptr, ptr %274, i64 %i9.0358
  %276 = load ptr, ptr %275, align 8
  %memberidx.i330 = getelementptr inbounds %Function, ptr %273, i64 0, i32 6
  %277 = load i1, ptr %memberidx.i330, align 1
  br i1 %277, label %TypeChecker_check_function_body.exit, label %ifend.i338

ifend.i338:                                       ; preds = %for.body104
  %278 = load ptr, ptr %273, align 8
  store ptr %278, ptr %memberidx25, align 8
  %memberidx6.i333 = getelementptr inbounds %Function, ptr %273, i64 0, i32 5
  %279 = load ptr, ptr %memberidx6.i333, align 8
  store ptr %279, ptr %memberidx10, align 8
  %memberidx7.i334 = getelementptr inbounds %Function, ptr %273, i64 0, i32 3
  %memberidx8.i = getelementptr inbounds %FunctionDeclarationNode, ptr %276, i64 0, i32 2
  %280 = load ptr, ptr %memberidx8.i, align 8
  %281 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %280, ptr null, i1 false)
  store ptr %281, ptr %memberidx7.i334, align 8
  %282 = load ptr, ptr %memberidx.i246, align 8
  %memberidx1.i.i336 = getelementptr inbounds %Compiler, ptr %282, i64 0, i32 5
  %283 = load ptr, ptr %memberidx1.i.i336, align 8
  %memberidx2.i.i337 = getelementptr inbounds %Array_FloError_, ptr %283, i64 0, i32 1
  %284 = load i64, ptr %memberidx2.i.i337, align 4
  %285 = icmp sgt i64 %284, 0
  br i1 %285, label %TypeChecker_check_function_body.exit, label %ifend11.i

ifend11.i:                                        ; preds = %ifend.i338
  %memberidx13.i339 = getelementptr inbounds %Block, ptr %281, i64 0, i32 1
  %286 = load i1, ptr %memberidx13.i339, align 1
  br i1 %286, label %ifend16.i, label %if.entry14.i

if.entry14.i:                                     ; preds = %ifend11.i
  %memberidx17.i = getelementptr inbounds %Function, ptr %273, i64 0, i32 4
  %287 = load ptr, ptr %memberidx17.i, align 8
  %memberidx18.i340 = getelementptr inbounds %FunctionType, ptr %287, i64 0, i32 2
  %288 = load ptr, ptr %memberidx18.i340, align 8
  %289 = load i64, ptr %288, align 4
  %290 = icmp eq i64 %289, 10
  br i1 %290, label %if.entry20.i, label %else21.i

ifend16.i:                                        ; preds = %Array_Statement____sl__.exit.i, %ifend11.i
  %291 = load ptr, ptr %0, align 8
  %292 = load ptr, ptr %memberidx6.i333, align 8
  %293 = load ptr, ptr %291, align 8
  %294 = load i64, ptr %292, align 4
  %295 = load ptr, ptr %293, align 8
  %296 = getelementptr inbounds ptr, ptr %295, i64 %294
  %297 = load ptr, ptr %296, align 8
  %memberidx2.i49.i = getelementptr inbounds %Module, ptr %297, i64 0, i32 7
  %298 = load ptr, ptr %memberidx2.i49.i, align 8
  %memberidx3.i.i341 = getelementptr inbounds %ScopeId, ptr %292, i64 0, i32 1
  %299 = load i64, ptr %memberidx3.i.i341, align 4
  %300 = load ptr, ptr %298, align 8
  %301 = getelementptr inbounds ptr, ptr %300, i64 %299
  %302 = load ptr, ptr %301, align 8
  %memberidx30.i = getelementptr inbounds %Scope, ptr %302, i64 0, i32 5
  %303 = load ptr, ptr %memberidx30.i, align 8
  store ptr %303, ptr %memberidx10, align 8
  br label %TypeChecker_check_function_body.exit

if.entry20.i:                                     ; preds = %if.entry14.i
  %304 = load ptr, ptr %281, align 8
  %305 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %305, align 4
  %memberidx.i50.i = getelementptr inbounds %ReturnStatement, ptr %305, i64 0, i32 1
  store ptr null, ptr %memberidx.i50.i, align 8
  %memberidx.i53.i = getelementptr inbounds %Array_Statement_, ptr %304, i64 0, i32 1
  %306 = load i64, ptr %memberidx.i53.i, align 4
  %307 = add i64 %306, 1
  %memberidx.i.i54.i = getelementptr inbounds %Array_Statement_, ptr %304, i64 0, i32 2
  %308 = load i64, ptr %memberidx.i.i54.i, align 4
  %309 = icmp slt i64 %308, %307
  %.pre417 = load ptr, ptr %304, align 8
  br i1 %309, label %while.entry.i.i.i342, label %Array_Statement____sl__.exit.i

while.entry.i.i.i342:                             ; preds = %if.entry20.i, %while.entry.i.i.i342
  %310 = phi ptr [ %314, %while.entry.i.i.i342 ], [ %.pre417, %if.entry20.i ]
  %311 = phi i64 [ %315, %while.entry.i.i.i342 ], [ %308, %if.entry20.i ]
  %312 = shl nuw i64 %311, 1
  store i64 %312, ptr %memberidx.i.i54.i, align 4
  %313 = shl i64 %311, 4
  %314 = tail call ptr @realloc(ptr %310, i64 %313)
  store ptr %314, ptr %304, align 8
  %315 = load i64, ptr %memberidx.i.i54.i, align 4
  %316 = icmp slt i64 %315, %307
  br i1 %316, label %while.entry.i.i.i342, label %Array_Statement____sl__.exit.i.loopexit

Array_Statement____sl__.exit.i.loopexit:          ; preds = %while.entry.i.i.i342
  %.pre418 = load i64, ptr %memberidx.i53.i, align 4
  %.pre421 = add nsw i64 %.pre418, 1
  br label %Array_Statement____sl__.exit.i

Array_Statement____sl__.exit.i:                   ; preds = %if.entry20.i, %Array_Statement____sl__.exit.i.loopexit
  %.pre-phi422 = phi i64 [ %.pre421, %Array_Statement____sl__.exit.i.loopexit ], [ %307, %if.entry20.i ]
  %317 = phi ptr [ %314, %Array_Statement____sl__.exit.i.loopexit ], [ %.pre417, %if.entry20.i ]
  %318 = phi i64 [ %.pre418, %Array_Statement____sl__.exit.i.loopexit ], [ %306, %if.entry20.i ]
  store i64 %.pre-phi422, ptr %memberidx.i53.i, align 4
  %319 = getelementptr inbounds ptr, ptr %317, i64 %318
  store ptr %305, ptr %319, align 8
  br label %ifend16.i

else21.i:                                         ; preds = %if.entry14.i
  %320 = tail call ptr @malloc(i32 40)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %320, ptr noundef nonnull align 8 dereferenceable(40) @157, i64 40, i1 false)
  %321 = tail call ptr @malloc(i32 24)
  store ptr %320, ptr %321, align 8
  %memberidx1.i.i51.i = getelementptr inbounds %String, ptr %321, i64 0, i32 1
  store i64 40, ptr %memberidx1.i.i51.i, align 4
  %memberidx2.i.i52.i = getelementptr inbounds %String, ptr %321, i64 0, i32 2
  store i64 40, ptr %memberidx2.i.i52.i, align 4
  %memberidx25.i = getelementptr inbounds %FunctionDeclarationNode, ptr %276, i64 0, i32 3
  %322 = load ptr, ptr %memberidx25.i, align 8
  %323 = load ptr, ptr %322, align 8
  %324 = load ptr, ptr %memberidx.i246, align 8
  %memberidx1.i48.i = getelementptr inbounds %Compiler, ptr %324, i64 0, i32 5
  %325 = load ptr, ptr %memberidx1.i48.i, align 8
  %326 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %326, align 4
  %memberidx1.i.i.i343 = getelementptr inbounds %FloError, ptr %326, i64 0, i32 2
  store ptr %323, ptr %memberidx1.i.i.i343, align 8
  %memberidx2.i.i.i344 = getelementptr inbounds %FloError, ptr %326, i64 0, i32 1
  store ptr %321, ptr %memberidx2.i.i.i344, align 8
  %memberidx.i.i.i345 = getelementptr inbounds %Array_FloError_, ptr %325, i64 0, i32 1
  %327 = load i64, ptr %memberidx.i.i.i345, align 4
  %328 = add i64 %327, 1
  %memberidx.i.i.i.i346 = getelementptr inbounds %Array_FloError_, ptr %325, i64 0, i32 2
  %329 = load i64, ptr %memberidx.i.i.i.i346, align 4
  %330 = icmp slt i64 %329, %328
  %.pre414 = load ptr, ptr %325, align 8
  br i1 %330, label %while.entry.i.i.i.i347, label %TypeChecker_error.exit.i348

while.entry.i.i.i.i347:                           ; preds = %else21.i, %while.entry.i.i.i.i347
  %331 = phi ptr [ %335, %while.entry.i.i.i.i347 ], [ %.pre414, %else21.i ]
  %332 = phi i64 [ %336, %while.entry.i.i.i.i347 ], [ %329, %else21.i ]
  %333 = shl nuw i64 %332, 1
  store i64 %333, ptr %memberidx.i.i.i.i346, align 4
  %334 = shl i64 %332, 4
  %335 = tail call ptr @realloc(ptr %331, i64 %334)
  store ptr %335, ptr %325, align 8
  %336 = load i64, ptr %memberidx.i.i.i.i346, align 4
  %337 = icmp slt i64 %336, %328
  br i1 %337, label %while.entry.i.i.i.i347, label %TypeChecker_error.exit.i348.loopexit

TypeChecker_error.exit.i348.loopexit:             ; preds = %while.entry.i.i.i.i347
  %.pre415 = load i64, ptr %memberidx.i.i.i345, align 4
  %.pre423 = add nsw i64 %.pre415, 1
  br label %TypeChecker_error.exit.i348

TypeChecker_error.exit.i348:                      ; preds = %else21.i, %TypeChecker_error.exit.i348.loopexit
  %.pre-phi424 = phi i64 [ %.pre423, %TypeChecker_error.exit.i348.loopexit ], [ %328, %else21.i ]
  %338 = phi ptr [ %335, %TypeChecker_error.exit.i348.loopexit ], [ %.pre414, %else21.i ]
  %339 = phi i64 [ %.pre415, %TypeChecker_error.exit.i348.loopexit ], [ %327, %else21.i ]
  store i64 %.pre-phi424, ptr %memberidx.i.i.i345, align 4
  %340 = getelementptr inbounds ptr, ptr %338, i64 %339
  store ptr %326, ptr %340, align 8
  br label %TypeChecker_check_function_body.exit

TypeChecker_check_function_body.exit:             ; preds = %for.body104, %ifend.i338, %ifend16.i, %TypeChecker_error.exit.i348
  %341 = add nuw nsw i64 %i9.0358, 1
  %342 = load ptr, ptr %1, align 8
  %memberidx108 = getelementptr inbounds %Array_FunctionDeclarationNode_, ptr %342, i64 0, i32 1
  %343 = load i64, ptr %memberidx108, align 4
  %344 = icmp slt i64 %341, %343
  br i1 %344, label %for.body104, label %for.end106

for.end106:                                       ; preds = %TypeChecker_check_function_body.exit, %for.end100
  %345 = load i1, ptr %memberidx, align 1
  %346 = load ptr, ptr %memberidx10, align 8
  %347 = load i64, ptr %346, align 4
  %348 = icmp ne i64 %347, 0
  %349 = and i1 %345, %348
  br i1 %349, label %if.entry114, label %ifend116

if.entry114:                                      ; preds = %for.end106
  %350 = load ptr, ptr %0, align 8
  %351 = load ptr, ptr %350, align 8
  %352 = load ptr, ptr %351, align 8
  %353 = load ptr, ptr %352, align 8
  %memberidx1.i219 = getelementptr inbounds %Module, ptr %353, i64 0, i32 5
  %354 = load ptr, ptr %memberidx1.i219, align 8
  store ptr %354, ptr %memberidx10, align 8
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr nonnull %4)
  br label %ifend116

ifend116:                                         ; preds = %for.end106, %if.entry114
  store ptr %3, ptr %memberidx10, align 8
  %355 = load ptr, ptr %memberidx.i246, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %355, i64 0, i32 5
  %356 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %356, i64 0, i32 1
  %357 = load i64, ptr %memberidx2.i, align 4
  %358 = icmp sgt i64 %357, 0
  %spec.select = select i1 %358, ptr null, ptr %4
  br label %common.ret
}

define internal fastcc void @TypeChecker_import_all_from_module(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = load ptr, ptr %0, align 8
  %memberidx6 = getelementptr inbounds %Module, ptr %1, i64 0, i32 5
  %3 = load ptr, ptr %memberidx6, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = load i64, ptr %3, align 4
  %6 = load ptr, ptr %4, align 8
  %7 = getelementptr inbounds ptr, ptr %6, i64 %5
  %8 = load ptr, ptr %7, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %8, i64 0, i32 7
  %9 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %3, i64 0, i32 1
  %10 = load i64, ptr %memberidx3.i, align 4
  %11 = load ptr, ptr %9, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx7 = getelementptr inbounds %Module, ptr %1, i64 0, i32 9
  %14 = load ptr, ptr %memberidx7, align 8
  %15 = tail call ptr @malloc(i32 25)
  %16 = load ptr, ptr %14, align 8
  %memberidx1.i = getelementptr inbounds %Array_VarDeclaration_, ptr %14, i64 0, i32 1
  %17 = load i64, ptr %memberidx1.i, align 4
  %18 = icmp slt i64 %17, 1
  br i1 %18, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i.i.i110 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %19 = phi i64 [ 1, %for.body.lr.ph ], [ %39, %for.body ]
  %imported_var.0210.in = phi ptr [ %16, %for.body.lr.ph ], [ %40, %for.body ]
  %imported_var.0210 = load ptr, ptr %imported_var.0210.in, align 8
  %memberidx9 = getelementptr inbounds %VarDeclaration, ptr %imported_var.0210, i64 0, i32 1
  %20 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %VarDeclaration, ptr %imported_var.0210, i64 0, i32 2
  %21 = load ptr, ptr %memberidx10, align 8
  %22 = load ptr, ptr %0, align 8
  %23 = load ptr, ptr %memberidx.i.i.i110, align 8
  %24 = load i64, ptr %23, align 4
  %25 = load ptr, ptr %22, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %24
  %28 = load ptr, ptr %27, align 8
  %memberidx1.i.i111 = getelementptr inbounds %Module, ptr %28, i64 0, i32 5
  %29 = load ptr, ptr %memberidx1.i.i111, align 8
  %30 = load i64, ptr %29, align 4
  %31 = getelementptr inbounds ptr, ptr %26, i64 %30
  %32 = load ptr, ptr %31, align 8
  %memberidx2.i.i.i112 = getelementptr inbounds %Module, ptr %32, i64 0, i32 7
  %33 = load ptr, ptr %memberidx2.i.i.i112, align 8
  %memberidx3.i.i.i113 = getelementptr inbounds %ScopeId, ptr %29, i64 0, i32 1
  %34 = load i64, ptr %memberidx3.i.i.i113, align 4
  %35 = load ptr, ptr %33, align 8
  %36 = getelementptr inbounds ptr, ptr %35, i64 %34
  %37 = load ptr, ptr %36, align 8
  %memberidx.i114 = getelementptr inbounds %Scope, ptr %37, i64 0, i32 1
  %38 = load ptr, ptr %memberidx.i114, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %38, ptr %20, ptr %21)
  %39 = add nuw nsw i64 %19, 1
  %40 = getelementptr inbounds ptr, ptr %16, i64 %19
  %.not = icmp slt i64 %19, %17
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  tail call void @free(ptr nonnull %15)
  %memberidx12 = getelementptr inbounds %Module, ptr %1, i64 0, i32 8
  %41 = load ptr, ptr %memberidx12, align 8
  %42 = tail call ptr @malloc(i32 25)
  %43 = load ptr, ptr %41, align 8
  %memberidx1.i127 = getelementptr inbounds %Array_ConstDeclaration_, ptr %41, i64 0, i32 1
  %44 = load i64, ptr %memberidx1.i127, align 4
  store i1 false, ptr %42, align 1
  %memberidx1.i.i128 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %42, i64 0, i32 1
  %memberidx2.i.i129 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %42, i64 0, i32 3
  store ptr %43, ptr %memberidx2.i.i129, align 8
  %memberidx3.i.i130 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %42, i64 0, i32 2
  store i64 %44, ptr %memberidx3.i.i130, align 4
  store i64 1, ptr %memberidx1.i.i128, align 4
  %45 = icmp slt i64 %44, 1
  br i1 %45, label %for.end16, label %for.body14.lr.ph

for.body14.lr.ph:                                 ; preds = %for.end
  %memberidx.i.i.i134 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body14

for.body14:                                       ; preds = %for.body14.lr.ph, %for.body14
  %46 = phi i64 [ 1, %for.body14.lr.ph ], [ %66, %for.body14 ]
  %imported_const.0207.in = phi ptr [ %43, %for.body14.lr.ph ], [ %67, %for.body14 ]
  %imported_const.0207 = load ptr, ptr %imported_const.0207.in, align 8
  %memberidx18 = getelementptr inbounds %ConstDeclaration, ptr %imported_const.0207, i64 0, i32 1
  %47 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %ConstDeclaration, ptr %imported_const.0207, i64 0, i32 2
  %48 = load ptr, ptr %memberidx19, align 8
  %49 = load ptr, ptr %0, align 8
  %50 = load ptr, ptr %memberidx.i.i.i134, align 8
  %51 = load i64, ptr %50, align 4
  %52 = load ptr, ptr %49, align 8
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 %51
  %55 = load ptr, ptr %54, align 8
  %memberidx1.i.i135 = getelementptr inbounds %Module, ptr %55, i64 0, i32 5
  %56 = load ptr, ptr %memberidx1.i.i135, align 8
  %57 = load i64, ptr %56, align 4
  %58 = getelementptr inbounds ptr, ptr %53, i64 %57
  %59 = load ptr, ptr %58, align 8
  %memberidx2.i.i.i136 = getelementptr inbounds %Module, ptr %59, i64 0, i32 7
  %60 = load ptr, ptr %memberidx2.i.i.i136, align 8
  %memberidx3.i.i.i137 = getelementptr inbounds %ScopeId, ptr %56, i64 0, i32 1
  %61 = load i64, ptr %memberidx3.i.i.i137, align 4
  %62 = load ptr, ptr %60, align 8
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  %64 = load ptr, ptr %63, align 8
  %memberidx.i138 = getelementptr inbounds %Scope, ptr %64, i64 0, i32 1
  %65 = load ptr, ptr %memberidx.i138, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %65, ptr %47, ptr %48)
  %66 = add nuw nsw i64 %46, 1
  store i64 %66, ptr %memberidx1.i.i128, align 4
  %67 = getelementptr inbounds ptr, ptr %43, i64 %46
  %.not219 = icmp slt i64 %46, %44
  br i1 %.not219, label %for.body14, label %for.end16

for.end16:                                        ; preds = %for.body14, %for.end
  tail call void @free(ptr nonnull %42)
  %memberidx21 = getelementptr inbounds %Module, ptr %1, i64 0, i32 4
  %68 = load ptr, ptr %memberidx21, align 8
  %69 = tail call ptr @malloc(i32 25)
  %70 = load ptr, ptr %68, align 8
  %memberidx1.i142 = getelementptr inbounds %Array_Function_, ptr %68, i64 0, i32 1
  %71 = load i64, ptr %memberidx1.i142, align 4
  store i1 false, ptr %69, align 1
  %memberidx1.i.i143 = getelementptr inbounds %ArrayIterator_Function_, ptr %69, i64 0, i32 1
  %memberidx2.i.i144 = getelementptr inbounds %ArrayIterator_Function_, ptr %69, i64 0, i32 3
  store ptr %70, ptr %memberidx2.i.i144, align 8
  %memberidx3.i.i145 = getelementptr inbounds %ArrayIterator_Function_, ptr %69, i64 0, i32 2
  store i64 %71, ptr %memberidx3.i.i145, align 4
  store i64 1, ptr %memberidx1.i.i143, align 4
  %72 = icmp slt i64 %71, 1
  br i1 %72, label %for.end25, label %for.body23.lr.ph

for.body23.lr.ph:                                 ; preds = %for.end16
  %memberidx.i.i.i156 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body23

for.body23:                                       ; preds = %for.body23.lr.ph, %for.body23
  %73 = phi i64 [ 1, %for.body23.lr.ph ], [ %93, %for.body23 ]
  %imported_func.0204.in = phi ptr [ %70, %for.body23.lr.ph ], [ %94, %for.body23 ]
  %imported_func.0204 = load ptr, ptr %imported_func.0204.in, align 8
  %memberidx27 = getelementptr inbounds %Function, ptr %imported_func.0204, i64 0, i32 1
  %74 = load ptr, ptr %memberidx27, align 8
  %75 = load ptr, ptr %imported_func.0204, align 8
  %76 = load ptr, ptr %0, align 8
  %77 = load ptr, ptr %memberidx.i.i.i156, align 8
  %78 = load i64, ptr %77, align 4
  %79 = load ptr, ptr %76, align 8
  %80 = load ptr, ptr %79, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %78
  %82 = load ptr, ptr %81, align 8
  %memberidx1.i.i157 = getelementptr inbounds %Module, ptr %82, i64 0, i32 5
  %83 = load ptr, ptr %memberidx1.i.i157, align 8
  %84 = load i64, ptr %83, align 4
  %85 = getelementptr inbounds ptr, ptr %80, i64 %84
  %86 = load ptr, ptr %85, align 8
  %memberidx2.i.i.i158 = getelementptr inbounds %Module, ptr %86, i64 0, i32 7
  %87 = load ptr, ptr %memberidx2.i.i.i158, align 8
  %memberidx3.i.i.i159 = getelementptr inbounds %ScopeId, ptr %83, i64 0, i32 1
  %88 = load i64, ptr %memberidx3.i.i.i159, align 4
  %89 = load ptr, ptr %87, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  %memberidx.i160 = getelementptr inbounds %Scope, ptr %91, i64 0, i32 3
  %92 = load ptr, ptr %memberidx.i160, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %92, ptr %74, ptr %75)
  %93 = add nuw nsw i64 %73, 1
  store i64 %93, ptr %memberidx1.i.i143, align 4
  %94 = getelementptr inbounds ptr, ptr %70, i64 %73
  %.not220 = icmp slt i64 %73, %71
  br i1 %.not220, label %for.body23, label %for.end25

for.end25:                                        ; preds = %for.body23, %for.end16
  tail call void @free(ptr nonnull %69)
  %memberidx30 = getelementptr inbounds %Module, ptr %1, i64 0, i32 3
  %95 = load ptr, ptr %memberidx30, align 8
  %96 = tail call ptr @malloc(i32 25)
  %97 = load ptr, ptr %95, align 8
  %memberidx1.i176 = getelementptr inbounds %Array_Class_, ptr %95, i64 0, i32 1
  %98 = load i64, ptr %memberidx1.i176, align 4
  store i1 false, ptr %96, align 1
  %memberidx1.i.i177 = getelementptr inbounds %ArrayIterator_Class_, ptr %96, i64 0, i32 1
  %memberidx2.i.i178 = getelementptr inbounds %ArrayIterator_Class_, ptr %96, i64 0, i32 3
  store ptr %97, ptr %memberidx2.i.i178, align 8
  %memberidx3.i.i179 = getelementptr inbounds %ArrayIterator_Class_, ptr %96, i64 0, i32 2
  store i64 %98, ptr %memberidx3.i.i179, align 4
  store i64 1, ptr %memberidx1.i.i177, align 4
  %99 = icmp slt i64 %98, 1
  br i1 %99, label %for.end34, label %for.body32.lr.ph

for.body32.lr.ph:                                 ; preds = %for.end25
  %memberidx.i.i.i167 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body32

for.body32:                                       ; preds = %for.body32.lr.ph, %for.body32
  %100 = phi i64 [ 1, %for.body32.lr.ph ], [ %124, %for.body32 ]
  %imported_class.0201.in = phi ptr [ %97, %for.body32.lr.ph ], [ %125, %for.body32 ]
  %imported_class.0201 = load ptr, ptr %imported_class.0201.in, align 8
  %memberidx36 = getelementptr inbounds %Class, ptr %imported_class.0201, i64 0, i32 1
  %101 = load ptr, ptr %memberidx36, align 8
  %102 = load ptr, ptr %imported_class.0201, align 8
  %103 = load ptr, ptr %0, align 8
  %104 = load ptr, ptr %memberidx.i.i.i167, align 8
  %105 = load i64, ptr %104, align 4
  %106 = load ptr, ptr %103, align 8
  %107 = load ptr, ptr %106, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %105
  %109 = load ptr, ptr %108, align 8
  %memberidx1.i.i168 = getelementptr inbounds %Module, ptr %109, i64 0, i32 5
  %110 = load ptr, ptr %memberidx1.i.i168, align 8
  %111 = load i64, ptr %110, align 4
  %112 = getelementptr inbounds ptr, ptr %107, i64 %111
  %113 = load ptr, ptr %112, align 8
  %memberidx2.i.i.i169 = getelementptr inbounds %Module, ptr %113, i64 0, i32 7
  %114 = load ptr, ptr %memberidx2.i.i.i169, align 8
  %memberidx3.i.i.i170 = getelementptr inbounds %ScopeId, ptr %110, i64 0, i32 1
  %115 = load i64, ptr %memberidx3.i.i.i170, align 4
  %116 = load ptr, ptr %114, align 8
  %117 = getelementptr inbounds ptr, ptr %116, i64 %115
  %118 = load ptr, ptr %117, align 8
  %memberidx.i171 = getelementptr inbounds %Scope, ptr %118, i64 0, i32 2
  %119 = load ptr, ptr %memberidx.i171, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %119, ptr %101, ptr %102)
  %memberidx1.i172 = getelementptr inbounds %Scope, ptr %118, i64 0, i32 1
  %120 = load ptr, ptr %memberidx1.i172, align 8
  %121 = tail call ptr @malloc(i32 24)
  %122 = load i64, ptr %102, align 4
  %memberidx1.i5.i173 = getelementptr inbounds %TypeId, ptr %102, i64 0, i32 2
  %123 = load i64, ptr %memberidx1.i5.i173, align 4
  store i64 3, ptr %121, align 4
  %memberidx1.i.i.i174 = getelementptr inbounds %VarId, ptr %121, i64 0, i32 1
  store i64 %122, ptr %memberidx1.i.i.i174, align 4
  %memberidx2.i.i6.i175 = getelementptr inbounds %VarId, ptr %121, i64 0, i32 2
  store i64 %123, ptr %memberidx2.i.i6.i175, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %120, ptr %101, ptr nonnull %121)
  %124 = add nuw nsw i64 %100, 1
  store i64 %124, ptr %memberidx1.i.i177, align 4
  %125 = getelementptr inbounds ptr, ptr %97, i64 %100
  %.not221 = icmp slt i64 %100, %98
  br i1 %.not221, label %for.body32, label %for.end34

for.end34:                                        ; preds = %for.body32, %for.end25
  tail call void @free(ptr nonnull %96)
  %memberidx39 = getelementptr inbounds %Module, ptr %1, i64 0, i32 6
  %126 = load ptr, ptr %memberidx39, align 8
  %127 = tail call ptr @malloc(i32 25)
  %128 = load ptr, ptr %126, align 8
  %memberidx1.i152 = getelementptr inbounds %Array_Enum_, ptr %126, i64 0, i32 1
  %129 = load i64, ptr %memberidx1.i152, align 4
  store i1 false, ptr %127, align 1
  %memberidx1.i.i153 = getelementptr inbounds %ArrayIterator_Enum_, ptr %127, i64 0, i32 1
  %memberidx2.i.i154 = getelementptr inbounds %ArrayIterator_Enum_, ptr %127, i64 0, i32 3
  store ptr %128, ptr %memberidx2.i.i154, align 8
  %memberidx3.i.i155 = getelementptr inbounds %ArrayIterator_Enum_, ptr %127, i64 0, i32 2
  store i64 %129, ptr %memberidx3.i.i155, align 4
  store i64 1, ptr %memberidx1.i.i153, align 4
  %130 = icmp slt i64 %129, 1
  br i1 %130, label %for.end43, label %for.body41.lr.ph

for.body41.lr.ph:                                 ; preds = %for.end34
  %memberidx.i.i.i121 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body41

for.body41:                                       ; preds = %for.body41.lr.ph, %for.body41
  %131 = phi i64 [ 1, %for.body41.lr.ph ], [ %155, %for.body41 ]
  %imported_enum.0198.in = phi ptr [ %128, %for.body41.lr.ph ], [ %156, %for.body41 ]
  %imported_enum.0198 = load ptr, ptr %imported_enum.0198.in, align 8
  %memberidx45 = getelementptr inbounds %Enum, ptr %imported_enum.0198, i64 0, i32 1
  %132 = load ptr, ptr %memberidx45, align 8
  %133 = load ptr, ptr %imported_enum.0198, align 8
  %134 = load ptr, ptr %0, align 8
  %135 = load ptr, ptr %memberidx.i.i.i121, align 8
  %136 = load i64, ptr %135, align 4
  %137 = load ptr, ptr %134, align 8
  %138 = load ptr, ptr %137, align 8
  %139 = getelementptr inbounds ptr, ptr %138, i64 %136
  %140 = load ptr, ptr %139, align 8
  %memberidx1.i.i122 = getelementptr inbounds %Module, ptr %140, i64 0, i32 5
  %141 = load ptr, ptr %memberidx1.i.i122, align 8
  %142 = load i64, ptr %141, align 4
  %143 = getelementptr inbounds ptr, ptr %138, i64 %142
  %144 = load ptr, ptr %143, align 8
  %memberidx2.i.i.i123 = getelementptr inbounds %Module, ptr %144, i64 0, i32 7
  %145 = load ptr, ptr %memberidx2.i.i.i123, align 8
  %memberidx3.i.i.i124 = getelementptr inbounds %ScopeId, ptr %141, i64 0, i32 1
  %146 = load i64, ptr %memberidx3.i.i.i124, align 4
  %147 = load ptr, ptr %145, align 8
  %148 = getelementptr inbounds ptr, ptr %147, i64 %146
  %149 = load ptr, ptr %148, align 8
  %memberidx.i125 = getelementptr inbounds %Scope, ptr %149, i64 0, i32 4
  %150 = load ptr, ptr %memberidx.i125, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %150, ptr %132, ptr %133)
  %memberidx1.i126 = getelementptr inbounds %Scope, ptr %149, i64 0, i32 1
  %151 = load ptr, ptr %memberidx1.i126, align 8
  %152 = tail call ptr @malloc(i32 24)
  %153 = load i64, ptr %133, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %133, i64 0, i32 2
  %154 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 4, ptr %152, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %152, i64 0, i32 1
  store i64 %153, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %152, i64 0, i32 2
  store i64 %154, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %151, ptr %132, ptr nonnull %152)
  %155 = add nuw nsw i64 %131, 1
  store i64 %155, ptr %memberidx1.i.i153, align 4
  %156 = getelementptr inbounds ptr, ptr %128, i64 %131
  %.not222 = icmp slt i64 %131, %129
  br i1 %.not222, label %for.body41, label %for.end43

for.end43:                                        ; preds = %for.body41, %for.end34
  tail call void @free(ptr nonnull %127)
  %memberidx48 = getelementptr inbounds %Scope, ptr %13, i64 0, i32 6
  %157 = load ptr, ptr %memberidx48, align 8
  %158 = tail call ptr @malloc(i32 25)
  %159 = load ptr, ptr %157, align 8
  %memberidx1.i105 = getelementptr inbounds %Map_String_Type_, ptr %157, i64 0, i32 1
  %160 = load i64, ptr %memberidx1.i105, align 4
  %memberidx2.i106 = getelementptr inbounds %Map_String_Type_, ptr %157, i64 0, i32 2
  %161 = load i64, ptr %memberidx2.i106, align 4
  store i1 false, ptr %158, align 1
  %memberidx1.i.i107 = getelementptr inbounds %MapIterator_String_Type_, ptr %158, i64 0, i32 1
  store ptr %159, ptr %memberidx1.i.i107, align 8
  %memberidx2.i.i108 = getelementptr inbounds %MapIterator_String_Type_, ptr %158, i64 0, i32 2
  %memberidx3.i.i109 = getelementptr inbounds %MapIterator_String_Type_, ptr %158, i64 0, i32 3
  store i64 %161, ptr %memberidx3.i.i109, align 4
  %162 = add nsw i64 %160, -1
  store i64 %162, ptr %memberidx2.i.i108, align 4
  %163 = icmp sgt i64 %160, 0
  br i1 %163, label %while.entry.i100, label %MapIterator_String_Type__next.exit104

while.entry.i100:                                 ; preds = %for.end43, %ifend.i103
  %164 = phi i64 [ %167, %ifend.i103 ], [ %162, %for.end43 ]
  %165 = phi ptr [ %incdec.ptr.i98, %ifend.i103 ], [ %159, %for.end43 ]
  %incdec.ptr.i98 = getelementptr inbounds ptr, ptr %165, i64 1
  %166 = load ptr, ptr %165, align 8
  %.not.i99 = icmp eq ptr %166, null
  br i1 %.not.i99, label %ifend.i103, label %MapIterator_String_Type__next.exit104.loopexit

ifend.i103:                                       ; preds = %while.entry.i100
  %167 = add nsw i64 %164, -1
  store i64 %167, ptr %memberidx2.i.i108, align 4
  %168 = icmp sgt i64 %164, 0
  br i1 %168, label %while.entry.i100, label %MapIterator_String_Type__next.exit104.loopexit

MapIterator_String_Type__next.exit104.loopexit:   ; preds = %ifend.i103, %while.entry.i100
  %169 = phi i64 [ %167, %ifend.i103 ], [ %164, %while.entry.i100 ]
  store ptr %incdec.ptr.i98, ptr %memberidx1.i.i107, align 8
  br label %MapIterator_String_Type__next.exit104

MapIterator_String_Type__next.exit104:            ; preds = %MapIterator_String_Type__next.exit104.loopexit, %for.end43
  %170 = phi i64 [ %169, %MapIterator_String_Type__next.exit104.loopexit ], [ %162, %for.end43 ]
  %memberidx1.i.i107.promoted194 = phi ptr [ %incdec.ptr.i98, %MapIterator_String_Type__next.exit104.loopexit ], [ %159, %for.end43 ]
  %storemerge187191 = icmp slt i64 %161, 1
  br i1 %storemerge187191, label %for.end52, label %for.body50.lr.ph

for.body50.lr.ph:                                 ; preds = %MapIterator_String_Type__next.exit104
  %memberidx.i.i.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  br label %for.body50

for.body50:                                       ; preds = %for.body50.lr.ph, %MapIterator_String_Type__next.exit
  %171 = phi i64 [ %170, %for.body50.lr.ph ], [ %198, %MapIterator_String_Type__next.exit ]
  %incdec.ptr.i.lcssa196 = phi ptr [ %memberidx1.i.i107.promoted194, %for.body50.lr.ph ], [ %incdec.ptr.i.lcssa195, %MapIterator_String_Type__next.exit ]
  %storemerge188192.in = phi i64 [ %161, %for.body50.lr.ph ], [ %storemerge188192, %MapIterator_String_Type__next.exit ]
  %storemerge188192 = add nsw i64 %storemerge188192.in, -1
  %type_alias_entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa196, i64 -1
  %type_alias_entry.0 = load ptr, ptr %type_alias_entry.0.in, align 8
  %172 = load ptr, ptr %type_alias_entry.0, align 8
  %memberidx55 = getelementptr inbounds %MapEntry_String_Type_, ptr %type_alias_entry.0, i64 0, i32 1
  %173 = load ptr, ptr %memberidx55, align 8
  %174 = load ptr, ptr %0, align 8
  %175 = load ptr, ptr %memberidx.i.i.i, align 8
  %176 = load i64, ptr %175, align 4
  %177 = load ptr, ptr %174, align 8
  %178 = load ptr, ptr %177, align 8
  %179 = getelementptr inbounds ptr, ptr %178, i64 %176
  %180 = load ptr, ptr %179, align 8
  %memberidx1.i.i = getelementptr inbounds %Module, ptr %180, i64 0, i32 5
  %181 = load ptr, ptr %memberidx1.i.i, align 8
  %182 = load i64, ptr %181, align 4
  %183 = getelementptr inbounds ptr, ptr %178, i64 %182
  %184 = load ptr, ptr %183, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %184, i64 0, i32 7
  %185 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %181, i64 0, i32 1
  %186 = load i64, ptr %memberidx3.i.i.i, align 4
  %187 = load ptr, ptr %185, align 8
  %188 = getelementptr inbounds ptr, ptr %187, i64 %186
  %189 = load ptr, ptr %188, align 8
  %memberidx.i92 = getelementptr inbounds %Scope, ptr %189, i64 0, i32 6
  %190 = load ptr, ptr %memberidx.i92, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr %190, ptr %172, ptr %173)
  %191 = add nsw i64 %171, -1
  store i64 %191, ptr %memberidx2.i.i108, align 4
  %192 = icmp sgt i64 %171, 0
  br i1 %192, label %while.entry.i, label %MapIterator_String_Type__next.exit

while.entry.i:                                    ; preds = %for.body50, %ifend.i
  %193 = phi i64 [ %196, %ifend.i ], [ %191, %for.body50 ]
  %194 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa196, %for.body50 ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %194, i64 1
  %195 = load ptr, ptr %194, align 8
  %.not.i = icmp eq ptr %195, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_Type__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %196 = add nsw i64 %193, -1
  store i64 %196, ptr %memberidx2.i.i108, align 4
  %197 = icmp sgt i64 %193, 0
  br i1 %197, label %while.entry.i, label %MapIterator_String_Type__next.exit

MapIterator_String_Type__next.exit:               ; preds = %while.entry.i, %ifend.i, %for.body50
  %198 = phi i64 [ %191, %for.body50 ], [ %193, %while.entry.i ], [ %196, %ifend.i ]
  %incdec.ptr.i.lcssa195 = phi ptr [ %incdec.ptr.i.lcssa196, %for.body50 ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge187 = icmp slt i64 %storemerge188192.in, 2
  br i1 %storemerge187, label %for.cond49.for.end52_crit_edge, label %for.body50

for.cond49.for.end52_crit_edge:                   ; preds = %MapIterator_String_Type__next.exit
  store ptr %incdec.ptr.i.lcssa195, ptr %memberidx1.i.i107, align 8
  br label %for.end52

for.end52:                                        ; preds = %for.cond49.for.end52_crit_edge, %MapIterator_String_Type__next.exit104
  tail call void @free(ptr nonnull %158)
  ret void
}

define internal fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx1 = getelementptr inbounds %TypeCastExpressionNode, ptr %1, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %6)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %8 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %8, i64 0, i32 5
  %9 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %9, i64 0, i32 1
  %10 = load i64, ptr %memberidx2.i, align 4
  %11 = icmp sgt i64 %10, 0
  br i1 %11, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %ifend46, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %43, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %182, %ifend46 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = load ptr, ptr %0, align 8
  %14 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %14, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i, align 4
  %16 = load i64, ptr %7, align 4
  %17 = icmp eq i64 %16, 20
  br i1 %17, label %if.entry.i, label %is_object.exit.thread

if.entry.i:                                       ; preds = %ifend, %if.entry.i
  %.tr5.i = phi ptr [ %18, %if.entry.i ], [ %7, %ifend ]
  %memberidx1.i149 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %18 = load ptr, ptr %memberidx1.i149, align 8
  %19 = load i64, ptr %18, align 4
  switch i64 %19, label %ifend6 [
    i64 20, label %if.entry.i
    i64 11, label %tailrecurse.i.preheader
  ]

is_object.exit.thread:                            ; preds = %ifend
  %20 = icmp eq i64 %16, 11
  br i1 %20, label %if.entry3.i, label %ifend6

tailrecurse.i.preheader:                          ; preds = %if.entry.i
  br i1 %17, label %if.entry.i152, label %if.entry3.i

if.entry.i152:                                    ; preds = %tailrecurse.i.preheader, %if.entry.i152
  %.tr11.i195 = phi ptr [ %21, %if.entry.i152 ], [ %7, %tailrecurse.i.preheader ]
  %memberidx1.i151 = getelementptr inbounds %GenericType, ptr %.tr11.i195, i64 0, i32 3
  %21 = load ptr, ptr %memberidx1.i151, align 8
  %22 = load i64, ptr %21, align 4
  %switch = icmp eq i64 %22, 20
  br i1 %switch, label %if.entry.i152, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i152, %is_object.exit.thread, %tailrecurse.i.preheader
  %.tr11.i.lcssa = phi ptr [ %7, %tailrecurse.i.preheader ], [ %7, %is_object.exit.thread ], [ %21, %if.entry.i152 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %memberidx6.i, align 8
  %24 = load ptr, ptr %13, align 8
  %25 = load i64, ptr %23, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx2.i.i153 = getelementptr inbounds %Module, ptr %28, i64 0, i32 3
  %29 = load ptr, ptr %memberidx2.i.i153, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %23, i64 0, i32 2
  %30 = load i64, ptr %memberidx3.i.i, align 4
  %31 = load ptr, ptr %29, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 %30
  %33 = load ptr, ptr %32, align 8
  %memberidx.i80 = getelementptr inbounds %Class, ptr %33, i64 0, i32 1
  %34 = load ptr, ptr %memberidx.i80, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %34, i64 0, i32 1
  %35 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %35, 6
  br i1 %.not.i.i, label %String___eq__.exit.i, label %ifend6

String___eq__.exit.i:                             ; preds = %if.entry3.i
  %36 = load ptr, ptr %34, align 8
  %37 = tail call i64 @memcmp(ptr %36, ptr %14, i64 6)
  %38 = icmp eq i64 %37, 0
  %39 = load ptr, ptr %33, align 8
  %40 = load i64, ptr %39, align 4
  %41 = icmp eq i64 %40, 1
  %42 = and i1 %38, %41
  br i1 %42, label %if.entry4, label %String___eq__.exit.i.ifend6_crit_edge

String___eq__.exit.i.ifend6_crit_edge:            ; preds = %String___eq__.exit.i
  %.pre = load i64, ptr %7, align 4
  br label %ifend6

if.entry4:                                        ; preds = %String___eq__.exit.i
  %43 = tail call ptr @malloc(i32 49)
  %44 = tail call ptr @malloc(i32 0)
  %45 = tail call ptr @malloc(i32 24)
  store ptr %44, ptr %45, align 8
  %memberidx1.i.i82 = getelementptr inbounds %String, ptr %45, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i82, i8 0, i64 16, i1 false)
  %46 = tail call ptr @malloc(i32 24)
  %memberidx.i84 = getelementptr inbounds %Array_uint_, ptr %46, i64 0, i32 1
  store i64 0, ptr %memberidx.i84, align 4
  %memberidx1.i85 = getelementptr inbounds %Array_uint_, ptr %46, i64 0, i32 2
  store i64 8, ptr %memberidx1.i85, align 4
  %47 = tail call ptr @malloc(i32 64)
  store ptr %47, ptr %46, align 8
  store i64 0, ptr %47, align 4
  store i64 1, ptr %memberidx.i84, align 4
  %48 = tail call ptr @malloc(i32 24)
  %memberidx.i86 = getelementptr inbounds %Array_Expression_, ptr %48, i64 0, i32 1
  store i64 0, ptr %memberidx.i86, align 4
  %memberidx1.i87 = getelementptr inbounds %Array_Expression_, ptr %48, i64 0, i32 2
  store i64 8, ptr %memberidx1.i87, align 4
  %49 = tail call ptr @malloc(i32 64)
  store ptr %49, ptr %48, align 8
  store ptr %5, ptr %49, align 8
  store i64 1, ptr %memberidx.i86, align 4
  store i64 8, ptr %43, align 4
  %memberidx.i.i88 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i88, align 4
  %memberidx1.i.i89 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 1
  %memberidx.i90 = getelementptr inbounds %StringExpression, ptr %43, i64 0, i32 6
  store ptr %48, ptr %memberidx.i90, align 8
  %memberidx1.i91 = getelementptr inbounds %StringExpression, ptr %43, i64 0, i32 5
  store ptr %46, ptr %memberidx1.i91, align 8
  %memberidx2.i92 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i92, align 8
  %memberidx3.i = getelementptr inbounds %StringExpression, ptr %43, i64 0, i32 4
  store ptr %45, ptr %memberidx3.i, align 8
  store i1 true, ptr %memberidx1.i.i89, align 1
  br label %common.ret

ifend6:                                           ; preds = %if.entry.i, %is_object.exit.thread, %String___eq__.exit.i.ifend6_crit_edge, %if.entry3.i
  %50 = phi i64 [ %.pre, %String___eq__.exit.i.ifend6_crit_edge ], [ %16, %if.entry3.i ], [ %16, %is_object.exit.thread ], [ %16, %if.entry.i ]
  %51 = add i64 %50, -1
  %52 = icmp ult i64 %51, 9
  %53 = load i64, ptr %12, align 4
  %54 = add i64 %53, -1
  %55 = icmp ult i64 %54, 9
  %56 = and i1 %52, %55
  %57 = icmp ult i64 %51, 7
  %58 = icmp eq i64 %53, 12
  %59 = and i1 %57, %58
  %60 = icmp ult i64 %54, 7
  %61 = icmp eq i64 %50, 12
  %62 = and i1 %61, %60
  %63 = select i1 %62, i1 true, i1 %59
  %spec.select = select i1 %63, i1 true, i1 %56
  %64 = load ptr, ptr %0, align 8
  %65 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %65, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %66 = tail call ptr @malloc(i32 24)
  store ptr %65, ptr %66, align 8
  %memberidx1.i.i93 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i93, align 4
  %memberidx2.i.i94 = getelementptr inbounds %String, ptr %66, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i94, align 4
  %67 = load i64, ptr %12, align 4
  %68 = icmp eq i64 %67, 20
  br i1 %68, label %if.entry.i156, label %is_object.exit159.thread

if.entry.i156:                                    ; preds = %ifend6, %if.entry.i156
  %.tr5.i154 = phi ptr [ %69, %if.entry.i156 ], [ %12, %ifend6 ]
  %memberidx1.i155 = getelementptr inbounds %GenericType, ptr %.tr5.i154, i64 0, i32 3
  %69 = load ptr, ptr %memberidx1.i155, align 8
  %70 = load i64, ptr %69, align 4
  switch i64 %70, label %ifend25 [
    i64 20, label %if.entry.i156
    i64 11, label %tailrecurse.i161.preheader
  ]

is_object.exit159.thread:                         ; preds = %ifend6
  %71 = icmp eq i64 %67, 11
  br i1 %71, label %if.entry3.i168, label %ifend25

tailrecurse.i161.preheader:                       ; preds = %if.entry.i156
  br i1 %68, label %if.entry.i164, label %if.entry3.i168

if.entry.i164:                                    ; preds = %tailrecurse.i161.preheader, %if.entry.i164
  %.tr11.i160193 = phi ptr [ %72, %if.entry.i164 ], [ %12, %tailrecurse.i161.preheader ]
  %memberidx1.i163 = getelementptr inbounds %GenericType, ptr %.tr11.i160193, i64 0, i32 3
  %72 = load ptr, ptr %memberidx1.i163, align 8
  %73 = load i64, ptr %72, align 4
  %switch188 = icmp eq i64 %73, 20
  br i1 %switch188, label %if.entry.i164, label %if.entry3.i168

if.entry3.i168:                                   ; preds = %if.entry.i164, %is_object.exit159.thread, %tailrecurse.i161.preheader
  %.tr11.i160.lcssa = phi ptr [ %12, %tailrecurse.i161.preheader ], [ %12, %is_object.exit159.thread ], [ %72, %if.entry.i164 ]
  %memberidx6.i165 = getelementptr inbounds %ObjectType, ptr %.tr11.i160.lcssa, i64 0, i32 1
  %74 = load ptr, ptr %memberidx6.i165, align 8
  %75 = load ptr, ptr %64, align 8
  %76 = load i64, ptr %74, align 4
  %77 = load ptr, ptr %75, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %memberidx2.i.i166 = getelementptr inbounds %Module, ptr %79, i64 0, i32 3
  %80 = load ptr, ptr %memberidx2.i.i166, align 8
  %memberidx3.i.i167 = getelementptr inbounds %TypeId, ptr %74, i64 0, i32 2
  %81 = load i64, ptr %memberidx3.i.i167, align 4
  %82 = load ptr, ptr %80, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %memberidx.i96 = getelementptr inbounds %Class, ptr %84, i64 0, i32 1
  %85 = load ptr, ptr %memberidx.i96, align 8
  %memberidx.i.i97 = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  %86 = load i64, ptr %memberidx.i.i97, align 4
  %.not.i.i99 = icmp eq i64 %86, 6
  br i1 %.not.i.i99, label %is_buitin.exit104, label %ifend25

is_buitin.exit104:                                ; preds = %if.entry3.i168
  %87 = load ptr, ptr %85, align 8
  %88 = tail call i64 @memcmp(ptr %87, ptr %65, i64 6)
  %89 = icmp eq i64 %88, 0
  %90 = load ptr, ptr %84, align 8
  %91 = load i64, ptr %90, align 4
  %92 = icmp eq i64 %91, 1
  %93 = and i1 %89, %92
  %94 = and i1 %52, %93
  br i1 %94, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %is_buitin.exit104
  %95 = load i64, ptr %7, align 4
  %96 = and i64 %95, -2
  %97 = icmp eq i64 %96, 8
  br i1 %97, label %if.entry26, label %else27

ifend25:                                          ; preds = %if.entry.i156, %is_object.exit159.thread, %if.entry3.i168, %is_buitin.exit104, %Array_Expression____sl__.exit
  %is_valid_cast.3 = phi i1 [ true, %Array_Expression____sl__.exit ], [ %spec.select, %is_buitin.exit104 ], [ %spec.select, %if.entry3.i168 ], [ %spec.select, %is_object.exit159.thread ], [ %spec.select, %if.entry.i156 ]
  %exp.0 = phi ptr [ %call.0, %Array_Expression____sl__.exit ], [ %5, %is_buitin.exit104 ], [ %5, %if.entry3.i168 ], [ %5, %is_object.exit159.thread ], [ %5, %if.entry.i156 ]
  %98 = load i64, ptr %7, align 4
  %99 = icmp eq i64 %98, 20
  br i1 %99, label %if.entry.i172, label %is_object.exit175

if.entry.i172:                                    ; preds = %ifend25, %if.entry.i172
  %.tr5.i170 = phi ptr [ %100, %if.entry.i172 ], [ %7, %ifend25 ]
  %memberidx1.i171 = getelementptr inbounds %GenericType, ptr %.tr5.i170, i64 0, i32 3
  %100 = load ptr, ptr %memberidx1.i171, align 8
  %101 = load i64, ptr %100, align 4
  %102 = icmp eq i64 %101, 20
  br i1 %102, label %if.entry.i172, label %is_object.exit175

is_object.exit175:                                ; preds = %if.entry.i172, %ifend25
  %.lcssa.i173 = phi i64 [ %98, %ifend25 ], [ %101, %if.entry.i172 ]
  %103 = icmp eq i64 %.lcssa.i173, 11
  %104 = load i64, ptr %12, align 4
  %105 = icmp eq i64 %104, 20
  br i1 %105, label %if.entry.i178, label %is_object.exit181

if.entry.i178:                                    ; preds = %is_object.exit175, %if.entry.i178
  %.tr5.i176 = phi ptr [ %106, %if.entry.i178 ], [ %12, %is_object.exit175 ]
  %memberidx1.i177 = getelementptr inbounds %GenericType, ptr %.tr5.i176, i64 0, i32 3
  %106 = load ptr, ptr %memberidx1.i177, align 8
  %107 = load i64, ptr %106, align 4
  %108 = icmp eq i64 %107, 20
  br i1 %108, label %if.entry.i178, label %is_object.exit181

is_object.exit181:                                ; preds = %if.entry.i178, %is_object.exit175
  %.lcssa.i179 = phi i64 [ %104, %is_object.exit175 ], [ %107, %if.entry.i178 ]
  %109 = icmp eq i64 %.lcssa.i179, 11
  %110 = and i1 %103, %109
  %111 = icmp eq i64 %98, 13
  %112 = icmp eq i64 %104, 13
  %113 = and i1 %111, %112
  %114 = icmp eq i64 %98, 0
  %115 = select i1 %114, i1 true, i1 %113
  %116 = select i1 %115, i1 true, i1 %110
  %spec.select146 = select i1 %116, i1 true, i1 %is_valid_cast.3
  br i1 %spec.select146, label %ifend46, label %if.entry44

if.entry26:                                       ; preds = %if.entry23
  %117 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %117, align 4
  %memberidx.i.i105 = getelementptr inbounds %Expression, ptr %117, i64 0, i32 2
  store i64 18, ptr %memberidx.i.i105, align 4
  %memberidx1.i.i106 = getelementptr inbounds %Expression, ptr %117, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i106, align 1
  %memberidx.i107 = getelementptr inbounds %IntrinsicCall, ptr %117, i64 0, i32 4
  store i64 0, ptr %memberidx.i107, align 4
  %memberidx1.i108 = getelementptr inbounds %IntrinsicCall, ptr %117, i64 0, i32 5
  %118 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %118, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %118, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i, align 4
  %119 = tail call ptr @malloc(i32 64)
  store ptr %119, ptr %118, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %118, ptr %memberidx1.i108, align 8
  %memberidx4.i110 = getelementptr inbounds %Expression, ptr %117, i64 0, i32 3
  %120 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %120, align 4
  store ptr %120, ptr %memberidx4.i110, align 8
  br label %ifend28

else27:                                           ; preds = %if.entry23
  %121 = icmp slt i64 %95, 5
  %122 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %122, align 4
  %memberidx.i.i113 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 2
  store i64 18, ptr %memberidx.i.i113, align 4
  %memberidx1.i.i114 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i114, align 1
  %memberidx.i115 = getelementptr inbounds %IntrinsicCall, ptr %122, i64 0, i32 4
  br i1 %121, label %if.entry31, label %else32

ifend28:                                          ; preds = %if.entry31, %else32, %if.entry26
  %123 = phi ptr [ %118, %if.entry26 ], [ %138, %if.entry31 ], [ %141, %else32 ]
  %call.0 = phi ptr [ %117, %if.entry26 ], [ %122, %if.entry31 ], [ %122, %else32 ]
  %memberidx.i111 = getelementptr inbounds %Array_Expression_, ptr %123, i64 0, i32 1
  %124 = load i64, ptr %memberidx.i111, align 4
  %125 = add i64 %124, 1
  %memberidx.i.i112 = getelementptr inbounds %Array_Expression_, ptr %123, i64 0, i32 2
  %126 = load i64, ptr %memberidx.i.i112, align 4
  %127 = icmp slt i64 %126, %125
  %.pre202 = load ptr, ptr %123, align 8
  br i1 %127, label %while.entry.i.i, label %Array_Expression____sl__.exit

while.entry.i.i:                                  ; preds = %ifend28, %while.entry.i.i
  %128 = phi ptr [ %132, %while.entry.i.i ], [ %.pre202, %ifend28 ]
  %129 = phi i64 [ %133, %while.entry.i.i ], [ %126, %ifend28 ]
  %130 = shl nuw i64 %129, 1
  store i64 %130, ptr %memberidx.i.i112, align 4
  %131 = shl i64 %129, 4
  %132 = tail call ptr @realloc(ptr %128, i64 %131)
  store ptr %132, ptr %123, align 8
  %133 = load i64, ptr %memberidx.i.i112, align 4
  %134 = icmp slt i64 %133, %125
  br i1 %134, label %while.entry.i.i, label %Array_Expression____sl__.exit.loopexit

Array_Expression____sl__.exit.loopexit:           ; preds = %while.entry.i.i
  %.pre203 = load i64, ptr %memberidx.i111, align 4
  %.pre208 = add nsw i64 %.pre203, 1
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend28, %Array_Expression____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre208, %Array_Expression____sl__.exit.loopexit ], [ %125, %ifend28 ]
  %135 = phi ptr [ %132, %Array_Expression____sl__.exit.loopexit ], [ %.pre202, %ifend28 ]
  %136 = phi i64 [ %.pre203, %Array_Expression____sl__.exit.loopexit ], [ %124, %ifend28 ]
  store i64 %.pre-phi, ptr %memberidx.i111, align 4
  %137 = getelementptr inbounds ptr, ptr %135, i64 %136
  store ptr %5, ptr %137, align 8
  br label %ifend25

if.entry31:                                       ; preds = %else27
  store i64 1, ptr %memberidx.i115, align 4
  %memberidx1.i116 = getelementptr inbounds %IntrinsicCall, ptr %122, i64 0, i32 5
  %138 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i117 = getelementptr inbounds %Array_Expression_, ptr %138, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i117, align 4
  %memberidx1.i8.i118 = getelementptr inbounds %Array_Expression_, ptr %138, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i118, align 4
  %139 = tail call ptr @malloc(i32 64)
  store ptr %139, ptr %138, align 8
  store i64 0, ptr %memberidx.i7.i117, align 4
  store ptr %138, ptr %memberidx1.i116, align 8
  %memberidx4.i120 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %140 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %140, align 4
  store ptr %140, ptr %memberidx4.i120, align 8
  br label %ifend28

else32:                                           ; preds = %else27
  store i64 2, ptr %memberidx.i115, align 4
  %memberidx1.i124 = getelementptr inbounds %IntrinsicCall, ptr %122, i64 0, i32 5
  %141 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i125 = getelementptr inbounds %Array_Expression_, ptr %141, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i125, align 4
  %memberidx1.i8.i126 = getelementptr inbounds %Array_Expression_, ptr %141, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i126, align 4
  %142 = tail call ptr @malloc(i32 64)
  store ptr %142, ptr %141, align 8
  store i64 0, ptr %memberidx.i7.i125, align 4
  store ptr %141, ptr %memberidx1.i124, align 8
  %memberidx4.i128 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %143 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %143, align 4
  store ptr %143, ptr %memberidx4.i128, align 8
  br label %ifend28

if.entry44:                                       ; preds = %is_object.exit181
  %144 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %12)
  %memberidx.i129 = getelementptr inbounds %String, ptr %144, i64 0, i32 1
  %145 = load i64, ptr %memberidx.i129, align 4
  %146 = trunc i64 %145 to i32
  %147 = add i32 %146, 1
  %148 = tail call ptr @malloc(i32 %147)
  %149 = load ptr, ptr %144, align 8
  %150 = load i64, ptr %memberidx.i129, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %148, ptr align 8 %149, i64 %150, i1 false)
  %151 = getelementptr inbounds i8, ptr %148, i64 %150
  store i8 0, ptr %151, align 1
  %152 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %7)
  %memberidx.i130 = getelementptr inbounds %String, ptr %152, i64 0, i32 1
  %153 = load i64, ptr %memberidx.i130, align 4
  %154 = trunc i64 %153 to i32
  %155 = add i32 %154, 1
  %156 = tail call ptr @malloc(i32 %155)
  %157 = load ptr, ptr %152, align 8
  %158 = load i64, ptr %memberidx.i130, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %156, ptr align 8 %157, i64 %158, i1 false)
  %159 = getelementptr inbounds i8, ptr %156, i64 %158
  store i8 0, ptr %159, align 1
  %160 = alloca ptr, align 8
  %161 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %160, ptr nonnull @188, ptr %148, ptr %156)
  %162 = load ptr, ptr %160, align 8
  %163 = tail call ptr @malloc(i32 24)
  store ptr %162, ptr %163, align 8
  %memberidx1.i131 = getelementptr inbounds %String, ptr %163, i64 0, i32 1
  store i64 %161, ptr %memberidx1.i131, align 4
  %memberidx2.i132 = getelementptr inbounds %String, ptr %163, i64 0, i32 2
  store i64 %161, ptr %memberidx2.i132, align 4
  tail call void @free(ptr %148)
  tail call void @free(ptr %156)
  %164 = load ptr, ptr %1, align 8
  %165 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i134 = getelementptr inbounds %Compiler, ptr %165, i64 0, i32 5
  %166 = load ptr, ptr %memberidx1.i134, align 8
  %167 = call ptr @malloc(i32 24)
  store i64 5, ptr %167, align 4
  %memberidx1.i.i135 = getelementptr inbounds %FloError, ptr %167, i64 0, i32 2
  store ptr %164, ptr %memberidx1.i.i135, align 8
  %memberidx2.i.i136 = getelementptr inbounds %FloError, ptr %167, i64 0, i32 1
  store ptr %163, ptr %memberidx2.i.i136, align 8
  %memberidx.i.i137 = getelementptr inbounds %Array_FloError_, ptr %166, i64 0, i32 1
  %168 = load i64, ptr %memberidx.i.i137, align 4
  %169 = add i64 %168, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %166, i64 0, i32 2
  %170 = load i64, ptr %memberidx.i.i.i, align 4
  %171 = icmp slt i64 %170, %169
  %.pre205 = load ptr, ptr %166, align 8
  br i1 %171, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry44, %while.entry.i.i.i
  %172 = phi ptr [ %176, %while.entry.i.i.i ], [ %.pre205, %if.entry44 ]
  %173 = phi i64 [ %177, %while.entry.i.i.i ], [ %170, %if.entry44 ]
  %174 = shl nuw i64 %173, 1
  store i64 %174, ptr %memberidx.i.i.i, align 4
  %175 = shl i64 %173, 4
  %176 = call ptr @realloc(ptr %172, i64 %175)
  store ptr %176, ptr %166, align 8
  %177 = load i64, ptr %memberidx.i.i.i, align 4
  %178 = icmp slt i64 %177, %169
  br i1 %178, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre206 = load i64, ptr %memberidx.i.i137, align 4
  %.pre209 = add nsw i64 %.pre206, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry44, %TypeChecker_error.exit.loopexit
  %.pre-phi210 = phi i64 [ %.pre209, %TypeChecker_error.exit.loopexit ], [ %169, %if.entry44 ]
  %179 = phi ptr [ %176, %TypeChecker_error.exit.loopexit ], [ %.pre205, %if.entry44 ]
  %180 = phi i64 [ %.pre206, %TypeChecker_error.exit.loopexit ], [ %168, %if.entry44 ]
  store i64 %.pre-phi210, ptr %memberidx.i.i137, align 4
  %181 = getelementptr inbounds ptr, ptr %179, i64 %180
  store ptr %167, ptr %181, align 8
  br label %common.ret

ifend46:                                          ; preds = %is_object.exit181
  %182 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %182, align 4
  %memberidx.i.i138 = getelementptr inbounds %Expression, ptr %182, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i138, align 4
  %memberidx1.i.i139 = getelementptr inbounds %Expression, ptr %182, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i139, align 1
  %memberidx.i140 = getelementptr inbounds %TypeCastExpression, ptr %182, i64 0, i32 4
  store ptr %exp.0, ptr %memberidx.i140, align 8
  %memberidx1.i141 = getelementptr inbounds %Expression, ptr %182, i64 0, i32 3
  store ptr %7, ptr %memberidx1.i141, align 8
  %memberidx3.i143 = getelementptr inbounds %Expression, ptr %exp.0, i64 0, i32 1
  %183 = load i1, ptr %memberidx3.i143, align 1
  store i1 %183, ptr %memberidx1.i.i139, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_fill_in_call_args(ptr %0, ptr nocapture readonly %1, ptr readonly %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 1
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i, align 4
  %memberidx3 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  %6 = load i64, ptr %memberidx3, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx4 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Expression____sl__.exit
  %8 = phi ptr [ %5, %for.body.lr.ph ], [ %37, %Array_Expression____sl__.exit ]
  %memberidx1.i.promoted54 = phi i64 [ 8, %for.body.lr.ph ], [ %38, %Array_Expression____sl__.exit ]
  %9 = phi i64 [ 0, %for.body.lr.ph ], [ %29, %Array_Expression____sl__.exit ]
  %i.058 = phi i64 [ 0, %for.body.lr.ph ], [ %40, %Array_Expression____sl__.exit ]
  %10 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Array_Type_, ptr %10, i64 0, i32 1
  %11 = load i64, ptr %memberidx5, align 4
  %12 = icmp sgt i64 %11, %i.058
  br i1 %12, label %true_block, label %false_block

for.end:                                          ; preds = %Array_Expression____sl__.exit, %for.entry
  %.promoted67 = phi ptr [ %5, %for.entry ], [ %37, %Array_Expression____sl__.exit ]
  %13 = phi i64 [ 8, %for.entry ], [ %38, %Array_Expression____sl__.exit ]
  %14 = phi i64 [ 0, %for.entry ], [ %29, %Array_Expression____sl__.exit ]
  %.lcssa = phi i64 [ %6, %for.entry ], [ %41, %Array_Expression____sl__.exit ]
  %memberidx.i42 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %15 = load ptr, ptr %memberidx.i42, align 8
  %memberidx1.i43 = getelementptr inbounds %Compiler, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx1.i43, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 1
  %17 = load i64, ptr %memberidx2.i, align 4
  %18 = icmp sgt i64 %17, 0
  %19 = icmp eq ptr %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %common.ret, label %ifend

true_block:                                       ; preds = %for.body
  %21 = load ptr, ptr %10, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %i.058
  %23 = load ptr, ptr %22, align 8
  br label %end

false_block:                                      ; preds = %for.body
  %24 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %24, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %23, %true_block ], [ %24, %false_block ]
  %25 = load ptr, ptr %3, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %i.058
  %27 = load ptr, ptr %26, align 8
  %28 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %ternary, ptr %27)
  %29 = add nuw i64 %9, 1
  %30 = icmp slt i64 %memberidx1.i.promoted54, %29
  br i1 %30, label %while.entry.i.i, label %Array_Expression____sl__.exit

while.entry.i.i:                                  ; preds = %end, %while.entry.i.i
  %31 = phi ptr [ %35, %while.entry.i.i ], [ %8, %end ]
  %32 = phi i64 [ %33, %while.entry.i.i ], [ %memberidx1.i.promoted54, %end ]
  %33 = shl nuw i64 %32, 1
  %34 = shl i64 %32, 4
  %35 = tail call ptr @realloc(ptr %31, i64 %34)
  %36 = icmp slt i64 %33, %29
  br i1 %36, label %while.entry.i.i, label %Array_Expression____sl__.exit.loopexit

Array_Expression____sl__.exit.loopexit:           ; preds = %while.entry.i.i
  store i64 %33, ptr %memberidx1.i, align 4
  store ptr %35, ptr %4, align 8
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %Array_Expression____sl__.exit.loopexit, %end
  %37 = phi ptr [ %35, %Array_Expression____sl__.exit.loopexit ], [ %8, %end ]
  %38 = phi i64 [ %33, %Array_Expression____sl__.exit.loopexit ], [ %memberidx1.i.promoted54, %end ]
  store i64 %29, ptr %memberidx.i, align 4
  %39 = getelementptr inbounds ptr, ptr %37, i64 %9
  store ptr %28, ptr %39, align 8
  %40 = add nuw nsw i64 %i.058, 1
  %41 = load i64, ptr %memberidx3, align 4
  %42 = icmp slt i64 %40, %41
  br i1 %42, label %for.body, label %for.end

common.ret:                                       ; preds = %ifend22, %ifend, %for.end
  ret ptr %4

ifend:                                            ; preds = %for.end
  %memberidx7 = getelementptr inbounds %Array_FunctionArg_, ptr %2, i64 0, i32 1
  %43 = load i64, ptr %memberidx7, align 4
  %44 = icmp sgt i64 %43, %.lcssa
  br i1 %44, label %for.body15, label %common.ret

for.body15:                                       ; preds = %ifend, %ifend22
  %45 = phi i64 [ %63, %ifend22 ], [ %43, %ifend ]
  %46 = phi ptr [ %64, %ifend22 ], [ %.promoted67, %ifend ]
  %.promoted = phi ptr [ %.promoted65, %ifend22 ], [ %.promoted67, %ifend ]
  %memberidx1.i.promoted = phi i64 [ %65, %ifend22 ], [ %13, %ifend ]
  %47 = phi i64 [ %66, %ifend22 ], [ %14, %ifend ]
  %i1.053 = phi i64 [ %67, %ifend22 ], [ %.lcssa, %ifend ]
  %48 = load ptr, ptr %2, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %i1.053
  %50 = load ptr, ptr %49, align 8
  %memberidx19 = getelementptr inbounds %FunctionArg, ptr %50, i64 0, i32 6
  %51 = load ptr, ptr %memberidx19, align 8
  %.not = icmp eq ptr %51, null
  br i1 %.not, label %ifend22, label %if.entry20

if.entry20:                                       ; preds = %for.body15
  %52 = add nuw i64 %47, 1
  %53 = icmp slt i64 %memberidx1.i.promoted, %52
  br i1 %53, label %while.entry.i.i47, label %Array_Expression____sl__.exit48

while.entry.i.i47:                                ; preds = %if.entry20, %while.entry.i.i47
  %54 = phi ptr [ %58, %while.entry.i.i47 ], [ %.promoted, %if.entry20 ]
  %55 = phi i64 [ %56, %while.entry.i.i47 ], [ %memberidx1.i.promoted, %if.entry20 ]
  %56 = shl nuw i64 %55, 1
  %57 = shl i64 %55, 4
  %58 = tail call ptr @realloc(ptr %54, i64 %57)
  %59 = icmp slt i64 %56, %52
  br i1 %59, label %while.entry.i.i47, label %Array_Expression____sl__.exit48.loopexit

Array_Expression____sl__.exit48.loopexit:         ; preds = %while.entry.i.i47
  store i64 %56, ptr %memberidx1.i, align 4
  store ptr %58, ptr %4, align 8
  br label %Array_Expression____sl__.exit48

Array_Expression____sl__.exit48:                  ; preds = %Array_Expression____sl__.exit48.loopexit, %if.entry20
  %60 = phi ptr [ %58, %Array_Expression____sl__.exit48.loopexit ], [ %46, %if.entry20 ]
  %61 = phi i64 [ %56, %Array_Expression____sl__.exit48.loopexit ], [ %memberidx1.i.promoted, %if.entry20 ]
  store i64 %52, ptr %memberidx.i, align 4
  %62 = getelementptr inbounds ptr, ptr %60, i64 %47
  store ptr %51, ptr %62, align 8
  %.pre = load i64, ptr %memberidx7, align 4
  br label %ifend22

ifend22:                                          ; preds = %for.body15, %Array_Expression____sl__.exit48
  %63 = phi i64 [ %45, %for.body15 ], [ %.pre, %Array_Expression____sl__.exit48 ]
  %64 = phi ptr [ %46, %for.body15 ], [ %60, %Array_Expression____sl__.exit48 ]
  %.promoted65 = phi ptr [ %.promoted, %for.body15 ], [ %60, %Array_Expression____sl__.exit48 ]
  %65 = phi i64 [ %memberidx1.i.promoted, %for.body15 ], [ %61, %Array_Expression____sl__.exit48 ]
  %66 = phi i64 [ %47, %for.body15 ], [ %52, %Array_Expression____sl__.exit48 ]
  %67 = add nsw i64 %i1.053, 1
  %68 = icmp slt i64 %67, %63
  br i1 %68, label %for.body15, label %common.ret
}

define internal fastcc void @TypeChecker_add_inherited_props_to_class(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 20
  br i1 %6, label %if.entry.i113, label %is_object.exit

if.entry.i113:                                    ; preds = %3, %if.entry.i113
  %.tr5.i = phi ptr [ %7, %if.entry.i113 ], [ %4, %3 ]
  %memberidx1.i112 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1.i112, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 20
  br i1 %9, label %if.entry.i113, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i113, %3
  %.lcssa.i = phi i64 [ %5, %3 ], [ %8, %if.entry.i113 ]
  %10 = icmp eq i64 %.lcssa.i, 11
  br i1 %10, label %ifend, label %if.entry

if.entry:                                         ; preds = %is_object.exit
  %11 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %4)
  %memberidx.i = getelementptr inbounds %String, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = trunc i64 %12 to i32
  %14 = add i32 %13, 1
  %15 = tail call ptr @malloc(i32 %14)
  %16 = load ptr, ptr %11, align 8
  %17 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %16, i64 %17, i1 false)
  %18 = getelementptr inbounds i8, ptr %15, i64 %17
  store i8 0, ptr %18, align 1
  %19 = alloca ptr, align 8
  %20 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %19, ptr nonnull @154, ptr %15)
  %21 = load ptr, ptr %19, align 8
  %22 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %22, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %22, i64 0, i32 2
  store i64 %20, ptr %memberidx2.i, align 4
  tail call void @free(ptr %15)
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 2
  %23 = load ptr, ptr %memberidx1, align 8
  %24 = load ptr, ptr %23, align 8
  %memberidx.i58 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i58, align 8
  %memberidx1.i59 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i59, align 8
  %27 = call ptr @malloc(i32 24)
  store i64 5, ptr %27, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %27, i64 0, i32 2
  store ptr %24, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %27, i64 0, i32 1
  store ptr %22, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %28 = load i64, ptr %memberidx.i.i, align 4
  %29 = add i64 %28, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 2
  %30 = load i64, ptr %memberidx.i.i.i, align 4
  %31 = icmp slt i64 %30, %29
  %.pre = load ptr, ptr %26, align 8
  br i1 %31, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %32 = phi ptr [ %36, %while.entry.i.i.i ], [ %.pre, %if.entry ]
  %33 = phi i64 [ %37, %while.entry.i.i.i ], [ %30, %if.entry ]
  %34 = shl nuw i64 %33, 1
  store i64 %34, ptr %memberidx.i.i.i, align 4
  %35 = shl i64 %33, 4
  %36 = call ptr @realloc(ptr %32, i64 %35)
  store ptr %36, ptr %26, align 8
  %37 = load i64, ptr %memberidx.i.i.i, align 4
  %38 = icmp slt i64 %37, %29
  br i1 %38, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre140 = load i64, ptr %memberidx.i.i, align 4
  %.pre151 = add nsw i64 %.pre140, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre151, %TypeChecker_error.exit.loopexit ], [ %29, %if.entry ]
  %39 = phi ptr [ %36, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %40 = phi i64 [ %.pre140, %TypeChecker_error.exit.loopexit ], [ %28, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %41 = getelementptr inbounds ptr, ptr %39, i64 %40
  store ptr %27, ptr %41, align 8
  %.pre142 = load i64, ptr %4, align 4
  br label %ifend

ifend:                                            ; preds = %is_object.exit, %TypeChecker_error.exit
  %42 = phi i64 [ %5, %is_object.exit ], [ %.pre142, %TypeChecker_error.exit ]
  %43 = load ptr, ptr %0, align 8
  %switch134 = icmp eq i64 %42, 20
  br i1 %switch134, label %if.entry.i117, label %if.entry3.i

if.entry.i117:                                    ; preds = %ifend, %if.entry.i117
  %.tr11.i135 = phi ptr [ %44, %if.entry.i117 ], [ %4, %ifend ]
  %memberidx1.i116 = getelementptr inbounds %GenericType, ptr %.tr11.i135, i64 0, i32 3
  %44 = load ptr, ptr %memberidx1.i116, align 8
  %45 = load i64, ptr %44, align 4
  %switch = icmp eq i64 %45, 20
  br i1 %switch, label %if.entry.i117, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i117, %ifend
  %.tr11.i.lcssa = phi ptr [ %4, %ifend ], [ %44, %if.entry.i117 ]
  %memberidx6.i118 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %46 = load ptr, ptr %memberidx6.i118, align 8
  %47 = load ptr, ptr %43, align 8
  %48 = load i64, ptr %46, align 4
  %49 = load ptr, ptr %47, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 %48
  %51 = load ptr, ptr %50, align 8
  %memberidx2.i.i119 = getelementptr inbounds %Module, ptr %51, i64 0, i32 3
  %52 = load ptr, ptr %memberidx2.i.i119, align 8
  %memberidx3.i.i120 = getelementptr inbounds %TypeId, ptr %46, i64 0, i32 2
  %53 = load i64, ptr %memberidx3.i.i120, align 4
  %54 = load ptr, ptr %52, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  %memberidx4 = getelementptr inbounds %Class, ptr %56, i64 0, i32 6
  %57 = load ptr, ptr %memberidx4, align 8
  %58 = call ptr @malloc(i32 25)
  %59 = load ptr, ptr %57, align 8
  %memberidx1.i60 = getelementptr inbounds %Map_String_PropId_, ptr %57, i64 0, i32 1
  %60 = load i64, ptr %memberidx1.i60, align 4
  %memberidx2.i61 = getelementptr inbounds %Map_String_PropId_, ptr %57, i64 0, i32 2
  %61 = load i64, ptr %memberidx2.i61, align 4
  store i1 false, ptr %58, align 1
  %memberidx1.i.i62 = getelementptr inbounds %MapIterator_String_PropId_, ptr %58, i64 0, i32 1
  store ptr %59, ptr %memberidx1.i.i62, align 8
  %memberidx2.i.i63 = getelementptr inbounds %MapIterator_String_PropId_, ptr %58, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %58, i64 0, i32 3
  store i64 %61, ptr %memberidx3.i.i, align 4
  %62 = add nsw i64 %60, -1
  store i64 %62, ptr %memberidx2.i.i63, align 4
  %63 = icmp sgt i64 %60, 0
  br i1 %63, label %while.entry.i, label %MapIterator_String_PropId__next.exit

while.entry.i:                                    ; preds = %if.entry3.i, %ifend.i
  %64 = phi i64 [ %67, %ifend.i ], [ %62, %if.entry3.i ]
  %65 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %59, %if.entry3.i ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %65, i64 1
  %66 = load ptr, ptr %65, align 8
  %.not.i = icmp eq ptr %66, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %67 = add nsw i64 %64, -1
  store i64 %67, ptr %memberidx2.i.i63, align 4
  %68 = icmp sgt i64 %64, 0
  br i1 %68, label %while.entry.i, label %MapIterator_String_PropId__next.exit.loopexit

MapIterator_String_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %69 = phi i64 [ %67, %ifend.i ], [ %64, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i62, align 8
  br label %MapIterator_String_PropId__next.exit

MapIterator_String_PropId__next.exit:             ; preds = %MapIterator_String_PropId__next.exit.loopexit, %if.entry3.i
  %70 = phi i64 [ %69, %MapIterator_String_PropId__next.exit.loopexit ], [ %62, %if.entry3.i ]
  %memberidx1.i.i62.promoted131 = phi ptr [ %incdec.ptr.i, %MapIterator_String_PropId__next.exit.loopexit ], [ %59, %if.entry3.i ]
  %storemerge128 = icmp slt i64 %61, 1
  br i1 %storemerge128, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_String_PropId__next.exit
  %memberidx9 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx25 = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %memberidx31 = getelementptr inbounds %Class, ptr %1, i64 0, i32 8
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_String_PropId__next.exit78
  %71 = phi i64 [ %70, %for.body.lr.ph ], [ %152, %MapIterator_String_PropId__next.exit78 ]
  %incdec.ptr.i72.lcssa133 = phi ptr [ %memberidx1.i.i62.promoted131, %for.body.lr.ph ], [ %incdec.ptr.i72.lcssa132, %MapIterator_String_PropId__next.exit78 ]
  %storemerge125129.in = phi i64 [ %61, %for.body.lr.ph ], [ %storemerge125129, %MapIterator_String_PropId__next.exit78 ]
  %storemerge125129 = add nsw i64 %storemerge125129.in, -1
  %parent_entry_prop.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i72.lcssa133, i64 -1
  %parent_entry_prop.0 = load ptr, ptr %parent_entry_prop.0.in, align 8
  %72 = load ptr, ptr %parent_entry_prop.0, align 8
  %memberidx7 = getelementptr inbounds %MapEntry_String_PropId_, ptr %parent_entry_prop.0, i64 0, i32 1
  %73 = load ptr, ptr %memberidx7, align 8
  %74 = load ptr, ptr %0, align 8
  %memberidx.i.i66 = getelementptr inbounds %PropId, ptr %73, i64 0, i32 1
  %75 = load ptr, ptr %memberidx.i.i66, align 8
  %76 = load ptr, ptr %74, align 8
  %77 = load i64, ptr %75, align 4
  %78 = load ptr, ptr %76, align 8
  %79 = getelementptr inbounds ptr, ptr %78, i64 %77
  %80 = load ptr, ptr %79, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %80, i64 0, i32 3
  %81 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %75, i64 0, i32 2
  %82 = load i64, ptr %memberidx3.i.i.i, align 4
  %83 = load ptr, ptr %81, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %82
  %85 = load ptr, ptr %84, align 8
  %86 = load i64, ptr %73, align 4
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %if.entry.i, label %ifend.i69

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i67 = getelementptr inbounds %Class, ptr %85, i64 0, i32 5
  %88 = load ptr, ptr %memberidx1.i67, align 8
  %memberidx2.i68 = getelementptr inbounds %PropId, ptr %73, i64 0, i32 2
  %89 = load i64, ptr %memberidx2.i68, align 4
  %90 = load ptr, ptr %88, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 %89
  %92 = load ptr, ptr %91, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %92, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i69:                                        ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %85, i64 0, i32 4
  %93 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %73, i64 0, i32 2
  %94 = load i64, ptr %memberidx5.i, align 4
  %95 = load ptr, ptr %93, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %94
  %97 = load ptr, ptr %96, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %97, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i69
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i69 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %98 = load ptr, ptr %memberidx9, align 8
  %99 = call fastcc i64 @Map_String_PropId__hash_fnc(ptr %72)
  %memberidx.i105 = getelementptr inbounds %Map_String_PropId_, ptr %98, i64 0, i32 1
  %100 = load i64, ptr %memberidx.i105, align 4
  %101 = urem i64 %99, %100
  %102 = load ptr, ptr %98, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  %104 = load ptr, ptr %103, align 8
  %.not.i106 = icmp eq ptr %104, null
  br i1 %.not.i106, label %Map_String_PropId____getitem__.exit, label %while.entry.i109.preheader

while.entry.i109.preheader:                       ; preds = %get_class_prop_type.exit
  %memberidx1.i.i108 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  br label %while.entry.i109

while.entry.i109:                                 ; preds = %while.entry.i109.preheader, %else.i
  %105 = phi ptr [ %115, %else.i ], [ %102, %while.entry.i109.preheader ]
  %106 = phi i64 [ %116, %else.i ], [ %100, %while.entry.i109.preheader ]
  %107 = phi ptr [ %120, %else.i ], [ %104, %while.entry.i109.preheader ]
  %hash.0.i = phi i64 [ %118, %else.i ], [ %101, %while.entry.i109.preheader ]
  %108 = load ptr, ptr %107, align 8
  %memberidx.i.i107 = getelementptr inbounds %String, ptr %108, i64 0, i32 1
  %109 = load i64, ptr %memberidx.i.i107, align 4
  %110 = load i64, ptr %memberidx1.i.i108, align 4
  %.not.i.i = icmp eq i64 %109, %110
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i109
  %111 = load ptr, ptr %108, align 8
  %112 = load ptr, ptr %72, align 8
  %113 = call i64 @memcmp(ptr %111, ptr %112, i64 %109)
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre144 = load i64, ptr %memberidx.i105, align 4
  %.pre145 = load ptr, ptr %98, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre146.pre = load ptr, ptr %98, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre146.pre, i64 %hash.0.i
  %.pre147.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre147.pre, null
  br i1 %.not25.i, label %Map_String_PropId____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i109
  %115 = phi ptr [ %.pre145, %ifend.i.i.else.i_crit_edge ], [ %105, %while.entry.i109 ]
  %116 = phi i64 [ %.pre144, %ifend.i.i.else.i_crit_edge ], [ %106, %while.entry.i109 ]
  %117 = add nuw i64 %hash.0.i, 1
  %118 = urem i64 %117, %116
  %119 = getelementptr inbounds ptr, ptr %115, i64 %118
  %120 = load ptr, ptr %119, align 8
  %.not26.i = icmp eq ptr %120, null
  br i1 %.not26.i, label %Map_String_PropId____getitem__.exit, label %while.entry.i109

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre147.pre, i64 0, i32 1
  %121 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_PropId____getitem__.exit

Map_String_PropId____getitem__.exit:              ; preds = %else.i, %get_class_prop_type.exit, %while.end.i, %if.entry7.i
  %common.ret.op.i110 = phi ptr [ %121, %if.entry7.i ], [ null, %while.end.i ], [ null, %get_class_prop_type.exit ], [ null, %else.i ]
  %122 = load ptr, ptr %0, align 8
  %123 = load ptr, ptr %memberidx.i.i66, align 8
  %124 = load ptr, ptr %122, align 8
  %125 = load i64, ptr %123, align 4
  %126 = load ptr, ptr %124, align 8
  %127 = getelementptr inbounds ptr, ptr %126, i64 %125
  %128 = load ptr, ptr %127, align 8
  %memberidx2.i.i.i93 = getelementptr inbounds %Module, ptr %128, i64 0, i32 3
  %129 = load ptr, ptr %memberidx2.i.i.i93, align 8
  %memberidx3.i.i.i94 = getelementptr inbounds %TypeId, ptr %123, i64 0, i32 2
  %130 = load i64, ptr %memberidx3.i.i.i94, align 4
  %131 = load ptr, ptr %129, align 8
  %132 = getelementptr inbounds ptr, ptr %131, i64 %130
  %133 = load ptr, ptr %132, align 8
  %134 = load i64, ptr %73, align 4
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %if.entry.i87, label %ifend.i91

if.entry.i87:                                     ; preds = %Map_String_PropId____getitem__.exit
  %memberidx1.i97 = getelementptr inbounds %Class, ptr %133, i64 0, i32 5
  %136 = load ptr, ptr %memberidx1.i97, align 8
  %memberidx2.i98 = getelementptr inbounds %PropId, ptr %73, i64 0, i32 2
  %137 = load i64, ptr %memberidx2.i98, align 4
  %138 = load ptr, ptr %136, align 8
  %139 = getelementptr inbounds ptr, ptr %138, i64 %137
  %140 = load ptr, ptr %139, align 8
  %memberidx3.i99 = getelementptr inbounds %ClassMethod, ptr %140, i64 0, i32 2
  %memberidx3.i86 = getelementptr inbounds %ClassMethod, ptr %140, i64 0, i32 1
  br label %is_class_prop_static.exit

ifend.i91:                                        ; preds = %Map_String_PropId____getitem__.exit
  %memberidx4.i101 = getelementptr inbounds %Class, ptr %133, i64 0, i32 4
  %141 = load ptr, ptr %memberidx4.i101, align 8
  %memberidx5.i102 = getelementptr inbounds %PropId, ptr %73, i64 0, i32 2
  %142 = load i64, ptr %memberidx5.i102, align 4
  %143 = load ptr, ptr %141, align 8
  %144 = getelementptr inbounds ptr, ptr %143, i64 %142
  %145 = load ptr, ptr %144, align 8
  %memberidx6.i103 = getelementptr inbounds %ClassField, ptr %145, i64 0, i32 2
  %memberidx6.i90 = getelementptr inbounds %ClassField, ptr %145, i64 0, i32 1
  br label %is_class_prop_static.exit

is_class_prop_static.exit:                        ; preds = %if.entry.i87, %ifend.i91
  %common.ret.op.i96123.in = phi ptr [ %memberidx3.i99, %if.entry.i87 ], [ %memberidx6.i103, %ifend.i91 ]
  %common.ret.op.in.i82 = phi ptr [ %memberidx3.i86, %if.entry.i87 ], [ %memberidx6.i90, %ifend.i91 ]
  %common.ret.op.i83 = load i1, ptr %common.ret.op.in.i82, align 1
  br i1 %common.ret.op.i83, label %for.incr, label %ifend14

for.incr:                                         ; preds = %ifend30, %ifend14, %is_class_prop_static.exit
  %146 = add nsw i64 %71, -1
  store i64 %146, ptr %memberidx2.i.i63, align 4
  %147 = icmp sgt i64 %71, 0
  br i1 %147, label %while.entry.i74, label %MapIterator_String_PropId__next.exit78

while.entry.i74:                                  ; preds = %for.incr, %ifend.i77
  %148 = phi i64 [ %151, %ifend.i77 ], [ %146, %for.incr ]
  %149 = phi ptr [ %incdec.ptr.i72, %ifend.i77 ], [ %incdec.ptr.i72.lcssa133, %for.incr ]
  %incdec.ptr.i72 = getelementptr inbounds ptr, ptr %149, i64 1
  %150 = load ptr, ptr %149, align 8
  %.not.i73 = icmp eq ptr %150, null
  br i1 %.not.i73, label %ifend.i77, label %MapIterator_String_PropId__next.exit78

ifend.i77:                                        ; preds = %while.entry.i74
  %151 = add nsw i64 %148, -1
  store i64 %151, ptr %memberidx2.i.i63, align 4
  %.not156 = icmp eq i64 %148, 0
  br i1 %.not156, label %MapIterator_String_PropId__next.exit78, label %while.entry.i74

MapIterator_String_PropId__next.exit78:           ; preds = %while.entry.i74, %ifend.i77, %for.incr
  %152 = phi i64 [ %146, %for.incr ], [ %148, %while.entry.i74 ], [ -1, %ifend.i77 ]
  %incdec.ptr.i72.lcssa132 = phi ptr [ %incdec.ptr.i72.lcssa133, %for.incr ], [ %incdec.ptr.i72, %ifend.i77 ], [ %incdec.ptr.i72, %while.entry.i74 ]
  %storemerge = icmp slt i64 %storemerge125129.in, 2
  br i1 %storemerge, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %MapIterator_String_PropId__next.exit78
  store ptr %incdec.ptr.i72.lcssa132, ptr %memberidx1.i.i62, align 8
  br label %for.end

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %MapIterator_String_PropId__next.exit
  tail call void @free(ptr nonnull %58)
  ret void

ifend14:                                          ; preds = %is_class_prop_static.exit
  %common.ret.op.i96123 = load i64, ptr %common.ret.op.i96123.in, align 4
  %153 = icmp ne i64 %common.ret.op.i96123, 1
  %154 = load i64, ptr %common.ret.op.i, align 4
  %155 = icmp ne i64 %154, 16
  %.not = or i1 %153, %155
  %156 = icmp eq ptr %common.ret.op.i110, null
  %or.cond = select i1 %.not, i1 %156, i1 false
  br i1 %or.cond, label %if.entry18, label %for.incr

if.entry18:                                       ; preds = %ifend14
  %157 = icmp eq i64 %134, 1
  br i1 %157, label %if.entry22, label %ifend24

if.entry22:                                       ; preds = %if.entry18
  %158 = load i64, ptr %memberidx25, align 4
  %159 = add nsw i64 %158, 1
  store i64 %159, ptr %memberidx25, align 4
  %.pre148 = load i64, ptr %73, align 4
  br label %ifend24

ifend24:                                          ; preds = %if.entry18, %if.entry22
  %160 = phi i64 [ %134, %if.entry18 ], [ %.pre148, %if.entry22 ]
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend24
  %162 = load i64, ptr %memberidx31, align 4
  %163 = add nsw i64 %162, 1
  store i64 %163, ptr %memberidx31, align 4
  br label %ifend30

ifend30:                                          ; preds = %ifend24, %if.entry28
  %164 = load ptr, ptr %memberidx9, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %164, ptr %72, ptr nonnull %73)
  br label %for.incr
}

define internal fastcc ptr @TypeChecker_check_match_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca %Type, align 8
  store i64 21, ptr %3, align 8
  %memberidx = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend13, %else12, %if.entry11, %2, %TypeChecker_error.exit238, %ifend72, %TypeChecker_error.exit226, %TypeChecker_error.exit216, %TypeChecker_error.exit197, %TypeChecker_error.exit185, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit185 ], [ null, %TypeChecker_error.exit197 ], [ null, %TypeChecker_error.exit216 ], [ null, %TypeChecker_error.exit226 ], [ %40, %ifend72 ], [ null, %TypeChecker_error.exit238 ], [ null, %2 ], [ null, %if.entry11 ], [ null, %else12 ], [ null, %ifend13 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx.i143 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  %10 = load i64, ptr %memberidx.i143, align 4
  %11 = icmp eq i64 %10, 5
  br i1 %11, label %if.entry3, label %ifend5

if.entry3:                                        ; preds = %ifend
  %12 = call ptr @malloc(i32 31)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(31) %12, ptr noundef nonnull align 8 dereferenceable(31) @222, i64 31, i1 false)
  %13 = call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  store i64 31, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 2
  store i64 31, ptr %memberidx2.i.i, align 4
  %14 = load ptr, ptr %memberidx, align 8
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i145 = getelementptr inbounds %Compiler, ptr %16, i64 0, i32 5
  %17 = load ptr, ptr %memberidx1.i145, align 8
  %18 = call ptr @malloc(i32 24)
  store i64 5, ptr %18, align 4
  %memberidx1.i.i146 = getelementptr inbounds %FloError, ptr %18, i64 0, i32 2
  store ptr %15, ptr %memberidx1.i.i146, align 8
  %memberidx2.i.i147 = getelementptr inbounds %FloError, ptr %18, i64 0, i32 1
  store ptr %13, ptr %memberidx2.i.i147, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i.i, align 4
  %20 = add i64 %19, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 2
  %21 = load i64, ptr %memberidx.i.i.i, align 4
  %22 = icmp slt i64 %21, %20
  %.pre39 = load ptr, ptr %17, align 8
  br i1 %22, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry3, %while.entry.i.i.i
  %23 = phi ptr [ %27, %while.entry.i.i.i ], [ %.pre39, %if.entry3 ]
  %24 = phi i64 [ %28, %while.entry.i.i.i ], [ %21, %if.entry3 ]
  %25 = shl nuw i64 %24, 1
  store i64 %25, ptr %memberidx.i.i.i, align 4
  %26 = shl i64 %24, 4
  %27 = call ptr @realloc(ptr %23, i64 %26)
  store ptr %27, ptr %17, align 8
  %28 = load i64, ptr %memberidx.i.i.i, align 4
  %29 = icmp slt i64 %28, %20
  br i1 %29, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre40 = load i64, ptr %memberidx.i.i, align 4
  %.pre42 = add nsw i64 %.pre40, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry3, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre42, %TypeChecker_error.exit.loopexit ], [ %20, %if.entry3 ]
  %30 = phi ptr [ %27, %TypeChecker_error.exit.loopexit ], [ %.pre39, %if.entry3 ]
  %31 = phi i64 [ %.pre40, %TypeChecker_error.exit.loopexit ], [ %19, %if.entry3 ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %32 = getelementptr inbounds ptr, ptr %30, i64 %31
  store ptr %18, ptr %32, align 8
  br label %common.ret

ifend5:                                           ; preds = %ifend
  %memberidx8 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %33 = load ptr, ptr %memberidx8, align 8
  %34 = load i64, ptr %33, align 4
  %35 = icmp eq i64 %34, 20
  br i1 %35, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend5, %if.entry.i
  %.tr5.i = phi ptr [ %36, %if.entry.i ], [ %33, %ifend5 ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %36 = load ptr, ptr %memberidx1.i1, align 8
  %37 = load i64, ptr %36, align 4
  %38 = icmp eq i64 %37, 20
  br i1 %38, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend5
  %.lcssa.i = phi i64 [ %34, %ifend5 ], [ %37, %if.entry.i ]
  %39 = icmp eq i64 %.lcssa.i, 11
  %40 = tail call ptr @malloc(i32 50)
  store i64 8, ptr %40, align 4
  %memberidx.i.i148 = getelementptr inbounds %Expression, ptr %40, i64 0, i32 2
  store i64 17, ptr %memberidx.i.i148, align 4
  %memberidx1.i.i149 = getelementptr inbounds %Expression, ptr %40, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i149, align 1
  %memberidx.i150 = getelementptr inbounds %MatchExpression, ptr %40, i64 0, i32 4
  store ptr %5, ptr %memberidx.i150, align 8
  %memberidx1.i151 = getelementptr inbounds %MatchExpression, ptr %40, i64 0, i32 7
  store i1 %39, ptr %memberidx1.i151, align 1
  %memberidx2.i152 = getelementptr inbounds %MatchExpression, ptr %40, i64 0, i32 5
  %41 = call ptr @malloc(i32 24)
  %memberidx.i9.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %41, i64 0, i32 1
  store i64 0, ptr %memberidx.i9.i, align 4
  %memberidx1.i10.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %41, i64 0, i32 2
  store i64 8, ptr %memberidx1.i10.i, align 4
  %42 = call ptr @malloc(i32 64)
  store ptr %42, ptr %41, align 8
  store i64 0, ptr %memberidx.i9.i, align 4
  store ptr %41, ptr %memberidx2.i152, align 8
  %memberidx5.i = getelementptr inbounds %MatchExpression, ptr %40, i64 0, i32 6
  store ptr null, ptr %memberidx5.i, align 8
  %memberidx9 = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 4
  %43 = load ptr, ptr %memberidx9, align 8
  %44 = call ptr @malloc(i32 25)
  %45 = load ptr, ptr %43, align 8
  %memberidx1.i153 = getelementptr inbounds %Array_MatchExpressionCaseNode_, ptr %43, i64 0, i32 1
  %46 = load i64, ptr %memberidx1.i153, align 4
  %memberidx1.i.i154 = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %44, i64 0, i32 1
  %memberidx2.i.i155 = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %44, i64 0, i32 3
  store ptr %45, ptr %memberidx2.i.i155, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCaseNode_, ptr %44, i64 0, i32 2
  store i64 %46, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i154, align 4
  %47 = icmp slt i64 %46, 1
  %case.010 = load ptr, ptr %45, align 8
  store i1 %47, ptr %44, align 1
  br i1 %47, label %for.end, label %for.body

for.body:                                         ; preds = %is_object.exit, %Array_MatchExpressionCase____sl__.exit
  %48 = phi i64 [ %179, %Array_MatchExpressionCase____sl__.exit ], [ 1, %is_object.exit ]
  %case.012 = phi ptr [ %case.0, %Array_MatchExpressionCase____sl__.exit ], [ %case.010, %is_object.exit ]
  %result_type.011 = phi ptr [ %result_type.1, %Array_MatchExpressionCase____sl__.exit ], [ %3, %is_object.exit ]
  br i1 %39, label %if.entry11, label %else12

for.end:                                          ; preds = %Array_MatchExpressionCase____sl__.exit, %is_object.exit
  %result_type.0.lcssa = phi ptr [ %3, %is_object.exit ], [ %result_type.1, %Array_MatchExpressionCase____sl__.exit ]
  tail call void @free(ptr nonnull %44)
  %memberidx57 = getelementptr inbounds %MatchExpressionNode, ptr %1, i64 0, i32 5
  %49 = load ptr, ptr %memberidx57, align 8
  %50 = icmp eq ptr %49, null
  br i1 %50, label %if.entry58, label %else59

if.entry11:                                       ; preds = %for.body
  %51 = alloca %BinaryExpressionNode, align 8
  %52 = load ptr, ptr %memberidx, align 8
  %53 = load ptr, ptr %case.012, align 8
  %54 = load ptr, ptr %52, align 8
  %55 = load ptr, ptr %53, align 8
  %56 = call ptr @malloc(i32 32)
  %57 = load i64, ptr %54, align 4
  %memberidx1.i.i159 = getelementptr inbounds %FloRange, ptr %55, i64 0, i32 1
  %58 = load i64, ptr %memberidx1.i.i159, align 4
  %memberidx2.i.i160 = getelementptr inbounds %FloRange, ptr %54, i64 0, i32 2
  %59 = load i64, ptr %memberidx2.i.i160, align 4
  %memberidx3.i.i161 = getelementptr inbounds %FloRange, ptr %55, i64 0, i32 3
  %60 = load i64, ptr %memberidx3.i.i161, align 4
  store i64 %57, ptr %56, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %56, i64 0, i32 1
  store i64 %58, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %56, i64 0, i32 2
  store i64 %59, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %56, i64 0, i32 3
  store i64 %60, ptr %memberidx3.i.i.i, align 4
  store ptr %56, ptr %51, align 8
  %memberidx.i.i.i162 = getelementptr inbounds %StatementNode, ptr %51, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i162, align 8
  %memberidx.i.i163 = getelementptr inbounds %ExpressionNode, ptr %51, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i163, align 8
  %memberidx2.i164 = getelementptr inbounds %BinaryExpressionNode, ptr %51, i64 0, i32 3
  store ptr %52, ptr %memberidx2.i164, align 8
  %memberidx3.i = getelementptr inbounds %BinaryExpressionNode, ptr %51, i64 0, i32 4
  store i64 11, ptr %memberidx3.i, align 8
  %memberidx4.i165 = getelementptr inbounds %BinaryExpressionNode, ptr %51, i64 0, i32 5
  store ptr %53, ptr %memberidx4.i165, align 8
  %61 = call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %5, ptr nonnull %51, ptr null)
  %62 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i167 = getelementptr inbounds %Compiler, ptr %62, i64 0, i32 5
  %63 = load ptr, ptr %memberidx1.i167, align 8
  %memberidx2.i168 = getelementptr inbounds %Array_FloError_, ptr %63, i64 0, i32 1
  %64 = load i64, ptr %memberidx2.i168, align 4
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %common.ret, label %ifend18

else12:                                           ; preds = %for.body
  %66 = load ptr, ptr %memberidx8, align 8
  %67 = load ptr, ptr %case.012, align 8
  %68 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %66, ptr %67)
  %69 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i170 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 5
  %70 = load ptr, ptr %memberidx1.i170, align 8
  %memberidx2.i171 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %71 = load i64, ptr %memberidx2.i171, align 4
  %72 = icmp sgt i64 %71, 0
  br i1 %72, label %common.ret, label %ifend30

ifend13:                                          ; preds = %ifend30, %ifend18
  %expression.0 = phi ptr [ %61, %ifend18 ], [ %68, %ifend30 ]
  %match_case_kind.0 = phi i64 [ 0, %ifend18 ], [ 1, %ifend30 ]
  %memberidx40 = getelementptr inbounds %MatchExpressionCaseNode, ptr %case.012, i64 0, i32 1
  %73 = load ptr, ptr %memberidx40, align 8
  %74 = call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %73, ptr null, i1 true)
  %75 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i173 = getelementptr inbounds %Compiler, ptr %75, i64 0, i32 5
  %76 = load ptr, ptr %memberidx1.i173, align 8
  %memberidx2.i174 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 1
  %77 = load i64, ptr %memberidx2.i174, align 4
  %78 = icmp sgt i64 %77, 0
  br i1 %78, label %common.ret, label %ifend43

ifend18:                                          ; preds = %if.entry11
  %memberidx19 = getelementptr inbounds %Expression, ptr %61, i64 0, i32 3
  %79 = load ptr, ptr %memberidx19, align 8
  %80 = load i64, ptr %79, align 4
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %ifend13, label %if.entry20

if.entry20:                                       ; preds = %ifend18
  %82 = load ptr, ptr %memberidx8, align 8
  %83 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %82)
  %memberidx.i175 = getelementptr inbounds %String, ptr %83, i64 0, i32 1
  %84 = load i64, ptr %memberidx.i175, align 4
  %85 = trunc i64 %84 to i32
  %86 = add i32 %85, 1
  %87 = call ptr @malloc(i32 %86)
  %88 = load ptr, ptr %83, align 8
  %89 = load i64, ptr %memberidx.i175, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %87, ptr align 8 %88, i64 %89, i1 false)
  %90 = getelementptr inbounds i8, ptr %87, i64 %89
  store i8 0, ptr %90, align 1
  %91 = alloca ptr, align 8
  %92 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %91, ptr nonnull @223, ptr %87)
  %93 = load ptr, ptr %91, align 8
  %94 = tail call ptr @malloc(i32 24)
  store ptr %93, ptr %94, align 8
  %memberidx1.i176 = getelementptr inbounds %String, ptr %94, i64 0, i32 1
  store i64 %92, ptr %memberidx1.i176, align 4
  %memberidx2.i177 = getelementptr inbounds %String, ptr %94, i64 0, i32 2
  store i64 %92, ptr %memberidx2.i177, align 4
  tail call void @free(ptr %87)
  %95 = load ptr, ptr %case.012, align 8
  %96 = load ptr, ptr %95, align 8
  %97 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i179 = getelementptr inbounds %Compiler, ptr %97, i64 0, i32 5
  %98 = load ptr, ptr %memberidx1.i179, align 8
  %99 = call ptr @malloc(i32 24)
  store i64 5, ptr %99, align 4
  %memberidx1.i.i180 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 2
  store ptr %96, ptr %memberidx1.i.i180, align 8
  %memberidx2.i.i181 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 1
  store ptr %94, ptr %memberidx2.i.i181, align 8
  %memberidx.i.i182 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 1
  %100 = load i64, ptr %memberidx.i.i182, align 4
  %101 = add i64 %100, 1
  %memberidx.i.i.i183 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 2
  %102 = load i64, ptr %memberidx.i.i.i183, align 4
  %103 = icmp slt i64 %102, %101
  %.pre24 = load ptr, ptr %98, align 8
  br i1 %103, label %while.entry.i.i.i184, label %TypeChecker_error.exit185

while.entry.i.i.i184:                             ; preds = %if.entry20, %while.entry.i.i.i184
  %104 = phi ptr [ %108, %while.entry.i.i.i184 ], [ %.pre24, %if.entry20 ]
  %105 = phi i64 [ %109, %while.entry.i.i.i184 ], [ %102, %if.entry20 ]
  %106 = shl nuw i64 %105, 1
  store i64 %106, ptr %memberidx.i.i.i183, align 4
  %107 = shl i64 %105, 4
  %108 = call ptr @realloc(ptr %104, i64 %107)
  store ptr %108, ptr %98, align 8
  %109 = load i64, ptr %memberidx.i.i.i183, align 4
  %110 = icmp slt i64 %109, %101
  br i1 %110, label %while.entry.i.i.i184, label %TypeChecker_error.exit185.loopexit

TypeChecker_error.exit185.loopexit:               ; preds = %while.entry.i.i.i184
  %.pre25 = load i64, ptr %memberidx.i.i182, align 4
  %.pre51 = add nsw i64 %.pre25, 1
  br label %TypeChecker_error.exit185

TypeChecker_error.exit185:                        ; preds = %if.entry20, %TypeChecker_error.exit185.loopexit
  %.pre-phi52 = phi i64 [ %.pre51, %TypeChecker_error.exit185.loopexit ], [ %101, %if.entry20 ]
  %111 = phi ptr [ %108, %TypeChecker_error.exit185.loopexit ], [ %.pre24, %if.entry20 ]
  %112 = phi i64 [ %.pre25, %TypeChecker_error.exit185.loopexit ], [ %100, %if.entry20 ]
  store i64 %.pre-phi52, ptr %memberidx.i.i182, align 4
  %113 = getelementptr inbounds ptr, ptr %111, i64 %112
  store ptr %99, ptr %113, align 8
  br label %common.ret

ifend30:                                          ; preds = %else12
  %114 = load ptr, ptr %memberidx8, align 8
  %memberidx32 = getelementptr inbounds %Expression, ptr %68, i64 0, i32 3
  %115 = load ptr, ptr %memberidx32, align 8
  %116 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %114, ptr %115)
  br i1 %116, label %ifend13, label %if.entry33

if.entry33:                                       ; preds = %ifend30
  %117 = load ptr, ptr %memberidx8, align 8
  %118 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %117)
  %memberidx.i186 = getelementptr inbounds %String, ptr %118, i64 0, i32 1
  %119 = load i64, ptr %memberidx.i186, align 4
  %120 = trunc i64 %119 to i32
  %121 = add i32 %120, 1
  %122 = call ptr @malloc(i32 %121)
  %123 = load ptr, ptr %118, align 8
  %124 = load i64, ptr %memberidx.i186, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %122, ptr align 8 %123, i64 %124, i1 false)
  %125 = getelementptr inbounds i8, ptr %122, i64 %124
  store i8 0, ptr %125, align 1
  %126 = load ptr, ptr %memberidx32, align 8
  %127 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %126)
  %memberidx.i187 = getelementptr inbounds %String, ptr %127, i64 0, i32 1
  %128 = load i64, ptr %memberidx.i187, align 4
  %129 = trunc i64 %128 to i32
  %130 = add i32 %129, 1
  %131 = call ptr @malloc(i32 %130)
  %132 = load ptr, ptr %127, align 8
  %133 = load i64, ptr %memberidx.i187, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %131, ptr align 8 %132, i64 %133, i1 false)
  %134 = getelementptr inbounds i8, ptr %131, i64 %133
  store i8 0, ptr %134, align 1
  %135 = alloca ptr, align 8
  %136 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %135, ptr nonnull @224, ptr %122, ptr %131)
  %137 = load ptr, ptr %135, align 8
  %138 = tail call ptr @malloc(i32 24)
  store ptr %137, ptr %138, align 8
  %memberidx1.i188 = getelementptr inbounds %String, ptr %138, i64 0, i32 1
  store i64 %136, ptr %memberidx1.i188, align 4
  %memberidx2.i189 = getelementptr inbounds %String, ptr %138, i64 0, i32 2
  store i64 %136, ptr %memberidx2.i189, align 4
  tail call void @free(ptr %122)
  tail call void @free(ptr %131)
  %139 = load ptr, ptr %case.012, align 8
  %140 = load ptr, ptr %139, align 8
  %141 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i191 = getelementptr inbounds %Compiler, ptr %141, i64 0, i32 5
  %142 = load ptr, ptr %memberidx1.i191, align 8
  %143 = call ptr @malloc(i32 24)
  store i64 5, ptr %143, align 4
  %memberidx1.i.i192 = getelementptr inbounds %FloError, ptr %143, i64 0, i32 2
  store ptr %140, ptr %memberidx1.i.i192, align 8
  %memberidx2.i.i193 = getelementptr inbounds %FloError, ptr %143, i64 0, i32 1
  store ptr %138, ptr %memberidx2.i.i193, align 8
  %memberidx.i.i194 = getelementptr inbounds %Array_FloError_, ptr %142, i64 0, i32 1
  %144 = load i64, ptr %memberidx.i.i194, align 4
  %145 = add i64 %144, 1
  %memberidx.i.i.i195 = getelementptr inbounds %Array_FloError_, ptr %142, i64 0, i32 2
  %146 = load i64, ptr %memberidx.i.i.i195, align 4
  %147 = icmp slt i64 %146, %145
  %.pre = load ptr, ptr %142, align 8
  br i1 %147, label %while.entry.i.i.i196, label %TypeChecker_error.exit197

while.entry.i.i.i196:                             ; preds = %if.entry33, %while.entry.i.i.i196
  %148 = phi ptr [ %152, %while.entry.i.i.i196 ], [ %.pre, %if.entry33 ]
  %149 = phi i64 [ %153, %while.entry.i.i.i196 ], [ %146, %if.entry33 ]
  %150 = shl nuw i64 %149, 1
  store i64 %150, ptr %memberidx.i.i.i195, align 4
  %151 = shl i64 %149, 4
  %152 = call ptr @realloc(ptr %148, i64 %151)
  store ptr %152, ptr %142, align 8
  %153 = load i64, ptr %memberidx.i.i.i195, align 4
  %154 = icmp slt i64 %153, %145
  br i1 %154, label %while.entry.i.i.i196, label %TypeChecker_error.exit197.loopexit

TypeChecker_error.exit197.loopexit:               ; preds = %while.entry.i.i.i196
  %.pre22 = load i64, ptr %memberidx.i.i194, align 4
  %.pre53 = add nsw i64 %.pre22, 1
  br label %TypeChecker_error.exit197

TypeChecker_error.exit197:                        ; preds = %if.entry33, %TypeChecker_error.exit197.loopexit
  %.pre-phi54 = phi i64 [ %.pre53, %TypeChecker_error.exit197.loopexit ], [ %145, %if.entry33 ]
  %155 = phi ptr [ %152, %TypeChecker_error.exit197.loopexit ], [ %.pre, %if.entry33 ]
  %156 = phi i64 [ %.pre22, %TypeChecker_error.exit197.loopexit ], [ %144, %if.entry33 ]
  store i64 %.pre-phi54, ptr %memberidx.i.i194, align 4
  %157 = getelementptr inbounds ptr, ptr %155, i64 %156
  store ptr %143, ptr %157, align 8
  br label %common.ret

ifend43:                                          ; preds = %ifend13
  %memberidx44 = getelementptr inbounds %Block, ptr %74, i64 0, i32 4
  %158 = load ptr, ptr %memberidx44, align 8
  %.not142 = icmp eq ptr %158, null
  br i1 %.not142, label %false_block, label %true_block

true_block:                                       ; preds = %ifend43
  %memberidx46 = getelementptr inbounds %Expression, ptr %158, i64 0, i32 3
  %159 = load ptr, ptr %memberidx46, align 8
  br label %end

false_block:                                      ; preds = %ifend43
  %160 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %160, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %159, %true_block ], [ %160, %false_block ]
  %161 = load i64, ptr %result_type.011, align 4
  %162 = icmp eq i64 %161, 21
  br i1 %162, label %ifend50, label %else49

else49:                                           ; preds = %end
  %163 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %result_type.011, ptr %ternary)
  br i1 %163, label %ifend50, label %if.entry51

ifend50:                                          ; preds = %end, %else49
  %result_type.1 = phi ptr [ %result_type.011, %else49 ], [ %ternary, %end ]
  %164 = tail call ptr @malloc(i32 24)
  store i64 %match_case_kind.0, ptr %164, align 4
  %memberidx1.i198 = getelementptr inbounds %MatchExpressionCase, ptr %164, i64 0, i32 1
  store ptr %expression.0, ptr %memberidx1.i198, align 8
  %memberidx2.i199 = getelementptr inbounds %MatchExpressionCase, ptr %164, i64 0, i32 2
  store ptr %74, ptr %memberidx2.i199, align 8
  %165 = load i64, ptr %memberidx.i9.i, align 4
  %166 = add i64 %165, 1
  %167 = load i64, ptr %memberidx1.i10.i, align 4
  %168 = icmp slt i64 %167, %166
  %.pre30 = load ptr, ptr %41, align 8
  br i1 %168, label %while.entry.i.i, label %Array_MatchExpressionCase____sl__.exit

while.entry.i.i:                                  ; preds = %ifend50, %while.entry.i.i
  %169 = phi ptr [ %173, %while.entry.i.i ], [ %.pre30, %ifend50 ]
  %170 = phi i64 [ %174, %while.entry.i.i ], [ %167, %ifend50 ]
  %171 = shl nuw i64 %170, 1
  store i64 %171, ptr %memberidx1.i10.i, align 4
  %172 = shl i64 %170, 4
  %173 = call ptr @realloc(ptr %169, i64 %172)
  store ptr %173, ptr %41, align 8
  %174 = load i64, ptr %memberidx1.i10.i, align 4
  %175 = icmp slt i64 %174, %166
  br i1 %175, label %while.entry.i.i, label %Array_MatchExpressionCase____sl__.exit.loopexit

Array_MatchExpressionCase____sl__.exit.loopexit:  ; preds = %while.entry.i.i
  %.pre31 = load i64, ptr %memberidx.i9.i, align 4
  %.pre47 = add nsw i64 %.pre31, 1
  br label %Array_MatchExpressionCase____sl__.exit

Array_MatchExpressionCase____sl__.exit:           ; preds = %ifend50, %Array_MatchExpressionCase____sl__.exit.loopexit
  %.pre-phi48 = phi i64 [ %.pre47, %Array_MatchExpressionCase____sl__.exit.loopexit ], [ %166, %ifend50 ]
  %176 = phi ptr [ %173, %Array_MatchExpressionCase____sl__.exit.loopexit ], [ %.pre30, %ifend50 ]
  %177 = phi i64 [ %.pre31, %Array_MatchExpressionCase____sl__.exit.loopexit ], [ %165, %ifend50 ]
  store i64 %.pre-phi48, ptr %memberidx.i9.i, align 4
  %178 = getelementptr inbounds ptr, ptr %176, i64 %177
  store ptr %164, ptr %178, align 8
  %179 = add nuw nsw i64 %48, 1
  store i64 %179, ptr %memberidx1.i.i154, align 4
  %180 = getelementptr inbounds ptr, ptr %45, i64 %48
  %181 = icmp sge i64 %48, %46
  %case.0 = load ptr, ptr %180, align 8
  store i1 %181, ptr %44, align 1
  br i1 %181, label %for.end, label %for.body

if.entry51:                                       ; preds = %else49
  %182 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %result_type.011)
  %memberidx.i205 = getelementptr inbounds %String, ptr %182, i64 0, i32 1
  %183 = load i64, ptr %memberidx.i205, align 4
  %184 = trunc i64 %183 to i32
  %185 = add i32 %184, 1
  %186 = call ptr @malloc(i32 %185)
  %187 = load ptr, ptr %182, align 8
  %188 = load i64, ptr %memberidx.i205, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %186, ptr align 8 %187, i64 %188, i1 false)
  %189 = getelementptr inbounds i8, ptr %186, i64 %188
  store i8 0, ptr %189, align 1
  %190 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %ternary)
  %memberidx.i206 = getelementptr inbounds %String, ptr %190, i64 0, i32 1
  %191 = load i64, ptr %memberidx.i206, align 4
  %192 = trunc i64 %191 to i32
  %193 = add i32 %192, 1
  %194 = call ptr @malloc(i32 %193)
  %195 = load ptr, ptr %190, align 8
  %196 = load i64, ptr %memberidx.i206, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %194, ptr align 8 %195, i64 %196, i1 false)
  %197 = getelementptr inbounds i8, ptr %194, i64 %196
  store i8 0, ptr %197, align 1
  %198 = alloca ptr, align 8
  %199 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %198, ptr nonnull @225, ptr %186, ptr %194)
  %200 = load ptr, ptr %198, align 8
  %201 = tail call ptr @malloc(i32 24)
  store ptr %200, ptr %201, align 8
  %memberidx1.i207 = getelementptr inbounds %String, ptr %201, i64 0, i32 1
  store i64 %199, ptr %memberidx1.i207, align 4
  %memberidx2.i208 = getelementptr inbounds %String, ptr %201, i64 0, i32 2
  store i64 %199, ptr %memberidx2.i208, align 4
  tail call void @free(ptr %186)
  tail call void @free(ptr %194)
  %202 = load ptr, ptr %case.012, align 8
  %203 = load ptr, ptr %202, align 8
  %204 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i210 = getelementptr inbounds %Compiler, ptr %204, i64 0, i32 5
  %205 = load ptr, ptr %memberidx1.i210, align 8
  %206 = call ptr @malloc(i32 24)
  store i64 5, ptr %206, align 4
  %memberidx1.i.i211 = getelementptr inbounds %FloError, ptr %206, i64 0, i32 2
  store ptr %203, ptr %memberidx1.i.i211, align 8
  %memberidx2.i.i212 = getelementptr inbounds %FloError, ptr %206, i64 0, i32 1
  store ptr %201, ptr %memberidx2.i.i212, align 8
  %memberidx.i.i213 = getelementptr inbounds %Array_FloError_, ptr %205, i64 0, i32 1
  %207 = load i64, ptr %memberidx.i.i213, align 4
  %208 = add i64 %207, 1
  %memberidx.i.i.i214 = getelementptr inbounds %Array_FloError_, ptr %205, i64 0, i32 2
  %209 = load i64, ptr %memberidx.i.i.i214, align 4
  %210 = icmp slt i64 %209, %208
  %.pre27 = load ptr, ptr %205, align 8
  br i1 %210, label %while.entry.i.i.i215, label %TypeChecker_error.exit216

while.entry.i.i.i215:                             ; preds = %if.entry51, %while.entry.i.i.i215
  %211 = phi ptr [ %215, %while.entry.i.i.i215 ], [ %.pre27, %if.entry51 ]
  %212 = phi i64 [ %216, %while.entry.i.i.i215 ], [ %209, %if.entry51 ]
  %213 = shl nuw i64 %212, 1
  store i64 %213, ptr %memberidx.i.i.i214, align 4
  %214 = shl i64 %212, 4
  %215 = call ptr @realloc(ptr %211, i64 %214)
  store ptr %215, ptr %205, align 8
  %216 = load i64, ptr %memberidx.i.i.i214, align 4
  %217 = icmp slt i64 %216, %208
  br i1 %217, label %while.entry.i.i.i215, label %TypeChecker_error.exit216.loopexit

TypeChecker_error.exit216.loopexit:               ; preds = %while.entry.i.i.i215
  %.pre28 = load i64, ptr %memberidx.i.i213, align 4
  %.pre49 = add nsw i64 %.pre28, 1
  br label %TypeChecker_error.exit216

TypeChecker_error.exit216:                        ; preds = %if.entry51, %TypeChecker_error.exit216.loopexit
  %.pre-phi50 = phi i64 [ %.pre49, %TypeChecker_error.exit216.loopexit ], [ %208, %if.entry51 ]
  %218 = phi ptr [ %215, %TypeChecker_error.exit216.loopexit ], [ %.pre27, %if.entry51 ]
  %219 = phi i64 [ %.pre28, %TypeChecker_error.exit216.loopexit ], [ %207, %if.entry51 ]
  store i64 %.pre-phi50, ptr %memberidx.i.i213, align 4
  %220 = getelementptr inbounds ptr, ptr %218, i64 %219
  store ptr %206, ptr %220, align 8
  br label %common.ret

if.entry58:                                       ; preds = %for.end
  %221 = call ptr @malloc(i32 55)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(55) %221, ptr noundef nonnull align 8 dereferenceable(55) @226, i64 55, i1 false)
  %222 = call ptr @malloc(i32 24)
  store ptr %221, ptr %222, align 8
  %memberidx1.i.i217 = getelementptr inbounds %String, ptr %222, i64 0, i32 1
  store i64 55, ptr %memberidx1.i.i217, align 4
  %memberidx2.i.i218 = getelementptr inbounds %String, ptr %222, i64 0, i32 2
  store i64 55, ptr %memberidx2.i.i218, align 4
  %223 = load ptr, ptr %1, align 8
  %224 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i220 = getelementptr inbounds %Compiler, ptr %224, i64 0, i32 5
  %225 = load ptr, ptr %memberidx1.i220, align 8
  %226 = call ptr @malloc(i32 24)
  store i64 4, ptr %226, align 4
  %memberidx1.i.i221 = getelementptr inbounds %FloError, ptr %226, i64 0, i32 2
  store ptr %223, ptr %memberidx1.i.i221, align 8
  %memberidx2.i.i222 = getelementptr inbounds %FloError, ptr %226, i64 0, i32 1
  store ptr %222, ptr %memberidx2.i.i222, align 8
  %memberidx.i.i223 = getelementptr inbounds %Array_FloError_, ptr %225, i64 0, i32 1
  %227 = load i64, ptr %memberidx.i.i223, align 4
  %228 = add i64 %227, 1
  %memberidx.i.i.i224 = getelementptr inbounds %Array_FloError_, ptr %225, i64 0, i32 2
  %229 = load i64, ptr %memberidx.i.i.i224, align 4
  %230 = icmp slt i64 %229, %228
  %.pre36 = load ptr, ptr %225, align 8
  br i1 %230, label %while.entry.i.i.i225, label %TypeChecker_error.exit226

while.entry.i.i.i225:                             ; preds = %if.entry58, %while.entry.i.i.i225
  %231 = phi ptr [ %235, %while.entry.i.i.i225 ], [ %.pre36, %if.entry58 ]
  %232 = phi i64 [ %236, %while.entry.i.i.i225 ], [ %229, %if.entry58 ]
  %233 = shl nuw i64 %232, 1
  store i64 %233, ptr %memberidx.i.i.i224, align 4
  %234 = shl i64 %232, 4
  %235 = call ptr @realloc(ptr %231, i64 %234)
  store ptr %235, ptr %225, align 8
  %236 = load i64, ptr %memberidx.i.i.i224, align 4
  %237 = icmp slt i64 %236, %228
  br i1 %237, label %while.entry.i.i.i225, label %TypeChecker_error.exit226.loopexit

TypeChecker_error.exit226.loopexit:               ; preds = %while.entry.i.i.i225
  %.pre37 = load i64, ptr %memberidx.i.i223, align 4
  %.pre43 = add nsw i64 %.pre37, 1
  br label %TypeChecker_error.exit226

TypeChecker_error.exit226:                        ; preds = %if.entry58, %TypeChecker_error.exit226.loopexit
  %.pre-phi44 = phi i64 [ %.pre43, %TypeChecker_error.exit226.loopexit ], [ %228, %if.entry58 ]
  %238 = phi ptr [ %235, %TypeChecker_error.exit226.loopexit ], [ %.pre36, %if.entry58 ]
  %239 = phi i64 [ %.pre37, %TypeChecker_error.exit226.loopexit ], [ %227, %if.entry58 ]
  store i64 %.pre-phi44, ptr %memberidx.i.i223, align 4
  %240 = getelementptr inbounds ptr, ptr %238, i64 %239
  store ptr %226, ptr %240, align 8
  br label %common.ret

else59:                                           ; preds = %for.end
  %241 = call fastcc ptr @TypeChecker_check_block(ptr %0, ptr nonnull %49, ptr null, i1 true)
  %memberidx66 = getelementptr inbounds %Block, ptr %241, i64 0, i32 4
  %242 = load ptr, ptr %memberidx66, align 8
  %.not = icmp eq ptr %242, null
  br i1 %.not, label %false_block64, label %true_block63

true_block63:                                     ; preds = %else59
  %memberidx68 = getelementptr inbounds %Expression, ptr %242, i64 0, i32 3
  %243 = load ptr, ptr %memberidx68, align 8
  br label %end65

false_block64:                                    ; preds = %else59
  %244 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %244, align 4
  br label %end65

end65:                                            ; preds = %false_block64, %true_block63
  %ternary69 = phi ptr [ %243, %true_block63 ], [ %244, %false_block64 ]
  %245 = call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %result_type.0.lcssa, ptr %ternary69)
  br i1 %245, label %ifend72, label %if.entry70

if.entry70:                                       ; preds = %end65
  %246 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %result_type.0.lcssa)
  %memberidx.i227 = getelementptr inbounds %String, ptr %246, i64 0, i32 1
  %247 = load i64, ptr %memberidx.i227, align 4
  %248 = trunc i64 %247 to i32
  %249 = add i32 %248, 1
  %250 = call ptr @malloc(i32 %249)
  %251 = load ptr, ptr %246, align 8
  %252 = load i64, ptr %memberidx.i227, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %250, ptr align 8 %251, i64 %252, i1 false)
  %253 = getelementptr inbounds i8, ptr %250, i64 %252
  store i8 0, ptr %253, align 1
  %254 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %ternary69)
  %memberidx.i228 = getelementptr inbounds %String, ptr %254, i64 0, i32 1
  %255 = load i64, ptr %memberidx.i228, align 4
  %256 = trunc i64 %255 to i32
  %257 = add i32 %256, 1
  %258 = call ptr @malloc(i32 %257)
  %259 = load ptr, ptr %254, align 8
  %260 = load i64, ptr %memberidx.i228, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %258, ptr align 8 %259, i64 %260, i1 false)
  %261 = getelementptr inbounds i8, ptr %258, i64 %260
  store i8 0, ptr %261, align 1
  %262 = alloca ptr, align 8
  %263 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %262, ptr nonnull @227, ptr %250, ptr %258)
  %264 = load ptr, ptr %262, align 8
  %265 = tail call ptr @malloc(i32 24)
  store ptr %264, ptr %265, align 8
  %memberidx1.i229 = getelementptr inbounds %String, ptr %265, i64 0, i32 1
  store i64 %263, ptr %memberidx1.i229, align 4
  %memberidx2.i230 = getelementptr inbounds %String, ptr %265, i64 0, i32 2
  store i64 %263, ptr %memberidx2.i230, align 4
  tail call void @free(ptr %250)
  tail call void @free(ptr %258)
  %266 = load ptr, ptr %1, align 8
  %267 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i232 = getelementptr inbounds %Compiler, ptr %267, i64 0, i32 5
  %268 = load ptr, ptr %memberidx1.i232, align 8
  %269 = call ptr @malloc(i32 24)
  store i64 5, ptr %269, align 4
  %memberidx1.i.i233 = getelementptr inbounds %FloError, ptr %269, i64 0, i32 2
  store ptr %266, ptr %memberidx1.i.i233, align 8
  %memberidx2.i.i234 = getelementptr inbounds %FloError, ptr %269, i64 0, i32 1
  store ptr %265, ptr %memberidx2.i.i234, align 8
  %memberidx.i.i235 = getelementptr inbounds %Array_FloError_, ptr %268, i64 0, i32 1
  %270 = load i64, ptr %memberidx.i.i235, align 4
  %271 = add i64 %270, 1
  %memberidx.i.i.i236 = getelementptr inbounds %Array_FloError_, ptr %268, i64 0, i32 2
  %272 = load i64, ptr %memberidx.i.i.i236, align 4
  %273 = icmp slt i64 %272, %271
  %.pre33 = load ptr, ptr %268, align 8
  br i1 %273, label %while.entry.i.i.i237, label %TypeChecker_error.exit238

while.entry.i.i.i237:                             ; preds = %if.entry70, %while.entry.i.i.i237
  %274 = phi ptr [ %278, %while.entry.i.i.i237 ], [ %.pre33, %if.entry70 ]
  %275 = phi i64 [ %279, %while.entry.i.i.i237 ], [ %272, %if.entry70 ]
  %276 = shl nuw i64 %275, 1
  store i64 %276, ptr %memberidx.i.i.i236, align 4
  %277 = shl i64 %275, 4
  %278 = call ptr @realloc(ptr %274, i64 %277)
  store ptr %278, ptr %268, align 8
  %279 = load i64, ptr %memberidx.i.i.i236, align 4
  %280 = icmp slt i64 %279, %271
  br i1 %280, label %while.entry.i.i.i237, label %TypeChecker_error.exit238.loopexit

TypeChecker_error.exit238.loopexit:               ; preds = %while.entry.i.i.i237
  %.pre34 = load i64, ptr %memberidx.i.i235, align 4
  %.pre45 = add nsw i64 %.pre34, 1
  br label %TypeChecker_error.exit238

TypeChecker_error.exit238:                        ; preds = %if.entry70, %TypeChecker_error.exit238.loopexit
  %.pre-phi46 = phi i64 [ %.pre45, %TypeChecker_error.exit238.loopexit ], [ %271, %if.entry70 ]
  %281 = phi ptr [ %278, %TypeChecker_error.exit238.loopexit ], [ %.pre33, %if.entry70 ]
  %282 = phi i64 [ %.pre34, %TypeChecker_error.exit238.loopexit ], [ %270, %if.entry70 ]
  store i64 %.pre-phi46, ptr %memberidx.i.i235, align 4
  %283 = getelementptr inbounds ptr, ptr %281, i64 %282
  store ptr %269, ptr %283, align 8
  br label %common.ret

ifend72:                                          ; preds = %end65
  store ptr %241, ptr %memberidx5.i, align 8
  %memberidx75 = getelementptr inbounds %Expression, ptr %40, i64 0, i32 3
  store ptr %result_type.0.lcssa, ptr %memberidx75, align 8
  br label %common.ret
}

define internal fastcc noalias ptr @TypeChecker_check_member_access(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx.i = getelementptr inbounds %PropId, ptr %1, i64 0, i32 1
  %4 = load ptr, ptr %memberidx.i, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load i64, ptr %4, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 3
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %4, i64 0, i32 2
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %15 = tail call ptr @malloc(i32 0)
  %16 = tail call ptr @malloc(i32 24)
  store ptr %15, ptr %16, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %16, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %17 = load i64, ptr %1, align 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %if.entry, label %else

if.entry:                                         ; preds = %2
  %memberidx2 = getelementptr inbounds %Class, ptr %14, i64 0, i32 5
  %19 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %20 = load i64, ptr %memberidx3, align 4
  %21 = load ptr, ptr %19, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 2
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 3
  br label %ifend

else:                                             ; preds = %2
  %memberidx6 = getelementptr inbounds %Class, ptr %14, i64 0, i32 4
  %24 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %PropId, ptr %1, i64 0, i32 2
  %25 = load i64, ptr %memberidx7, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx8 = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 2
  %memberidx9 = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 3
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %visibility.0.in = phi ptr [ %memberidx4, %if.entry ], [ %memberidx8, %else ]
  %member_name.0.in = phi ptr [ %memberidx5, %if.entry ], [ %memberidx9, %else ]
  %member_name.0 = load ptr, ptr %member_name.0.in, align 8
  %visibility.0 = load i64, ptr %visibility.0.in, align 4
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %29 = load ptr, ptr %memberidx10, align 8
  %.not = icmp eq ptr %29, null
  br i1 %.not, label %else12, label %if.entry11

if.entry11:                                       ; preds = %ifend
  %30 = load i64, ptr %29, align 4
  %31 = load ptr, ptr %14, align 8
  %32 = load i64, ptr %31, align 4
  %33 = icmp ne i64 %30, %32
  %memberidx19 = getelementptr inbounds %TypeId, ptr %31, i64 0, i32 2
  %34 = load i64, ptr %memberidx19, align 4
  %memberidx21 = getelementptr inbounds %TypeId, ptr %29, i64 0, i32 2
  %35 = load i64, ptr %memberidx21, align 4
  %36 = icmp ne i64 %34, %35
  %37 = or i1 %33, %36
  %38 = icmp eq i64 %visibility.0, 1
  %or.cond = select i1 %37, i1 %38, i1 false
  br i1 %or.cond, label %if.entry25, label %common.ret

else12:                                           ; preds = %ifend
  %.not50 = icmp eq i64 %visibility.0, 2
  br i1 %.not50, label %common.ret, label %if.entry29

common.ret.sink.split:                            ; preds = %if.entry25, %dump_access.exit
  %.sink61 = phi ptr [ %70, %dump_access.exit ], [ %42, %if.entry25 ]
  %.sink = phi ptr [ %78, %dump_access.exit ], [ %50, %if.entry25 ]
  %common.ret.op.ph = phi ptr [ %85, %dump_access.exit ], [ %57, %if.entry25 ]
  tail call void @free(ptr %.sink61)
  tail call void @free(ptr %.sink)
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %else12, %if.entry11
  %common.ret.op = phi ptr [ null, %if.entry11 ], [ null, %else12 ], [ %common.ret.op.ph, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry25:                                       ; preds = %if.entry11
  %memberidx.i54 = getelementptr inbounds %String, ptr %member_name.0, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i54, align 4
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, 1
  %42 = tail call ptr @malloc(i32 %41)
  %43 = load ptr, ptr %member_name.0, align 8
  %44 = load i64, ptr %memberidx.i54, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %43, i64 %44, i1 false)
  %45 = getelementptr inbounds i8, ptr %42, i64 %44
  store i8 0, ptr %45, align 1
  %memberidx28 = getelementptr inbounds %Class, ptr %14, i64 0, i32 1
  %46 = load ptr, ptr %memberidx28, align 8
  %memberidx.i55 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  %47 = load i64, ptr %memberidx.i55, align 4
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, 1
  %50 = tail call ptr @malloc(i32 %49)
  %51 = load ptr, ptr %46, align 8
  %52 = load i64, ptr %memberidx.i55, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %50, ptr align 8 %51, i64 %52, i1 false)
  %53 = getelementptr inbounds i8, ptr %50, i64 %52
  store i8 0, ptr %53, align 1
  %54 = alloca ptr, align 8
  %55 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %54, ptr nonnull @195, ptr %42, ptr %50)
  %56 = load ptr, ptr %54, align 8
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  %memberidx1.i56 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  store i64 %55, ptr %memberidx1.i56, align 4
  %memberidx2.i57 = getelementptr inbounds %String, ptr %57, i64 0, i32 2
  store i64 %55, ptr %memberidx2.i57, align 4
  br label %common.ret.sink.split

if.entry29:                                       ; preds = %else12
  %memberidx.i58 = getelementptr inbounds %String, ptr %member_name.0, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i58, align 4
  %59 = trunc i64 %58 to i32
  %60 = add i32 %59, 1
  %61 = tail call ptr @malloc(i32 %60)
  %62 = load ptr, ptr %member_name.0, align 8
  %63 = load i64, ptr %memberidx.i58, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %61, ptr align 8 %62, i64 %63, i1 false)
  %64 = getelementptr inbounds i8, ptr %61, i64 %63
  store i8 0, ptr %64, align 1
  %65 = icmp eq i64 %visibility.0, 1
  br i1 %65, label %if.entry.i, label %ifend3.i

if.entry.i:                                       ; preds = %if.entry29
  %66 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %66, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  %67 = tail call ptr @malloc(i32 24)
  store ptr %66, ptr %67, align 8
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry29
  %68 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %68, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  %69 = tail call ptr @malloc(i32 24)
  store ptr %68, ptr %69, align 8
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i, %ifend3.i
  %.sink65 = phi ptr [ %67, %if.entry.i ], [ %69, %ifend3.i ]
  %.sink64 = phi i64 [ 7, %if.entry.i ], [ 9, %ifend3.i ]
  %.off0 = phi i32 [ 8, %if.entry.i ], [ 10, %ifend3.i ]
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %.sink65, i64 0, i32 1
  store i64 %.sink64, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %.sink65, i64 0, i32 2
  store i64 %.sink64, ptr %memberidx2.i.i.i, align 4
  %memberidx.i53 = getelementptr inbounds %String, ptr %.sink65, i64 0, i32 1
  %70 = tail call ptr @malloc(i32 %.off0)
  %71 = load ptr, ptr %.sink65, align 8
  %72 = load i64, ptr %memberidx.i53, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %70, ptr align 8 %71, i64 %72, i1 false)
  %73 = getelementptr inbounds i8, ptr %70, i64 %72
  store i8 0, ptr %73, align 1
  %memberidx32 = getelementptr inbounds %Class, ptr %14, i64 0, i32 1
  %74 = load ptr, ptr %memberidx32, align 8
  %memberidx.i51 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx.i51, align 4
  %76 = trunc i64 %75 to i32
  %77 = add i32 %76, 1
  %78 = tail call ptr @malloc(i32 %77)
  %79 = load ptr, ptr %74, align 8
  %80 = load i64, ptr %memberidx.i51, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %78, ptr align 8 %79, i64 %80, i1 false)
  %81 = getelementptr inbounds i8, ptr %78, i64 %80
  store i8 0, ptr %81, align 1
  %82 = alloca ptr, align 8
  %83 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %82, ptr nonnull @196, ptr nonnull %61, ptr %70, ptr %78)
  %84 = load ptr, ptr %82, align 8
  %85 = tail call ptr @malloc(i32 24)
  store ptr %84, ptr %85, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  store i64 %83, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %85, i64 0, i32 2
  store i64 %83, ptr %memberidx2.i, align 4
  tail call void @free(ptr nonnull %61)
  br label %common.ret.sink.split
}

define internal fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ReturnStatementNode, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %4 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %4, null
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %5 = load ptr, ptr %0, align 8
  %memberidx.i.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i.i.i, align 8
  %7 = load ptr, ptr %5, align 8
  %8 = load i64, ptr %6, align 4
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %17 = load i64, ptr %4, align 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %if.entry.i
  %memberidx1.i.i = getelementptr inbounds %Class, ptr %16, i64 0, i32 5
  %19 = load ptr, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %20 = load i64, ptr %memberidx2.i.i, align 4
  %21 = load ptr, ptr %19, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %23, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i.i:                                        ; preds = %if.entry.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %16, i64 0, i32 4
  %24 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %4, i64 0, i32 2
  %25 = load i64, ptr %memberidx5.i.i, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %28, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

ifend.i:                                          ; preds = %2
  %memberidx.i.i7.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %29 = load ptr, ptr %memberidx.i.i7.i, align 8
  %30 = load i64, ptr %29, align 4
  %31 = load ptr, ptr %0, align 8
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds ptr, ptr %33, i64 %30
  %35 = load ptr, ptr %34, align 8
  %memberidx.i.i = getelementptr inbounds %Module, ptr %35, i64 0, i32 4
  %36 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i8.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 2
  %37 = load ptr, ptr %memberidx1.i8.i, align 8
  %memberidx2.i9.i = getelementptr inbounds %VarId, ptr %37, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i9.i, align 4
  %39 = load ptr, ptr %36, align 8
  %40 = getelementptr inbounds ptr, ptr %39, i64 %38
  %41 = load ptr, ptr %40, align 8
  %memberidx3.i = getelementptr inbounds %Function, ptr %41, i64 0, i32 4
  br label %TypeChecker_get_current_function_type.exit

TypeChecker_get_current_function_type.exit:       ; preds = %if.entry.i.i, %ifend.i.i, %ifend.i
  %common.ret.op.i.in = phi ptr [ %memberidx3.i, %ifend.i ], [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.i.in, align 8
  %memberidx1 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 2
  %42 = load ptr, ptr %memberidx1, align 8
  %43 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %43, align 4
  %memberidx.i34 = getelementptr inbounds %ReturnStatement, ptr %43, i64 0, i32 1
  store ptr null, ptr %memberidx.i34, align 8
  %.not = icmp eq ptr %3, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %TypeChecker_get_current_function_type.exit
  %44 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %42, ptr nonnull %3)
  %memberidx.i35 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %45 = load ptr, ptr %memberidx.i35, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %45, i64 0, i32 5
  %46 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 1
  %47 = load i64, ptr %memberidx2.i, align 4
  %48 = icmp sgt i64 %47, 0
  br i1 %48, label %common.ret, label %ifend4

else:                                             ; preds = %TypeChecker_get_current_function_type.exit
  %49 = load i64, ptr %42, align 4
  %.not33 = icmp eq i64 %49, 10
  br i1 %.not33, label %common.ret, label %if.entry13

common.ret:                                       ; preds = %ifend8, %else, %if.entry, %TypeChecker_error.exit55, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit55 ], [ null, %if.entry ], [ %43, %else ], [ %43, %ifend8 ]
  ret ptr %common.ret.op

ifend4:                                           ; preds = %if.entry
  %memberidx5 = getelementptr inbounds %Expression, ptr %44, i64 0, i32 3
  %50 = load ptr, ptr %memberidx5, align 8
  %51 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %42, ptr %50)
  br i1 %51, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %ifend4
  %52 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %42)
  %memberidx.i36 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  %53 = load i64, ptr %memberidx.i36, align 4
  %54 = trunc i64 %53 to i32
  %55 = add i32 %54, 1
  %56 = tail call ptr @malloc(i32 %55)
  %57 = load ptr, ptr %52, align 8
  %58 = load i64, ptr %memberidx.i36, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %56, ptr align 8 %57, i64 %58, i1 false)
  %59 = getelementptr inbounds i8, ptr %56, i64 %58
  store i8 0, ptr %59, align 1
  %60 = load ptr, ptr %memberidx5, align 8
  %61 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %60)
  %memberidx.i37 = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i37, align 4
  %63 = trunc i64 %62 to i32
  %64 = add i32 %63, 1
  %65 = tail call ptr @malloc(i32 %64)
  %66 = load ptr, ptr %61, align 8
  %67 = load i64, ptr %memberidx.i37, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %65, ptr align 8 %66, i64 %67, i1 false)
  %68 = getelementptr inbounds i8, ptr %65, i64 %67
  store i8 0, ptr %68, align 1
  %69 = alloca ptr, align 8
  %70 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %69, ptr nonnull @241, ptr %56, ptr %65)
  %71 = load ptr, ptr %69, align 8
  %72 = tail call ptr @malloc(i32 24)
  store ptr %71, ptr %72, align 8
  %memberidx1.i38 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  store i64 %70, ptr %memberidx1.i38, align 4
  %memberidx2.i39 = getelementptr inbounds %String, ptr %72, i64 0, i32 2
  store i64 %70, ptr %memberidx2.i39, align 4
  tail call void @free(ptr %56)
  tail call void @free(ptr %65)
  %73 = load ptr, ptr %3, align 8
  %74 = load ptr, ptr %memberidx.i35, align 8
  %memberidx1.i41 = getelementptr inbounds %Compiler, ptr %74, i64 0, i32 5
  %75 = load ptr, ptr %memberidx1.i41, align 8
  %76 = call ptr @malloc(i32 24)
  store i64 5, ptr %76, align 4
  %memberidx1.i.i42 = getelementptr inbounds %FloError, ptr %76, i64 0, i32 2
  store ptr %73, ptr %memberidx1.i.i42, align 8
  %memberidx2.i.i43 = getelementptr inbounds %FloError, ptr %76, i64 0, i32 1
  store ptr %72, ptr %memberidx2.i.i43, align 8
  %memberidx.i.i44 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 1
  %77 = load i64, ptr %memberidx.i.i44, align 4
  %78 = add i64 %77, 1
  %memberidx.i.i.i45 = getelementptr inbounds %Array_FloError_, ptr %75, i64 0, i32 2
  %79 = load i64, ptr %memberidx.i.i.i45, align 4
  %80 = icmp slt i64 %79, %78
  %.pre = load ptr, ptr %75, align 8
  br i1 %80, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry6, %while.entry.i.i.i
  %81 = phi ptr [ %85, %while.entry.i.i.i ], [ %.pre, %if.entry6 ]
  %82 = phi i64 [ %86, %while.entry.i.i.i ], [ %79, %if.entry6 ]
  %83 = shl nuw i64 %82, 1
  store i64 %83, ptr %memberidx.i.i.i45, align 4
  %84 = shl i64 %82, 4
  %85 = call ptr @realloc(ptr %81, i64 %84)
  store ptr %85, ptr %75, align 8
  %86 = load i64, ptr %memberidx.i.i.i45, align 4
  %87 = icmp slt i64 %86, %78
  br i1 %87, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre57 = load i64, ptr %memberidx.i.i44, align 4
  %.pre63 = add nsw i64 %.pre57, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry6, %TypeChecker_error.exit.loopexit
  %.pre-phi64 = phi i64 [ %.pre63, %TypeChecker_error.exit.loopexit ], [ %78, %if.entry6 ]
  %88 = phi ptr [ %85, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry6 ]
  %89 = phi i64 [ %.pre57, %TypeChecker_error.exit.loopexit ], [ %77, %if.entry6 ]
  store i64 %.pre-phi64, ptr %memberidx.i.i44, align 4
  %90 = getelementptr inbounds ptr, ptr %88, i64 %89
  store ptr %76, ptr %90, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend4
  store ptr %44, ptr %memberidx.i34, align 8
  br label %common.ret

if.entry13:                                       ; preds = %else
  %91 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %91, ptr noundef nonnull align 8 dereferenceable(32) @242, i64 32, i1 false)
  %92 = tail call ptr @malloc(i32 24)
  store ptr %91, ptr %92, align 8
  %memberidx1.i.i46 = getelementptr inbounds %String, ptr %92, i64 0, i32 1
  store i64 32, ptr %memberidx1.i.i46, align 4
  %memberidx2.i.i47 = getelementptr inbounds %String, ptr %92, i64 0, i32 2
  store i64 32, ptr %memberidx2.i.i47, align 4
  %93 = load ptr, ptr %1, align 8
  %memberidx.i48 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %94 = load ptr, ptr %memberidx.i48, align 8
  %memberidx1.i49 = getelementptr inbounds %Compiler, ptr %94, i64 0, i32 5
  %95 = load ptr, ptr %memberidx1.i49, align 8
  %96 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %96, align 4
  %memberidx1.i.i50 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 2
  store ptr %93, ptr %memberidx1.i.i50, align 8
  %memberidx2.i.i51 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 1
  store ptr %92, ptr %memberidx2.i.i51, align 8
  %memberidx.i.i52 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %97 = load i64, ptr %memberidx.i.i52, align 4
  %98 = add i64 %97, 1
  %memberidx.i.i.i53 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 2
  %99 = load i64, ptr %memberidx.i.i.i53, align 4
  %100 = icmp slt i64 %99, %98
  %.pre59 = load ptr, ptr %95, align 8
  br i1 %100, label %while.entry.i.i.i54, label %TypeChecker_error.exit55

while.entry.i.i.i54:                              ; preds = %if.entry13, %while.entry.i.i.i54
  %101 = phi ptr [ %105, %while.entry.i.i.i54 ], [ %.pre59, %if.entry13 ]
  %102 = phi i64 [ %106, %while.entry.i.i.i54 ], [ %99, %if.entry13 ]
  %103 = shl nuw i64 %102, 1
  store i64 %103, ptr %memberidx.i.i.i53, align 4
  %104 = shl i64 %102, 4
  %105 = tail call ptr @realloc(ptr %101, i64 %104)
  store ptr %105, ptr %95, align 8
  %106 = load i64, ptr %memberidx.i.i.i53, align 4
  %107 = icmp slt i64 %106, %98
  br i1 %107, label %while.entry.i.i.i54, label %TypeChecker_error.exit55.loopexit

TypeChecker_error.exit55.loopexit:                ; preds = %while.entry.i.i.i54
  %.pre60 = load i64, ptr %memberidx.i.i52, align 4
  %.pre62 = add nsw i64 %.pre60, 1
  br label %TypeChecker_error.exit55

TypeChecker_error.exit55:                         ; preds = %if.entry13, %TypeChecker_error.exit55.loopexit
  %.pre-phi = phi i64 [ %.pre62, %TypeChecker_error.exit55.loopexit ], [ %98, %if.entry13 ]
  %108 = phi ptr [ %105, %TypeChecker_error.exit55.loopexit ], [ %.pre59, %if.entry13 ]
  %109 = phi i64 [ %.pre60, %TypeChecker_error.exit55.loopexit ], [ %97, %if.entry13 ]
  store i64 %.pre-phi, ptr %memberidx.i.i52, align 4
  %110 = getelementptr inbounds ptr, ptr %108, i64 %109
  store ptr %96, ptr %110, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %4)
  %.not.i = icmp eq ptr %5, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 2
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %end18, %end, %ifend54, %TypeChecker_error.exit176, %TypeChecker_error.exit165, %TypeChecker_error.exit155, %TypeChecker_error.exit143, %TypeChecker_error.exit125, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit125 ], [ null, %TypeChecker_error.exit143 ], [ null, %TypeChecker_error.exit155 ], [ null, %TypeChecker_error.exit165 ], [ null, %TypeChecker_error.exit176 ], [ %243, %ifend54 ], [ null, %end ], [ null, %end18 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %if.entry.i
  %memberidx.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i, align 4
  %9 = trunc i64 %8 to i32
  %10 = add i32 %9, 1
  %11 = tail call ptr @malloc(i32 %10)
  %12 = load ptr, ptr %4, align 8
  %13 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %12, i64 %13, i1 false)
  %14 = getelementptr inbounds i8, ptr %11, i64 %13
  store i8 0, ptr %14, align 1
  %15 = alloca ptr, align 8
  %16 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %15, ptr nonnull @109, ptr %11)
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  store i64 %16, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %18, i64 0, i32 2
  store i64 %16, ptr %memberidx2.i, align 4
  tail call void @free(ptr %11)
  %19 = load ptr, ptr %memberidx, align 8
  %memberidx3 = getelementptr inbounds %Token, ptr %19, i64 0, i32 1
  %20 = load ptr, ptr %memberidx3, align 8
  %memberidx.i108 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %21 = load ptr, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %Compiler, ptr %21, i64 0, i32 5
  %22 = load ptr, ptr %memberidx1.i109, align 8
  %23 = call ptr @malloc(i32 24)
  store i64 1, ptr %23, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 2
  store ptr %20, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %23, i64 0, i32 1
  store ptr %18, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i.i, align 4
  %25 = add i64 %24, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %22, i64 0, i32 2
  %26 = load i64, ptr %memberidx.i.i.i, align 4
  %27 = icmp slt i64 %26, %25
  %.pre = load ptr, ptr %22, align 8
  br i1 %27, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %28 = phi ptr [ %32, %while.entry.i.i.i ], [ %.pre, %if.entry ]
  %29 = phi i64 [ %33, %while.entry.i.i.i ], [ %26, %if.entry ]
  %30 = shl nuw i64 %29, 1
  store i64 %30, ptr %memberidx.i.i.i, align 4
  %31 = shl i64 %29, 4
  %32 = call ptr @realloc(ptr %28, i64 %31)
  store ptr %32, ptr %22, align 8
  %33 = load i64, ptr %memberidx.i.i.i, align 4
  %34 = icmp slt i64 %33, %25
  br i1 %34, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre184 = load i64, ptr %memberidx.i.i, align 4
  %.pre219 = add nsw i64 %.pre184, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi220 = phi i64 [ %.pre219, %TypeChecker_error.exit.loopexit ], [ %25, %if.entry ]
  %35 = phi ptr [ %32, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %36 = phi i64 [ %.pre184, %TypeChecker_error.exit.loopexit ], [ %24, %if.entry ]
  store i64 %.pre-phi220, ptr %memberidx.i.i, align 4
  %37 = getelementptr inbounds ptr, ptr %35, i64 %36
  store ptr %23, ptr %37, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %38 = load ptr, ptr %0, align 8
  %memberidx1.i110 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %39 = load ptr, ptr %memberidx1.i110, align 8
  %40 = load ptr, ptr %38, align 8
  %41 = load i64, ptr %39, align 4
  %42 = load ptr, ptr %40, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %memberidx2.i.i111 = getelementptr inbounds %Module, ptr %44, i64 0, i32 7
  %45 = load ptr, ptr %memberidx2.i.i111, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %39, i64 0, i32 1
  %46 = load i64, ptr %memberidx3.i.i, align 4
  %47 = load ptr, ptr %45, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  %memberidx4 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 3
  %50 = load ptr, ptr %memberidx4, align 8
  %.not = icmp eq ptr %50, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %51 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %50)
  br label %end

false_block:                                      ; preds = %ifend
  %52 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %52, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %51, %true_block ], [ %52, %false_block ]
  %memberidx.i112 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %53 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i113 = getelementptr inbounds %Compiler, ptr %53, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1.i113, align 8
  %memberidx2.i114 = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx2.i114, align 4
  %56 = icmp sgt i64 %55, 0
  br i1 %56, label %common.ret, label %ifend8

ifend8:                                           ; preds = %end
  %memberidx9 = getelementptr inbounds %VarDeclarationStatement, ptr %1, i64 0, i32 4
  %57 = load ptr, ptr %memberidx9, align 8
  %58 = icmp eq ptr %57, null
  %59 = load i64, ptr %ternary, align 4
  %60 = icmp eq i64 %59, 21
  %61 = and i1 %58, %60
  br i1 %61, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %ifend8
  %memberidx.i115 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i115, align 4
  %63 = trunc i64 %62 to i32
  %64 = add i32 %63, 1
  %65 = tail call ptr @malloc(i32 %64)
  %66 = load ptr, ptr %4, align 8
  %67 = load i64, ptr %memberidx.i115, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %65, ptr align 8 %66, i64 %67, i1 false)
  %68 = getelementptr inbounds i8, ptr %65, i64 %67
  store i8 0, ptr %68, align 1
  %69 = alloca ptr, align 8
  %70 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %69, ptr nonnull @228, ptr %65)
  %71 = load ptr, ptr %69, align 8
  %72 = tail call ptr @malloc(i32 24)
  store ptr %71, ptr %72, align 8
  %memberidx1.i116 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  store i64 %70, ptr %memberidx1.i116, align 4
  %memberidx2.i117 = getelementptr inbounds %String, ptr %72, i64 0, i32 2
  store i64 %70, ptr %memberidx2.i117, align 4
  tail call void @free(ptr %65)
  %73 = load ptr, ptr %memberidx, align 8
  %memberidx15 = getelementptr inbounds %Token, ptr %73, i64 0, i32 1
  %74 = load ptr, ptr %memberidx15, align 8
  %75 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i119 = getelementptr inbounds %Compiler, ptr %75, i64 0, i32 5
  %76 = load ptr, ptr %memberidx1.i119, align 8
  %77 = call ptr @malloc(i32 24)
  store i64 4, ptr %77, align 4
  %memberidx1.i.i120 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 2
  store ptr %74, ptr %memberidx1.i.i120, align 8
  %memberidx2.i.i121 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 1
  store ptr %72, ptr %memberidx2.i.i121, align 8
  %memberidx.i.i122 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 1
  %78 = load i64, ptr %memberidx.i.i122, align 4
  %79 = add i64 %78, 1
  %memberidx.i.i.i123 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 2
  %80 = load i64, ptr %memberidx.i.i.i123, align 4
  %81 = icmp slt i64 %80, %79
  %.pre205 = load ptr, ptr %76, align 8
  br i1 %81, label %while.entry.i.i.i124, label %TypeChecker_error.exit125

while.entry.i.i.i124:                             ; preds = %if.entry11, %while.entry.i.i.i124
  %82 = phi ptr [ %86, %while.entry.i.i.i124 ], [ %.pre205, %if.entry11 ]
  %83 = phi i64 [ %87, %while.entry.i.i.i124 ], [ %80, %if.entry11 ]
  %84 = shl nuw i64 %83, 1
  store i64 %84, ptr %memberidx.i.i.i123, align 4
  %85 = shl i64 %83, 4
  %86 = call ptr @realloc(ptr %82, i64 %85)
  store ptr %86, ptr %76, align 8
  %87 = load i64, ptr %memberidx.i.i.i123, align 4
  %88 = icmp slt i64 %87, %79
  br i1 %88, label %while.entry.i.i.i124, label %TypeChecker_error.exit125.loopexit

TypeChecker_error.exit125.loopexit:               ; preds = %while.entry.i.i.i124
  %.pre206 = load i64, ptr %memberidx.i.i122, align 4
  %.pre210 = add nsw i64 %.pre206, 1
  br label %TypeChecker_error.exit125

TypeChecker_error.exit125:                        ; preds = %if.entry11, %TypeChecker_error.exit125.loopexit
  %.pre-phi = phi i64 [ %.pre210, %TypeChecker_error.exit125.loopexit ], [ %79, %if.entry11 ]
  %89 = phi ptr [ %86, %TypeChecker_error.exit125.loopexit ], [ %.pre205, %if.entry11 ]
  %90 = phi i64 [ %.pre206, %TypeChecker_error.exit125.loopexit ], [ %78, %if.entry11 ]
  store i64 %.pre-phi, ptr %memberidx.i.i122, align 4
  %91 = getelementptr inbounds ptr, ptr %89, i64 %90
  store ptr %77, ptr %91, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend8
  br i1 %58, label %ifend27, label %end18

end18:                                            ; preds = %ifend13
  %92 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %57)
  %.pre186 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i127.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre186, i64 0, i32 5
  %.pre187 = load ptr, ptr %memberidx1.i127.phi.trans.insert, align 8
  %memberidx2.i128.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre187, i64 0, i32 1
  %.pre188 = load i64, ptr %memberidx2.i128.phi.trans.insert, align 4
  %93 = icmp sgt i64 %.pre188, 0
  br i1 %93, label %common.ret, label %ifend24

ifend24:                                          ; preds = %end18
  %.not104 = icmp eq ptr %92, null
  br i1 %.not104, label %ifend27, label %if.entry25

if.entry25:                                       ; preds = %ifend24
  %memberidx.i129 = getelementptr inbounds %Expression, ptr %92, i64 0, i32 2
  %94 = load i64, ptr %memberidx.i129, align 4
  %95 = icmp eq i64 %94, 5
  %memberidx28 = getelementptr inbounds %Expression, ptr %92, i64 0, i32 3
  %96 = load ptr, ptr %memberidx28, align 8
  %97 = load i64, ptr %96, align 4
  %98 = icmp eq i64 %97, 21
  %99 = and i1 %95, %98
  br i1 %99, label %if.entry30, label %ifend32

ifend27:                                          ; preds = %ifend13, %ifend44, %ifend24
  %ternary21222225 = phi ptr [ %92, %ifend44 ], [ null, %ifend24 ], [ null, %ifend13 ]
  %var_type.0 = phi ptr [ %var_type.1, %ifend44 ], [ %ternary, %ifend24 ], [ %ternary, %ifend13 ]
  %memberidx51 = getelementptr inbounds %Scope, ptr %49, i64 0, i32 1
  %100 = load ptr, ptr %memberidx51, align 8
  %101 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %4)
  %memberidx.i130 = getelementptr inbounds %Map_String_VarId_, ptr %100, i64 0, i32 1
  %102 = load i64, ptr %memberidx.i130, align 4
  %103 = urem i64 %101, %102
  %104 = load ptr, ptr %100, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %103
  %106 = load ptr, ptr %105, align 8
  %.not.i131 = icmp eq ptr %106, null
  br i1 %.not.i131, label %ifend54, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend27
  %memberidx1.i.i133 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %107 = phi ptr [ %117, %else.i ], [ %104, %while.entry.i.preheader ]
  %108 = phi i64 [ %118, %else.i ], [ %102, %while.entry.i.preheader ]
  %109 = phi ptr [ %122, %else.i ], [ %106, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %120, %else.i ], [ %103, %while.entry.i.preheader ]
  %110 = load ptr, ptr %109, align 8
  %memberidx.i.i132 = getelementptr inbounds %String, ptr %110, i64 0, i32 1
  %111 = load i64, ptr %memberidx.i.i132, align 4
  %112 = load i64, ptr %memberidx1.i.i133, align 4
  %.not.i.i = icmp eq i64 %111, %112
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %113 = load ptr, ptr %110, align 8
  %114 = load ptr, ptr %4, align 8
  %115 = tail call i64 @memcmp(ptr %113, ptr %114, i64 %111)
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre198 = load i64, ptr %memberidx.i130, align 4
  %.pre199 = load ptr, ptr %100, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre200.pre = load ptr, ptr %100, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre200.pre, i64 %hash.0.i
  %.pre201.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre201.pre, null
  br i1 %.not25.i, label %ifend54, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %117 = phi ptr [ %.pre199, %ifend.i.i.else.i_crit_edge ], [ %107, %while.entry.i ]
  %118 = phi i64 [ %.pre198, %ifend.i.i.else.i_crit_edge ], [ %108, %while.entry.i ]
  %119 = add nuw i64 %hash.0.i, 1
  %120 = urem i64 %119, %118
  %121 = getelementptr inbounds ptr, ptr %117, i64 %120
  %122 = load ptr, ptr %121, align 8
  %.not26.i = icmp eq ptr %122, null
  br i1 %.not26.i, label %ifend54, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre201.pre, i64 0, i32 1
  %123 = load ptr, ptr %memberidx11.i, align 8
  %phi.cmp = icmp eq ptr %123, null
  br i1 %phi.cmp, label %ifend54, label %if.entry52

if.entry30:                                       ; preds = %if.entry25
  %124 = tail call ptr @malloc(i32 69)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %124, ptr noundef nonnull align 8 dereferenceable(69) @229, i64 69, i1 false)
  %125 = tail call ptr @malloc(i32 24)
  store ptr %124, ptr %125, align 8
  %memberidx1.i.i134 = getelementptr inbounds %String, ptr %125, i64 0, i32 1
  store i64 69, ptr %memberidx1.i.i134, align 4
  %memberidx2.i.i135 = getelementptr inbounds %String, ptr %125, i64 0, i32 2
  store i64 69, ptr %memberidx2.i.i135, align 4
  %126 = load ptr, ptr %1, align 8
  %127 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i137 = getelementptr inbounds %Compiler, ptr %127, i64 0, i32 5
  %128 = load ptr, ptr %memberidx1.i137, align 8
  %129 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %129, align 4
  %memberidx1.i.i138 = getelementptr inbounds %FloError, ptr %129, i64 0, i32 2
  store ptr %126, ptr %memberidx1.i.i138, align 8
  %memberidx2.i.i139 = getelementptr inbounds %FloError, ptr %129, i64 0, i32 1
  store ptr %125, ptr %memberidx2.i.i139, align 8
  %memberidx.i.i140 = getelementptr inbounds %Array_FloError_, ptr %128, i64 0, i32 1
  %130 = load i64, ptr %memberidx.i.i140, align 4
  %131 = add i64 %130, 1
  %memberidx.i.i.i141 = getelementptr inbounds %Array_FloError_, ptr %128, i64 0, i32 2
  %132 = load i64, ptr %memberidx.i.i.i141, align 4
  %133 = icmp slt i64 %132, %131
  %.pre195 = load ptr, ptr %128, align 8
  br i1 %133, label %while.entry.i.i.i142, label %TypeChecker_error.exit143

while.entry.i.i.i142:                             ; preds = %if.entry30, %while.entry.i.i.i142
  %134 = phi ptr [ %138, %while.entry.i.i.i142 ], [ %.pre195, %if.entry30 ]
  %135 = phi i64 [ %139, %while.entry.i.i.i142 ], [ %132, %if.entry30 ]
  %136 = shl nuw i64 %135, 1
  store i64 %136, ptr %memberidx.i.i.i141, align 4
  %137 = shl i64 %135, 4
  %138 = tail call ptr @realloc(ptr %134, i64 %137)
  store ptr %138, ptr %128, align 8
  %139 = load i64, ptr %memberidx.i.i.i141, align 4
  %140 = icmp slt i64 %139, %131
  br i1 %140, label %while.entry.i.i.i142, label %TypeChecker_error.exit143.loopexit

TypeChecker_error.exit143.loopexit:               ; preds = %while.entry.i.i.i142
  %.pre196 = load i64, ptr %memberidx.i.i140, align 4
  %.pre213 = add nsw i64 %.pre196, 1
  br label %TypeChecker_error.exit143

TypeChecker_error.exit143:                        ; preds = %if.entry30, %TypeChecker_error.exit143.loopexit
  %.pre-phi214 = phi i64 [ %.pre213, %TypeChecker_error.exit143.loopexit ], [ %131, %if.entry30 ]
  %141 = phi ptr [ %138, %TypeChecker_error.exit143.loopexit ], [ %.pre195, %if.entry30 ]
  %142 = phi i64 [ %.pre196, %TypeChecker_error.exit143.loopexit ], [ %130, %if.entry30 ]
  store i64 %.pre-phi214, ptr %memberidx.i.i140, align 4
  %143 = getelementptr inbounds ptr, ptr %141, i64 %142
  store ptr %129, ptr %143, align 8
  br label %common.ret

ifend32:                                          ; preds = %if.entry25
  %144 = load i64, ptr %ternary, align 4
  %145 = icmp eq i64 %144, 21
  %146 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %ternary, ptr nonnull %96)
  %147 = or i1 %146, %145
  br i1 %147, label %ifend38, label %if.entry36

if.entry36:                                       ; preds = %ifend32
  %148 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %memberidx.i144 = getelementptr inbounds %String, ptr %148, i64 0, i32 1
  %149 = load i64, ptr %memberidx.i144, align 4
  %150 = trunc i64 %149 to i32
  %151 = add i32 %150, 1
  %152 = tail call ptr @malloc(i32 %151)
  %153 = load ptr, ptr %148, align 8
  %154 = load i64, ptr %memberidx.i144, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %152, ptr align 8 %153, i64 %154, i1 false)
  %155 = getelementptr inbounds i8, ptr %152, i64 %154
  store i8 0, ptr %155, align 1
  %156 = load ptr, ptr %memberidx28, align 8
  %157 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %156)
  %memberidx.i145 = getelementptr inbounds %String, ptr %157, i64 0, i32 1
  %158 = load i64, ptr %memberidx.i145, align 4
  %159 = trunc i64 %158 to i32
  %160 = add i32 %159, 1
  %161 = tail call ptr @malloc(i32 %160)
  %162 = load ptr, ptr %157, align 8
  %163 = load i64, ptr %memberidx.i145, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %161, ptr align 8 %162, i64 %163, i1 false)
  %164 = getelementptr inbounds i8, ptr %161, i64 %163
  store i8 0, ptr %164, align 1
  %165 = alloca ptr, align 8
  %166 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %165, ptr nonnull @230, ptr %152, ptr %161)
  %167 = load ptr, ptr %165, align 8
  %168 = tail call ptr @malloc(i32 24)
  store ptr %167, ptr %168, align 8
  %memberidx1.i146 = getelementptr inbounds %String, ptr %168, i64 0, i32 1
  store i64 %166, ptr %memberidx1.i146, align 4
  %memberidx2.i147 = getelementptr inbounds %String, ptr %168, i64 0, i32 2
  store i64 %166, ptr %memberidx2.i147, align 4
  tail call void @free(ptr %152)
  tail call void @free(ptr %161)
  %169 = load ptr, ptr %1, align 8
  %170 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i149 = getelementptr inbounds %Compiler, ptr %170, i64 0, i32 5
  %171 = load ptr, ptr %memberidx1.i149, align 8
  %172 = call ptr @malloc(i32 24)
  store i64 5, ptr %172, align 4
  %memberidx1.i.i150 = getelementptr inbounds %FloError, ptr %172, i64 0, i32 2
  store ptr %169, ptr %memberidx1.i.i150, align 8
  %memberidx2.i.i151 = getelementptr inbounds %FloError, ptr %172, i64 0, i32 1
  store ptr %168, ptr %memberidx2.i.i151, align 8
  %memberidx.i.i152 = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 1
  %173 = load i64, ptr %memberidx.i.i152, align 4
  %174 = add i64 %173, 1
  %memberidx.i.i.i153 = getelementptr inbounds %Array_FloError_, ptr %171, i64 0, i32 2
  %175 = load i64, ptr %memberidx.i.i.i153, align 4
  %176 = icmp slt i64 %175, %174
  %.pre189 = load ptr, ptr %171, align 8
  br i1 %176, label %while.entry.i.i.i154, label %TypeChecker_error.exit155

while.entry.i.i.i154:                             ; preds = %if.entry36, %while.entry.i.i.i154
  %177 = phi ptr [ %181, %while.entry.i.i.i154 ], [ %.pre189, %if.entry36 ]
  %178 = phi i64 [ %182, %while.entry.i.i.i154 ], [ %175, %if.entry36 ]
  %179 = shl nuw i64 %178, 1
  store i64 %179, ptr %memberidx.i.i.i153, align 4
  %180 = shl i64 %178, 4
  %181 = call ptr @realloc(ptr %177, i64 %180)
  store ptr %181, ptr %171, align 8
  %182 = load i64, ptr %memberidx.i.i.i153, align 4
  %183 = icmp slt i64 %182, %174
  br i1 %183, label %while.entry.i.i.i154, label %TypeChecker_error.exit155.loopexit

TypeChecker_error.exit155.loopexit:               ; preds = %while.entry.i.i.i154
  %.pre190 = load i64, ptr %memberidx.i.i152, align 4
  %.pre217 = add nsw i64 %.pre190, 1
  br label %TypeChecker_error.exit155

TypeChecker_error.exit155:                        ; preds = %if.entry36, %TypeChecker_error.exit155.loopexit
  %.pre-phi218 = phi i64 [ %.pre217, %TypeChecker_error.exit155.loopexit ], [ %174, %if.entry36 ]
  %184 = phi ptr [ %181, %TypeChecker_error.exit155.loopexit ], [ %.pre189, %if.entry36 ]
  %185 = phi i64 [ %.pre190, %TypeChecker_error.exit155.loopexit ], [ %173, %if.entry36 ]
  store i64 %.pre-phi218, ptr %memberidx.i.i152, align 4
  %186 = getelementptr inbounds ptr, ptr %184, i64 %185
  store ptr %172, ptr %186, align 8
  br label %common.ret

ifend38:                                          ; preds = %ifend32
  %187 = load i64, ptr %ternary, align 4
  %188 = icmp eq i64 %187, 21
  br i1 %188, label %if.entry42, label %ifend44

if.entry42:                                       ; preds = %ifend38
  %189 = load ptr, ptr %memberidx28, align 8
  %.pr = load i64, ptr %189, align 4
  br label %ifend44

ifend44:                                          ; preds = %ifend38, %if.entry42
  %190 = phi i64 [ %187, %ifend38 ], [ %.pr, %if.entry42 ]
  %var_type.1 = phi ptr [ %ternary, %ifend38 ], [ %189, %if.entry42 ]
  %191 = icmp eq i64 %190, 10
  br i1 %191, label %if.entry47, label %ifend27

if.entry47:                                       ; preds = %ifend44
  %192 = tail call ptr @malloc(i32 38)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(38) %192, ptr noundef nonnull align 8 dereferenceable(38) @231, i64 38, i1 false)
  %193 = tail call ptr @malloc(i32 24)
  store ptr %192, ptr %193, align 8
  %memberidx1.i.i156 = getelementptr inbounds %String, ptr %193, i64 0, i32 1
  store i64 38, ptr %memberidx1.i.i156, align 4
  %memberidx2.i.i157 = getelementptr inbounds %String, ptr %193, i64 0, i32 2
  store i64 38, ptr %memberidx2.i.i157, align 4
  %194 = load ptr, ptr %1, align 8
  %195 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i159 = getelementptr inbounds %Compiler, ptr %195, i64 0, i32 5
  %196 = load ptr, ptr %memberidx1.i159, align 8
  %197 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %197, align 4
  %memberidx1.i.i160 = getelementptr inbounds %FloError, ptr %197, i64 0, i32 2
  store ptr %194, ptr %memberidx1.i.i160, align 8
  %memberidx2.i.i161 = getelementptr inbounds %FloError, ptr %197, i64 0, i32 1
  store ptr %193, ptr %memberidx2.i.i161, align 8
  %memberidx.i.i162 = getelementptr inbounds %Array_FloError_, ptr %196, i64 0, i32 1
  %198 = load i64, ptr %memberidx.i.i162, align 4
  %199 = add i64 %198, 1
  %memberidx.i.i.i163 = getelementptr inbounds %Array_FloError_, ptr %196, i64 0, i32 2
  %200 = load i64, ptr %memberidx.i.i.i163, align 4
  %201 = icmp slt i64 %200, %199
  %.pre192 = load ptr, ptr %196, align 8
  br i1 %201, label %while.entry.i.i.i164, label %TypeChecker_error.exit165

while.entry.i.i.i164:                             ; preds = %if.entry47, %while.entry.i.i.i164
  %202 = phi ptr [ %206, %while.entry.i.i.i164 ], [ %.pre192, %if.entry47 ]
  %203 = phi i64 [ %207, %while.entry.i.i.i164 ], [ %200, %if.entry47 ]
  %204 = shl nuw i64 %203, 1
  store i64 %204, ptr %memberidx.i.i.i163, align 4
  %205 = shl i64 %203, 4
  %206 = tail call ptr @realloc(ptr %202, i64 %205)
  store ptr %206, ptr %196, align 8
  %207 = load i64, ptr %memberidx.i.i.i163, align 4
  %208 = icmp slt i64 %207, %199
  br i1 %208, label %while.entry.i.i.i164, label %TypeChecker_error.exit165.loopexit

TypeChecker_error.exit165.loopexit:               ; preds = %while.entry.i.i.i164
  %.pre193 = load i64, ptr %memberidx.i.i162, align 4
  %.pre215 = add nsw i64 %.pre193, 1
  br label %TypeChecker_error.exit165

TypeChecker_error.exit165:                        ; preds = %if.entry47, %TypeChecker_error.exit165.loopexit
  %.pre-phi216 = phi i64 [ %.pre215, %TypeChecker_error.exit165.loopexit ], [ %199, %if.entry47 ]
  %209 = phi ptr [ %206, %TypeChecker_error.exit165.loopexit ], [ %.pre192, %if.entry47 ]
  %210 = phi i64 [ %.pre193, %TypeChecker_error.exit165.loopexit ], [ %198, %if.entry47 ]
  store i64 %.pre-phi216, ptr %memberidx.i.i162, align 4
  %211 = getelementptr inbounds ptr, ptr %209, i64 %210
  store ptr %197, ptr %211, align 8
  br label %common.ret

if.entry52:                                       ; preds = %if.entry7.i
  %memberidx.i166 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %212 = load i64, ptr %memberidx.i166, align 4
  %213 = trunc i64 %212 to i32
  %214 = add i32 %213, 1
  %215 = tail call ptr @malloc(i32 %214)
  %216 = load ptr, ptr %4, align 8
  %217 = load i64, ptr %memberidx.i166, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %215, ptr align 8 %216, i64 %217, i1 false)
  %218 = getelementptr inbounds i8, ptr %215, i64 %217
  store i8 0, ptr %218, align 1
  %219 = alloca ptr, align 8
  %220 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %219, ptr nonnull @232, ptr %215)
  %221 = load ptr, ptr %219, align 8
  %222 = tail call ptr @malloc(i32 24)
  store ptr %221, ptr %222, align 8
  %memberidx1.i167 = getelementptr inbounds %String, ptr %222, i64 0, i32 1
  store i64 %220, ptr %memberidx1.i167, align 4
  %memberidx2.i168 = getelementptr inbounds %String, ptr %222, i64 0, i32 2
  store i64 %220, ptr %memberidx2.i168, align 4
  tail call void @free(ptr %215)
  %223 = load ptr, ptr %memberidx, align 8
  %memberidx56 = getelementptr inbounds %Token, ptr %223, i64 0, i32 1
  %224 = load ptr, ptr %memberidx56, align 8
  %225 = load ptr, ptr %memberidx.i112, align 8
  %memberidx1.i170 = getelementptr inbounds %Compiler, ptr %225, i64 0, i32 5
  %226 = load ptr, ptr %memberidx1.i170, align 8
  %227 = call ptr @malloc(i32 24)
  store i64 1, ptr %227, align 4
  %memberidx1.i.i171 = getelementptr inbounds %FloError, ptr %227, i64 0, i32 2
  store ptr %224, ptr %memberidx1.i.i171, align 8
  %memberidx2.i.i172 = getelementptr inbounds %FloError, ptr %227, i64 0, i32 1
  store ptr %222, ptr %memberidx2.i.i172, align 8
  %memberidx.i.i173 = getelementptr inbounds %Array_FloError_, ptr %226, i64 0, i32 1
  %228 = load i64, ptr %memberidx.i.i173, align 4
  %229 = add i64 %228, 1
  %memberidx.i.i.i174 = getelementptr inbounds %Array_FloError_, ptr %226, i64 0, i32 2
  %230 = load i64, ptr %memberidx.i.i.i174, align 4
  %231 = icmp slt i64 %230, %229
  %.pre202 = load ptr, ptr %226, align 8
  br i1 %231, label %while.entry.i.i.i175, label %TypeChecker_error.exit176

while.entry.i.i.i175:                             ; preds = %if.entry52, %while.entry.i.i.i175
  %232 = phi ptr [ %236, %while.entry.i.i.i175 ], [ %.pre202, %if.entry52 ]
  %233 = phi i64 [ %237, %while.entry.i.i.i175 ], [ %230, %if.entry52 ]
  %234 = shl nuw i64 %233, 1
  store i64 %234, ptr %memberidx.i.i.i174, align 4
  %235 = shl i64 %233, 4
  %236 = call ptr @realloc(ptr %232, i64 %235)
  store ptr %236, ptr %226, align 8
  %237 = load i64, ptr %memberidx.i.i.i174, align 4
  %238 = icmp slt i64 %237, %229
  br i1 %238, label %while.entry.i.i.i175, label %TypeChecker_error.exit176.loopexit

TypeChecker_error.exit176.loopexit:               ; preds = %while.entry.i.i.i175
  %.pre203 = load i64, ptr %memberidx.i.i173, align 4
  %.pre211 = add nsw i64 %.pre203, 1
  br label %TypeChecker_error.exit176

TypeChecker_error.exit176:                        ; preds = %if.entry52, %TypeChecker_error.exit176.loopexit
  %.pre-phi212 = phi i64 [ %.pre211, %TypeChecker_error.exit176.loopexit ], [ %229, %if.entry52 ]
  %239 = phi ptr [ %236, %TypeChecker_error.exit176.loopexit ], [ %.pre202, %if.entry52 ]
  %240 = phi i64 [ %.pre203, %TypeChecker_error.exit176.loopexit ], [ %228, %if.entry52 ]
  store i64 %.pre-phi212, ptr %memberidx.i.i173, align 4
  %241 = getelementptr inbounds ptr, ptr %239, i64 %240
  store ptr %227, ptr %241, align 8
  br label %common.ret

ifend54:                                          ; preds = %else.i, %ifend27, %while.end.i, %if.entry7.i
  %242 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %4, ptr %ternary21222225, ptr nonnull %var_type.0)
  %243 = tail call ptr @malloc(i32 25)
  %memberidx57 = getelementptr inbounds %Var, ptr %242, i64 0, i32 1
  %244 = load ptr, ptr %memberidx57, align 8
  store i64 1, ptr %243, align 4
  %memberidx.i177 = getelementptr inbounds %VarDeclaration, ptr %243, i64 0, i32 2
  store ptr %244, ptr %memberidx.i177, align 8
  %memberidx1.i178 = getelementptr inbounds %VarDeclaration, ptr %243, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i178, align 8
  %memberidx2.i179 = getelementptr inbounds %VarDeclaration, ptr %243, i64 0, i32 3
  store i1 false, ptr %memberidx2.i179, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 2
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx1.i, align 8
  %7 = load ptr, ptr %5, align 8
  %8 = load i64, ptr %6, align 4
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 7
  %12 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %17 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %4)
  %.not.i = icmp eq ptr %17, null
  br i1 %.not.i, label %TypeChecker_is_constant_in_scope.exit, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %18 = load i64, ptr %17, align 4
  %19 = icmp eq i64 %18, 2
  br label %TypeChecker_is_constant_in_scope.exit

TypeChecker_is_constant_in_scope.exit:            ; preds = %2, %if.entry.i
  %is_constant.0.i = phi i1 [ %19, %if.entry.i ], [ false, %2 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %16, i64 0, i32 1
  %20 = load ptr, ptr %memberidx2, align 8
  %21 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_String_VarId_, ptr %20, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i, align 4
  %23 = urem i64 %21, %22
  %24 = load ptr, ptr %20, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  %.not.i83 = icmp eq ptr %26, null
  br i1 %.not.i83, label %Map_String_VarId____getitem__.exit, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %TypeChecker_is_constant_in_scope.exit
  %memberidx1.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %27 = phi ptr [ %37, %else.i ], [ %24, %while.entry.i.preheader ]
  %28 = phi i64 [ %38, %else.i ], [ %22, %while.entry.i.preheader ]
  %29 = phi ptr [ %42, %else.i ], [ %26, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %40, %else.i ], [ %23, %while.entry.i.preheader ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %32 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %31, %32
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %33 = load ptr, ptr %30, align 8
  %34 = load ptr, ptr %4, align 8
  %35 = tail call i64 @memcmp(ptr %33, ptr %34, i64 %31)
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre146 = load ptr, ptr %20, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre147.pre = load ptr, ptr %20, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre147.pre, i64 %hash.0.i
  %.pre148.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre148.pre, null
  br i1 %.not25.i, label %Map_String_VarId____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %37 = phi ptr [ %.pre146, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %38 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %28, %while.entry.i ]
  %39 = add nuw i64 %hash.0.i, 1
  %40 = urem i64 %39, %38
  %41 = getelementptr inbounds ptr, ptr %37, i64 %40
  %42 = load ptr, ptr %41, align 8
  %.not26.i = icmp eq ptr %42, null
  br i1 %.not26.i, label %Map_String_VarId____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre148.pre, i64 0, i32 1
  %43 = load ptr, ptr %memberidx11.i, align 8
  %phi.cmp = icmp ne ptr %43, null
  br label %Map_String_VarId____getitem__.exit

Map_String_VarId____getitem__.exit:               ; preds = %else.i, %TypeChecker_is_constant_in_scope.exit, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry7.i ], [ false, %while.end.i ], [ false, %TypeChecker_is_constant_in_scope.exit ], [ false, %else.i ]
  %44 = or i1 %is_constant.0.i, %common.ret.op.i
  br i1 %44, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend9, %end, %ifend40, %TypeChecker_error.exit139, %TypeChecker_error.exit129, %TypeChecker_error.exit117, %TypeChecker_error.exit106, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit106 ], [ null, %TypeChecker_error.exit117 ], [ null, %TypeChecker_error.exit129 ], [ null, %TypeChecker_error.exit139 ], [ %203, %ifend40 ], [ null, %end ], [ null, %ifend9 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %Map_String_VarId____getitem__.exit
  %memberidx.i84 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %45 = load i64, ptr %memberidx.i84, align 4
  %46 = trunc i64 %45 to i32
  %47 = add i32 %46, 1
  %48 = tail call ptr @malloc(i32 %47)
  %49 = load ptr, ptr %4, align 8
  %50 = load i64, ptr %memberidx.i84, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %48, ptr align 8 %49, i64 %50, i1 false)
  %51 = getelementptr inbounds i8, ptr %48, i64 %50
  store i8 0, ptr %51, align 1
  %52 = alloca ptr, align 8
  %53 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %52, ptr nonnull @109, ptr %48)
  %54 = load ptr, ptr %52, align 8
  %55 = tail call ptr @malloc(i32 24)
  store ptr %54, ptr %55, align 8
  %memberidx1.i85 = getelementptr inbounds %String, ptr %55, i64 0, i32 1
  store i64 %53, ptr %memberidx1.i85, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %55, i64 0, i32 2
  store i64 %53, ptr %memberidx2.i, align 4
  tail call void @free(ptr %48)
  %56 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %56, i64 0, i32 1
  %57 = load ptr, ptr %memberidx4, align 8
  %memberidx.i86 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %58 = load ptr, ptr %memberidx.i86, align 8
  %memberidx1.i87 = getelementptr inbounds %Compiler, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx1.i87, align 8
  %60 = call ptr @malloc(i32 24)
  store i64 1, ptr %60, align 4
  %memberidx1.i.i88 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 2
  store ptr %57, ptr %memberidx1.i.i88, align 8
  %memberidx2.i.i89 = getelementptr inbounds %FloError, ptr %60, i64 0, i32 1
  store ptr %55, ptr %memberidx2.i.i89, align 8
  %memberidx.i.i90 = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 1
  %61 = load i64, ptr %memberidx.i.i90, align 4
  %62 = add i64 %61, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %59, i64 0, i32 2
  %63 = load i64, ptr %memberidx.i.i.i, align 4
  %64 = icmp slt i64 %63, %62
  %.pre161 = load ptr, ptr %59, align 8
  br i1 %64, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %65 = phi ptr [ %69, %while.entry.i.i.i ], [ %.pre161, %if.entry ]
  %66 = phi i64 [ %70, %while.entry.i.i.i ], [ %63, %if.entry ]
  %67 = shl nuw i64 %66, 1
  store i64 %67, ptr %memberidx.i.i.i, align 4
  %68 = shl i64 %66, 4
  %69 = call ptr @realloc(ptr %65, i64 %68)
  store ptr %69, ptr %59, align 8
  %70 = load i64, ptr %memberidx.i.i.i, align 4
  %71 = icmp slt i64 %70, %62
  br i1 %71, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre162 = load i64, ptr %memberidx.i.i90, align 4
  %.pre166 = add nsw i64 %.pre162, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre166, %TypeChecker_error.exit.loopexit ], [ %62, %if.entry ]
  %72 = phi ptr [ %69, %TypeChecker_error.exit.loopexit ], [ %.pre161, %if.entry ]
  %73 = phi i64 [ %.pre162, %TypeChecker_error.exit.loopexit ], [ %61, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i90, align 4
  %74 = getelementptr inbounds ptr, ptr %72, i64 %73
  store ptr %60, ptr %74, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_VarId____getitem__.exit
  %memberidx5 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 3
  %75 = load ptr, ptr %memberidx5, align 8
  %.not = icmp eq ptr %75, null
  br i1 %.not, label %false_block, label %true_block

true_block:                                       ; preds = %ifend
  %76 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %75)
  br label %end

false_block:                                      ; preds = %ifend
  %77 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %77, align 4
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %76, %true_block ], [ %77, %false_block ]
  %memberidx.i91 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %78 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i92 = getelementptr inbounds %Compiler, ptr %78, i64 0, i32 5
  %79 = load ptr, ptr %memberidx1.i92, align 8
  %memberidx2.i93 = getelementptr inbounds %Array_FloError_, ptr %79, i64 0, i32 1
  %80 = load i64, ptr %memberidx2.i93, align 4
  %81 = icmp sgt i64 %80, 0
  br i1 %81, label %common.ret, label %ifend9

ifend9:                                           ; preds = %end
  %memberidx10 = getelementptr inbounds %ConstDeclarationStatement, ptr %1, i64 0, i32 4
  %82 = load ptr, ptr %memberidx10, align 8
  %83 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %ternary, ptr %82)
  %84 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i95 = getelementptr inbounds %Compiler, ptr %84, i64 0, i32 5
  %85 = load ptr, ptr %memberidx1.i95, align 8
  %memberidx2.i96 = getelementptr inbounds %Array_FloError_, ptr %85, i64 0, i32 1
  %86 = load i64, ptr %memberidx2.i96, align 4
  %87 = icmp sgt i64 %86, 0
  br i1 %87, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend9
  %memberidx14 = getelementptr inbounds %Expression, ptr %83, i64 0, i32 1
  %88 = load i1, ptr %memberidx14, align 1
  br i1 %88, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %89 = tail call ptr @malloc(i32 48)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %89, ptr noundef nonnull align 8 dereferenceable(48) @233, i64 48, i1 false)
  %90 = tail call ptr @malloc(i32 24)
  store ptr %89, ptr %90, align 8
  %memberidx1.i.i97 = getelementptr inbounds %String, ptr %90, i64 0, i32 1
  store i64 48, ptr %memberidx1.i.i97, align 4
  %memberidx2.i.i98 = getelementptr inbounds %String, ptr %90, i64 0, i32 2
  store i64 48, ptr %memberidx2.i.i98, align 4
  %91 = load ptr, ptr %memberidx10, align 8
  %92 = load ptr, ptr %91, align 8
  %93 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i100 = getelementptr inbounds %Compiler, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx1.i100, align 8
  %95 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %95, align 4
  %memberidx1.i.i101 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 2
  store ptr %92, ptr %memberidx1.i.i101, align 8
  %memberidx2.i.i102 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 1
  store ptr %90, ptr %memberidx2.i.i102, align 8
  %memberidx.i.i103 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i.i103, align 4
  %97 = add i64 %96, 1
  %memberidx.i.i.i104 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 2
  %98 = load i64, ptr %memberidx.i.i.i104, align 4
  %99 = icmp slt i64 %98, %97
  %.pre149 = load ptr, ptr %94, align 8
  br i1 %99, label %while.entry.i.i.i105, label %TypeChecker_error.exit106

while.entry.i.i.i105:                             ; preds = %if.entry15, %while.entry.i.i.i105
  %100 = phi ptr [ %104, %while.entry.i.i.i105 ], [ %.pre149, %if.entry15 ]
  %101 = phi i64 [ %105, %while.entry.i.i.i105 ], [ %98, %if.entry15 ]
  %102 = shl nuw i64 %101, 1
  store i64 %102, ptr %memberidx.i.i.i104, align 4
  %103 = shl i64 %101, 4
  %104 = tail call ptr @realloc(ptr %100, i64 %103)
  store ptr %104, ptr %94, align 8
  %105 = load i64, ptr %memberidx.i.i.i104, align 4
  %106 = icmp slt i64 %105, %97
  br i1 %106, label %while.entry.i.i.i105, label %TypeChecker_error.exit106.loopexit

TypeChecker_error.exit106.loopexit:               ; preds = %while.entry.i.i.i105
  %.pre150 = load i64, ptr %memberidx.i.i103, align 4
  %.pre173 = add nsw i64 %.pre150, 1
  br label %TypeChecker_error.exit106

TypeChecker_error.exit106:                        ; preds = %if.entry15, %TypeChecker_error.exit106.loopexit
  %.pre-phi174 = phi i64 [ %.pre173, %TypeChecker_error.exit106.loopexit ], [ %97, %if.entry15 ]
  %107 = phi ptr [ %104, %TypeChecker_error.exit106.loopexit ], [ %.pre149, %if.entry15 ]
  %108 = phi i64 [ %.pre150, %TypeChecker_error.exit106.loopexit ], [ %96, %if.entry15 ]
  store i64 %.pre-phi174, ptr %memberidx.i.i103, align 4
  %109 = getelementptr inbounds ptr, ptr %107, i64 %108
  store ptr %95, ptr %109, align 8
  br label %common.ret

ifend17:                                          ; preds = %ifend13
  %memberidx.i107 = getelementptr inbounds %Expression, ptr %83, i64 0, i32 2
  %110 = load i64, ptr %memberidx.i107, align 4
  %111 = icmp eq i64 %110, 5
  %112 = load i64, ptr %ternary, align 4
  %113 = icmp eq i64 %112, 21
  %114 = and i1 %111, %113
  br i1 %114, label %if.entry21, label %ifend23

if.entry21:                                       ; preds = %ifend17
  %115 = tail call ptr @malloc(i32 69)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(69) %115, ptr noundef nonnull align 8 dereferenceable(69) @229, i64 69, i1 false)
  %116 = tail call ptr @malloc(i32 24)
  store ptr %115, ptr %116, align 8
  %memberidx1.i.i108 = getelementptr inbounds %String, ptr %116, i64 0, i32 1
  store i64 69, ptr %memberidx1.i.i108, align 4
  %memberidx2.i.i109 = getelementptr inbounds %String, ptr %116, i64 0, i32 2
  store i64 69, ptr %memberidx2.i.i109, align 4
  %117 = load ptr, ptr %1, align 8
  %118 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i111 = getelementptr inbounds %Compiler, ptr %118, i64 0, i32 5
  %119 = load ptr, ptr %memberidx1.i111, align 8
  %120 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %120, align 4
  %memberidx1.i.i112 = getelementptr inbounds %FloError, ptr %120, i64 0, i32 2
  store ptr %117, ptr %memberidx1.i.i112, align 8
  %memberidx2.i.i113 = getelementptr inbounds %FloError, ptr %120, i64 0, i32 1
  store ptr %116, ptr %memberidx2.i.i113, align 8
  %memberidx.i.i114 = getelementptr inbounds %Array_FloError_, ptr %119, i64 0, i32 1
  %121 = load i64, ptr %memberidx.i.i114, align 4
  %122 = add i64 %121, 1
  %memberidx.i.i.i115 = getelementptr inbounds %Array_FloError_, ptr %119, i64 0, i32 2
  %123 = load i64, ptr %memberidx.i.i.i115, align 4
  %124 = icmp slt i64 %123, %122
  %.pre158 = load ptr, ptr %119, align 8
  br i1 %124, label %while.entry.i.i.i116, label %TypeChecker_error.exit117

while.entry.i.i.i116:                             ; preds = %if.entry21, %while.entry.i.i.i116
  %125 = phi ptr [ %129, %while.entry.i.i.i116 ], [ %.pre158, %if.entry21 ]
  %126 = phi i64 [ %130, %while.entry.i.i.i116 ], [ %123, %if.entry21 ]
  %127 = shl nuw i64 %126, 1
  store i64 %127, ptr %memberidx.i.i.i115, align 4
  %128 = shl i64 %126, 4
  %129 = tail call ptr @realloc(ptr %125, i64 %128)
  store ptr %129, ptr %119, align 8
  %130 = load i64, ptr %memberidx.i.i.i115, align 4
  %131 = icmp slt i64 %130, %122
  br i1 %131, label %while.entry.i.i.i116, label %TypeChecker_error.exit117.loopexit

TypeChecker_error.exit117.loopexit:               ; preds = %while.entry.i.i.i116
  %.pre159 = load i64, ptr %memberidx.i.i114, align 4
  %.pre167 = add nsw i64 %.pre159, 1
  br label %TypeChecker_error.exit117

TypeChecker_error.exit117:                        ; preds = %if.entry21, %TypeChecker_error.exit117.loopexit
  %.pre-phi168 = phi i64 [ %.pre167, %TypeChecker_error.exit117.loopexit ], [ %122, %if.entry21 ]
  %132 = phi ptr [ %129, %TypeChecker_error.exit117.loopexit ], [ %.pre158, %if.entry21 ]
  %133 = phi i64 [ %.pre159, %TypeChecker_error.exit117.loopexit ], [ %121, %if.entry21 ]
  store i64 %.pre-phi168, ptr %memberidx.i.i114, align 4
  %134 = getelementptr inbounds ptr, ptr %132, i64 %133
  store ptr %120, ptr %134, align 8
  br label %common.ret

ifend23:                                          ; preds = %ifend17
  %memberidx26 = getelementptr inbounds %Expression, ptr %83, i64 0, i32 3
  %135 = load ptr, ptr %memberidx26, align 8
  %136 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %ternary, ptr %135)
  %137 = or i1 %113, %136
  br i1 %137, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend23
  %138 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %ternary)
  %memberidx.i118 = getelementptr inbounds %String, ptr %138, i64 0, i32 1
  %139 = load i64, ptr %memberidx.i118, align 4
  %140 = trunc i64 %139 to i32
  %141 = add i32 %140, 1
  %142 = tail call ptr @malloc(i32 %141)
  %143 = load ptr, ptr %138, align 8
  %144 = load i64, ptr %memberidx.i118, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %142, ptr align 8 %143, i64 %144, i1 false)
  %145 = getelementptr inbounds i8, ptr %142, i64 %144
  store i8 0, ptr %145, align 1
  %146 = load ptr, ptr %memberidx26, align 8
  %147 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %146)
  %memberidx.i119 = getelementptr inbounds %String, ptr %147, i64 0, i32 1
  %148 = load i64, ptr %memberidx.i119, align 4
  %149 = trunc i64 %148 to i32
  %150 = add i32 %149, 1
  %151 = tail call ptr @malloc(i32 %150)
  %152 = load ptr, ptr %147, align 8
  %153 = load i64, ptr %memberidx.i119, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %151, ptr align 8 %152, i64 %153, i1 false)
  %154 = getelementptr inbounds i8, ptr %151, i64 %153
  store i8 0, ptr %154, align 1
  %155 = alloca ptr, align 8
  %156 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %155, ptr nonnull @234, ptr %142, ptr %151)
  %157 = load ptr, ptr %155, align 8
  %158 = tail call ptr @malloc(i32 24)
  store ptr %157, ptr %158, align 8
  %memberidx1.i120 = getelementptr inbounds %String, ptr %158, i64 0, i32 1
  store i64 %156, ptr %memberidx1.i120, align 4
  %memberidx2.i121 = getelementptr inbounds %String, ptr %158, i64 0, i32 2
  store i64 %156, ptr %memberidx2.i121, align 4
  tail call void @free(ptr %142)
  tail call void @free(ptr %151)
  %159 = load ptr, ptr %1, align 8
  %160 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i123 = getelementptr inbounds %Compiler, ptr %160, i64 0, i32 5
  %161 = load ptr, ptr %memberidx1.i123, align 8
  %162 = call ptr @malloc(i32 24)
  store i64 5, ptr %162, align 4
  %memberidx1.i.i124 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 2
  store ptr %159, ptr %memberidx1.i.i124, align 8
  %memberidx2.i.i125 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 1
  store ptr %158, ptr %memberidx2.i.i125, align 8
  %memberidx.i.i126 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 1
  %163 = load i64, ptr %memberidx.i.i126, align 4
  %164 = add i64 %163, 1
  %memberidx.i.i.i127 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 2
  %165 = load i64, ptr %memberidx.i.i.i127, align 4
  %166 = icmp slt i64 %165, %164
  %.pre152 = load ptr, ptr %161, align 8
  br i1 %166, label %while.entry.i.i.i128, label %TypeChecker_error.exit129

while.entry.i.i.i128:                             ; preds = %if.entry27, %while.entry.i.i.i128
  %167 = phi ptr [ %171, %while.entry.i.i.i128 ], [ %.pre152, %if.entry27 ]
  %168 = phi i64 [ %172, %while.entry.i.i.i128 ], [ %165, %if.entry27 ]
  %169 = shl nuw i64 %168, 1
  store i64 %169, ptr %memberidx.i.i.i127, align 4
  %170 = shl i64 %168, 4
  %171 = call ptr @realloc(ptr %167, i64 %170)
  store ptr %171, ptr %161, align 8
  %172 = load i64, ptr %memberidx.i.i.i127, align 4
  %173 = icmp slt i64 %172, %164
  br i1 %173, label %while.entry.i.i.i128, label %TypeChecker_error.exit129.loopexit

TypeChecker_error.exit129.loopexit:               ; preds = %while.entry.i.i.i128
  %.pre153 = load i64, ptr %memberidx.i.i126, align 4
  %.pre171 = add nsw i64 %.pre153, 1
  br label %TypeChecker_error.exit129

TypeChecker_error.exit129:                        ; preds = %if.entry27, %TypeChecker_error.exit129.loopexit
  %.pre-phi172 = phi i64 [ %.pre171, %TypeChecker_error.exit129.loopexit ], [ %164, %if.entry27 ]
  %174 = phi ptr [ %171, %TypeChecker_error.exit129.loopexit ], [ %.pre152, %if.entry27 ]
  %175 = phi i64 [ %.pre153, %TypeChecker_error.exit129.loopexit ], [ %163, %if.entry27 ]
  store i64 %.pre-phi172, ptr %memberidx.i.i126, align 4
  %176 = getelementptr inbounds ptr, ptr %174, i64 %175
  store ptr %162, ptr %176, align 8
  br label %common.ret

ifend29:                                          ; preds = %ifend23
  %177 = load i64, ptr %ternary, align 4
  %178 = icmp eq i64 %177, 21
  br i1 %178, label %if.entry33, label %ifend35

if.entry33:                                       ; preds = %ifend29
  %179 = load ptr, ptr %memberidx26, align 8
  %.pr = load i64, ptr %179, align 4
  br label %ifend35

ifend35:                                          ; preds = %ifend29, %if.entry33
  %180 = phi i64 [ %177, %ifend29 ], [ %.pr, %if.entry33 ]
  %const_type.0 = phi ptr [ %ternary, %ifend29 ], [ %179, %if.entry33 ]
  %181 = icmp eq i64 %180, 10
  br i1 %181, label %if.entry38, label %ifend40

if.entry38:                                       ; preds = %ifend35
  %182 = tail call ptr @malloc(i32 35)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %182, ptr noundef nonnull align 8 dereferenceable(35) @235, i64 35, i1 false)
  %183 = tail call ptr @malloc(i32 24)
  store ptr %182, ptr %183, align 8
  %memberidx1.i.i130 = getelementptr inbounds %String, ptr %183, i64 0, i32 1
  store i64 35, ptr %memberidx1.i.i130, align 4
  %memberidx2.i.i131 = getelementptr inbounds %String, ptr %183, i64 0, i32 2
  store i64 35, ptr %memberidx2.i.i131, align 4
  %184 = load ptr, ptr %1, align 8
  %185 = load ptr, ptr %memberidx.i91, align 8
  %memberidx1.i133 = getelementptr inbounds %Compiler, ptr %185, i64 0, i32 5
  %186 = load ptr, ptr %memberidx1.i133, align 8
  %187 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %187, align 4
  %memberidx1.i.i134 = getelementptr inbounds %FloError, ptr %187, i64 0, i32 2
  store ptr %184, ptr %memberidx1.i.i134, align 8
  %memberidx2.i.i135 = getelementptr inbounds %FloError, ptr %187, i64 0, i32 1
  store ptr %183, ptr %memberidx2.i.i135, align 8
  %memberidx.i.i136 = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 1
  %188 = load i64, ptr %memberidx.i.i136, align 4
  %189 = add i64 %188, 1
  %memberidx.i.i.i137 = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 2
  %190 = load i64, ptr %memberidx.i.i.i137, align 4
  %191 = icmp slt i64 %190, %189
  %.pre155 = load ptr, ptr %186, align 8
  br i1 %191, label %while.entry.i.i.i138, label %TypeChecker_error.exit139

while.entry.i.i.i138:                             ; preds = %if.entry38, %while.entry.i.i.i138
  %192 = phi ptr [ %196, %while.entry.i.i.i138 ], [ %.pre155, %if.entry38 ]
  %193 = phi i64 [ %197, %while.entry.i.i.i138 ], [ %190, %if.entry38 ]
  %194 = shl nuw i64 %193, 1
  store i64 %194, ptr %memberidx.i.i.i137, align 4
  %195 = shl i64 %193, 4
  %196 = tail call ptr @realloc(ptr %192, i64 %195)
  store ptr %196, ptr %186, align 8
  %197 = load i64, ptr %memberidx.i.i.i137, align 4
  %198 = icmp slt i64 %197, %189
  br i1 %198, label %while.entry.i.i.i138, label %TypeChecker_error.exit139.loopexit

TypeChecker_error.exit139.loopexit:               ; preds = %while.entry.i.i.i138
  %.pre156 = load i64, ptr %memberidx.i.i136, align 4
  %.pre169 = add nsw i64 %.pre156, 1
  br label %TypeChecker_error.exit139

TypeChecker_error.exit139:                        ; preds = %if.entry38, %TypeChecker_error.exit139.loopexit
  %.pre-phi170 = phi i64 [ %.pre169, %TypeChecker_error.exit139.loopexit ], [ %189, %if.entry38 ]
  %199 = phi ptr [ %196, %TypeChecker_error.exit139.loopexit ], [ %.pre155, %if.entry38 ]
  %200 = phi i64 [ %.pre156, %TypeChecker_error.exit139.loopexit ], [ %188, %if.entry38 ]
  store i64 %.pre-phi170, ptr %memberidx.i.i136, align 4
  %201 = getelementptr inbounds ptr, ptr %199, i64 %200
  store ptr %187, ptr %201, align 8
  br label %common.ret

ifend40:                                          ; preds = %ifend35
  %202 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr %4, ptr nonnull %83, ptr nonnull %const_type.0)
  %203 = tail call ptr @malloc(i32 25)
  %memberidx42 = getelementptr inbounds %Const, ptr %202, i64 0, i32 1
  %204 = load ptr, ptr %memberidx42, align 8
  store i64 2, ptr %203, align 4
  %memberidx.i140 = getelementptr inbounds %ConstDeclaration, ptr %203, i64 0, i32 2
  store ptr %204, ptr %memberidx.i140, align 8
  %memberidx1.i141 = getelementptr inbounds %ConstDeclaration, ptr %203, i64 0, i32 1
  store ptr %4, ptr %memberidx1.i141, align 8
  %memberidx2.i142 = getelementptr inbounds %ConstDeclaration, ptr %203, i64 0, i32 3
  store i1 false, ptr %memberidx2.i142, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1.i, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load i64, ptr %4, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %memberidx1.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend5, %2
  %current_scope.0.in = phi ptr [ %13, %2 ], [ %81, %ifend5 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 1
  %14 = load ptr, ptr %memberidx, align 8
  %15 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_String_VarId_, ptr %14, i64 0, i32 1
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = urem i64 %15, %16
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %.not.i = icmp eq ptr %20, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %while.entry, %else.i
  %21 = phi ptr [ %31, %else.i ], [ %18, %while.entry ]
  %22 = phi i64 [ %32, %else.i ], [ %16, %while.entry ]
  %23 = phi ptr [ %36, %else.i ], [ %20, %while.entry ]
  %hash.0.i = phi i64 [ %34, %else.i ], [ %17, %while.entry ]
  %24 = load ptr, ptr %23, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx.i.i, align 4
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %25, %26
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %27 = load ptr, ptr %24, align 8
  %28 = load ptr, ptr %1, align 8
  %29 = tail call i64 @memcmp(ptr %27, ptr %28, i64 %25)
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre133 = load ptr, ptr %14, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre134.pre = load ptr, ptr %14, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre134.pre, i64 %hash.0.i
  %.pre135.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre135.pre, null
  br i1 %.not25.i, label %if.entry, label %Map_String_VarId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %31 = phi ptr [ %.pre133, %ifend.i.i.else.i_crit_edge ], [ %21, %while.entry.i ]
  %32 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %22, %while.entry.i ]
  %33 = add nuw i64 %hash.0.i, 1
  %34 = urem i64 %33, %32
  %35 = getelementptr inbounds ptr, ptr %31, i64 %34
  %36 = load ptr, ptr %35, align 8
  %.not26.i = icmp eq ptr %36, null
  br i1 %.not26.i, label %if.entry, label %while.entry.i

Map_String_VarId____getitem__.exit:               ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre135.pre, i64 0, i32 1
  %37 = load ptr, ptr %memberidx11.i, align 8
  %38 = icmp eq ptr %37, null
  br i1 %38, label %if.entry, label %ifend12

while.end:                                        ; preds = %ifend
  %39 = icmp eq ptr %value.1, null
  %40 = load ptr, ptr %memberidx1.i, align 8
  %41 = load i64, ptr %40, align 4
  %42 = icmp ne i64 %41, 0
  %43 = and i1 %39, %42
  br i1 %43, label %if.entry10, label %ifend12

if.entry:                                         ; preds = %else.i, %while.entry, %while.end.i, %Map_String_VarId____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 3
  %44 = load ptr, ptr %memberidx1, align 8
  %45 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %1)
  %memberidx.i74 = getelementptr inbounds %Map_String_VarId_, ptr %44, i64 0, i32 1
  %46 = load i64, ptr %memberidx.i74, align 4
  %47 = urem i64 %45, %46
  %48 = load ptr, ptr %44, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %.not.i75 = icmp eq ptr %50, null
  br i1 %.not.i75, label %ifend, label %while.entry.i80

while.entry.i80:                                  ; preds = %if.entry, %else.i88
  %51 = phi ptr [ %61, %else.i88 ], [ %48, %if.entry ]
  %52 = phi i64 [ %62, %else.i88 ], [ %46, %if.entry ]
  %53 = phi ptr [ %66, %else.i88 ], [ %50, %if.entry ]
  %hash.0.i76 = phi i64 [ %64, %else.i88 ], [ %47, %if.entry ]
  %54 = load ptr, ptr %53, align 8
  %memberidx.i.i77 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx.i.i77, align 4
  %56 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i79 = icmp eq i64 %55, %56
  br i1 %.not.i.i79, label %ifend.i.i81, label %else.i88

ifend.i.i81:                                      ; preds = %while.entry.i80
  %57 = load ptr, ptr %54, align 8
  %58 = load ptr, ptr %1, align 8
  %59 = tail call i64 @memcmp(ptr %57, ptr %58, i64 %55)
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %while.end.i86, label %ifend.i.i81.else.i88_crit_edge

ifend.i.i81.else.i88_crit_edge:                   ; preds = %ifend.i.i81
  %.pre136 = load i64, ptr %memberidx.i74, align 4
  %.pre137 = load ptr, ptr %44, align 8
  br label %else.i88

while.end.i86:                                    ; preds = %ifend.i.i81
  %.pre138.pre = load ptr, ptr %44, align 8
  %.phi.trans.insert139.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre138.pre, i64 %hash.0.i76
  %.pre140.pre = load ptr, ptr %.phi.trans.insert139.phi.trans.insert, align 8
  %.not25.i85 = icmp eq ptr %.pre140.pre, null
  br i1 %.not25.i85, label %ifend, label %if.entry7.i91

else.i88:                                         ; preds = %ifend.i.i81.else.i88_crit_edge, %while.entry.i80
  %61 = phi ptr [ %.pre137, %ifend.i.i81.else.i88_crit_edge ], [ %51, %while.entry.i80 ]
  %62 = phi i64 [ %.pre136, %ifend.i.i81.else.i88_crit_edge ], [ %52, %while.entry.i80 ]
  %63 = add nuw i64 %hash.0.i76, 1
  %64 = urem i64 %63, %62
  %65 = getelementptr inbounds ptr, ptr %61, i64 %64
  %66 = load ptr, ptr %65, align 8
  %.not26.i87 = icmp eq ptr %66, null
  br i1 %.not26.i87, label %ifend, label %while.entry.i80

if.entry7.i91:                                    ; preds = %while.end.i86
  %memberidx11.i90 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre140.pre, i64 0, i32 1
  %67 = load ptr, ptr %memberidx11.i90, align 8
  br label %ifend

ifend:                                            ; preds = %else.i88, %if.entry, %if.entry7.i91, %while.end.i86
  %value.1 = phi ptr [ %67, %if.entry7.i91 ], [ null, %while.end.i86 ], [ null, %if.entry ], [ null, %else.i88 ]
  %memberidx2 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %68 = load ptr, ptr %memberidx2, align 8
  %69 = icmp eq ptr %68, null
  %70 = icmp ne ptr %value.1, null
  %71 = or i1 %70, %69
  br i1 %71, label %while.end, label %ifend5

ifend5:                                           ; preds = %ifend
  %72 = load ptr, ptr %0, align 8
  %73 = load ptr, ptr %72, align 8
  %74 = load i64, ptr %68, align 4
  %75 = load ptr, ptr %73, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %74
  %77 = load ptr, ptr %76, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %77, i64 0, i32 7
  %78 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %68, i64 0, i32 1
  %79 = load i64, ptr %memberidx3.i, align 4
  %80 = load ptr, ptr %78, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %79
  br label %while.entry

if.entry10:                                       ; preds = %while.end
  %82 = load ptr, ptr %0, align 8
  %83 = load ptr, ptr %82, align 8
  %84 = load ptr, ptr %83, align 8
  %85 = load ptr, ptr %84, align 8
  %memberidx17 = getelementptr inbounds %Module, ptr %85, i64 0, i32 5
  %86 = load ptr, ptr %memberidx17, align 8
  store ptr %86, ptr %memberidx1.i, align 8
  %87 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr nonnull %0, ptr %1)
  store ptr %40, ptr %memberidx1.i, align 8
  %.not = icmp eq ptr %87, null
  br i1 %.not, label %ifend12, label %if.entry19

ifend12:                                          ; preds = %Map_String_VarId____getitem__.exit, %if.entry36, %ifend34, %if.entry10, %while.end
  %value.2 = phi ptr [ %87, %if.entry36 ], [ %87, %ifend34 ], [ null, %if.entry10 ], [ %value.1, %while.end ], [ %37, %Map_String_VarId____getitem__.exit ]
  ret ptr %value.2

if.entry19:                                       ; preds = %if.entry10
  %88 = load i64, ptr %87, align 4
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %if.entry19
  %90 = load ptr, ptr %0, align 8
  %91 = load i64, ptr %40, align 4
  %92 = load ptr, ptr %90, align 8
  %93 = load ptr, ptr %92, align 8
  %94 = getelementptr inbounds ptr, ptr %93, i64 %91
  %95 = load ptr, ptr %94, align 8
  %memberidx1.i.i97 = getelementptr inbounds %Module, ptr %95, i64 0, i32 5
  %96 = load ptr, ptr %memberidx1.i.i97, align 8
  %97 = load i64, ptr %96, align 4
  %98 = getelementptr inbounds ptr, ptr %93, i64 %97
  %99 = load ptr, ptr %98, align 8
  %memberidx2.i.i.i98 = getelementptr inbounds %Module, ptr %99, i64 0, i32 7
  %100 = load ptr, ptr %memberidx2.i.i.i98, align 8
  %memberidx3.i.i.i99 = getelementptr inbounds %ScopeId, ptr %96, i64 0, i32 1
  %101 = load i64, ptr %memberidx3.i.i.i99, align 4
  %102 = load ptr, ptr %100, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  %104 = load ptr, ptr %103, align 8
  %memberidx.i100 = getelementptr inbounds %Scope, ptr %104, i64 0, i32 3
  %105 = load ptr, ptr %memberidx.i100, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %105, ptr %1, ptr nonnull %87)
  %.pre141 = load i64, ptr %87, align 4
  br label %ifend25

ifend25:                                          ; preds = %if.entry19, %if.entry23
  %106 = phi i64 [ %88, %if.entry19 ], [ %.pre141, %if.entry23 ]
  %107 = add i64 %106, -1
  %108 = icmp ult i64 %107, 2
  br i1 %108, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend25
  %109 = load ptr, ptr %0, align 8
  %110 = load ptr, ptr %memberidx1.i, align 8
  %111 = load i64, ptr %110, align 4
  %112 = load ptr, ptr %109, align 8
  %113 = load ptr, ptr %112, align 8
  %114 = getelementptr inbounds ptr, ptr %113, i64 %111
  %115 = load ptr, ptr %114, align 8
  %memberidx1.i.i102 = getelementptr inbounds %Module, ptr %115, i64 0, i32 5
  %116 = load ptr, ptr %memberidx1.i.i102, align 8
  %117 = load i64, ptr %116, align 4
  %118 = getelementptr inbounds ptr, ptr %113, i64 %117
  %119 = load ptr, ptr %118, align 8
  %memberidx2.i.i.i103 = getelementptr inbounds %Module, ptr %119, i64 0, i32 7
  %120 = load ptr, ptr %memberidx2.i.i.i103, align 8
  %memberidx3.i.i.i104 = getelementptr inbounds %ScopeId, ptr %116, i64 0, i32 1
  %121 = load i64, ptr %memberidx3.i.i.i104, align 4
  %122 = load ptr, ptr %120, align 8
  %123 = getelementptr inbounds ptr, ptr %122, i64 %121
  %124 = load ptr, ptr %123, align 8
  %memberidx.i105 = getelementptr inbounds %Scope, ptr %124, i64 0, i32 1
  %125 = load ptr, ptr %memberidx.i105, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %125, ptr %1, ptr nonnull %87)
  %.pr = load i64, ptr %87, align 4
  br label %ifend30

ifend30:                                          ; preds = %ifend25, %if.entry28
  %126 = phi i64 [ %106, %ifend25 ], [ %.pr, %if.entry28 ]
  %127 = icmp eq i64 %126, 3
  br i1 %127, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend30
  %128 = tail call ptr @malloc(i32 24)
  %memberidx.i106 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 1
  %129 = load i64, ptr %memberidx.i106, align 4
  %memberidx1.i107 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 2
  %130 = load i64, ptr %memberidx1.i107, align 4
  store i64 %129, ptr %128, align 4
  %memberidx1.i.i.i108 = getelementptr inbounds %TypeId, ptr %128, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i108, align 4
  %memberidx2.i.i.i109 = getelementptr inbounds %TypeId, ptr %128, i64 0, i32 2
  store i64 %130, ptr %memberidx2.i.i.i109, align 4
  %131 = load ptr, ptr %0, align 8
  %132 = load ptr, ptr %memberidx1.i, align 8
  %133 = load i64, ptr %132, align 4
  %134 = load ptr, ptr %131, align 8
  %135 = load ptr, ptr %134, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %133
  %137 = load ptr, ptr %136, align 8
  %memberidx1.i.i111 = getelementptr inbounds %Module, ptr %137, i64 0, i32 5
  %138 = load ptr, ptr %memberidx1.i.i111, align 8
  %139 = load i64, ptr %138, align 4
  %140 = getelementptr inbounds ptr, ptr %135, i64 %139
  %141 = load ptr, ptr %140, align 8
  %memberidx2.i.i.i112 = getelementptr inbounds %Module, ptr %141, i64 0, i32 7
  %142 = load ptr, ptr %memberidx2.i.i.i112, align 8
  %memberidx3.i.i.i113 = getelementptr inbounds %ScopeId, ptr %138, i64 0, i32 1
  %143 = load i64, ptr %memberidx3.i.i.i113, align 4
  %144 = load ptr, ptr %142, align 8
  %145 = getelementptr inbounds ptr, ptr %144, i64 %143
  %146 = load ptr, ptr %145, align 8
  %memberidx.i114 = getelementptr inbounds %Scope, ptr %146, i64 0, i32 2
  %147 = load ptr, ptr %memberidx.i114, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %147, ptr %1, ptr nonnull %128)
  %memberidx1.i115 = getelementptr inbounds %Scope, ptr %146, i64 0, i32 1
  %148 = load ptr, ptr %memberidx1.i115, align 8
  %149 = tail call ptr @malloc(i32 24)
  %150 = load i64, ptr %128, align 4
  %151 = load i64, ptr %memberidx2.i.i.i109, align 4
  store i64 3, ptr %149, align 4
  %memberidx1.i.i.i117 = getelementptr inbounds %VarId, ptr %149, i64 0, i32 1
  store i64 %150, ptr %memberidx1.i.i.i117, align 4
  %memberidx2.i.i6.i118 = getelementptr inbounds %VarId, ptr %149, i64 0, i32 2
  store i64 %151, ptr %memberidx2.i.i6.i118, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %148, ptr %1, ptr nonnull %149)
  %.pre142 = load i64, ptr %87, align 4
  br label %ifend34

ifend34:                                          ; preds = %ifend30, %if.entry32
  %152 = phi i64 [ %126, %ifend30 ], [ %.pre142, %if.entry32 ]
  %153 = icmp eq i64 %152, 4
  br i1 %153, label %if.entry36, label %ifend12

if.entry36:                                       ; preds = %ifend34
  %154 = tail call ptr @malloc(i32 24)
  %memberidx.i119 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 1
  %155 = load i64, ptr %memberidx.i119, align 4
  %memberidx1.i120 = getelementptr inbounds %VarId, ptr %87, i64 0, i32 2
  %156 = load i64, ptr %memberidx1.i120, align 4
  store i64 %155, ptr %154, align 4
  %memberidx1.i.i.i121 = getelementptr inbounds %TypeId, ptr %154, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i121, align 4
  %memberidx2.i.i.i122 = getelementptr inbounds %TypeId, ptr %154, i64 0, i32 2
  store i64 %156, ptr %memberidx2.i.i.i122, align 4
  %157 = load ptr, ptr %0, align 8
  %158 = load ptr, ptr %memberidx1.i, align 8
  %159 = load i64, ptr %158, align 4
  %160 = load ptr, ptr %157, align 8
  %161 = load ptr, ptr %160, align 8
  %162 = getelementptr inbounds ptr, ptr %161, i64 %159
  %163 = load ptr, ptr %162, align 8
  %memberidx1.i.i93 = getelementptr inbounds %Module, ptr %163, i64 0, i32 5
  %164 = load ptr, ptr %memberidx1.i.i93, align 8
  %165 = load i64, ptr %164, align 4
  %166 = getelementptr inbounds ptr, ptr %161, i64 %165
  %167 = load ptr, ptr %166, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %167, i64 0, i32 7
  %168 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %164, i64 0, i32 1
  %169 = load i64, ptr %memberidx3.i.i.i, align 4
  %170 = load ptr, ptr %168, align 8
  %171 = getelementptr inbounds ptr, ptr %170, i64 %169
  %172 = load ptr, ptr %171, align 8
  %memberidx.i94 = getelementptr inbounds %Scope, ptr %172, i64 0, i32 4
  %173 = load ptr, ptr %memberidx.i94, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %173, ptr %1, ptr nonnull %154)
  %memberidx1.i95 = getelementptr inbounds %Scope, ptr %172, i64 0, i32 1
  %174 = load ptr, ptr %memberidx1.i95, align 8
  %175 = tail call ptr @malloc(i32 24)
  %176 = load i64, ptr %154, align 4
  %177 = load i64, ptr %memberidx2.i.i.i122, align 4
  store i64 4, ptr %175, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %175, i64 0, i32 1
  store i64 %176, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %175, i64 0, i32 2
  store i64 %177, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %174, ptr %1, ptr nonnull %175)
  br label %ifend12
}

define internal fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nocapture %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1.i, align 8
  %5 = load ptr, ptr %3, align 8
  %6 = load i64, ptr %4, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %4, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %memberidx1.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %ifend12, %2
  %current_scope.0.in = phi ptr [ %13, %2 ], [ %101, %ifend12 ]
  %current_scope.0 = load ptr, ptr %current_scope.0.in, align 8
  %memberidx = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 6
  %14 = load ptr, ptr %memberidx, align 8
  %15 = tail call fastcc i64 @Map_String_Type__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_String_Type_, ptr %14, i64 0, i32 1
  %16 = load i64, ptr %memberidx.i, align 4
  %17 = urem i64 %15, %16
  %18 = load ptr, ptr %14, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %.not.i = icmp eq ptr %20, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %while.entry, %else.i
  %21 = phi ptr [ %31, %else.i ], [ %18, %while.entry ]
  %22 = phi i64 [ %32, %else.i ], [ %16, %while.entry ]
  %23 = phi ptr [ %36, %else.i ], [ %20, %while.entry ]
  %hash.0.i = phi i64 [ %34, %else.i ], [ %17, %while.entry ]
  %24 = load ptr, ptr %23, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx.i.i, align 4
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %25, %26
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %27 = load ptr, ptr %24, align 8
  %28 = load ptr, ptr %1, align 8
  %29 = tail call i64 @memcmp(ptr %27, ptr %28, i64 %25)
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre132 = load ptr, ptr %14, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre133.pre = load ptr, ptr %14, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre133.pre, i64 %hash.0.i
  %.pre134.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre134.pre, null
  br i1 %.not25.i, label %ifend, label %Map_String_Type____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %31 = phi ptr [ %.pre132, %ifend.i.i.else.i_crit_edge ], [ %21, %while.entry.i ]
  %32 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %22, %while.entry.i ]
  %33 = add nuw i64 %hash.0.i, 1
  %34 = urem i64 %33, %32
  %35 = getelementptr inbounds ptr, ptr %31, i64 %34
  %36 = load ptr, ptr %35, align 8
  %.not26.i = icmp eq ptr %36, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_String_Type____getitem__.exit:                ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_Type_, ptr %.pre134.pre, i64 0, i32 1
  %37 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %37, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_String_Type____getitem__.exit, %ifend28, %ifend19, %if.entry6, %if.entry2
  %common.ret.op = phi ptr [ %62, %if.entry2 ], [ %87, %if.entry6 ], [ %109, %ifend19 ], [ %107, %ifend28 ], [ %37, %Map_String_Type____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %while.entry, %while.end.i, %Map_String_Type____getitem__.exit
  %memberidx1 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 2
  %38 = load ptr, ptr %memberidx1, align 8
  %39 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr %1)
  %memberidx.i65 = getelementptr inbounds %Map_String_ClassId_, ptr %38, i64 0, i32 1
  %40 = load i64, ptr %memberidx.i65, align 4
  %41 = urem i64 %39, %40
  %42 = load ptr, ptr %38, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %.not.i66 = icmp eq ptr %44, null
  br i1 %.not.i66, label %ifend4, label %while.entry.i71

while.entry.i71:                                  ; preds = %ifend, %else.i79
  %45 = phi ptr [ %55, %else.i79 ], [ %42, %ifend ]
  %46 = phi i64 [ %56, %else.i79 ], [ %40, %ifend ]
  %47 = phi ptr [ %60, %else.i79 ], [ %44, %ifend ]
  %hash.0.i67 = phi i64 [ %58, %else.i79 ], [ %41, %ifend ]
  %48 = load ptr, ptr %47, align 8
  %memberidx.i.i68 = getelementptr inbounds %String, ptr %48, i64 0, i32 1
  %49 = load i64, ptr %memberidx.i.i68, align 4
  %50 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i70 = icmp eq i64 %49, %50
  br i1 %.not.i.i70, label %ifend.i.i72, label %else.i79

ifend.i.i72:                                      ; preds = %while.entry.i71
  %51 = load ptr, ptr %48, align 8
  %52 = load ptr, ptr %1, align 8
  %53 = tail call i64 @memcmp(ptr %51, ptr %52, i64 %49)
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %while.end.i77, label %ifend.i.i72.else.i79_crit_edge

ifend.i.i72.else.i79_crit_edge:                   ; preds = %ifend.i.i72
  %.pre135 = load i64, ptr %memberidx.i65, align 4
  %.pre136 = load ptr, ptr %38, align 8
  br label %else.i79

while.end.i77:                                    ; preds = %ifend.i.i72
  %.pre137.pre = load ptr, ptr %38, align 8
  %.phi.trans.insert138.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre137.pre, i64 %hash.0.i67
  %.pre139.pre = load ptr, ptr %.phi.trans.insert138.phi.trans.insert, align 8
  %.not25.i76 = icmp eq ptr %.pre139.pre, null
  br i1 %.not25.i76, label %ifend4, label %Map_String_ClassId____getitem__.exit

else.i79:                                         ; preds = %ifend.i.i72.else.i79_crit_edge, %while.entry.i71
  %55 = phi ptr [ %.pre136, %ifend.i.i72.else.i79_crit_edge ], [ %45, %while.entry.i71 ]
  %56 = phi i64 [ %.pre135, %ifend.i.i72.else.i79_crit_edge ], [ %46, %while.entry.i71 ]
  %57 = add nuw i64 %hash.0.i67, 1
  %58 = urem i64 %57, %56
  %59 = getelementptr inbounds ptr, ptr %55, i64 %58
  %60 = load ptr, ptr %59, align 8
  %.not26.i78 = icmp eq ptr %60, null
  br i1 %.not26.i78, label %ifend4, label %while.entry.i71

Map_String_ClassId____getitem__.exit:             ; preds = %while.end.i77
  %memberidx11.i81 = getelementptr inbounds %MapEntry_String_ClassId_, ptr %.pre139.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx11.i81, align 8
  %.not61 = icmp eq ptr %61, null
  br i1 %.not61, label %ifend4, label %if.entry2

if.entry2:                                        ; preds = %Map_String_ClassId____getitem__.exit
  %62 = tail call ptr @malloc(i32 16)
  store i64 11, ptr %62, align 4
  %memberidx.i83 = getelementptr inbounds %ObjectType, ptr %62, i64 0, i32 1
  store ptr %61, ptr %memberidx.i83, align 8
  br label %common.ret

ifend4:                                           ; preds = %else.i79, %ifend, %while.end.i77, %Map_String_ClassId____getitem__.exit
  %memberidx5 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 4
  %63 = load ptr, ptr %memberidx5, align 8
  %64 = tail call fastcc i64 @Map_String_EnumId__hash_fnc(ptr %1)
  %memberidx.i84 = getelementptr inbounds %Map_String_EnumId_, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx.i84, align 4
  %66 = urem i64 %64, %65
  %67 = load ptr, ptr %63, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %.not.i85 = icmp eq ptr %69, null
  br i1 %.not.i85, label %ifend8, label %while.entry.i90

while.entry.i90:                                  ; preds = %ifend4, %else.i98
  %70 = phi ptr [ %80, %else.i98 ], [ %67, %ifend4 ]
  %71 = phi i64 [ %81, %else.i98 ], [ %65, %ifend4 ]
  %72 = phi ptr [ %85, %else.i98 ], [ %69, %ifend4 ]
  %hash.0.i86 = phi i64 [ %83, %else.i98 ], [ %66, %ifend4 ]
  %73 = load ptr, ptr %72, align 8
  %memberidx.i.i87 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  %74 = load i64, ptr %memberidx.i.i87, align 4
  %75 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i89 = icmp eq i64 %74, %75
  br i1 %.not.i.i89, label %ifend.i.i91, label %else.i98

ifend.i.i91:                                      ; preds = %while.entry.i90
  %76 = load ptr, ptr %73, align 8
  %77 = load ptr, ptr %1, align 8
  %78 = tail call i64 @memcmp(ptr %76, ptr %77, i64 %74)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %while.end.i96, label %ifend.i.i91.else.i98_crit_edge

ifend.i.i91.else.i98_crit_edge:                   ; preds = %ifend.i.i91
  %.pre140 = load i64, ptr %memberidx.i84, align 4
  %.pre141 = load ptr, ptr %63, align 8
  br label %else.i98

while.end.i96:                                    ; preds = %ifend.i.i91
  %.pre142.pre = load ptr, ptr %63, align 8
  %.phi.trans.insert143.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre142.pre, i64 %hash.0.i86
  %.pre144.pre = load ptr, ptr %.phi.trans.insert143.phi.trans.insert, align 8
  %.not25.i95 = icmp eq ptr %.pre144.pre, null
  br i1 %.not25.i95, label %ifend8, label %Map_String_EnumId____getitem__.exit

else.i98:                                         ; preds = %ifend.i.i91.else.i98_crit_edge, %while.entry.i90
  %80 = phi ptr [ %.pre141, %ifend.i.i91.else.i98_crit_edge ], [ %70, %while.entry.i90 ]
  %81 = phi i64 [ %.pre140, %ifend.i.i91.else.i98_crit_edge ], [ %71, %while.entry.i90 ]
  %82 = add nuw i64 %hash.0.i86, 1
  %83 = urem i64 %82, %81
  %84 = getelementptr inbounds ptr, ptr %80, i64 %83
  %85 = load ptr, ptr %84, align 8
  %.not26.i97 = icmp eq ptr %85, null
  br i1 %.not26.i97, label %ifend8, label %while.entry.i90

Map_String_EnumId____getitem__.exit:              ; preds = %while.end.i96
  %memberidx11.i100 = getelementptr inbounds %MapEntry_String_EnumId_, ptr %.pre144.pre, i64 0, i32 1
  %86 = load ptr, ptr %memberidx11.i100, align 8
  %.not62 = icmp eq ptr %86, null
  br i1 %.not62, label %ifend8, label %if.entry6

if.entry6:                                        ; preds = %Map_String_EnumId____getitem__.exit
  %87 = tail call ptr @malloc(i32 16)
  store i64 12, ptr %87, align 4
  %memberidx.i102 = getelementptr inbounds %EnumType, ptr %87, i64 0, i32 1
  store ptr %86, ptr %memberidx.i102, align 8
  br label %common.ret

ifend8:                                           ; preds = %else.i98, %ifend4, %while.end.i96, %Map_String_EnumId____getitem__.exit
  %memberidx9 = getelementptr inbounds %Scope, ptr %current_scope.0, i64 0, i32 5
  %88 = load ptr, ptr %memberidx9, align 8
  %89 = icmp eq ptr %88, null
  br i1 %89, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %ifend8
  %90 = load ptr, ptr %memberidx1.i, align 8
  %91 = load i64, ptr %90, align 4
  %.not63 = icmp eq i64 %91, 0
  br i1 %.not63, label %ifend19, label %if.entry17

ifend12:                                          ; preds = %ifend8
  %92 = load ptr, ptr %0, align 8
  %93 = load ptr, ptr %92, align 8
  %94 = load i64, ptr %88, align 4
  %95 = load ptr, ptr %93, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %94
  %97 = load ptr, ptr %96, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %97, i64 0, i32 7
  %98 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %88, i64 0, i32 1
  %99 = load i64, ptr %memberidx3.i, align 4
  %100 = load ptr, ptr %98, align 8
  %101 = getelementptr inbounds ptr, ptr %100, i64 %99
  br label %while.entry

if.entry17:                                       ; preds = %if.entry10
  %102 = load ptr, ptr %0, align 8
  %103 = load ptr, ptr %102, align 8
  %104 = load ptr, ptr %103, align 8
  %105 = load ptr, ptr %104, align 8
  %memberidx24 = getelementptr inbounds %Module, ptr %105, i64 0, i32 5
  %106 = load ptr, ptr %memberidx24, align 8
  store ptr %106, ptr %memberidx1.i, align 8
  %107 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %1)
  %108 = load i64, ptr %107, align 4
  switch i64 %108, label %else31 [
    i64 21, label %ifend28
    i64 11, label %if.entry30
  ]

ifend19:                                          ; preds = %if.entry10
  %109 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %109, align 4
  br label %common.ret

ifend28:                                          ; preds = %if.entry17, %if.entry30, %else31
  store ptr %90, ptr %memberidx1.i, align 8
  br label %common.ret

if.entry30:                                       ; preds = %if.entry17
  %memberidx33 = getelementptr inbounds %ObjectType, ptr %107, i64 0, i32 1
  %110 = load ptr, ptr %memberidx33, align 8
  %111 = load ptr, ptr %0, align 8
  %112 = load ptr, ptr %memberidx1.i, align 8
  %113 = load i64, ptr %112, align 4
  %114 = load ptr, ptr %111, align 8
  %115 = load ptr, ptr %114, align 8
  %116 = getelementptr inbounds ptr, ptr %115, i64 %113
  %117 = load ptr, ptr %116, align 8
  %memberidx1.i.i103 = getelementptr inbounds %Module, ptr %117, i64 0, i32 5
  %118 = load ptr, ptr %memberidx1.i.i103, align 8
  %119 = load i64, ptr %118, align 4
  %120 = getelementptr inbounds ptr, ptr %115, i64 %119
  %121 = load ptr, ptr %120, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %121, i64 0, i32 7
  %122 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %118, i64 0, i32 1
  %123 = load i64, ptr %memberidx3.i.i.i, align 4
  %124 = load ptr, ptr %122, align 8
  %125 = getelementptr inbounds ptr, ptr %124, i64 %123
  %126 = load ptr, ptr %125, align 8
  %memberidx.i104 = getelementptr inbounds %Scope, ptr %126, i64 0, i32 2
  %127 = load ptr, ptr %memberidx.i104, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %127, ptr %1, ptr %110)
  %memberidx1.i105 = getelementptr inbounds %Scope, ptr %126, i64 0, i32 1
  %128 = load ptr, ptr %memberidx1.i105, align 8
  %129 = tail call ptr @malloc(i32 24)
  %130 = load i64, ptr %110, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %110, i64 0, i32 2
  %131 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 3, ptr %129, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %129, i64 0, i32 1
  store i64 %130, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %129, i64 0, i32 2
  store i64 %131, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %128, ptr %1, ptr nonnull %129)
  br label %ifend28

else31:                                           ; preds = %if.entry17
  %memberidx34 = getelementptr inbounds %EnumType, ptr %107, i64 0, i32 1
  %132 = load ptr, ptr %memberidx34, align 8
  %133 = load ptr, ptr %0, align 8
  %134 = load ptr, ptr %memberidx1.i, align 8
  %135 = load i64, ptr %134, align 4
  %136 = load ptr, ptr %133, align 8
  %137 = load ptr, ptr %136, align 8
  %138 = getelementptr inbounds ptr, ptr %137, i64 %135
  %139 = load ptr, ptr %138, align 8
  %memberidx1.i.i107 = getelementptr inbounds %Module, ptr %139, i64 0, i32 5
  %140 = load ptr, ptr %memberidx1.i.i107, align 8
  %141 = load i64, ptr %140, align 4
  %142 = getelementptr inbounds ptr, ptr %137, i64 %141
  %143 = load ptr, ptr %142, align 8
  %memberidx2.i.i.i108 = getelementptr inbounds %Module, ptr %143, i64 0, i32 7
  %144 = load ptr, ptr %memberidx2.i.i.i108, align 8
  %memberidx3.i.i.i109 = getelementptr inbounds %ScopeId, ptr %140, i64 0, i32 1
  %145 = load i64, ptr %memberidx3.i.i.i109, align 4
  %146 = load ptr, ptr %144, align 8
  %147 = getelementptr inbounds ptr, ptr %146, i64 %145
  %148 = load ptr, ptr %147, align 8
  %memberidx.i110 = getelementptr inbounds %Scope, ptr %148, i64 0, i32 4
  %149 = load ptr, ptr %memberidx.i110, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %149, ptr %1, ptr %132)
  %memberidx1.i111 = getelementptr inbounds %Scope, ptr %148, i64 0, i32 1
  %150 = load ptr, ptr %memberidx1.i111, align 8
  %151 = tail call ptr @malloc(i32 24)
  %152 = load i64, ptr %132, align 4
  %memberidx1.i5.i112 = getelementptr inbounds %TypeId, ptr %132, i64 0, i32 2
  %153 = load i64, ptr %memberidx1.i5.i112, align 4
  store i64 4, ptr %151, align 4
  %memberidx1.i.i.i113 = getelementptr inbounds %VarId, ptr %151, i64 0, i32 1
  store i64 %152, ptr %memberidx1.i.i.i113, align 4
  %memberidx2.i.i6.i114 = getelementptr inbounds %VarId, ptr %151, i64 0, i32 2
  store i64 %153, ptr %memberidx2.i.i6.i114, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %150, ptr %1, ptr nonnull %151)
  br label %ifend28
}

define internal fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Var, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx.i13, align 8
  %7 = load i64, ptr %6, align 4
  %8 = load ptr, ptr %0, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %7
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 7
  %13 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %14 = load i64, ptr %memberidx3.i.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = load ptr, ptr %memberidx.i13, align 8
  %20 = load i64, ptr %19, align 4
  %memberidx2 = getelementptr inbounds %Module, ptr %12, i64 0, i32 1
  %21 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Var_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx3, align 4
  store i64 1, ptr %18, align 4
  %memberidx1.i15 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i15, align 4
  %memberidx2.i = getelementptr inbounds %VarId, ptr %18, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i, align 4
  %memberidx4 = getelementptr inbounds %Var, ptr %5, i64 0, i32 1
  store ptr %18, ptr %memberidx4, align 8
  %23 = load ptr, ptr %memberidx2, align 8
  %memberidx.i14 = getelementptr inbounds %Array_Var_, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i14, align 4
  %25 = add i64 %24, 1
  %memberidx.i.i = getelementptr inbounds %Array_Var_, ptr %23, i64 0, i32 2
  %26 = load i64, ptr %memberidx.i.i, align 4
  %27 = icmp slt i64 %26, %25
  %.pre = load ptr, ptr %23, align 8
  br i1 %27, label %while.entry.i.i, label %Array_Var____sl__.exit

while.entry.i.i:                                  ; preds = %4, %while.entry.i.i
  %28 = phi ptr [ %32, %while.entry.i.i ], [ %.pre, %4 ]
  %29 = phi i64 [ %33, %while.entry.i.i ], [ %26, %4 ]
  %30 = shl nuw i64 %29, 1
  store i64 %30, ptr %memberidx.i.i, align 4
  %31 = shl i64 %29, 4
  %32 = tail call ptr @realloc(ptr %28, i64 %31)
  store ptr %32, ptr %23, align 8
  %33 = load i64, ptr %memberidx.i.i, align 4
  %34 = icmp slt i64 %33, %25
  br i1 %34, label %while.entry.i.i, label %Array_Var____sl__.exit.loopexit

Array_Var____sl__.exit.loopexit:                  ; preds = %while.entry.i.i
  %.pre16 = load i64, ptr %memberidx.i14, align 4
  %.pre18 = add nsw i64 %.pre16, 1
  br label %Array_Var____sl__.exit

Array_Var____sl__.exit:                           ; preds = %4, %Array_Var____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre18, %Array_Var____sl__.exit.loopexit ], [ %25, %4 ]
  %35 = phi ptr [ %32, %Array_Var____sl__.exit.loopexit ], [ %.pre, %4 ]
  %36 = phi i64 [ %.pre16, %Array_Var____sl__.exit.loopexit ], [ %24, %4 ]
  store i64 %.pre-phi, ptr %memberidx.i14, align 4
  %37 = getelementptr inbounds ptr, ptr %35, i64 %36
  store ptr %5, ptr %37, align 8
  %memberidx6 = getelementptr inbounds %Scope, ptr %17, i64 0, i32 1
  %38 = load ptr, ptr %memberidx6, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %38, ptr %1, ptr nonnull %18)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nocapture readonly %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Const, ptr %5, i64 0, i32 2
  store ptr %2, ptr %memberidx.i, align 8
  store ptr %3, ptr %5, align 8
  %memberidx.i13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx.i13, align 8
  %7 = load i64, ptr %6, align 4
  %8 = load ptr, ptr %0, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %7
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 7
  %13 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %6, i64 0, i32 1
  %14 = load i64, ptr %memberidx3.i.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = load ptr, ptr %memberidx.i13, align 8
  %20 = load i64, ptr %19, align 4
  %memberidx2 = getelementptr inbounds %Module, ptr %12, i64 0, i32 2
  %21 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Const_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx3, align 4
  store i64 2, ptr %18, align 4
  %memberidx1.i.i = getelementptr inbounds %VarId, ptr %18, i64 0, i32 1
  store i64 %20, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i15 = getelementptr inbounds %VarId, ptr %18, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i.i15, align 4
  %memberidx4 = getelementptr inbounds %Const, ptr %5, i64 0, i32 1
  store ptr %18, ptr %memberidx4, align 8
  %23 = load ptr, ptr %memberidx2, align 8
  %memberidx.i14 = getelementptr inbounds %Array_Const_, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i14, align 4
  %25 = add i64 %24, 1
  %memberidx.i.i = getelementptr inbounds %Array_Const_, ptr %23, i64 0, i32 2
  %26 = load i64, ptr %memberidx.i.i, align 4
  %27 = icmp slt i64 %26, %25
  %.pre = load ptr, ptr %23, align 8
  br i1 %27, label %while.entry.i.i, label %Array_Const____sl__.exit

while.entry.i.i:                                  ; preds = %4, %while.entry.i.i
  %28 = phi ptr [ %32, %while.entry.i.i ], [ %.pre, %4 ]
  %29 = phi i64 [ %33, %while.entry.i.i ], [ %26, %4 ]
  %30 = shl nuw i64 %29, 1
  store i64 %30, ptr %memberidx.i.i, align 4
  %31 = shl i64 %29, 4
  %32 = tail call ptr @realloc(ptr %28, i64 %31)
  store ptr %32, ptr %23, align 8
  %33 = load i64, ptr %memberidx.i.i, align 4
  %34 = icmp slt i64 %33, %25
  br i1 %34, label %while.entry.i.i, label %Array_Const____sl__.exit.loopexit

Array_Const____sl__.exit.loopexit:                ; preds = %while.entry.i.i
  %.pre16 = load i64, ptr %memberidx.i14, align 4
  %.pre18 = add nsw i64 %.pre16, 1
  br label %Array_Const____sl__.exit

Array_Const____sl__.exit:                         ; preds = %4, %Array_Const____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre18, %Array_Const____sl__.exit.loopexit ], [ %25, %4 ]
  %35 = phi ptr [ %32, %Array_Const____sl__.exit.loopexit ], [ %.pre, %4 ]
  %36 = phi i64 [ %.pre16, %Array_Const____sl__.exit.loopexit ], [ %24, %4 ]
  store i64 %.pre-phi, ptr %memberidx.i14, align 4
  %37 = getelementptr inbounds ptr, ptr %35, i64 %36
  store ptr %5, ptr %37, align 8
  %memberidx6 = getelementptr inbounds %Scope, ptr %17, i64 0, i32 1
  %38 = load ptr, ptr %memberidx6, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %38, ptr %1, ptr nonnull %18)
  ret ptr %5
}

define internal fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i130, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i129, %if.entry.i130 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %6 = load i64, ptr %.tr11.i, align 4
  switch i64 %6, label %get_class_from_type.exit [
    i64 20, label %if.entry.i130
    i64 11, label %if.entry3.i
  ]

if.entry.i130:                                    ; preds = %tailrecurse.i
  %memberidx1.i129 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i131 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %7 = load ptr, ptr %memberidx6.i131, align 8
  %8 = load ptr, ptr %5, align 8
  %9 = load i64, ptr %7, align 4
  %10 = load ptr, ptr %8, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i.i132 = getelementptr inbounds %Module, ptr %12, i64 0, i32 3
  %13 = load ptr, ptr %memberidx2.i.i132, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %7, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i128 = phi ptr [ %17, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i128, i64 0, i32 6
  %18 = load ptr, ptr %memberidx3, align 8
  %19 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %19, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i, align 4
  %21 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %20)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %18, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i, align 4
  %23 = urem i64 %21, %22
  %24 = load ptr, ptr %18, align 8
  %25 = getelementptr inbounds ptr, ptr %24, i64 %23
  %26 = load ptr, ptr %25, align 8
  %.not.i = icmp eq ptr %26, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %get_class_from_type.exit, %else.i
  %27 = phi ptr [ %35, %else.i ], [ %24, %get_class_from_type.exit ]
  %28 = phi i64 [ %36, %else.i ], [ %22, %get_class_from_type.exit ]
  %29 = phi ptr [ %40, %else.i ], [ %26, %get_class_from_type.exit ]
  %hash.0.i = phi i64 [ %38, %else.i ], [ %23, %get_class_from_type.exit ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %31, 11
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %32 = load ptr, ptr %30, align 8
  %33 = tail call i64 @memcmp(ptr %32, ptr %19, i64 11)
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre136 = load ptr, ptr %18, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre137.pre = load ptr, ptr %18, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre137.pre, i64 %hash.0.i
  %.pre138.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre138.pre, null
  br i1 %.not25.i, label %if.entry, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %35 = phi ptr [ %.pre136, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %36 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %28, %while.entry.i ]
  %37 = add nuw i64 %hash.0.i, 1
  %38 = urem i64 %37, %36
  %39 = getelementptr inbounds ptr, ptr %35, i64 %38
  %40 = load ptr, ptr %39, align 8
  %.not26.i = icmp eq ptr %40, null
  br i1 %.not26.i, label %if.entry, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre138.pre, i64 0, i32 1
  %41 = load ptr, ptr %memberidx11.i, align 8
  %42 = icmp eq ptr %41, null
  br i1 %42, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend19, %ifend11, %get_class_prop_type.exit, %ifend30, %TypeChecker_error.exit114, %TypeChecker_error.exit99, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit99 ], [ null, %TypeChecker_error.exit114 ], [ %206, %ifend30 ], [ null, %get_class_prop_type.exit ], [ null, %ifend11 ], [ null, %ifend19 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_String_PropId____getitem__.exit
  %memberidx4 = getelementptr inbounds %Class, ptr %common.ret.op.i128, i64 0, i32 1
  %43 = load ptr, ptr %memberidx4, align 8
  %memberidx.i72 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i72, align 4
  %45 = trunc i64 %44 to i32
  %46 = add i32 %45, 1
  %47 = tail call ptr @malloc(i32 %46)
  %48 = load ptr, ptr %43, align 8
  %49 = load i64, ptr %memberidx.i72, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %48, i64 %49, i1 false)
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  store i8 0, ptr %50, align 1
  %51 = alloca ptr, align 8
  %52 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %51, ptr nonnull @180, ptr %47)
  %53 = load ptr, ptr %51, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 %52, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 %52, ptr %memberidx2.i, align 4
  tail call void @free(ptr %47)
  %55 = load ptr, ptr %4, align 8
  %memberidx.i73 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %56 = load ptr, ptr %memberidx.i73, align 8
  %memberidx1.i74 = getelementptr inbounds %Compiler, ptr %56, i64 0, i32 5
  %57 = load ptr, ptr %memberidx1.i74, align 8
  %58 = call ptr @malloc(i32 24)
  store i64 4, ptr %58, align 4
  %memberidx1.i.i75 = getelementptr inbounds %FloError, ptr %58, i64 0, i32 2
  store ptr %55, ptr %memberidx1.i.i75, align 8
  %memberidx2.i.i76 = getelementptr inbounds %FloError, ptr %58, i64 0, i32 1
  store ptr %54, ptr %memberidx2.i.i76, align 8
  %memberidx.i.i77 = getelementptr inbounds %Array_FloError_, ptr %57, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i.i77, align 4
  %60 = add i64 %59, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %57, i64 0, i32 2
  %61 = load i64, ptr %memberidx.i.i.i, align 4
  %62 = icmp slt i64 %61, %60
  %.pre145 = load ptr, ptr %57, align 8
  br i1 %62, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %63 = phi ptr [ %67, %while.entry.i.i.i ], [ %.pre145, %if.entry ]
  %64 = phi i64 [ %68, %while.entry.i.i.i ], [ %61, %if.entry ]
  %65 = shl nuw i64 %64, 1
  store i64 %65, ptr %memberidx.i.i.i, align 4
  %66 = shl i64 %64, 4
  %67 = call ptr @realloc(ptr %63, i64 %66)
  store ptr %67, ptr %57, align 8
  %68 = load i64, ptr %memberidx.i.i.i, align 4
  %69 = icmp slt i64 %68, %60
  br i1 %69, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre146 = load i64, ptr %memberidx.i.i77, align 4
  %.pre150 = add nsw i64 %.pre146, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre150, %TypeChecker_error.exit.loopexit ], [ %60, %if.entry ]
  %70 = phi ptr [ %67, %TypeChecker_error.exit.loopexit ], [ %.pre145, %if.entry ]
  %71 = phi i64 [ %.pre146, %TypeChecker_error.exit.loopexit ], [ %59, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i77, align 4
  %72 = getelementptr inbounds ptr, ptr %70, i64 %71
  store ptr %58, ptr %72, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %73 = load ptr, ptr %0, align 8
  %memberidx.i.i78 = getelementptr inbounds %PropId, ptr %41, i64 0, i32 1
  %74 = load ptr, ptr %memberidx.i.i78, align 8
  %75 = load ptr, ptr %73, align 8
  %76 = load i64, ptr %74, align 4
  %77 = load ptr, ptr %75, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %79, i64 0, i32 3
  %80 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %74, i64 0, i32 2
  %81 = load i64, ptr %memberidx3.i.i.i, align 4
  %82 = load ptr, ptr %80, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %85 = load i64, ptr %41, align 4
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i80 = getelementptr inbounds %Class, ptr %84, i64 0, i32 5
  %87 = load ptr, ptr %memberidx1.i80, align 8
  %memberidx2.i81 = getelementptr inbounds %PropId, ptr %41, i64 0, i32 2
  %88 = load i64, ptr %memberidx2.i81, align 4
  %89 = load ptr, ptr %87, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %91, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %84, i64 0, i32 4
  %92 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %41, i64 0, i32 2
  %93 = load i64, ptr %memberidx5.i, align 4
  %94 = load ptr, ptr %92, align 8
  %95 = getelementptr inbounds ptr, ptr %94, i64 %93
  %96 = load ptr, ptr %95, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %96, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i79 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx7 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i79, i64 0, i32 1
  %97 = load ptr, ptr %memberidx7, align 8
  %98 = load ptr, ptr %97, align 8
  %99 = load ptr, ptr %98, align 8
  %100 = getelementptr inbounds ptr, ptr %98, i64 1
  %101 = load ptr, ptr %100, align 8
  %memberidx.i82 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %102 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i83 = getelementptr inbounds %Compiler, ptr %102, i64 0, i32 5
  %103 = load ptr, ptr %memberidx1.i83, align 8
  %memberidx2.i84 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 1
  %104 = load i64, ptr %memberidx2.i84, align 4
  %105 = icmp sgt i64 %104, 0
  br i1 %105, label %common.ret, label %ifend11

ifend11:                                          ; preds = %get_class_prop_type.exit
  %memberidx12 = getelementptr inbounds %ExpressionIndexNode, ptr %4, i64 0, i32 4
  %106 = load ptr, ptr %memberidx12, align 8
  %107 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %99, ptr %106)
  %108 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i86 = getelementptr inbounds %Compiler, ptr %108, i64 0, i32 5
  %109 = load ptr, ptr %memberidx1.i86, align 8
  %memberidx2.i87 = getelementptr inbounds %Array_FloError_, ptr %109, i64 0, i32 1
  %110 = load i64, ptr %memberidx2.i87, align 4
  %111 = icmp sgt i64 %110, 0
  br i1 %111, label %common.ret, label %ifend15

ifend15:                                          ; preds = %ifend11
  %memberidx16 = getelementptr inbounds %Expression, ptr %107, i64 0, i32 3
  %112 = load ptr, ptr %memberidx16, align 8
  %113 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %99, ptr %112)
  br i1 %113, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend15
  %114 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %99)
  %memberidx.i88 = getelementptr inbounds %String, ptr %114, i64 0, i32 1
  %115 = load i64, ptr %memberidx.i88, align 4
  %116 = trunc i64 %115 to i32
  %117 = add i32 %116, 1
  %118 = tail call ptr @malloc(i32 %117)
  %119 = load ptr, ptr %114, align 8
  %120 = load i64, ptr %memberidx.i88, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %118, ptr align 8 %119, i64 %120, i1 false)
  %121 = getelementptr inbounds i8, ptr %118, i64 %120
  store i8 0, ptr %121, align 1
  %122 = load ptr, ptr %memberidx16, align 8
  %123 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %122)
  %memberidx.i89 = getelementptr inbounds %String, ptr %123, i64 0, i32 1
  %124 = load i64, ptr %memberidx.i89, align 4
  %125 = trunc i64 %124 to i32
  %126 = add i32 %125, 1
  %127 = tail call ptr @malloc(i32 %126)
  %128 = load ptr, ptr %123, align 8
  %129 = load i64, ptr %memberidx.i89, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %127, ptr align 8 %128, i64 %129, i1 false)
  %130 = getelementptr inbounds i8, ptr %127, i64 %129
  store i8 0, ptr %130, align 1
  %131 = alloca ptr, align 8
  %132 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %131, ptr nonnull @177, ptr %118, ptr %127)
  %133 = load ptr, ptr %131, align 8
  %134 = tail call ptr @malloc(i32 24)
  store ptr %133, ptr %134, align 8
  %memberidx1.i90 = getelementptr inbounds %String, ptr %134, i64 0, i32 1
  store i64 %132, ptr %memberidx1.i90, align 4
  %memberidx2.i91 = getelementptr inbounds %String, ptr %134, i64 0, i32 2
  store i64 %132, ptr %memberidx2.i91, align 4
  tail call void @free(ptr %118)
  tail call void @free(ptr %127)
  %135 = load ptr, ptr %memberidx12, align 8
  %136 = load ptr, ptr %135, align 8
  %137 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i93 = getelementptr inbounds %Compiler, ptr %137, i64 0, i32 5
  %138 = load ptr, ptr %memberidx1.i93, align 8
  %139 = call ptr @malloc(i32 24)
  store i64 5, ptr %139, align 4
  %memberidx1.i.i94 = getelementptr inbounds %FloError, ptr %139, i64 0, i32 2
  store ptr %136, ptr %memberidx1.i.i94, align 8
  %memberidx2.i.i95 = getelementptr inbounds %FloError, ptr %139, i64 0, i32 1
  store ptr %134, ptr %memberidx2.i.i95, align 8
  %memberidx.i.i96 = getelementptr inbounds %Array_FloError_, ptr %138, i64 0, i32 1
  %140 = load i64, ptr %memberidx.i.i96, align 4
  %141 = add i64 %140, 1
  %memberidx.i.i.i97 = getelementptr inbounds %Array_FloError_, ptr %138, i64 0, i32 2
  %142 = load i64, ptr %memberidx.i.i.i97, align 4
  %143 = icmp slt i64 %142, %141
  %.pre139 = load ptr, ptr %138, align 8
  br i1 %143, label %while.entry.i.i.i98, label %TypeChecker_error.exit99

while.entry.i.i.i98:                              ; preds = %if.entry17, %while.entry.i.i.i98
  %144 = phi ptr [ %148, %while.entry.i.i.i98 ], [ %.pre139, %if.entry17 ]
  %145 = phi i64 [ %149, %while.entry.i.i.i98 ], [ %142, %if.entry17 ]
  %146 = shl nuw i64 %145, 1
  store i64 %146, ptr %memberidx.i.i.i97, align 4
  %147 = shl i64 %145, 4
  %148 = call ptr @realloc(ptr %144, i64 %147)
  store ptr %148, ptr %138, align 8
  %149 = load i64, ptr %memberidx.i.i.i97, align 4
  %150 = icmp slt i64 %149, %141
  br i1 %150, label %while.entry.i.i.i98, label %TypeChecker_error.exit99.loopexit

TypeChecker_error.exit99.loopexit:                ; preds = %while.entry.i.i.i98
  %.pre140 = load i64, ptr %memberidx.i.i96, align 4
  %.pre153 = add nsw i64 %.pre140, 1
  br label %TypeChecker_error.exit99

TypeChecker_error.exit99:                         ; preds = %if.entry17, %TypeChecker_error.exit99.loopexit
  %.pre-phi154 = phi i64 [ %.pre153, %TypeChecker_error.exit99.loopexit ], [ %141, %if.entry17 ]
  %151 = phi ptr [ %148, %TypeChecker_error.exit99.loopexit ], [ %.pre139, %if.entry17 ]
  %152 = phi i64 [ %.pre140, %TypeChecker_error.exit99.loopexit ], [ %140, %if.entry17 ]
  store i64 %.pre-phi154, ptr %memberidx.i.i96, align 4
  %153 = getelementptr inbounds ptr, ptr %151, i64 %152
  store ptr %139, ptr %153, align 8
  br label %common.ret

ifend19:                                          ; preds = %ifend15
  %memberidx23 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %154 = load ptr, ptr %memberidx23, align 8
  %155 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %101, ptr %154)
  %156 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i101 = getelementptr inbounds %Compiler, ptr %156, i64 0, i32 5
  %157 = load ptr, ptr %memberidx1.i101, align 8
  %memberidx2.i102 = getelementptr inbounds %Array_FloError_, ptr %157, i64 0, i32 1
  %158 = load i64, ptr %memberidx2.i102, align 4
  %159 = icmp sgt i64 %158, 0
  br i1 %159, label %common.ret, label %ifend26

ifend26:                                          ; preds = %ifend19
  %160 = load ptr, ptr %memberidx16, align 8
  %161 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %99, ptr %160)
  br i1 %161, label %ifend30, label %if.entry28

if.entry28:                                       ; preds = %ifend26
  %162 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %101)
  %memberidx.i103 = getelementptr inbounds %String, ptr %162, i64 0, i32 1
  %163 = load i64, ptr %memberidx.i103, align 4
  %164 = trunc i64 %163 to i32
  %165 = add i32 %164, 1
  %166 = tail call ptr @malloc(i32 %165)
  %167 = load ptr, ptr %162, align 8
  %168 = load i64, ptr %memberidx.i103, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %166, ptr align 8 %167, i64 %168, i1 false)
  %169 = getelementptr inbounds i8, ptr %166, i64 %168
  store i8 0, ptr %169, align 1
  %memberidx31 = getelementptr inbounds %Expression, ptr %155, i64 0, i32 3
  %170 = load ptr, ptr %memberidx31, align 8
  %171 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %170)
  %memberidx.i104 = getelementptr inbounds %String, ptr %171, i64 0, i32 1
  %172 = load i64, ptr %memberidx.i104, align 4
  %173 = trunc i64 %172 to i32
  %174 = add i32 %173, 1
  %175 = tail call ptr @malloc(i32 %174)
  %176 = load ptr, ptr %171, align 8
  %177 = load i64, ptr %memberidx.i104, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %175, ptr align 8 %176, i64 %177, i1 false)
  %178 = getelementptr inbounds i8, ptr %175, i64 %177
  store i8 0, ptr %178, align 1
  %179 = alloca ptr, align 8
  %180 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %179, ptr nonnull @177, ptr %166, ptr %175)
  %181 = load ptr, ptr %179, align 8
  %182 = tail call ptr @malloc(i32 24)
  store ptr %181, ptr %182, align 8
  %memberidx1.i105 = getelementptr inbounds %String, ptr %182, i64 0, i32 1
  store i64 %180, ptr %memberidx1.i105, align 4
  %memberidx2.i106 = getelementptr inbounds %String, ptr %182, i64 0, i32 2
  store i64 %180, ptr %memberidx2.i106, align 4
  tail call void @free(ptr %166)
  tail call void @free(ptr %175)
  %183 = load ptr, ptr %memberidx23, align 8
  %184 = load ptr, ptr %183, align 8
  %185 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i108 = getelementptr inbounds %Compiler, ptr %185, i64 0, i32 5
  %186 = load ptr, ptr %memberidx1.i108, align 8
  %187 = call ptr @malloc(i32 24)
  store i64 5, ptr %187, align 4
  %memberidx1.i.i109 = getelementptr inbounds %FloError, ptr %187, i64 0, i32 2
  store ptr %184, ptr %memberidx1.i.i109, align 8
  %memberidx2.i.i110 = getelementptr inbounds %FloError, ptr %187, i64 0, i32 1
  store ptr %182, ptr %memberidx2.i.i110, align 8
  %memberidx.i.i111 = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 1
  %188 = load i64, ptr %memberidx.i.i111, align 4
  %189 = add i64 %188, 1
  %memberidx.i.i.i112 = getelementptr inbounds %Array_FloError_, ptr %186, i64 0, i32 2
  %190 = load i64, ptr %memberidx.i.i.i112, align 4
  %191 = icmp slt i64 %190, %189
  %.pre142 = load ptr, ptr %186, align 8
  br i1 %191, label %while.entry.i.i.i113, label %TypeChecker_error.exit114

while.entry.i.i.i113:                             ; preds = %if.entry28, %while.entry.i.i.i113
  %192 = phi ptr [ %196, %while.entry.i.i.i113 ], [ %.pre142, %if.entry28 ]
  %193 = phi i64 [ %197, %while.entry.i.i.i113 ], [ %190, %if.entry28 ]
  %194 = shl nuw i64 %193, 1
  store i64 %194, ptr %memberidx.i.i.i112, align 4
  %195 = shl i64 %193, 4
  %196 = call ptr @realloc(ptr %192, i64 %195)
  store ptr %196, ptr %186, align 8
  %197 = load i64, ptr %memberidx.i.i.i112, align 4
  %198 = icmp slt i64 %197, %189
  br i1 %198, label %while.entry.i.i.i113, label %TypeChecker_error.exit114.loopexit

TypeChecker_error.exit114.loopexit:               ; preds = %while.entry.i.i.i113
  %.pre143 = load i64, ptr %memberidx.i.i111, align 4
  %.pre151 = add nsw i64 %.pre143, 1
  br label %TypeChecker_error.exit114

TypeChecker_error.exit114:                        ; preds = %if.entry28, %TypeChecker_error.exit114.loopexit
  %.pre-phi152 = phi i64 [ %.pre151, %TypeChecker_error.exit114.loopexit ], [ %189, %if.entry28 ]
  %199 = phi ptr [ %196, %TypeChecker_error.exit114.loopexit ], [ %.pre142, %if.entry28 ]
  %200 = phi i64 [ %.pre143, %TypeChecker_error.exit114.loopexit ], [ %188, %if.entry28 ]
  store i64 %.pre-phi152, ptr %memberidx.i.i111, align 4
  %201 = getelementptr inbounds ptr, ptr %199, i64 %200
  store ptr %187, ptr %201, align 8
  br label %common.ret

ifend30:                                          ; preds = %ifend26
  %202 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %202, align 4
  %memberidx.i.i115 = getelementptr inbounds %Expression, ptr %202, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i115, align 4
  %memberidx1.i.i116 = getelementptr inbounds %Expression, ptr %202, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i116, align 1
  %memberidx.i117 = getelementptr inbounds %MemberExpression, ptr %202, i64 0, i32 4
  store ptr %1, ptr %memberidx.i117, align 8
  %memberidx1.i118 = getelementptr inbounds %MemberExpression, ptr %202, i64 0, i32 5
  store ptr %41, ptr %memberidx1.i118, align 8
  %memberidx2.i119 = getelementptr inbounds %Expression, ptr %202, i64 0, i32 3
  store ptr %common.ret.op.i79, ptr %memberidx2.i119, align 8
  %203 = tail call ptr @malloc(i32 24)
  %memberidx.i120 = getelementptr inbounds %Array_Expression_, ptr %203, i64 0, i32 1
  store i64 0, ptr %memberidx.i120, align 4
  %memberidx1.i121 = getelementptr inbounds %Array_Expression_, ptr %203, i64 0, i32 2
  store i64 16, ptr %memberidx1.i121, align 4
  %204 = tail call ptr @malloc(i32 128)
  store ptr %204, ptr %203, align 8
  store ptr %107, ptr %204, align 8
  %205 = getelementptr inbounds ptr, ptr %204, i64 1
  store ptr %155, ptr %205, align 8
  store i64 2, ptr %memberidx.i120, align 4
  %206 = tail call ptr @malloc(i32 41)
  %memberidx36 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i79, i64 0, i32 2
  %207 = load ptr, ptr %memberidx36, align 8
  store i64 8, ptr %206, align 4
  %memberidx.i.i122 = getelementptr inbounds %Expression, ptr %206, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i122, align 4
  %memberidx1.i.i123 = getelementptr inbounds %Expression, ptr %206, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i123, align 1
  %memberidx.i124 = getelementptr inbounds %CallExpression, ptr %206, i64 0, i32 4
  store ptr %202, ptr %memberidx.i124, align 8
  %memberidx1.i125 = getelementptr inbounds %CallExpression, ptr %206, i64 0, i32 5
  store ptr %203, ptr %memberidx1.i125, align 8
  %memberidx2.i126 = getelementptr inbounds %Expression, ptr %206, i64 0, i32 3
  store ptr %207, ptr %memberidx2.i126, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %left = alloca ptr, align 8
  %right = alloca ptr, align 8
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = add i64 %4, -19
  %6 = icmp ult i64 %5, 12
  %7 = icmp eq i64 %4, 19
  %memberidx1 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ExpressionNode, ptr %8, i64 0, i32 2
  %9 = load i64, ptr %memberidx2, align 4
  %10 = icmp eq i64 %9, 14
  %11 = and i1 %7, %10
  br i1 %11, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %12 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %12, align 4
  %13 = load ptr, ptr %memberidx1, align 8
  %memberidx4 = getelementptr inbounds %ExpressionIndexNode, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx4, align 8
  %15 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %12, ptr %14)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %16 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %16, i64 0, i32 5
  %17 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx2.i, align 4
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %common.ret, label %ifend7

ifend:                                            ; preds = %is_object.exit.ifend_crit_edge, %3
  %20 = phi ptr [ %.pre, %is_object.exit.ifend_crit_edge ], [ %8, %3 ]
  %21 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %20)
  store ptr %21, ptr %left, align 8
  %memberidx.i172 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %22 = load ptr, ptr %memberidx.i172, align 8
  %memberidx1.i173 = getelementptr inbounds %Compiler, ptr %22, i64 0, i32 5
  %23 = load ptr, ptr %memberidx1.i173, align 8
  %memberidx2.i174 = getelementptr inbounds %Array_FloError_, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx2.i174, align 4
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %common.ret, label %ifend15

common.ret:                                       ; preds = %ifend19, %ifend, %if.entry, %TypeChecker_error.exit, %if.entry110, %if.entry102, %ifend98, %if.entry87, %ifend80, %ifend69, %ifend61, %if.entry32, %if.entry26, %if.entry17, %if.entry9
  %common.ret.op = phi ptr [ %33, %if.entry9 ], [ %45, %if.entry17 ], [ %61, %if.entry26 ], [ %62, %if.entry32 ], [ %100, %ifend61 ], [ %108, %ifend69 ], [ %121, %ifend80 ], [ %125, %if.entry87 ], [ %136, %ifend98 ], [ %137, %if.entry102 ], [ %147, %if.entry110 ], [ null, %TypeChecker_error.exit ], [ null, %if.entry ], [ null, %ifend ], [ null, %ifend19 ]
  ret ptr %common.ret.op

ifend7:                                           ; preds = %if.entry
  %memberidx8 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  %26 = load ptr, ptr %memberidx8, align 8
  %27 = load i64, ptr %26, align 4
  %28 = icmp eq i64 %27, 20
  br i1 %28, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend7, %if.entry.i
  %.tr5.i = phi ptr [ %29, %if.entry.i ], [ %26, %ifend7 ]
  %memberidx1.i263 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %29 = load ptr, ptr %memberidx1.i263, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 20
  br i1 %31, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend7
  %.lcssa.i = phi i64 [ %27, %ifend7 ], [ %30, %if.entry.i ]
  %32 = icmp eq i64 %.lcssa.i, 11
  br i1 %32, label %if.entry9, label %is_object.exit.ifend_crit_edge

is_object.exit.ifend_crit_edge:                   ; preds = %is_object.exit
  %.pre = load ptr, ptr %memberidx1, align 8
  br label %ifend

if.entry9:                                        ; preds = %is_object.exit
  %33 = tail call fastcc ptr @TypeChecker_check_object_setitem_expr(ptr %0, ptr %15, ptr %2)
  br label %common.ret

ifend15:                                          ; preds = %ifend
  %memberidx16 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  %34 = load ptr, ptr %memberidx16, align 8
  %35 = load i64, ptr %34, align 4
  %36 = icmp eq i64 %35, 20
  br i1 %36, label %if.entry.i266, label %is_object.exit268

if.entry.i266:                                    ; preds = %ifend15, %if.entry.i266
  %.tr5.i264 = phi ptr [ %37, %if.entry.i266 ], [ %34, %ifend15 ]
  %memberidx1.i265 = getelementptr inbounds %GenericType, ptr %.tr5.i264, i64 0, i32 3
  %37 = load ptr, ptr %memberidx1.i265, align 8
  %38 = load i64, ptr %37, align 4
  %39 = icmp eq i64 %38, 20
  br i1 %39, label %if.entry.i266, label %is_object.exit268

is_object.exit268:                                ; preds = %if.entry.i266, %ifend15
  %.lcssa.i267 = phi i64 [ %35, %ifend15 ], [ %38, %if.entry.i266 ]
  %40 = icmp eq i64 %.lcssa.i267, 11
  %41 = xor i1 %6, true
  %42 = and i1 %40, %41
  %43 = icmp ne i64 %4, 18
  %44 = and i1 %43, %42
  br i1 %44, label %if.entry17, label %ifend19

if.entry17:                                       ; preds = %is_object.exit268
  %45 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %21, ptr %2, ptr null)
  br label %common.ret

ifend19:                                          ; preds = %is_object.exit268
  %memberidx21 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %46 = load ptr, ptr %memberidx21, align 8
  %47 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %34, ptr %46)
  store ptr %47, ptr %right, align 8
  %48 = load ptr, ptr %memberidx.i172, align 8
  %memberidx1.i176 = getelementptr inbounds %Compiler, ptr %48, i64 0, i32 5
  %49 = load ptr, ptr %memberidx1.i176, align 8
  %memberidx2.i177 = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %50 = load i64, ptr %memberidx2.i177, align 4
  %51 = icmp sgt i64 %50, 0
  br i1 %51, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend19
  %memberidx25 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 3
  %52 = load ptr, ptr %memberidx25, align 8
  %53 = load i64, ptr %52, align 4
  %54 = icmp eq i64 %53, 20
  br i1 %54, label %if.entry.i271, label %is_object.exit273

if.entry.i271:                                    ; preds = %ifend24, %if.entry.i271
  %.tr5.i269 = phi ptr [ %55, %if.entry.i271 ], [ %52, %ifend24 ]
  %memberidx1.i270 = getelementptr inbounds %GenericType, ptr %.tr5.i269, i64 0, i32 3
  %55 = load ptr, ptr %memberidx1.i270, align 8
  %56 = load i64, ptr %55, align 4
  %57 = icmp eq i64 %56, 20
  br i1 %57, label %if.entry.i271, label %is_object.exit273

is_object.exit273:                                ; preds = %if.entry.i271, %ifend24
  %.lcssa.i272 = phi i64 [ %53, %ifend24 ], [ %56, %if.entry.i271 ]
  %58 = icmp eq i64 %.lcssa.i272, 11
  %59 = icmp eq i64 %4, 18
  %60 = and i1 %59, %58
  br i1 %60, label %if.entry26, label %ifend31

if.entry26:                                       ; preds = %is_object.exit273
  %61 = tail call fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %47, ptr %2, ptr %21)
  br label %common.ret

ifend31:                                          ; preds = %is_object.exit273
  br i1 %6, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend31
  %62 = tail call fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr %21, ptr %47, ptr %2)
  br label %common.ret

ifend34:                                          ; preds = %ifend31
  %memberidx35 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %63 = load i1, ptr %memberidx35, align 1
  %memberidx36 = getelementptr inbounds %Expression, ptr %47, i64 0, i32 1
  %64 = load i1, ptr %memberidx36, align 1
  %65 = and i1 %63, %64
  %66 = load ptr, ptr %memberidx16, align 8
  %67 = load i64, ptr %66, align 4
  %68 = icmp eq i64 %67, 21
  %69 = icmp ne i64 %53, 21
  %70 = and i1 %69, %68
  br i1 %70, label %if.entry41, label %ifend43

if.entry41:                                       ; preds = %ifend34
  store ptr %52, ptr %memberidx16, align 8
  %.pre278 = load i64, ptr %52, align 4
  %.pre279 = load ptr, ptr %memberidx25, align 8
  %.pre280 = load i64, ptr %.pre279, align 4
  br label %ifend43

ifend43:                                          ; preds = %ifend34, %if.entry41
  %71 = phi i64 [ %53, %ifend34 ], [ %.pre280, %if.entry41 ]
  %72 = phi i64 [ %67, %ifend34 ], [ %.pre278, %if.entry41 ]
  %73 = add i64 %72, -1
  %74 = icmp ult i64 %73, 9
  %75 = add i64 %71, -1
  %76 = icmp ult i64 %75, 9
  %77 = and i1 %74, %76
  br i1 %77, label %if.entry48, label %else49

if.entry48:                                       ; preds = %ifend43
  %78 = icmp eq i64 %4, 6
  br i1 %78, label %if.entry51, label %ifend53

else49:                                           ; preds = %ifend43
  %79 = or i64 %71, %72
  %80 = icmp eq i64 %79, 0
  %81 = add i64 %4, -15
  %82 = icmp ult i64 %81, 2
  %or.cond = select i1 %80, i1 %82, i1 false
  br i1 %or.cond, label %if.entry87, label %ifend50.thread

ifend50:                                          ; preds = %ifend65
  %83 = add i64 %4, -7
  %84 = icmp ult i64 %83, 6
  br i1 %84, label %if.entry96, label %ifend93.thread

ifend93.thread:                                   ; preds = %ifend50
  %85 = icmp eq i64 %71, 6
  br label %ifend104

ifend50.thread:                                   ; preds = %else49
  %86 = add i64 %4, -7
  %87 = icmp ult i64 %86, 6
  br i1 %87, label %ifend98, label %ifend93

if.entry51:                                       ; preds = %if.entry48
  %88 = icmp ult i64 %73, 7
  br i1 %88, label %if.entry55, label %ifend57

ifend53:                                          ; preds = %if.entry48
  %89 = add i64 %4, -1
  %90 = icmp ult i64 %89, 10
  br i1 %90, label %if.entry63, label %ifend65

if.entry55:                                       ; preds = %if.entry51
  %91 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %91, align 4
  %92 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %92, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %TypeCastExpression, ptr %92, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %92, i64 0, i32 3
  store ptr %91, ptr %memberidx1.i.i, align 8
  %93 = load i1, ptr %memberidx35, align 1
  store i1 %93, ptr %memberidx1.i.i.i, align 1
  store ptr %92, ptr %left, align 8
  %.pre288 = load ptr, ptr %memberidx25, align 8
  %.pre289 = load i64, ptr %.pre288, align 4
  %.pre290 = add i64 %.pre289, -1
  br label %ifend57

ifend57:                                          ; preds = %if.entry51, %if.entry55
  %.pre-phi = phi i64 [ %75, %if.entry51 ], [ %.pre290, %if.entry55 ]
  %94 = phi ptr [ %21, %if.entry51 ], [ %92, %if.entry55 ]
  %95 = icmp ult i64 %.pre-phi, 7
  br i1 %95, label %if.entry59, label %ifend61

if.entry59:                                       ; preds = %ifend57
  %96 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %96, align 4
  %97 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %97, align 4
  %memberidx.i.i.i181 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i181, align 4
  %memberidx1.i.i.i182 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 1
  %memberidx.i.i183 = getelementptr inbounds %TypeCastExpression, ptr %97, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i183, align 8
  %memberidx1.i.i184 = getelementptr inbounds %Expression, ptr %97, i64 0, i32 3
  store ptr %96, ptr %memberidx1.i.i184, align 8
  %98 = load i1, ptr %memberidx36, align 1
  store i1 %98, ptr %memberidx1.i.i.i182, align 1
  store ptr %97, ptr %right, align 8
  br label %ifend61

ifend61:                                          ; preds = %ifend57, %if.entry59
  %99 = phi ptr [ %47, %ifend57 ], [ %97, %if.entry59 ]
  %100 = tail call ptr @malloc(i32 49)
  %memberidx62 = getelementptr inbounds %Expression, ptr %94, i64 0, i32 3
  %101 = load ptr, ptr %memberidx62, align 8
  store i64 8, ptr %100, align 4
  %memberidx.i.i187 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i187, align 4
  %memberidx1.i.i188 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 1
  %memberidx.i189 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 4
  store ptr %94, ptr %memberidx.i189, align 8
  %memberidx1.i190 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 5
  store i64 6, ptr %memberidx1.i190, align 4
  %memberidx2.i191 = getelementptr inbounds %BinaryExpression, ptr %100, i64 0, i32 6
  store ptr %99, ptr %memberidx2.i191, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %100, i64 0, i32 3
  store ptr %101, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i188, align 1
  br label %common.ret

if.entry63:                                       ; preds = %ifend53
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %102 = load ptr, ptr %left, align 8
  %memberidx66 = getelementptr inbounds %Expression, ptr %102, i64 0, i32 3
  %103 = load ptr, ptr %memberidx66, align 8
  %104 = icmp ugt i64 %4, 6
  br i1 %104, label %if.entry67, label %ifend69

ifend65:                                          ; preds = %ifend53
  %105 = add i64 %4, -13
  %106 = icmp ult i64 %105, 5
  br i1 %106, label %if.entry70, label %ifend50

if.entry67:                                       ; preds = %if.entry63
  %107 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %107, align 4
  br label %ifend69

ifend69:                                          ; preds = %if.entry63, %if.entry67
  %exp_type.0 = phi ptr [ %107, %if.entry67 ], [ %103, %if.entry63 ]
  %108 = tail call ptr @malloc(i32 49)
  %109 = load ptr, ptr %right, align 8
  store i64 8, ptr %108, align 4
  %memberidx.i.i192 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i192, align 4
  %memberidx1.i.i193 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 1
  %memberidx.i194 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 4
  store ptr %102, ptr %memberidx.i194, align 8
  %memberidx1.i195 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i195, align 4
  %memberidx2.i196 = getelementptr inbounds %BinaryExpression, ptr %108, i64 0, i32 6
  store ptr %109, ptr %memberidx2.i196, align 8
  %memberidx3.i197 = getelementptr inbounds %Expression, ptr %108, i64 0, i32 3
  store ptr %exp_type.0, ptr %memberidx3.i197, align 8
  store i1 %65, ptr %memberidx1.i.i193, align 1
  br label %common.ret

if.entry70:                                       ; preds = %ifend65
  %110 = and i64 %72, -2
  %111 = icmp eq i64 %110, 8
  br i1 %111, label %if.entry74, label %ifend76

if.entry74:                                       ; preds = %if.entry70
  %112 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %112, align 4
  %memberidx.i199 = getelementptr inbounds %IntType, ptr %112, i64 0, i32 1
  store i1 true, ptr %memberidx.i199, align 1
  %113 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %113, align 4
  %memberidx.i.i.i200 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i200, align 4
  %memberidx1.i.i.i201 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 1
  %memberidx.i.i202 = getelementptr inbounds %TypeCastExpression, ptr %113, i64 0, i32 4
  store ptr %21, ptr %memberidx.i.i202, align 8
  %memberidx1.i.i203 = getelementptr inbounds %Expression, ptr %113, i64 0, i32 3
  store ptr %112, ptr %memberidx1.i.i203, align 8
  %114 = load i1, ptr %memberidx35, align 1
  store i1 %114, ptr %memberidx1.i.i.i201, align 1
  store ptr %113, ptr %left, align 8
  %.pre286 = load ptr, ptr %memberidx25, align 8
  %.pre287 = load i64, ptr %.pre286, align 4
  br label %ifend76

ifend76:                                          ; preds = %if.entry70, %if.entry74
  %115 = phi i64 [ %71, %if.entry70 ], [ %.pre287, %if.entry74 ]
  %116 = and i64 %115, -2
  %117 = icmp eq i64 %116, 8
  br i1 %117, label %if.entry78, label %ifend80

if.entry78:                                       ; preds = %ifend76
  %118 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %118, align 4
  %memberidx.i206 = getelementptr inbounds %IntType, ptr %118, i64 0, i32 1
  store i1 true, ptr %memberidx.i206, align 1
  %119 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %119, align 4
  %memberidx.i.i.i207 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i207, align 4
  %memberidx1.i.i.i208 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 1
  %memberidx.i.i209 = getelementptr inbounds %TypeCastExpression, ptr %119, i64 0, i32 4
  store ptr %47, ptr %memberidx.i.i209, align 8
  %memberidx1.i.i210 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  store ptr %118, ptr %memberidx1.i.i210, align 8
  %120 = load i1, ptr %memberidx36, align 1
  store i1 %120, ptr %memberidx1.i.i.i208, align 1
  store ptr %119, ptr %right, align 8
  br label %ifend80

ifend80:                                          ; preds = %ifend76, %if.entry78
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %121 = tail call ptr @malloc(i32 49)
  %122 = load ptr, ptr %left, align 8
  %123 = load ptr, ptr %right, align 8
  %memberidx81 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  %124 = load ptr, ptr %memberidx81, align 8
  store i64 8, ptr %121, align 4
  %memberidx.i.i213 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i213, align 4
  %memberidx1.i.i214 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 1
  %memberidx.i215 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 4
  store ptr %122, ptr %memberidx.i215, align 8
  %memberidx1.i216 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i216, align 4
  %memberidx2.i217 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 6
  store ptr %123, ptr %memberidx2.i217, align 8
  %memberidx3.i218 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 3
  store ptr %124, ptr %memberidx3.i218, align 8
  store i1 %65, ptr %memberidx1.i.i214, align 1
  br label %common.ret

if.entry87:                                       ; preds = %else49
  %125 = tail call ptr @malloc(i32 49)
  %126 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %125, align 4
  %memberidx.i.i220 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i220, align 4
  %memberidx1.i.i221 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 1
  %memberidx.i222 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 4
  store ptr %21, ptr %memberidx.i222, align 8
  %memberidx1.i223 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i223, align 4
  %memberidx2.i224 = getelementptr inbounds %BinaryExpression, ptr %125, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i224, align 8
  %memberidx3.i225 = getelementptr inbounds %Expression, ptr %125, i64 0, i32 3
  store ptr %126, ptr %memberidx3.i225, align 8
  store i1 %65, ptr %memberidx1.i.i221, align 1
  br label %common.ret

ifend93:                                          ; preds = %ifend50.thread
  %127 = add i64 %4, -1
  %128 = icmp ult i64 %127, 2
  %129 = icmp eq i64 %72, 13
  %130 = and i1 %128, %129
  %131 = icmp eq i64 %71, 6
  %132 = and i1 %130, %131
  br i1 %132, label %if.entry102, label %ifend104

if.entry96:                                       ; preds = %ifend50
  call fastcc void @check_cast_lower_bits(ptr nonnull %left, ptr nonnull %right)
  %.pre284 = load ptr, ptr %left, align 8
  %.pre285 = load ptr, ptr %right, align 8
  br label %ifend98

ifend98:                                          ; preds = %ifend50.thread, %if.entry96
  %133 = phi ptr [ %47, %ifend50.thread ], [ %.pre285, %if.entry96 ]
  %134 = phi ptr [ %21, %ifend50.thread ], [ %.pre284, %if.entry96 ]
  %135 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %135, align 4
  %136 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %136, align 4
  %memberidx.i.i227 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i227, align 4
  %memberidx1.i.i228 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 1
  %memberidx.i229 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 4
  store ptr %134, ptr %memberidx.i229, align 8
  %memberidx1.i230 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i230, align 4
  %memberidx2.i231 = getelementptr inbounds %BinaryExpression, ptr %136, i64 0, i32 6
  store ptr %133, ptr %memberidx2.i231, align 8
  %memberidx3.i232 = getelementptr inbounds %Expression, ptr %136, i64 0, i32 3
  store ptr %135, ptr %memberidx3.i232, align 8
  store i1 %65, ptr %memberidx1.i.i228, align 1
  br label %common.ret

if.entry102:                                      ; preds = %ifend93
  %137 = tail call ptr @malloc(i32 49)
  %138 = load ptr, ptr %memberidx16, align 8
  store i64 8, ptr %137, align 4
  %memberidx.i.i234 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i234, align 4
  %memberidx1.i.i235 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 1
  %memberidx.i236 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 4
  store ptr %21, ptr %memberidx.i236, align 8
  %memberidx1.i237 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 5
  store i64 %4, ptr %memberidx1.i237, align 4
  %memberidx2.i238 = getelementptr inbounds %BinaryExpression, ptr %137, i64 0, i32 6
  store ptr %47, ptr %memberidx2.i238, align 8
  %memberidx3.i239 = getelementptr inbounds %Expression, ptr %137, i64 0, i32 3
  store ptr %138, ptr %memberidx3.i239, align 8
  store i1 false, ptr %memberidx1.i.i235, align 1
  br label %common.ret

ifend104:                                         ; preds = %ifend93.thread, %ifend93
  %139 = phi i1 [ %85, %ifend93.thread ], [ %131, %ifend93 ]
  %140 = icmp eq i64 %4, 31
  %141 = icmp eq i64 %72, 6
  %142 = and i1 %140, %141
  %143 = and i1 %142, %139
  br i1 %143, label %if.entry110, label %ifend112

if.entry110:                                      ; preds = %ifend104
  %144 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %144, ptr noundef nonnull align 8 dereferenceable(5) @181, i64 5, i1 false)
  %145 = tail call ptr @malloc(i32 24)
  store ptr %144, ptr %145, align 8
  %memberidx1.i.i241 = getelementptr inbounds %String, ptr %145, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i241, align 4
  %memberidx2.i.i242 = getelementptr inbounds %String, ptr %145, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i242, align 4
  %146 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %145)
  %147 = tail call ptr @malloc(i32 42)
  %148 = tail call ptr @malloc(i32 24)
  %memberidx.i243 = getelementptr inbounds %Array_Expression_, ptr %148, i64 0, i32 1
  store i64 0, ptr %memberidx.i243, align 4
  %memberidx1.i244 = getelementptr inbounds %Array_Expression_, ptr %148, i64 0, i32 2
  store i64 16, ptr %memberidx1.i244, align 4
  %149 = tail call ptr @malloc(i32 128)
  store ptr %149, ptr %148, align 8
  store ptr %21, ptr %149, align 8
  %150 = getelementptr inbounds ptr, ptr %149, i64 1
  store ptr %47, ptr %150, align 8
  store i64 2, ptr %memberidx.i243, align 4
  store i64 8, ptr %147, align 4
  %memberidx.i.i245 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i245, align 4
  %memberidx1.i.i246 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i246, align 1
  %memberidx.i247 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 6
  store ptr %146, ptr %memberidx.i247, align 8
  %memberidx1.i248 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 5
  store i1 true, ptr %memberidx1.i248, align 1
  %memberidx2.i249 = getelementptr inbounds %NewExpression, ptr %147, i64 0, i32 4
  store ptr %148, ptr %memberidx2.i249, align 8
  %memberidx3.i250 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 3
  store ptr %146, ptr %memberidx3.i250, align 8
  br label %common.ret

ifend112:                                         ; preds = %ifend104
  %151 = tail call fastcc ptr @dump_bin_op(i64 %4)
  %memberidx.i251 = getelementptr inbounds %String, ptr %151, i64 0, i32 1
  %152 = load i64, ptr %memberidx.i251, align 4
  %153 = trunc i64 %152 to i32
  %154 = add i32 %153, 1
  %155 = tail call ptr @malloc(i32 %154)
  %156 = load ptr, ptr %151, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %155, ptr align 8 %156, i64 %152, i1 false)
  %157 = getelementptr inbounds i8, ptr %155, i64 %152
  store i8 0, ptr %157, align 1
  %158 = load ptr, ptr %memberidx16, align 8
  %159 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %158)
  %memberidx.i252 = getelementptr inbounds %String, ptr %159, i64 0, i32 1
  %160 = load i64, ptr %memberidx.i252, align 4
  %161 = trunc i64 %160 to i32
  %162 = add i32 %161, 1
  %163 = tail call ptr @malloc(i32 %162)
  %164 = load ptr, ptr %159, align 8
  %165 = load i64, ptr %memberidx.i252, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %163, ptr align 8 %164, i64 %165, i1 false)
  %166 = getelementptr inbounds i8, ptr %163, i64 %165
  store i8 0, ptr %166, align 1
  %167 = load ptr, ptr %memberidx25, align 8
  %168 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %167)
  %memberidx.i253 = getelementptr inbounds %String, ptr %168, i64 0, i32 1
  %169 = load i64, ptr %memberidx.i253, align 4
  %170 = trunc i64 %169 to i32
  %171 = add i32 %170, 1
  %172 = tail call ptr @malloc(i32 %171)
  %173 = load ptr, ptr %168, align 8
  %174 = load i64, ptr %memberidx.i253, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %172, ptr align 8 %173, i64 %174, i1 false)
  %175 = getelementptr inbounds i8, ptr %172, i64 %174
  store i8 0, ptr %175, align 1
  %176 = alloca ptr, align 8
  %177 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %176, ptr nonnull @182, ptr %155, ptr %163, ptr %172)
  %178 = load ptr, ptr %176, align 8
  %179 = tail call ptr @malloc(i32 24)
  store ptr %178, ptr %179, align 8
  %memberidx1.i254 = getelementptr inbounds %String, ptr %179, i64 0, i32 1
  store i64 %177, ptr %memberidx1.i254, align 4
  %memberidx2.i255 = getelementptr inbounds %String, ptr %179, i64 0, i32 2
  store i64 %177, ptr %memberidx2.i255, align 4
  tail call void @free(ptr %155)
  tail call void @free(ptr %163)
  tail call void @free(ptr %172)
  %180 = load ptr, ptr %2, align 8
  %181 = load ptr, ptr %memberidx.i172, align 8
  %memberidx1.i257 = getelementptr inbounds %Compiler, ptr %181, i64 0, i32 5
  %182 = load ptr, ptr %memberidx1.i257, align 8
  %183 = call ptr @malloc(i32 24)
  store i64 5, ptr %183, align 4
  %memberidx1.i.i258 = getelementptr inbounds %FloError, ptr %183, i64 0, i32 2
  store ptr %180, ptr %memberidx1.i.i258, align 8
  %memberidx2.i.i259 = getelementptr inbounds %FloError, ptr %183, i64 0, i32 1
  store ptr %179, ptr %memberidx2.i.i259, align 8
  %memberidx.i.i260 = getelementptr inbounds %Array_FloError_, ptr %182, i64 0, i32 1
  %184 = load i64, ptr %memberidx.i.i260, align 4
  %185 = add i64 %184, 1
  %memberidx.i.i.i261 = getelementptr inbounds %Array_FloError_, ptr %182, i64 0, i32 2
  %186 = load i64, ptr %memberidx.i.i.i261, align 4
  %187 = icmp slt i64 %186, %185
  %.pre281 = load ptr, ptr %182, align 8
  br i1 %187, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %ifend112, %while.entry.i.i.i
  %188 = phi ptr [ %192, %while.entry.i.i.i ], [ %.pre281, %ifend112 ]
  %189 = phi i64 [ %193, %while.entry.i.i.i ], [ %186, %ifend112 ]
  %190 = shl nuw i64 %189, 1
  store i64 %190, ptr %memberidx.i.i.i261, align 4
  %191 = shl i64 %189, 4
  %192 = call ptr @realloc(ptr %188, i64 %191)
  store ptr %192, ptr %182, align 8
  %193 = load i64, ptr %memberidx.i.i.i261, align 4
  %194 = icmp slt i64 %193, %185
  br i1 %194, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre282 = load i64, ptr %memberidx.i.i260, align 4
  %.pre291 = add nsw i64 %.pre282, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %ifend112, %TypeChecker_error.exit.loopexit
  %.pre-phi292 = phi i64 [ %.pre291, %TypeChecker_error.exit.loopexit ], [ %185, %ifend112 ]
  %195 = phi ptr [ %192, %TypeChecker_error.exit.loopexit ], [ %.pre281, %ifend112 ]
  %196 = phi i64 [ %.pre282, %TypeChecker_error.exit.loopexit ], [ %184, %ifend112 ]
  store i64 %.pre-phi292, ptr %memberidx.i.i260, align 4
  %197 = getelementptr inbounds ptr, ptr %195, i64 %196
  store ptr %183, ptr %197, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %TypeChecker_error.exit102, %TypeChecker_error.exit114, %TypeChecker_get_func_args_from_expression.exit, %2, %ifend22, %TypeChecker_error.exit, %if.entry4
  %common.ret.op = phi ptr [ %16, %if.entry4 ], [ null, %TypeChecker_error.exit ], [ %103, %ifend22 ], [ null, %2 ], [ null, %TypeChecker_get_func_args_from_expression.exit ], [ null, %TypeChecker_error.exit114 ], [ null, %TypeChecker_error.exit102 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 2
  %10 = load i64, ptr %memberidx1, align 4
  %11 = icmp eq i64 %10, 18
  %memberidx2 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2, align 8
  %13 = load i64, ptr %12, align 4
  %14 = icmp eq i64 %13, 21
  %15 = and i1 %11, %14
  br i1 %15, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %ifend
  %16 = tail call fastcc ptr @TypeChecker_check_intrinsic_call(ptr nonnull %0, ptr nonnull %5, ptr nonnull %1)
  br label %common.ret

ifend6:                                           ; preds = %ifend
  %.not = icmp eq i64 %13, 16
  br i1 %.not, label %ifend11, label %if.entry9

if.entry9:                                        ; preds = %ifend6
  %17 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %12)
  %memberidx.i70 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i70, align 4
  %19 = trunc i64 %18 to i32
  %20 = add i32 %19, 1
  %21 = tail call ptr @malloc(i32 %20)
  %22 = load ptr, ptr %17, align 8
  %23 = load i64, ptr %memberidx.i70, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %22, i64 %23, i1 false)
  %24 = getelementptr inbounds i8, ptr %21, i64 %23
  store i8 0, ptr %24, align 1
  %25 = alloca ptr, align 8
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %25, ptr nonnull @214, ptr %21)
  %27 = load ptr, ptr %25, align 8
  %28 = tail call ptr @malloc(i32 24)
  store ptr %27, ptr %28, align 8
  %memberidx1.i71 = getelementptr inbounds %String, ptr %28, i64 0, i32 1
  store i64 %26, ptr %memberidx1.i71, align 4
  %memberidx2.i72 = getelementptr inbounds %String, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx2.i72, align 4
  tail call void @free(ptr %21)
  %29 = load ptr, ptr %memberidx, align 8
  %30 = load ptr, ptr %29, align 8
  %31 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i74 = getelementptr inbounds %Compiler, ptr %31, i64 0, i32 5
  %32 = load ptr, ptr %memberidx1.i74, align 8
  %33 = call ptr @malloc(i32 24)
  store i64 5, ptr %33, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %33, i64 0, i32 2
  store ptr %30, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %33, i64 0, i32 1
  store ptr %28, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i.i, align 4
  %35 = add i64 %34, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 2
  %36 = load i64, ptr %memberidx.i.i.i, align 4
  %37 = icmp slt i64 %36, %35
  %.pre = load ptr, ptr %32, align 8
  br i1 %37, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry9, %while.entry.i.i.i
  %38 = phi ptr [ %42, %while.entry.i.i.i ], [ %.pre, %if.entry9 ]
  %39 = phi i64 [ %43, %while.entry.i.i.i ], [ %36, %if.entry9 ]
  %40 = shl nuw i64 %39, 1
  store i64 %40, ptr %memberidx.i.i.i, align 4
  %41 = shl i64 %39, 4
  %42 = call ptr @realloc(ptr %38, i64 %41)
  store ptr %42, ptr %32, align 8
  %43 = load i64, ptr %memberidx.i.i.i, align 4
  %44 = icmp slt i64 %43, %35
  br i1 %44, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre9 = load i64, ptr %memberidx.i.i, align 4
  %.pre20 = add nsw i64 %.pre9, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry9, %TypeChecker_error.exit.loopexit
  %.pre-phi21 = phi i64 [ %.pre20, %TypeChecker_error.exit.loopexit ], [ %35, %if.entry9 ]
  %45 = phi ptr [ %42, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry9 ]
  %46 = phi i64 [ %.pre9, %TypeChecker_error.exit.loopexit ], [ %34, %if.entry9 ]
  store i64 %.pre-phi21, ptr %memberidx.i.i, align 4
  %47 = getelementptr inbounds ptr, ptr %45, i64 %46
  store ptr %33, ptr %47, align 8
  br label %common.ret

ifend11:                                          ; preds = %ifend6
  switch i64 %10, label %TypeChecker_get_func_args_from_expression.exit [
    i64 8, label %if.entry.i
    i64 13, label %if.entry9.i
  ]

if.entry.i:                                       ; preds = %ifend11
  %memberidx1.i76 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %48 = load ptr, ptr %memberidx1.i76, align 8
  %49 = load i64, ptr %48, align 4
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %if.entry3.i, label %TypeChecker_get_func_args_from_expression.exit

if.entry3.i:                                      ; preds = %if.entry.i
  %51 = load ptr, ptr %0, align 8
  %52 = load ptr, ptr %51, align 8
  %memberidx1.i.i77 = getelementptr inbounds %VarId, ptr %48, i64 0, i32 1
  %53 = load i64, ptr %memberidx1.i.i77, align 4
  %54 = load ptr, ptr %52, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  %memberidx2.i.i78 = getelementptr inbounds %Module, ptr %56, i64 0, i32 4
  %57 = load ptr, ptr %memberidx2.i.i78, align 8
  %memberidx3.i.i = getelementptr inbounds %VarId, ptr %48, i64 0, i32 2
  %58 = load i64, ptr %memberidx3.i.i, align 4
  %59 = load ptr, ptr %57, align 8
  %60 = getelementptr inbounds ptr, ptr %59, i64 %58
  %61 = load ptr, ptr %60, align 8
  %memberidx7.i = getelementptr inbounds %Function, ptr %61, i64 0, i32 2
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

if.entry9.i:                                      ; preds = %ifend11
  %memberidx12.i = getelementptr inbounds %MemberExpression, ptr %5, i64 0, i32 5
  %62 = load ptr, ptr %memberidx12.i, align 8
  %63 = load ptr, ptr %0, align 8
  %memberidx.i.i.i79 = getelementptr inbounds %PropId, ptr %62, i64 0, i32 1
  %64 = load ptr, ptr %memberidx.i.i.i79, align 8
  %65 = load ptr, ptr %63, align 8
  %66 = load i64, ptr %64, align 4
  %67 = load ptr, ptr %65, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %69, i64 0, i32 3
  %70 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %64, i64 0, i32 2
  %71 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %72 = load ptr, ptr %70, align 8
  %73 = getelementptr inbounds ptr, ptr %72, i64 %71
  %74 = load ptr, ptr %73, align 8
  %memberidx.i.i80 = getelementptr inbounds %Class, ptr %74, i64 0, i32 5
  %75 = load ptr, ptr %memberidx.i.i80, align 8
  %memberidx1.i20.i = getelementptr inbounds %PropId, ptr %62, i64 0, i32 2
  %76 = load i64, ptr %memberidx1.i20.i, align 4
  %77 = load ptr, ptr %75, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %76
  %79 = load ptr, ptr %78, align 8
  %memberidx14.i = getelementptr inbounds %ClassMethod, ptr %79, i64 0, i32 6
  br label %TypeChecker_get_func_args_from_expression.exit.sink.split

TypeChecker_get_func_args_from_expression.exit.sink.split: ; preds = %if.entry9.i, %if.entry3.i
  %memberidx7.i.sink = phi ptr [ %memberidx7.i, %if.entry3.i ], [ %memberidx14.i, %if.entry9.i ]
  %80 = load ptr, ptr %memberidx7.i.sink, align 8
  br label %TypeChecker_get_func_args_from_expression.exit

TypeChecker_get_func_args_from_expression.exit:   ; preds = %TypeChecker_get_func_args_from_expression.exit.sink.split, %ifend11, %if.entry.i
  %common.ret.op.i = phi ptr [ null, %if.entry.i ], [ null, %ifend11 ], [ %80, %TypeChecker_get_func_args_from_expression.exit.sink.split ]
  %memberidx16 = getelementptr inbounds %CallExpressionNode, ptr %1, i64 0, i32 4
  %81 = load ptr, ptr %memberidx16, align 8
  %82 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr nonnull %12, ptr %common.ret.op.i, ptr %81)
  %83 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i82 = getelementptr inbounds %Compiler, ptr %83, i64 0, i32 5
  %84 = load ptr, ptr %memberidx1.i82, align 8
  %memberidx2.i83 = getelementptr inbounds %Array_FloError_, ptr %84, i64 0, i32 1
  %85 = load i64, ptr %memberidx2.i83, align 4
  %86 = icmp sgt i64 %85, 0
  br i1 %86, label %common.ret, label %ifend19

ifend19:                                          ; preds = %TypeChecker_get_func_args_from_expression.exit
  %memberidx.i84 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 1
  %87 = load ptr, ptr %memberidx.i84, align 8
  %memberidx1.i85 = getelementptr inbounds %Array_Type_, ptr %87, i64 0, i32 1
  %88 = load i64, ptr %memberidx1.i85, align 4
  %memberidx2.i86 = getelementptr inbounds %Array_Expression_, ptr %82, i64 0, i32 1
  %89 = load i64, ptr %memberidx2.i86, align 4
  %.not.i = icmp eq i64 %88, %89
  br i1 %.not.i, label %for.cond.i.preheader, label %if.entry23

for.cond.i.preheader:                             ; preds = %ifend19
  %90 = icmp sgt i64 %88, 0
  br i1 %90, label %for.body.i, label %ifend22

for.body.i:                                       ; preds = %for.cond.i.preheader, %ifend8.i
  %i.0.i7 = phi i64 [ %100, %ifend8.i ], [ 0, %for.cond.i.preheader ]
  %91 = load ptr, ptr %memberidx.i84, align 8
  %92 = load ptr, ptr %91, align 8
  %93 = getelementptr inbounds ptr, ptr %92, i64 %i.0.i7
  %94 = load ptr, ptr %93, align 8
  %95 = load ptr, ptr %82, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %i.0.i7
  %97 = load ptr, ptr %96, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %97, i64 0, i32 3
  %98 = load ptr, ptr %memberidx5.i, align 8
  %99 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %94, ptr %98)
  br i1 %99, label %ifend8.i, label %else24

ifend8.i:                                         ; preds = %for.body.i
  %100 = add nuw nsw i64 %i.0.i7, 1
  %101 = load i64, ptr %memberidx2.i86, align 4
  %102 = icmp slt i64 %100, %101
  br i1 %102, label %for.body.i, label %ifend22

ifend22:                                          ; preds = %ifend8.i, %for.cond.i.preheader
  %103 = tail call ptr @malloc(i32 41)
  %memberidx34 = getelementptr inbounds %FunctionType, ptr %12, i64 0, i32 2
  %104 = load ptr, ptr %memberidx34, align 8
  store i64 8, ptr %103, align 4
  %memberidx.i.i88 = getelementptr inbounds %Expression, ptr %103, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i88, align 4
  %memberidx1.i.i89 = getelementptr inbounds %Expression, ptr %103, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i89, align 1
  %memberidx.i90 = getelementptr inbounds %CallExpression, ptr %103, i64 0, i32 4
  store ptr %5, ptr %memberidx.i90, align 8
  %memberidx1.i91 = getelementptr inbounds %CallExpression, ptr %103, i64 0, i32 5
  store ptr %82, ptr %memberidx1.i91, align 8
  %memberidx2.i92 = getelementptr inbounds %Expression, ptr %103, i64 0, i32 3
  store ptr %104, ptr %memberidx2.i92, align 8
  br label %common.ret

if.entry23:                                       ; preds = %ifend19
  %105 = alloca ptr, align 8
  %106 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %105, ptr nonnull @215, i64 %88, i64 %89)
  %107 = load ptr, ptr %105, align 8
  %108 = tail call ptr @malloc(i32 24)
  store ptr %107, ptr %108, align 8
  %memberidx1.i93 = getelementptr inbounds %String, ptr %108, i64 0, i32 1
  store i64 %106, ptr %memberidx1.i93, align 4
  %memberidx2.i94 = getelementptr inbounds %String, ptr %108, i64 0, i32 2
  store i64 %106, ptr %memberidx2.i94, align 4
  %109 = load ptr, ptr %1, align 8
  %110 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i96 = getelementptr inbounds %Compiler, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx1.i96, align 8
  %112 = call ptr @malloc(i32 24)
  store i64 4, ptr %112, align 4
  %memberidx1.i.i97 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 2
  store ptr %109, ptr %memberidx1.i.i97, align 8
  %memberidx2.i.i98 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 1
  store ptr %108, ptr %memberidx2.i.i98, align 8
  %memberidx.i.i99 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 1
  %113 = load i64, ptr %memberidx.i.i99, align 4
  %114 = add i64 %113, 1
  %memberidx.i.i.i100 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 2
  %115 = load i64, ptr %memberidx.i.i.i100, align 4
  %116 = icmp slt i64 %115, %114
  %.pre11 = load ptr, ptr %111, align 8
  br i1 %116, label %while.entry.i.i.i101, label %TypeChecker_error.exit102

while.entry.i.i.i101:                             ; preds = %if.entry23, %while.entry.i.i.i101
  %117 = phi ptr [ %121, %while.entry.i.i.i101 ], [ %.pre11, %if.entry23 ]
  %118 = phi i64 [ %122, %while.entry.i.i.i101 ], [ %115, %if.entry23 ]
  %119 = shl nuw i64 %118, 1
  store i64 %119, ptr %memberidx.i.i.i100, align 4
  %120 = shl i64 %118, 4
  %121 = call ptr @realloc(ptr %117, i64 %120)
  store ptr %121, ptr %111, align 8
  %122 = load i64, ptr %memberidx.i.i.i100, align 4
  %123 = icmp slt i64 %122, %114
  br i1 %123, label %while.entry.i.i.i101, label %TypeChecker_error.exit102.loopexit

TypeChecker_error.exit102.loopexit:               ; preds = %while.entry.i.i.i101
  %.pre12 = load i64, ptr %memberidx.i.i99, align 4
  %.pre18 = add nsw i64 %.pre12, 1
  br label %TypeChecker_error.exit102

TypeChecker_error.exit102:                        ; preds = %if.entry23, %TypeChecker_error.exit102.loopexit
  %.pre-phi19 = phi i64 [ %.pre18, %TypeChecker_error.exit102.loopexit ], [ %114, %if.entry23 ]
  %124 = phi ptr [ %121, %TypeChecker_error.exit102.loopexit ], [ %.pre11, %if.entry23 ]
  %125 = phi i64 [ %.pre12, %TypeChecker_error.exit102.loopexit ], [ %113, %if.entry23 ]
  store i64 %.pre-phi19, ptr %memberidx.i.i99, align 4
  %126 = getelementptr inbounds ptr, ptr %124, i64 %125
  store ptr %112, ptr %126, align 8
  br label %common.ret

else24:                                           ; preds = %for.body.i
  %127 = load ptr, ptr %memberidx.i84, align 8
  %128 = load ptr, ptr %127, align 8
  %129 = getelementptr inbounds ptr, ptr %128, i64 %i.0.i7
  %130 = load ptr, ptr %129, align 8
  %131 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %130)
  %memberidx.i103 = getelementptr inbounds %String, ptr %131, i64 0, i32 1
  %132 = load i64, ptr %memberidx.i103, align 4
  %133 = trunc i64 %132 to i32
  %134 = add i32 %133, 1
  %135 = tail call ptr @malloc(i32 %134)
  %136 = load ptr, ptr %131, align 8
  %137 = load i64, ptr %memberidx.i103, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %135, ptr align 8 %136, i64 %137, i1 false)
  %138 = getelementptr inbounds i8, ptr %135, i64 %137
  store i8 0, ptr %138, align 1
  %139 = load ptr, ptr %82, align 8
  %140 = getelementptr inbounds ptr, ptr %139, i64 %i.0.i7
  %141 = load ptr, ptr %140, align 8
  %memberidx31 = getelementptr inbounds %Expression, ptr %141, i64 0, i32 3
  %142 = load ptr, ptr %memberidx31, align 8
  %143 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %142)
  %memberidx.i104 = getelementptr inbounds %String, ptr %143, i64 0, i32 1
  %144 = load i64, ptr %memberidx.i104, align 4
  %145 = trunc i64 %144 to i32
  %146 = add i32 %145, 1
  %147 = tail call ptr @malloc(i32 %146)
  %148 = load ptr, ptr %143, align 8
  %149 = load i64, ptr %memberidx.i104, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %147, ptr align 8 %148, i64 %149, i1 false)
  %150 = getelementptr inbounds i8, ptr %147, i64 %149
  store i8 0, ptr %150, align 1
  %151 = alloca ptr, align 8
  %152 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %151, ptr nonnull @216, ptr %135, ptr %147)
  %153 = load ptr, ptr %151, align 8
  %154 = tail call ptr @malloc(i32 24)
  store ptr %153, ptr %154, align 8
  %memberidx1.i105 = getelementptr inbounds %String, ptr %154, i64 0, i32 1
  store i64 %152, ptr %memberidx1.i105, align 4
  %memberidx2.i106 = getelementptr inbounds %String, ptr %154, i64 0, i32 2
  store i64 %152, ptr %memberidx2.i106, align 4
  tail call void @free(ptr %135)
  tail call void @free(ptr %147)
  %155 = load ptr, ptr %memberidx16, align 8
  %156 = load ptr, ptr %155, align 8
  %157 = getelementptr inbounds ptr, ptr %156, i64 %i.0.i7
  %158 = load ptr, ptr %157, align 8
  %159 = load ptr, ptr %158, align 8
  %160 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i108 = getelementptr inbounds %Compiler, ptr %160, i64 0, i32 5
  %161 = load ptr, ptr %memberidx1.i108, align 8
  %162 = call ptr @malloc(i32 24)
  store i64 5, ptr %162, align 4
  %memberidx1.i.i109 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 2
  store ptr %159, ptr %memberidx1.i.i109, align 8
  %memberidx2.i.i110 = getelementptr inbounds %FloError, ptr %162, i64 0, i32 1
  store ptr %154, ptr %memberidx2.i.i110, align 8
  %memberidx.i.i111 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 1
  %163 = load i64, ptr %memberidx.i.i111, align 4
  %164 = add i64 %163, 1
  %memberidx.i.i.i112 = getelementptr inbounds %Array_FloError_, ptr %161, i64 0, i32 2
  %165 = load i64, ptr %memberidx.i.i.i112, align 4
  %166 = icmp slt i64 %165, %164
  %.pre14 = load ptr, ptr %161, align 8
  br i1 %166, label %while.entry.i.i.i113, label %TypeChecker_error.exit114

while.entry.i.i.i113:                             ; preds = %else24, %while.entry.i.i.i113
  %167 = phi ptr [ %171, %while.entry.i.i.i113 ], [ %.pre14, %else24 ]
  %168 = phi i64 [ %172, %while.entry.i.i.i113 ], [ %165, %else24 ]
  %169 = shl nuw i64 %168, 1
  store i64 %169, ptr %memberidx.i.i.i112, align 4
  %170 = shl i64 %168, 4
  %171 = call ptr @realloc(ptr %167, i64 %170)
  store ptr %171, ptr %161, align 8
  %172 = load i64, ptr %memberidx.i.i.i112, align 4
  %173 = icmp slt i64 %172, %164
  br i1 %173, label %while.entry.i.i.i113, label %TypeChecker_error.exit114.loopexit

TypeChecker_error.exit114.loopexit:               ; preds = %while.entry.i.i.i113
  %.pre15 = load i64, ptr %memberidx.i.i111, align 4
  %.pre17 = add nsw i64 %.pre15, 1
  br label %TypeChecker_error.exit114

TypeChecker_error.exit114:                        ; preds = %else24, %TypeChecker_error.exit114.loopexit
  %.pre-phi = phi i64 [ %.pre17, %TypeChecker_error.exit114.loopexit ], [ %164, %else24 ]
  %174 = phi ptr [ %171, %TypeChecker_error.exit114.loopexit ], [ %.pre14, %else24 ]
  %175 = phi i64 [ %.pre15, %TypeChecker_error.exit114.loopexit ], [ %163, %else24 ]
  store i64 %.pre-phi, ptr %memberidx.i.i111, align 4
  %176 = getelementptr inbounds ptr, ptr %174, i64 %175
  store ptr %162, ptr %176, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_type(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeNode, ptr %1, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %ifend65 [
    i64 13, label %if.entry
    i64 14, label %if.entry7
    i64 16, label %if.entry42
    i64 15, label %if.entry51
    i64 17, label %if.entry63
  ]

common.ret:                                       ; preds = %ifend128, %ifend142, %for.end134, %TypeChecker_error.exit, %if.entry121, %if.entry118, %if.entry115, %if.entry112, %if.entry109, %if.entry106, %if.entry103, %if.entry100, %if.entry97, %if.entry94, %if.entry91, %if.entry88, %if.entry85, %if.entry82, %if.entry79, %if.entry76, %if.entry73, %if.entry70, %ifend65, %for.end59, %for.end, %ifend37, %TypeChecker_error.exit484, %TypeChecker_error.exit474, %TypeChecker_error.exit464, %TypeChecker_error.exit454, %if.entry11, %if.entry
  %common.ret.op = phi ptr [ %4, %if.entry ], [ %14, %if.entry11 ], [ null, %TypeChecker_error.exit454 ], [ null, %TypeChecker_error.exit464 ], [ null, %TypeChecker_error.exit474 ], [ null, %TypeChecker_error.exit484 ], [ %112, %ifend37 ], [ %140, %for.end ], [ %141, %for.end59 ], [ %177, %ifend65 ], [ %178, %if.entry70 ], [ %185, %if.entry73 ], [ %192, %if.entry76 ], [ %199, %if.entry79 ], [ %206, %if.entry82 ], [ %213, %if.entry85 ], [ %220, %if.entry88 ], [ %227, %if.entry91 ], [ %234, %if.entry94 ], [ %241, %if.entry97 ], [ %248, %if.entry100 ], [ %255, %if.entry103 ], [ %262, %if.entry106 ], [ %269, %if.entry109 ], [ %276, %if.entry112 ], [ %283, %if.entry115 ], [ %290, %if.entry118 ], [ %297, %if.entry121 ], [ null, %TypeChecker_error.exit ], [ null, %for.end134 ], [ %332, %ifend142 ], [ %302, %ifend128 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %4 = tail call ptr @malloc(i32 16)
  %memberidx5 = getelementptr inbounds %PointerTypeNode, ptr %1, i64 0, i32 2
  %5 = load ptr, ptr %memberidx5, align 8
  %6 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %5)
  store i64 13, ptr %4, align 4
  %memberidx.i436 = getelementptr inbounds %PointerType, ptr %4, i64 0, i32 1
  store ptr %6, ptr %memberidx.i436, align 8
  br label %common.ret

if.entry7:                                        ; preds = %2
  %7 = alloca %IntType, align 8
  store i64 6, ptr %7, align 8
  %memberidx.i437 = getelementptr inbounds %IntType, ptr %7, i64 0, i32 1
  store i1 false, ptr %memberidx.i437, align 8
  %memberidx10 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 3
  %8 = load ptr, ptr %memberidx10, align 8
  %9 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %7, ptr %8)
  %memberidx.i442 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %10 = load ptr, ptr %memberidx.i442, align 8
  %memberidx1.i443 = getelementptr inbounds %Compiler, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx1.i443, align 8
  %memberidx2.i444 = getelementptr inbounds %Array_FloError_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx2.i444, align 4
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %if.entry11, label %ifend13

if.entry11:                                       ; preds = %if.entry7
  %14 = call ptr @malloc(i32 8)
  store i64 21, ptr %14, align 4
  br label %common.ret

ifend13:                                          ; preds = %if.entry7
  %memberidx14 = getelementptr inbounds %Expression, ptr %9, i64 0, i32 3
  %15 = load ptr, ptr %memberidx14, align 8
  %16 = load i64, ptr %15, align 4
  %17 = add i64 %16, -1
  %18 = icmp ult i64 %17, 7
  br i1 %18, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %19 = call ptr @malloc(i32 23)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(23) %19, ptr noundef nonnull align 8 dereferenceable(23) @158, i64 23, i1 false)
  %20 = call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i.i445 = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 23, ptr %memberidx1.i.i445, align 4
  %memberidx2.i.i446 = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 23, ptr %memberidx2.i.i446, align 4
  %21 = load ptr, ptr %memberidx10, align 8
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %memberidx.i442, align 8
  %memberidx1.i448 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx1.i448, align 8
  %25 = call ptr @malloc(i32 24)
  store i64 4, ptr %25, align 4
  %memberidx1.i.i449 = getelementptr inbounds %FloError, ptr %25, i64 0, i32 2
  store ptr %22, ptr %memberidx1.i.i449, align 8
  %memberidx2.i.i450 = getelementptr inbounds %FloError, ptr %25, i64 0, i32 1
  store ptr %20, ptr %memberidx2.i.i450, align 8
  %memberidx.i.i451 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i.i451, align 4
  %27 = add i64 %26, 1
  %memberidx.i.i.i452 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i.i.i452, align 4
  %29 = icmp slt i64 %28, %27
  %.pre532 = load ptr, ptr %24, align 8
  br i1 %29, label %while.entry.i.i.i453, label %TypeChecker_error.exit454

while.entry.i.i.i453:                             ; preds = %if.entry15, %while.entry.i.i.i453
  %30 = phi ptr [ %34, %while.entry.i.i.i453 ], [ %.pre532, %if.entry15 ]
  %31 = phi i64 [ %35, %while.entry.i.i.i453 ], [ %28, %if.entry15 ]
  %32 = shl nuw i64 %31, 1
  store i64 %32, ptr %memberidx.i.i.i452, align 4
  %33 = shl i64 %31, 4
  %34 = call ptr @realloc(ptr %30, i64 %33)
  store ptr %34, ptr %24, align 8
  %35 = load i64, ptr %memberidx.i.i.i452, align 4
  %36 = icmp slt i64 %35, %27
  br i1 %36, label %while.entry.i.i.i453, label %TypeChecker_error.exit454.loopexit

TypeChecker_error.exit454.loopexit:               ; preds = %while.entry.i.i.i453
  %.pre533 = load i64, ptr %memberidx.i.i451, align 4
  %.pre549 = add nsw i64 %.pre533, 1
  br label %TypeChecker_error.exit454

TypeChecker_error.exit454:                        ; preds = %if.entry15, %TypeChecker_error.exit454.loopexit
  %.pre-phi550 = phi i64 [ %.pre549, %TypeChecker_error.exit454.loopexit ], [ %27, %if.entry15 ]
  %37 = phi ptr [ %34, %TypeChecker_error.exit454.loopexit ], [ %.pre532, %if.entry15 ]
  %38 = phi i64 [ %.pre533, %TypeChecker_error.exit454.loopexit ], [ %26, %if.entry15 ]
  store i64 %.pre-phi550, ptr %memberidx.i.i451, align 4
  %39 = getelementptr inbounds ptr, ptr %37, i64 %38
  store ptr %25, ptr %39, align 8
  br label %common.ret

ifend17:                                          ; preds = %ifend13
  %memberidx21 = getelementptr inbounds %IntType, ptr %15, i64 0, i32 1
  %40 = load i1, ptr %memberidx21, align 1
  %41 = icmp ne i64 %16, 6
  %42 = or i1 %41, %40
  br i1 %42, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %ifend17
  %43 = call ptr @malloc(i32 23)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(23) %43, ptr noundef nonnull align 8 dereferenceable(23) @159, i64 23, i1 false)
  %44 = call ptr @malloc(i32 24)
  store ptr %43, ptr %44, align 8
  %memberidx1.i.i455 = getelementptr inbounds %String, ptr %44, i64 0, i32 1
  store i64 23, ptr %memberidx1.i.i455, align 4
  %memberidx2.i.i456 = getelementptr inbounds %String, ptr %44, i64 0, i32 2
  store i64 23, ptr %memberidx2.i.i456, align 4
  %45 = load ptr, ptr %memberidx10, align 8
  %46 = load ptr, ptr %45, align 8
  %47 = load ptr, ptr %memberidx.i442, align 8
  %memberidx1.i458 = getelementptr inbounds %Compiler, ptr %47, i64 0, i32 5
  %48 = load ptr, ptr %memberidx1.i458, align 8
  %49 = call ptr @malloc(i32 24)
  store i64 4, ptr %49, align 4
  %memberidx1.i.i459 = getelementptr inbounds %FloError, ptr %49, i64 0, i32 2
  store ptr %46, ptr %memberidx1.i.i459, align 8
  %memberidx2.i.i460 = getelementptr inbounds %FloError, ptr %49, i64 0, i32 1
  store ptr %44, ptr %memberidx2.i.i460, align 8
  %memberidx.i.i461 = getelementptr inbounds %Array_FloError_, ptr %48, i64 0, i32 1
  %50 = load i64, ptr %memberidx.i.i461, align 4
  %51 = add i64 %50, 1
  %memberidx.i.i.i462 = getelementptr inbounds %Array_FloError_, ptr %48, i64 0, i32 2
  %52 = load i64, ptr %memberidx.i.i.i462, align 4
  %53 = icmp slt i64 %52, %51
  %.pre541 = load ptr, ptr %48, align 8
  br i1 %53, label %while.entry.i.i.i463, label %TypeChecker_error.exit464

while.entry.i.i.i463:                             ; preds = %if.entry23, %while.entry.i.i.i463
  %54 = phi ptr [ %58, %while.entry.i.i.i463 ], [ %.pre541, %if.entry23 ]
  %55 = phi i64 [ %59, %while.entry.i.i.i463 ], [ %52, %if.entry23 ]
  %56 = shl nuw i64 %55, 1
  store i64 %56, ptr %memberidx.i.i.i462, align 4
  %57 = shl i64 %55, 4
  %58 = call ptr @realloc(ptr %54, i64 %57)
  store ptr %58, ptr %48, align 8
  %59 = load i64, ptr %memberidx.i.i.i462, align 4
  %60 = icmp slt i64 %59, %51
  br i1 %60, label %while.entry.i.i.i463, label %TypeChecker_error.exit464.loopexit

TypeChecker_error.exit464.loopexit:               ; preds = %while.entry.i.i.i463
  %.pre542 = load i64, ptr %memberidx.i.i461, align 4
  %.pre544 = add nsw i64 %.pre542, 1
  br label %TypeChecker_error.exit464

TypeChecker_error.exit464:                        ; preds = %if.entry23, %TypeChecker_error.exit464.loopexit
  %.pre-phi = phi i64 [ %.pre544, %TypeChecker_error.exit464.loopexit ], [ %51, %if.entry23 ]
  %61 = phi ptr [ %58, %TypeChecker_error.exit464.loopexit ], [ %.pre541, %if.entry23 ]
  %62 = phi i64 [ %.pre542, %TypeChecker_error.exit464.loopexit ], [ %50, %if.entry23 ]
  store i64 %.pre-phi, ptr %memberidx.i.i461, align 4
  %63 = getelementptr inbounds ptr, ptr %61, i64 %62
  store ptr %49, ptr %63, align 8
  br label %common.ret

ifend25:                                          ; preds = %ifend17
  %memberidx28 = getelementptr inbounds %Expression, ptr %9, i64 0, i32 1
  %64 = load i1, ptr %memberidx28, align 1
  br i1 %64, label %ifend31, label %if.entry29

if.entry29:                                       ; preds = %ifend25
  %65 = call ptr @malloc(i32 30)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(30) %65, ptr noundef nonnull align 8 dereferenceable(30) @160, i64 30, i1 false)
  %66 = call ptr @malloc(i32 24)
  store ptr %65, ptr %66, align 8
  %memberidx1.i.i465 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  store i64 30, ptr %memberidx1.i.i465, align 4
  %memberidx2.i.i466 = getelementptr inbounds %String, ptr %66, i64 0, i32 2
  store i64 30, ptr %memberidx2.i.i466, align 4
  %67 = load ptr, ptr %memberidx10, align 8
  %68 = load ptr, ptr %67, align 8
  %69 = load ptr, ptr %memberidx.i442, align 8
  %memberidx1.i468 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 5
  %70 = load ptr, ptr %memberidx1.i468, align 8
  %71 = call ptr @malloc(i32 24)
  store i64 4, ptr %71, align 4
  %memberidx1.i.i469 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 2
  store ptr %68, ptr %memberidx1.i.i469, align 8
  %memberidx2.i.i470 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 1
  store ptr %66, ptr %memberidx2.i.i470, align 8
  %memberidx.i.i471 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i.i471, align 4
  %73 = add i64 %72, 1
  %memberidx.i.i.i472 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i.i472, align 4
  %75 = icmp slt i64 %74, %73
  %.pre535 = load ptr, ptr %70, align 8
  br i1 %75, label %while.entry.i.i.i473, label %TypeChecker_error.exit474

while.entry.i.i.i473:                             ; preds = %if.entry29, %while.entry.i.i.i473
  %76 = phi ptr [ %80, %while.entry.i.i.i473 ], [ %.pre535, %if.entry29 ]
  %77 = phi i64 [ %81, %while.entry.i.i.i473 ], [ %74, %if.entry29 ]
  %78 = shl nuw i64 %77, 1
  store i64 %78, ptr %memberidx.i.i.i472, align 4
  %79 = shl i64 %77, 4
  %80 = call ptr @realloc(ptr %76, i64 %79)
  store ptr %80, ptr %70, align 8
  %81 = load i64, ptr %memberidx.i.i.i472, align 4
  %82 = icmp slt i64 %81, %73
  br i1 %82, label %while.entry.i.i.i473, label %TypeChecker_error.exit474.loopexit

TypeChecker_error.exit474.loopexit:               ; preds = %while.entry.i.i.i473
  %.pre536 = load i64, ptr %memberidx.i.i471, align 4
  %.pre547 = add nsw i64 %.pre536, 1
  br label %TypeChecker_error.exit474

TypeChecker_error.exit474:                        ; preds = %if.entry29, %TypeChecker_error.exit474.loopexit
  %.pre-phi548 = phi i64 [ %.pre547, %TypeChecker_error.exit474.loopexit ], [ %73, %if.entry29 ]
  %83 = phi ptr [ %80, %TypeChecker_error.exit474.loopexit ], [ %.pre535, %if.entry29 ]
  %84 = phi i64 [ %.pre536, %TypeChecker_error.exit474.loopexit ], [ %72, %if.entry29 ]
  store i64 %.pre-phi548, ptr %memberidx.i.i471, align 4
  %85 = getelementptr inbounds ptr, ptr %83, i64 %84
  store ptr %71, ptr %85, align 8
  br label %common.ret

ifend31:                                          ; preds = %ifend25
  %86 = load ptr, ptr %0, align 8
  %87 = call fastcc i64 @evaluate_const_int_expression(ptr %86, ptr nonnull %9)
  %88 = icmp slt i64 %87, 0
  br i1 %88, label %if.entry35, label %ifend37

if.entry35:                                       ; preds = %ifend31
  %89 = call ptr @malloc(i32 28)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %89, ptr noundef nonnull align 8 dereferenceable(28) @161, i64 28, i1 false)
  %90 = call ptr @malloc(i32 24)
  store ptr %89, ptr %90, align 8
  %memberidx1.i.i475 = getelementptr inbounds %String, ptr %90, i64 0, i32 1
  store i64 28, ptr %memberidx1.i.i475, align 4
  %memberidx2.i.i476 = getelementptr inbounds %String, ptr %90, i64 0, i32 2
  store i64 28, ptr %memberidx2.i.i476, align 4
  %91 = load ptr, ptr %memberidx10, align 8
  %92 = load ptr, ptr %91, align 8
  %93 = load ptr, ptr %memberidx.i442, align 8
  %memberidx1.i478 = getelementptr inbounds %Compiler, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx1.i478, align 8
  %95 = call ptr @malloc(i32 24)
  store i64 4, ptr %95, align 4
  %memberidx1.i.i479 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 2
  store ptr %92, ptr %memberidx1.i.i479, align 8
  %memberidx2.i.i480 = getelementptr inbounds %FloError, ptr %95, i64 0, i32 1
  store ptr %90, ptr %memberidx2.i.i480, align 8
  %memberidx.i.i481 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %96 = load i64, ptr %memberidx.i.i481, align 4
  %97 = add i64 %96, 1
  %memberidx.i.i.i482 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 2
  %98 = load i64, ptr %memberidx.i.i.i482, align 4
  %99 = icmp slt i64 %98, %97
  %.pre538 = load ptr, ptr %94, align 8
  br i1 %99, label %while.entry.i.i.i483, label %TypeChecker_error.exit484

while.entry.i.i.i483:                             ; preds = %if.entry35, %while.entry.i.i.i483
  %100 = phi ptr [ %104, %while.entry.i.i.i483 ], [ %.pre538, %if.entry35 ]
  %101 = phi i64 [ %105, %while.entry.i.i.i483 ], [ %98, %if.entry35 ]
  %102 = shl nuw i64 %101, 1
  store i64 %102, ptr %memberidx.i.i.i482, align 4
  %103 = shl i64 %101, 4
  %104 = call ptr @realloc(ptr %100, i64 %103)
  store ptr %104, ptr %94, align 8
  %105 = load i64, ptr %memberidx.i.i.i482, align 4
  %106 = icmp slt i64 %105, %97
  br i1 %106, label %while.entry.i.i.i483, label %TypeChecker_error.exit484.loopexit

TypeChecker_error.exit484.loopexit:               ; preds = %while.entry.i.i.i483
  %.pre539 = load i64, ptr %memberidx.i.i481, align 4
  %.pre545 = add nsw i64 %.pre539, 1
  br label %TypeChecker_error.exit484

TypeChecker_error.exit484:                        ; preds = %if.entry35, %TypeChecker_error.exit484.loopexit
  %.pre-phi546 = phi i64 [ %.pre545, %TypeChecker_error.exit484.loopexit ], [ %97, %if.entry35 ]
  %107 = phi ptr [ %104, %TypeChecker_error.exit484.loopexit ], [ %.pre538, %if.entry35 ]
  %108 = phi i64 [ %.pre539, %TypeChecker_error.exit484.loopexit ], [ %96, %if.entry35 ]
  store i64 %.pre-phi546, ptr %memberidx.i.i481, align 4
  %109 = getelementptr inbounds ptr, ptr %107, i64 %108
  store ptr %95, ptr %109, align 8
  br label %common.ret

ifend37:                                          ; preds = %ifend31
  %memberidx40 = getelementptr inbounds %ArrayTypeNode, ptr %1, i64 0, i32 2
  %110 = load ptr, ptr %memberidx40, align 8
  %111 = call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr %110)
  %112 = tail call ptr @malloc(i32 24)
  store i64 14, ptr %112, align 4
  %memberidx.i487 = getelementptr inbounds %ArrayType, ptr %112, i64 0, i32 1
  store ptr %111, ptr %memberidx.i487, align 8
  %memberidx1.i488 = getelementptr inbounds %ArrayType, ptr %112, i64 0, i32 2
  store i64 %87, ptr %memberidx1.i488, align 4
  br label %common.ret

if.entry42:                                       ; preds = %2
  %113 = tail call ptr @malloc(i32 24)
  %memberidx.i485 = getelementptr inbounds %Array_Type_, ptr %113, i64 0, i32 1
  store i64 0, ptr %memberidx.i485, align 4
  %memberidx1.i486 = getelementptr inbounds %Array_Type_, ptr %113, i64 0, i32 2
  store i64 8, ptr %memberidx1.i486, align 4
  %114 = tail call ptr @malloc(i32 64)
  store ptr %114, ptr %113, align 8
  store i64 0, ptr %memberidx.i485, align 4
  %memberidx47 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 2
  %115 = load ptr, ptr %memberidx47, align 8
  %116 = tail call ptr @malloc(i32 25)
  %117 = load ptr, ptr %115, align 8
  %memberidx1.i438 = getelementptr inbounds %Array_TypeNode_, ptr %115, i64 0, i32 1
  %118 = load i64, ptr %memberidx1.i438, align 4
  store i1 false, ptr %116, align 1
  %memberidx1.i.i439 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %116, i64 0, i32 1
  %memberidx2.i.i440 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %116, i64 0, i32 3
  store ptr %117, ptr %memberidx2.i.i440, align 8
  %memberidx3.i.i441 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %116, i64 0, i32 2
  store i64 %118, ptr %memberidx3.i.i441, align 4
  store i64 1, ptr %memberidx1.i.i439, align 4
  %119 = icmp slt i64 %118, 1
  br i1 %119, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry42, %Array_Type____sl__.exit432
  %120 = phi i64 [ %136, %Array_Type____sl__.exit432 ], [ 1, %if.entry42 ]
  %arg.0512.in = phi ptr [ %137, %Array_Type____sl__.exit432 ], [ %117, %if.entry42 ]
  %arg.0512 = load ptr, ptr %arg.0512.in, align 8
  %121 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %arg.0512)
  %122 = load i64, ptr %memberidx.i485, align 4
  %123 = add i64 %122, 1
  %124 = load i64, ptr %memberidx1.i486, align 4
  %125 = icmp slt i64 %124, %123
  %.pre529 = load ptr, ptr %113, align 8
  br i1 %125, label %while.entry.i.i431, label %Array_Type____sl__.exit432

while.entry.i.i431:                               ; preds = %for.body, %while.entry.i.i431
  %126 = phi ptr [ %130, %while.entry.i.i431 ], [ %.pre529, %for.body ]
  %127 = phi i64 [ %131, %while.entry.i.i431 ], [ %124, %for.body ]
  %128 = shl nuw i64 %127, 1
  store i64 %128, ptr %memberidx1.i486, align 4
  %129 = shl i64 %127, 4
  %130 = tail call ptr @realloc(ptr %126, i64 %129)
  store ptr %130, ptr %113, align 8
  %131 = load i64, ptr %memberidx1.i486, align 4
  %132 = icmp slt i64 %131, %123
  br i1 %132, label %while.entry.i.i431, label %Array_Type____sl__.exit432.loopexit

Array_Type____sl__.exit432.loopexit:              ; preds = %while.entry.i.i431
  %.pre530 = load i64, ptr %memberidx.i485, align 4
  %.pre551 = add nsw i64 %.pre530, 1
  br label %Array_Type____sl__.exit432

Array_Type____sl__.exit432:                       ; preds = %for.body, %Array_Type____sl__.exit432.loopexit
  %.pre-phi552 = phi i64 [ %.pre551, %Array_Type____sl__.exit432.loopexit ], [ %123, %for.body ]
  %133 = phi ptr [ %130, %Array_Type____sl__.exit432.loopexit ], [ %.pre529, %for.body ]
  %134 = phi i64 [ %.pre530, %Array_Type____sl__.exit432.loopexit ], [ %122, %for.body ]
  store i64 %.pre-phi552, ptr %memberidx.i485, align 4
  %135 = getelementptr inbounds ptr, ptr %133, i64 %134
  store ptr %121, ptr %135, align 8
  %136 = add nuw nsw i64 %120, 1
  store i64 %136, ptr %memberidx1.i.i439, align 4
  %137 = getelementptr inbounds ptr, ptr %117, i64 %120
  %.not561 = icmp slt i64 %120, %118
  br i1 %.not561, label %for.body, label %for.end

for.end:                                          ; preds = %Array_Type____sl__.exit432, %if.entry42
  tail call void @free(ptr nonnull %116)
  %memberidx49 = getelementptr inbounds %FunctionTypeNode, ptr %1, i64 0, i32 3
  %138 = load ptr, ptr %memberidx49, align 8
  %139 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %138)
  %140 = tail call ptr @malloc(i32 25)
  store i64 16, ptr %140, align 4
  %memberidx.i424 = getelementptr inbounds %FunctionType, ptr %140, i64 0, i32 1
  store ptr %113, ptr %memberidx.i424, align 8
  %memberidx1.i425 = getelementptr inbounds %FunctionType, ptr %140, i64 0, i32 2
  store ptr %139, ptr %memberidx1.i425, align 8
  br label %common.ret

if.entry51:                                       ; preds = %2
  %141 = tail call ptr @malloc(i32 16)
  store i64 15, ptr %141, align 4
  %memberidx.i420 = getelementptr inbounds %TupleType, ptr %141, i64 0, i32 1
  %142 = tail call ptr @malloc(i32 24)
  %memberidx.i.i421 = getelementptr inbounds %Array_Type_, ptr %142, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i421, align 4
  %memberidx1.i.i422 = getelementptr inbounds %Array_Type_, ptr %142, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i422, align 4
  %143 = tail call ptr @malloc(i32 64)
  store ptr %143, ptr %142, align 8
  store i64 0, ptr %memberidx.i.i421, align 4
  store ptr %142, ptr %memberidx.i420, align 8
  %memberidx55 = getelementptr inbounds %TupleTypeNode, ptr %1, i64 0, i32 2
  %144 = load ptr, ptr %memberidx55, align 8
  %145 = tail call ptr @malloc(i32 25)
  %146 = load ptr, ptr %144, align 8
  %memberidx1.i416 = getelementptr inbounds %Array_TypeNode_, ptr %144, i64 0, i32 1
  %147 = load i64, ptr %memberidx1.i416, align 4
  store i1 false, ptr %145, align 1
  %memberidx1.i.i417 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %145, i64 0, i32 1
  %memberidx2.i.i418 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %145, i64 0, i32 3
  store ptr %146, ptr %memberidx2.i.i418, align 8
  %memberidx3.i.i419 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %145, i64 0, i32 2
  store i64 %147, ptr %memberidx3.i.i419, align 4
  store i64 1, ptr %memberidx1.i.i417, align 4
  %148 = icmp slt i64 %147, 1
  br i1 %148, label %for.end59, label %for.body57

for.body57:                                       ; preds = %if.entry51, %Array_Type____sl__.exit412
  %149 = phi i64 [ %165, %Array_Type____sl__.exit412 ], [ 1, %if.entry51 ]
  %element_type1.0514.in = phi ptr [ %166, %Array_Type____sl__.exit412 ], [ %146, %if.entry51 ]
  %element_type1.0514 = load ptr, ptr %element_type1.0514.in, align 8
  %150 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %element_type1.0514)
  %151 = load i64, ptr %memberidx.i.i421, align 4
  %152 = add i64 %151, 1
  %153 = load i64, ptr %memberidx1.i.i422, align 4
  %154 = icmp slt i64 %153, %152
  %.pre526 = load ptr, ptr %142, align 8
  br i1 %154, label %while.entry.i.i411, label %Array_Type____sl__.exit412

while.entry.i.i411:                               ; preds = %for.body57, %while.entry.i.i411
  %155 = phi ptr [ %159, %while.entry.i.i411 ], [ %.pre526, %for.body57 ]
  %156 = phi i64 [ %160, %while.entry.i.i411 ], [ %153, %for.body57 ]
  %157 = shl nuw i64 %156, 1
  store i64 %157, ptr %memberidx1.i.i422, align 4
  %158 = shl i64 %156, 4
  %159 = tail call ptr @realloc(ptr %155, i64 %158)
  store ptr %159, ptr %142, align 8
  %160 = load i64, ptr %memberidx1.i.i422, align 4
  %161 = icmp slt i64 %160, %152
  br i1 %161, label %while.entry.i.i411, label %Array_Type____sl__.exit412.loopexit

Array_Type____sl__.exit412.loopexit:              ; preds = %while.entry.i.i411
  %.pre527 = load i64, ptr %memberidx.i.i421, align 4
  %.pre553 = add nsw i64 %.pre527, 1
  br label %Array_Type____sl__.exit412

Array_Type____sl__.exit412:                       ; preds = %for.body57, %Array_Type____sl__.exit412.loopexit
  %.pre-phi554 = phi i64 [ %.pre553, %Array_Type____sl__.exit412.loopexit ], [ %152, %for.body57 ]
  %162 = phi ptr [ %159, %Array_Type____sl__.exit412.loopexit ], [ %.pre526, %for.body57 ]
  %163 = phi i64 [ %.pre527, %Array_Type____sl__.exit412.loopexit ], [ %151, %for.body57 ]
  store i64 %.pre-phi554, ptr %memberidx.i.i421, align 4
  %164 = getelementptr inbounds ptr, ptr %162, i64 %163
  store ptr %150, ptr %164, align 8
  %165 = add nuw nsw i64 %149, 1
  store i64 %165, ptr %memberidx1.i.i417, align 4
  %166 = getelementptr inbounds ptr, ptr %146, i64 %149
  %.not560 = icmp slt i64 %149, %147
  br i1 %.not560, label %for.body57, label %for.end59

for.end59:                                        ; preds = %Array_Type____sl__.exit412, %if.entry51
  tail call void @free(ptr nonnull %145)
  br label %common.ret

if.entry63:                                       ; preds = %2
  %167 = tail call ptr @malloc(i32 24)
  %memberidx.i404 = getelementptr inbounds %Array_Type_, ptr %167, i64 0, i32 1
  store i64 0, ptr %memberidx.i404, align 4
  %memberidx1.i405 = getelementptr inbounds %Array_Type_, ptr %167, i64 0, i32 2
  store i64 8, ptr %memberidx1.i405, align 4
  %168 = tail call ptr @malloc(i32 64)
  store ptr %168, ptr %167, align 8
  store i64 0, ptr %memberidx.i404, align 4
  %memberidx68 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 2
  %169 = load ptr, ptr %memberidx68, align 8
  %memberidx69 = getelementptr inbounds %IdentifierToken, ptr %169, i64 0, i32 2
  %170 = load ptr, ptr %memberidx69, align 8
  %171 = tail call ptr @malloc(i32 4)
  store i32 1819242338, ptr %171, align 8
  %172 = tail call ptr @malloc(i32 24)
  store ptr %171, ptr %172, align 8
  %memberidx1.i.i402 = getelementptr inbounds %String, ptr %172, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i402, align 4
  %memberidx2.i.i403 = getelementptr inbounds %String, ptr %172, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i403, align 4
  %memberidx.i396 = getelementptr inbounds %String, ptr %170, i64 0, i32 1
  %173 = load i64, ptr %memberidx.i396, align 4
  %.not.i398 = icmp eq i64 %173, 4
  br i1 %.not.i398, label %ifend.i400, label %ifend72

ifend.i400:                                       ; preds = %if.entry63
  %174 = load ptr, ptr %170, align 8
  %175 = tail call i64 @memcmp(ptr %174, ptr nonnull %171, i64 4)
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %if.entry70, label %ifend72

ifend65:                                          ; preds = %2
  %177 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %177, align 4
  br label %common.ret

if.entry70:                                       ; preds = %ifend.i400
  %178 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %178, align 4
  br label %common.ret

ifend72:                                          ; preds = %if.entry63, %ifend.i400
  %179 = tail call ptr @malloc(i32 2)
  store i16 13429, ptr %179, align 8
  %180 = tail call ptr @malloc(i32 24)
  store ptr %179, ptr %180, align 8
  %memberidx1.i.i394 = getelementptr inbounds %String, ptr %180, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i394, align 4
  %memberidx2.i.i395 = getelementptr inbounds %String, ptr %180, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i395, align 4
  %181 = load i64, ptr %memberidx.i396, align 4
  %.not.i390 = icmp eq i64 %181, 2
  br i1 %.not.i390, label %ifend.i392, label %ifend75

ifend.i392:                                       ; preds = %ifend72
  %182 = load ptr, ptr %170, align 8
  %183 = tail call i64 @memcmp(ptr %182, ptr nonnull %179, i64 2)
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %if.entry73, label %ifend75

if.entry73:                                       ; preds = %ifend.i392
  %185 = tail call ptr @malloc(i32 9)
  store i64 1, ptr %185, align 4
  %memberidx.i387 = getelementptr inbounds %IntType, ptr %185, i64 0, i32 1
  store i1 false, ptr %memberidx.i387, align 1
  br label %common.ret

ifend75:                                          ; preds = %ifend72, %ifend.i392
  %186 = tail call ptr @malloc(i32 2)
  store i16 14453, ptr %186, align 8
  %187 = tail call ptr @malloc(i32 24)
  store ptr %186, ptr %187, align 8
  %memberidx1.i.i385 = getelementptr inbounds %String, ptr %187, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i385, align 4
  %memberidx2.i.i386 = getelementptr inbounds %String, ptr %187, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i386, align 4
  %188 = load i64, ptr %memberidx.i396, align 4
  %.not.i381 = icmp eq i64 %188, 2
  br i1 %.not.i381, label %ifend.i383, label %ifend78

ifend.i383:                                       ; preds = %ifend75
  %189 = load ptr, ptr %170, align 8
  %190 = tail call i64 @memcmp(ptr %189, ptr nonnull %186, i64 2)
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %if.entry76, label %ifend78

if.entry76:                                       ; preds = %ifend.i383
  %192 = tail call ptr @malloc(i32 9)
  store i64 2, ptr %192, align 4
  %memberidx.i378 = getelementptr inbounds %IntType, ptr %192, i64 0, i32 1
  store i1 false, ptr %memberidx.i378, align 1
  br label %common.ret

ifend78:                                          ; preds = %ifend75, %ifend.i383
  %193 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %193, ptr noundef nonnull align 8 dereferenceable(3) @162, i64 3, i1 false)
  %194 = tail call ptr @malloc(i32 24)
  store ptr %193, ptr %194, align 8
  %memberidx1.i.i376 = getelementptr inbounds %String, ptr %194, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i376, align 4
  %memberidx2.i.i377 = getelementptr inbounds %String, ptr %194, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i377, align 4
  %195 = load i64, ptr %memberidx.i396, align 4
  %.not.i372 = icmp eq i64 %195, 3
  br i1 %.not.i372, label %ifend.i374, label %ifend81

ifend.i374:                                       ; preds = %ifend78
  %196 = load ptr, ptr %170, align 8
  %197 = tail call i64 @memcmp(ptr %196, ptr nonnull %193, i64 3)
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %if.entry79, label %ifend81

if.entry79:                                       ; preds = %ifend.i374
  %199 = tail call ptr @malloc(i32 9)
  store i64 3, ptr %199, align 4
  %memberidx.i369 = getelementptr inbounds %IntType, ptr %199, i64 0, i32 1
  store i1 false, ptr %memberidx.i369, align 1
  br label %common.ret

ifend81:                                          ; preds = %ifend78, %ifend.i374
  %200 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %200, ptr noundef nonnull align 8 dereferenceable(3) @163, i64 3, i1 false)
  %201 = tail call ptr @malloc(i32 24)
  store ptr %200, ptr %201, align 8
  %memberidx1.i.i367 = getelementptr inbounds %String, ptr %201, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i367, align 4
  %memberidx2.i.i368 = getelementptr inbounds %String, ptr %201, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i368, align 4
  %202 = load i64, ptr %memberidx.i396, align 4
  %.not.i363 = icmp eq i64 %202, 3
  br i1 %.not.i363, label %ifend.i365, label %ifend84

ifend.i365:                                       ; preds = %ifend81
  %203 = load ptr, ptr %170, align 8
  %204 = tail call i64 @memcmp(ptr %203, ptr nonnull %200, i64 3)
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %if.entry82, label %ifend84

if.entry82:                                       ; preds = %ifend.i365
  %206 = tail call ptr @malloc(i32 9)
  store i64 4, ptr %206, align 4
  %memberidx.i360 = getelementptr inbounds %IntType, ptr %206, i64 0, i32 1
  store i1 false, ptr %memberidx.i360, align 1
  br label %common.ret

ifend84:                                          ; preds = %ifend81, %ifend.i365
  %207 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %207, ptr noundef nonnull align 8 dereferenceable(3) @164, i64 3, i1 false)
  %208 = tail call ptr @malloc(i32 24)
  store ptr %207, ptr %208, align 8
  %memberidx1.i.i358 = getelementptr inbounds %String, ptr %208, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i358, align 4
  %memberidx2.i.i359 = getelementptr inbounds %String, ptr %208, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i359, align 4
  %209 = load i64, ptr %memberidx.i396, align 4
  %.not.i354 = icmp eq i64 %209, 3
  br i1 %.not.i354, label %ifend.i356, label %ifend87

ifend.i356:                                       ; preds = %ifend84
  %210 = load ptr, ptr %170, align 8
  %211 = tail call i64 @memcmp(ptr %210, ptr nonnull %207, i64 3)
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %if.entry85, label %ifend87

if.entry85:                                       ; preds = %ifend.i356
  %213 = tail call ptr @malloc(i32 9)
  store i64 5, ptr %213, align 4
  %memberidx.i351 = getelementptr inbounds %IntType, ptr %213, i64 0, i32 1
  store i1 false, ptr %memberidx.i351, align 1
  br label %common.ret

ifend87:                                          ; preds = %ifend84, %ifend.i356
  %214 = tail call ptr @malloc(i32 4)
  store i32 942813557, ptr %214, align 8
  %215 = tail call ptr @malloc(i32 24)
  store ptr %214, ptr %215, align 8
  %memberidx1.i.i349 = getelementptr inbounds %String, ptr %215, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i349, align 4
  %memberidx2.i.i350 = getelementptr inbounds %String, ptr %215, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i350, align 4
  %216 = load i64, ptr %memberidx.i396, align 4
  %.not.i345 = icmp eq i64 %216, 4
  br i1 %.not.i345, label %ifend.i347, label %ifend90

ifend.i347:                                       ; preds = %ifend87
  %217 = load ptr, ptr %170, align 8
  %218 = tail call i64 @memcmp(ptr %217, ptr nonnull %214, i64 4)
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %if.entry88, label %ifend90

if.entry88:                                       ; preds = %ifend.i347
  %220 = tail call ptr @malloc(i32 9)
  store i64 7, ptr %220, align 4
  %memberidx.i342 = getelementptr inbounds %IntType, ptr %220, i64 0, i32 1
  store i1 false, ptr %memberidx.i342, align 1
  br label %common.ret

ifend90:                                          ; preds = %ifend87, %ifend.i347
  %221 = tail call ptr @malloc(i32 4)
  store i32 1953393013, ptr %221, align 8
  %222 = tail call ptr @malloc(i32 24)
  store ptr %221, ptr %222, align 8
  %memberidx1.i.i340 = getelementptr inbounds %String, ptr %222, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i340, align 4
  %memberidx2.i.i341 = getelementptr inbounds %String, ptr %222, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i341, align 4
  %223 = load i64, ptr %memberidx.i396, align 4
  %.not.i336 = icmp eq i64 %223, 4
  br i1 %.not.i336, label %ifend.i338, label %ifend93

ifend.i338:                                       ; preds = %ifend90
  %224 = load ptr, ptr %170, align 8
  %225 = tail call i64 @memcmp(ptr %224, ptr nonnull %221, i64 4)
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %if.entry91, label %ifend93

if.entry91:                                       ; preds = %ifend.i338
  %227 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %227, align 4
  %memberidx.i333 = getelementptr inbounds %IntType, ptr %227, i64 0, i32 1
  store i1 false, ptr %memberidx.i333, align 1
  br label %common.ret

ifend93:                                          ; preds = %ifend90, %ifend.i338
  %228 = tail call ptr @malloc(i32 2)
  store i16 13417, ptr %228, align 8
  %229 = tail call ptr @malloc(i32 24)
  store ptr %228, ptr %229, align 8
  %memberidx1.i.i331 = getelementptr inbounds %String, ptr %229, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i331, align 4
  %memberidx2.i.i332 = getelementptr inbounds %String, ptr %229, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i332, align 4
  %230 = load i64, ptr %memberidx.i396, align 4
  %.not.i327 = icmp eq i64 %230, 2
  br i1 %.not.i327, label %ifend.i329, label %ifend96

ifend.i329:                                       ; preds = %ifend93
  %231 = load ptr, ptr %170, align 8
  %232 = tail call i64 @memcmp(ptr %231, ptr nonnull %228, i64 2)
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %if.entry94, label %ifend96

if.entry94:                                       ; preds = %ifend.i329
  %234 = tail call ptr @malloc(i32 9)
  store i64 1, ptr %234, align 4
  %memberidx.i324 = getelementptr inbounds %IntType, ptr %234, i64 0, i32 1
  store i1 true, ptr %memberidx.i324, align 1
  br label %common.ret

ifend96:                                          ; preds = %ifend93, %ifend.i329
  %235 = tail call ptr @malloc(i32 2)
  store i16 14441, ptr %235, align 8
  %236 = tail call ptr @malloc(i32 24)
  store ptr %235, ptr %236, align 8
  %memberidx1.i.i322 = getelementptr inbounds %String, ptr %236, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i322, align 4
  %memberidx2.i.i323 = getelementptr inbounds %String, ptr %236, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i323, align 4
  %237 = load i64, ptr %memberidx.i396, align 4
  %.not.i318 = icmp eq i64 %237, 2
  br i1 %.not.i318, label %ifend.i320, label %ifend99

ifend.i320:                                       ; preds = %ifend96
  %238 = load ptr, ptr %170, align 8
  %239 = tail call i64 @memcmp(ptr %238, ptr nonnull %235, i64 2)
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %if.entry97, label %ifend99

if.entry97:                                       ; preds = %ifend.i320
  %241 = tail call ptr @malloc(i32 9)
  store i64 2, ptr %241, align 4
  %memberidx.i315 = getelementptr inbounds %IntType, ptr %241, i64 0, i32 1
  store i1 true, ptr %memberidx.i315, align 1
  br label %common.ret

ifend99:                                          ; preds = %ifend96, %ifend.i320
  %242 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %242, ptr noundef nonnull align 8 dereferenceable(3) @165, i64 3, i1 false)
  %243 = tail call ptr @malloc(i32 24)
  store ptr %242, ptr %243, align 8
  %memberidx1.i.i313 = getelementptr inbounds %String, ptr %243, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i313, align 4
  %memberidx2.i.i314 = getelementptr inbounds %String, ptr %243, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i314, align 4
  %244 = load i64, ptr %memberidx.i396, align 4
  %.not.i309 = icmp eq i64 %244, 3
  br i1 %.not.i309, label %ifend.i311, label %ifend102

ifend.i311:                                       ; preds = %ifend99
  %245 = load ptr, ptr %170, align 8
  %246 = tail call i64 @memcmp(ptr %245, ptr nonnull %242, i64 3)
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %if.entry100, label %ifend102

if.entry100:                                      ; preds = %ifend.i311
  %248 = tail call ptr @malloc(i32 9)
  store i64 3, ptr %248, align 4
  %memberidx.i306 = getelementptr inbounds %IntType, ptr %248, i64 0, i32 1
  store i1 true, ptr %memberidx.i306, align 1
  br label %common.ret

ifend102:                                         ; preds = %ifend99, %ifend.i311
  %249 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %249, ptr noundef nonnull align 8 dereferenceable(3) @166, i64 3, i1 false)
  %250 = tail call ptr @malloc(i32 24)
  store ptr %249, ptr %250, align 8
  %memberidx1.i.i304 = getelementptr inbounds %String, ptr %250, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i304, align 4
  %memberidx2.i.i305 = getelementptr inbounds %String, ptr %250, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i305, align 4
  %251 = load i64, ptr %memberidx.i396, align 4
  %.not.i300 = icmp eq i64 %251, 3
  br i1 %.not.i300, label %ifend.i302, label %ifend105

ifend.i302:                                       ; preds = %ifend102
  %252 = load ptr, ptr %170, align 8
  %253 = tail call i64 @memcmp(ptr %252, ptr nonnull %249, i64 3)
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %if.entry103, label %ifend105

if.entry103:                                      ; preds = %ifend.i302
  %255 = tail call ptr @malloc(i32 9)
  store i64 4, ptr %255, align 4
  %memberidx.i297 = getelementptr inbounds %IntType, ptr %255, i64 0, i32 1
  store i1 true, ptr %memberidx.i297, align 1
  br label %common.ret

ifend105:                                         ; preds = %ifend102, %ifend.i302
  %256 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %256, ptr noundef nonnull align 8 dereferenceable(3) @167, i64 3, i1 false)
  %257 = tail call ptr @malloc(i32 24)
  store ptr %256, ptr %257, align 8
  %memberidx1.i.i295 = getelementptr inbounds %String, ptr %257, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i295, align 4
  %memberidx2.i.i296 = getelementptr inbounds %String, ptr %257, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i296, align 4
  %258 = load i64, ptr %memberidx.i396, align 4
  %.not.i291 = icmp eq i64 %258, 3
  br i1 %.not.i291, label %ifend.i293, label %ifend108

ifend.i293:                                       ; preds = %ifend105
  %259 = load ptr, ptr %170, align 8
  %260 = tail call i64 @memcmp(ptr %259, ptr nonnull %256, i64 3)
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %if.entry106, label %ifend108

if.entry106:                                      ; preds = %ifend.i293
  %262 = tail call ptr @malloc(i32 9)
  store i64 5, ptr %262, align 4
  %memberidx.i288 = getelementptr inbounds %IntType, ptr %262, i64 0, i32 1
  store i1 true, ptr %memberidx.i288, align 1
  br label %common.ret

ifend108:                                         ; preds = %ifend105, %ifend.i293
  %263 = tail call ptr @malloc(i32 4)
  store i32 942813545, ptr %263, align 8
  %264 = tail call ptr @malloc(i32 24)
  store ptr %263, ptr %264, align 8
  %memberidx1.i.i286 = getelementptr inbounds %String, ptr %264, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i286, align 4
  %memberidx2.i.i287 = getelementptr inbounds %String, ptr %264, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i287, align 4
  %265 = load i64, ptr %memberidx.i396, align 4
  %.not.i282 = icmp eq i64 %265, 4
  br i1 %.not.i282, label %ifend.i284, label %ifend111

ifend.i284:                                       ; preds = %ifend108
  %266 = load ptr, ptr %170, align 8
  %267 = tail call i64 @memcmp(ptr %266, ptr nonnull %263, i64 4)
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %if.entry109, label %ifend111

if.entry109:                                      ; preds = %ifend.i284
  %269 = tail call ptr @malloc(i32 9)
  store i64 7, ptr %269, align 4
  %memberidx.i279 = getelementptr inbounds %IntType, ptr %269, i64 0, i32 1
  store i1 true, ptr %memberidx.i279, align 1
  br label %common.ret

ifend111:                                         ; preds = %ifend108, %ifend.i284
  %270 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %270, ptr noundef nonnull align 8 dereferenceable(3) @88, i64 3, i1 false)
  %271 = tail call ptr @malloc(i32 24)
  store ptr %270, ptr %271, align 8
  %memberidx1.i.i277 = getelementptr inbounds %String, ptr %271, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i277, align 4
  %memberidx2.i.i278 = getelementptr inbounds %String, ptr %271, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i278, align 4
  %272 = load i64, ptr %memberidx.i396, align 4
  %.not.i273 = icmp eq i64 %272, 3
  br i1 %.not.i273, label %ifend.i275, label %ifend114

ifend.i275:                                       ; preds = %ifend111
  %273 = load ptr, ptr %170, align 8
  %274 = tail call i64 @memcmp(ptr %273, ptr nonnull %270, i64 3)
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %if.entry112, label %ifend114

if.entry112:                                      ; preds = %ifend.i275
  %276 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %276, align 4
  %memberidx.i270 = getelementptr inbounds %IntType, ptr %276, i64 0, i32 1
  store i1 true, ptr %memberidx.i270, align 1
  br label %common.ret

ifend114:                                         ; preds = %ifend111, %ifend.i275
  %277 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %277, ptr noundef nonnull align 8 dereferenceable(3) @95, i64 3, i1 false)
  %278 = tail call ptr @malloc(i32 24)
  store ptr %277, ptr %278, align 8
  %memberidx1.i.i268 = getelementptr inbounds %String, ptr %278, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i268, align 4
  %memberidx2.i.i269 = getelementptr inbounds %String, ptr %278, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i269, align 4
  %279 = load i64, ptr %memberidx.i396, align 4
  %.not.i264 = icmp eq i64 %279, 3
  br i1 %.not.i264, label %ifend.i266, label %ifend117

ifend.i266:                                       ; preds = %ifend114
  %280 = load ptr, ptr %170, align 8
  %281 = tail call i64 @memcmp(ptr %280, ptr nonnull %277, i64 3)
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %if.entry115, label %ifend117

if.entry115:                                      ; preds = %ifend.i266
  %283 = tail call ptr @malloc(i32 8)
  store i64 8, ptr %283, align 4
  br label %common.ret

ifend117:                                         ; preds = %ifend114, %ifend.i266
  %284 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %284, ptr noundef nonnull align 8 dereferenceable(3) @96, i64 3, i1 false)
  %285 = tail call ptr @malloc(i32 24)
  store ptr %284, ptr %285, align 8
  %memberidx1.i.i260 = getelementptr inbounds %String, ptr %285, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i260, align 4
  %memberidx2.i.i261 = getelementptr inbounds %String, ptr %285, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i261, align 4
  %286 = load i64, ptr %memberidx.i396, align 4
  %.not.i256 = icmp eq i64 %286, 3
  br i1 %.not.i256, label %ifend.i258, label %ifend120

ifend.i258:                                       ; preds = %ifend117
  %287 = load ptr, ptr %170, align 8
  %288 = tail call i64 @memcmp(ptr %287, ptr nonnull %284, i64 3)
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %if.entry118, label %ifend120

if.entry118:                                      ; preds = %ifend.i258
  %290 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %290, align 4
  br label %common.ret

ifend120:                                         ; preds = %ifend117, %ifend.i258
  %291 = tail call ptr @malloc(i32 4)
  store i32 1684631414, ptr %291, align 8
  %292 = tail call ptr @malloc(i32 24)
  store ptr %291, ptr %292, align 8
  %memberidx1.i.i252 = getelementptr inbounds %String, ptr %292, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i252, align 4
  %memberidx2.i.i253 = getelementptr inbounds %String, ptr %292, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i253, align 4
  %293 = load i64, ptr %memberidx.i396, align 4
  %.not.i = icmp eq i64 %293, 4
  br i1 %.not.i, label %ifend.i, label %ifend123

ifend.i:                                          ; preds = %ifend120
  %294 = load ptr, ptr %170, align 8
  %295 = tail call i64 @memcmp(ptr %294, ptr nonnull %291, i64 4)
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %if.entry121, label %ifend123

if.entry121:                                      ; preds = %ifend.i
  %297 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %297, align 4
  br label %common.ret

ifend123:                                         ; preds = %ifend120, %ifend.i
  %memberidx124 = getelementptr inbounds %RecordTypeNode, ptr %1, i64 0, i32 3
  %298 = load ptr, ptr %memberidx124, align 8
  %memberidx125 = getelementptr inbounds %Array_TypeNode_, ptr %298, i64 0, i32 1
  %299 = load i64, ptr %memberidx125, align 4
  %300 = icmp sgt i64 %299, 0
  br i1 %300, label %for.entry129, label %ifend128

ifend128:                                         ; preds = %ifend142, %ifend123
  %301 = load ptr, ptr %memberidx69, align 8
  %302 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %301)
  %303 = load i64, ptr %302, align 4
  %304 = icmp eq i64 %303, 21
  br i1 %304, label %if.entry152, label %common.ret

for.entry129:                                     ; preds = %ifend123
  %305 = tail call ptr @malloc(i32 25)
  %306 = load ptr, ptr %298, align 8
  %307 = load i64, ptr %memberidx125, align 4
  store i1 false, ptr %305, align 1
  %memberidx1.i.i248 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %305, i64 0, i32 1
  %memberidx2.i.i249 = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %305, i64 0, i32 3
  store ptr %306, ptr %memberidx2.i.i249, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_TypeNode_, ptr %305, i64 0, i32 2
  store i64 %307, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i248, align 4
  %308 = icmp slt i64 %307, 1
  br i1 %308, label %for.end134, label %for.body132

for.body132:                                      ; preds = %for.entry129, %Array_Type____sl__.exit
  %309 = phi i64 [ %325, %Array_Type____sl__.exit ], [ 1, %for.entry129 ]
  %arg4.0517.in = phi ptr [ %326, %Array_Type____sl__.exit ], [ %306, %for.entry129 ]
  %arg4.0517 = load ptr, ptr %arg4.0517.in, align 8
  %310 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %arg4.0517)
  %311 = load i64, ptr %memberidx.i404, align 4
  %312 = add i64 %311, 1
  %313 = load i64, ptr %memberidx1.i405, align 4
  %314 = icmp slt i64 %313, %312
  %.pre = load ptr, ptr %167, align 8
  br i1 %314, label %while.entry.i.i, label %Array_Type____sl__.exit

while.entry.i.i:                                  ; preds = %for.body132, %while.entry.i.i
  %315 = phi ptr [ %319, %while.entry.i.i ], [ %.pre, %for.body132 ]
  %316 = phi i64 [ %320, %while.entry.i.i ], [ %313, %for.body132 ]
  %317 = shl nuw i64 %316, 1
  store i64 %317, ptr %memberidx1.i405, align 4
  %318 = shl i64 %316, 4
  %319 = tail call ptr @realloc(ptr %315, i64 %318)
  store ptr %319, ptr %167, align 8
  %320 = load i64, ptr %memberidx1.i405, align 4
  %321 = icmp slt i64 %320, %312
  br i1 %321, label %while.entry.i.i, label %Array_Type____sl__.exit.loopexit

Array_Type____sl__.exit.loopexit:                 ; preds = %while.entry.i.i
  %.pre521 = load i64, ptr %memberidx.i404, align 4
  %.pre557 = add nsw i64 %.pre521, 1
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %for.body132, %Array_Type____sl__.exit.loopexit
  %.pre-phi558 = phi i64 [ %.pre557, %Array_Type____sl__.exit.loopexit ], [ %312, %for.body132 ]
  %322 = phi ptr [ %319, %Array_Type____sl__.exit.loopexit ], [ %.pre, %for.body132 ]
  %323 = phi i64 [ %.pre521, %Array_Type____sl__.exit.loopexit ], [ %311, %for.body132 ]
  store i64 %.pre-phi558, ptr %memberidx.i404, align 4
  %324 = getelementptr inbounds ptr, ptr %322, i64 %323
  store ptr %310, ptr %324, align 8
  %325 = add nuw nsw i64 %309, 1
  store i64 %325, ptr %memberidx1.i.i248, align 4
  %326 = getelementptr inbounds ptr, ptr %306, i64 %309
  %.not559 = icmp slt i64 %309, %307
  br i1 %.not559, label %for.body132, label %for.end134

for.end134:                                       ; preds = %Array_Type____sl__.exit, %for.entry129
  tail call void @free(ptr nonnull %305)
  %memberidx.i237 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %327 = load ptr, ptr %memberidx.i237, align 8
  %memberidx1.i238 = getelementptr inbounds %Compiler, ptr %327, i64 0, i32 5
  %328 = load ptr, ptr %memberidx1.i238, align 8
  %memberidx2.i239 = getelementptr inbounds %Array_FloError_, ptr %328, i64 0, i32 1
  %329 = load i64, ptr %memberidx2.i239, align 4
  %330 = icmp sgt i64 %329, 0
  br i1 %330, label %common.ret, label %ifend138

ifend138:                                         ; preds = %for.end134
  %331 = load ptr, ptr %memberidx69, align 8
  %332 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr nonnull %0, ptr %331, ptr nonnull %167)
  %333 = load ptr, ptr %memberidx.i237, align 8
  %memberidx1.i235 = getelementptr inbounds %Compiler, ptr %333, i64 0, i32 5
  %334 = load ptr, ptr %memberidx1.i235, align 8
  %memberidx2.i236 = getelementptr inbounds %Array_FloError_, ptr %334, i64 0, i32 1
  %335 = load i64, ptr %memberidx2.i236, align 4
  %336 = icmp sgt i64 %335, 0
  br i1 %336, label %if.entry140, label %ifend142

if.entry140:                                      ; preds = %ifend138
  %337 = load ptr, ptr %334, align 8
  %338 = load ptr, ptr %337, align 8
  %memberidx145 = getelementptr inbounds %FloError, ptr %338, i64 0, i32 2
  %339 = load ptr, ptr %1, align 8
  store ptr %339, ptr %memberidx145, align 8
  br label %ifend142

ifend142:                                         ; preds = %ifend138, %if.entry140
  %.not = icmp eq ptr %332, null
  br i1 %.not, label %ifend128, label %common.ret

if.entry152:                                      ; preds = %ifend128
  %340 = load i64, ptr %memberidx.i396, align 4
  %341 = trunc i64 %340 to i32
  %342 = add i32 %341, 1
  %343 = tail call ptr @malloc(i32 %342)
  %344 = load ptr, ptr %170, align 8
  %345 = load i64, ptr %memberidx.i396, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %343, ptr align 8 %344, i64 %345, i1 false)
  %346 = getelementptr inbounds i8, ptr %343, i64 %345
  store i8 0, ptr %346, align 1
  %347 = alloca ptr, align 8
  %348 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %347, ptr nonnull @168, ptr %343)
  %349 = load ptr, ptr %347, align 8
  %350 = tail call ptr @malloc(i32 24)
  store ptr %349, ptr %350, align 8
  %memberidx1.i232 = getelementptr inbounds %String, ptr %350, i64 0, i32 1
  store i64 %348, ptr %memberidx1.i232, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %350, i64 0, i32 2
  store i64 %348, ptr %memberidx2.i, align 4
  tail call void @free(ptr %343)
  %memberidx155 = getelementptr inbounds %Token, ptr %169, i64 0, i32 1
  %351 = load ptr, ptr %memberidx155, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %352 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %352, i64 0, i32 5
  %353 = load ptr, ptr %memberidx1.i, align 8
  %354 = call ptr @malloc(i32 24)
  store i64 5, ptr %354, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %354, i64 0, i32 2
  store ptr %351, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %354, i64 0, i32 1
  store ptr %350, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %353, i64 0, i32 1
  %355 = load i64, ptr %memberidx.i.i, align 4
  %356 = add i64 %355, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %353, i64 0, i32 2
  %357 = load i64, ptr %memberidx.i.i.i, align 4
  %358 = icmp slt i64 %357, %356
  %.pre523 = load ptr, ptr %353, align 8
  br i1 %358, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry152, %while.entry.i.i.i
  %359 = phi ptr [ %363, %while.entry.i.i.i ], [ %.pre523, %if.entry152 ]
  %360 = phi i64 [ %364, %while.entry.i.i.i ], [ %357, %if.entry152 ]
  %361 = shl nuw i64 %360, 1
  store i64 %361, ptr %memberidx.i.i.i, align 4
  %362 = shl i64 %360, 4
  %363 = call ptr @realloc(ptr %359, i64 %362)
  store ptr %363, ptr %353, align 8
  %364 = load i64, ptr %memberidx.i.i.i, align 4
  %365 = icmp slt i64 %364, %356
  br i1 %365, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre524 = load i64, ptr %memberidx.i.i, align 4
  %.pre555 = add nsw i64 %.pre524, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry152, %TypeChecker_error.exit.loopexit
  %.pre-phi556 = phi i64 [ %.pre555, %TypeChecker_error.exit.loopexit ], [ %356, %if.entry152 ]
  %366 = phi ptr [ %363, %TypeChecker_error.exit.loopexit ], [ %.pre523, %if.entry152 ]
  %367 = phi i64 [ %.pre524, %TypeChecker_error.exit.loopexit ], [ %355, %if.entry152 ]
  store i64 %.pre-phi556, ptr %memberidx.i.i, align 4
  %368 = getelementptr inbounds ptr, ptr %366, i64 %367
  store ptr %354, ptr %368, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_statement(ptr %0, ptr %1) unnamed_addr {
  %memberidx = getelementptr inbounds %StatementNode, ptr %1, i64 0, i32 1
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 2, label %if.entry6
    i64 3, label %if.entry10
    i64 4, label %if.entry14
    i64 5, label %if.entry18
    i64 6, label %if.entry22
    i64 7, label %if.entry26
    i64 8, label %if.entry30
  ]

common.ret:                                       ; preds = %2, %ifend.i71, %TypeChecker_error.exit.i70, %ifend.i, %TypeChecker_error.exit.i, %ifend61.i, %TypeChecker_error.exit152.i, %TypeChecker_error.exit.i87, %ifend.i80, %else.i, %if.entry30, %if.entry26, %TypeChecker_check_condition.exit, %if.entry6, %if.entry2, %TypeChecker_check_if_stamement.exit
  %common.ret.op = phi ptr [ %21, %TypeChecker_check_if_stamement.exit ], [ %22, %if.entry2 ], [ %23, %if.entry6 ], [ %336, %TypeChecker_check_condition.exit ], [ %381, %if.entry26 ], [ %383, %if.entry30 ], [ null, %TypeChecker_error.exit.i87 ], [ null, %TypeChecker_error.exit152.i ], [ %24, %ifend61.i ], [ null, %else.i ], [ null, %ifend.i80 ], [ null, %TypeChecker_error.exit.i ], [ %358, %ifend.i ], [ null, %TypeChecker_error.exit.i70 ], [ %380, %ifend.i71 ], [ null, %2 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %memberidx.i88 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 2
  %4 = load ptr, ptr %memberidx.i88, align 8
  %5 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %5, align 4
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %5, ptr %4)
  %memberidx.i.i121 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i.i121, align 8
  %memberidx1.i.i122 = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx1.i.i122, align 8
  %memberidx2.i.i123 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx2.i.i123, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %TypeChecker_check_condition.exit135, label %ifend.i126

ifend.i126:                                       ; preds = %if.entry
  %memberidx.i125 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx.i125, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %TypeChecker_check_condition.exit135, label %true_block.i133

true_block.i133:                                  ; preds = %ifend.i126
  %14 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %14, align 4
  %15 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %15, align 4
  %memberidx.i.i.i.i127 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i127, align 4
  %memberidx1.i.i.i.i128 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  %memberidx.i.i.i129 = getelementptr inbounds %TypeCastExpression, ptr %15, i64 0, i32 4
  store ptr %6, ptr %memberidx.i.i.i129, align 8
  %memberidx1.i.i.i130 = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %14, ptr %memberidx1.i.i.i130, align 8
  %memberidx3.i.i.i132 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %16 = load i1, ptr %memberidx3.i.i.i132, align 1
  store i1 %16, ptr %memberidx1.i.i.i.i128, align 1
  br label %TypeChecker_check_condition.exit135

TypeChecker_check_condition.exit135:              ; preds = %ifend.i126, %if.entry, %true_block.i133
  %common.ret.op.i124 = phi ptr [ null, %if.entry ], [ %15, %true_block.i133 ], [ %6, %ifend.i126 ]
  %memberidx1.i89 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 3
  %17 = load ptr, ptr %memberidx1.i89, align 8
  %18 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %17, ptr null, i1 false)
  %memberidx2.i90 = getelementptr inbounds %IfStatementNode, ptr %1, i64 0, i32 4
  %19 = load ptr, ptr %memberidx2.i90, align 8
  %.not.i91 = icmp eq ptr %19, null
  br i1 %.not.i91, label %TypeChecker_check_if_stamement.exit, label %true_block.i

true_block.i:                                     ; preds = %TypeChecker_check_condition.exit135
  %20 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr nonnull %19, ptr null, i1 false)
  br label %TypeChecker_check_if_stamement.exit

TypeChecker_check_if_stamement.exit:              ; preds = %TypeChecker_check_condition.exit135, %true_block.i
  %ternary.i = phi ptr [ %20, %true_block.i ], [ null, %TypeChecker_check_condition.exit135 ]
  %21 = tail call ptr @malloc(i32 32)
  store i64 0, ptr %21, align 4
  %memberidx.i.i92 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 1
  store ptr %common.ret.op.i124, ptr %memberidx.i.i92, align 8
  %memberidx1.i.i93 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 2
  store ptr %18, ptr %memberidx1.i.i93, align 8
  %memberidx2.i.i94 = getelementptr inbounds %IfStatement, ptr %21, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx2.i.i94, align 8
  br label %common.ret

if.entry2:                                        ; preds = %2
  %22 = tail call fastcc ptr @TypeChecker_check_var_declaration(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry6:                                        ; preds = %2
  %23 = tail call fastcc ptr @TypeChecker_check_const_declaration(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry10:                                       ; preds = %2
  %24 = tail call ptr @malloc(i32 48)
  store i64 3, ptr %24, align 4
  %memberidx.i.i75 = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 1
  %memberidx1.i.i76 = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 2
  %memberidx2.i.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 3
  %memberidx3.i.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 4
  %memberidx.i146 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %memberidx.i.i75, i8 0, i64 32, i1 false)
  %25 = load ptr, ptr %memberidx.i146, align 8
  %26 = load i64, ptr %25, align 4
  %27 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %26)
  %memberidx2.i147 = getelementptr inbounds %Scope, ptr %27, i64 0, i32 5
  %28 = load ptr, ptr %memberidx.i146, align 8
  store ptr %28, ptr %memberidx2.i147, align 8
  %29 = load ptr, ptr %0, align 8
  %30 = load ptr, ptr %memberidx.i146, align 8
  %31 = load ptr, ptr %29, align 8
  %32 = load i64, ptr %30, align 4
  %33 = load ptr, ptr %31, align 8
  %34 = getelementptr inbounds ptr, ptr %33, i64 %32
  %35 = load ptr, ptr %34, align 8
  %memberidx2.i.i.i148 = getelementptr inbounds %Module, ptr %35, i64 0, i32 7
  %36 = load ptr, ptr %memberidx2.i.i.i148, align 8
  %memberidx3.i.i.i149 = getelementptr inbounds %ScopeId, ptr %30, i64 0, i32 1
  %37 = load i64, ptr %memberidx3.i.i.i149, align 4
  %38 = load ptr, ptr %36, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  %memberidx4.i150 = getelementptr inbounds %Scope, ptr %40, i64 0, i32 7
  %41 = load ptr, ptr %memberidx4.i150, align 8
  %42 = load ptr, ptr %27, align 8
  %memberidx.i.i151 = getelementptr inbounds %Array_ScopeId_, ptr %41, i64 0, i32 1
  %43 = load i64, ptr %memberidx.i.i151, align 4
  %44 = add i64 %43, 1
  %memberidx.i.i.i152 = getelementptr inbounds %Array_ScopeId_, ptr %41, i64 0, i32 2
  %45 = load i64, ptr %memberidx.i.i.i152, align 4
  %46 = icmp slt i64 %45, %44
  %.pre.i = load ptr, ptr %41, align 8
  br i1 %46, label %while.entry.i.i.i, label %TypeChecker_create_child_scope_within_current_scope.exit

while.entry.i.i.i:                                ; preds = %if.entry10, %while.entry.i.i.i
  %47 = phi ptr [ %51, %while.entry.i.i.i ], [ %.pre.i, %if.entry10 ]
  %48 = phi i64 [ %52, %while.entry.i.i.i ], [ %45, %if.entry10 ]
  %49 = shl nuw i64 %48, 1
  store i64 %49, ptr %memberidx.i.i.i152, align 4
  %50 = shl i64 %48, 4
  %51 = tail call ptr @realloc(ptr %47, i64 %50)
  store ptr %51, ptr %41, align 8
  %52 = load i64, ptr %memberidx.i.i.i152, align 4
  %53 = icmp slt i64 %52, %44
  br i1 %53, label %while.entry.i.i.i, label %Array_ScopeId____sl__.exit.loopexit.i

Array_ScopeId____sl__.exit.loopexit.i:            ; preds = %while.entry.i.i.i
  %.pre11.i = load i64, ptr %memberidx.i.i151, align 4
  %.pre13.i = add nsw i64 %.pre11.i, 1
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %if.entry10, %Array_ScopeId____sl__.exit.loopexit.i
  %.pre-phi.i = phi i64 [ %.pre13.i, %Array_ScopeId____sl__.exit.loopexit.i ], [ %44, %if.entry10 ]
  %54 = phi ptr [ %51, %Array_ScopeId____sl__.exit.loopexit.i ], [ %.pre.i, %if.entry10 ]
  %55 = phi i64 [ %.pre11.i, %Array_ScopeId____sl__.exit.loopexit.i ], [ %43, %if.entry10 ]
  store i64 %.pre-phi.i, ptr %memberidx.i.i151, align 4
  %56 = getelementptr inbounds ptr, ptr %54, i64 %55
  store ptr %42, ptr %56, align 8
  %57 = load ptr, ptr %27, align 8
  store ptr %57, ptr %memberidx.i146, align 8
  %memberidx2.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %58 = load i1, ptr %memberidx2.i, align 1
  %memberidx3.i78 = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 6
  %59 = load i64, ptr %memberidx3.i78, align 4
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %if.entry.i79, label %else.i

if.entry.i79:                                     ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %memberidx4.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 2
  %61 = load ptr, ptr %memberidx4.i, align 8
  %.not.i = icmp eq ptr %61, null
  br i1 %.not.i, label %ifend7.i, label %if.entry5.i

else.i:                                           ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %62 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %62, align 4
  %memberidx22.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 5
  %63 = load ptr, ptr %memberidx22.i, align 8
  %64 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %62, ptr %63)
  %memberidx.i128.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %65 = load ptr, ptr %memberidx.i128.i, align 8
  %memberidx1.i129.i = getelementptr inbounds %Compiler, ptr %65, i64 0, i32 5
  %66 = load ptr, ptr %memberidx1.i129.i, align 8
  %memberidx2.i130.i = getelementptr inbounds %Array_FloError_, ptr %66, i64 0, i32 1
  %67 = load i64, ptr %memberidx2.i130.i, align 4
  %68 = icmp sgt i64 %67, 0
  br i1 %68, label %common.ret, label %ifend25.i

ifend.i80.sink.split:                             ; preds = %if.entry17.i, %get_class_prop_type.exit246.i
  %.sink = phi ptr [ %314, %get_class_prop_type.exit246.i ], [ %88, %if.entry17.i ]
  store ptr %.sink, ptr %memberidx3.i.i, align 8
  br label %ifend.i80

ifend.i80:                                        ; preds = %ifend.i80.sink.split, %ifend13.i
  %memberidx.i131.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %69 = load ptr, ptr %memberidx.i131.i, align 8
  %memberidx1.i132.i = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 5
  %70 = load ptr, ptr %memberidx1.i132.i, align 8
  %memberidx2.i133.i = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %71 = load i64, ptr %memberidx2.i133.i, align 4
  %72 = icmp sgt i64 %71, 0
  br i1 %72, label %common.ret, label %ifend61.i

if.entry5.i:                                      ; preds = %if.entry.i79
  %73 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr nonnull %61)
  store ptr %73, ptr %memberidx1.i.i76, align 8
  br label %ifend7.i

ifend7.i:                                         ; preds = %if.entry5.i, %if.entry.i79
  %memberidx10.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 3
  %74 = load ptr, ptr %memberidx10.i, align 8
  %.not126.i = icmp eq ptr %74, null
  br i1 %.not126.i, label %ifend13.i, label %if.entry11.i

if.entry11.i:                                     ; preds = %ifend7.i
  %75 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %75, align 4
  %76 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr nonnull %75, ptr nonnull %74)
  %memberidx.i.i106 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %77 = load ptr, ptr %memberidx.i.i106, align 8
  %memberidx1.i.i107 = getelementptr inbounds %Compiler, ptr %77, i64 0, i32 5
  %78 = load ptr, ptr %memberidx1.i.i107, align 8
  %memberidx2.i.i108 = getelementptr inbounds %Array_FloError_, ptr %78, i64 0, i32 1
  %79 = load i64, ptr %memberidx2.i.i108, align 4
  %80 = icmp sgt i64 %79, 0
  br i1 %80, label %TypeChecker_check_condition.exit120, label %ifend.i111

ifend.i111:                                       ; preds = %if.entry11.i
  %memberidx.i110 = getelementptr inbounds %Expression, ptr %76, i64 0, i32 3
  %81 = load ptr, ptr %memberidx.i110, align 8
  %82 = load i64, ptr %81, align 4
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %TypeChecker_check_condition.exit120, label %true_block.i118

true_block.i118:                                  ; preds = %ifend.i111
  %84 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %84, align 4
  %85 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %85, align 4
  %memberidx.i.i.i.i112 = getelementptr inbounds %Expression, ptr %85, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i112, align 4
  %memberidx1.i.i.i.i113 = getelementptr inbounds %Expression, ptr %85, i64 0, i32 1
  %memberidx.i.i.i114 = getelementptr inbounds %TypeCastExpression, ptr %85, i64 0, i32 4
  store ptr %76, ptr %memberidx.i.i.i114, align 8
  %memberidx1.i.i.i115 = getelementptr inbounds %Expression, ptr %85, i64 0, i32 3
  store ptr %84, ptr %memberidx1.i.i.i115, align 8
  %memberidx3.i.i.i117 = getelementptr inbounds %Expression, ptr %76, i64 0, i32 1
  %86 = load i1, ptr %memberidx3.i.i.i117, align 1
  store i1 %86, ptr %memberidx1.i.i.i.i113, align 1
  br label %TypeChecker_check_condition.exit120

TypeChecker_check_condition.exit120:              ; preds = %ifend.i111, %if.entry11.i, %true_block.i118
  %common.ret.op.i109 = phi ptr [ null, %if.entry11.i ], [ %85, %true_block.i118 ], [ %76, %ifend.i111 ]
  store ptr %common.ret.op.i109, ptr %memberidx2.i.i, align 8
  br label %ifend13.i

ifend13.i:                                        ; preds = %TypeChecker_check_condition.exit120, %ifend7.i
  %memberidx16.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 4
  %87 = load ptr, ptr %memberidx16.i, align 8
  %.not127.i = icmp eq ptr %87, null
  br i1 %.not127.i, label %ifend.i80, label %if.entry17.i

if.entry17.i:                                     ; preds = %ifend13.i
  %88 = tail call fastcc ptr @TypeChecker_check_statement(ptr nonnull %0, ptr nonnull %87)
  br label %ifend.i80.sink.split

ifend25.i:                                        ; preds = %else.i
  %memberidx26.i = getelementptr inbounds %Expression, ptr %64, i64 0, i32 3
  %89 = load ptr, ptr %memberidx26.i, align 8
  %90 = load i64, ptr %89, align 4
  %91 = icmp eq i64 %90, 20
  br i1 %91, label %if.entry.i158, label %is_object.exit.thread

if.entry.i158:                                    ; preds = %ifend25.i, %if.entry.i158
  %.tr5.i = phi ptr [ %92, %if.entry.i158 ], [ %89, %ifend25.i ]
  %memberidx1.i157 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %92 = load ptr, ptr %memberidx1.i157, align 8
  %93 = load i64, ptr %92, align 4
  switch i64 %93, label %if.entry27.i [
    i64 20, label %if.entry.i158
    i64 11, label %ifend29.i
  ]

is_object.exit.thread:                            ; preds = %ifend25.i
  %94 = icmp eq i64 %90, 11
  br i1 %94, label %ifend29.i.thread, label %if.entry27.i

ifend29.i.thread:                                 ; preds = %is_object.exit.thread
  %95 = load ptr, ptr %0, align 8
  br label %if.entry3.i168

if.entry27.i:                                     ; preds = %if.entry.i158, %is_object.exit.thread
  %96 = tail call ptr @malloc(i32 28)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %96, ptr noundef nonnull align 8 dereferenceable(28) @236, i64 28, i1 false)
  %97 = tail call ptr @malloc(i32 24)
  store ptr %96, ptr %97, align 8
  %memberidx1.i.i.i82 = getelementptr inbounds %String, ptr %97, i64 0, i32 1
  store i64 28, ptr %memberidx1.i.i.i82, align 4
  %memberidx2.i.i.i83 = getelementptr inbounds %String, ptr %97, i64 0, i32 2
  store i64 28, ptr %memberidx2.i.i.i83, align 4
  %98 = load ptr, ptr %memberidx22.i, align 8
  %99 = load ptr, ptr %98, align 8
  %100 = load ptr, ptr %memberidx.i128.i, align 8
  %memberidx1.i135.i = getelementptr inbounds %Compiler, ptr %100, i64 0, i32 5
  %101 = load ptr, ptr %memberidx1.i135.i, align 8
  %102 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %102, align 4
  %memberidx1.i.i136.i = getelementptr inbounds %FloError, ptr %102, i64 0, i32 2
  store ptr %99, ptr %memberidx1.i.i136.i, align 8
  %memberidx2.i.i137.i = getelementptr inbounds %FloError, ptr %102, i64 0, i32 1
  store ptr %97, ptr %memberidx2.i.i137.i, align 8
  %memberidx.i.i.i84 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 1
  %103 = load i64, ptr %memberidx.i.i.i84, align 4
  %104 = add i64 %103, 1
  %memberidx.i.i.i.i85 = getelementptr inbounds %Array_FloError_, ptr %101, i64 0, i32 2
  %105 = load i64, ptr %memberidx.i.i.i.i85, align 4
  %106 = icmp slt i64 %105, %104
  %.pre183 = load ptr, ptr %101, align 8
  br i1 %106, label %while.entry.i.i.i.i86, label %TypeChecker_error.exit.i87

while.entry.i.i.i.i86:                            ; preds = %if.entry27.i, %while.entry.i.i.i.i86
  %107 = phi ptr [ %111, %while.entry.i.i.i.i86 ], [ %.pre183, %if.entry27.i ]
  %108 = phi i64 [ %112, %while.entry.i.i.i.i86 ], [ %105, %if.entry27.i ]
  %109 = shl nuw i64 %108, 1
  store i64 %109, ptr %memberidx.i.i.i.i85, align 4
  %110 = shl i64 %108, 4
  %111 = tail call ptr @realloc(ptr %107, i64 %110)
  store ptr %111, ptr %101, align 8
  %112 = load i64, ptr %memberidx.i.i.i.i85, align 4
  %113 = icmp slt i64 %112, %104
  br i1 %113, label %while.entry.i.i.i.i86, label %TypeChecker_error.exit.i87.loopexit

TypeChecker_error.exit.i87.loopexit:              ; preds = %while.entry.i.i.i.i86
  %.pre184 = load i64, ptr %memberidx.i.i.i84, align 4
  %.pre210 = add nsw i64 %.pre184, 1
  br label %TypeChecker_error.exit.i87

TypeChecker_error.exit.i87:                       ; preds = %if.entry27.i, %TypeChecker_error.exit.i87.loopexit
  %.pre-phi211 = phi i64 [ %.pre210, %TypeChecker_error.exit.i87.loopexit ], [ %104, %if.entry27.i ]
  %114 = phi ptr [ %111, %TypeChecker_error.exit.i87.loopexit ], [ %.pre183, %if.entry27.i ]
  %115 = phi i64 [ %.pre184, %TypeChecker_error.exit.i87.loopexit ], [ %103, %if.entry27.i ]
  store i64 %.pre-phi211, ptr %memberidx.i.i.i84, align 4
  %116 = getelementptr inbounds ptr, ptr %114, i64 %115
  store ptr %102, ptr %116, align 8
  br label %common.ret

ifend29.i:                                        ; preds = %if.entry.i158
  %117 = load ptr, ptr %0, align 8
  br i1 %91, label %if.entry.i164, label %if.entry3.i168

if.entry.i164:                                    ; preds = %ifend29.i, %if.entry.i164
  %.tr11.i160174 = phi ptr [ %118, %if.entry.i164 ], [ %89, %ifend29.i ]
  %memberidx1.i163 = getelementptr inbounds %GenericType, ptr %.tr11.i160174, i64 0, i32 3
  %118 = load ptr, ptr %memberidx1.i163, align 8
  %119 = load i64, ptr %118, align 4
  %switch = icmp eq i64 %119, 20
  br i1 %switch, label %if.entry.i164, label %if.entry3.i168

if.entry3.i168:                                   ; preds = %if.entry.i164, %ifend29.i.thread, %ifend29.i
  %120 = phi ptr [ %117, %ifend29.i ], [ %95, %ifend29.i.thread ], [ %117, %if.entry.i164 ]
  %.tr11.i160.lcssa = phi ptr [ %89, %ifend29.i ], [ %89, %ifend29.i.thread ], [ %118, %if.entry.i164 ]
  %memberidx6.i165 = getelementptr inbounds %ObjectType, ptr %.tr11.i160.lcssa, i64 0, i32 1
  %121 = load ptr, ptr %memberidx6.i165, align 8
  %122 = load ptr, ptr %120, align 8
  %123 = load i64, ptr %121, align 4
  %124 = load ptr, ptr %122, align 8
  %125 = getelementptr inbounds ptr, ptr %124, i64 %123
  %126 = load ptr, ptr %125, align 8
  %memberidx2.i.i166 = getelementptr inbounds %Module, ptr %126, i64 0, i32 3
  %127 = load ptr, ptr %memberidx2.i.i166, align 8
  %memberidx3.i.i167 = getelementptr inbounds %TypeId, ptr %121, i64 0, i32 2
  %128 = load i64, ptr %memberidx3.i.i167, align 4
  %129 = load ptr, ptr %127, align 8
  %130 = getelementptr inbounds ptr, ptr %129, i64 %128
  %131 = load ptr, ptr %130, align 8
  %memberidx34.i = getelementptr inbounds %Class, ptr %131, i64 0, i32 6
  %132 = load ptr, ptr %memberidx34.i, align 8
  %133 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %133, align 8
  %134 = tail call ptr @malloc(i32 24)
  store ptr %133, ptr %134, align 8
  %memberidx1.i.i138.i = getelementptr inbounds %String, ptr %134, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i138.i, align 4
  %memberidx2.i.i139.i = getelementptr inbounds %String, ptr %134, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i139.i, align 4
  %135 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %134)
  %memberidx.i140.i = getelementptr inbounds %Map_String_PropId_, ptr %132, i64 0, i32 1
  %136 = load i64, ptr %memberidx.i140.i, align 4
  %137 = urem i64 %135, %136
  %138 = load ptr, ptr %132, align 8
  %139 = getelementptr inbounds ptr, ptr %138, i64 %137
  %140 = load ptr, ptr %139, align 8
  %.not.i.i = icmp eq ptr %140, null
  br i1 %.not.i.i, label %if.entry35.i, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %if.entry3.i168, %else.i.i
  %141 = phi ptr [ %149, %else.i.i ], [ %138, %if.entry3.i168 ]
  %142 = phi i64 [ %150, %else.i.i ], [ %136, %if.entry3.i168 ]
  %143 = phi ptr [ %154, %else.i.i ], [ %140, %if.entry3.i168 ]
  %hash.0.i.i = phi i64 [ %152, %else.i.i ], [ %137, %if.entry3.i168 ]
  %144 = load ptr, ptr %143, align 8
  %memberidx.i.i141.i = getelementptr inbounds %String, ptr %144, i64 0, i32 1
  %145 = load i64, ptr %memberidx.i.i141.i, align 4
  %.not.i.i.i = icmp eq i64 %145, 8
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %146 = load ptr, ptr %144, align 8
  %147 = tail call i64 @memcmp(ptr %146, ptr nonnull %133, i64 8)
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre186 = load i64, ptr %memberidx.i140.i, align 4
  %.pre187 = load ptr, ptr %132, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre188.pre = load ptr, ptr %132, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre188.pre, i64 %hash.0.i.i
  %.pre189.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre189.pre, null
  br i1 %.not25.i.i, label %if.entry35.i, label %Map_String_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %149 = phi ptr [ %.pre187, %ifend.i.i.i.else.i.i_crit_edge ], [ %141, %while.entry.i.i ]
  %150 = phi i64 [ %.pre186, %ifend.i.i.i.else.i.i_crit_edge ], [ %142, %while.entry.i.i ]
  %151 = add nuw i64 %hash.0.i.i, 1
  %152 = urem i64 %151, %150
  %153 = getelementptr inbounds ptr, ptr %149, i64 %152
  %154 = load ptr, ptr %153, align 8
  %.not26.i.i = icmp eq ptr %154, null
  br i1 %.not26.i.i, label %if.entry35.i, label %while.entry.i.i

Map_String_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre189.pre, i64 0, i32 1
  %155 = load ptr, ptr %memberidx11.i.i, align 8
  %156 = icmp eq ptr %155, null
  br i1 %156, label %if.entry35.i, label %ifend37.i

if.entry35.i:                                     ; preds = %else.i.i, %if.entry3.i168, %while.end.i.i, %Map_String_PropId____getitem__.exit.i
  %157 = tail call ptr @malloc(i32 46)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(46) %157, ptr noundef nonnull align 8 dereferenceable(46) @237, i64 46, i1 false)
  %158 = tail call ptr @malloc(i32 24)
  store ptr %157, ptr %158, align 8
  %memberidx1.i.i143.i = getelementptr inbounds %String, ptr %158, i64 0, i32 1
  store i64 46, ptr %memberidx1.i.i143.i, align 4
  %memberidx2.i.i144.i = getelementptr inbounds %String, ptr %158, i64 0, i32 2
  store i64 46, ptr %memberidx2.i.i144.i, align 4
  %159 = load ptr, ptr %memberidx22.i, align 8
  %160 = load ptr, ptr %159, align 8
  %161 = load ptr, ptr %memberidx.i128.i, align 8
  %memberidx1.i146.i = getelementptr inbounds %Compiler, ptr %161, i64 0, i32 5
  %162 = load ptr, ptr %memberidx1.i146.i, align 8
  %163 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %163, align 4
  %memberidx1.i.i147.i = getelementptr inbounds %FloError, ptr %163, i64 0, i32 2
  store ptr %160, ptr %memberidx1.i.i147.i, align 8
  %memberidx2.i.i148.i = getelementptr inbounds %FloError, ptr %163, i64 0, i32 1
  store ptr %158, ptr %memberidx2.i.i148.i, align 8
  %memberidx.i.i149.i = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 1
  %164 = load i64, ptr %memberidx.i.i149.i, align 4
  %165 = add i64 %164, 1
  %memberidx.i.i.i150.i = getelementptr inbounds %Array_FloError_, ptr %162, i64 0, i32 2
  %166 = load i64, ptr %memberidx.i.i.i150.i, align 4
  %167 = icmp slt i64 %166, %165
  %.pre200 = load ptr, ptr %162, align 8
  br i1 %167, label %while.entry.i.i.i151.i, label %TypeChecker_error.exit152.i

while.entry.i.i.i151.i:                           ; preds = %if.entry35.i, %while.entry.i.i.i151.i
  %168 = phi ptr [ %172, %while.entry.i.i.i151.i ], [ %.pre200, %if.entry35.i ]
  %169 = phi i64 [ %173, %while.entry.i.i.i151.i ], [ %166, %if.entry35.i ]
  %170 = shl nuw i64 %169, 1
  store i64 %170, ptr %memberidx.i.i.i150.i, align 4
  %171 = shl i64 %169, 4
  %172 = tail call ptr @realloc(ptr %168, i64 %171)
  store ptr %172, ptr %162, align 8
  %173 = load i64, ptr %memberidx.i.i.i150.i, align 4
  %174 = icmp slt i64 %173, %165
  br i1 %174, label %while.entry.i.i.i151.i, label %TypeChecker_error.exit152.i.loopexit

TypeChecker_error.exit152.i.loopexit:             ; preds = %while.entry.i.i.i151.i
  %.pre201 = load i64, ptr %memberidx.i.i149.i, align 4
  %.pre209 = add nsw i64 %.pre201, 1
  br label %TypeChecker_error.exit152.i

TypeChecker_error.exit152.i:                      ; preds = %if.entry35.i, %TypeChecker_error.exit152.i.loopexit
  %.pre-phi = phi i64 [ %.pre209, %TypeChecker_error.exit152.i.loopexit ], [ %165, %if.entry35.i ]
  %175 = phi ptr [ %172, %TypeChecker_error.exit152.i.loopexit ], [ %.pre200, %if.entry35.i ]
  %176 = phi i64 [ %.pre201, %TypeChecker_error.exit152.i.loopexit ], [ %164, %if.entry35.i ]
  store i64 %.pre-phi, ptr %memberidx.i.i149.i, align 4
  %177 = getelementptr inbounds ptr, ptr %175, i64 %176
  store ptr %163, ptr %177, align 8
  br label %common.ret

ifend37.i:                                        ; preds = %Map_String_PropId____getitem__.exit.i
  %178 = load ptr, ptr %0, align 8
  %memberidx.i.i153.i = getelementptr inbounds %PropId, ptr %155, i64 0, i32 1
  %179 = load ptr, ptr %memberidx.i.i153.i, align 8
  %180 = load ptr, ptr %178, align 8
  %181 = load i64, ptr %179, align 4
  %182 = load ptr, ptr %180, align 8
  %183 = getelementptr inbounds ptr, ptr %182, i64 %181
  %184 = load ptr, ptr %183, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %184, i64 0, i32 3
  %185 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %179, i64 0, i32 2
  %186 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %187 = load ptr, ptr %185, align 8
  %188 = getelementptr inbounds ptr, ptr %187, i64 %186
  %189 = load ptr, ptr %188, align 8
  %190 = load i64, ptr %155, align 4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend37.i
  %memberidx1.i155.i = getelementptr inbounds %Class, ptr %189, i64 0, i32 5
  %192 = load ptr, ptr %memberidx1.i155.i, align 8
  %memberidx2.i156.i = getelementptr inbounds %PropId, ptr %155, i64 0, i32 2
  %193 = load i64, ptr %memberidx2.i156.i, align 4
  %194 = load ptr, ptr %192, align 8
  %195 = getelementptr inbounds ptr, ptr %194, i64 %193
  %196 = load ptr, ptr %195, align 8
  %memberidx3.i157.i = getelementptr inbounds %ClassMethod, ptr %196, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend37.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %189, i64 0, i32 4
  %197 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %155, i64 0, i32 2
  %198 = load i64, ptr %memberidx5.i.i, align 4
  %199 = load ptr, ptr %197, align 8
  %200 = getelementptr inbounds ptr, ptr %199, i64 %198
  %201 = load ptr, ptr %200, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %201, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i157.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i154.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  %memberidx41.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i154.i, i64 0, i32 2
  %202 = load ptr, ptr %memberidx41.i, align 8
  %203 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %203, ptr noundef nonnull align 8 dereferenceable(6) @238, i64 6, i1 false)
  %204 = tail call ptr @malloc(i32 24)
  store ptr %203, ptr %204, align 8
  %memberidx1.i.i158.i = getelementptr inbounds %String, ptr %204, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i158.i, align 4
  %memberidx2.i.i159.i = getelementptr inbounds %String, ptr %204, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i159.i, align 4
  %205 = tail call ptr @malloc(i32 41)
  %206 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %206, align 4
  %memberidx.i.i160.i = getelementptr inbounds %Expression, ptr %206, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i160.i, align 4
  %memberidx1.i.i161.i = getelementptr inbounds %Expression, ptr %206, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i161.i, align 1
  %memberidx.i162.i = getelementptr inbounds %MemberExpression, ptr %206, i64 0, i32 4
  store ptr %64, ptr %memberidx.i162.i, align 8
  %memberidx1.i163.i = getelementptr inbounds %MemberExpression, ptr %206, i64 0, i32 5
  store ptr %155, ptr %memberidx1.i163.i, align 8
  %memberidx2.i164.i = getelementptr inbounds %Expression, ptr %206, i64 0, i32 3
  store ptr %common.ret.op.i154.i, ptr %memberidx2.i164.i, align 8
  %207 = tail call ptr @malloc(i32 24)
  %memberidx.i165.i = getelementptr inbounds %Array_Expression_, ptr %207, i64 0, i32 1
  store i64 0, ptr %memberidx.i165.i, align 4
  %memberidx1.i166.i = getelementptr inbounds %Array_Expression_, ptr %207, i64 0, i32 2
  store i64 8, ptr %memberidx1.i166.i, align 4
  %208 = tail call ptr @malloc(i32 64)
  store ptr %208, ptr %207, align 8
  store i64 0, ptr %memberidx.i165.i, align 4
  store i64 8, ptr %205, align 4
  %memberidx.i.i167.i = getelementptr inbounds %Expression, ptr %205, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i167.i, align 4
  %memberidx1.i.i168.i = getelementptr inbounds %Expression, ptr %205, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i168.i, align 1
  %memberidx.i169.i = getelementptr inbounds %CallExpression, ptr %205, i64 0, i32 4
  store ptr %206, ptr %memberidx.i169.i, align 8
  %memberidx1.i170.i = getelementptr inbounds %CallExpression, ptr %205, i64 0, i32 5
  store ptr %207, ptr %memberidx1.i170.i, align 8
  %memberidx2.i171.i = getelementptr inbounds %Expression, ptr %205, i64 0, i32 3
  store ptr %202, ptr %memberidx2.i171.i, align 8
  %209 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr nonnull %204, ptr nonnull %205, ptr %202)
  %memberidx44.i = getelementptr inbounds %Var, ptr %209, i64 0, i32 1
  %210 = load ptr, ptr %memberidx44.i, align 8
  %211 = tail call ptr @malloc(i32 25)
  store i64 1, ptr %211, align 4
  %memberidx.i172.i = getelementptr inbounds %VarDeclaration, ptr %211, i64 0, i32 2
  store ptr %210, ptr %memberidx.i172.i, align 8
  %memberidx1.i173.i = getelementptr inbounds %VarDeclaration, ptr %211, i64 0, i32 1
  store ptr %204, ptr %memberidx1.i173.i, align 8
  %memberidx2.i174.i = getelementptr inbounds %VarDeclaration, ptr %211, i64 0, i32 3
  store i1 false, ptr %memberidx2.i174.i, align 1
  store ptr %211, ptr %memberidx.i.i75, align 8
  %212 = load ptr, ptr %0, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i154, %get_class_prop_type.exit.i
  %.tr11.i = phi ptr [ %202, %get_class_prop_type.exit.i ], [ %214, %if.entry.i154 ]
  %213 = load i64, ptr %.tr11.i, align 4
  switch i64 %213, label %get_class_from_type.exit [
    i64 20, label %if.entry.i154
    i64 11, label %if.entry3.i
  ]

if.entry.i154:                                    ; preds = %tailrecurse.i
  %memberidx1.i153 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %214 = load ptr, ptr %memberidx1.i153, align 8
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %215 = load ptr, ptr %memberidx6.i, align 8
  %216 = load ptr, ptr %212, align 8
  %217 = load i64, ptr %215, align 4
  %218 = load ptr, ptr %216, align 8
  %219 = getelementptr inbounds ptr, ptr %218, i64 %217
  %220 = load ptr, ptr %219, align 8
  %memberidx2.i.i155 = getelementptr inbounds %Module, ptr %220, i64 0, i32 3
  %221 = load ptr, ptr %memberidx2.i.i155, align 8
  %memberidx3.i.i156 = getelementptr inbounds %TypeId, ptr %215, i64 0, i32 2
  %222 = load i64, ptr %memberidx3.i.i156, align 4
  %223 = load ptr, ptr %221, align 8
  %224 = getelementptr inbounds ptr, ptr %223, i64 %222
  %225 = load ptr, ptr %224, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i = phi ptr [ %225, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx47.i = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 6
  %226 = load ptr, ptr %memberidx47.i, align 8
  %227 = tail call ptr @malloc(i32 4)
  store i32 1701736292, ptr %227, align 8
  %228 = tail call ptr @malloc(i32 24)
  store ptr %227, ptr %228, align 8
  %memberidx1.i.i175.i = getelementptr inbounds %String, ptr %228, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i175.i, align 4
  %memberidx2.i.i176.i = getelementptr inbounds %String, ptr %228, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i176.i, align 4
  %229 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %228)
  %memberidx.i177.i = getelementptr inbounds %Map_String_PropId_, ptr %226, i64 0, i32 1
  %230 = load i64, ptr %memberidx.i177.i, align 4
  %231 = urem i64 %229, %230
  %232 = load ptr, ptr %226, align 8
  %233 = getelementptr inbounds ptr, ptr %232, i64 %231
  %234 = load ptr, ptr %233, align 8
  %.not.i178.i = icmp eq ptr %234, null
  br i1 %.not.i178.i, label %Map_String_PropId____getitem__.exit195.i, label %while.entry.i183.i

while.entry.i183.i:                               ; preds = %get_class_from_type.exit, %else.i191.i
  %235 = phi ptr [ %243, %else.i191.i ], [ %232, %get_class_from_type.exit ]
  %236 = phi i64 [ %244, %else.i191.i ], [ %230, %get_class_from_type.exit ]
  %237 = phi ptr [ %248, %else.i191.i ], [ %234, %get_class_from_type.exit ]
  %hash.0.i179.i = phi i64 [ %246, %else.i191.i ], [ %231, %get_class_from_type.exit ]
  %238 = load ptr, ptr %237, align 8
  %memberidx.i.i180.i = getelementptr inbounds %String, ptr %238, i64 0, i32 1
  %239 = load i64, ptr %memberidx.i.i180.i, align 4
  %.not.i.i182.i = icmp eq i64 %239, 4
  br i1 %.not.i.i182.i, label %ifend.i.i184.i, label %else.i191.i

ifend.i.i184.i:                                   ; preds = %while.entry.i183.i
  %240 = load ptr, ptr %238, align 8
  %241 = tail call i64 @memcmp(ptr %240, ptr nonnull %227, i64 4)
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %while.end.i189.i, label %ifend.i.i184.i.else.i191.i_crit_edge

ifend.i.i184.i.else.i191.i_crit_edge:             ; preds = %ifend.i.i184.i
  %.pre190 = load i64, ptr %memberidx.i177.i, align 4
  %.pre191 = load ptr, ptr %226, align 8
  br label %else.i191.i

while.end.i189.i:                                 ; preds = %ifend.i.i184.i
  %.pre192.pre = load ptr, ptr %226, align 8
  %.phi.trans.insert193.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre192.pre, i64 %hash.0.i179.i
  %.pre194.pre = load ptr, ptr %.phi.trans.insert193.phi.trans.insert, align 8
  %.not25.i188.i = icmp eq ptr %.pre194.pre, null
  br i1 %.not25.i188.i, label %Map_String_PropId____getitem__.exit195.i, label %if.entry7.i194.i

else.i191.i:                                      ; preds = %ifend.i.i184.i.else.i191.i_crit_edge, %while.entry.i183.i
  %243 = phi ptr [ %.pre191, %ifend.i.i184.i.else.i191.i_crit_edge ], [ %235, %while.entry.i183.i ]
  %244 = phi i64 [ %.pre190, %ifend.i.i184.i.else.i191.i_crit_edge ], [ %236, %while.entry.i183.i ]
  %245 = add nuw i64 %hash.0.i179.i, 1
  %246 = urem i64 %245, %244
  %247 = getelementptr inbounds ptr, ptr %243, i64 %246
  %248 = load ptr, ptr %247, align 8
  %.not26.i190.i = icmp eq ptr %248, null
  br i1 %.not26.i190.i, label %Map_String_PropId____getitem__.exit195.i, label %while.entry.i183.i

if.entry7.i194.i:                                 ; preds = %while.end.i189.i
  %memberidx11.i193.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre194.pre, i64 0, i32 1
  %249 = load ptr, ptr %memberidx11.i193.i, align 8
  br label %Map_String_PropId____getitem__.exit195.i

Map_String_PropId____getitem__.exit195.i:         ; preds = %else.i191.i, %get_class_from_type.exit, %if.entry7.i194.i, %while.end.i189.i
  %common.ret.op.i192.i = phi ptr [ %249, %if.entry7.i194.i ], [ null, %while.end.i189.i ], [ null, %get_class_from_type.exit ], [ null, %else.i191.i ]
  %250 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %250, align 4
  %memberidx.i.i196.i = getelementptr inbounds %Expression, ptr %250, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i196.i, align 4
  %memberidx1.i.i197.i = getelementptr inbounds %Expression, ptr %250, i64 0, i32 1
  %memberidx.i198.i = getelementptr inbounds %VarAccessExpression, ptr %250, i64 0, i32 4
  store ptr %210, ptr %memberidx.i198.i, align 8
  %memberidx1.i199.i = getelementptr inbounds %Expression, ptr %250, i64 0, i32 3
  store ptr %202, ptr %memberidx1.i199.i, align 8
  %251 = load i64, ptr %210, align 4
  %252 = icmp eq i64 %251, 2
  store i1 %252, ptr %memberidx1.i.i197.i, align 1
  %253 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %253, align 4
  %254 = tail call ptr @malloc(i32 41)
  %255 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %255, align 4
  %memberidx.i.i201.i = getelementptr inbounds %Expression, ptr %255, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i201.i, align 4
  %memberidx1.i.i202.i = getelementptr inbounds %Expression, ptr %255, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i202.i, align 1
  %memberidx.i203.i = getelementptr inbounds %MemberExpression, ptr %255, i64 0, i32 4
  store ptr %250, ptr %memberidx.i203.i, align 8
  %memberidx1.i204.i = getelementptr inbounds %MemberExpression, ptr %255, i64 0, i32 5
  store ptr %common.ret.op.i192.i, ptr %memberidx1.i204.i, align 8
  %memberidx2.i205.i = getelementptr inbounds %Expression, ptr %255, i64 0, i32 3
  store ptr %253, ptr %memberidx2.i205.i, align 8
  store i64 8, ptr %254, align 4
  %memberidx.i.i206.i = getelementptr inbounds %Expression, ptr %254, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i206.i, align 4
  %memberidx1.i.i207.i = getelementptr inbounds %Expression, ptr %254, i64 0, i32 1
  %memberidx.i208.i = getelementptr inbounds %UnaryExpression, ptr %254, i64 0, i32 4
  store i64 7, ptr %memberidx.i208.i, align 4
  %memberidx1.i209.i = getelementptr inbounds %UnaryExpression, ptr %254, i64 0, i32 5
  store ptr %255, ptr %memberidx1.i209.i, align 8
  %memberidx2.i210.i = getelementptr inbounds %Expression, ptr %254, i64 0, i32 3
  store ptr %253, ptr %memberidx2.i210.i, align 8
  store i1 false, ptr %memberidx1.i.i207.i, align 1
  store ptr %254, ptr %memberidx2.i.i, align 8
  %memberidx49.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 7
  %256 = load ptr, ptr %memberidx49.i, align 8
  %memberidx50.i = getelementptr inbounds %IdentifierToken, ptr %256, i64 0, i32 2
  %257 = load ptr, ptr %memberidx50.i, align 8
  %258 = load ptr, ptr %memberidx47.i, align 8
  %259 = tail call ptr @malloc(i32 4)
  store i32 1954047342, ptr %259, align 8
  %260 = tail call ptr @malloc(i32 24)
  store ptr %259, ptr %260, align 8
  %memberidx1.i.i212.i = getelementptr inbounds %String, ptr %260, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i212.i, align 4
  %memberidx2.i.i213.i = getelementptr inbounds %String, ptr %260, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i213.i, align 4
  %261 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %260)
  %memberidx.i214.i = getelementptr inbounds %Map_String_PropId_, ptr %258, i64 0, i32 1
  %262 = load i64, ptr %memberidx.i214.i, align 4
  %263 = urem i64 %261, %262
  %264 = load ptr, ptr %258, align 8
  %265 = getelementptr inbounds ptr, ptr %264, i64 %263
  %266 = load ptr, ptr %265, align 8
  %.not.i215.i = icmp eq ptr %266, null
  br i1 %.not.i215.i, label %Map_String_PropId____getitem__.exit232.i, label %while.entry.i220.i

while.entry.i220.i:                               ; preds = %Map_String_PropId____getitem__.exit195.i, %else.i228.i
  %267 = phi ptr [ %275, %else.i228.i ], [ %264, %Map_String_PropId____getitem__.exit195.i ]
  %268 = phi i64 [ %276, %else.i228.i ], [ %262, %Map_String_PropId____getitem__.exit195.i ]
  %269 = phi ptr [ %280, %else.i228.i ], [ %266, %Map_String_PropId____getitem__.exit195.i ]
  %hash.0.i216.i = phi i64 [ %278, %else.i228.i ], [ %263, %Map_String_PropId____getitem__.exit195.i ]
  %270 = load ptr, ptr %269, align 8
  %memberidx.i.i217.i = getelementptr inbounds %String, ptr %270, i64 0, i32 1
  %271 = load i64, ptr %memberidx.i.i217.i, align 4
  %.not.i.i219.i = icmp eq i64 %271, 4
  br i1 %.not.i.i219.i, label %ifend.i.i221.i, label %else.i228.i

ifend.i.i221.i:                                   ; preds = %while.entry.i220.i
  %272 = load ptr, ptr %270, align 8
  %273 = tail call i64 @memcmp(ptr %272, ptr nonnull %259, i64 4)
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %while.end.i226.i, label %ifend.i.i221.i.else.i228.i_crit_edge

ifend.i.i221.i.else.i228.i_crit_edge:             ; preds = %ifend.i.i221.i
  %.pre195 = load i64, ptr %memberidx.i214.i, align 4
  %.pre196 = load ptr, ptr %258, align 8
  br label %else.i228.i

while.end.i226.i:                                 ; preds = %ifend.i.i221.i
  %.pre197.pre = load ptr, ptr %258, align 8
  %.phi.trans.insert198.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre197.pre, i64 %hash.0.i216.i
  %.pre199.pre = load ptr, ptr %.phi.trans.insert198.phi.trans.insert, align 8
  %.not25.i225.i = icmp eq ptr %.pre199.pre, null
  br i1 %.not25.i225.i, label %Map_String_PropId____getitem__.exit232.i, label %if.entry7.i231.i

else.i228.i:                                      ; preds = %ifend.i.i221.i.else.i228.i_crit_edge, %while.entry.i220.i
  %275 = phi ptr [ %.pre196, %ifend.i.i221.i.else.i228.i_crit_edge ], [ %267, %while.entry.i220.i ]
  %276 = phi i64 [ %.pre195, %ifend.i.i221.i.else.i228.i_crit_edge ], [ %268, %while.entry.i220.i ]
  %277 = add nuw i64 %hash.0.i216.i, 1
  %278 = urem i64 %277, %276
  %279 = getelementptr inbounds ptr, ptr %275, i64 %278
  %280 = load ptr, ptr %279, align 8
  %.not26.i227.i = icmp eq ptr %280, null
  br i1 %.not26.i227.i, label %Map_String_PropId____getitem__.exit232.i, label %while.entry.i220.i

if.entry7.i231.i:                                 ; preds = %while.end.i226.i
  %memberidx11.i230.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre199.pre, i64 0, i32 1
  %281 = load ptr, ptr %memberidx11.i230.i, align 8
  br label %Map_String_PropId____getitem__.exit232.i

Map_String_PropId____getitem__.exit232.i:         ; preds = %else.i228.i, %Map_String_PropId____getitem__.exit195.i, %if.entry7.i231.i, %while.end.i226.i
  %common.ret.op.i229.i = phi ptr [ %281, %if.entry7.i231.i ], [ null, %while.end.i226.i ], [ null, %Map_String_PropId____getitem__.exit195.i ], [ null, %else.i228.i ]
  %282 = load ptr, ptr %0, align 8
  %memberidx.i.i233.i = getelementptr inbounds %PropId, ptr %common.ret.op.i229.i, i64 0, i32 1
  %283 = load ptr, ptr %memberidx.i.i233.i, align 8
  %284 = load ptr, ptr %282, align 8
  %285 = load i64, ptr %283, align 4
  %286 = load ptr, ptr %284, align 8
  %287 = getelementptr inbounds ptr, ptr %286, i64 %285
  %288 = load ptr, ptr %287, align 8
  %memberidx2.i.i.i234.i = getelementptr inbounds %Module, ptr %288, i64 0, i32 3
  %289 = load ptr, ptr %memberidx2.i.i.i234.i, align 8
  %memberidx3.i.i.i235.i = getelementptr inbounds %TypeId, ptr %283, i64 0, i32 2
  %290 = load i64, ptr %memberidx3.i.i.i235.i, align 4
  %291 = load ptr, ptr %289, align 8
  %292 = getelementptr inbounds ptr, ptr %291, i64 %290
  %293 = load ptr, ptr %292, align 8
  %294 = load i64, ptr %common.ret.op.i229.i, align 4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %if.entry.i241.i, label %ifend.i245.i

if.entry.i241.i:                                  ; preds = %Map_String_PropId____getitem__.exit232.i
  %memberidx1.i238.i = getelementptr inbounds %Class, ptr %293, i64 0, i32 5
  %296 = load ptr, ptr %memberidx1.i238.i, align 8
  %memberidx2.i239.i = getelementptr inbounds %PropId, ptr %common.ret.op.i229.i, i64 0, i32 2
  %297 = load i64, ptr %memberidx2.i239.i, align 4
  %298 = load ptr, ptr %296, align 8
  %299 = getelementptr inbounds ptr, ptr %298, i64 %297
  %300 = load ptr, ptr %299, align 8
  %memberidx3.i240.i = getelementptr inbounds %ClassMethod, ptr %300, i64 0, i32 4
  br label %get_class_prop_type.exit246.i

ifend.i245.i:                                     ; preds = %Map_String_PropId____getitem__.exit232.i
  %memberidx4.i242.i = getelementptr inbounds %Class, ptr %293, i64 0, i32 4
  %301 = load ptr, ptr %memberidx4.i242.i, align 8
  %memberidx5.i243.i = getelementptr inbounds %PropId, ptr %common.ret.op.i229.i, i64 0, i32 2
  %302 = load i64, ptr %memberidx5.i243.i, align 4
  %303 = load ptr, ptr %301, align 8
  %304 = getelementptr inbounds ptr, ptr %303, i64 %302
  %305 = load ptr, ptr %304, align 8
  %memberidx6.i244.i = getelementptr inbounds %ClassField, ptr %305, i64 0, i32 4
  br label %get_class_prop_type.exit246.i

get_class_prop_type.exit246.i:                    ; preds = %ifend.i245.i, %if.entry.i241.i
  %common.ret.op.in.i236.i = phi ptr [ %memberidx3.i240.i, %if.entry.i241.i ], [ %memberidx6.i244.i, %ifend.i245.i ]
  %common.ret.op.i237.i = load ptr, ptr %common.ret.op.in.i236.i, align 8
  %memberidx53.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i237.i, i64 0, i32 2
  %306 = load ptr, ptr %memberidx53.i, align 8
  %307 = tail call ptr @malloc(i32 41)
  %308 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %308, align 4
  %memberidx.i.i247.i = getelementptr inbounds %Expression, ptr %308, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i247.i, align 4
  %memberidx1.i.i248.i = getelementptr inbounds %Expression, ptr %308, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i248.i, align 1
  %memberidx.i249.i = getelementptr inbounds %MemberExpression, ptr %308, i64 0, i32 4
  store ptr %250, ptr %memberidx.i249.i, align 8
  %memberidx1.i250.i = getelementptr inbounds %MemberExpression, ptr %308, i64 0, i32 5
  store ptr %common.ret.op.i229.i, ptr %memberidx1.i250.i, align 8
  %memberidx2.i251.i = getelementptr inbounds %Expression, ptr %308, i64 0, i32 3
  store ptr %common.ret.op.i237.i, ptr %memberidx2.i251.i, align 8
  %309 = tail call ptr @malloc(i32 24)
  %memberidx.i252.i = getelementptr inbounds %Array_Expression_, ptr %309, i64 0, i32 1
  store i64 0, ptr %memberidx.i252.i, align 4
  %memberidx1.i253.i = getelementptr inbounds %Array_Expression_, ptr %309, i64 0, i32 2
  store i64 8, ptr %memberidx1.i253.i, align 4
  %310 = tail call ptr @malloc(i32 64)
  store ptr %310, ptr %309, align 8
  store i64 0, ptr %memberidx.i252.i, align 4
  store i64 8, ptr %307, align 4
  %memberidx.i.i254.i = getelementptr inbounds %Expression, ptr %307, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i254.i, align 4
  %memberidx1.i.i255.i = getelementptr inbounds %Expression, ptr %307, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i255.i, align 1
  %memberidx.i256.i = getelementptr inbounds %CallExpression, ptr %307, i64 0, i32 4
  store ptr %308, ptr %memberidx.i256.i, align 8
  %memberidx1.i257.i = getelementptr inbounds %CallExpression, ptr %307, i64 0, i32 5
  store ptr %309, ptr %memberidx1.i257.i, align 8
  %memberidx2.i258.i = getelementptr inbounds %Expression, ptr %307, i64 0, i32 3
  store ptr %306, ptr %memberidx2.i258.i, align 8
  %311 = tail call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr nonnull %0, ptr %257, ptr nonnull %307, ptr %306)
  %memberidx56.i = getelementptr inbounds %Var, ptr %311, i64 0, i32 1
  %312 = load ptr, ptr %memberidx56.i, align 8
  %313 = tail call ptr @malloc(i32 25)
  store i64 1, ptr %313, align 4
  %memberidx.i259.i = getelementptr inbounds %VarDeclaration, ptr %313, i64 0, i32 2
  store ptr %312, ptr %memberidx.i259.i, align 8
  %memberidx1.i260.i = getelementptr inbounds %VarDeclaration, ptr %313, i64 0, i32 1
  store ptr %257, ptr %memberidx1.i260.i, align 8
  %memberidx2.i261.i = getelementptr inbounds %VarDeclaration, ptr %313, i64 0, i32 3
  store i1 false, ptr %memberidx2.i261.i, align 1
  store ptr %313, ptr %memberidx1.i.i76, align 8
  %314 = tail call ptr @malloc(i32 49)
  %315 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %315, align 4
  %memberidx.i.i262.i = getelementptr inbounds %Expression, ptr %315, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i262.i, align 4
  %memberidx1.i.i263.i = getelementptr inbounds %Expression, ptr %315, i64 0, i32 1
  %memberidx.i264.i = getelementptr inbounds %VarAccessExpression, ptr %315, i64 0, i32 4
  store ptr %312, ptr %memberidx.i264.i, align 8
  %memberidx1.i265.i = getelementptr inbounds %Expression, ptr %315, i64 0, i32 3
  store ptr %306, ptr %memberidx1.i265.i, align 8
  %316 = load i64, ptr %312, align 4
  %317 = icmp eq i64 %316, 2
  store i1 %317, ptr %memberidx1.i.i263.i, align 1
  store i64 8, ptr %314, align 4
  %memberidx.i.i267.i = getelementptr inbounds %Expression, ptr %314, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i267.i, align 4
  %memberidx1.i.i268.i = getelementptr inbounds %Expression, ptr %314, i64 0, i32 1
  %memberidx.i269.i = getelementptr inbounds %BinaryExpression, ptr %314, i64 0, i32 4
  store ptr %315, ptr %memberidx.i269.i, align 8
  %memberidx1.i270.i = getelementptr inbounds %BinaryExpression, ptr %314, i64 0, i32 5
  store i64 19, ptr %memberidx1.i270.i, align 4
  %memberidx2.i271.i = getelementptr inbounds %BinaryExpression, ptr %314, i64 0, i32 6
  store ptr %307, ptr %memberidx2.i271.i, align 8
  %memberidx3.i272.i = getelementptr inbounds %Expression, ptr %314, i64 0, i32 3
  store ptr %306, ptr %memberidx3.i272.i, align 8
  store i1 false, ptr %memberidx1.i.i268.i, align 1
  br label %ifend.i80.sink.split

ifend61.i:                                        ; preds = %ifend.i80
  store i1 true, ptr %memberidx2.i, align 1
  %memberidx63.i = getelementptr inbounds %ForStatement, ptr %24, i64 0, i32 5
  %memberidx64.i = getelementptr inbounds %ForStatementNode, ptr %1, i64 0, i32 8
  %318 = load ptr, ptr %memberidx64.i, align 8
  %319 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %318, ptr nonnull %27, i1 false)
  store ptr %319, ptr %memberidx63.i, align 8
  store i1 %58, ptr %memberidx2.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %2
  %memberidx.i72 = getelementptr inbounds %WhileStatementNode, ptr %1, i64 0, i32 2
  %320 = load ptr, ptr %memberidx.i72, align 8
  %321 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %321, align 4
  %322 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %321, ptr %320)
  %memberidx.i.i95 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %323 = load ptr, ptr %memberidx.i.i95, align 8
  %memberidx1.i.i96 = getelementptr inbounds %Compiler, ptr %323, i64 0, i32 5
  %324 = load ptr, ptr %memberidx1.i.i96, align 8
  %memberidx2.i.i97 = getelementptr inbounds %Array_FloError_, ptr %324, i64 0, i32 1
  %325 = load i64, ptr %memberidx2.i.i97, align 4
  %326 = icmp sgt i64 %325, 0
  br i1 %326, label %TypeChecker_check_condition.exit, label %ifend.i100

ifend.i100:                                       ; preds = %if.entry14
  %memberidx.i99 = getelementptr inbounds %Expression, ptr %322, i64 0, i32 3
  %327 = load ptr, ptr %memberidx.i99, align 8
  %328 = load i64, ptr %327, align 4
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %TypeChecker_check_condition.exit, label %true_block.i105

true_block.i105:                                  ; preds = %ifend.i100
  %330 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %330, align 4
  %331 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %331, align 4
  %memberidx.i.i.i.i101 = getelementptr inbounds %Expression, ptr %331, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i101, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %331, i64 0, i32 1
  %memberidx.i.i.i102 = getelementptr inbounds %TypeCastExpression, ptr %331, i64 0, i32 4
  store ptr %322, ptr %memberidx.i.i.i102, align 8
  %memberidx1.i.i.i103 = getelementptr inbounds %Expression, ptr %331, i64 0, i32 3
  store ptr %330, ptr %memberidx1.i.i.i103, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Expression, ptr %322, i64 0, i32 1
  %332 = load i1, ptr %memberidx3.i.i.i, align 1
  store i1 %332, ptr %memberidx1.i.i.i.i, align 1
  br label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i100, %if.entry14, %true_block.i105
  %common.ret.op.i98 = phi ptr [ null, %if.entry14 ], [ %331, %true_block.i105 ], [ %322, %ifend.i100 ]
  %memberidx1.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %333 = load i1, ptr %memberidx1.i, align 1
  store i1 true, ptr %memberidx1.i, align 1
  %memberidx3.i = getelementptr inbounds %WhileStatementNode, ptr %1, i64 0, i32 3
  %334 = load ptr, ptr %memberidx3.i, align 8
  %335 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %334, ptr null, i1 false)
  store i1 %333, ptr %memberidx1.i, align 1
  %336 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %336, align 4
  %memberidx.i.i73 = getelementptr inbounds %WhileStatement, ptr %336, i64 0, i32 1
  store ptr %common.ret.op.i98, ptr %memberidx.i.i73, align 8
  %memberidx1.i.i74 = getelementptr inbounds %WhileStatement, ptr %336, i64 0, i32 2
  store ptr %335, ptr %memberidx1.i.i74, align 8
  br label %common.ret

if.entry18:                                       ; preds = %2
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %337 = load i1, ptr %memberidx.i, align 1
  br i1 %337, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry18
  %338 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %338, ptr noundef nonnull align 8 dereferenceable(32) @240, i64 32, i1 false)
  %339 = tail call ptr @malloc(i32 24)
  store ptr %338, ptr %339, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %339, i64 0, i32 1
  store i64 32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %339, i64 0, i32 2
  store i64 32, ptr %memberidx2.i.i.i, align 4
  %340 = load ptr, ptr %1, align 8
  %memberidx.i.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %341 = load ptr, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Compiler, ptr %341, i64 0, i32 5
  %342 = load ptr, ptr %memberidx1.i.i, align 8
  %343 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %343, align 4
  %memberidx1.i.i3.i = getelementptr inbounds %FloError, ptr %343, i64 0, i32 2
  store ptr %340, ptr %memberidx1.i.i3.i, align 8
  %memberidx2.i.i4.i = getelementptr inbounds %FloError, ptr %343, i64 0, i32 1
  store ptr %339, ptr %memberidx2.i.i4.i, align 8
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %342, i64 0, i32 1
  %344 = load i64, ptr %memberidx.i.i.i, align 4
  %345 = add i64 %344, 1
  %memberidx.i.i.i.i = getelementptr inbounds %Array_FloError_, ptr %342, i64 0, i32 2
  %346 = load i64, ptr %memberidx.i.i.i.i, align 4
  %347 = icmp slt i64 %346, %345
  %.pre180 = load ptr, ptr %342, align 8
  br i1 %347, label %while.entry.i.i.i.i, label %TypeChecker_error.exit.i

while.entry.i.i.i.i:                              ; preds = %if.entry.i, %while.entry.i.i.i.i
  %348 = phi ptr [ %352, %while.entry.i.i.i.i ], [ %.pre180, %if.entry.i ]
  %349 = phi i64 [ %353, %while.entry.i.i.i.i ], [ %346, %if.entry.i ]
  %350 = shl nuw i64 %349, 1
  store i64 %350, ptr %memberidx.i.i.i.i, align 4
  %351 = shl i64 %349, 4
  %352 = tail call ptr @realloc(ptr %348, i64 %351)
  store ptr %352, ptr %342, align 8
  %353 = load i64, ptr %memberidx.i.i.i.i, align 4
  %354 = icmp slt i64 %353, %345
  br i1 %354, label %while.entry.i.i.i.i, label %TypeChecker_error.exit.i.loopexit

TypeChecker_error.exit.i.loopexit:                ; preds = %while.entry.i.i.i.i
  %.pre181 = load i64, ptr %memberidx.i.i.i, align 4
  %.pre212 = add nsw i64 %.pre181, 1
  br label %TypeChecker_error.exit.i

TypeChecker_error.exit.i:                         ; preds = %if.entry.i, %TypeChecker_error.exit.i.loopexit
  %.pre-phi213 = phi i64 [ %.pre212, %TypeChecker_error.exit.i.loopexit ], [ %345, %if.entry.i ]
  %355 = phi ptr [ %352, %TypeChecker_error.exit.i.loopexit ], [ %.pre180, %if.entry.i ]
  %356 = phi i64 [ %.pre181, %TypeChecker_error.exit.i.loopexit ], [ %344, %if.entry.i ]
  store i64 %.pre-phi213, ptr %memberidx.i.i.i, align 4
  %357 = getelementptr inbounds ptr, ptr %355, i64 %356
  store ptr %343, ptr %357, align 8
  br label %common.ret

ifend.i:                                          ; preds = %if.entry18
  %358 = tail call ptr @malloc(i32 8)
  store i64 5, ptr %358, align 4
  br label %common.ret

if.entry22:                                       ; preds = %2
  %memberidx.i58 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 6
  %359 = load i1, ptr %memberidx.i58, align 1
  br i1 %359, label %ifend.i71, label %if.entry.i68

if.entry.i68:                                     ; preds = %if.entry22
  %360 = tail call ptr @malloc(i32 29)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(29) %360, ptr noundef nonnull align 8 dereferenceable(29) @239, i64 29, i1 false)
  %361 = tail call ptr @malloc(i32 24)
  store ptr %360, ptr %361, align 8
  %memberidx1.i.i.i60 = getelementptr inbounds %String, ptr %361, i64 0, i32 1
  store i64 29, ptr %memberidx1.i.i.i60, align 4
  %memberidx2.i.i.i61 = getelementptr inbounds %String, ptr %361, i64 0, i32 2
  store i64 29, ptr %memberidx2.i.i.i61, align 4
  %362 = load ptr, ptr %1, align 8
  %memberidx.i.i62 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %363 = load ptr, ptr %memberidx.i.i62, align 8
  %memberidx1.i.i63 = getelementptr inbounds %Compiler, ptr %363, i64 0, i32 5
  %364 = load ptr, ptr %memberidx1.i.i63, align 8
  %365 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %365, align 4
  %memberidx1.i.i3.i64 = getelementptr inbounds %FloError, ptr %365, i64 0, i32 2
  store ptr %362, ptr %memberidx1.i.i3.i64, align 8
  %memberidx2.i.i4.i65 = getelementptr inbounds %FloError, ptr %365, i64 0, i32 1
  store ptr %361, ptr %memberidx2.i.i4.i65, align 8
  %memberidx.i.i.i66 = getelementptr inbounds %Array_FloError_, ptr %364, i64 0, i32 1
  %366 = load i64, ptr %memberidx.i.i.i66, align 4
  %367 = add i64 %366, 1
  %memberidx.i.i.i.i67 = getelementptr inbounds %Array_FloError_, ptr %364, i64 0, i32 2
  %368 = load i64, ptr %memberidx.i.i.i.i67, align 4
  %369 = icmp slt i64 %368, %367
  %.pre = load ptr, ptr %364, align 8
  br i1 %369, label %while.entry.i.i.i.i69, label %TypeChecker_error.exit.i70

while.entry.i.i.i.i69:                            ; preds = %if.entry.i68, %while.entry.i.i.i.i69
  %370 = phi ptr [ %374, %while.entry.i.i.i.i69 ], [ %.pre, %if.entry.i68 ]
  %371 = phi i64 [ %375, %while.entry.i.i.i.i69 ], [ %368, %if.entry.i68 ]
  %372 = shl nuw i64 %371, 1
  store i64 %372, ptr %memberidx.i.i.i.i67, align 4
  %373 = shl i64 %371, 4
  %374 = tail call ptr @realloc(ptr %370, i64 %373)
  store ptr %374, ptr %364, align 8
  %375 = load i64, ptr %memberidx.i.i.i.i67, align 4
  %376 = icmp slt i64 %375, %367
  br i1 %376, label %while.entry.i.i.i.i69, label %TypeChecker_error.exit.i70.loopexit

TypeChecker_error.exit.i70.loopexit:              ; preds = %while.entry.i.i.i.i69
  %.pre178 = load i64, ptr %memberidx.i.i.i66, align 4
  %.pre214 = add nsw i64 %.pre178, 1
  br label %TypeChecker_error.exit.i70

TypeChecker_error.exit.i70:                       ; preds = %if.entry.i68, %TypeChecker_error.exit.i70.loopexit
  %.pre-phi215 = phi i64 [ %.pre214, %TypeChecker_error.exit.i70.loopexit ], [ %367, %if.entry.i68 ]
  %377 = phi ptr [ %374, %TypeChecker_error.exit.i70.loopexit ], [ %.pre, %if.entry.i68 ]
  %378 = phi i64 [ %.pre178, %TypeChecker_error.exit.i70.loopexit ], [ %366, %if.entry.i68 ]
  store i64 %.pre-phi215, ptr %memberidx.i.i.i66, align 4
  %379 = getelementptr inbounds ptr, ptr %377, i64 %378
  store ptr %365, ptr %379, align 8
  br label %common.ret

ifend.i71:                                        ; preds = %if.entry22
  %380 = tail call ptr @malloc(i32 8)
  store i64 6, ptr %380, align 4
  br label %common.ret

if.entry26:                                       ; preds = %2
  %381 = tail call fastcc ptr @TypeChecker_check_can_return(ptr %0, ptr nonnull %1)
  br label %common.ret

if.entry30:                                       ; preds = %2
  %382 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %382, align 4
  %383 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %382, ptr nonnull %1)
  br label %common.ret
}

define internal fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry27, %3
  %accumulator.tr.ph = phi i1 [ %36, %if.entry27 ], [ true, %3 ]
  %.tr195.ph = phi ptr [ %34, %if.entry27 ], [ %1, %3 ]
  %.tr196.ph = phi ptr [ %35, %if.entry27 ], [ %2, %3 ]
  br label %tailrecurse.outer201

tailrecurse.outer201:                             ; preds = %tailrecurse.outer, %if.entry56
  %.tr195.ph202 = phi ptr [ %.tr195.ph, %tailrecurse.outer ], [ %54, %if.entry56 ]
  %.tr196.ph203 = phi ptr [ %.tr196.ph, %tailrecurse.outer ], [ %55, %if.entry56 ]
  %memberidx7 = getelementptr inbounds %FunctionType, ptr %.tr195.ph202, i64 0, i32 1
  %memberidx15 = getelementptr inbounds %FunctionType, ptr %.tr195.ph202, i64 0, i32 2
  %.pre = load i64, ptr %.tr195.ph202, align 4
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer201, %ifend75
  %4 = phi i64 [ 11, %ifend75 ], [ %.pre, %tailrecurse.outer201 ]
  %.tr196 = phi ptr [ %78, %ifend75 ], [ %.tr196.ph203, %tailrecurse.outer201 ]
  %5 = load i64, ptr %.tr196, align 4
  %.not = icmp eq i64 %4, %5
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %ifend75, %if.entry62, %if.entry35, %ifend13, %if.entry4, %tailrecurse, %for.body, %for.body47, %for.body106, %if.entry89, %if.entry116, %ifend91, %ifend96, %ifend.i.i, %if.entry83
  %common.ret.op = phi i1 [ %81, %if.entry83 ], [ false, %ifend.i.i ], [ false, %ifend96 ], [ true, %ifend91 ], [ %not., %if.entry116 ], [ false, %if.entry89 ], [ false, %for.body106 ], [ false, %for.body47 ], [ false, %for.body ], [ false, %tailrecurse ], [ false, %if.entry4 ], [ false, %ifend13 ], [ false, %if.entry35 ], [ true, %if.entry62 ], [ false, %ifend75 ]
  %accumulator.ret.tr = and i1 %accumulator.tr.ph, %common.ret.op
  ret i1 %accumulator.ret.tr

ifend:                                            ; preds = %tailrecurse
  %6 = icmp eq i64 %4, 16
  br i1 %6, label %if.entry4, label %ifend6

if.entry4:                                        ; preds = %ifend
  %7 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_Type_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx8, align 4
  %memberidx9 = getelementptr inbounds %FunctionType, ptr %.tr196, i64 0, i32 1
  %9 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Type_, ptr %9, i64 0, i32 1
  %10 = load i64, ptr %memberidx10, align 4
  %.not189 = icmp eq i64 %8, %10
  br i1 %.not189, label %ifend13, label %common.ret

ifend6thread-pre-split:                           ; preds = %for.cond, %for.cond.preheader
  %.pr = load i64, ptr %.tr195.ph202, align 4
  br label %ifend6

ifend6:                                           ; preds = %ifend6thread-pre-split, %ifend
  %11 = phi i64 [ %.pr, %ifend6thread-pre-split ], [ %4, %ifend ]
  switch i64 %11, label %ifend37 [
    i64 14, label %if.entry27
    i64 15, label %if.entry35
  ]

ifend13:                                          ; preds = %if.entry4
  %memberidx14 = getelementptr inbounds %FunctionType, ptr %.tr196, i64 0, i32 2
  %12 = load ptr, ptr %memberidx14, align 8
  %13 = load ptr, ptr %memberidx15, align 8
  %14 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %12, ptr %13)
  br i1 %14, label %for.cond.preheader, label %common.ret

for.cond.preheader:                               ; preds = %ifend13
  %15 = load ptr, ptr %memberidx7, align 8
  %memberidx20228 = getelementptr inbounds %Array_Type_, ptr %15, i64 0, i32 1
  %16 = load i64, ptr %memberidx20228, align 4
  %17 = icmp sgt i64 %16, 0
  br i1 %17, label %for.body, label %ifend6thread-pre-split

for.cond:                                         ; preds = %for.body
  %18 = add nuw nsw i64 %i.0229, 1
  %19 = load ptr, ptr %memberidx7, align 8
  %memberidx20 = getelementptr inbounds %Array_Type_, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx20, align 4
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %for.body, label %ifend6thread-pre-split

for.body:                                         ; preds = %for.cond.preheader, %for.cond
  %22 = phi ptr [ %19, %for.cond ], [ %15, %for.cond.preheader ]
  %i.0229 = phi i64 [ %18, %for.cond ], [ 0, %for.cond.preheader ]
  %23 = load ptr, ptr %22, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %i.0229
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %memberidx9, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 %i.0229
  %29 = load ptr, ptr %28, align 8
  %30 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %25, ptr %29)
  br i1 %30, label %for.cond, label %common.ret

if.entry27:                                       ; preds = %ifend6
  %31 = load i64, ptr %memberidx15, align 4
  %memberidx31 = getelementptr inbounds %ArrayType, ptr %.tr196, i64 0, i32 2
  %32 = load i64, ptr %memberidx31, align 4
  %33 = icmp eq i64 %31, %32
  %34 = load ptr, ptr %memberidx7, align 8
  %memberidx33 = getelementptr inbounds %ArrayType, ptr %.tr196, i64 0, i32 1
  %35 = load ptr, ptr %memberidx33, align 8
  %36 = and i1 %accumulator.tr.ph, %33
  br label %tailrecurse.outer

if.entry35:                                       ; preds = %ifend6
  %37 = load ptr, ptr %memberidx7, align 8
  %memberidx39 = getelementptr inbounds %Array_Type_, ptr %37, i64 0, i32 1
  %38 = load i64, ptr %memberidx39, align 4
  %memberidx40 = getelementptr inbounds %TupleType, ptr %.tr196, i64 0, i32 1
  %39 = load ptr, ptr %memberidx40, align 8
  %memberidx41 = getelementptr inbounds %Array_Type_, ptr %39, i64 0, i32 1
  %40 = load i64, ptr %memberidx41, align 4
  %.not188 = icmp eq i64 %38, %40
  br i1 %.not188, label %for.cond46.preheader, label %common.ret

for.cond46.preheader:                             ; preds = %if.entry35
  %41 = icmp sgt i64 %38, 0
  br i1 %41, label %for.body47, label %ifend91

ifend37.loopexit:                                 ; preds = %for.cond46
  %.pre257 = load i64, ptr %.tr195.ph202, align 4
  br label %ifend37

ifend37:                                          ; preds = %ifend37.loopexit, %ifend6
  %42 = phi i64 [ %.pre257, %ifend37.loopexit ], [ %11, %ifend6 ]
  switch i64 %42, label %ifend91 [
    i64 13, label %if.entry56
    i64 11, label %if.entry62
    i64 12, label %if.entry83
    i64 20, label %if.entry89
  ]

for.cond46:                                       ; preds = %for.body47
  %43 = add nuw nsw i64 %i1.0230, 1
  %44 = icmp slt i64 %43, %38
  br i1 %44, label %for.body47, label %ifend37.loopexit

for.body47:                                       ; preds = %for.cond46.preheader, %for.cond46
  %i1.0230 = phi i64 [ %43, %for.cond46 ], [ 0, %for.cond46.preheader ]
  %45 = load ptr, ptr %memberidx7, align 8
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 %i1.0230
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr %memberidx40, align 8
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %i1.0230
  %52 = load ptr, ptr %51, align 8
  %53 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %48, ptr %52)
  br i1 %53, label %for.cond46, label %common.ret

if.entry56:                                       ; preds = %ifend37
  %54 = load ptr, ptr %memberidx7, align 8
  %memberidx60 = getelementptr inbounds %PointerType, ptr %.tr196, i64 0, i32 1
  %55 = load ptr, ptr %memberidx60, align 8
  br label %tailrecurse.outer201

if.entry62:                                       ; preds = %ifend37
  %56 = load ptr, ptr %memberidx7, align 8
  %memberidx66 = getelementptr inbounds %ObjectType, ptr %.tr196, i64 0, i32 1
  %57 = load ptr, ptr %memberidx66, align 8
  %memberidx67 = getelementptr inbounds %TypeId, ptr %56, i64 0, i32 1
  %58 = load i64, ptr %memberidx67, align 4
  %memberidx68 = getelementptr inbounds %TypeId, ptr %57, i64 0, i32 1
  %59 = load i64, ptr %memberidx68, align 4
  %60 = icmp eq i64 %58, %59
  %61 = load i64, ptr %56, align 4
  %62 = load i64, ptr %57, align 4
  %63 = icmp eq i64 %61, %62
  %64 = and i1 %60, %63
  %memberidx71 = getelementptr inbounds %TypeId, ptr %56, i64 0, i32 2
  %65 = load i64, ptr %memberidx71, align 4
  %memberidx72 = getelementptr inbounds %TypeId, ptr %57, i64 0, i32 2
  %66 = load i64, ptr %memberidx72, align 4
  %67 = icmp eq i64 %65, %66
  %68 = and i1 %64, %67
  br i1 %68, label %common.ret, label %ifend75

ifend75:                                          ; preds = %if.entry62
  %69 = load ptr, ptr %0, align 8
  %70 = load ptr, ptr %69, align 8
  %71 = load ptr, ptr %70, align 8
  %72 = getelementptr inbounds ptr, ptr %71, i64 %62
  %73 = load ptr, ptr %72, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %73, i64 0, i32 3
  %74 = load ptr, ptr %memberidx2.i, align 8
  %75 = load ptr, ptr %74, align 8
  %76 = getelementptr inbounds ptr, ptr %75, i64 %66
  %77 = load ptr, ptr %76, align 8
  %memberidx77 = getelementptr inbounds %Class, ptr %77, i64 0, i32 2
  %78 = load ptr, ptr %memberidx77, align 8
  %.not187 = icmp eq ptr %78, null
  br i1 %.not187, label %common.ret, label %tailrecurse

if.entry83:                                       ; preds = %ifend37
  %79 = load ptr, ptr %memberidx7, align 8
  %memberidx87 = getelementptr inbounds %EnumType, ptr %.tr196, i64 0, i32 1
  %80 = load ptr, ptr %memberidx87, align 8
  %81 = icmp eq ptr %79, %80
  br label %common.ret

if.entry89:                                       ; preds = %ifend37
  %82 = load ptr, ptr %memberidx7, align 8
  %memberidx93 = getelementptr inbounds %GenericType, ptr %.tr196, i64 0, i32 1
  %83 = load ptr, ptr %memberidx93, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %82, i64 0, i32 1
  %84 = load i64, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %String, ptr %83, i64 0, i32 1
  %85 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %84, %85
  br i1 %.not.i.i, label %ifend.i.i, label %common.ret

ifend.i.i:                                        ; preds = %if.entry89
  %86 = load ptr, ptr %82, align 8
  %87 = load ptr, ptr %83, align 8
  %88 = tail call i64 @memcmp(ptr %86, ptr %87, i64 %84)
  %.not194 = icmp eq i64 %88, 0
  br i1 %.not194, label %ifend96, label %common.ret

ifend91:                                          ; preds = %for.cond46.preheader, %ifend37, %for.cond105, %for.cond105.preheader
  %89 = load i64, ptr %.tr195.ph202, align 4
  %90 = add i64 %89, -1
  %91 = icmp ult i64 %90, 7
  br i1 %91, label %if.entry116, label %common.ret

ifend96:                                          ; preds = %ifend.i.i
  %92 = load ptr, ptr %memberidx15, align 8
  %memberidx98 = getelementptr inbounds %Array_Type_, ptr %92, i64 0, i32 1
  %93 = load i64, ptr %memberidx98, align 4
  %memberidx99 = getelementptr inbounds %GenericType, ptr %.tr196, i64 0, i32 2
  %94 = load ptr, ptr %memberidx99, align 8
  %memberidx100 = getelementptr inbounds %Array_Type_, ptr %94, i64 0, i32 1
  %95 = load i64, ptr %memberidx100, align 4
  %.not186 = icmp eq i64 %93, %95
  br i1 %.not186, label %for.cond105.preheader, label %common.ret

for.cond105.preheader:                            ; preds = %ifend96
  %96 = icmp sgt i64 %93, 0
  br i1 %96, label %for.body106, label %ifend91

for.cond105:                                      ; preds = %for.body106
  %97 = add nuw nsw i64 %i2.0227, 1
  %98 = load ptr, ptr %memberidx15, align 8
  %memberidx110 = getelementptr inbounds %Array_Type_, ptr %98, i64 0, i32 1
  %99 = load i64, ptr %memberidx110, align 4
  %100 = icmp slt i64 %97, %99
  br i1 %100, label %for.body106, label %ifend91

for.body106:                                      ; preds = %for.cond105.preheader, %for.cond105
  %101 = phi ptr [ %98, %for.cond105 ], [ %92, %for.cond105.preheader ]
  %i2.0227 = phi i64 [ %97, %for.cond105 ], [ 0, %for.cond105.preheader ]
  %102 = load ptr, ptr %101, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %i2.0227
  %104 = load ptr, ptr %103, align 8
  %105 = load ptr, ptr %memberidx99, align 8
  %106 = load ptr, ptr %105, align 8
  %107 = getelementptr inbounds ptr, ptr %106, i64 %i2.0227
  %108 = load ptr, ptr %107, align 8
  %109 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %104, ptr %108)
  br i1 %109, label %for.cond105, label %common.ret

if.entry116:                                      ; preds = %ifend91
  %110 = load i1, ptr %memberidx7, align 1
  %memberidx120 = getelementptr inbounds %IntType, ptr %.tr196, i64 0, i32 1
  %111 = load i1, ptr %memberidx120, align 1
  %112 = xor i1 %110, %111
  %not. = xor i1 %112, true
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_create_scope(ptr nocapture readonly %0, i64 %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = getelementptr inbounds ptr, ptr %5, i64 %1
  %7 = load ptr, ptr %6, align 8
  %8 = tail call ptr @malloc(i32 64)
  %memberidx = getelementptr inbounds %Module, ptr %7, i64 0, i32 7
  %9 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_Scope_, ptr %9, i64 0, i32 1
  %10 = load i64, ptr %memberidx1, align 4
  %11 = tail call ptr @malloc(i32 16)
  store i64 %1, ptr %11, align 4
  %memberidx1.i.i = getelementptr inbounds %ScopeId, ptr %11, i64 0, i32 1
  store i64 %10, ptr %memberidx1.i.i, align 4
  store ptr %11, ptr %8, align 8
  %12 = tail call ptr @malloc(i32 24)
  %13 = tail call ptr @malloc(i32 2048)
  store ptr %13, ptr %12, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i11 = phi i64 [ 0, %2 ], [ %16, %for.body.i.i ]
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %i.0.i.i11
  store ptr null, ptr %15, align 8
  %16 = add nuw nsw i64 %i.0.i.i11, 1
  %17 = icmp ult i64 %i.0.i.i11, 255
  br i1 %17, label %for.body.i.i, label %Map_String_VarId__constructor.exit.i

Map_String_VarId__constructor.exit.i:             ; preds = %for.body.i.i
  %memberidx1.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %Map_String_VarId_, ptr %12, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_String_VarId_, ptr %12, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %12, ptr %memberidx1.i, align 8
  %18 = tail call ptr @malloc(i32 24)
  %19 = tail call ptr @malloc(i32 2048)
  store ptr %19, ptr %18, align 8
  br label %for.body.i20.i

for.body.i20.i:                                   ; preds = %Map_String_VarId__constructor.exit.i, %for.body.i20.i
  %i.0.i18.i10 = phi i64 [ 0, %Map_String_VarId__constructor.exit.i ], [ %22, %for.body.i20.i ]
  %20 = load ptr, ptr %18, align 8
  %21 = getelementptr inbounds ptr, ptr %20, i64 %i.0.i18.i10
  store ptr null, ptr %21, align 8
  %22 = add nuw nsw i64 %i.0.i18.i10, 1
  %23 = icmp ult i64 %i.0.i18.i10, 255
  br i1 %23, label %for.body.i20.i, label %Map_String_ClassId__constructor.exit.i

Map_String_ClassId__constructor.exit.i:           ; preds = %for.body.i20.i
  %memberidx2.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 2
  %memberidx2.i21.i = getelementptr inbounds %Map_String_ClassId_, ptr %18, i64 0, i32 1
  store i64 256, ptr %memberidx2.i21.i, align 4
  %memberidx3.i22.i = getelementptr inbounds %Map_String_ClassId_, ptr %18, i64 0, i32 2
  store i64 0, ptr %memberidx3.i22.i, align 4
  store ptr %18, ptr %memberidx2.i, align 8
  %24 = tail call ptr @malloc(i32 24)
  %25 = tail call ptr @malloc(i32 2048)
  store ptr %25, ptr %24, align 8
  br label %for.body.i25.i

for.body.i25.i:                                   ; preds = %Map_String_ClassId__constructor.exit.i, %for.body.i25.i
  %i.0.i23.i9 = phi i64 [ 0, %Map_String_ClassId__constructor.exit.i ], [ %28, %for.body.i25.i ]
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %i.0.i23.i9
  store ptr null, ptr %27, align 8
  %28 = add nuw nsw i64 %i.0.i23.i9, 1
  %29 = icmp ult i64 %i.0.i23.i9, 255
  br i1 %29, label %for.body.i25.i, label %Map_String_VarId__constructor.exit28.i

Map_String_VarId__constructor.exit28.i:           ; preds = %for.body.i25.i
  %memberidx3.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 3
  %memberidx2.i26.i = getelementptr inbounds %Map_String_VarId_, ptr %24, i64 0, i32 1
  store i64 256, ptr %memberidx2.i26.i, align 4
  %memberidx3.i27.i = getelementptr inbounds %Map_String_VarId_, ptr %24, i64 0, i32 2
  store i64 0, ptr %memberidx3.i27.i, align 4
  store ptr %24, ptr %memberidx3.i, align 8
  %30 = tail call ptr @malloc(i32 24)
  %31 = tail call ptr @malloc(i32 2048)
  store ptr %31, ptr %30, align 8
  br label %for.body.i31.i

for.body.i31.i:                                   ; preds = %Map_String_VarId__constructor.exit28.i, %for.body.i31.i
  %i.0.i29.i8 = phi i64 [ 0, %Map_String_VarId__constructor.exit28.i ], [ %34, %for.body.i31.i ]
  %32 = load ptr, ptr %30, align 8
  %33 = getelementptr inbounds ptr, ptr %32, i64 %i.0.i29.i8
  store ptr null, ptr %33, align 8
  %34 = add nuw nsw i64 %i.0.i29.i8, 1
  %35 = icmp ult i64 %i.0.i29.i8, 255
  br i1 %35, label %for.body.i31.i, label %Map_String_EnumId__constructor.exit.i

Map_String_EnumId__constructor.exit.i:            ; preds = %for.body.i31.i
  %memberidx4.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 4
  %memberidx2.i32.i = getelementptr inbounds %Map_String_EnumId_, ptr %30, i64 0, i32 1
  store i64 256, ptr %memberidx2.i32.i, align 4
  %memberidx3.i33.i = getelementptr inbounds %Map_String_EnumId_, ptr %30, i64 0, i32 2
  store i64 0, ptr %memberidx3.i33.i, align 4
  store ptr %30, ptr %memberidx4.i, align 8
  %36 = tail call ptr @malloc(i32 24)
  %37 = tail call ptr @malloc(i32 2048)
  store ptr %37, ptr %36, align 8
  br label %for.body.i36.i

for.body.i36.i:                                   ; preds = %Map_String_EnumId__constructor.exit.i, %for.body.i36.i
  %i.0.i34.i7 = phi i64 [ 0, %Map_String_EnumId__constructor.exit.i ], [ %40, %for.body.i36.i ]
  %38 = load ptr, ptr %36, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %i.0.i34.i7
  store ptr null, ptr %39, align 8
  %40 = add nuw nsw i64 %i.0.i34.i7, 1
  %41 = icmp ult i64 %i.0.i34.i7, 255
  br i1 %41, label %for.body.i36.i, label %Scope_constructor.exit

Scope_constructor.exit:                           ; preds = %for.body.i36.i
  %memberidx5.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 6
  %memberidx2.i37.i = getelementptr inbounds %Map_String_Type_, ptr %36, i64 0, i32 1
  store i64 256, ptr %memberidx2.i37.i, align 4
  %memberidx3.i38.i = getelementptr inbounds %Map_String_Type_, ptr %36, i64 0, i32 2
  store i64 0, ptr %memberidx3.i38.i, align 4
  store ptr %36, ptr %memberidx5.i, align 8
  %memberidx6.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 5
  store ptr null, ptr %memberidx6.i, align 8
  %memberidx7.i = getelementptr inbounds %Scope, ptr %8, i64 0, i32 7
  %42 = tail call ptr @malloc(i32 24)
  %memberidx.i.i6 = getelementptr inbounds %Array_ScopeId_, ptr %42, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i6, align 4
  %memberidx1.i17.i = getelementptr inbounds %Array_ScopeId_, ptr %42, i64 0, i32 2
  store i64 8, ptr %memberidx1.i17.i, align 4
  %43 = tail call ptr @malloc(i32 64)
  store ptr %43, ptr %42, align 8
  store i64 0, ptr %memberidx.i.i6, align 4
  store ptr %42, ptr %memberidx7.i, align 8
  %44 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %Array_Scope_, ptr %44, i64 0, i32 1
  %45 = load i64, ptr %memberidx.i, align 4
  %46 = add i64 %45, 1
  %memberidx.i.i = getelementptr inbounds %Array_Scope_, ptr %44, i64 0, i32 2
  %47 = load i64, ptr %memberidx.i.i, align 4
  %48 = icmp slt i64 %47, %46
  %.pre = load ptr, ptr %44, align 8
  br i1 %48, label %while.entry.i.i, label %Array_Scope____sl__.exit

while.entry.i.i:                                  ; preds = %Scope_constructor.exit, %while.entry.i.i
  %49 = phi ptr [ %53, %while.entry.i.i ], [ %.pre, %Scope_constructor.exit ]
  %50 = phi i64 [ %54, %while.entry.i.i ], [ %47, %Scope_constructor.exit ]
  %51 = shl nuw i64 %50, 1
  store i64 %51, ptr %memberidx.i.i, align 4
  %52 = shl i64 %50, 4
  %53 = tail call ptr @realloc(ptr %49, i64 %52)
  store ptr %53, ptr %44, align 8
  %54 = load i64, ptr %memberidx.i.i, align 4
  %55 = icmp slt i64 %54, %46
  br i1 %55, label %while.entry.i.i, label %Array_Scope____sl__.exit.loopexit

Array_Scope____sl__.exit.loopexit:                ; preds = %while.entry.i.i
  %.pre12 = load i64, ptr %memberidx.i, align 4
  %.pre14 = add nsw i64 %.pre12, 1
  br label %Array_Scope____sl__.exit

Array_Scope____sl__.exit:                         ; preds = %Scope_constructor.exit, %Array_Scope____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre14, %Array_Scope____sl__.exit.loopexit ], [ %46, %Scope_constructor.exit ]
  %56 = phi ptr [ %53, %Array_Scope____sl__.exit.loopexit ], [ %.pre, %Scope_constructor.exit ]
  %57 = phi i64 [ %.pre12, %Array_Scope____sl__.exit.loopexit ], [ %45, %Scope_constructor.exit ]
  store i64 %.pre-phi, ptr %memberidx.i, align 4
  %58 = getelementptr inbounds ptr, ptr %56, i64 %57
  store ptr %8, ptr %58, align 8
  ret ptr %8
}

define internal fastcc ptr @TypeChecker_check_object_binary_expr(ptr %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %6 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %5)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend19, %ifend38, %TypeChecker_error.exit147, %if.entry24, %TypeChecker_error.exit120, %if.entry8, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %105, %if.entry8 ], [ null, %TypeChecker_error.exit120 ], [ %164, %if.entry24 ], [ null, %TypeChecker_error.exit147 ], [ %223, %ifend38 ], [ null, %ifend19 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %8 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %memberidx.i = getelementptr inbounds %String, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx.i, align 4
  %10 = trunc i64 %9 to i32
  %11 = add i32 %10, 1
  %12 = tail call ptr @malloc(i32 %11)
  %13 = load ptr, ptr %8, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %13, i64 %9, i1 false)
  %14 = getelementptr inbounds i8, ptr %12, i64 %9
  store i8 0, ptr %14, align 1
  %15 = alloca ptr, align 8
  %16 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %15, ptr nonnull @178, ptr %12)
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  store i64 %16, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %18, i64 0, i32 2
  store i64 %16, ptr %memberidx2.i, align 4
  tail call void @free(ptr %12)
  %19 = load ptr, ptr %2, align 8
  %memberidx.i92 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %20 = load ptr, ptr %memberidx.i92, align 8
  %memberidx1.i93 = getelementptr inbounds %Compiler, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx1.i93, align 8
  %22 = call ptr @malloc(i32 24)
  store i64 4, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %22, i64 0, i32 2
  store ptr %19, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %22, i64 0, i32 1
  store ptr %18, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i.i, align 4
  %24 = add i64 %23, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 2
  %25 = load i64, ptr %memberidx.i.i.i, align 4
  %26 = icmp slt i64 %25, %24
  %.pre182 = load ptr, ptr %21, align 8
  br i1 %26, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %27 = phi ptr [ %31, %while.entry.i.i.i ], [ %.pre182, %if.entry ]
  %28 = phi i64 [ %32, %while.entry.i.i.i ], [ %25, %if.entry ]
  %29 = shl nuw i64 %28, 1
  store i64 %29, ptr %memberidx.i.i.i, align 4
  %30 = shl i64 %28, 4
  %31 = call ptr @realloc(ptr %27, i64 %30)
  store ptr %31, ptr %21, align 8
  %32 = load i64, ptr %memberidx.i.i.i, align 4
  %33 = icmp slt i64 %32, %24
  br i1 %33, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre183 = load i64, ptr %memberidx.i.i, align 4
  %.pre187 = add nsw i64 %.pre183, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre187, %TypeChecker_error.exit.loopexit ], [ %24, %if.entry ]
  %34 = phi ptr [ %31, %TypeChecker_error.exit.loopexit ], [ %.pre182, %if.entry ]
  %35 = phi i64 [ %.pre183, %TypeChecker_error.exit.loopexit ], [ %23, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %36 = getelementptr inbounds ptr, ptr %34, i64 %35
  store ptr %22, ptr %36, align 8
  br label %common.ret

ifend:                                            ; preds = %4
  %37 = load ptr, ptr %0, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i165, %ifend
  %.tr11.i.in = phi ptr [ %memberidx3, %ifend ], [ %memberidx1.i164, %if.entry.i165 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %38 = load i64, ptr %.tr11.i, align 4
  switch i64 %38, label %get_class_from_type.exit [
    i64 20, label %if.entry.i165
    i64 11, label %if.entry3.i
  ]

if.entry.i165:                                    ; preds = %tailrecurse.i
  %memberidx1.i164 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i166 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %39 = load ptr, ptr %memberidx6.i166, align 8
  %40 = load ptr, ptr %37, align 8
  %41 = load i64, ptr %39, align 4
  %42 = load ptr, ptr %40, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %memberidx2.i.i167 = getelementptr inbounds %Module, ptr %44, i64 0, i32 3
  %45 = load ptr, ptr %memberidx2.i.i167, align 8
  %memberidx3.i.i168 = getelementptr inbounds %TypeId, ptr %39, i64 0, i32 2
  %46 = load i64, ptr %memberidx3.i.i168, align 4
  %47 = load ptr, ptr %45, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i163 = phi ptr [ %49, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx4 = getelementptr inbounds %Class, ptr %common.ret.op.i163, i64 0, i32 6
  %50 = load ptr, ptr %memberidx4, align 8
  %51 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %6)
  %memberidx.i94 = getelementptr inbounds %Map_String_PropId_, ptr %50, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i94, align 4
  %53 = urem i64 %51, %52
  %54 = load ptr, ptr %50, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  %.not.i = icmp eq ptr %56, null
  br i1 %.not.i, label %if.entry5, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %get_class_from_type.exit
  %memberidx1.i.i96 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %57 = load i64, ptr %memberidx1.i.i96, align 4
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %58 = phi ptr [ %67, %else.i ], [ %54, %while.entry.i.preheader ]
  %59 = phi i64 [ %68, %else.i ], [ %52, %while.entry.i.preheader ]
  %60 = phi ptr [ %72, %else.i ], [ %56, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %70, %else.i ], [ %53, %while.entry.i.preheader ]
  %61 = load ptr, ptr %60, align 8
  %memberidx.i.i95 = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i.i95, align 4
  %.not.i.i = icmp eq i64 %62, %57
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %63 = load ptr, ptr %61, align 8
  %64 = load ptr, ptr %6, align 8
  %65 = tail call i64 @memcmp(ptr %63, ptr %64, i64 %57)
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i94, align 4
  %.pre172 = load ptr, ptr %50, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre173.pre = load ptr, ptr %50, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre173.pre, i64 %hash.0.i
  %.pre174.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre174.pre, null
  br i1 %.not25.i, label %if.entry5, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %67 = phi ptr [ %.pre172, %ifend.i.i.else.i_crit_edge ], [ %58, %while.entry.i ]
  %68 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %59, %while.entry.i ]
  %69 = add nuw i64 %hash.0.i, 1
  %70 = urem i64 %69, %68
  %71 = getelementptr inbounds ptr, ptr %67, i64 %70
  %72 = load ptr, ptr %71, align 8
  %.not26.i = icmp eq ptr %72, null
  br i1 %.not26.i, label %if.entry5, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre174.pre, i64 0, i32 1
  %73 = load ptr, ptr %memberidx11.i, align 8
  %74 = icmp eq ptr %73, null
  br i1 %74, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_String_PropId____getitem__.exit
  %75 = add i64 %5, -11
  %76 = icmp ult i64 %75, 2
  br i1 %76, label %if.entry8, label %ifend10

ifend7:                                           ; preds = %Map_String_PropId____getitem__.exit
  %77 = load ptr, ptr %0, align 8
  %memberidx.i.i97 = getelementptr inbounds %PropId, ptr %73, i64 0, i32 1
  %78 = load ptr, ptr %memberidx.i.i97, align 8
  %79 = load ptr, ptr %77, align 8
  %80 = load i64, ptr %78, align 4
  %81 = load ptr, ptr %79, align 8
  %82 = getelementptr inbounds ptr, ptr %81, i64 %80
  %83 = load ptr, ptr %82, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %83, i64 0, i32 3
  %84 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %78, i64 0, i32 2
  %85 = load i64, ptr %memberidx3.i.i.i, align 4
  %86 = load ptr, ptr %84, align 8
  %87 = getelementptr inbounds ptr, ptr %86, i64 %85
  %88 = load ptr, ptr %87, align 8
  %89 = load i64, ptr %73, align 4
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend7
  %memberidx1.i99 = getelementptr inbounds %Class, ptr %88, i64 0, i32 5
  %91 = load ptr, ptr %memberidx1.i99, align 8
  %memberidx2.i100 = getelementptr inbounds %PropId, ptr %73, i64 0, i32 2
  %92 = load i64, ptr %memberidx2.i100, align 4
  %93 = load ptr, ptr %91, align 8
  %94 = getelementptr inbounds ptr, ptr %93, i64 %92
  %95 = load ptr, ptr %94, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %95, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend7
  %memberidx4.i = getelementptr inbounds %Class, ptr %88, i64 0, i32 4
  %96 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %73, i64 0, i32 2
  %97 = load i64, ptr %memberidx5.i, align 4
  %98 = load ptr, ptr %96, align 8
  %99 = getelementptr inbounds ptr, ptr %98, i64 %97
  %100 = load ptr, ptr %99, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %100, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i98 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx16 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i98, i64 0, i32 1
  %101 = load ptr, ptr %memberidx16, align 8
  %102 = load ptr, ptr %101, align 8
  %103 = load ptr, ptr %102, align 8
  %104 = icmp eq ptr %3, null
  br i1 %104, label %if.entry17, label %ifend19

if.entry8:                                        ; preds = %if.entry5
  %105 = tail call ptr @malloc(i32 49)
  %106 = load ptr, ptr %memberidx3, align 8
  %memberidx12 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %107 = load ptr, ptr %memberidx12, align 8
  %108 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %106, ptr %107)
  %109 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %109, align 4
  store i64 8, ptr %105, align 4
  %memberidx.i.i101 = getelementptr inbounds %Expression, ptr %105, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i101, align 4
  %memberidx1.i.i102 = getelementptr inbounds %Expression, ptr %105, i64 0, i32 1
  %memberidx.i103 = getelementptr inbounds %BinaryExpression, ptr %105, i64 0, i32 4
  store ptr %1, ptr %memberidx.i103, align 8
  %memberidx1.i104 = getelementptr inbounds %BinaryExpression, ptr %105, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i104, align 4
  %memberidx2.i105 = getelementptr inbounds %BinaryExpression, ptr %105, i64 0, i32 6
  store ptr %108, ptr %memberidx2.i105, align 8
  %memberidx3.i106 = getelementptr inbounds %Expression, ptr %105, i64 0, i32 3
  store ptr %109, ptr %memberidx3.i106, align 8
  store i1 false, ptr %memberidx1.i.i102, align 1
  br label %common.ret

ifend10:                                          ; preds = %if.entry5
  %110 = tail call fastcc ptr @dump_bin_op(i64 %5)
  %memberidx.i108 = getelementptr inbounds %String, ptr %110, i64 0, i32 1
  %111 = load i64, ptr %memberidx.i108, align 4
  %112 = trunc i64 %111 to i32
  %113 = add i32 %112, 1
  %114 = tail call ptr @malloc(i32 %113)
  %115 = load ptr, ptr %110, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %114, ptr align 8 %115, i64 %111, i1 false)
  %116 = getelementptr inbounds i8, ptr %114, i64 %111
  store i8 0, ptr %116, align 1
  %memberidx13 = getelementptr inbounds %Class, ptr %common.ret.op.i163, i64 0, i32 1
  %117 = load ptr, ptr %memberidx13, align 8
  %memberidx.i109 = getelementptr inbounds %String, ptr %117, i64 0, i32 1
  %118 = load i64, ptr %memberidx.i109, align 4
  %119 = trunc i64 %118 to i32
  %120 = add i32 %119, 1
  %121 = tail call ptr @malloc(i32 %120)
  %122 = load ptr, ptr %117, align 8
  %123 = load i64, ptr %memberidx.i109, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %121, ptr align 8 %122, i64 %123, i1 false)
  %124 = getelementptr inbounds i8, ptr %121, i64 %123
  store i8 0, ptr %124, align 1
  %memberidx.i110 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %125 = load i64, ptr %memberidx.i110, align 4
  %126 = trunc i64 %125 to i32
  %127 = add i32 %126, 1
  %128 = tail call ptr @malloc(i32 %127)
  %129 = load ptr, ptr %6, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %128, ptr align 8 %129, i64 %125, i1 false)
  %130 = getelementptr inbounds i8, ptr %128, i64 %125
  store i8 0, ptr %130, align 1
  %131 = alloca ptr, align 8
  %132 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %131, ptr nonnull @179, ptr %114, ptr %121, ptr %128)
  %133 = load ptr, ptr %131, align 8
  %134 = tail call ptr @malloc(i32 24)
  store ptr %133, ptr %134, align 8
  %memberidx1.i111 = getelementptr inbounds %String, ptr %134, i64 0, i32 1
  store i64 %132, ptr %memberidx1.i111, align 4
  %memberidx2.i112 = getelementptr inbounds %String, ptr %134, i64 0, i32 2
  store i64 %132, ptr %memberidx2.i112, align 4
  tail call void @free(ptr %114)
  tail call void @free(ptr %121)
  tail call void @free(ptr %128)
  %135 = load ptr, ptr %2, align 8
  %memberidx.i113 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %136 = load ptr, ptr %memberidx.i113, align 8
  %memberidx1.i114 = getelementptr inbounds %Compiler, ptr %136, i64 0, i32 5
  %137 = load ptr, ptr %memberidx1.i114, align 8
  %138 = call ptr @malloc(i32 24)
  store i64 1, ptr %138, align 4
  %memberidx1.i.i115 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 2
  store ptr %135, ptr %memberidx1.i.i115, align 8
  %memberidx2.i.i116 = getelementptr inbounds %FloError, ptr %138, i64 0, i32 1
  store ptr %134, ptr %memberidx2.i.i116, align 8
  %memberidx.i.i117 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 1
  %139 = load i64, ptr %memberidx.i.i117, align 4
  %140 = add i64 %139, 1
  %memberidx.i.i.i118 = getelementptr inbounds %Array_FloError_, ptr %137, i64 0, i32 2
  %141 = load i64, ptr %memberidx.i.i.i118, align 4
  %142 = icmp slt i64 %141, %140
  %.pre179 = load ptr, ptr %137, align 8
  br i1 %142, label %while.entry.i.i.i119, label %TypeChecker_error.exit120

while.entry.i.i.i119:                             ; preds = %ifend10, %while.entry.i.i.i119
  %143 = phi ptr [ %147, %while.entry.i.i.i119 ], [ %.pre179, %ifend10 ]
  %144 = phi i64 [ %148, %while.entry.i.i.i119 ], [ %141, %ifend10 ]
  %145 = shl nuw i64 %144, 1
  store i64 %145, ptr %memberidx.i.i.i118, align 4
  %146 = shl i64 %144, 4
  %147 = call ptr @realloc(ptr %143, i64 %146)
  store ptr %147, ptr %137, align 8
  %148 = load i64, ptr %memberidx.i.i.i118, align 4
  %149 = icmp slt i64 %148, %140
  br i1 %149, label %while.entry.i.i.i119, label %TypeChecker_error.exit120.loopexit

TypeChecker_error.exit120.loopexit:               ; preds = %while.entry.i.i.i119
  %.pre180 = load i64, ptr %memberidx.i.i117, align 4
  %.pre188 = add nsw i64 %.pre180, 1
  br label %TypeChecker_error.exit120

TypeChecker_error.exit120:                        ; preds = %ifend10, %TypeChecker_error.exit120.loopexit
  %.pre-phi189 = phi i64 [ %.pre188, %TypeChecker_error.exit120.loopexit ], [ %140, %ifend10 ]
  %150 = phi ptr [ %147, %TypeChecker_error.exit120.loopexit ], [ %.pre179, %ifend10 ]
  %151 = phi i64 [ %.pre180, %TypeChecker_error.exit120.loopexit ], [ %139, %ifend10 ]
  store i64 %.pre-phi189, ptr %memberidx.i.i117, align 4
  %152 = getelementptr inbounds ptr, ptr %150, i64 %151
  store ptr %138, ptr %152, align 8
  br label %common.ret

if.entry17:                                       ; preds = %get_class_prop_type.exit
  %memberidx20 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %153 = load ptr, ptr %memberidx20, align 8
  %154 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %103, ptr %153)
  br label %ifend19

ifend19:                                          ; preds = %get_class_prop_type.exit, %if.entry17
  %right.0 = phi ptr [ %154, %if.entry17 ], [ %3, %get_class_prop_type.exit ]
  %memberidx.i121 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %155 = load ptr, ptr %memberidx.i121, align 8
  %memberidx1.i122 = getelementptr inbounds %Compiler, ptr %155, i64 0, i32 5
  %156 = load ptr, ptr %memberidx1.i122, align 8
  %memberidx2.i123 = getelementptr inbounds %Array_FloError_, ptr %156, i64 0, i32 1
  %157 = load i64, ptr %memberidx2.i123, align 4
  %158 = icmp sgt i64 %157, 0
  br i1 %158, label %common.ret, label %ifend23

ifend23:                                          ; preds = %ifend19
  %memberidx.i124 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 2
  %159 = load i64, ptr %memberidx.i124, align 4
  %160 = icmp eq i64 %159, 5
  %161 = add i64 %5, -11
  %162 = icmp ult i64 %161, 2
  %163 = and i1 %162, %160
  br i1 %163, label %if.entry24, label %ifend26

if.entry24:                                       ; preds = %ifend23
  %164 = tail call ptr @malloc(i32 49)
  %165 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %165, align 4
  store i64 8, ptr %164, align 4
  %memberidx.i.i125 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i125, align 4
  %memberidx1.i.i126 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 1
  %memberidx.i127 = getelementptr inbounds %BinaryExpression, ptr %164, i64 0, i32 4
  store ptr %1, ptr %memberidx.i127, align 8
  %memberidx1.i128 = getelementptr inbounds %BinaryExpression, ptr %164, i64 0, i32 5
  store i64 %5, ptr %memberidx1.i128, align 4
  %memberidx2.i129 = getelementptr inbounds %BinaryExpression, ptr %164, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i129, align 8
  %memberidx3.i130 = getelementptr inbounds %Expression, ptr %164, i64 0, i32 3
  store ptr %165, ptr %memberidx3.i130, align 8
  store i1 false, ptr %memberidx1.i.i126, align 1
  br label %common.ret

ifend26:                                          ; preds = %ifend23
  %166 = icmp eq i64 %5, 18
  %memberidx30 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %167 = load ptr, ptr %memberidx30, align 8
  br i1 %166, label %if.entry27, label %ifend29

if.entry27:                                       ; preds = %ifend26
  %168 = load i64, ptr %167, align 4
  %169 = add i64 %168, -1
  %170 = icmp ult i64 %169, 7
  %171 = load i64, ptr %103, align 4
  %172 = add i64 %171, -1
  %173 = icmp ult i64 %172, 7
  %174 = and i1 %170, %173
  br i1 %174, label %if.entry31, label %ifend29

ifend29:                                          ; preds = %ifend26, %if.entry31, %if.entry27
  %175 = phi ptr [ %ternary.i, %if.entry31 ], [ %167, %if.entry27 ], [ %167, %ifend26 ]
  %right.1 = phi ptr [ %178, %if.entry31 ], [ %right.0, %if.entry27 ], [ %right.0, %ifend26 ]
  %176 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %103, ptr %175)
  br i1 %176, label %ifend38, label %if.entry36

if.entry31:                                       ; preds = %if.entry27
  %177 = icmp ugt i64 %168, %171
  %ternary.i = select i1 %177, ptr %167, ptr %103
  %178 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %178, align 4
  %memberidx.i.i.i132 = getelementptr inbounds %Expression, ptr %178, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i132, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %178, i64 0, i32 1
  %memberidx.i.i133 = getelementptr inbounds %TypeCastExpression, ptr %178, i64 0, i32 4
  store ptr %right.0, ptr %memberidx.i.i133, align 8
  %memberidx1.i.i134 = getelementptr inbounds %Expression, ptr %178, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i134, align 8
  %memberidx3.i.i = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 1
  %179 = load i1, ptr %memberidx3.i.i, align 1
  store i1 %179, ptr %memberidx1.i.i.i, align 1
  br label %ifend29

if.entry36:                                       ; preds = %ifend29
  %memberidx35 = getelementptr inbounds %Expression, ptr %right.1, i64 0, i32 3
  %180 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %103)
  %memberidx.i136 = getelementptr inbounds %String, ptr %180, i64 0, i32 1
  %181 = load i64, ptr %memberidx.i136, align 4
  %182 = trunc i64 %181 to i32
  %183 = add i32 %182, 1
  %184 = tail call ptr @malloc(i32 %183)
  %185 = load ptr, ptr %180, align 8
  %186 = load i64, ptr %memberidx.i136, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %184, ptr align 8 %185, i64 %186, i1 false)
  %187 = getelementptr inbounds i8, ptr %184, i64 %186
  store i8 0, ptr %187, align 1
  %188 = load ptr, ptr %memberidx35, align 8
  %189 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %188)
  %memberidx.i137 = getelementptr inbounds %String, ptr %189, i64 0, i32 1
  %190 = load i64, ptr %memberidx.i137, align 4
  %191 = trunc i64 %190 to i32
  %192 = add i32 %191, 1
  %193 = tail call ptr @malloc(i32 %192)
  %194 = load ptr, ptr %189, align 8
  %195 = load i64, ptr %memberidx.i137, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %193, ptr align 8 %194, i64 %195, i1 false)
  %196 = getelementptr inbounds i8, ptr %193, i64 %195
  store i8 0, ptr %196, align 1
  %197 = alloca ptr, align 8
  %198 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %197, ptr nonnull @177, ptr %184, ptr %193)
  %199 = load ptr, ptr %197, align 8
  %200 = tail call ptr @malloc(i32 24)
  store ptr %199, ptr %200, align 8
  %memberidx1.i138 = getelementptr inbounds %String, ptr %200, i64 0, i32 1
  store i64 %198, ptr %memberidx1.i138, align 4
  %memberidx2.i139 = getelementptr inbounds %String, ptr %200, i64 0, i32 2
  store i64 %198, ptr %memberidx2.i139, align 4
  tail call void @free(ptr %184)
  tail call void @free(ptr %193)
  %memberidx40 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %201 = load ptr, ptr %memberidx40, align 8
  %202 = load ptr, ptr %201, align 8
  %203 = load ptr, ptr %memberidx.i121, align 8
  %memberidx1.i141 = getelementptr inbounds %Compiler, ptr %203, i64 0, i32 5
  %204 = load ptr, ptr %memberidx1.i141, align 8
  %205 = call ptr @malloc(i32 24)
  store i64 5, ptr %205, align 4
  %memberidx1.i.i142 = getelementptr inbounds %FloError, ptr %205, i64 0, i32 2
  store ptr %202, ptr %memberidx1.i.i142, align 8
  %memberidx2.i.i143 = getelementptr inbounds %FloError, ptr %205, i64 0, i32 1
  store ptr %200, ptr %memberidx2.i.i143, align 8
  %memberidx.i.i144 = getelementptr inbounds %Array_FloError_, ptr %204, i64 0, i32 1
  %206 = load i64, ptr %memberidx.i.i144, align 4
  %207 = add i64 %206, 1
  %memberidx.i.i.i145 = getelementptr inbounds %Array_FloError_, ptr %204, i64 0, i32 2
  %208 = load i64, ptr %memberidx.i.i.i145, align 4
  %209 = icmp slt i64 %208, %207
  %.pre176 = load ptr, ptr %204, align 8
  br i1 %209, label %while.entry.i.i.i146, label %TypeChecker_error.exit147

while.entry.i.i.i146:                             ; preds = %if.entry36, %while.entry.i.i.i146
  %210 = phi ptr [ %214, %while.entry.i.i.i146 ], [ %.pre176, %if.entry36 ]
  %211 = phi i64 [ %215, %while.entry.i.i.i146 ], [ %208, %if.entry36 ]
  %212 = shl nuw i64 %211, 1
  store i64 %212, ptr %memberidx.i.i.i145, align 4
  %213 = shl i64 %211, 4
  %214 = call ptr @realloc(ptr %210, i64 %213)
  store ptr %214, ptr %204, align 8
  %215 = load i64, ptr %memberidx.i.i.i145, align 4
  %216 = icmp slt i64 %215, %207
  br i1 %216, label %while.entry.i.i.i146, label %TypeChecker_error.exit147.loopexit

TypeChecker_error.exit147.loopexit:               ; preds = %while.entry.i.i.i146
  %.pre177 = load i64, ptr %memberidx.i.i144, align 4
  %.pre190 = add nsw i64 %.pre177, 1
  br label %TypeChecker_error.exit147

TypeChecker_error.exit147:                        ; preds = %if.entry36, %TypeChecker_error.exit147.loopexit
  %.pre-phi191 = phi i64 [ %.pre190, %TypeChecker_error.exit147.loopexit ], [ %207, %if.entry36 ]
  %217 = phi ptr [ %214, %TypeChecker_error.exit147.loopexit ], [ %.pre176, %if.entry36 ]
  %218 = phi i64 [ %.pre177, %TypeChecker_error.exit147.loopexit ], [ %206, %if.entry36 ]
  store i64 %.pre-phi191, ptr %memberidx.i.i144, align 4
  %219 = getelementptr inbounds ptr, ptr %217, i64 %218
  store ptr %205, ptr %219, align 8
  br label %common.ret

ifend38:                                          ; preds = %ifend29
  %220 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %220, align 4
  %memberidx.i.i148 = getelementptr inbounds %Expression, ptr %220, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i148, align 4
  %memberidx1.i.i149 = getelementptr inbounds %Expression, ptr %220, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i149, align 1
  %memberidx.i150 = getelementptr inbounds %MemberExpression, ptr %220, i64 0, i32 4
  store ptr %1, ptr %memberidx.i150, align 8
  %memberidx1.i151 = getelementptr inbounds %MemberExpression, ptr %220, i64 0, i32 5
  store ptr %73, ptr %memberidx1.i151, align 8
  %memberidx2.i152 = getelementptr inbounds %Expression, ptr %220, i64 0, i32 3
  store ptr %common.ret.op.i98, ptr %memberidx2.i152, align 8
  %221 = tail call ptr @malloc(i32 24)
  %memberidx.i153 = getelementptr inbounds %Array_Expression_, ptr %221, i64 0, i32 1
  store i64 0, ptr %memberidx.i153, align 4
  %memberidx1.i154 = getelementptr inbounds %Array_Expression_, ptr %221, i64 0, i32 2
  store i64 8, ptr %memberidx1.i154, align 4
  %222 = tail call ptr @malloc(i32 64)
  store ptr %222, ptr %221, align 8
  store ptr %right.1, ptr %222, align 8
  store i64 1, ptr %memberidx.i153, align 4
  %223 = tail call ptr @malloc(i32 41)
  %memberidx44 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i98, i64 0, i32 2
  %224 = load ptr, ptr %memberidx44, align 8
  store i64 8, ptr %223, align 4
  %memberidx.i.i155 = getelementptr inbounds %Expression, ptr %223, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i155, align 4
  %memberidx1.i.i156 = getelementptr inbounds %Expression, ptr %223, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i156, align 1
  %memberidx.i157 = getelementptr inbounds %CallExpression, ptr %223, i64 0, i32 4
  store ptr %220, ptr %memberidx.i157, align 8
  %memberidx1.i158 = getelementptr inbounds %CallExpression, ptr %223, i64 0, i32 5
  store ptr %221, ptr %memberidx1.i158, align 8
  %memberidx2.i159 = getelementptr inbounds %Expression, ptr %223, i64 0, i32 3
  store ptr %224, ptr %memberidx2.i159, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load i64, ptr %memberidx, align 4
  %memberidx1 = getelementptr inbounds %UnaryExpressionNode, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr %5)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx2.i, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %if.entry41, %TypeChecker_error.exit140, %if.entry34, %ifend28, %TypeChecker_error.exit, %if.entry17, %ifend12
  %common.ret.op = phi ptr [ %17, %ifend12 ], [ %22, %if.entry17 ], [ null, %TypeChecker_error.exit ], [ %68, %ifend28 ], [ %80, %if.entry34 ], [ null, %TypeChecker_error.exit140 ], [ %127, %if.entry41 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %memberidx2 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %12 = load i1, ptr %memberidx3, align 1
  switch i64 %4, label %ifend16 [
    i64 6, label %if.entry4
    i64 7, label %if.entry14
  ]

if.entry4:                                        ; preds = %ifend
  %13 = load i64, ptr %11, align 4
  %14 = add i64 %13, -1
  %15 = icmp ult i64 %14, 9
  br i1 %15, label %if.entry7, label %ifend33.split

if.entry7:                                        ; preds = %if.entry4
  %16 = icmp ult i64 %14, 7
  br i1 %16, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %if.entry7
  %memberidx13 = getelementptr inbounds %IntType, ptr %11, i64 0, i32 1
  store i1 true, ptr %memberidx13, align 1
  br label %ifend12

ifend12:                                          ; preds = %if.entry7, %if.entry10
  %17 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %17, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 1
  %memberidx.i86 = getelementptr inbounds %UnaryExpression, ptr %17, i64 0, i32 4
  store i64 6, ptr %memberidx.i86, align 4
  %memberidx1.i87 = getelementptr inbounds %UnaryExpression, ptr %17, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i87, align 8
  %memberidx2.i88 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i88, align 8
  store i1 %12, ptr %memberidx1.i.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %ifend
  %18 = load i64, ptr %11, align 4
  %19 = icmp ult i64 %18, 10
  br i1 %19, label %if.entry17, label %ifend33.split

ifend16:                                          ; preds = %ifend
  %20 = add i64 %4, -2
  %21 = icmp ult i64 %20, 4
  br i1 %21, label %if.entry20, label %ifend22

if.entry17:                                       ; preds = %if.entry14
  %22 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %22, align 4
  %memberidx.i.i89 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i89, align 4
  %memberidx1.i.i90 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 1
  %memberidx.i91 = getelementptr inbounds %UnaryExpression, ptr %22, i64 0, i32 4
  store i64 7, ptr %memberidx.i91, align 4
  %memberidx1.i92 = getelementptr inbounds %UnaryExpression, ptr %22, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i92, align 8
  %memberidx2.i93 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i93, align 8
  store i1 %12, ptr %memberidx1.i.i90, align 1
  br label %common.ret

if.entry20:                                       ; preds = %ifend16
  %23 = load i64, ptr %11, align 4
  %24 = add i64 %23, -1
  %25 = icmp ult i64 %24, 9
  %26 = icmp eq i64 %23, 13
  %27 = or i1 %26, %25
  br i1 %27, label %if.entry23, label %ifend22

ifend22:                                          ; preds = %if.entry20, %ifend16
  switch i64 %4, label %ifend33.split [
    i64 8, label %if.entry31
    i64 1, label %if.entry38
  ]

if.entry23:                                       ; preds = %if.entry20
  %memberidx.i95 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i95, align 4
  switch i64 %28, label %if.entry26 [
    i64 8, label %if.entry.i
    i64 13, label %if.entry4.i
    i64 14, label %check_is_var.exit
  ]

if.entry.i:                                       ; preds = %if.entry23
  %memberidx1.i96 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %29 = load ptr, ptr %memberidx1.i96, align 8
  %30 = load i64, ptr %29, align 4
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %ifend28, label %if.entry26

if.entry4.i:                                      ; preds = %if.entry23
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %32 = load ptr, ptr %memberidx7.i, align 8
  %33 = load i64, ptr %32, align 4
  %34 = icmp eq i64 %33, 1
  br i1 %34, label %ifend28, label %if.entry26

check_is_var.exit:                                ; preds = %if.entry23
  %memberidx13.i = getelementptr inbounds %IndexExpression, ptr %6, i64 0, i32 4
  %35 = load ptr, ptr %memberidx13.i, align 8
  %memberidx14.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %36 = load ptr, ptr %memberidx14.i, align 8
  %37 = load i64, ptr %36, align 4
  %.not151 = icmp eq i64 %37, 15
  br i1 %.not151, label %if.entry26, label %ifend28

if.entry26:                                       ; preds = %if.entry4.i, %if.entry.i, %if.entry23, %check_is_var.exit
  %38 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %memberidx.i97 = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i97, align 4
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, 1
  %42 = tail call ptr @malloc(i32 %41)
  %43 = load ptr, ptr %38, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %43, i64 %39, i1 false)
  %44 = getelementptr inbounds i8, ptr %42, i64 %39
  store i8 0, ptr %44, align 1
  %45 = alloca ptr, align 8
  %46 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %45, ptr nonnull @185, ptr %42)
  %47 = load ptr, ptr %45, align 8
  %48 = tail call ptr @malloc(i32 24)
  store ptr %47, ptr %48, align 8
  %memberidx1.i98 = getelementptr inbounds %String, ptr %48, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i98, align 4
  %memberidx2.i99 = getelementptr inbounds %String, ptr %48, i64 0, i32 2
  store i64 %46, ptr %memberidx2.i99, align 4
  tail call void @free(ptr %42)
  %49 = load ptr, ptr %memberidx1, align 8
  %50 = load ptr, ptr %49, align 8
  %51 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i101 = getelementptr inbounds %Compiler, ptr %51, i64 0, i32 5
  %52 = load ptr, ptr %memberidx1.i101, align 8
  %53 = call ptr @malloc(i32 24)
  store i64 4, ptr %53, align 4
  %memberidx1.i.i102 = getelementptr inbounds %FloError, ptr %53, i64 0, i32 2
  store ptr %50, ptr %memberidx1.i.i102, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %53, i64 0, i32 1
  store ptr %48, ptr %memberidx2.i.i, align 8
  %memberidx.i.i103 = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 1
  %54 = load i64, ptr %memberidx.i.i103, align 4
  %55 = add i64 %54, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %52, i64 0, i32 2
  %56 = load i64, ptr %memberidx.i.i.i, align 4
  %57 = icmp slt i64 %56, %55
  %.pre155 = load ptr, ptr %52, align 8
  br i1 %57, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry26, %while.entry.i.i.i
  %58 = phi ptr [ %62, %while.entry.i.i.i ], [ %.pre155, %if.entry26 ]
  %59 = phi i64 [ %63, %while.entry.i.i.i ], [ %56, %if.entry26 ]
  %60 = shl nuw i64 %59, 1
  store i64 %60, ptr %memberidx.i.i.i, align 4
  %61 = shl i64 %59, 4
  %62 = call ptr @realloc(ptr %58, i64 %61)
  store ptr %62, ptr %52, align 8
  %63 = load i64, ptr %memberidx.i.i.i, align 4
  %64 = icmp slt i64 %63, %55
  br i1 %64, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre156 = load i64, ptr %memberidx.i.i103, align 4
  %.pre158 = add nsw i64 %.pre156, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry26, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre158, %TypeChecker_error.exit.loopexit ], [ %55, %if.entry26 ]
  %65 = phi ptr [ %62, %TypeChecker_error.exit.loopexit ], [ %.pre155, %if.entry26 ]
  %66 = phi i64 [ %.pre156, %TypeChecker_error.exit.loopexit ], [ %54, %if.entry26 ]
  store i64 %.pre-phi, ptr %memberidx.i.i103, align 4
  %67 = getelementptr inbounds ptr, ptr %65, i64 %66
  store ptr %53, ptr %67, align 8
  br label %common.ret

ifend28:                                          ; preds = %if.entry4.i, %if.entry.i, %check_is_var.exit
  %68 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %68, align 4
  %memberidx.i.i104 = getelementptr inbounds %Expression, ptr %68, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i104, align 4
  %memberidx1.i.i105 = getelementptr inbounds %Expression, ptr %68, i64 0, i32 1
  %memberidx.i106 = getelementptr inbounds %UnaryExpression, ptr %68, i64 0, i32 4
  store i64 %4, ptr %memberidx.i106, align 4
  %memberidx1.i107 = getelementptr inbounds %UnaryExpression, ptr %68, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i107, align 8
  %memberidx2.i108 = getelementptr inbounds %Expression, ptr %68, i64 0, i32 3
  store ptr %11, ptr %memberidx2.i108, align 8
  store i1 false, ptr %memberidx1.i.i105, align 1
  br label %common.ret

if.entry31:                                       ; preds = %ifend22
  %memberidx.i110 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 2
  %69 = load i64, ptr %memberidx.i110, align 4
  switch i64 %69, label %ifend33.split [
    i64 8, label %if.entry.i113
    i64 13, label %if.entry4.i116
    i64 14, label %check_is_var.exit121
  ]

if.entry.i113:                                    ; preds = %if.entry31
  %memberidx1.i112 = getelementptr inbounds %VarAccessExpression, ptr %6, i64 0, i32 4
  %70 = load ptr, ptr %memberidx1.i112, align 8
  %71 = load i64, ptr %70, align 4
  %72 = icmp eq i64 %71, 1
  br i1 %72, label %if.entry34, label %ifend33.split

if.entry4.i116:                                   ; preds = %if.entry31
  %memberidx7.i115 = getelementptr inbounds %MemberExpression, ptr %6, i64 0, i32 5
  %73 = load ptr, ptr %memberidx7.i115, align 8
  %74 = load i64, ptr %73, align 4
  %75 = icmp eq i64 %74, 1
  br i1 %75, label %if.entry34, label %ifend33.split

check_is_var.exit121:                             ; preds = %if.entry31
  %memberidx13.i118 = getelementptr inbounds %IndexExpression, ptr %6, i64 0, i32 4
  %76 = load ptr, ptr %memberidx13.i118, align 8
  %memberidx14.i119 = getelementptr inbounds %Expression, ptr %76, i64 0, i32 3
  %77 = load ptr, ptr %memberidx14.i119, align 8
  %78 = load i64, ptr %77, align 4
  %.not = icmp eq i64 %78, 15
  br i1 %.not, label %ifend33.split, label %if.entry34

ifend33.split:                                    ; preds = %if.entry4, %if.entry14, %check_is_var.exit121, %if.entry31, %if.entry.i113, %if.entry4.i116, %ifend22
  %79 = tail call fastcc ptr @dump_unary_op(i64 %4)
  %memberidx.i129.phi.trans.insert = getelementptr inbounds %String, ptr %79, i64 0, i32 1
  %.pre = load i64, ptr %memberidx.i129.phi.trans.insert, align 4
  %extract.t = trunc i64 %.pre to i32
  %phi.bo = add i32 %extract.t, 1
  br label %ifend40

if.entry34:                                       ; preds = %if.entry4.i116, %if.entry.i113, %check_is_var.exit121
  %80 = tail call ptr @malloc(i32 41)
  %81 = tail call ptr @malloc(i32 16)
  %82 = load ptr, ptr %memberidx2, align 8
  store i64 13, ptr %81, align 4
  %memberidx.i122 = getelementptr inbounds %PointerType, ptr %81, i64 0, i32 1
  store ptr %82, ptr %memberidx.i122, align 8
  store i64 8, ptr %80, align 4
  %memberidx.i.i123 = getelementptr inbounds %Expression, ptr %80, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i123, align 4
  %memberidx1.i.i124 = getelementptr inbounds %Expression, ptr %80, i64 0, i32 1
  %memberidx.i125 = getelementptr inbounds %UnaryExpression, ptr %80, i64 0, i32 4
  store i64 8, ptr %memberidx.i125, align 4
  %memberidx1.i126 = getelementptr inbounds %UnaryExpression, ptr %80, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i126, align 8
  %memberidx2.i127 = getelementptr inbounds %Expression, ptr %80, i64 0, i32 3
  store ptr %81, ptr %memberidx2.i127, align 8
  store i1 false, ptr %memberidx1.i.i124, align 1
  br label %common.ret

if.entry38:                                       ; preds = %ifend22
  %83 = load i64, ptr %11, align 4
  %84 = icmp eq i64 %83, 20
  br i1 %84, label %if.entry.i150, label %is_object.exit

if.entry.i150:                                    ; preds = %if.entry38, %if.entry.i150
  %.tr5.i = phi ptr [ %85, %if.entry.i150 ], [ %11, %if.entry38 ]
  %memberidx1.i149 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %85 = load ptr, ptr %memberidx1.i149, align 8
  %86 = load i64, ptr %85, align 4
  %87 = icmp eq i64 %86, 20
  br i1 %87, label %if.entry.i150, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i150, %if.entry38
  %.lcssa.i = phi i64 [ %83, %if.entry38 ], [ %86, %if.entry.i150 ]
  %88 = icmp eq i64 %.lcssa.i, 11
  %89 = icmp eq i64 %83, 13
  %90 = or i1 %89, %88
  br i1 %90, label %if.entry41, label %if.entry38.split

if.entry38.split:                                 ; preds = %is_object.exit
  %91 = tail call ptr @malloc(i32 1)
  store i8 38, ptr %91, align 8
  %92 = tail call ptr @malloc(i32 24)
  store ptr %91, ptr %92, align 8
  %memberidx1.i.i31.i = getelementptr inbounds %String, ptr %92, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i31.i, align 4
  %memberidx2.i.i32.i = getelementptr inbounds %String, ptr %92, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i32.i, align 4
  br label %ifend40

ifend40:                                          ; preds = %if.entry38.split, %ifend33.split
  %.off0 = phi i32 [ %phi.bo, %ifend33.split ], [ 2, %if.entry38.split ]
  %phi.call = phi ptr [ %79, %ifend33.split ], [ %92, %if.entry38.split ]
  %memberidx.i129 = getelementptr inbounds %String, ptr %phi.call, i64 0, i32 1
  %93 = tail call ptr @malloc(i32 %.off0)
  %94 = load ptr, ptr %phi.call, align 8
  %95 = load i64, ptr %memberidx.i129, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %93, ptr align 8 %94, i64 %95, i1 false)
  %96 = getelementptr inbounds i8, ptr %93, i64 %95
  store i8 0, ptr %96, align 1
  %97 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %11)
  %memberidx.i130 = getelementptr inbounds %String, ptr %97, i64 0, i32 1
  %98 = load i64, ptr %memberidx.i130, align 4
  %99 = trunc i64 %98 to i32
  %100 = add i32 %99, 1
  %101 = tail call ptr @malloc(i32 %100)
  %102 = load ptr, ptr %97, align 8
  %103 = load i64, ptr %memberidx.i130, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %101, ptr align 8 %102, i64 %103, i1 false)
  %104 = getelementptr inbounds i8, ptr %101, i64 %103
  store i8 0, ptr %104, align 1
  %105 = alloca ptr, align 8
  %106 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %105, ptr nonnull @186, ptr %93, ptr %101)
  %107 = load ptr, ptr %105, align 8
  %108 = tail call ptr @malloc(i32 24)
  store ptr %107, ptr %108, align 8
  %memberidx1.i131 = getelementptr inbounds %String, ptr %108, i64 0, i32 1
  store i64 %106, ptr %memberidx1.i131, align 4
  %memberidx2.i132 = getelementptr inbounds %String, ptr %108, i64 0, i32 2
  store i64 %106, ptr %memberidx2.i132, align 4
  tail call void @free(ptr %93)
  tail call void @free(ptr %101)
  %109 = load ptr, ptr %2, align 8
  %110 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i134 = getelementptr inbounds %Compiler, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx1.i134, align 8
  %112 = call ptr @malloc(i32 24)
  store i64 5, ptr %112, align 4
  %memberidx1.i.i135 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 2
  store ptr %109, ptr %memberidx1.i.i135, align 8
  %memberidx2.i.i136 = getelementptr inbounds %FloError, ptr %112, i64 0, i32 1
  store ptr %108, ptr %memberidx2.i.i136, align 8
  %memberidx.i.i137 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 1
  %113 = load i64, ptr %memberidx.i.i137, align 4
  %114 = add i64 %113, 1
  %memberidx.i.i.i138 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 2
  %115 = load i64, ptr %memberidx.i.i.i138, align 4
  %116 = icmp slt i64 %115, %114
  %.pre152 = load ptr, ptr %111, align 8
  br i1 %116, label %while.entry.i.i.i139, label %TypeChecker_error.exit140

while.entry.i.i.i139:                             ; preds = %ifend40, %while.entry.i.i.i139
  %117 = phi ptr [ %121, %while.entry.i.i.i139 ], [ %.pre152, %ifend40 ]
  %118 = phi i64 [ %122, %while.entry.i.i.i139 ], [ %115, %ifend40 ]
  %119 = shl nuw i64 %118, 1
  store i64 %119, ptr %memberidx.i.i.i138, align 4
  %120 = shl i64 %118, 4
  %121 = call ptr @realloc(ptr %117, i64 %120)
  store ptr %121, ptr %111, align 8
  %122 = load i64, ptr %memberidx.i.i.i138, align 4
  %123 = icmp slt i64 %122, %114
  br i1 %123, label %while.entry.i.i.i139, label %TypeChecker_error.exit140.loopexit

TypeChecker_error.exit140.loopexit:               ; preds = %while.entry.i.i.i139
  %.pre153 = load i64, ptr %memberidx.i.i137, align 4
  %.pre159 = add nsw i64 %.pre153, 1
  br label %TypeChecker_error.exit140

TypeChecker_error.exit140:                        ; preds = %ifend40, %TypeChecker_error.exit140.loopexit
  %.pre-phi160 = phi i64 [ %.pre159, %TypeChecker_error.exit140.loopexit ], [ %114, %ifend40 ]
  %124 = phi ptr [ %121, %TypeChecker_error.exit140.loopexit ], [ %.pre152, %ifend40 ]
  %125 = phi i64 [ %.pre153, %TypeChecker_error.exit140.loopexit ], [ %113, %ifend40 ]
  store i64 %.pre-phi160, ptr %memberidx.i.i137, align 4
  %126 = getelementptr inbounds ptr, ptr %124, i64 %125
  store ptr %112, ptr %126, align 8
  br label %common.ret

if.entry41:                                       ; preds = %is_object.exit
  %127 = tail call ptr @malloc(i32 41)
  %128 = tail call ptr @malloc(i32 8)
  store i64 10, ptr %128, align 4
  store i64 8, ptr %127, align 4
  %memberidx.i.i141 = getelementptr inbounds %Expression, ptr %127, i64 0, i32 2
  store i64 10, ptr %memberidx.i.i141, align 4
  %memberidx1.i.i142 = getelementptr inbounds %Expression, ptr %127, i64 0, i32 1
  %memberidx.i143 = getelementptr inbounds %UnaryExpression, ptr %127, i64 0, i32 4
  store i64 1, ptr %memberidx.i143, align 4
  %memberidx1.i144 = getelementptr inbounds %UnaryExpression, ptr %127, i64 0, i32 5
  store ptr %6, ptr %memberidx1.i144, align 8
  %memberidx2.i145 = getelementptr inbounds %Expression, ptr %127, i64 0, i32 3
  store ptr %128, ptr %memberidx2.i145, align 8
  store i1 false, ptr %memberidx1.i.i142, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %args = alloca ptr, align 8
  %memberidx = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 3
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %3)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %5, i64 0, i32 5
  %6 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend27, %2, %TypeChecker_error.exit124, %TypeChecker_error.exit108, %TypeChecker_error.exit98, %TypeChecker_error.exit, %ifend10
  %common.ret.op = phi ptr [ %39, %ifend10 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit98 ], [ null, %TypeChecker_error.exit108 ], [ null, %TypeChecker_error.exit124 ], [ null, %2 ], [ null, %ifend27 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %9 = load i64, ptr %4, align 4
  %10 = icmp eq i64 %9, 20
  br i1 %10, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  %memberidx5 = getelementptr inbounds %GenericType, ptr %4, i64 0, i32 3
  %11 = load ptr, ptr %memberidx5, align 8
  br label %ifend4

ifend4:                                           ; preds = %ifend, %if.entry2
  %memory_type.0 = phi ptr [ %11, %if.entry2 ], [ %4, %ifend ]
  %12 = tail call ptr @malloc(i32 24)
  %memberidx.i79 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 1
  store i64 0, ptr %memberidx.i79, align 4
  %memberidx1.i80 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 2
  store i64 8, ptr %memberidx1.i80, align 4
  %13 = tail call ptr @malloc(i32 64)
  store ptr %13, ptr %12, align 8
  store i64 0, ptr %memberidx.i79, align 4
  store ptr %12, ptr %args, align 8
  %14 = load i64, ptr %memory_type.0, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i, label %is_object.exit.thread

if.entry.i:                                       ; preds = %ifend4, %if.entry.i
  %.tr5.i = phi ptr [ %16, %if.entry.i ], [ %memory_type.0, %ifend4 ]
  %memberidx1.i128 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i128, align 8
  %17 = load i64, ptr %16, align 4
  switch i64 %17, label %else9 [
    i64 20, label %if.entry.i
    i64 11, label %if.entry8
  ]

is_object.exit.thread:                            ; preds = %ifend4
  switch i64 %14, label %else20 [
    i64 11, label %if.entry8.thread
    i64 13, label %if.entry19
  ]

if.entry8.thread:                                 ; preds = %is_object.exit.thread
  %18 = load ptr, ptr %0, align 8
  br label %if.entry3.i

if.entry8:                                        ; preds = %if.entry.i
  %19 = load ptr, ptr %0, align 8
  br i1 %15, label %if.entry.i130, label %if.entry3.i

if.entry.i130:                                    ; preds = %if.entry8, %if.entry.i130
  %.tr11.i133 = phi ptr [ %20, %if.entry.i130 ], [ %memory_type.0, %if.entry8 ]
  %memberidx1.i129 = getelementptr inbounds %GenericType, ptr %.tr11.i133, i64 0, i32 3
  %20 = load ptr, ptr %memberidx1.i129, align 8
  %21 = load i64, ptr %20, align 4
  %switch = icmp eq i64 %21, 20
  br i1 %switch, label %if.entry.i130, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i130, %if.entry8.thread, %if.entry8
  %22 = phi ptr [ %19, %if.entry8 ], [ %18, %if.entry8.thread ], [ %19, %if.entry.i130 ]
  %.tr11.i.lcssa = phi ptr [ %memory_type.0, %if.entry8 ], [ %memory_type.0, %if.entry8.thread ], [ %20, %if.entry.i130 ]
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %23 = load ptr, ptr %memberidx6.i, align 8
  %24 = load ptr, ptr %22, align 8
  %25 = load i64, ptr %23, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx2.i.i131 = getelementptr inbounds %Module, ptr %28, i64 0, i32 3
  %29 = load ptr, ptr %memberidx2.i.i131, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %23, i64 0, i32 2
  %30 = load i64, ptr %memberidx3.i.i, align 4
  %31 = load ptr, ptr %29, align 8
  %32 = getelementptr inbounds ptr, ptr %31, i64 %30
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr %33, align 8
  %memberidx13 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %35 = load ptr, ptr %memberidx13, align 8
  %36 = call fastcc ptr @TypeChecker_check_constructor_call(ptr nonnull %0, ptr %34, ptr %35, ptr nonnull %args)
  %.not78 = icmp eq ptr %36, null
  br i1 %.not78, label %if.entry3.i.ifend10_crit_edge, label %if.entry14

if.entry3.i.ifend10_crit_edge:                    ; preds = %if.entry3.i
  %.pre149 = load ptr, ptr %args, align 8
  br label %ifend10

else9:                                            ; preds = %if.entry.i
  %37 = icmp eq i64 %14, 13
  br i1 %37, label %if.entry19, label %else20

ifend10:                                          ; preds = %if.entry3.i.ifend10_crit_edge, %Array_Expression____sl__.exit
  %38 = phi ptr [ %.pre149, %if.entry3.i.ifend10_crit_edge ], [ %12, %Array_Expression____sl__.exit ]
  %memory_type.1 = phi ptr [ %memory_type.0, %if.entry3.i.ifend10_crit_edge ], [ %59, %Array_Expression____sl__.exit ]
  %39 = tail call ptr @malloc(i32 42)
  %memberidx41 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 4
  %40 = load i1, ptr %memberidx41, align 1
  store i64 8, ptr %39, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 2
  store i64 12, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i81 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 6
  store ptr %memory_type.1, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 5
  store i1 %40, ptr %memberidx1.i82, align 1
  %memberidx2.i83 = getelementptr inbounds %NewExpression, ptr %39, i64 0, i32 4
  store ptr %38, ptr %memberidx2.i83, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %39, i64 0, i32 3
  store ptr %4, ptr %memberidx3.i, align 8
  br label %common.ret

if.entry14:                                       ; preds = %if.entry3.i
  %41 = load ptr, ptr %1, align 8
  %42 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i85 = getelementptr inbounds %Compiler, ptr %42, i64 0, i32 5
  %43 = load ptr, ptr %memberidx1.i85, align 8
  %44 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %44, align 4
  %memberidx1.i.i86 = getelementptr inbounds %FloError, ptr %44, i64 0, i32 2
  store ptr %41, ptr %memberidx1.i.i86, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %44, i64 0, i32 1
  store ptr %36, ptr %memberidx2.i.i, align 8
  %memberidx.i.i87 = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 1
  %45 = load i64, ptr %memberidx.i.i87, align 4
  %46 = add i64 %45, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %43, i64 0, i32 2
  %47 = load i64, ptr %memberidx.i.i.i, align 4
  %48 = icmp slt i64 %47, %46
  %.pre146 = load ptr, ptr %43, align 8
  br i1 %48, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry14, %while.entry.i.i.i
  %49 = phi ptr [ %53, %while.entry.i.i.i ], [ %.pre146, %if.entry14 ]
  %50 = phi i64 [ %54, %while.entry.i.i.i ], [ %47, %if.entry14 ]
  %51 = shl nuw i64 %50, 1
  store i64 %51, ptr %memberidx.i.i.i, align 4
  %52 = shl i64 %50, 4
  %53 = tail call ptr @realloc(ptr %49, i64 %52)
  store ptr %53, ptr %43, align 8
  %54 = load i64, ptr %memberidx.i.i.i, align 4
  %55 = icmp slt i64 %54, %46
  br i1 %55, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre147 = load i64, ptr %memberidx.i.i87, align 4
  %.pre150 = add nsw i64 %.pre147, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry14, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre150, %TypeChecker_error.exit.loopexit ], [ %46, %if.entry14 ]
  %56 = phi ptr [ %53, %TypeChecker_error.exit.loopexit ], [ %.pre146, %if.entry14 ]
  %57 = phi i64 [ %.pre147, %TypeChecker_error.exit.loopexit ], [ %45, %if.entry14 ]
  store i64 %.pre-phi, ptr %memberidx.i.i87, align 4
  %58 = getelementptr inbounds ptr, ptr %56, i64 %57
  store ptr %44, ptr %58, align 8
  br label %common.ret

if.entry19:                                       ; preds = %is_object.exit.thread, %else9
  %memberidx22 = getelementptr inbounds %PointerType, ptr %memory_type.0, i64 0, i32 1
  %59 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %NewExpressionNode, ptr %1, i64 0, i32 5
  %60 = load ptr, ptr %memberidx23, align 8
  %memberidx24 = getelementptr inbounds %Array_ExpressionNode_, ptr %60, i64 0, i32 1
  %61 = load i64, ptr %memberidx24, align 4
  %.not = icmp eq i64 %61, 1
  br i1 %.not, label %ifend27, label %if.entry25

else20:                                           ; preds = %is_object.exit.thread, %else9
  %62 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %memory_type.0)
  %memberidx.i88 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  %63 = load i64, ptr %memberidx.i88, align 4
  %64 = trunc i64 %63 to i32
  %65 = add i32 %64, 1
  %66 = tail call ptr @malloc(i32 %65)
  %67 = load ptr, ptr %62, align 8
  %68 = load i64, ptr %memberidx.i88, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %66, ptr align 8 %67, i64 %68, i1 false)
  %69 = getelementptr inbounds i8, ptr %66, i64 %68
  store i8 0, ptr %69, align 1
  %70 = alloca ptr, align 8
  %71 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %70, ptr nonnull @194, ptr %66)
  %72 = load ptr, ptr %70, align 8
  %73 = tail call ptr @malloc(i32 24)
  store ptr %72, ptr %73, align 8
  %memberidx1.i89 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  store i64 %71, ptr %memberidx1.i89, align 4
  %memberidx2.i90 = getelementptr inbounds %String, ptr %73, i64 0, i32 2
  store i64 %71, ptr %memberidx2.i90, align 4
  tail call void @free(ptr %66)
  %74 = load ptr, ptr %1, align 8
  %75 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i92 = getelementptr inbounds %Compiler, ptr %75, i64 0, i32 5
  %76 = load ptr, ptr %memberidx1.i92, align 8
  %77 = call ptr @malloc(i32 24)
  store i64 5, ptr %77, align 4
  %memberidx1.i.i93 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 2
  store ptr %74, ptr %memberidx1.i.i93, align 8
  %memberidx2.i.i94 = getelementptr inbounds %FloError, ptr %77, i64 0, i32 1
  store ptr %73, ptr %memberidx2.i.i94, align 8
  %memberidx.i.i95 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 1
  %78 = load i64, ptr %memberidx.i.i95, align 4
  %79 = add i64 %78, 1
  %memberidx.i.i.i96 = getelementptr inbounds %Array_FloError_, ptr %76, i64 0, i32 2
  %80 = load i64, ptr %memberidx.i.i.i96, align 4
  %81 = icmp slt i64 %80, %79
  %.pre = load ptr, ptr %76, align 8
  br i1 %81, label %while.entry.i.i.i97, label %TypeChecker_error.exit98

while.entry.i.i.i97:                              ; preds = %else20, %while.entry.i.i.i97
  %82 = phi ptr [ %86, %while.entry.i.i.i97 ], [ %.pre, %else20 ]
  %83 = phi i64 [ %87, %while.entry.i.i.i97 ], [ %80, %else20 ]
  %84 = shl nuw i64 %83, 1
  store i64 %84, ptr %memberidx.i.i.i96, align 4
  %85 = shl i64 %83, 4
  %86 = call ptr @realloc(ptr %82, i64 %85)
  store ptr %86, ptr %76, align 8
  %87 = load i64, ptr %memberidx.i.i.i96, align 4
  %88 = icmp slt i64 %87, %79
  br i1 %88, label %while.entry.i.i.i97, label %TypeChecker_error.exit98.loopexit

TypeChecker_error.exit98.loopexit:                ; preds = %while.entry.i.i.i97
  %.pre135 = load i64, ptr %memberidx.i.i95, align 4
  %.pre157 = add nsw i64 %.pre135, 1
  br label %TypeChecker_error.exit98

TypeChecker_error.exit98:                         ; preds = %else20, %TypeChecker_error.exit98.loopexit
  %.pre-phi158 = phi i64 [ %.pre157, %TypeChecker_error.exit98.loopexit ], [ %79, %else20 ]
  %89 = phi ptr [ %86, %TypeChecker_error.exit98.loopexit ], [ %.pre, %else20 ]
  %90 = phi i64 [ %.pre135, %TypeChecker_error.exit98.loopexit ], [ %78, %else20 ]
  store i64 %.pre-phi158, ptr %memberidx.i.i95, align 4
  %91 = getelementptr inbounds ptr, ptr %89, i64 %90
  store ptr %77, ptr %91, align 8
  br label %common.ret

if.entry25:                                       ; preds = %if.entry19
  %92 = alloca ptr, align 8
  %93 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %92, ptr nonnull @192, i64 %61)
  %94 = load ptr, ptr %92, align 8
  %95 = tail call ptr @malloc(i32 24)
  store ptr %94, ptr %95, align 8
  %memberidx1.i99 = getelementptr inbounds %String, ptr %95, i64 0, i32 1
  store i64 %93, ptr %memberidx1.i99, align 4
  %memberidx2.i100 = getelementptr inbounds %String, ptr %95, i64 0, i32 2
  store i64 %93, ptr %memberidx2.i100, align 4
  %96 = load ptr, ptr %1, align 8
  %97 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i102 = getelementptr inbounds %Compiler, ptr %97, i64 0, i32 5
  %98 = load ptr, ptr %memberidx1.i102, align 8
  %99 = call ptr @malloc(i32 24)
  store i64 4, ptr %99, align 4
  %memberidx1.i.i103 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 2
  store ptr %96, ptr %memberidx1.i.i103, align 8
  %memberidx2.i.i104 = getelementptr inbounds %FloError, ptr %99, i64 0, i32 1
  store ptr %95, ptr %memberidx2.i.i104, align 8
  %memberidx.i.i105 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 1
  %100 = load i64, ptr %memberidx.i.i105, align 4
  %101 = add i64 %100, 1
  %memberidx.i.i.i106 = getelementptr inbounds %Array_FloError_, ptr %98, i64 0, i32 2
  %102 = load i64, ptr %memberidx.i.i.i106, align 4
  %103 = icmp slt i64 %102, %101
  %.pre137 = load ptr, ptr %98, align 8
  br i1 %103, label %while.entry.i.i.i107, label %TypeChecker_error.exit108

while.entry.i.i.i107:                             ; preds = %if.entry25, %while.entry.i.i.i107
  %104 = phi ptr [ %108, %while.entry.i.i.i107 ], [ %.pre137, %if.entry25 ]
  %105 = phi i64 [ %109, %while.entry.i.i.i107 ], [ %102, %if.entry25 ]
  %106 = shl nuw i64 %105, 1
  store i64 %106, ptr %memberidx.i.i.i106, align 4
  %107 = shl i64 %105, 4
  %108 = call ptr @realloc(ptr %104, i64 %107)
  store ptr %108, ptr %98, align 8
  %109 = load i64, ptr %memberidx.i.i.i106, align 4
  %110 = icmp slt i64 %109, %101
  br i1 %110, label %while.entry.i.i.i107, label %TypeChecker_error.exit108.loopexit

TypeChecker_error.exit108.loopexit:               ; preds = %while.entry.i.i.i107
  %.pre138 = load i64, ptr %memberidx.i.i105, align 4
  %.pre155 = add nsw i64 %.pre138, 1
  br label %TypeChecker_error.exit108

TypeChecker_error.exit108:                        ; preds = %if.entry25, %TypeChecker_error.exit108.loopexit
  %.pre-phi156 = phi i64 [ %.pre155, %TypeChecker_error.exit108.loopexit ], [ %101, %if.entry25 ]
  %111 = phi ptr [ %108, %TypeChecker_error.exit108.loopexit ], [ %.pre137, %if.entry25 ]
  %112 = phi i64 [ %.pre138, %TypeChecker_error.exit108.loopexit ], [ %100, %if.entry25 ]
  store i64 %.pre-phi156, ptr %memberidx.i.i105, align 4
  %113 = getelementptr inbounds ptr, ptr %111, i64 %112
  store ptr %99, ptr %113, align 8
  br label %common.ret

ifend27:                                          ; preds = %if.entry19
  %114 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %114, align 4
  %memberidx.i109 = getelementptr inbounds %IntType, ptr %114, i64 0, i32 1
  store i1 false, ptr %memberidx.i109, align 1
  %115 = load ptr, ptr %memberidx23, align 8
  %116 = load ptr, ptr %115, align 8
  %117 = load ptr, ptr %116, align 8
  %118 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %114, ptr %117)
  %119 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i111 = getelementptr inbounds %Compiler, ptr %119, i64 0, i32 5
  %120 = load ptr, ptr %memberidx1.i111, align 8
  %memberidx2.i112 = getelementptr inbounds %Array_FloError_, ptr %120, i64 0, i32 1
  %121 = load i64, ptr %memberidx2.i112, align 4
  %122 = icmp sgt i64 %121, 0
  br i1 %122, label %common.ret, label %ifend32

ifend32:                                          ; preds = %ifend27
  %memberidx33 = getelementptr inbounds %Expression, ptr %118, i64 0, i32 3
  %123 = load ptr, ptr %memberidx33, align 8
  %124 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %114, ptr %123)
  br i1 %124, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %ifend32
  %125 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %114)
  %memberidx.i113 = getelementptr inbounds %String, ptr %125, i64 0, i32 1
  %126 = load i64, ptr %memberidx.i113, align 4
  %127 = trunc i64 %126 to i32
  %128 = add i32 %127, 1
  %129 = tail call ptr @malloc(i32 %128)
  %130 = load ptr, ptr %125, align 8
  %131 = load i64, ptr %memberidx.i113, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %129, ptr align 8 %130, i64 %131, i1 false)
  %132 = getelementptr inbounds i8, ptr %129, i64 %131
  store i8 0, ptr %132, align 1
  %133 = load ptr, ptr %memberidx33, align 8
  %134 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %133)
  %memberidx.i114 = getelementptr inbounds %String, ptr %134, i64 0, i32 1
  %135 = load i64, ptr %memberidx.i114, align 4
  %136 = trunc i64 %135 to i32
  %137 = add i32 %136, 1
  %138 = tail call ptr @malloc(i32 %137)
  %139 = load ptr, ptr %134, align 8
  %140 = load i64, ptr %memberidx.i114, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %138, ptr align 8 %139, i64 %140, i1 false)
  %141 = getelementptr inbounds i8, ptr %138, i64 %140
  store i8 0, ptr %141, align 1
  %142 = alloca ptr, align 8
  %143 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %142, ptr nonnull @193, ptr %129, ptr %138)
  %144 = load ptr, ptr %142, align 8
  %145 = tail call ptr @malloc(i32 24)
  store ptr %144, ptr %145, align 8
  %memberidx1.i115 = getelementptr inbounds %String, ptr %145, i64 0, i32 1
  store i64 %143, ptr %memberidx1.i115, align 4
  %memberidx2.i116 = getelementptr inbounds %String, ptr %145, i64 0, i32 2
  store i64 %143, ptr %memberidx2.i116, align 4
  tail call void @free(ptr %129)
  tail call void @free(ptr %138)
  %146 = load ptr, ptr %memberidx23, align 8
  %147 = load ptr, ptr %146, align 8
  %148 = load ptr, ptr %147, align 8
  %149 = load ptr, ptr %148, align 8
  %150 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i118 = getelementptr inbounds %Compiler, ptr %150, i64 0, i32 5
  %151 = load ptr, ptr %memberidx1.i118, align 8
  %152 = call ptr @malloc(i32 24)
  store i64 4, ptr %152, align 4
  %memberidx1.i.i119 = getelementptr inbounds %FloError, ptr %152, i64 0, i32 2
  store ptr %149, ptr %memberidx1.i.i119, align 8
  %memberidx2.i.i120 = getelementptr inbounds %FloError, ptr %152, i64 0, i32 1
  store ptr %145, ptr %memberidx2.i.i120, align 8
  %memberidx.i.i121 = getelementptr inbounds %Array_FloError_, ptr %151, i64 0, i32 1
  %153 = load i64, ptr %memberidx.i.i121, align 4
  %154 = add i64 %153, 1
  %memberidx.i.i.i122 = getelementptr inbounds %Array_FloError_, ptr %151, i64 0, i32 2
  %155 = load i64, ptr %memberidx.i.i.i122, align 4
  %156 = icmp slt i64 %155, %154
  %.pre140 = load ptr, ptr %151, align 8
  br i1 %156, label %while.entry.i.i.i123, label %TypeChecker_error.exit124

while.entry.i.i.i123:                             ; preds = %if.entry34, %while.entry.i.i.i123
  %157 = phi ptr [ %161, %while.entry.i.i.i123 ], [ %.pre140, %if.entry34 ]
  %158 = phi i64 [ %162, %while.entry.i.i.i123 ], [ %155, %if.entry34 ]
  %159 = shl nuw i64 %158, 1
  store i64 %159, ptr %memberidx.i.i.i122, align 4
  %160 = shl i64 %158, 4
  %161 = call ptr @realloc(ptr %157, i64 %160)
  store ptr %161, ptr %151, align 8
  %162 = load i64, ptr %memberidx.i.i.i122, align 4
  %163 = icmp slt i64 %162, %154
  br i1 %163, label %while.entry.i.i.i123, label %TypeChecker_error.exit124.loopexit

TypeChecker_error.exit124.loopexit:               ; preds = %while.entry.i.i.i123
  %.pre141 = load i64, ptr %memberidx.i.i121, align 4
  %.pre153 = add nsw i64 %.pre141, 1
  br label %TypeChecker_error.exit124

TypeChecker_error.exit124:                        ; preds = %if.entry34, %TypeChecker_error.exit124.loopexit
  %.pre-phi154 = phi i64 [ %.pre153, %TypeChecker_error.exit124.loopexit ], [ %154, %if.entry34 ]
  %164 = phi ptr [ %161, %TypeChecker_error.exit124.loopexit ], [ %.pre140, %if.entry34 ]
  %165 = phi i64 [ %.pre141, %TypeChecker_error.exit124.loopexit ], [ %153, %if.entry34 ]
  store i64 %.pre-phi154, ptr %memberidx.i.i121, align 4
  %166 = getelementptr inbounds ptr, ptr %164, i64 %165
  store ptr %152, ptr %166, align 8
  tail call void @free(ptr %114)
  br label %common.ret

ifend36:                                          ; preds = %ifend32
  %167 = load i64, ptr %memberidx.i79, align 4
  %168 = add i64 %167, 1
  %169 = load i64, ptr %memberidx1.i80, align 4
  %170 = icmp slt i64 %169, %168
  %.pre143 = load ptr, ptr %12, align 8
  br i1 %170, label %while.entry.i.i, label %Array_Expression____sl__.exit

while.entry.i.i:                                  ; preds = %ifend36, %while.entry.i.i
  %171 = phi ptr [ %175, %while.entry.i.i ], [ %.pre143, %ifend36 ]
  %172 = phi i64 [ %176, %while.entry.i.i ], [ %169, %ifend36 ]
  %173 = shl nuw i64 %172, 1
  store i64 %173, ptr %memberidx1.i80, align 4
  %174 = shl i64 %172, 4
  %175 = tail call ptr @realloc(ptr %171, i64 %174)
  store ptr %175, ptr %12, align 8
  %176 = load i64, ptr %memberidx1.i80, align 4
  %177 = icmp slt i64 %176, %168
  br i1 %177, label %while.entry.i.i, label %Array_Expression____sl__.exit.loopexit

Array_Expression____sl__.exit.loopexit:           ; preds = %while.entry.i.i
  %.pre144 = load i64, ptr %memberidx.i79, align 4
  %.pre151 = add nsw i64 %.pre144, 1
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend36, %Array_Expression____sl__.exit.loopexit
  %.pre-phi152 = phi i64 [ %.pre151, %Array_Expression____sl__.exit.loopexit ], [ %168, %ifend36 ]
  %178 = phi ptr [ %175, %Array_Expression____sl__.exit.loopexit ], [ %.pre143, %ifend36 ]
  %179 = phi i64 [ %.pre144, %Array_Expression____sl__.exit.loopexit ], [ %167, %ifend36 ]
  store i64 %.pre-phi152, ptr %memberidx.i79, align 4
  %180 = getelementptr inbounds ptr, ptr %178, i64 %179
  store ptr %118, ptr %180, align 8
  br label %ifend10
}

define internal fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %5, align 4
  %6 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %5, ptr %4)
  %memberidx.i.i49 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %7 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i.i50 = getelementptr inbounds %Compiler, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx1.i.i50, align 8
  %memberidx2.i.i51 = getelementptr inbounds %Array_FloError_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx2.i.i51, align 4
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %common.ret, label %ifend.i

ifend.i:                                          ; preds = %3
  %memberidx.i52 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %11 = load ptr, ptr %memberidx.i52, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %ifend, label %TypeChecker_check_condition.exit

TypeChecker_check_condition.exit:                 ; preds = %ifend.i
  %14 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %14, align 4
  %15 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %15, align 4
  %memberidx.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i.i, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 1
  %memberidx.i.i.i53 = getelementptr inbounds %TypeCastExpression, ptr %15, i64 0, i32 4
  store ptr %6, ptr %memberidx.i.i.i53, align 8
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %15, i64 0, i32 3
  store ptr %14, ptr %memberidx1.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %16 = load i1, ptr %memberidx3.i.i.i, align 1
  store i1 %16, ptr %memberidx1.i.i.i.i, align 1
  %.pre = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i.phi.trans.insert = getelementptr inbounds %Compiler, ptr %.pre, i64 0, i32 5
  %.pre54 = load ptr, ptr %memberidx1.i.phi.trans.insert, align 8
  %memberidx2.i.phi.trans.insert = getelementptr inbounds %Array_FloError_, ptr %.pre54, i64 0, i32 1
  %.pre55 = load i64, ptr %memberidx2.i.phi.trans.insert, align 4
  %17 = icmp sgt i64 %.pre55, 0
  br i1 %17, label %common.ret, label %ifend

common.ret:                                       ; preds = %3, %ifend4, %ifend, %TypeChecker_check_condition.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %71, %ifend13 ], [ null, %TypeChecker_check_condition.exit ], [ null, %ifend ], [ null, %ifend4 ], [ null, %3 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %ifend.i, %TypeChecker_check_condition.exit
  %common.ret.op.i63 = phi ptr [ %15, %TypeChecker_check_condition.exit ], [ %6, %ifend.i ]
  %memberidx1 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 4
  %18 = load ptr, ptr %memberidx1, align 8
  %19 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %1, ptr %18)
  %20 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i33 = getelementptr inbounds %Compiler, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx1.i33, align 8
  %memberidx2.i34 = getelementptr inbounds %Array_FloError_, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx2.i34, align 4
  %23 = icmp sgt i64 %22, 0
  br i1 %23, label %common.ret, label %ifend4

ifend4:                                           ; preds = %ifend
  %memberidx5 = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  %24 = load ptr, ptr %memberidx5, align 8
  %memberidx6 = getelementptr inbounds %TernaryExpressionNode, ptr %2, i64 0, i32 5
  %25 = load ptr, ptr %memberidx6, align 8
  %26 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %24, ptr %25)
  %27 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i36 = getelementptr inbounds %Compiler, ptr %27, i64 0, i32 5
  %28 = load ptr, ptr %memberidx1.i36, align 8
  %memberidx2.i37 = getelementptr inbounds %Array_FloError_, ptr %28, i64 0, i32 1
  %29 = load i64, ptr %memberidx2.i37, align 4
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend4
  %memberidx10 = getelementptr inbounds %Expression, ptr %26, i64 0, i32 3
  %31 = load ptr, ptr %memberidx10, align 8
  %32 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %24, ptr %31)
  br i1 %32, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %33 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %24)
  %memberidx.i38 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i38, align 4
  %35 = trunc i64 %34 to i32
  %36 = add i32 %35, 1
  %37 = tail call ptr @malloc(i32 %36)
  %38 = load ptr, ptr %33, align 8
  %39 = load i64, ptr %memberidx.i38, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 8 %38, i64 %39, i1 false)
  %40 = getelementptr inbounds i8, ptr %37, i64 %39
  store i8 0, ptr %40, align 1
  %41 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %31)
  %memberidx.i39 = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i39, align 4
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, 1
  %45 = tail call ptr @malloc(i32 %44)
  %46 = load ptr, ptr %41, align 8
  %47 = load i64, ptr %memberidx.i39, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %45, ptr align 8 %46, i64 %47, i1 false)
  %48 = getelementptr inbounds i8, ptr %45, i64 %47
  store i8 0, ptr %48, align 1
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @207, ptr %37, ptr %45)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i40 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 %50, ptr %memberidx1.i40, align 4
  %memberidx2.i41 = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i41, align 4
  tail call void @free(ptr %37)
  tail call void @free(ptr %45)
  %53 = load ptr, ptr %2, align 8
  %54 = load ptr, ptr %memberidx.i.i49, align 8
  %memberidx1.i43 = getelementptr inbounds %Compiler, ptr %54, i64 0, i32 5
  %55 = load ptr, ptr %memberidx1.i43, align 8
  %56 = call ptr @malloc(i32 24)
  store i64 5, ptr %56, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 2
  store ptr %53, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %56, i64 0, i32 1
  store ptr %52, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 1
  %57 = load i64, ptr %memberidx.i.i, align 4
  %58 = add i64 %57, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %55, i64 0, i32 2
  %59 = load i64, ptr %memberidx.i.i.i, align 4
  %60 = icmp slt i64 %59, %58
  %.pre56 = load ptr, ptr %55, align 8
  br i1 %60, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry11, %while.entry.i.i.i
  %61 = phi ptr [ %65, %while.entry.i.i.i ], [ %.pre56, %if.entry11 ]
  %62 = phi i64 [ %66, %while.entry.i.i.i ], [ %59, %if.entry11 ]
  %63 = shl nuw i64 %62, 1
  store i64 %63, ptr %memberidx.i.i.i, align 4
  %64 = shl i64 %62, 4
  %65 = call ptr @realloc(ptr %61, i64 %64)
  store ptr %65, ptr %55, align 8
  %66 = load i64, ptr %memberidx.i.i.i, align 4
  %67 = icmp slt i64 %66, %58
  br i1 %67, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre57 = load i64, ptr %memberidx.i.i, align 4
  %.pre59 = add nsw i64 %.pre57, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre59, %TypeChecker_error.exit.loopexit ], [ %58, %if.entry11 ]
  %68 = phi ptr [ %65, %TypeChecker_error.exit.loopexit ], [ %.pre56, %if.entry11 ]
  %69 = phi i64 [ %.pre57, %TypeChecker_error.exit.loopexit ], [ %57, %if.entry11 ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %70 = getelementptr inbounds ptr, ptr %68, i64 %69
  store ptr %56, ptr %70, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %71 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %71, align 4
  %memberidx.i.i44 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 2
  store i64 16, ptr %memberidx.i.i44, align 4
  %memberidx1.i.i45 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i45, align 1
  %memberidx.i46 = getelementptr inbounds %TernaryExpression, ptr %71, i64 0, i32 4
  store ptr %common.ret.op.i63, ptr %memberidx.i46, align 8
  %memberidx1.i47 = getelementptr inbounds %TernaryExpression, ptr %71, i64 0, i32 5
  store ptr %19, ptr %memberidx1.i47, align 8
  %memberidx2.i48 = getelementptr inbounds %TernaryExpression, ptr %71, i64 0, i32 6
  store ptr %26, ptr %memberidx2.i48, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %71, i64 0, i32 3
  %72 = load ptr, ptr %memberidx5, align 8
  store ptr %72, ptr %memberidx3.i, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load i64, ptr %1, align 4
  switch i64 %3, label %ifend71 [
    i64 16, label %if.entry
    i64 13, label %if.entry11
    i64 11, label %if.entry16
    i64 12, label %if.entry22
    i64 14, label %if.entry29
    i64 15, label %if.entry35
    i64 20, label %if.entry52
    i64 18, label %if.entry65
    i64 17, label %if.entry69
  ]

if.entry:                                         ; preds = %2
  %4 = tail call ptr @malloc(i32 0)
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 2
  %memberidx = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i, i8 0, i64 16, i1 false)
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx2177 = getelementptr inbounds %Array_Type_, ptr %6, i64 0, i32 1
  %7 = load i64, ptr %memberidx2177, align 4
  %8 = icmp sgt i64 %7, 0
  br i1 %8, label %for.body, label %for.end

for.body:                                         ; preds = %if.entry, %ifend8
  %9 = phi ptr [ %65, %ifend8 ], [ %4, %if.entry ]
  %10 = phi i64 [ %66, %ifend8 ], [ 0, %if.entry ]
  %11 = phi ptr [ %67, %ifend8 ], [ %4, %if.entry ]
  %12 = phi i64 [ %68, %ifend8 ], [ 0, %if.entry ]
  %13 = phi i64 [ %69, %ifend8 ], [ 0, %if.entry ]
  %14 = phi ptr [ %64, %ifend8 ], [ %6, %if.entry ]
  %i.0178 = phi i64 [ %70, %ifend8 ], [ 0, %if.entry ]
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %i.0178
  %17 = load ptr, ptr %16, align 8
  %18 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %17)
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = add nuw i64 %13, %20
  %22 = icmp slt i64 %12, %21
  br i1 %22, label %if.entry.i.i.i, label %String___adda__.exit

if.entry.i.i.i:                                   ; preds = %for.body
  %23 = tail call ptr @realloc(ptr %11, i64 %21)
  store ptr %23, ptr %5, align 8
  store i64 %21, ptr %memberidx2.i.i, align 4
  %.pre188 = load i64, ptr %memberidx1.i.i, align 4
  %.pre192 = add nuw i64 %.pre188, %20
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %for.body, %if.entry.i.i.i
  %.pre-phi = phi i64 [ %21, %for.body ], [ %.pre192, %if.entry.i.i.i ]
  %24 = phi ptr [ %9, %for.body ], [ %23, %if.entry.i.i.i ]
  %25 = phi i64 [ %10, %for.body ], [ %21, %if.entry.i.i.i ]
  %26 = phi i64 [ %13, %for.body ], [ %.pre188, %if.entry.i.i.i ]
  %27 = phi ptr [ %11, %for.body ], [ %23, %if.entry.i.i.i ]
  %28 = phi i64 [ %12, %for.body ], [ %21, %if.entry.i.i.i ]
  %29 = getelementptr inbounds i8, ptr %27, i64 %26
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %29, ptr align 8 %19, i64 %20, i1 false)
  store i64 %.pre-phi, ptr %memberidx1.i.i, align 4
  %30 = load ptr, ptr %memberidx, align 8
  %memberidx5 = getelementptr inbounds %Array_Type_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx5, align 4
  %32 = add i64 %31, -1
  %33 = icmp slt i64 %i.0178, %32
  br i1 %33, label %if.entry6, label %ifend8

common.ret:                                       ; preds = %ifend71, %if.entry69, %if.entry65, %for.end60, %for.end42, %if.entry29, %if.entry22, %if.entry16, %if.entry11, %for.end
  %common.ret.op = phi ptr [ %52, %for.end ], [ %84, %if.entry11 ], [ %97, %if.entry16 ], [ %110, %if.entry22 ], [ %124, %if.entry29 ], [ %164, %for.end42 ], [ %229, %for.end60 ], [ %231, %if.entry65 ], [ %233, %if.entry69 ], [ %234, %ifend71 ]
  ret ptr %common.ret.op

for.end:                                          ; preds = %ifend8, %if.entry
  %34 = phi ptr [ %4, %if.entry ], [ %65, %ifend8 ]
  %35 = phi i64 [ 0, %if.entry ], [ %69, %ifend8 ]
  %36 = trunc i64 %35 to i32
  %37 = add i32 %36, 1
  %38 = tail call ptr @malloc(i32 %37)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %38, ptr align 8 %34, i64 %35, i1 false)
  %39 = getelementptr inbounds i8, ptr %38, i64 %35
  store i8 0, ptr %39, align 1
  %memberidx9 = getelementptr inbounds %FunctionType, ptr %1, i64 0, i32 2
  %40 = load ptr, ptr %memberidx9, align 8
  %41 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %40)
  %memberidx.i119 = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i119, align 4
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, 1
  %45 = tail call ptr @malloc(i32 %44)
  %46 = load ptr, ptr %41, align 8
  %47 = load i64, ptr %memberidx.i119, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %45, ptr align 8 %46, i64 %47, i1 false)
  %48 = getelementptr inbounds i8, ptr %45, i64 %47
  store i8 0, ptr %48, align 1
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @81, ptr %38, ptr %45)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 %50, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i, align 4
  tail call void @free(ptr %38)
  tail call void @free(ptr %45)
  br label %common.ret

if.entry6:                                        ; preds = %String___adda__.exit
  %53 = tail call ptr @malloc(i32 2)
  store i16 8236, ptr %53, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i.i120 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i120, align 4
  %memberidx2.i.i121 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i121, align 4
  %55 = add nuw i64 %.pre-phi, 2
  %56 = icmp slt i64 %25, %55
  br i1 %56, label %if.entry.i.i.i125, label %String___adda__.exit126

if.entry.i.i.i125:                                ; preds = %if.entry6
  %57 = tail call ptr @realloc(ptr %27, i64 %55)
  store ptr %57, ptr %5, align 8
  store i64 %55, ptr %memberidx2.i.i, align 4
  %.pre189 = load i64, ptr %memberidx1.i.i, align 4
  %.pre193 = add nuw i64 %.pre189, 2
  br label %String___adda__.exit126

String___adda__.exit126:                          ; preds = %if.entry6, %if.entry.i.i.i125
  %.pre-phi194 = phi i64 [ %55, %if.entry6 ], [ %.pre193, %if.entry.i.i.i125 ]
  %58 = phi i64 [ %.pre-phi, %if.entry6 ], [ %.pre189, %if.entry.i.i.i125 ]
  %59 = phi ptr [ %24, %if.entry6 ], [ %57, %if.entry.i.i.i125 ]
  %60 = phi i64 [ %25, %if.entry6 ], [ %55, %if.entry.i.i.i125 ]
  %61 = getelementptr inbounds i8, ptr %59, i64 %58
  %62 = load i16, ptr %53, align 8
  store i16 %62, ptr %61, align 2147483648
  store i64 %.pre-phi194, ptr %memberidx1.i.i, align 4
  %.pre190 = load ptr, ptr %memberidx, align 8
  %memberidx2.phi.trans.insert = getelementptr inbounds %Array_Type_, ptr %.pre190, i64 0, i32 1
  %.pre191 = load i64, ptr %memberidx2.phi.trans.insert, align 4
  br label %ifend8

ifend8:                                           ; preds = %String___adda__.exit, %String___adda__.exit126
  %63 = phi i64 [ %31, %String___adda__.exit ], [ %.pre191, %String___adda__.exit126 ]
  %64 = phi ptr [ %30, %String___adda__.exit ], [ %.pre190, %String___adda__.exit126 ]
  %65 = phi ptr [ %24, %String___adda__.exit ], [ %59, %String___adda__.exit126 ]
  %66 = phi i64 [ %25, %String___adda__.exit ], [ %60, %String___adda__.exit126 ]
  %67 = phi ptr [ %27, %String___adda__.exit ], [ %59, %String___adda__.exit126 ]
  %68 = phi i64 [ %28, %String___adda__.exit ], [ %60, %String___adda__.exit126 ]
  %69 = phi i64 [ %.pre-phi, %String___adda__.exit ], [ %.pre-phi194, %String___adda__.exit126 ]
  %70 = add nuw nsw i64 %i.0178, 1
  %71 = icmp slt i64 %70, %63
  br i1 %71, label %for.body, label %for.end

if.entry11:                                       ; preds = %2
  %memberidx14 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %72 = load ptr, ptr %memberidx14, align 8
  %73 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %72)
  %memberidx.i129 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  %74 = load i64, ptr %memberidx.i129, align 4
  %75 = trunc i64 %74 to i32
  %76 = add i32 %75, 1
  %77 = tail call ptr @malloc(i32 %76)
  %78 = load ptr, ptr %73, align 8
  %79 = load i64, ptr %memberidx.i129, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %77, ptr align 8 %78, i64 %79, i1 false)
  %80 = getelementptr inbounds i8, ptr %77, i64 %79
  store i8 0, ptr %80, align 1
  %81 = alloca ptr, align 8
  %82 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %81, ptr nonnull @82, ptr %77)
  %83 = load ptr, ptr %81, align 8
  %84 = tail call ptr @malloc(i32 24)
  store ptr %83, ptr %84, align 8
  %memberidx1.i130 = getelementptr inbounds %String, ptr %84, i64 0, i32 1
  store i64 %82, ptr %memberidx1.i130, align 4
  %memberidx2.i131 = getelementptr inbounds %String, ptr %84, i64 0, i32 2
  store i64 %82, ptr %memberidx2.i131, align 4
  tail call void @free(ptr %77)
  br label %common.ret

if.entry16:                                       ; preds = %2
  %85 = load ptr, ptr %0, align 8
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %1, i64 0, i32 1
  %86 = load ptr, ptr %memberidx6.i, align 8
  %87 = load ptr, ptr %85, align 8
  %88 = load i64, ptr %86, align 4
  %89 = load ptr, ptr %87, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  %memberidx2.i.i176 = getelementptr inbounds %Module, ptr %91, i64 0, i32 3
  %92 = load ptr, ptr %memberidx2.i.i176, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %86, i64 0, i32 2
  %93 = load i64, ptr %memberidx3.i.i, align 4
  %94 = load ptr, ptr %92, align 8
  %95 = getelementptr inbounds ptr, ptr %94, i64 %93
  %96 = load ptr, ptr %95, align 8
  %memberidx20 = getelementptr inbounds %Class, ptr %96, i64 0, i32 1
  %97 = load ptr, ptr %memberidx20, align 8
  br label %common.ret

if.entry22:                                       ; preds = %2
  %98 = load ptr, ptr %0, align 8
  %memberidx26 = getelementptr inbounds %EnumType, ptr %1, i64 0, i32 1
  %99 = load ptr, ptr %memberidx26, align 8
  %100 = load ptr, ptr %98, align 8
  %101 = load i64, ptr %99, align 4
  %102 = load ptr, ptr %100, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  %104 = load ptr, ptr %103, align 8
  %memberidx2.i132 = getelementptr inbounds %Module, ptr %104, i64 0, i32 6
  %105 = load ptr, ptr %memberidx2.i132, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %99, i64 0, i32 2
  %106 = load i64, ptr %memberidx3.i, align 4
  %107 = load ptr, ptr %105, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %106
  %109 = load ptr, ptr %108, align 8
  %memberidx27 = getelementptr inbounds %Enum, ptr %109, i64 0, i32 1
  %110 = load ptr, ptr %memberidx27, align 8
  br label %common.ret

if.entry29:                                       ; preds = %2
  %memberidx32 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %111 = load ptr, ptr %memberidx32, align 8
  %112 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %111)
  %memberidx.i137 = getelementptr inbounds %String, ptr %112, i64 0, i32 1
  %113 = load i64, ptr %memberidx.i137, align 4
  %114 = trunc i64 %113 to i32
  %115 = add i32 %114, 1
  %116 = tail call ptr @malloc(i32 %115)
  %117 = load ptr, ptr %112, align 8
  %118 = load i64, ptr %memberidx.i137, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %116, ptr align 8 %117, i64 %118, i1 false)
  %119 = getelementptr inbounds i8, ptr %116, i64 %118
  store i8 0, ptr %119, align 1
  %memberidx33 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %120 = load i64, ptr %memberidx33, align 4
  %121 = alloca ptr, align 8
  %122 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %121, ptr nonnull @83, ptr %116, i64 %120)
  %123 = load ptr, ptr %121, align 8
  %124 = tail call ptr @malloc(i32 24)
  store ptr %123, ptr %124, align 8
  %memberidx1.i138 = getelementptr inbounds %String, ptr %124, i64 0, i32 1
  store i64 %122, ptr %memberidx1.i138, align 4
  %memberidx2.i139 = getelementptr inbounds %String, ptr %124, i64 0, i32 2
  store i64 %122, ptr %memberidx2.i139, align 4
  tail call void @free(ptr %116)
  br label %common.ret

if.entry35:                                       ; preds = %2
  %125 = tail call ptr @malloc(i32 0)
  %126 = tail call ptr @malloc(i32 24)
  store ptr %125, ptr %126, align 8
  %memberidx1.i.i140 = getelementptr inbounds %String, ptr %126, i64 0, i32 1
  %memberidx2.i.i141 = getelementptr inbounds %String, ptr %126, i64 0, i32 2
  %memberidx43 = getelementptr inbounds %TupleType, ptr %1, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i140, i8 0, i64 16, i1 false)
  %127 = load ptr, ptr %memberidx43, align 8
  %memberidx44180 = getelementptr inbounds %Array_Type_, ptr %127, i64 0, i32 1
  %128 = load i64, ptr %memberidx44180, align 4
  %129 = icmp sgt i64 %128, 0
  br i1 %129, label %for.body40, label %for.end42

for.body40:                                       ; preds = %if.entry35, %ifend50
  %130 = phi ptr [ %177, %ifend50 ], [ %125, %if.entry35 ]
  %131 = phi i64 [ %178, %ifend50 ], [ 0, %if.entry35 ]
  %132 = phi ptr [ %179, %ifend50 ], [ %125, %if.entry35 ]
  %133 = phi i64 [ %180, %ifend50 ], [ 0, %if.entry35 ]
  %134 = phi i64 [ %181, %ifend50 ], [ 0, %if.entry35 ]
  %135 = phi ptr [ %176, %ifend50 ], [ %127, %if.entry35 ]
  %i1.0181 = phi i64 [ %182, %ifend50 ], [ 0, %if.entry35 ]
  %136 = load ptr, ptr %135, align 8
  %137 = getelementptr inbounds ptr, ptr %136, i64 %i1.0181
  %138 = load ptr, ptr %137, align 8
  %139 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %138)
  %140 = load ptr, ptr %139, align 8
  %memberidx.i144 = getelementptr inbounds %String, ptr %139, i64 0, i32 1
  %141 = load i64, ptr %memberidx.i144, align 4
  %142 = add nuw i64 %134, %141
  %143 = icmp slt i64 %133, %142
  br i1 %143, label %if.entry.i.i.i147, label %String___adda__.exit148

if.entry.i.i.i147:                                ; preds = %for.body40
  %144 = tail call ptr @realloc(ptr %132, i64 %142)
  store ptr %144, ptr %126, align 8
  store i64 %142, ptr %memberidx2.i.i141, align 4
  %.pre184 = load i64, ptr %memberidx1.i.i140, align 4
  %.pre195 = add nuw i64 %.pre184, %141
  br label %String___adda__.exit148

String___adda__.exit148:                          ; preds = %for.body40, %if.entry.i.i.i147
  %.pre-phi196 = phi i64 [ %142, %for.body40 ], [ %.pre195, %if.entry.i.i.i147 ]
  %145 = phi ptr [ %130, %for.body40 ], [ %144, %if.entry.i.i.i147 ]
  %146 = phi i64 [ %131, %for.body40 ], [ %142, %if.entry.i.i.i147 ]
  %147 = phi i64 [ %134, %for.body40 ], [ %.pre184, %if.entry.i.i.i147 ]
  %148 = phi ptr [ %132, %for.body40 ], [ %144, %if.entry.i.i.i147 ]
  %149 = phi i64 [ %133, %for.body40 ], [ %142, %if.entry.i.i.i147 ]
  %150 = getelementptr inbounds i8, ptr %148, i64 %147
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %150, ptr align 8 %140, i64 %141, i1 false)
  store i64 %.pre-phi196, ptr %memberidx1.i.i140, align 4
  %151 = load ptr, ptr %memberidx43, align 8
  %memberidx47 = getelementptr inbounds %Array_Type_, ptr %151, i64 0, i32 1
  %152 = load i64, ptr %memberidx47, align 4
  %153 = add i64 %152, -1
  %154 = icmp slt i64 %i1.0181, %153
  br i1 %154, label %if.entry48, label %ifend50

for.end42:                                        ; preds = %ifend50, %if.entry35
  %155 = phi ptr [ %125, %if.entry35 ], [ %177, %ifend50 ]
  %156 = phi i64 [ 0, %if.entry35 ], [ %181, %ifend50 ]
  %157 = trunc i64 %156 to i32
  %158 = add i32 %157, 1
  %159 = tail call ptr @malloc(i32 %158)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %159, ptr align 8 %155, i64 %156, i1 false)
  %160 = getelementptr inbounds i8, ptr %159, i64 %156
  store i8 0, ptr %160, align 1
  %161 = alloca ptr, align 8
  %162 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %161, ptr nonnull @84, ptr %159)
  %163 = load ptr, ptr %161, align 8
  %164 = tail call ptr @malloc(i32 24)
  store ptr %163, ptr %164, align 8
  %memberidx1.i150 = getelementptr inbounds %String, ptr %164, i64 0, i32 1
  store i64 %162, ptr %memberidx1.i150, align 4
  %memberidx2.i151 = getelementptr inbounds %String, ptr %164, i64 0, i32 2
  store i64 %162, ptr %memberidx2.i151, align 4
  tail call void @free(ptr %159)
  br label %common.ret

if.entry48:                                       ; preds = %String___adda__.exit148
  %165 = tail call ptr @malloc(i32 2)
  store i16 8236, ptr %165, align 8
  %166 = tail call ptr @malloc(i32 24)
  store ptr %165, ptr %166, align 8
  %memberidx1.i.i152 = getelementptr inbounds %String, ptr %166, i64 0, i32 1
  store i64 2, ptr %memberidx1.i.i152, align 4
  %memberidx2.i.i153 = getelementptr inbounds %String, ptr %166, i64 0, i32 2
  store i64 2, ptr %memberidx2.i.i153, align 4
  %167 = add nuw i64 %.pre-phi196, 2
  %168 = icmp slt i64 %146, %167
  br i1 %168, label %if.entry.i.i.i157, label %String___adda__.exit158

if.entry.i.i.i157:                                ; preds = %if.entry48
  %169 = tail call ptr @realloc(ptr %148, i64 %167)
  store ptr %169, ptr %126, align 8
  store i64 %167, ptr %memberidx2.i.i141, align 4
  %.pre185 = load i64, ptr %memberidx1.i.i140, align 4
  %.pre197 = add nuw i64 %.pre185, 2
  br label %String___adda__.exit158

String___adda__.exit158:                          ; preds = %if.entry48, %if.entry.i.i.i157
  %.pre-phi198 = phi i64 [ %167, %if.entry48 ], [ %.pre197, %if.entry.i.i.i157 ]
  %170 = phi i64 [ %.pre-phi196, %if.entry48 ], [ %.pre185, %if.entry.i.i.i157 ]
  %171 = phi ptr [ %145, %if.entry48 ], [ %169, %if.entry.i.i.i157 ]
  %172 = phi i64 [ %146, %if.entry48 ], [ %167, %if.entry.i.i.i157 ]
  %173 = getelementptr inbounds i8, ptr %171, i64 %170
  %174 = load i16, ptr %165, align 8
  store i16 %174, ptr %173, align 2147483648
  store i64 %.pre-phi198, ptr %memberidx1.i.i140, align 4
  %.pre186 = load ptr, ptr %memberidx43, align 8
  %memberidx44.phi.trans.insert = getelementptr inbounds %Array_Type_, ptr %.pre186, i64 0, i32 1
  %.pre187 = load i64, ptr %memberidx44.phi.trans.insert, align 4
  br label %ifend50

ifend50:                                          ; preds = %String___adda__.exit148, %String___adda__.exit158
  %175 = phi i64 [ %152, %String___adda__.exit148 ], [ %.pre187, %String___adda__.exit158 ]
  %176 = phi ptr [ %151, %String___adda__.exit148 ], [ %.pre186, %String___adda__.exit158 ]
  %177 = phi ptr [ %145, %String___adda__.exit148 ], [ %171, %String___adda__.exit158 ]
  %178 = phi i64 [ %146, %String___adda__.exit148 ], [ %172, %String___adda__.exit158 ]
  %179 = phi ptr [ %148, %String___adda__.exit148 ], [ %171, %String___adda__.exit158 ]
  %180 = phi i64 [ %149, %String___adda__.exit148 ], [ %172, %String___adda__.exit158 ]
  %181 = phi i64 [ %.pre-phi196, %String___adda__.exit148 ], [ %.pre-phi198, %String___adda__.exit158 ]
  %182 = add nuw nsw i64 %i1.0181, 1
  %183 = icmp slt i64 %182, %175
  br i1 %183, label %for.body40, label %for.end42

if.entry52:                                       ; preds = %2
  %memberidx55 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %184 = load ptr, ptr %memberidx55, align 8
  %185 = tail call ptr @malloc(i32 1)
  store i8 60, ptr %185, align 8
  %186 = tail call ptr @malloc(i32 24)
  store ptr %185, ptr %186, align 8
  %memberidx1.i.i159 = getelementptr inbounds %String, ptr %186, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i159, align 4
  %memberidx2.i.i160 = getelementptr inbounds %String, ptr %186, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i160, align 4
  %memberidx.i161 = getelementptr inbounds %String, ptr %184, i64 0, i32 1
  %187 = load i64, ptr %memberidx.i161, align 4
  %188 = add nuw i64 %187, 1
  %189 = trunc i64 %188 to i32
  %190 = tail call ptr @malloc(i32 %189)
  %191 = load ptr, ptr %184, align 8
  %192 = load i64, ptr %memberidx.i161, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %190, ptr align 8 %191, i64 %192, i1 false)
  %193 = getelementptr inbounds i8, ptr %190, i64 %192
  %194 = load i8, ptr %185, align 8
  store i8 %194, ptr %193, align 8
  %195 = tail call ptr @malloc(i32 24)
  store ptr %190, ptr %195, align 8
  %memberidx1.i.i163 = getelementptr inbounds %String, ptr %195, i64 0, i32 1
  store i64 %188, ptr %memberidx1.i.i163, align 4
  %memberidx2.i.i164 = getelementptr inbounds %String, ptr %195, i64 0, i32 2
  store i64 %188, ptr %memberidx2.i.i164, align 4
  %memberidx61 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %196 = load ptr, ptr %memberidx61, align 8
  %memberidx62182 = getelementptr inbounds %Array_Type_, ptr %196, i64 0, i32 1
  %197 = load i64, ptr %memberidx62182, align 4
  %198 = icmp sgt i64 %197, 0
  br i1 %198, label %for.body58, label %for.end60

for.body58:                                       ; preds = %if.entry52, %String___adda__.exit169
  %199 = phi ptr [ %213, %String___adda__.exit169 ], [ %190, %if.entry52 ]
  %200 = phi i64 [ %214, %String___adda__.exit169 ], [ %188, %if.entry52 ]
  %201 = phi i64 [ %.pre-phi200, %String___adda__.exit169 ], [ %188, %if.entry52 ]
  %202 = phi ptr [ %217, %String___adda__.exit169 ], [ %196, %if.entry52 ]
  %x.0183 = phi i64 [ %216, %String___adda__.exit169 ], [ 0, %if.entry52 ]
  %203 = load ptr, ptr %202, align 8
  %204 = getelementptr inbounds ptr, ptr %203, i64 %x.0183
  %205 = load ptr, ptr %204, align 8
  %206 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %205)
  %207 = load ptr, ptr %206, align 8
  %memberidx.i165 = getelementptr inbounds %String, ptr %206, i64 0, i32 1
  %208 = load i64, ptr %memberidx.i165, align 4
  %209 = add nuw i64 %201, %208
  %210 = icmp slt i64 %200, %209
  br i1 %210, label %if.entry.i.i.i168, label %String___adda__.exit169

if.entry.i.i.i168:                                ; preds = %for.body58
  %211 = tail call ptr @realloc(ptr %199, i64 %209)
  store ptr %211, ptr %195, align 8
  store i64 %209, ptr %memberidx2.i.i164, align 4
  %.pre = load i64, ptr %memberidx1.i.i163, align 4
  %.pre199 = add nuw i64 %.pre, %208
  br label %String___adda__.exit169

String___adda__.exit169:                          ; preds = %for.body58, %if.entry.i.i.i168
  %.pre-phi200 = phi i64 [ %209, %for.body58 ], [ %.pre199, %if.entry.i.i.i168 ]
  %212 = phi i64 [ %201, %for.body58 ], [ %.pre, %if.entry.i.i.i168 ]
  %213 = phi ptr [ %199, %for.body58 ], [ %211, %if.entry.i.i.i168 ]
  %214 = phi i64 [ %200, %for.body58 ], [ %209, %if.entry.i.i.i168 ]
  %215 = getelementptr inbounds i8, ptr %213, i64 %212
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %215, ptr align 8 %207, i64 %208, i1 false)
  store i64 %.pre-phi200, ptr %memberidx1.i.i163, align 4
  %216 = add nuw nsw i64 %x.0183, 1
  %217 = load ptr, ptr %memberidx61, align 8
  %memberidx62 = getelementptr inbounds %Array_Type_, ptr %217, i64 0, i32 1
  %218 = load i64, ptr %memberidx62, align 4
  %219 = icmp slt i64 %216, %218
  br i1 %219, label %for.body58, label %for.end60

for.end60:                                        ; preds = %String___adda__.exit169, %if.entry52
  %220 = phi ptr [ %190, %if.entry52 ], [ %213, %String___adda__.exit169 ]
  %221 = phi i64 [ %188, %if.entry52 ], [ %.pre-phi200, %String___adda__.exit169 ]
  %222 = tail call ptr @malloc(i32 1)
  store i8 62, ptr %222, align 8
  %223 = tail call ptr @malloc(i32 24)
  store ptr %222, ptr %223, align 8
  %memberidx1.i.i142 = getelementptr inbounds %String, ptr %223, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i142, align 4
  %memberidx2.i.i143 = getelementptr inbounds %String, ptr %223, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i143, align 4
  %224 = add nuw i64 %221, 1
  %225 = trunc i64 %224 to i32
  %226 = tail call ptr @malloc(i32 %225)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %226, ptr align 8 %220, i64 %221, i1 false)
  %227 = getelementptr inbounds i8, ptr %226, i64 %221
  %228 = load i8, ptr %222, align 8
  store i8 %228, ptr %227, align 8
  %229 = tail call ptr @malloc(i32 24)
  store ptr %226, ptr %229, align 8
  %memberidx1.i.i135 = getelementptr inbounds %String, ptr %229, i64 0, i32 1
  store i64 %224, ptr %memberidx1.i.i135, align 4
  %memberidx2.i.i136 = getelementptr inbounds %String, ptr %229, i64 0, i32 2
  store i64 %224, ptr %memberidx2.i.i136, align 4
  br label %common.ret

if.entry65:                                       ; preds = %2
  %230 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %230, ptr noundef nonnull align 8 dereferenceable(9) @85, i64 9, i1 false)
  %231 = tail call ptr @malloc(i32 24)
  store ptr %230, ptr %231, align 8
  %memberidx1.i.i127 = getelementptr inbounds %String, ptr %231, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i127, align 4
  %memberidx2.i.i128 = getelementptr inbounds %String, ptr %231, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i128, align 4
  br label %common.ret

if.entry69:                                       ; preds = %2
  %232 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %232, ptr noundef nonnull align 8 dereferenceable(6) @86, i64 6, i1 false)
  %233 = tail call ptr @malloc(i32 24)
  store ptr %232, ptr %233, align 8
  %memberidx1.i.i117 = getelementptr inbounds %String, ptr %233, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i117, align 4
  %memberidx2.i.i118 = getelementptr inbounds %String, ptr %233, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i118, align 4
  br label %common.ret

ifend71:                                          ; preds = %2
  %234 = tail call fastcc ptr @dump_type(ptr nonnull %1, i1 false)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %1)
  %memberidx.i = getelementptr inbounds %Map_String_Generic_, ptr %4, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = urem i64 %5, %6
  %8 = load ptr, ptr %4, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %7
  %10 = load ptr, ptr %9, align 8
  %.not.i = icmp eq ptr %10, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %3
  %memberidx1.i.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %11 = phi ptr [ %21, %else.i ], [ %8, %while.entry.i.preheader ]
  %12 = phi i64 [ %22, %else.i ], [ %6, %while.entry.i.preheader ]
  %13 = phi ptr [ %26, %else.i ], [ %10, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %24, %else.i ], [ %7, %while.entry.i.preheader ]
  %14 = load ptr, ptr %13, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i.i, align 4
  %16 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %15, %16
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %17 = load ptr, ptr %14, align 8
  %18 = load ptr, ptr %1, align 8
  %19 = tail call i64 @memcmp(ptr %17, ptr %18, i64 %15)
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre117 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre118.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre118.pre, i64 %hash.0.i
  %.pre119.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre119.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_String_Generic____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %21 = phi ptr [ %.pre117, %ifend.i.i.else.i_crit_edge ], [ %11, %while.entry.i ]
  %22 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %12, %while.entry.i ]
  %23 = add nuw i64 %hash.0.i, 1
  %24 = urem i64 %23, %22
  %25 = getelementptr inbounds ptr, ptr %21, i64 %24
  %26 = load ptr, ptr %25, align 8
  %.not26.i = icmp eq ptr %26, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_String_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_Generic_, ptr %.pre119.pre, i64 0, i32 1
  %27 = load ptr, ptr %memberidx11.i, align 8
  %28 = icmp eq ptr %27, null
  br i1 %28, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %3, %while.end.i, %Map_String_Generic____getitem__.exit, %ifend20, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %173, %ifend20 ], [ null, %Map_String_Generic____getitem__.exit ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_Generic____getitem__.exit
  %memberidx1 = getelementptr inbounds %Generic, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %ClassDeclarationNode, ptr %29, i64 0, i32 1
  %30 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_GenericParameterNode_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx3, align 4
  %memberidx4 = getelementptr inbounds %Array_Type_, ptr %2, i64 0, i32 1
  %32 = load i64, ptr %memberidx4, align 4
  %.not = icmp eq i64 %31, %32
  br i1 %.not, label %ifend7, label %if.entry5

if.entry5:                                        ; preds = %ifend
  %33 = alloca ptr, align 8
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %33, ptr nonnull @102, i64 %31, i64 %32)
  %35 = load ptr, ptr %33, align 8
  %36 = tail call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i, align 4
  %memberidx.i79 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %37 = load ptr, ptr %memberidx.i79, align 8
  %memberidx1.i80 = getelementptr inbounds %Compiler, ptr %37, i64 0, i32 5
  %38 = load ptr, ptr %memberidx1.i80, align 8
  %39 = call ptr @malloc(i32 24)
  store i64 5, ptr %39, align 4
  %memberidx1.i.i81 = getelementptr inbounds %FloError, ptr %39, i64 0, i32 2
  store ptr null, ptr %memberidx1.i.i81, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %39, i64 0, i32 1
  store ptr %36, ptr %memberidx2.i.i, align 8
  %memberidx.i.i82 = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 1
  %40 = load i64, ptr %memberidx.i.i82, align 4
  %41 = add i64 %40, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %38, i64 0, i32 2
  %42 = load i64, ptr %memberidx.i.i.i, align 4
  %43 = icmp slt i64 %42, %41
  %.pre120 = load ptr, ptr %38, align 8
  br i1 %43, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry5, %while.entry.i.i.i
  %44 = phi ptr [ %48, %while.entry.i.i.i ], [ %.pre120, %if.entry5 ]
  %45 = phi i64 [ %49, %while.entry.i.i.i ], [ %42, %if.entry5 ]
  %46 = shl nuw i64 %45, 1
  store i64 %46, ptr %memberidx.i.i.i, align 4
  %47 = shl i64 %45, 4
  %48 = call ptr @realloc(ptr %44, i64 %47)
  store ptr %48, ptr %38, align 8
  %49 = load i64, ptr %memberidx.i.i.i, align 4
  %50 = icmp slt i64 %49, %41
  br i1 %50, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre121 = load i64, ptr %memberidx.i.i82, align 4
  %.pre127 = add nsw i64 %.pre121, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry5, %TypeChecker_error.exit.loopexit
  %.pre-phi128 = phi i64 [ %.pre127, %TypeChecker_error.exit.loopexit ], [ %41, %if.entry5 ]
  %51 = phi ptr [ %48, %TypeChecker_error.exit.loopexit ], [ %.pre120, %if.entry5 ]
  %52 = phi i64 [ %.pre121, %TypeChecker_error.exit.loopexit ], [ %40, %if.entry5 ]
  store i64 %.pre-phi128, ptr %memberidx.i.i82, align 4
  %53 = getelementptr inbounds ptr, ptr %51, i64 %52
  store ptr %39, ptr %53, align 8
  br label %common.ret

ifend7:                                           ; preds = %ifend
  %memberidx10 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %54 = load ptr, ptr %memberidx10, align 8
  %55 = load ptr, ptr %0, align 8
  %56 = load ptr, ptr %55, align 8
  %57 = load ptr, ptr %56, align 8
  %58 = load ptr, ptr %57, align 8
  %memberidx1.i84 = getelementptr inbounds %Module, ptr %58, i64 0, i32 5
  %59 = load ptr, ptr %memberidx1.i84, align 8
  store ptr %59, ptr %memberidx10, align 8
  %60 = load i64, ptr %59, align 4
  %61 = tail call fastcc ptr @TypeChecker_create_scope(ptr nonnull %0, i64 %60)
  %memberidx2.i110 = getelementptr inbounds %Scope, ptr %61, i64 0, i32 5
  %62 = load ptr, ptr %memberidx10, align 8
  store ptr %62, ptr %memberidx2.i110, align 8
  %63 = load ptr, ptr %0, align 8
  %64 = load ptr, ptr %memberidx10, align 8
  %65 = load ptr, ptr %63, align 8
  %66 = load i64, ptr %64, align 4
  %67 = load ptr, ptr %65, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %69, i64 0, i32 7
  %70 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %64, i64 0, i32 1
  %71 = load i64, ptr %memberidx3.i.i.i, align 4
  %72 = load ptr, ptr %70, align 8
  %73 = getelementptr inbounds ptr, ptr %72, i64 %71
  %74 = load ptr, ptr %73, align 8
  %memberidx4.i111 = getelementptr inbounds %Scope, ptr %74, i64 0, i32 7
  %75 = load ptr, ptr %memberidx4.i111, align 8
  %76 = load ptr, ptr %61, align 8
  %memberidx.i.i112 = getelementptr inbounds %Array_ScopeId_, ptr %75, i64 0, i32 1
  %77 = load i64, ptr %memberidx.i.i112, align 4
  %78 = add i64 %77, 1
  %memberidx.i.i.i113 = getelementptr inbounds %Array_ScopeId_, ptr %75, i64 0, i32 2
  %79 = load i64, ptr %memberidx.i.i.i113, align 4
  %80 = icmp slt i64 %79, %78
  %.pre.i = load ptr, ptr %75, align 8
  br i1 %80, label %while.entry.i.i.i114, label %TypeChecker_create_child_scope_within_current_scope.exit

while.entry.i.i.i114:                             ; preds = %ifend7, %while.entry.i.i.i114
  %81 = phi ptr [ %85, %while.entry.i.i.i114 ], [ %.pre.i, %ifend7 ]
  %82 = phi i64 [ %86, %while.entry.i.i.i114 ], [ %79, %ifend7 ]
  %83 = shl nuw i64 %82, 1
  store i64 %83, ptr %memberidx.i.i.i113, align 4
  %84 = shl i64 %82, 4
  %85 = tail call ptr @realloc(ptr %81, i64 %84)
  store ptr %85, ptr %75, align 8
  %86 = load i64, ptr %memberidx.i.i.i113, align 4
  %87 = icmp slt i64 %86, %78
  br i1 %87, label %while.entry.i.i.i114, label %Array_ScopeId____sl__.exit.loopexit.i

Array_ScopeId____sl__.exit.loopexit.i:            ; preds = %while.entry.i.i.i114
  %.pre11.i = load i64, ptr %memberidx.i.i112, align 4
  %.pre13.i = add nsw i64 %.pre11.i, 1
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %ifend7, %Array_ScopeId____sl__.exit.loopexit.i
  %.pre-phi.i = phi i64 [ %.pre13.i, %Array_ScopeId____sl__.exit.loopexit.i ], [ %78, %ifend7 ]
  %88 = phi ptr [ %85, %Array_ScopeId____sl__.exit.loopexit.i ], [ %.pre.i, %ifend7 ]
  %89 = phi i64 [ %.pre11.i, %Array_ScopeId____sl__.exit.loopexit.i ], [ %77, %ifend7 ]
  store i64 %.pre-phi.i, ptr %memberidx.i.i112, align 4
  %90 = getelementptr inbounds ptr, ptr %88, i64 %89
  store ptr %76, ptr %90, align 8
  %91 = tail call ptr @malloc(i32 0)
  %92 = tail call ptr @malloc(i32 24)
  store ptr %91, ptr %92, align 8
  %memberidx1.i.i85 = getelementptr inbounds %String, ptr %92, i64 0, i32 1
  %memberidx2.i.i86 = getelementptr inbounds %String, ptr %92, i64 0, i32 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx1.i.i85, i8 0, i64 16, i1 false)
  %93 = load i64, ptr %memberidx3, align 4
  %94 = icmp sgt i64 %93, 0
  br i1 %94, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %memberidx16 = getelementptr inbounds %Scope, ptr %61, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %String___adda__.exit
  %95 = phi ptr [ %91, %for.body.lr.ph ], [ %144, %String___adda__.exit ]
  %96 = phi i64 [ 0, %for.body.lr.ph ], [ %145, %String___adda__.exit ]
  %97 = phi i64 [ 0, %for.body.lr.ph ], [ %.pre-phi, %String___adda__.exit ]
  %i.0116 = phi i64 [ 0, %for.body.lr.ph ], [ %151, %String___adda__.exit ]
  %98 = load ptr, ptr %30, align 8
  %99 = getelementptr inbounds ptr, ptr %98, i64 %i.0116
  %100 = load ptr, ptr %99, align 8
  %101 = load ptr, ptr %100, align 8
  %memberidx13 = getelementptr inbounds %IdentifierToken, ptr %101, i64 0, i32 2
  %102 = load ptr, ptr %memberidx13, align 8
  %103 = load ptr, ptr %2, align 8
  %104 = getelementptr inbounds ptr, ptr %103, i64 %i.0116
  %105 = load ptr, ptr %104, align 8
  %106 = load i64, ptr %105, align 4
  %107 = icmp eq i64 %106, 20
  %memberidx15 = getelementptr inbounds %GenericType, ptr %105, i64 0, i32 3
  %spec.select = select i1 %107, ptr %memberidx15, ptr %104
  %ternary = load ptr, ptr %spec.select, align 8
  %108 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %ternary)
  %memberidx.i91 = getelementptr inbounds %String, ptr %108, i64 0, i32 1
  %109 = load i64, ptr %memberidx.i91, align 4
  %110 = trunc i64 %109 to i32
  %111 = add i32 %110, 1
  %112 = call ptr @malloc(i32 %111)
  %113 = load ptr, ptr %108, align 8
  %114 = load i64, ptr %memberidx.i91, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %112, ptr align 8 %113, i64 %114, i1 false)
  %115 = getelementptr inbounds i8, ptr %112, i64 %114
  store i8 0, ptr %115, align 1
  %116 = alloca ptr, align 8
  %117 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %116, ptr nonnull @103, ptr %112)
  %118 = load ptr, ptr %116, align 8
  %119 = tail call ptr @malloc(i32 24)
  store ptr %118, ptr %119, align 8
  %memberidx1.i92 = getelementptr inbounds %String, ptr %119, i64 0, i32 1
  store i64 %117, ptr %memberidx1.i92, align 4
  %memberidx2.i93 = getelementptr inbounds %String, ptr %119, i64 0, i32 2
  store i64 %117, ptr %memberidx2.i93, align 4
  tail call void @free(ptr %112)
  %120 = add nuw i64 %97, %117
  %121 = icmp slt i64 %96, %120
  br i1 %121, label %if.entry.i.i.i, label %String___adda__.exit

for.end:                                          ; preds = %String___adda__.exit, %TypeChecker_create_child_scope_within_current_scope.exit
  %122 = phi ptr [ %91, %TypeChecker_create_child_scope_within_current_scope.exit ], [ %144, %String___adda__.exit ]
  %123 = phi i64 [ 0, %TypeChecker_create_child_scope_within_current_scope.exit ], [ %.pre-phi, %String___adda__.exit ]
  %memberidx.i87 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %124 = load i64, ptr %memberidx.i87, align 4
  %125 = trunc i64 %124 to i32
  %126 = add i32 %125, 1
  %127 = call ptr @malloc(i32 %126)
  %128 = load ptr, ptr %1, align 8
  %129 = load i64, ptr %memberidx.i87, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %127, ptr align 8 %128, i64 %129, i1 false)
  %130 = getelementptr inbounds i8, ptr %127, i64 %129
  store i8 0, ptr %130, align 1
  %131 = trunc i64 %123 to i32
  %132 = add i32 %131, 1
  %133 = call ptr @malloc(i32 %132)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %133, ptr align 8 %122, i64 %123, i1 false)
  %134 = getelementptr inbounds i8, ptr %133, i64 %123
  store i8 0, ptr %134, align 1
  %135 = alloca ptr, align 8
  %136 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %135, ptr nonnull @104, ptr %127, ptr %133)
  %137 = load ptr, ptr %135, align 8
  %138 = tail call ptr @malloc(i32 24)
  store ptr %137, ptr %138, align 8
  %memberidx1.i89 = getelementptr inbounds %String, ptr %138, i64 0, i32 1
  store i64 %136, ptr %memberidx1.i89, align 4
  %memberidx2.i90 = getelementptr inbounds %String, ptr %138, i64 0, i32 2
  store i64 %136, ptr %memberidx2.i90, align 4
  tail call void @free(ptr %127)
  tail call void @free(ptr %133)
  %139 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %138)
  %140 = load i64, ptr %139, align 4
  %141 = icmp eq i64 %140, 21
  br i1 %141, label %if.entry18, label %ifend20

if.entry.i.i.i:                                   ; preds = %for.body
  %142 = call ptr @realloc(ptr %95, i64 %120)
  store ptr %142, ptr %92, align 8
  store i64 %120, ptr %memberidx2.i.i86, align 4
  %.pre123 = load i64, ptr %memberidx1.i.i85, align 4
  %.pre126 = add nuw i64 %.pre123, %117
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %for.body, %if.entry.i.i.i
  %.pre-phi = phi i64 [ %120, %for.body ], [ %.pre126, %if.entry.i.i.i ]
  %143 = phi i64 [ %97, %for.body ], [ %.pre123, %if.entry.i.i.i ]
  %144 = phi ptr [ %95, %for.body ], [ %142, %if.entry.i.i.i ]
  %145 = phi i64 [ %96, %for.body ], [ %120, %if.entry.i.i.i ]
  %146 = getelementptr inbounds i8, ptr %144, i64 %143
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %146, ptr align 8 %118, i64 %117, i1 false)
  store i64 %.pre-phi, ptr %memberidx1.i.i85, align 4
  %147 = load ptr, ptr %memberidx16, align 8
  %148 = load ptr, ptr %2, align 8
  %149 = getelementptr inbounds ptr, ptr %148, i64 %i.0116
  %150 = load ptr, ptr %149, align 8
  call fastcc void @Map_String_Type____setitem__(ptr %147, ptr %102, ptr %150)
  %151 = add nuw nsw i64 %i.0116, 1
  %152 = load i64, ptr %memberidx3, align 4
  %153 = icmp slt i64 %151, %152
  br i1 %153, label %for.body, label %for.end

if.entry18:                                       ; preds = %for.end
  %154 = alloca %IdentifierToken, align 8
  %155 = load ptr, ptr %memberidx1, align 8
  %156 = load ptr, ptr %155, align 8
  %memberidx23 = getelementptr inbounds %Token, ptr %156, i64 0, i32 1
  %157 = load ptr, ptr %memberidx23, align 8
  store i64 53, ptr %154, align 8
  %memberidx1.i.i97 = getelementptr inbounds %Token, ptr %154, i64 0, i32 1
  store ptr %157, ptr %memberidx1.i.i97, align 8
  %memberidx.i98 = getelementptr inbounds %IdentifierToken, ptr %154, i64 0, i32 2
  store ptr %138, ptr %memberidx.i98, align 8
  %158 = alloca %ClassDeclarationNode, align 8
  store ptr %154, ptr %158, align 8
  %memberidx1.i99 = getelementptr inbounds %ClassDeclarationNode, ptr %158, i64 0, i32 3
  %159 = call ptr @malloc(i32 24)
  %memberidx.i.i100 = getelementptr inbounds %Array_FieldNode_, ptr %159, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i100, align 4
  %memberidx1.i.i101 = getelementptr inbounds %Array_FieldNode_, ptr %159, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i101, align 4
  %160 = call ptr @malloc(i32 64)
  store ptr %160, ptr %159, align 8
  store i64 0, ptr %memberidx.i.i100, align 4
  %memberidx4.i = getelementptr inbounds %ClassDeclarationNode, ptr %158, i64 0, i32 4
  %161 = call ptr @malloc(i32 24)
  %memberidx.i15.i = getelementptr inbounds %Array_MethodNode_, ptr %161, i64 0, i32 1
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx1.i16.i = getelementptr inbounds %Array_MethodNode_, ptr %161, i64 0, i32 2
  store i64 8, ptr %memberidx1.i16.i, align 4
  %162 = call ptr @malloc(i32 64)
  store ptr %162, ptr %161, align 8
  store i64 0, ptr %memberidx.i15.i, align 4
  %memberidx7.i = getelementptr inbounds %ClassDeclarationNode, ptr %158, i64 0, i32 1
  %163 = call ptr @malloc(i32 24)
  %memberidx.i17.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %163, i64 0, i32 1
  store i64 0, ptr %memberidx.i17.i, align 4
  %memberidx1.i18.i = getelementptr inbounds %Array_GenericParameterNode_, ptr %163, i64 0, i32 2
  store i64 8, ptr %memberidx1.i18.i, align 4
  %164 = call ptr @malloc(i32 64)
  store ptr %164, ptr %163, align 8
  store i64 0, ptr %memberidx.i17.i, align 4
  store ptr %163, ptr %memberidx7.i, align 8
  %memberidx10.i = getelementptr inbounds %ClassDeclarationNode, ptr %158, i64 0, i32 2
  %165 = load ptr, ptr %memberidx1, align 8
  %memberidx26 = getelementptr inbounds %ClassDeclarationNode, ptr %165, i64 0, i32 2
  %166 = load ptr, ptr %memberidx26, align 8
  store ptr %166, ptr %memberidx10.i, align 8
  %167 = load ptr, ptr %memberidx1, align 8
  %memberidx29 = getelementptr inbounds %ClassDeclarationNode, ptr %167, i64 0, i32 3
  %168 = load ptr, ptr %memberidx29, align 8
  store ptr %168, ptr %memberidx1.i99, align 8
  %169 = load ptr, ptr %memberidx1, align 8
  %memberidx32 = getelementptr inbounds %ClassDeclarationNode, ptr %169, i64 0, i32 4
  %170 = load ptr, ptr %memberidx32, align 8
  store ptr %170, ptr %memberidx4.i, align 8
  %171 = load ptr, ptr %61, align 8
  store ptr %171, ptr %memberidx10, align 8
  call fastcc void @TypeChecker_declare_class_within_module(ptr nonnull %0, ptr nonnull %158)
  call fastcc void @TypeChecker_check_class_body(ptr nonnull %0, ptr nonnull %158)
  %172 = call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr nonnull %138)
  br label %ifend20

ifend20:                                          ; preds = %for.end, %if.entry18
  %possible_type.0 = phi ptr [ %172, %if.entry18 ], [ %139, %for.end ]
  store ptr %54, ptr %memberidx10, align 8
  call fastcc void @Scope___del__(ptr nonnull %61)
  tail call void @free(ptr %61)
  %173 = tail call ptr @malloc(i32 32)
  store i64 20, ptr %173, align 4
  %memberidx.i102 = getelementptr inbounds %GenericType, ptr %173, i64 0, i32 1
  store ptr %1, ptr %memberidx.i102, align 8
  %memberidx1.i103 = getelementptr inbounds %GenericType, ptr %173, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i103, align 8
  %memberidx2.i104 = getelementptr inbounds %GenericType, ptr %173, i64 0, i32 3
  store ptr %possible_type.0, ptr %memberidx2.i104, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_enum_within_module(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 32)
  %memberidx.i = getelementptr inbounds %Enum, ptr %3, i64 0, i32 2
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_EnumField_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %4, ptr %memberidx.i, align 8
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 2048)
  store ptr %7, ptr %6, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i53 = phi i64 [ 0, %2 ], [ %10, %for.body.i.i ]
  %8 = load ptr, ptr %6, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %i.0.i.i53
  store ptr null, ptr %9, align 8
  %10 = add nuw nsw i64 %i.0.i.i53, 1
  %11 = icmp ult i64 %i.0.i.i53, 255
  br i1 %11, label %for.body.i.i, label %Enum_constructor.exit

Enum_constructor.exit:                            ; preds = %for.body.i.i
  %memberidx3.i = getelementptr inbounds %Enum, ptr %3, i64 0, i32 3
  %memberidx2.i.i = getelementptr inbounds %Map_String_PropId_, ptr %6, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_String_PropId_, ptr %6, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %6, ptr %memberidx3.i, align 8
  %12 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx1, align 8
  %14 = load ptr, ptr %0, align 8
  %memberidx.i.i33 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %15 = load ptr, ptr %memberidx.i.i33, align 8
  %16 = load i64, ptr %15, align 4
  %17 = load ptr, ptr %14, align 8
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %16
  %20 = load ptr, ptr %19, align 8
  %memberidx1.i = getelementptr inbounds %Module, ptr %20, i64 0, i32 5
  %21 = load ptr, ptr %memberidx1.i, align 8
  %22 = load i64, ptr %21, align 4
  %23 = getelementptr inbounds ptr, ptr %18, i64 %22
  %24 = load ptr, ptr %23, align 8
  %memberidx2.i.i34 = getelementptr inbounds %Module, ptr %24, i64 0, i32 7
  %25 = load ptr, ptr %memberidx2.i.i34, align 8
  %memberidx3.i.i35 = getelementptr inbounds %ScopeId, ptr %21, i64 0, i32 1
  %26 = load i64, ptr %memberidx3.i.i35, align 4
  %27 = load ptr, ptr %25, align 8
  %28 = getelementptr inbounds ptr, ptr %27, i64 %26
  %29 = load ptr, ptr %28, align 8
  %memberidx2 = getelementptr inbounds %Enum, ptr %3, i64 0, i32 1
  store ptr %13, ptr %memberidx2, align 8
  %30 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr nonnull %0, ptr %13)
  %31 = load i64, ptr %30, align 4
  %.not = icmp eq i64 %31, 21
  br i1 %.not, label %ifend, label %if.entry

common.ret:                                       ; preds = %Array_Enum____sl__.exit, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %Enum_constructor.exit
  %memberidx.i36 = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  %32 = load i64, ptr %memberidx.i36, align 4
  %33 = trunc i64 %32 to i32
  %34 = add i32 %33, 1
  %35 = tail call ptr @malloc(i32 %34)
  %36 = load ptr, ptr %13, align 8
  %37 = load i64, ptr %memberidx.i36, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %35, ptr align 8 %36, i64 %37, i1 false)
  %38 = getelementptr inbounds i8, ptr %35, i64 %37
  store i8 0, ptr %38, align 1
  %39 = alloca ptr, align 8
  %40 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %39, ptr nonnull @101, ptr %35)
  %41 = load ptr, ptr %39, align 8
  %42 = tail call ptr @malloc(i32 24)
  store ptr %41, ptr %42, align 8
  %memberidx1.i37 = getelementptr inbounds %String, ptr %42, i64 0, i32 1
  store i64 %40, ptr %memberidx1.i37, align 4
  %memberidx2.i38 = getelementptr inbounds %String, ptr %42, i64 0, i32 2
  store i64 %40, ptr %memberidx2.i38, align 4
  tail call void @free(ptr %35)
  %43 = load ptr, ptr %1, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %43, i64 0, i32 1
  %44 = load ptr, ptr %memberidx5, align 8
  %memberidx.i39 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %45 = load ptr, ptr %memberidx.i39, align 8
  %memberidx1.i40 = getelementptr inbounds %Compiler, ptr %45, i64 0, i32 5
  %46 = load ptr, ptr %memberidx1.i40, align 8
  %47 = call ptr @malloc(i32 24)
  store i64 1, ptr %47, align 4
  %memberidx1.i.i41 = getelementptr inbounds %FloError, ptr %47, i64 0, i32 2
  store ptr %44, ptr %memberidx1.i.i41, align 8
  %memberidx2.i.i42 = getelementptr inbounds %FloError, ptr %47, i64 0, i32 1
  store ptr %42, ptr %memberidx2.i.i42, align 8
  %memberidx.i.i43 = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 1
  %48 = load i64, ptr %memberidx.i.i43, align 4
  %49 = add i64 %48, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %46, i64 0, i32 2
  %50 = load i64, ptr %memberidx.i.i.i, align 4
  %51 = icmp slt i64 %50, %49
  %.pre = load ptr, ptr %46, align 8
  br i1 %51, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %52 = phi ptr [ %56, %while.entry.i.i.i ], [ %.pre, %if.entry ]
  %53 = phi i64 [ %57, %while.entry.i.i.i ], [ %50, %if.entry ]
  %54 = shl nuw i64 %53, 1
  store i64 %54, ptr %memberidx.i.i.i, align 4
  %55 = shl i64 %53, 4
  %56 = call ptr @realloc(ptr %52, i64 %55)
  store ptr %56, ptr %46, align 8
  %57 = load i64, ptr %memberidx.i.i.i, align 4
  %58 = icmp slt i64 %57, %49
  br i1 %58, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre54 = load i64, ptr %memberidx.i.i43, align 4
  %.pre60 = add nsw i64 %.pre54, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi61 = phi i64 [ %.pre60, %TypeChecker_error.exit.loopexit ], [ %49, %if.entry ]
  %59 = phi ptr [ %56, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %60 = phi i64 [ %.pre54, %TypeChecker_error.exit.loopexit ], [ %48, %if.entry ]
  store i64 %.pre-phi61, ptr %memberidx.i.i43, align 4
  %61 = getelementptr inbounds ptr, ptr %59, i64 %60
  store ptr %47, ptr %61, align 8
  br label %common.ret

ifend:                                            ; preds = %Enum_constructor.exit
  %62 = tail call ptr @malloc(i32 24)
  %63 = load ptr, ptr %memberidx.i.i33, align 8
  %64 = load i64, ptr %63, align 4
  %65 = load ptr, ptr %0, align 8
  %66 = load ptr, ptr %65, align 8
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %64
  %69 = load ptr, ptr %68, align 8
  %memberidx9 = getelementptr inbounds %Module, ptr %69, i64 0, i32 6
  %70 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Enum_, ptr %70, i64 0, i32 1
  %71 = load i64, ptr %memberidx10, align 4
  store i64 %64, ptr %62, align 4
  %memberidx1.i.i45 = getelementptr inbounds %TypeId, ptr %62, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i45, align 4
  %memberidx2.i.i46 = getelementptr inbounds %TypeId, ptr %62, i64 0, i32 2
  store i64 %71, ptr %memberidx2.i.i46, align 4
  store ptr %62, ptr %3, align 8
  %72 = load i64, ptr %63, align 4
  %73 = load ptr, ptr %65, align 8
  %74 = load ptr, ptr %73, align 8
  %75 = getelementptr inbounds ptr, ptr %74, i64 %72
  %76 = load ptr, ptr %75, align 8
  %memberidx11 = getelementptr inbounds %Module, ptr %76, i64 0, i32 6
  %77 = load ptr, ptr %memberidx11, align 8
  %memberidx.i48 = getelementptr inbounds %Array_Enum_, ptr %77, i64 0, i32 1
  %78 = load i64, ptr %memberidx.i48, align 4
  %79 = add i64 %78, 1
  %memberidx.i.i49 = getelementptr inbounds %Array_Enum_, ptr %77, i64 0, i32 2
  %80 = load i64, ptr %memberidx.i.i49, align 4
  %81 = icmp slt i64 %80, %79
  %.pre56 = load ptr, ptr %77, align 8
  br i1 %81, label %while.entry.i.i, label %Array_Enum____sl__.exit

while.entry.i.i:                                  ; preds = %ifend, %while.entry.i.i
  %82 = phi ptr [ %86, %while.entry.i.i ], [ %.pre56, %ifend ]
  %83 = phi i64 [ %87, %while.entry.i.i ], [ %80, %ifend ]
  %84 = shl nuw i64 %83, 1
  store i64 %84, ptr %memberidx.i.i49, align 4
  %85 = shl i64 %83, 4
  %86 = tail call ptr @realloc(ptr %82, i64 %85)
  store ptr %86, ptr %77, align 8
  %87 = load i64, ptr %memberidx.i.i49, align 4
  %88 = icmp slt i64 %87, %79
  br i1 %88, label %while.entry.i.i, label %Array_Enum____sl__.exit.loopexit

Array_Enum____sl__.exit.loopexit:                 ; preds = %while.entry.i.i
  %.pre57 = load i64, ptr %memberidx.i48, align 4
  %.pre59 = add nsw i64 %.pre57, 1
  br label %Array_Enum____sl__.exit

Array_Enum____sl__.exit:                          ; preds = %ifend, %Array_Enum____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre59, %Array_Enum____sl__.exit.loopexit ], [ %79, %ifend ]
  %89 = phi ptr [ %86, %Array_Enum____sl__.exit.loopexit ], [ %.pre56, %ifend ]
  %90 = phi i64 [ %.pre57, %Array_Enum____sl__.exit.loopexit ], [ %78, %ifend ]
  store i64 %.pre-phi, ptr %memberidx.i48, align 4
  %91 = getelementptr inbounds ptr, ptr %89, i64 %90
  store ptr %3, ptr %91, align 8
  %memberidx12 = getelementptr inbounds %Scope, ptr %29, i64 0, i32 4
  %92 = load ptr, ptr %memberidx12, align 8
  %93 = load ptr, ptr %memberidx2, align 8
  %94 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %92, ptr %93, ptr %94)
  %memberidx15 = getelementptr inbounds %Scope, ptr %29, i64 0, i32 1
  %95 = load ptr, ptr %memberidx15, align 8
  %96 = load ptr, ptr %memberidx2, align 8
  %97 = tail call ptr @malloc(i32 24)
  %98 = load ptr, ptr %3, align 8
  %99 = load i64, ptr %98, align 4
  %memberidx1.i50 = getelementptr inbounds %TypeId, ptr %98, i64 0, i32 2
  %100 = load i64, ptr %memberidx1.i50, align 4
  store i64 4, ptr %97, align 4
  %memberidx1.i.i51 = getelementptr inbounds %VarId, ptr %97, i64 0, i32 1
  store i64 %99, ptr %memberidx1.i.i51, align 4
  %memberidx2.i.i52 = getelementptr inbounds %VarId, ptr %97, i64 0, i32 2
  store i64 %100, ptr %memberidx2.i.i52, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %95, ptr %96, ptr nonnull %97)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_within_module(ptr %0, ptr %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp ne i64 %6, 21
  %memberidx3 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %4)
  %memberidx.i90 = getelementptr inbounds %Map_String_Generic_, ptr %8, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i90, align 4
  %11 = urem i64 %9, %10
  %12 = load ptr, ptr %8, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %.not.i = icmp eq ptr %14, null
  br i1 %.not.i, label %Map_String_Generic____getitem__.exit, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %2
  %memberidx1.i.i92 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %15 = phi ptr [ %25, %else.i ], [ %12, %while.entry.i.preheader ]
  %16 = phi i64 [ %26, %else.i ], [ %10, %while.entry.i.preheader ]
  %17 = phi ptr [ %30, %else.i ], [ %14, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %28, %else.i ], [ %11, %while.entry.i.preheader ]
  %18 = load ptr, ptr %17, align 8
  %memberidx.i.i91 = getelementptr inbounds %String, ptr %18, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i.i91, align 4
  %20 = load i64, ptr %memberidx1.i.i92, align 4
  %.not.i.i = icmp eq i64 %19, %20
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %21 = load ptr, ptr %18, align 8
  %22 = load ptr, ptr %4, align 8
  %23 = tail call i64 @memcmp(ptr %21, ptr %22, i64 %19)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i90, align 4
  %.pre98 = load ptr, ptr %8, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre99.pre = load ptr, ptr %8, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre99.pre, i64 %hash.0.i
  %.pre100.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre100.pre, null
  br i1 %.not25.i, label %Map_String_Generic____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %25 = phi ptr [ %.pre98, %ifend.i.i.else.i_crit_edge ], [ %15, %while.entry.i ]
  %26 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %16, %while.entry.i ]
  %27 = add nuw i64 %hash.0.i, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not26.i = icmp eq ptr %30, null
  br i1 %.not26.i, label %Map_String_Generic____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i93 = getelementptr inbounds %MapEntry_String_Generic_, ptr %.pre100.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx11.i93, align 8
  %phi.cmp = icmp ne ptr %31, null
  br label %Map_String_Generic____getitem__.exit

Map_String_Generic____getitem__.exit:             ; preds = %else.i, %2, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi i1 [ %phi.cmp, %if.entry7.i ], [ false, %while.end.i ], [ false, %2 ], [ false, %else.i ]
  %32 = or i1 %7, %common.ret.op.i
  br i1 %32, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry16, %Array_Class____sl__.exit, %if.entry8, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %Map_String_Generic____getitem__.exit
  %memberidx.i89 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i89, align 4
  %34 = trunc i64 %33 to i32
  %35 = add i32 %34, 1
  %36 = tail call ptr @malloc(i32 %35)
  %37 = load ptr, ptr %4, align 8
  %38 = load i64, ptr %memberidx.i89, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %36, ptr align 8 %37, i64 %38, i1 false)
  %39 = getelementptr inbounds i8, ptr %36, i64 %38
  store i8 0, ptr %39, align 1
  %40 = alloca ptr, align 8
  %41 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %40, ptr nonnull @101, ptr %36)
  %42 = load ptr, ptr %40, align 8
  %43 = tail call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  %memberidx1.i87 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 %41, ptr %memberidx1.i87, align 4
  %memberidx2.i88 = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 %41, ptr %memberidx2.i88, align 4
  tail call void @free(ptr %36)
  %44 = load ptr, ptr %1, align 8
  %memberidx5 = getelementptr inbounds %Token, ptr %44, i64 0, i32 1
  %45 = load ptr, ptr %memberidx5, align 8
  %memberidx.i82 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %46 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i83 = getelementptr inbounds %Compiler, ptr %46, i64 0, i32 5
  %47 = load ptr, ptr %memberidx1.i83, align 8
  %48 = call ptr @malloc(i32 24)
  store i64 1, ptr %48, align 4
  %memberidx1.i.i84 = getelementptr inbounds %FloError, ptr %48, i64 0, i32 2
  store ptr %45, ptr %memberidx1.i.i84, align 8
  %memberidx2.i.i85 = getelementptr inbounds %FloError, ptr %48, i64 0, i32 1
  store ptr %43, ptr %memberidx2.i.i85, align 8
  %memberidx.i.i86 = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 1
  %49 = load i64, ptr %memberidx.i.i86, align 4
  %50 = add i64 %49, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %47, i64 0, i32 2
  %51 = load i64, ptr %memberidx.i.i.i, align 4
  %52 = icmp slt i64 %51, %50
  %.pre104 = load ptr, ptr %47, align 8
  br i1 %52, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %53 = phi ptr [ %57, %while.entry.i.i.i ], [ %.pre104, %if.entry ]
  %54 = phi i64 [ %58, %while.entry.i.i.i ], [ %51, %if.entry ]
  %55 = shl nuw i64 %54, 1
  store i64 %55, ptr %memberidx.i.i.i, align 4
  %56 = shl i64 %54, 4
  %57 = call ptr @realloc(ptr %53, i64 %56)
  store ptr %57, ptr %47, align 8
  %58 = load i64, ptr %memberidx.i.i.i, align 4
  %59 = icmp slt i64 %58, %50
  br i1 %59, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre105 = load i64, ptr %memberidx.i.i86, align 4
  %.pre109 = add nsw i64 %.pre105, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre109, %TypeChecker_error.exit.loopexit ], [ %50, %if.entry ]
  %60 = phi ptr [ %57, %TypeChecker_error.exit.loopexit ], [ %.pre104, %if.entry ]
  %61 = phi i64 [ %.pre105, %TypeChecker_error.exit.loopexit ], [ %49, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i86, align 4
  %62 = getelementptr inbounds ptr, ptr %60, i64 %61
  store ptr %48, ptr %62, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_Generic____getitem__.exit
  %memberidx6 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 1
  %63 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Array_GenericParameterNode_, ptr %63, i64 0, i32 1
  %64 = load i64, ptr %memberidx7, align 4
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %if.entry8, label %ifend10

if.entry8:                                        ; preds = %ifend
  %memberidx11 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 7
  store i1 true, ptr %memberidx11, align 1
  %66 = load ptr, ptr %memberidx3, align 8
  %67 = tail call ptr @malloc(i32 16)
  %memberidx13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %68 = load ptr, ptr %memberidx13, align 8
  %69 = load i64, ptr %68, align 4
  store i64 %69, ptr %67, align 4
  %memberidx1.i81 = getelementptr inbounds %Generic, ptr %67, i64 0, i32 1
  store ptr %1, ptr %memberidx1.i81, align 8
  tail call fastcc void @Map_String_Generic____setitem__(ptr %66, ptr %4, ptr nonnull %67)
  br label %common.ret

ifend10:                                          ; preds = %ifend
  %70 = tail call ptr @malloc(i32 81)
  %memberidx.i74 = getelementptr inbounds %Class, ptr %70, i64 0, i32 3
  store ptr null, ptr %memberidx.i74, align 8
  %memberidx2.i76 = getelementptr inbounds %Class, ptr %70, i64 0, i32 8
  %memberidx3.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %memberidx2.i76, i8 0, i64 16, i1 false)
  %71 = tail call ptr @malloc(i32 24)
  %memberidx.i.i77 = getelementptr inbounds %Array_ClassField_, ptr %71, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i77, align 4
  %memberidx1.i.i78 = getelementptr inbounds %Array_ClassField_, ptr %71, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i78, align 4
  %72 = tail call ptr @malloc(i32 64)
  store ptr %72, ptr %71, align 8
  store i64 0, ptr %memberidx.i.i77, align 4
  store ptr %71, ptr %memberidx3.i, align 8
  %memberidx6.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 5
  %73 = tail call ptr @malloc(i32 24)
  %memberidx.i19.i = getelementptr inbounds %Array_ClassMethod_, ptr %73, i64 0, i32 1
  store i64 0, ptr %memberidx.i19.i, align 4
  %memberidx1.i20.i = getelementptr inbounds %Array_ClassMethod_, ptr %73, i64 0, i32 2
  store i64 8, ptr %memberidx1.i20.i, align 4
  %74 = tail call ptr @malloc(i32 64)
  store ptr %74, ptr %73, align 8
  store i64 0, ptr %memberidx.i19.i, align 4
  store ptr %73, ptr %memberidx6.i, align 8
  %75 = tail call ptr @malloc(i32 24)
  %76 = tail call ptr @malloc(i32 2048)
  store ptr %76, ptr %75, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %ifend10, %for.body.i.i
  %i.0.i.i97 = phi i64 [ 0, %ifend10 ], [ %79, %for.body.i.i ]
  %77 = load ptr, ptr %75, align 8
  %78 = getelementptr inbounds ptr, ptr %77, i64 %i.0.i.i97
  store ptr null, ptr %78, align 8
  %79 = add nuw nsw i64 %i.0.i.i97, 1
  %80 = icmp ult i64 %i.0.i.i97, 255
  br i1 %80, label %for.body.i.i, label %Map_String_PropId__constructor.exit.i

Map_String_PropId__constructor.exit.i:            ; preds = %for.body.i.i
  %memberidx9.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 6
  %memberidx2.i.i79 = getelementptr inbounds %Map_String_PropId_, ptr %75, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i79, align 4
  %memberidx3.i.i80 = getelementptr inbounds %Map_String_PropId_, ptr %75, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i80, align 4
  store ptr %75, ptr %memberidx9.i, align 8
  %81 = tail call ptr @malloc(i32 24)
  %82 = tail call ptr @malloc(i32 2048)
  store ptr %82, ptr %81, align 8
  br label %for.body.i23.i

for.body.i23.i:                                   ; preds = %Map_String_PropId__constructor.exit.i, %for.body.i23.i
  %i.0.i21.i96 = phi i64 [ 0, %Map_String_PropId__constructor.exit.i ], [ %85, %for.body.i23.i ]
  %83 = load ptr, ptr %81, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %i.0.i21.i96
  store ptr null, ptr %84, align 8
  %85 = add nuw nsw i64 %i.0.i21.i96, 1
  %86 = icmp ult i64 %i.0.i21.i96, 255
  br i1 %86, label %for.body.i23.i, label %Class_constructor.exit

Class_constructor.exit:                           ; preds = %for.body.i23.i
  %memberidx10.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 7
  %memberidx2.i24.i = getelementptr inbounds %Map_String_PropId_, ptr %81, i64 0, i32 1
  store i64 256, ptr %memberidx2.i24.i, align 4
  %memberidx3.i25.i = getelementptr inbounds %Map_String_PropId_, ptr %81, i64 0, i32 2
  store i64 0, ptr %memberidx3.i25.i, align 4
  store ptr %81, ptr %memberidx10.i, align 8
  %memberidx11.i = getelementptr inbounds %Class, ptr %70, i64 0, i32 10
  store i1 false, ptr %memberidx11.i, align 1
  %87 = load ptr, ptr %0, align 8
  %memberidx.i.i71 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %88 = load ptr, ptr %memberidx.i.i71, align 8
  %89 = load i64, ptr %88, align 4
  %90 = load ptr, ptr %87, align 8
  %91 = load ptr, ptr %90, align 8
  %92 = getelementptr inbounds ptr, ptr %91, i64 %89
  %93 = load ptr, ptr %92, align 8
  %memberidx1.i72 = getelementptr inbounds %Module, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx1.i72, align 8
  %95 = load i64, ptr %94, align 4
  %96 = getelementptr inbounds ptr, ptr %91, i64 %95
  %97 = load ptr, ptr %96, align 8
  %memberidx2.i.i73 = getelementptr inbounds %Module, ptr %97, i64 0, i32 7
  %98 = load ptr, ptr %memberidx2.i.i73, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %94, i64 0, i32 1
  %99 = load i64, ptr %memberidx3.i.i, align 4
  %100 = load ptr, ptr %98, align 8
  %101 = getelementptr inbounds ptr, ptr %100, i64 %99
  %102 = load ptr, ptr %101, align 8
  %memberidx15 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 2
  %103 = load ptr, ptr %memberidx15, align 8
  %.not = icmp eq ptr %103, null
  %memberidx24 = getelementptr inbounds %Class, ptr %70, i64 0, i32 2
  br i1 %.not, label %else17, label %if.entry16

if.entry16:                                       ; preds = %Class_constructor.exit
  %104 = tail call fastcc ptr @TypeChecker_check_type(ptr nonnull %0, ptr nonnull %103)
  store ptr %104, ptr %memberidx24, align 8
  %memberidx.i69 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %105 = load ptr, ptr %memberidx.i69, align 8
  %memberidx1.i70 = getelementptr inbounds %Compiler, ptr %105, i64 0, i32 5
  %106 = load ptr, ptr %memberidx1.i70, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %106, i64 0, i32 1
  %107 = load i64, ptr %memberidx2.i, align 4
  %108 = icmp sgt i64 %107, 0
  br i1 %108, label %common.ret, label %ifend18

else17:                                           ; preds = %Class_constructor.exit
  store ptr null, ptr %memberidx24, align 8
  br label %ifend18

ifend18:                                          ; preds = %if.entry16, %else17
  %memberidx25 = getelementptr inbounds %Class, ptr %70, i64 0, i32 1
  store ptr %4, ptr %memberidx25, align 8
  %109 = tail call ptr @malloc(i32 24)
  %110 = load ptr, ptr %memberidx.i.i71, align 8
  %111 = load i64, ptr %110, align 4
  %112 = load ptr, ptr %0, align 8
  %113 = load ptr, ptr %112, align 8
  %114 = load ptr, ptr %113, align 8
  %115 = getelementptr inbounds ptr, ptr %114, i64 %111
  %116 = load ptr, ptr %115, align 8
  %memberidx29 = getelementptr inbounds %Module, ptr %116, i64 0, i32 3
  %117 = load ptr, ptr %memberidx29, align 8
  %memberidx30 = getelementptr inbounds %Array_Class_, ptr %117, i64 0, i32 1
  %118 = load i64, ptr %memberidx30, align 4
  store i64 %111, ptr %109, align 4
  %memberidx1.i.i66 = getelementptr inbounds %TypeId, ptr %109, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i66, align 4
  %memberidx2.i.i67 = getelementptr inbounds %TypeId, ptr %109, i64 0, i32 2
  store i64 %118, ptr %memberidx2.i.i67, align 4
  store ptr %109, ptr %70, align 8
  %119 = load i64, ptr %110, align 4
  %120 = load ptr, ptr %112, align 8
  %121 = load ptr, ptr %120, align 8
  %122 = getelementptr inbounds ptr, ptr %121, i64 %119
  %123 = load ptr, ptr %122, align 8
  %memberidx31 = getelementptr inbounds %Module, ptr %123, i64 0, i32 3
  %124 = load ptr, ptr %memberidx31, align 8
  %memberidx.i = getelementptr inbounds %Array_Class_, ptr %124, i64 0, i32 1
  %125 = load i64, ptr %memberidx.i, align 4
  %126 = add i64 %125, 1
  %memberidx.i.i = getelementptr inbounds %Array_Class_, ptr %124, i64 0, i32 2
  %127 = load i64, ptr %memberidx.i.i, align 4
  %128 = icmp slt i64 %127, %126
  %.pre101 = load ptr, ptr %124, align 8
  br i1 %128, label %while.entry.i.i, label %Array_Class____sl__.exit

while.entry.i.i:                                  ; preds = %ifend18, %while.entry.i.i
  %129 = phi ptr [ %133, %while.entry.i.i ], [ %.pre101, %ifend18 ]
  %130 = phi i64 [ %134, %while.entry.i.i ], [ %127, %ifend18 ]
  %131 = shl nuw i64 %130, 1
  store i64 %131, ptr %memberidx.i.i, align 4
  %132 = shl i64 %130, 4
  %133 = tail call ptr @realloc(ptr %129, i64 %132)
  store ptr %133, ptr %124, align 8
  %134 = load i64, ptr %memberidx.i.i, align 4
  %135 = icmp slt i64 %134, %126
  br i1 %135, label %while.entry.i.i, label %Array_Class____sl__.exit.loopexit

Array_Class____sl__.exit.loopexit:                ; preds = %while.entry.i.i
  %.pre102 = load i64, ptr %memberidx.i, align 4
  %.pre110 = add nsw i64 %.pre102, 1
  br label %Array_Class____sl__.exit

Array_Class____sl__.exit:                         ; preds = %ifend18, %Array_Class____sl__.exit.loopexit
  %.pre-phi111 = phi i64 [ %.pre110, %Array_Class____sl__.exit.loopexit ], [ %126, %ifend18 ]
  %136 = phi ptr [ %133, %Array_Class____sl__.exit.loopexit ], [ %.pre101, %ifend18 ]
  %137 = phi i64 [ %.pre102, %Array_Class____sl__.exit.loopexit ], [ %125, %ifend18 ]
  store i64 %.pre-phi111, ptr %memberidx.i, align 4
  %138 = getelementptr inbounds ptr, ptr %136, i64 %137
  store ptr %70, ptr %138, align 8
  %memberidx32 = getelementptr inbounds %Scope, ptr %102, i64 0, i32 2
  %139 = load ptr, ptr %memberidx32, align 8
  %140 = load ptr, ptr %70, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %139, ptr %4, ptr %140)
  %memberidx34 = getelementptr inbounds %Scope, ptr %102, i64 0, i32 1
  %141 = load ptr, ptr %memberidx34, align 8
  %142 = tail call ptr @malloc(i32 24)
  %143 = load ptr, ptr %70, align 8
  %144 = load i64, ptr %143, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %143, i64 0, i32 2
  %145 = load i64, ptr %memberidx1.i, align 4
  store i64 3, ptr %142, align 4
  %memberidx1.i.i = getelementptr inbounds %VarId, ptr %142, i64 0, i32 1
  store i64 %144, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %142, i64 0, i32 2
  store i64 %145, ptr %memberidx2.i.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %141, ptr %4, ptr nonnull %142)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_function_within_module(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 49)
  %memberidx.i = getelementptr inbounds %Function, ptr %3, i64 0, i32 6
  %memberidx1 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 4
  %4 = load i1, ptr %memberidx1, align 1
  store i1 %4, ptr %memberidx.i, align 1
  %5 = load ptr, ptr %1, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %5, i64 0, i32 2
  %6 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Function, ptr %3, i64 0, i32 1
  store ptr %6, ptr %memberidx4, align 8
  %7 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr %6)
  %.not.i = icmp eq ptr %7, null
  br i1 %.not.i, label %ifend, label %if.entry.i

if.entry.i:                                       ; preds = %2
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 2
  br i1 %9, label %if.entry, label %ifend

common.ret:                                       ; preds = %TypeChecker_create_child_scope_within_current_scope.exit, %Array_Function____sl__.exit, %TypeChecker_error.exit87, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %if.entry.i
  %memberidx.i72 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i72, align 4
  %11 = trunc i64 %10 to i32
  %12 = add i32 %11, 1
  %13 = tail call ptr @malloc(i32 %12)
  %14 = load ptr, ptr %6, align 8
  %15 = load i64, ptr %memberidx.i72, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %14, i64 %15, i1 false)
  %16 = getelementptr inbounds i8, ptr %13, i64 %15
  store i8 0, ptr %16, align 1
  %17 = alloca ptr, align 8
  %18 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %17, ptr nonnull @109, ptr %13)
  %19 = load ptr, ptr %17, align 8
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 %18, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 %18, ptr %memberidx2.i, align 4
  tail call void @free(ptr %13)
  %21 = load ptr, ptr %1, align 8
  %memberidx6 = getelementptr inbounds %Token, ptr %21, i64 0, i32 1
  %22 = load ptr, ptr %memberidx6, align 8
  %memberidx.i74 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %23 = load ptr, ptr %memberidx.i74, align 8
  %memberidx1.i75 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx1.i75, align 8
  %25 = call ptr @malloc(i32 24)
  store i64 1, ptr %25, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %25, i64 0, i32 2
  store ptr %22, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %25, i64 0, i32 1
  store ptr %20, ptr %memberidx2.i.i, align 8
  %memberidx.i.i76 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i.i76, align 4
  %27 = add i64 %26, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i.i.i, align 4
  %29 = icmp slt i64 %28, %27
  %.pre = load ptr, ptr %24, align 8
  br i1 %29, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %30 = phi ptr [ %34, %while.entry.i.i.i ], [ %.pre, %if.entry ]
  %31 = phi i64 [ %35, %while.entry.i.i.i ], [ %28, %if.entry ]
  %32 = shl nuw i64 %31, 1
  store i64 %32, ptr %memberidx.i.i.i, align 4
  %33 = shl i64 %31, 4
  %34 = call ptr @realloc(ptr %30, i64 %33)
  store ptr %34, ptr %24, align 8
  %35 = load i64, ptr %memberidx.i.i.i, align 4
  %36 = icmp slt i64 %35, %27
  br i1 %36, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre105 = load i64, ptr %memberidx.i.i76, align 4
  %.pre116 = add nsw i64 %.pre105, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi117 = phi i64 [ %.pre116, %TypeChecker_error.exit.loopexit ], [ %27, %if.entry ]
  %37 = phi ptr [ %34, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %38 = phi i64 [ %.pre105, %TypeChecker_error.exit.loopexit ], [ %26, %if.entry ]
  store i64 %.pre-phi117, ptr %memberidx.i.i76, align 4
  %39 = getelementptr inbounds ptr, ptr %37, i64 %38
  store ptr %25, ptr %39, align 8
  br label %common.ret

ifend:                                            ; preds = %2, %if.entry.i
  %40 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %6)
  %41 = load i64, ptr %40, align 4
  %.not = icmp eq i64 %41, 21
  br i1 %.not, label %ifend10, label %if.entry8

if.entry8:                                        ; preds = %ifend
  %memberidx.i77 = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i77, align 4
  %43 = trunc i64 %42 to i32
  %44 = add i32 %43, 1
  %45 = tail call ptr @malloc(i32 %44)
  %46 = load ptr, ptr %6, align 8
  %47 = load i64, ptr %memberidx.i77, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %45, ptr align 8 %46, i64 %47, i1 false)
  %48 = getelementptr inbounds i8, ptr %45, i64 %47
  store i8 0, ptr %48, align 1
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @110, ptr %45)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i78 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 %50, ptr %memberidx1.i78, align 4
  %memberidx2.i79 = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i79, align 4
  tail call void @free(ptr %45)
  %53 = load ptr, ptr %1, align 8
  %memberidx12 = getelementptr inbounds %Token, ptr %53, i64 0, i32 1
  %54 = load ptr, ptr %memberidx12, align 8
  %memberidx.i80 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %55 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i81 = getelementptr inbounds %Compiler, ptr %55, i64 0, i32 5
  %56 = load ptr, ptr %memberidx1.i81, align 8
  %57 = call ptr @malloc(i32 24)
  store i64 1, ptr %57, align 4
  %memberidx1.i.i82 = getelementptr inbounds %FloError, ptr %57, i64 0, i32 2
  store ptr %54, ptr %memberidx1.i.i82, align 8
  %memberidx2.i.i83 = getelementptr inbounds %FloError, ptr %57, i64 0, i32 1
  store ptr %52, ptr %memberidx2.i.i83, align 8
  %memberidx.i.i84 = getelementptr inbounds %Array_FloError_, ptr %56, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i.i84, align 4
  %59 = add i64 %58, 1
  %memberidx.i.i.i85 = getelementptr inbounds %Array_FloError_, ptr %56, i64 0, i32 2
  %60 = load i64, ptr %memberidx.i.i.i85, align 4
  %61 = icmp slt i64 %60, %59
  %.pre107 = load ptr, ptr %56, align 8
  br i1 %61, label %while.entry.i.i.i86, label %TypeChecker_error.exit87

while.entry.i.i.i86:                              ; preds = %if.entry8, %while.entry.i.i.i86
  %62 = phi ptr [ %66, %while.entry.i.i.i86 ], [ %.pre107, %if.entry8 ]
  %63 = phi i64 [ %67, %while.entry.i.i.i86 ], [ %60, %if.entry8 ]
  %64 = shl nuw i64 %63, 1
  store i64 %64, ptr %memberidx.i.i.i85, align 4
  %65 = shl i64 %63, 4
  %66 = call ptr @realloc(ptr %62, i64 %65)
  store ptr %66, ptr %56, align 8
  %67 = load i64, ptr %memberidx.i.i.i85, align 4
  %68 = icmp slt i64 %67, %59
  br i1 %68, label %while.entry.i.i.i86, label %TypeChecker_error.exit87.loopexit

TypeChecker_error.exit87.loopexit:                ; preds = %while.entry.i.i.i86
  %.pre108 = load i64, ptr %memberidx.i.i84, align 4
  %.pre114 = add nsw i64 %.pre108, 1
  br label %TypeChecker_error.exit87

TypeChecker_error.exit87:                         ; preds = %if.entry8, %TypeChecker_error.exit87.loopexit
  %.pre-phi115 = phi i64 [ %.pre114, %TypeChecker_error.exit87.loopexit ], [ %59, %if.entry8 ]
  %69 = phi ptr [ %66, %TypeChecker_error.exit87.loopexit ], [ %.pre107, %if.entry8 ]
  %70 = phi i64 [ %.pre108, %TypeChecker_error.exit87.loopexit ], [ %58, %if.entry8 ]
  store i64 %.pre-phi115, ptr %memberidx.i.i84, align 4
  %71 = getelementptr inbounds ptr, ptr %69, i64 %70
  store ptr %57, ptr %71, align 8
  br label %common.ret

ifend10:                                          ; preds = %ifend
  %memberidx13 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %72 = load ptr, ptr %memberidx13, align 8
  %73 = load i64, ptr %72, align 4
  %74 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %73)
  %memberidx2.i101 = getelementptr inbounds %Scope, ptr %74, i64 0, i32 5
  %75 = load ptr, ptr %memberidx13, align 8
  store ptr %75, ptr %memberidx2.i101, align 8
  %76 = load ptr, ptr %0, align 8
  %77 = load ptr, ptr %memberidx13, align 8
  %78 = load ptr, ptr %76, align 8
  %79 = load i64, ptr %77, align 4
  %80 = load ptr, ptr %78, align 8
  %81 = getelementptr inbounds ptr, ptr %80, i64 %79
  %82 = load ptr, ptr %81, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %82, i64 0, i32 7
  %83 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %77, i64 0, i32 1
  %84 = load i64, ptr %memberidx3.i.i.i, align 4
  %85 = load ptr, ptr %83, align 8
  %86 = getelementptr inbounds ptr, ptr %85, i64 %84
  %87 = load ptr, ptr %86, align 8
  %memberidx4.i = getelementptr inbounds %Scope, ptr %87, i64 0, i32 7
  %88 = load ptr, ptr %memberidx4.i, align 8
  %89 = load ptr, ptr %74, align 8
  %memberidx.i.i102 = getelementptr inbounds %Array_ScopeId_, ptr %88, i64 0, i32 1
  %90 = load i64, ptr %memberidx.i.i102, align 4
  %91 = add i64 %90, 1
  %memberidx.i.i.i103 = getelementptr inbounds %Array_ScopeId_, ptr %88, i64 0, i32 2
  %92 = load i64, ptr %memberidx.i.i.i103, align 4
  %93 = icmp slt i64 %92, %91
  %.pre.i = load ptr, ptr %88, align 8
  br i1 %93, label %while.entry.i.i.i104, label %TypeChecker_create_child_scope_within_current_scope.exit

while.entry.i.i.i104:                             ; preds = %ifend10, %while.entry.i.i.i104
  %94 = phi ptr [ %98, %while.entry.i.i.i104 ], [ %.pre.i, %ifend10 ]
  %95 = phi i64 [ %99, %while.entry.i.i.i104 ], [ %92, %ifend10 ]
  %96 = shl nuw i64 %95, 1
  store i64 %96, ptr %memberidx.i.i.i103, align 4
  %97 = shl i64 %95, 4
  %98 = tail call ptr @realloc(ptr %94, i64 %97)
  store ptr %98, ptr %88, align 8
  %99 = load i64, ptr %memberidx.i.i.i103, align 4
  %100 = icmp slt i64 %99, %91
  br i1 %100, label %while.entry.i.i.i104, label %Array_ScopeId____sl__.exit.loopexit.i

Array_ScopeId____sl__.exit.loopexit.i:            ; preds = %while.entry.i.i.i104
  %.pre11.i = load i64, ptr %memberidx.i.i102, align 4
  %.pre13.i = add nsw i64 %.pre11.i, 1
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %ifend10, %Array_ScopeId____sl__.exit.loopexit.i
  %.pre-phi.i = phi i64 [ %.pre13.i, %Array_ScopeId____sl__.exit.loopexit.i ], [ %91, %ifend10 ]
  %101 = phi ptr [ %98, %Array_ScopeId____sl__.exit.loopexit.i ], [ %.pre.i, %ifend10 ]
  %102 = phi i64 [ %.pre11.i, %Array_ScopeId____sl__.exit.loopexit.i ], [ %90, %ifend10 ]
  store i64 %.pre-phi.i, ptr %memberidx.i.i102, align 4
  %103 = getelementptr inbounds ptr, ptr %101, i64 %102
  store ptr %89, ptr %103, align 8
  %104 = load ptr, ptr %74, align 8
  store ptr %104, ptr %memberidx13, align 8
  %memberidx16 = getelementptr inbounds %Function, ptr %3, i64 0, i32 2
  %105 = tail call ptr @malloc(i32 24)
  %memberidx.i88 = getelementptr inbounds %Array_FunctionArg_, ptr %105, i64 0, i32 1
  store i64 0, ptr %memberidx.i88, align 4
  %memberidx1.i89 = getelementptr inbounds %Array_FunctionArg_, ptr %105, i64 0, i32 2
  store i64 8, ptr %memberidx1.i89, align 4
  %106 = tail call ptr @malloc(i32 64)
  store ptr %106, ptr %105, align 8
  store i64 0, ptr %memberidx.i88, align 4
  store ptr %105, ptr %memberidx16, align 8
  %memberidx19 = getelementptr inbounds %Function, ptr %3, i64 0, i32 4
  %memberidx20 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 1
  %107 = load ptr, ptr %memberidx20, align 8
  %memberidx21 = getelementptr inbounds %FunctionDeclarationNode, ptr %1, i64 0, i32 3
  %108 = load ptr, ptr %memberidx21, align 8
  %109 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr nonnull %0, ptr %107, ptr %108, ptr nonnull %105)
  store ptr %109, ptr %memberidx19, align 8
  %memberidx.i90 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %110 = load ptr, ptr %memberidx.i90, align 8
  %memberidx1.i91 = getelementptr inbounds %Compiler, ptr %110, i64 0, i32 5
  %111 = load ptr, ptr %memberidx1.i91, align 8
  %memberidx2.i92 = getelementptr inbounds %Array_FloError_, ptr %111, i64 0, i32 1
  %112 = load i64, ptr %memberidx2.i92, align 4
  %113 = icmp sgt i64 %112, 0
  br i1 %113, label %common.ret, label %ifend25

ifend25:                                          ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %114 = tail call ptr @malloc(i32 24)
  %115 = load ptr, ptr %memberidx13, align 8
  %116 = load i64, ptr %115, align 4
  %117 = load ptr, ptr %0, align 8
  %118 = load ptr, ptr %117, align 8
  %119 = load ptr, ptr %118, align 8
  %120 = getelementptr inbounds ptr, ptr %119, i64 %116
  %121 = load ptr, ptr %120, align 8
  %memberidx29 = getelementptr inbounds %Module, ptr %121, i64 0, i32 4
  %122 = load ptr, ptr %memberidx29, align 8
  %memberidx30 = getelementptr inbounds %Array_Function_, ptr %122, i64 0, i32 1
  %123 = load i64, ptr %memberidx30, align 4
  store i64 0, ptr %114, align 4
  %memberidx1.i98 = getelementptr inbounds %VarId, ptr %114, i64 0, i32 1
  store i64 %116, ptr %memberidx1.i98, align 4
  %memberidx2.i99 = getelementptr inbounds %VarId, ptr %114, i64 0, i32 2
  store i64 %123, ptr %memberidx2.i99, align 4
  store ptr %114, ptr %3, align 8
  %124 = load ptr, ptr %memberidx2.i101, align 8
  store ptr %124, ptr %memberidx13, align 8
  %memberidx33 = getelementptr inbounds %Function, ptr %3, i64 0, i32 5
  %125 = load ptr, ptr %74, align 8
  store ptr %125, ptr %memberidx33, align 8
  %126 = load i64, ptr %124, align 4
  %127 = load ptr, ptr %117, align 8
  %128 = load ptr, ptr %127, align 8
  %129 = getelementptr inbounds ptr, ptr %128, i64 %126
  %130 = load ptr, ptr %129, align 8
  %memberidx1.i96 = getelementptr inbounds %Module, ptr %130, i64 0, i32 5
  %131 = load ptr, ptr %memberidx1.i96, align 8
  %132 = load i64, ptr %131, align 4
  %133 = getelementptr inbounds ptr, ptr %128, i64 %132
  %134 = load ptr, ptr %133, align 8
  %memberidx2.i.i97 = getelementptr inbounds %Module, ptr %134, i64 0, i32 7
  %135 = load ptr, ptr %memberidx2.i.i97, align 8
  %memberidx3.i.i = getelementptr inbounds %ScopeId, ptr %131, i64 0, i32 1
  %136 = load i64, ptr %memberidx3.i.i, align 4
  %137 = load ptr, ptr %135, align 8
  %138 = getelementptr inbounds ptr, ptr %137, i64 %136
  %139 = load ptr, ptr %138, align 8
  %memberidx35 = getelementptr inbounds %Module, ptr %130, i64 0, i32 4
  %140 = load ptr, ptr %memberidx35, align 8
  %memberidx.i73 = getelementptr inbounds %Array_Function_, ptr %140, i64 0, i32 1
  %141 = load i64, ptr %memberidx.i73, align 4
  %142 = add i64 %141, 1
  %memberidx.i.i = getelementptr inbounds %Array_Function_, ptr %140, i64 0, i32 2
  %143 = load i64, ptr %memberidx.i.i, align 4
  %144 = icmp slt i64 %143, %142
  %.pre110 = load ptr, ptr %140, align 8
  br i1 %144, label %while.entry.i.i, label %Array_Function____sl__.exit

while.entry.i.i:                                  ; preds = %ifend25, %while.entry.i.i
  %145 = phi ptr [ %149, %while.entry.i.i ], [ %.pre110, %ifend25 ]
  %146 = phi i64 [ %150, %while.entry.i.i ], [ %143, %ifend25 ]
  %147 = shl nuw i64 %146, 1
  store i64 %147, ptr %memberidx.i.i, align 4
  %148 = shl i64 %146, 4
  %149 = tail call ptr @realloc(ptr %145, i64 %148)
  store ptr %149, ptr %140, align 8
  %150 = load i64, ptr %memberidx.i.i, align 4
  %151 = icmp slt i64 %150, %142
  br i1 %151, label %while.entry.i.i, label %Array_Function____sl__.exit.loopexit

Array_Function____sl__.exit.loopexit:             ; preds = %while.entry.i.i
  %.pre111 = load i64, ptr %memberidx.i73, align 4
  %.pre113 = add nsw i64 %.pre111, 1
  br label %Array_Function____sl__.exit

Array_Function____sl__.exit:                      ; preds = %ifend25, %Array_Function____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre113, %Array_Function____sl__.exit.loopexit ], [ %142, %ifend25 ]
  %152 = phi ptr [ %149, %Array_Function____sl__.exit.loopexit ], [ %.pre110, %ifend25 ]
  %153 = phi i64 [ %.pre111, %Array_Function____sl__.exit.loopexit ], [ %141, %ifend25 ]
  store i64 %.pre-phi, ptr %memberidx.i73, align 4
  %154 = getelementptr inbounds ptr, ptr %152, i64 %153
  store ptr %3, ptr %154, align 8
  %memberidx36 = getelementptr inbounds %Scope, ptr %139, i64 0, i32 3
  %155 = load ptr, ptr %memberidx36, align 8
  %156 = load ptr, ptr %memberidx4, align 8
  %157 = load ptr, ptr %3, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %155, ptr %156, ptr %157)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = tail call fastcc ptr @bin_op_to_op_overload_name(i64 %4)
  %6 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %tailrecurse.i, %3
  %.tr11.i.in = phi ptr [ %memberidx2, %3 ], [ %memberidx1.i65, %tailrecurse.i ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %7 = load i64, ptr %.tr11.i, align 4
  %switch = icmp eq i64 %7, 20
  %memberidx1.i65 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br i1 %switch, label %tailrecurse.i, label %if.entry3.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i67 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %8 = load ptr, ptr %memberidx6.i67, align 8
  %9 = load ptr, ptr %6, align 8
  %10 = load i64, ptr %8, align 4
  %11 = load ptr, ptr %9, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %10
  %13 = load ptr, ptr %12, align 8
  %memberidx2.i.i68 = getelementptr inbounds %Module, ptr %13, i64 0, i32 3
  %14 = load ptr, ptr %memberidx2.i.i68, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %15 = load i64, ptr %memberidx3.i.i, align 4
  %16 = load ptr, ptr %14, align 8
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8
  %memberidx3 = getelementptr inbounds %Class, ptr %18, i64 0, i32 6
  %19 = load ptr, ptr %memberidx3, align 8
  %20 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %5)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %19, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %19, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i = icmp eq ptr %25, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %27 = phi ptr [ %36, %else.i ], [ %23, %while.entry.i.preheader ]
  %28 = phi i64 [ %37, %else.i ], [ %21, %while.entry.i.preheader ]
  %29 = phi ptr [ %41, %else.i ], [ %25, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %39, %else.i ], [ %22, %while.entry.i.preheader ]
  %30 = load ptr, ptr %29, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %31, %26
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %32 = load ptr, ptr %30, align 8
  %33 = load ptr, ptr %5, align 8
  %34 = tail call i64 @memcmp(ptr %32, ptr %33, i64 %26)
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre70 = load ptr, ptr %19, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre71.pre = load ptr, ptr %19, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre71.pre, i64 %hash.0.i
  %.pre72.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre72.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %36 = phi ptr [ %.pre70, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %37 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %28, %while.entry.i ]
  %38 = add nuw i64 %hash.0.i, 1
  %39 = urem i64 %38, %37
  %40 = getelementptr inbounds ptr, ptr %36, i64 %39
  %41 = load ptr, ptr %40, align 8
  %.not26.i = icmp eq ptr %41, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre72.pre, i64 0, i32 1
  %42 = load ptr, ptr %memberidx11.i, align 8
  %43 = icmp eq ptr %42, null
  br i1 %43, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %get_class_prop_type.exit, %Map_String_PropId____getitem__.exit, %ifend13, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %122, %ifend13 ], [ null, %Map_String_PropId____getitem__.exit ], [ null, %get_class_prop_type.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %44 = load ptr, ptr %0, align 8
  %memberidx.i.i38 = getelementptr inbounds %PropId, ptr %42, i64 0, i32 1
  %45 = load ptr, ptr %memberidx.i.i38, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = load i64, ptr %45, align 4
  %48 = load ptr, ptr %46, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %50, i64 0, i32 3
  %51 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %45, i64 0, i32 2
  %52 = load i64, ptr %memberidx3.i.i.i, align 4
  %53 = load ptr, ptr %51, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 %52
  %55 = load ptr, ptr %54, align 8
  %56 = load i64, ptr %42, align 4
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %55, i64 0, i32 5
  %58 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %59 = load i64, ptr %memberidx2.i, align 4
  %60 = load ptr, ptr %58, align 8
  %61 = getelementptr inbounds ptr, ptr %60, i64 %59
  %62 = load ptr, ptr %61, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %62, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %55, i64 0, i32 4
  %63 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %42, i64 0, i32 2
  %64 = load i64, ptr %memberidx5.i, align 4
  %65 = load ptr, ptr %63, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %67, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i39 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx5 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i39, i64 0, i32 1
  %68 = load ptr, ptr %memberidx5, align 8
  %69 = load ptr, ptr %68, align 8
  %70 = load ptr, ptr %69, align 8
  %memberidx6 = getelementptr inbounds %BinaryExpressionNode, ptr %2, i64 0, i32 5
  %71 = load ptr, ptr %memberidx6, align 8
  %72 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %70, ptr %71)
  %memberidx.i40 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %73 = load ptr, ptr %memberidx.i40, align 8
  %memberidx1.i41 = getelementptr inbounds %Compiler, ptr %73, i64 0, i32 5
  %74 = load ptr, ptr %memberidx1.i41, align 8
  %memberidx2.i42 = getelementptr inbounds %Array_FloError_, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx2.i42, align 4
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %common.ret, label %ifend9

ifend9:                                           ; preds = %get_class_prop_type.exit
  %memberidx10 = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  %77 = load ptr, ptr %memberidx10, align 8
  %78 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %70, ptr %77)
  br i1 %78, label %ifend13, label %if.entry11

if.entry11:                                       ; preds = %ifend9
  %79 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %70)
  %memberidx.i43 = getelementptr inbounds %String, ptr %79, i64 0, i32 1
  %80 = load i64, ptr %memberidx.i43, align 4
  %81 = trunc i64 %80 to i32
  %82 = add i32 %81, 1
  %83 = tail call ptr @malloc(i32 %82)
  %84 = load ptr, ptr %79, align 8
  %85 = load i64, ptr %memberidx.i43, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %83, ptr align 8 %84, i64 %85, i1 false)
  %86 = getelementptr inbounds i8, ptr %83, i64 %85
  store i8 0, ptr %86, align 1
  %87 = load ptr, ptr %memberidx10, align 8
  %88 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %87)
  %memberidx.i44 = getelementptr inbounds %String, ptr %88, i64 0, i32 1
  %89 = load i64, ptr %memberidx.i44, align 4
  %90 = trunc i64 %89 to i32
  %91 = add i32 %90, 1
  %92 = tail call ptr @malloc(i32 %91)
  %93 = load ptr, ptr %88, align 8
  %94 = load i64, ptr %memberidx.i44, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %92, ptr align 8 %93, i64 %94, i1 false)
  %95 = getelementptr inbounds i8, ptr %92, i64 %94
  store i8 0, ptr %95, align 1
  %96 = alloca ptr, align 8
  %97 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %96, ptr nonnull @177, ptr %83, ptr %92)
  %98 = load ptr, ptr %96, align 8
  %99 = tail call ptr @malloc(i32 24)
  store ptr %98, ptr %99, align 8
  %memberidx1.i45 = getelementptr inbounds %String, ptr %99, i64 0, i32 1
  store i64 %97, ptr %memberidx1.i45, align 4
  %memberidx2.i46 = getelementptr inbounds %String, ptr %99, i64 0, i32 2
  store i64 %97, ptr %memberidx2.i46, align 4
  tail call void @free(ptr %83)
  tail call void @free(ptr %92)
  %100 = load ptr, ptr %memberidx6, align 8
  %101 = load ptr, ptr %100, align 8
  %102 = load ptr, ptr %memberidx.i40, align 8
  %memberidx1.i48 = getelementptr inbounds %Compiler, ptr %102, i64 0, i32 5
  %103 = load ptr, ptr %memberidx1.i48, align 8
  %104 = call ptr @malloc(i32 24)
  store i64 5, ptr %104, align 4
  %memberidx1.i.i49 = getelementptr inbounds %FloError, ptr %104, i64 0, i32 2
  store ptr %101, ptr %memberidx1.i.i49, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %104, i64 0, i32 1
  store ptr %99, ptr %memberidx2.i.i, align 8
  %memberidx.i.i50 = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 1
  %105 = load i64, ptr %memberidx.i.i50, align 4
  %106 = add i64 %105, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %103, i64 0, i32 2
  %107 = load i64, ptr %memberidx.i.i.i, align 4
  %108 = icmp slt i64 %107, %106
  %.pre73 = load ptr, ptr %103, align 8
  br i1 %108, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry11, %while.entry.i.i.i
  %109 = phi ptr [ %113, %while.entry.i.i.i ], [ %.pre73, %if.entry11 ]
  %110 = phi i64 [ %114, %while.entry.i.i.i ], [ %107, %if.entry11 ]
  %111 = shl nuw i64 %110, 1
  store i64 %111, ptr %memberidx.i.i.i, align 4
  %112 = shl i64 %110, 4
  %113 = call ptr @realloc(ptr %109, i64 %112)
  store ptr %113, ptr %103, align 8
  %114 = load i64, ptr %memberidx.i.i.i, align 4
  %115 = icmp slt i64 %114, %106
  br i1 %115, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre74 = load i64, ptr %memberidx.i.i50, align 4
  %.pre78 = add nsw i64 %.pre74, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry11, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre78, %TypeChecker_error.exit.loopexit ], [ %106, %if.entry11 ]
  %116 = phi ptr [ %113, %TypeChecker_error.exit.loopexit ], [ %.pre73, %if.entry11 ]
  %117 = phi i64 [ %.pre74, %TypeChecker_error.exit.loopexit ], [ %105, %if.entry11 ]
  store i64 %.pre-phi, ptr %memberidx.i.i50, align 4
  %118 = getelementptr inbounds ptr, ptr %116, i64 %117
  store ptr %104, ptr %118, align 8
  br label %common.ret

ifend13:                                          ; preds = %ifend9
  %119 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %119, align 4
  %memberidx.i.i51 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i51, align 4
  %memberidx1.i.i52 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i52, align 1
  %memberidx.i53 = getelementptr inbounds %MemberExpression, ptr %119, i64 0, i32 4
  store ptr %1, ptr %memberidx.i53, align 8
  %memberidx1.i54 = getelementptr inbounds %MemberExpression, ptr %119, i64 0, i32 5
  store ptr %42, ptr %memberidx1.i54, align 8
  %memberidx2.i55 = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  store ptr %common.ret.op.i39, ptr %memberidx2.i55, align 8
  %120 = tail call ptr @malloc(i32 24)
  %memberidx.i56 = getelementptr inbounds %Array_Expression_, ptr %120, i64 0, i32 1
  store i64 0, ptr %memberidx.i56, align 4
  %memberidx1.i57 = getelementptr inbounds %Array_Expression_, ptr %120, i64 0, i32 2
  store i64 8, ptr %memberidx1.i57, align 4
  %121 = tail call ptr @malloc(i32 64)
  store ptr %121, ptr %120, align 8
  store ptr %72, ptr %121, align 8
  store i64 1, ptr %memberidx.i56, align 4
  %122 = tail call ptr @malloc(i32 41)
  %memberidx19 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i39, i64 0, i32 2
  %123 = load ptr, ptr %memberidx19, align 8
  store i64 8, ptr %122, align 4
  %memberidx.i.i58 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i58, align 4
  %memberidx1.i.i59 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i59, align 1
  %memberidx.i60 = getelementptr inbounds %CallExpression, ptr %122, i64 0, i32 4
  store ptr %119, ptr %memberidx.i60, align 8
  %memberidx1.i61 = getelementptr inbounds %CallExpression, ptr %122, i64 0, i32 5
  store ptr %120, ptr %memberidx1.i61, align 8
  %memberidx2.i62 = getelementptr inbounds %Expression, ptr %122, i64 0, i32 3
  store ptr %123, ptr %memberidx2.i62, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = load ptr, ptr %0, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i82, %3
  %.tr11.i.in = phi ptr [ %memberidx1, %3 ], [ %memberidx1.i81, %if.entry.i82 ]
  %.tr11.i = load ptr, ptr %.tr11.i.in, align 8
  %5 = load i64, ptr %.tr11.i, align 4
  switch i64 %5, label %get_class_from_type.exit [
    i64 20, label %if.entry.i82
    i64 11, label %if.entry3.i
  ]

if.entry.i82:                                     ; preds = %tailrecurse.i
  %memberidx1.i81 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i83 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %6 = load ptr, ptr %memberidx6.i83, align 8
  %7 = load ptr, ptr %4, align 8
  %8 = load i64, ptr %6, align 4
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %8
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i.i84 = getelementptr inbounds %Module, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %memberidx2.i.i84, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %6, i64 0, i32 2
  %13 = load i64, ptr %memberidx3.i.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i80 = phi ptr [ %16, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx2 = getelementptr inbounds %Class, ptr %common.ret.op.i80, i64 0, i32 6
  %17 = load ptr, ptr %memberidx2, align 8
  %18 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %18, ptr noundef nonnull align 8 dereferenceable(11) @121, i64 11, i1 false)
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i, align 4
  %20 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %19)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %17, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %17, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i = icmp eq ptr %25, null
  br i1 %.not.i, label %if.entry, label %while.entry.i

while.entry.i:                                    ; preds = %get_class_from_type.exit, %else.i
  %26 = phi ptr [ %34, %else.i ], [ %23, %get_class_from_type.exit ]
  %27 = phi i64 [ %35, %else.i ], [ %21, %get_class_from_type.exit ]
  %28 = phi ptr [ %39, %else.i ], [ %25, %get_class_from_type.exit ]
  %hash.0.i = phi i64 [ %37, %else.i ], [ %22, %get_class_from_type.exit ]
  %29 = load ptr, ptr %28, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %30, 11
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i64 @memcmp(ptr %31, ptr %18, i64 11)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre88 = load ptr, ptr %17, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre89.pre = load ptr, ptr %17, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre89.pre, i64 %hash.0.i
  %.pre90.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre90.pre, null
  br i1 %.not25.i, label %if.entry, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %34 = phi ptr [ %.pre88, %ifend.i.i.else.i_crit_edge ], [ %26, %while.entry.i ]
  %35 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %27, %while.entry.i ]
  %36 = add nuw i64 %hash.0.i, 1
  %37 = urem i64 %36, %35
  %38 = getelementptr inbounds ptr, ptr %34, i64 %37
  %39 = load ptr, ptr %38, align 8
  %.not26.i = icmp eq ptr %39, null
  br i1 %.not26.i, label %if.entry, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre90.pre, i64 0, i32 1
  %40 = load ptr, ptr %memberidx11.i, align 8
  %41 = icmp eq ptr %40, null
  br i1 %41, label %if.entry, label %ifend

common.ret:                                       ; preds = %get_class_prop_type.exit, %ifend14, %TypeChecker_error.exit66, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit66 ], [ %148, %ifend14 ], [ null, %get_class_prop_type.exit ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %else.i, %get_class_from_type.exit, %while.end.i, %Map_String_PropId____getitem__.exit
  %memberidx3 = getelementptr inbounds %Class, ptr %common.ret.op.i80, i64 0, i32 1
  %42 = load ptr, ptr %memberidx3, align 8
  %memberidx.i42 = getelementptr inbounds %String, ptr %42, i64 0, i32 1
  %43 = load i64, ptr %memberidx.i42, align 4
  %44 = trunc i64 %43 to i32
  %45 = add i32 %44, 1
  %46 = tail call ptr @malloc(i32 %45)
  %47 = load ptr, ptr %42, align 8
  %48 = load i64, ptr %memberidx.i42, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %46, ptr align 8 %47, i64 %48, i1 false)
  %49 = getelementptr inbounds i8, ptr %46, i64 %48
  store i8 0, ptr %49, align 1
  %50 = alloca ptr, align 8
  %51 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %50, ptr nonnull @208, ptr %46)
  %52 = load ptr, ptr %50, align 8
  %53 = tail call ptr @malloc(i32 24)
  store ptr %52, ptr %53, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  store i64 %51, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %53, i64 0, i32 2
  store i64 %51, ptr %memberidx2.i, align 4
  tail call void @free(ptr %46)
  %54 = load ptr, ptr %2, align 8
  %memberidx.i43 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %55 = load ptr, ptr %memberidx.i43, align 8
  %memberidx1.i44 = getelementptr inbounds %Compiler, ptr %55, i64 0, i32 5
  %56 = load ptr, ptr %memberidx1.i44, align 8
  %57 = call ptr @malloc(i32 24)
  store i64 4, ptr %57, align 4
  %memberidx1.i.i45 = getelementptr inbounds %FloError, ptr %57, i64 0, i32 2
  store ptr %54, ptr %memberidx1.i.i45, align 8
  %memberidx2.i.i46 = getelementptr inbounds %FloError, ptr %57, i64 0, i32 1
  store ptr %53, ptr %memberidx2.i.i46, align 8
  %memberidx.i.i47 = getelementptr inbounds %Array_FloError_, ptr %56, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i.i47, align 4
  %59 = add i64 %58, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %56, i64 0, i32 2
  %60 = load i64, ptr %memberidx.i.i.i, align 4
  %61 = icmp slt i64 %60, %59
  %.pre94 = load ptr, ptr %56, align 8
  br i1 %61, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %62 = phi ptr [ %66, %while.entry.i.i.i ], [ %.pre94, %if.entry ]
  %63 = phi i64 [ %67, %while.entry.i.i.i ], [ %60, %if.entry ]
  %64 = shl nuw i64 %63, 1
  store i64 %64, ptr %memberidx.i.i.i, align 4
  %65 = shl i64 %63, 4
  %66 = call ptr @realloc(ptr %62, i64 %65)
  store ptr %66, ptr %56, align 8
  %67 = load i64, ptr %memberidx.i.i.i, align 4
  %68 = icmp slt i64 %67, %59
  br i1 %68, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre95 = load i64, ptr %memberidx.i.i47, align 4
  %.pre99 = add nsw i64 %.pre95, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre99, %TypeChecker_error.exit.loopexit ], [ %59, %if.entry ]
  %69 = phi ptr [ %66, %TypeChecker_error.exit.loopexit ], [ %.pre94, %if.entry ]
  %70 = phi i64 [ %.pre95, %TypeChecker_error.exit.loopexit ], [ %58, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i47, align 4
  %71 = getelementptr inbounds ptr, ptr %69, i64 %70
  store ptr %57, ptr %71, align 8
  br label %common.ret

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %72 = load ptr, ptr %0, align 8
  %memberidx.i.i48 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 1
  %73 = load ptr, ptr %memberidx.i.i48, align 8
  %74 = load ptr, ptr %72, align 8
  %75 = load i64, ptr %73, align 4
  %76 = load ptr, ptr %74, align 8
  %77 = getelementptr inbounds ptr, ptr %76, i64 %75
  %78 = load ptr, ptr %77, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %78, i64 0, i32 3
  %79 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %73, i64 0, i32 2
  %80 = load i64, ptr %memberidx3.i.i.i, align 4
  %81 = load ptr, ptr %79, align 8
  %82 = getelementptr inbounds ptr, ptr %81, i64 %80
  %83 = load ptr, ptr %82, align 8
  %84 = load i64, ptr %40, align 4
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i50 = getelementptr inbounds %Class, ptr %83, i64 0, i32 5
  %86 = load ptr, ptr %memberidx1.i50, align 8
  %memberidx2.i51 = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %87 = load i64, ptr %memberidx2.i51, align 4
  %88 = load ptr, ptr %86, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %90, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %83, i64 0, i32 4
  %91 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %40, i64 0, i32 2
  %92 = load i64, ptr %memberidx5.i, align 4
  %93 = load ptr, ptr %91, align 8
  %94 = getelementptr inbounds ptr, ptr %93, i64 %92
  %95 = load ptr, ptr %94, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %95, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i49 = load ptr, ptr %common.ret.op.in.i, align 8
  %memberidx6 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i49, i64 0, i32 1
  %96 = load ptr, ptr %memberidx6, align 8
  %97 = load ptr, ptr %96, align 8
  %98 = load ptr, ptr %97, align 8
  %memberidx7 = getelementptr inbounds %ExpressionIndexNode, ptr %2, i64 0, i32 4
  %99 = load ptr, ptr %memberidx7, align 8
  %100 = tail call fastcc ptr @TypeChecker_check_expression(ptr nonnull %0, ptr %98, ptr %99)
  %memberidx.i52 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %101 = load ptr, ptr %memberidx.i52, align 8
  %memberidx1.i53 = getelementptr inbounds %Compiler, ptr %101, i64 0, i32 5
  %102 = load ptr, ptr %memberidx1.i53, align 8
  %memberidx2.i54 = getelementptr inbounds %Array_FloError_, ptr %102, i64 0, i32 1
  %103 = load i64, ptr %memberidx2.i54, align 4
  %104 = icmp sgt i64 %103, 0
  br i1 %104, label %common.ret, label %ifend10

ifend10:                                          ; preds = %get_class_prop_type.exit
  %memberidx11 = getelementptr inbounds %Expression, ptr %100, i64 0, i32 3
  %105 = load ptr, ptr %memberidx11, align 8
  %106 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %98, ptr %105)
  br i1 %106, label %ifend14, label %if.entry12

if.entry12:                                       ; preds = %ifend10
  %107 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %98)
  %memberidx.i55 = getelementptr inbounds %String, ptr %107, i64 0, i32 1
  %108 = load i64, ptr %memberidx.i55, align 4
  %109 = trunc i64 %108 to i32
  %110 = add i32 %109, 1
  %111 = tail call ptr @malloc(i32 %110)
  %112 = load ptr, ptr %107, align 8
  %113 = load i64, ptr %memberidx.i55, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %111, ptr align 8 %112, i64 %113, i1 false)
  %114 = getelementptr inbounds i8, ptr %111, i64 %113
  store i8 0, ptr %114, align 1
  %115 = load ptr, ptr %memberidx11, align 8
  %116 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %115)
  %memberidx.i56 = getelementptr inbounds %String, ptr %116, i64 0, i32 1
  %117 = load i64, ptr %memberidx.i56, align 4
  %118 = trunc i64 %117 to i32
  %119 = add i32 %118, 1
  %120 = tail call ptr @malloc(i32 %119)
  %121 = load ptr, ptr %116, align 8
  %122 = load i64, ptr %memberidx.i56, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %120, ptr align 8 %121, i64 %122, i1 false)
  %123 = getelementptr inbounds i8, ptr %120, i64 %122
  store i8 0, ptr %123, align 1
  %124 = alloca ptr, align 8
  %125 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %124, ptr nonnull @177, ptr %111, ptr %120)
  %126 = load ptr, ptr %124, align 8
  %127 = tail call ptr @malloc(i32 24)
  store ptr %126, ptr %127, align 8
  %memberidx1.i57 = getelementptr inbounds %String, ptr %127, i64 0, i32 1
  store i64 %125, ptr %memberidx1.i57, align 4
  %memberidx2.i58 = getelementptr inbounds %String, ptr %127, i64 0, i32 2
  store i64 %125, ptr %memberidx2.i58, align 4
  tail call void @free(ptr %111)
  tail call void @free(ptr %120)
  %128 = load ptr, ptr %memberidx7, align 8
  %129 = load ptr, ptr %128, align 8
  %130 = load ptr, ptr %memberidx.i52, align 8
  %memberidx1.i60 = getelementptr inbounds %Compiler, ptr %130, i64 0, i32 5
  %131 = load ptr, ptr %memberidx1.i60, align 8
  %132 = call ptr @malloc(i32 24)
  store i64 5, ptr %132, align 4
  %memberidx1.i.i61 = getelementptr inbounds %FloError, ptr %132, i64 0, i32 2
  store ptr %129, ptr %memberidx1.i.i61, align 8
  %memberidx2.i.i62 = getelementptr inbounds %FloError, ptr %132, i64 0, i32 1
  store ptr %127, ptr %memberidx2.i.i62, align 8
  %memberidx.i.i63 = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 1
  %133 = load i64, ptr %memberidx.i.i63, align 4
  %134 = add i64 %133, 1
  %memberidx.i.i.i64 = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 2
  %135 = load i64, ptr %memberidx.i.i.i64, align 4
  %136 = icmp slt i64 %135, %134
  %.pre91 = load ptr, ptr %131, align 8
  br i1 %136, label %while.entry.i.i.i65, label %TypeChecker_error.exit66

while.entry.i.i.i65:                              ; preds = %if.entry12, %while.entry.i.i.i65
  %137 = phi ptr [ %141, %while.entry.i.i.i65 ], [ %.pre91, %if.entry12 ]
  %138 = phi i64 [ %142, %while.entry.i.i.i65 ], [ %135, %if.entry12 ]
  %139 = shl nuw i64 %138, 1
  store i64 %139, ptr %memberidx.i.i.i64, align 4
  %140 = shl i64 %138, 4
  %141 = call ptr @realloc(ptr %137, i64 %140)
  store ptr %141, ptr %131, align 8
  %142 = load i64, ptr %memberidx.i.i.i64, align 4
  %143 = icmp slt i64 %142, %134
  br i1 %143, label %while.entry.i.i.i65, label %TypeChecker_error.exit66.loopexit

TypeChecker_error.exit66.loopexit:                ; preds = %while.entry.i.i.i65
  %.pre92 = load i64, ptr %memberidx.i.i63, align 4
  %.pre100 = add nsw i64 %.pre92, 1
  br label %TypeChecker_error.exit66

TypeChecker_error.exit66:                         ; preds = %if.entry12, %TypeChecker_error.exit66.loopexit
  %.pre-phi101 = phi i64 [ %.pre100, %TypeChecker_error.exit66.loopexit ], [ %134, %if.entry12 ]
  %144 = phi ptr [ %141, %TypeChecker_error.exit66.loopexit ], [ %.pre91, %if.entry12 ]
  %145 = phi i64 [ %.pre92, %TypeChecker_error.exit66.loopexit ], [ %133, %if.entry12 ]
  store i64 %.pre-phi101, ptr %memberidx.i.i63, align 4
  %146 = getelementptr inbounds ptr, ptr %144, i64 %145
  store ptr %132, ptr %146, align 8
  br label %common.ret

ifend14:                                          ; preds = %ifend10
  %147 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %147, align 4
  %memberidx.i.i67 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i67, align 4
  %memberidx1.i.i68 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i68, align 1
  %memberidx.i69 = getelementptr inbounds %MemberExpression, ptr %147, i64 0, i32 4
  store ptr %1, ptr %memberidx.i69, align 8
  %memberidx1.i70 = getelementptr inbounds %MemberExpression, ptr %147, i64 0, i32 5
  store ptr %40, ptr %memberidx1.i70, align 8
  %memberidx2.i71 = getelementptr inbounds %Expression, ptr %147, i64 0, i32 3
  store ptr %common.ret.op.i49, ptr %memberidx2.i71, align 8
  %148 = tail call ptr @malloc(i32 41)
  %149 = tail call ptr @malloc(i32 24)
  %memberidx.i72 = getelementptr inbounds %Array_Expression_, ptr %149, i64 0, i32 1
  store i64 0, ptr %memberidx.i72, align 4
  %memberidx1.i73 = getelementptr inbounds %Array_Expression_, ptr %149, i64 0, i32 2
  store i64 8, ptr %memberidx1.i73, align 4
  %150 = tail call ptr @malloc(i32 64)
  store ptr %150, ptr %149, align 8
  store ptr %100, ptr %150, align 8
  store i64 1, ptr %memberidx.i72, align 4
  %memberidx20 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i49, i64 0, i32 2
  %151 = load ptr, ptr %memberidx20, align 8
  store i64 8, ptr %148, align 4
  %memberidx.i.i74 = getelementptr inbounds %Expression, ptr %148, i64 0, i32 2
  store i64 15, ptr %memberidx.i.i74, align 4
  %memberidx1.i.i75 = getelementptr inbounds %Expression, ptr %148, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i75, align 1
  %memberidx.i76 = getelementptr inbounds %CallExpression, ptr %148, i64 0, i32 4
  store ptr %147, ptr %memberidx.i76, align 8
  %memberidx1.i77 = getelementptr inbounds %CallExpression, ptr %148, i64 0, i32 5
  store ptr %149, ptr %memberidx1.i77, align 8
  %memberidx2.i78 = getelementptr inbounds %Expression, ptr %148, i64 0, i32 3
  store ptr %151, ptr %memberidx2.i78, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_tuple_index_expr(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca %IntType, align 8
  store i64 6, ptr %4, align 8
  %memberidx.i = getelementptr inbounds %IntType, ptr %4, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 8
  %memberidx = getelementptr inbounds %ExpressionIndexNode, ptr %2, i64 0, i32 4
  %5 = load ptr, ptr %memberidx, align 8
  %6 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %4, ptr %5)
  %memberidx1 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load i64, ptr %7, align 4
  %9 = add i64 %8, -1
  %10 = icmp ult i64 %9, 7
  br i1 %10, label %ifend, label %if.entry

common.ret:                                       ; preds = %ifend24, %TypeChecker_error.exit83, %TypeChecker_error.exit72, %TypeChecker_error.exit62, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit62 ], [ null, %TypeChecker_error.exit72 ], [ null, %TypeChecker_error.exit83 ], [ %128, %ifend24 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %11 = call ptr @malloc(i32 34)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(34) %11, ptr noundef nonnull align 8 dereferenceable(34) @209, i64 34, i1 false)
  %12 = call ptr @malloc(i32 24)
  store ptr %11, ptr %12, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  store i64 34, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %12, i64 0, i32 2
  store i64 34, ptr %memberidx2.i.i, align 4
  %13 = load ptr, ptr %memberidx, align 8
  %14 = load ptr, ptr %13, align 8
  %memberidx.i50 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %15 = load ptr, ptr %memberidx.i50, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx1.i, align 8
  %17 = call ptr @malloc(i32 24)
  store i64 5, ptr %17, align 4
  %memberidx1.i.i51 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 2
  store ptr %14, ptr %memberidx1.i.i51, align 8
  %memberidx2.i.i52 = getelementptr inbounds %FloError, ptr %17, i64 0, i32 1
  store ptr %12, ptr %memberidx2.i.i52, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i.i, align 4
  %19 = add i64 %18, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %16, i64 0, i32 2
  %20 = load i64, ptr %memberidx.i.i.i, align 4
  %21 = icmp slt i64 %20, %19
  %.pre = load ptr, ptr %16, align 8
  br i1 %21, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %22 = phi ptr [ %26, %while.entry.i.i.i ], [ %.pre, %if.entry ]
  %23 = phi i64 [ %27, %while.entry.i.i.i ], [ %20, %if.entry ]
  %24 = shl nuw i64 %23, 1
  store i64 %24, ptr %memberidx.i.i.i, align 4
  %25 = shl i64 %23, 4
  %26 = call ptr @realloc(ptr %22, i64 %25)
  store ptr %26, ptr %16, align 8
  %27 = load i64, ptr %memberidx.i.i.i, align 4
  %28 = icmp slt i64 %27, %19
  br i1 %28, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre94 = load i64, ptr %memberidx.i.i, align 4
  %.pre110 = add nsw i64 %.pre94, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi111 = phi i64 [ %.pre110, %TypeChecker_error.exit.loopexit ], [ %19, %if.entry ]
  %29 = phi ptr [ %26, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %30 = phi i64 [ %.pre94, %TypeChecker_error.exit.loopexit ], [ %18, %if.entry ]
  store i64 %.pre-phi111, ptr %memberidx.i.i, align 4
  %31 = getelementptr inbounds ptr, ptr %29, i64 %30
  store ptr %17, ptr %31, align 8
  br label %common.ret

ifend:                                            ; preds = %3
  %memberidx5 = getelementptr inbounds %IntType, ptr %7, i64 0, i32 1
  %32 = load i1, ptr %memberidx5, align 1
  br i1 %32, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend
  %33 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %7)
  %memberidx.i53 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  %34 = load i64, ptr %memberidx.i53, align 4
  %35 = trunc i64 %34 to i32
  %36 = add i32 %35, 1
  %37 = call ptr @malloc(i32 %36)
  %38 = load ptr, ptr %33, align 8
  %39 = load i64, ptr %memberidx.i53, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 8 %38, i64 %39, i1 false)
  %40 = getelementptr inbounds i8, ptr %37, i64 %39
  store i8 0, ptr %40, align 1
  %41 = alloca ptr, align 8
  %42 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %41, ptr nonnull @210, ptr %37)
  %43 = load ptr, ptr %41, align 8
  %44 = tail call ptr @malloc(i32 24)
  store ptr %43, ptr %44, align 8
  %memberidx1.i54 = getelementptr inbounds %String, ptr %44, i64 0, i32 1
  store i64 %42, ptr %memberidx1.i54, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %44, i64 0, i32 2
  store i64 %42, ptr %memberidx2.i, align 4
  tail call void @free(ptr %37)
  %45 = load ptr, ptr %memberidx, align 8
  %46 = load ptr, ptr %45, align 8
  %memberidx.i55 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %47 = load ptr, ptr %memberidx.i55, align 8
  %memberidx1.i56 = getelementptr inbounds %Compiler, ptr %47, i64 0, i32 5
  %48 = load ptr, ptr %memberidx1.i56, align 8
  %49 = call ptr @malloc(i32 24)
  store i64 5, ptr %49, align 4
  %memberidx1.i.i57 = getelementptr inbounds %FloError, ptr %49, i64 0, i32 2
  store ptr %46, ptr %memberidx1.i.i57, align 8
  %memberidx2.i.i58 = getelementptr inbounds %FloError, ptr %49, i64 0, i32 1
  store ptr %44, ptr %memberidx2.i.i58, align 8
  %memberidx.i.i59 = getelementptr inbounds %Array_FloError_, ptr %48, i64 0, i32 1
  %50 = load i64, ptr %memberidx.i.i59, align 4
  %51 = add i64 %50, 1
  %memberidx.i.i.i60 = getelementptr inbounds %Array_FloError_, ptr %48, i64 0, i32 2
  %52 = load i64, ptr %memberidx.i.i.i60, align 4
  %53 = icmp slt i64 %52, %51
  %.pre102 = load ptr, ptr %48, align 8
  br i1 %53, label %while.entry.i.i.i61, label %TypeChecker_error.exit62

while.entry.i.i.i61:                              ; preds = %if.entry6, %while.entry.i.i.i61
  %54 = phi ptr [ %58, %while.entry.i.i.i61 ], [ %.pre102, %if.entry6 ]
  %55 = phi i64 [ %59, %while.entry.i.i.i61 ], [ %52, %if.entry6 ]
  %56 = shl nuw i64 %55, 1
  store i64 %56, ptr %memberidx.i.i.i60, align 4
  %57 = shl i64 %55, 4
  %58 = call ptr @realloc(ptr %54, i64 %57)
  store ptr %58, ptr %48, align 8
  %59 = load i64, ptr %memberidx.i.i.i60, align 4
  %60 = icmp slt i64 %59, %51
  br i1 %60, label %while.entry.i.i.i61, label %TypeChecker_error.exit62.loopexit

TypeChecker_error.exit62.loopexit:                ; preds = %while.entry.i.i.i61
  %.pre103 = load i64, ptr %memberidx.i.i59, align 4
  %.pre105 = add nsw i64 %.pre103, 1
  br label %TypeChecker_error.exit62

TypeChecker_error.exit62:                         ; preds = %if.entry6, %TypeChecker_error.exit62.loopexit
  %.pre-phi = phi i64 [ %.pre105, %TypeChecker_error.exit62.loopexit ], [ %51, %if.entry6 ]
  %61 = phi ptr [ %58, %TypeChecker_error.exit62.loopexit ], [ %.pre102, %if.entry6 ]
  %62 = phi i64 [ %.pre103, %TypeChecker_error.exit62.loopexit ], [ %50, %if.entry6 ]
  store i64 %.pre-phi, ptr %memberidx.i.i59, align 4
  %63 = getelementptr inbounds ptr, ptr %61, i64 %62
  store ptr %49, ptr %63, align 8
  br label %common.ret

ifend8:                                           ; preds = %ifend
  %memberidx12 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 1
  %64 = load i1, ptr %memberidx12, align 1
  br i1 %64, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend8
  %65 = call ptr @malloc(i32 40)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %65, ptr noundef nonnull align 8 dereferenceable(40) @211, i64 40, i1 false)
  %66 = call ptr @malloc(i32 24)
  store ptr %65, ptr %66, align 8
  %memberidx1.i.i63 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  store i64 40, ptr %memberidx1.i.i63, align 4
  %memberidx2.i.i64 = getelementptr inbounds %String, ptr %66, i64 0, i32 2
  store i64 40, ptr %memberidx2.i.i64, align 4
  %67 = load ptr, ptr %memberidx, align 8
  %68 = load ptr, ptr %67, align 8
  %memberidx.i65 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %69 = load ptr, ptr %memberidx.i65, align 8
  %memberidx1.i66 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 5
  %70 = load ptr, ptr %memberidx1.i66, align 8
  %71 = call ptr @malloc(i32 24)
  store i64 5, ptr %71, align 4
  %memberidx1.i.i67 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 2
  store ptr %68, ptr %memberidx1.i.i67, align 8
  %memberidx2.i.i68 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 1
  store ptr %66, ptr %memberidx2.i.i68, align 8
  %memberidx.i.i69 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i.i69, align 4
  %73 = add i64 %72, 1
  %memberidx.i.i.i70 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i.i70, align 4
  %75 = icmp slt i64 %74, %73
  %.pre96 = load ptr, ptr %70, align 8
  br i1 %75, label %while.entry.i.i.i71, label %TypeChecker_error.exit72

while.entry.i.i.i71:                              ; preds = %if.entry13, %while.entry.i.i.i71
  %76 = phi ptr [ %80, %while.entry.i.i.i71 ], [ %.pre96, %if.entry13 ]
  %77 = phi i64 [ %81, %while.entry.i.i.i71 ], [ %74, %if.entry13 ]
  %78 = shl nuw i64 %77, 1
  store i64 %78, ptr %memberidx.i.i.i70, align 4
  %79 = shl i64 %77, 4
  %80 = call ptr @realloc(ptr %76, i64 %79)
  store ptr %80, ptr %70, align 8
  %81 = load i64, ptr %memberidx.i.i.i70, align 4
  %82 = icmp slt i64 %81, %73
  br i1 %82, label %while.entry.i.i.i71, label %TypeChecker_error.exit72.loopexit

TypeChecker_error.exit72.loopexit:                ; preds = %while.entry.i.i.i71
  %.pre97 = load i64, ptr %memberidx.i.i69, align 4
  %.pre108 = add nsw i64 %.pre97, 1
  br label %TypeChecker_error.exit72

TypeChecker_error.exit72:                         ; preds = %if.entry13, %TypeChecker_error.exit72.loopexit
  %.pre-phi109 = phi i64 [ %.pre108, %TypeChecker_error.exit72.loopexit ], [ %73, %if.entry13 ]
  %83 = phi ptr [ %80, %TypeChecker_error.exit72.loopexit ], [ %.pre96, %if.entry13 ]
  %84 = phi i64 [ %.pre97, %TypeChecker_error.exit72.loopexit ], [ %72, %if.entry13 ]
  store i64 %.pre-phi109, ptr %memberidx.i.i69, align 4
  %85 = getelementptr inbounds ptr, ptr %83, i64 %84
  store ptr %71, ptr %85, align 8
  br label %common.ret

ifend15:                                          ; preds = %ifend8
  %86 = load ptr, ptr %0, align 8
  %87 = call fastcc i64 @evaluate_const_int_expression(ptr %86, ptr nonnull %6)
  %memberidx19 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %88 = load ptr, ptr %memberidx19, align 8
  %89 = icmp slt i64 %87, 0
  %memberidx20 = getelementptr inbounds %TupleType, ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %memberidx20, align 8
  %memberidx21 = getelementptr inbounds %Array_Type_, ptr %90, i64 0, i32 1
  %91 = load i64, ptr %memberidx21, align 4
  %92 = icmp sge i64 %87, %91
  %93 = or i1 %89, %92
  br i1 %93, label %if.entry22, label %ifend24

if.entry22:                                       ; preds = %ifend15
  %94 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %88)
  %memberidx.i73 = getelementptr inbounds %String, ptr %94, i64 0, i32 1
  %95 = load i64, ptr %memberidx.i73, align 4
  %96 = trunc i64 %95 to i32
  %97 = add i32 %96, 1
  %98 = call ptr @malloc(i32 %97)
  %99 = load ptr, ptr %94, align 8
  %100 = load i64, ptr %memberidx.i73, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %98, ptr align 8 %99, i64 %100, i1 false)
  %101 = getelementptr inbounds i8, ptr %98, i64 %100
  store i8 0, ptr %101, align 1
  %102 = alloca ptr, align 8
  %103 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %102, ptr nonnull @212, ptr %98)
  %104 = load ptr, ptr %102, align 8
  %105 = tail call ptr @malloc(i32 24)
  store ptr %104, ptr %105, align 8
  %memberidx1.i74 = getelementptr inbounds %String, ptr %105, i64 0, i32 1
  store i64 %103, ptr %memberidx1.i74, align 4
  %memberidx2.i75 = getelementptr inbounds %String, ptr %105, i64 0, i32 2
  store i64 %103, ptr %memberidx2.i75, align 4
  tail call void @free(ptr %98)
  %106 = load ptr, ptr %memberidx, align 8
  %107 = load ptr, ptr %106, align 8
  %memberidx.i76 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %108 = load ptr, ptr %memberidx.i76, align 8
  %memberidx1.i77 = getelementptr inbounds %Compiler, ptr %108, i64 0, i32 5
  %109 = load ptr, ptr %memberidx1.i77, align 8
  %110 = call ptr @malloc(i32 24)
  store i64 5, ptr %110, align 4
  %memberidx1.i.i78 = getelementptr inbounds %FloError, ptr %110, i64 0, i32 2
  store ptr %107, ptr %memberidx1.i.i78, align 8
  %memberidx2.i.i79 = getelementptr inbounds %FloError, ptr %110, i64 0, i32 1
  store ptr %105, ptr %memberidx2.i.i79, align 8
  %memberidx.i.i80 = getelementptr inbounds %Array_FloError_, ptr %109, i64 0, i32 1
  %111 = load i64, ptr %memberidx.i.i80, align 4
  %112 = add i64 %111, 1
  %memberidx.i.i.i81 = getelementptr inbounds %Array_FloError_, ptr %109, i64 0, i32 2
  %113 = load i64, ptr %memberidx.i.i.i81, align 4
  %114 = icmp slt i64 %113, %112
  %.pre99 = load ptr, ptr %109, align 8
  br i1 %114, label %while.entry.i.i.i82, label %TypeChecker_error.exit83

while.entry.i.i.i82:                              ; preds = %if.entry22, %while.entry.i.i.i82
  %115 = phi ptr [ %119, %while.entry.i.i.i82 ], [ %.pre99, %if.entry22 ]
  %116 = phi i64 [ %120, %while.entry.i.i.i82 ], [ %113, %if.entry22 ]
  %117 = shl nuw i64 %116, 1
  store i64 %117, ptr %memberidx.i.i.i81, align 4
  %118 = shl i64 %116, 4
  %119 = call ptr @realloc(ptr %115, i64 %118)
  store ptr %119, ptr %109, align 8
  %120 = load i64, ptr %memberidx.i.i.i81, align 4
  %121 = icmp slt i64 %120, %112
  br i1 %121, label %while.entry.i.i.i82, label %TypeChecker_error.exit83.loopexit

TypeChecker_error.exit83.loopexit:                ; preds = %while.entry.i.i.i82
  %.pre100 = load i64, ptr %memberidx.i.i80, align 4
  %.pre106 = add nsw i64 %.pre100, 1
  br label %TypeChecker_error.exit83

TypeChecker_error.exit83:                         ; preds = %if.entry22, %TypeChecker_error.exit83.loopexit
  %.pre-phi107 = phi i64 [ %.pre106, %TypeChecker_error.exit83.loopexit ], [ %112, %if.entry22 ]
  %122 = phi ptr [ %119, %TypeChecker_error.exit83.loopexit ], [ %.pre99, %if.entry22 ]
  %123 = phi i64 [ %.pre100, %TypeChecker_error.exit83.loopexit ], [ %111, %if.entry22 ]
  store i64 %.pre-phi107, ptr %memberidx.i.i80, align 4
  %124 = getelementptr inbounds ptr, ptr %122, i64 %123
  store ptr %110, ptr %124, align 8
  br label %common.ret

ifend24:                                          ; preds = %ifend15
  %125 = load ptr, ptr %90, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %87
  %127 = load ptr, ptr %126, align 8
  tail call void @free(ptr nonnull %6)
  %128 = tail call ptr @malloc(i32 41)
  %129 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %129, align 4
  %memberidx.i.i84 = getelementptr inbounds %Expression, ptr %129, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i84, align 4
  %memberidx1.i.i85 = getelementptr inbounds %Expression, ptr %129, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i85, align 1
  %memberidx.i86 = getelementptr inbounds %Expression, ptr %129, i64 0, i32 3
  %130 = call ptr @malloc(i32 9)
  store i64 6, ptr %130, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %130, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  store ptr %130, ptr %memberidx.i86, align 8
  %memberidx1.i87 = getelementptr inbounds %IntExpression, ptr %129, i64 0, i32 4
  store i64 %87, ptr %memberidx1.i87, align 4
  store i1 true, ptr %memberidx1.i.i85, align 1
  store i64 8, ptr %128, align 4
  %memberidx.i.i89 = getelementptr inbounds %Expression, ptr %128, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i89, align 4
  %memberidx1.i.i90 = getelementptr inbounds %Expression, ptr %128, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i90, align 1
  %memberidx.i91 = getelementptr inbounds %IndexExpression, ptr %128, i64 0, i32 4
  store ptr %1, ptr %memberidx.i91, align 8
  %memberidx1.i92 = getelementptr inbounds %IndexExpression, ptr %128, i64 0, i32 5
  store ptr %129, ptr %memberidx1.i92, align 8
  %memberidx2.i93 = getelementptr inbounds %Expression, ptr %128, i64 0, i32 3
  store ptr %127, ptr %memberidx2.i93, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend9, %2, %TypeChecker_error.exit78, %ifend24, %TypeChecker_error.exit, %if.entry7, %if.entry2
  %common.ret.op = phi ptr [ %17, %if.entry2 ], [ %19, %if.entry7 ], [ null, %TypeChecker_error.exit ], [ %55, %ifend24 ], [ null, %TypeChecker_error.exit78 ], [ null, %2 ], [ null, %ifend9 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = load i64, ptr %10, align 4
  %12 = icmp eq i64 %11, 20
  br i1 %12, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %ifend, %if.entry.i
  %.tr5.i = phi ptr [ %13, %if.entry.i ], [ %10, %ifend ]
  %memberidx1.i79 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %13 = load ptr, ptr %memberidx1.i79, align 8
  %14 = load i64, ptr %13, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %ifend
  %.lcssa.i = phi i64 [ %11, %ifend ], [ %14, %if.entry.i ]
  %16 = icmp eq i64 %.lcssa.i, 11
  br i1 %16, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %is_object.exit
  %17 = tail call fastcc ptr @TypeChecker_check_object_index_expr(ptr %0, ptr %5, ptr %1)
  br label %common.ret

ifend4:                                           ; preds = %is_object.exit
  %18 = icmp eq i64 %11, 15
  br i1 %18, label %if.entry7, label %ifend9

if.entry7:                                        ; preds = %ifend4
  %19 = tail call fastcc ptr @TypeChecker_check_tuple_index_expr(ptr %0, ptr %5, ptr %1)
  br label %common.ret

ifend9:                                           ; preds = %ifend4
  %20 = alloca %IntType, align 8
  store i64 6, ptr %20, align 8
  %memberidx.i55 = getelementptr inbounds %IntType, ptr %20, i64 0, i32 1
  store i1 false, ptr %memberidx.i55, align 8
  %memberidx10 = getelementptr inbounds %ExpressionIndexNode, ptr %1, i64 0, i32 4
  %21 = load ptr, ptr %memberidx10, align 8
  %22 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %20, ptr %21)
  %23 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i57 = getelementptr inbounds %Compiler, ptr %23, i64 0, i32 5
  %24 = load ptr, ptr %memberidx1.i57, align 8
  %memberidx2.i58 = getelementptr inbounds %Array_FloError_, ptr %24, i64 0, i32 1
  %25 = load i64, ptr %memberidx2.i58, align 4
  %26 = icmp sgt i64 %25, 0
  br i1 %26, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend9
  %memberidx14 = getelementptr inbounds %Expression, ptr %22, i64 0, i32 3
  %27 = load ptr, ptr %memberidx14, align 8
  %28 = load i64, ptr %27, align 4
  %29 = add i64 %28, -1
  %30 = icmp ult i64 %29, 7
  br i1 %30, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %31 = call ptr @malloc(i32 34)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(34) %31, ptr noundef nonnull align 8 dereferenceable(34) @209, i64 34, i1 false)
  %32 = call ptr @malloc(i32 24)
  store ptr %31, ptr %32, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %32, i64 0, i32 1
  store i64 34, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %32, i64 0, i32 2
  store i64 34, ptr %memberidx2.i.i, align 4
  %33 = load ptr, ptr %memberidx10, align 8
  %34 = load ptr, ptr %33, align 8
  %35 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i60 = getelementptr inbounds %Compiler, ptr %35, i64 0, i32 5
  %36 = load ptr, ptr %memberidx1.i60, align 8
  %37 = call ptr @malloc(i32 24)
  store i64 5, ptr %37, align 4
  %memberidx1.i.i61 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 2
  store ptr %34, ptr %memberidx1.i.i61, align 8
  %memberidx2.i.i62 = getelementptr inbounds %FloError, ptr %37, i64 0, i32 1
  store ptr %32, ptr %memberidx2.i.i62, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i.i, align 4
  %39 = add i64 %38, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %36, i64 0, i32 2
  %40 = load i64, ptr %memberidx.i.i.i, align 4
  %41 = icmp slt i64 %40, %39
  %.pre = load ptr, ptr %36, align 8
  br i1 %41, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry15, %while.entry.i.i.i
  %42 = phi ptr [ %46, %while.entry.i.i.i ], [ %.pre, %if.entry15 ]
  %43 = phi i64 [ %47, %while.entry.i.i.i ], [ %40, %if.entry15 ]
  %44 = shl nuw i64 %43, 1
  store i64 %44, ptr %memberidx.i.i.i, align 4
  %45 = shl i64 %43, 4
  %46 = call ptr @realloc(ptr %42, i64 %45)
  store ptr %46, ptr %36, align 8
  %47 = load i64, ptr %memberidx.i.i.i, align 4
  %48 = icmp slt i64 %47, %39
  br i1 %48, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre80 = load i64, ptr %memberidx.i.i, align 4
  %.pre86 = add nsw i64 %.pre80, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry15, %TypeChecker_error.exit.loopexit
  %.pre-phi87 = phi i64 [ %.pre86, %TypeChecker_error.exit.loopexit ], [ %39, %if.entry15 ]
  %49 = phi ptr [ %46, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry15 ]
  %50 = phi i64 [ %.pre80, %TypeChecker_error.exit.loopexit ], [ %38, %if.entry15 ]
  store i64 %.pre-phi87, ptr %memberidx.i.i, align 4
  %51 = getelementptr inbounds ptr, ptr %49, i64 %50
  store ptr %37, ptr %51, align 8
  br label %common.ret

ifend17:                                          ; preds = %ifend13
  %52 = call ptr @malloc(i32 8)
  store i64 21, ptr %52, align 4
  %53 = load ptr, ptr %memberidx1, align 8
  %54 = load i64, ptr %53, align 4
  switch i64 %54, label %else28 [
    i64 13, label %if.entry22
    i64 14, label %if.entry27
  ]

if.entry22:                                       ; preds = %ifend17
  %memberidx25 = getelementptr inbounds %PointerType, ptr %53, i64 0, i32 1
  br label %ifend24

ifend24:                                          ; preds = %if.entry27, %if.entry22
  %value_type.0.in = phi ptr [ %memberidx25, %if.entry22 ], [ %memberidx30, %if.entry27 ]
  %value_type.0 = load ptr, ptr %value_type.0.in, align 8
  %55 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %55, align 4
  %memberidx.i.i63 = getelementptr inbounds %Expression, ptr %55, i64 0, i32 2
  store i64 14, ptr %memberidx.i.i63, align 4
  %memberidx1.i.i64 = getelementptr inbounds %Expression, ptr %55, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i64, align 1
  %memberidx.i65 = getelementptr inbounds %IndexExpression, ptr %55, i64 0, i32 4
  store ptr %5, ptr %memberidx.i65, align 8
  %memberidx1.i66 = getelementptr inbounds %IndexExpression, ptr %55, i64 0, i32 5
  store ptr %22, ptr %memberidx1.i66, align 8
  %memberidx2.i67 = getelementptr inbounds %Expression, ptr %55, i64 0, i32 3
  store ptr %value_type.0, ptr %memberidx2.i67, align 8
  br label %common.ret

if.entry27:                                       ; preds = %ifend17
  %memberidx30 = getelementptr inbounds %ArrayType, ptr %53, i64 0, i32 1
  br label %ifend24

else28:                                           ; preds = %ifend17
  %56 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %53)
  %memberidx.i68 = getelementptr inbounds %String, ptr %56, i64 0, i32 1
  %57 = load i64, ptr %memberidx.i68, align 4
  %58 = trunc i64 %57 to i32
  %59 = add i32 %58, 1
  %60 = call ptr @malloc(i32 %59)
  %61 = load ptr, ptr %56, align 8
  %62 = load i64, ptr %memberidx.i68, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %60, ptr align 8 %61, i64 %62, i1 false)
  %63 = getelementptr inbounds i8, ptr %60, i64 %62
  store i8 0, ptr %63, align 1
  %64 = alloca ptr, align 8
  %65 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %64, ptr nonnull @213, ptr %60)
  %66 = load ptr, ptr %64, align 8
  %67 = tail call ptr @malloc(i32 24)
  store ptr %66, ptr %67, align 8
  %memberidx1.i69 = getelementptr inbounds %String, ptr %67, i64 0, i32 1
  store i64 %65, ptr %memberidx1.i69, align 4
  %memberidx2.i70 = getelementptr inbounds %String, ptr %67, i64 0, i32 2
  store i64 %65, ptr %memberidx2.i70, align 4
  tail call void @free(ptr %60)
  %68 = load ptr, ptr %1, align 8
  %69 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i72 = getelementptr inbounds %Compiler, ptr %69, i64 0, i32 5
  %70 = load ptr, ptr %memberidx1.i72, align 8
  %71 = call ptr @malloc(i32 24)
  store i64 5, ptr %71, align 4
  %memberidx1.i.i73 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 2
  store ptr %68, ptr %memberidx1.i.i73, align 8
  %memberidx2.i.i74 = getelementptr inbounds %FloError, ptr %71, i64 0, i32 1
  store ptr %67, ptr %memberidx2.i.i74, align 8
  %memberidx.i.i75 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i.i75, align 4
  %73 = add i64 %72, 1
  %memberidx.i.i.i76 = getelementptr inbounds %Array_FloError_, ptr %70, i64 0, i32 2
  %74 = load i64, ptr %memberidx.i.i.i76, align 4
  %75 = icmp slt i64 %74, %73
  %.pre82 = load ptr, ptr %70, align 8
  br i1 %75, label %while.entry.i.i.i77, label %TypeChecker_error.exit78

while.entry.i.i.i77:                              ; preds = %else28, %while.entry.i.i.i77
  %76 = phi ptr [ %80, %while.entry.i.i.i77 ], [ %.pre82, %else28 ]
  %77 = phi i64 [ %81, %while.entry.i.i.i77 ], [ %74, %else28 ]
  %78 = shl nuw i64 %77, 1
  store i64 %78, ptr %memberidx.i.i.i76, align 4
  %79 = shl i64 %77, 4
  %80 = call ptr @realloc(ptr %76, i64 %79)
  store ptr %80, ptr %70, align 8
  %81 = load i64, ptr %memberidx.i.i.i76, align 4
  %82 = icmp slt i64 %81, %73
  br i1 %82, label %while.entry.i.i.i77, label %TypeChecker_error.exit78.loopexit

TypeChecker_error.exit78.loopexit:                ; preds = %while.entry.i.i.i77
  %.pre83 = load i64, ptr %memberidx.i.i75, align 4
  %.pre85 = add nsw i64 %.pre83, 1
  br label %TypeChecker_error.exit78

TypeChecker_error.exit78:                         ; preds = %else28, %TypeChecker_error.exit78.loopexit
  %.pre-phi = phi i64 [ %.pre85, %TypeChecker_error.exit78.loopexit ], [ %73, %else28 ]
  %83 = phi ptr [ %80, %TypeChecker_error.exit78.loopexit ], [ %.pre82, %else28 ]
  %84 = phi i64 [ %.pre83, %TypeChecker_error.exit78.loopexit ], [ %72, %else28 ]
  store i64 %.pre-phi, ptr %memberidx.i.i75, align 4
  %85 = getelementptr inbounds ptr, ptr %83, i64 %84
  store ptr %71, ptr %85, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_block(ptr %0, ptr nocapture readonly %1, ptr readonly %2, i1 %3) unnamed_addr {
  %5 = tail call ptr @malloc(i32 19)
  %6 = tail call ptr @malloc(i32 24)
  %memberidx.i.i = getelementptr inbounds %Array_Statement_, ptr %6, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Array_Statement_, ptr %6, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i, align 4
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %6, align 8
  store i64 0, ptr %memberidx.i.i, align 4
  store ptr %6, ptr %5, align 8
  %memberidx3.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 1
  %memberidx4.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 2
  %memberidx5.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 3
  %memberidx6.i = getelementptr inbounds %Block, ptr %5, i64 0, i32 4
  %.not = icmp eq ptr %2, null
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(11) %memberidx3.i, i8 0, i64 11, i1 false)
  br i1 %.not, label %false_block, label %end

false_block:                                      ; preds = %4
  %memberidx.i91 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %8 = load ptr, ptr %memberidx.i91, align 8
  %9 = load i64, ptr %8, align 4
  %10 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %9)
  %memberidx2.i92 = getelementptr inbounds %Scope, ptr %10, i64 0, i32 5
  %11 = load ptr, ptr %memberidx.i91, align 8
  store ptr %11, ptr %memberidx2.i92, align 8
  %12 = load ptr, ptr %0, align 8
  %13 = load ptr, ptr %memberidx.i91, align 8
  %14 = load ptr, ptr %12, align 8
  %15 = load i64, ptr %13, align 4
  %16 = load ptr, ptr %14, align 8
  %17 = getelementptr inbounds ptr, ptr %16, i64 %15
  %18 = load ptr, ptr %17, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %18, i64 0, i32 7
  %19 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %13, i64 0, i32 1
  %20 = load i64, ptr %memberidx3.i.i.i, align 4
  %21 = load ptr, ptr %19, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx4.i93 = getelementptr inbounds %Scope, ptr %23, i64 0, i32 7
  %24 = load ptr, ptr %memberidx4.i93, align 8
  %25 = load ptr, ptr %10, align 8
  %memberidx.i.i94 = getelementptr inbounds %Array_ScopeId_, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i.i94, align 4
  %27 = add i64 %26, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_ScopeId_, ptr %24, i64 0, i32 2
  %28 = load i64, ptr %memberidx.i.i.i, align 4
  %29 = icmp slt i64 %28, %27
  %.pre.i = load ptr, ptr %24, align 8
  br i1 %29, label %while.entry.i.i.i, label %TypeChecker_create_child_scope_within_current_scope.exit

while.entry.i.i.i:                                ; preds = %false_block, %while.entry.i.i.i
  %30 = phi ptr [ %34, %while.entry.i.i.i ], [ %.pre.i, %false_block ]
  %31 = phi i64 [ %35, %while.entry.i.i.i ], [ %28, %false_block ]
  %32 = shl nuw i64 %31, 1
  store i64 %32, ptr %memberidx.i.i.i, align 4
  %33 = shl i64 %31, 4
  %34 = tail call ptr @realloc(ptr %30, i64 %33)
  store ptr %34, ptr %24, align 8
  %35 = load i64, ptr %memberidx.i.i.i, align 4
  %36 = icmp slt i64 %35, %27
  br i1 %36, label %while.entry.i.i.i, label %Array_ScopeId____sl__.exit.loopexit.i

Array_ScopeId____sl__.exit.loopexit.i:            ; preds = %while.entry.i.i.i
  %.pre11.i = load i64, ptr %memberidx.i.i94, align 4
  %.pre13.i = add nsw i64 %.pre11.i, 1
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %false_block, %Array_ScopeId____sl__.exit.loopexit.i
  %.pre-phi.i = phi i64 [ %.pre13.i, %Array_ScopeId____sl__.exit.loopexit.i ], [ %27, %false_block ]
  %37 = phi ptr [ %34, %Array_ScopeId____sl__.exit.loopexit.i ], [ %.pre.i, %false_block ]
  %38 = phi i64 [ %.pre11.i, %Array_ScopeId____sl__.exit.loopexit.i ], [ %26, %false_block ]
  store i64 %.pre-phi.i, ptr %memberidx.i.i94, align 4
  %39 = getelementptr inbounds ptr, ptr %37, i64 %38
  store ptr %25, ptr %39, align 8
  br label %end

end:                                              ; preds = %4, %TypeChecker_create_child_scope_within_current_scope.exit
  %ternary = phi ptr [ %10, %TypeChecker_create_child_scope_within_current_scope.exit ], [ %2, %4 ]
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %40 = load ptr, ptr %ternary, align 8
  store ptr %40, ptr %memberidx, align 8
  %memberidx2 = getelementptr inbounds %BlockNode, ptr %1, i64 0, i32 1
  %41 = load ptr, ptr %memberidx2, align 8
  %42 = tail call ptr @malloc(i32 25)
  %43 = load ptr, ptr %41, align 8
  %memberidx1.i = getelementptr inbounds %Array_StatementNode_, ptr %41, i64 0, i32 1
  %44 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %42, align 1
  %memberidx1.i.i76 = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %42, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %42, i64 0, i32 3
  store ptr %43, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_StatementNode_, ptr %42, i64 0, i32 2
  store i64 %44, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i76, align 4
  %45 = icmp slt i64 %44, 1
  br i1 %45, label %for.end.thread132, label %for.body.lr.ph

for.end.thread132:                                ; preds = %end
  tail call void @free(ptr nonnull %42)
  br label %ifend38

for.body.lr.ph:                                   ; preds = %end
  %memberidx.i79 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend34
  %46 = phi i64 [ 1, %for.body.lr.ph ], [ %72, %ifend34 ]
  %stmt_node.0114.in = phi ptr [ %43, %for.body.lr.ph ], [ %73, %ifend34 ]
  %stmt_node.0114 = load ptr, ptr %stmt_node.0114.in, align 8
  %47 = tail call fastcc ptr @TypeChecker_check_statement(ptr %0, ptr %stmt_node.0114)
  %48 = load ptr, ptr %memberidx.i79, align 8
  %memberidx1.i80 = getelementptr inbounds %Compiler, ptr %48, i64 0, i32 5
  %49 = load ptr, ptr %memberidx1.i80, align 8
  %memberidx2.i81 = getelementptr inbounds %Array_FloError_, ptr %49, i64 0, i32 1
  %50 = load i64, ptr %memberidx2.i81, align 4
  %51 = icmp sgt i64 %50, 0
  br i1 %51, label %common.ret.loopexit, label %ifend

if.entry36.thread:                                ; preds = %if.entry15, %Array_Statement____sl__.exit, %if.entry32, %if.entry27
  %memberidx5.i.sink = phi ptr [ %memberidx5.i, %if.entry32 ], [ %memberidx4.i, %if.entry27 ], [ %memberidx3.i, %Array_Statement____sl__.exit ], [ %memberidx3.i, %if.entry15 ]
  store i1 false, ptr %42, align 1
  store i1 true, ptr %memberidx5.i.sink, align 1
  tail call void @free(ptr nonnull %42)
  br label %ifend38

common.ret.loopexit:                              ; preds = %for.body
  store i1 false, ptr %42, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %ifend38
  %common.ret.op = phi ptr [ %5, %ifend38 ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %for.body
  %52 = load i64, ptr %memberidx.i.i, align 4
  %53 = add i64 %52, 1
  %54 = load i64, ptr %memberidx1.i.i, align 4
  %55 = icmp slt i64 %54, %53
  %.pre = load ptr, ptr %6, align 8
  br i1 %55, label %while.entry.i.i, label %Array_Statement____sl__.exit

while.entry.i.i:                                  ; preds = %ifend, %while.entry.i.i
  %56 = phi ptr [ %60, %while.entry.i.i ], [ %.pre, %ifend ]
  %57 = phi i64 [ %61, %while.entry.i.i ], [ %54, %ifend ]
  %58 = shl nuw i64 %57, 1
  store i64 %58, ptr %memberidx1.i.i, align 4
  %59 = shl i64 %57, 4
  %60 = tail call ptr @realloc(ptr %56, i64 %59)
  store ptr %60, ptr %6, align 8
  %61 = load i64, ptr %memberidx1.i.i, align 4
  %62 = icmp slt i64 %61, %53
  br i1 %62, label %while.entry.i.i, label %Array_Statement____sl__.exit.loopexit

Array_Statement____sl__.exit.loopexit:            ; preds = %while.entry.i.i
  %.pre127 = load i64, ptr %memberidx.i.i, align 4
  %.pre130 = add nsw i64 %.pre127, 1
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %ifend, %Array_Statement____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre130, %Array_Statement____sl__.exit.loopexit ], [ %53, %ifend ]
  %63 = phi ptr [ %60, %Array_Statement____sl__.exit.loopexit ], [ %.pre, %ifend ]
  %64 = phi i64 [ %.pre127, %Array_Statement____sl__.exit.loopexit ], [ %52, %ifend ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %65 = getelementptr inbounds ptr, ptr %63, i64 %64
  store ptr %47, ptr %65, align 8
  %66 = load i64, ptr %47, align 4
  switch i64 %66, label %ifend34 [
    i64 7, label %if.entry36.thread
    i64 0, label %if.entry11
    i64 5, label %if.entry27
    i64 6, label %if.entry32
  ]

if.entry11:                                       ; preds = %Array_Statement____sl__.exit
  %memberidx14 = getelementptr inbounds %IfStatement, ptr %47, i64 0, i32 3
  %67 = load ptr, ptr %memberidx14, align 8
  %.not75 = icmp eq ptr %67, null
  br i1 %.not75, label %ifend34, label %if.entry15

if.entry15:                                       ; preds = %if.entry11
  %memberidx18 = getelementptr inbounds %IfStatement, ptr %47, i64 0, i32 2
  %68 = load ptr, ptr %memberidx18, align 8
  %memberidx19 = getelementptr inbounds %Block, ptr %68, i64 0, i32 1
  %69 = load i1, ptr %memberidx19, align 1
  %memberidx21 = getelementptr inbounds %Block, ptr %67, i64 0, i32 1
  %70 = load i1, ptr %memberidx21, align 1
  %71 = and i1 %69, %70
  br i1 %71, label %if.entry36.thread, label %ifend34

if.entry27:                                       ; preds = %Array_Statement____sl__.exit
  br label %if.entry36.thread

if.entry32:                                       ; preds = %Array_Statement____sl__.exit
  br label %if.entry36.thread

ifend34:                                          ; preds = %Array_Statement____sl__.exit, %if.entry11, %if.entry15
  %72 = add nuw nsw i64 %46, 1
  store i64 %72, ptr %memberidx1.i.i76, align 4
  %73 = getelementptr inbounds ptr, ptr %43, i64 %46
  %.not131 = icmp slt i64 %46, %44
  br i1 %.not131, label %for.body, label %if.entry36

if.entry36:                                       ; preds = %ifend34
  tail call void @free(ptr nonnull %42)
  %.pre129 = load i64, ptr %47, align 4
  %74 = icmp eq i64 %.pre129, 8
  %75 = and i1 %74, %3
  br i1 %75, label %if.entry40, label %ifend38

ifend38:                                          ; preds = %if.entry36.thread, %for.end.thread132, %if.entry40, %if.entry36
  %memberidx46 = getelementptr inbounds %Scope, ptr %ternary, i64 0, i32 5
  %76 = load ptr, ptr %memberidx46, align 8
  store ptr %76, ptr %memberidx, align 8
  br label %common.ret

if.entry40:                                       ; preds = %if.entry36
  store ptr %47, ptr %memberidx6.i, align 8
  %77 = load i64, ptr %memberidx.i.i, align 4
  %78 = add nsw i64 %77, -1
  store i64 %78, ptr %memberidx.i.i, align 4
  br label %ifend38
}

define internal fastcc void @Map_String_Generic__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_Generic_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_Generic____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_Generic____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_Generic_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_Generic__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_Generic_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_Generic__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc void @TypeChecker_check_class_body(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %3, i64 0, i32 2
  %4 = load ptr, ptr %memberidx1, align 8
  %5 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr %4)
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 21
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend54, %ifend13, %ifend10, %2, %TypeChecker_error.exit175, %for.end41, %TypeChecker_error.exit
  ret void

ifend:                                            ; preds = %2
  %8 = load ptr, ptr %0, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i, %ifend
  %9 = phi i64 [ %.pr, %if.entry.i ], [ %6, %ifend ]
  %.tr11.i = phi ptr [ %10, %if.entry.i ], [ %5, %ifend ]
  switch i64 %9, label %get_class_from_type.exit [
    i64 20, label %if.entry.i
    i64 11, label %if.entry3.i
  ]

if.entry.i:                                       ; preds = %tailrecurse.i
  %memberidx1.i176 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1.i176, align 8
  %.pr = load i64, ptr %10, align 4
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i, align 8
  %12 = load ptr, ptr %8, align 8
  %13 = load i64, ptr %11, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx2.i.i177 = getelementptr inbounds %Module, ptr %16, i64 0, i32 3
  %17 = load ptr, ptr %memberidx2.i.i177, align 8
  %memberidx3.i.i178 = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %18 = load i64, ptr %memberidx3.i.i178, align 4
  %19 = load ptr, ptr %17, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %18
  %21 = load ptr, ptr %20, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i = phi ptr [ %21, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx4 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 1
  %22 = load ptr, ptr %memberidx4, align 8
  %23 = load ptr, ptr %common.ret.op.i, align 8
  store ptr %23, ptr %memberidx4, align 8
  %memberidx7 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 2
  %24 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %24, null
  br i1 %.not, label %ifend10, label %if.entry8

if.entry8:                                        ; preds = %get_class_from_type.exit
  tail call fastcc void @TypeChecker_add_inherited_props_to_class(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  br label %ifend10

ifend10:                                          ; preds = %get_class_from_type.exit, %if.entry8
  tail call fastcc void @TypeChecker_declare_class_fields(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i, align 4
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %common.ret, label %ifend13

ifend13:                                          ; preds = %ifend10
  tail call fastcc void @TypeChecker_declare_class_methods(ptr nonnull %0, ptr nonnull %common.ret.op.i, ptr nonnull %1)
  %29 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i134 = getelementptr inbounds %Compiler, ptr %29, i64 0, i32 5
  %30 = load ptr, ptr %memberidx1.i134, align 8
  %memberidx2.i135 = getelementptr inbounds %Array_FloError_, ptr %30, i64 0, i32 1
  %31 = load i64, ptr %memberidx2.i135, align 4
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %common.ret, label %for.entry

for.entry:                                        ; preds = %ifend13
  %memberidx17 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 6
  %33 = load ptr, ptr %memberidx17, align 8
  %34 = tail call ptr @malloc(i32 25)
  %35 = load ptr, ptr %33, align 8
  %memberidx1.i136 = getelementptr inbounds %Map_String_PropId_, ptr %33, i64 0, i32 1
  %36 = load i64, ptr %memberidx1.i136, align 4
  %memberidx2.i137 = getelementptr inbounds %Map_String_PropId_, ptr %33, i64 0, i32 2
  %37 = load i64, ptr %memberidx2.i137, align 4
  store i1 false, ptr %34, align 1
  %memberidx1.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %34, i64 0, i32 1
  store ptr %35, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %34, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %34, i64 0, i32 3
  store i64 %37, ptr %memberidx3.i.i, align 4
  %38 = add nsw i64 %36, -1
  store i64 %38, ptr %memberidx2.i.i, align 4
  %39 = icmp sgt i64 %36, 0
  br i1 %39, label %while.entry.i, label %MapIterator_String_PropId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %40 = phi i64 [ %43, %ifend.i ], [ %38, %for.entry ]
  %41 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %35, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %41, i64 1
  %42 = load ptr, ptr %41, align 8
  %.not.i = icmp eq ptr %42, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %43 = add nsw i64 %40, -1
  store i64 %43, ptr %memberidx2.i.i, align 4
  %44 = icmp sgt i64 %40, 0
  br i1 %44, label %while.entry.i, label %MapIterator_String_PropId__next.exit.loopexit

MapIterator_String_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  %45 = phi i64 [ %43, %ifend.i ], [ %40, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_String_PropId__next.exit

MapIterator_String_PropId__next.exit:             ; preds = %MapIterator_String_PropId__next.exit.loopexit, %for.entry
  %46 = phi i64 [ %45, %MapIterator_String_PropId__next.exit.loopexit ], [ %38, %for.entry ]
  %memberidx1.i.i.promoted192 = phi ptr [ %incdec.ptr.i, %MapIterator_String_PropId__next.exit.loopexit ], [ %35, %for.entry ]
  %storemerge179187 = add nsw i64 %37, -1
  %storemerge188 = icmp slt i64 %37, 1
  br i1 %storemerge188, label %for.end.loopexit, label %for.body

for.body:                                         ; preds = %MapIterator_String_PropId__next.exit, %MapIterator_String_PropId__next.exit150
  %47 = phi i64 [ %79, %MapIterator_String_PropId__next.exit150 ], [ %46, %MapIterator_String_PropId__next.exit ]
  %incdec.ptr.i144.lcssa194 = phi ptr [ %incdec.ptr.i144.lcssa193, %MapIterator_String_PropId__next.exit150 ], [ %memberidx1.i.i.promoted192, %MapIterator_String_PropId__next.exit ]
  %storemerge179189 = phi i64 [ %storemerge179, %MapIterator_String_PropId__next.exit150 ], [ %storemerge179187, %MapIterator_String_PropId__next.exit ]
  %prop_entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i144.lcssa194, i64 -1
  %prop_entry.0 = load ptr, ptr %prop_entry.0.in, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_PropId_, ptr %prop_entry.0, i64 0, i32 1
  %48 = load ptr, ptr %memberidx19, align 8
  %49 = load i64, ptr %48, align 4
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %if.entry22, label %ifend24

for.cond.for.end.loopexit_crit_edge:              ; preds = %MapIterator_String_PropId__next.exit150
  store ptr %incdec.ptr.i144.lcssa193, ptr %memberidx1.i.i, align 8
  br label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.cond.for.end.loopexit_crit_edge, %MapIterator_String_PropId__next.exit
  %storemerge179.lcssa = phi i64 [ -1, %for.cond.for.end.loopexit_crit_edge ], [ %storemerge179187, %MapIterator_String_PropId__next.exit ]
  store i64 %storemerge179.lcssa, ptr %memberidx3.i.i, align 4
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %ifend33
  %.sink = phi ptr [ %34, %for.end.loopexit ], [ %memberidx36, %ifend33 ]
  store i1 true, ptr %.sink, align 1
  tail call void @free(ptr nonnull %34)
  %memberidx42 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 5
  %51 = load ptr, ptr %memberidx42, align 8
  %memberidx43182 = getelementptr inbounds %Array_ClassMethod_, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx43182, align 4
  %53 = icmp sgt i64 %52, 0
  br i1 %53, label %for.body39.lr.ph, label %for.end41

for.body39.lr.ph:                                 ; preds = %for.end
  %memberidx44 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 3
  %memberidx48 = getelementptr inbounds %ClassDeclarationNode, ptr %1, i64 0, i32 4
  %memberidx49 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %.pre206 = load ptr, ptr %memberidx44, align 8
  br label %for.body39

if.entry22:                                       ; preds = %for.body
  %54 = load ptr, ptr %prop_entry.0, align 8
  %55 = load ptr, ptr %0, align 8
  %memberidx.i.i = getelementptr inbounds %PropId, ptr %48, i64 0, i32 1
  %56 = load ptr, ptr %memberidx.i.i, align 8
  %57 = load ptr, ptr %55, align 8
  %58 = load i64, ptr %56, align 4
  %59 = load ptr, ptr %57, align 8
  %60 = getelementptr inbounds ptr, ptr %59, i64 %58
  %61 = load ptr, ptr %60, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %61, i64 0, i32 3
  %62 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %56, i64 0, i32 2
  %63 = load i64, ptr %memberidx3.i.i.i, align 4
  %64 = load ptr, ptr %62, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  %memberidx.i140 = getelementptr inbounds %Class, ptr %66, i64 0, i32 5
  %67 = load ptr, ptr %memberidx.i140, align 8
  %memberidx1.i141 = getelementptr inbounds %PropId, ptr %48, i64 0, i32 2
  %68 = load i64, ptr %memberidx1.i141, align 4
  %69 = load ptr, ptr %67, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  %memberidx26 = getelementptr inbounds %ClassMethod, ptr %71, i64 0, i32 7
  %72 = load i1, ptr %memberidx26, align 1
  br i1 %72, label %if.entry27, label %ifend24

ifend24:                                          ; preds = %if.entry22, %for.body
  %73 = add nsw i64 %47, -1
  store i64 %73, ptr %memberidx2.i.i, align 4
  %74 = icmp sgt i64 %47, 0
  br i1 %74, label %while.entry.i146, label %MapIterator_String_PropId__next.exit150

while.entry.i146:                                 ; preds = %ifend24, %ifend.i149
  %75 = phi i64 [ %78, %ifend.i149 ], [ %73, %ifend24 ]
  %76 = phi ptr [ %incdec.ptr.i144, %ifend.i149 ], [ %incdec.ptr.i144.lcssa194, %ifend24 ]
  %incdec.ptr.i144 = getelementptr inbounds ptr, ptr %76, i64 1
  %77 = load ptr, ptr %76, align 8
  %.not.i145 = icmp eq ptr %77, null
  br i1 %.not.i145, label %ifend.i149, label %MapIterator_String_PropId__next.exit150

ifend.i149:                                       ; preds = %while.entry.i146
  %78 = add nsw i64 %75, -1
  store i64 %78, ptr %memberidx2.i.i, align 4
  %.not227 = icmp eq i64 %75, 0
  br i1 %.not227, label %MapIterator_String_PropId__next.exit150, label %while.entry.i146

MapIterator_String_PropId__next.exit150:          ; preds = %while.entry.i146, %ifend.i149, %ifend24
  %79 = phi i64 [ %73, %ifend24 ], [ %75, %while.entry.i146 ], [ -1, %ifend.i149 ]
  %incdec.ptr.i144.lcssa193 = phi ptr [ %incdec.ptr.i144.lcssa194, %ifend24 ], [ %incdec.ptr.i144, %ifend.i149 ], [ %incdec.ptr.i144, %while.entry.i146 ]
  %storemerge179 = add nsw i64 %storemerge179189, -1
  %storemerge = icmp slt i64 %storemerge179189, 1
  br i1 %storemerge, label %for.cond.for.end.loopexit_crit_edge, label %for.body

if.entry27:                                       ; preds = %if.entry22
  store ptr %incdec.ptr.i144.lcssa194, ptr %memberidx1.i.i, align 8
  store i64 %storemerge179189, ptr %memberidx3.i.i, align 4
  store i1 false, ptr %34, align 1
  %memberidx30 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 3
  %80 = load ptr, ptr %memberidx30, align 8
  %.not132 = icmp eq ptr %80, null
  br i1 %.not132, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %if.entry27
  %memberidx.i151 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  %81 = load i64, ptr %memberidx.i151, align 4
  %82 = trunc i64 %81 to i32
  %83 = add i32 %82, 1
  %84 = tail call ptr @malloc(i32 %83)
  %85 = load ptr, ptr %54, align 8
  %86 = load i64, ptr %memberidx.i151, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %84, ptr align 8 %85, i64 %86, i1 false)
  %87 = getelementptr inbounds i8, ptr %84, i64 %86
  store i8 0, ptr %87, align 1
  %88 = alloca ptr, align 8
  %89 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %88, ptr nonnull @155, ptr %84)
  %90 = load ptr, ptr %88, align 8
  %91 = tail call ptr @malloc(i32 24)
  store ptr %90, ptr %91, align 8
  %memberidx1.i152 = getelementptr inbounds %String, ptr %91, i64 0, i32 1
  store i64 %89, ptr %memberidx1.i152, align 4
  %memberidx2.i153 = getelementptr inbounds %String, ptr %91, i64 0, i32 2
  store i64 %89, ptr %memberidx2.i153, align 4
  tail call void @free(ptr %84)
  %92 = load ptr, ptr %1, align 8
  %memberidx35 = getelementptr inbounds %Token, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx35, align 8
  %94 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i155 = getelementptr inbounds %Compiler, ptr %94, i64 0, i32 5
  %95 = load ptr, ptr %memberidx1.i155, align 8
  %96 = call ptr @malloc(i32 24)
  store i64 4, ptr %96, align 4
  %memberidx1.i.i156 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 2
  store ptr %93, ptr %memberidx1.i.i156, align 8
  %memberidx2.i.i157 = getelementptr inbounds %FloError, ptr %96, i64 0, i32 1
  store ptr %91, ptr %memberidx2.i.i157, align 8
  %memberidx.i.i158 = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 1
  %97 = load i64, ptr %memberidx.i.i158, align 4
  %98 = add i64 %97, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %95, i64 0, i32 2
  %99 = load i64, ptr %memberidx.i.i.i, align 4
  %100 = icmp slt i64 %99, %98
  %.pre = load ptr, ptr %95, align 8
  br i1 %100, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry31, %while.entry.i.i.i
  %101 = phi ptr [ %105, %while.entry.i.i.i ], [ %.pre, %if.entry31 ]
  %102 = phi i64 [ %106, %while.entry.i.i.i ], [ %99, %if.entry31 ]
  %103 = shl nuw i64 %102, 1
  store i64 %103, ptr %memberidx.i.i.i, align 4
  %104 = shl i64 %102, 4
  %105 = call ptr @realloc(ptr %101, i64 %104)
  store ptr %105, ptr %95, align 8
  %106 = load i64, ptr %memberidx.i.i.i, align 4
  %107 = icmp slt i64 %106, %98
  br i1 %107, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre204 = load i64, ptr %memberidx.i.i158, align 4
  %.pre216 = add nsw i64 %.pre204, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry31, %TypeChecker_error.exit.loopexit
  %.pre-phi217 = phi i64 [ %.pre216, %TypeChecker_error.exit.loopexit ], [ %98, %if.entry31 ]
  %108 = phi ptr [ %105, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry31 ]
  %109 = phi i64 [ %.pre204, %TypeChecker_error.exit.loopexit ], [ %97, %if.entry31 ]
  store i64 %.pre-phi217, ptr %memberidx.i.i158, align 4
  %110 = getelementptr inbounds ptr, ptr %108, i64 %109
  store ptr %96, ptr %110, align 8
  br label %common.ret

ifend33:                                          ; preds = %if.entry27
  %memberidx36 = getelementptr inbounds %Class, ptr %common.ret.op.i, i64 0, i32 10
  br label %for.end

for.body39:                                       ; preds = %for.body39.lr.ph, %for.incr40
  %111 = phi ptr [ %.pre206, %for.body39.lr.ph ], [ %123, %for.incr40 ]
  %112 = phi ptr [ %51, %for.body39.lr.ph ], [ %125, %for.incr40 ]
  %i.0183 = phi i64 [ 0, %for.body39.lr.ph ], [ %124, %for.incr40 ]
  %113 = load ptr, ptr %112, align 8
  %114 = getelementptr inbounds ptr, ptr %113, i64 %i.0183
  %115 = load ptr, ptr %114, align 8
  %116 = load ptr, ptr %115, align 8
  store ptr %116, ptr %memberidx44, align 8
  %117 = load ptr, ptr %memberidx48, align 8
  %118 = load ptr, ptr %117, align 8
  %119 = getelementptr inbounds ptr, ptr %118, i64 %i.0183
  %120 = load ptr, ptr %119, align 8
  %memberidx50 = getelementptr inbounds %ClassMethod, ptr %115, i64 0, i32 8
  %121 = load ptr, ptr %memberidx50, align 8
  store ptr %121, ptr %memberidx49, align 8
  %memberidx51 = getelementptr inbounds %ClassMethod, ptr %115, i64 0, i32 7
  %122 = load i1, ptr %memberidx51, align 1
  br i1 %122, label %for.incr40, label %ifend54

for.incr40:                                       ; preds = %for.body39, %ifend64
  %123 = phi ptr [ %116, %for.body39 ], [ %111, %ifend64 ]
  %124 = add nuw nsw i64 %i.0183, 1
  %125 = load ptr, ptr %memberidx42, align 8
  %memberidx43 = getelementptr inbounds %Array_ClassMethod_, ptr %125, i64 0, i32 1
  %126 = load i64, ptr %memberidx43, align 4
  %127 = icmp slt i64 %124, %126
  br i1 %127, label %for.body39, label %for.end41

for.end41:                                        ; preds = %for.incr40, %for.end
  store ptr %22, ptr %memberidx4, align 8
  br label %common.ret

ifend54:                                          ; preds = %for.body39
  %memberidx55 = getelementptr inbounds %ClassMethod, ptr %115, i64 0, i32 5
  %memberidx56 = getelementptr inbounds %MethodNode, ptr %120, i64 0, i32 2
  %128 = load ptr, ptr %memberidx56, align 8
  %129 = tail call fastcc ptr @TypeChecker_check_block(ptr nonnull %0, ptr %128, ptr null, i1 false)
  store ptr %129, ptr %memberidx55, align 8
  %130 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i160 = getelementptr inbounds %Compiler, ptr %130, i64 0, i32 5
  %131 = load ptr, ptr %memberidx1.i160, align 8
  %memberidx2.i161 = getelementptr inbounds %Array_FloError_, ptr %131, i64 0, i32 1
  %132 = load i64, ptr %memberidx2.i161, align 4
  %133 = icmp sgt i64 %132, 0
  br i1 %133, label %common.ret, label %ifend59

ifend59:                                          ; preds = %ifend54
  %memberidx61 = getelementptr inbounds %Block, ptr %129, i64 0, i32 1
  %134 = load i1, ptr %memberidx61, align 1
  br i1 %134, label %ifend64, label %if.entry62

if.entry62:                                       ; preds = %ifend59
  %memberidx65 = getelementptr inbounds %ClassMethod, ptr %115, i64 0, i32 4
  %135 = load ptr, ptr %memberidx65, align 8
  %memberidx66 = getelementptr inbounds %FunctionType, ptr %135, i64 0, i32 2
  %136 = load ptr, ptr %memberidx66, align 8
  %137 = load i64, ptr %136, align 4
  %138 = icmp eq i64 %137, 10
  br i1 %138, label %if.entry68, label %else69

ifend64:                                          ; preds = %ifend59, %Array_Statement____sl__.exit
  store ptr %111, ptr %memberidx44, align 8
  %139 = load ptr, ptr %0, align 8
  %140 = load ptr, ptr %memberidx50, align 8
  %141 = load ptr, ptr %139, align 8
  %142 = load i64, ptr %140, align 4
  %143 = load ptr, ptr %141, align 8
  %144 = getelementptr inbounds ptr, ptr %143, i64 %142
  %145 = load ptr, ptr %144, align 8
  %memberidx2.i162 = getelementptr inbounds %Module, ptr %145, i64 0, i32 7
  %146 = load ptr, ptr %memberidx2.i162, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %140, i64 0, i32 1
  %147 = load i64, ptr %memberidx3.i, align 4
  %148 = load ptr, ptr %146, align 8
  %149 = getelementptr inbounds ptr, ptr %148, i64 %147
  %150 = load ptr, ptr %149, align 8
  %memberidx79 = getelementptr inbounds %Scope, ptr %150, i64 0, i32 5
  %151 = load ptr, ptr %memberidx79, align 8
  store ptr %151, ptr %memberidx49, align 8
  br label %for.incr40

if.entry68:                                       ; preds = %if.entry62
  %152 = load ptr, ptr %129, align 8
  %153 = tail call ptr @malloc(i32 16)
  store i64 7, ptr %153, align 4
  %memberidx.i163 = getelementptr inbounds %ReturnStatement, ptr %153, i64 0, i32 1
  store ptr null, ptr %memberidx.i163, align 8
  %memberidx.i164 = getelementptr inbounds %Array_Statement_, ptr %152, i64 0, i32 1
  %154 = load i64, ptr %memberidx.i164, align 4
  %155 = add i64 %154, 1
  %memberidx.i.i165 = getelementptr inbounds %Array_Statement_, ptr %152, i64 0, i32 2
  %156 = load i64, ptr %memberidx.i.i165, align 4
  %157 = icmp slt i64 %156, %155
  %.pre210 = load ptr, ptr %152, align 8
  br i1 %157, label %while.entry.i.i, label %Array_Statement____sl__.exit

while.entry.i.i:                                  ; preds = %if.entry68, %while.entry.i.i
  %158 = phi ptr [ %162, %while.entry.i.i ], [ %.pre210, %if.entry68 ]
  %159 = phi i64 [ %163, %while.entry.i.i ], [ %156, %if.entry68 ]
  %160 = shl nuw i64 %159, 1
  store i64 %160, ptr %memberidx.i.i165, align 4
  %161 = shl i64 %159, 4
  %162 = tail call ptr @realloc(ptr %158, i64 %161)
  store ptr %162, ptr %152, align 8
  %163 = load i64, ptr %memberidx.i.i165, align 4
  %164 = icmp slt i64 %163, %155
  br i1 %164, label %while.entry.i.i, label %Array_Statement____sl__.exit.loopexit

Array_Statement____sl__.exit.loopexit:            ; preds = %while.entry.i.i
  %.pre211 = load i64, ptr %memberidx.i164, align 4
  %.pre213 = add nsw i64 %.pre211, 1
  br label %Array_Statement____sl__.exit

Array_Statement____sl__.exit:                     ; preds = %if.entry68, %Array_Statement____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre213, %Array_Statement____sl__.exit.loopexit ], [ %155, %if.entry68 ]
  %165 = phi ptr [ %162, %Array_Statement____sl__.exit.loopexit ], [ %.pre210, %if.entry68 ]
  %166 = phi i64 [ %.pre211, %Array_Statement____sl__.exit.loopexit ], [ %154, %if.entry68 ]
  store i64 %.pre-phi, ptr %memberidx.i164, align 4
  %167 = getelementptr inbounds ptr, ptr %165, i64 %166
  store ptr %153, ptr %167, align 8
  br label %ifend64

else69:                                           ; preds = %if.entry62
  %168 = tail call ptr @malloc(i32 38)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(38) %168, ptr noundef nonnull align 8 dereferenceable(38) @156, i64 38, i1 false)
  %169 = tail call ptr @malloc(i32 24)
  store ptr %168, ptr %169, align 8
  %memberidx1.i.i166 = getelementptr inbounds %String, ptr %169, i64 0, i32 1
  store i64 38, ptr %memberidx1.i.i166, align 4
  %memberidx2.i.i167 = getelementptr inbounds %String, ptr %169, i64 0, i32 2
  store i64 38, ptr %memberidx2.i.i167, align 4
  %memberidx73 = getelementptr inbounds %MethodNode, ptr %120, i64 0, i32 4
  %170 = load ptr, ptr %memberidx73, align 8
  %171 = load ptr, ptr %170, align 8
  %172 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i169 = getelementptr inbounds %Compiler, ptr %172, i64 0, i32 5
  %173 = load ptr, ptr %memberidx1.i169, align 8
  %174 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %174, align 4
  %memberidx1.i.i170 = getelementptr inbounds %FloError, ptr %174, i64 0, i32 2
  store ptr %171, ptr %memberidx1.i.i170, align 8
  %memberidx2.i.i171 = getelementptr inbounds %FloError, ptr %174, i64 0, i32 1
  store ptr %169, ptr %memberidx2.i.i171, align 8
  %memberidx.i.i172 = getelementptr inbounds %Array_FloError_, ptr %173, i64 0, i32 1
  %175 = load i64, ptr %memberidx.i.i172, align 4
  %176 = add i64 %175, 1
  %memberidx.i.i.i173 = getelementptr inbounds %Array_FloError_, ptr %173, i64 0, i32 2
  %177 = load i64, ptr %memberidx.i.i.i173, align 4
  %178 = icmp slt i64 %177, %176
  %.pre207 = load ptr, ptr %173, align 8
  br i1 %178, label %while.entry.i.i.i174, label %TypeChecker_error.exit175

while.entry.i.i.i174:                             ; preds = %else69, %while.entry.i.i.i174
  %179 = phi ptr [ %183, %while.entry.i.i.i174 ], [ %.pre207, %else69 ]
  %180 = phi i64 [ %184, %while.entry.i.i.i174 ], [ %177, %else69 ]
  %181 = shl nuw i64 %180, 1
  store i64 %181, ptr %memberidx.i.i.i173, align 4
  %182 = shl i64 %180, 4
  %183 = tail call ptr @realloc(ptr %179, i64 %182)
  store ptr %183, ptr %173, align 8
  %184 = load i64, ptr %memberidx.i.i.i173, align 4
  %185 = icmp slt i64 %184, %176
  br i1 %185, label %while.entry.i.i.i174, label %TypeChecker_error.exit175.loopexit

TypeChecker_error.exit175.loopexit:               ; preds = %while.entry.i.i.i174
  %.pre208 = load i64, ptr %memberidx.i.i172, align 4
  %.pre214 = add nsw i64 %.pre208, 1
  br label %TypeChecker_error.exit175

TypeChecker_error.exit175:                        ; preds = %else69, %TypeChecker_error.exit175.loopexit
  %.pre-phi215 = phi i64 [ %.pre214, %TypeChecker_error.exit175.loopexit ], [ %176, %else69 ]
  %186 = phi ptr [ %183, %TypeChecker_error.exit175.loopexit ], [ %.pre207, %else69 ]
  %187 = phi i64 [ %.pre208, %TypeChecker_error.exit175.loopexit ], [ %175, %else69 ]
  store i64 %.pre-phi215, ptr %memberidx.i.i172, align 4
  %188 = getelementptr inbounds ptr, ptr %186, i64 %187
  store ptr %174, ptr %188, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %1, ptr %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %5 = load ptr, ptr %memberidx, align 8
  %6 = load ptr, ptr %5, align 8
  %7 = icmp eq ptr %2, null
  %8 = tail call ptr @malloc(i32 1)
  store i8 64, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %9, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %9, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  %10 = load i64, ptr %memberidx.i, align 4
  %11 = icmp slt i64 %10, 1
  br i1 %11, label %String_starts_with.exit, label %ifend.i

ifend.i:                                          ; preds = %3
  %12 = load ptr, ptr %1, align 8
  %13 = tail call i64 @memcmp(ptr %12, ptr nonnull %8, i64 1)
  %14 = icmp eq i64 %13, 0
  br label %String_starts_with.exit

String_starts_with.exit:                          ; preds = %3, %ifend.i
  %common.ret.op.i = phi i1 [ %14, %ifend.i ], [ false, %3 ]
  %15 = or i1 %7, %common.ret.op.i
  br i1 %15, label %ifend, label %if.entry

if.entry:                                         ; preds = %String_starts_with.exit
  %memberidx.i54 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %16 = load ptr, ptr %memberidx.i54, align 8
  %17 = load i64, ptr %16, align 4
  %18 = load ptr, ptr %0, align 8
  %19 = load ptr, ptr %18, align 8
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr inbounds ptr, ptr %20, i64 %17
  %22 = load ptr, ptr %21, align 8
  %23 = load ptr, ptr %22, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i.i, align 4
  %25 = trunc i64 %24 to i32
  %26 = add i32 %25, 1
  %27 = tail call ptr @malloc(i32 %26)
  %28 = load ptr, ptr %23, align 8
  %29 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 8 %28, i64 %29, i1 false)
  %30 = getelementptr inbounds i8, ptr %27, i64 %29
  store i8 0, ptr %30, align 1
  %31 = tail call ptr @dirname(ptr %27)
  %32 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %31)
  %33 = trunc i64 %32 to i32
  %34 = tail call ptr @malloc(i32 %33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %31, i64 %32, i1 false)
  %35 = tail call ptr @malloc(i32 24)
  store ptr %34, ptr %35, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %35, i64 0, i32 1
  store i64 %32, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %35, i64 0, i32 2
  store i64 %32, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %36 = add i32 %33, 1
  %37 = tail call ptr @malloc(i32 %36)
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 8 %34, i64 %32, i1 false)
  %38 = getelementptr inbounds i8, ptr %37, i64 %32
  store i8 0, ptr %38, align 1
  %39 = load i64, ptr %memberidx.i, align 4
  %40 = trunc i64 %39 to i32
  %41 = add i32 %40, 1
  %42 = tail call ptr @malloc(i32 %41)
  %43 = load ptr, ptr %1, align 8
  %44 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %43, i64 %44, i1 false)
  %45 = getelementptr inbounds i8, ptr %42, i64 %44
  store i8 0, ptr %45, align 1
  %46 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @8, ptr %37, ptr %42)
  %47 = load ptr, ptr %4, align 8
  %48 = call ptr @malloc(i32 24)
  store ptr %47, ptr %48, align 8
  %memberidx1.i.i56 = getelementptr inbounds %String, ptr %48, i64 0, i32 1
  store i64 %46, ptr %memberidx1.i.i56, align 4
  %memberidx2.i.i57 = getelementptr inbounds %String, ptr %48, i64 0, i32 2
  store i64 %46, ptr %memberidx2.i.i57, align 4
  call void @free(ptr %37)
  call void @free(ptr %42)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %ifend

ifend:                                            ; preds = %String_starts_with.exit, %if.entry
  %filepath.0 = phi ptr [ %48, %if.entry ], [ %1, %String_starts_with.exit ]
  %49 = load ptr, ptr %memberidx, align 8
  %50 = call fastcc ptr @Compiler_register_file(ptr %49, ptr nonnull %filepath.0)
  %51 = load i64, ptr %50, align 4
  %52 = load ptr, ptr %0, align 8
  %53 = load ptr, ptr %52, align 8
  %memberidx7 = getelementptr inbounds %Array_Module_, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx7, align 4
  %55 = icmp slt i64 %51, %54
  br i1 %55, label %if.entry8, label %ifend10

common.ret:                                       ; preds = %ifend27, %ifend22, %ifend15, %ifend30, %TypeChecker_error.exit, %if.entry8
  %common.ret.op = phi ptr [ %58, %if.entry8 ], [ null, %TypeChecker_error.exit ], [ %102, %ifend30 ], [ null, %ifend15 ], [ null, %ifend22 ], [ null, %ifend27 ]
  ret ptr %common.ret.op

if.entry8:                                        ; preds = %ifend
  %56 = load ptr, ptr %53, align 8
  %57 = getelementptr inbounds ptr, ptr %56, i64 %51
  %58 = load ptr, ptr %57, align 8
  br label %common.ret

ifend10:                                          ; preds = %ifend
  %59 = load ptr, ptr %memberidx, align 8
  %60 = call fastcc i1 @Compiler_set_current_file(ptr %59, ptr nonnull %50)
  br i1 %60, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend10
  %61 = load i64, ptr %memberidx.i, align 4
  %62 = trunc i64 %61 to i32
  %63 = add i32 %62, 1
  %64 = call ptr @malloc(i32 %63)
  %65 = load ptr, ptr %1, align 8
  %66 = load i64, ptr %memberidx.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %64, ptr align 8 %65, i64 %66, i1 false)
  %67 = getelementptr inbounds i8, ptr %64, i64 %66
  store i8 0, ptr %67, align 1
  %68 = alloca ptr, align 8
  %69 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %68, ptr nonnull @40, ptr %64)
  %70 = load ptr, ptr %68, align 8
  %71 = tail call ptr @malloc(i32 24)
  store ptr %70, ptr %71, align 8
  %memberidx1.i59 = getelementptr inbounds %String, ptr %71, i64 0, i32 1
  store i64 %69, ptr %memberidx1.i59, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %71, i64 0, i32 2
  store i64 %69, ptr %memberidx2.i, align 4
  tail call void @free(ptr %64)
  %72 = load ptr, ptr %memberidx, align 8
  %memberidx1.i61 = getelementptr inbounds %Compiler, ptr %72, i64 0, i32 5
  %73 = load ptr, ptr %memberidx1.i61, align 8
  %74 = call ptr @malloc(i32 24)
  store i64 3, ptr %74, align 4
  %memberidx1.i.i62 = getelementptr inbounds %FloError, ptr %74, i64 0, i32 2
  store ptr %2, ptr %memberidx1.i.i62, align 8
  %memberidx2.i.i63 = getelementptr inbounds %FloError, ptr %74, i64 0, i32 1
  store ptr %71, ptr %memberidx2.i.i63, align 8
  %memberidx.i.i64 = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 1
  %75 = load i64, ptr %memberidx.i.i64, align 4
  %76 = add i64 %75, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %73, i64 0, i32 2
  %77 = load i64, ptr %memberidx.i.i.i, align 4
  %78 = icmp slt i64 %77, %76
  %.pre = load ptr, ptr %73, align 8
  br i1 %78, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry13, %while.entry.i.i.i
  %79 = phi ptr [ %83, %while.entry.i.i.i ], [ %.pre, %if.entry13 ]
  %80 = phi i64 [ %84, %while.entry.i.i.i ], [ %77, %if.entry13 ]
  %81 = shl nuw i64 %80, 1
  store i64 %81, ptr %memberidx.i.i.i, align 4
  %82 = shl i64 %80, 4
  %83 = call ptr @realloc(ptr %79, i64 %82)
  store ptr %83, ptr %73, align 8
  %84 = load i64, ptr %memberidx.i.i.i, align 4
  %85 = icmp slt i64 %84, %76
  br i1 %85, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre75 = load i64, ptr %memberidx.i.i64, align 4
  %.pre77 = add nsw i64 %.pre75, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry13, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre77, %TypeChecker_error.exit.loopexit ], [ %76, %if.entry13 ]
  %86 = phi ptr [ %83, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry13 ]
  %87 = phi i64 [ %.pre75, %TypeChecker_error.exit.loopexit ], [ %75, %if.entry13 ]
  store i64 %.pre-phi, ptr %memberidx.i.i64, align 4
  %88 = getelementptr inbounds ptr, ptr %86, i64 %87
  store ptr %74, ptr %88, align 8
  br label %common.ret

ifend15:                                          ; preds = %ifend10
  %89 = load ptr, ptr %memberidx, align 8
  %memberidx17 = getelementptr inbounds %Compiler, ptr %89, i64 0, i32 2
  %90 = load ptr, ptr %memberidx17, align 8
  %memberidx19 = getelementptr inbounds %Compiler, ptr %89, i64 0, i32 5
  %91 = load ptr, ptr %memberidx19, align 8
  %92 = call fastcc ptr @Lexer_tokenize(ptr %90, ptr %91)
  %93 = load ptr, ptr %memberidx, align 8
  %memberidx1.i66 = getelementptr inbounds %Compiler, ptr %93, i64 0, i32 5
  %94 = load ptr, ptr %memberidx1.i66, align 8
  %memberidx2.i67 = getelementptr inbounds %Array_FloError_, ptr %94, i64 0, i32 1
  %95 = load i64, ptr %memberidx2.i67, align 4
  %96 = icmp sgt i64 %95, 0
  br i1 %96, label %common.ret, label %ifend22

ifend22:                                          ; preds = %ifend15
  %97 = call fastcc ptr @Parser_parse(ptr %92, ptr nonnull %94)
  %98 = load ptr, ptr %memberidx, align 8
  %memberidx1.i69 = getelementptr inbounds %Compiler, ptr %98, i64 0, i32 5
  %99 = load ptr, ptr %memberidx1.i69, align 8
  %memberidx2.i70 = getelementptr inbounds %Array_FloError_, ptr %99, i64 0, i32 1
  %100 = load i64, ptr %memberidx2.i70, align 4
  %101 = icmp sgt i64 %100, 0
  br i1 %101, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend22
  %102 = call fastcc ptr @TypeChecker_check_module(ptr nonnull %0, ptr %97, ptr nonnull %filepath.0)
  %103 = load ptr, ptr %memberidx, align 8
  %memberidx1.i72 = getelementptr inbounds %Compiler, ptr %103, i64 0, i32 5
  %104 = load ptr, ptr %memberidx1.i72, align 8
  %memberidx2.i73 = getelementptr inbounds %Array_FloError_, ptr %104, i64 0, i32 1
  %105 = load i64, ptr %memberidx2.i73, align 4
  %106 = icmp sgt i64 %105, 0
  br i1 %106, label %common.ret, label %ifend30

ifend30:                                          ; preds = %ifend27
  %107 = call fastcc i1 @Compiler_set_current_file(ptr nonnull %103, ptr %6)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_fields(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx1 = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 3
  %3 = load ptr, ptr %memberidx1, align 8
  %memberidx2284 = getelementptr inbounds %Array_FieldNode_, ptr %3, i64 0, i32 1
  %4 = load i64, ptr %memberidx2284, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx = getelementptr inbounds %Class, ptr %1, i64 0, i32 9
  %6 = load i64, ptr %memberidx, align 4
  %memberidx.i166 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %memberidx21 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx82 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx89 = getelementptr inbounds %Class, ptr %1, i64 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassField____sl__.exit
  %7 = phi ptr [ %3, %for.body.lr.ph ], [ %270, %Array_ClassField____sl__.exit ]
  %current_field_offset.0286 = phi i64 [ %6, %for.body.lr.ph ], [ %current_field_offset.1, %Array_ClassField____sl__.exit ]
  %i.0285 = phi i64 [ 0, %for.body.lr.ph ], [ %269, %Array_ClassField____sl__.exit ]
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %i.0285
  %10 = load ptr, ptr %9, align 8
  %11 = tail call ptr @malloc(i32 49)
  %memberidx.i = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 1
  %memberidx4 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 3
  %12 = load ptr, ptr %10, align 8
  %memberidx6 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx6, align 8
  store ptr %13, ptr %memberidx4, align 8
  %14 = call fastcc i1 @is_operator_overload_name(ptr %13)
  br i1 %14, label %if.entry, label %ifend

common.ret:                                       ; preds = %Array_ClassField____sl__.exit, %ifend, %if.entry54, %for.entry, %TypeChecker_error.exit262, %TypeChecker_error.exit235, %TypeChecker_error.exit218, %TypeChecker_error.exit188
  ret void

if.entry:                                         ; preds = %for.body
  %15 = load ptr, ptr %memberidx4, align 8
  %16 = call ptr @malloc(i32 75)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %16, ptr noundef nonnull align 8 dereferenceable(75) @136, i64 75, i1 false)
  %17 = call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  store i64 75, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %17, i64 0, i32 2
  store i64 75, ptr %memberidx2.i.i, align 4
  %memberidx.i163 = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  %18 = load i64, ptr %memberidx.i163, align 4
  %19 = add nuw i64 %18, 75
  %20 = trunc i64 %19 to i32
  %21 = call ptr @malloc(i32 %20)
  %22 = load ptr, ptr %15, align 8
  %23 = load i64, ptr %memberidx.i163, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %22, i64 %23, i1 false)
  %24 = getelementptr inbounds i8, ptr %21, i64 %23
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(75) %24, ptr noundef nonnull align 8 dereferenceable(75) %16, i64 75, i1 false)
  %25 = call ptr @malloc(i32 24)
  store ptr %21, ptr %25, align 8
  %memberidx1.i.i164 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  store i64 %19, ptr %memberidx1.i.i164, align 4
  %memberidx2.i.i165 = getelementptr inbounds %String, ptr %25, i64 0, i32 2
  store i64 %19, ptr %memberidx2.i.i165, align 4
  %26 = load ptr, ptr %10, align 8
  %memberidx10 = getelementptr inbounds %Token, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx10, align 8
  %28 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i167 = getelementptr inbounds %Compiler, ptr %28, i64 0, i32 5
  %29 = load ptr, ptr %memberidx1.i167, align 8
  %30 = call ptr @malloc(i32 24)
  store i64 1, ptr %30, align 4
  %memberidx1.i.i168 = getelementptr inbounds %FloError, ptr %30, i64 0, i32 2
  store ptr %27, ptr %memberidx1.i.i168, align 8
  %memberidx2.i.i169 = getelementptr inbounds %FloError, ptr %30, i64 0, i32 1
  store ptr %25, ptr %memberidx2.i.i169, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i, align 4
  %32 = add i64 %31, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 2
  %33 = load i64, ptr %memberidx.i.i.i, align 4
  %34 = icmp slt i64 %33, %32
  %.pre = load ptr, ptr %29, align 8
  br i1 %34, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %35 = phi ptr [ %39, %while.entry.i.i.i ], [ %.pre, %if.entry ]
  %36 = phi i64 [ %40, %while.entry.i.i.i ], [ %33, %if.entry ]
  %37 = shl nuw i64 %36, 1
  store i64 %37, ptr %memberidx.i.i.i, align 4
  %38 = shl i64 %36, 4
  %39 = call ptr @realloc(ptr %35, i64 %38)
  store ptr %39, ptr %29, align 8
  %40 = load i64, ptr %memberidx.i.i.i, align 4
  %41 = icmp slt i64 %40, %32
  br i1 %41, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre297 = load i64, ptr %memberidx.i.i, align 4
  %.pre323 = add nsw i64 %.pre297, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre323, %TypeChecker_error.exit.loopexit ], [ %32, %if.entry ]
  %42 = phi ptr [ %39, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry ]
  %43 = phi i64 [ %.pre297, %TypeChecker_error.exit.loopexit ], [ %31, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %44 = getelementptr inbounds ptr, ptr %42, i64 %43
  store ptr %30, ptr %44, align 8
  br label %ifend

ifend:                                            ; preds = %for.body, %TypeChecker_error.exit
  %memberidx11 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 2
  %memberidx12 = getelementptr inbounds %FieldNode, ptr %10, i64 0, i32 1
  %45 = load i64, ptr %memberidx12, align 4
  store i64 %45, ptr %memberidx11, align 4
  %46 = tail call ptr @malloc(i32 24)
  %47 = load ptr, ptr %1, align 8
  store i64 1, ptr %46, align 4
  %memberidx1.i170 = getelementptr inbounds %PropId, ptr %46, i64 0, i32 1
  store ptr %47, ptr %memberidx1.i170, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %46, i64 0, i32 2
  store i64 %i.0285, ptr %memberidx2.i, align 4
  store ptr %46, ptr %11, align 8
  %memberidx15 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 4
  %memberidx16 = getelementptr inbounds %FieldNode, ptr %10, i64 0, i32 3
  %48 = load ptr, ptr %memberidx16, align 8
  %49 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %48)
  store ptr %49, ptr %memberidx15, align 8
  %memberidx17 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 5
  store i64 %current_field_offset.0286, ptr %memberidx17, align 4
  %50 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i172 = getelementptr inbounds %Compiler, ptr %50, i64 0, i32 5
  %51 = load ptr, ptr %memberidx1.i172, align 8
  %memberidx2.i173 = getelementptr inbounds %Array_FloError_, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx2.i173, align 4
  %53 = icmp sgt i64 %52, 0
  br i1 %53, label %common.ret, label %ifend20

ifend20:                                          ; preds = %ifend
  %54 = load ptr, ptr %memberidx21, align 8
  %55 = load ptr, ptr %memberidx4, align 8
  %56 = call fastcc i64 @Map_String_PropId__hash_fnc(ptr %55)
  %memberidx.i174 = getelementptr inbounds %Map_String_PropId_, ptr %54, i64 0, i32 1
  %57 = load i64, ptr %memberidx.i174, align 4
  %58 = urem i64 %56, %57
  %59 = load ptr, ptr %54, align 8
  %60 = getelementptr inbounds ptr, ptr %59, i64 %58
  %61 = load ptr, ptr %60, align 8
  %.not.i = icmp eq ptr %61, null
  br i1 %.not.i, label %ifend25, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %ifend20
  %memberidx1.i.i176 = getelementptr inbounds %String, ptr %55, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %62 = phi ptr [ %72, %else.i ], [ %59, %while.entry.i.preheader ]
  %63 = phi i64 [ %73, %else.i ], [ %57, %while.entry.i.preheader ]
  %64 = phi ptr [ %77, %else.i ], [ %61, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %75, %else.i ], [ %58, %while.entry.i.preheader ]
  %65 = load ptr, ptr %64, align 8
  %memberidx.i.i175 = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  %66 = load i64, ptr %memberidx.i.i175, align 4
  %67 = load i64, ptr %memberidx1.i.i176, align 4
  %.not.i.i = icmp eq i64 %66, %67
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %68 = load ptr, ptr %65, align 8
  %69 = load ptr, ptr %55, align 8
  %70 = call i64 @memcmp(ptr %68, ptr %69, i64 %66)
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre299 = load i64, ptr %memberidx.i174, align 4
  %.pre300 = load ptr, ptr %54, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre301.pre = load ptr, ptr %54, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre301.pre, i64 %hash.0.i
  %.pre302.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre302.pre, null
  br i1 %.not25.i, label %ifend25, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %72 = phi ptr [ %.pre300, %ifend.i.i.else.i_crit_edge ], [ %62, %while.entry.i ]
  %73 = phi i64 [ %.pre299, %ifend.i.i.else.i_crit_edge ], [ %63, %while.entry.i ]
  %74 = add nuw i64 %hash.0.i, 1
  %75 = urem i64 %74, %73
  %76 = getelementptr inbounds ptr, ptr %72, i64 %75
  %77 = load ptr, ptr %76, align 8
  %.not26.i = icmp eq ptr %77, null
  br i1 %.not26.i, label %ifend25, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre302.pre, i64 0, i32 1
  %78 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %78, null
  br i1 %.not, label %ifend25, label %if.entry23

if.entry23:                                       ; preds = %Map_String_PropId____getitem__.exit
  %memberidx26 = getelementptr inbounds %PropId, ptr %78, i64 0, i32 1
  %79 = load ptr, ptr %memberidx26, align 8
  %80 = load ptr, ptr %1, align 8
  %81 = icmp eq ptr %79, %80
  br i1 %81, label %if.entry28, label %ifend30

ifend25:                                          ; preds = %else.i, %ifend20, %while.end.i, %ifend40, %Map_String_PropId____getitem__.exit
  %memberidx53 = getelementptr inbounds %FieldNode, ptr %10, i64 0, i32 2
  %82 = load ptr, ptr %memberidx53, align 8
  %.not161 = icmp eq ptr %82, null
  br i1 %.not161, label %else55, label %if.entry54

if.entry28:                                       ; preds = %if.entry23
  %83 = load ptr, ptr %memberidx4, align 8
  %memberidx.i177 = getelementptr inbounds %String, ptr %83, i64 0, i32 1
  %84 = load i64, ptr %memberidx.i177, align 4
  %85 = trunc i64 %84 to i32
  %86 = add i32 %85, 1
  %87 = call ptr @malloc(i32 %86)
  %88 = load ptr, ptr %83, align 8
  %89 = load i64, ptr %memberidx.i177, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %87, ptr align 8 %88, i64 %89, i1 false)
  %90 = getelementptr inbounds i8, ptr %87, i64 %89
  store i8 0, ptr %90, align 1
  %memberidx32 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %91 = load ptr, ptr %memberidx32, align 8
  %memberidx.i178 = getelementptr inbounds %String, ptr %91, i64 0, i32 1
  %92 = load i64, ptr %memberidx.i178, align 4
  %93 = trunc i64 %92 to i32
  %94 = add i32 %93, 1
  %95 = call ptr @malloc(i32 %94)
  %96 = load ptr, ptr %91, align 8
  %97 = load i64, ptr %memberidx.i178, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %95, ptr align 8 %96, i64 %97, i1 false)
  %98 = getelementptr inbounds i8, ptr %95, i64 %97
  store i8 0, ptr %98, align 1
  %99 = alloca ptr, align 8
  %100 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %99, ptr nonnull @137, ptr %87, ptr %95)
  %101 = load ptr, ptr %99, align 8
  %102 = tail call ptr @malloc(i32 24)
  store ptr %101, ptr %102, align 8
  %memberidx1.i179 = getelementptr inbounds %String, ptr %102, i64 0, i32 1
  store i64 %100, ptr %memberidx1.i179, align 4
  %memberidx2.i180 = getelementptr inbounds %String, ptr %102, i64 0, i32 2
  store i64 %100, ptr %memberidx2.i180, align 4
  tail call void @free(ptr %87)
  tail call void @free(ptr %95)
  %103 = load ptr, ptr %10, align 8
  %memberidx34 = getelementptr inbounds %Token, ptr %103, i64 0, i32 1
  %104 = load ptr, ptr %memberidx34, align 8
  %105 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i182 = getelementptr inbounds %Compiler, ptr %105, i64 0, i32 5
  %106 = load ptr, ptr %memberidx1.i182, align 8
  %107 = call ptr @malloc(i32 24)
  store i64 1, ptr %107, align 4
  %memberidx1.i.i183 = getelementptr inbounds %FloError, ptr %107, i64 0, i32 2
  store ptr %104, ptr %memberidx1.i.i183, align 8
  %memberidx2.i.i184 = getelementptr inbounds %FloError, ptr %107, i64 0, i32 1
  store ptr %102, ptr %memberidx2.i.i184, align 8
  %memberidx.i.i185 = getelementptr inbounds %Array_FloError_, ptr %106, i64 0, i32 1
  %108 = load i64, ptr %memberidx.i.i185, align 4
  %109 = add i64 %108, 1
  %memberidx.i.i.i186 = getelementptr inbounds %Array_FloError_, ptr %106, i64 0, i32 2
  %110 = load i64, ptr %memberidx.i.i.i186, align 4
  %111 = icmp slt i64 %110, %109
  %.pre309 = load ptr, ptr %106, align 8
  br i1 %111, label %while.entry.i.i.i187, label %TypeChecker_error.exit188

while.entry.i.i.i187:                             ; preds = %if.entry28, %while.entry.i.i.i187
  %112 = phi ptr [ %116, %while.entry.i.i.i187 ], [ %.pre309, %if.entry28 ]
  %113 = phi i64 [ %117, %while.entry.i.i.i187 ], [ %110, %if.entry28 ]
  %114 = shl nuw i64 %113, 1
  store i64 %114, ptr %memberidx.i.i.i186, align 4
  %115 = shl i64 %113, 4
  %116 = call ptr @realloc(ptr %112, i64 %115)
  store ptr %116, ptr %106, align 8
  %117 = load i64, ptr %memberidx.i.i.i186, align 4
  %118 = icmp slt i64 %117, %109
  br i1 %118, label %while.entry.i.i.i187, label %TypeChecker_error.exit188.loopexit

TypeChecker_error.exit188.loopexit:               ; preds = %while.entry.i.i.i187
  %.pre310 = load i64, ptr %memberidx.i.i185, align 4
  %.pre330 = add nsw i64 %.pre310, 1
  br label %TypeChecker_error.exit188

TypeChecker_error.exit188:                        ; preds = %if.entry28, %TypeChecker_error.exit188.loopexit
  %.pre-phi331 = phi i64 [ %.pre330, %TypeChecker_error.exit188.loopexit ], [ %109, %if.entry28 ]
  %119 = phi ptr [ %116, %TypeChecker_error.exit188.loopexit ], [ %.pre309, %if.entry28 ]
  %120 = phi i64 [ %.pre310, %TypeChecker_error.exit188.loopexit ], [ %108, %if.entry28 ]
  store i64 %.pre-phi331, ptr %memberidx.i.i185, align 4
  %121 = getelementptr inbounds ptr, ptr %119, i64 %120
  store ptr %107, ptr %121, align 8
  br label %common.ret

ifend30:                                          ; preds = %if.entry23
  %122 = load ptr, ptr %0, align 8
  %123 = load ptr, ptr %122, align 8
  %124 = load i64, ptr %79, align 4
  %125 = load ptr, ptr %123, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %124
  %127 = load ptr, ptr %126, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %127, i64 0, i32 3
  %128 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %79, i64 0, i32 2
  %129 = load i64, ptr %memberidx3.i.i.i, align 4
  %130 = load ptr, ptr %128, align 8
  %131 = getelementptr inbounds ptr, ptr %130, i64 %129
  %132 = load ptr, ptr %131, align 8
  %133 = load i64, ptr %78, align 4
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %if.entry.i201, label %ifend.i205

if.entry.i201:                                    ; preds = %ifend30
  %memberidx1.i191 = getelementptr inbounds %Class, ptr %132, i64 0, i32 5
  %135 = load ptr, ptr %memberidx1.i191, align 8
  %memberidx2.i192 = getelementptr inbounds %PropId, ptr %78, i64 0, i32 2
  %136 = load i64, ptr %memberidx2.i192, align 4
  %137 = load ptr, ptr %135, align 8
  %138 = getelementptr inbounds ptr, ptr %137, i64 %136
  %139 = load ptr, ptr %138, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %139, i64 0, i32 4
  %memberidx3.i200 = getelementptr inbounds %ClassMethod, ptr %139, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i205:                                       ; preds = %ifend30
  %memberidx4.i = getelementptr inbounds %Class, ptr %132, i64 0, i32 4
  %140 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %78, i64 0, i32 2
  %141 = load i64, ptr %memberidx5.i, align 4
  %142 = load ptr, ptr %140, align 8
  %143 = getelementptr inbounds ptr, ptr %142, i64 %141
  %144 = load ptr, ptr %143, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %144, i64 0, i32 4
  %memberidx6.i204 = getelementptr inbounds %ClassField, ptr %144, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i201, %ifend.i205
  %common.ret.op.i190271.in = phi ptr [ %memberidx3.i, %if.entry.i201 ], [ %memberidx6.i, %ifend.i205 ]
  %common.ret.op.in.i196 = phi ptr [ %memberidx3.i200, %if.entry.i201 ], [ %memberidx6.i204, %ifend.i205 ]
  %common.ret.op.i190271 = load ptr, ptr %common.ret.op.i190271.in, align 8
  %common.ret.op.i197 = load i64, ptr %common.ret.op.in.i196, align 4
  %145 = load ptr, ptr %memberidx15, align 8
  %146 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i190271, ptr %145)
  br i1 %146, label %ifend40, label %if.entry38

if.entry38:                                       ; preds = %get_class_prop_visibility.exit
  %147 = load ptr, ptr %memberidx4, align 8
  %memberidx.i206 = getelementptr inbounds %String, ptr %147, i64 0, i32 1
  %148 = load i64, ptr %memberidx.i206, align 4
  %149 = trunc i64 %148 to i32
  %150 = add i32 %149, 1
  %151 = call ptr @malloc(i32 %150)
  %152 = load ptr, ptr %147, align 8
  %153 = load i64, ptr %memberidx.i206, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %151, ptr align 8 %152, i64 %153, i1 false)
  %154 = getelementptr inbounds i8, ptr %151, i64 %153
  store i8 0, ptr %154, align 1
  %memberidx42 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %155 = load ptr, ptr %memberidx42, align 8
  %memberidx.i207 = getelementptr inbounds %String, ptr %155, i64 0, i32 1
  %156 = load i64, ptr %memberidx.i207, align 4
  %157 = trunc i64 %156 to i32
  %158 = add i32 %157, 1
  %159 = call ptr @malloc(i32 %158)
  %160 = load ptr, ptr %155, align 8
  %161 = load i64, ptr %memberidx.i207, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %159, ptr align 8 %160, i64 %161, i1 false)
  %162 = getelementptr inbounds i8, ptr %159, i64 %161
  store i8 0, ptr %162, align 1
  %163 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i190271)
  %memberidx.i208 = getelementptr inbounds %String, ptr %163, i64 0, i32 1
  %164 = load i64, ptr %memberidx.i208, align 4
  %165 = trunc i64 %164 to i32
  %166 = add i32 %165, 1
  %167 = call ptr @malloc(i32 %166)
  %168 = load ptr, ptr %163, align 8
  %169 = load i64, ptr %memberidx.i208, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %167, ptr align 8 %168, i64 %169, i1 false)
  %170 = getelementptr inbounds i8, ptr %167, i64 %169
  store i8 0, ptr %170, align 1
  %171 = alloca ptr, align 8
  %172 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %171, ptr nonnull @138, ptr %151, ptr %159, ptr %167)
  %173 = load ptr, ptr %171, align 8
  %174 = tail call ptr @malloc(i32 24)
  store ptr %173, ptr %174, align 8
  %memberidx1.i209 = getelementptr inbounds %String, ptr %174, i64 0, i32 1
  store i64 %172, ptr %memberidx1.i209, align 4
  %memberidx2.i210 = getelementptr inbounds %String, ptr %174, i64 0, i32 2
  store i64 %172, ptr %memberidx2.i210, align 4
  tail call void @free(ptr %151)
  tail call void @free(ptr %159)
  tail call void @free(ptr %167)
  %175 = load ptr, ptr %10, align 8
  %memberidx44 = getelementptr inbounds %Token, ptr %175, i64 0, i32 1
  %176 = load ptr, ptr %memberidx44, align 8
  %177 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i212 = getelementptr inbounds %Compiler, ptr %177, i64 0, i32 5
  %178 = load ptr, ptr %memberidx1.i212, align 8
  %179 = call ptr @malloc(i32 24)
  store i64 5, ptr %179, align 4
  %memberidx1.i.i213 = getelementptr inbounds %FloError, ptr %179, i64 0, i32 2
  store ptr %176, ptr %memberidx1.i.i213, align 8
  %memberidx2.i.i214 = getelementptr inbounds %FloError, ptr %179, i64 0, i32 1
  store ptr %174, ptr %memberidx2.i.i214, align 8
  %memberidx.i.i215 = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 1
  %180 = load i64, ptr %memberidx.i.i215, align 4
  %181 = add i64 %180, 1
  %memberidx.i.i.i216 = getelementptr inbounds %Array_FloError_, ptr %178, i64 0, i32 2
  %182 = load i64, ptr %memberidx.i.i.i216, align 4
  %183 = icmp slt i64 %182, %181
  %.pre303 = load ptr, ptr %178, align 8
  br i1 %183, label %while.entry.i.i.i217, label %TypeChecker_error.exit218

while.entry.i.i.i217:                             ; preds = %if.entry38, %while.entry.i.i.i217
  %184 = phi ptr [ %188, %while.entry.i.i.i217 ], [ %.pre303, %if.entry38 ]
  %185 = phi i64 [ %189, %while.entry.i.i.i217 ], [ %182, %if.entry38 ]
  %186 = shl nuw i64 %185, 1
  store i64 %186, ptr %memberidx.i.i.i216, align 4
  %187 = shl i64 %185, 4
  %188 = call ptr @realloc(ptr %184, i64 %187)
  store ptr %188, ptr %178, align 8
  %189 = load i64, ptr %memberidx.i.i.i216, align 4
  %190 = icmp slt i64 %189, %181
  br i1 %190, label %while.entry.i.i.i217, label %TypeChecker_error.exit218.loopexit

TypeChecker_error.exit218.loopexit:               ; preds = %while.entry.i.i.i217
  %.pre304 = load i64, ptr %memberidx.i.i215, align 4
  %.pre334 = add nsw i64 %.pre304, 1
  br label %TypeChecker_error.exit218

TypeChecker_error.exit218:                        ; preds = %if.entry38, %TypeChecker_error.exit218.loopexit
  %.pre-phi335 = phi i64 [ %.pre334, %TypeChecker_error.exit218.loopexit ], [ %181, %if.entry38 ]
  %191 = phi ptr [ %188, %TypeChecker_error.exit218.loopexit ], [ %.pre303, %if.entry38 ]
  %192 = phi i64 [ %.pre304, %TypeChecker_error.exit218.loopexit ], [ %180, %if.entry38 ]
  store i64 %.pre-phi335, ptr %memberidx.i.i215, align 4
  %193 = getelementptr inbounds ptr, ptr %191, i64 %192
  store ptr %179, ptr %193, align 8
  br label %common.ret

ifend40:                                          ; preds = %get_class_prop_visibility.exit
  %194 = load i64, ptr %memberidx11, align 4
  %.not162 = icmp eq i64 %194, %common.ret.op.i197
  br i1 %.not162, label %ifend25, label %if.entry46

if.entry46:                                       ; preds = %ifend40
  %195 = load ptr, ptr %memberidx4, align 8
  %memberidx.i219 = getelementptr inbounds %String, ptr %195, i64 0, i32 1
  %196 = load i64, ptr %memberidx.i219, align 4
  %197 = trunc i64 %196 to i32
  %198 = add i32 %197, 1
  %199 = call ptr @malloc(i32 %198)
  %200 = load ptr, ptr %195, align 8
  %201 = load i64, ptr %memberidx.i219, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %199, ptr align 8 %200, i64 %201, i1 false)
  %202 = getelementptr inbounds i8, ptr %199, i64 %201
  store i8 0, ptr %202, align 1
  %memberidx50 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %203 = load ptr, ptr %memberidx50, align 8
  %memberidx.i220 = getelementptr inbounds %String, ptr %203, i64 0, i32 1
  %204 = load i64, ptr %memberidx.i220, align 4
  %205 = trunc i64 %204 to i32
  %206 = add i32 %205, 1
  %207 = call ptr @malloc(i32 %206)
  %208 = load ptr, ptr %203, align 8
  %209 = load i64, ptr %memberidx.i220, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %207, ptr align 8 %208, i64 %209, i1 false)
  %210 = getelementptr inbounds i8, ptr %207, i64 %209
  store i8 0, ptr %210, align 1
  switch i64 %common.ret.op.i197, label %ifend3.i [
    i64 1, label %if.entry.i223
    i64 2, label %if.entry1.i
  ]

if.entry.i223:                                    ; preds = %if.entry46
  %211 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %211, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  %212 = call ptr @malloc(i32 24)
  store ptr %211, ptr %212, align 8
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry46
  %213 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %213, ptr noundef nonnull align 8 dereferenceable(6) @53, i64 6, i1 false)
  %214 = call ptr @malloc(i32 24)
  store ptr %213, ptr %214, align 8
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry46
  %215 = call ptr @malloc(i32 9)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %215, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  %216 = call ptr @malloc(i32 24)
  store ptr %215, ptr %216, align 8
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i223, %if.entry1.i, %ifend3.i
  %.sink357 = phi ptr [ %212, %if.entry.i223 ], [ %214, %if.entry1.i ], [ %216, %ifend3.i ]
  %.sink356 = phi i64 [ 7, %if.entry.i223 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %.off0 = phi i32 [ 8, %if.entry.i223 ], [ 7, %if.entry1.i ], [ 10, %ifend3.i ]
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %.sink357, i64 0, i32 1
  store i64 %.sink356, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i222 = getelementptr inbounds %String, ptr %.sink357, i64 0, i32 2
  store i64 %.sink356, ptr %memberidx2.i.i.i222, align 4
  %memberidx.i225 = getelementptr inbounds %String, ptr %.sink357, i64 0, i32 1
  %217 = call ptr @malloc(i32 %.off0)
  %218 = load ptr, ptr %.sink357, align 8
  %219 = load i64, ptr %memberidx.i225, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %217, ptr align 8 %218, i64 %219, i1 false)
  %220 = getelementptr inbounds i8, ptr %217, i64 %219
  store i8 0, ptr %220, align 1
  %221 = alloca ptr, align 8
  %222 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %221, ptr nonnull @139, ptr nonnull %199, ptr nonnull %207, ptr %217)
  %223 = load ptr, ptr %221, align 8
  %224 = tail call ptr @malloc(i32 24)
  store ptr %223, ptr %224, align 8
  %memberidx1.i226 = getelementptr inbounds %String, ptr %224, i64 0, i32 1
  store i64 %222, ptr %memberidx1.i226, align 4
  %memberidx2.i227 = getelementptr inbounds %String, ptr %224, i64 0, i32 2
  store i64 %222, ptr %memberidx2.i227, align 4
  tail call void @free(ptr nonnull %199)
  tail call void @free(ptr nonnull %207)
  tail call void @free(ptr %217)
  %225 = load ptr, ptr %10, align 8
  %memberidx52 = getelementptr inbounds %Token, ptr %225, i64 0, i32 1
  %226 = load ptr, ptr %memberidx52, align 8
  %227 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i229 = getelementptr inbounds %Compiler, ptr %227, i64 0, i32 5
  %228 = load ptr, ptr %memberidx1.i229, align 8
  %229 = call ptr @malloc(i32 24)
  store i64 4, ptr %229, align 4
  %memberidx1.i.i230 = getelementptr inbounds %FloError, ptr %229, i64 0, i32 2
  store ptr %226, ptr %memberidx1.i.i230, align 8
  %memberidx2.i.i231 = getelementptr inbounds %FloError, ptr %229, i64 0, i32 1
  store ptr %224, ptr %memberidx2.i.i231, align 8
  %memberidx.i.i232 = getelementptr inbounds %Array_FloError_, ptr %228, i64 0, i32 1
  %230 = load i64, ptr %memberidx.i.i232, align 4
  %231 = add i64 %230, 1
  %memberidx.i.i.i233 = getelementptr inbounds %Array_FloError_, ptr %228, i64 0, i32 2
  %232 = load i64, ptr %memberidx.i.i.i233, align 4
  %233 = icmp slt i64 %232, %231
  %.pre306 = load ptr, ptr %228, align 8
  br i1 %233, label %while.entry.i.i.i234, label %TypeChecker_error.exit235

while.entry.i.i.i234:                             ; preds = %dump_access.exit, %while.entry.i.i.i234
  %234 = phi ptr [ %238, %while.entry.i.i.i234 ], [ %.pre306, %dump_access.exit ]
  %235 = phi i64 [ %239, %while.entry.i.i.i234 ], [ %232, %dump_access.exit ]
  %236 = shl nuw i64 %235, 1
  store i64 %236, ptr %memberidx.i.i.i233, align 4
  %237 = shl i64 %235, 4
  %238 = call ptr @realloc(ptr %234, i64 %237)
  store ptr %238, ptr %228, align 8
  %239 = load i64, ptr %memberidx.i.i.i233, align 4
  %240 = icmp slt i64 %239, %231
  br i1 %240, label %while.entry.i.i.i234, label %TypeChecker_error.exit235.loopexit

TypeChecker_error.exit235.loopexit:               ; preds = %while.entry.i.i.i234
  %.pre307 = load i64, ptr %memberidx.i.i232, align 4
  %.pre332 = add nsw i64 %.pre307, 1
  br label %TypeChecker_error.exit235

TypeChecker_error.exit235:                        ; preds = %dump_access.exit, %TypeChecker_error.exit235.loopexit
  %.pre-phi333 = phi i64 [ %.pre332, %TypeChecker_error.exit235.loopexit ], [ %231, %dump_access.exit ]
  %241 = phi ptr [ %238, %TypeChecker_error.exit235.loopexit ], [ %.pre306, %dump_access.exit ]
  %242 = phi i64 [ %.pre307, %TypeChecker_error.exit235.loopexit ], [ %230, %dump_access.exit ]
  store i64 %.pre-phi333, ptr %memberidx.i.i232, align 4
  %243 = getelementptr inbounds ptr, ptr %241, i64 %242
  store ptr %229, ptr %243, align 8
  br label %common.ret

if.entry54:                                       ; preds = %ifend25
  %memberidx57 = getelementptr inbounds %ClassField, ptr %11, i64 0, i32 6
  %244 = load ptr, ptr %memberidx15, align 8
  %245 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %244, ptr nonnull %82)
  store ptr %245, ptr %memberidx57, align 8
  %246 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i237 = getelementptr inbounds %Compiler, ptr %246, i64 0, i32 5
  %247 = load ptr, ptr %memberidx1.i237, align 8
  %memberidx2.i238 = getelementptr inbounds %Array_FloError_, ptr %247, i64 0, i32 1
  %248 = load i64, ptr %memberidx2.i238, align 4
  %249 = icmp sgt i64 %248, 0
  br i1 %249, label %common.ret, label %ifend62

else55:                                           ; preds = %ifend25
  store i1 false, ptr %memberidx.i, align 1
  %250 = load ptr, ptr %memberidx21, align 8
  %251 = load ptr, ptr %memberidx4, align 8
  %252 = load ptr, ptr %11, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %250, ptr %251, ptr %252)
  %253 = add nsw i64 %current_field_offset.0286, 1
  br label %ifend56

ifend56:                                          ; preds = %else55, %ifend78
  %current_field_offset.1 = phi i64 [ %current_field_offset.0286, %ifend78 ], [ %253, %else55 ]
  %254 = load ptr, ptr %memberidx89, align 8
  %memberidx.i239 = getelementptr inbounds %Array_ClassField_, ptr %254, i64 0, i32 1
  %255 = load i64, ptr %memberidx.i239, align 4
  %256 = add i64 %255, 1
  %memberidx.i.i240 = getelementptr inbounds %Array_ClassField_, ptr %254, i64 0, i32 2
  %257 = load i64, ptr %memberidx.i.i240, align 4
  %258 = icmp slt i64 %257, %256
  %.pre318 = load ptr, ptr %254, align 8
  br i1 %258, label %while.entry.i.i, label %Array_ClassField____sl__.exit

while.entry.i.i:                                  ; preds = %ifend56, %while.entry.i.i
  %259 = phi ptr [ %263, %while.entry.i.i ], [ %.pre318, %ifend56 ]
  %260 = phi i64 [ %264, %while.entry.i.i ], [ %257, %ifend56 ]
  %261 = shl nuw i64 %260, 1
  store i64 %261, ptr %memberidx.i.i240, align 4
  %262 = shl i64 %260, 4
  %263 = call ptr @realloc(ptr %259, i64 %262)
  store ptr %263, ptr %254, align 8
  %264 = load i64, ptr %memberidx.i.i240, align 4
  %265 = icmp slt i64 %264, %256
  br i1 %265, label %while.entry.i.i, label %Array_ClassField____sl__.exit.loopexit

Array_ClassField____sl__.exit.loopexit:           ; preds = %while.entry.i.i
  %.pre319 = load i64, ptr %memberidx.i239, align 4
  %.pre324 = add nsw i64 %.pre319, 1
  br label %Array_ClassField____sl__.exit

Array_ClassField____sl__.exit:                    ; preds = %ifend56, %Array_ClassField____sl__.exit.loopexit
  %.pre-phi325 = phi i64 [ %.pre324, %Array_ClassField____sl__.exit.loopexit ], [ %256, %ifend56 ]
  %266 = phi ptr [ %263, %Array_ClassField____sl__.exit.loopexit ], [ %.pre318, %ifend56 ]
  %267 = phi i64 [ %.pre319, %Array_ClassField____sl__.exit.loopexit ], [ %255, %ifend56 ]
  store i64 %.pre-phi325, ptr %memberidx.i239, align 4
  %268 = getelementptr inbounds ptr, ptr %266, i64 %267
  store ptr %11, ptr %268, align 8
  %269 = add nuw nsw i64 %i.0285, 1
  %270 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_FieldNode_, ptr %270, i64 0, i32 1
  %271 = load i64, ptr %memberidx2, align 4
  %272 = icmp slt i64 %269, %271
  br i1 %272, label %for.body, label %common.ret

ifend62:                                          ; preds = %if.entry54
  %273 = load ptr, ptr %memberidx15, align 8
  %memberidx65 = getelementptr inbounds %Expression, ptr %245, i64 0, i32 3
  %274 = load ptr, ptr %memberidx65, align 8
  %275 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %273, ptr %274)
  br i1 %275, label %ifend68, label %if.entry66

if.entry66:                                       ; preds = %ifend62
  %276 = load ptr, ptr %memberidx15, align 8
  %277 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %276)
  %memberidx.i241 = getelementptr inbounds %String, ptr %277, i64 0, i32 1
  %278 = load i64, ptr %memberidx.i241, align 4
  %279 = trunc i64 %278 to i32
  %280 = add i32 %279, 1
  %281 = call ptr @malloc(i32 %280)
  %282 = load ptr, ptr %277, align 8
  %283 = load i64, ptr %memberidx.i241, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %281, ptr align 8 %282, i64 %283, i1 false)
  %284 = getelementptr inbounds i8, ptr %281, i64 %283
  store i8 0, ptr %284, align 1
  %285 = load ptr, ptr %memberidx57, align 8
  %memberidx71 = getelementptr inbounds %Expression, ptr %285, i64 0, i32 3
  %286 = load ptr, ptr %memberidx71, align 8
  %287 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %286)
  %memberidx.i242 = getelementptr inbounds %String, ptr %287, i64 0, i32 1
  %288 = load i64, ptr %memberidx.i242, align 4
  %289 = trunc i64 %288 to i32
  %290 = add i32 %289, 1
  %291 = call ptr @malloc(i32 %290)
  %292 = load ptr, ptr %287, align 8
  %293 = load i64, ptr %memberidx.i242, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %291, ptr align 8 %292, i64 %293, i1 false)
  %294 = getelementptr inbounds i8, ptr %291, i64 %293
  store i8 0, ptr %294, align 1
  %295 = alloca ptr, align 8
  %296 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %295, ptr nonnull @140, ptr %281, ptr %291)
  %297 = load ptr, ptr %295, align 8
  %298 = tail call ptr @malloc(i32 24)
  store ptr %297, ptr %298, align 8
  %memberidx1.i243 = getelementptr inbounds %String, ptr %298, i64 0, i32 1
  store i64 %296, ptr %memberidx1.i243, align 4
  %memberidx2.i244 = getelementptr inbounds %String, ptr %298, i64 0, i32 2
  store i64 %296, ptr %memberidx2.i244, align 4
  tail call void @free(ptr %281)
  tail call void @free(ptr %291)
  %299 = load ptr, ptr %memberidx53, align 8
  %300 = load ptr, ptr %299, align 8
  %301 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i246 = getelementptr inbounds %Compiler, ptr %301, i64 0, i32 5
  %302 = load ptr, ptr %memberidx1.i246, align 8
  %303 = call ptr @malloc(i32 24)
  store i64 5, ptr %303, align 4
  %memberidx1.i.i247 = getelementptr inbounds %FloError, ptr %303, i64 0, i32 2
  store ptr %300, ptr %memberidx1.i.i247, align 8
  %memberidx2.i.i248 = getelementptr inbounds %FloError, ptr %303, i64 0, i32 1
  store ptr %298, ptr %memberidx2.i.i248, align 8
  %memberidx.i.i249 = getelementptr inbounds %Array_FloError_, ptr %302, i64 0, i32 1
  %304 = load i64, ptr %memberidx.i.i249, align 4
  %305 = add i64 %304, 1
  %memberidx.i.i.i250 = getelementptr inbounds %Array_FloError_, ptr %302, i64 0, i32 2
  %306 = load i64, ptr %memberidx.i.i.i250, align 4
  %307 = icmp slt i64 %306, %305
  %.pre312 = load ptr, ptr %302, align 8
  br i1 %307, label %while.entry.i.i.i251, label %TypeChecker_error.exit252

while.entry.i.i.i251:                             ; preds = %if.entry66, %while.entry.i.i.i251
  %308 = phi ptr [ %312, %while.entry.i.i.i251 ], [ %.pre312, %if.entry66 ]
  %309 = phi i64 [ %313, %while.entry.i.i.i251 ], [ %306, %if.entry66 ]
  %310 = shl nuw i64 %309, 1
  store i64 %310, ptr %memberidx.i.i.i250, align 4
  %311 = shl i64 %309, 4
  %312 = call ptr @realloc(ptr %308, i64 %311)
  store ptr %312, ptr %302, align 8
  %313 = load i64, ptr %memberidx.i.i.i250, align 4
  %314 = icmp slt i64 %313, %305
  br i1 %314, label %while.entry.i.i.i251, label %TypeChecker_error.exit252.loopexit

TypeChecker_error.exit252.loopexit:               ; preds = %while.entry.i.i.i251
  %.pre313 = load i64, ptr %memberidx.i.i249, align 4
  %.pre328 = add nsw i64 %.pre313, 1
  br label %TypeChecker_error.exit252

TypeChecker_error.exit252:                        ; preds = %if.entry66, %TypeChecker_error.exit252.loopexit
  %.pre-phi329 = phi i64 [ %.pre328, %TypeChecker_error.exit252.loopexit ], [ %305, %if.entry66 ]
  %315 = phi ptr [ %312, %TypeChecker_error.exit252.loopexit ], [ %.pre312, %if.entry66 ]
  %316 = phi i64 [ %.pre313, %TypeChecker_error.exit252.loopexit ], [ %304, %if.entry66 ]
  store i64 %.pre-phi329, ptr %memberidx.i.i249, align 4
  %317 = getelementptr inbounds ptr, ptr %315, i64 %316
  store ptr %303, ptr %317, align 8
  br label %ifend68

ifend68:                                          ; preds = %ifend62, %TypeChecker_error.exit252
  %318 = load ptr, ptr %memberidx57, align 8
  %memberidx75 = getelementptr inbounds %Expression, ptr %318, i64 0, i32 1
  %319 = load i1, ptr %memberidx75, align 1
  br i1 %319, label %ifend78, label %if.entry76

if.entry76:                                       ; preds = %ifend68
  %320 = call ptr @malloc(i32 45)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %320, ptr noundef nonnull align 8 dereferenceable(45) @141, i64 45, i1 false)
  %321 = call ptr @malloc(i32 24)
  store ptr %320, ptr %321, align 8
  %memberidx1.i.i253 = getelementptr inbounds %String, ptr %321, i64 0, i32 1
  store i64 45, ptr %memberidx1.i.i253, align 4
  %memberidx2.i.i254 = getelementptr inbounds %String, ptr %321, i64 0, i32 2
  store i64 45, ptr %memberidx2.i.i254, align 4
  %322 = load ptr, ptr %memberidx53, align 8
  %323 = load ptr, ptr %322, align 8
  %324 = load ptr, ptr %memberidx.i166, align 8
  %memberidx1.i256 = getelementptr inbounds %Compiler, ptr %324, i64 0, i32 5
  %325 = load ptr, ptr %memberidx1.i256, align 8
  %326 = call ptr @malloc(i32 24)
  store i64 4, ptr %326, align 4
  %memberidx1.i.i257 = getelementptr inbounds %FloError, ptr %326, i64 0, i32 2
  store ptr %323, ptr %memberidx1.i.i257, align 8
  %memberidx2.i.i258 = getelementptr inbounds %FloError, ptr %326, i64 0, i32 1
  store ptr %321, ptr %memberidx2.i.i258, align 8
  %memberidx.i.i259 = getelementptr inbounds %Array_FloError_, ptr %325, i64 0, i32 1
  %327 = load i64, ptr %memberidx.i.i259, align 4
  %328 = add i64 %327, 1
  %memberidx.i.i.i260 = getelementptr inbounds %Array_FloError_, ptr %325, i64 0, i32 2
  %329 = load i64, ptr %memberidx.i.i.i260, align 4
  %330 = icmp slt i64 %329, %328
  %.pre315 = load ptr, ptr %325, align 8
  br i1 %330, label %while.entry.i.i.i261, label %TypeChecker_error.exit262

while.entry.i.i.i261:                             ; preds = %if.entry76, %while.entry.i.i.i261
  %331 = phi ptr [ %335, %while.entry.i.i.i261 ], [ %.pre315, %if.entry76 ]
  %332 = phi i64 [ %336, %while.entry.i.i.i261 ], [ %329, %if.entry76 ]
  %333 = shl nuw i64 %332, 1
  store i64 %333, ptr %memberidx.i.i.i260, align 4
  %334 = shl i64 %332, 4
  %335 = call ptr @realloc(ptr %331, i64 %334)
  store ptr %335, ptr %325, align 8
  %336 = load i64, ptr %memberidx.i.i.i260, align 4
  %337 = icmp slt i64 %336, %328
  br i1 %337, label %while.entry.i.i.i261, label %TypeChecker_error.exit262.loopexit

TypeChecker_error.exit262.loopexit:               ; preds = %while.entry.i.i.i261
  %.pre316 = load i64, ptr %memberidx.i.i259, align 4
  %.pre326 = add nsw i64 %.pre316, 1
  br label %TypeChecker_error.exit262

TypeChecker_error.exit262:                        ; preds = %if.entry76, %TypeChecker_error.exit262.loopexit
  %.pre-phi327 = phi i64 [ %.pre326, %TypeChecker_error.exit262.loopexit ], [ %328, %if.entry76 ]
  %338 = phi ptr [ %335, %TypeChecker_error.exit262.loopexit ], [ %.pre315, %if.entry76 ]
  %339 = phi i64 [ %.pre316, %TypeChecker_error.exit262.loopexit ], [ %327, %if.entry76 ]
  store i64 %.pre-phi327, ptr %memberidx.i.i259, align 4
  %340 = getelementptr inbounds ptr, ptr %338, i64 %339
  store ptr %326, ptr %340, align 8
  br label %common.ret

ifend78:                                          ; preds = %ifend68
  store i1 true, ptr %memberidx.i, align 1
  %341 = load ptr, ptr %memberidx82, align 8
  %342 = load ptr, ptr %memberidx4, align 8
  %343 = load ptr, ptr %11, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %341, ptr %342, ptr %343)
  br label %ifend56
}

define internal fastcc void @TypeChecker_check_module_import(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 4
  %4 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Array_Token__, ptr %4, i64 0, i32 1
  %5 = load i64, ptr %memberidx2, align 4
  %6 = icmp sgt i64 %5, 0
  br i1 %6, label %if.entry, label %ifend

common.ret:                                       ; preds = %if.entry53, %else54, %for.end, %ifend, %TypeChecker_error.exit261, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %2
  %7 = tail call ptr @malloc(i32 49)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(49) %7, ptr noundef nonnull align 8 dereferenceable(49) @107, i64 49, i1 false)
  %8 = tail call ptr @malloc(i32 24)
  store ptr %7, ptr %8, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %8, i64 0, i32 1
  store i64 49, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %8, i64 0, i32 2
  store i64 49, ptr %memberidx2.i.i, align 4
  %9 = load ptr, ptr %memberidx, align 8
  %memberidx4 = getelementptr inbounds %Token, ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %11 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %11, i64 0, i32 5
  %12 = load ptr, ptr %memberidx1.i, align 8
  %13 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %13, align 4
  %memberidx1.i.i115 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 2
  store ptr %10, ptr %memberidx1.i.i115, align 8
  %memberidx2.i.i116 = getelementptr inbounds %FloError, ptr %13, i64 0, i32 1
  store ptr %8, ptr %memberidx2.i.i116, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 1
  %14 = load i64, ptr %memberidx.i.i, align 4
  %15 = add i64 %14, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %12, i64 0, i32 2
  %16 = load i64, ptr %memberidx.i.i.i, align 4
  %17 = icmp slt i64 %16, %15
  %.pre335 = load ptr, ptr %12, align 8
  br i1 %17, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry, %while.entry.i.i.i
  %18 = phi ptr [ %22, %while.entry.i.i.i ], [ %.pre335, %if.entry ]
  %19 = phi i64 [ %23, %while.entry.i.i.i ], [ %16, %if.entry ]
  %20 = shl nuw i64 %19, 1
  store i64 %20, ptr %memberidx.i.i.i, align 4
  %21 = shl i64 %19, 4
  %22 = tail call ptr @realloc(ptr %18, i64 %21)
  store ptr %22, ptr %12, align 8
  %23 = load i64, ptr %memberidx.i.i.i, align 4
  %24 = icmp slt i64 %23, %15
  br i1 %24, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre336 = load i64, ptr %memberidx.i.i, align 4
  %.pre350 = add nsw i64 %.pre336, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre350, %TypeChecker_error.exit.loopexit ], [ %15, %if.entry ]
  %25 = phi ptr [ %22, %TypeChecker_error.exit.loopexit ], [ %.pre335, %if.entry ]
  %26 = phi i64 [ %.pre336, %TypeChecker_error.exit.loopexit ], [ %14, %if.entry ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %27 = getelementptr inbounds ptr, ptr %25, i64 %26
  store ptr %13, ptr %27, align 8
  br label %common.ret

ifend:                                            ; preds = %2
  %memberidx6 = getelementptr inbounds %StrToken, ptr %3, i64 0, i32 2
  %28 = load ptr, ptr %memberidx6, align 8
  %memberidx8 = getelementptr inbounds %Token, ptr %3, i64 0, i32 1
  %29 = load ptr, ptr %memberidx8, align 8
  %30 = tail call fastcc ptr @TypeChecker_lex_and_parse_typecheck_file(ptr %0, ptr %28, ptr %29)
  %memberidx.i117 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %31 = load ptr, ptr %memberidx.i117, align 8
  %memberidx1.i118 = getelementptr inbounds %Compiler, ptr %31, i64 0, i32 5
  %32 = load ptr, ptr %memberidx1.i118, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx2.i, align 4
  %34 = icmp sgt i64 %33, 0
  br i1 %34, label %common.ret, label %ifend11

ifend11:                                          ; preds = %ifend
  %35 = load ptr, ptr %0, align 8
  %memberidx13 = getelementptr inbounds %Module, ptr %30, i64 0, i32 5
  %36 = load ptr, ptr %memberidx13, align 8
  %37 = load ptr, ptr %35, align 8
  %38 = load i64, ptr %36, align 4
  %39 = load ptr, ptr %37, align 8
  %40 = getelementptr inbounds ptr, ptr %39, i64 %38
  %41 = load ptr, ptr %40, align 8
  %memberidx2.i119 = getelementptr inbounds %Module, ptr %41, i64 0, i32 7
  %42 = load ptr, ptr %memberidx2.i119, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %36, i64 0, i32 1
  %43 = load i64, ptr %memberidx3.i, align 4
  %44 = load ptr, ptr %42, align 8
  %45 = getelementptr inbounds ptr, ptr %44, i64 %43
  %46 = load ptr, ptr %45, align 8
  %47 = load ptr, ptr %1, align 8
  %memberidx15 = getelementptr inbounds %Array_ImportClause_, ptr %47, i64 0, i32 1
  %48 = load i64, ptr %memberidx15, align 4
  %49 = icmp sgt i64 %48, 0
  br i1 %49, label %for.entry, label %else17

else17:                                           ; preds = %ifend11
  %memberidx52 = getelementptr inbounds %ImportNode, ptr %1, i64 0, i32 2
  %50 = load ptr, ptr %memberidx52, align 8
  %.not = icmp eq ptr %50, null
  br i1 %.not, label %else54, label %if.entry53

for.entry:                                        ; preds = %ifend11
  %51 = tail call ptr @malloc(i32 25)
  %52 = load ptr, ptr %47, align 8
  %53 = load i64, ptr %memberidx15, align 4
  store i1 false, ptr %51, align 1
  %memberidx1.i.i121 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %51, i64 0, i32 1
  %memberidx2.i.i122 = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %51, i64 0, i32 3
  store ptr %52, ptr %memberidx2.i.i122, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ImportClause_, ptr %51, i64 0, i32 2
  store i64 %53, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i121, align 4
  %54 = icmp slt i64 %53, 1
  br i1 %54, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx26 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 8
  %memberidx30 = getelementptr inbounds %Scope, ptr %46, i64 0, i32 2
  %memberidx.i.i.i149 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %memberidx34 = getelementptr inbounds %Scope, ptr %46, i64 0, i32 4
  %memberidx38 = getelementptr inbounds %Scope, ptr %46, i64 0, i32 1
  %memberidx42 = getelementptr inbounds %Scope, ptr %46, i64 0, i32 3
  %memberidx46 = getelementptr inbounds %Scope, ptr %46, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %55 = phi i64 [ 1, %for.body.lr.ph ], [ %59, %for.incr ]
  %import_clause.0299.in = phi ptr [ %52, %for.body.lr.ph ], [ %60, %for.incr ]
  %import_clause.0299 = load ptr, ptr %import_clause.0299.in, align 8
  %56 = load ptr, ptr %import_clause.0299, align 8
  %memberidx22 = getelementptr inbounds %IdentifierToken, ptr %56, i64 0, i32 2
  %57 = load ptr, ptr %memberidx22, align 8
  %memberidx23 = getelementptr inbounds %ImportClause, ptr %import_clause.0299, i64 0, i32 1
  %58 = load ptr, ptr %memberidx23, align 8
  %.not108 = icmp eq ptr %58, null
  br i1 %.not108, label %end, label %true_block

for.incr:                                         ; preds = %Map_String_Generic____getitem__.exit, %if.entry47, %if.entry43, %if.entry39, %if.entry35, %if.entry31
  %59 = add nuw nsw i64 %55, 1
  store i64 %59, ptr %memberidx1.i.i121, align 4
  %60 = getelementptr inbounds ptr, ptr %52, i64 %55
  %.not353 = icmp slt i64 %55, %53
  br i1 %.not353, label %for.body, label %for.end

for.end:                                          ; preds = %for.incr, %for.entry
  tail call void @free(ptr nonnull %51)
  br label %common.ret

true_block:                                       ; preds = %for.body
  %memberidx25 = getelementptr inbounds %IdentifierToken, ptr %58, i64 0, i32 2
  %61 = load ptr, ptr %memberidx25, align 8
  br label %end

end:                                              ; preds = %for.body, %true_block
  %ternary = phi ptr [ %61, %true_block ], [ %57, %for.body ]
  %62 = load ptr, ptr %memberidx26, align 8
  %63 = tail call fastcc i64 @Map_String_Generic__hash_fnc(ptr %57)
  %memberidx.i128 = getelementptr inbounds %Map_String_Generic_, ptr %62, i64 0, i32 1
  %64 = load i64, ptr %memberidx.i128, align 4
  %65 = urem i64 %63, %64
  %66 = load ptr, ptr %62, align 8
  %67 = getelementptr inbounds ptr, ptr %66, i64 %65
  %68 = load ptr, ptr %67, align 8
  %.not.i = icmp eq ptr %68, null
  br i1 %.not.i, label %ifend29, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %end
  %memberidx1.i.i130 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %69 = phi ptr [ %79, %else.i ], [ %66, %while.entry.i.preheader ]
  %70 = phi i64 [ %80, %else.i ], [ %64, %while.entry.i.preheader ]
  %71 = phi ptr [ %84, %else.i ], [ %68, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %82, %else.i ], [ %65, %while.entry.i.preheader ]
  %72 = load ptr, ptr %71, align 8
  %memberidx.i.i129 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  %73 = load i64, ptr %memberidx.i.i129, align 4
  %74 = load i64, ptr %memberidx1.i.i130, align 4
  %.not.i.i = icmp eq i64 %73, %74
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %75 = load ptr, ptr %72, align 8
  %76 = load ptr, ptr %57, align 8
  %77 = tail call i64 @memcmp(ptr %75, ptr %76, i64 %73)
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i128, align 4
  %.pre304 = load ptr, ptr %62, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre305.pre = load ptr, ptr %62, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre305.pre, i64 %hash.0.i
  %.pre306.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre306.pre, null
  br i1 %.not25.i, label %ifend29, label %Map_String_Generic____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %79 = phi ptr [ %.pre304, %ifend.i.i.else.i_crit_edge ], [ %69, %while.entry.i ]
  %80 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %70, %while.entry.i ]
  %81 = add nuw i64 %hash.0.i, 1
  %82 = urem i64 %81, %80
  %83 = getelementptr inbounds ptr, ptr %79, i64 %82
  %84 = load ptr, ptr %83, align 8
  %.not26.i = icmp eq ptr %84, null
  br i1 %.not26.i, label %ifend29, label %while.entry.i

Map_String_Generic____getitem__.exit:             ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_Generic_, ptr %.pre306.pre, i64 0, i32 1
  %85 = load ptr, ptr %memberidx11.i, align 8
  %.not109 = icmp eq ptr %85, null
  br i1 %.not109, label %ifend29, label %for.incr

ifend29:                                          ; preds = %else.i, %end, %while.end.i, %Map_String_Generic____getitem__.exit
  %86 = load ptr, ptr %memberidx30, align 8
  %87 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr %57)
  %memberidx.i131 = getelementptr inbounds %Map_String_ClassId_, ptr %86, i64 0, i32 1
  %88 = load i64, ptr %memberidx.i131, align 4
  %89 = urem i64 %87, %88
  %90 = load ptr, ptr %86, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 %89
  %92 = load ptr, ptr %91, align 8
  %.not.i132 = icmp eq ptr %92, null
  br i1 %.not.i132, label %ifend33, label %while.entry.i137.preheader

while.entry.i137.preheader:                       ; preds = %ifend29
  %memberidx1.i.i135 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  br label %while.entry.i137

while.entry.i137:                                 ; preds = %while.entry.i137.preheader, %else.i145
  %93 = phi ptr [ %103, %else.i145 ], [ %90, %while.entry.i137.preheader ]
  %94 = phi i64 [ %104, %else.i145 ], [ %88, %while.entry.i137.preheader ]
  %95 = phi ptr [ %108, %else.i145 ], [ %92, %while.entry.i137.preheader ]
  %hash.0.i133 = phi i64 [ %106, %else.i145 ], [ %89, %while.entry.i137.preheader ]
  %96 = load ptr, ptr %95, align 8
  %memberidx.i.i134 = getelementptr inbounds %String, ptr %96, i64 0, i32 1
  %97 = load i64, ptr %memberidx.i.i134, align 4
  %98 = load i64, ptr %memberidx1.i.i135, align 4
  %.not.i.i136 = icmp eq i64 %97, %98
  br i1 %.not.i.i136, label %ifend.i.i138, label %else.i145

ifend.i.i138:                                     ; preds = %while.entry.i137
  %99 = load ptr, ptr %96, align 8
  %100 = load ptr, ptr %57, align 8
  %101 = tail call i64 @memcmp(ptr %99, ptr %100, i64 %97)
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %while.end.i143, label %ifend.i.i138.else.i145_crit_edge

ifend.i.i138.else.i145_crit_edge:                 ; preds = %ifend.i.i138
  %.pre307 = load i64, ptr %memberidx.i131, align 4
  %.pre308 = load ptr, ptr %86, align 8
  br label %else.i145

while.end.i143:                                   ; preds = %ifend.i.i138
  %.pre309.pre = load ptr, ptr %86, align 8
  %.phi.trans.insert310.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre309.pre, i64 %hash.0.i133
  %.pre311.pre = load ptr, ptr %.phi.trans.insert310.phi.trans.insert, align 8
  %.not25.i142 = icmp eq ptr %.pre311.pre, null
  br i1 %.not25.i142, label %ifend33, label %Map_String_ClassId____getitem__.exit

else.i145:                                        ; preds = %ifend.i.i138.else.i145_crit_edge, %while.entry.i137
  %103 = phi ptr [ %.pre308, %ifend.i.i138.else.i145_crit_edge ], [ %93, %while.entry.i137 ]
  %104 = phi i64 [ %.pre307, %ifend.i.i138.else.i145_crit_edge ], [ %94, %while.entry.i137 ]
  %105 = add nuw i64 %hash.0.i133, 1
  %106 = urem i64 %105, %104
  %107 = getelementptr inbounds ptr, ptr %103, i64 %106
  %108 = load ptr, ptr %107, align 8
  %.not26.i144 = icmp eq ptr %108, null
  br i1 %.not26.i144, label %ifend33, label %while.entry.i137

Map_String_ClassId____getitem__.exit:             ; preds = %while.end.i143
  %memberidx11.i147 = getelementptr inbounds %MapEntry_String_ClassId_, ptr %.pre311.pre, i64 0, i32 1
  %109 = load ptr, ptr %memberidx11.i147, align 8
  %.not110 = icmp eq ptr %109, null
  br i1 %.not110, label %ifend33, label %if.entry31

if.entry31:                                       ; preds = %Map_String_ClassId____getitem__.exit
  %110 = load ptr, ptr %0, align 8
  %111 = load ptr, ptr %memberidx.i.i.i149, align 8
  %112 = load i64, ptr %111, align 4
  %113 = load ptr, ptr %110, align 8
  %114 = load ptr, ptr %113, align 8
  %115 = getelementptr inbounds ptr, ptr %114, i64 %112
  %116 = load ptr, ptr %115, align 8
  %memberidx1.i.i150 = getelementptr inbounds %Module, ptr %116, i64 0, i32 5
  %117 = load ptr, ptr %memberidx1.i.i150, align 8
  %118 = load i64, ptr %117, align 4
  %119 = getelementptr inbounds ptr, ptr %114, i64 %118
  %120 = load ptr, ptr %119, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %120, i64 0, i32 7
  %121 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ScopeId, ptr %117, i64 0, i32 1
  %122 = load i64, ptr %memberidx3.i.i.i, align 4
  %123 = load ptr, ptr %121, align 8
  %124 = getelementptr inbounds ptr, ptr %123, i64 %122
  %125 = load ptr, ptr %124, align 8
  %memberidx.i151 = getelementptr inbounds %Scope, ptr %125, i64 0, i32 2
  %126 = load ptr, ptr %memberidx.i151, align 8
  tail call fastcc void @Map_String_ClassId____setitem__(ptr %126, ptr %ternary, ptr nonnull %109)
  %memberidx1.i152 = getelementptr inbounds %Scope, ptr %125, i64 0, i32 1
  %127 = load ptr, ptr %memberidx1.i152, align 8
  %128 = tail call ptr @malloc(i32 24)
  %129 = load i64, ptr %109, align 4
  %memberidx1.i5.i = getelementptr inbounds %TypeId, ptr %109, i64 0, i32 2
  %130 = load i64, ptr %memberidx1.i5.i, align 4
  store i64 3, ptr %128, align 4
  %memberidx1.i.i.i = getelementptr inbounds %VarId, ptr %128, i64 0, i32 1
  store i64 %129, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i6.i = getelementptr inbounds %VarId, ptr %128, i64 0, i32 2
  store i64 %130, ptr %memberidx2.i.i6.i, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %127, ptr %ternary, ptr nonnull %128)
  br label %for.incr

ifend33:                                          ; preds = %else.i145, %ifend29, %while.end.i143, %Map_String_ClassId____getitem__.exit
  %131 = load ptr, ptr %memberidx34, align 8
  %132 = tail call fastcc i64 @Map_String_EnumId__hash_fnc(ptr %57)
  %memberidx.i153 = getelementptr inbounds %Map_String_EnumId_, ptr %131, i64 0, i32 1
  %133 = load i64, ptr %memberidx.i153, align 4
  %134 = urem i64 %132, %133
  %135 = load ptr, ptr %131, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %134
  %137 = load ptr, ptr %136, align 8
  %.not.i154 = icmp eq ptr %137, null
  br i1 %.not.i154, label %ifend37, label %while.entry.i159.preheader

while.entry.i159.preheader:                       ; preds = %ifend33
  %memberidx1.i.i157 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  br label %while.entry.i159

while.entry.i159:                                 ; preds = %while.entry.i159.preheader, %else.i167
  %138 = phi ptr [ %148, %else.i167 ], [ %135, %while.entry.i159.preheader ]
  %139 = phi i64 [ %149, %else.i167 ], [ %133, %while.entry.i159.preheader ]
  %140 = phi ptr [ %153, %else.i167 ], [ %137, %while.entry.i159.preheader ]
  %hash.0.i155 = phi i64 [ %151, %else.i167 ], [ %134, %while.entry.i159.preheader ]
  %141 = load ptr, ptr %140, align 8
  %memberidx.i.i156 = getelementptr inbounds %String, ptr %141, i64 0, i32 1
  %142 = load i64, ptr %memberidx.i.i156, align 4
  %143 = load i64, ptr %memberidx1.i.i157, align 4
  %.not.i.i158 = icmp eq i64 %142, %143
  br i1 %.not.i.i158, label %ifend.i.i160, label %else.i167

ifend.i.i160:                                     ; preds = %while.entry.i159
  %144 = load ptr, ptr %141, align 8
  %145 = load ptr, ptr %57, align 8
  %146 = tail call i64 @memcmp(ptr %144, ptr %145, i64 %142)
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %while.end.i165, label %ifend.i.i160.else.i167_crit_edge

ifend.i.i160.else.i167_crit_edge:                 ; preds = %ifend.i.i160
  %.pre312 = load i64, ptr %memberidx.i153, align 4
  %.pre313 = load ptr, ptr %131, align 8
  br label %else.i167

while.end.i165:                                   ; preds = %ifend.i.i160
  %.pre314.pre = load ptr, ptr %131, align 8
  %.phi.trans.insert315.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre314.pre, i64 %hash.0.i155
  %.pre316.pre = load ptr, ptr %.phi.trans.insert315.phi.trans.insert, align 8
  %.not25.i164 = icmp eq ptr %.pre316.pre, null
  br i1 %.not25.i164, label %ifend37, label %Map_String_EnumId____getitem__.exit

else.i167:                                        ; preds = %ifend.i.i160.else.i167_crit_edge, %while.entry.i159
  %148 = phi ptr [ %.pre313, %ifend.i.i160.else.i167_crit_edge ], [ %138, %while.entry.i159 ]
  %149 = phi i64 [ %.pre312, %ifend.i.i160.else.i167_crit_edge ], [ %139, %while.entry.i159 ]
  %150 = add nuw i64 %hash.0.i155, 1
  %151 = urem i64 %150, %149
  %152 = getelementptr inbounds ptr, ptr %148, i64 %151
  %153 = load ptr, ptr %152, align 8
  %.not26.i166 = icmp eq ptr %153, null
  br i1 %.not26.i166, label %ifend37, label %while.entry.i159

Map_String_EnumId____getitem__.exit:              ; preds = %while.end.i165
  %memberidx11.i169 = getelementptr inbounds %MapEntry_String_EnumId_, ptr %.pre316.pre, i64 0, i32 1
  %154 = load ptr, ptr %memberidx11.i169, align 8
  %.not111 = icmp eq ptr %154, null
  br i1 %.not111, label %ifend37, label %if.entry35

if.entry35:                                       ; preds = %Map_String_EnumId____getitem__.exit
  %155 = load ptr, ptr %0, align 8
  %156 = load ptr, ptr %memberidx.i.i.i149, align 8
  %157 = load i64, ptr %156, align 4
  %158 = load ptr, ptr %155, align 8
  %159 = load ptr, ptr %158, align 8
  %160 = getelementptr inbounds ptr, ptr %159, i64 %157
  %161 = load ptr, ptr %160, align 8
  %memberidx1.i.i172 = getelementptr inbounds %Module, ptr %161, i64 0, i32 5
  %162 = load ptr, ptr %memberidx1.i.i172, align 8
  %163 = load i64, ptr %162, align 4
  %164 = getelementptr inbounds ptr, ptr %159, i64 %163
  %165 = load ptr, ptr %164, align 8
  %memberidx2.i.i.i173 = getelementptr inbounds %Module, ptr %165, i64 0, i32 7
  %166 = load ptr, ptr %memberidx2.i.i.i173, align 8
  %memberidx3.i.i.i174 = getelementptr inbounds %ScopeId, ptr %162, i64 0, i32 1
  %167 = load i64, ptr %memberidx3.i.i.i174, align 4
  %168 = load ptr, ptr %166, align 8
  %169 = getelementptr inbounds ptr, ptr %168, i64 %167
  %170 = load ptr, ptr %169, align 8
  %memberidx.i175 = getelementptr inbounds %Scope, ptr %170, i64 0, i32 4
  %171 = load ptr, ptr %memberidx.i175, align 8
  tail call fastcc void @Map_String_EnumId____setitem__(ptr %171, ptr %ternary, ptr nonnull %154)
  %memberidx1.i176 = getelementptr inbounds %Scope, ptr %170, i64 0, i32 1
  %172 = load ptr, ptr %memberidx1.i176, align 8
  %173 = tail call ptr @malloc(i32 24)
  %174 = load i64, ptr %154, align 4
  %memberidx1.i5.i177 = getelementptr inbounds %TypeId, ptr %154, i64 0, i32 2
  %175 = load i64, ptr %memberidx1.i5.i177, align 4
  store i64 4, ptr %173, align 4
  %memberidx1.i.i.i178 = getelementptr inbounds %VarId, ptr %173, i64 0, i32 1
  store i64 %174, ptr %memberidx1.i.i.i178, align 4
  %memberidx2.i.i6.i179 = getelementptr inbounds %VarId, ptr %173, i64 0, i32 2
  store i64 %175, ptr %memberidx2.i.i6.i179, align 4
  tail call fastcc void @Map_String_VarId____setitem__(ptr %172, ptr %ternary, ptr nonnull %173)
  br label %for.incr

ifend37:                                          ; preds = %else.i167, %ifend33, %while.end.i165, %Map_String_EnumId____getitem__.exit
  %176 = load ptr, ptr %memberidx38, align 8
  %177 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %57)
  %memberidx.i180 = getelementptr inbounds %Map_String_VarId_, ptr %176, i64 0, i32 1
  %178 = load i64, ptr %memberidx.i180, align 4
  %179 = urem i64 %177, %178
  %180 = load ptr, ptr %176, align 8
  %181 = getelementptr inbounds ptr, ptr %180, i64 %179
  %182 = load ptr, ptr %181, align 8
  %.not.i181 = icmp eq ptr %182, null
  br i1 %.not.i181, label %ifend41, label %while.entry.i186.preheader

while.entry.i186.preheader:                       ; preds = %ifend37
  %memberidx1.i.i184 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  br label %while.entry.i186

while.entry.i186:                                 ; preds = %while.entry.i186.preheader, %else.i194
  %183 = phi ptr [ %193, %else.i194 ], [ %180, %while.entry.i186.preheader ]
  %184 = phi i64 [ %194, %else.i194 ], [ %178, %while.entry.i186.preheader ]
  %185 = phi ptr [ %198, %else.i194 ], [ %182, %while.entry.i186.preheader ]
  %hash.0.i182 = phi i64 [ %196, %else.i194 ], [ %179, %while.entry.i186.preheader ]
  %186 = load ptr, ptr %185, align 8
  %memberidx.i.i183 = getelementptr inbounds %String, ptr %186, i64 0, i32 1
  %187 = load i64, ptr %memberidx.i.i183, align 4
  %188 = load i64, ptr %memberidx1.i.i184, align 4
  %.not.i.i185 = icmp eq i64 %187, %188
  br i1 %.not.i.i185, label %ifend.i.i187, label %else.i194

ifend.i.i187:                                     ; preds = %while.entry.i186
  %189 = load ptr, ptr %186, align 8
  %190 = load ptr, ptr %57, align 8
  %191 = tail call i64 @memcmp(ptr %189, ptr %190, i64 %187)
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %while.end.i192, label %ifend.i.i187.else.i194_crit_edge

ifend.i.i187.else.i194_crit_edge:                 ; preds = %ifend.i.i187
  %.pre317 = load i64, ptr %memberidx.i180, align 4
  %.pre318 = load ptr, ptr %176, align 8
  br label %else.i194

while.end.i192:                                   ; preds = %ifend.i.i187
  %.pre319.pre = load ptr, ptr %176, align 8
  %.phi.trans.insert320.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre319.pre, i64 %hash.0.i182
  %.pre321.pre = load ptr, ptr %.phi.trans.insert320.phi.trans.insert, align 8
  %.not25.i191 = icmp eq ptr %.pre321.pre, null
  br i1 %.not25.i191, label %ifend41, label %Map_String_VarId____getitem__.exit

else.i194:                                        ; preds = %ifend.i.i187.else.i194_crit_edge, %while.entry.i186
  %193 = phi ptr [ %.pre318, %ifend.i.i187.else.i194_crit_edge ], [ %183, %while.entry.i186 ]
  %194 = phi i64 [ %.pre317, %ifend.i.i187.else.i194_crit_edge ], [ %184, %while.entry.i186 ]
  %195 = add nuw i64 %hash.0.i182, 1
  %196 = urem i64 %195, %194
  %197 = getelementptr inbounds ptr, ptr %193, i64 %196
  %198 = load ptr, ptr %197, align 8
  %.not26.i193 = icmp eq ptr %198, null
  br i1 %.not26.i193, label %ifend41, label %while.entry.i186

Map_String_VarId____getitem__.exit:               ; preds = %while.end.i192
  %memberidx11.i196 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre321.pre, i64 0, i32 1
  %199 = load ptr, ptr %memberidx11.i196, align 8
  %.not112 = icmp eq ptr %199, null
  br i1 %.not112, label %ifend41, label %if.entry39

if.entry39:                                       ; preds = %Map_String_VarId____getitem__.exit
  %200 = load ptr, ptr %0, align 8
  %201 = load ptr, ptr %memberidx.i.i.i149, align 8
  %202 = load i64, ptr %201, align 4
  %203 = load ptr, ptr %200, align 8
  %204 = load ptr, ptr %203, align 8
  %205 = getelementptr inbounds ptr, ptr %204, i64 %202
  %206 = load ptr, ptr %205, align 8
  %memberidx1.i.i199 = getelementptr inbounds %Module, ptr %206, i64 0, i32 5
  %207 = load ptr, ptr %memberidx1.i.i199, align 8
  %208 = load i64, ptr %207, align 4
  %209 = getelementptr inbounds ptr, ptr %204, i64 %208
  %210 = load ptr, ptr %209, align 8
  %memberidx2.i.i.i200 = getelementptr inbounds %Module, ptr %210, i64 0, i32 7
  %211 = load ptr, ptr %memberidx2.i.i.i200, align 8
  %memberidx3.i.i.i201 = getelementptr inbounds %ScopeId, ptr %207, i64 0, i32 1
  %212 = load i64, ptr %memberidx3.i.i.i201, align 4
  %213 = load ptr, ptr %211, align 8
  %214 = getelementptr inbounds ptr, ptr %213, i64 %212
  %215 = load ptr, ptr %214, align 8
  %memberidx.i202 = getelementptr inbounds %Scope, ptr %215, i64 0, i32 1
  %216 = load ptr, ptr %memberidx.i202, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %216, ptr %ternary, ptr nonnull %199)
  br label %for.incr

ifend41:                                          ; preds = %else.i194, %ifend37, %while.end.i192, %Map_String_VarId____getitem__.exit
  %217 = load ptr, ptr %memberidx42, align 8
  %218 = tail call fastcc i64 @Map_String_VarId__hash_fnc(ptr %57)
  %memberidx.i203 = getelementptr inbounds %Map_String_VarId_, ptr %217, i64 0, i32 1
  %219 = load i64, ptr %memberidx.i203, align 4
  %220 = urem i64 %218, %219
  %221 = load ptr, ptr %217, align 8
  %222 = getelementptr inbounds ptr, ptr %221, i64 %220
  %223 = load ptr, ptr %222, align 8
  %.not.i204 = icmp eq ptr %223, null
  br i1 %.not.i204, label %ifend45, label %while.entry.i209.preheader

while.entry.i209.preheader:                       ; preds = %ifend41
  %memberidx1.i.i207 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  br label %while.entry.i209

while.entry.i209:                                 ; preds = %while.entry.i209.preheader, %else.i217
  %224 = phi ptr [ %234, %else.i217 ], [ %221, %while.entry.i209.preheader ]
  %225 = phi i64 [ %235, %else.i217 ], [ %219, %while.entry.i209.preheader ]
  %226 = phi ptr [ %239, %else.i217 ], [ %223, %while.entry.i209.preheader ]
  %hash.0.i205 = phi i64 [ %237, %else.i217 ], [ %220, %while.entry.i209.preheader ]
  %227 = load ptr, ptr %226, align 8
  %memberidx.i.i206 = getelementptr inbounds %String, ptr %227, i64 0, i32 1
  %228 = load i64, ptr %memberidx.i.i206, align 4
  %229 = load i64, ptr %memberidx1.i.i207, align 4
  %.not.i.i208 = icmp eq i64 %228, %229
  br i1 %.not.i.i208, label %ifend.i.i210, label %else.i217

ifend.i.i210:                                     ; preds = %while.entry.i209
  %230 = load ptr, ptr %227, align 8
  %231 = load ptr, ptr %57, align 8
  %232 = tail call i64 @memcmp(ptr %230, ptr %231, i64 %228)
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %while.end.i215, label %ifend.i.i210.else.i217_crit_edge

ifend.i.i210.else.i217_crit_edge:                 ; preds = %ifend.i.i210
  %.pre322 = load i64, ptr %memberidx.i203, align 4
  %.pre323 = load ptr, ptr %217, align 8
  br label %else.i217

while.end.i215:                                   ; preds = %ifend.i.i210
  %.pre324.pre = load ptr, ptr %217, align 8
  %.phi.trans.insert325.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre324.pre, i64 %hash.0.i205
  %.pre326.pre = load ptr, ptr %.phi.trans.insert325.phi.trans.insert, align 8
  %.not25.i214 = icmp eq ptr %.pre326.pre, null
  br i1 %.not25.i214, label %ifend45, label %Map_String_VarId____getitem__.exit221

else.i217:                                        ; preds = %ifend.i.i210.else.i217_crit_edge, %while.entry.i209
  %234 = phi ptr [ %.pre323, %ifend.i.i210.else.i217_crit_edge ], [ %224, %while.entry.i209 ]
  %235 = phi i64 [ %.pre322, %ifend.i.i210.else.i217_crit_edge ], [ %225, %while.entry.i209 ]
  %236 = add nuw i64 %hash.0.i205, 1
  %237 = urem i64 %236, %235
  %238 = getelementptr inbounds ptr, ptr %234, i64 %237
  %239 = load ptr, ptr %238, align 8
  %.not26.i216 = icmp eq ptr %239, null
  br i1 %.not26.i216, label %ifend45, label %while.entry.i209

Map_String_VarId____getitem__.exit221:            ; preds = %while.end.i215
  %memberidx11.i219 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre326.pre, i64 0, i32 1
  %240 = load ptr, ptr %memberidx11.i219, align 8
  %.not113 = icmp eq ptr %240, null
  br i1 %.not113, label %ifend45, label %if.entry43

if.entry43:                                       ; preds = %Map_String_VarId____getitem__.exit221
  %241 = load ptr, ptr %0, align 8
  %242 = load ptr, ptr %memberidx.i.i.i149, align 8
  %243 = load i64, ptr %242, align 4
  %244 = load ptr, ptr %241, align 8
  %245 = load ptr, ptr %244, align 8
  %246 = getelementptr inbounds ptr, ptr %245, i64 %243
  %247 = load ptr, ptr %246, align 8
  %memberidx1.i.i223 = getelementptr inbounds %Module, ptr %247, i64 0, i32 5
  %248 = load ptr, ptr %memberidx1.i.i223, align 8
  %249 = load i64, ptr %248, align 4
  %250 = getelementptr inbounds ptr, ptr %245, i64 %249
  %251 = load ptr, ptr %250, align 8
  %memberidx2.i.i.i224 = getelementptr inbounds %Module, ptr %251, i64 0, i32 7
  %252 = load ptr, ptr %memberidx2.i.i.i224, align 8
  %memberidx3.i.i.i225 = getelementptr inbounds %ScopeId, ptr %248, i64 0, i32 1
  %253 = load i64, ptr %memberidx3.i.i.i225, align 4
  %254 = load ptr, ptr %252, align 8
  %255 = getelementptr inbounds ptr, ptr %254, i64 %253
  %256 = load ptr, ptr %255, align 8
  %memberidx.i226 = getelementptr inbounds %Scope, ptr %256, i64 0, i32 3
  %257 = load ptr, ptr %memberidx.i226, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %257, ptr %ternary, ptr nonnull %240)
  br label %for.incr

ifend45:                                          ; preds = %else.i217, %ifend41, %while.end.i215, %Map_String_VarId____getitem__.exit221
  %258 = load ptr, ptr %memberidx46, align 8
  %259 = tail call fastcc i64 @Map_String_Type__hash_fnc(ptr %57)
  %memberidx.i227 = getelementptr inbounds %Map_String_Type_, ptr %258, i64 0, i32 1
  %260 = load i64, ptr %memberidx.i227, align 4
  %261 = urem i64 %259, %260
  %262 = load ptr, ptr %258, align 8
  %263 = getelementptr inbounds ptr, ptr %262, i64 %261
  %264 = load ptr, ptr %263, align 8
  %.not.i228 = icmp eq ptr %264, null
  br i1 %.not.i228, label %else48, label %while.entry.i233.preheader

while.entry.i233.preheader:                       ; preds = %ifend45
  %memberidx1.i.i231 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  br label %while.entry.i233

while.entry.i233:                                 ; preds = %while.entry.i233.preheader, %else.i241
  %265 = phi ptr [ %275, %else.i241 ], [ %262, %while.entry.i233.preheader ]
  %266 = phi i64 [ %276, %else.i241 ], [ %260, %while.entry.i233.preheader ]
  %267 = phi ptr [ %280, %else.i241 ], [ %264, %while.entry.i233.preheader ]
  %hash.0.i229 = phi i64 [ %278, %else.i241 ], [ %261, %while.entry.i233.preheader ]
  %268 = load ptr, ptr %267, align 8
  %memberidx.i.i230 = getelementptr inbounds %String, ptr %268, i64 0, i32 1
  %269 = load i64, ptr %memberidx.i.i230, align 4
  %270 = load i64, ptr %memberidx1.i.i231, align 4
  %.not.i.i232 = icmp eq i64 %269, %270
  br i1 %.not.i.i232, label %ifend.i.i234, label %else.i241

ifend.i.i234:                                     ; preds = %while.entry.i233
  %271 = load ptr, ptr %268, align 8
  %272 = load ptr, ptr %57, align 8
  %273 = tail call i64 @memcmp(ptr %271, ptr %272, i64 %269)
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %while.end.i239, label %ifend.i.i234.else.i241_crit_edge

ifend.i.i234.else.i241_crit_edge:                 ; preds = %ifend.i.i234
  %.pre327 = load i64, ptr %memberidx.i227, align 4
  %.pre328 = load ptr, ptr %258, align 8
  br label %else.i241

while.end.i239:                                   ; preds = %ifend.i.i234
  %.pre329.pre = load ptr, ptr %258, align 8
  %.phi.trans.insert330.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre329.pre, i64 %hash.0.i229
  %.pre331.pre = load ptr, ptr %.phi.trans.insert330.phi.trans.insert, align 8
  %.not25.i238 = icmp eq ptr %.pre331.pre, null
  br i1 %.not25.i238, label %else48, label %Map_String_Type____getitem__.exit

else.i241:                                        ; preds = %ifend.i.i234.else.i241_crit_edge, %while.entry.i233
  %275 = phi ptr [ %.pre328, %ifend.i.i234.else.i241_crit_edge ], [ %265, %while.entry.i233 ]
  %276 = phi i64 [ %.pre327, %ifend.i.i234.else.i241_crit_edge ], [ %266, %while.entry.i233 ]
  %277 = add nuw i64 %hash.0.i229, 1
  %278 = urem i64 %277, %276
  %279 = getelementptr inbounds ptr, ptr %275, i64 %278
  %280 = load ptr, ptr %279, align 8
  %.not26.i240 = icmp eq ptr %280, null
  br i1 %.not26.i240, label %else48, label %while.entry.i233

Map_String_Type____getitem__.exit:                ; preds = %while.end.i239
  %memberidx11.i243 = getelementptr inbounds %MapEntry_String_Type_, ptr %.pre331.pre, i64 0, i32 1
  %281 = load ptr, ptr %memberidx11.i243, align 8
  %.not114 = icmp eq ptr %281, null
  br i1 %.not114, label %else48, label %if.entry47

if.entry47:                                       ; preds = %Map_String_Type____getitem__.exit
  %282 = load ptr, ptr %0, align 8
  %283 = load ptr, ptr %memberidx.i.i.i149, align 8
  %284 = load i64, ptr %283, align 4
  %285 = load ptr, ptr %282, align 8
  %286 = load ptr, ptr %285, align 8
  %287 = getelementptr inbounds ptr, ptr %286, i64 %284
  %288 = load ptr, ptr %287, align 8
  %memberidx1.i.i246 = getelementptr inbounds %Module, ptr %288, i64 0, i32 5
  %289 = load ptr, ptr %memberidx1.i.i246, align 8
  %290 = load i64, ptr %289, align 4
  %291 = getelementptr inbounds ptr, ptr %286, i64 %290
  %292 = load ptr, ptr %291, align 8
  %memberidx2.i.i.i247 = getelementptr inbounds %Module, ptr %292, i64 0, i32 7
  %293 = load ptr, ptr %memberidx2.i.i.i247, align 8
  %memberidx3.i.i.i248 = getelementptr inbounds %ScopeId, ptr %289, i64 0, i32 1
  %294 = load i64, ptr %memberidx3.i.i.i248, align 4
  %295 = load ptr, ptr %293, align 8
  %296 = getelementptr inbounds ptr, ptr %295, i64 %294
  %297 = load ptr, ptr %296, align 8
  %memberidx.i249 = getelementptr inbounds %Scope, ptr %297, i64 0, i32 6
  %298 = load ptr, ptr %memberidx.i249, align 8
  tail call fastcc void @Map_String_Type____setitem__(ptr %298, ptr %ternary, ptr nonnull %281)
  br label %for.incr

else48:                                           ; preds = %ifend45, %while.end.i239, %Map_String_Type____getitem__.exit, %else.i241
  store i1 false, ptr %51, align 1
  %memberidx.i250 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  %299 = load i64, ptr %memberidx.i250, align 4
  %300 = trunc i64 %299 to i32
  %301 = add i32 %300, 1
  %302 = tail call ptr @malloc(i32 %301)
  %303 = load ptr, ptr %57, align 8
  %304 = load i64, ptr %memberidx.i250, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %302, ptr align 8 %303, i64 %304, i1 false)
  %305 = getelementptr inbounds i8, ptr %302, i64 %304
  store i8 0, ptr %305, align 1
  %memberidx.i251 = getelementptr inbounds %String, ptr %28, i64 0, i32 1
  %306 = load i64, ptr %memberidx.i251, align 4
  %307 = trunc i64 %306 to i32
  %308 = add i32 %307, 1
  %309 = tail call ptr @malloc(i32 %308)
  %310 = load ptr, ptr %28, align 8
  %311 = load i64, ptr %memberidx.i251, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %309, ptr align 8 %310, i64 %311, i1 false)
  %312 = getelementptr inbounds i8, ptr %309, i64 %311
  store i8 0, ptr %312, align 1
  %313 = alloca ptr, align 8
  %314 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %313, ptr nonnull @108, ptr %302, ptr %309)
  %315 = load ptr, ptr %313, align 8
  %316 = tail call ptr @malloc(i32 24)
  store ptr %315, ptr %316, align 8
  %memberidx1.i252 = getelementptr inbounds %String, ptr %316, i64 0, i32 1
  store i64 %314, ptr %memberidx1.i252, align 4
  %memberidx2.i253 = getelementptr inbounds %String, ptr %316, i64 0, i32 2
  store i64 %314, ptr %memberidx2.i253, align 4
  tail call void @free(ptr %302)
  tail call void @free(ptr %309)
  %317 = load ptr, ptr %import_clause.0299, align 8
  %memberidx51 = getelementptr inbounds %Token, ptr %317, i64 0, i32 1
  %318 = load ptr, ptr %memberidx51, align 8
  %319 = load ptr, ptr %memberidx.i117, align 8
  %memberidx1.i255 = getelementptr inbounds %Compiler, ptr %319, i64 0, i32 5
  %320 = load ptr, ptr %memberidx1.i255, align 8
  %321 = call ptr @malloc(i32 24)
  store i64 1, ptr %321, align 4
  %memberidx1.i.i256 = getelementptr inbounds %FloError, ptr %321, i64 0, i32 2
  store ptr %318, ptr %memberidx1.i.i256, align 8
  %memberidx2.i.i257 = getelementptr inbounds %FloError, ptr %321, i64 0, i32 1
  store ptr %316, ptr %memberidx2.i.i257, align 8
  %memberidx.i.i258 = getelementptr inbounds %Array_FloError_, ptr %320, i64 0, i32 1
  %322 = load i64, ptr %memberidx.i.i258, align 4
  %323 = add i64 %322, 1
  %memberidx.i.i.i259 = getelementptr inbounds %Array_FloError_, ptr %320, i64 0, i32 2
  %324 = load i64, ptr %memberidx.i.i.i259, align 4
  %325 = icmp slt i64 %324, %323
  %.pre332 = load ptr, ptr %320, align 8
  br i1 %325, label %while.entry.i.i.i260, label %TypeChecker_error.exit261

while.entry.i.i.i260:                             ; preds = %else48, %while.entry.i.i.i260
  %326 = phi ptr [ %330, %while.entry.i.i.i260 ], [ %.pre332, %else48 ]
  %327 = phi i64 [ %331, %while.entry.i.i.i260 ], [ %324, %else48 ]
  %328 = shl nuw i64 %327, 1
  store i64 %328, ptr %memberidx.i.i.i259, align 4
  %329 = shl i64 %327, 4
  %330 = call ptr @realloc(ptr %326, i64 %329)
  store ptr %330, ptr %320, align 8
  %331 = load i64, ptr %memberidx.i.i.i259, align 4
  %332 = icmp slt i64 %331, %323
  br i1 %332, label %while.entry.i.i.i260, label %TypeChecker_error.exit261.loopexit

TypeChecker_error.exit261.loopexit:               ; preds = %while.entry.i.i.i260
  %.pre333 = load i64, ptr %memberidx.i.i258, align 4
  %.pre351 = add nsw i64 %.pre333, 1
  br label %TypeChecker_error.exit261

TypeChecker_error.exit261:                        ; preds = %else48, %TypeChecker_error.exit261.loopexit
  %.pre-phi352 = phi i64 [ %.pre351, %TypeChecker_error.exit261.loopexit ], [ %323, %else48 ]
  %333 = phi ptr [ %330, %TypeChecker_error.exit261.loopexit ], [ %.pre332, %else48 ]
  %334 = phi i64 [ %.pre333, %TypeChecker_error.exit261.loopexit ], [ %322, %else48 ]
  store i64 %.pre-phi352, ptr %memberidx.i.i258, align 4
  %335 = getelementptr inbounds ptr, ptr %333, i64 %334
  store ptr %321, ptr %335, align 8
  br label %common.ret

if.entry53:                                       ; preds = %else17
  %memberidx57 = getelementptr inbounds %IdentifierToken, ptr %50, i64 0, i32 2
  %336 = load ptr, ptr %memberidx57, align 8
  %memberidx.i.i262 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %337 = load ptr, ptr %memberidx.i.i262, align 8
  %338 = load i64, ptr %337, align 4
  %339 = getelementptr inbounds ptr, ptr %39, i64 %338
  %340 = load ptr, ptr %339, align 8
  %memberidx1.i263 = getelementptr inbounds %Module, ptr %340, i64 0, i32 5
  %341 = load ptr, ptr %memberidx1.i263, align 8
  %342 = load i64, ptr %341, align 4
  %343 = getelementptr inbounds ptr, ptr %39, i64 %342
  %344 = load ptr, ptr %343, align 8
  %memberidx2.i.i264 = getelementptr inbounds %Module, ptr %344, i64 0, i32 7
  %345 = load ptr, ptr %memberidx2.i.i264, align 8
  %memberidx3.i.i265 = getelementptr inbounds %ScopeId, ptr %341, i64 0, i32 1
  %346 = load i64, ptr %memberidx3.i.i265, align 4
  %347 = load ptr, ptr %345, align 8
  %348 = getelementptr inbounds ptr, ptr %347, i64 %346
  %349 = load ptr, ptr %348, align 8
  %memberidx58 = getelementptr inbounds %Scope, ptr %349, i64 0, i32 1
  %350 = load ptr, ptr %memberidx58, align 8
  %351 = tail call ptr @malloc(i32 32)
  %352 = load ptr, ptr %46, align 8
  %353 = load i64, ptr %352, align 4
  %memberidx1.i266 = getelementptr inbounds %ScopeId, ptr %352, i64 0, i32 1
  %354 = load i64, ptr %memberidx1.i266, align 4
  store i64 5, ptr %351, align 4
  %memberidx1.i.i267 = getelementptr inbounds %VarId, ptr %351, i64 0, i32 1
  store i64 %353, ptr %memberidx1.i.i267, align 4
  %memberidx2.i.i268 = getelementptr inbounds %VarId, ptr %351, i64 0, i32 2
  store i64 %354, ptr %memberidx2.i.i268, align 4
  %memberidx2.i269 = getelementptr inbounds %ModuleVarId, ptr %351, i64 0, i32 3
  store ptr %352, ptr %memberidx2.i269, align 8
  tail call fastcc void @Map_String_VarId____setitem__(ptr %350, ptr %336, ptr nonnull %351)
  br label %common.ret

else54:                                           ; preds = %else17
  tail call fastcc void @TypeChecker_import_all_from_module(ptr nonnull %0, ptr nonnull %30)
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %3, align 4
  %memberidx = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %3, ptr %4)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %6, i64 0, i32 5
  %7 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %7, i64 0, i32 1
  %8 = load i64, ptr %memberidx2.i, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %common.ret, label %ifend

common.ret:                                       ; preds = %2, %TypeChecker_error.exit374, %if.entry84, %if.entry79, %TypeChecker_error.exit345, %Array_Expression____sl__.exit, %TypeChecker_error.exit286, %TypeChecker_error.exit260, %TypeChecker_error.exit252, %TypeChecker_error.exit192, %TypeChecker_error.exit, %ifend6
  %common.ret.op = phi ptr [ %17, %ifend6 ], [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit192 ], [ null, %TypeChecker_error.exit252 ], [ null, %TypeChecker_error.exit260 ], [ null, %TypeChecker_error.exit286 ], [ %343, %Array_Expression____sl__.exit ], [ null, %TypeChecker_error.exit345 ], [ %413, %if.entry79 ], [ %423, %if.entry84 ], [ null, %TypeChecker_error.exit374 ], [ null, %2 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %2
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %10 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %MemberExpressionNode, ptr %1, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx3, align 8
  %13 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %13, align 4
  %14 = load i64, ptr %10, align 4
  switch i64 %14, label %else85 [
    i64 20, label %if.entry.i2
    i64 11, label %if.entry3.i
    i64 17, label %if.entry25
    i64 13, label %if.entry54
    i64 14, label %if.entry76
    i64 18, label %if.entry84
  ]

if.entry.i2:                                      ; preds = %ifend, %if.entry.i2
  %.tr5.i = phi ptr [ %15, %if.entry.i2 ], [ %10, %ifend ]
  %memberidx1.i1 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %15 = load ptr, ptr %memberidx1.i1, align 8
  %16 = load i64, ptr %15, align 4
  switch i64 %16, label %else85 [
    i64 20, label %if.entry.i2
    i64 11, label %while.entry
  ]

ifend6:                                           ; preds = %if.entry76, %ifend.i352, %get_class_prop_type.exit274, %ifend49, %get_class_prop_type.exit
  %prop_ty.0 = phi ptr [ %common.ret.op.i194, %get_class_prop_type.exit ], [ %common.ret.op.i265, %get_class_prop_type.exit274 ], [ %329, %ifend49 ], [ %13, %ifend.i352 ], [ %13, %if.entry76 ]
  %prop_id.0 = phi ptr [ %56, %get_class_prop_type.exit ], [ %177, %get_class_prop_type.exit274 ], [ %207, %ifend49 ], [ null, %ifend.i352 ], [ null, %if.entry76 ]
  %17 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %17, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %17, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 1
  %memberidx.i171 = getelementptr inbounds %MemberExpression, ptr %17, i64 0, i32 4
  store ptr %5, ptr %memberidx.i171, align 8
  %memberidx1.i172 = getelementptr inbounds %MemberExpression, ptr %17, i64 0, i32 5
  store ptr %prop_id.0, ptr %memberidx1.i172, align 8
  %memberidx2.i173 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 3
  store ptr %prop_ty.0, ptr %memberidx2.i173, align 8
  br label %common.ret

while.entry:                                      ; preds = %if.entry.i2, %while.entry
  %prop_owner_type.0 = phi ptr [ %18, %while.entry ], [ %10, %if.entry.i2 ]
  %memberidx8 = getelementptr inbounds %GenericType, ptr %prop_owner_type.0, i64 0, i32 3
  %18 = load ptr, ptr %memberidx8, align 8
  %19 = load i64, ptr %18, align 4
  %20 = icmp eq i64 %19, 20
  br i1 %20, label %while.entry, label %if.entry3.i

if.entry3.i:                                      ; preds = %while.entry, %ifend
  %prop_owner_type.1 = phi ptr [ %10, %ifend ], [ %18, %while.entry ]
  %21 = load ptr, ptr %0, align 8
  %memberidx6.i7 = getelementptr inbounds %ObjectType, ptr %prop_owner_type.1, i64 0, i32 1
  %22 = load ptr, ptr %memberidx6.i7, align 8
  %23 = load ptr, ptr %21, align 8
  %24 = load i64, ptr %22, align 4
  %25 = load ptr, ptr %23, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  %memberidx2.i.i8 = getelementptr inbounds %Module, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx2.i.i8, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %29 = load i64, ptr %memberidx3.i.i, align 4
  %30 = load ptr, ptr %28, align 8
  %31 = getelementptr inbounds ptr, ptr %30, i64 %29
  %32 = load ptr, ptr %31, align 8
  %memberidx11 = getelementptr inbounds %Class, ptr %32, i64 0, i32 6
  %33 = load ptr, ptr %memberidx11, align 8
  %34 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %12)
  %memberidx.i174 = getelementptr inbounds %Map_String_PropId_, ptr %33, i64 0, i32 1
  %35 = load i64, ptr %memberidx.i174, align 4
  %36 = urem i64 %34, %35
  %37 = load ptr, ptr %33, align 8
  %38 = getelementptr inbounds ptr, ptr %37, i64 %36
  %39 = load ptr, ptr %38, align 8
  %.not.i = icmp eq ptr %39, null
  br i1 %.not.i, label %if.entry12, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i176 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %40 = phi ptr [ %50, %else.i ], [ %37, %while.entry.i.preheader ]
  %41 = phi i64 [ %51, %else.i ], [ %35, %while.entry.i.preheader ]
  %42 = phi ptr [ %55, %else.i ], [ %39, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %53, %else.i ], [ %36, %while.entry.i.preheader ]
  %43 = load ptr, ptr %42, align 8
  %memberidx.i.i175 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i.i175, align 4
  %45 = load i64, ptr %memberidx1.i.i176, align 4
  %.not.i.i = icmp eq i64 %44, %45
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %46 = load ptr, ptr %43, align 8
  %47 = load ptr, ptr %12, align 8
  %48 = tail call i64 @memcmp(ptr %46, ptr %47, i64 %44)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i174, align 4
  %.pre16 = load ptr, ptr %33, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre17.pre = load ptr, ptr %33, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre17.pre, i64 %hash.0.i
  %.pre18.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre18.pre, null
  br i1 %.not25.i, label %if.entry12, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %50 = phi ptr [ %.pre16, %ifend.i.i.else.i_crit_edge ], [ %40, %while.entry.i ]
  %51 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %41, %while.entry.i ]
  %52 = add nuw i64 %hash.0.i, 1
  %53 = urem i64 %52, %51
  %54 = getelementptr inbounds ptr, ptr %50, i64 %53
  %55 = load ptr, ptr %54, align 8
  %.not26.i = icmp eq ptr %55, null
  br i1 %.not26.i, label %if.entry12, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre18.pre, i64 0, i32 1
  %56 = load ptr, ptr %memberidx11.i, align 8
  %57 = icmp eq ptr %56, null
  br i1 %57, label %if.entry12, label %ifend14

if.entry12:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_String_PropId____getitem__.exit
  %memberidx.i177 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i177, align 4
  %59 = trunc i64 %58 to i32
  %60 = add i32 %59, 1
  %61 = tail call ptr @malloc(i32 %60)
  %62 = load ptr, ptr %12, align 8
  %63 = load i64, ptr %memberidx.i177, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %61, ptr align 8 %62, i64 %63, i1 false)
  %64 = getelementptr inbounds i8, ptr %61, i64 %63
  store i8 0, ptr %64, align 1
  %memberidx15 = getelementptr inbounds %Class, ptr %32, i64 0, i32 1
  %65 = load ptr, ptr %memberidx15, align 8
  %memberidx.i178 = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  %66 = load i64, ptr %memberidx.i178, align 4
  %67 = trunc i64 %66 to i32
  %68 = add i32 %67, 1
  %69 = tail call ptr @malloc(i32 %68)
  %70 = load ptr, ptr %65, align 8
  %71 = load i64, ptr %memberidx.i178, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %69, ptr align 8 %70, i64 %71, i1 false)
  %72 = getelementptr inbounds i8, ptr %69, i64 %71
  store i8 0, ptr %72, align 1
  %73 = alloca ptr, align 8
  %74 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %73, ptr nonnull @197, ptr %61, ptr %69)
  %75 = load ptr, ptr %73, align 8
  %76 = tail call ptr @malloc(i32 24)
  store ptr %75, ptr %76, align 8
  %memberidx1.i179 = getelementptr inbounds %String, ptr %76, i64 0, i32 1
  store i64 %74, ptr %memberidx1.i179, align 4
  %memberidx2.i180 = getelementptr inbounds %String, ptr %76, i64 0, i32 2
  store i64 %74, ptr %memberidx2.i180, align 4
  tail call void @free(ptr %61)
  tail call void @free(ptr %69)
  %77 = load ptr, ptr %memberidx2, align 8
  %memberidx17 = getelementptr inbounds %Token, ptr %77, i64 0, i32 1
  %78 = load ptr, ptr %memberidx17, align 8
  %79 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i182 = getelementptr inbounds %Compiler, ptr %79, i64 0, i32 5
  %80 = load ptr, ptr %memberidx1.i182, align 8
  %81 = call ptr @malloc(i32 24)
  store i64 1, ptr %81, align 4
  %memberidx1.i.i183 = getelementptr inbounds %FloError, ptr %81, i64 0, i32 2
  store ptr %78, ptr %memberidx1.i.i183, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %81, i64 0, i32 1
  store ptr %76, ptr %memberidx2.i.i, align 8
  %memberidx.i.i184 = getelementptr inbounds %Array_FloError_, ptr %80, i64 0, i32 1
  %82 = load i64, ptr %memberidx.i.i184, align 4
  %83 = add i64 %82, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %80, i64 0, i32 2
  %84 = load i64, ptr %memberidx.i.i.i, align 4
  %85 = icmp slt i64 %84, %83
  %.pre22 = load ptr, ptr %80, align 8
  br i1 %85, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry12, %while.entry.i.i.i
  %86 = phi ptr [ %90, %while.entry.i.i.i ], [ %.pre22, %if.entry12 ]
  %87 = phi i64 [ %91, %while.entry.i.i.i ], [ %84, %if.entry12 ]
  %88 = shl nuw i64 %87, 1
  store i64 %88, ptr %memberidx.i.i.i, align 4
  %89 = shl i64 %87, 4
  %90 = call ptr @realloc(ptr %86, i64 %89)
  store ptr %90, ptr %80, align 8
  %91 = load i64, ptr %memberidx.i.i.i, align 4
  %92 = icmp slt i64 %91, %83
  br i1 %92, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre23 = load i64, ptr %memberidx.i.i184, align 4
  %.pre71 = add nsw i64 %.pre23, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry12, %TypeChecker_error.exit.loopexit
  %.pre-phi72 = phi i64 [ %.pre71, %TypeChecker_error.exit.loopexit ], [ %83, %if.entry12 ]
  %93 = phi ptr [ %90, %TypeChecker_error.exit.loopexit ], [ %.pre22, %if.entry12 ]
  %94 = phi i64 [ %.pre23, %TypeChecker_error.exit.loopexit ], [ %82, %if.entry12 ]
  store i64 %.pre-phi72, ptr %memberidx.i.i184, align 4
  %95 = getelementptr inbounds ptr, ptr %93, i64 %94
  store ptr %81, ptr %95, align 8
  br label %common.ret

ifend14:                                          ; preds = %Map_String_PropId____getitem__.exit
  %96 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %56)
  %.not170 = icmp eq ptr %96, null
  br i1 %.not170, label %ifend20, label %if.entry18

if.entry18:                                       ; preds = %ifend14
  %97 = load ptr, ptr %memberidx2, align 8
  %memberidx22 = getelementptr inbounds %Token, ptr %97, i64 0, i32 1
  %98 = load ptr, ptr %memberidx22, align 8
  %99 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i186 = getelementptr inbounds %Compiler, ptr %99, i64 0, i32 5
  %100 = load ptr, ptr %memberidx1.i186, align 8
  %101 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %101, align 4
  %memberidx1.i.i187 = getelementptr inbounds %FloError, ptr %101, i64 0, i32 2
  store ptr %98, ptr %memberidx1.i.i187, align 8
  %memberidx2.i.i188 = getelementptr inbounds %FloError, ptr %101, i64 0, i32 1
  store ptr %96, ptr %memberidx2.i.i188, align 8
  %memberidx.i.i189 = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 1
  %102 = load i64, ptr %memberidx.i.i189, align 4
  %103 = add i64 %102, 1
  %memberidx.i.i.i190 = getelementptr inbounds %Array_FloError_, ptr %100, i64 0, i32 2
  %104 = load i64, ptr %memberidx.i.i.i190, align 4
  %105 = icmp slt i64 %104, %103
  %.pre19 = load ptr, ptr %100, align 8
  br i1 %105, label %while.entry.i.i.i191, label %TypeChecker_error.exit192

while.entry.i.i.i191:                             ; preds = %if.entry18, %while.entry.i.i.i191
  %106 = phi ptr [ %110, %while.entry.i.i.i191 ], [ %.pre19, %if.entry18 ]
  %107 = phi i64 [ %111, %while.entry.i.i.i191 ], [ %104, %if.entry18 ]
  %108 = shl nuw i64 %107, 1
  store i64 %108, ptr %memberidx.i.i.i190, align 4
  %109 = shl i64 %107, 4
  %110 = tail call ptr @realloc(ptr %106, i64 %109)
  store ptr %110, ptr %100, align 8
  %111 = load i64, ptr %memberidx.i.i.i190, align 4
  %112 = icmp slt i64 %111, %103
  br i1 %112, label %while.entry.i.i.i191, label %TypeChecker_error.exit192.loopexit

TypeChecker_error.exit192.loopexit:               ; preds = %while.entry.i.i.i191
  %.pre20 = load i64, ptr %memberidx.i.i189, align 4
  %.pre73 = add nsw i64 %.pre20, 1
  br label %TypeChecker_error.exit192

TypeChecker_error.exit192:                        ; preds = %if.entry18, %TypeChecker_error.exit192.loopexit
  %.pre-phi74 = phi i64 [ %.pre73, %TypeChecker_error.exit192.loopexit ], [ %103, %if.entry18 ]
  %113 = phi ptr [ %110, %TypeChecker_error.exit192.loopexit ], [ %.pre19, %if.entry18 ]
  %114 = phi i64 [ %.pre20, %TypeChecker_error.exit192.loopexit ], [ %102, %if.entry18 ]
  store i64 %.pre-phi74, ptr %memberidx.i.i189, align 4
  %115 = getelementptr inbounds ptr, ptr %113, i64 %114
  store ptr %101, ptr %115, align 8
  br label %common.ret

ifend20:                                          ; preds = %ifend14
  %116 = load ptr, ptr %0, align 8
  %memberidx.i.i193 = getelementptr inbounds %PropId, ptr %56, i64 0, i32 1
  %117 = load ptr, ptr %memberidx.i.i193, align 8
  %118 = load ptr, ptr %116, align 8
  %119 = load i64, ptr %117, align 4
  %120 = load ptr, ptr %118, align 8
  %121 = getelementptr inbounds ptr, ptr %120, i64 %119
  %122 = load ptr, ptr %121, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %122, i64 0, i32 3
  %123 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %117, i64 0, i32 2
  %124 = load i64, ptr %memberidx3.i.i.i, align 4
  %125 = load ptr, ptr %123, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %124
  %127 = load ptr, ptr %126, align 8
  %128 = load i64, ptr %56, align 4
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend20
  %memberidx1.i195 = getelementptr inbounds %Class, ptr %127, i64 0, i32 5
  %130 = load ptr, ptr %memberidx1.i195, align 8
  %memberidx2.i196 = getelementptr inbounds %PropId, ptr %56, i64 0, i32 2
  %131 = load i64, ptr %memberidx2.i196, align 4
  %132 = load ptr, ptr %130, align 8
  %133 = getelementptr inbounds ptr, ptr %132, i64 %131
  %134 = load ptr, ptr %133, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %134, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend20
  %memberidx4.i = getelementptr inbounds %Class, ptr %127, i64 0, i32 4
  %135 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %56, i64 0, i32 2
  %136 = load i64, ptr %memberidx5.i, align 4
  %137 = load ptr, ptr %135, align 8
  %138 = getelementptr inbounds ptr, ptr %137, i64 %136
  %139 = load ptr, ptr %138, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %139, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i194 = load ptr, ptr %common.ret.op.in.i, align 8
  br label %ifend6

if.entry25:                                       ; preds = %ifend
  %memberidx28 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %140 = load ptr, ptr %memberidx28, align 8
  %141 = load i64, ptr %140, align 4
  %142 = icmp eq i64 %141, 3
  %memberidx.i197 = getelementptr inbounds %VarId, ptr %140, i64 0, i32 1
  %143 = load i64, ptr %memberidx.i197, align 4
  %144 = load ptr, ptr %0, align 8
  %145 = load ptr, ptr %144, align 8
  %146 = load ptr, ptr %145, align 8
  %147 = getelementptr inbounds ptr, ptr %146, i64 %143
  %148 = load ptr, ptr %147, align 8
  br i1 %142, label %if.entry30, label %else31

if.entry30:                                       ; preds = %if.entry25
  %memberidx1.i198 = getelementptr inbounds %Module, ptr %148, i64 0, i32 3
  %149 = load ptr, ptr %memberidx1.i198, align 8
  %memberidx2.i199 = getelementptr inbounds %VarId, ptr %140, i64 0, i32 2
  %150 = load i64, ptr %memberidx2.i199, align 4
  %151 = load ptr, ptr %149, align 8
  %152 = getelementptr inbounds ptr, ptr %151, i64 %150
  %153 = load ptr, ptr %152, align 8
  %memberidx33 = getelementptr inbounds %Class, ptr %153, i64 0, i32 7
  %154 = load ptr, ptr %memberidx33, align 8
  %155 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %12)
  %memberidx.i200 = getelementptr inbounds %Map_String_PropId_, ptr %154, i64 0, i32 1
  %156 = load i64, ptr %memberidx.i200, align 4
  %157 = urem i64 %155, %156
  %158 = load ptr, ptr %154, align 8
  %159 = getelementptr inbounds ptr, ptr %158, i64 %157
  %160 = load ptr, ptr %159, align 8
  %.not.i201 = icmp eq ptr %160, null
  br i1 %.not.i201, label %if.entry34, label %while.entry.i206.preheader

while.entry.i206.preheader:                       ; preds = %if.entry30
  %memberidx1.i.i204 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  br label %while.entry.i206

while.entry.i206:                                 ; preds = %while.entry.i206.preheader, %else.i214
  %161 = phi ptr [ %171, %else.i214 ], [ %158, %while.entry.i206.preheader ]
  %162 = phi i64 [ %172, %else.i214 ], [ %156, %while.entry.i206.preheader ]
  %163 = phi ptr [ %176, %else.i214 ], [ %160, %while.entry.i206.preheader ]
  %hash.0.i202 = phi i64 [ %174, %else.i214 ], [ %157, %while.entry.i206.preheader ]
  %164 = load ptr, ptr %163, align 8
  %memberidx.i.i203 = getelementptr inbounds %String, ptr %164, i64 0, i32 1
  %165 = load i64, ptr %memberidx.i.i203, align 4
  %166 = load i64, ptr %memberidx1.i.i204, align 4
  %.not.i.i205 = icmp eq i64 %165, %166
  br i1 %.not.i.i205, label %ifend.i.i207, label %else.i214

ifend.i.i207:                                     ; preds = %while.entry.i206
  %167 = load ptr, ptr %164, align 8
  %168 = load ptr, ptr %12, align 8
  %169 = tail call i64 @memcmp(ptr %167, ptr %168, i64 %165)
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %while.end.i212, label %ifend.i.i207.else.i214_crit_edge

ifend.i.i207.else.i214_crit_edge:                 ; preds = %ifend.i.i207
  %.pre40 = load i64, ptr %memberidx.i200, align 4
  %.pre41 = load ptr, ptr %154, align 8
  br label %else.i214

while.end.i212:                                   ; preds = %ifend.i.i207
  %.pre42.pre = load ptr, ptr %154, align 8
  %.phi.trans.insert43.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre42.pre, i64 %hash.0.i202
  %.pre44.pre = load ptr, ptr %.phi.trans.insert43.phi.trans.insert, align 8
  %.not25.i211 = icmp eq ptr %.pre44.pre, null
  br i1 %.not25.i211, label %if.entry34, label %Map_String_PropId____getitem__.exit218

else.i214:                                        ; preds = %ifend.i.i207.else.i214_crit_edge, %while.entry.i206
  %171 = phi ptr [ %.pre41, %ifend.i.i207.else.i214_crit_edge ], [ %161, %while.entry.i206 ]
  %172 = phi i64 [ %.pre40, %ifend.i.i207.else.i214_crit_edge ], [ %162, %while.entry.i206 ]
  %173 = add nuw i64 %hash.0.i202, 1
  %174 = urem i64 %173, %172
  %175 = getelementptr inbounds ptr, ptr %171, i64 %174
  %176 = load ptr, ptr %175, align 8
  %.not26.i213 = icmp eq ptr %176, null
  br i1 %.not26.i213, label %if.entry34, label %while.entry.i206

Map_String_PropId____getitem__.exit218:           ; preds = %while.end.i212
  %memberidx11.i216 = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre44.pre, i64 0, i32 1
  %177 = load ptr, ptr %memberidx11.i216, align 8
  %178 = icmp eq ptr %177, null
  br i1 %178, label %if.entry34, label %ifend36

else31:                                           ; preds = %if.entry25
  %memberidx1.i220 = getelementptr inbounds %Module, ptr %148, i64 0, i32 6
  %179 = load ptr, ptr %memberidx1.i220, align 8
  %memberidx2.i221 = getelementptr inbounds %VarId, ptr %140, i64 0, i32 2
  %180 = load i64, ptr %memberidx2.i221, align 4
  %181 = load ptr, ptr %179, align 8
  %182 = getelementptr inbounds ptr, ptr %181, i64 %180
  %183 = load ptr, ptr %182, align 8
  %memberidx46 = getelementptr inbounds %Enum, ptr %183, i64 0, i32 3
  %184 = load ptr, ptr %memberidx46, align 8
  %185 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %12)
  %memberidx.i222 = getelementptr inbounds %Map_String_PropId_, ptr %184, i64 0, i32 1
  %186 = load i64, ptr %memberidx.i222, align 4
  %187 = urem i64 %185, %186
  %188 = load ptr, ptr %184, align 8
  %189 = getelementptr inbounds ptr, ptr %188, i64 %187
  %190 = load ptr, ptr %189, align 8
  %.not.i223 = icmp eq ptr %190, null
  br i1 %.not.i223, label %if.entry47, label %while.entry.i228.preheader

while.entry.i228.preheader:                       ; preds = %else31
  %memberidx1.i.i226 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  br label %while.entry.i228

while.entry.i228:                                 ; preds = %while.entry.i228.preheader, %else.i236
  %191 = phi ptr [ %201, %else.i236 ], [ %188, %while.entry.i228.preheader ]
  %192 = phi i64 [ %202, %else.i236 ], [ %186, %while.entry.i228.preheader ]
  %193 = phi ptr [ %206, %else.i236 ], [ %190, %while.entry.i228.preheader ]
  %hash.0.i224 = phi i64 [ %204, %else.i236 ], [ %187, %while.entry.i228.preheader ]
  %194 = load ptr, ptr %193, align 8
  %memberidx.i.i225 = getelementptr inbounds %String, ptr %194, i64 0, i32 1
  %195 = load i64, ptr %memberidx.i.i225, align 4
  %196 = load i64, ptr %memberidx1.i.i226, align 4
  %.not.i.i227 = icmp eq i64 %195, %196
  br i1 %.not.i.i227, label %ifend.i.i229, label %else.i236

ifend.i.i229:                                     ; preds = %while.entry.i228
  %197 = load ptr, ptr %194, align 8
  %198 = load ptr, ptr %12, align 8
  %199 = tail call i64 @memcmp(ptr %197, ptr %198, i64 %195)
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %while.end.i234, label %ifend.i.i229.else.i236_crit_edge

ifend.i.i229.else.i236_crit_edge:                 ; preds = %ifend.i.i229
  %.pre32 = load i64, ptr %memberidx.i222, align 4
  %.pre33 = load ptr, ptr %184, align 8
  br label %else.i236

while.end.i234:                                   ; preds = %ifend.i.i229
  %.pre34.pre = load ptr, ptr %184, align 8
  %.phi.trans.insert35.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre34.pre, i64 %hash.0.i224
  %.pre36.pre = load ptr, ptr %.phi.trans.insert35.phi.trans.insert, align 8
  %.not25.i233 = icmp eq ptr %.pre36.pre, null
  br i1 %.not25.i233, label %if.entry47, label %Map_String_PropId____getitem__.exit240

else.i236:                                        ; preds = %ifend.i.i229.else.i236_crit_edge, %while.entry.i228
  %201 = phi ptr [ %.pre33, %ifend.i.i229.else.i236_crit_edge ], [ %191, %while.entry.i228 ]
  %202 = phi i64 [ %.pre32, %ifend.i.i229.else.i236_crit_edge ], [ %192, %while.entry.i228 ]
  %203 = add nuw i64 %hash.0.i224, 1
  %204 = urem i64 %203, %202
  %205 = getelementptr inbounds ptr, ptr %201, i64 %204
  %206 = load ptr, ptr %205, align 8
  %.not26.i235 = icmp eq ptr %206, null
  br i1 %.not26.i235, label %if.entry47, label %while.entry.i228

Map_String_PropId____getitem__.exit240:           ; preds = %while.end.i234
  %memberidx11.i238 = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre36.pre, i64 0, i32 1
  %207 = load ptr, ptr %memberidx11.i238, align 8
  %208 = icmp eq ptr %207, null
  br i1 %208, label %if.entry47, label %ifend49

if.entry34:                                       ; preds = %else.i214, %if.entry30, %while.end.i212, %Map_String_PropId____getitem__.exit218
  %memberidx.i241 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %209 = load i64, ptr %memberidx.i241, align 4
  %210 = trunc i64 %209 to i32
  %211 = add i32 %210, 1
  %212 = tail call ptr @malloc(i32 %211)
  %213 = load ptr, ptr %12, align 8
  %214 = load i64, ptr %memberidx.i241, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %212, ptr align 8 %213, i64 %214, i1 false)
  %215 = getelementptr inbounds i8, ptr %212, i64 %214
  store i8 0, ptr %215, align 1
  %memberidx37 = getelementptr inbounds %Class, ptr %153, i64 0, i32 1
  %216 = load ptr, ptr %memberidx37, align 8
  %memberidx.i242 = getelementptr inbounds %String, ptr %216, i64 0, i32 1
  %217 = load i64, ptr %memberidx.i242, align 4
  %218 = trunc i64 %217 to i32
  %219 = add i32 %218, 1
  %220 = tail call ptr @malloc(i32 %219)
  %221 = load ptr, ptr %216, align 8
  %222 = load i64, ptr %memberidx.i242, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %220, ptr align 8 %221, i64 %222, i1 false)
  %223 = getelementptr inbounds i8, ptr %220, i64 %222
  store i8 0, ptr %223, align 1
  %224 = alloca ptr, align 8
  %225 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %224, ptr nonnull @198, ptr %212, ptr %220)
  %226 = load ptr, ptr %224, align 8
  %227 = tail call ptr @malloc(i32 24)
  store ptr %226, ptr %227, align 8
  %memberidx1.i243 = getelementptr inbounds %String, ptr %227, i64 0, i32 1
  store i64 %225, ptr %memberidx1.i243, align 4
  %memberidx2.i244 = getelementptr inbounds %String, ptr %227, i64 0, i32 2
  store i64 %225, ptr %memberidx2.i244, align 4
  tail call void @free(ptr %212)
  tail call void @free(ptr %220)
  %228 = load ptr, ptr %memberidx2, align 8
  %memberidx39 = getelementptr inbounds %Token, ptr %228, i64 0, i32 1
  %229 = load ptr, ptr %memberidx39, align 8
  %230 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i246 = getelementptr inbounds %Compiler, ptr %230, i64 0, i32 5
  %231 = load ptr, ptr %memberidx1.i246, align 8
  %232 = call ptr @malloc(i32 24)
  store i64 1, ptr %232, align 4
  %memberidx1.i.i247 = getelementptr inbounds %FloError, ptr %232, i64 0, i32 2
  store ptr %229, ptr %memberidx1.i.i247, align 8
  %memberidx2.i.i248 = getelementptr inbounds %FloError, ptr %232, i64 0, i32 1
  store ptr %227, ptr %memberidx2.i.i248, align 8
  %memberidx.i.i249 = getelementptr inbounds %Array_FloError_, ptr %231, i64 0, i32 1
  %233 = load i64, ptr %memberidx.i.i249, align 4
  %234 = add i64 %233, 1
  %memberidx.i.i.i250 = getelementptr inbounds %Array_FloError_, ptr %231, i64 0, i32 2
  %235 = load i64, ptr %memberidx.i.i.i250, align 4
  %236 = icmp slt i64 %235, %234
  %.pre48 = load ptr, ptr %231, align 8
  br i1 %236, label %while.entry.i.i.i251, label %TypeChecker_error.exit252

while.entry.i.i.i251:                             ; preds = %if.entry34, %while.entry.i.i.i251
  %237 = phi ptr [ %241, %while.entry.i.i.i251 ], [ %.pre48, %if.entry34 ]
  %238 = phi i64 [ %242, %while.entry.i.i.i251 ], [ %235, %if.entry34 ]
  %239 = shl nuw i64 %238, 1
  store i64 %239, ptr %memberidx.i.i.i250, align 4
  %240 = shl i64 %238, 4
  %241 = call ptr @realloc(ptr %237, i64 %240)
  store ptr %241, ptr %231, align 8
  %242 = load i64, ptr %memberidx.i.i.i250, align 4
  %243 = icmp slt i64 %242, %234
  br i1 %243, label %while.entry.i.i.i251, label %TypeChecker_error.exit252.loopexit

TypeChecker_error.exit252.loopexit:               ; preds = %while.entry.i.i.i251
  %.pre49 = load i64, ptr %memberidx.i.i249, align 4
  %.pre61 = add nsw i64 %.pre49, 1
  br label %TypeChecker_error.exit252

TypeChecker_error.exit252:                        ; preds = %if.entry34, %TypeChecker_error.exit252.loopexit
  %.pre-phi62 = phi i64 [ %.pre61, %TypeChecker_error.exit252.loopexit ], [ %234, %if.entry34 ]
  %244 = phi ptr [ %241, %TypeChecker_error.exit252.loopexit ], [ %.pre48, %if.entry34 ]
  %245 = phi i64 [ %.pre49, %TypeChecker_error.exit252.loopexit ], [ %233, %if.entry34 ]
  store i64 %.pre-phi62, ptr %memberidx.i.i249, align 4
  %246 = getelementptr inbounds ptr, ptr %244, i64 %245
  store ptr %232, ptr %246, align 8
  br label %common.ret

ifend36:                                          ; preds = %Map_String_PropId____getitem__.exit218
  %247 = tail call fastcc ptr @TypeChecker_check_member_access(ptr nonnull %0, ptr nonnull %177)
  %.not = icmp eq ptr %247, null
  br i1 %.not, label %ifend42, label %if.entry40

if.entry40:                                       ; preds = %ifend36
  %248 = load ptr, ptr %memberidx2, align 8
  %memberidx44 = getelementptr inbounds %Token, ptr %248, i64 0, i32 1
  %249 = load ptr, ptr %memberidx44, align 8
  %250 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i254 = getelementptr inbounds %Compiler, ptr %250, i64 0, i32 5
  %251 = load ptr, ptr %memberidx1.i254, align 8
  %252 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %252, align 4
  %memberidx1.i.i255 = getelementptr inbounds %FloError, ptr %252, i64 0, i32 2
  store ptr %249, ptr %memberidx1.i.i255, align 8
  %memberidx2.i.i256 = getelementptr inbounds %FloError, ptr %252, i64 0, i32 1
  store ptr %247, ptr %memberidx2.i.i256, align 8
  %memberidx.i.i257 = getelementptr inbounds %Array_FloError_, ptr %251, i64 0, i32 1
  %253 = load i64, ptr %memberidx.i.i257, align 4
  %254 = add i64 %253, 1
  %memberidx.i.i.i258 = getelementptr inbounds %Array_FloError_, ptr %251, i64 0, i32 2
  %255 = load i64, ptr %memberidx.i.i.i258, align 4
  %256 = icmp slt i64 %255, %254
  %.pre45 = load ptr, ptr %251, align 8
  br i1 %256, label %while.entry.i.i.i259, label %TypeChecker_error.exit260

while.entry.i.i.i259:                             ; preds = %if.entry40, %while.entry.i.i.i259
  %257 = phi ptr [ %261, %while.entry.i.i.i259 ], [ %.pre45, %if.entry40 ]
  %258 = phi i64 [ %262, %while.entry.i.i.i259 ], [ %255, %if.entry40 ]
  %259 = shl nuw i64 %258, 1
  store i64 %259, ptr %memberidx.i.i.i258, align 4
  %260 = shl i64 %258, 4
  %261 = tail call ptr @realloc(ptr %257, i64 %260)
  store ptr %261, ptr %251, align 8
  %262 = load i64, ptr %memberidx.i.i.i258, align 4
  %263 = icmp slt i64 %262, %254
  br i1 %263, label %while.entry.i.i.i259, label %TypeChecker_error.exit260.loopexit

TypeChecker_error.exit260.loopexit:               ; preds = %while.entry.i.i.i259
  %.pre46 = load i64, ptr %memberidx.i.i257, align 4
  %.pre63 = add nsw i64 %.pre46, 1
  br label %TypeChecker_error.exit260

TypeChecker_error.exit260:                        ; preds = %if.entry40, %TypeChecker_error.exit260.loopexit
  %.pre-phi64 = phi i64 [ %.pre63, %TypeChecker_error.exit260.loopexit ], [ %254, %if.entry40 ]
  %264 = phi ptr [ %261, %TypeChecker_error.exit260.loopexit ], [ %.pre45, %if.entry40 ]
  %265 = phi i64 [ %.pre46, %TypeChecker_error.exit260.loopexit ], [ %253, %if.entry40 ]
  store i64 %.pre-phi64, ptr %memberidx.i.i257, align 4
  %266 = getelementptr inbounds ptr, ptr %264, i64 %265
  store ptr %252, ptr %266, align 8
  br label %common.ret

ifend42:                                          ; preds = %ifend36
  %267 = load ptr, ptr %0, align 8
  %memberidx.i.i261 = getelementptr inbounds %PropId, ptr %177, i64 0, i32 1
  %268 = load ptr, ptr %memberidx.i.i261, align 8
  %269 = load ptr, ptr %267, align 8
  %270 = load i64, ptr %268, align 4
  %271 = load ptr, ptr %269, align 8
  %272 = getelementptr inbounds ptr, ptr %271, i64 %270
  %273 = load ptr, ptr %272, align 8
  %memberidx2.i.i.i262 = getelementptr inbounds %Module, ptr %273, i64 0, i32 3
  %274 = load ptr, ptr %memberidx2.i.i.i262, align 8
  %memberidx3.i.i.i263 = getelementptr inbounds %TypeId, ptr %268, i64 0, i32 2
  %275 = load i64, ptr %memberidx3.i.i.i263, align 4
  %276 = load ptr, ptr %274, align 8
  %277 = getelementptr inbounds ptr, ptr %276, i64 %275
  %278 = load ptr, ptr %277, align 8
  %279 = load i64, ptr %177, align 4
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %if.entry.i269, label %ifend.i273

if.entry.i269:                                    ; preds = %ifend42
  %memberidx1.i266 = getelementptr inbounds %Class, ptr %278, i64 0, i32 5
  %281 = load ptr, ptr %memberidx1.i266, align 8
  %memberidx2.i267 = getelementptr inbounds %PropId, ptr %177, i64 0, i32 2
  %282 = load i64, ptr %memberidx2.i267, align 4
  %283 = load ptr, ptr %281, align 8
  %284 = getelementptr inbounds ptr, ptr %283, i64 %282
  %285 = load ptr, ptr %284, align 8
  %memberidx3.i268 = getelementptr inbounds %ClassMethod, ptr %285, i64 0, i32 4
  br label %get_class_prop_type.exit274

ifend.i273:                                       ; preds = %ifend42
  %memberidx4.i270 = getelementptr inbounds %Class, ptr %278, i64 0, i32 4
  %286 = load ptr, ptr %memberidx4.i270, align 8
  %memberidx5.i271 = getelementptr inbounds %PropId, ptr %177, i64 0, i32 2
  %287 = load i64, ptr %memberidx5.i271, align 4
  %288 = load ptr, ptr %286, align 8
  %289 = getelementptr inbounds ptr, ptr %288, i64 %287
  %290 = load ptr, ptr %289, align 8
  %memberidx6.i272 = getelementptr inbounds %ClassField, ptr %290, i64 0, i32 4
  br label %get_class_prop_type.exit274

get_class_prop_type.exit274:                      ; preds = %if.entry.i269, %ifend.i273
  %common.ret.op.in.i264 = phi ptr [ %memberidx3.i268, %if.entry.i269 ], [ %memberidx6.i272, %ifend.i273 ]
  %common.ret.op.i265 = load ptr, ptr %common.ret.op.in.i264, align 8
  br label %ifend6

if.entry47:                                       ; preds = %else.i236, %else31, %while.end.i234, %Map_String_PropId____getitem__.exit240
  %memberidx.i275 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %291 = load i64, ptr %memberidx.i275, align 4
  %292 = trunc i64 %291 to i32
  %293 = add i32 %292, 1
  %294 = tail call ptr @malloc(i32 %293)
  %295 = load ptr, ptr %12, align 8
  %296 = load i64, ptr %memberidx.i275, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %294, ptr align 8 %295, i64 %296, i1 false)
  %297 = getelementptr inbounds i8, ptr %294, i64 %296
  store i8 0, ptr %297, align 1
  %memberidx50 = getelementptr inbounds %Enum, ptr %183, i64 0, i32 1
  %298 = load ptr, ptr %memberidx50, align 8
  %memberidx.i276 = getelementptr inbounds %String, ptr %298, i64 0, i32 1
  %299 = load i64, ptr %memberidx.i276, align 4
  %300 = trunc i64 %299 to i32
  %301 = add i32 %300, 1
  %302 = tail call ptr @malloc(i32 %301)
  %303 = load ptr, ptr %298, align 8
  %304 = load i64, ptr %memberidx.i276, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %302, ptr align 8 %303, i64 %304, i1 false)
  %305 = getelementptr inbounds i8, ptr %302, i64 %304
  store i8 0, ptr %305, align 1
  %306 = alloca ptr, align 8
  %307 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %306, ptr nonnull @199, ptr %294, ptr %302)
  %308 = load ptr, ptr %306, align 8
  %309 = tail call ptr @malloc(i32 24)
  store ptr %308, ptr %309, align 8
  %memberidx1.i277 = getelementptr inbounds %String, ptr %309, i64 0, i32 1
  store i64 %307, ptr %memberidx1.i277, align 4
  %memberidx2.i278 = getelementptr inbounds %String, ptr %309, i64 0, i32 2
  store i64 %307, ptr %memberidx2.i278, align 4
  tail call void @free(ptr %294)
  tail call void @free(ptr %302)
  %310 = load ptr, ptr %memberidx2, align 8
  %memberidx52 = getelementptr inbounds %Token, ptr %310, i64 0, i32 1
  %311 = load ptr, ptr %memberidx52, align 8
  %312 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i280 = getelementptr inbounds %Compiler, ptr %312, i64 0, i32 5
  %313 = load ptr, ptr %memberidx1.i280, align 8
  %314 = call ptr @malloc(i32 24)
  store i64 1, ptr %314, align 4
  %memberidx1.i.i281 = getelementptr inbounds %FloError, ptr %314, i64 0, i32 2
  store ptr %311, ptr %memberidx1.i.i281, align 8
  %memberidx2.i.i282 = getelementptr inbounds %FloError, ptr %314, i64 0, i32 1
  store ptr %309, ptr %memberidx2.i.i282, align 8
  %memberidx.i.i283 = getelementptr inbounds %Array_FloError_, ptr %313, i64 0, i32 1
  %315 = load i64, ptr %memberidx.i.i283, align 4
  %316 = add i64 %315, 1
  %memberidx.i.i.i284 = getelementptr inbounds %Array_FloError_, ptr %313, i64 0, i32 2
  %317 = load i64, ptr %memberidx.i.i.i284, align 4
  %318 = icmp slt i64 %317, %316
  %.pre37 = load ptr, ptr %313, align 8
  br i1 %318, label %while.entry.i.i.i285, label %TypeChecker_error.exit286

while.entry.i.i.i285:                             ; preds = %if.entry47, %while.entry.i.i.i285
  %319 = phi ptr [ %323, %while.entry.i.i.i285 ], [ %.pre37, %if.entry47 ]
  %320 = phi i64 [ %324, %while.entry.i.i.i285 ], [ %317, %if.entry47 ]
  %321 = shl nuw i64 %320, 1
  store i64 %321, ptr %memberidx.i.i.i284, align 4
  %322 = shl i64 %320, 4
  %323 = call ptr @realloc(ptr %319, i64 %322)
  store ptr %323, ptr %313, align 8
  %324 = load i64, ptr %memberidx.i.i.i284, align 4
  %325 = icmp slt i64 %324, %316
  br i1 %325, label %while.entry.i.i.i285, label %TypeChecker_error.exit286.loopexit

TypeChecker_error.exit286.loopexit:               ; preds = %while.entry.i.i.i285
  %.pre38 = load i64, ptr %memberidx.i.i283, align 4
  %.pre65 = add nsw i64 %.pre38, 1
  br label %TypeChecker_error.exit286

TypeChecker_error.exit286:                        ; preds = %if.entry47, %TypeChecker_error.exit286.loopexit
  %.pre-phi66 = phi i64 [ %.pre65, %TypeChecker_error.exit286.loopexit ], [ %316, %if.entry47 ]
  %326 = phi ptr [ %323, %TypeChecker_error.exit286.loopexit ], [ %.pre37, %if.entry47 ]
  %327 = phi i64 [ %.pre38, %TypeChecker_error.exit286.loopexit ], [ %315, %if.entry47 ]
  store i64 %.pre-phi66, ptr %memberidx.i.i283, align 4
  %328 = getelementptr inbounds ptr, ptr %326, i64 %327
  store ptr %314, ptr %328, align 8
  br label %common.ret

ifend49:                                          ; preds = %Map_String_PropId____getitem__.exit240
  %329 = tail call ptr @malloc(i32 16)
  %330 = load ptr, ptr %183, align 8
  store i64 12, ptr %329, align 4
  %memberidx.i287 = getelementptr inbounds %EnumType, ptr %329, i64 0, i32 1
  store ptr %330, ptr %memberidx.i287, align 8
  br label %ifend6

if.entry54:                                       ; preds = %ifend
  %331 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %331, ptr noundef nonnull align 8 dereferenceable(9) @200, i64 9, i1 false)
  %332 = tail call ptr @malloc(i32 24)
  store ptr %331, ptr %332, align 8
  %memberidx1.i.i288 = getelementptr inbounds %String, ptr %332, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i288, align 4
  %memberidx2.i.i289 = getelementptr inbounds %String, ptr %332, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i289, align 4
  %memberidx.i290 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %333 = load i64, ptr %memberidx.i290, align 4
  %.not.i292 = icmp eq i64 %333, 9
  br i1 %.not.i292, label %ifend.i294, label %else58

ifend.i294:                                       ; preds = %if.entry54
  %334 = load ptr, ptr %12, align 8
  %335 = tail call i64 @memcmp(ptr %334, ptr nonnull %331, i64 9)
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %ifend59, label %else58

else58:                                           ; preds = %if.entry54, %ifend.i294
  %337 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %337, ptr noundef nonnull align 8 dereferenceable(9) @201, i64 9, i1 false)
  %338 = tail call ptr @malloc(i32 24)
  store ptr %337, ptr %338, align 8
  %memberidx1.i.i295 = getelementptr inbounds %String, ptr %338, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i295, align 4
  %memberidx2.i.i296 = getelementptr inbounds %String, ptr %338, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i296, align 4
  %339 = load i64, ptr %memberidx.i290, align 4
  %.not.i299 = icmp eq i64 %339, 9
  br i1 %.not.i299, label %ifend.i301, label %else61

ifend.i301:                                       ; preds = %else58
  %340 = load ptr, ptr %12, align 8
  %341 = tail call i64 @memcmp(ptr %340, ptr nonnull %337, i64 9)
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %ifend59, label %else61

ifend59:                                          ; preds = %ifend.i333, %ifend.i325, %ifend.i317, %ifend.i301, %ifend.i294
  %mem_intrinsic.0 = phi i64 [ 3, %ifend.i294 ], [ 4, %ifend.i301 ], [ 5, %ifend.i317 ], [ 6, %ifend.i325 ], [ 7, %ifend.i333 ]
  %343 = tail call ptr @malloc(i32 41)
  store i64 8, ptr %343, align 4
  %memberidx.i.i303 = getelementptr inbounds %Expression, ptr %343, i64 0, i32 2
  store i64 18, ptr %memberidx.i.i303, align 4
  %memberidx1.i.i304 = getelementptr inbounds %Expression, ptr %343, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i304, align 1
  %memberidx.i305 = getelementptr inbounds %IntrinsicCall, ptr %343, i64 0, i32 4
  store i64 %mem_intrinsic.0, ptr %memberidx.i305, align 4
  %memberidx1.i306 = getelementptr inbounds %IntrinsicCall, ptr %343, i64 0, i32 5
  %344 = tail call ptr @malloc(i32 24)
  %memberidx.i7.i = getelementptr inbounds %Array_Expression_, ptr %344, i64 0, i32 1
  store i64 0, ptr %memberidx.i7.i, align 4
  %memberidx1.i8.i = getelementptr inbounds %Array_Expression_, ptr %344, i64 0, i32 2
  store i64 8, ptr %memberidx1.i8.i, align 4
  %345 = tail call ptr @malloc(i32 64)
  store ptr %345, ptr %344, align 8
  store i64 0, ptr %memberidx.i7.i, align 4
  store ptr %344, ptr %memberidx1.i306, align 8
  %memberidx4.i308 = getelementptr inbounds %Expression, ptr %343, i64 0, i32 3
  %346 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %346, align 4
  store ptr %346, ptr %memberidx4.i308, align 8
  %347 = load i64, ptr %memberidx.i7.i, align 4
  %348 = add i64 %347, 1
  %349 = load i64, ptr %memberidx1.i8.i, align 4
  %350 = icmp slt i64 %349, %348
  %.pre29 = load ptr, ptr %344, align 8
  br i1 %350, label %while.entry.i.i, label %Array_Expression____sl__.exit

while.entry.i.i:                                  ; preds = %ifend59, %while.entry.i.i
  %351 = phi ptr [ %355, %while.entry.i.i ], [ %.pre29, %ifend59 ]
  %352 = phi i64 [ %356, %while.entry.i.i ], [ %349, %ifend59 ]
  %353 = shl nuw i64 %352, 1
  store i64 %353, ptr %memberidx1.i8.i, align 4
  %354 = shl i64 %352, 4
  %355 = tail call ptr @realloc(ptr %351, i64 %354)
  store ptr %355, ptr %344, align 8
  %356 = load i64, ptr %memberidx1.i8.i, align 4
  %357 = icmp slt i64 %356, %348
  br i1 %357, label %while.entry.i.i, label %Array_Expression____sl__.exit.loopexit

Array_Expression____sl__.exit.loopexit:           ; preds = %while.entry.i.i
  %.pre30 = load i64, ptr %memberidx.i7.i, align 4
  %.pre67 = add nsw i64 %.pre30, 1
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend59, %Array_Expression____sl__.exit.loopexit
  %.pre-phi68 = phi i64 [ %.pre67, %Array_Expression____sl__.exit.loopexit ], [ %348, %ifend59 ]
  %358 = phi ptr [ %355, %Array_Expression____sl__.exit.loopexit ], [ %.pre29, %ifend59 ]
  %359 = phi i64 [ %.pre30, %Array_Expression____sl__.exit.loopexit ], [ %347, %ifend59 ]
  store i64 %.pre-phi68, ptr %memberidx.i7.i, align 4
  %360 = getelementptr inbounds ptr, ptr %358, i64 %359
  store ptr %5, ptr %360, align 8
  br label %common.ret

else61:                                           ; preds = %else58, %ifend.i301
  %361 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %361, ptr noundef nonnull align 8 dereferenceable(9) @202, i64 9, i1 false)
  %362 = tail call ptr @malloc(i32 24)
  store ptr %361, ptr %362, align 8
  %memberidx1.i.i311 = getelementptr inbounds %String, ptr %362, i64 0, i32 1
  store i64 9, ptr %memberidx1.i.i311, align 4
  %memberidx2.i.i312 = getelementptr inbounds %String, ptr %362, i64 0, i32 2
  store i64 9, ptr %memberidx2.i.i312, align 4
  %363 = load i64, ptr %memberidx.i290, align 4
  %.not.i315 = icmp eq i64 %363, 9
  br i1 %.not.i315, label %ifend.i317, label %else64

ifend.i317:                                       ; preds = %else61
  %364 = load ptr, ptr %12, align 8
  %365 = tail call i64 @memcmp(ptr %364, ptr nonnull %361, i64 9)
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %ifend59, label %else64

else64:                                           ; preds = %else61, %ifend.i317
  %367 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %367, ptr noundef nonnull align 8 dereferenceable(6) @203, i64 6, i1 false)
  %368 = tail call ptr @malloc(i32 24)
  store ptr %367, ptr %368, align 8
  %memberidx1.i.i319 = getelementptr inbounds %String, ptr %368, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i319, align 4
  %memberidx2.i.i320 = getelementptr inbounds %String, ptr %368, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i320, align 4
  %369 = load i64, ptr %memberidx.i290, align 4
  %.not.i323 = icmp eq i64 %369, 6
  br i1 %.not.i323, label %ifend.i325, label %else67

ifend.i325:                                       ; preds = %else64
  %370 = load ptr, ptr %12, align 8
  %371 = tail call i64 @memcmp(ptr %370, ptr nonnull %367, i64 6)
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %ifend59, label %else67

else67:                                           ; preds = %else64, %ifend.i325
  %373 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %373, ptr noundef nonnull align 8 dereferenceable(7) @204, i64 7, i1 false)
  %374 = tail call ptr @malloc(i32 24)
  store ptr %373, ptr %374, align 8
  %memberidx1.i.i327 = getelementptr inbounds %String, ptr %374, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i327, align 4
  %memberidx2.i.i328 = getelementptr inbounds %String, ptr %374, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i328, align 4
  %375 = load i64, ptr %memberidx.i290, align 4
  %.not.i331 = icmp eq i64 %375, 7
  %extract.t75 = trunc i64 %375 to i32
  br i1 %.not.i331, label %ifend.i333, label %else70

ifend.i333:                                       ; preds = %else67
  %376 = load ptr, ptr %12, align 8
  %377 = tail call i64 @memcmp(ptr %376, ptr nonnull %373, i64 7)
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %ifend59, label %ifend.i333.else70_crit_edge

ifend.i333.else70_crit_edge:                      ; preds = %ifend.i333
  %.pre25 = load i64, ptr %memberidx.i290, align 4
  %extract.t = trunc i64 %.pre25 to i32
  br label %else70

else70:                                           ; preds = %ifend.i333.else70_crit_edge, %else67
  %.off0 = phi i32 [ %extract.t, %ifend.i333.else70_crit_edge ], [ %extract.t75, %else67 ]
  %379 = add i32 %.off0, 1
  %380 = tail call ptr @malloc(i32 %379)
  %381 = load ptr, ptr %12, align 8
  %382 = load i64, ptr %memberidx.i290, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %380, ptr align 8 %381, i64 %382, i1 false)
  %383 = getelementptr inbounds i8, ptr %380, i64 %382
  store i8 0, ptr %383, align 1
  %384 = alloca ptr, align 8
  %385 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %384, ptr nonnull @205, ptr %380)
  %386 = load ptr, ptr %384, align 8
  %387 = tail call ptr @malloc(i32 24)
  store ptr %386, ptr %387, align 8
  %memberidx1.i336 = getelementptr inbounds %String, ptr %387, i64 0, i32 1
  store i64 %385, ptr %memberidx1.i336, align 4
  %memberidx2.i337 = getelementptr inbounds %String, ptr %387, i64 0, i32 2
  store i64 %385, ptr %memberidx2.i337, align 4
  tail call void @free(ptr %380)
  %388 = load ptr, ptr %memberidx2, align 8
  %memberidx73 = getelementptr inbounds %Token, ptr %388, i64 0, i32 1
  %389 = load ptr, ptr %memberidx73, align 8
  %390 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i339 = getelementptr inbounds %Compiler, ptr %390, i64 0, i32 5
  %391 = load ptr, ptr %memberidx1.i339, align 8
  %392 = call ptr @malloc(i32 24)
  store i64 1, ptr %392, align 4
  %memberidx1.i.i340 = getelementptr inbounds %FloError, ptr %392, i64 0, i32 2
  store ptr %389, ptr %memberidx1.i.i340, align 8
  %memberidx2.i.i341 = getelementptr inbounds %FloError, ptr %392, i64 0, i32 1
  store ptr %387, ptr %memberidx2.i.i341, align 8
  %memberidx.i.i342 = getelementptr inbounds %Array_FloError_, ptr %391, i64 0, i32 1
  %393 = load i64, ptr %memberidx.i.i342, align 4
  %394 = add i64 %393, 1
  %memberidx.i.i.i343 = getelementptr inbounds %Array_FloError_, ptr %391, i64 0, i32 2
  %395 = load i64, ptr %memberidx.i.i.i343, align 4
  %396 = icmp slt i64 %395, %394
  %.pre26 = load ptr, ptr %391, align 8
  br i1 %396, label %while.entry.i.i.i344, label %TypeChecker_error.exit345

while.entry.i.i.i344:                             ; preds = %else70, %while.entry.i.i.i344
  %397 = phi ptr [ %401, %while.entry.i.i.i344 ], [ %.pre26, %else70 ]
  %398 = phi i64 [ %402, %while.entry.i.i.i344 ], [ %395, %else70 ]
  %399 = shl nuw i64 %398, 1
  store i64 %399, ptr %memberidx.i.i.i343, align 4
  %400 = shl i64 %398, 4
  %401 = call ptr @realloc(ptr %397, i64 %400)
  store ptr %401, ptr %391, align 8
  %402 = load i64, ptr %memberidx.i.i.i343, align 4
  %403 = icmp slt i64 %402, %394
  br i1 %403, label %while.entry.i.i.i344, label %TypeChecker_error.exit345.loopexit

TypeChecker_error.exit345.loopexit:               ; preds = %while.entry.i.i.i344
  %.pre27 = load i64, ptr %memberidx.i.i342, align 4
  %.pre69 = add nsw i64 %.pre27, 1
  br label %TypeChecker_error.exit345

TypeChecker_error.exit345:                        ; preds = %else70, %TypeChecker_error.exit345.loopexit
  %.pre-phi70 = phi i64 [ %.pre69, %TypeChecker_error.exit345.loopexit ], [ %394, %else70 ]
  %404 = phi ptr [ %401, %TypeChecker_error.exit345.loopexit ], [ %.pre26, %else70 ]
  %405 = phi i64 [ %.pre27, %TypeChecker_error.exit345.loopexit ], [ %393, %else70 ]
  store i64 %.pre-phi70, ptr %memberidx.i.i342, align 4
  %406 = getelementptr inbounds ptr, ptr %404, i64 %405
  store ptr %392, ptr %406, align 8
  br label %common.ret

if.entry76:                                       ; preds = %ifend
  %407 = tail call ptr @malloc(i32 4)
  store i32 1702521203, ptr %407, align 8
  %408 = tail call ptr @malloc(i32 24)
  store ptr %407, ptr %408, align 8
  %memberidx1.i.i346 = getelementptr inbounds %String, ptr %408, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i346, align 4
  %memberidx2.i.i347 = getelementptr inbounds %String, ptr %408, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i347, align 4
  %memberidx.i348 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %409 = load i64, ptr %memberidx.i348, align 4
  %.not.i350 = icmp eq i64 %409, 4
  br i1 %.not.i350, label %ifend.i352, label %ifend6

ifend.i352:                                       ; preds = %if.entry76
  %410 = load ptr, ptr %12, align 8
  %411 = tail call i64 @memcmp(ptr %410, ptr nonnull %407, i64 4)
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %if.entry79, label %ifend6

if.entry79:                                       ; preds = %ifend.i352
  %413 = tail call ptr @malloc(i32 33)
  %memberidx82 = getelementptr inbounds %ArrayType, ptr %10, i64 0, i32 2
  %414 = load i64, ptr %memberidx82, align 4
  store i64 8, ptr %413, align 4
  %memberidx.i.i354 = getelementptr inbounds %Expression, ptr %413, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i354, align 4
  %memberidx1.i.i355 = getelementptr inbounds %Expression, ptr %413, i64 0, i32 1
  %memberidx.i356 = getelementptr inbounds %Expression, ptr %413, i64 0, i32 3
  %415 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %415, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %415, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  store ptr %415, ptr %memberidx.i356, align 8
  %memberidx1.i357 = getelementptr inbounds %IntExpression, ptr %413, i64 0, i32 4
  store i64 %414, ptr %memberidx1.i357, align 4
  store i1 true, ptr %memberidx1.i.i355, align 1
  br label %common.ret

if.entry84:                                       ; preds = %ifend
  %memberidx87 = getelementptr inbounds %VarAccessExpression, ptr %5, i64 0, i32 4
  %416 = load ptr, ptr %memberidx87, align 8
  %memberidx88 = getelementptr inbounds %ModuleVarId, ptr %416, i64 0, i32 3
  %417 = load ptr, ptr %memberidx88, align 8
  %memberidx89 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %418 = load ptr, ptr %memberidx89, align 8
  store ptr %417, ptr %memberidx89, align 8
  %419 = alloca %VarAccessExpressionNode, align 8
  %420 = load ptr, ptr %memberidx2, align 8
  %memberidx.i359 = getelementptr inbounds %Token, ptr %420, i64 0, i32 1
  %421 = load ptr, ptr %memberidx.i359, align 8
  store ptr %421, ptr %419, align 8
  %memberidx.i.i.i360 = getelementptr inbounds %StatementNode, ptr %419, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i360, align 8
  %memberidx.i.i361 = getelementptr inbounds %ExpressionNode, ptr %419, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i361, align 8
  %memberidx1.i362 = getelementptr inbounds %VarAccessExpressionNode, ptr %419, i64 0, i32 3
  store ptr %420, ptr %memberidx1.i362, align 8
  %422 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %422, align 4
  %423 = call fastcc ptr @TypeChecker_check_var_access_expr(ptr nonnull %0, ptr nonnull %422, ptr nonnull %419)
  store ptr %418, ptr %memberidx89, align 8
  br label %common.ret

else85:                                           ; preds = %if.entry.i2, %ifend
  %memberidx.i363 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %424 = load i64, ptr %memberidx.i363, align 4
  %425 = trunc i64 %424 to i32
  %426 = add i32 %425, 1
  %427 = tail call ptr @malloc(i32 %426)
  %428 = load ptr, ptr %12, align 8
  %429 = load i64, ptr %memberidx.i363, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %427, ptr align 8 %428, i64 %429, i1 false)
  %430 = getelementptr inbounds i8, ptr %427, i64 %429
  store i8 0, ptr %430, align 1
  %431 = load ptr, ptr %memberidx1, align 8
  %432 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %431)
  %memberidx.i364 = getelementptr inbounds %String, ptr %432, i64 0, i32 1
  %433 = load i64, ptr %memberidx.i364, align 4
  %434 = trunc i64 %433 to i32
  %435 = add i32 %434, 1
  %436 = tail call ptr @malloc(i32 %435)
  %437 = load ptr, ptr %432, align 8
  %438 = load i64, ptr %memberidx.i364, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %436, ptr align 8 %437, i64 %438, i1 false)
  %439 = getelementptr inbounds i8, ptr %436, i64 %438
  store i8 0, ptr %439, align 1
  %440 = alloca ptr, align 8
  %441 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %440, ptr nonnull @206, ptr %427, ptr %436)
  %442 = load ptr, ptr %440, align 8
  %443 = tail call ptr @malloc(i32 24)
  store ptr %442, ptr %443, align 8
  %memberidx1.i365 = getelementptr inbounds %String, ptr %443, i64 0, i32 1
  store i64 %441, ptr %memberidx1.i365, align 4
  %memberidx2.i366 = getelementptr inbounds %String, ptr %443, i64 0, i32 2
  store i64 %441, ptr %memberidx2.i366, align 4
  tail call void @free(ptr %427)
  tail call void @free(ptr %436)
  %444 = load ptr, ptr %memberidx, align 8
  %445 = load ptr, ptr %444, align 8
  %446 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i368 = getelementptr inbounds %Compiler, ptr %446, i64 0, i32 5
  %447 = load ptr, ptr %memberidx1.i368, align 8
  %448 = call ptr @malloc(i32 24)
  store i64 4, ptr %448, align 4
  %memberidx1.i.i369 = getelementptr inbounds %FloError, ptr %448, i64 0, i32 2
  store ptr %445, ptr %memberidx1.i.i369, align 8
  %memberidx2.i.i370 = getelementptr inbounds %FloError, ptr %448, i64 0, i32 1
  store ptr %443, ptr %memberidx2.i.i370, align 8
  %memberidx.i.i371 = getelementptr inbounds %Array_FloError_, ptr %447, i64 0, i32 1
  %449 = load i64, ptr %memberidx.i.i371, align 4
  %450 = add i64 %449, 1
  %memberidx.i.i.i372 = getelementptr inbounds %Array_FloError_, ptr %447, i64 0, i32 2
  %451 = load i64, ptr %memberidx.i.i.i372, align 4
  %452 = icmp slt i64 %451, %450
  %.pre51 = load ptr, ptr %447, align 8
  br i1 %452, label %while.entry.i.i.i373, label %TypeChecker_error.exit374

while.entry.i.i.i373:                             ; preds = %else85, %while.entry.i.i.i373
  %453 = phi ptr [ %457, %while.entry.i.i.i373 ], [ %.pre51, %else85 ]
  %454 = phi i64 [ %458, %while.entry.i.i.i373 ], [ %451, %else85 ]
  %455 = shl nuw i64 %454, 1
  store i64 %455, ptr %memberidx.i.i.i372, align 4
  %456 = shl i64 %454, 4
  %457 = call ptr @realloc(ptr %453, i64 %456)
  store ptr %457, ptr %447, align 8
  %458 = load i64, ptr %memberidx.i.i.i372, align 4
  %459 = icmp slt i64 %458, %450
  br i1 %459, label %while.entry.i.i.i373, label %TypeChecker_error.exit374.loopexit

TypeChecker_error.exit374.loopexit:               ; preds = %while.entry.i.i.i373
  %.pre52 = load i64, ptr %memberidx.i.i371, align 4
  %.pre60 = add nsw i64 %.pre52, 1
  br label %TypeChecker_error.exit374

TypeChecker_error.exit374:                        ; preds = %else85, %TypeChecker_error.exit374.loopexit
  %.pre-phi = phi i64 [ %.pre60, %TypeChecker_error.exit374.loopexit ], [ %450, %else85 ]
  %460 = phi ptr [ %457, %TypeChecker_error.exit374.loopexit ], [ %.pre51, %else85 ]
  %461 = phi i64 [ %.pre52, %TypeChecker_error.exit374.loopexit ], [ %449, %else85 ]
  store i64 %.pre-phi, ptr %memberidx.i.i371, align 4
  %462 = getelementptr inbounds ptr, ptr %460, i64 %461
  store ptr %448, ptr %462, align 8
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_check_assignment(ptr %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
  %memberidx = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 4
  %5 = load i64, ptr %memberidx, align 4
  %.not = icmp eq i64 %5, 19
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx1 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %6, align 4
  %8 = icmp eq i64 %7, 20
  br i1 %8, label %if.entry.i79, label %is_object.exit

if.entry.i79:                                     ; preds = %if.entry, %if.entry.i79
  %.tr5.i = phi ptr [ %9, %if.entry.i79 ], [ %6, %if.entry ]
  %memberidx1.i78 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %9 = load ptr, ptr %memberidx1.i78, align 8
  %10 = load i64, ptr %9, align 4
  %11 = icmp eq i64 %10, 20
  br i1 %11, label %if.entry.i79, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i79, %if.entry
  %.lcssa.i = phi i64 [ %7, %if.entry ], [ %10, %if.entry.i79 ]
  %12 = icmp eq i64 %.lcssa.i, 11
  br i1 %12, label %if.entry2, label %ifend4

ifend:                                            ; preds = %ifend4, %4
  %right.0 = phi ptr [ %52, %ifend4 ], [ %2, %4 ]
  %memberidx.i = getelementptr inbounds %Expression, ptr %1, i64 0, i32 2
  %13 = load i64, ptr %memberidx.i, align 4
  switch i64 %13, label %if.entry12 [
    i64 8, label %if.entry.i
    i64 13, label %if.entry4.i
    i64 14, label %check_is_var.exit
  ]

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %14 = load ptr, ptr %memberidx1.i, align 8
  %15 = load i64, ptr %14, align 4
  %16 = icmp eq i64 %15, 1
  br i1 %16, label %ifend14, label %if.entry12

if.entry4.i:                                      ; preds = %ifend
  %memberidx7.i = getelementptr inbounds %MemberExpression, ptr %1, i64 0, i32 5
  %17 = load ptr, ptr %memberidx7.i, align 8
  %18 = load i64, ptr %17, align 4
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %ifend14, label %if.entry12

check_is_var.exit:                                ; preds = %ifend
  %memberidx13.i = getelementptr inbounds %IndexExpression, ptr %1, i64 0, i32 4
  %20 = load ptr, ptr %memberidx13.i, align 8
  %memberidx14.i = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  %21 = load ptr, ptr %memberidx14.i, align 8
  %22 = load i64, ptr %21, align 4
  %.not80 = icmp eq i64 %22, 15
  br i1 %.not80, label %if.entry12, label %ifend14

if.entry2:                                        ; preds = %is_object.exit
  %23 = tail call fastcc ptr @TypeChecker_check_object_bin_assign(ptr %0, ptr %1, ptr %3)
  %24 = icmp ne ptr %23, null
  %memberidx.i48 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %25 = load ptr, ptr %memberidx.i48, align 8
  %memberidx1.i49 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i49, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i, align 4
  %28 = icmp sgt i64 %27, 0
  %29 = or i1 %24, %28
  br i1 %29, label %common.ret, label %if.entry2.ifend4_crit_edge

if.entry2.ifend4_crit_edge:                       ; preds = %if.entry2
  %.pre = load ptr, ptr %memberidx1, align 8
  %.pre81 = load i64, ptr %memberidx, align 4
  br label %ifend4

ifend4:                                           ; preds = %if.entry2.ifend4_crit_edge, %is_object.exit
  %30 = phi i64 [ %.pre81, %if.entry2.ifend4_crit_edge ], [ %5, %is_object.exit ]
  %31 = phi ptr [ %.pre, %if.entry2.ifend4_crit_edge ], [ %6, %is_object.exit ]
  %32 = icmp eq i64 %30, 20
  %spec.store.select.i = select i1 %32, i64 1, i64 %30
  %33 = icmp eq i64 %spec.store.select.i, 21
  %spec.store.select34.i = select i1 %33, i64 2, i64 %spec.store.select.i
  %34 = icmp eq i64 %spec.store.select34.i, 22
  %spec.store.select30.i = select i1 %34, i64 3, i64 %spec.store.select34.i
  %35 = icmp eq i64 %spec.store.select30.i, 23
  %spec.store.select37.i = select i1 %35, i64 4, i64 %spec.store.select30.i
  %36 = icmp eq i64 %spec.store.select37.i, 24
  %spec.store.select31.i = select i1 %36, i64 5, i64 %spec.store.select37.i
  %37 = icmp eq i64 %spec.store.select31.i, 25
  %spec.store.select35.i = select i1 %37, i64 6, i64 %spec.store.select31.i
  %38 = icmp eq i64 %spec.store.select35.i, 26
  %spec.store.select32.i = select i1 %38, i64 16, i64 %spec.store.select35.i
  %39 = icmp eq i64 %spec.store.select32.i, 27
  %spec.store.select38.i = select i1 %39, i64 15, i64 %spec.store.select32.i
  %40 = icmp eq i64 %spec.store.select38.i, 29
  %spec.store.select33.i = select i1 %40, i64 13, i64 %spec.store.select38.i
  %41 = icmp eq i64 %spec.store.select33.i, 30
  %spec.store.select36.i = select i1 %41, i64 14, i64 %spec.store.select33.i
  %42 = tail call ptr @malloc(i32 48)
  %memberidx28.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 3
  %43 = load ptr, ptr %memberidx28.i, align 8
  %memberidx29.i = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 5
  %44 = load ptr, ptr %memberidx29.i, align 8
  %45 = load ptr, ptr %43, align 8
  %46 = load ptr, ptr %44, align 8
  %47 = tail call ptr @malloc(i32 32)
  %48 = load i64, ptr %45, align 4
  %memberidx1.i.i.i = getelementptr inbounds %FloRange, ptr %46, i64 0, i32 1
  %49 = load i64, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %FloRange, ptr %45, i64 0, i32 2
  %50 = load i64, ptr %memberidx2.i.i.i, align 4
  %memberidx3.i.i.i = getelementptr inbounds %FloRange, ptr %46, i64 0, i32 3
  %51 = load i64, ptr %memberidx3.i.i.i, align 4
  store i64 %48, ptr %47, align 4
  %memberidx1.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 1
  store i64 %49, ptr %memberidx1.i.i.i.i, align 4
  %memberidx2.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i.i.i.i, align 4
  %memberidx3.i.i.i.i = getelementptr inbounds %FloRange, ptr %47, i64 0, i32 3
  store i64 %51, ptr %memberidx3.i.i.i.i, align 4
  store ptr %47, ptr %42, align 8
  %memberidx.i.i.i.i = getelementptr inbounds %StatementNode, ptr %42, i64 0, i32 1
  store i64 8, ptr %memberidx.i.i.i.i, align 4
  %memberidx.i.i.i = getelementptr inbounds %ExpressionNode, ptr %42, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 3
  store ptr %43, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 4
  store i64 %spec.store.select36.i, ptr %memberidx3.i.i, align 4
  %memberidx4.i.i = getelementptr inbounds %BinaryExpressionNode, ptr %42, i64 0, i32 5
  store ptr %44, ptr %memberidx4.i.i, align 8
  %52 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %31, ptr nonnull %42)
  %memberidx.i52 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %53 = load ptr, ptr %memberidx.i52, align 8
  %memberidx1.i53 = getelementptr inbounds %Compiler, ptr %53, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1.i53, align 8
  %memberidx2.i54 = getelementptr inbounds %Array_FloError_, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx2.i54, align 4
  %56 = icmp sgt i64 %55, 0
  br i1 %56, label %common.ret, label %ifend

common.ret:                                       ; preds = %if.entry2, %ifend4, %ifend21, %TypeChecker_error.exit72, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit72 ], [ %121, %ifend21 ], [ null, %ifend4 ], [ %23, %if.entry2 ]
  ret ptr %common.ret.op

if.entry12:                                       ; preds = %if.entry4.i, %if.entry.i, %ifend, %check_is_var.exit
  %57 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %57, ptr noundef nonnull align 8 dereferenceable(33) @172, i64 33, i1 false)
  %58 = tail call ptr @malloc(i32 24)
  store ptr %57, ptr %58, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  store i64 33, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i55 = getelementptr inbounds %String, ptr %58, i64 0, i32 2
  store i64 33, ptr %memberidx2.i.i55, align 4
  %memberidx15 = getelementptr inbounds %BinaryExpressionNode, ptr %3, i64 0, i32 3
  %59 = load ptr, ptr %memberidx15, align 8
  %60 = load ptr, ptr %59, align 8
  %memberidx.i56 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %61 = load ptr, ptr %memberidx.i56, align 8
  %memberidx1.i57 = getelementptr inbounds %Compiler, ptr %61, i64 0, i32 5
  %62 = load ptr, ptr %memberidx1.i57, align 8
  %63 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %63, align 4
  %memberidx1.i.i58 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 2
  store ptr %60, ptr %memberidx1.i.i58, align 8
  %memberidx2.i.i59 = getelementptr inbounds %FloError, ptr %63, i64 0, i32 1
  store ptr %58, ptr %memberidx2.i.i59, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 1
  %64 = load i64, ptr %memberidx.i.i, align 4
  %65 = add i64 %64, 1
  %memberidx.i.i.i60 = getelementptr inbounds %Array_FloError_, ptr %62, i64 0, i32 2
  %66 = load i64, ptr %memberidx.i.i.i60, align 4
  %67 = icmp slt i64 %66, %65
  %.pre85 = load ptr, ptr %62, align 8
  br i1 %67, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry12, %while.entry.i.i.i
  %68 = phi ptr [ %72, %while.entry.i.i.i ], [ %.pre85, %if.entry12 ]
  %69 = phi i64 [ %73, %while.entry.i.i.i ], [ %66, %if.entry12 ]
  %70 = shl nuw i64 %69, 1
  store i64 %70, ptr %memberidx.i.i.i60, align 4
  %71 = shl i64 %69, 4
  %72 = tail call ptr @realloc(ptr %68, i64 %71)
  store ptr %72, ptr %62, align 8
  %73 = load i64, ptr %memberidx.i.i.i60, align 4
  %74 = icmp slt i64 %73, %65
  br i1 %74, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre86 = load i64, ptr %memberidx.i.i, align 4
  %.pre88 = add nsw i64 %.pre86, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry12, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre88, %TypeChecker_error.exit.loopexit ], [ %65, %if.entry12 ]
  %75 = phi ptr [ %72, %TypeChecker_error.exit.loopexit ], [ %.pre85, %if.entry12 ]
  %76 = phi i64 [ %.pre86, %TypeChecker_error.exit.loopexit ], [ %64, %if.entry12 ]
  store i64 %.pre-phi, ptr %memberidx.i.i, align 4
  %77 = getelementptr inbounds ptr, ptr %75, i64 %76
  store ptr %63, ptr %77, align 8
  br label %common.ret

ifend14:                                          ; preds = %if.entry4.i, %if.entry.i, %check_is_var.exit
  %memberidx17 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  %78 = load ptr, ptr %memberidx17, align 8
  %memberidx18 = getelementptr inbounds %Expression, ptr %right.0, i64 0, i32 3
  %79 = load ptr, ptr %memberidx18, align 8
  %80 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr %78, ptr %79)
  br i1 %80, label %ifend21, label %if.entry19

if.entry19:                                       ; preds = %ifend14
  %81 = load ptr, ptr %memberidx18, align 8
  %82 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %81)
  %memberidx.i61 = getelementptr inbounds %String, ptr %82, i64 0, i32 1
  %83 = load i64, ptr %memberidx.i61, align 4
  %84 = trunc i64 %83 to i32
  %85 = add i32 %84, 1
  %86 = tail call ptr @malloc(i32 %85)
  %87 = load ptr, ptr %82, align 8
  %88 = load i64, ptr %memberidx.i61, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %86, ptr align 8 %87, i64 %88, i1 false)
  %89 = getelementptr inbounds i8, ptr %86, i64 %88
  store i8 0, ptr %89, align 1
  %90 = load ptr, ptr %memberidx17, align 8
  %91 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %90)
  %memberidx.i62 = getelementptr inbounds %String, ptr %91, i64 0, i32 1
  %92 = load i64, ptr %memberidx.i62, align 4
  %93 = trunc i64 %92 to i32
  %94 = add i32 %93, 1
  %95 = tail call ptr @malloc(i32 %94)
  %96 = load ptr, ptr %91, align 8
  %97 = load i64, ptr %memberidx.i62, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %95, ptr align 8 %96, i64 %97, i1 false)
  %98 = getelementptr inbounds i8, ptr %95, i64 %97
  store i8 0, ptr %98, align 1
  %99 = alloca ptr, align 8
  %100 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %99, ptr nonnull @173, ptr %86, ptr %95)
  %101 = load ptr, ptr %99, align 8
  %102 = tail call ptr @malloc(i32 24)
  store ptr %101, ptr %102, align 8
  %memberidx1.i63 = getelementptr inbounds %String, ptr %102, i64 0, i32 1
  store i64 %100, ptr %memberidx1.i63, align 4
  %memberidx2.i64 = getelementptr inbounds %String, ptr %102, i64 0, i32 2
  store i64 %100, ptr %memberidx2.i64, align 4
  tail call void @free(ptr %86)
  tail call void @free(ptr %95)
  %103 = load ptr, ptr %3, align 8
  %memberidx.i65 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %104 = load ptr, ptr %memberidx.i65, align 8
  %memberidx1.i66 = getelementptr inbounds %Compiler, ptr %104, i64 0, i32 5
  %105 = load ptr, ptr %memberidx1.i66, align 8
  %106 = call ptr @malloc(i32 24)
  store i64 5, ptr %106, align 4
  %memberidx1.i.i67 = getelementptr inbounds %FloError, ptr %106, i64 0, i32 2
  store ptr %103, ptr %memberidx1.i.i67, align 8
  %memberidx2.i.i68 = getelementptr inbounds %FloError, ptr %106, i64 0, i32 1
  store ptr %102, ptr %memberidx2.i.i68, align 8
  %memberidx.i.i69 = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 1
  %107 = load i64, ptr %memberidx.i.i69, align 4
  %108 = add i64 %107, 1
  %memberidx.i.i.i70 = getelementptr inbounds %Array_FloError_, ptr %105, i64 0, i32 2
  %109 = load i64, ptr %memberidx.i.i.i70, align 4
  %110 = icmp slt i64 %109, %108
  %.pre82 = load ptr, ptr %105, align 8
  br i1 %110, label %while.entry.i.i.i71, label %TypeChecker_error.exit72

while.entry.i.i.i71:                              ; preds = %if.entry19, %while.entry.i.i.i71
  %111 = phi ptr [ %115, %while.entry.i.i.i71 ], [ %.pre82, %if.entry19 ]
  %112 = phi i64 [ %116, %while.entry.i.i.i71 ], [ %109, %if.entry19 ]
  %113 = shl nuw i64 %112, 1
  store i64 %113, ptr %memberidx.i.i.i70, align 4
  %114 = shl i64 %112, 4
  %115 = call ptr @realloc(ptr %111, i64 %114)
  store ptr %115, ptr %105, align 8
  %116 = load i64, ptr %memberidx.i.i.i70, align 4
  %117 = icmp slt i64 %116, %108
  br i1 %117, label %while.entry.i.i.i71, label %TypeChecker_error.exit72.loopexit

TypeChecker_error.exit72.loopexit:                ; preds = %while.entry.i.i.i71
  %.pre83 = load i64, ptr %memberidx.i.i69, align 4
  %.pre89 = add nsw i64 %.pre83, 1
  br label %TypeChecker_error.exit72

TypeChecker_error.exit72:                         ; preds = %if.entry19, %TypeChecker_error.exit72.loopexit
  %.pre-phi90 = phi i64 [ %.pre89, %TypeChecker_error.exit72.loopexit ], [ %108, %if.entry19 ]
  %118 = phi ptr [ %115, %TypeChecker_error.exit72.loopexit ], [ %.pre82, %if.entry19 ]
  %119 = phi i64 [ %.pre83, %TypeChecker_error.exit72.loopexit ], [ %107, %if.entry19 ]
  store i64 %.pre-phi90, ptr %memberidx.i.i69, align 4
  %120 = getelementptr inbounds ptr, ptr %118, i64 %119
  store ptr %106, ptr %120, align 8
  br label %common.ret

ifend21:                                          ; preds = %ifend14
  %121 = tail call ptr @malloc(i32 49)
  %122 = load ptr, ptr %memberidx18, align 8
  store i64 8, ptr %121, align 4
  %memberidx.i.i73 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 2
  store i64 9, ptr %memberidx.i.i73, align 4
  %memberidx1.i.i74 = getelementptr inbounds %Expression, ptr %121, i64 0, i32 1
  %memberidx.i75 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 4
  store ptr %1, ptr %memberidx.i75, align 8
  %memberidx1.i76 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 5
  store i64 19, ptr %memberidx1.i76, align 4
  %memberidx2.i77 = getelementptr inbounds %BinaryExpression, ptr %121, i64 0, i32 6
  store ptr %right.0, ptr %memberidx2.i77, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %121, i64 0, i32 3
  store ptr %122, ptr %memberidx3.i, align 8
  store i1 false, ptr %memberidx1.i.i74, align 1
  br label %common.ret
}

define internal fastcc ptr @TypeChecker_init_function_signature(ptr %0, ptr nocapture readonly %1, ptr %2, ptr nocapture %3) unnamed_addr {
for.entry:
  %4 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 1
  store i64 0, ptr %memberidx.i, align 4
  %memberidx1.i = getelementptr inbounds %Array_Type_, ptr %4, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %5 = tail call ptr @malloc(i32 64)
  store ptr %5, ptr %4, align 8
  store i64 0, ptr %memberidx.i, align 4
  %6 = tail call ptr @malloc(i32 25)
  %7 = load ptr, ptr %1, align 8
  %memberidx1.i75 = getelementptr inbounds %Array_ArgNode_, ptr %1, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i75, align 4
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 3
  store ptr %7, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ArgNode_, ptr %6, i64 0, i32 2
  store i64 %8, ptr %memberidx3.i.i, align 4
  %9 = icmp slt i64 %8, 1
  br i1 %9, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i80 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %memberidx.i86 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 1
  %memberidx.i.i87 = getelementptr inbounds %Array_FunctionArg_, ptr %3, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Type____sl__.exit
  %10 = phi i64 [ 1, %for.body.lr.ph ], [ %60, %Array_Type____sl__.exit ]
  %arg.0107.in = phi ptr [ %7, %for.body.lr.ph ], [ %61, %Array_Type____sl__.exit ]
  %arg.0107 = load ptr, ptr %arg.0107.in, align 8
  %11 = tail call ptr @malloc(i32 49)
  store i64 8, ptr %11, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %11, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i, align 4
  %memberidx1.i.i77 = getelementptr inbounds %Expression, ptr %11, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i77, align 1
  %memberidx3 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 5
  %12 = load ptr, ptr %arg.0107, align 8
  %memberidx5 = getelementptr inbounds %IdentifierToken, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx5, align 8
  store ptr %13, ptr %memberidx3, align 8
  %memberidx6 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 6
  store ptr null, ptr %memberidx6, align 8
  %14 = call ptr @malloc(i32 8)
  store i64 21, ptr %14, align 4
  %memberidx7 = getelementptr inbounds %ArgNode, ptr %arg.0107, i64 0, i32 1
  %15 = load ptr, ptr %memberidx7, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %ifend, label %if.entry

common.ret.loopexit:                              ; preds = %if.entry, %if.entry13
  store i1 false, ptr %6, align 1
  br label %common.ret

common.ret:                                       ; preds = %common.ret.loopexit, %for.end
  %common.ret.op = phi ptr [ %17, %for.end ], [ null, %common.ret.loopexit ]
  ret ptr %common.ret.op

for.end:                                          ; preds = %Array_Type____sl__.exit, %for.entry
  tail call void @free(ptr nonnull %6)
  %16 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr %2)
  %17 = tail call ptr @malloc(i32 25)
  store i64 16, ptr %17, align 4
  %memberidx.i78 = getelementptr inbounds %FunctionType, ptr %17, i64 0, i32 1
  store ptr %4, ptr %memberidx.i78, align 8
  %memberidx1.i79 = getelementptr inbounds %FunctionType, ptr %17, i64 0, i32 2
  store ptr %16, ptr %memberidx1.i79, align 8
  br label %common.ret

if.entry:                                         ; preds = %for.body
  %18 = call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %15)
  %19 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i81 = getelementptr inbounds %Compiler, ptr %19, i64 0, i32 5
  %20 = load ptr, ptr %memberidx1.i81, align 8
  %memberidx2.i82 = getelementptr inbounds %Array_FloError_, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx2.i82, align 4
  %22 = icmp sgt i64 %21, 0
  br i1 %22, label %common.ret.loopexit, label %ifend

ifend:                                            ; preds = %if.entry, %for.body
  %arg_type.0 = phi ptr [ %18, %if.entry ], [ %14, %for.body ]
  %memberidx12 = getelementptr inbounds %ArgNode, ptr %arg.0107, i64 0, i32 2
  %23 = load ptr, ptr %memberidx12, align 8
  %.not74 = icmp eq ptr %23, null
  br i1 %.not74, label %ifend15, label %if.entry13

if.entry13:                                       ; preds = %ifend
  %24 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %arg_type.0, ptr nonnull %23)
  store ptr %24, ptr %memberidx6, align 8
  %25 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i84 = getelementptr inbounds %Compiler, ptr %25, i64 0, i32 5
  %26 = load ptr, ptr %memberidx1.i84, align 8
  %memberidx2.i85 = getelementptr inbounds %Array_FloError_, ptr %26, i64 0, i32 1
  %27 = load i64, ptr %memberidx2.i85, align 4
  %28 = icmp sgt i64 %27, 0
  br i1 %28, label %common.ret.loopexit, label %ifend20

ifend15:                                          ; preds = %ifend20, %TypeChecker_error.exit, %else23, %ifend
  %arg_type.1 = phi ptr [ %arg_type.0, %TypeChecker_error.exit ], [ %arg_type.0, %else23 ], [ %arg_type.0, %ifend ], [ %64, %ifend20 ]
  %29 = load i64, ptr %memberidx.i86, align 4
  %30 = add i64 %29, 1
  %31 = load i64, ptr %memberidx.i.i87, align 4
  %32 = icmp slt i64 %31, %30
  %.pre111 = load ptr, ptr %3, align 8
  br i1 %32, label %while.entry.i.i, label %Array_FunctionArg____sl__.exit

while.entry.i.i:                                  ; preds = %ifend15, %while.entry.i.i
  %33 = phi ptr [ %37, %while.entry.i.i ], [ %.pre111, %ifend15 ]
  %34 = phi i64 [ %38, %while.entry.i.i ], [ %31, %ifend15 ]
  %35 = shl nuw i64 %34, 1
  store i64 %35, ptr %memberidx.i.i87, align 4
  %36 = shl i64 %34, 4
  %37 = call ptr @realloc(ptr %33, i64 %36)
  store ptr %37, ptr %3, align 8
  %38 = load i64, ptr %memberidx.i.i87, align 4
  %39 = icmp slt i64 %38, %30
  br i1 %39, label %while.entry.i.i, label %Array_FunctionArg____sl__.exit.loopexit

Array_FunctionArg____sl__.exit.loopexit:          ; preds = %while.entry.i.i
  %.pre112 = load i64, ptr %memberidx.i86, align 4
  %.pre117 = add nsw i64 %.pre112, 1
  br label %Array_FunctionArg____sl__.exit

Array_FunctionArg____sl__.exit:                   ; preds = %ifend15, %Array_FunctionArg____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre117, %Array_FunctionArg____sl__.exit.loopexit ], [ %30, %ifend15 ]
  %40 = phi ptr [ %37, %Array_FunctionArg____sl__.exit.loopexit ], [ %.pre111, %ifend15 ]
  %41 = phi i64 [ %.pre112, %Array_FunctionArg____sl__.exit.loopexit ], [ %29, %ifend15 ]
  store i64 %.pre-phi, ptr %memberidx.i86, align 4
  %42 = getelementptr inbounds ptr, ptr %40, i64 %41
  store ptr %11, ptr %42, align 8
  %memberidx36 = getelementptr inbounds %Expression, ptr %11, i64 0, i32 3
  store ptr %arg_type.1, ptr %memberidx36, align 8
  %43 = load ptr, ptr %memberidx3, align 8
  %44 = call fastcc ptr @TypeChecker_declare_var_within_current_scope(ptr %0, ptr %43, ptr nonnull %11, ptr %arg_type.1)
  %memberidx38 = getelementptr inbounds %FunctionArg, ptr %11, i64 0, i32 4
  %memberidx39 = getelementptr inbounds %Var, ptr %44, i64 0, i32 1
  %45 = load ptr, ptr %memberidx39, align 8
  store ptr %45, ptr %memberidx38, align 8
  %46 = load i64, ptr %memberidx.i, align 4
  %47 = add i64 %46, 1
  %48 = load i64, ptr %memberidx1.i, align 4
  %49 = icmp slt i64 %48, %47
  %.pre114 = load ptr, ptr %4, align 8
  br i1 %49, label %while.entry.i.i90, label %Array_Type____sl__.exit

while.entry.i.i90:                                ; preds = %Array_FunctionArg____sl__.exit, %while.entry.i.i90
  %50 = phi ptr [ %54, %while.entry.i.i90 ], [ %.pre114, %Array_FunctionArg____sl__.exit ]
  %51 = phi i64 [ %55, %while.entry.i.i90 ], [ %48, %Array_FunctionArg____sl__.exit ]
  %52 = shl nuw i64 %51, 1
  store i64 %52, ptr %memberidx1.i, align 4
  %53 = shl i64 %51, 4
  %54 = call ptr @realloc(ptr %50, i64 %53)
  store ptr %54, ptr %4, align 8
  %55 = load i64, ptr %memberidx1.i, align 4
  %56 = icmp slt i64 %55, %47
  br i1 %56, label %while.entry.i.i90, label %Array_Type____sl__.exit.loopexit

Array_Type____sl__.exit.loopexit:                 ; preds = %while.entry.i.i90
  %.pre115 = load i64, ptr %memberidx.i, align 4
  %.pre118 = add nsw i64 %.pre115, 1
  br label %Array_Type____sl__.exit

Array_Type____sl__.exit:                          ; preds = %Array_FunctionArg____sl__.exit, %Array_Type____sl__.exit.loopexit
  %.pre-phi119 = phi i64 [ %.pre118, %Array_Type____sl__.exit.loopexit ], [ %47, %Array_FunctionArg____sl__.exit ]
  %57 = phi ptr [ %54, %Array_Type____sl__.exit.loopexit ], [ %.pre114, %Array_FunctionArg____sl__.exit ]
  %58 = phi i64 [ %.pre115, %Array_Type____sl__.exit.loopexit ], [ %46, %Array_FunctionArg____sl__.exit ]
  store i64 %.pre-phi119, ptr %memberidx.i, align 4
  %59 = getelementptr inbounds ptr, ptr %57, i64 %58
  store ptr %arg_type.1, ptr %59, align 8
  %60 = add nuw nsw i64 %10, 1
  store i64 %60, ptr %memberidx1.i.i, align 4
  %61 = getelementptr inbounds ptr, ptr %7, i64 %10
  %.not122 = icmp slt i64 %10, %8
  br i1 %.not122, label %for.body, label %for.end

ifend20:                                          ; preds = %if.entry13
  %62 = load i64, ptr %arg_type.0, align 4
  %63 = icmp eq i64 %62, 21
  %memberidx26 = getelementptr inbounds %Expression, ptr %24, i64 0, i32 3
  %64 = load ptr, ptr %memberidx26, align 8
  br i1 %63, label %ifend15, label %else23

else23:                                           ; preds = %ifend20
  %65 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %arg_type.0, ptr %64)
  br i1 %65, label %ifend15, label %if.entry29

if.entry29:                                       ; preds = %else23
  %66 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %arg_type.0)
  %memberidx.i94 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  %67 = load i64, ptr %memberidx.i94, align 4
  %68 = trunc i64 %67 to i32
  %69 = add i32 %68, 1
  %70 = call ptr @malloc(i32 %69)
  %71 = load ptr, ptr %66, align 8
  %72 = load i64, ptr %memberidx.i94, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %70, ptr align 8 %71, i64 %72, i1 false)
  %73 = getelementptr inbounds i8, ptr %70, i64 %72
  store i8 0, ptr %73, align 1
  %74 = load ptr, ptr %memberidx6, align 8
  %memberidx33 = getelementptr inbounds %Expression, ptr %74, i64 0, i32 3
  %75 = load ptr, ptr %memberidx33, align 8
  %76 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %75)
  %memberidx.i95 = getelementptr inbounds %String, ptr %76, i64 0, i32 1
  %77 = load i64, ptr %memberidx.i95, align 4
  %78 = trunc i64 %77 to i32
  %79 = add i32 %78, 1
  %80 = call ptr @malloc(i32 %79)
  %81 = load ptr, ptr %76, align 8
  %82 = load i64, ptr %memberidx.i95, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %80, ptr align 8 %81, i64 %82, i1 false)
  %83 = getelementptr inbounds i8, ptr %80, i64 %82
  store i8 0, ptr %83, align 1
  %84 = alloca ptr, align 8
  %85 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %84, ptr nonnull @106, ptr %70, ptr %80)
  %86 = load ptr, ptr %84, align 8
  %87 = tail call ptr @malloc(i32 24)
  store ptr %86, ptr %87, align 8
  %memberidx1.i96 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  store i64 %85, ptr %memberidx1.i96, align 4
  %memberidx2.i97 = getelementptr inbounds %String, ptr %87, i64 0, i32 2
  store i64 %85, ptr %memberidx2.i97, align 4
  tail call void @free(ptr %70)
  tail call void @free(ptr %80)
  %88 = load ptr, ptr %memberidx12, align 8
  %89 = load ptr, ptr %88, align 8
  %90 = load ptr, ptr %memberidx.i80, align 8
  %memberidx1.i99 = getelementptr inbounds %Compiler, ptr %90, i64 0, i32 5
  %91 = load ptr, ptr %memberidx1.i99, align 8
  %92 = call ptr @malloc(i32 24)
  store i64 5, ptr %92, align 4
  %memberidx1.i.i100 = getelementptr inbounds %FloError, ptr %92, i64 0, i32 2
  store ptr %89, ptr %memberidx1.i.i100, align 8
  %memberidx2.i.i101 = getelementptr inbounds %FloError, ptr %92, i64 0, i32 1
  store ptr %87, ptr %memberidx2.i.i101, align 8
  %memberidx.i.i102 = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 1
  %93 = load i64, ptr %memberidx.i.i102, align 4
  %94 = add i64 %93, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %91, i64 0, i32 2
  %95 = load i64, ptr %memberidx.i.i.i, align 4
  %96 = icmp slt i64 %95, %94
  %.pre = load ptr, ptr %91, align 8
  br i1 %96, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry29, %while.entry.i.i.i
  %97 = phi ptr [ %101, %while.entry.i.i.i ], [ %.pre, %if.entry29 ]
  %98 = phi i64 [ %102, %while.entry.i.i.i ], [ %95, %if.entry29 ]
  %99 = shl nuw i64 %98, 1
  store i64 %99, ptr %memberidx.i.i.i, align 4
  %100 = shl i64 %98, 4
  %101 = call ptr @realloc(ptr %97, i64 %100)
  store ptr %101, ptr %91, align 8
  %102 = load i64, ptr %memberidx.i.i.i, align 4
  %103 = icmp slt i64 %102, %94
  br i1 %103, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre109 = load i64, ptr %memberidx.i.i102, align 4
  %.pre120 = add nsw i64 %.pre109, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry29, %TypeChecker_error.exit.loopexit
  %.pre-phi121 = phi i64 [ %.pre120, %TypeChecker_error.exit.loopexit ], [ %94, %if.entry29 ]
  %104 = phi ptr [ %101, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry29 ]
  %105 = phi i64 [ %.pre109, %TypeChecker_error.exit.loopexit ], [ %93, %if.entry29 ]
  store i64 %.pre-phi121, ptr %memberidx.i.i102, align 4
  %106 = getelementptr inbounds ptr, ptr %104, i64 %105
  store ptr %92, ptr %106, align 8
  br label %ifend15
}

define internal fastcc ptr @TypeChecker_check_constructor_call(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2, ptr nocapture writeonly %3) unnamed_addr {
  %5 = load ptr, ptr %0, align 8
  %6 = load ptr, ptr %5, align 8
  %7 = load i64, ptr %1, align 4
  %8 = load ptr, ptr %6, align 8
  %9 = getelementptr inbounds ptr, ptr %8, i64 %7
  %10 = load ptr, ptr %9, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %10, i64 0, i32 3
  %11 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %12 = load i64, ptr %memberidx3.i, align 4
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1, align 8
  %17 = icmp eq ptr %16, null
  br i1 %17, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend, %else13, %if.entry12, %ifend11, %if.entry
  %common.ret.op = phi ptr [ %19, %if.entry ], [ null, %ifend11 ], [ %52, %if.entry12 ], [ %80, %else13 ], [ null, %ifend ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %4
  %18 = tail call ptr @malloc(i32 44)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(44) %18, ptr noundef nonnull align 8 dereferenceable(44) @189, i64 44, i1 false)
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 44, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 44, ptr %memberidx2.i.i, align 4
  br label %common.ret

ifend:                                            ; preds = %4
  %memberidx2 = getelementptr inbounds %Class, ptr %15, i64 0, i32 5
  %20 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %PropId, ptr %16, i64 0, i32 2
  %21 = load i64, ptr %memberidx3, align 4
  %22 = load ptr, ptr %20, align 8
  %23 = getelementptr inbounds ptr, ptr %22, i64 %21
  %24 = load ptr, ptr %23, align 8
  %memberidx4 = getelementptr inbounds %ClassMethod, ptr %24, i64 0, i32 4
  %25 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %24, i64 0, i32 6
  %26 = load ptr, ptr %memberidx5, align 8
  %27 = tail call fastcc ptr @TypeChecker_fill_in_call_args(ptr nonnull %0, ptr %25, ptr %26, ptr %2)
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %28 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %28, i64 0, i32 5
  %29 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i38 = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx2.i38, align 4
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %common.ret, label %ifend8

ifend8:                                           ; preds = %ifend
  %memberidx.i39 = getelementptr inbounds %FunctionType, ptr %25, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i39, align 8
  %memberidx1.i40 = getelementptr inbounds %Array_Type_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx1.i40, align 4
  %memberidx2.i41 = getelementptr inbounds %Array_Expression_, ptr %27, i64 0, i32 1
  %34 = load i64, ptr %memberidx2.i41, align 4
  %.not.i = icmp eq i64 %33, %34
  br i1 %.not.i, label %for.cond.i.preheader, label %if.entry12

for.cond.i.preheader:                             ; preds = %ifend8
  %35 = icmp sgt i64 %33, 0
  br i1 %35, label %for.body.i, label %ifend11

for.body.i:                                       ; preds = %for.cond.i.preheader, %ifend8.i
  %i.0.i54 = phi i64 [ %45, %ifend8.i ], [ 0, %for.cond.i.preheader ]
  %36 = load ptr, ptr %memberidx.i39, align 8
  %37 = load ptr, ptr %36, align 8
  %38 = getelementptr inbounds ptr, ptr %37, i64 %i.0.i54
  %39 = load ptr, ptr %38, align 8
  %40 = load ptr, ptr %27, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %i.0.i54
  %42 = load ptr, ptr %41, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %42, i64 0, i32 3
  %43 = load ptr, ptr %memberidx5.i, align 8
  %44 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %39, ptr %43)
  br i1 %44, label %ifend8.i, label %else13

ifend8.i:                                         ; preds = %for.body.i
  %45 = add nuw nsw i64 %i.0.i54, 1
  %46 = load i64, ptr %memberidx2.i41, align 4
  %47 = icmp slt i64 %45, %46
  br i1 %47, label %for.body.i, label %ifend11

ifend11:                                          ; preds = %ifend8.i, %for.cond.i.preheader
  store ptr %27, ptr %3, align 8
  br label %common.ret

if.entry12:                                       ; preds = %ifend8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %2, i64 0, i32 1
  %48 = load i64, ptr %memberidx17, align 4
  %49 = alloca ptr, align 8
  %50 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %49, ptr nonnull @190, i64 %33, i64 %48)
  %51 = load ptr, ptr %49, align 8
  %52 = tail call ptr @malloc(i32 24)
  store ptr %51, ptr %52, align 8
  %memberidx1.i42 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  store i64 %50, ptr %memberidx1.i42, align 4
  %memberidx2.i43 = getelementptr inbounds %String, ptr %52, i64 0, i32 2
  store i64 %50, ptr %memberidx2.i43, align 4
  br label %common.ret

else13:                                           ; preds = %for.body.i
  %53 = load ptr, ptr %memberidx.i39, align 8
  %54 = load ptr, ptr %53, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %i.0.i54
  %56 = load ptr, ptr %55, align 8
  %57 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %56)
  %memberidx.i44 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  %58 = load i64, ptr %memberidx.i44, align 4
  %59 = trunc i64 %58 to i32
  %60 = add i32 %59, 1
  %61 = tail call ptr @malloc(i32 %60)
  %62 = load ptr, ptr %57, align 8
  %63 = load i64, ptr %memberidx.i44, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %61, ptr align 8 %62, i64 %63, i1 false)
  %64 = getelementptr inbounds i8, ptr %61, i64 %63
  store i8 0, ptr %64, align 1
  %65 = load ptr, ptr %27, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %i.0.i54
  %67 = load ptr, ptr %66, align 8
  %memberidx19 = getelementptr inbounds %Expression, ptr %67, i64 0, i32 3
  %68 = load ptr, ptr %memberidx19, align 8
  %69 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %68)
  %memberidx.i45 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  %70 = load i64, ptr %memberidx.i45, align 4
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, 1
  %73 = tail call ptr @malloc(i32 %72)
  %74 = load ptr, ptr %69, align 8
  %75 = load i64, ptr %memberidx.i45, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %73, ptr align 8 %74, i64 %75, i1 false)
  %76 = getelementptr inbounds i8, ptr %73, i64 %75
  store i8 0, ptr %76, align 1
  %77 = alloca ptr, align 8
  %78 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %77, ptr nonnull @191, ptr %61, ptr %73, i64 %i.0.i54)
  %79 = load ptr, ptr %77, align 8
  %80 = tail call ptr @malloc(i32 24)
  store ptr %79, ptr %80, align 8
  %memberidx1.i46 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  store i64 %78, ptr %memberidx1.i46, align 4
  %memberidx2.i47 = getelementptr inbounds %String, ptr %80, i64 0, i32 2
  store i64 %78, ptr %memberidx2.i47, align 4
  tail call void @free(ptr %61)
  tail call void @free(ptr %73)
  br label %common.ret
}

define internal fastcc void @TypeChecker_declare_class_methods(ptr %0, ptr nocapture %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %ClassDeclarationNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1540 = getelementptr inbounds %Array_MethodNode_, ptr %3, i64 0, i32 1
  %4 = load i64, ptr %memberidx1540, align 4
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx.i486 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 4
  %memberidx52 = getelementptr inbounds %Class, ptr %1, i64 0, i32 6
  %memberidx110 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %memberidx121 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx98 = getelementptr inbounds %Class, ptr %1, i64 0, i32 7
  %memberidx134 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_ClassMethod____sl__.exit
  %6 = phi ptr [ %3, %for.body.lr.ph ], [ %505, %Array_ClassMethod____sl__.exit ]
  %i.0541 = phi i64 [ 0, %for.body.lr.ph ], [ %504, %Array_ClassMethod____sl__.exit ]
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %i.0541
  %9 = load ptr, ptr %8, align 8
  %10 = tail call ptr @malloc(i32 58)
  %memberidx.i = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 7
  store i1 false, ptr %memberidx.i, align 1
  %11 = load ptr, ptr %9, align 8
  %memberidx4 = getelementptr inbounds %IdentifierToken, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 3
  store ptr %12, ptr %memberidx5, align 8
  %13 = load ptr, ptr %memberidx.i486, align 8
  %14 = load i64, ptr %13, align 4
  %15 = tail call fastcc ptr @TypeChecker_create_scope(ptr %0, i64 %14)
  %memberidx2.i487 = getelementptr inbounds %Scope, ptr %15, i64 0, i32 5
  %16 = load ptr, ptr %memberidx.i486, align 8
  store ptr %16, ptr %memberidx2.i487, align 8
  %17 = load ptr, ptr %0, align 8
  %18 = load ptr, ptr %memberidx.i486, align 8
  %19 = load ptr, ptr %17, align 8
  %20 = load i64, ptr %18, align 4
  %21 = load ptr, ptr %19, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %20
  %23 = load ptr, ptr %22, align 8
  %memberidx2.i.i.i488 = getelementptr inbounds %Module, ptr %23, i64 0, i32 7
  %24 = load ptr, ptr %memberidx2.i.i.i488, align 8
  %memberidx3.i.i.i489 = getelementptr inbounds %ScopeId, ptr %18, i64 0, i32 1
  %25 = load i64, ptr %memberidx3.i.i.i489, align 4
  %26 = load ptr, ptr %24, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %memberidx4.i490 = getelementptr inbounds %Scope, ptr %28, i64 0, i32 7
  %29 = load ptr, ptr %memberidx4.i490, align 8
  %30 = load ptr, ptr %15, align 8
  %memberidx.i.i491 = getelementptr inbounds %Array_ScopeId_, ptr %29, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i491, align 4
  %32 = add i64 %31, 1
  %memberidx.i.i.i492 = getelementptr inbounds %Array_ScopeId_, ptr %29, i64 0, i32 2
  %33 = load i64, ptr %memberidx.i.i.i492, align 4
  %34 = icmp slt i64 %33, %32
  %.pre.i = load ptr, ptr %29, align 8
  br i1 %34, label %while.entry.i.i.i493, label %TypeChecker_create_child_scope_within_current_scope.exit

while.entry.i.i.i493:                             ; preds = %for.body, %while.entry.i.i.i493
  %35 = phi ptr [ %39, %while.entry.i.i.i493 ], [ %.pre.i, %for.body ]
  %36 = phi i64 [ %40, %while.entry.i.i.i493 ], [ %33, %for.body ]
  %37 = shl nuw i64 %36, 1
  store i64 %37, ptr %memberidx.i.i.i492, align 4
  %38 = shl i64 %36, 4
  %39 = tail call ptr @realloc(ptr %35, i64 %38)
  store ptr %39, ptr %29, align 8
  %40 = load i64, ptr %memberidx.i.i.i492, align 4
  %41 = icmp slt i64 %40, %32
  br i1 %41, label %while.entry.i.i.i493, label %Array_ScopeId____sl__.exit.loopexit.i

Array_ScopeId____sl__.exit.loopexit.i:            ; preds = %while.entry.i.i.i493
  %.pre11.i = load i64, ptr %memberidx.i.i491, align 4
  %.pre13.i = add nsw i64 %.pre11.i, 1
  br label %TypeChecker_create_child_scope_within_current_scope.exit

TypeChecker_create_child_scope_within_current_scope.exit: ; preds = %for.body, %Array_ScopeId____sl__.exit.loopexit.i
  %.pre-phi.i = phi i64 [ %.pre13.i, %Array_ScopeId____sl__.exit.loopexit.i ], [ %32, %for.body ]
  %42 = phi ptr [ %39, %Array_ScopeId____sl__.exit.loopexit.i ], [ %.pre.i, %for.body ]
  %43 = phi i64 [ %.pre11.i, %Array_ScopeId____sl__.exit.loopexit.i ], [ %31, %for.body ]
  store i64 %.pre-phi.i, ptr %memberidx.i.i491, align 4
  %44 = getelementptr inbounds ptr, ptr %42, i64 %43
  store ptr %30, ptr %44, align 8
  %45 = load ptr, ptr %15, align 8
  store ptr %45, ptr %memberidx.i486, align 8
  %memberidx8 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 6
  %46 = tail call ptr @malloc(i32 24)
  %memberidx.i240 = getelementptr inbounds %Array_FunctionArg_, ptr %46, i64 0, i32 1
  store i64 0, ptr %memberidx.i240, align 4
  %memberidx1.i = getelementptr inbounds %Array_FunctionArg_, ptr %46, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %47 = tail call ptr @malloc(i32 64)
  store ptr %47, ptr %46, align 8
  store i64 0, ptr %memberidx.i240, align 4
  store ptr %46, ptr %memberidx8, align 8
  %48 = tail call fastcc i1 @is_operator_overload_name(ptr %12)
  br i1 %48, label %if.entry, label %ifend

common.ret:                                       ; preds = %Array_ClassMethod____sl__.exit, %for.entry, %TypeChecker_error.exit435, %TypeChecker_error.exit425, %TypeChecker_error.exit412, %TypeChecker_error.exit394, %TypeChecker_error.exit373, %TypeChecker_error.exit355, %TypeChecker_error.exit323, %TypeChecker_error.exit309, %TypeChecker_error.exit283, %TypeChecker_error.exit
  ret void

if.entry:                                         ; preds = %TypeChecker_create_child_scope_within_current_scope.exit
  %49 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %49, align 8
  %50 = tail call ptr @malloc(i32 24)
  store ptr %49, ptr %50, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %50, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %50, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i, align 4
  %memberidx.i241 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %51 = load i64, ptr %memberidx.i241, align 4
  %.not.i = icmp eq i64 %51, 8
  br i1 %.not.i, label %ifend.i, label %String___eq__.exit

ifend.i:                                          ; preds = %if.entry
  %52 = load ptr, ptr %12, align 8
  %53 = tail call i64 @memcmp(ptr %52, ptr nonnull %49, i64 8)
  %54 = icmp eq i64 %53, 0
  br label %String___eq__.exit

String___eq__.exit:                               ; preds = %if.entry, %ifend.i
  %common.ret.op.i = phi i1 [ %54, %ifend.i ], [ false, %if.entry ]
  %55 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %55, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %56 = tail call ptr @malloc(i32 24)
  store ptr %55, ptr %56, align 8
  %memberidx1.i.i243 = getelementptr inbounds %String, ptr %56, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i243, align 4
  %memberidx2.i.i244 = getelementptr inbounds %String, ptr %56, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i244, align 4
  %57 = load i64, ptr %memberidx.i241, align 4
  %.not.i247 = icmp eq i64 %57, 7
  br i1 %.not.i247, label %ifend.i249, label %String___eq__.exit250

ifend.i249:                                       ; preds = %String___eq__.exit
  %58 = load ptr, ptr %12, align 8
  %59 = tail call i64 @memcmp(ptr %58, ptr nonnull %55, i64 7)
  %60 = icmp eq i64 %59, 0
  br label %String___eq__.exit250

String___eq__.exit250:                            ; preds = %String___eq__.exit, %ifend.i249
  %common.ret.op.i248 = phi i1 [ %60, %ifend.i249 ], [ false, %String___eq__.exit ]
  %61 = or i1 %common.ret.op.i, %common.ret.op.i248
  br i1 %61, label %ifend13, label %else12

ifend:                                            ; preds = %ifend21, %TypeChecker_create_child_scope_within_current_scope.exit
  %memberidx33 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 6
  %62 = load i1, ptr %memberidx33, align 1
  store i1 %62, ptr %memberidx.i, align 1
  %memberidx34 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 1
  %memberidx35 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 5
  %63 = load i1, ptr %memberidx35, align 1
  store i1 %63, ptr %memberidx34, align 1
  %memberidx36 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 2
  %memberidx37 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 3
  %64 = load i64, ptr %memberidx37, align 4
  store i64 %64, ptr %memberidx36, align 4
  %memberidx38 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 4
  %memberidx39 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 1
  %65 = load ptr, ptr %memberidx39, align 8
  %memberidx40 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 4
  %66 = load ptr, ptr %memberidx40, align 8
  %67 = load ptr, ptr %memberidx8, align 8
  %68 = tail call fastcc ptr @TypeChecker_init_function_signature(ptr nonnull %0, ptr %65, ptr %66, ptr %67)
  store ptr %68, ptr %memberidx38, align 8
  %69 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %69, align 8
  %70 = tail call ptr @malloc(i32 24)
  store ptr %69, ptr %70, align 8
  %memberidx1.i.i251 = getelementptr inbounds %String, ptr %70, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i251, align 4
  %memberidx2.i.i252 = getelementptr inbounds %String, ptr %70, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i252, align 4
  %memberidx.i253 = getelementptr inbounds %String, ptr %12, i64 0, i32 1
  %71 = load i64, ptr %memberidx.i253, align 4
  %.not.i255 = icmp eq i64 %71, 8
  br i1 %.not.i255, label %ifend.i257, label %ifend44

ifend.i257:                                       ; preds = %ifend
  %72 = load ptr, ptr %12, align 8
  %73 = tail call i64 @memcmp(ptr %72, ptr nonnull %69, i64 8)
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %if.entry42, label %ifend44

else12:                                           ; preds = %String___eq__.exit250
  %75 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %75, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %76 = tail call ptr @malloc(i32 24)
  store ptr %75, ptr %76, align 8
  %memberidx1.i.i259 = getelementptr inbounds %String, ptr %76, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i259, align 4
  %memberidx2.i.i260 = getelementptr inbounds %String, ptr %76, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i260, align 4
  %77 = load i64, ptr %memberidx.i241, align 4
  %.not.i263 = icmp eq i64 %77, 11
  br i1 %.not.i263, label %String___eq__.exit266, label %ifend13

String___eq__.exit266:                            ; preds = %else12
  %78 = load ptr, ptr %12, align 8
  %79 = tail call i64 @memcmp(ptr %78, ptr nonnull %75, i64 11)
  %.fr = freeze i64 %79
  %80 = icmp eq i64 %.fr, 0
  %spec.select = select i1 %80, i64 2, i64 1
  br label %ifend13

ifend13:                                          ; preds = %String___eq__.exit266, %else12, %String___eq__.exit250
  %args_num.0 = phi i64 [ 0, %String___eq__.exit250 ], [ 1, %else12 ], [ %spec.select, %String___eq__.exit266 ]
  %memberidx17 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 1
  %81 = load ptr, ptr %memberidx17, align 8
  %memberidx18 = getelementptr inbounds %Array_ArgNode_, ptr %81, i64 0, i32 1
  %82 = load i64, ptr %memberidx18, align 4
  %.not239 = icmp eq i64 %82, %args_num.0
  br i1 %.not239, label %ifend21, label %if.entry19

if.entry19:                                       ; preds = %ifend13
  %83 = load i64, ptr %memberidx.i241, align 4
  %84 = trunc i64 %83 to i32
  %85 = add i32 %84, 1
  %86 = tail call ptr @malloc(i32 %85)
  %87 = load ptr, ptr %12, align 8
  %88 = load i64, ptr %memberidx.i241, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %86, ptr align 8 %87, i64 %88, i1 false)
  %89 = getelementptr inbounds i8, ptr %86, i64 %88
  store i8 0, ptr %89, align 1
  %90 = load ptr, ptr %memberidx17, align 8
  %memberidx23 = getelementptr inbounds %Array_ArgNode_, ptr %90, i64 0, i32 1
  %91 = load i64, ptr %memberidx23, align 4
  %92 = alloca ptr, align 8
  %93 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %92, ptr nonnull @142, i64 %args_num.0, ptr %86, i64 %91)
  %94 = load ptr, ptr %92, align 8
  %95 = tail call ptr @malloc(i32 24)
  store ptr %94, ptr %95, align 8
  %memberidx1.i268 = getelementptr inbounds %String, ptr %95, i64 0, i32 1
  store i64 %93, ptr %memberidx1.i268, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %95, i64 0, i32 2
  store i64 %93, ptr %memberidx2.i, align 4
  tail call void @free(ptr %86)
  %96 = load ptr, ptr %9, align 8
  %memberidx25 = getelementptr inbounds %Token, ptr %96, i64 0, i32 1
  %97 = load ptr, ptr %memberidx25, align 8
  %memberidx.i269 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %98 = load ptr, ptr %memberidx.i269, align 8
  %memberidx1.i270 = getelementptr inbounds %Compiler, ptr %98, i64 0, i32 5
  %99 = load ptr, ptr %memberidx1.i270, align 8
  %100 = call ptr @malloc(i32 24)
  store i64 4, ptr %100, align 4
  %memberidx1.i.i271 = getelementptr inbounds %FloError, ptr %100, i64 0, i32 2
  store ptr %97, ptr %memberidx1.i.i271, align 8
  %memberidx2.i.i272 = getelementptr inbounds %FloError, ptr %100, i64 0, i32 1
  store ptr %95, ptr %memberidx2.i.i272, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %99, i64 0, i32 1
  %101 = load i64, ptr %memberidx.i.i, align 4
  %102 = add i64 %101, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %99, i64 0, i32 2
  %103 = load i64, ptr %memberidx.i.i.i, align 4
  %104 = icmp slt i64 %103, %102
  %.pre = load ptr, ptr %99, align 8
  br i1 %104, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry19, %while.entry.i.i.i
  %105 = phi ptr [ %109, %while.entry.i.i.i ], [ %.pre, %if.entry19 ]
  %106 = phi i64 [ %110, %while.entry.i.i.i ], [ %103, %if.entry19 ]
  %107 = shl nuw i64 %106, 1
  store i64 %107, ptr %memberidx.i.i.i, align 4
  %108 = shl i64 %106, 4
  %109 = call ptr @realloc(ptr %105, i64 %108)
  store ptr %109, ptr %99, align 8
  %110 = load i64, ptr %memberidx.i.i.i, align 4
  %111 = icmp slt i64 %110, %102
  br i1 %111, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre580 = load i64, ptr %memberidx.i.i, align 4
  %.pre652 = add nsw i64 %.pre580, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry19, %TypeChecker_error.exit.loopexit
  %.pre-phi653 = phi i64 [ %.pre652, %TypeChecker_error.exit.loopexit ], [ %102, %if.entry19 ]
  %112 = phi ptr [ %109, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry19 ]
  %113 = phi i64 [ %.pre580, %TypeChecker_error.exit.loopexit ], [ %101, %if.entry19 ]
  store i64 %.pre-phi653, ptr %memberidx.i.i, align 4
  %114 = getelementptr inbounds ptr, ptr %112, i64 %113
  store ptr %100, ptr %114, align 8
  br label %common.ret

ifend21:                                          ; preds = %ifend13
  %memberidx26 = getelementptr inbounds %MethodNode, ptr %9, i64 0, i32 5
  %115 = load i1, ptr %memberidx26, align 1
  br i1 %115, label %if.entry27, label %ifend

if.entry27:                                       ; preds = %ifend21
  %116 = load i64, ptr %memberidx.i241, align 4
  %117 = trunc i64 %116 to i32
  %118 = add i32 %117, 1
  %119 = tail call ptr @malloc(i32 %118)
  %120 = load ptr, ptr %12, align 8
  %121 = load i64, ptr %memberidx.i241, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %119, ptr align 8 %120, i64 %121, i1 false)
  %122 = getelementptr inbounds i8, ptr %119, i64 %121
  store i8 0, ptr %122, align 1
  %123 = alloca ptr, align 8
  %124 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %123, ptr nonnull @143, ptr %119)
  %125 = load ptr, ptr %123, align 8
  %126 = tail call ptr @malloc(i32 24)
  store ptr %125, ptr %126, align 8
  %memberidx1.i274 = getelementptr inbounds %String, ptr %126, i64 0, i32 1
  store i64 %124, ptr %memberidx1.i274, align 4
  %memberidx2.i275 = getelementptr inbounds %String, ptr %126, i64 0, i32 2
  store i64 %124, ptr %memberidx2.i275, align 4
  tail call void @free(ptr %119)
  %127 = load ptr, ptr %9, align 8
  %memberidx31 = getelementptr inbounds %Token, ptr %127, i64 0, i32 1
  %128 = load ptr, ptr %memberidx31, align 8
  %memberidx.i276 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %129 = load ptr, ptr %memberidx.i276, align 8
  %memberidx1.i277 = getelementptr inbounds %Compiler, ptr %129, i64 0, i32 5
  %130 = load ptr, ptr %memberidx1.i277, align 8
  %131 = call ptr @malloc(i32 24)
  store i64 4, ptr %131, align 4
  %memberidx1.i.i278 = getelementptr inbounds %FloError, ptr %131, i64 0, i32 2
  store ptr %128, ptr %memberidx1.i.i278, align 8
  %memberidx2.i.i279 = getelementptr inbounds %FloError, ptr %131, i64 0, i32 1
  store ptr %126, ptr %memberidx2.i.i279, align 8
  %memberidx.i.i280 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 1
  %132 = load i64, ptr %memberidx.i.i280, align 4
  %133 = add i64 %132, 1
  %memberidx.i.i.i281 = getelementptr inbounds %Array_FloError_, ptr %130, i64 0, i32 2
  %134 = load i64, ptr %memberidx.i.i.i281, align 4
  %135 = icmp slt i64 %134, %133
  %.pre624 = load ptr, ptr %130, align 8
  br i1 %135, label %while.entry.i.i.i282, label %TypeChecker_error.exit283

while.entry.i.i.i282:                             ; preds = %if.entry27, %while.entry.i.i.i282
  %136 = phi ptr [ %140, %while.entry.i.i.i282 ], [ %.pre624, %if.entry27 ]
  %137 = phi i64 [ %141, %while.entry.i.i.i282 ], [ %134, %if.entry27 ]
  %138 = shl nuw i64 %137, 1
  store i64 %138, ptr %memberidx.i.i.i281, align 4
  %139 = shl i64 %137, 4
  %140 = call ptr @realloc(ptr %136, i64 %139)
  store ptr %140, ptr %130, align 8
  %141 = load i64, ptr %memberidx.i.i.i281, align 4
  %142 = icmp slt i64 %141, %133
  br i1 %142, label %while.entry.i.i.i282, label %TypeChecker_error.exit283.loopexit

TypeChecker_error.exit283.loopexit:               ; preds = %while.entry.i.i.i282
  %.pre625 = load i64, ptr %memberidx.i.i280, align 4
  %.pre633 = add nsw i64 %.pre625, 1
  br label %TypeChecker_error.exit283

TypeChecker_error.exit283:                        ; preds = %if.entry27, %TypeChecker_error.exit283.loopexit
  %.pre-phi = phi i64 [ %.pre633, %TypeChecker_error.exit283.loopexit ], [ %133, %if.entry27 ]
  %143 = phi ptr [ %140, %TypeChecker_error.exit283.loopexit ], [ %.pre624, %if.entry27 ]
  %144 = phi i64 [ %.pre625, %TypeChecker_error.exit283.loopexit ], [ %132, %if.entry27 ]
  store i64 %.pre-phi, ptr %memberidx.i.i280, align 4
  %145 = getelementptr inbounds ptr, ptr %143, i64 %144
  store ptr %131, ptr %145, align 8
  br label %common.ret

if.entry42:                                       ; preds = %ifend.i257
  %146 = load ptr, ptr %memberidx38, align 8
  %memberidx46 = getelementptr inbounds %FunctionType, ptr %146, i64 0, i32 2
  %147 = load ptr, ptr %memberidx46, align 8
  %148 = load i64, ptr %147, align 4
  %149 = icmp eq i64 %148, 20
  br i1 %149, label %if.entry.i484, label %is_object.exit

if.entry.i484:                                    ; preds = %if.entry42, %if.entry.i484
  %.tr5.i = phi ptr [ %150, %if.entry.i484 ], [ %147, %if.entry42 ]
  %memberidx1.i483 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %150 = load ptr, ptr %memberidx1.i483, align 8
  %151 = load i64, ptr %150, align 4
  %152 = icmp eq i64 %151, 20
  br i1 %152, label %if.entry.i484, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i484, %if.entry42
  %.lcssa.i = phi i64 [ %148, %if.entry42 ], [ %151, %if.entry.i484 ]
  %153 = icmp eq i64 %.lcssa.i, 11
  br i1 %153, label %ifend.i287, label %if.entry47

ifend.i287:                                       ; preds = %is_object.exit
  %154 = load ptr, ptr %0, align 8
  br label %tailrecurse.i474

tailrecurse.i474:                                 ; preds = %if.entry.i477, %ifend.i287
  %155 = phi i64 [ %148, %ifend.i287 ], [ %.pre582, %if.entry.i477 ]
  %.tr11.i473 = phi ptr [ %147, %ifend.i287 ], [ %156, %if.entry.i477 ]
  switch i64 %155, label %get_class_from_type.exit482 [
    i64 20, label %if.entry.i477
    i64 11, label %if.entry3.i481
  ]

if.entry.i477:                                    ; preds = %tailrecurse.i474
  %memberidx1.i476 = getelementptr inbounds %GenericType, ptr %.tr11.i473, i64 0, i32 3
  %156 = load ptr, ptr %memberidx1.i476, align 8
  %.pre582 = load i64, ptr %156, align 4
  br label %tailrecurse.i474

if.entry3.i481:                                   ; preds = %tailrecurse.i474
  %memberidx6.i478 = getelementptr inbounds %ObjectType, ptr %.tr11.i473, i64 0, i32 1
  %157 = load ptr, ptr %memberidx6.i478, align 8
  %158 = load ptr, ptr %154, align 8
  %159 = load i64, ptr %157, align 4
  %160 = load ptr, ptr %158, align 8
  %161 = getelementptr inbounds ptr, ptr %160, i64 %159
  %162 = load ptr, ptr %161, align 8
  %memberidx2.i.i479 = getelementptr inbounds %Module, ptr %162, i64 0, i32 3
  %163 = load ptr, ptr %memberidx2.i.i479, align 8
  %memberidx3.i.i480 = getelementptr inbounds %TypeId, ptr %157, i64 0, i32 2
  %164 = load i64, ptr %memberidx3.i.i480, align 4
  %165 = load ptr, ptr %163, align 8
  %166 = getelementptr inbounds ptr, ptr %165, i64 %164
  %167 = load ptr, ptr %166, align 8
  br label %get_class_from_type.exit482

get_class_from_type.exit482:                      ; preds = %tailrecurse.i474, %if.entry3.i481
  %common.ret.op.i475 = phi ptr [ %167, %if.entry3.i481 ], [ null, %tailrecurse.i474 ]
  %memberidx1.i285 = getelementptr inbounds %Class, ptr %common.ret.op.i475, i64 0, i32 6
  %168 = load ptr, ptr %memberidx1.i285, align 8
  %169 = tail call ptr @malloc(i32 4)
  store i32 1701736292, ptr %169, align 8
  %170 = tail call ptr @malloc(i32 24)
  store ptr %169, ptr %170, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %170, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %170, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i, align 4
  %171 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %170)
  %memberidx.i.i286 = getelementptr inbounds %Map_String_PropId_, ptr %168, i64 0, i32 1
  %172 = load i64, ptr %memberidx.i.i286, align 4
  %173 = urem i64 %171, %172
  %174 = load ptr, ptr %168, align 8
  %175 = getelementptr inbounds ptr, ptr %174, i64 %173
  %176 = load ptr, ptr %175, align 8
  %.not.i.i = icmp eq ptr %176, null
  br i1 %.not.i.i, label %if.entry47, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %get_class_from_type.exit482, %else.i.i
  %177 = phi ptr [ %185, %else.i.i ], [ %174, %get_class_from_type.exit482 ]
  %178 = phi i64 [ %186, %else.i.i ], [ %172, %get_class_from_type.exit482 ]
  %179 = phi ptr [ %190, %else.i.i ], [ %176, %get_class_from_type.exit482 ]
  %hash.0.i.i = phi i64 [ %188, %else.i.i ], [ %173, %get_class_from_type.exit482 ]
  %180 = load ptr, ptr %179, align 8
  %memberidx.i.i.i288 = getelementptr inbounds %String, ptr %180, i64 0, i32 1
  %181 = load i64, ptr %memberidx.i.i.i288, align 4
  %.not.i.i.i = icmp eq i64 %181, 4
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %182 = load ptr, ptr %180, align 8
  %183 = tail call i64 @memcmp(ptr %182, ptr nonnull %169, i64 4)
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre583 = load i64, ptr %memberidx.i.i286, align 4
  %.pre584 = load ptr, ptr %168, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre585.pre = load ptr, ptr %168, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre585.pre, i64 %hash.0.i.i
  %.pre586.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre586.pre, null
  br i1 %.not25.i.i, label %if.entry47, label %Map_String_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %185 = phi ptr [ %.pre584, %ifend.i.i.i.else.i.i_crit_edge ], [ %177, %while.entry.i.i ]
  %186 = phi i64 [ %.pre583, %ifend.i.i.i.else.i.i_crit_edge ], [ %178, %while.entry.i.i ]
  %187 = add nuw i64 %hash.0.i.i, 1
  %188 = urem i64 %187, %186
  %189 = getelementptr inbounds ptr, ptr %185, i64 %188
  %190 = load ptr, ptr %189, align 8
  %.not26.i.i = icmp eq ptr %190, null
  br i1 %.not26.i.i, label %if.entry47, label %while.entry.i.i

Map_String_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre586.pre, i64 0, i32 1
  %191 = load ptr, ptr %memberidx11.i.i, align 8
  %192 = icmp eq ptr %191, null
  br i1 %192, label %if.entry47, label %ifend4.i

ifend4.i:                                         ; preds = %Map_String_PropId____getitem__.exit.i
  %193 = load ptr, ptr %0, align 8
  %memberidx.i.i34.i = getelementptr inbounds %PropId, ptr %191, i64 0, i32 1
  %194 = load ptr, ptr %memberidx.i.i34.i, align 8
  %195 = load ptr, ptr %193, align 8
  %196 = load i64, ptr %194, align 4
  %197 = load ptr, ptr %195, align 8
  %198 = getelementptr inbounds ptr, ptr %197, i64 %196
  %199 = load ptr, ptr %198, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %199, i64 0, i32 3
  %200 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %194, i64 0, i32 2
  %201 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %202 = load ptr, ptr %200, align 8
  %203 = getelementptr inbounds ptr, ptr %202, i64 %201
  %204 = load ptr, ptr %203, align 8
  %205 = load i64, ptr %191, align 4
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend4.i
  %memberidx1.i.i289 = getelementptr inbounds %Class, ptr %204, i64 0, i32 5
  %207 = load ptr, ptr %memberidx1.i.i289, align 8
  %memberidx2.i.i290 = getelementptr inbounds %PropId, ptr %191, i64 0, i32 2
  %208 = load i64, ptr %memberidx2.i.i290, align 4
  %209 = load ptr, ptr %207, align 8
  %210 = getelementptr inbounds ptr, ptr %209, i64 %208
  %211 = load ptr, ptr %210, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %211, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend4.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %204, i64 0, i32 4
  %212 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %191, i64 0, i32 2
  %213 = load i64, ptr %memberidx5.i.i, align 4
  %214 = load ptr, ptr %212, align 8
  %215 = getelementptr inbounds ptr, ptr %214, i64 %213
  %216 = load ptr, ptr %215, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %216, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i35.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  %217 = load i64, ptr %common.ret.op.i35.i, align 4
  %.not.i291 = icmp eq i64 %217, 0
  br i1 %.not.i291, label %ifend9.i, label %if.entry47

ifend9.i:                                         ; preds = %get_class_prop_type.exit.i
  %218 = load ptr, ptr %memberidx1.i285, align 8
  %219 = tail call ptr @malloc(i32 4)
  store i32 1954047342, ptr %219, align 8
  %220 = tail call ptr @malloc(i32 24)
  store ptr %219, ptr %220, align 8
  %memberidx1.i.i36.i = getelementptr inbounds %String, ptr %220, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i36.i, align 4
  %memberidx2.i.i37.i = getelementptr inbounds %String, ptr %220, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i37.i, align 4
  %221 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %220)
  %memberidx.i38.i = getelementptr inbounds %Map_String_PropId_, ptr %218, i64 0, i32 1
  %222 = load i64, ptr %memberidx.i38.i, align 4
  %223 = urem i64 %221, %222
  %224 = load ptr, ptr %218, align 8
  %225 = getelementptr inbounds ptr, ptr %224, i64 %223
  %226 = load ptr, ptr %225, align 8
  %.not.i39.i = icmp eq ptr %226, null
  br i1 %.not.i39.i, label %if.entry47, label %while.entry.i44.i

while.entry.i44.i:                                ; preds = %ifend9.i, %else.i52.i
  %227 = phi ptr [ %235, %else.i52.i ], [ %224, %ifend9.i ]
  %228 = phi i64 [ %236, %else.i52.i ], [ %222, %ifend9.i ]
  %229 = phi ptr [ %240, %else.i52.i ], [ %226, %ifend9.i ]
  %hash.0.i40.i = phi i64 [ %238, %else.i52.i ], [ %223, %ifend9.i ]
  %230 = load ptr, ptr %229, align 8
  %memberidx.i.i41.i = getelementptr inbounds %String, ptr %230, i64 0, i32 1
  %231 = load i64, ptr %memberidx.i.i41.i, align 4
  %.not.i.i43.i = icmp eq i64 %231, 4
  br i1 %.not.i.i43.i, label %ifend.i.i45.i, label %else.i52.i

ifend.i.i45.i:                                    ; preds = %while.entry.i44.i
  %232 = load ptr, ptr %230, align 8
  %233 = tail call i64 @memcmp(ptr %232, ptr nonnull %219, i64 4)
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %while.end.i50.i, label %ifend.i.i45.i.else.i52.i_crit_edge

ifend.i.i45.i.else.i52.i_crit_edge:               ; preds = %ifend.i.i45.i
  %.pre587 = load i64, ptr %memberidx.i38.i, align 4
  %.pre588 = load ptr, ptr %218, align 8
  br label %else.i52.i

while.end.i50.i:                                  ; preds = %ifend.i.i45.i
  %.pre589.pre = load ptr, ptr %218, align 8
  %.phi.trans.insert590.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre589.pre, i64 %hash.0.i40.i
  %.pre591.pre = load ptr, ptr %.phi.trans.insert590.phi.trans.insert, align 8
  %.not25.i49.i = icmp eq ptr %.pre591.pre, null
  br i1 %.not25.i49.i, label %if.entry47, label %Map_String_PropId____getitem__.exit56.i

else.i52.i:                                       ; preds = %ifend.i.i45.i.else.i52.i_crit_edge, %while.entry.i44.i
  %235 = phi ptr [ %.pre588, %ifend.i.i45.i.else.i52.i_crit_edge ], [ %227, %while.entry.i44.i ]
  %236 = phi i64 [ %.pre587, %ifend.i.i45.i.else.i52.i_crit_edge ], [ %228, %while.entry.i44.i ]
  %237 = add nuw i64 %hash.0.i40.i, 1
  %238 = urem i64 %237, %236
  %239 = getelementptr inbounds ptr, ptr %235, i64 %238
  %240 = load ptr, ptr %239, align 8
  %.not26.i51.i = icmp eq ptr %240, null
  br i1 %.not26.i51.i, label %if.entry47, label %while.entry.i44.i

Map_String_PropId____getitem__.exit56.i:          ; preds = %while.end.i50.i
  %memberidx11.i54.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre591.pre, i64 0, i32 1
  %241 = load ptr, ptr %memberidx11.i54.i, align 8
  %242 = icmp eq ptr %241, null
  br i1 %242, label %if.entry47, label %ifend13.i

ifend13.i:                                        ; preds = %Map_String_PropId____getitem__.exit56.i
  %243 = load ptr, ptr %0, align 8
  %memberidx.i.i57.i = getelementptr inbounds %PropId, ptr %241, i64 0, i32 1
  %244 = load ptr, ptr %memberidx.i.i57.i, align 8
  %245 = load ptr, ptr %243, align 8
  %246 = load i64, ptr %244, align 4
  %247 = load ptr, ptr %245, align 8
  %248 = getelementptr inbounds ptr, ptr %247, i64 %246
  %249 = load ptr, ptr %248, align 8
  %memberidx2.i.i.i58.i = getelementptr inbounds %Module, ptr %249, i64 0, i32 3
  %250 = load ptr, ptr %memberidx2.i.i.i58.i, align 8
  %memberidx3.i.i.i59.i = getelementptr inbounds %TypeId, ptr %244, i64 0, i32 2
  %251 = load i64, ptr %memberidx3.i.i.i59.i, align 4
  %252 = load ptr, ptr %250, align 8
  %253 = getelementptr inbounds ptr, ptr %252, i64 %251
  %254 = load ptr, ptr %253, align 8
  %255 = load i64, ptr %241, align 4
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %if.entry.i65.i, label %ifend.i69.i

if.entry.i65.i:                                   ; preds = %ifend13.i
  %memberidx1.i62.i = getelementptr inbounds %Class, ptr %254, i64 0, i32 5
  %257 = load ptr, ptr %memberidx1.i62.i, align 8
  %memberidx2.i63.i = getelementptr inbounds %PropId, ptr %241, i64 0, i32 2
  %258 = load i64, ptr %memberidx2.i63.i, align 4
  %259 = load ptr, ptr %257, align 8
  %260 = getelementptr inbounds ptr, ptr %259, i64 %258
  %261 = load ptr, ptr %260, align 8
  %memberidx3.i64.i = getelementptr inbounds %ClassMethod, ptr %261, i64 0, i32 4
  br label %get_class_prop_type.exit70.i

ifend.i69.i:                                      ; preds = %ifend13.i
  %memberidx4.i66.i = getelementptr inbounds %Class, ptr %254, i64 0, i32 4
  %262 = load ptr, ptr %memberidx4.i66.i, align 8
  %memberidx5.i67.i = getelementptr inbounds %PropId, ptr %241, i64 0, i32 2
  %263 = load i64, ptr %memberidx5.i67.i, align 4
  %264 = load ptr, ptr %262, align 8
  %265 = getelementptr inbounds ptr, ptr %264, i64 %263
  %266 = load ptr, ptr %265, align 8
  %memberidx6.i68.i = getelementptr inbounds %ClassField, ptr %266, i64 0, i32 4
  br label %get_class_prop_type.exit70.i

get_class_prop_type.exit70.i:                     ; preds = %ifend.i69.i, %if.entry.i65.i
  %common.ret.op.in.i60.i = phi ptr [ %memberidx3.i64.i, %if.entry.i65.i ], [ %memberidx6.i68.i, %ifend.i69.i ]
  %common.ret.op.i61.i = load ptr, ptr %common.ret.op.in.i60.i, align 8
  %267 = load i64, ptr %common.ret.op.i61.i, align 4
  %.not31.i = icmp eq i64 %267, 16
  br i1 %.not31.i, label %ifend18.i, label %if.entry47

ifend18.i:                                        ; preds = %get_class_prop_type.exit70.i
  %memberidx19.i = getelementptr inbounds %FunctionType, ptr %common.ret.op.i61.i, i64 0, i32 1
  %268 = load ptr, ptr %memberidx19.i, align 8
  %memberidx20.i = getelementptr inbounds %Array_Type_, ptr %268, i64 0, i32 1
  %269 = load i64, ptr %memberidx20.i, align 4
  %.not32.i = icmp eq i64 %269, 0
  br i1 %.not32.i, label %ifend44, label %if.entry47

ifend44:                                          ; preds = %ifend, %ifend18.i, %ifend.i257
  %270 = load ptr, ptr %memberidx52, align 8
  %271 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %12)
  %memberidx.i292 = getelementptr inbounds %Map_String_PropId_, ptr %270, i64 0, i32 1
  %272 = load i64, ptr %memberidx.i292, align 4
  %273 = urem i64 %271, %272
  %274 = load ptr, ptr %270, align 8
  %275 = getelementptr inbounds ptr, ptr %274, i64 %273
  %276 = load ptr, ptr %275, align 8
  %.not.i293 = icmp eq ptr %276, null
  br i1 %.not.i293, label %ifend55, label %while.entry.i

while.entry.i:                                    ; preds = %ifend44, %else.i
  %277 = phi ptr [ %287, %else.i ], [ %274, %ifend44 ]
  %278 = phi i64 [ %288, %else.i ], [ %272, %ifend44 ]
  %279 = phi ptr [ %292, %else.i ], [ %276, %ifend44 ]
  %hash.0.i = phi i64 [ %290, %else.i ], [ %273, %ifend44 ]
  %280 = load ptr, ptr %279, align 8
  %memberidx.i.i294 = getelementptr inbounds %String, ptr %280, i64 0, i32 1
  %281 = load i64, ptr %memberidx.i.i294, align 4
  %282 = load i64, ptr %memberidx.i253, align 4
  %.not.i.i296 = icmp eq i64 %281, %282
  br i1 %.not.i.i296, label %ifend.i.i297, label %else.i

ifend.i.i297:                                     ; preds = %while.entry.i
  %283 = load ptr, ptr %280, align 8
  %284 = load ptr, ptr %12, align 8
  %285 = tail call i64 @memcmp(ptr %283, ptr %284, i64 %281)
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %while.end.i, label %ifend.i.i297.else.i_crit_edge

ifend.i.i297.else.i_crit_edge:                    ; preds = %ifend.i.i297
  %.pre592 = load i64, ptr %memberidx.i292, align 4
  %.pre593 = load ptr, ptr %270, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i297
  %.pre594.pre = load ptr, ptr %270, align 8
  %.phi.trans.insert595.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre594.pre, i64 %hash.0.i
  %.pre596.pre = load ptr, ptr %.phi.trans.insert595.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre596.pre, null
  br i1 %.not25.i, label %ifend55, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i297.else.i_crit_edge, %while.entry.i
  %287 = phi ptr [ %.pre593, %ifend.i.i297.else.i_crit_edge ], [ %277, %while.entry.i ]
  %288 = phi i64 [ %.pre592, %ifend.i.i297.else.i_crit_edge ], [ %278, %while.entry.i ]
  %289 = add nuw i64 %hash.0.i, 1
  %290 = urem i64 %289, %288
  %291 = getelementptr inbounds ptr, ptr %287, i64 %290
  %292 = load ptr, ptr %291, align 8
  %.not26.i = icmp eq ptr %292, null
  br i1 %.not26.i, label %ifend55, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre596.pre, i64 0, i32 1
  %293 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %293, null
  br i1 %.not, label %ifend55, label %if.entry53

if.entry47:                                       ; preds = %ifend9.i, %get_class_from_type.exit482, %while.end.i50.i, %while.end.i.i, %is_object.exit, %Map_String_PropId____getitem__.exit.i, %get_class_prop_type.exit.i, %Map_String_PropId____getitem__.exit56.i, %get_class_prop_type.exit70.i, %ifend18.i, %else.i.i, %else.i52.i
  %294 = tail call ptr @malloc(i32 74)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(74) %294, ptr noundef nonnull align 8 dereferenceable(74) @144, i64 74, i1 false)
  %295 = tail call ptr @malloc(i32 24)
  store ptr %294, ptr %295, align 8
  %memberidx1.i.i300 = getelementptr inbounds %String, ptr %295, i64 0, i32 1
  store i64 74, ptr %memberidx1.i.i300, align 4
  %memberidx2.i.i301 = getelementptr inbounds %String, ptr %295, i64 0, i32 2
  store i64 74, ptr %memberidx2.i.i301, align 4
  %296 = load ptr, ptr %9, align 8
  %memberidx51 = getelementptr inbounds %Token, ptr %296, i64 0, i32 1
  %297 = load ptr, ptr %memberidx51, align 8
  %memberidx.i302 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %298 = load ptr, ptr %memberidx.i302, align 8
  %memberidx1.i303 = getelementptr inbounds %Compiler, ptr %298, i64 0, i32 5
  %299 = load ptr, ptr %memberidx1.i303, align 8
  %300 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %300, align 4
  %memberidx1.i.i304 = getelementptr inbounds %FloError, ptr %300, i64 0, i32 2
  store ptr %297, ptr %memberidx1.i.i304, align 8
  %memberidx2.i.i305 = getelementptr inbounds %FloError, ptr %300, i64 0, i32 1
  store ptr %295, ptr %memberidx2.i.i305, align 8
  %memberidx.i.i306 = getelementptr inbounds %Array_FloError_, ptr %299, i64 0, i32 1
  %301 = load i64, ptr %memberidx.i.i306, align 4
  %302 = add i64 %301, 1
  %memberidx.i.i.i307 = getelementptr inbounds %Array_FloError_, ptr %299, i64 0, i32 2
  %303 = load i64, ptr %memberidx.i.i.i307, align 4
  %304 = icmp slt i64 %303, %302
  %.pre621 = load ptr, ptr %299, align 8
  br i1 %304, label %while.entry.i.i.i308, label %TypeChecker_error.exit309

while.entry.i.i.i308:                             ; preds = %if.entry47, %while.entry.i.i.i308
  %305 = phi ptr [ %309, %while.entry.i.i.i308 ], [ %.pre621, %if.entry47 ]
  %306 = phi i64 [ %310, %while.entry.i.i.i308 ], [ %303, %if.entry47 ]
  %307 = shl nuw i64 %306, 1
  store i64 %307, ptr %memberidx.i.i.i307, align 4
  %308 = shl i64 %306, 4
  %309 = tail call ptr @realloc(ptr %305, i64 %308)
  store ptr %309, ptr %299, align 8
  %310 = load i64, ptr %memberidx.i.i.i307, align 4
  %311 = icmp slt i64 %310, %302
  br i1 %311, label %while.entry.i.i.i308, label %TypeChecker_error.exit309.loopexit

TypeChecker_error.exit309.loopexit:               ; preds = %while.entry.i.i.i308
  %.pre622 = load i64, ptr %memberidx.i.i306, align 4
  %.pre634 = add nsw i64 %.pre622, 1
  br label %TypeChecker_error.exit309

TypeChecker_error.exit309:                        ; preds = %if.entry47, %TypeChecker_error.exit309.loopexit
  %.pre-phi635 = phi i64 [ %.pre634, %TypeChecker_error.exit309.loopexit ], [ %302, %if.entry47 ]
  %312 = phi ptr [ %309, %TypeChecker_error.exit309.loopexit ], [ %.pre621, %if.entry47 ]
  %313 = phi i64 [ %.pre622, %TypeChecker_error.exit309.loopexit ], [ %301, %if.entry47 ]
  store i64 %.pre-phi635, ptr %memberidx.i.i306, align 4
  %314 = getelementptr inbounds ptr, ptr %312, i64 %313
  store ptr %300, ptr %314, align 8
  br label %common.ret

if.entry53:                                       ; preds = %Map_String_PropId____getitem__.exit
  %memberidx56 = getelementptr inbounds %PropId, ptr %293, i64 0, i32 1
  %315 = load ptr, ptr %memberidx56, align 8
  %316 = load ptr, ptr %1, align 8
  %317 = icmp eq ptr %315, %316
  br i1 %317, label %if.entry58, label %ifend60

ifend55:                                          ; preds = %else.i, %ifend44, %while.end.i, %ifend69, %Map_String_PropId____getitem__.exit
  %318 = tail call ptr @malloc(i32 24)
  %319 = load ptr, ptr %1, align 8
  store i64 0, ptr %318, align 4
  %memberidx1.i310 = getelementptr inbounds %PropId, ptr %318, i64 0, i32 1
  store ptr %319, ptr %memberidx1.i310, align 8
  %memberidx2.i311 = getelementptr inbounds %PropId, ptr %318, i64 0, i32 2
  store i64 %i.0541, ptr %memberidx2.i311, align 4
  store ptr %318, ptr %10, align 8
  %320 = load i1, ptr %memberidx35, align 1
  br i1 %320, label %if.entry83, label %else84

if.entry58:                                       ; preds = %if.entry53
  %321 = load i64, ptr %memberidx.i253, align 4
  %322 = trunc i64 %321 to i32
  %323 = add i32 %322, 1
  %324 = tail call ptr @malloc(i32 %323)
  %325 = load ptr, ptr %12, align 8
  %326 = load i64, ptr %memberidx.i253, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %324, ptr align 8 %325, i64 %326, i1 false)
  %327 = getelementptr inbounds i8, ptr %324, i64 %326
  store i8 0, ptr %327, align 1
  %memberidx61 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %328 = load ptr, ptr %memberidx61, align 8
  %memberidx.i313 = getelementptr inbounds %String, ptr %328, i64 0, i32 1
  %329 = load i64, ptr %memberidx.i313, align 4
  %330 = trunc i64 %329 to i32
  %331 = add i32 %330, 1
  %332 = tail call ptr @malloc(i32 %331)
  %333 = load ptr, ptr %328, align 8
  %334 = load i64, ptr %memberidx.i313, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %332, ptr align 8 %333, i64 %334, i1 false)
  %335 = getelementptr inbounds i8, ptr %332, i64 %334
  store i8 0, ptr %335, align 1
  %336 = alloca ptr, align 8
  %337 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %336, ptr nonnull @145, ptr %324, ptr %332)
  %338 = load ptr, ptr %336, align 8
  %339 = tail call ptr @malloc(i32 24)
  store ptr %338, ptr %339, align 8
  %memberidx1.i314 = getelementptr inbounds %String, ptr %339, i64 0, i32 1
  store i64 %337, ptr %memberidx1.i314, align 4
  %memberidx2.i315 = getelementptr inbounds %String, ptr %339, i64 0, i32 2
  store i64 %337, ptr %memberidx2.i315, align 4
  tail call void @free(ptr %324)
  tail call void @free(ptr %332)
  %340 = load ptr, ptr %9, align 8
  %memberidx63 = getelementptr inbounds %Token, ptr %340, i64 0, i32 1
  %341 = load ptr, ptr %memberidx63, align 8
  %memberidx.i316 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %342 = load ptr, ptr %memberidx.i316, align 8
  %memberidx1.i317 = getelementptr inbounds %Compiler, ptr %342, i64 0, i32 5
  %343 = load ptr, ptr %memberidx1.i317, align 8
  %344 = call ptr @malloc(i32 24)
  store i64 1, ptr %344, align 4
  %memberidx1.i.i318 = getelementptr inbounds %FloError, ptr %344, i64 0, i32 2
  store ptr %341, ptr %memberidx1.i.i318, align 8
  %memberidx2.i.i319 = getelementptr inbounds %FloError, ptr %344, i64 0, i32 1
  store ptr %339, ptr %memberidx2.i.i319, align 8
  %memberidx.i.i320 = getelementptr inbounds %Array_FloError_, ptr %343, i64 0, i32 1
  %345 = load i64, ptr %memberidx.i.i320, align 4
  %346 = add i64 %345, 1
  %memberidx.i.i.i321 = getelementptr inbounds %Array_FloError_, ptr %343, i64 0, i32 2
  %347 = load i64, ptr %memberidx.i.i.i321, align 4
  %348 = icmp slt i64 %347, %346
  %.pre603 = load ptr, ptr %343, align 8
  br i1 %348, label %while.entry.i.i.i322, label %TypeChecker_error.exit323

while.entry.i.i.i322:                             ; preds = %if.entry58, %while.entry.i.i.i322
  %349 = phi ptr [ %353, %while.entry.i.i.i322 ], [ %.pre603, %if.entry58 ]
  %350 = phi i64 [ %354, %while.entry.i.i.i322 ], [ %347, %if.entry58 ]
  %351 = shl nuw i64 %350, 1
  store i64 %351, ptr %memberidx.i.i.i321, align 4
  %352 = shl i64 %350, 4
  %353 = call ptr @realloc(ptr %349, i64 %352)
  store ptr %353, ptr %343, align 8
  %354 = load i64, ptr %memberidx.i.i.i321, align 4
  %355 = icmp slt i64 %354, %346
  br i1 %355, label %while.entry.i.i.i322, label %TypeChecker_error.exit323.loopexit

TypeChecker_error.exit323.loopexit:               ; preds = %while.entry.i.i.i322
  %.pre604 = load i64, ptr %memberidx.i.i320, align 4
  %.pre646 = add nsw i64 %.pre604, 1
  br label %TypeChecker_error.exit323

TypeChecker_error.exit323:                        ; preds = %if.entry58, %TypeChecker_error.exit323.loopexit
  %.pre-phi647 = phi i64 [ %.pre646, %TypeChecker_error.exit323.loopexit ], [ %346, %if.entry58 ]
  %356 = phi ptr [ %353, %TypeChecker_error.exit323.loopexit ], [ %.pre603, %if.entry58 ]
  %357 = phi i64 [ %.pre604, %TypeChecker_error.exit323.loopexit ], [ %345, %if.entry58 ]
  store i64 %.pre-phi647, ptr %memberidx.i.i320, align 4
  %358 = getelementptr inbounds ptr, ptr %356, i64 %357
  store ptr %344, ptr %358, align 8
  br label %common.ret

ifend60:                                          ; preds = %if.entry53
  %359 = load ptr, ptr %0, align 8
  %360 = load ptr, ptr %359, align 8
  %361 = load i64, ptr %315, align 4
  %362 = load ptr, ptr %360, align 8
  %363 = getelementptr inbounds ptr, ptr %362, i64 %361
  %364 = load ptr, ptr %363, align 8
  %memberidx2.i.i.i325 = getelementptr inbounds %Module, ptr %364, i64 0, i32 3
  %365 = load ptr, ptr %memberidx2.i.i.i325, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %315, i64 0, i32 2
  %366 = load i64, ptr %memberidx3.i.i.i, align 4
  %367 = load ptr, ptr %365, align 8
  %368 = getelementptr inbounds ptr, ptr %367, i64 %366
  %369 = load ptr, ptr %368, align 8
  %370 = load i64, ptr %293, align 4
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %if.entry.i338, label %ifend.i342

if.entry.i338:                                    ; preds = %ifend60
  %memberidx1.i327 = getelementptr inbounds %Class, ptr %369, i64 0, i32 5
  %372 = load ptr, ptr %memberidx1.i327, align 8
  %memberidx2.i328 = getelementptr inbounds %PropId, ptr %293, i64 0, i32 2
  %373 = load i64, ptr %memberidx2.i328, align 4
  %374 = load ptr, ptr %372, align 8
  %375 = getelementptr inbounds ptr, ptr %374, i64 %373
  %376 = load ptr, ptr %375, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %376, i64 0, i32 4
  %memberidx3.i337 = getelementptr inbounds %ClassMethod, ptr %376, i64 0, i32 2
  br label %get_class_prop_visibility.exit

ifend.i342:                                       ; preds = %ifend60
  %memberidx4.i = getelementptr inbounds %Class, ptr %369, i64 0, i32 4
  %377 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %293, i64 0, i32 2
  %378 = load i64, ptr %memberidx5.i, align 4
  %379 = load ptr, ptr %377, align 8
  %380 = getelementptr inbounds ptr, ptr %379, i64 %378
  %381 = load ptr, ptr %380, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %381, i64 0, i32 4
  %memberidx6.i341 = getelementptr inbounds %ClassField, ptr %381, i64 0, i32 2
  br label %get_class_prop_visibility.exit

get_class_prop_visibility.exit:                   ; preds = %if.entry.i338, %ifend.i342
  %common.ret.op.i326502.in = phi ptr [ %memberidx3.i, %if.entry.i338 ], [ %memberidx6.i, %ifend.i342 ]
  %common.ret.op.in.i333 = phi ptr [ %memberidx3.i337, %if.entry.i338 ], [ %memberidx6.i341, %ifend.i342 ]
  %common.ret.op.i326502 = load ptr, ptr %common.ret.op.i326502.in, align 8
  %common.ret.op.i334 = load i64, ptr %common.ret.op.in.i333, align 4
  %382 = load ptr, ptr %memberidx38, align 8
  %383 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %common.ret.op.i326502, ptr %382)
  br i1 %383, label %ifend69, label %if.entry67

if.entry67:                                       ; preds = %get_class_prop_visibility.exit
  %384 = load i64, ptr %memberidx.i253, align 4
  %385 = trunc i64 %384 to i32
  %386 = add i32 %385, 1
  %387 = tail call ptr @malloc(i32 %386)
  %388 = load ptr, ptr %12, align 8
  %389 = load i64, ptr %memberidx.i253, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %387, ptr align 8 %388, i64 %389, i1 false)
  %390 = getelementptr inbounds i8, ptr %387, i64 %389
  store i8 0, ptr %390, align 1
  %memberidx70 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %391 = load ptr, ptr %memberidx70, align 8
  %memberidx.i344 = getelementptr inbounds %String, ptr %391, i64 0, i32 1
  %392 = load i64, ptr %memberidx.i344, align 4
  %393 = trunc i64 %392 to i32
  %394 = add i32 %393, 1
  %395 = tail call ptr @malloc(i32 %394)
  %396 = load ptr, ptr %391, align 8
  %397 = load i64, ptr %memberidx.i344, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %395, ptr align 8 %396, i64 %397, i1 false)
  %398 = getelementptr inbounds i8, ptr %395, i64 %397
  store i8 0, ptr %398, align 1
  %399 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %common.ret.op.i326502)
  %memberidx.i345 = getelementptr inbounds %String, ptr %399, i64 0, i32 1
  %400 = load i64, ptr %memberidx.i345, align 4
  %401 = trunc i64 %400 to i32
  %402 = add i32 %401, 1
  %403 = tail call ptr @malloc(i32 %402)
  %404 = load ptr, ptr %399, align 8
  %405 = load i64, ptr %memberidx.i345, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %403, ptr align 8 %404, i64 %405, i1 false)
  %406 = getelementptr inbounds i8, ptr %403, i64 %405
  store i8 0, ptr %406, align 1
  %407 = alloca ptr, align 8
  %408 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %407, ptr nonnull @146, ptr %387, ptr %395, ptr %403)
  %409 = load ptr, ptr %407, align 8
  %410 = tail call ptr @malloc(i32 24)
  store ptr %409, ptr %410, align 8
  %memberidx1.i346 = getelementptr inbounds %String, ptr %410, i64 0, i32 1
  store i64 %408, ptr %memberidx1.i346, align 4
  %memberidx2.i347 = getelementptr inbounds %String, ptr %410, i64 0, i32 2
  store i64 %408, ptr %memberidx2.i347, align 4
  tail call void @free(ptr %387)
  tail call void @free(ptr %395)
  tail call void @free(ptr %403)
  %411 = load ptr, ptr %9, align 8
  %memberidx72 = getelementptr inbounds %Token, ptr %411, i64 0, i32 1
  %412 = load ptr, ptr %memberidx72, align 8
  %memberidx.i348 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %413 = load ptr, ptr %memberidx.i348, align 8
  %memberidx1.i349 = getelementptr inbounds %Compiler, ptr %413, i64 0, i32 5
  %414 = load ptr, ptr %memberidx1.i349, align 8
  %415 = call ptr @malloc(i32 24)
  store i64 5, ptr %415, align 4
  %memberidx1.i.i350 = getelementptr inbounds %FloError, ptr %415, i64 0, i32 2
  store ptr %412, ptr %memberidx1.i.i350, align 8
  %memberidx2.i.i351 = getelementptr inbounds %FloError, ptr %415, i64 0, i32 1
  store ptr %410, ptr %memberidx2.i.i351, align 8
  %memberidx.i.i352 = getelementptr inbounds %Array_FloError_, ptr %414, i64 0, i32 1
  %416 = load i64, ptr %memberidx.i.i352, align 4
  %417 = add i64 %416, 1
  %memberidx.i.i.i353 = getelementptr inbounds %Array_FloError_, ptr %414, i64 0, i32 2
  %418 = load i64, ptr %memberidx.i.i.i353, align 4
  %419 = icmp slt i64 %418, %417
  %.pre597 = load ptr, ptr %414, align 8
  br i1 %419, label %while.entry.i.i.i354, label %TypeChecker_error.exit355

while.entry.i.i.i354:                             ; preds = %if.entry67, %while.entry.i.i.i354
  %420 = phi ptr [ %424, %while.entry.i.i.i354 ], [ %.pre597, %if.entry67 ]
  %421 = phi i64 [ %425, %while.entry.i.i.i354 ], [ %418, %if.entry67 ]
  %422 = shl nuw i64 %421, 1
  store i64 %422, ptr %memberidx.i.i.i353, align 4
  %423 = shl i64 %421, 4
  %424 = call ptr @realloc(ptr %420, i64 %423)
  store ptr %424, ptr %414, align 8
  %425 = load i64, ptr %memberidx.i.i.i353, align 4
  %426 = icmp slt i64 %425, %417
  br i1 %426, label %while.entry.i.i.i354, label %TypeChecker_error.exit355.loopexit

TypeChecker_error.exit355.loopexit:               ; preds = %while.entry.i.i.i354
  %.pre598 = load i64, ptr %memberidx.i.i352, align 4
  %.pre650 = add nsw i64 %.pre598, 1
  br label %TypeChecker_error.exit355

TypeChecker_error.exit355:                        ; preds = %if.entry67, %TypeChecker_error.exit355.loopexit
  %.pre-phi651 = phi i64 [ %.pre650, %TypeChecker_error.exit355.loopexit ], [ %417, %if.entry67 ]
  %427 = phi ptr [ %424, %TypeChecker_error.exit355.loopexit ], [ %.pre597, %if.entry67 ]
  %428 = phi i64 [ %.pre598, %TypeChecker_error.exit355.loopexit ], [ %416, %if.entry67 ]
  store i64 %.pre-phi651, ptr %memberidx.i.i352, align 4
  %429 = getelementptr inbounds ptr, ptr %427, i64 %428
  store ptr %415, ptr %429, align 8
  br label %common.ret

ifend69:                                          ; preds = %get_class_prop_visibility.exit
  %430 = load i64, ptr %memberidx36, align 4
  %.not238 = icmp eq i64 %430, %common.ret.op.i334
  br i1 %.not238, label %ifend55, label %if.entry74

if.entry74:                                       ; preds = %ifend69
  %431 = load i64, ptr %memberidx.i253, align 4
  %432 = trunc i64 %431 to i32
  %433 = add i32 %432, 1
  %434 = tail call ptr @malloc(i32 %433)
  %435 = load ptr, ptr %12, align 8
  %436 = load i64, ptr %memberidx.i253, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %434, ptr align 8 %435, i64 %436, i1 false)
  %437 = getelementptr inbounds i8, ptr %434, i64 %436
  store i8 0, ptr %437, align 1
  %memberidx77 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %438 = load ptr, ptr %memberidx77, align 8
  %memberidx.i357 = getelementptr inbounds %String, ptr %438, i64 0, i32 1
  %439 = load i64, ptr %memberidx.i357, align 4
  %440 = trunc i64 %439 to i32
  %441 = add i32 %440, 1
  %442 = tail call ptr @malloc(i32 %441)
  %443 = load ptr, ptr %438, align 8
  %444 = load i64, ptr %memberidx.i357, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %442, ptr align 8 %443, i64 %444, i1 false)
  %445 = getelementptr inbounds i8, ptr %442, i64 %444
  store i8 0, ptr %445, align 1
  switch i64 %common.ret.op.i334, label %ifend3.i [
    i64 1, label %if.entry.i361
    i64 2, label %if.entry1.i
  ]

if.entry.i361:                                    ; preds = %if.entry74
  %446 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %446, ptr noundef nonnull align 8 dereferenceable(7) @52, i64 7, i1 false)
  %447 = tail call ptr @malloc(i32 24)
  store ptr %446, ptr %447, align 8
  br label %dump_access.exit

if.entry1.i:                                      ; preds = %if.entry74
  %448 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %448, ptr noundef nonnull align 8 dereferenceable(6) @53, i64 6, i1 false)
  %449 = tail call ptr @malloc(i32 24)
  store ptr %448, ptr %449, align 8
  br label %dump_access.exit

ifend3.i:                                         ; preds = %if.entry74
  %450 = tail call ptr @malloc(i32 9)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %450, ptr noundef nonnull align 8 dereferenceable(9) @54, i64 9, i1 false)
  %451 = tail call ptr @malloc(i32 24)
  store ptr %450, ptr %451, align 8
  br label %dump_access.exit

dump_access.exit:                                 ; preds = %if.entry.i361, %if.entry1.i, %ifend3.i
  %.sink719 = phi ptr [ %447, %if.entry.i361 ], [ %449, %if.entry1.i ], [ %451, %ifend3.i ]
  %.sink718 = phi i64 [ 7, %if.entry.i361 ], [ 6, %if.entry1.i ], [ 9, %ifend3.i ]
  %.off0 = phi i32 [ 8, %if.entry.i361 ], [ 7, %if.entry1.i ], [ 10, %ifend3.i ]
  %memberidx1.i.i.i359 = getelementptr inbounds %String, ptr %.sink719, i64 0, i32 1
  store i64 %.sink718, ptr %memberidx1.i.i.i359, align 4
  %memberidx2.i.i.i360 = getelementptr inbounds %String, ptr %.sink719, i64 0, i32 2
  store i64 %.sink718, ptr %memberidx2.i.i.i360, align 4
  %memberidx.i363 = getelementptr inbounds %String, ptr %.sink719, i64 0, i32 1
  %452 = tail call ptr @malloc(i32 %.off0)
  %453 = load ptr, ptr %.sink719, align 8
  %454 = load i64, ptr %memberidx.i363, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %452, ptr align 8 %453, i64 %454, i1 false)
  %455 = getelementptr inbounds i8, ptr %452, i64 %454
  store i8 0, ptr %455, align 1
  %456 = alloca ptr, align 8
  %457 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %456, ptr nonnull @147, ptr nonnull %434, ptr nonnull %442, ptr %452)
  %458 = load ptr, ptr %456, align 8
  %459 = tail call ptr @malloc(i32 24)
  store ptr %458, ptr %459, align 8
  %memberidx1.i364 = getelementptr inbounds %String, ptr %459, i64 0, i32 1
  store i64 %457, ptr %memberidx1.i364, align 4
  %memberidx2.i365 = getelementptr inbounds %String, ptr %459, i64 0, i32 2
  store i64 %457, ptr %memberidx2.i365, align 4
  tail call void @free(ptr nonnull %434)
  tail call void @free(ptr nonnull %442)
  tail call void @free(ptr %452)
  %460 = load ptr, ptr %9, align 8
  %memberidx79 = getelementptr inbounds %Token, ptr %460, i64 0, i32 1
  %461 = load ptr, ptr %memberidx79, align 8
  %memberidx.i366 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %462 = load ptr, ptr %memberidx.i366, align 8
  %memberidx1.i367 = getelementptr inbounds %Compiler, ptr %462, i64 0, i32 5
  %463 = load ptr, ptr %memberidx1.i367, align 8
  %464 = call ptr @malloc(i32 24)
  store i64 4, ptr %464, align 4
  %memberidx1.i.i368 = getelementptr inbounds %FloError, ptr %464, i64 0, i32 2
  store ptr %461, ptr %memberidx1.i.i368, align 8
  %memberidx2.i.i369 = getelementptr inbounds %FloError, ptr %464, i64 0, i32 1
  store ptr %459, ptr %memberidx2.i.i369, align 8
  %memberidx.i.i370 = getelementptr inbounds %Array_FloError_, ptr %463, i64 0, i32 1
  %465 = load i64, ptr %memberidx.i.i370, align 4
  %466 = add i64 %465, 1
  %memberidx.i.i.i371 = getelementptr inbounds %Array_FloError_, ptr %463, i64 0, i32 2
  %467 = load i64, ptr %memberidx.i.i.i371, align 4
  %468 = icmp slt i64 %467, %466
  %.pre600 = load ptr, ptr %463, align 8
  br i1 %468, label %while.entry.i.i.i372, label %TypeChecker_error.exit373

while.entry.i.i.i372:                             ; preds = %dump_access.exit, %while.entry.i.i.i372
  %469 = phi ptr [ %473, %while.entry.i.i.i372 ], [ %.pre600, %dump_access.exit ]
  %470 = phi i64 [ %474, %while.entry.i.i.i372 ], [ %467, %dump_access.exit ]
  %471 = shl nuw i64 %470, 1
  store i64 %471, ptr %memberidx.i.i.i371, align 4
  %472 = shl i64 %470, 4
  %473 = call ptr @realloc(ptr %469, i64 %472)
  store ptr %473, ptr %463, align 8
  %474 = load i64, ptr %memberidx.i.i.i371, align 4
  %475 = icmp slt i64 %474, %466
  br i1 %475, label %while.entry.i.i.i372, label %TypeChecker_error.exit373.loopexit

TypeChecker_error.exit373.loopexit:               ; preds = %while.entry.i.i.i372
  %.pre601 = load i64, ptr %memberidx.i.i370, align 4
  %.pre648 = add nsw i64 %.pre601, 1
  br label %TypeChecker_error.exit373

TypeChecker_error.exit373:                        ; preds = %dump_access.exit, %TypeChecker_error.exit373.loopexit
  %.pre-phi649 = phi i64 [ %.pre648, %TypeChecker_error.exit373.loopexit ], [ %466, %dump_access.exit ]
  %476 = phi ptr [ %473, %TypeChecker_error.exit373.loopexit ], [ %.pre600, %dump_access.exit ]
  %477 = phi i64 [ %.pre601, %TypeChecker_error.exit373.loopexit ], [ %465, %dump_access.exit ]
  store i64 %.pre-phi649, ptr %memberidx.i.i370, align 4
  %478 = getelementptr inbounds ptr, ptr %476, i64 %477
  store ptr %464, ptr %478, align 8
  br label %common.ret

if.entry83:                                       ; preds = %ifend55
  %479 = load i1, ptr %memberidx33, align 1
  br i1 %479, label %if.entry87, label %ifend89

else84:                                           ; preds = %ifend55
  %480 = load ptr, ptr %memberidx5, align 8
  %481 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %481, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %482 = tail call ptr @malloc(i32 24)
  store ptr %481, ptr %482, align 8
  %memberidx1.i.i374 = getelementptr inbounds %String, ptr %482, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i374, align 4
  %memberidx2.i.i375 = getelementptr inbounds %String, ptr %482, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i375, align 4
  %memberidx.i376 = getelementptr inbounds %String, ptr %480, i64 0, i32 1
  %483 = load i64, ptr %memberidx.i376, align 4
  %.not.i378 = icmp eq i64 %483, 11
  br i1 %.not.i378, label %ifend.i380, label %else102

ifend.i380:                                       ; preds = %else84
  %484 = load ptr, ptr %480, align 8
  %485 = tail call i64 @memcmp(ptr %484, ptr nonnull %481, i64 11)
  %486 = icmp eq i64 %485, 0
  br i1 %486, label %if.entry101, label %else102

ifend85:                                          ; preds = %get_class_prop_type.exit449, %if.entry3.i, %ifend103, %ifend95
  %memberidx132 = getelementptr inbounds %ClassMethod, ptr %10, i64 0, i32 8
  %487 = load ptr, ptr %15, align 8
  store ptr %487, ptr %memberidx132, align 8
  %488 = load ptr, ptr %memberidx134, align 8
  %memberidx.i382 = getelementptr inbounds %Array_ClassMethod_, ptr %488, i64 0, i32 1
  %489 = load i64, ptr %memberidx.i382, align 4
  %490 = add i64 %489, 1
  %memberidx.i.i383 = getelementptr inbounds %Array_ClassMethod_, ptr %488, i64 0, i32 2
  %491 = load i64, ptr %memberidx.i.i383, align 4
  %492 = icmp slt i64 %491, %490
  %.pre612 = load ptr, ptr %488, align 8
  br i1 %492, label %while.entry.i.i384, label %Array_ClassMethod____sl__.exit

while.entry.i.i384:                               ; preds = %ifend85, %while.entry.i.i384
  %493 = phi ptr [ %497, %while.entry.i.i384 ], [ %.pre612, %ifend85 ]
  %494 = phi i64 [ %498, %while.entry.i.i384 ], [ %491, %ifend85 ]
  %495 = shl nuw i64 %494, 1
  store i64 %495, ptr %memberidx.i.i383, align 4
  %496 = shl i64 %494, 4
  %497 = tail call ptr @realloc(ptr %493, i64 %496)
  store ptr %497, ptr %488, align 8
  %498 = load i64, ptr %memberidx.i.i383, align 4
  %499 = icmp slt i64 %498, %490
  br i1 %499, label %while.entry.i.i384, label %Array_ClassMethod____sl__.exit.loopexit

Array_ClassMethod____sl__.exit.loopexit:          ; preds = %while.entry.i.i384
  %.pre613 = load i64, ptr %memberidx.i382, align 4
  %.pre640 = add nsw i64 %.pre613, 1
  br label %Array_ClassMethod____sl__.exit

Array_ClassMethod____sl__.exit:                   ; preds = %ifend85, %Array_ClassMethod____sl__.exit.loopexit
  %.pre-phi641 = phi i64 [ %.pre640, %Array_ClassMethod____sl__.exit.loopexit ], [ %490, %ifend85 ]
  %500 = phi ptr [ %497, %Array_ClassMethod____sl__.exit.loopexit ], [ %.pre612, %ifend85 ]
  %501 = phi i64 [ %.pre613, %Array_ClassMethod____sl__.exit.loopexit ], [ %489, %ifend85 ]
  store i64 %.pre-phi641, ptr %memberidx.i382, align 4
  %502 = getelementptr inbounds ptr, ptr %500, i64 %501
  store ptr %10, ptr %502, align 8
  %503 = load ptr, ptr %memberidx2.i487, align 8
  store ptr %503, ptr %memberidx.i486, align 8
  %504 = add nuw nsw i64 %i.0541, 1
  %505 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_MethodNode_, ptr %505, i64 0, i32 1
  %506 = load i64, ptr %memberidx1, align 4
  %507 = icmp slt i64 %504, %506
  br i1 %507, label %for.body, label %common.ret

if.entry87:                                       ; preds = %if.entry83
  %508 = tail call ptr @malloc(i32 31)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(31) %508, ptr noundef nonnull align 8 dereferenceable(31) @148, i64 31, i1 false)
  %509 = tail call ptr @malloc(i32 24)
  store ptr %508, ptr %509, align 8
  %memberidx1.i.i385 = getelementptr inbounds %String, ptr %509, i64 0, i32 1
  store i64 31, ptr %memberidx1.i.i385, align 4
  %memberidx2.i.i386 = getelementptr inbounds %String, ptr %509, i64 0, i32 2
  store i64 31, ptr %memberidx2.i.i386, align 4
  %510 = load ptr, ptr %9, align 8
  %memberidx91 = getelementptr inbounds %Token, ptr %510, i64 0, i32 1
  %511 = load ptr, ptr %memberidx91, align 8
  %memberidx.i387 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %512 = load ptr, ptr %memberidx.i387, align 8
  %memberidx1.i388 = getelementptr inbounds %Compiler, ptr %512, i64 0, i32 5
  %513 = load ptr, ptr %memberidx1.i388, align 8
  %514 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %514, align 4
  %memberidx1.i.i389 = getelementptr inbounds %FloError, ptr %514, i64 0, i32 2
  store ptr %511, ptr %memberidx1.i.i389, align 8
  %memberidx2.i.i390 = getelementptr inbounds %FloError, ptr %514, i64 0, i32 1
  store ptr %509, ptr %memberidx2.i.i390, align 8
  %memberidx.i.i391 = getelementptr inbounds %Array_FloError_, ptr %513, i64 0, i32 1
  %515 = load i64, ptr %memberidx.i.i391, align 4
  %516 = add i64 %515, 1
  %memberidx.i.i.i392 = getelementptr inbounds %Array_FloError_, ptr %513, i64 0, i32 2
  %517 = load i64, ptr %memberidx.i.i.i392, align 4
  %518 = icmp slt i64 %517, %516
  %.pre618 = load ptr, ptr %513, align 8
  br i1 %518, label %while.entry.i.i.i393, label %TypeChecker_error.exit394

while.entry.i.i.i393:                             ; preds = %if.entry87, %while.entry.i.i.i393
  %519 = phi ptr [ %523, %while.entry.i.i.i393 ], [ %.pre618, %if.entry87 ]
  %520 = phi i64 [ %524, %while.entry.i.i.i393 ], [ %517, %if.entry87 ]
  %521 = shl nuw i64 %520, 1
  store i64 %521, ptr %memberidx.i.i.i392, align 4
  %522 = shl i64 %520, 4
  %523 = tail call ptr @realloc(ptr %519, i64 %522)
  store ptr %523, ptr %513, align 8
  %524 = load i64, ptr %memberidx.i.i.i392, align 4
  %525 = icmp slt i64 %524, %516
  br i1 %525, label %while.entry.i.i.i393, label %TypeChecker_error.exit394.loopexit

TypeChecker_error.exit394.loopexit:               ; preds = %while.entry.i.i.i393
  %.pre619 = load i64, ptr %memberidx.i.i391, align 4
  %.pre636 = add nsw i64 %.pre619, 1
  br label %TypeChecker_error.exit394

TypeChecker_error.exit394:                        ; preds = %if.entry87, %TypeChecker_error.exit394.loopexit
  %.pre-phi637 = phi i64 [ %.pre636, %TypeChecker_error.exit394.loopexit ], [ %516, %if.entry87 ]
  %526 = phi ptr [ %523, %TypeChecker_error.exit394.loopexit ], [ %.pre618, %if.entry87 ]
  %527 = phi i64 [ %.pre619, %TypeChecker_error.exit394.loopexit ], [ %515, %if.entry87 ]
  store i64 %.pre-phi637, ptr %memberidx.i.i391, align 4
  %528 = getelementptr inbounds ptr, ptr %526, i64 %527
  store ptr %514, ptr %528, align 8
  br label %common.ret

ifend89:                                          ; preds = %if.entry83
  %529 = load ptr, ptr %memberidx5, align 8
  %530 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %530, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %531 = tail call ptr @malloc(i32 24)
  store ptr %530, ptr %531, align 8
  %memberidx1.i.i395 = getelementptr inbounds %String, ptr %531, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i395, align 4
  %memberidx2.i.i396 = getelementptr inbounds %String, ptr %531, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i396, align 4
  %memberidx.i397 = getelementptr inbounds %String, ptr %529, i64 0, i32 1
  %532 = load i64, ptr %memberidx.i397, align 4
  %.not.i399 = icmp eq i64 %532, 11
  br i1 %.not.i399, label %ifend.i401, label %ifend95

ifend.i401:                                       ; preds = %ifend89
  %533 = load ptr, ptr %529, align 8
  %534 = tail call i64 @memcmp(ptr %533, ptr nonnull %530, i64 11)
  %535 = icmp eq i64 %534, 0
  br i1 %535, label %if.entry93, label %ifend95

if.entry93:                                       ; preds = %ifend.i401
  %536 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %536, ptr noundef nonnull align 8 dereferenceable(33) @150, i64 33, i1 false)
  %537 = tail call ptr @malloc(i32 24)
  store ptr %536, ptr %537, align 8
  %memberidx1.i.i403 = getelementptr inbounds %String, ptr %537, i64 0, i32 1
  store i64 33, ptr %memberidx1.i.i403, align 4
  %memberidx2.i.i404 = getelementptr inbounds %String, ptr %537, i64 0, i32 2
  store i64 33, ptr %memberidx2.i.i404, align 4
  %538 = load ptr, ptr %9, align 8
  %memberidx97 = getelementptr inbounds %Token, ptr %538, i64 0, i32 1
  %539 = load ptr, ptr %memberidx97, align 8
  %memberidx.i405 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %540 = load ptr, ptr %memberidx.i405, align 8
  %memberidx1.i406 = getelementptr inbounds %Compiler, ptr %540, i64 0, i32 5
  %541 = load ptr, ptr %memberidx1.i406, align 8
  %542 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %542, align 4
  %memberidx1.i.i407 = getelementptr inbounds %FloError, ptr %542, i64 0, i32 2
  store ptr %539, ptr %memberidx1.i.i407, align 8
  %memberidx2.i.i408 = getelementptr inbounds %FloError, ptr %542, i64 0, i32 1
  store ptr %537, ptr %memberidx2.i.i408, align 8
  %memberidx.i.i409 = getelementptr inbounds %Array_FloError_, ptr %541, i64 0, i32 1
  %543 = load i64, ptr %memberidx.i.i409, align 4
  %544 = add i64 %543, 1
  %memberidx.i.i.i410 = getelementptr inbounds %Array_FloError_, ptr %541, i64 0, i32 2
  %545 = load i64, ptr %memberidx.i.i.i410, align 4
  %546 = icmp slt i64 %545, %544
  %.pre615 = load ptr, ptr %541, align 8
  br i1 %546, label %while.entry.i.i.i411, label %TypeChecker_error.exit412

while.entry.i.i.i411:                             ; preds = %if.entry93, %while.entry.i.i.i411
  %547 = phi ptr [ %551, %while.entry.i.i.i411 ], [ %.pre615, %if.entry93 ]
  %548 = phi i64 [ %552, %while.entry.i.i.i411 ], [ %545, %if.entry93 ]
  %549 = shl nuw i64 %548, 1
  store i64 %549, ptr %memberidx.i.i.i410, align 4
  %550 = shl i64 %548, 4
  %551 = tail call ptr @realloc(ptr %547, i64 %550)
  store ptr %551, ptr %541, align 8
  %552 = load i64, ptr %memberidx.i.i.i410, align 4
  %553 = icmp slt i64 %552, %544
  br i1 %553, label %while.entry.i.i.i411, label %TypeChecker_error.exit412.loopexit

TypeChecker_error.exit412.loopexit:               ; preds = %while.entry.i.i.i411
  %.pre616 = load i64, ptr %memberidx.i.i409, align 4
  %.pre638 = add nsw i64 %.pre616, 1
  br label %TypeChecker_error.exit412

TypeChecker_error.exit412:                        ; preds = %if.entry93, %TypeChecker_error.exit412.loopexit
  %.pre-phi639 = phi i64 [ %.pre638, %TypeChecker_error.exit412.loopexit ], [ %544, %if.entry93 ]
  %554 = phi ptr [ %551, %TypeChecker_error.exit412.loopexit ], [ %.pre615, %if.entry93 ]
  %555 = phi i64 [ %.pre616, %TypeChecker_error.exit412.loopexit ], [ %543, %if.entry93 ]
  store i64 %.pre-phi639, ptr %memberidx.i.i409, align 4
  %556 = getelementptr inbounds ptr, ptr %554, i64 %555
  store ptr %542, ptr %556, align 8
  br label %common.ret

ifend95:                                          ; preds = %ifend89, %ifend.i401
  %557 = load ptr, ptr %memberidx98, align 8
  %558 = load ptr, ptr %10, align 8
  tail call fastcc void @Map_String_PropId____setitem__(ptr %557, ptr %12, ptr %558)
  br label %ifend85

if.entry101:                                      ; preds = %ifend.i380
  %559 = load i1, ptr %memberidx33, align 1
  br i1 %559, label %if.entry105, label %ifend107

else102:                                          ; preds = %else84, %ifend.i380
  %560 = load i1, ptr %memberidx33, align 1
  br i1 %560, label %if.entry113, label %ifend115

ifend103:                                         ; preds = %ifend115, %ifend107
  %561 = tail call ptr @malloc(i32 16)
  %562 = load ptr, ptr %1, align 8
  store i64 11, ptr %561, align 4
  %memberidx.i413 = getelementptr inbounds %ObjectType, ptr %561, i64 0, i32 1
  store ptr %562, ptr %memberidx.i413, align 8
  %563 = tail call ptr @malloc(i32 4)
  store i32 1936287860, ptr %563, align 8
  %564 = tail call ptr @malloc(i32 24)
  store ptr %563, ptr %564, align 8
  %memberidx1.i.i414 = getelementptr inbounds %String, ptr %564, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i414, align 4
  %memberidx2.i.i415 = getelementptr inbounds %String, ptr %564, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i415, align 4
  %565 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr nonnull %564, ptr null, ptr nonnull %561)
  %566 = load ptr, ptr %memberidx121, align 8
  %.not236 = icmp eq ptr %566, null
  br i1 %.not236, label %ifend85, label %if.entry122

if.entry105:                                      ; preds = %if.entry101
  %567 = tail call ptr @malloc(i32 35)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(35) %567, ptr noundef nonnull align 8 dereferenceable(35) @151, i64 35, i1 false)
  %568 = tail call ptr @malloc(i32 24)
  store ptr %567, ptr %568, align 8
  %memberidx1.i.i416 = getelementptr inbounds %String, ptr %568, i64 0, i32 1
  store i64 35, ptr %memberidx1.i.i416, align 4
  %memberidx2.i.i417 = getelementptr inbounds %String, ptr %568, i64 0, i32 2
  store i64 35, ptr %memberidx2.i.i417, align 4
  %569 = load ptr, ptr %9, align 8
  %memberidx109 = getelementptr inbounds %Token, ptr %569, i64 0, i32 1
  %570 = load ptr, ptr %memberidx109, align 8
  %memberidx.i418 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %571 = load ptr, ptr %memberidx.i418, align 8
  %memberidx1.i419 = getelementptr inbounds %Compiler, ptr %571, i64 0, i32 5
  %572 = load ptr, ptr %memberidx1.i419, align 8
  %573 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %573, align 4
  %memberidx1.i.i420 = getelementptr inbounds %FloError, ptr %573, i64 0, i32 2
  store ptr %570, ptr %memberidx1.i.i420, align 8
  %memberidx2.i.i421 = getelementptr inbounds %FloError, ptr %573, i64 0, i32 1
  store ptr %568, ptr %memberidx2.i.i421, align 8
  %memberidx.i.i422 = getelementptr inbounds %Array_FloError_, ptr %572, i64 0, i32 1
  %574 = load i64, ptr %memberidx.i.i422, align 4
  %575 = add i64 %574, 1
  %memberidx.i.i.i423 = getelementptr inbounds %Array_FloError_, ptr %572, i64 0, i32 2
  %576 = load i64, ptr %memberidx.i.i.i423, align 4
  %577 = icmp slt i64 %576, %575
  %.pre609 = load ptr, ptr %572, align 8
  br i1 %577, label %while.entry.i.i.i424, label %TypeChecker_error.exit425

while.entry.i.i.i424:                             ; preds = %if.entry105, %while.entry.i.i.i424
  %578 = phi ptr [ %582, %while.entry.i.i.i424 ], [ %.pre609, %if.entry105 ]
  %579 = phi i64 [ %583, %while.entry.i.i.i424 ], [ %576, %if.entry105 ]
  %580 = shl nuw i64 %579, 1
  store i64 %580, ptr %memberidx.i.i.i423, align 4
  %581 = shl i64 %579, 4
  %582 = tail call ptr @realloc(ptr %578, i64 %581)
  store ptr %582, ptr %572, align 8
  %583 = load i64, ptr %memberidx.i.i.i423, align 4
  %584 = icmp slt i64 %583, %575
  br i1 %584, label %while.entry.i.i.i424, label %TypeChecker_error.exit425.loopexit

TypeChecker_error.exit425.loopexit:               ; preds = %while.entry.i.i.i424
  %.pre610 = load i64, ptr %memberidx.i.i422, align 4
  %.pre642 = add nsw i64 %.pre610, 1
  br label %TypeChecker_error.exit425

TypeChecker_error.exit425:                        ; preds = %if.entry105, %TypeChecker_error.exit425.loopexit
  %.pre-phi643 = phi i64 [ %.pre642, %TypeChecker_error.exit425.loopexit ], [ %575, %if.entry105 ]
  %585 = phi ptr [ %582, %TypeChecker_error.exit425.loopexit ], [ %.pre609, %if.entry105 ]
  %586 = phi i64 [ %.pre610, %TypeChecker_error.exit425.loopexit ], [ %574, %if.entry105 ]
  store i64 %.pre-phi643, ptr %memberidx.i.i422, align 4
  %587 = getelementptr inbounds ptr, ptr %585, i64 %586
  store ptr %573, ptr %587, align 8
  br label %common.ret

ifend107:                                         ; preds = %if.entry101
  %588 = load ptr, ptr %10, align 8
  store ptr %588, ptr %memberidx110, align 8
  br label %ifend103

if.entry113:                                      ; preds = %else102
  %589 = tail call ptr @malloc(i32 58)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(58) %589, ptr noundef nonnull align 8 dereferenceable(58) @152, i64 58, i1 false)
  %590 = tail call ptr @malloc(i32 24)
  store ptr %589, ptr %590, align 8
  %memberidx1.i.i426 = getelementptr inbounds %String, ptr %590, i64 0, i32 1
  store i64 58, ptr %memberidx1.i.i426, align 4
  %memberidx2.i.i427 = getelementptr inbounds %String, ptr %590, i64 0, i32 2
  store i64 58, ptr %memberidx2.i.i427, align 4
  %591 = load ptr, ptr %9, align 8
  %memberidx117 = getelementptr inbounds %Token, ptr %591, i64 0, i32 1
  %592 = load ptr, ptr %memberidx117, align 8
  %memberidx.i428 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %593 = load ptr, ptr %memberidx.i428, align 8
  %memberidx1.i429 = getelementptr inbounds %Compiler, ptr %593, i64 0, i32 5
  %594 = load ptr, ptr %memberidx1.i429, align 8
  %595 = tail call ptr @malloc(i32 24)
  store i64 4, ptr %595, align 4
  %memberidx1.i.i430 = getelementptr inbounds %FloError, ptr %595, i64 0, i32 2
  store ptr %592, ptr %memberidx1.i.i430, align 8
  %memberidx2.i.i431 = getelementptr inbounds %FloError, ptr %595, i64 0, i32 1
  store ptr %590, ptr %memberidx2.i.i431, align 8
  %memberidx.i.i432 = getelementptr inbounds %Array_FloError_, ptr %594, i64 0, i32 1
  %596 = load i64, ptr %memberidx.i.i432, align 4
  %597 = add i64 %596, 1
  %memberidx.i.i.i433 = getelementptr inbounds %Array_FloError_, ptr %594, i64 0, i32 2
  %598 = load i64, ptr %memberidx.i.i.i433, align 4
  %599 = icmp slt i64 %598, %597
  %.pre606 = load ptr, ptr %594, align 8
  br i1 %599, label %while.entry.i.i.i434, label %TypeChecker_error.exit435

while.entry.i.i.i434:                             ; preds = %if.entry113, %while.entry.i.i.i434
  %600 = phi ptr [ %604, %while.entry.i.i.i434 ], [ %.pre606, %if.entry113 ]
  %601 = phi i64 [ %605, %while.entry.i.i.i434 ], [ %598, %if.entry113 ]
  %602 = shl nuw i64 %601, 1
  store i64 %602, ptr %memberidx.i.i.i433, align 4
  %603 = shl i64 %601, 4
  %604 = tail call ptr @realloc(ptr %600, i64 %603)
  store ptr %604, ptr %594, align 8
  %605 = load i64, ptr %memberidx.i.i.i433, align 4
  %606 = icmp slt i64 %605, %597
  br i1 %606, label %while.entry.i.i.i434, label %TypeChecker_error.exit435.loopexit

TypeChecker_error.exit435.loopexit:               ; preds = %while.entry.i.i.i434
  %.pre607 = load i64, ptr %memberidx.i.i432, align 4
  %.pre644 = add nsw i64 %.pre607, 1
  br label %TypeChecker_error.exit435

TypeChecker_error.exit435:                        ; preds = %if.entry113, %TypeChecker_error.exit435.loopexit
  %.pre-phi645 = phi i64 [ %.pre644, %TypeChecker_error.exit435.loopexit ], [ %597, %if.entry113 ]
  %607 = phi ptr [ %604, %TypeChecker_error.exit435.loopexit ], [ %.pre606, %if.entry113 ]
  %608 = phi i64 [ %.pre607, %TypeChecker_error.exit435.loopexit ], [ %596, %if.entry113 ]
  store i64 %.pre-phi645, ptr %memberidx.i.i432, align 4
  %609 = getelementptr inbounds ptr, ptr %607, i64 %608
  store ptr %595, ptr %609, align 8
  br label %common.ret

ifend115:                                         ; preds = %else102
  %610 = load ptr, ptr %memberidx52, align 8
  %611 = load ptr, ptr %10, align 8
  tail call fastcc void @Map_String_PropId____setitem__(ptr %610, ptr %12, ptr %611)
  br label %ifend103

if.entry122:                                      ; preds = %ifend103
  %612 = load ptr, ptr %0, align 8
  %613 = load i64, ptr %566, align 4
  %switch538 = icmp eq i64 %613, 20
  br i1 %switch538, label %if.entry.i469, label %if.entry3.i

if.entry.i469:                                    ; preds = %if.entry122, %if.entry.i469
  %.tr11.i539 = phi ptr [ %614, %if.entry.i469 ], [ %566, %if.entry122 ]
  %memberidx1.i468 = getelementptr inbounds %GenericType, ptr %.tr11.i539, i64 0, i32 3
  %614 = load ptr, ptr %memberidx1.i468, align 8
  %615 = load i64, ptr %614, align 4
  %switch = icmp eq i64 %615, 20
  br i1 %switch, label %if.entry.i469, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i469, %if.entry122
  %.tr11.i.lcssa = phi ptr [ %566, %if.entry122 ], [ %614, %if.entry.i469 ]
  %memberidx6.i470 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %616 = load ptr, ptr %memberidx6.i470, align 8
  %617 = load ptr, ptr %612, align 8
  %618 = load i64, ptr %616, align 4
  %619 = load ptr, ptr %617, align 8
  %620 = getelementptr inbounds ptr, ptr %619, i64 %618
  %621 = load ptr, ptr %620, align 8
  %memberidx2.i.i471 = getelementptr inbounds %Module, ptr %621, i64 0, i32 3
  %622 = load ptr, ptr %memberidx2.i.i471, align 8
  %memberidx3.i.i472 = getelementptr inbounds %TypeId, ptr %616, i64 0, i32 2
  %623 = load i64, ptr %memberidx3.i.i472, align 4
  %624 = load ptr, ptr %622, align 8
  %625 = getelementptr inbounds ptr, ptr %624, i64 %623
  %626 = load ptr, ptr %625, align 8
  %memberidx127 = getelementptr inbounds %Class, ptr %626, i64 0, i32 3
  %627 = load ptr, ptr %memberidx127, align 8
  %.not237 = icmp eq ptr %627, null
  br i1 %.not237, label %ifend85, label %if.entry128

if.entry128:                                      ; preds = %if.entry3.i
  %memberidx.i.i436 = getelementptr inbounds %PropId, ptr %627, i64 0, i32 1
  %628 = load ptr, ptr %memberidx.i.i436, align 8
  %629 = load i64, ptr %628, align 4
  %630 = getelementptr inbounds ptr, ptr %619, i64 %629
  %631 = load ptr, ptr %630, align 8
  %memberidx2.i.i.i437 = getelementptr inbounds %Module, ptr %631, i64 0, i32 3
  %632 = load ptr, ptr %memberidx2.i.i.i437, align 8
  %memberidx3.i.i.i438 = getelementptr inbounds %TypeId, ptr %628, i64 0, i32 2
  %633 = load i64, ptr %memberidx3.i.i.i438, align 4
  %634 = load ptr, ptr %632, align 8
  %635 = getelementptr inbounds ptr, ptr %634, i64 %633
  %636 = load ptr, ptr %635, align 8
  %637 = load i64, ptr %627, align 4
  %638 = icmp eq i64 %637, 0
  br i1 %638, label %if.entry.i444, label %ifend.i448

if.entry.i444:                                    ; preds = %if.entry128
  %memberidx1.i441 = getelementptr inbounds %Class, ptr %636, i64 0, i32 5
  %639 = load ptr, ptr %memberidx1.i441, align 8
  %memberidx2.i442 = getelementptr inbounds %PropId, ptr %627, i64 0, i32 2
  %640 = load i64, ptr %memberidx2.i442, align 4
  %641 = load ptr, ptr %639, align 8
  %642 = getelementptr inbounds ptr, ptr %641, i64 %640
  %643 = load ptr, ptr %642, align 8
  %memberidx3.i443 = getelementptr inbounds %ClassMethod, ptr %643, i64 0, i32 4
  br label %get_class_prop_type.exit449

ifend.i448:                                       ; preds = %if.entry128
  %memberidx4.i445 = getelementptr inbounds %Class, ptr %636, i64 0, i32 4
  %644 = load ptr, ptr %memberidx4.i445, align 8
  %memberidx5.i446 = getelementptr inbounds %PropId, ptr %627, i64 0, i32 2
  %645 = load i64, ptr %memberidx5.i446, align 4
  %646 = load ptr, ptr %644, align 8
  %647 = getelementptr inbounds ptr, ptr %646, i64 %645
  %648 = load ptr, ptr %647, align 8
  %memberidx6.i447 = getelementptr inbounds %ClassField, ptr %648, i64 0, i32 4
  br label %get_class_prop_type.exit449

get_class_prop_type.exit449:                      ; preds = %if.entry.i444, %ifend.i448
  %common.ret.op.in.i439 = phi ptr [ %memberidx3.i443, %if.entry.i444 ], [ %memberidx6.i447, %ifend.i448 ]
  %common.ret.op.i440 = load ptr, ptr %common.ret.op.in.i439, align 8
  %649 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %649, ptr noundef nonnull align 8 dereferenceable(5) @153, i64 5, i1 false)
  %650 = tail call ptr @malloc(i32 24)
  store ptr %649, ptr %650, align 8
  %memberidx1.i.i450 = getelementptr inbounds %String, ptr %650, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i450, align 4
  %memberidx2.i.i451 = getelementptr inbounds %String, ptr %650, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i451, align 4
  %651 = tail call fastcc ptr @TypeChecker_declare_const_within_current_scope(ptr nonnull %0, ptr nonnull %650, ptr null, ptr %common.ret.op.i440)
  br label %ifend85
}

define internal fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %4 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %4, i64 0, i32 5
  %5 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx2.i, align 4
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %for.body, %3, %ifend43, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ %116, %ifend43 ], [ null, %3 ], [ null, %for.body ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %3
  %8 = tail call ptr @malloc(i32 24)
  %memberidx.i89 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 1
  store i64 0, ptr %memberidx.i89, align 4
  %memberidx1.i90 = getelementptr inbounds %Array_Expression_, ptr %8, i64 0, i32 2
  store i64 8, ptr %memberidx1.i90, align 4
  %9 = tail call ptr @malloc(i32 64)
  store ptr %9, ptr %8, align 8
  store i64 0, ptr %memberidx.i89, align 4
  %10 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %10, align 4
  %11 = load i64, ptr %1, align 4
  switch i64 %11, label %ifend5 [
    i64 14, label %if.entry3
    i64 20, label %if.entry.i
  ]

if.entry3:                                        ; preds = %ifend
  %memberidx6 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  br label %ifend5.sink.split

ifend5.sink.split:                                ; preds = %if.entry3, %if.entry12
  %.sink = phi ptr [ %29, %if.entry12 ], [ %memberidx6, %if.entry3 ]
  %is_constant.0.ph = phi i1 [ false, %if.entry12 ], [ true, %if.entry3 ]
  %12 = load ptr, ptr %.sink, align 8
  br label %ifend5

ifend5:                                           ; preds = %ifend5.sink.split, %is_object.exit, %ifend, %String___eq__.exit
  %is_constant.0 = phi i1 [ false, %String___eq__.exit ], [ true, %ifend ], [ false, %is_object.exit ], [ %is_constant.0.ph, %ifend5.sink.split ]
  %element_type.0 = phi ptr [ %10, %String___eq__.exit ], [ %10, %ifend ], [ %10, %is_object.exit ], [ %12, %ifend5.sink.split ]
  %memberidx16 = getelementptr inbounds %ArrayExpressionNode, ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %memberidx16, align 8
  %memberidx17 = getelementptr inbounds %Array_ExpressionNode_, ptr %13, i64 0, i32 1
  %14 = load i64, ptr %memberidx17, align 4
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %for.body, label %ifend20

if.entry.i:                                       ; preds = %ifend, %if.entry.i
  %.tr5.i = phi ptr [ %16, %if.entry.i ], [ %1, %ifend ]
  %memberidx1.i118 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i118, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 20
  br i1 %18, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i
  %memberidx11 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 1
  %19 = load ptr, ptr %memberidx11, align 8
  %20 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %20, ptr noundef nonnull align 8 dereferenceable(5) @75, i64 5, i1 false)
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %21, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i, align 4
  %memberidx.i91 = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i91, align 4
  %.not.i = icmp eq i64 %22, 5
  br i1 %.not.i, label %String___eq__.exit, label %ifend5

String___eq__.exit:                               ; preds = %is_object.exit
  %23 = icmp eq i64 %17, 11
  %24 = load ptr, ptr %19, align 8
  %25 = tail call i64 @memcmp(ptr %24, ptr nonnull %20, i64 5)
  %26 = icmp eq i64 %25, 0
  %27 = and i1 %23, %26
  br i1 %27, label %if.entry12, label %ifend5

if.entry12:                                       ; preds = %String___eq__.exit
  %memberidx15 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 2
  %28 = load ptr, ptr %memberidx15, align 8
  %29 = load ptr, ptr %28, align 8
  br label %ifend5.sink.split

ifend20:                                          ; preds = %Array_Expression____sl__.exit, %ifend5
  %is_constant.1 = phi i1 [ %is_constant.0, %ifend5 ], [ %47, %Array_Expression____sl__.exit ]
  %element_type.1 = phi ptr [ %element_type.0, %ifend5 ], [ %.element_type.2129, %Array_Expression____sl__.exit ]
  %30 = load i64, ptr %1, align 4
  %.not = icmp eq i64 %30, 14
  br i1 %.not, label %else42, label %if.entry41

for.body:                                         ; preds = %ifend5, %Array_Expression____sl__.exit
  %31 = phi ptr [ %63, %Array_Expression____sl__.exit ], [ %13, %ifend5 ]
  %i.0130 = phi i64 [ %62, %Array_Expression____sl__.exit ], [ 0, %ifend5 ]
  %element_type.2129 = phi ptr [ %.element_type.2129, %Array_Expression____sl__.exit ], [ %element_type.0, %ifend5 ]
  %is_constant.2128 = phi i1 [ %47, %Array_Expression____sl__.exit ], [ %is_constant.0, %ifend5 ]
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr inbounds ptr, ptr %32, i64 %i.0130
  %34 = load ptr, ptr %33, align 8
  %35 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %element_type.2129, ptr %34)
  %36 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i94 = getelementptr inbounds %Compiler, ptr %36, i64 0, i32 5
  %37 = load ptr, ptr %memberidx1.i94, align 8
  %memberidx2.i95 = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 1
  %38 = load i64, ptr %memberidx2.i95, align 4
  %39 = icmp sgt i64 %38, 0
  br i1 %39, label %common.ret, label %ifend26

ifend26:                                          ; preds = %for.body
  %40 = icmp eq i64 %i.0130, 0
  %41 = load i64, ptr %element_type.2129, align 4
  %42 = icmp eq i64 %41, 21
  %43 = and i1 %40, %42
  %memberidx31 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %44 = load ptr, ptr %memberidx31, align 8
  %.element_type.2129 = select i1 %43, ptr %44, ptr %element_type.2129
  %memberidx32 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 1
  %45 = load i1, ptr %memberidx32, align 1
  %46 = tail call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr %.element_type.2129, ptr %44)
  br i1 %46, label %if.entry34, label %else35

if.entry34:                                       ; preds = %ifend26
  %47 = and i1 %is_constant.2128, %45
  %48 = load i64, ptr %memberidx.i89, align 4
  %49 = add i64 %48, 1
  %50 = load i64, ptr %memberidx1.i90, align 4
  %51 = icmp slt i64 %50, %49
  %.pre140 = load ptr, ptr %8, align 8
  br i1 %51, label %while.entry.i.i, label %Array_Expression____sl__.exit

while.entry.i.i:                                  ; preds = %if.entry34, %while.entry.i.i
  %52 = phi ptr [ %56, %while.entry.i.i ], [ %.pre140, %if.entry34 ]
  %53 = phi i64 [ %57, %while.entry.i.i ], [ %50, %if.entry34 ]
  %54 = shl nuw i64 %53, 1
  store i64 %54, ptr %memberidx1.i90, align 4
  %55 = shl i64 %53, 4
  %56 = tail call ptr @realloc(ptr %52, i64 %55)
  store ptr %56, ptr %8, align 8
  %57 = load i64, ptr %memberidx1.i90, align 4
  %58 = icmp slt i64 %57, %49
  br i1 %58, label %while.entry.i.i, label %Array_Expression____sl__.exit.loopexit

Array_Expression____sl__.exit.loopexit:           ; preds = %while.entry.i.i
  %.pre141 = load i64, ptr %memberidx.i89, align 4
  %.pre143 = add nsw i64 %.pre141, 1
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %if.entry34, %Array_Expression____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre143, %Array_Expression____sl__.exit.loopexit ], [ %49, %if.entry34 ]
  %59 = phi ptr [ %56, %Array_Expression____sl__.exit.loopexit ], [ %.pre140, %if.entry34 ]
  %60 = phi i64 [ %.pre141, %Array_Expression____sl__.exit.loopexit ], [ %48, %if.entry34 ]
  store i64 %.pre-phi, ptr %memberidx.i89, align 4
  %61 = getelementptr inbounds ptr, ptr %59, i64 %60
  store ptr %35, ptr %61, align 8
  %62 = add nuw nsw i64 %i.0130, 1
  %63 = load ptr, ptr %memberidx16, align 8
  %memberidx22 = getelementptr inbounds %Array_ExpressionNode_, ptr %63, i64 0, i32 1
  %64 = load i64, ptr %memberidx22, align 4
  %65 = icmp slt i64 %62, %64
  br i1 %65, label %for.body, label %ifend20

else35:                                           ; preds = %ifend26
  %memberidx33 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %66 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %.element_type.2129)
  %memberidx.i97 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  %67 = load i64, ptr %memberidx.i97, align 4
  %68 = trunc i64 %67 to i32
  %69 = add i32 %68, 1
  %70 = tail call ptr @malloc(i32 %69)
  %71 = load ptr, ptr %66, align 8
  %72 = load i64, ptr %memberidx.i97, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %70, ptr align 8 %71, i64 %72, i1 false)
  %73 = getelementptr inbounds i8, ptr %70, i64 %72
  store i8 0, ptr %73, align 1
  %74 = load ptr, ptr %memberidx33, align 8
  %75 = tail call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %74)
  %memberidx.i98 = getelementptr inbounds %String, ptr %75, i64 0, i32 1
  %76 = load i64, ptr %memberidx.i98, align 4
  %77 = trunc i64 %76 to i32
  %78 = add i32 %77, 1
  %79 = tail call ptr @malloc(i32 %78)
  %80 = load ptr, ptr %75, align 8
  %81 = load i64, ptr %memberidx.i98, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %79, ptr align 8 %80, i64 %81, i1 false)
  %82 = getelementptr inbounds i8, ptr %79, i64 %81
  store i8 0, ptr %82, align 1
  %83 = alloca ptr, align 8
  %84 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %83, ptr nonnull @169, ptr %70, ptr %79)
  %85 = load ptr, ptr %83, align 8
  %86 = tail call ptr @malloc(i32 24)
  store ptr %85, ptr %86, align 8
  %memberidx1.i99 = getelementptr inbounds %String, ptr %86, i64 0, i32 1
  store i64 %84, ptr %memberidx1.i99, align 4
  %memberidx2.i100 = getelementptr inbounds %String, ptr %86, i64 0, i32 2
  store i64 %84, ptr %memberidx2.i100, align 4
  tail call void @free(ptr %70)
  tail call void @free(ptr %79)
  %87 = load ptr, ptr %memberidx16, align 8
  %88 = load ptr, ptr %87, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %i.0130
  %90 = load ptr, ptr %89, align 8
  %91 = load ptr, ptr %90, align 8
  %92 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i102 = getelementptr inbounds %Compiler, ptr %92, i64 0, i32 5
  %93 = load ptr, ptr %memberidx1.i102, align 8
  %94 = call ptr @malloc(i32 24)
  store i64 5, ptr %94, align 4
  %memberidx1.i.i103 = getelementptr inbounds %FloError, ptr %94, i64 0, i32 2
  store ptr %91, ptr %memberidx1.i.i103, align 8
  %memberidx2.i.i104 = getelementptr inbounds %FloError, ptr %94, i64 0, i32 1
  store ptr %86, ptr %memberidx2.i.i104, align 8
  %memberidx.i.i105 = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 1
  %95 = load i64, ptr %memberidx.i.i105, align 4
  %96 = add i64 %95, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %93, i64 0, i32 2
  %97 = load i64, ptr %memberidx.i.i.i, align 4
  %98 = icmp slt i64 %97, %96
  %.pre137 = load ptr, ptr %93, align 8
  br i1 %98, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %else35, %while.entry.i.i.i
  %99 = phi ptr [ %103, %while.entry.i.i.i ], [ %.pre137, %else35 ]
  %100 = phi i64 [ %104, %while.entry.i.i.i ], [ %97, %else35 ]
  %101 = shl nuw i64 %100, 1
  store i64 %101, ptr %memberidx.i.i.i, align 4
  %102 = shl i64 %100, 4
  %103 = call ptr @realloc(ptr %99, i64 %102)
  store ptr %103, ptr %93, align 8
  %104 = load i64, ptr %memberidx.i.i.i, align 4
  %105 = icmp slt i64 %104, %96
  br i1 %105, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre138 = load i64, ptr %memberidx.i.i105, align 4
  %.pre144 = add nsw i64 %.pre138, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %else35, %TypeChecker_error.exit.loopexit
  %.pre-phi145 = phi i64 [ %.pre144, %TypeChecker_error.exit.loopexit ], [ %96, %else35 ]
  %106 = phi ptr [ %103, %TypeChecker_error.exit.loopexit ], [ %.pre137, %else35 ]
  %107 = phi i64 [ %.pre138, %TypeChecker_error.exit.loopexit ], [ %95, %else35 ]
  store i64 %.pre-phi145, ptr %memberidx.i.i105, align 4
  %108 = getelementptr inbounds ptr, ptr %106, i64 %107
  store ptr %94, ptr %108, align 8
  br label %common.ret

if.entry41:                                       ; preds = %ifend20
  %109 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %109, ptr noundef nonnull align 8 dereferenceable(5) @75, i64 5, i1 false)
  %110 = tail call ptr @malloc(i32 24)
  store ptr %109, ptr %110, align 8
  %memberidx1.i.i106 = getelementptr inbounds %String, ptr %110, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i106, align 4
  %memberidx2.i.i107 = getelementptr inbounds %String, ptr %110, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i107, align 4
  %111 = tail call ptr @malloc(i32 24)
  %memberidx.i108 = getelementptr inbounds %Array_Type_, ptr %111, i64 0, i32 1
  store i64 0, ptr %memberidx.i108, align 4
  %memberidx1.i109 = getelementptr inbounds %Array_Type_, ptr %111, i64 0, i32 2
  store i64 8, ptr %memberidx1.i109, align 4
  %112 = tail call ptr @malloc(i32 64)
  store ptr %112, ptr %111, align 8
  store ptr %element_type.1, ptr %112, align 8
  store i64 1, ptr %memberidx.i108, align 4
  %113 = tail call fastcc ptr @TypeChecker_create_generic_instance_in_module(ptr %0, ptr nonnull %110, ptr nonnull %111)
  %.not88 = icmp eq ptr %113, null
  %spec.select = select i1 %.not88, i1 %is_constant.1, i1 false
  %spec.select117 = select i1 %.not88, ptr %1, ptr %113
  br label %ifend43

else42:                                           ; preds = %ifend20
  %114 = tail call ptr @malloc(i32 24)
  %115 = load i64, ptr %memberidx.i89, align 4
  store i64 14, ptr %114, align 4
  %memberidx.i110 = getelementptr inbounds %ArrayType, ptr %114, i64 0, i32 1
  store ptr %element_type.1, ptr %memberidx.i110, align 8
  %memberidx1.i111 = getelementptr inbounds %ArrayType, ptr %114, i64 0, i32 2
  store i64 %115, ptr %memberidx1.i111, align 4
  br label %ifend43

ifend43:                                          ; preds = %if.entry41, %else42
  %is_constant.3 = phi i1 [ %is_constant.1, %else42 ], [ %spec.select, %if.entry41 ]
  %array_type.0 = phi ptr [ %114, %else42 ], [ %spec.select117, %if.entry41 ]
  %116 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %116, align 4
  %memberidx.i.i112 = getelementptr inbounds %Expression, ptr %116, i64 0, i32 2
  store i64 6, ptr %memberidx.i.i112, align 4
  %memberidx1.i.i113 = getelementptr inbounds %Expression, ptr %116, i64 0, i32 1
  %memberidx.i114 = getelementptr inbounds %ArrayExpression, ptr %116, i64 0, i32 4
  store ptr %8, ptr %memberidx.i114, align 8
  store i1 %is_constant.3, ptr %memberidx1.i.i113, align 1
  %memberidx51 = getelementptr inbounds %Expression, ptr %116, i64 0, i32 3
  store ptr %array_type.0, ptr %memberidx51, align 8
  br label %common.ret
}

define internal fastcc void @TypeChecker_check_enum_body(ptr %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 2
  %4 = load ptr, ptr %memberidx, align 8
  %5 = icmp eq ptr %4, null
  br i1 %5, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %6 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %6, align 4
  %memberidx.i = getelementptr inbounds %IntType, ptr %6, i64 0, i32 1
  store i1 true, ptr %memberidx.i, align 1
  br label %ifend

else:                                             ; preds = %3
  %7 = tail call fastcc ptr @TypeChecker_check_type(ptr %0, ptr nonnull %4)
  %8 = load i64, ptr %7, align 4
  %9 = add i64 %8, -1
  %10 = icmp ult i64 %9, 7
  br i1 %10, label %ifend, label %if.entry2

ifend:                                            ; preds = %TypeChecker_error.exit92, %else, %if.entry
  %enum_variant.0 = phi ptr [ %6, %if.entry ], [ %7, %TypeChecker_error.exit92 ], [ %7, %else ]
  %memberidx7 = getelementptr inbounds %EnumNode, ptr %2, i64 0, i32 1
  %11 = load ptr, ptr %memberidx7, align 8
  %memberidx8120 = getelementptr inbounds %Array_EnumNodeField_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx8120, align 4
  %13 = icmp sgt i64 %12, 0
  br i1 %13, label %for.body.lr.ph, label %common.ret

for.body.lr.ph:                                   ; preds = %ifend
  %memberidx41 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 3
  %memberidx43 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  br label %for.body

if.entry2:                                        ; preds = %else
  %14 = tail call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %7)
  %memberidx.i83 = getelementptr inbounds %String, ptr %14, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i83, align 4
  %16 = trunc i64 %15 to i32
  %17 = add i32 %16, 1
  %18 = tail call ptr @malloc(i32 %17)
  %19 = load ptr, ptr %14, align 8
  %20 = load i64, ptr %memberidx.i83, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 8 %19, i64 %20, i1 false)
  %21 = getelementptr inbounds i8, ptr %18, i64 %20
  store i8 0, ptr %21, align 1
  %22 = alloca ptr, align 8
  %23 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %22, ptr nonnull @111, ptr %18)
  %24 = load ptr, ptr %22, align 8
  %25 = tail call ptr @malloc(i32 24)
  store ptr %24, ptr %25, align 8
  %memberidx1.i84 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  store i64 %23, ptr %memberidx1.i84, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %25, i64 0, i32 2
  store i64 %23, ptr %memberidx2.i, align 4
  tail call void @free(ptr %18)
  %26 = load ptr, ptr %memberidx, align 8
  %27 = load ptr, ptr %26, align 8
  %memberidx.i85 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %28 = load ptr, ptr %memberidx.i85, align 8
  %memberidx1.i86 = getelementptr inbounds %Compiler, ptr %28, i64 0, i32 5
  %29 = load ptr, ptr %memberidx1.i86, align 8
  %30 = call ptr @malloc(i32 24)
  store i64 5, ptr %30, align 4
  %memberidx1.i.i87 = getelementptr inbounds %FloError, ptr %30, i64 0, i32 2
  store ptr %27, ptr %memberidx1.i.i87, align 8
  %memberidx2.i.i88 = getelementptr inbounds %FloError, ptr %30, i64 0, i32 1
  store ptr %25, ptr %memberidx2.i.i88, align 8
  %memberidx.i.i89 = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 1
  %31 = load i64, ptr %memberidx.i.i89, align 4
  %32 = add i64 %31, 1
  %memberidx.i.i.i90 = getelementptr inbounds %Array_FloError_, ptr %29, i64 0, i32 2
  %33 = load i64, ptr %memberidx.i.i.i90, align 4
  %34 = icmp slt i64 %33, %32
  %.pre = load ptr, ptr %29, align 8
  br i1 %34, label %while.entry.i.i.i91, label %TypeChecker_error.exit92

while.entry.i.i.i91:                              ; preds = %if.entry2, %while.entry.i.i.i91
  %35 = phi ptr [ %39, %while.entry.i.i.i91 ], [ %.pre, %if.entry2 ]
  %36 = phi i64 [ %40, %while.entry.i.i.i91 ], [ %33, %if.entry2 ]
  %37 = shl nuw i64 %36, 1
  store i64 %37, ptr %memberidx.i.i.i90, align 4
  %38 = shl i64 %36, 4
  %39 = call ptr @realloc(ptr %35, i64 %38)
  store ptr %39, ptr %29, align 8
  %40 = load i64, ptr %memberidx.i.i.i90, align 4
  %41 = icmp slt i64 %40, %32
  br i1 %41, label %while.entry.i.i.i91, label %TypeChecker_error.exit92.loopexit

TypeChecker_error.exit92.loopexit:                ; preds = %while.entry.i.i.i91
  %.pre126 = load i64, ptr %memberidx.i.i89, align 4
  %.pre142 = add nsw i64 %.pre126, 1
  br label %TypeChecker_error.exit92

TypeChecker_error.exit92:                         ; preds = %if.entry2, %TypeChecker_error.exit92.loopexit
  %.pre-phi143 = phi i64 [ %.pre142, %TypeChecker_error.exit92.loopexit ], [ %32, %if.entry2 ]
  %42 = phi ptr [ %39, %TypeChecker_error.exit92.loopexit ], [ %.pre, %if.entry2 ]
  %43 = phi i64 [ %.pre126, %TypeChecker_error.exit92.loopexit ], [ %31, %if.entry2 ]
  store i64 %.pre-phi143, ptr %memberidx.i.i89, align 4
  %44 = getelementptr inbounds ptr, ptr %42, i64 %43
  store ptr %30, ptr %44, align 8
  br label %ifend

for.body:                                         ; preds = %for.body.lr.ph, %Array_EnumField____sl__.exit
  %45 = phi ptr [ %11, %for.body.lr.ph ], [ %77, %Array_EnumField____sl__.exit ]
  %next_enum_value.0122 = phi i64 [ 0, %for.body.lr.ph ], [ %next_enum_value.1, %Array_EnumField____sl__.exit ]
  %i.0121 = phi i64 [ 0, %for.body.lr.ph ], [ %76, %Array_EnumField____sl__.exit ]
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 %i.0121
  %48 = load ptr, ptr %47, align 8
  %49 = load ptr, ptr %48, align 8
  %memberidx11 = getelementptr inbounds %IdentifierToken, ptr %49, i64 0, i32 2
  %50 = load ptr, ptr %memberidx11, align 8
  %51 = tail call ptr @malloc(i32 24)
  %memberidx.i93 = getelementptr inbounds %EnumField, ptr %51, i64 0, i32 1
  store ptr %50, ptr %memberidx.i93, align 8
  %52 = tail call ptr @malloc(i32 24)
  %53 = load ptr, ptr %1, align 8
  store i64 1, ptr %52, align 4
  %memberidx1.i97 = getelementptr inbounds %PropId, ptr %52, i64 0, i32 1
  store ptr %53, ptr %memberidx1.i97, align 8
  %memberidx2.i98 = getelementptr inbounds %PropId, ptr %52, i64 0, i32 2
  store i64 %i.0121, ptr %memberidx2.i98, align 4
  store ptr %52, ptr %51, align 8
  %memberidx14 = getelementptr inbounds %EnumNodeField, ptr %48, i64 0, i32 1
  %54 = load ptr, ptr %memberidx14, align 8
  %.not = icmp eq ptr %54, null
  %memberidx38 = getelementptr inbounds %EnumField, ptr %51, i64 0, i32 2
  br i1 %.not, label %else16, label %if.entry15

common.ret:                                       ; preds = %Array_EnumField____sl__.exit, %ifend, %TypeChecker_error.exit, %TypeChecker_error.exit115
  ret void

if.entry15:                                       ; preds = %for.body
  %55 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %enum_variant.0, ptr nonnull %54)
  store ptr %55, ptr %memberidx38, align 8
  %memberidx21 = getelementptr inbounds %Expression, ptr %55, i64 0, i32 1
  %56 = load i1, ptr %memberidx21, align 1
  br i1 %56, label %ifend24, label %if.entry22

else16:                                           ; preds = %for.body
  %57 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %57, align 4
  %memberidx.i.i99 = getelementptr inbounds %Expression, ptr %57, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i99, align 4
  %memberidx1.i.i100 = getelementptr inbounds %Expression, ptr %57, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i100, align 1
  %memberidx.i101 = getelementptr inbounds %Expression, ptr %57, i64 0, i32 3
  %58 = call ptr @malloc(i32 9)
  store i64 6, ptr %58, align 4
  %memberidx.i5.i = getelementptr inbounds %IntType, ptr %58, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i, align 1
  %memberidx1.i102 = getelementptr inbounds %IntExpression, ptr %57, i64 0, i32 4
  store i64 %next_enum_value.0122, ptr %memberidx1.i102, align 4
  store i1 true, ptr %memberidx1.i.i100, align 1
  store ptr %57, ptr %memberidx38, align 8
  store ptr %enum_variant.0, ptr %memberidx.i101, align 8
  br label %ifend17

ifend17:                                          ; preds = %else16, %ifend31
  %next_enum_value.1.in = phi i64 [ %146, %ifend31 ], [ %next_enum_value.0122, %else16 ]
  %next_enum_value.1 = add nsw i64 %next_enum_value.1.in, 1
  %59 = load ptr, ptr %memberidx41, align 8
  %60 = load ptr, ptr %51, align 8
  call fastcc void @Map_String_PropId____setitem__(ptr %59, ptr %50, ptr %60)
  %61 = load ptr, ptr %memberidx43, align 8
  %memberidx.i104 = getelementptr inbounds %Array_EnumField_, ptr %61, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i104, align 4
  %63 = add i64 %62, 1
  %memberidx.i.i105 = getelementptr inbounds %Array_EnumField_, ptr %61, i64 0, i32 2
  %64 = load i64, ptr %memberidx.i.i105, align 4
  %65 = icmp slt i64 %64, %63
  %.pre134 = load ptr, ptr %61, align 8
  br i1 %65, label %while.entry.i.i, label %Array_EnumField____sl__.exit

while.entry.i.i:                                  ; preds = %ifend17, %while.entry.i.i
  %66 = phi ptr [ %70, %while.entry.i.i ], [ %.pre134, %ifend17 ]
  %67 = phi i64 [ %71, %while.entry.i.i ], [ %64, %ifend17 ]
  %68 = shl nuw i64 %67, 1
  store i64 %68, ptr %memberidx.i.i105, align 4
  %69 = shl i64 %67, 4
  %70 = call ptr @realloc(ptr %66, i64 %69)
  store ptr %70, ptr %61, align 8
  %71 = load i64, ptr %memberidx.i.i105, align 4
  %72 = icmp slt i64 %71, %63
  br i1 %72, label %while.entry.i.i, label %Array_EnumField____sl__.exit.loopexit

Array_EnumField____sl__.exit.loopexit:            ; preds = %while.entry.i.i
  %.pre135 = load i64, ptr %memberidx.i104, align 4
  %.pre137 = add nsw i64 %.pre135, 1
  br label %Array_EnumField____sl__.exit

Array_EnumField____sl__.exit:                     ; preds = %ifend17, %Array_EnumField____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre137, %Array_EnumField____sl__.exit.loopexit ], [ %63, %ifend17 ]
  %73 = phi ptr [ %70, %Array_EnumField____sl__.exit.loopexit ], [ %.pre134, %ifend17 ]
  %74 = phi i64 [ %.pre135, %Array_EnumField____sl__.exit.loopexit ], [ %62, %ifend17 ]
  store i64 %.pre-phi, ptr %memberidx.i104, align 4
  %75 = getelementptr inbounds ptr, ptr %73, i64 %74
  store ptr %51, ptr %75, align 8
  %76 = add nuw nsw i64 %i.0121, 1
  %77 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_EnumNodeField_, ptr %77, i64 0, i32 1
  %78 = load i64, ptr %memberidx8, align 4
  %79 = icmp slt i64 %76, %78
  br i1 %79, label %for.body, label %common.ret

if.entry22:                                       ; preds = %if.entry15
  %80 = call ptr @malloc(i32 37)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %80, ptr noundef nonnull align 8 dereferenceable(37) @112, i64 37, i1 false)
  %81 = call ptr @malloc(i32 24)
  store ptr %80, ptr %81, align 8
  %memberidx1.i.i106 = getelementptr inbounds %String, ptr %81, i64 0, i32 1
  store i64 37, ptr %memberidx1.i.i106, align 4
  %memberidx2.i.i107 = getelementptr inbounds %String, ptr %81, i64 0, i32 2
  store i64 37, ptr %memberidx2.i.i107, align 4
  %82 = load ptr, ptr %memberidx14, align 8
  %83 = load ptr, ptr %82, align 8
  %memberidx.i108 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %84 = load ptr, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %Compiler, ptr %84, i64 0, i32 5
  %85 = load ptr, ptr %memberidx1.i109, align 8
  %86 = call ptr @malloc(i32 24)
  store i64 5, ptr %86, align 4
  %memberidx1.i.i110 = getelementptr inbounds %FloError, ptr %86, i64 0, i32 2
  store ptr %83, ptr %memberidx1.i.i110, align 8
  %memberidx2.i.i111 = getelementptr inbounds %FloError, ptr %86, i64 0, i32 1
  store ptr %81, ptr %memberidx2.i.i111, align 8
  %memberidx.i.i112 = getelementptr inbounds %Array_FloError_, ptr %85, i64 0, i32 1
  %87 = load i64, ptr %memberidx.i.i112, align 4
  %88 = add i64 %87, 1
  %memberidx.i.i.i113 = getelementptr inbounds %Array_FloError_, ptr %85, i64 0, i32 2
  %89 = load i64, ptr %memberidx.i.i.i113, align 4
  %90 = icmp slt i64 %89, %88
  %.pre128 = load ptr, ptr %85, align 8
  br i1 %90, label %while.entry.i.i.i114, label %TypeChecker_error.exit115

while.entry.i.i.i114:                             ; preds = %if.entry22, %while.entry.i.i.i114
  %91 = phi ptr [ %95, %while.entry.i.i.i114 ], [ %.pre128, %if.entry22 ]
  %92 = phi i64 [ %96, %while.entry.i.i.i114 ], [ %89, %if.entry22 ]
  %93 = shl nuw i64 %92, 1
  store i64 %93, ptr %memberidx.i.i.i113, align 4
  %94 = shl i64 %92, 4
  %95 = call ptr @realloc(ptr %91, i64 %94)
  store ptr %95, ptr %85, align 8
  %96 = load i64, ptr %memberidx.i.i.i113, align 4
  %97 = icmp slt i64 %96, %88
  br i1 %97, label %while.entry.i.i.i114, label %TypeChecker_error.exit115.loopexit

TypeChecker_error.exit115.loopexit:               ; preds = %while.entry.i.i.i114
  %.pre129 = load i64, ptr %memberidx.i.i112, align 4
  %.pre140 = add nsw i64 %.pre129, 1
  br label %TypeChecker_error.exit115

TypeChecker_error.exit115:                        ; preds = %if.entry22, %TypeChecker_error.exit115.loopexit
  %.pre-phi141 = phi i64 [ %.pre140, %TypeChecker_error.exit115.loopexit ], [ %88, %if.entry22 ]
  %98 = phi ptr [ %95, %TypeChecker_error.exit115.loopexit ], [ %.pre128, %if.entry22 ]
  %99 = phi i64 [ %.pre129, %TypeChecker_error.exit115.loopexit ], [ %87, %if.entry22 ]
  store i64 %.pre-phi141, ptr %memberidx.i.i112, align 4
  %100 = getelementptr inbounds ptr, ptr %98, i64 %99
  store ptr %86, ptr %100, align 8
  br label %common.ret

ifend24:                                          ; preds = %if.entry15
  %memberidx28 = getelementptr inbounds %Expression, ptr %55, i64 0, i32 3
  %101 = load ptr, ptr %memberidx28, align 8
  %102 = call fastcc i1 @TypeChecker_types_are_eq(ptr %0, ptr nonnull %enum_variant.0, ptr %101)
  br i1 %102, label %ifend31, label %if.entry29

if.entry29:                                       ; preds = %ifend24
  %103 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %enum_variant.0)
  %memberidx.i116 = getelementptr inbounds %String, ptr %103, i64 0, i32 1
  %104 = load i64, ptr %memberidx.i116, align 4
  %105 = trunc i64 %104 to i32
  %106 = add i32 %105, 1
  %107 = call ptr @malloc(i32 %106)
  %108 = load ptr, ptr %103, align 8
  %109 = load i64, ptr %memberidx.i116, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %107, ptr align 8 %108, i64 %109, i1 false)
  %110 = getelementptr inbounds i8, ptr %107, i64 %109
  store i8 0, ptr %110, align 1
  %111 = load ptr, ptr %memberidx38, align 8
  %memberidx33 = getelementptr inbounds %Expression, ptr %111, i64 0, i32 3
  %112 = load ptr, ptr %memberidx33, align 8
  %113 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr %112)
  %memberidx.i96 = getelementptr inbounds %String, ptr %113, i64 0, i32 1
  %114 = load i64, ptr %memberidx.i96, align 4
  %115 = trunc i64 %114 to i32
  %116 = add i32 %115, 1
  %117 = call ptr @malloc(i32 %116)
  %118 = load ptr, ptr %113, align 8
  %119 = load i64, ptr %memberidx.i96, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %117, ptr align 8 %118, i64 %119, i1 false)
  %120 = getelementptr inbounds i8, ptr %117, i64 %119
  store i8 0, ptr %120, align 1
  %121 = alloca ptr, align 8
  %122 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %121, ptr nonnull @113, ptr %107, ptr %117)
  %123 = load ptr, ptr %121, align 8
  %124 = tail call ptr @malloc(i32 24)
  store ptr %123, ptr %124, align 8
  %memberidx1.i94 = getelementptr inbounds %String, ptr %124, i64 0, i32 1
  store i64 %122, ptr %memberidx1.i94, align 4
  %memberidx2.i95 = getelementptr inbounds %String, ptr %124, i64 0, i32 2
  store i64 %122, ptr %memberidx2.i95, align 4
  tail call void @free(ptr %107)
  tail call void @free(ptr %117)
  %125 = load ptr, ptr %memberidx14, align 8
  %126 = load ptr, ptr %125, align 8
  %memberidx.i82 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %127 = load ptr, ptr %memberidx.i82, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %127, i64 0, i32 5
  %128 = load ptr, ptr %memberidx1.i, align 8
  %129 = call ptr @malloc(i32 24)
  store i64 5, ptr %129, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %129, i64 0, i32 2
  store ptr %126, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %129, i64 0, i32 1
  store ptr %124, ptr %memberidx2.i.i, align 8
  %memberidx.i.i = getelementptr inbounds %Array_FloError_, ptr %128, i64 0, i32 1
  %130 = load i64, ptr %memberidx.i.i, align 4
  %131 = add i64 %130, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %128, i64 0, i32 2
  %132 = load i64, ptr %memberidx.i.i.i, align 4
  %133 = icmp slt i64 %132, %131
  %.pre131 = load ptr, ptr %128, align 8
  br i1 %133, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry29, %while.entry.i.i.i
  %134 = phi ptr [ %138, %while.entry.i.i.i ], [ %.pre131, %if.entry29 ]
  %135 = phi i64 [ %139, %while.entry.i.i.i ], [ %132, %if.entry29 ]
  %136 = shl nuw i64 %135, 1
  store i64 %136, ptr %memberidx.i.i.i, align 4
  %137 = shl i64 %135, 4
  %138 = call ptr @realloc(ptr %134, i64 %137)
  store ptr %138, ptr %128, align 8
  %139 = load i64, ptr %memberidx.i.i.i, align 4
  %140 = icmp slt i64 %139, %131
  br i1 %140, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre132 = load i64, ptr %memberidx.i.i, align 4
  %.pre138 = add nsw i64 %.pre132, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry29, %TypeChecker_error.exit.loopexit
  %.pre-phi139 = phi i64 [ %.pre138, %TypeChecker_error.exit.loopexit ], [ %131, %if.entry29 ]
  %141 = phi ptr [ %138, %TypeChecker_error.exit.loopexit ], [ %.pre131, %if.entry29 ]
  %142 = phi i64 [ %.pre132, %TypeChecker_error.exit.loopexit ], [ %130, %if.entry29 ]
  store i64 %.pre-phi139, ptr %memberidx.i.i, align 4
  %143 = getelementptr inbounds ptr, ptr %141, i64 %142
  store ptr %129, ptr %143, align 8
  br label %common.ret

ifend31:                                          ; preds = %ifend24
  %144 = load ptr, ptr %0, align 8
  %145 = load ptr, ptr %memberidx38, align 8
  %146 = call fastcc i64 @evaluate_const_int_expression(ptr %144, ptr %145)
  br label %ifend17
}

define internal fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca %Type, align 8
  %memberidx = getelementptr inbounds %ExpressionNode, ptr %2, i64 0, i32 2
  %5 = load i64, ptr %memberidx, align 4
  switch i64 %5, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry2
    i64 3, label %if.entry6
    i64 2, label %if.entry10
    i64 6, label %if.entry14
    i64 7, label %if.entry18
    i64 8, label %if.entry22
    i64 9, label %if.entry26
    i64 10, label %if.entry30
    i64 16, label %if.entry34
    i64 11, label %if.entry38
    i64 12, label %if.entry42
    i64 13, label %if.entry46
    i64 14, label %if.entry50
    i64 15, label %if.entry54
    i64 17, label %if.entry58
  ]

common.ret:                                       ; preds = %3, %if.entry7.i, %ifend.i127, %if.entry42.i, %ifend35.i, %if.entry58, %if.entry54, %if.entry50, %if.entry46, %if.entry42, %if.entry38, %if.entry34, %if.entry30, %if.entry26, %if.entry22, %TypeChecker_check_tuple_expression.exit, %if.entry14, %TypeChecker_check_string_expression.exit, %if.entry6
  %common.ret.op = phi ptr [ %60, %if.entry6 ], [ %103, %TypeChecker_check_string_expression.exit ], [ %107, %if.entry14 ], [ %common.ret.op.i, %TypeChecker_check_tuple_expression.exit ], [ %170, %if.entry22 ], [ %171, %if.entry26 ], [ %172, %if.entry30 ], [ %173, %if.entry34 ], [ %174, %if.entry38 ], [ %175, %if.entry42 ], [ %176, %if.entry46 ], [ %177, %if.entry50 ], [ %178, %if.entry54 ], [ %179, %if.entry58 ], [ %8, %ifend35.i ], [ %8, %if.entry42.i ], [ %43, %ifend.i127 ], [ %43, %if.entry7.i ], [ null, %3 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %IntExpressionNode, ptr %2, i64 0, i32 3
  %6 = load ptr, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %IntToken, ptr %6, i64 0, i32 2
  %7 = load i64, ptr %memberidx1.i, align 4
  %8 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %8, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %8, i64 0, i32 3
  %9 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %9, align 4
  %memberidx.i5.i.i = getelementptr inbounds %IntType, ptr %9, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i.i, align 1
  store ptr %9, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %IntExpression, ptr %8, i64 0, i32 4
  store i64 %7, ptr %memberidx1.i.i, align 4
  store i1 true, ptr %memberidx1.i.i.i, align 1
  %10 = load i64, ptr %1, align 4
  %11 = add i64 %10, -1
  %12 = icmp ult i64 %11, 7
  br i1 %12, label %ifend.i, label %ifend35.i

ifend.i:                                          ; preds = %if.entry
  store i64 %10, ptr %9, align 4
  %memberidx7.i = getelementptr inbounds %IntType, ptr %1, i64 0, i32 1
  %13 = load i1, ptr %memberidx7.i, align 1
  store i1 %13, ptr %memberidx.i5.i.i, align 1
  %14 = add i64 %7, -8
  %15 = icmp ult i64 %14, -16
  %16 = icmp eq i64 %10, 1
  %17 = and i1 %15, %16
  %18 = select i1 %17, i64 2, i64 %10
  %19 = add i64 %7, -128
  %20 = icmp ult i64 %19, -256
  %21 = icmp eq i64 %18, 2
  %22 = and i1 %20, %21
  %23 = select i1 %22, i64 3, i64 %18
  %.demorgan = and i1 %15, %16
  %.demorgan196 = and i1 %20, %21
  %24 = or i1 %.demorgan, %.demorgan196
  %25 = add i64 %7, -32768
  %26 = icmp ult i64 %25, -65536
  %27 = icmp eq i64 %23, 3
  %28 = and i1 %26, %27
  %spec.select194 = select i1 %28, i64 4, i64 %23
  %.demorgan197 = and i1 %26, %27
  %29 = or i1 %24, %.demorgan197
  %30 = add i64 %7, -2147483648
  %31 = icmp ult i64 %30, -4294967296
  %32 = icmp eq i64 %spec.select194, 4
  %33 = and i1 %31, %32
  %spec.select195 = select i1 %33, i64 5, i64 %spec.select194
  %.demorgan198 = and i1 %31, %32
  %34 = or i1 %29, %.demorgan198
  br i1 %34, label %35, label %ifend35.i

35:                                               ; preds = %ifend.i
  store i64 %spec.select195, ptr %9, align 4
  br label %ifend35.i

ifend35.i:                                        ; preds = %35, %ifend.i, %if.entry
  %36 = phi i64 [ 6, %if.entry ], [ %spec.select195, %ifend.i ], [ %spec.select195, %35 ]
  %37 = icmp eq i64 %7, -9223372036854775808
  %38 = add nsw i64 %36, -5
  %39 = icmp ult i64 %38, 2
  %40 = and i1 %37, %39
  br i1 %40, label %if.entry42.i, label %common.ret

if.entry42.i:                                     ; preds = %ifend35.i
  store i64 7, ptr %9, align 4
  br label %common.ret

if.entry2:                                        ; preds = %3
  %memberidx.i118 = getelementptr inbounds %FloatExpressionNode, ptr %2, i64 0, i32 3
  %41 = load ptr, ptr %memberidx.i118, align 8
  %memberidx1.i119 = getelementptr inbounds %FloatToken, ptr %41, i64 0, i32 2
  %42 = load double, ptr %memberidx1.i119, align 8
  %43 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %43, align 4
  %memberidx.i.i.i120 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 2
  store i64 1, ptr %memberidx.i.i.i120, align 4
  %memberidx1.i.i.i121 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 1
  %memberidx.i.i122 = getelementptr inbounds %Expression, ptr %43, i64 0, i32 3
  %44 = tail call ptr @malloc(i32 8)
  store i64 9, ptr %44, align 4
  store ptr %44, ptr %memberidx.i.i122, align 8
  %memberidx1.i.i123 = getelementptr inbounds %FloatExpression, ptr %43, i64 0, i32 4
  store double %42, ptr %memberidx1.i.i123, align 8
  store i1 true, ptr %memberidx1.i.i.i121, align 1
  %45 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %45, ptr noundef nonnull align 8 dereferenceable(6) @221, i64 6, i1 false)
  %46 = tail call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i.i19.i = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i19.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %46, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i.i, align 4
  %47 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %47, ptr noundef nonnull align 8 dereferenceable(6) %45, i64 6, i1 false)
  %48 = getelementptr inbounds i8, ptr %47, i64 6
  store i8 0, ptr %48, align 1
  %49 = tail call double @atof(ptr %47)
  tail call void @free(ptr %47)
  %50 = load i64, ptr %1, align 4
  %51 = and i64 %50, -2
  %52 = icmp eq i64 %51, 8
  br i1 %52, label %if.entry.i126, label %if.entry2.ifend.i127_crit_edge

if.entry2.ifend.i127_crit_edge:                   ; preds = %if.entry2
  %.pre185 = load i64, ptr %44, align 4
  br label %ifend.i127

if.entry.i126:                                    ; preds = %if.entry2
  store i64 %50, ptr %44, align 4
  br label %ifend.i127

ifend.i127:                                       ; preds = %if.entry2.ifend.i127_crit_edge, %if.entry.i126
  %53 = phi i64 [ %.pre185, %if.entry2.ifend.i127_crit_edge ], [ %50, %if.entry.i126 ]
  %54 = fneg double %49
  %55 = fcmp olt double %42, %54
  %56 = fcmp ogt double %42, %49
  %57 = or i1 %55, %56
  %58 = icmp eq i64 %53, 8
  %59 = and i1 %57, %58
  br i1 %59, label %if.entry7.i, label %common.ret

if.entry7.i:                                      ; preds = %ifend.i127
  store i64 9, ptr %44, align 4
  br label %common.ret

if.entry6:                                        ; preds = %3
  %60 = tail call ptr @malloc(i32 33)
  %memberidx.i128 = getelementptr inbounds %CharExpressionNode, ptr %2, i64 0, i32 3
  %61 = load ptr, ptr %memberidx.i128, align 8
  %memberidx1.i129 = getelementptr inbounds %CharToken, ptr %61, i64 0, i32 2
  %62 = load i8, ptr %memberidx1.i129, align 1
  %63 = zext i8 %62 to i64
  store i64 8, ptr %60, align 4
  %memberidx.i.i.i130 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 2
  store i64 0, ptr %memberidx.i.i.i130, align 4
  %memberidx1.i.i.i131 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 1
  %memberidx.i.i132 = getelementptr inbounds %Expression, ptr %60, i64 0, i32 3
  %64 = tail call ptr @malloc(i32 9)
  %memberidx.i5.i.i133 = getelementptr inbounds %IntType, ptr %64, i64 0, i32 1
  store i1 false, ptr %memberidx.i5.i.i133, align 1
  store ptr %64, ptr %memberidx.i.i132, align 8
  %memberidx1.i.i134 = getelementptr inbounds %IntExpression, ptr %60, i64 0, i32 4
  store i64 %63, ptr %memberidx1.i.i134, align 4
  store i1 true, ptr %memberidx1.i.i.i131, align 1
  store i64 2, ptr %64, align 4
  br label %common.ret

if.entry10:                                       ; preds = %3
  %65 = tail call ptr @malloc(i32 24)
  %memberidx.i.i146 = getelementptr inbounds %Array_Expression_, ptr %65, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i146, align 4
  %memberidx1.i.i147 = getelementptr inbounds %Array_Expression_, ptr %65, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i147, align 4
  %66 = tail call ptr @malloc(i32 64)
  store ptr %66, ptr %65, align 8
  store i64 0, ptr %memberidx.i.i146, align 4
  %memberidx2.i149 = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 4
  %67 = load ptr, ptr %memberidx2.i149, align 8
  %68 = tail call ptr @malloc(i32 25)
  %69 = load ptr, ptr %67, align 8
  %memberidx1.i21.i = getelementptr inbounds %Array_ExpressionNode_, ptr %67, i64 0, i32 1
  %70 = load i64, ptr %memberidx1.i21.i, align 4
  store i1 false, ptr %68, align 1
  %memberidx1.i.i.i150 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 1
  %memberidx2.i.i.i151 = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 3
  store ptr %69, ptr %memberidx2.i.i.i151, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_ExpressionNode_, ptr %68, i64 0, i32 2
  store i64 %70, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i150, align 4
  %71 = icmp slt i64 %70, 1
  br i1 %71, label %for.end.i159, label %for.body.i156

for.body.i156:                                    ; preds = %if.entry10, %Array_Expression____sl__.exit.i158
  %72 = phi i64 [ %89, %Array_Expression____sl__.exit.i158 ], [ 1, %if.entry10 ]
  %arg.0.i170.in = phi ptr [ %90, %Array_Expression____sl__.exit.i158 ], [ %69, %if.entry10 ]
  %arg.0.i170 = load ptr, ptr %arg.0.i170.in, align 8
  %73 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %73, align 4
  %74 = tail call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr nonnull %73, ptr %arg.0.i170)
  %75 = load i64, ptr %memberidx.i.i146, align 4
  %76 = add i64 %75, 1
  %77 = load i64, ptr %memberidx1.i.i147, align 4
  %78 = icmp slt i64 %77, %76
  %.pre182 = load ptr, ptr %65, align 8
  br i1 %78, label %while.entry.i.i.i157, label %Array_Expression____sl__.exit.i158

while.entry.i.i.i157:                             ; preds = %for.body.i156, %while.entry.i.i.i157
  %79 = phi ptr [ %83, %while.entry.i.i.i157 ], [ %.pre182, %for.body.i156 ]
  %80 = phi i64 [ %84, %while.entry.i.i.i157 ], [ %77, %for.body.i156 ]
  %81 = shl nuw i64 %80, 1
  store i64 %81, ptr %memberidx1.i.i147, align 4
  %82 = shl i64 %80, 4
  %83 = tail call ptr @realloc(ptr %79, i64 %82)
  store ptr %83, ptr %65, align 8
  %84 = load i64, ptr %memberidx1.i.i147, align 4
  %85 = icmp slt i64 %84, %76
  br i1 %85, label %while.entry.i.i.i157, label %Array_Expression____sl__.exit.i158.loopexit

Array_Expression____sl__.exit.i158.loopexit:      ; preds = %while.entry.i.i.i157
  %.pre183 = load i64, ptr %memberidx.i.i146, align 4
  %.pre186 = add nsw i64 %.pre183, 1
  br label %Array_Expression____sl__.exit.i158

Array_Expression____sl__.exit.i158:               ; preds = %for.body.i156, %Array_Expression____sl__.exit.i158.loopexit
  %.pre-phi = phi i64 [ %.pre186, %Array_Expression____sl__.exit.i158.loopexit ], [ %76, %for.body.i156 ]
  %86 = phi ptr [ %83, %Array_Expression____sl__.exit.i158.loopexit ], [ %.pre182, %for.body.i156 ]
  %87 = phi i64 [ %.pre183, %Array_Expression____sl__.exit.i158.loopexit ], [ %75, %for.body.i156 ]
  store i64 %.pre-phi, ptr %memberidx.i.i146, align 4
  %88 = getelementptr inbounds ptr, ptr %86, i64 %87
  store ptr %74, ptr %88, align 8
  %89 = add nuw nsw i64 %72, 1
  store i64 %89, ptr %memberidx1.i.i.i150, align 4
  %90 = getelementptr inbounds ptr, ptr %69, i64 %72
  %.not = icmp slt i64 %72, %70
  br i1 %.not, label %for.body.i156, label %for.end.i159

for.end.i159:                                     ; preds = %Array_Expression____sl__.exit.i158, %if.entry10
  tail call void @free(ptr nonnull %68)
  %91 = load i64, ptr %1, align 4
  %92 = icmp eq i64 %91, 13
  br i1 %92, label %if.entry.i.i, label %if.entry.i160

if.entry.i.i:                                     ; preds = %for.end.i159
  %memberidx1.i27.i = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %93 = load ptr, ptr %memberidx1.i27.i, align 8
  %94 = load i64, ptr %93, align 4
  %95 = add i64 %94, -1
  %96 = icmp ult i64 %95, 7
  br i1 %96, label %if.entry2.i.i, label %if.entry.i160

if.entry2.i.i:                                    ; preds = %if.entry.i.i
  %97 = icmp ne i64 %94, 2
  %memberidx6.i.i = getelementptr inbounds %IntType, ptr %93, i64 0, i32 1
  %98 = load i1, ptr %memberidx6.i.i, align 1
  %99 = or i1 %97, %98
  br i1 %99, label %if.entry.i160, label %TypeChecker_check_string_expression.exit

if.entry.i160:                                    ; preds = %for.end.i159, %if.entry.i.i, %if.entry2.i.i
  %100 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %100, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %101 = tail call ptr @malloc(i32 24)
  store ptr %100, ptr %101, align 8
  %memberidx1.i.i28.i = getelementptr inbounds %String, ptr %101, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i28.i, align 4
  %memberidx2.i.i29.i = getelementptr inbounds %String, ptr %101, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i29.i, align 4
  %102 = tail call fastcc ptr @TypeChecker_get_type_from_current_scope(ptr %0, ptr nonnull %101)
  br label %TypeChecker_check_string_expression.exit

TypeChecker_check_string_expression.exit:         ; preds = %if.entry2.i.i, %if.entry.i160
  %is_const.1.i = phi i1 [ false, %if.entry.i160 ], [ %71, %if.entry2.i.i ]
  %expected_type.0.i = phi ptr [ %102, %if.entry.i160 ], [ %1, %if.entry2.i.i ]
  %103 = tail call ptr @malloc(i32 49)
  %memberidx4.i161 = getelementptr inbounds %StringExpressionNode, ptr %2, i64 0, i32 3
  %104 = load ptr, ptr %memberidx4.i161, align 8
  %memberidx5.i162 = getelementptr inbounds %StrToken, ptr %104, i64 0, i32 2
  %105 = load ptr, ptr %memberidx5.i162, align 8
  %memberidx7.i163 = getelementptr inbounds %StrToken, ptr %104, i64 0, i32 3
  %106 = load ptr, ptr %memberidx7.i163, align 8
  store i64 8, ptr %103, align 4
  %memberidx.i.i30.i = getelementptr inbounds %Expression, ptr %103, i64 0, i32 2
  store i64 2, ptr %memberidx.i.i30.i, align 4
  %memberidx1.i.i31.i = getelementptr inbounds %Expression, ptr %103, i64 0, i32 1
  %memberidx.i32.i = getelementptr inbounds %StringExpression, ptr %103, i64 0, i32 6
  store ptr %65, ptr %memberidx.i32.i, align 8
  %memberidx1.i33.i = getelementptr inbounds %StringExpression, ptr %103, i64 0, i32 5
  store ptr %106, ptr %memberidx1.i33.i, align 8
  %memberidx2.i34.i = getelementptr inbounds %Expression, ptr %103, i64 0, i32 3
  %memberidx3.i.i = getelementptr inbounds %StringExpression, ptr %103, i64 0, i32 4
  store ptr %105, ptr %memberidx3.i.i, align 8
  store ptr %expected_type.0.i, ptr %memberidx2.i34.i, align 8
  store i1 %is_const.1.i, ptr %memberidx1.i.i31.i, align 1
  br label %common.ret

if.entry14:                                       ; preds = %3
  %107 = tail call fastcc ptr @TypeChecker_check_array_expression(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry18:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  store i64 21, ptr %4, align 8
  %108 = tail call ptr @malloc(i32 24)
  %memberidx.i.i137 = getelementptr inbounds %Array_Expression_, ptr %108, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i137, align 4
  %memberidx1.i.i138 = getelementptr inbounds %Array_Expression_, ptr %108, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i138, align 4
  %109 = tail call ptr @malloc(i32 64)
  store ptr %109, ptr %108, align 8
  store i64 0, ptr %memberidx.i.i137, align 4
  %110 = tail call ptr @malloc(i32 16)
  store i64 15, ptr %110, align 4
  %memberidx.i39.i = getelementptr inbounds %TupleType, ptr %110, i64 0, i32 1
  %111 = tail call ptr @malloc(i32 24)
  %memberidx.i.i.i140 = getelementptr inbounds %Array_Type_, ptr %111, i64 0, i32 1
  store i64 0, ptr %memberidx.i.i.i140, align 4
  %memberidx1.i.i.i141 = getelementptr inbounds %Array_Type_, ptr %111, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i.i141, align 4
  %112 = tail call ptr @malloc(i32 64)
  store ptr %112, ptr %111, align 8
  store i64 0, ptr %memberidx.i.i.i140, align 4
  store ptr %111, ptr %memberidx.i39.i, align 8
  %memberidx3.i = getelementptr inbounds %TupleExpressionNode, ptr %2, i64 0, i32 3
  %113 = load ptr, ptr %memberidx3.i, align 8
  %memberidx4.i172 = getelementptr inbounds %Array_ExpressionNode_, ptr %113, i64 0, i32 1
  %114 = load i64, ptr %memberidx4.i172, align 4
  %115 = icmp sgt i64 %114, 0
  br i1 %115, label %for.body.i.lr.ph, label %for.end.i

for.body.i.lr.ph:                                 ; preds = %if.entry18
  %116 = load i64, ptr %1, align 4
  %117 = icmp eq i64 %116, 15
  %spec.select = select i1 %117, ptr %1, ptr null
  %.not.i = icmp eq ptr %spec.select, null
  %memberidx8.i144 = getelementptr inbounds %TupleType, ptr %spec.select, i64 0, i32 1
  %memberidx.i43.i = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.lr.ph, %Array_Expression____sl__.exit.i
  %118 = phi ptr [ %113, %for.body.i.lr.ph ], [ %167, %Array_Expression____sl__.exit.i ]
  %i.0.i174 = phi i64 [ 0, %for.body.i.lr.ph ], [ %166, %Array_Expression____sl__.exit.i ]
  %is_constant.0.i173 = phi i1 [ true, %for.body.i.lr.ph ], [ %135, %Array_Expression____sl__.exit.i ]
  br i1 %.not.i, label %ifend7.i, label %if.entry5.i

for.end.i:                                        ; preds = %Array_Expression____sl__.exit.i, %if.entry18
  %is_constant.0.i.lcssa = phi i1 [ true, %if.entry18 ], [ %135, %Array_Expression____sl__.exit.i ]
  %119 = call ptr @malloc(i32 33)
  store i64 8, ptr %119, align 4
  %memberidx.i.i40.i = getelementptr inbounds %Expression, ptr %119, i64 0, i32 2
  store i64 7, ptr %memberidx.i.i40.i, align 4
  %memberidx1.i.i41.i = getelementptr inbounds %Expression, ptr %119, i64 0, i32 1
  %memberidx.i42.i = getelementptr inbounds %TupleExpression, ptr %119, i64 0, i32 4
  store ptr %108, ptr %memberidx.i42.i, align 8
  store i1 %is_constant.0.i.lcssa, ptr %memberidx1.i.i41.i, align 1
  %memberidx22.i = getelementptr inbounds %Expression, ptr %119, i64 0, i32 3
  store ptr %110, ptr %memberidx22.i, align 8
  br label %TypeChecker_check_tuple_expression.exit

if.entry5.i:                                      ; preds = %for.body.i
  %120 = load ptr, ptr %memberidx8.i144, align 8
  %memberidx9.i = getelementptr inbounds %Array_Type_, ptr %120, i64 0, i32 1
  %121 = load i64, ptr %memberidx9.i, align 4
  %122 = icmp slt i64 %i.0.i174, %121
  br i1 %122, label %if.entry10.i145, label %ifend7.i

ifend7.i:                                         ; preds = %if.entry10.i145, %if.entry5.i, %for.body.i
  %expected_element_type.0.i = phi ptr [ %133, %if.entry10.i145 ], [ %4, %if.entry5.i ], [ %4, %for.body.i ]
  %123 = load ptr, ptr %118, align 8
  %124 = getelementptr inbounds ptr, ptr %123, i64 %i.0.i174
  %125 = load ptr, ptr %124, align 8
  %126 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %expected_element_type.0.i, ptr %125)
  %127 = load ptr, ptr %memberidx.i43.i, align 8
  %memberidx1.i44.i = getelementptr inbounds %Compiler, ptr %127, i64 0, i32 5
  %128 = load ptr, ptr %memberidx1.i44.i, align 8
  %memberidx2.i45.i = getelementptr inbounds %Array_FloError_, ptr %128, i64 0, i32 1
  %129 = load i64, ptr %memberidx2.i45.i, align 4
  %130 = icmp sgt i64 %129, 0
  br i1 %130, label %TypeChecker_check_tuple_expression.exit, label %ifend17.i

if.entry10.i145:                                  ; preds = %if.entry5.i
  %131 = load ptr, ptr %120, align 8
  %132 = getelementptr inbounds ptr, ptr %131, i64 %i.0.i174
  %133 = load ptr, ptr %132, align 8
  br label %ifend7.i

ifend17.i:                                        ; preds = %ifend7.i
  %memberidx18.i = getelementptr inbounds %Expression, ptr %126, i64 0, i32 1
  %134 = load i1, ptr %memberidx18.i, align 1
  %135 = and i1 %is_constant.0.i173, %134
  %136 = load ptr, ptr %memberidx.i39.i, align 8
  %memberidx20.i = getelementptr inbounds %Expression, ptr %126, i64 0, i32 3
  %137 = load ptr, ptr %memberidx20.i, align 8
  %memberidx.i46.i = getelementptr inbounds %Array_Type_, ptr %136, i64 0, i32 1
  %138 = load i64, ptr %memberidx.i46.i, align 4
  %139 = add i64 %138, 1
  %memberidx.i.i47.i = getelementptr inbounds %Array_Type_, ptr %136, i64 0, i32 2
  %140 = load i64, ptr %memberidx.i.i47.i, align 4
  %141 = icmp slt i64 %140, %139
  %.pre = load ptr, ptr %136, align 8
  br i1 %141, label %while.entry.i.i.i, label %Array_Type____sl__.exit.i

while.entry.i.i.i:                                ; preds = %ifend17.i, %while.entry.i.i.i
  %142 = phi ptr [ %146, %while.entry.i.i.i ], [ %.pre, %ifend17.i ]
  %143 = phi i64 [ %147, %while.entry.i.i.i ], [ %140, %ifend17.i ]
  %144 = shl nuw i64 %143, 1
  store i64 %144, ptr %memberidx.i.i47.i, align 4
  %145 = shl i64 %143, 4
  %146 = call ptr @realloc(ptr %142, i64 %145)
  store ptr %146, ptr %136, align 8
  %147 = load i64, ptr %memberidx.i.i47.i, align 4
  %148 = icmp slt i64 %147, %139
  br i1 %148, label %while.entry.i.i.i, label %Array_Type____sl__.exit.i.loopexit

Array_Type____sl__.exit.i.loopexit:               ; preds = %while.entry.i.i.i
  %.pre177 = load i64, ptr %memberidx.i46.i, align 4
  %.pre187 = add nsw i64 %.pre177, 1
  br label %Array_Type____sl__.exit.i

Array_Type____sl__.exit.i:                        ; preds = %ifend17.i, %Array_Type____sl__.exit.i.loopexit
  %.pre-phi188 = phi i64 [ %.pre187, %Array_Type____sl__.exit.i.loopexit ], [ %139, %ifend17.i ]
  %149 = phi ptr [ %146, %Array_Type____sl__.exit.i.loopexit ], [ %.pre, %ifend17.i ]
  %150 = phi i64 [ %.pre177, %Array_Type____sl__.exit.i.loopexit ], [ %138, %ifend17.i ]
  store i64 %.pre-phi188, ptr %memberidx.i46.i, align 4
  %151 = getelementptr inbounds ptr, ptr %149, i64 %150
  store ptr %137, ptr %151, align 8
  %152 = load i64, ptr %memberidx.i.i137, align 4
  %153 = add i64 %152, 1
  %154 = load i64, ptr %memberidx1.i.i138, align 4
  %155 = icmp slt i64 %154, %153
  %.pre179 = load ptr, ptr %108, align 8
  br i1 %155, label %while.entry.i.i50.i, label %Array_Expression____sl__.exit.i

while.entry.i.i50.i:                              ; preds = %Array_Type____sl__.exit.i, %while.entry.i.i50.i
  %156 = phi ptr [ %160, %while.entry.i.i50.i ], [ %.pre179, %Array_Type____sl__.exit.i ]
  %157 = phi i64 [ %161, %while.entry.i.i50.i ], [ %154, %Array_Type____sl__.exit.i ]
  %158 = shl nuw i64 %157, 1
  store i64 %158, ptr %memberidx1.i.i138, align 4
  %159 = shl i64 %157, 4
  %160 = call ptr @realloc(ptr %156, i64 %159)
  store ptr %160, ptr %108, align 8
  %161 = load i64, ptr %memberidx1.i.i138, align 4
  %162 = icmp slt i64 %161, %153
  br i1 %162, label %while.entry.i.i50.i, label %Array_Expression____sl__.exit.i.loopexit

Array_Expression____sl__.exit.i.loopexit:         ; preds = %while.entry.i.i50.i
  %.pre180 = load i64, ptr %memberidx.i.i137, align 4
  %.pre189 = add nsw i64 %.pre180, 1
  br label %Array_Expression____sl__.exit.i

Array_Expression____sl__.exit.i:                  ; preds = %Array_Type____sl__.exit.i, %Array_Expression____sl__.exit.i.loopexit
  %.pre-phi190 = phi i64 [ %.pre189, %Array_Expression____sl__.exit.i.loopexit ], [ %153, %Array_Type____sl__.exit.i ]
  %163 = phi ptr [ %160, %Array_Expression____sl__.exit.i.loopexit ], [ %.pre179, %Array_Type____sl__.exit.i ]
  %164 = phi i64 [ %.pre180, %Array_Expression____sl__.exit.i.loopexit ], [ %152, %Array_Type____sl__.exit.i ]
  store i64 %.pre-phi190, ptr %memberidx.i.i137, align 4
  %165 = getelementptr inbounds ptr, ptr %163, i64 %164
  store ptr %126, ptr %165, align 8
  %166 = add nuw nsw i64 %i.0.i174, 1
  %167 = load ptr, ptr %memberidx3.i, align 8
  %memberidx4.i = getelementptr inbounds %Array_ExpressionNode_, ptr %167, i64 0, i32 1
  %168 = load i64, ptr %memberidx4.i, align 4
  %169 = icmp slt i64 %166, %168
  br i1 %169, label %for.body.i, label %for.end.i

TypeChecker_check_tuple_expression.exit:          ; preds = %ifend7.i, %for.end.i
  %common.ret.op.i = phi ptr [ %119, %for.end.i ], [ null, %ifend7.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  br label %common.ret

if.entry22:                                       ; preds = %3
  %170 = tail call fastcc ptr @TypeChecker_check_var_access_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry26:                                       ; preds = %3
  %171 = tail call fastcc ptr @TypeChecker_check_bin_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry30:                                       ; preds = %3
  %172 = tail call fastcc ptr @TypeChecker_check_unary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry34:                                       ; preds = %3
  %173 = tail call fastcc ptr @TypeChecker_check_ternary_expr(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret

if.entry38:                                       ; preds = %3
  %174 = tail call fastcc ptr @TypeChecker_check_typecast_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry42:                                       ; preds = %3
  %175 = tail call fastcc ptr @TypeChecker_check_new_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry46:                                       ; preds = %3
  %176 = tail call fastcc ptr @TypeChecker_check_member_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry50:                                       ; preds = %3
  %177 = tail call fastcc ptr @TypeChecker_check_index_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry54:                                       ; preds = %3
  %178 = tail call fastcc ptr @TypeChecker_check_call_expr(ptr %0, ptr nonnull %2)
  br label %common.ret

if.entry58:                                       ; preds = %3
  %179 = tail call fastcc ptr @TypeChecker_check_match_expr(ptr %0, ptr nonnull %2)
  br label %common.ret
}

define internal fastcc noalias ptr @TypeChecker_check_var_access_expr(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpressionNode, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IdentifierToken, ptr %4, i64 0, i32 2
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %7, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %7, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %8, 4
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %3
  %9 = load ptr, ptr %5, align 8
  %10 = tail call i64 @memcmp(ptr %9, ptr nonnull %6, i64 4)
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %if.entry, label %ifend

common.ret:                                       ; preds = %ifend20, %TypeChecker_error.exit115, %ifend11, %TypeChecker_error.exit, %if.entry2, %if.entry
  %common.ret.op = phi ptr [ %12, %if.entry ], [ %20, %if.entry2 ], [ null, %TypeChecker_error.exit ], [ %53, %ifend11 ], [ null, %TypeChecker_error.exit115 ], [ %96, %ifend20 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %ifend.i
  %12 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %12, align 4
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i, align 4
  %memberidx1.i.i68 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 1
  %13 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %13, align 4
  %memberidx.i69 = getelementptr inbounds %Expression, ptr %12, i64 0, i32 3
  store ptr %13, ptr %memberidx.i69, align 8
  %memberidx1.i70 = getelementptr inbounds %BooleanExpression, ptr %12, i64 0, i32 4
  store i1 true, ptr %memberidx1.i70, align 1
  store i1 true, ptr %memberidx1.i.i68, align 1
  br label %common.ret

ifend:                                            ; preds = %3, %ifend.i
  %14 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %14, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i71 = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i71, align 4
  %memberidx2.i.i72 = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i72, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i75 = icmp eq i64 %16, 5
  br i1 %.not.i75, label %ifend.i77, label %ifend4

ifend.i77:                                        ; preds = %ifend
  %17 = load ptr, ptr %5, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 5)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend.i77
  %20 = tail call ptr @malloc(i32 26)
  store i64 8, ptr %20, align 4
  %memberidx.i.i79 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 2
  store i64 4, ptr %memberidx.i.i79, align 4
  %memberidx1.i.i80 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 1
  %21 = tail call ptr @malloc(i32 8)
  store i64 0, ptr %21, align 4
  %memberidx.i81 = getelementptr inbounds %Expression, ptr %20, i64 0, i32 3
  store ptr %21, ptr %memberidx.i81, align 8
  %memberidx1.i82 = getelementptr inbounds %BooleanExpression, ptr %20, i64 0, i32 4
  store i1 false, ptr %memberidx1.i82, align 1
  store i1 true, ptr %memberidx1.i.i80, align 1
  br label %common.ret

ifend4:                                           ; preds = %ifend, %ifend.i77
  %22 = tail call ptr @malloc(i32 4)
  store i32 1819047278, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  %memberidx1.i.i84 = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i84, align 4
  %memberidx2.i.i85 = getelementptr inbounds %String, ptr %23, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i85, align 4
  %24 = load i64, ptr %memberidx.i, align 4
  %.not.i88 = icmp eq i64 %24, 4
  br i1 %.not.i88, label %ifend.i90, label %ifend7

ifend.i90:                                        ; preds = %ifend4
  %25 = load ptr, ptr %5, align 8
  %26 = tail call i64 @memcmp(ptr %25, ptr nonnull %22, i64 4)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend.i90
  %28 = load i64, ptr %1, align 4
  %29 = icmp eq i64 %28, 10
  br i1 %29, label %if.entry9, label %ifend11

ifend7:                                           ; preds = %ifend4, %ifend.i90
  %30 = tail call fastcc ptr @TypeChecker_get_var_from_current_scope(ptr %0, ptr nonnull %5)
  %31 = tail call ptr @malloc(i32 8)
  store i64 21, ptr %31, align 4
  %.not = icmp eq ptr %30, null
  br i1 %.not, label %ifend16, label %if.entry14

if.entry9:                                        ; preds = %if.entry5
  %32 = tail call ptr @malloc(i32 37)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(37) %32, ptr noundef nonnull align 8 dereferenceable(37) @170, i64 37, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  %memberidx1.i.i94 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  store i64 37, ptr %memberidx1.i.i94, align 4
  %memberidx2.i.i95 = getelementptr inbounds %String, ptr %33, i64 0, i32 2
  store i64 37, ptr %memberidx2.i.i95, align 4
  %34 = load ptr, ptr %memberidx, align 8
  %memberidx13 = getelementptr inbounds %Token, ptr %34, i64 0, i32 1
  %35 = load ptr, ptr %memberidx13, align 8
  %memberidx.i96 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %36 = load ptr, ptr %memberidx.i96, align 8
  %memberidx1.i97 = getelementptr inbounds %Compiler, ptr %36, i64 0, i32 5
  %37 = load ptr, ptr %memberidx1.i97, align 8
  %38 = tail call ptr @malloc(i32 24)
  store i64 5, ptr %38, align 4
  %memberidx1.i.i98 = getelementptr inbounds %FloError, ptr %38, i64 0, i32 2
  store ptr %35, ptr %memberidx1.i.i98, align 8
  %memberidx2.i.i99 = getelementptr inbounds %FloError, ptr %38, i64 0, i32 1
  store ptr %33, ptr %memberidx2.i.i99, align 8
  %memberidx.i.i100 = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i.i100, align 4
  %40 = add i64 %39, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 2
  %41 = load i64, ptr %memberidx.i.i.i, align 4
  %42 = icmp slt i64 %41, %40
  %.pre135 = load ptr, ptr %37, align 8
  br i1 %42, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry9, %while.entry.i.i.i
  %43 = phi ptr [ %47, %while.entry.i.i.i ], [ %.pre135, %if.entry9 ]
  %44 = phi i64 [ %48, %while.entry.i.i.i ], [ %41, %if.entry9 ]
  %45 = shl nuw i64 %44, 1
  store i64 %45, ptr %memberidx.i.i.i, align 4
  %46 = shl i64 %44, 4
  %47 = tail call ptr @realloc(ptr %43, i64 %46)
  store ptr %47, ptr %37, align 8
  %48 = load i64, ptr %memberidx.i.i.i, align 4
  %49 = icmp slt i64 %48, %40
  br i1 %49, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre136 = load i64, ptr %memberidx.i.i100, align 4
  %.pre138 = add nsw i64 %.pre136, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry9, %TypeChecker_error.exit.loopexit
  %.pre-phi = phi i64 [ %.pre138, %TypeChecker_error.exit.loopexit ], [ %40, %if.entry9 ]
  %50 = phi ptr [ %47, %TypeChecker_error.exit.loopexit ], [ %.pre135, %if.entry9 ]
  %51 = phi i64 [ %.pre136, %TypeChecker_error.exit.loopexit ], [ %39, %if.entry9 ]
  store i64 %.pre-phi, ptr %memberidx.i.i100, align 4
  %52 = getelementptr inbounds ptr, ptr %50, i64 %51
  store ptr %38, ptr %52, align 8
  br label %common.ret

ifend11:                                          ; preds = %if.entry5
  %53 = tail call ptr @malloc(i32 25)
  store i64 8, ptr %53, align 4
  %memberidx.i.i101 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 2
  store i64 5, ptr %memberidx.i.i101, align 4
  %memberidx1.i.i102 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 1
  %memberidx.i103 = getelementptr inbounds %Expression, ptr %53, i64 0, i32 3
  store ptr %1, ptr %memberidx.i103, align 8
  store i1 true, ptr %memberidx1.i.i102, align 1
  br label %common.ret

if.entry14:                                       ; preds = %ifend7
  %54 = load i64, ptr %30, align 4
  switch i64 %54, label %else31 [
    i64 0, label %if.entry18
    i64 1, label %if.entry24
    i64 2, label %if.entry30
  ]

ifend16:                                          ; preds = %ifend7
  %55 = load i64, ptr %memberidx.i, align 4
  %56 = trunc i64 %55 to i32
  %57 = add i32 %56, 1
  %58 = tail call ptr @malloc(i32 %57)
  %59 = load ptr, ptr %5, align 8
  %60 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %58, ptr align 8 %59, i64 %60, i1 false)
  %61 = getelementptr inbounds i8, ptr %58, i64 %60
  store i8 0, ptr %61, align 1
  %62 = alloca ptr, align 8
  %63 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %62, ptr nonnull @171, ptr %58)
  %64 = load ptr, ptr %62, align 8
  %65 = tail call ptr @malloc(i32 24)
  store ptr %64, ptr %65, align 8
  %memberidx1.i106 = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  store i64 %63, ptr %memberidx1.i106, align 4
  %memberidx2.i107 = getelementptr inbounds %String, ptr %65, i64 0, i32 2
  store i64 %63, ptr %memberidx2.i107, align 4
  tail call void @free(ptr %58)
  %66 = load ptr, ptr %2, align 8
  %memberidx.i108 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %67 = load ptr, ptr %memberidx.i108, align 8
  %memberidx1.i109 = getelementptr inbounds %Compiler, ptr %67, i64 0, i32 5
  %68 = load ptr, ptr %memberidx1.i109, align 8
  %69 = call ptr @malloc(i32 24)
  store i64 1, ptr %69, align 4
  %memberidx1.i.i110 = getelementptr inbounds %FloError, ptr %69, i64 0, i32 2
  store ptr %66, ptr %memberidx1.i.i110, align 8
  %memberidx2.i.i111 = getelementptr inbounds %FloError, ptr %69, i64 0, i32 1
  store ptr %65, ptr %memberidx2.i.i111, align 8
  %memberidx.i.i112 = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 1
  %70 = load i64, ptr %memberidx.i.i112, align 4
  %71 = add i64 %70, 1
  %memberidx.i.i.i113 = getelementptr inbounds %Array_FloError_, ptr %68, i64 0, i32 2
  %72 = load i64, ptr %memberidx.i.i.i113, align 4
  %73 = icmp slt i64 %72, %71
  %.pre = load ptr, ptr %68, align 8
  br i1 %73, label %while.entry.i.i.i114, label %TypeChecker_error.exit115

while.entry.i.i.i114:                             ; preds = %ifend16, %while.entry.i.i.i114
  %74 = phi ptr [ %78, %while.entry.i.i.i114 ], [ %.pre, %ifend16 ]
  %75 = phi i64 [ %79, %while.entry.i.i.i114 ], [ %72, %ifend16 ]
  %76 = shl nuw i64 %75, 1
  store i64 %76, ptr %memberidx.i.i.i113, align 4
  %77 = shl i64 %75, 4
  %78 = call ptr @realloc(ptr %74, i64 %77)
  store ptr %78, ptr %68, align 8
  %79 = load i64, ptr %memberidx.i.i.i113, align 4
  %80 = icmp slt i64 %79, %71
  br i1 %80, label %while.entry.i.i.i114, label %TypeChecker_error.exit115.loopexit

TypeChecker_error.exit115.loopexit:               ; preds = %while.entry.i.i.i114
  %.pre133 = load i64, ptr %memberidx.i.i112, align 4
  %.pre139 = add nsw i64 %.pre133, 1
  br label %TypeChecker_error.exit115

TypeChecker_error.exit115:                        ; preds = %ifend16, %TypeChecker_error.exit115.loopexit
  %.pre-phi140 = phi i64 [ %.pre139, %TypeChecker_error.exit115.loopexit ], [ %71, %ifend16 ]
  %81 = phi ptr [ %78, %TypeChecker_error.exit115.loopexit ], [ %.pre, %ifend16 ]
  %82 = phi i64 [ %.pre133, %TypeChecker_error.exit115.loopexit ], [ %70, %ifend16 ]
  store i64 %.pre-phi140, ptr %memberidx.i.i112, align 4
  %83 = getelementptr inbounds ptr, ptr %81, i64 %82
  store ptr %69, ptr %83, align 8
  br label %common.ret

if.entry18:                                       ; preds = %if.entry14
  %84 = load ptr, ptr %0, align 8
  %85 = load ptr, ptr %84, align 8
  %memberidx1.i116 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %86 = load i64, ptr %memberidx1.i116, align 4
  %87 = load ptr, ptr %85, align 8
  %88 = getelementptr inbounds ptr, ptr %87, i64 %86
  %89 = load ptr, ptr %88, align 8
  %memberidx2.i117 = getelementptr inbounds %Module, ptr %89, i64 0, i32 4
  %90 = load ptr, ptr %memberidx2.i117, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %91 = load i64, ptr %memberidx3.i, align 4
  %92 = load ptr, ptr %90, align 8
  %93 = getelementptr inbounds ptr, ptr %92, i64 %91
  %94 = load ptr, ptr %93, align 8
  %memberidx22 = getelementptr inbounds %Function, ptr %94, i64 0, i32 4
  %95 = load ptr, ptr %memberidx22, align 8
  br label %ifend20

ifend20:                                          ; preds = %if.entry41, %else38, %if.entry37, %if.entry30, %if.entry24, %if.entry18
  %var_ty.0 = phi ptr [ %95, %if.entry18 ], [ %110, %if.entry24 ], [ %122, %if.entry30 ], [ %125, %if.entry37 ], [ %127, %if.entry41 ], [ %31, %else38 ]
  %96 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %96, align 4
  %memberidx.i.i118 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i118, align 4
  %memberidx1.i.i119 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 1
  %memberidx.i120 = getelementptr inbounds %VarAccessExpression, ptr %96, i64 0, i32 4
  store ptr %30, ptr %memberidx.i120, align 8
  %memberidx1.i121 = getelementptr inbounds %Expression, ptr %96, i64 0, i32 3
  store ptr %var_ty.0, ptr %memberidx1.i121, align 8
  %97 = load i64, ptr %30, align 4
  %98 = icmp eq i64 %97, 2
  store i1 %98, ptr %memberidx1.i.i119, align 1
  br label %common.ret

if.entry24:                                       ; preds = %if.entry14
  %99 = load ptr, ptr %0, align 8
  %100 = load ptr, ptr %99, align 8
  %memberidx1.i123 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %101 = load i64, ptr %memberidx1.i123, align 4
  %102 = load ptr, ptr %100, align 8
  %103 = getelementptr inbounds ptr, ptr %102, i64 %101
  %104 = load ptr, ptr %103, align 8
  %memberidx2.i124 = getelementptr inbounds %Module, ptr %104, i64 0, i32 1
  %105 = load ptr, ptr %memberidx2.i124, align 8
  %memberidx3.i125 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %106 = load i64, ptr %memberidx3.i125, align 4
  %107 = load ptr, ptr %105, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %106
  %109 = load ptr, ptr %108, align 8
  %110 = load ptr, ptr %109, align 8
  br label %ifend20

if.entry30:                                       ; preds = %if.entry14
  %111 = load ptr, ptr %0, align 8
  %112 = load ptr, ptr %111, align 8
  %memberidx1.i126 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 1
  %113 = load i64, ptr %memberidx1.i126, align 4
  %114 = load ptr, ptr %112, align 8
  %115 = getelementptr inbounds ptr, ptr %114, i64 %113
  %116 = load ptr, ptr %115, align 8
  %memberidx2.i127 = getelementptr inbounds %Module, ptr %116, i64 0, i32 2
  %117 = load ptr, ptr %memberidx2.i127, align 8
  %memberidx3.i128 = getelementptr inbounds %VarId, ptr %30, i64 0, i32 2
  %118 = load i64, ptr %memberidx3.i128, align 4
  %119 = load ptr, ptr %117, align 8
  %120 = getelementptr inbounds ptr, ptr %119, i64 %118
  %121 = load ptr, ptr %120, align 8
  %122 = load ptr, ptr %121, align 8
  br label %ifend20

else31:                                           ; preds = %if.entry14
  %123 = add i64 %54, -3
  %124 = icmp ult i64 %123, 2
  br i1 %124, label %if.entry37, label %else38

if.entry37:                                       ; preds = %else31
  %125 = tail call ptr @malloc(i32 8)
  store i64 17, ptr %125, align 4
  br label %ifend20

else38:                                           ; preds = %else31
  %126 = icmp eq i64 %54, 5
  br i1 %126, label %if.entry41, label %ifend20

if.entry41:                                       ; preds = %else38
  %127 = tail call ptr @malloc(i32 8)
  store i64 18, ptr %127, align 4
  br label %ifend20
}

define internal fastcc ptr @TypeChecker_check_intrinsic_call(ptr %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  %5 = add i64 %4, -3
  %6 = icmp ult i64 %5, 2
  %7 = icmp eq i64 %4, 7
  %8 = or i1 %7, %6
  %9 = alloca %IntType, align 8
  store i64 6, ptr %9, align 8
  %memberidx.i = getelementptr inbounds %IntType, ptr %9, i64 0, i32 1
  store i1 false, ptr %memberidx.i, align 8
  %10 = alloca %Type, align 8
  store i64 21, ptr %10, align 8
  %memberidx2 = getelementptr inbounds %Array_ExpressionNode_, ptr %3, i64 0, i32 1
  %11 = load i64, ptr %memberidx2, align 4
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx3 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %13 = icmp eq i64 %4, 6
  %14 = icmp eq i64 %4, 5
  %memberidx.i120 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %Array_Expression____sl__.exit
  %i.0167 = phi i64 [ 0, %for.body.lr.ph ], [ %58, %Array_Expression____sl__.exit ]
  %15 = icmp eq i64 %i.0167, 1
  %16 = and i1 %8, %15
  br i1 %16, label %end, label %false_block

for.end:                                          ; preds = %Array_Expression____sl__.exit, %for.entry
  %memberidx25 = getelementptr inbounds %IntrinsicCall, ptr %1, i64 0, i32 5
  %17 = load ptr, ptr %memberidx25, align 8
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr %18, align 8
  %memberidx26 = getelementptr inbounds %Expression, ptr %19, i64 0, i32 3
  %20 = load ptr, ptr %memberidx26, align 8
  %21 = load i64, ptr %20, align 4
  %22 = icmp eq i64 %21, 13
  br i1 %22, label %ifend29, label %if.entry27

false_block:                                      ; preds = %for.body
  %23 = load ptr, ptr %memberidx3, align 8
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr %24, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx4, align 8
  br label %end

end:                                              ; preds = %for.body, %false_block
  %ternary = phi ptr [ %26, %false_block ], [ %10, %for.body ]
  %27 = and i1 %6, %15
  %28 = icmp eq i64 %i.0167, 0
  %29 = and i1 %13, %28
  %30 = select i1 %14, i1 true, i1 %29
  %31 = select i1 %30, i1 true, i1 %27
  %expected_type.2 = select i1 %31, ptr %9, ptr %ternary
  %32 = load ptr, ptr %3, align 8
  %33 = getelementptr inbounds ptr, ptr %32, i64 %i.0167
  %34 = load ptr, ptr %33, align 8
  %35 = call fastcc ptr @TypeChecker_check_expression(ptr %0, ptr %expected_type.2, ptr %34)
  %36 = load ptr, ptr %memberidx.i120, align 8
  %memberidx1.i = getelementptr inbounds %Compiler, ptr %36, i64 0, i32 5
  %37 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Array_FloError_, ptr %37, i64 0, i32 1
  %38 = load i64, ptr %memberidx2.i, align 4
  %39 = icmp sgt i64 %38, 0
  br i1 %39, label %common.ret, label %ifend13

common.ret:                                       ; preds = %end, %ifend29, %ifend41, %ifend55, %if.entry62, %TypeChecker_error.exit159, %TypeChecker_error.exit149, %TypeChecker_error.exit139, %TypeChecker_error.exit
  %common.ret.op = phi ptr [ null, %TypeChecker_error.exit ], [ null, %TypeChecker_error.exit139 ], [ null, %TypeChecker_error.exit149 ], [ null, %TypeChecker_error.exit159 ], [ %1, %if.entry62 ], [ %1, %ifend55 ], [ %1, %ifend41 ], [ %1, %ifend29 ], [ null, %end ]
  ret ptr %common.ret.op

ifend13:                                          ; preds = %end
  %40 = load i64, ptr %expected_type.2, align 4
  %.not119 = icmp eq i64 %40, 21
  br i1 %.not119, label %ifend17, label %if.entry15

if.entry15:                                       ; preds = %ifend13
  %memberidx18 = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  %41 = load ptr, ptr %memberidx18, align 8
  %42 = call fastcc i1 @TypeChecker_types_are_eq(ptr nonnull %0, ptr nonnull %expected_type.2, ptr %41)
  br i1 %42, label %ifend17, label %if.entry19

ifend17:                                          ; preds = %if.entry15, %ifend13
  %43 = load ptr, ptr %memberidx3, align 8
  %memberidx.i121 = getelementptr inbounds %Array_Expression_, ptr %43, i64 0, i32 1
  %44 = load i64, ptr %memberidx.i121, align 4
  %45 = add i64 %44, 1
  %memberidx.i.i = getelementptr inbounds %Array_Expression_, ptr %43, i64 0, i32 2
  %46 = load i64, ptr %memberidx.i.i, align 4
  %47 = icmp slt i64 %46, %45
  %.pre174 = load ptr, ptr %43, align 8
  br i1 %47, label %while.entry.i.i, label %Array_Expression____sl__.exit

while.entry.i.i:                                  ; preds = %ifend17, %while.entry.i.i
  %48 = phi ptr [ %52, %while.entry.i.i ], [ %.pre174, %ifend17 ]
  %49 = phi i64 [ %53, %while.entry.i.i ], [ %46, %ifend17 ]
  %50 = shl nuw i64 %49, 1
  store i64 %50, ptr %memberidx.i.i, align 4
  %51 = shl i64 %49, 4
  %52 = call ptr @realloc(ptr %48, i64 %51)
  store ptr %52, ptr %43, align 8
  %53 = load i64, ptr %memberidx.i.i, align 4
  %54 = icmp slt i64 %53, %45
  br i1 %54, label %while.entry.i.i, label %Array_Expression____sl__.exit.loopexit

Array_Expression____sl__.exit.loopexit:           ; preds = %while.entry.i.i
  %.pre175 = load i64, ptr %memberidx.i121, align 4
  %.pre186 = add nsw i64 %.pre175, 1
  br label %Array_Expression____sl__.exit

Array_Expression____sl__.exit:                    ; preds = %ifend17, %Array_Expression____sl__.exit.loopexit
  %.pre-phi = phi i64 [ %.pre186, %Array_Expression____sl__.exit.loopexit ], [ %45, %ifend17 ]
  %55 = phi ptr [ %52, %Array_Expression____sl__.exit.loopexit ], [ %.pre174, %ifend17 ]
  %56 = phi i64 [ %.pre175, %Array_Expression____sl__.exit.loopexit ], [ %44, %ifend17 ]
  store i64 %.pre-phi, ptr %memberidx.i121, align 4
  %57 = getelementptr inbounds ptr, ptr %55, i64 %56
  store ptr %35, ptr %57, align 8
  %58 = add nuw nsw i64 %i.0167, 1
  %59 = load i64, ptr %memberidx2, align 4
  %60 = icmp slt i64 %58, %59
  br i1 %60, label %for.body, label %for.end

if.entry19:                                       ; preds = %if.entry15
  %61 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr nonnull %expected_type.2)
  %memberidx.i122 = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  %62 = load i64, ptr %memberidx.i122, align 4
  %63 = trunc i64 %62 to i32
  %64 = add i32 %63, 1
  %65 = call ptr @malloc(i32 %64)
  %66 = load ptr, ptr %61, align 8
  %67 = load i64, ptr %memberidx.i122, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %65, ptr align 8 %66, i64 %67, i1 false)
  %68 = getelementptr inbounds i8, ptr %65, i64 %67
  store i8 0, ptr %68, align 1
  %69 = load ptr, ptr %memberidx18, align 8
  %70 = call fastcc ptr @TypeChecker_dump_type(ptr nonnull %0, ptr %69)
  %memberidx.i123 = getelementptr inbounds %String, ptr %70, i64 0, i32 1
  %71 = load i64, ptr %memberidx.i123, align 4
  %72 = trunc i64 %71 to i32
  %73 = add i32 %72, 1
  %74 = call ptr @malloc(i32 %73)
  %75 = load ptr, ptr %70, align 8
  %76 = load i64, ptr %memberidx.i123, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %74, ptr align 8 %75, i64 %76, i1 false)
  %77 = getelementptr inbounds i8, ptr %74, i64 %76
  store i8 0, ptr %77, align 1
  %78 = alloca ptr, align 8
  %79 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %78, ptr nonnull @217, i64 %i.0167, ptr %65, ptr %74)
  %80 = load ptr, ptr %78, align 8
  %81 = tail call ptr @malloc(i32 24)
  store ptr %80, ptr %81, align 8
  %memberidx1.i124 = getelementptr inbounds %String, ptr %81, i64 0, i32 1
  store i64 %79, ptr %memberidx1.i124, align 4
  %memberidx2.i125 = getelementptr inbounds %String, ptr %81, i64 0, i32 2
  store i64 %79, ptr %memberidx2.i125, align 4
  tail call void @free(ptr %65)
  tail call void @free(ptr %74)
  %82 = load ptr, ptr %3, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %i.0167
  %84 = load ptr, ptr %83, align 8
  %85 = load ptr, ptr %84, align 8
  %86 = load ptr, ptr %memberidx.i120, align 8
  %memberidx1.i127 = getelementptr inbounds %Compiler, ptr %86, i64 0, i32 5
  %87 = load ptr, ptr %memberidx1.i127, align 8
  %88 = call ptr @malloc(i32 24)
  store i64 5, ptr %88, align 4
  %memberidx1.i.i = getelementptr inbounds %FloError, ptr %88, i64 0, i32 2
  store ptr %85, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %FloError, ptr %88, i64 0, i32 1
  store ptr %81, ptr %memberidx2.i.i, align 8
  %memberidx.i.i128 = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 1
  %89 = load i64, ptr %memberidx.i.i128, align 4
  %90 = add i64 %89, 1
  %memberidx.i.i.i = getelementptr inbounds %Array_FloError_, ptr %87, i64 0, i32 2
  %91 = load i64, ptr %memberidx.i.i.i, align 4
  %92 = icmp slt i64 %91, %90
  %.pre = load ptr, ptr %87, align 8
  br i1 %92, label %while.entry.i.i.i, label %TypeChecker_error.exit

while.entry.i.i.i:                                ; preds = %if.entry19, %while.entry.i.i.i
  %93 = phi ptr [ %97, %while.entry.i.i.i ], [ %.pre, %if.entry19 ]
  %94 = phi i64 [ %98, %while.entry.i.i.i ], [ %91, %if.entry19 ]
  %95 = shl nuw i64 %94, 1
  store i64 %95, ptr %memberidx.i.i.i, align 4
  %96 = shl i64 %94, 4
  %97 = call ptr @realloc(ptr %93, i64 %96)
  store ptr %97, ptr %87, align 8
  %98 = load i64, ptr %memberidx.i.i.i, align 4
  %99 = icmp slt i64 %98, %90
  br i1 %99, label %while.entry.i.i.i, label %TypeChecker_error.exit.loopexit

TypeChecker_error.exit.loopexit:                  ; preds = %while.entry.i.i.i
  %.pre172 = load i64, ptr %memberidx.i.i128, align 4
  %.pre193 = add nsw i64 %.pre172, 1
  br label %TypeChecker_error.exit

TypeChecker_error.exit:                           ; preds = %if.entry19, %TypeChecker_error.exit.loopexit
  %.pre-phi194 = phi i64 [ %.pre193, %TypeChecker_error.exit.loopexit ], [ %90, %if.entry19 ]
  %100 = phi ptr [ %97, %TypeChecker_error.exit.loopexit ], [ %.pre, %if.entry19 ]
  %101 = phi i64 [ %.pre172, %TypeChecker_error.exit.loopexit ], [ %89, %if.entry19 ]
  store i64 %.pre-phi194, ptr %memberidx.i.i128, align 4
  %102 = getelementptr inbounds ptr, ptr %100, i64 %101
  store ptr %88, ptr %102, align 8
  br label %common.ret

if.entry27:                                       ; preds = %for.end
  %103 = call fastcc ptr @TypeChecker_dump_type(ptr %0, ptr nonnull %20)
  %memberidx.i129 = getelementptr inbounds %String, ptr %103, i64 0, i32 1
  %104 = load i64, ptr %memberidx.i129, align 4
  %105 = trunc i64 %104 to i32
  %106 = add i32 %105, 1
  %107 = call ptr @malloc(i32 %106)
  %108 = load ptr, ptr %103, align 8
  %109 = load i64, ptr %memberidx.i129, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %107, ptr align 8 %108, i64 %109, i1 false)
  %110 = getelementptr inbounds i8, ptr %107, i64 %109
  store i8 0, ptr %110, align 1
  %111 = alloca ptr, align 8
  %112 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %111, ptr nonnull @218, ptr %107)
  %113 = load ptr, ptr %111, align 8
  %114 = tail call ptr @malloc(i32 24)
  store ptr %113, ptr %114, align 8
  %memberidx1.i130 = getelementptr inbounds %String, ptr %114, i64 0, i32 1
  store i64 %112, ptr %memberidx1.i130, align 4
  %memberidx2.i131 = getelementptr inbounds %String, ptr %114, i64 0, i32 2
  store i64 %112, ptr %memberidx2.i131, align 4
  tail call void @free(ptr %107)
  %memberidx32 = getelementptr inbounds %CallExpressionNode, ptr %2, i64 0, i32 3
  %115 = load ptr, ptr %memberidx32, align 8
  %116 = load ptr, ptr %115, align 8
  %memberidx.i132 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %117 = load ptr, ptr %memberidx.i132, align 8
  %memberidx1.i133 = getelementptr inbounds %Compiler, ptr %117, i64 0, i32 5
  %118 = load ptr, ptr %memberidx1.i133, align 8
  %119 = call ptr @malloc(i32 24)
  store i64 5, ptr %119, align 4
  %memberidx1.i.i134 = getelementptr inbounds %FloError, ptr %119, i64 0, i32 2
  store ptr %116, ptr %memberidx1.i.i134, align 8
  %memberidx2.i.i135 = getelementptr inbounds %FloError, ptr %119, i64 0, i32 1
  store ptr %114, ptr %memberidx2.i.i135, align 8
  %memberidx.i.i136 = getelementptr inbounds %Array_FloError_, ptr %118, i64 0, i32 1
  %120 = load i64, ptr %memberidx.i.i136, align 4
  %121 = add i64 %120, 1
  %memberidx.i.i.i137 = getelementptr inbounds %Array_FloError_, ptr %118, i64 0, i32 2
  %122 = load i64, ptr %memberidx.i.i.i137, align 4
  %123 = icmp slt i64 %122, %121
  %.pre177 = load ptr, ptr %118, align 8
  br i1 %123, label %while.entry.i.i.i138, label %TypeChecker_error.exit139

while.entry.i.i.i138:                             ; preds = %if.entry27, %while.entry.i.i.i138
  %124 = phi ptr [ %128, %while.entry.i.i.i138 ], [ %.pre177, %if.entry27 ]
  %125 = phi i64 [ %129, %while.entry.i.i.i138 ], [ %122, %if.entry27 ]
  %126 = shl nuw i64 %125, 1
  store i64 %126, ptr %memberidx.i.i.i137, align 4
  %127 = shl i64 %125, 4
  %128 = call ptr @realloc(ptr %124, i64 %127)
  store ptr %128, ptr %118, align 8
  %129 = load i64, ptr %memberidx.i.i.i137, align 4
  %130 = icmp slt i64 %129, %121
  br i1 %130, label %while.entry.i.i.i138, label %TypeChecker_error.exit139.loopexit

TypeChecker_error.exit139.loopexit:               ; preds = %while.entry.i.i.i138
  %.pre178 = load i64, ptr %memberidx.i.i136, align 4
  %.pre191 = add nsw i64 %.pre178, 1
  br label %TypeChecker_error.exit139

TypeChecker_error.exit139:                        ; preds = %if.entry27, %TypeChecker_error.exit139.loopexit
  %.pre-phi192 = phi i64 [ %.pre191, %TypeChecker_error.exit139.loopexit ], [ %121, %if.entry27 ]
  %131 = phi ptr [ %128, %TypeChecker_error.exit139.loopexit ], [ %.pre177, %if.entry27 ]
  %132 = phi i64 [ %.pre178, %TypeChecker_error.exit139.loopexit ], [ %120, %if.entry27 ]
  store i64 %.pre-phi192, ptr %memberidx.i.i136, align 4
  %133 = getelementptr inbounds ptr, ptr %131, i64 %132
  store ptr %119, ptr %133, align 8
  br label %common.ret

ifend29:                                          ; preds = %for.end
  switch i64 %4, label %common.ret [
    i64 6, label %if.entry34
    i64 7, label %if.entry48
    i64 5, label %if.entry48
    i64 4, label %if.entry48
    i64 3, label %if.entry48
  ]

if.entry34:                                       ; preds = %ifend29
  %memberidx38 = getelementptr inbounds %Array_Expression_, ptr %17, i64 0, i32 1
  %134 = load i64, ptr %memberidx38, align 4
  %.not118 = icmp eq i64 %134, 2
  br i1 %.not118, label %ifend41, label %if.entry39

if.entry39:                                       ; preds = %if.entry34
  %135 = alloca ptr, align 8
  %136 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %135, ptr nonnull @219, i64 %134)
  %137 = load ptr, ptr %135, align 8
  %138 = tail call ptr @malloc(i32 24)
  store ptr %137, ptr %138, align 8
  %memberidx1.i140 = getelementptr inbounds %String, ptr %138, i64 0, i32 1
  store i64 %136, ptr %memberidx1.i140, align 4
  %memberidx2.i141 = getelementptr inbounds %String, ptr %138, i64 0, i32 2
  store i64 %136, ptr %memberidx2.i141, align 4
  %139 = load ptr, ptr %2, align 8
  %memberidx.i142 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %140 = load ptr, ptr %memberidx.i142, align 8
  %memberidx1.i143 = getelementptr inbounds %Compiler, ptr %140, i64 0, i32 5
  %141 = load ptr, ptr %memberidx1.i143, align 8
  %142 = call ptr @malloc(i32 24)
  store i64 4, ptr %142, align 4
  %memberidx1.i.i144 = getelementptr inbounds %FloError, ptr %142, i64 0, i32 2
  store ptr %139, ptr %memberidx1.i.i144, align 8
  %memberidx2.i.i145 = getelementptr inbounds %FloError, ptr %142, i64 0, i32 1
  store ptr %138, ptr %memberidx2.i.i145, align 8
  %memberidx.i.i146 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 1
  %143 = load i64, ptr %memberidx.i.i146, align 4
  %144 = add i64 %143, 1
  %memberidx.i.i.i147 = getelementptr inbounds %Array_FloError_, ptr %141, i64 0, i32 2
  %145 = load i64, ptr %memberidx.i.i.i147, align 4
  %146 = icmp slt i64 %145, %144
  %.pre183 = load ptr, ptr %141, align 8
  br i1 %146, label %while.entry.i.i.i148, label %TypeChecker_error.exit149

while.entry.i.i.i148:                             ; preds = %if.entry39, %while.entry.i.i.i148
  %147 = phi ptr [ %151, %while.entry.i.i.i148 ], [ %.pre183, %if.entry39 ]
  %148 = phi i64 [ %152, %while.entry.i.i.i148 ], [ %145, %if.entry39 ]
  %149 = shl nuw i64 %148, 1
  store i64 %149, ptr %memberidx.i.i.i147, align 4
  %150 = shl i64 %148, 4
  %151 = call ptr @realloc(ptr %147, i64 %150)
  store ptr %151, ptr %141, align 8
  %152 = load i64, ptr %memberidx.i.i.i147, align 4
  %153 = icmp slt i64 %152, %144
  br i1 %153, label %while.entry.i.i.i148, label %TypeChecker_error.exit149.loopexit

TypeChecker_error.exit149.loopexit:               ; preds = %while.entry.i.i.i148
  %.pre184 = load i64, ptr %memberidx.i.i146, align 4
  %.pre187 = add nsw i64 %.pre184, 1
  br label %TypeChecker_error.exit149

TypeChecker_error.exit149:                        ; preds = %if.entry39, %TypeChecker_error.exit149.loopexit
  %.pre-phi188 = phi i64 [ %.pre187, %TypeChecker_error.exit149.loopexit ], [ %144, %if.entry39 ]
  %154 = phi ptr [ %151, %TypeChecker_error.exit149.loopexit ], [ %.pre183, %if.entry39 ]
  %155 = phi i64 [ %.pre184, %TypeChecker_error.exit149.loopexit ], [ %143, %if.entry39 ]
  store i64 %.pre-phi188, ptr %memberidx.i.i146, align 4
  %156 = getelementptr inbounds ptr, ptr %154, i64 %155
  store ptr %142, ptr %156, align 8
  br label %common.ret

ifend41:                                          ; preds = %if.entry34
  %memberidx45 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %20, ptr %memberidx45, align 8
  br label %common.ret

if.entry48:                                       ; preds = %ifend29, %ifend29, %ifend29, %ifend29
  %memberidx52 = getelementptr inbounds %Array_Expression_, ptr %17, i64 0, i32 1
  %157 = load i64, ptr %memberidx52, align 4
  %.not = icmp eq i64 %157, 3
  br i1 %.not, label %ifend55, label %if.entry53

if.entry53:                                       ; preds = %if.entry48
  %158 = alloca ptr, align 8
  %159 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %158, ptr nonnull @220, i64 %157)
  %160 = load ptr, ptr %158, align 8
  %161 = tail call ptr @malloc(i32 24)
  store ptr %160, ptr %161, align 8
  %memberidx1.i150 = getelementptr inbounds %String, ptr %161, i64 0, i32 1
  store i64 %159, ptr %memberidx1.i150, align 4
  %memberidx2.i151 = getelementptr inbounds %String, ptr %161, i64 0, i32 2
  store i64 %159, ptr %memberidx2.i151, align 4
  %162 = load ptr, ptr %2, align 8
  %memberidx.i152 = getelementptr inbounds %TypeChecker, ptr %0, i64 0, i32 5
  %163 = load ptr, ptr %memberidx.i152, align 8
  %memberidx1.i153 = getelementptr inbounds %Compiler, ptr %163, i64 0, i32 5
  %164 = load ptr, ptr %memberidx1.i153, align 8
  %165 = call ptr @malloc(i32 24)
  store i64 4, ptr %165, align 4
  %memberidx1.i.i154 = getelementptr inbounds %FloError, ptr %165, i64 0, i32 2
  store ptr %162, ptr %memberidx1.i.i154, align 8
  %memberidx2.i.i155 = getelementptr inbounds %FloError, ptr %165, i64 0, i32 1
  store ptr %161, ptr %memberidx2.i.i155, align 8
  %memberidx.i.i156 = getelementptr inbounds %Array_FloError_, ptr %164, i64 0, i32 1
  %166 = load i64, ptr %memberidx.i.i156, align 4
  %167 = add i64 %166, 1
  %memberidx.i.i.i157 = getelementptr inbounds %Array_FloError_, ptr %164, i64 0, i32 2
  %168 = load i64, ptr %memberidx.i.i.i157, align 4
  %169 = icmp slt i64 %168, %167
  %.pre180 = load ptr, ptr %164, align 8
  br i1 %169, label %while.entry.i.i.i158, label %TypeChecker_error.exit159

while.entry.i.i.i158:                             ; preds = %if.entry53, %while.entry.i.i.i158
  %170 = phi ptr [ %174, %while.entry.i.i.i158 ], [ %.pre180, %if.entry53 ]
  %171 = phi i64 [ %175, %while.entry.i.i.i158 ], [ %168, %if.entry53 ]
  %172 = shl nuw i64 %171, 1
  store i64 %172, ptr %memberidx.i.i.i157, align 4
  %173 = shl i64 %171, 4
  %174 = call ptr @realloc(ptr %170, i64 %173)
  store ptr %174, ptr %164, align 8
  %175 = load i64, ptr %memberidx.i.i.i157, align 4
  %176 = icmp slt i64 %175, %167
  br i1 %176, label %while.entry.i.i.i158, label %TypeChecker_error.exit159.loopexit

TypeChecker_error.exit159.loopexit:               ; preds = %while.entry.i.i.i158
  %.pre181 = load i64, ptr %memberidx.i.i156, align 4
  %.pre189 = add nsw i64 %.pre181, 1
  br label %TypeChecker_error.exit159

TypeChecker_error.exit159:                        ; preds = %if.entry53, %TypeChecker_error.exit159.loopexit
  %.pre-phi190 = phi i64 [ %.pre189, %TypeChecker_error.exit159.loopexit ], [ %167, %if.entry53 ]
  %177 = phi ptr [ %174, %TypeChecker_error.exit159.loopexit ], [ %.pre180, %if.entry53 ]
  %178 = phi i64 [ %.pre181, %TypeChecker_error.exit159.loopexit ], [ %166, %if.entry53 ]
  store i64 %.pre-phi190, ptr %memberidx.i.i156, align 4
  %179 = getelementptr inbounds ptr, ptr %177, i64 %178
  store ptr %165, ptr %179, align 8
  br label %common.ret

ifend55:                                          ; preds = %if.entry48
  %memberidx61 = getelementptr inbounds %Expression, ptr %1, i64 0, i32 3
  store ptr %20, ptr %memberidx61, align 8
  br i1 %7, label %if.entry62, label %common.ret

if.entry62:                                       ; preds = %ifend55
  %180 = tail call ptr @malloc(i32 9)
  store i64 6, ptr %180, align 4
  %memberidx.i160 = getelementptr inbounds %IntType, ptr %180, i64 0, i32 1
  store i1 true, ptr %memberidx.i160, align 1
  store ptr %180, ptr %memberidx61, align 8
  br label %common.ret
}

define internal fastcc noalias ptr @dump_type(ptr nocapture readonly %0, i1 %1) unnamed_addr {
  %3 = load i64, ptr %0, align 4
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %if.entry, label %ifend

common.ret:                                       ; preds = %true_block, %false_block, %ifend55, %if.entry53, %if.entry49, %if.entry45, %if.entry41, %if.entry37, %if.entry33, %if.entry29, %if.entry25, %if.entry21, %if.entry17, %if.entry4, %if.entry
  %common.ret.op = phi ptr [ %6, %if.entry ], [ %13, %if.entry4 ], [ %30, %if.entry17 ], [ %38, %if.entry21 ], [ %46, %if.entry25 ], [ %54, %if.entry29 ], [ %62, %if.entry33 ], [ %70, %if.entry37 ], [ %72, %if.entry41 ], [ %74, %if.entry45 ], [ %76, %if.entry49 ], [ %78, %if.entry53 ], [ %80, %ifend55 ], [ %20, %true_block ], [ %22, %false_block ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %2
  %5 = tail call ptr @malloc(i32 4)
  store i32 1819242338, ptr %5, align 8
  %6 = tail call ptr @malloc(i32 24)
  store ptr %5, ptr %6, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %6, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %6, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i, align 4
  br label %common.ret

ifend:                                            ; preds = %2
  %7 = add i64 %3, -1
  %8 = icmp ult i64 %7, 7
  br i1 %8, label %if.entry1, label %ifend3

if.entry1:                                        ; preds = %ifend
  br i1 %1, label %if.entry4, label %ifend6

ifend3:                                           ; preds = %ifend11, %ifend
  %9 = phi i64 [ %18, %ifend11 ], [ %3, %ifend ]
  switch i64 %9, label %ifend55 [
    i64 8, label %if.entry41
    i64 9, label %if.entry45
    i64 10, label %if.entry49
    i64 17, label %if.entry53
  ]

if.entry4:                                        ; preds = %if.entry1
  %10 = alloca ptr, align 8
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %10, ptr nonnull @87, i64 64)
  %12 = load ptr, ptr %10, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  store i64 %11, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx2.i, align 4
  br label %common.ret

ifend6:                                           ; preds = %if.entry1
  %memberidx7 = getelementptr inbounds %IntType, ptr %0, i64 0, i32 1
  %14 = load i1, ptr %memberidx7, align 1
  %15 = icmp eq i64 %3, 6
  br i1 %15, label %if.entry9, label %ifend11

if.entry9:                                        ; preds = %ifend6
  br i1 %14, label %true_block, label %false_block

ifend11:                                          ; preds = %ifend6
  %16 = tail call ptr @malloc(i32 1)
  %. = select i1 %14, i8 105, i8 117
  store i8 %., ptr %16, align 8
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  %memberidx1.i.i83 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i83, align 4
  %memberidx2.i.i84 = getelementptr inbounds %String, ptr %17, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i84, align 4
  %18 = load i64, ptr %0, align 4
  switch i64 %18, label %ifend3 [
    i64 1, label %if.entry17
    i64 2, label %if.entry21
    i64 3, label %if.entry25
    i64 4, label %if.entry29
    i64 5, label %if.entry33
    i64 7, label %if.entry37
  ]

true_block:                                       ; preds = %if.entry9
  %19 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %19, ptr noundef nonnull align 8 dereferenceable(3) @88, i64 3, i1 false)
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  %memberidx1.i.i77 = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i77, align 4
  %memberidx2.i.i78 = getelementptr inbounds %String, ptr %20, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i78, align 4
  br label %common.ret

false_block:                                      ; preds = %if.entry9
  %21 = tail call ptr @malloc(i32 4)
  store i32 1953393013, ptr %21, align 8
  %22 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %22, align 8
  %memberidx1.i.i79 = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i79, align 4
  %memberidx2.i.i80 = getelementptr inbounds %String, ptr %22, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i80, align 4
  br label %common.ret

if.entry17:                                       ; preds = %ifend11
  %memberidx.i = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %23 = tail call ptr @malloc(i32 2)
  %24 = load ptr, ptr %17, align 8
  %25 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %23, ptr align 8 %24, i64 %25, i1 false)
  %26 = getelementptr inbounds i8, ptr %23, i64 %25
  store i8 0, ptr %26, align 1
  %27 = alloca ptr, align 8
  %28 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %27, ptr nonnull @89, ptr %23)
  %29 = load ptr, ptr %27, align 8
  %30 = tail call ptr @malloc(i32 24)
  store ptr %29, ptr %30, align 8
  %memberidx1.i85 = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  store i64 %28, ptr %memberidx1.i85, align 4
  %memberidx2.i86 = getelementptr inbounds %String, ptr %30, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i86, align 4
  tail call void @free(ptr %23)
  br label %common.ret

if.entry21:                                       ; preds = %ifend11
  %memberidx.i87 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %31 = tail call ptr @malloc(i32 2)
  %32 = load ptr, ptr %17, align 8
  %33 = load i64, ptr %memberidx.i87, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %31, ptr align 8 %32, i64 %33, i1 false)
  %34 = getelementptr inbounds i8, ptr %31, i64 %33
  store i8 0, ptr %34, align 1
  %35 = alloca ptr, align 8
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %35, ptr nonnull @90, ptr %31)
  %37 = load ptr, ptr %35, align 8
  %38 = tail call ptr @malloc(i32 24)
  store ptr %37, ptr %38, align 8
  %memberidx1.i88 = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  store i64 %36, ptr %memberidx1.i88, align 4
  %memberidx2.i89 = getelementptr inbounds %String, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx2.i89, align 4
  tail call void @free(ptr %31)
  br label %common.ret

if.entry25:                                       ; preds = %ifend11
  %memberidx.i90 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %39 = tail call ptr @malloc(i32 2)
  %40 = load ptr, ptr %17, align 8
  %41 = load i64, ptr %memberidx.i90, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %40, i64 %41, i1 false)
  %42 = getelementptr inbounds i8, ptr %39, i64 %41
  store i8 0, ptr %42, align 1
  %43 = alloca ptr, align 8
  %44 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %43, ptr nonnull @91, ptr %39)
  %45 = load ptr, ptr %43, align 8
  %46 = tail call ptr @malloc(i32 24)
  store ptr %45, ptr %46, align 8
  %memberidx1.i91 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  store i64 %44, ptr %memberidx1.i91, align 4
  %memberidx2.i92 = getelementptr inbounds %String, ptr %46, i64 0, i32 2
  store i64 %44, ptr %memberidx2.i92, align 4
  tail call void @free(ptr %39)
  br label %common.ret

if.entry29:                                       ; preds = %ifend11
  %memberidx.i93 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %47 = tail call ptr @malloc(i32 2)
  %48 = load ptr, ptr %17, align 8
  %49 = load i64, ptr %memberidx.i93, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %48, i64 %49, i1 false)
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  store i8 0, ptr %50, align 1
  %51 = alloca ptr, align 8
  %52 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %51, ptr nonnull @92, ptr %47)
  %53 = load ptr, ptr %51, align 8
  %54 = tail call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i94 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 %52, ptr %memberidx1.i94, align 4
  %memberidx2.i95 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 %52, ptr %memberidx2.i95, align 4
  tail call void @free(ptr %47)
  br label %common.ret

if.entry33:                                       ; preds = %ifend11
  %memberidx.i96 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %55 = tail call ptr @malloc(i32 2)
  %56 = load ptr, ptr %17, align 8
  %57 = load i64, ptr %memberidx.i96, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %55, ptr align 8 %56, i64 %57, i1 false)
  %58 = getelementptr inbounds i8, ptr %55, i64 %57
  store i8 0, ptr %58, align 1
  %59 = alloca ptr, align 8
  %60 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %59, ptr nonnull @93, ptr %55)
  %61 = load ptr, ptr %59, align 8
  %62 = tail call ptr @malloc(i32 24)
  store ptr %61, ptr %62, align 8
  %memberidx1.i97 = getelementptr inbounds %String, ptr %62, i64 0, i32 1
  store i64 %60, ptr %memberidx1.i97, align 4
  %memberidx2.i98 = getelementptr inbounds %String, ptr %62, i64 0, i32 2
  store i64 %60, ptr %memberidx2.i98, align 4
  tail call void @free(ptr %55)
  br label %common.ret

if.entry37:                                       ; preds = %ifend11
  %memberidx.i99 = getelementptr inbounds %String, ptr %17, i64 0, i32 1
  %63 = tail call ptr @malloc(i32 2)
  %64 = load ptr, ptr %17, align 8
  %65 = load i64, ptr %memberidx.i99, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %63, ptr align 8 %64, i64 %65, i1 false)
  %66 = getelementptr inbounds i8, ptr %63, i64 %65
  store i8 0, ptr %66, align 1
  %67 = alloca ptr, align 8
  %68 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %67, ptr nonnull @94, ptr %63)
  %69 = load ptr, ptr %67, align 8
  %70 = tail call ptr @malloc(i32 24)
  store ptr %69, ptr %70, align 8
  %memberidx1.i100 = getelementptr inbounds %String, ptr %70, i64 0, i32 1
  store i64 %68, ptr %memberidx1.i100, align 4
  %memberidx2.i101 = getelementptr inbounds %String, ptr %70, i64 0, i32 2
  store i64 %68, ptr %memberidx2.i101, align 4
  tail call void @free(ptr %63)
  br label %common.ret

if.entry41:                                       ; preds = %ifend3
  %71 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %71, ptr noundef nonnull align 8 dereferenceable(3) @95, i64 3, i1 false)
  %72 = tail call ptr @malloc(i32 24)
  store ptr %71, ptr %72, align 8
  %memberidx1.i.i104 = getelementptr inbounds %String, ptr %72, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i104, align 4
  %memberidx2.i.i105 = getelementptr inbounds %String, ptr %72, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i105, align 4
  br label %common.ret

if.entry45:                                       ; preds = %ifend3
  %73 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %73, ptr noundef nonnull align 8 dereferenceable(3) @96, i64 3, i1 false)
  %74 = tail call ptr @malloc(i32 24)
  store ptr %73, ptr %74, align 8
  %memberidx1.i.i106 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  store i64 3, ptr %memberidx1.i.i106, align 4
  %memberidx2.i.i107 = getelementptr inbounds %String, ptr %74, i64 0, i32 2
  store i64 3, ptr %memberidx2.i.i107, align 4
  br label %common.ret

if.entry49:                                       ; preds = %ifend3
  %75 = tail call ptr @malloc(i32 4)
  store i32 1684631414, ptr %75, align 8
  %76 = tail call ptr @malloc(i32 24)
  store ptr %75, ptr %76, align 8
  %memberidx1.i.i108 = getelementptr inbounds %String, ptr %76, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i108, align 4
  %memberidx2.i.i109 = getelementptr inbounds %String, ptr %76, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i109, align 4
  br label %common.ret

if.entry53:                                       ; preds = %ifend3
  %77 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %77, ptr noundef nonnull align 8 dereferenceable(6) @97, i64 6, i1 false)
  %78 = tail call ptr @malloc(i32 24)
  store ptr %77, ptr %78, align 8
  %memberidx1.i.i102 = getelementptr inbounds %String, ptr %78, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i102, align 4
  %memberidx2.i.i103 = getelementptr inbounds %String, ptr %78, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i103, align 4
  br label %common.ret

ifend55:                                          ; preds = %ifend3
  %79 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %79, ptr noundef nonnull align 8 dereferenceable(7) @98, i64 7, i1 false)
  %80 = tail call ptr @malloc(i32 24)
  store ptr %79, ptr %80, align 8
  %memberidx1.i.i75 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i75, align 4
  %memberidx2.i.i76 = getelementptr inbounds %String, ptr %80, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i76, align 4
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind readonly
define internal fastcc i64 @evaluate_const_int_expression(ptr %0, ptr nocapture readonly %1) unnamed_addr #8 {
  br label %tailrecurse.outer

tailrecurse.outer:                                ; preds = %if.entry12, %2
  %accumulator.tr.ph = phi i64 [ %11, %if.entry12 ], [ 0, %2 ]
  %.tr157.ph = phi ptr [ %10, %if.entry12 ], [ %1, %2 ]
  br label %tailrecurse

tailrecurse:                                      ; preds = %tailrecurse.outer, %if.entry86
  %.tr157 = phi ptr [ %74, %if.entry86 ], [ %.tr157.ph, %tailrecurse.outer ]
  %memberidx = getelementptr inbounds %Expression, ptr %.tr157, i64 0, i32 2
  %3 = load i64, ptr %memberidx, align 4
  switch i64 %3, label %common.ret [
    i64 0, label %if.entry
    i64 1, label %if.entry3
    i64 9, label %if.entry8
    i64 10, label %if.entry72
    i64 8, label %if.entry86
  ]

common.ret169:                                    ; preds = %if.entry81, %if.entry76, %if.entry66, %if.entry60, %if.entry54, %if.entry48, %if.entry42, %if.entry36, %if.entry30, %if.entry24, %if.entry18, %common.ret
  %common.ret169.op = phi i64 [ %accumulator.ret.tr, %common.ret ], [ %accumulator.ret.tr158, %if.entry18 ], [ %accumulator.ret.tr159, %if.entry24 ], [ %accumulator.ret.tr160, %if.entry30 ], [ %accumulator.ret.tr161, %if.entry36 ], [ %accumulator.ret.tr162, %if.entry42 ], [ %accumulator.ret.tr163, %if.entry48 ], [ %accumulator.ret.tr164, %if.entry54 ], [ %accumulator.ret.tr165, %if.entry60 ], [ %accumulator.ret.tr166, %if.entry66 ], [ %accumulator.ret.tr167, %if.entry76 ], [ %accumulator.ret.tr168, %if.entry81 ]
  ret i64 %common.ret169.op

common.ret:                                       ; preds = %if.entry8, %tailrecurse, %if.entry72, %if.entry3, %if.entry
  %common.ret.op = phi i64 [ %4, %if.entry ], [ %6, %if.entry3 ], [ -99999999, %if.entry72 ], [ -99999999, %tailrecurse ], [ -99999999, %if.entry8 ]
  %accumulator.ret.tr = add nsw i64 %common.ret.op, %accumulator.tr.ph
  br label %common.ret169

if.entry:                                         ; preds = %tailrecurse
  %memberidx1 = getelementptr inbounds %IntExpression, ptr %.tr157, i64 0, i32 4
  %4 = load i64, ptr %memberidx1, align 4
  br label %common.ret

if.entry3:                                        ; preds = %tailrecurse
  %memberidx6 = getelementptr inbounds %FloatExpression, ptr %.tr157, i64 0, i32 4
  %5 = load double, ptr %memberidx6, align 8
  %6 = fptosi double %5 to i64
  br label %common.ret

if.entry8:                                        ; preds = %tailrecurse
  %memberidx11 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 5
  %7 = load i64, ptr %memberidx11, align 4
  switch i64 %7, label %common.ret [
    i64 1, label %if.entry12
    i64 2, label %if.entry18
    i64 3, label %if.entry24
    i64 4, label %if.entry30
    i64 5, label %if.entry36
    i64 13, label %if.entry42
    i64 14, label %if.entry48
    i64 15, label %if.entry54
    i64 16, label %if.entry60
    i64 17, label %if.entry66
  ]

if.entry12:                                       ; preds = %if.entry8
  %memberidx15 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %8 = load ptr, ptr %memberidx15, align 8
  %9 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %8)
  %memberidx16 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %10 = load ptr, ptr %memberidx16, align 8
  %11 = add nsw i64 %9, %accumulator.tr.ph
  br label %tailrecurse.outer

if.entry18:                                       ; preds = %if.entry8
  %memberidx21 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %12 = load ptr, ptr %memberidx21, align 8
  %13 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %12)
  %memberidx22 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %14 = load ptr, ptr %memberidx22, align 8
  %15 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %14)
  %16 = add i64 %13, %accumulator.tr.ph
  %accumulator.ret.tr158 = sub i64 %16, %15
  br label %common.ret169

if.entry24:                                       ; preds = %if.entry8
  %memberidx27 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %17 = load ptr, ptr %memberidx27, align 8
  %18 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %17)
  %memberidx28 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %19 = load ptr, ptr %memberidx28, align 8
  %20 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %19)
  %21 = mul nsw i64 %20, %18
  %accumulator.ret.tr159 = add nsw i64 %21, %accumulator.tr.ph
  br label %common.ret169

if.entry30:                                       ; preds = %if.entry8
  %memberidx33 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %22 = load ptr, ptr %memberidx33, align 8
  %23 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %22)
  %memberidx34 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %24 = load ptr, ptr %memberidx34, align 8
  %25 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %24)
  %26 = sdiv i64 %23, %25
  %accumulator.ret.tr160 = add nsw i64 %26, %accumulator.tr.ph
  br label %common.ret169

if.entry36:                                       ; preds = %if.entry8
  %memberidx39 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %27 = load ptr, ptr %memberidx39, align 8
  %28 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %27)
  %memberidx40 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %29 = load ptr, ptr %memberidx40, align 8
  %30 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %29)
  %31 = srem i64 %28, %30
  %accumulator.ret.tr161 = add nsw i64 %31, %accumulator.tr.ph
  br label %common.ret169

if.entry42:                                       ; preds = %if.entry8
  %memberidx45 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %32 = load ptr, ptr %memberidx45, align 8
  %33 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %32)
  %memberidx46 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %34 = load ptr, ptr %memberidx46, align 8
  %35 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %34)
  %36 = shl i64 %33, %35
  %accumulator.ret.tr162 = add nsw i64 %36, %accumulator.tr.ph
  br label %common.ret169

if.entry48:                                       ; preds = %if.entry8
  %memberidx51 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %37 = load ptr, ptr %memberidx51, align 8
  %38 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %37)
  %memberidx52 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %39 = load ptr, ptr %memberidx52, align 8
  %40 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %39)
  %41 = lshr i64 %38, %40
  %accumulator.ret.tr163 = add nsw i64 %41, %accumulator.tr.ph
  br label %common.ret169

if.entry54:                                       ; preds = %if.entry8
  %memberidx57 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %42 = load ptr, ptr %memberidx57, align 8
  %43 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %42)
  %memberidx58 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %44 = load ptr, ptr %memberidx58, align 8
  %45 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %44)
  %46 = or i64 %45, %43
  %accumulator.ret.tr164 = add nsw i64 %46, %accumulator.tr.ph
  br label %common.ret169

if.entry60:                                       ; preds = %if.entry8
  %memberidx63 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %47 = load ptr, ptr %memberidx63, align 8
  %48 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %47)
  %memberidx64 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %49 = load ptr, ptr %memberidx64, align 8
  %50 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %49)
  %51 = and i64 %50, %48
  %accumulator.ret.tr165 = add nsw i64 %51, %accumulator.tr.ph
  br label %common.ret169

if.entry66:                                       ; preds = %if.entry8
  %memberidx69 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 4
  %52 = load ptr, ptr %memberidx69, align 8
  %53 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %52)
  %memberidx70 = getelementptr inbounds %BinaryExpression, ptr %.tr157, i64 0, i32 6
  %54 = load ptr, ptr %memberidx70, align 8
  %55 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %54)
  %56 = xor i64 %55, %53
  %accumulator.ret.tr166 = add nsw i64 %56, %accumulator.tr.ph
  br label %common.ret169

if.entry72:                                       ; preds = %tailrecurse
  %memberidx75 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 4
  %57 = load i64, ptr %memberidx75, align 4
  switch i64 %57, label %common.ret [
    i64 6, label %if.entry76
    i64 7, label %if.entry81
  ]

if.entry76:                                       ; preds = %if.entry72
  %memberidx79 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 5
  %58 = load ptr, ptr %memberidx79, align 8
  %59 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %58)
  %accumulator.ret.tr167 = sub i64 %accumulator.tr.ph, %59
  br label %common.ret169

if.entry81:                                       ; preds = %if.entry72
  %memberidx84 = getelementptr inbounds %UnaryExpression, ptr %.tr157, i64 0, i32 5
  %60 = load ptr, ptr %memberidx84, align 8
  %61 = tail call fastcc i64 @evaluate_const_int_expression(ptr %0, ptr %60)
  %62 = xor i64 %61, -1
  %accumulator.ret.tr168 = add nsw i64 %accumulator.tr.ph, %62
  br label %common.ret169

if.entry86:                                       ; preds = %tailrecurse
  %memberidx89 = getelementptr inbounds %VarAccessExpression, ptr %.tr157, i64 0, i32 4
  %63 = load ptr, ptr %memberidx89, align 8
  %64 = load ptr, ptr %0, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx1.i, align 4
  %66 = load ptr, ptr %64, align 8
  %67 = getelementptr inbounds ptr, ptr %66, i64 %65
  %68 = load ptr, ptr %67, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %68, i64 0, i32 2
  %69 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %63, i64 0, i32 2
  %70 = load i64, ptr %memberidx3.i, align 4
  %71 = load ptr, ptr %69, align 8
  %72 = getelementptr inbounds ptr, ptr %71, i64 %70
  %73 = load ptr, ptr %72, align 8
  %memberidx90 = getelementptr inbounds %Const, ptr %73, i64 0, i32 2
  %74 = load ptr, ptr %memberidx90, align 8
  br label %tailrecurse
}

define internal fastcc i1 @is_operator_overload_name(ptr nocapture readonly %0) unnamed_addr {
  %2 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %2, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %3, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %3, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %4 = load i64, ptr %memberidx.i, align 4
  %.not.i = icmp eq i64 %4, 6
  br i1 %.not.i, label %ifend.i, label %ifend

ifend.i:                                          ; preds = %1
  %5 = load ptr, ptr %0, align 8
  %6 = tail call i64 @memcmp(ptr %5, ptr nonnull %2, i64 6)
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %common.ret, label %ifend

common.ret:                                       ; preds = %ifend.i359, %ifend87, %ifend.i351, %ifend.i343, %ifend.i335, %ifend.i327, %ifend.i319, %ifend.i311, %ifend.i303, %ifend.i295, %ifend.i287, %ifend.i279, %ifend.i271, %ifend.i263, %ifend.i255, %ifend.i247, %ifend.i239, %ifend.i231, %ifend.i223, %ifend.i215, %ifend.i207, %ifend.i199, %ifend.i191, %ifend.i183, %ifend.i175, %ifend.i167, %ifend.i159, %ifend.i151, %ifend.i143, %ifend.i135, %ifend.i127, %ifend.i
  %common.ret.op = phi i1 [ true, %ifend.i ], [ true, %ifend.i127 ], [ true, %ifend.i135 ], [ true, %ifend.i143 ], [ true, %ifend.i151 ], [ true, %ifend.i159 ], [ true, %ifend.i167 ], [ true, %ifend.i175 ], [ true, %ifend.i183 ], [ true, %ifend.i191 ], [ true, %ifend.i199 ], [ true, %ifend.i207 ], [ true, %ifend.i215 ], [ true, %ifend.i223 ], [ true, %ifend.i231 ], [ true, %ifend.i239 ], [ true, %ifend.i247 ], [ true, %ifend.i255 ], [ true, %ifend.i263 ], [ true, %ifend.i271 ], [ true, %ifend.i279 ], [ true, %ifend.i287 ], [ true, %ifend.i295 ], [ true, %ifend.i303 ], [ true, %ifend.i311 ], [ true, %ifend.i319 ], [ true, %ifend.i327 ], [ true, %ifend.i335 ], [ true, %ifend.i343 ], [ true, %ifend.i351 ], [ %187, %ifend.i359 ], [ false, %ifend87 ]
  ret i1 %common.ret.op

ifend:                                            ; preds = %1, %ifend.i
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @115, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  %memberidx1.i.i121 = getelementptr inbounds %String, ptr %9, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i121, align 4
  %memberidx2.i.i122 = getelementptr inbounds %String, ptr %9, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i122, align 4
  %10 = load i64, ptr %memberidx.i, align 4
  %.not.i125 = icmp eq i64 %10, 7
  br i1 %.not.i125, label %ifend.i127, label %ifend3

ifend.i127:                                       ; preds = %ifend
  %11 = load ptr, ptr %0, align 8
  %12 = tail call i64 @memcmp(ptr %11, ptr nonnull %8, i64 7)
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %common.ret, label %ifend3

ifend3:                                           ; preds = %ifend, %ifend.i127
  %14 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %14, ptr noundef nonnull align 8 dereferenceable(7) @116, i64 7, i1 false)
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  %memberidx1.i.i129 = getelementptr inbounds %String, ptr %15, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i129, align 4
  %memberidx2.i.i130 = getelementptr inbounds %String, ptr %15, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i130, align 4
  %16 = load i64, ptr %memberidx.i, align 4
  %.not.i133 = icmp eq i64 %16, 7
  br i1 %.not.i133, label %ifend.i135, label %ifend6

ifend.i135:                                       ; preds = %ifend3
  %17 = load ptr, ptr %0, align 8
  %18 = tail call i64 @memcmp(ptr %17, ptr nonnull %14, i64 7)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %common.ret, label %ifend6

ifend6:                                           ; preds = %ifend3, %ifend.i135
  %20 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %20, ptr noundef nonnull align 8 dereferenceable(7) @117, i64 7, i1 false)
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  %memberidx1.i.i137 = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i137, align 4
  %memberidx2.i.i138 = getelementptr inbounds %String, ptr %21, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i138, align 4
  %22 = load i64, ptr %memberidx.i, align 4
  %.not.i141 = icmp eq i64 %22, 7
  br i1 %.not.i141, label %ifend.i143, label %ifend9

ifend.i143:                                       ; preds = %ifend6
  %23 = load ptr, ptr %0, align 8
  %24 = tail call i64 @memcmp(ptr %23, ptr nonnull %20, i64 7)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %common.ret, label %ifend9

ifend9:                                           ; preds = %ifend6, %ifend.i143
  %26 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %26, ptr noundef nonnull align 8 dereferenceable(7) @118, i64 7, i1 false)
  %27 = tail call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i145 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i145, align 4
  %memberidx2.i.i146 = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i146, align 4
  %28 = load i64, ptr %memberidx.i, align 4
  %.not.i149 = icmp eq i64 %28, 7
  br i1 %.not.i149, label %ifend.i151, label %ifend12

ifend.i151:                                       ; preds = %ifend9
  %29 = load ptr, ptr %0, align 8
  %30 = tail call i64 @memcmp(ptr %29, ptr nonnull %26, i64 7)
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %common.ret, label %ifend12

ifend12:                                          ; preds = %ifend9, %ifend.i151
  %32 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %32, ptr noundef nonnull align 8 dereferenceable(6) @119, i64 6, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  %memberidx1.i.i153 = getelementptr inbounds %String, ptr %33, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i153, align 4
  %memberidx2.i.i154 = getelementptr inbounds %String, ptr %33, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i154, align 4
  %34 = load i64, ptr %memberidx.i, align 4
  %.not.i157 = icmp eq i64 %34, 6
  br i1 %.not.i157, label %ifend.i159, label %ifend15

ifend.i159:                                       ; preds = %ifend12
  %35 = load ptr, ptr %0, align 8
  %36 = tail call i64 @memcmp(ptr %35, ptr nonnull %32, i64 6)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %common.ret, label %ifend15

ifend15:                                          ; preds = %ifend12, %ifend.i159
  %38 = tail call ptr @malloc(i32 8)
  store i64 6872318640199393119, ptr %38, align 8
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i.i161 = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i161, align 4
  %memberidx2.i.i162 = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i162, align 4
  %40 = load i64, ptr %memberidx.i, align 4
  %.not.i165 = icmp eq i64 %40, 8
  br i1 %.not.i165, label %ifend.i167, label %ifend18

ifend.i167:                                       ; preds = %ifend15
  %41 = load ptr, ptr %0, align 8
  %42 = tail call i64 @memcmp(ptr %41, ptr nonnull %38, i64 8)
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %common.ret, label %ifend18

ifend18:                                          ; preds = %ifend15, %ifend.i167
  %44 = tail call ptr @malloc(i32 8)
  store i64 6872318631895850847, ptr %44, align 8
  %45 = tail call ptr @malloc(i32 24)
  store ptr %44, ptr %45, align 8
  %memberidx1.i.i169 = getelementptr inbounds %String, ptr %45, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i169, align 4
  %memberidx2.i.i170 = getelementptr inbounds %String, ptr %45, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i170, align 4
  %46 = load i64, ptr %memberidx.i, align 4
  %.not.i173 = icmp eq i64 %46, 8
  br i1 %.not.i173, label %ifend.i175, label %ifend21

ifend.i175:                                       ; preds = %ifend18
  %47 = load ptr, ptr %0, align 8
  %48 = tail call i64 @memcmp(ptr %47, ptr nonnull %44, i64 8)
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %common.ret, label %ifend21

ifend21:                                          ; preds = %ifend18, %ifend.i175
  %50 = tail call ptr @malloc(i32 8)
  store i64 6872318674845130591, ptr %50, align 8
  %51 = tail call ptr @malloc(i32 24)
  store ptr %50, ptr %51, align 8
  %memberidx1.i.i177 = getelementptr inbounds %String, ptr %51, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i177, align 4
  %memberidx2.i.i178 = getelementptr inbounds %String, ptr %51, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i178, align 4
  %52 = load i64, ptr %memberidx.i, align 4
  %.not.i181 = icmp eq i64 %52, 8
  br i1 %.not.i181, label %ifend.i183, label %ifend24

ifend.i183:                                       ; preds = %ifend21
  %53 = load ptr, ptr %0, align 8
  %54 = tail call i64 @memcmp(ptr %53, ptr nonnull %50, i64 8)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend21, %ifend.i183
  %56 = tail call ptr @malloc(i32 8)
  store i64 6872318717592887135, ptr %56, align 8
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  %memberidx1.i.i185 = getelementptr inbounds %String, ptr %57, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i185, align 4
  %memberidx2.i.i186 = getelementptr inbounds %String, ptr %57, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i186, align 4
  %58 = load i64, ptr %memberidx.i, align 4
  %.not.i189 = icmp eq i64 %58, 8
  br i1 %.not.i189, label %ifend.i191, label %ifend27

ifend.i191:                                       ; preds = %ifend24
  %59 = load ptr, ptr %0, align 8
  %60 = tail call i64 @memcmp(ptr %59, ptr nonnull %56, i64 8)
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %common.ret, label %ifend27

ifend27:                                          ; preds = %ifend24, %ifend.i191
  %62 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %62, ptr noundef nonnull align 8 dereferenceable(7) @120, i64 7, i1 false)
  %63 = tail call ptr @malloc(i32 24)
  store ptr %62, ptr %63, align 8
  %memberidx1.i.i193 = getelementptr inbounds %String, ptr %63, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i193, align 4
  %memberidx2.i.i194 = getelementptr inbounds %String, ptr %63, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i194, align 4
  %64 = load i64, ptr %memberidx.i, align 4
  %.not.i197 = icmp eq i64 %64, 7
  br i1 %.not.i197, label %ifend.i199, label %ifend30

ifend.i199:                                       ; preds = %ifend27
  %65 = load ptr, ptr %0, align 8
  %66 = tail call i64 @memcmp(ptr %65, ptr nonnull %62, i64 7)
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %common.ret, label %ifend30

ifend30:                                          ; preds = %ifend27, %ifend.i199
  %68 = tail call ptr @malloc(i32 8)
  store i64 6872318640367165279, ptr %68, align 8
  %69 = tail call ptr @malloc(i32 24)
  store ptr %68, ptr %69, align 8
  %memberidx1.i.i201 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i201, align 4
  %memberidx2.i.i202 = getelementptr inbounds %String, ptr %69, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i202, align 4
  %70 = load i64, ptr %memberidx.i, align 4
  %.not.i205 = icmp eq i64 %70, 8
  br i1 %.not.i205, label %ifend.i207, label %ifend33

ifend.i207:                                       ; preds = %ifend30
  %71 = load ptr, ptr %0, align 8
  %72 = tail call i64 @memcmp(ptr %71, ptr nonnull %68, i64 8)
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %common.ret, label %ifend33

ifend33:                                          ; preds = %ifend30, %ifend.i207
  %74 = tail call ptr @malloc(i32 8)
  store i64 6872318700514991967, ptr %74, align 8
  %75 = tail call ptr @malloc(i32 24)
  store ptr %74, ptr %75, align 8
  %memberidx1.i.i209 = getelementptr inbounds %String, ptr %75, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i209, align 4
  %memberidx2.i.i210 = getelementptr inbounds %String, ptr %75, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i210, align 4
  %76 = load i64, ptr %memberidx.i, align 4
  %.not.i213 = icmp eq i64 %76, 8
  br i1 %.not.i213, label %ifend.i215, label %ifend36

ifend.i215:                                       ; preds = %ifend33
  %77 = load ptr, ptr %0, align 8
  %78 = tail call i64 @memcmp(ptr %77, ptr nonnull %74, i64 8)
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %common.ret, label %ifend36

ifend36:                                          ; preds = %ifend33, %ifend.i215
  %80 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %80, ptr noundef nonnull align 8 dereferenceable(11) @121, i64 11, i1 false)
  %81 = tail call ptr @malloc(i32 24)
  store ptr %80, ptr %81, align 8
  %memberidx1.i.i217 = getelementptr inbounds %String, ptr %81, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i217, align 4
  %memberidx2.i.i218 = getelementptr inbounds %String, ptr %81, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i218, align 4
  %82 = load i64, ptr %memberidx.i, align 4
  %.not.i221 = icmp eq i64 %82, 11
  br i1 %.not.i221, label %ifend.i223, label %ifend39

ifend.i223:                                       ; preds = %ifend36
  %83 = load ptr, ptr %0, align 8
  %84 = tail call i64 @memcmp(ptr %83, ptr nonnull %80, i64 11)
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %common.ret, label %ifend39

ifend39:                                          ; preds = %ifend36, %ifend.i223
  %86 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %86, ptr noundef nonnull align 8 dereferenceable(11) @122, i64 11, i1 false)
  %87 = tail call ptr @malloc(i32 24)
  store ptr %86, ptr %87, align 8
  %memberidx1.i.i225 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i225, align 4
  %memberidx2.i.i226 = getelementptr inbounds %String, ptr %87, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i226, align 4
  %88 = load i64, ptr %memberidx.i, align 4
  %.not.i229 = icmp eq i64 %88, 11
  br i1 %.not.i229, label %ifend.i231, label %ifend42

ifend.i231:                                       ; preds = %ifend39
  %89 = load ptr, ptr %0, align 8
  %90 = tail call i64 @memcmp(ptr %89, ptr nonnull %86, i64 11)
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %common.ret, label %ifend42

ifend42:                                          ; preds = %ifend39, %ifend.i231
  %92 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %92, ptr noundef nonnull align 8 dereferenceable(6) @123, i64 6, i1 false)
  %93 = tail call ptr @malloc(i32 24)
  store ptr %92, ptr %93, align 8
  %memberidx1.i.i233 = getelementptr inbounds %String, ptr %93, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i233, align 4
  %memberidx2.i.i234 = getelementptr inbounds %String, ptr %93, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i234, align 4
  %94 = load i64, ptr %memberidx.i, align 4
  %.not.i237 = icmp eq i64 %94, 6
  br i1 %.not.i237, label %ifend.i239, label %ifend45

ifend.i239:                                       ; preds = %ifend42
  %95 = load ptr, ptr %0, align 8
  %96 = tail call i64 @memcmp(ptr %95, ptr nonnull %92, i64 6)
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %common.ret, label %ifend45

ifend45:                                          ; preds = %ifend42, %ifend.i239
  %98 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %98, ptr noundef nonnull align 8 dereferenceable(6) @124, i64 6, i1 false)
  %99 = tail call ptr @malloc(i32 24)
  store ptr %98, ptr %99, align 8
  %memberidx1.i.i241 = getelementptr inbounds %String, ptr %99, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i241, align 4
  %memberidx2.i.i242 = getelementptr inbounds %String, ptr %99, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i242, align 4
  %100 = load i64, ptr %memberidx.i, align 4
  %.not.i245 = icmp eq i64 %100, 6
  br i1 %.not.i245, label %ifend.i247, label %ifend48

ifend.i247:                                       ; preds = %ifend45
  %101 = load ptr, ptr %0, align 8
  %102 = tail call i64 @memcmp(ptr %101, ptr nonnull %98, i64 6)
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %common.ret, label %ifend48

ifend48:                                          ; preds = %ifend45, %ifend.i247
  %104 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %104, ptr noundef nonnull align 8 dereferenceable(7) @125, i64 7, i1 false)
  %105 = tail call ptr @malloc(i32 24)
  store ptr %104, ptr %105, align 8
  %memberidx1.i.i249 = getelementptr inbounds %String, ptr %105, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i249, align 4
  %memberidx2.i.i250 = getelementptr inbounds %String, ptr %105, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i250, align 4
  %106 = load i64, ptr %memberidx.i, align 4
  %.not.i253 = icmp eq i64 %106, 7
  br i1 %.not.i253, label %ifend.i255, label %ifend51

ifend.i255:                                       ; preds = %ifend48
  %107 = load ptr, ptr %0, align 8
  %108 = tail call i64 @memcmp(ptr %107, ptr nonnull %104, i64 7)
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %common.ret, label %ifend51

ifend51:                                          ; preds = %ifend48, %ifend.i255
  %110 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %110, ptr noundef nonnull align 8 dereferenceable(7) @126, i64 7, i1 false)
  %111 = tail call ptr @malloc(i32 24)
  store ptr %110, ptr %111, align 8
  %memberidx1.i.i257 = getelementptr inbounds %String, ptr %111, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i257, align 4
  %memberidx2.i.i258 = getelementptr inbounds %String, ptr %111, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i258, align 4
  %112 = load i64, ptr %memberidx.i, align 4
  %.not.i261 = icmp eq i64 %112, 7
  br i1 %.not.i261, label %ifend.i263, label %ifend54

ifend.i263:                                       ; preds = %ifend51
  %113 = load ptr, ptr %0, align 8
  %114 = tail call i64 @memcmp(ptr %113, ptr nonnull %110, i64 7)
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %common.ret, label %ifend54

ifend54:                                          ; preds = %ifend51, %ifend.i263
  %116 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %116, ptr noundef nonnull align 8 dereferenceable(6) @127, i64 6, i1 false)
  %117 = tail call ptr @malloc(i32 24)
  store ptr %116, ptr %117, align 8
  %memberidx1.i.i265 = getelementptr inbounds %String, ptr %117, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i265, align 4
  %memberidx2.i.i266 = getelementptr inbounds %String, ptr %117, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i266, align 4
  %118 = load i64, ptr %memberidx.i, align 4
  %.not.i269 = icmp eq i64 %118, 6
  br i1 %.not.i269, label %ifend.i271, label %ifend57

ifend.i271:                                       ; preds = %ifend54
  %119 = load ptr, ptr %0, align 8
  %120 = tail call i64 @memcmp(ptr %119, ptr nonnull %116, i64 6)
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %common.ret, label %ifend57

ifend57:                                          ; preds = %ifend54, %ifend.i271
  %122 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %122, ptr noundef nonnull align 8 dereferenceable(6) @128, i64 6, i1 false)
  %123 = tail call ptr @malloc(i32 24)
  store ptr %122, ptr %123, align 8
  %memberidx1.i.i273 = getelementptr inbounds %String, ptr %123, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i273, align 4
  %memberidx2.i.i274 = getelementptr inbounds %String, ptr %123, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i274, align 4
  %124 = load i64, ptr %memberidx.i, align 4
  %.not.i277 = icmp eq i64 %124, 6
  br i1 %.not.i277, label %ifend.i279, label %ifend60

ifend.i279:                                       ; preds = %ifend57
  %125 = load ptr, ptr %0, align 8
  %126 = tail call i64 @memcmp(ptr %125, ptr nonnull %122, i64 6)
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %common.ret, label %ifend60

ifend60:                                          ; preds = %ifend57, %ifend.i279
  %128 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %128, ptr noundef nonnull align 8 dereferenceable(6) @129, i64 6, i1 false)
  %129 = tail call ptr @malloc(i32 24)
  store ptr %128, ptr %129, align 8
  %memberidx1.i.i281 = getelementptr inbounds %String, ptr %129, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i281, align 4
  %memberidx2.i.i282 = getelementptr inbounds %String, ptr %129, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i282, align 4
  %130 = load i64, ptr %memberidx.i, align 4
  %.not.i285 = icmp eq i64 %130, 6
  br i1 %.not.i285, label %ifend.i287, label %ifend63

ifend.i287:                                       ; preds = %ifend60
  %131 = load ptr, ptr %0, align 8
  %132 = tail call i64 @memcmp(ptr %131, ptr nonnull %128, i64 6)
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %common.ret, label %ifend63

ifend63:                                          ; preds = %ifend60, %ifend.i287
  %134 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %134, ptr noundef nonnull align 8 dereferenceable(6) @130, i64 6, i1 false)
  %135 = tail call ptr @malloc(i32 24)
  store ptr %134, ptr %135, align 8
  %memberidx1.i.i289 = getelementptr inbounds %String, ptr %135, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i289, align 4
  %memberidx2.i.i290 = getelementptr inbounds %String, ptr %135, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i290, align 4
  %136 = load i64, ptr %memberidx.i, align 4
  %.not.i293 = icmp eq i64 %136, 6
  br i1 %.not.i293, label %ifend.i295, label %ifend66

ifend.i295:                                       ; preds = %ifend63
  %137 = load ptr, ptr %0, align 8
  %138 = tail call i64 @memcmp(ptr %137, ptr nonnull %134, i64 6)
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %common.ret, label %ifend66

ifend66:                                          ; preds = %ifend63, %ifend.i295
  %140 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %140, ptr noundef nonnull align 8 dereferenceable(6) @131, i64 6, i1 false)
  %141 = tail call ptr @malloc(i32 24)
  store ptr %140, ptr %141, align 8
  %memberidx1.i.i297 = getelementptr inbounds %String, ptr %141, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i297, align 4
  %memberidx2.i.i298 = getelementptr inbounds %String, ptr %141, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i298, align 4
  %142 = load i64, ptr %memberidx.i, align 4
  %.not.i301 = icmp eq i64 %142, 6
  br i1 %.not.i301, label %ifend.i303, label %ifend69

ifend.i303:                                       ; preds = %ifend66
  %143 = load ptr, ptr %0, align 8
  %144 = tail call i64 @memcmp(ptr %143, ptr nonnull %140, i64 6)
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %common.ret, label %ifend69

ifend69:                                          ; preds = %ifend66, %ifend.i303
  %146 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %146, ptr noundef nonnull align 8 dereferenceable(6) @132, i64 6, i1 false)
  %147 = tail call ptr @malloc(i32 24)
  store ptr %146, ptr %147, align 8
  %memberidx1.i.i305 = getelementptr inbounds %String, ptr %147, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i305, align 4
  %memberidx2.i.i306 = getelementptr inbounds %String, ptr %147, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i306, align 4
  %148 = load i64, ptr %memberidx.i, align 4
  %.not.i309 = icmp eq i64 %148, 6
  br i1 %.not.i309, label %ifend.i311, label %ifend72

ifend.i311:                                       ; preds = %ifend69
  %149 = load ptr, ptr %0, align 8
  %150 = tail call i64 @memcmp(ptr %149, ptr nonnull %146, i64 6)
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %common.ret, label %ifend72

ifend72:                                          ; preds = %ifend69, %ifend.i311
  %152 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %152, ptr noundef nonnull align 8 dereferenceable(7) @133, i64 7, i1 false)
  %153 = tail call ptr @malloc(i32 24)
  store ptr %152, ptr %153, align 8
  %memberidx1.i.i313 = getelementptr inbounds %String, ptr %153, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i313, align 4
  %memberidx2.i.i314 = getelementptr inbounds %String, ptr %153, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i314, align 4
  %154 = load i64, ptr %memberidx.i, align 4
  %.not.i317 = icmp eq i64 %154, 7
  br i1 %.not.i317, label %ifend.i319, label %ifend75

ifend.i319:                                       ; preds = %ifend72
  %155 = load ptr, ptr %0, align 8
  %156 = tail call i64 @memcmp(ptr %155, ptr nonnull %152, i64 7)
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %common.ret, label %ifend75

ifend75:                                          ; preds = %ifend72, %ifend.i319
  %158 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %158, ptr noundef nonnull align 8 dereferenceable(7) @134, i64 7, i1 false)
  %159 = tail call ptr @malloc(i32 24)
  store ptr %158, ptr %159, align 8
  %memberidx1.i.i321 = getelementptr inbounds %String, ptr %159, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i321, align 4
  %memberidx2.i.i322 = getelementptr inbounds %String, ptr %159, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i322, align 4
  %160 = load i64, ptr %memberidx.i, align 4
  %.not.i325 = icmp eq i64 %160, 7
  br i1 %.not.i325, label %ifend.i327, label %ifend78

ifend.i327:                                       ; preds = %ifend75
  %161 = load ptr, ptr %0, align 8
  %162 = tail call i64 @memcmp(ptr %161, ptr nonnull %158, i64 7)
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %common.ret, label %ifend78

ifend78:                                          ; preds = %ifend75, %ifend.i327
  %164 = tail call ptr @malloc(i32 8)
  store i64 6872318721989304159, ptr %164, align 8
  %165 = tail call ptr @malloc(i32 24)
  store ptr %164, ptr %165, align 8
  %memberidx1.i.i329 = getelementptr inbounds %String, ptr %165, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i329, align 4
  %memberidx2.i.i330 = getelementptr inbounds %String, ptr %165, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i330, align 4
  %166 = load i64, ptr %memberidx.i, align 4
  %.not.i333 = icmp eq i64 %166, 8
  br i1 %.not.i333, label %ifend.i335, label %ifend81

ifend.i335:                                       ; preds = %ifend78
  %167 = load ptr, ptr %0, align 8
  %168 = tail call i64 @memcmp(ptr %167, ptr nonnull %164, i64 8)
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %common.ret, label %ifend81

ifend81:                                          ; preds = %ifend78, %ifend.i335
  %170 = tail call ptr @malloc(i32 8)
  store i64 6872318640384728927, ptr %170, align 8
  %171 = tail call ptr @malloc(i32 24)
  store ptr %170, ptr %171, align 8
  %memberidx1.i.i337 = getelementptr inbounds %String, ptr %171, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i337, align 4
  %memberidx2.i.i338 = getelementptr inbounds %String, ptr %171, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i338, align 4
  %172 = load i64, ptr %memberidx.i, align 4
  %.not.i341 = icmp eq i64 %172, 8
  br i1 %.not.i341, label %ifend.i343, label %ifend84

ifend.i343:                                       ; preds = %ifend81
  %173 = load ptr, ptr %0, align 8
  %174 = tail call i64 @memcmp(ptr %173, ptr nonnull %170, i64 8)
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %common.ret, label %ifend84

ifend84:                                          ; preds = %ifend81, %ifend.i343
  %176 = tail call ptr @malloc(i32 8)
  store i64 6872337336460992351, ptr %176, align 8
  %177 = tail call ptr @malloc(i32 24)
  store ptr %176, ptr %177, align 8
  %memberidx1.i.i345 = getelementptr inbounds %String, ptr %177, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i345, align 4
  %memberidx2.i.i346 = getelementptr inbounds %String, ptr %177, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i346, align 4
  %178 = load i64, ptr %memberidx.i, align 4
  %.not.i349 = icmp eq i64 %178, 8
  br i1 %.not.i349, label %ifend.i351, label %ifend87

ifend.i351:                                       ; preds = %ifend84
  %179 = load ptr, ptr %0, align 8
  %180 = tail call i64 @memcmp(ptr %179, ptr nonnull %176, i64 8)
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %common.ret, label %ifend87

ifend87:                                          ; preds = %ifend84, %ifend.i351
  %182 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %182, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %183 = tail call ptr @malloc(i32 24)
  store ptr %182, ptr %183, align 8
  %memberidx1.i.i353 = getelementptr inbounds %String, ptr %183, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i353, align 4
  %memberidx2.i.i354 = getelementptr inbounds %String, ptr %183, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i354, align 4
  %184 = load i64, ptr %memberidx.i, align 4
  %.not.i357 = icmp eq i64 %184, 7
  br i1 %.not.i357, label %ifend.i359, label %common.ret

ifend.i359:                                       ; preds = %ifend87
  %185 = load ptr, ptr %0, align 8
  %186 = tail call i64 @memcmp(ptr %185, ptr nonnull %182, i64 7)
  %187 = icmp eq i64 %186, 0
  br label %common.ret
}

define internal fastcc noalias ptr @bin_op_to_op_overload_name(i64 %0) unnamed_addr {
  switch i64 %0, label %common.ret [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 20, label %if.entry16
    i64 21, label %if.entry19
    i64 22, label %if.entry22
    i64 23, label %if.entry25
    i64 24, label %if.entry28
    i64 25, label %if.entry31
    i64 7, label %if.entry34
    i64 8, label %if.entry37
    i64 9, label %if.entry40
    i64 10, label %if.entry43
    i64 11, label %if.entry46
    i64 12, label %if.entry49
    i64 13, label %if.entry52
    i64 14, label %if.entry55
    i64 29, label %if.entry58
    i64 30, label %if.entry61
    i64 15, label %if.entry64
    i64 16, label %if.entry67
    i64 17, label %if.entry70
    i64 26, label %if.entry73
    i64 28, label %if.entry76
    i64 18, label %if.entry79
  ]

common.ret.sink.split:                            ; preds = %if.entry, %if.entry1, %if.entry4, %if.entry7, %if.entry10, %if.entry13, %if.entry16, %if.entry19, %if.entry22, %if.entry25, %if.entry28, %if.entry31, %if.entry34, %if.entry37, %if.entry40, %if.entry43, %if.entry46, %if.entry49, %if.entry52, %if.entry55, %if.entry58, %if.entry61, %if.entry64, %if.entry67, %if.entry70, %if.entry73, %if.entry76, %if.entry79
  %.sink165 = phi ptr [ %57, %if.entry79 ], [ %55, %if.entry76 ], [ %53, %if.entry73 ], [ %51, %if.entry70 ], [ %49, %if.entry67 ], [ %47, %if.entry64 ], [ %45, %if.entry61 ], [ %43, %if.entry58 ], [ %41, %if.entry55 ], [ %39, %if.entry52 ], [ %37, %if.entry49 ], [ %35, %if.entry46 ], [ %33, %if.entry43 ], [ %31, %if.entry40 ], [ %29, %if.entry37 ], [ %27, %if.entry34 ], [ %25, %if.entry31 ], [ %23, %if.entry28 ], [ %21, %if.entry25 ], [ %19, %if.entry22 ], [ %17, %if.entry19 ], [ %15, %if.entry16 ], [ %13, %if.entry13 ], [ %11, %if.entry10 ], [ %9, %if.entry7 ], [ %7, %if.entry4 ], [ %5, %if.entry1 ], [ %3, %if.entry ]
  %.sink164 = phi i64 [ 6, %if.entry79 ], [ 8, %if.entry76 ], [ 8, %if.entry73 ], [ 7, %if.entry70 ], [ 7, %if.entry67 ], [ 6, %if.entry64 ], [ 7, %if.entry61 ], [ 7, %if.entry58 ], [ 6, %if.entry55 ], [ 6, %if.entry52 ], [ 6, %if.entry49 ], [ 6, %if.entry46 ], [ 6, %if.entry43 ], [ 6, %if.entry40 ], [ 6, %if.entry37 ], [ 6, %if.entry34 ], [ 8, %if.entry31 ], [ 8, %if.entry28 ], [ 8, %if.entry25 ], [ 8, %if.entry22 ], [ 8, %if.entry19 ], [ 8, %if.entry16 ], [ 7, %if.entry13 ], [ 7, %if.entry10 ], [ 7, %if.entry7 ], [ 7, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %memberidx1.i.i161 = getelementptr inbounds %String, ptr %.sink165, i64 0, i32 1
  store i64 %.sink164, ptr %memberidx1.i.i161, align 4
  %memberidx2.i.i162 = getelementptr inbounds %String, ptr %.sink165, i64 0, i32 2
  store i64 %.sink164, ptr %memberidx2.i.i162, align 4
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %1
  %common.ret.op = phi ptr [ null, %1 ], [ %.sink165, %common.ret.sink.split ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %1
  %2 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %2, ptr noundef nonnull align 8 dereferenceable(7) @115, i64 7, i1 false)
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  br label %common.ret.sink.split

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @116, i64 7, i1 false)
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  br label %common.ret.sink.split

if.entry4:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %6, ptr noundef nonnull align 8 dereferenceable(7) @117, i64 7, i1 false)
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret.sink.split

if.entry7:                                        ; preds = %1
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @118, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  br label %common.ret.sink.split

if.entry10:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %10, ptr noundef nonnull align 8 dereferenceable(7) @134, i64 7, i1 false)
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  br label %common.ret.sink.split

if.entry13:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %12, ptr noundef nonnull align 8 dereferenceable(7) @133, i64 7, i1 false)
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  br label %common.ret.sink.split

if.entry16:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 8)
  store i64 6872318640199393119, ptr %14, align 8
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  br label %common.ret.sink.split

if.entry19:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 8)
  store i64 6872318631895850847, ptr %16, align 8
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  br label %common.ret.sink.split

if.entry22:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 8)
  store i64 6872318674845130591, ptr %18, align 8
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  br label %common.ret.sink.split

if.entry25:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 8)
  store i64 6872318717592887135, ptr %20, align 8
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  br label %common.ret.sink.split

if.entry28:                                       ; preds = %1
  %22 = tail call ptr @malloc(i32 8)
  store i64 6872318640384728927, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  br label %common.ret.sink.split

if.entry31:                                       ; preds = %1
  %24 = tail call ptr @malloc(i32 8)
  store i64 6872318721989304159, ptr %24, align 8
  %25 = tail call ptr @malloc(i32 24)
  store ptr %24, ptr %25, align 8
  br label %common.ret.sink.split

if.entry34:                                       ; preds = %1
  %26 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %26, ptr noundef nonnull align 8 dereferenceable(6) @174, i64 6, i1 false)
  %27 = tail call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  br label %common.ret.sink.split

if.entry37:                                       ; preds = %1
  %28 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %28, ptr noundef nonnull align 8 dereferenceable(6) @132, i64 6, i1 false)
  %29 = tail call ptr @malloc(i32 24)
  store ptr %28, ptr %29, align 8
  br label %common.ret.sink.split

if.entry40:                                       ; preds = %1
  %30 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %30, ptr noundef nonnull align 8 dereferenceable(6) @128, i64 6, i1 false)
  %31 = tail call ptr @malloc(i32 24)
  store ptr %30, ptr %31, align 8
  br label %common.ret.sink.split

if.entry43:                                       ; preds = %1
  %32 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %32, ptr noundef nonnull align 8 dereferenceable(6) @131, i64 6, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  br label %common.ret.sink.split

if.entry46:                                       ; preds = %1
  %34 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %34, ptr noundef nonnull align 8 dereferenceable(6) @114, i64 6, i1 false)
  %35 = tail call ptr @malloc(i32 24)
  store ptr %34, ptr %35, align 8
  br label %common.ret.sink.split

if.entry49:                                       ; preds = %1
  %36 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %36, ptr noundef nonnull align 8 dereferenceable(6) @130, i64 6, i1 false)
  %37 = tail call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  br label %common.ret.sink.split

if.entry52:                                       ; preds = %1
  %38 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %38, ptr noundef nonnull align 8 dereferenceable(6) @123, i64 6, i1 false)
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  br label %common.ret.sink.split

if.entry55:                                       ; preds = %1
  %40 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %40, ptr noundef nonnull align 8 dereferenceable(6) @124, i64 6, i1 false)
  %41 = tail call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  br label %common.ret.sink.split

if.entry58:                                       ; preds = %1
  %42 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %42, ptr noundef nonnull align 8 dereferenceable(7) @125, i64 7, i1 false)
  %43 = tail call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  br label %common.ret.sink.split

if.entry61:                                       ; preds = %1
  %44 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %44, ptr noundef nonnull align 8 dereferenceable(7) @126, i64 7, i1 false)
  %45 = tail call ptr @malloc(i32 24)
  store ptr %44, ptr %45, align 8
  br label %common.ret.sink.split

if.entry64:                                       ; preds = %1
  %46 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %46, ptr noundef nonnull align 8 dereferenceable(6) @119, i64 6, i1 false)
  %47 = tail call ptr @malloc(i32 24)
  store ptr %46, ptr %47, align 8
  br label %common.ret.sink.split

if.entry67:                                       ; preds = %1
  %48 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %48, ptr noundef nonnull align 8 dereferenceable(7) @175, i64 7, i1 false)
  %49 = tail call ptr @malloc(i32 24)
  store ptr %48, ptr %49, align 8
  br label %common.ret.sink.split

if.entry70:                                       ; preds = %1
  %50 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %50, ptr noundef nonnull align 8 dereferenceable(7) @176, i64 7, i1 false)
  %51 = tail call ptr @malloc(i32 24)
  store ptr %50, ptr %51, align 8
  br label %common.ret.sink.split

if.entry73:                                       ; preds = %1
  %52 = tail call ptr @malloc(i32 8)
  store i64 6872318640367165279, ptr %52, align 8
  %53 = tail call ptr @malloc(i32 24)
  store ptr %52, ptr %53, align 8
  br label %common.ret.sink.split

if.entry76:                                       ; preds = %1
  %54 = tail call ptr @malloc(i32 8)
  store i64 6872318700514991967, ptr %54, align 8
  %55 = tail call ptr @malloc(i32 24)
  store ptr %54, ptr %55, align 8
  br label %common.ret.sink.split

if.entry79:                                       ; preds = %1
  %56 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %56, ptr noundef nonnull align 8 dereferenceable(6) @127, i64 6, i1 false)
  %57 = tail call ptr @malloc(i32 24)
  store ptr %56, ptr %57, align 8
  br label %common.ret.sink.split
}

define internal fastcc noalias ptr @dump_bin_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend54 [
    i64 1, label %if.entry
    i64 2, label %if.entry1
    i64 3, label %if.entry4
    i64 4, label %if.entry7
    i64 5, label %if.entry10
    i64 6, label %if.entry13
    i64 7, label %if.entry16
    i64 8, label %if.entry19
    i64 9, label %if.entry22
    i64 10, label %if.entry25
    i64 11, label %if.entry28
    i64 12, label %if.entry31
    i64 13, label %if.entry34
    i64 14, label %if.entry37
    i64 15, label %if.entry40
    i64 16, label %if.entry43
    i64 17, label %if.entry46
    i64 18, label %if.entry49
    i64 19, label %if.entry52
  ]

common.ret:                                       ; preds = %ifend54, %if.entry52, %if.entry49, %if.entry46, %if.entry43, %if.entry40, %if.entry37, %if.entry34, %if.entry31, %if.entry28, %if.entry25, %if.entry22, %if.entry19, %if.entry16, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink113 = phi ptr [ %41, %ifend54 ], [ %39, %if.entry52 ], [ %37, %if.entry49 ], [ %35, %if.entry46 ], [ %33, %if.entry43 ], [ %31, %if.entry40 ], [ %29, %if.entry37 ], [ %27, %if.entry34 ], [ %25, %if.entry31 ], [ %23, %if.entry28 ], [ %21, %if.entry25 ], [ %19, %if.entry22 ], [ %17, %if.entry19 ], [ %15, %if.entry16 ], [ %13, %if.entry13 ], [ %11, %if.entry10 ], [ %9, %if.entry7 ], [ %7, %if.entry4 ], [ %5, %if.entry1 ], [ %3, %if.entry ]
  %.sink112 = phi i64 [ 2, %ifend54 ], [ 1, %if.entry52 ], [ 2, %if.entry49 ], [ 1, %if.entry46 ], [ 3, %if.entry43 ], [ 2, %if.entry40 ], [ 2, %if.entry37 ], [ 2, %if.entry34 ], [ 2, %if.entry31 ], [ 2, %if.entry28 ], [ 2, %if.entry25 ], [ 1, %if.entry22 ], [ 2, %if.entry19 ], [ 1, %if.entry16 ], [ 1, %if.entry13 ], [ 2, %if.entry10 ], [ 1, %if.entry7 ], [ 1, %if.entry4 ], [ 1, %if.entry1 ], [ 1, %if.entry ]
  %memberidx1.i.i109 = getelementptr inbounds %String, ptr %.sink113, i64 0, i32 1
  store i64 %.sink112, ptr %memberidx1.i.i109, align 4
  %memberidx2.i.i110 = getelementptr inbounds %String, ptr %.sink113, i64 0, i32 2
  store i64 %.sink112, ptr %memberidx2.i.i110, align 4
  ret ptr %.sink113

if.entry:                                         ; preds = %1
  %2 = tail call ptr @malloc(i32 1)
  store i8 43, ptr %2, align 8
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 1)
  store i8 45, ptr %4, align 8
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  br label %common.ret

if.entry4:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 1)
  store i8 42, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %8 = tail call ptr @malloc(i32 1)
  store i8 47, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 2)
  store i16 10794, ptr %10, align 8
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 1)
  store i8 94, ptr %12, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  br label %common.ret

if.entry16:                                       ; preds = %1
  %14 = tail call ptr @malloc(i32 1)
  store i8 62, ptr %14, align 8
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  br label %common.ret

if.entry19:                                       ; preds = %1
  %16 = tail call ptr @malloc(i32 2)
  store i16 15678, ptr %16, align 8
  %17 = tail call ptr @malloc(i32 24)
  store ptr %16, ptr %17, align 8
  br label %common.ret

if.entry22:                                       ; preds = %1
  %18 = tail call ptr @malloc(i32 1)
  store i8 60, ptr %18, align 8
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  br label %common.ret

if.entry25:                                       ; preds = %1
  %20 = tail call ptr @malloc(i32 2)
  store i16 15676, ptr %20, align 8
  %21 = tail call ptr @malloc(i32 24)
  store ptr %20, ptr %21, align 8
  br label %common.ret

if.entry28:                                       ; preds = %1
  %22 = tail call ptr @malloc(i32 2)
  store i16 15677, ptr %22, align 8
  %23 = tail call ptr @malloc(i32 24)
  store ptr %22, ptr %23, align 8
  br label %common.ret

if.entry31:                                       ; preds = %1
  %24 = tail call ptr @malloc(i32 2)
  store i16 15649, ptr %24, align 8
  %25 = tail call ptr @malloc(i32 24)
  store ptr %24, ptr %25, align 8
  br label %common.ret

if.entry34:                                       ; preds = %1
  %26 = tail call ptr @malloc(i32 2)
  store i16 15420, ptr %26, align 8
  %27 = tail call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  br label %common.ret

if.entry37:                                       ; preds = %1
  %28 = tail call ptr @malloc(i32 2)
  store i16 15934, ptr %28, align 8
  %29 = tail call ptr @malloc(i32 24)
  store ptr %28, ptr %29, align 8
  br label %common.ret

if.entry40:                                       ; preds = %1
  %30 = tail call ptr @malloc(i32 2)
  store i16 29295, ptr %30, align 8
  %31 = tail call ptr @malloc(i32 24)
  store ptr %30, ptr %31, align 8
  br label %common.ret

if.entry43:                                       ; preds = %1
  %32 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %32, ptr noundef nonnull align 8 dereferenceable(3) @41, i64 3, i1 false)
  %33 = tail call ptr @malloc(i32 24)
  store ptr %32, ptr %33, align 8
  br label %common.ret

if.entry46:                                       ; preds = %1
  %34 = tail call ptr @malloc(i32 1)
  store i8 94, ptr %34, align 8
  %35 = tail call ptr @malloc(i32 24)
  store ptr %34, ptr %35, align 8
  br label %common.ret

if.entry49:                                       ; preds = %1
  %36 = tail call ptr @malloc(i32 2)
  store i16 28265, ptr %36, align 8
  %37 = tail call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  br label %common.ret

if.entry52:                                       ; preds = %1
  %38 = tail call ptr @malloc(i32 1)
  store i8 61, ptr %38, align 8
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  br label %common.ret

ifend54:                                          ; preds = %1
  %40 = tail call ptr @malloc(i32 2)
  store i16 11822, ptr %40, align 8
  %41 = tail call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  br label %common.ret
}

define internal fastcc void @check_cast_lower_bits(ptr nocapture %0, ptr nocapture %1) unnamed_addr {
  %3 = load ptr, ptr %0, align 8
  %memberidx = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %1, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load i64, ptr %4, align 4
  %8 = load i64, ptr %6, align 4
  %.not = icmp eq i64 %7, %8
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %2
  %9 = and i64 %7, -2
  %10 = icmp eq i64 %9, 8
  %11 = add i64 %8, -1
  %12 = icmp ult i64 %11, 7
  %13 = and i1 %10, %12
  br i1 %13, label %if.entry4, label %else5

ifend:                                            ; preds = %if.entry7, %ifend12, %if.entry4, %2
  ret void

if.entry4:                                        ; preds = %if.entry
  %14 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %14, align 4
  %memberidx.i.i.i50 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i50, align 4
  %memberidx1.i.i.i51 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 1
  %memberidx.i.i52 = getelementptr inbounds %TypeCastExpression, ptr %14, i64 0, i32 4
  store ptr %5, ptr %memberidx.i.i52, align 8
  %memberidx1.i.i53 = getelementptr inbounds %Expression, ptr %14, i64 0, i32 3
  store ptr %4, ptr %memberidx1.i.i53, align 8
  %memberidx3.i.i55 = getelementptr inbounds %Expression, ptr %5, i64 0, i32 1
  %15 = load i1, ptr %memberidx3.i.i55, align 1
  store i1 %15, ptr %memberidx1.i.i.i51, align 1
  store ptr %14, ptr %1, align 8
  br label %ifend

else5:                                            ; preds = %if.entry
  %16 = add i64 %7, -1
  %17 = icmp ult i64 %16, 7
  %18 = and i64 %8, -2
  %19 = icmp eq i64 %18, 8
  %20 = and i1 %17, %19
  br i1 %20, label %if.entry7, label %else8

if.entry7:                                        ; preds = %else5
  %21 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %21, align 4
  %memberidx.i.i.i56 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i56, align 4
  %memberidx1.i.i.i57 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 1
  %memberidx.i.i58 = getelementptr inbounds %TypeCastExpression, ptr %21, i64 0, i32 4
  store ptr %3, ptr %memberidx.i.i58, align 8
  %memberidx1.i.i59 = getelementptr inbounds %Expression, ptr %21, i64 0, i32 3
  store ptr %6, ptr %memberidx1.i.i59, align 8
  %memberidx3.i.i61 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 1
  %22 = load i1, ptr %memberidx3.i.i61, align 1
  store i1 %22, ptr %memberidx1.i.i.i57, align 1
  store ptr %21, ptr %0, align 8
  br label %ifend

else8:                                            ; preds = %else5
  %23 = icmp sgt i64 %7, %8
  %ternary.i = select i1 %23, ptr %4, ptr %6
  %24 = load i64, ptr %ternary.i, align 4
  %25 = add i64 %24, -1
  %26 = icmp ult i64 %25, 7
  %27 = and i1 %12, %26
  br i1 %27, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %else8
  %memberidx13 = getelementptr inbounds %IntType, ptr %ternary.i, i64 0, i32 1
  %28 = load i1, ptr %memberidx13, align 1
  %memberidx14 = getelementptr inbounds %IntType, ptr %6, i64 0, i32 1
  %29 = load i1, ptr %memberidx14, align 1
  %30 = xor i1 %28, %29
  br i1 %30, label %if.entry15, label %ifend12

ifend12:                                          ; preds = %if.entry15, %if.entry10, %else8
  %31 = phi ptr [ %.pre, %if.entry15 ], [ %3, %if.entry10 ], [ %3, %else8 ]
  %32 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %32, align 4
  %memberidx.i.i.i44 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i44, align 4
  %memberidx1.i.i.i45 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 1
  %memberidx.i.i46 = getelementptr inbounds %TypeCastExpression, ptr %32, i64 0, i32 4
  store ptr %31, ptr %memberidx.i.i46, align 8
  %memberidx1.i.i47 = getelementptr inbounds %Expression, ptr %32, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i47, align 8
  %memberidx3.i.i49 = getelementptr inbounds %Expression, ptr %31, i64 0, i32 1
  %33 = load i1, ptr %memberidx3.i.i49, align 1
  store i1 %33, ptr %memberidx1.i.i.i45, align 1
  store ptr %32, ptr %0, align 8
  %34 = load ptr, ptr %1, align 8
  %35 = tail call ptr @malloc(i32 33)
  store i64 8, ptr %35, align 4
  %memberidx.i.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 2
  store i64 11, ptr %memberidx.i.i.i, align 4
  %memberidx1.i.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 1
  %memberidx.i.i = getelementptr inbounds %TypeCastExpression, ptr %35, i64 0, i32 4
  store ptr %34, ptr %memberidx.i.i, align 8
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %35, i64 0, i32 3
  store ptr %ternary.i, ptr %memberidx1.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %Expression, ptr %34, i64 0, i32 1
  %36 = load i1, ptr %memberidx3.i.i, align 1
  store i1 %36, ptr %memberidx1.i.i.i, align 1
  store ptr %35, ptr %1, align 8
  br label %ifend

if.entry15:                                       ; preds = %if.entry10
  store i1 true, ptr %memberidx14, align 1
  store i1 true, ptr %memberidx13, align 1
  %.pre = load ptr, ptr %0, align 8
  br label %ifend12
}

define internal fastcc noalias ptr @dump_unary_op(i64 %0) unnamed_addr {
  switch i64 %0, label %ifend15 [
    i64 2, label %if.entry
    i64 3, label %if.entry1
    i64 4, label %if.entry4
    i64 5, label %if.entry7
    i64 6, label %if.entry10
    i64 7, label %if.entry13
  ]

common.ret:                                       ; preds = %ifend15, %if.entry13, %if.entry10, %if.entry7, %if.entry4, %if.entry1, %if.entry
  %.sink35 = phi ptr [ %15, %ifend15 ], [ %13, %if.entry13 ], [ %11, %if.entry10 ], [ %9, %if.entry7 ], [ %7, %if.entry4 ], [ %5, %if.entry1 ], [ %3, %if.entry ]
  %.sink34 = phi i64 [ 1, %ifend15 ], [ 1, %if.entry13 ], [ 1, %if.entry10 ], [ 8, %if.entry7 ], [ 8, %if.entry4 ], [ 7, %if.entry1 ], [ 7, %if.entry ]
  %memberidx1.i.i31 = getelementptr inbounds %String, ptr %.sink35, i64 0, i32 1
  store i64 %.sink34, ptr %memberidx1.i.i31, align 4
  %memberidx2.i.i32 = getelementptr inbounds %String, ptr %.sink35, i64 0, i32 2
  store i64 %.sink34, ptr %memberidx2.i.i32, align 4
  ret ptr %.sink35

if.entry:                                         ; preds = %1
  %2 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %2, ptr noundef nonnull align 8 dereferenceable(7) @183, i64 7, i1 false)
  %3 = tail call ptr @malloc(i32 24)
  store ptr %2, ptr %3, align 8
  br label %common.ret

if.entry1:                                        ; preds = %1
  %4 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %4, ptr noundef nonnull align 8 dereferenceable(7) @184, i64 7, i1 false)
  %5 = tail call ptr @malloc(i32 24)
  store ptr %4, ptr %5, align 8
  br label %common.ret

if.entry4:                                        ; preds = %1
  %6 = tail call ptr @malloc(i32 8)
  store i64 3110625547759087656, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret

if.entry7:                                        ; preds = %1
  %8 = tail call ptr @malloc(i32 8)
  store i64 3255303685788364840, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  br label %common.ret

if.entry10:                                       ; preds = %1
  %10 = tail call ptr @malloc(i32 1)
  store i8 45, ptr %10, align 8
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  br label %common.ret

if.entry13:                                       ; preds = %1
  %12 = tail call ptr @malloc(i32 1)
  store i8 33, ptr %12, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  br label %common.ret

ifend15:                                          ; preds = %1
  %14 = tail call ptr @malloc(i32 1)
  store i8 38, ptr %14, align 8
  %15 = tail call ptr @malloc(i32 24)
  store ptr %14, ptr %15, align 8
  br label %common.ret
}

define internal fastcc ptr @CodeGen_store_expr_to_mem(ptr nocapture %0, ptr %1, ptr %2, ptr %3) unnamed_addr {
  %next_args.i = alloca [2 x ptr], align 8
  %args = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %Expression, ptr %3, i64 0, i32 2
  %5 = load i64, ptr %memberidx, align 4
  %6 = icmp ne i64 %5, 6
  %memberidx1 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 1
  %7 = load i1, ptr %memberidx1, align 1
  %8 = or i1 %7, %6
  br i1 %8, label %else, label %if.entry

if.entry:                                         ; preds = %4
  %memberidx2 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = load i64, ptr %9, align 4
  %.not = icmp eq i64 %10, 20
  br i1 %.not, label %ifend6, label %if.entry4

else:                                             ; preds = %4
  %11 = icmp ne i64 %5, 7
  %12 = or i1 %7, %11
  br i1 %12, label %else10, label %if.entry9

common.ret:                                       ; preds = %CodeGen_store_tuple_elements.exit, %if.entry4, %ifend
  %common.ret.op = phi ptr [ %value.0, %ifend ], [ %19, %if.entry4 ], [ %2, %CodeGen_store_tuple_elements.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else10, %ifend6
  %value.0 = phi ptr [ %20, %ifend6 ], [ %39, %else10 ]
  %13 = tail call ptr @LLVMBuildStore(ptr %1, ptr %value.0, ptr %2)
  br label %common.ret

if.entry4:                                        ; preds = %if.entry
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 0, i1 false)
  store ptr %15, ptr %args, align 8
  %16 = getelementptr inbounds ptr, ptr %args, i64 1
  store ptr %15, ptr %16, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %9, i1 true)
  %18 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %17, ptr %2, ptr nonnull %args, i64 2, ptr nonnull @80)
  %19 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %18, ptr nonnull %3)
  br label %common.ret

ifend6:                                           ; preds = %if.entry
  %20 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %9, ptr nonnull %3)
  br label %ifend

if.entry9:                                        ; preds = %else
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %next_args.i)
  %21 = tail call ptr @LLVMInt32Type()
  %22 = tail call ptr @LLVMConstInt(ptr %21, i64 0, i1 false)
  store ptr %22, ptr %next_args.i, align 8
  %23 = getelementptr inbounds ptr, ptr %next_args.i, i64 1
  store ptr null, ptr %23, align 8
  %memberidx.i = getelementptr inbounds %Expression, ptr %3, i64 0, i32 3
  %24 = load ptr, ptr %memberidx.i, align 8
  %25 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %24, i1 true)
  %memberidx1.i = getelementptr inbounds %TupleExpression, ptr %3, i64 0, i32 4
  %26 = load ptr, ptr %memberidx1.i, align 8
  %27 = tail call ptr @malloc(i32 25)
  %28 = load ptr, ptr %26, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Expression_, ptr %26, i64 0, i32 1
  %29 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %27, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 3
  store ptr %28, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %27, i64 0, i32 2
  store i64 %29, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %30 = icmp slt i64 %29, 1
  br i1 %30, label %CodeGen_store_tuple_elements.exit, label %for.body.i

for.body.i:                                       ; preds = %if.entry9, %for.body.i
  %31 = phi i64 [ %37, %for.body.i ], [ 1, %if.entry9 ]
  %value.0.i41.in = phi ptr [ %38, %for.body.i ], [ %28, %if.entry9 ]
  %idx.0.i40 = phi i64 [ %32, %for.body.i ], [ 0, %if.entry9 ]
  %value.0.i41 = load ptr, ptr %value.0.i41.in, align 8
  %32 = add nuw nsw i64 %idx.0.i40, 1
  %33 = call ptr @LLVMConstInt(ptr %21, i64 %idx.0.i40, i1 false)
  store ptr %33, ptr %23, align 8
  %34 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %25, ptr %2, ptr nonnull %next_args.i, i64 2, ptr nonnull @80)
  %35 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.0.i41)
  %36 = call ptr @LLVMBuildStore(ptr %1, ptr %35, ptr %34)
  %37 = add nuw nsw i64 %31, 1
  store i64 %37, ptr %memberidx1.i.i.i, align 4
  %38 = getelementptr inbounds ptr, ptr %28, i64 %31
  %.not42 = icmp slt i64 %31, %29
  br i1 %.not42, label %for.body.i, label %CodeGen_store_tuple_elements.exit

CodeGen_store_tuple_elements.exit:                ; preds = %for.body.i, %if.entry9
  call void @free(ptr nonnull %27)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %next_args.i)
  br label %common.ret

else10:                                           ; preds = %else
  %39 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %3)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_array_exp(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 20
  br i1 %6, label %if.entry, label %ifend

common.ret:                                       ; preds = %for.end, %if.entry
  %common.ret.op = phi ptr [ %7, %if.entry ], [ %34, %for.end ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %7 = tail call fastcc ptr @CodeGen_codegen_builtin_array(ptr %0, ptr %1, ptr nonnull %4, ptr nonnull %2)
  br label %common.ret

ifend:                                            ; preds = %3
  %memberidx3 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 1
  %8 = load i1, ptr %memberidx3, align 1
  br i1 %8, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend
  %9 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %9, ptr noundef nonnull align 8 dereferenceable(54) @256, i64 54, i1 false)
  %10 = tail call ptr @malloc(i32 24)
  %11 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %11, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %12 = tail call ptr @malloc(i32 24)
  %13 = tail call i64 @write(i64 1, ptr %11, i64 7)
  tail call void @free(ptr %11)
  tail call void @free(ptr %12)
  %14 = tail call i64 @write(i64 1, ptr %9, i64 54)
  %15 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %9)
  tail call void @free(ptr %10)
  tail call void @exit(i64 -1)
  %.pre = load ptr, ptr %memberidx, align 8
  br label %ifend6

ifend6:                                           ; preds = %ifend, %if.entry4
  %16 = phi ptr [ %4, %ifend ], [ %.pre, %if.entry4 ]
  %memberidx8 = getelementptr inbounds %ArrayType, ptr %16, i64 0, i32 1
  %17 = load ptr, ptr %memberidx8, align 8
  %18 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %17, i1 true)
  %memberidx9 = getelementptr inbounds %ArrayExpression, ptr %2, i64 0, i32 4
  %19 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %Array_Expression_, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx10, align 4
  %21 = alloca ptr, i64 %20, align 8
  %22 = tail call ptr @malloc(i32 25)
  %23 = load ptr, ptr %19, align 8
  %24 = load i64, ptr %memberidx10, align 4
  store i1 false, ptr %22, align 1
  %memberidx1.i.i29 = getelementptr inbounds %ArrayIterator_Expression_, ptr %22, i64 0, i32 1
  %memberidx2.i.i30 = getelementptr inbounds %ArrayIterator_Expression_, ptr %22, i64 0, i32 3
  store ptr %23, ptr %memberidx2.i.i30, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %22, i64 0, i32 2
  store i64 %24, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i29, align 4
  %25 = icmp slt i64 %24, 1
  br i1 %25, label %for.end, label %for.body

for.body:                                         ; preds = %ifend6, %for.body
  %26 = phi i64 [ %30, %for.body ], [ 1, %ifend6 ]
  %value.037.in = phi ptr [ %31, %for.body ], [ %23, %ifend6 ]
  %idx.036 = phi i64 [ %27, %for.body ], [ 0, %ifend6 ]
  %value.037 = load ptr, ptr %value.037.in, align 8
  %27 = add nuw nsw i64 %idx.036, 1
  %28 = getelementptr inbounds ptr, ptr %21, i64 %idx.036
  %29 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.037)
  store ptr %29, ptr %28, align 8
  %30 = add nuw nsw i64 %26, 1
  store i64 %30, ptr %memberidx1.i.i29, align 4
  %31 = getelementptr inbounds ptr, ptr %23, i64 %26
  %.not = icmp slt i64 %26, %24
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend6
  tail call void @free(ptr nonnull %22)
  %32 = load ptr, ptr %memberidx9, align 8
  %memberidx14 = getelementptr inbounds %Array_Expression_, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx14, align 4
  %34 = call ptr @LLVMConstArray(ptr %18, ptr nonnull %21, i64 %33)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_var_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load ptr, ptr %7, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 1
  %9 = load i64, ptr %memberidx1.i, align 4
  %10 = load ptr, ptr %8, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 1
  %13 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %memberidx2 = getelementptr inbounds %Var, ptr %17, i64 0, i32 2
  %18 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 3
  %19 = load i1, ptr %memberidx3, align 1
  br i1 %19, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %memberidx4 = getelementptr inbounds %VarDeclaration, ptr %2, i64 0, i32 1
  %20 = load ptr, ptr %memberidx4, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i, align 4
  %22 = trunc i64 %21 to i32
  %23 = add i32 %22, 1
  %24 = tail call ptr @malloc(i32 %23)
  %25 = load ptr, ptr %20, align 8
  %26 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %25, i64 %26, i1 false)
  %27 = getelementptr inbounds i8, ptr %24, i64 %26
  store i8 0, ptr %27, align 1
  %28 = load ptr, ptr %17, align 8
  %29 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %28, i1 true)
  %30 = load ptr, ptr %0, align 8
  %31 = tail call ptr @LLVMAddGlobal(ptr %30, ptr %29, ptr %24)
  %.not30 = icmp eq ptr %18, null
  br i1 %.not30, label %ifend9, label %if.entry7

else:                                             ; preds = %3
  %memberidx.i31 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %32 = load ptr, ptr %memberidx.i31, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %33 = load i64, ptr %6, align 4
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %9, i64 %33, i64 %14)
  %35 = load ptr, ptr %5, align 8
  %36 = call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %37 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %36)
  %memberidx.i37 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %32, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i37, align 4
  %39 = urem i64 %37, %38
  %40 = load ptr, ptr %32, align 8
  %41 = getelementptr inbounds ptr, ptr %40, i64 %39
  %42 = load ptr, ptr %41, align 8
  %.not.i = icmp eq ptr %42, null
  br i1 %.not.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %else, %else.i
  %43 = phi ptr [ %51, %else.i ], [ %40, %else ]
  %44 = phi i64 [ %52, %else.i ], [ %38, %else ]
  %45 = phi ptr [ %56, %else.i ], [ %42, %else ]
  %hash.0.i = phi i64 [ %54, %else.i ], [ %39, %else ]
  %46 = load ptr, ptr %45, align 8
  %memberidx.i.i38 = getelementptr inbounds %String, ptr %46, i64 0, i32 1
  %47 = load i64, ptr %memberidx.i.i38, align 4
  %.not.i.i = icmp eq i64 %47, %34
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %48 = load ptr, ptr %46, align 8
  %49 = call i64 @memcmp(ptr %48, ptr %35, i64 %34)
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i37, align 4
  %.pre41 = load ptr, ptr %32, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre42.pre = load ptr, ptr %32, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre42.pre, i64 %hash.0.i
  %.pre43.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre43.pre, null
  br i1 %.not25.i, label %Map_String_LLVMValueRef____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %51 = phi ptr [ %.pre41, %ifend.i.i.else.i_crit_edge ], [ %43, %while.entry.i ]
  %52 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %44, %while.entry.i ]
  %53 = add nuw i64 %hash.0.i, 1
  %54 = urem i64 %53, %52
  %55 = getelementptr inbounds ptr, ptr %51, i64 %54
  %56 = load ptr, ptr %55, align 8
  %.not26.i = icmp eq ptr %56, null
  br i1 %.not26.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre43.pre, i64 0, i32 1
  %57 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %else, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %57, %if.entry7.i ], [ null, %while.end.i ], [ null, %else ], [ null, %else.i ]
  %.not = icmp eq ptr %18, null
  br i1 %.not, label %ifend, label %if.entry10

ifend:                                            ; preds = %if.entry10, %Map_String_LLVMValueRef____getitem__.exit, %ifend9
  ret void

if.entry7:                                        ; preds = %if.entry
  %58 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %18)
  tail call void @LLVMSetInitializer(ptr %31, ptr %58)
  br label %ifend9

ifend9:                                           ; preds = %if.entry, %if.entry7
  %memberidx.i32 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %59 = load ptr, ptr %memberidx.i32, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %60 = load i64, ptr %memberidx1.i, align 4
  %61 = load i64, ptr %6, align 4
  %62 = load i64, ptr %memberidx3.i, align 4
  %63 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %60, i64 %61, i64 %62)
  %64 = load ptr, ptr %4, align 8
  %65 = call ptr @malloc(i32 24)
  store ptr %64, ptr %65, align 8
  %memberidx1.i.i.i35 = getelementptr inbounds %String, ptr %65, i64 0, i32 1
  store i64 %63, ptr %memberidx1.i.i.i35, align 4
  %memberidx2.i.i.i36 = getelementptr inbounds %String, ptr %65, i64 0, i32 2
  store i64 %63, ptr %memberidx2.i.i.i36, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %59, ptr nonnull %65, ptr %31)
  br label %ifend

if.entry10:                                       ; preds = %Map_String_LLVMValueRef____getitem__.exit
  %66 = call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i, ptr nonnull %18)
  br label %ifend
}

define internal fastcc void @CodeGen_codegen_const_declaration(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx1, align 8
  %8 = load ptr, ptr %7, align 8
  %memberidx1.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 1
  %9 = load i64, ptr %memberidx1.i, align 4
  %10 = load ptr, ptr %8, align 8
  %11 = getelementptr inbounds ptr, ptr %10, i64 %9
  %12 = load ptr, ptr %11, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %12, i64 0, i32 2
  %13 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %6, i64 0, i32 2
  %14 = load i64, ptr %memberidx3.i, align 4
  %15 = load ptr, ptr %13, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %memberidx2 = getelementptr inbounds %Const, ptr %17, i64 0, i32 2
  %18 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 3
  %19 = load i1, ptr %memberidx3, align 1
  br i1 %19, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %memberidx4 = getelementptr inbounds %Expression, ptr %18, i64 0, i32 3
  %20 = load ptr, ptr %memberidx4, align 8
  %21 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %20, i1 true)
  %memberidx5 = getelementptr inbounds %ConstDeclaration, ptr %2, i64 0, i32 1
  %22 = load ptr, ptr %memberidx5, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i, align 4
  %24 = trunc i64 %23 to i32
  %25 = add i32 %24, 1
  %26 = tail call ptr @malloc(i32 %25)
  %27 = load ptr, ptr %22, align 8
  %28 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %27, i64 %28, i1 false)
  %29 = getelementptr inbounds i8, ptr %26, i64 %28
  store i8 0, ptr %29, align 1
  %30 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %18)
  %31 = load ptr, ptr %0, align 8
  %32 = tail call ptr @LLVMAddGlobal(ptr %31, ptr %21, ptr %26)
  tail call void @LLVMSetInitializer(ptr %32, ptr %30)
  tail call void @LLVMSetGlobalConstant(ptr %32, i1 true)
  %memberidx.i23 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %33 = load ptr, ptr %memberidx.i23, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %34 = load i64, ptr %memberidx1.i, align 4
  %35 = load i64, ptr %6, align 4
  %36 = load i64, ptr %memberidx3.i, align 4
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %34, i64 %35, i64 %36)
  %38 = load ptr, ptr %5, align 8
  %39 = call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %33, ptr nonnull %39, ptr %32)
  br label %ifend

else:                                             ; preds = %3
  %memberidx.i24 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %40 = load ptr, ptr %memberidx.i24, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %41 = load i64, ptr %6, align 4
  %42 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %9, i64 %41, i64 %14)
  %43 = load ptr, ptr %4, align 8
  %44 = call ptr @malloc(i32 24)
  store ptr %43, ptr %44, align 8
  %memberidx1.i.i.i27 = getelementptr inbounds %String, ptr %44, i64 0, i32 1
  store i64 %42, ptr %memberidx1.i.i.i27, align 4
  %memberidx2.i.i.i28 = getelementptr inbounds %String, ptr %44, i64 0, i32 2
  store i64 %42, ptr %memberidx2.i.i.i28, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %45 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %44)
  %memberidx.i29 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %40, i64 0, i32 1
  %46 = load i64, ptr %memberidx.i29, align 4
  %47 = urem i64 %45, %46
  %48 = load ptr, ptr %40, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %.not.i = icmp eq ptr %50, null
  br i1 %.not.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %else, %else.i
  %51 = phi ptr [ %59, %else.i ], [ %48, %else ]
  %52 = phi i64 [ %60, %else.i ], [ %46, %else ]
  %53 = phi ptr [ %64, %else.i ], [ %50, %else ]
  %hash.0.i = phi i64 [ %62, %else.i ], [ %47, %else ]
  %54 = load ptr, ptr %53, align 8
  %memberidx.i.i30 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  %55 = load i64, ptr %memberidx.i.i30, align 4
  %.not.i.i = icmp eq i64 %55, %42
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %56 = load ptr, ptr %54, align 8
  %57 = call i64 @memcmp(ptr %56, ptr %43, i64 %42)
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i29, align 4
  %.pre32 = load ptr, ptr %40, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre33.pre = load ptr, ptr %40, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre33.pre, i64 %hash.0.i
  %.pre34.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre34.pre, null
  br i1 %.not25.i, label %Map_String_LLVMValueRef____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %59 = phi ptr [ %.pre32, %ifend.i.i.else.i_crit_edge ], [ %51, %while.entry.i ]
  %60 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %52, %while.entry.i ]
  %61 = add nuw i64 %hash.0.i, 1
  %62 = urem i64 %61, %60
  %63 = getelementptr inbounds ptr, ptr %59, i64 %62
  %64 = load ptr, ptr %63, align 8
  %.not26.i = icmp eq ptr %64, null
  br i1 %.not26.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre34.pre, i64 0, i32 1
  %65 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %else, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %65, %if.entry7.i ], [ null, %while.end.i ], [ null, %else ], [ null, %else.i ]
  %66 = call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i, ptr %18)
  br label %ifend

ifend:                                            ; preds = %Map_String_LLVMValueRef____getitem__.exit, %if.entry
  ret void
}

define internal fastcc void @Map_String_LLVMValueRef__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_LLVMValueRef____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_LLVMValueRef__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_store_array_elements(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3) unnamed_addr {
for.entry:
  %next_args = alloca [1 x ptr], align 8
  %4 = tail call ptr @LLVMIntType(i64 64)
  %5 = tail call ptr @LLVMConstInt(ptr %4, i64 1, i1 false)
  store ptr %5, ptr %next_args, align 8
  %6 = tail call ptr @LLVMTypeOf(ptr %2)
  %memberidx = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %8 = tail call ptr @malloc(i32 25)
  %9 = load ptr, ptr %7, align 8
  %memberidx1.i = getelementptr inbounds %Array_Expression_, ptr %7, i64 0, i32 1
  %10 = load i64, ptr %memberidx1.i, align 4
  %11 = icmp slt i64 %10, 1
  br i1 %11, label %for.end, label %for.body

for.body:                                         ; preds = %for.entry, %for.body
  %12 = phi i64 [ %16, %for.body ], [ 1, %for.entry ]
  %value.016.in = phi ptr [ %17, %for.body ], [ %9, %for.entry ]
  %addr.015 = phi ptr [ %15, %for.body ], [ %2, %for.entry ]
  %value.016 = load ptr, ptr %value.016.in, align 8
  %13 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.016)
  %14 = call ptr @LLVMBuildStore(ptr %1, ptr %13, ptr %addr.015)
  %15 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %6, ptr %addr.015, ptr nonnull %next_args, i64 1, ptr nonnull @80)
  %16 = add nuw nsw i64 %12, 1
  %17 = getelementptr inbounds ptr, ptr %9, i64 %12
  %.not = icmp slt i64 %12, %10
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %addr.0.lcssa = phi ptr [ %2, %for.entry ], [ %15, %for.body ]
  tail call void @free(ptr nonnull %8)
  ret ptr %addr.0.lcssa
}

define internal fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = load i64, ptr %2, align 4
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %6
  %9 = load ptr, ptr %8, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %9, i64 0, i32 7
  %10 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %2, i64 0, i32 1
  %11 = load i64, ptr %memberidx3.i, align 4
  %12 = load ptr, ptr %10, align 8
  %13 = getelementptr inbounds ptr, ptr %12, i64 %11
  %14 = load ptr, ptr %13, align 8
  %memberidx2 = getelementptr inbounds %Scope, ptr %14, i64 0, i32 1
  %15 = load ptr, ptr %memberidx2, align 8
  %16 = tail call ptr @malloc(i32 25)
  %17 = load ptr, ptr %15, align 8
  %memberidx1.i = getelementptr inbounds %Map_String_VarId_, ptr %15, i64 0, i32 1
  %18 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i49 = getelementptr inbounds %Map_String_VarId_, ptr %15, i64 0, i32 2
  %19 = load i64, ptr %memberidx2.i49, align 4
  %memberidx1.i.i = getelementptr inbounds %MapIterator_String_VarId_, ptr %16, i64 0, i32 1
  store ptr %17, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_String_VarId_, ptr %16, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_VarId_, ptr %16, i64 0, i32 3
  %20 = add nsw i64 %18, -1
  store i64 %20, ptr %memberidx2.i.i, align 4
  %21 = icmp sgt i64 %18, 0
  br i1 %21, label %while.entry.i, label %MapIterator_String_VarId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %22 = phi i64 [ %25, %ifend.i ], [ %20, %for.entry ]
  %23 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %17, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %23, i64 1
  %24 = load ptr, ptr %23, align 8
  %.not.i = icmp eq ptr %24, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_VarId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %25 = add nsw i64 %22, -1
  store i64 %25, ptr %memberidx2.i.i, align 4
  %26 = icmp sgt i64 %22, 0
  br i1 %26, label %while.entry.i, label %MapIterator_String_VarId__next.exit.loopexit

MapIterator_String_VarId__next.exit.loopexit:     ; preds = %ifend.i, %while.entry.i
  %27 = phi i64 [ %25, %ifend.i ], [ %22, %while.entry.i ]
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_String_VarId__next.exit

MapIterator_String_VarId__next.exit:              ; preds = %MapIterator_String_VarId__next.exit.loopexit, %for.entry
  %28 = phi i64 [ %27, %MapIterator_String_VarId__next.exit.loopexit ], [ %20, %for.entry ]
  %.pn91 = phi ptr [ %incdec.ptr.i, %MapIterator_String_VarId__next.exit.loopexit ], [ %17, %for.entry ]
  %storemerge8285 = add nsw i64 %19, -1
  store i64 %storemerge8285, ptr %memberidx3.i.i, align 4
  %storemerge86 = icmp slt i64 %19, 1
  store i1 %storemerge86, ptr %16, align 1
  br i1 %storemerge86, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_String_VarId__next.exit
  %memberidx.i61 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_String_VarId__next.exit71
  %29 = phi i64 [ %storemerge8285, %for.body.lr.ph ], [ %storemerge82, %MapIterator_String_VarId__next.exit71 ]
  %30 = phi i64 [ %28, %for.body.lr.ph ], [ %74, %MapIterator_String_VarId__next.exit71 ]
  %memberidx1.i.i.promoted = phi ptr [ %.pn91, %for.body.lr.ph ], [ %.pn90, %MapIterator_String_VarId__next.exit71 ]
  %var_value_type.087 = phi ptr [ undef, %for.body.lr.ph ], [ %var_value_type.1, %MapIterator_String_VarId__next.exit71 ]
  %var_entry.0.in = getelementptr inbounds ptr, ptr %memberidx1.i.i.promoted, i64 -1
  %var_entry.0 = load ptr, ptr %var_entry.0.in, align 8
  %31 = load ptr, ptr %var_entry.0, align 8
  %memberidx5 = getelementptr inbounds %MapEntry_String_VarId_, ptr %var_entry.0, i64 0, i32 1
  %32 = load ptr, ptr %memberidx5, align 8
  %33 = load i64, ptr %32, align 4
  switch i64 %33, label %ifend [
    i64 1, label %if.entry
    i64 0, label %if.entry10
    i64 2, label %if.entry16
  ]

for.end:                                          ; preds = %MapIterator_String_VarId__next.exit71, %MapIterator_String_VarId__next.exit
  tail call void @free(ptr nonnull %16)
  %memberidx22 = getelementptr inbounds %Scope, ptr %14, i64 0, i32 7
  %34 = load ptr, ptr %memberidx22, align 8
  %35 = call ptr @malloc(i32 25)
  %36 = load ptr, ptr %34, align 8
  %memberidx1.i51 = getelementptr inbounds %Array_ScopeId_, ptr %34, i64 0, i32 1
  %37 = load i64, ptr %memberidx1.i51, align 4
  store i1 false, ptr %35, align 1
  %memberidx1.i.i52 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %35, i64 0, i32 1
  %memberidx2.i.i53 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %35, i64 0, i32 3
  store ptr %36, ptr %memberidx2.i.i53, align 8
  %memberidx3.i.i54 = getelementptr inbounds %ArrayIterator_ScopeId_, ptr %35, i64 0, i32 2
  store i64 %37, ptr %memberidx3.i.i54, align 4
  store i64 1, ptr %memberidx1.i.i52, align 4
  %38 = icmp slt i64 %37, 1
  br i1 %38, label %for.end26, label %for.body24

if.entry:                                         ; preds = %for.body
  %39 = load ptr, ptr %memberidx, align 8
  %40 = load ptr, ptr %39, align 8
  %memberidx1.i57 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %41 = load i64, ptr %memberidx1.i57, align 4
  %42 = load ptr, ptr %40, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %memberidx2.i58 = getelementptr inbounds %Module, ptr %44, i64 0, i32 1
  %45 = load ptr, ptr %memberidx2.i58, align 8
  %memberidx3.i59 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %46 = load i64, ptr %memberidx3.i59, align 4
  %47 = load ptr, ptr %45, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  br label %ifend.sink.split

ifend.sink.split:                                 ; preds = %if.entry, %if.entry10, %if.entry16
  %.sink = phi ptr [ %96, %if.entry16 ], [ %memberidx14, %if.entry10 ], [ %49, %if.entry ]
  %50 = load ptr, ptr %.sink, align 8
  br label %ifend

ifend:                                            ; preds = %ifend.sink.split, %for.body
  %var_value_type.1 = phi ptr [ %var_value_type.087, %for.body ], [ %50, %ifend.sink.split ]
  %51 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %var_value_type.1, i1 true)
  %memberidx.i60 = getelementptr inbounds %String, ptr %31, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i60, align 4
  %53 = trunc i64 %52 to i32
  %54 = add i32 %53, 1
  %55 = call ptr @malloc(i32 %54)
  %56 = load ptr, ptr %31, align 8
  %57 = load i64, ptr %memberidx.i60, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %55, ptr align 8 %56, i64 %57, i1 false)
  %58 = getelementptr inbounds i8, ptr %55, i64 %57
  store i8 0, ptr %58, align 1
  %59 = call ptr @LLVMBuildAlloca(ptr %1, ptr %51, ptr %55)
  %60 = load ptr, ptr %memberidx.i61, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %61 = load i64, ptr %memberidx.i.i, align 4
  %62 = load i64, ptr %32, align 4
  %memberidx2.i.i62 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %63 = load i64, ptr %memberidx2.i.i62, align 4
  %64 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %61, i64 %62, i64 %63)
  %65 = load ptr, ptr %3, align 8
  %66 = call ptr @malloc(i32 24)
  store ptr %65, ptr %66, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  store i64 %64, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %66, i64 0, i32 2
  store i64 %64, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %60, ptr nonnull %66, ptr %59)
  %67 = add nsw i64 %30, -1
  store i64 %67, ptr %memberidx2.i.i, align 4
  %68 = icmp sgt i64 %30, 0
  br i1 %68, label %while.entry.i67, label %MapIterator_String_VarId__next.exit71

while.entry.i67:                                  ; preds = %ifend, %ifend.i70
  %69 = phi i64 [ %72, %ifend.i70 ], [ %67, %ifend ]
  %70 = phi ptr [ %incdec.ptr.i65, %ifend.i70 ], [ %memberidx1.i.i.promoted, %ifend ]
  %incdec.ptr.i65 = getelementptr inbounds ptr, ptr %70, i64 1
  %71 = load ptr, ptr %70, align 8
  %.not.i66 = icmp eq ptr %71, null
  br i1 %.not.i66, label %ifend.i70, label %MapIterator_String_VarId__next.exit71.loopexit

ifend.i70:                                        ; preds = %while.entry.i67
  %72 = add nsw i64 %69, -1
  store i64 %72, ptr %memberidx2.i.i, align 4
  %.not92 = icmp eq i64 %69, 0
  br i1 %.not92, label %MapIterator_String_VarId__next.exit71.loopexit, label %while.entry.i67

MapIterator_String_VarId__next.exit71.loopexit:   ; preds = %ifend.i70, %while.entry.i67
  %73 = phi i64 [ -1, %ifend.i70 ], [ %69, %while.entry.i67 ]
  store ptr %incdec.ptr.i65, ptr %memberidx1.i.i, align 8
  br label %MapIterator_String_VarId__next.exit71

MapIterator_String_VarId__next.exit71:            ; preds = %MapIterator_String_VarId__next.exit71.loopexit, %ifend
  %74 = phi i64 [ %73, %MapIterator_String_VarId__next.exit71.loopexit ], [ %67, %ifend ]
  %.pn90 = phi ptr [ %incdec.ptr.i65, %MapIterator_String_VarId__next.exit71.loopexit ], [ %memberidx1.i.i.promoted, %ifend ]
  %storemerge82 = add nsw i64 %29, -1
  store i64 %storemerge82, ptr %memberidx3.i.i, align 4
  %storemerge = icmp slt i64 %29, 1
  store i1 %storemerge, ptr %16, align 1
  br i1 %storemerge, label %for.end, label %for.body

if.entry10:                                       ; preds = %for.body
  %75 = load ptr, ptr %memberidx, align 8
  %76 = load ptr, ptr %75, align 8
  %memberidx1.i72 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %77 = load i64, ptr %memberidx1.i72, align 4
  %78 = load ptr, ptr %76, align 8
  %79 = getelementptr inbounds ptr, ptr %78, i64 %77
  %80 = load ptr, ptr %79, align 8
  %memberidx2.i73 = getelementptr inbounds %Module, ptr %80, i64 0, i32 4
  %81 = load ptr, ptr %memberidx2.i73, align 8
  %memberidx3.i74 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %82 = load i64, ptr %memberidx3.i74, align 4
  %83 = load ptr, ptr %81, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %82
  %85 = load ptr, ptr %84, align 8
  %memberidx14 = getelementptr inbounds %Function, ptr %85, i64 0, i32 4
  br label %ifend.sink.split

if.entry16:                                       ; preds = %for.body
  %86 = load ptr, ptr %memberidx, align 8
  %87 = load ptr, ptr %86, align 8
  %memberidx1.i75 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 1
  %88 = load i64, ptr %memberidx1.i75, align 4
  %89 = load ptr, ptr %87, align 8
  %90 = getelementptr inbounds ptr, ptr %89, i64 %88
  %91 = load ptr, ptr %90, align 8
  %memberidx2.i76 = getelementptr inbounds %Module, ptr %91, i64 0, i32 2
  %92 = load ptr, ptr %memberidx2.i76, align 8
  %memberidx3.i77 = getelementptr inbounds %VarId, ptr %32, i64 0, i32 2
  %93 = load i64, ptr %memberidx3.i77, align 4
  %94 = load ptr, ptr %92, align 8
  %95 = getelementptr inbounds ptr, ptr %94, i64 %93
  %96 = load ptr, ptr %95, align 8
  br label %ifend.sink.split

for.body24:                                       ; preds = %for.end, %for.body24
  %97 = phi i64 [ %98, %for.body24 ], [ 1, %for.end ]
  %child_scope.084.in = phi ptr [ %99, %for.body24 ], [ %36, %for.end ]
  %child_scope.084 = load ptr, ptr %child_scope.084.in, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr %0, ptr %1, ptr %child_scope.084)
  %98 = add nuw nsw i64 %97, 1
  store i64 %98, ptr %memberidx1.i.i52, align 4
  %99 = getelementptr inbounds ptr, ptr %36, i64 %97
  %.not = icmp slt i64 %97, %37
  br i1 %.not, label %for.body24, label %for.end26

for.end26:                                        ; preds = %for.body24, %for.end
  tail call void @free(ptr nonnull %35)
  ret void
}

define internal fastcc ptr @CodeGen_codegen_type(ptr nocapture %0, ptr nocapture readonly %1, i1 %2) unnamed_addr {
  %4 = load i64, ptr %1, align 4
  switch i64 %4, label %ifend58 [
    i64 10, label %if.entry
    i64 0, label %if.entry5
    i64 1, label %if.entry9
    i64 2, label %if.entry13
    i64 3, label %if.entry17
    i64 4, label %if.entry21
    i64 6, label %if.entry25
    i64 5, label %if.entry29
    i64 7, label %if.entry33
    i64 8, label %if.entry37
    i64 9, label %if.entry41
    i64 13, label %if.entry45
    i64 14, label %if.entry50
    i64 20, label %if.entry56
  ]

common.ret:                                       ; preds = %if.entry88, %for.end, %true_block91, %true_block, %if.entry102, %ifend100, %for.end81, %if.entry50, %if.entry45, %if.entry41, %if.entry37, %if.entry33, %if.entry29, %if.entry25, %if.entry21, %if.entry17, %if.entry13, %if.entry9, %if.entry5, %if.entry
  %common.ret.op = phi ptr [ %5, %if.entry ], [ %6, %if.entry5 ], [ %7, %if.entry9 ], [ %8, %if.entry13 ], [ %9, %if.entry17 ], [ %10, %if.entry21 ], [ %11, %if.entry25 ], [ %12, %if.entry29 ], [ %13, %if.entry33 ], [ %14, %if.entry37 ], [ %15, %if.entry41 ], [ %18, %if.entry45 ], [ %22, %if.entry50 ], [ %57, %for.end81 ], [ null, %ifend100 ], [ %99, %if.entry102 ], [ %43, %true_block ], [ %76, %true_block91 ], [ %42, %for.end ], [ %75, %if.entry88 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %3
  %5 = tail call ptr @LLVMVoidType()
  br label %common.ret

if.entry5:                                        ; preds = %3
  %6 = tail call ptr @LLVMInt1Type()
  br label %common.ret

if.entry9:                                        ; preds = %3
  %7 = tail call ptr @LLVMIntType(i64 4)
  br label %common.ret

if.entry13:                                       ; preds = %3
  %8 = tail call ptr @LLVMInt8Type()
  br label %common.ret

if.entry17:                                       ; preds = %3
  %9 = tail call ptr @LLVMInt16Type()
  br label %common.ret

if.entry21:                                       ; preds = %3
  %10 = tail call ptr @LLVMInt32Type()
  br label %common.ret

if.entry25:                                       ; preds = %3
  %11 = tail call ptr @LLVMIntType(i64 64)
  br label %common.ret

if.entry29:                                       ; preds = %3
  %12 = tail call ptr @LLVMInt64Type()
  br label %common.ret

if.entry33:                                       ; preds = %3
  %13 = tail call ptr @LLVMInt128Type()
  br label %common.ret

if.entry37:                                       ; preds = %3
  %14 = tail call ptr @LLVMFloatType()
  br label %common.ret

if.entry41:                                       ; preds = %3
  %15 = tail call ptr @LLVMDoubleType()
  br label %common.ret

if.entry45:                                       ; preds = %3
  %memberidx48 = getelementptr inbounds %PointerType, ptr %1, i64 0, i32 1
  %16 = load ptr, ptr %memberidx48, align 8
  %17 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %16, i1 true)
  %18 = tail call ptr @LLVMPointerType(ptr %17, i64 0)
  br label %common.ret

if.entry50:                                       ; preds = %3
  %memberidx53 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 1
  %19 = load ptr, ptr %memberidx53, align 8
  %20 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %19, i1 true)
  %memberidx54 = getelementptr inbounds %ArrayType, ptr %1, i64 0, i32 2
  %21 = load i64, ptr %memberidx54, align 4
  %22 = tail call ptr @LLVMArrayType(ptr %20, i64 %21)
  br label %common.ret

if.entry56:                                       ; preds = %3
  %memberidx59 = getelementptr inbounds %GenericType, ptr %1, i64 0, i32 3
  %23 = load ptr, ptr %memberidx59, align 8
  %.pr = load i64, ptr %23, align 4
  br label %ifend58

ifend58:                                          ; preds = %3, %if.entry56
  %24 = phi i64 [ %4, %3 ], [ %.pr, %if.entry56 ]
  %tt.0 = phi ptr [ %1, %3 ], [ %23, %if.entry56 ]
  switch i64 %24, label %ifend86 [
    i64 16, label %if.entry60
    i64 15, label %if.entry71
    i64 11, label %if.entry84
  ]

if.entry60:                                       ; preds = %ifend58
  %memberidx63 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 1
  %25 = load ptr, ptr %memberidx63, align 8
  %memberidx64 = getelementptr inbounds %Array_Type_, ptr %25, i64 0, i32 1
  %26 = load i64, ptr %memberidx64, align 4
  %27 = alloca ptr, i64 %26, align 8
  %28 = tail call ptr @malloc(i32 25)
  %29 = load ptr, ptr %25, align 8
  %30 = load i64, ptr %memberidx64, align 4
  store i1 false, ptr %28, align 1
  %memberidx1.i.i168 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 1
  %memberidx2.i.i169 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 3
  store ptr %29, ptr %memberidx2.i.i169, align 8
  %memberidx3.i.i170 = getelementptr inbounds %ArrayIterator_Type_, ptr %28, i64 0, i32 2
  store i64 %30, ptr %memberidx3.i.i170, align 4
  store i64 1, ptr %memberidx1.i.i168, align 4
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %for.end, label %for.body

for.body:                                         ; preds = %if.entry60, %for.body
  %32 = phi i64 [ %36, %for.body ], [ 1, %if.entry60 ]
  %arg_ty.0194.in = phi ptr [ %37, %for.body ], [ %29, %if.entry60 ]
  %idx.0193 = phi i64 [ %33, %for.body ], [ 0, %if.entry60 ]
  %arg_ty.0194 = load ptr, ptr %arg_ty.0194.in, align 8
  %33 = add nuw nsw i64 %idx.0193, 1
  %34 = getelementptr inbounds ptr, ptr %27, i64 %idx.0193
  %35 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %arg_ty.0194, i1 true)
  store ptr %35, ptr %34, align 8
  %36 = add nuw nsw i64 %32, 1
  store i64 %36, ptr %memberidx1.i.i168, align 4
  %37 = getelementptr inbounds ptr, ptr %29, i64 %32
  %.not203 = icmp slt i64 %32, %30
  br i1 %.not203, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.entry60
  tail call void @free(ptr nonnull %28)
  %memberidx67 = getelementptr inbounds %FunctionType, ptr %tt.0, i64 0, i32 2
  %38 = load ptr, ptr %memberidx67, align 8
  %39 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %38, i1 true)
  %40 = load ptr, ptr %memberidx63, align 8
  %memberidx69 = getelementptr inbounds %Array_Type_, ptr %40, i64 0, i32 1
  %41 = load i64, ptr %memberidx69, align 4
  %42 = call ptr @LLVMFunctionType(ptr %39, ptr nonnull %27, i64 %41, i1 false)
  br i1 %2, label %true_block, label %common.ret

true_block:                                       ; preds = %for.end
  %43 = call ptr @LLVMPointerType(ptr %42, i64 0)
  br label %common.ret

if.entry71:                                       ; preds = %ifend58
  %memberidx74 = getelementptr inbounds %TupleType, ptr %tt.0, i64 0, i32 1
  %44 = load ptr, ptr %memberidx74, align 8
  %memberidx75 = getelementptr inbounds %Array_Type_, ptr %44, i64 0, i32 1
  %45 = load i64, ptr %memberidx75, align 4
  %46 = alloca ptr, i64 %45, align 8
  %47 = tail call ptr @malloc(i32 25)
  %48 = load ptr, ptr %44, align 8
  %49 = load i64, ptr %memberidx75, align 4
  store i1 false, ptr %47, align 1
  %memberidx1.i.i159 = getelementptr inbounds %ArrayIterator_Type_, ptr %47, i64 0, i32 1
  %memberidx2.i.i160 = getelementptr inbounds %ArrayIterator_Type_, ptr %47, i64 0, i32 3
  store ptr %48, ptr %memberidx2.i.i160, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Type_, ptr %47, i64 0, i32 2
  store i64 %49, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i159, align 4
  %50 = icmp slt i64 %49, 1
  br i1 %50, label %for.end81, label %for.body79

for.body79:                                       ; preds = %if.entry71, %for.body79
  %51 = phi i64 [ %55, %for.body79 ], [ 1, %if.entry71 ]
  %element_type2.0197.in = phi ptr [ %56, %for.body79 ], [ %48, %if.entry71 ]
  %idx1.0196 = phi i64 [ %52, %for.body79 ], [ 0, %if.entry71 ]
  %element_type2.0197 = load ptr, ptr %element_type2.0197.in, align 8
  %52 = add nuw nsw i64 %idx1.0196, 1
  %53 = getelementptr inbounds ptr, ptr %46, i64 %idx1.0196
  %54 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %element_type2.0197, i1 true)
  store ptr %54, ptr %53, align 8
  %55 = add nuw nsw i64 %51, 1
  store i64 %55, ptr %memberidx1.i.i159, align 4
  %56 = getelementptr inbounds ptr, ptr %48, i64 %51
  %.not202 = icmp slt i64 %51, %49
  br i1 %.not202, label %for.body79, label %for.end81

for.end81:                                        ; preds = %for.body79, %if.entry71
  %idx1.0.lcssa = phi i64 [ 0, %if.entry71 ], [ %52, %for.body79 ]
  tail call void @free(ptr nonnull %47)
  %57 = call ptr @LLVMStructType(ptr nonnull %46, i64 %idx1.0.lcssa, i1 false)
  br label %common.ret

if.entry84:                                       ; preds = %ifend58
  %memberidx87 = getelementptr inbounds %ObjectType, ptr %tt.0, i64 0, i32 1
  %58 = load ptr, ptr %memberidx87, align 8
  %59 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %58)
  %.not.i = icmp eq ptr %59, null
  br i1 %.not.i, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %if.entry88

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry84
  %memberidx.i171 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %60 = load ptr, ptr %memberidx.i171, align 8
  %61 = load ptr, ptr %60, align 8
  %62 = load i64, ptr %58, align 4
  %63 = load ptr, ptr %61, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %memberidx2.i.i172 = getelementptr inbounds %Module, ptr %65, i64 0, i32 3
  %66 = load ptr, ptr %memberidx2.i.i172, align 8
  %memberidx3.i.i173 = getelementptr inbounds %TypeId, ptr %58, i64 0, i32 2
  %67 = load i64, ptr %memberidx3.i.i173, align 4
  %68 = load ptr, ptr %66, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %70)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %70)
  %71 = load ptr, ptr %70, align 8
  %72 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %71)
  %.not155 = icmp eq ptr %72, null
  br i1 %.not155, label %CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge, label %if.entry88

CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge: ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %.pre = load i64, ptr %tt.0, align 4
  br label %ifend86

ifend86:                                          ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge, %ifend58
  %73 = phi i64 [ %.pre, %CodeGen_get_or_codegen_class_from_typeid.exit.ifend86_crit_edge ], [ %24, %ifend58 ]
  %74 = icmp eq i64 %73, 12
  br i1 %74, label %if.entry98, label %ifend100

if.entry88:                                       ; preds = %if.entry84, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i188 = phi ptr [ %72, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %59, %if.entry84 ]
  %75 = load ptr, ptr %common.ret.op.i188, align 8
  br i1 %2, label %true_block91, label %common.ret

true_block91:                                     ; preds = %if.entry88
  %76 = tail call ptr @LLVMPointerType(ptr %75, i64 0)
  br label %common.ret

if.entry98:                                       ; preds = %ifend86
  %memberidx101 = getelementptr inbounds %EnumType, ptr %tt.0, i64 0, i32 1
  %77 = load ptr, ptr %memberidx101, align 8
  %78 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %77)
  %.not.i174 = icmp eq ptr %78, null
  br i1 %.not.i174, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %if.entry102

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry98
  %memberidx.i177 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %79 = load ptr, ptr %memberidx.i177, align 8
  %80 = load ptr, ptr %79, align 8
  %81 = load i64, ptr %77, align 4
  %82 = load ptr, ptr %80, align 8
  %83 = getelementptr inbounds ptr, ptr %82, i64 %81
  %84 = load ptr, ptr %83, align 8
  %memberidx2.i.i178 = getelementptr inbounds %Module, ptr %84, i64 0, i32 6
  %85 = load ptr, ptr %memberidx2.i.i178, align 8
  %memberidx3.i.i179 = getelementptr inbounds %TypeId, ptr %77, i64 0, i32 2
  %86 = load i64, ptr %memberidx3.i.i179, align 4
  %87 = load ptr, ptr %85, align 8
  %88 = getelementptr inbounds ptr, ptr %87, i64 %86
  %89 = load ptr, ptr %88, align 8
  tail call fastcc void @CodeGen_declare_enum(ptr %0, ptr %89)
  %90 = load ptr, ptr %89, align 8
  %91 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %90)
  %.not = icmp eq ptr %91, null
  br i1 %.not, label %ifend100, label %if.entry102

ifend100:                                         ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit, %ifend86
  %92 = tail call ptr @malloc(i32 32)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %92, ptr noundef nonnull align 8 dereferenceable(32) @244, i64 32, i1 false)
  %93 = tail call ptr @malloc(i32 24)
  %94 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %94, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %95 = tail call ptr @malloc(i32 24)
  %96 = tail call i64 @write(i64 1, ptr %94, i64 7)
  tail call void @free(ptr %94)
  tail call void @free(ptr %95)
  %97 = tail call i64 @write(i64 1, ptr %92, i64 32)
  %98 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %92)
  tail call void @free(ptr %93)
  tail call void @exit(i64 -1)
  br label %common.ret

if.entry102:                                      ; preds = %if.entry98, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i175191 = phi ptr [ %91, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %78, %if.entry98 ]
  %99 = load ptr, ptr %common.ret.op.i175191, align 8
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_tuple_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 1
  %4 = load i1, ptr %memberidx, align 1
  br i1 %4, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  %5 = tail call ptr @malloc(i32 54)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %5, ptr noundef nonnull align 8 dereferenceable(54) @257, i64 54, i1 false)
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %7, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %8 = tail call ptr @malloc(i32 24)
  %9 = tail call i64 @write(i64 1, ptr %7, i64 7)
  tail call void @free(ptr %7)
  tail call void @free(ptr %8)
  %10 = tail call i64 @write(i64 1, ptr %5, i64 54)
  %11 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %5)
  tail call void @free(ptr %6)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %memberidx1 = getelementptr inbounds %TupleExpression, ptr %2, i64 0, i32 4
  %12 = load ptr, ptr %memberidx1, align 8
  %memberidx2 = getelementptr inbounds %Array_Expression_, ptr %12, i64 0, i32 1
  %13 = load i64, ptr %memberidx2, align 4
  %14 = alloca ptr, i64 %13, align 8
  %15 = tail call ptr @malloc(i32 25)
  %16 = load ptr, ptr %12, align 8
  %17 = load i64, ptr %memberidx2, align 4
  store i1 false, ptr %15, align 1
  %memberidx1.i.i12 = getelementptr inbounds %ArrayIterator_Expression_, ptr %15, i64 0, i32 1
  %memberidx2.i.i13 = getelementptr inbounds %ArrayIterator_Expression_, ptr %15, i64 0, i32 3
  store ptr %16, ptr %memberidx2.i.i13, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %15, i64 0, i32 2
  store i64 %17, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i12, align 4
  %18 = icmp slt i64 %17, 1
  br i1 %18, label %for.end, label %for.body

for.body:                                         ; preds = %ifend, %for.body
  %19 = phi i64 [ %23, %for.body ], [ 1, %ifend ]
  %value.020.in = phi ptr [ %24, %for.body ], [ %16, %ifend ]
  %idx.019 = phi i64 [ %20, %for.body ], [ 0, %ifend ]
  %value.020 = load ptr, ptr %value.020.in, align 8
  %20 = add nuw nsw i64 %idx.019, 1
  %21 = getelementptr inbounds ptr, ptr %14, i64 %idx.019
  %22 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %value.020)
  store ptr %22, ptr %21, align 8
  %23 = add nuw nsw i64 %19, 1
  store i64 %23, ptr %memberidx1.i.i12, align 4
  %24 = getelementptr inbounds ptr, ptr %16, i64 %19
  %.not = icmp slt i64 %19, %17
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend
  %idx.0.lcssa = phi i64 [ 0, %ifend ], [ %20, %for.body ]
  tail call void @free(ptr nonnull %15)
  %25 = call ptr @LLVMConstStruct(ptr nonnull %14, i64 %idx.0.lcssa, i1 false)
  ret ptr %25
}

define internal fastcc ptr @CodeGen_codegen_var_access_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpression, ptr %2, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %4)
  %memberidx1 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %6, i1 true)
  %8 = icmp eq ptr %5, null
  br i1 %8, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %9 = tail call ptr @malloc(i32 50)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %9, ptr noundef nonnull align 8 dereferenceable(50) @266, i64 50, i1 false)
  %10 = tail call ptr @malloc(i32 24)
  %11 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %11, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %12 = tail call ptr @malloc(i32 24)
  %13 = tail call i64 @write(i64 1, ptr %11, i64 7)
  tail call void @free(ptr %11)
  tail call void @free(ptr %12)
  %14 = tail call i64 @write(i64 1, ptr %9, i64 50)
  %15 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %9)
  tail call void @free(ptr %10)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %16 = load ptr, ptr %memberidx, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %common.ret, label %ifend6

common.ret:                                       ; preds = %ifend, %ifend10, %if.entry8
  %common.ret.op = phi ptr [ %20, %if.entry8 ], [ %21, %ifend10 ], [ %5, %ifend ]
  ret ptr %common.ret.op

ifend6:                                           ; preds = %ifend
  %memberidx7 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %19 = load i1, ptr %memberidx7, align 1
  br i1 %19, label %if.entry8, label %ifend10

if.entry8:                                        ; preds = %ifend6
  %20 = tail call ptr @LLVMGetInitializer(ptr %5)
  br label %common.ret

ifend10:                                          ; preds = %ifend6
  %21 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %7, ptr %5, ptr nonnull @80)
  br label %common.ret
}

define internal fastcc void @Map_String_uint__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_uint_, ptr %17, i64 0, i32 1
  %19 = load i64, ptr %memberidx19, align 4
  tail call fastcc void @Map_String_uint____setitem__(ptr nonnull %0, ptr %18, i64 %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_uint____setitem__(ptr nocapture %0, ptr %1, i64 %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_uint_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_uint__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_uint__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_uint_, ptr %37, i64 0, i32 1
  store i64 %2, ptr %memberidx1.i, align 4
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_uint__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_codegen_match_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @LLVMAppendBasicBlock(ptr %4, ptr nonnull @271)
  %6 = load ptr, ptr %memberidx, align 8
  %7 = tail call ptr @LLVMAppendBasicBlock(ptr %6, ptr nonnull @272)
  %memberidx2 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 5
  %8 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_MatchExpressionCase_, ptr %8, i64 0, i32 1
  %9 = load i64, ptr %memberidx3, align 4
  %10 = add nuw i64 %9, 1
  %11 = alloca ptr, i64 %10, align 8
  %12 = alloca ptr, i64 %10, align 8
  %memberidx4 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %13 = load ptr, ptr %memberidx4, align 8
  %14 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %13, i1 true)
  %memberidx5 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 4
  %15 = load ptr, ptr %memberidx5, align 8
  %16 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %15)
  %memberidx6 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 7
  %17 = load i1, ptr %memberidx6, align 1
  br i1 %17, label %end, label %false_block

false_block:                                      ; preds = %3
  %18 = tail call ptr @LLVMBuildSwitch(ptr %1, ptr %16, ptr %5, i64 0)
  br label %end

end:                                              ; preds = %3, %false_block
  %ternary = phi ptr [ %18, %false_block ], [ null, %3 ]
  %19 = load ptr, ptr %memberidx2, align 8
  %20 = tail call ptr @malloc(i32 25)
  %21 = load ptr, ptr %19, align 8
  %memberidx1.i = getelementptr inbounds %Array_MatchExpressionCase_, ptr %19, i64 0, i32 1
  %22 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %20, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 3
  store ptr %21, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_MatchExpressionCase_, ptr %20, i64 0, i32 2
  store i64 %22, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %23 = icmp slt i64 %22, 1
  br i1 %23, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %end
  %24 = icmp ne ptr %ternary, null
  %memberidx.i92 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %CodeGen_codegen_block.exit
  %25 = phi i64 [ 1, %for.body.lr.ph ], [ %69, %CodeGen_codegen_block.exit ]
  %case.0122.in = phi ptr [ %21, %for.body.lr.ph ], [ %70, %CodeGen_codegen_block.exit ]
  %curr_block.0121 = phi ptr [ null, %for.body.lr.ph ], [ %curr_block.1, %CodeGen_codegen_block.exit ]
  %idx.0120 = phi i64 [ 0, %for.body.lr.ph ], [ %67, %CodeGen_codegen_block.exit ]
  %case.0122 = load ptr, ptr %case.0122.in, align 8
  %.not88 = icmp eq ptr %curr_block.0121, null
  br i1 %.not88, label %ifend, label %if.entry

for.end:                                          ; preds = %CodeGen_codegen_block.exit, %end
  %idx.0.lcssa = phi i64 [ 0, %end ], [ %67, %CodeGen_codegen_block.exit ]
  tail call void @free(ptr nonnull %20)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %5)
  %26 = getelementptr inbounds ptr, ptr %11, i64 %idx.0.lcssa
  store ptr %5, ptr %26, align 8
  %27 = getelementptr inbounds ptr, ptr %12, i64 %idx.0.lcssa
  %memberidx24 = getelementptr inbounds %MatchExpression, ptr %2, i64 0, i32 6
  %28 = load ptr, ptr %memberidx24, align 8
  %memberidx.i94 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %29 = load i1, ptr %memberidx.i94, align 1
  store i1 false, ptr %memberidx.i94, align 1
  %30 = load ptr, ptr %28, align 8
  %31 = tail call ptr @malloc(i32 25)
  %32 = load ptr, ptr %30, align 8
  %memberidx1.i.i95 = getelementptr inbounds %Array_Statement_, ptr %30, i64 0, i32 1
  %33 = load i64, ptr %memberidx1.i.i95, align 4
  store i1 false, ptr %31, align 1
  %memberidx1.i.i.i96 = getelementptr inbounds %ArrayIterator_Statement_, ptr %31, i64 0, i32 1
  %memberidx2.i.i.i97 = getelementptr inbounds %ArrayIterator_Statement_, ptr %31, i64 0, i32 3
  store ptr %32, ptr %memberidx2.i.i.i97, align 8
  %memberidx3.i.i.i98 = getelementptr inbounds %ArrayIterator_Statement_, ptr %31, i64 0, i32 2
  store i64 %33, ptr %memberidx3.i.i.i98, align 4
  store i64 1, ptr %memberidx1.i.i.i96, align 4
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %for.end.i110, label %for.body.i107

for.body.i107:                                    ; preds = %for.end, %for.body.i107
  %35 = phi i64 [ %36, %for.body.i107 ], [ 1, %for.end ]
  %statement.0.i102115.in = phi ptr [ %37, %for.body.i107 ], [ %32, %for.end ]
  %statement.0.i102115 = load ptr, ptr %statement.0.i102115.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i102115)
  %36 = add nuw nsw i64 %35, 1
  store i64 %36, ptr %memberidx1.i.i.i96, align 4
  %37 = getelementptr inbounds ptr, ptr %32, i64 %35
  %.not130 = icmp slt i64 %35, %33
  br i1 %.not130, label %for.body.i107, label %for.end.i110

for.end.i110:                                     ; preds = %for.body.i107, %for.end
  tail call void @free(ptr nonnull %31)
  %memberidx4.i108 = getelementptr inbounds %Block, ptr %28, i64 0, i32 4
  %38 = load ptr, ptr %memberidx4.i108, align 8
  %.not.i109 = icmp eq ptr %38, null
  br i1 %.not.i109, label %CodeGen_codegen_block.exit113, label %if.entry.i111

if.entry.i111:                                    ; preds = %for.end.i110
  %39 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %38)
  br label %CodeGen_codegen_block.exit113

CodeGen_codegen_block.exit113:                    ; preds = %for.end.i110, %if.entry.i111
  %yields.0.i112 = phi ptr [ %39, %if.entry.i111 ], [ null, %for.end.i110 ]
  store i1 %29, ptr %memberidx.i94, align 1
  store ptr %yields.0.i112, ptr %27, align 8
  %40 = tail call ptr @LLVMBuildBr(ptr %1, ptr %7)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %7)
  %41 = load ptr, ptr %memberidx4, align 8
  %42 = load i64, ptr %41, align 4
  %.not = icmp eq i64 %42, 10
  br i1 %.not, label %common.ret, label %if.entry27

if.entry:                                         ; preds = %for.body
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr nonnull %curr_block.0121)
  br label %ifend

ifend:                                            ; preds = %for.body, %if.entry
  %43 = load ptr, ptr %memberidx, align 8
  %44 = tail call ptr @LLVMAppendBasicBlock(ptr %43, ptr nonnull @273)
  %45 = load i64, ptr %case.0122, align 4
  %46 = icmp eq i64 %45, 1
  %47 = and i1 %24, %46
  br i1 %47, label %if.entry11, label %else12

if.entry11:                                       ; preds = %ifend
  %memberidx14 = getelementptr inbounds %MatchExpressionCase, ptr %case.0122, i64 0, i32 1
  %48 = load ptr, ptr %memberidx14, align 8
  tail call fastcc void @CodeGen_codegen_match_case(ptr nonnull %0, ptr %1, ptr nonnull %ternary, ptr %48, ptr %44)
  br label %ifend13

else12:                                           ; preds = %ifend
  %49 = load ptr, ptr %memberidx2, align 8
  %memberidx19 = getelementptr inbounds %Array_MatchExpressionCase_, ptr %49, i64 0, i32 1
  %50 = load i64, ptr %memberidx19, align 4
  %51 = add i64 %50, -1
  %52 = icmp eq i64 %idx.0120, %51
  br i1 %52, label %end17, label %false_block16

ifend13:                                          ; preds = %end17, %if.entry11
  %curr_block.1 = phi ptr [ %curr_block.0121, %if.entry11 ], [ %ternary21, %end17 ]
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %44)
  %memberidx23 = getelementptr inbounds %MatchExpressionCase, ptr %case.0122, i64 0, i32 2
  %53 = load ptr, ptr %memberidx23, align 8
  %54 = load i1, ptr %memberidx.i92, align 1
  store i1 false, ptr %memberidx.i92, align 1
  %55 = load ptr, ptr %53, align 8
  %56 = tail call ptr @malloc(i32 25)
  %57 = load ptr, ptr %55, align 8
  %memberidx1.i.i93 = getelementptr inbounds %Array_Statement_, ptr %55, i64 0, i32 1
  %58 = load i64, ptr %memberidx1.i.i93, align 4
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %56, i64 0, i32 1
  %59 = icmp slt i64 %58, 1
  br i1 %59, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %ifend13, %for.body.i
  %60 = phi i64 [ %61, %for.body.i ], [ 1, %ifend13 ]
  %statement.0.i117.in = phi ptr [ %62, %for.body.i ], [ %57, %ifend13 ]
  %statement.0.i117 = load ptr, ptr %statement.0.i117.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i117)
  %61 = add nuw nsw i64 %60, 1
  store i64 %61, ptr %memberidx1.i.i.i, align 4
  %62 = getelementptr inbounds ptr, ptr %57, i64 %60
  %.not128 = icmp slt i64 %60, %58
  br i1 %.not128, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %ifend13
  tail call void @free(ptr nonnull %56)
  %memberidx4.i = getelementptr inbounds %Block, ptr %53, i64 0, i32 4
  %63 = load ptr, ptr %memberidx4.i, align 8
  %.not.i = icmp eq ptr %63, null
  br i1 %.not.i, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %64 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %63)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  %yields.0.i = phi ptr [ %64, %if.entry.i ], [ null, %for.end.i ]
  store i1 %54, ptr %memberidx.i92, align 1
  %65 = tail call ptr @LLVMBuildBr(ptr %1, ptr %7)
  %66 = getelementptr inbounds ptr, ptr %11, i64 %idx.0120
  store ptr %44, ptr %66, align 8
  %67 = add nuw nsw i64 %idx.0120, 1
  %68 = getelementptr inbounds ptr, ptr %12, i64 %idx.0120
  store ptr %yields.0.i, ptr %68, align 8
  %69 = add nuw nsw i64 %25, 1
  store i64 %69, ptr %memberidx1.i.i, align 4
  %70 = getelementptr inbounds ptr, ptr %21, i64 %25
  %.not129 = icmp slt i64 %25, %22
  br i1 %.not129, label %for.body, label %for.end

false_block16:                                    ; preds = %else12
  %71 = load ptr, ptr %memberidx, align 8
  %72 = tail call ptr @LLVMAppendBasicBlock(ptr %71, ptr nonnull @274)
  br label %end17

end17:                                            ; preds = %else12, %false_block16
  %ternary21 = phi ptr [ %72, %false_block16 ], [ %5, %else12 ]
  %memberidx22 = getelementptr inbounds %MatchExpressionCase, ptr %case.0122, i64 0, i32 1
  %73 = load ptr, ptr %memberidx22, align 8
  %74 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %73)
  %75 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %74, ptr %44, ptr %ternary21)
  br label %ifend13

common.ret:                                       ; preds = %CodeGen_codegen_block.exit113, %if.entry27
  %common.ret.op = phi ptr [ %77, %if.entry27 ], [ null, %CodeGen_codegen_block.exit113 ]
  ret ptr %common.ret.op

if.entry27:                                       ; preds = %CodeGen_codegen_block.exit113
  %76 = add nuw nsw i64 %idx.0.lcssa, 1
  %77 = tail call ptr @LLVMBuildPhi(ptr %1, ptr %14, ptr nonnull @275)
  call void @LLVMAddIncoming(ptr %77, ptr nonnull %12, ptr nonnull %11, i64 %76)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_class(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
for.entry:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = load ptr, ptr %1, align 8
  %9 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %8)
  %memberidx1 = getelementptr inbounds %Class, ptr %1, i64 0, i32 5
  %10 = load ptr, ptr %memberidx1, align 8
  %11 = tail call ptr @malloc(i32 25)
  %12 = load ptr, ptr %10, align 8
  %memberidx1.i = getelementptr inbounds %Array_ClassMethod_, ptr %10, i64 0, i32 1
  %13 = load i64, ptr %memberidx1.i, align 4
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 3
  store ptr %12, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ClassMethod_, ptr %11, i64 0, i32 2
  store i64 %13, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %14 = icmp slt i64 %13, 1
  %method.0267 = load ptr, ptr %12, align 8
  store i1 %14, ptr %11, align 1
  br i1 %14, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %memberidx5 = getelementptr inbounds %CGClassType, ptr %9, i64 0, i32 3
  %memberidx8 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %memberidx15 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx.i135 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %memberidx21 = getelementptr inbounds %Class, ptr %1, i64 0, i32 2
  %memberidx33 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %memberidx43 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %memberidx.i254 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.incr
  %15 = phi i64 [ 1, %for.body.lr.ph ], [ %17, %for.incr ]
  %method.0268 = phi ptr [ %method.0267, %for.body.lr.ph ], [ %method.0, %for.incr ]
  %memberidx3 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 7
  %16 = load i1, ptr %memberidx3, align 1
  br i1 %16, label %for.incr, label %ifend

for.incr:                                         ; preds = %for.body, %CodeGen_codegen_block.exit
  %17 = add nuw nsw i64 %15, 1
  store i64 %17, ptr %memberidx1.i.i, align 4
  %18 = getelementptr inbounds ptr, ptr %12, i64 %15
  %19 = icmp sge i64 %15, %13
  %method.0 = load ptr, ptr %18, align 8
  store i1 %19, ptr %11, align 1
  br i1 %19, label %for.end, label %for.body

for.end:                                          ; preds = %for.incr, %for.entry
  tail call void @free(ptr nonnull %11)
  ret void

ifend:                                            ; preds = %for.body
  %20 = load ptr, ptr %method.0268, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  %memberidx.i96 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i96, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %22 = load i64, ptr %21, align 4
  %memberidx1.i.i97 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx1.i.i97, align 4
  %memberidx2.i.i98 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 2
  %24 = load i64, ptr %memberidx2.i.i98, align 4
  %25 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @243, i64 %22, i64 %23, i64 %24)
  %26 = load ptr, ptr %6, align 8
  %27 = call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 %25, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 %25, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %28 = trunc i64 %25 to i32
  %29 = add i32 %28, 1
  %30 = call ptr @malloc(i32 %29)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr align 8 %26, i64 %25, i1 false)
  %31 = getelementptr inbounds i8, ptr %30, i64 %25
  store i8 0, ptr %31, align 1
  %32 = load i64, ptr %20, align 4
  %memberidx2.i99 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 2
  %33 = load i64, ptr %memberidx2.i99, align 4
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %7, ptr nonnull @259, ptr %30, i64 %32, i64 %33)
  %35 = load ptr, ptr %7, align 8
  %36 = call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %30)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  %37 = load ptr, ptr %memberidx5, align 8
  %38 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %36)
  %memberidx.i100 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %37, i64 0, i32 1
  %39 = load i64, ptr %memberidx.i100, align 4
  %40 = urem i64 %38, %39
  %41 = load ptr, ptr %37, align 8
  %42 = getelementptr inbounds ptr, ptr %41, i64 %40
  %43 = load ptr, ptr %42, align 8
  %.not.i = icmp eq ptr %43, null
  br i1 %.not.i, label %while.end.i, label %while.entry.i

while.entry.i:                                    ; preds = %ifend, %else.i
  %44 = phi ptr [ %56, %else.i ], [ %41, %ifend ]
  %45 = phi i64 [ %57, %else.i ], [ %39, %ifend ]
  %46 = phi ptr [ %61, %else.i ], [ %43, %ifend ]
  %hash.0.i = phi i64 [ %59, %else.i ], [ %40, %ifend ]
  %47 = load ptr, ptr %46, align 8
  %memberidx.i.i101 = getelementptr inbounds %String, ptr %47, i64 0, i32 1
  %48 = load i64, ptr %memberidx.i.i101, align 4
  %.not.i.i = icmp eq i64 %48, %34
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %49 = load ptr, ptr %47, align 8
  %50 = call i64 @memcmp(ptr %49, ptr %35, i64 %34)
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i100, align 4
  %.pre269 = load ptr, ptr %37, align 8
  br label %else.i

while.end.i:                                      ; preds = %else.i, %ifend.i.i, %ifend
  %memberidx6 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 3
  %52 = load ptr, ptr %memberidx6, align 8
  %53 = call ptr @malloc(i32 11)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(11) %53, ptr noundef nonnull align 8 dereferenceable(11) @149, i64 11, i1 false)
  %54 = call ptr @malloc(i32 24)
  store ptr %53, ptr %54, align 8
  %memberidx1.i.i103 = getelementptr inbounds %String, ptr %54, i64 0, i32 1
  store i64 11, ptr %memberidx1.i.i103, align 4
  %memberidx2.i.i104 = getelementptr inbounds %String, ptr %54, i64 0, i32 2
  store i64 11, ptr %memberidx2.i.i104, align 4
  %memberidx.i105 = getelementptr inbounds %String, ptr %52, i64 0, i32 1
  %55 = load i64, ptr %memberidx.i105, align 4
  %.not.i107 = icmp eq i64 %55, 11
  br i1 %.not.i107, label %ifend.i, label %String___eq__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %56 = phi ptr [ %.pre269, %ifend.i.i.else.i_crit_edge ], [ %44, %while.entry.i ]
  %57 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %45, %while.entry.i ]
  %58 = add nuw i64 %hash.0.i, 1
  %59 = urem i64 %58, %57
  %60 = getelementptr inbounds ptr, ptr %56, i64 %59
  %61 = load ptr, ptr %60, align 8
  %.not26.i = icmp eq ptr %61, null
  br i1 %.not26.i, label %while.end.i, label %while.entry.i

ifend.i:                                          ; preds = %while.end.i
  %62 = load ptr, ptr %52, align 8
  %63 = call i64 @memcmp(ptr %62, ptr nonnull %53, i64 11)
  %64 = icmp eq i64 %63, 0
  br label %String___eq__.exit

String___eq__.exit:                               ; preds = %while.end.i, %ifend.i
  %common.ret.op.i108 = phi i1 [ %64, %ifend.i ], [ false, %while.end.i ]
  %65 = load ptr, ptr %0, align 8
  %66 = load ptr, ptr %memberidx8, align 8
  %memberidx.i109 = getelementptr inbounds %String, ptr %66, i64 0, i32 1
  %67 = load i64, ptr %memberidx.i109, align 4
  %68 = trunc i64 %67 to i32
  %69 = add i32 %68, 1
  %70 = call ptr @malloc(i32 %69)
  %71 = load ptr, ptr %66, align 8
  %72 = load i64, ptr %memberidx.i109, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %70, ptr align 8 %71, i64 %72, i1 false)
  %73 = getelementptr inbounds i8, ptr %70, i64 %72
  store i8 0, ptr %73, align 1
  %74 = load ptr, ptr %memberidx6, align 8
  %memberidx.i110 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  %75 = load i64, ptr %memberidx.i110, align 4
  %76 = trunc i64 %75 to i32
  %77 = add i32 %76, 1
  %78 = call ptr @malloc(i32 %77)
  %79 = load ptr, ptr %74, align 8
  %80 = load i64, ptr %memberidx.i110, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %78, ptr align 8 %79, i64 %80, i1 false)
  %81 = getelementptr inbounds i8, ptr %78, i64 %80
  store i8 0, ptr %81, align 1
  %82 = alloca ptr, align 8
  %83 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %82, ptr nonnull @104, ptr %70, ptr %78)
  %84 = load ptr, ptr %82, align 8
  %85 = tail call ptr @malloc(i32 24)
  store ptr %84, ptr %85, align 8
  %memberidx1.i111 = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  store i64 %83, ptr %memberidx1.i111, align 4
  %memberidx2.i112 = getelementptr inbounds %String, ptr %85, i64 0, i32 2
  store i64 %83, ptr %memberidx2.i112, align 4
  tail call void @free(ptr %70)
  tail call void @free(ptr %78)
  %86 = trunc i64 %83 to i32
  %87 = add i32 %86, 1
  %88 = call ptr @malloc(i32 %87)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %88, ptr align 8 %84, i64 %83, i1 false)
  %89 = getelementptr inbounds i8, ptr %88, i64 %83
  store i8 0, ptr %89, align 1
  %90 = call ptr @LLVMGetNamedFunction(ptr %65, ptr %88)
  %91 = call ptr @LLVMAppendBasicBlock(ptr %90, ptr nonnull @80)
  %92 = call ptr @LLVMCreateBuilder()
  call void @LLVMPositionBuilderAtEnd(ptr %92, ptr %91)
  %memberidx10 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 8
  %93 = load ptr, ptr %memberidx10, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nonnull %0, ptr %92, ptr %93)
  %memberidx11 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 1
  %94 = load i1, ptr %memberidx11, align 1
  br i1 %94, label %for.entry34, label %if.entry12

if.entry12:                                       ; preds = %String___eq__.exit
  %95 = call ptr @LLVMGetParam(ptr %90, i64 0)
  %96 = load ptr, ptr %memberidx15, align 8
  %97 = load ptr, ptr %memberidx10, align 8
  %98 = load ptr, ptr %96, align 8
  %99 = load i64, ptr %97, align 4
  %100 = load ptr, ptr %98, align 8
  %101 = getelementptr inbounds ptr, ptr %100, i64 %99
  %102 = load ptr, ptr %101, align 8
  %memberidx2.i114 = getelementptr inbounds %Module, ptr %102, i64 0, i32 7
  %103 = load ptr, ptr %memberidx2.i114, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %97, i64 0, i32 1
  %104 = load i64, ptr %memberidx3.i, align 4
  %105 = load ptr, ptr %103, align 8
  %106 = getelementptr inbounds ptr, ptr %105, i64 %104
  %107 = load ptr, ptr %106, align 8
  %memberidx17 = getelementptr inbounds %Scope, ptr %107, i64 0, i32 1
  %108 = load ptr, ptr %memberidx17, align 8
  %109 = call ptr @malloc(i32 4)
  store i32 1936287860, ptr %109, align 8
  %110 = call ptr @malloc(i32 24)
  store ptr %109, ptr %110, align 8
  %memberidx1.i.i115 = getelementptr inbounds %String, ptr %110, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i115, align 4
  %memberidx2.i.i116 = getelementptr inbounds %String, ptr %110, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i116, align 4
  %111 = call fastcc i64 @Map_String_VarId__hash_fnc(ptr nonnull %110)
  %memberidx.i117 = getelementptr inbounds %Map_String_VarId_, ptr %108, i64 0, i32 1
  %112 = load i64, ptr %memberidx.i117, align 4
  %113 = urem i64 %111, %112
  %114 = load ptr, ptr %108, align 8
  %115 = getelementptr inbounds ptr, ptr %114, i64 %113
  br label %while.entry.i123

while.entry.i123:                                 ; preds = %else.i131, %if.entry12
  %.sink314 = phi ptr [ %142, %else.i131 ], [ %115, %if.entry12 ]
  %116 = phi ptr [ %138, %else.i131 ], [ %114, %if.entry12 ]
  %117 = phi i64 [ %139, %else.i131 ], [ %112, %if.entry12 ]
  %hash.0.i119 = phi i64 [ %141, %else.i131 ], [ %113, %if.entry12 ]
  %118 = load ptr, ptr %.sink314, align 8, !nonnull !0
  %119 = load ptr, ptr %118, align 8
  %memberidx.i.i120 = getelementptr inbounds %String, ptr %119, i64 0, i32 1
  %120 = load i64, ptr %memberidx.i.i120, align 4
  %.not.i.i122 = icmp eq i64 %120, 4
  br i1 %.not.i.i122, label %ifend.i.i124, label %else.i131

ifend.i.i124:                                     ; preds = %while.entry.i123
  %121 = load ptr, ptr %119, align 8
  %122 = call i64 @memcmp(ptr %121, ptr nonnull %109, i64 4)
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %ifend.i.i124.while.end.i129.loopexit_crit_edge, label %ifend.i.i124.else.i131_crit_edge

ifend.i.i124.while.end.i129.loopexit_crit_edge:   ; preds = %ifend.i.i124
  %.pre272.pre = load ptr, ptr %108, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre272.pre, i64 %hash.0.i119
  %.pre273.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %memberidx11.i133 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre273.pre, i64 0, i32 1
  %124 = load ptr, ptr %memberidx11.i133, align 8
  %125 = load ptr, ptr %memberidx.i135, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %memberidx.i.i136 = getelementptr inbounds %VarId, ptr %124, i64 0, i32 1
  %126 = load i64, ptr %memberidx.i.i136, align 4
  %127 = load i64, ptr %124, align 4
  %memberidx2.i.i137 = getelementptr inbounds %VarId, ptr %124, i64 0, i32 2
  %128 = load i64, ptr %memberidx2.i.i137, align 4
  %129 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %126, i64 %127, i64 %128)
  %130 = load ptr, ptr %5, align 8
  %131 = call ptr @malloc(i32 24)
  store ptr %130, ptr %131, align 8
  %memberidx1.i.i.i138 = getelementptr inbounds %String, ptr %131, i64 0, i32 1
  store i64 %129, ptr %memberidx1.i.i.i138, align 4
  %memberidx2.i.i.i139 = getelementptr inbounds %String, ptr %131, i64 0, i32 2
  store i64 %129, ptr %memberidx2.i.i.i139, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %132 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %131)
  %memberidx.i183 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %125, i64 0, i32 1
  %133 = load i64, ptr %memberidx.i183, align 4
  %134 = urem i64 %132, %133
  %135 = load ptr, ptr %125, align 8
  %136 = getelementptr inbounds ptr, ptr %135, i64 %134
  %137 = load ptr, ptr %136, align 8
  %.not.i184 = icmp eq ptr %137, null
  br i1 %.not.i184, label %Map_String_LLVMValueRef____getitem__.exit201, label %while.entry.i189

ifend.i.i124.else.i131_crit_edge:                 ; preds = %ifend.i.i124
  %.pre270 = load i64, ptr %memberidx.i117, align 4
  %.pre271 = load ptr, ptr %108, align 8
  br label %else.i131

else.i131:                                        ; preds = %ifend.i.i124.else.i131_crit_edge, %while.entry.i123
  %138 = phi ptr [ %.pre271, %ifend.i.i124.else.i131_crit_edge ], [ %116, %while.entry.i123 ]
  %139 = phi i64 [ %.pre270, %ifend.i.i124.else.i131_crit_edge ], [ %117, %while.entry.i123 ]
  %140 = add nuw i64 %hash.0.i119, 1
  %141 = urem i64 %140, %139
  %142 = getelementptr inbounds ptr, ptr %138, i64 %141
  br label %while.entry.i123

while.entry.i189:                                 ; preds = %ifend.i.i124.while.end.i129.loopexit_crit_edge, %else.i197
  %143 = phi ptr [ %151, %else.i197 ], [ %135, %ifend.i.i124.while.end.i129.loopexit_crit_edge ]
  %144 = phi i64 [ %152, %else.i197 ], [ %133, %ifend.i.i124.while.end.i129.loopexit_crit_edge ]
  %145 = phi ptr [ %156, %else.i197 ], [ %137, %ifend.i.i124.while.end.i129.loopexit_crit_edge ]
  %hash.0.i185 = phi i64 [ %154, %else.i197 ], [ %134, %ifend.i.i124.while.end.i129.loopexit_crit_edge ]
  %146 = load ptr, ptr %145, align 8
  %memberidx.i.i186 = getelementptr inbounds %String, ptr %146, i64 0, i32 1
  %147 = load i64, ptr %memberidx.i.i186, align 4
  %.not.i.i188 = icmp eq i64 %147, %129
  br i1 %.not.i.i188, label %ifend.i.i190, label %else.i197

ifend.i.i190:                                     ; preds = %while.entry.i189
  %148 = load ptr, ptr %146, align 8
  %149 = call i64 @memcmp(ptr %148, ptr %130, i64 %129)
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %while.end.i195, label %ifend.i.i190.else.i197_crit_edge

ifend.i.i190.else.i197_crit_edge:                 ; preds = %ifend.i.i190
  %.pre274 = load i64, ptr %memberidx.i183, align 4
  %.pre275 = load ptr, ptr %125, align 8
  br label %else.i197

while.end.i195:                                   ; preds = %ifend.i.i190
  %.pre276.pre = load ptr, ptr %125, align 8
  %.phi.trans.insert277.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre276.pre, i64 %hash.0.i185
  %.pre278.pre = load ptr, ptr %.phi.trans.insert277.phi.trans.insert, align 8
  %.not25.i194 = icmp eq ptr %.pre278.pre, null
  br i1 %.not25.i194, label %Map_String_LLVMValueRef____getitem__.exit201, label %if.entry7.i200

else.i197:                                        ; preds = %ifend.i.i190.else.i197_crit_edge, %while.entry.i189
  %151 = phi ptr [ %.pre275, %ifend.i.i190.else.i197_crit_edge ], [ %143, %while.entry.i189 ]
  %152 = phi i64 [ %.pre274, %ifend.i.i190.else.i197_crit_edge ], [ %144, %while.entry.i189 ]
  %153 = add nuw i64 %hash.0.i185, 1
  %154 = urem i64 %153, %152
  %155 = getelementptr inbounds ptr, ptr %151, i64 %154
  %156 = load ptr, ptr %155, align 8
  %.not26.i196 = icmp eq ptr %156, null
  br i1 %.not26.i196, label %Map_String_LLVMValueRef____getitem__.exit201, label %while.entry.i189

if.entry7.i200:                                   ; preds = %while.end.i195
  %memberidx11.i199 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre278.pre, i64 0, i32 1
  %157 = load ptr, ptr %memberidx11.i199, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit201

Map_String_LLVMValueRef____getitem__.exit201:     ; preds = %else.i197, %ifend.i.i124.while.end.i129.loopexit_crit_edge, %while.end.i195, %if.entry7.i200
  %common.ret.op.i198 = phi ptr [ %157, %if.entry7.i200 ], [ null, %while.end.i195 ], [ null, %ifend.i.i124.while.end.i129.loopexit_crit_edge ], [ null, %else.i197 ]
  %158 = call ptr @LLVMBuildStore(ptr %92, ptr %95, ptr %common.ret.op.i198)
  br i1 %common.ret.op.i108, label %if.entry18, label %for.entry34

if.entry18:                                       ; preds = %Map_String_LLVMValueRef____getitem__.exit201
  %159 = load ptr, ptr %memberidx21, align 8
  %.not = icmp eq ptr %159, null
  br i1 %.not, label %for.entry34, label %if.entry22

if.entry22:                                       ; preds = %if.entry18
  %160 = load ptr, ptr %memberidx15, align 8
  %161 = load ptr, ptr %memberidx10, align 8
  %162 = load ptr, ptr %160, align 8
  %163 = load i64, ptr %161, align 4
  %164 = load ptr, ptr %162, align 8
  %165 = getelementptr inbounds ptr, ptr %164, i64 %163
  %166 = load ptr, ptr %165, align 8
  %memberidx2.i140 = getelementptr inbounds %Module, ptr %166, i64 0, i32 7
  %167 = load ptr, ptr %memberidx2.i140, align 8
  %memberidx3.i141 = getelementptr inbounds %ScopeId, ptr %161, i64 0, i32 1
  %168 = load i64, ptr %memberidx3.i141, align 4
  %169 = load ptr, ptr %167, align 8
  %170 = getelementptr inbounds ptr, ptr %169, i64 %168
  %171 = load ptr, ptr %170, align 8
  %memberidx27 = getelementptr inbounds %Scope, ptr %171, i64 0, i32 1
  %172 = load ptr, ptr %memberidx27, align 8
  %173 = call ptr @malloc(i32 5)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %173, ptr noundef nonnull align 8 dereferenceable(5) @153, i64 5, i1 false)
  %174 = call ptr @malloc(i32 24)
  store ptr %173, ptr %174, align 8
  %memberidx1.i.i142 = getelementptr inbounds %String, ptr %174, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i142, align 4
  %memberidx2.i.i143 = getelementptr inbounds %String, ptr %174, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i143, align 4
  %175 = call fastcc i64 @Map_String_VarId__hash_fnc(ptr nonnull %174)
  %memberidx.i144 = getelementptr inbounds %Map_String_VarId_, ptr %172, i64 0, i32 1
  %176 = load i64, ptr %memberidx.i144, align 4
  %177 = urem i64 %175, %176
  %178 = load ptr, ptr %172, align 8
  %179 = getelementptr inbounds ptr, ptr %178, i64 %177
  %180 = load ptr, ptr %179, align 8
  %.not.i145 = icmp eq ptr %180, null
  br i1 %.not.i145, label %for.entry34, label %while.entry.i150

while.entry.i150:                                 ; preds = %if.entry22, %else.i158
  %181 = phi ptr [ %189, %else.i158 ], [ %178, %if.entry22 ]
  %182 = phi i64 [ %190, %else.i158 ], [ %176, %if.entry22 ]
  %183 = phi ptr [ %194, %else.i158 ], [ %180, %if.entry22 ]
  %hash.0.i146 = phi i64 [ %192, %else.i158 ], [ %177, %if.entry22 ]
  %184 = load ptr, ptr %183, align 8
  %memberidx.i.i147 = getelementptr inbounds %String, ptr %184, i64 0, i32 1
  %185 = load i64, ptr %memberidx.i.i147, align 4
  %.not.i.i149 = icmp eq i64 %185, 5
  br i1 %.not.i.i149, label %ifend.i.i151, label %else.i158

ifend.i.i151:                                     ; preds = %while.entry.i150
  %186 = load ptr, ptr %184, align 8
  %187 = call i64 @memcmp(ptr %186, ptr %173, i64 5)
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %while.end.i156, label %ifend.i.i151.else.i158_crit_edge

ifend.i.i151.else.i158_crit_edge:                 ; preds = %ifend.i.i151
  %.pre279 = load i64, ptr %memberidx.i144, align 4
  %.pre280 = load ptr, ptr %172, align 8
  br label %else.i158

while.end.i156:                                   ; preds = %ifend.i.i151
  %.pre281.pre = load ptr, ptr %172, align 8
  %.phi.trans.insert282.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre281.pre, i64 %hash.0.i146
  %.pre283.pre = load ptr, ptr %.phi.trans.insert282.phi.trans.insert, align 8
  %.not25.i155 = icmp eq ptr %.pre283.pre, null
  br i1 %.not25.i155, label %for.entry34, label %Map_String_VarId____getitem__.exit162

else.i158:                                        ; preds = %ifend.i.i151.else.i158_crit_edge, %while.entry.i150
  %189 = phi ptr [ %.pre280, %ifend.i.i151.else.i158_crit_edge ], [ %181, %while.entry.i150 ]
  %190 = phi i64 [ %.pre279, %ifend.i.i151.else.i158_crit_edge ], [ %182, %while.entry.i150 ]
  %191 = add nuw i64 %hash.0.i146, 1
  %192 = urem i64 %191, %190
  %193 = getelementptr inbounds ptr, ptr %189, i64 %192
  %194 = load ptr, ptr %193, align 8
  %.not26.i157 = icmp eq ptr %194, null
  br i1 %.not26.i157, label %for.entry34, label %while.entry.i150

Map_String_VarId____getitem__.exit162:            ; preds = %while.end.i156
  %memberidx11.i160 = getelementptr inbounds %MapEntry_String_VarId_, ptr %.pre283.pre, i64 0, i32 1
  %195 = load ptr, ptr %memberidx11.i160, align 8
  %.not92 = icmp eq ptr %195, null
  br i1 %.not92, label %for.entry34, label %if.entry28

if.entry28:                                       ; preds = %Map_String_VarId____getitem__.exit162
  %memberidx31 = getelementptr inbounds %ObjectType, ptr %159, i64 0, i32 1
  %196 = load ptr, ptr %memberidx31, align 8
  %197 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %196)
  %.not.i177 = icmp eq ptr %197, null
  br i1 %.not.i177, label %ifend.i182, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i182:                                       ; preds = %if.entry28
  %198 = load ptr, ptr %memberidx15, align 8
  %199 = load ptr, ptr %198, align 8
  %200 = load i64, ptr %196, align 4
  %201 = load ptr, ptr %199, align 8
  %202 = getelementptr inbounds ptr, ptr %201, i64 %200
  %203 = load ptr, ptr %202, align 8
  %memberidx2.i.i180 = getelementptr inbounds %Module, ptr %203, i64 0, i32 3
  %204 = load ptr, ptr %memberidx2.i.i180, align 8
  %memberidx3.i.i181 = getelementptr inbounds %TypeId, ptr %196, i64 0, i32 2
  %205 = load i64, ptr %memberidx3.i.i181, align 4
  %206 = load ptr, ptr %204, align 8
  %207 = getelementptr inbounds ptr, ptr %206, i64 %205
  %208 = load ptr, ptr %207, align 8
  call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %208)
  call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %208)
  %209 = load ptr, ptr %208, align 8
  %210 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %209)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry28, %ifend.i182
  %common.ret.op.i178 = phi ptr [ %210, %ifend.i182 ], [ %197, %if.entry28 ]
  %memberidx32 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i178, i64 0, i32 4
  %211 = load ptr, ptr %memberidx32, align 8
  %212 = load ptr, ptr %memberidx.i135, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i.i164 = getelementptr inbounds %VarId, ptr %195, i64 0, i32 1
  %213 = load i64, ptr %memberidx.i.i164, align 4
  %214 = load i64, ptr %195, align 4
  %memberidx2.i.i165 = getelementptr inbounds %VarId, ptr %195, i64 0, i32 2
  %215 = load i64, ptr %memberidx2.i.i165, align 4
  %216 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %213, i64 %214, i64 %215)
  %217 = load ptr, ptr %4, align 8
  %218 = call ptr @malloc(i32 24)
  store ptr %217, ptr %218, align 8
  %memberidx1.i.i.i166 = getelementptr inbounds %String, ptr %218, i64 0, i32 1
  store i64 %216, ptr %memberidx1.i.i.i166, align 4
  %memberidx2.i.i.i167 = getelementptr inbounds %String, ptr %218, i64 0, i32 2
  store i64 %216, ptr %memberidx2.i.i.i167, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %219 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %218)
  %memberidx.i202 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %212, i64 0, i32 1
  %220 = load i64, ptr %memberidx.i202, align 4
  %221 = urem i64 %219, %220
  %222 = load ptr, ptr %212, align 8
  %223 = getelementptr inbounds ptr, ptr %222, i64 %221
  %224 = load ptr, ptr %223, align 8
  %.not.i203 = icmp eq ptr %224, null
  br i1 %.not.i203, label %Map_String_LLVMValueRef____getitem__.exit220, label %while.entry.i208

while.entry.i208:                                 ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit, %else.i216
  %225 = phi ptr [ %233, %else.i216 ], [ %222, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %226 = phi i64 [ %234, %else.i216 ], [ %220, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %227 = phi ptr [ %238, %else.i216 ], [ %224, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %hash.0.i204 = phi i64 [ %236, %else.i216 ], [ %221, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %228 = load ptr, ptr %227, align 8
  %memberidx.i.i205 = getelementptr inbounds %String, ptr %228, i64 0, i32 1
  %229 = load i64, ptr %memberidx.i.i205, align 4
  %.not.i.i207 = icmp eq i64 %229, %216
  br i1 %.not.i.i207, label %ifend.i.i209, label %else.i216

ifend.i.i209:                                     ; preds = %while.entry.i208
  %230 = load ptr, ptr %228, align 8
  %231 = call i64 @memcmp(ptr %230, ptr %217, i64 %216)
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %while.end.i214, label %ifend.i.i209.else.i216_crit_edge

ifend.i.i209.else.i216_crit_edge:                 ; preds = %ifend.i.i209
  %.pre284 = load i64, ptr %memberidx.i202, align 4
  %.pre285 = load ptr, ptr %212, align 8
  br label %else.i216

while.end.i214:                                   ; preds = %ifend.i.i209
  %.pre286.pre = load ptr, ptr %212, align 8
  %.phi.trans.insert287.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre286.pre, i64 %hash.0.i204
  %.pre288.pre = load ptr, ptr %.phi.trans.insert287.phi.trans.insert, align 8
  %.not25.i213 = icmp eq ptr %.pre288.pre, null
  br i1 %.not25.i213, label %Map_String_LLVMValueRef____getitem__.exit220, label %if.entry7.i219

else.i216:                                        ; preds = %ifend.i.i209.else.i216_crit_edge, %while.entry.i208
  %233 = phi ptr [ %.pre285, %ifend.i.i209.else.i216_crit_edge ], [ %225, %while.entry.i208 ]
  %234 = phi i64 [ %.pre284, %ifend.i.i209.else.i216_crit_edge ], [ %226, %while.entry.i208 ]
  %235 = add nuw i64 %hash.0.i204, 1
  %236 = urem i64 %235, %234
  %237 = getelementptr inbounds ptr, ptr %233, i64 %236
  %238 = load ptr, ptr %237, align 8
  %.not26.i215 = icmp eq ptr %238, null
  br i1 %.not26.i215, label %Map_String_LLVMValueRef____getitem__.exit220, label %while.entry.i208

if.entry7.i219:                                   ; preds = %while.end.i214
  %memberidx11.i218 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre288.pre, i64 0, i32 1
  %239 = load ptr, ptr %memberidx11.i218, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit220

Map_String_LLVMValueRef____getitem__.exit220:     ; preds = %else.i216, %CodeGen_get_or_codegen_class_from_typeid.exit, %while.end.i214, %if.entry7.i219
  %common.ret.op.i217 = phi ptr [ %239, %if.entry7.i219 ], [ null, %while.end.i214 ], [ null, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ null, %else.i216 ]
  %240 = call ptr @LLVMBuildStore(ptr %92, ptr %211, ptr %common.ret.op.i217)
  %241 = load ptr, ptr %memberidx33, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %242 = load i64, ptr %memberidx.i.i164, align 4
  %243 = load i64, ptr %195, align 4
  %244 = load i64, ptr %memberidx2.i.i165, align 4
  %245 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %242, i64 %243, i64 %244)
  %246 = load ptr, ptr %3, align 8
  %247 = call ptr @malloc(i32 24)
  store ptr %246, ptr %247, align 8
  %memberidx1.i.i170 = getelementptr inbounds %String, ptr %247, i64 0, i32 1
  store i64 %245, ptr %memberidx1.i.i170, align 4
  %memberidx2.i.i171 = getelementptr inbounds %String, ptr %247, i64 0, i32 2
  store i64 %245, ptr %memberidx2.i.i171, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %241, ptr nonnull %247, ptr %95)
  br label %for.entry34

for.entry34:                                      ; preds = %else.i158, %if.entry22, %while.end.i156, %Map_String_LLVMValueRef____getitem__.exit201, %if.entry18, %Map_String_VarId____getitem__.exit162, %Map_String_LLVMValueRef____getitem__.exit220, %String___eq__.exit
  %offset.0 = phi i64 [ 0, %String___eq__.exit ], [ 1, %Map_String_LLVMValueRef____getitem__.exit220 ], [ 1, %Map_String_VarId____getitem__.exit162 ], [ 1, %if.entry18 ], [ 1, %Map_String_LLVMValueRef____getitem__.exit201 ], [ 1, %while.end.i156 ], [ 1, %if.entry22 ], [ 1, %else.i158 ]
  %memberidx39 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 6
  %248 = load ptr, ptr %memberidx39, align 8
  %memberidx40263 = getelementptr inbounds %Array_FunctionArg_, ptr %248, i64 0, i32 1
  %249 = load i64, ptr %memberidx40263, align 4
  %250 = icmp sgt i64 %249, 0
  br i1 %250, label %for.body36, label %for.end38

for.body36:                                       ; preds = %for.entry34, %Map_String_LLVMValueRef____getitem__.exit239
  %i.0264 = phi i64 [ %287, %Map_String_LLVMValueRef____getitem__.exit239 ], [ 0, %for.entry34 ]
  %251 = add nuw nsw i64 %i.0264, %offset.0
  %252 = call ptr @LLVMGetParam(ptr %90, i64 %251)
  %253 = load ptr, ptr %memberidx39, align 8
  %254 = load ptr, ptr %253, align 8
  %255 = getelementptr inbounds ptr, ptr %254, i64 %i.0264
  %256 = load ptr, ptr %255, align 8
  %memberidx42 = getelementptr inbounds %FunctionArg, ptr %256, i64 0, i32 4
  %257 = load ptr, ptr %memberidx42, align 8
  %258 = load ptr, ptr %memberidx.i135, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  %memberidx.i.i173 = getelementptr inbounds %VarId, ptr %257, i64 0, i32 1
  %259 = load i64, ptr %memberidx.i.i173, align 4
  %260 = load i64, ptr %257, align 4
  %memberidx2.i.i174 = getelementptr inbounds %VarId, ptr %257, i64 0, i32 2
  %261 = load i64, ptr %memberidx2.i.i174, align 4
  %262 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %2, ptr nonnull @243, i64 %259, i64 %260, i64 %261)
  %263 = load ptr, ptr %2, align 8
  %264 = call ptr @malloc(i32 24)
  store ptr %263, ptr %264, align 8
  %memberidx1.i.i.i175 = getelementptr inbounds %String, ptr %264, i64 0, i32 1
  store i64 %262, ptr %memberidx1.i.i.i175, align 4
  %memberidx2.i.i.i176 = getelementptr inbounds %String, ptr %264, i64 0, i32 2
  store i64 %262, ptr %memberidx2.i.i.i176, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  %265 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %264)
  %memberidx.i221 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %258, i64 0, i32 1
  %266 = load i64, ptr %memberidx.i221, align 4
  %267 = urem i64 %265, %266
  %268 = load ptr, ptr %258, align 8
  %269 = getelementptr inbounds ptr, ptr %268, i64 %267
  %270 = load ptr, ptr %269, align 8
  %.not.i222 = icmp eq ptr %270, null
  br i1 %.not.i222, label %Map_String_LLVMValueRef____getitem__.exit239, label %while.entry.i227

while.entry.i227:                                 ; preds = %for.body36, %else.i235
  %271 = phi ptr [ %279, %else.i235 ], [ %268, %for.body36 ]
  %272 = phi i64 [ %280, %else.i235 ], [ %266, %for.body36 ]
  %273 = phi ptr [ %284, %else.i235 ], [ %270, %for.body36 ]
  %hash.0.i223 = phi i64 [ %282, %else.i235 ], [ %267, %for.body36 ]
  %274 = load ptr, ptr %273, align 8
  %memberidx.i.i224 = getelementptr inbounds %String, ptr %274, i64 0, i32 1
  %275 = load i64, ptr %memberidx.i.i224, align 4
  %.not.i.i226 = icmp eq i64 %275, %262
  br i1 %.not.i.i226, label %ifend.i.i228, label %else.i235

ifend.i.i228:                                     ; preds = %while.entry.i227
  %276 = load ptr, ptr %274, align 8
  %277 = call i64 @memcmp(ptr %276, ptr %263, i64 %262)
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %while.end.i233, label %ifend.i.i228.else.i235_crit_edge

ifend.i.i228.else.i235_crit_edge:                 ; preds = %ifend.i.i228
  %.pre289 = load i64, ptr %memberidx.i221, align 4
  %.pre290 = load ptr, ptr %258, align 8
  br label %else.i235

while.end.i233:                                   ; preds = %ifend.i.i228
  %.pre291.pre = load ptr, ptr %258, align 8
  %.phi.trans.insert292.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre291.pre, i64 %hash.0.i223
  %.pre293.pre = load ptr, ptr %.phi.trans.insert292.phi.trans.insert, align 8
  %.not25.i232 = icmp eq ptr %.pre293.pre, null
  br i1 %.not25.i232, label %Map_String_LLVMValueRef____getitem__.exit239, label %if.entry7.i238

else.i235:                                        ; preds = %ifend.i.i228.else.i235_crit_edge, %while.entry.i227
  %279 = phi ptr [ %.pre290, %ifend.i.i228.else.i235_crit_edge ], [ %271, %while.entry.i227 ]
  %280 = phi i64 [ %.pre289, %ifend.i.i228.else.i235_crit_edge ], [ %272, %while.entry.i227 ]
  %281 = add nuw i64 %hash.0.i223, 1
  %282 = urem i64 %281, %280
  %283 = getelementptr inbounds ptr, ptr %279, i64 %282
  %284 = load ptr, ptr %283, align 8
  %.not26.i234 = icmp eq ptr %284, null
  br i1 %.not26.i234, label %Map_String_LLVMValueRef____getitem__.exit239, label %while.entry.i227

if.entry7.i238:                                   ; preds = %while.end.i233
  %memberidx11.i237 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre293.pre, i64 0, i32 1
  %285 = load ptr, ptr %memberidx11.i237, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit239

Map_String_LLVMValueRef____getitem__.exit239:     ; preds = %else.i235, %for.body36, %while.end.i233, %if.entry7.i238
  %common.ret.op.i236 = phi ptr [ %285, %if.entry7.i238 ], [ null, %while.end.i233 ], [ null, %for.body36 ], [ null, %else.i235 ]
  %286 = call ptr @LLVMBuildStore(ptr %92, ptr %252, ptr %common.ret.op.i236)
  %287 = add nuw nsw i64 %i.0264, 1
  %288 = load ptr, ptr %memberidx39, align 8
  %memberidx40 = getelementptr inbounds %Array_FunctionArg_, ptr %288, i64 0, i32 1
  %289 = load i64, ptr %memberidx40, align 4
  %290 = icmp slt i64 %287, %289
  br i1 %290, label %for.body36, label %for.end38

for.end38:                                        ; preds = %Map_String_LLVMValueRef____getitem__.exit239, %for.entry34
  %291 = load ptr, ptr %memberidx43, align 8
  store ptr %90, ptr %memberidx43, align 8
  %memberidx45 = getelementptr inbounds %ClassMethod, ptr %method.0268, i64 0, i32 5
  %292 = load ptr, ptr %memberidx45, align 8
  %293 = load i1, ptr %memberidx.i254, align 1
  store i1 false, ptr %memberidx.i254, align 1
  %294 = load ptr, ptr %292, align 8
  %295 = call ptr @malloc(i32 25)
  %296 = load ptr, ptr %294, align 8
  %memberidx1.i.i255 = getelementptr inbounds %Array_Statement_, ptr %294, i64 0, i32 1
  %297 = load i64, ptr %memberidx1.i.i255, align 4
  %memberidx1.i.i.i256 = getelementptr inbounds %ArrayIterator_Statement_, ptr %295, i64 0, i32 1
  %298 = icmp slt i64 %297, 1
  br i1 %298, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.end38, %for.body.i
  %299 = phi i64 [ %300, %for.body.i ], [ 1, %for.end38 ]
  %statement.0.i266.in = phi ptr [ %301, %for.body.i ], [ %296, %for.end38 ]
  %statement.0.i266 = load ptr, ptr %statement.0.i266.in, align 8
  call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %92, ptr %statement.0.i266)
  %300 = add nuw nsw i64 %299, 1
  store i64 %300, ptr %memberidx1.i.i.i256, align 4
  %301 = getelementptr inbounds ptr, ptr %296, i64 %299
  %.not304 = icmp slt i64 %299, %297
  br i1 %.not304, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %for.end38
  call void @free(ptr nonnull %295)
  %memberidx4.i = getelementptr inbounds %Block, ptr %292, i64 0, i32 4
  %302 = load ptr, ptr %memberidx4.i, align 8
  %.not.i259 = icmp eq ptr %302, null
  br i1 %.not.i259, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %303 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %92, ptr nonnull %302)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  store i1 %293, ptr %memberidx.i254, align 1
  store ptr %291, ptr %memberidx43, align 8
  call void @LLVMDisposeBuilder(ptr %92)
  br label %for.incr
}

define internal fastcc ptr @CodeGen_codegen_string_to_cstring(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %args = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %4 = load ptr, ptr %memberidx, align 8
  %5 = load ptr, ptr %4, align 8
  %6 = load ptr, ptr %5, align 8
  %7 = load ptr, ptr %6, align 8
  %memberidx3 = getelementptr inbounds %Module, ptr %7, i64 0, i32 5
  %8 = load ptr, ptr %memberidx3, align 8
  %9 = load i64, ptr %8, align 4
  %10 = getelementptr inbounds ptr, ptr %6, i64 %9
  %11 = load ptr, ptr %10, align 8
  %memberidx2.i = getelementptr inbounds %Module, ptr %11, i64 0, i32 7
  %12 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i = getelementptr inbounds %ScopeId, ptr %8, i64 0, i32 1
  %13 = load i64, ptr %memberidx3.i, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx4 = getelementptr inbounds %Scope, ptr %16, i64 0, i32 2
  %17 = load ptr, ptr %memberidx4, align 8
  %18 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %18, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %19 = tail call ptr @malloc(i32 24)
  store ptr %18, ptr %19, align 8
  %memberidx1.i.i25 = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i25, align 4
  %memberidx2.i.i26 = getelementptr inbounds %String, ptr %19, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i26, align 4
  %20 = tail call fastcc i64 @Map_String_ClassId__hash_fnc(ptr nonnull %19)
  %memberidx.i18 = getelementptr inbounds %Map_String_ClassId_, ptr %17, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i18, align 4
  %22 = urem i64 %20, %21
  %23 = load ptr, ptr %17, align 8
  %24 = getelementptr inbounds ptr, ptr %23, i64 %22
  %25 = load ptr, ptr %24, align 8
  %.not.i = icmp eq ptr %25, null
  br i1 %.not.i, label %get_class_from_type.exit, label %while.entry.i

while.entry.i:                                    ; preds = %3, %else.i
  %26 = phi ptr [ %34, %else.i ], [ %23, %3 ]
  %27 = phi i64 [ %35, %else.i ], [ %21, %3 ]
  %28 = phi ptr [ %39, %else.i ], [ %25, %3 ]
  %hash.0.i = phi i64 [ %37, %else.i ], [ %22, %3 ]
  %29 = load ptr, ptr %28, align 8
  %memberidx.i.i19 = getelementptr inbounds %String, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx.i.i19, align 4
  %.not.i.i21 = icmp eq i64 %30, 6
  br i1 %.not.i.i21, label %ifend.i.i22, label %else.i

ifend.i.i22:                                      ; preds = %while.entry.i
  %31 = load ptr, ptr %29, align 8
  %32 = tail call i64 @memcmp(ptr %31, ptr %18, i64 6)
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %while.end.i, label %ifend.i.i22.else.i_crit_edge

ifend.i.i22.else.i_crit_edge:                     ; preds = %ifend.i.i22
  %.pre = load i64, ptr %memberidx.i18, align 4
  %.pre38 = load ptr, ptr %17, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i22
  %.pre39.pre = load ptr, ptr %17, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre39.pre, i64 %hash.0.i
  %.pre40.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre40.pre, null
  br i1 %.not25.i, label %get_class_from_type.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i22.else.i_crit_edge, %while.entry.i
  %34 = phi ptr [ %.pre38, %ifend.i.i22.else.i_crit_edge ], [ %26, %while.entry.i ]
  %35 = phi i64 [ %.pre, %ifend.i.i22.else.i_crit_edge ], [ %27, %while.entry.i ]
  %36 = add nuw i64 %hash.0.i, 1
  %37 = urem i64 %36, %35
  %38 = getelementptr inbounds ptr, ptr %34, i64 %37
  %39 = load ptr, ptr %38, align 8
  %.not26.i = icmp eq ptr %39, null
  br i1 %.not26.i, label %get_class_from_type.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_ClassId_, ptr %.pre40.pre, i64 0, i32 1
  %40 = load ptr, ptr %memberidx11.i, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %else.i, %3, %while.end.i, %if.entry7.i
  %common.ret.op.i24 = phi ptr [ %40, %if.entry7.i ], [ null, %while.end.i ], [ null, %3 ], [ null, %else.i ]
  %41 = alloca %ObjectType, align 8
  store i64 11, ptr %41, align 8
  %memberidx.i17 = getelementptr inbounds %ObjectType, ptr %41, i64 0, i32 1
  store ptr %common.ret.op.i24, ptr %memberidx.i17, align 8
  %42 = load ptr, ptr %memberidx, align 8
  %43 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %43, ptr noundef nonnull align 8 dereferenceable(10) @279, i64 10, i1 false)
  %44 = tail call ptr @malloc(i32 24)
  store ptr %43, ptr %44, align 8
  %memberidx1.i.i15 = getelementptr inbounds %String, ptr %44, i64 0, i32 1
  store i64 10, ptr %memberidx1.i.i15, align 4
  %memberidx2.i.i16 = getelementptr inbounds %String, ptr %44, i64 0, i32 2
  store i64 10, ptr %memberidx2.i.i16, align 4
  %memberidx6.i = getelementptr inbounds %ObjectType, ptr %41, i64 0, i32 1
  %45 = load ptr, ptr %memberidx6.i, align 8
  %46 = load ptr, ptr %42, align 8
  %47 = load i64, ptr %45, align 4
  %48 = load ptr, ptr %46, align 8
  %49 = getelementptr inbounds ptr, ptr %48, i64 %47
  %50 = load ptr, ptr %49, align 8
  %memberidx2.i.i32 = getelementptr inbounds %Module, ptr %50, i64 0, i32 3
  %51 = load ptr, ptr %memberidx2.i.i32, align 8
  %memberidx3.i.i33 = getelementptr inbounds %TypeId, ptr %45, i64 0, i32 2
  %52 = load i64, ptr %memberidx3.i.i33, align 4
  %53 = load ptr, ptr %51, align 8
  %54 = getelementptr inbounds ptr, ptr %53, i64 %52
  %55 = load ptr, ptr %54, align 8
  %56 = icmp eq ptr %55, null
  br i1 %56, label %get_class_prop_type_with_name.exit, label %ifend.i

ifend.i:                                          ; preds = %get_class_from_type.exit
  %memberidx.i = getelementptr inbounds %Class, ptr %55, i64 0, i32 6
  %57 = load ptr, ptr %memberidx.i, align 8
  %58 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr nonnull %44)
  %memberidx.i.i = getelementptr inbounds %Map_String_PropId_, ptr %57, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i.i, align 4
  %60 = urem i64 %58, %59
  %61 = load ptr, ptr %57, align 8
  %62 = getelementptr inbounds ptr, ptr %61, i64 %60
  %63 = load ptr, ptr %62, align 8
  %.not.i.i = icmp eq ptr %63, null
  br i1 %.not.i.i, label %get_class_prop_type_with_name.exit, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %ifend.i, %else.i.i
  %64 = phi ptr [ %72, %else.i.i ], [ %61, %ifend.i ]
  %65 = phi i64 [ %73, %else.i.i ], [ %59, %ifend.i ]
  %66 = phi ptr [ %77, %else.i.i ], [ %63, %ifend.i ]
  %hash.0.i.i = phi i64 [ %75, %else.i.i ], [ %60, %ifend.i ]
  %67 = load ptr, ptr %66, align 8
  %memberidx.i.i.i = getelementptr inbounds %String, ptr %67, i64 0, i32 1
  %68 = load i64, ptr %memberidx.i.i.i, align 4
  %.not.i.i.i = icmp eq i64 %68, 10
  br i1 %.not.i.i.i, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %69 = load ptr, ptr %67, align 8
  %70 = tail call i64 @memcmp(ptr %69, ptr %43, i64 10)
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre42 = load i64, ptr %memberidx.i.i, align 4
  %.pre43 = load ptr, ptr %57, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre44.pre = load ptr, ptr %57, align 8
  %.phi.trans.insert45.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre44.pre, i64 %hash.0.i.i
  %.pre46.pre = load ptr, ptr %.phi.trans.insert45.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre46.pre, null
  br i1 %.not25.i.i, label %get_class_prop_type_with_name.exit, label %Map_String_PropId____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %72 = phi ptr [ %.pre43, %ifend.i.i.i.else.i.i_crit_edge ], [ %64, %while.entry.i.i ]
  %73 = phi i64 [ %.pre42, %ifend.i.i.i.else.i.i_crit_edge ], [ %65, %while.entry.i.i ]
  %74 = add nuw i64 %hash.0.i.i, 1
  %75 = urem i64 %74, %73
  %76 = getelementptr inbounds ptr, ptr %72, i64 %75
  %77 = load ptr, ptr %76, align 8
  %.not26.i.i = icmp eq ptr %77, null
  br i1 %.not26.i.i, label %get_class_prop_type_with_name.exit, label %while.entry.i.i

Map_String_PropId____getitem__.exit.i:            ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre46.pre, i64 0, i32 1
  %78 = load ptr, ptr %memberidx11.i.i, align 8
  %79 = icmp eq ptr %78, null
  br i1 %79, label %get_class_prop_type_with_name.exit, label %ifend3.i

ifend3.i:                                         ; preds = %Map_String_PropId____getitem__.exit.i
  %memberidx.i.i7.i = getelementptr inbounds %PropId, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %memberidx.i.i7.i, align 8
  %81 = load ptr, ptr %42, align 8
  %82 = load i64, ptr %80, align 4
  %83 = load ptr, ptr %81, align 8
  %84 = getelementptr inbounds ptr, ptr %83, i64 %82
  %85 = load ptr, ptr %84, align 8
  %memberidx2.i.i.i.i = getelementptr inbounds %Module, ptr %85, i64 0, i32 3
  %86 = load ptr, ptr %memberidx2.i.i.i.i, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %80, i64 0, i32 2
  %87 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %88 = load ptr, ptr %86, align 8
  %89 = getelementptr inbounds ptr, ptr %88, i64 %87
  %90 = load ptr, ptr %89, align 8
  %91 = load i64, ptr %78, align 4
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %if.entry.i.i, label %ifend.i.i

if.entry.i.i:                                     ; preds = %ifend3.i
  %memberidx1.i.i13 = getelementptr inbounds %Class, ptr %90, i64 0, i32 5
  %93 = load ptr, ptr %memberidx1.i.i13, align 8
  %memberidx2.i.i14 = getelementptr inbounds %PropId, ptr %78, i64 0, i32 2
  %94 = load i64, ptr %memberidx2.i.i14, align 4
  %95 = load ptr, ptr %93, align 8
  %96 = getelementptr inbounds ptr, ptr %95, i64 %94
  %97 = load ptr, ptr %96, align 8
  %memberidx3.i.i = getelementptr inbounds %ClassMethod, ptr %97, i64 0, i32 4
  br label %get_class_prop_type.exit.i

ifend.i.i:                                        ; preds = %ifend3.i
  %memberidx4.i.i = getelementptr inbounds %Class, ptr %90, i64 0, i32 4
  %98 = load ptr, ptr %memberidx4.i.i, align 8
  %memberidx5.i.i = getelementptr inbounds %PropId, ptr %78, i64 0, i32 2
  %99 = load i64, ptr %memberidx5.i.i, align 4
  %100 = load ptr, ptr %98, align 8
  %101 = getelementptr inbounds ptr, ptr %100, i64 %99
  %102 = load ptr, ptr %101, align 8
  %memberidx6.i.i = getelementptr inbounds %ClassField, ptr %102, i64 0, i32 4
  br label %get_class_prop_type.exit.i

get_class_prop_type.exit.i:                       ; preds = %ifend.i.i, %if.entry.i.i
  %common.ret.op.in.i.i = phi ptr [ %memberidx3.i.i, %if.entry.i.i ], [ %memberidx6.i.i, %ifend.i.i ]
  %common.ret.op.i8.i = load ptr, ptr %common.ret.op.in.i.i, align 8
  br label %get_class_prop_type_with_name.exit

get_class_prop_type_with_name.exit:               ; preds = %else.i.i, %ifend.i, %while.end.i.i, %get_class_from_type.exit, %Map_String_PropId____getitem__.exit.i, %get_class_prop_type.exit.i
  %common.ret.op.i = phi ptr [ %common.ret.op.i8.i, %get_class_prop_type.exit.i ], [ null, %get_class_from_type.exit ], [ null, %Map_String_PropId____getitem__.exit.i ], [ null, %while.end.i.i ], [ null, %ifend.i ], [ null, %else.i.i ]
  %103 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %103, ptr noundef nonnull align 8 dereferenceable(10) @279, i64 10, i1 false)
  %104 = tail call ptr @malloc(i32 24)
  store ptr %103, ptr %104, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %104, i64 0, i32 1
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %104, i64 0, i32 2
  store i64 10, ptr %memberidx2.i.i, align 4
  %105 = call fastcc ptr @CodeGen_get_member_with_name(ptr %0, ptr %1, ptr %2, ptr nonnull %41, ptr nonnull %104, ptr null)
  store ptr %2, ptr %args, align 8
  %106 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %common.ret.op.i, i1 false)
  %107 = call ptr @LLVMBuildCall2(ptr %1, ptr %106, ptr %105, ptr nonnull %args, i64 1, ptr nonnull @80)
  ret ptr %107
}

define internal fastcc void @CodeGen_codegen_statement(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %4 = load i64, ptr %2, align 4
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %memberidx.i70 = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 1
  %6 = load ptr, ptr %memberidx.i70, align 8
  %7 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %6)
  %memberidx1.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1.i, align 8
  %9 = tail call ptr @LLVMAppendBasicBlock(ptr %8, ptr nonnull @281)
  %10 = load ptr, ptr %memberidx1.i, align 8
  %11 = tail call ptr @LLVMAppendBasicBlock(ptr %10, ptr nonnull @45)
  %12 = load ptr, ptr %memberidx1.i, align 8
  %13 = tail call ptr @LLVMAppendBasicBlock(ptr %12, ptr nonnull @282)
  %14 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %7, ptr %9, ptr %11)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %9)
  %memberidx4.i = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 2
  %15 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i79 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %16 = load i1, ptr %memberidx.i79, align 1
  store i1 false, ptr %memberidx.i79, align 1
  %17 = load ptr, ptr %15, align 8
  %18 = tail call ptr @malloc(i32 25)
  %19 = load ptr, ptr %17, align 8
  %memberidx1.i.i80 = getelementptr inbounds %Array_Statement_, ptr %17, i64 0, i32 1
  %20 = load i64, ptr %memberidx1.i.i80, align 4
  store i1 false, ptr %18, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 3
  store ptr %19, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %18, i64 0, i32 2
  store i64 %20, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %21 = icmp slt i64 %20, 1
  br i1 %21, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %if.entry, %for.body.i
  %22 = phi i64 [ %23, %for.body.i ], [ 1, %if.entry ]
  %statement.0.i137.in = phi ptr [ %24, %for.body.i ], [ %19, %if.entry ]
  %statement.0.i137 = load ptr, ptr %statement.0.i137.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i137)
  %23 = add nuw nsw i64 %22, 1
  store i64 %23, ptr %memberidx1.i.i.i, align 4
  %24 = getelementptr inbounds ptr, ptr %19, i64 %22
  %.not143 = icmp slt i64 %22, %20
  br i1 %.not143, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %if.entry
  tail call void @free(ptr nonnull %18)
  %memberidx4.i82 = getelementptr inbounds %Block, ptr %15, i64 0, i32 4
  %25 = load ptr, ptr %memberidx4.i82, align 8
  %.not.i83 = icmp eq ptr %25, null
  br i1 %.not.i83, label %CodeGen_codegen_block.exit, label %if.entry.i84

if.entry.i84:                                     ; preds = %for.end.i
  %26 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %25)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i84
  store i1 %16, ptr %memberidx.i79, align 1
  %27 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i.i71 = getelementptr inbounds %Block, ptr %27, i64 0, i32 1
  %28 = load i1, ptr %memberidx.i.i71, align 1
  %memberidx1.i.i72 = getelementptr inbounds %Block, ptr %27, i64 0, i32 2
  %29 = load i1, ptr %memberidx1.i.i72, align 1
  %30 = or i1 %28, %29
  %memberidx2.i.i73 = getelementptr inbounds %Block, ptr %27, i64 0, i32 3
  %31 = load i1, ptr %memberidx2.i.i73, align 1
  %32 = or i1 %30, %31
  br i1 %32, label %ifend.i77, label %if.entry.i74

if.entry.i74:                                     ; preds = %CodeGen_codegen_block.exit
  %33 = tail call ptr @LLVMBuildBr(ptr %1, ptr %13)
  br label %ifend.i77

ifend.i77:                                        ; preds = %if.entry.i74, %CodeGen_codegen_block.exit
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %11)
  %memberidx6.i75 = getelementptr inbounds %IfStatement, ptr %2, i64 0, i32 3
  %34 = load ptr, ptr %memberidx6.i75, align 8
  %.not.i76 = icmp eq ptr %34, null
  br i1 %.not.i76, label %if.entry12.i, label %if.entry7.i

if.entry7.i:                                      ; preds = %ifend.i77
  %35 = load i1, ptr %memberidx.i79, align 1
  store i1 false, ptr %memberidx.i79, align 1
  %36 = load ptr, ptr %34, align 8
  %37 = tail call ptr @malloc(i32 25)
  %38 = load ptr, ptr %36, align 8
  %memberidx1.i.i87 = getelementptr inbounds %Array_Statement_, ptr %36, i64 0, i32 1
  %39 = load i64, ptr %memberidx1.i.i87, align 4
  store i1 false, ptr %37, align 1
  %memberidx1.i.i.i88 = getelementptr inbounds %ArrayIterator_Statement_, ptr %37, i64 0, i32 1
  %memberidx2.i.i.i89 = getelementptr inbounds %ArrayIterator_Statement_, ptr %37, i64 0, i32 3
  store ptr %38, ptr %memberidx2.i.i.i89, align 8
  %memberidx3.i.i.i90 = getelementptr inbounds %ArrayIterator_Statement_, ptr %37, i64 0, i32 2
  store i64 %39, ptr %memberidx3.i.i.i90, align 4
  store i64 1, ptr %memberidx1.i.i.i88, align 4
  %40 = icmp slt i64 %39, 1
  br i1 %40, label %for.end.i102, label %for.body.i99

for.body.i99:                                     ; preds = %if.entry7.i, %for.body.i99
  %41 = phi i64 [ %42, %for.body.i99 ], [ 1, %if.entry7.i ]
  %statement.0.i94134.in = phi ptr [ %43, %for.body.i99 ], [ %38, %if.entry7.i ]
  %statement.0.i94134 = load ptr, ptr %statement.0.i94134.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i94134)
  %42 = add nuw nsw i64 %41, 1
  store i64 %42, ptr %memberidx1.i.i.i88, align 4
  %43 = getelementptr inbounds ptr, ptr %38, i64 %41
  %.not144 = icmp slt i64 %41, %39
  br i1 %.not144, label %for.body.i99, label %for.end.i102

for.end.i102:                                     ; preds = %for.body.i99, %if.entry7.i
  tail call void @free(ptr nonnull %37)
  %memberidx4.i100 = getelementptr inbounds %Block, ptr %34, i64 0, i32 4
  %44 = load ptr, ptr %memberidx4.i100, align 8
  %.not.i101 = icmp eq ptr %44, null
  br i1 %.not.i101, label %CodeGen_codegen_block.exit106, label %if.entry.i103

if.entry.i103:                                    ; preds = %for.end.i102
  %45 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %44)
  br label %CodeGen_codegen_block.exit106

CodeGen_codegen_block.exit106:                    ; preds = %for.end.i102, %if.entry.i103
  store i1 %35, ptr %memberidx.i79, align 1
  %46 = load ptr, ptr %memberidx6.i75, align 8
  %memberidx.i42.i = getelementptr inbounds %Block, ptr %46, i64 0, i32 1
  %47 = load i1, ptr %memberidx.i42.i, align 1
  %memberidx1.i43.i = getelementptr inbounds %Block, ptr %46, i64 0, i32 2
  %48 = load i1, ptr %memberidx1.i43.i, align 1
  %49 = or i1 %47, %48
  %memberidx2.i44.i = getelementptr inbounds %Block, ptr %46, i64 0, i32 3
  %50 = load i1, ptr %memberidx2.i44.i, align 1
  %51 = or i1 %49, %50
  br i1 %51, label %else13.i, label %if.entry12.i

if.entry12.i:                                     ; preds = %ifend.i77, %CodeGen_codegen_block.exit106
  %52 = tail call ptr @LLVMBuildBr(ptr %1, ptr %13)
  br label %CodeGen_codegen_if_stmt.exit

else13.i:                                         ; preds = %CodeGen_codegen_block.exit106
  br i1 %32, label %if.entry15.i, label %CodeGen_codegen_if_stmt.exit

if.entry15.i:                                     ; preds = %else13.i
  tail call void @LLVMDeleteBasicBlock(ptr %13)
  br label %CodeGen_codegen_if_stmt.exit

CodeGen_codegen_if_stmt.exit:                     ; preds = %if.entry12.i, %else13.i, %if.entry15.i
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %13)
  %.pr = load i64, ptr %2, align 4
  br label %ifend

ifend:                                            ; preds = %3, %CodeGen_codegen_if_stmt.exit
  %53 = phi i64 [ %4, %3 ], [ %.pr, %CodeGen_codegen_if_stmt.exit ]
  %54 = icmp eq i64 %53, 3
  br i1 %54, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %ifend
  tail call fastcc void @CodeGen_codegen_for_stmt(ptr %0, ptr %1, ptr nonnull %2)
  %.pre = load i64, ptr %2, align 4
  br label %ifend4

ifend4:                                           ; preds = %ifend, %if.entry2
  %55 = phi i64 [ %53, %ifend ], [ %.pre, %if.entry2 ]
  %56 = icmp eq i64 %55, 4
  br i1 %56, label %if.entry6, label %ifend8

if.entry6:                                        ; preds = %ifend4
  %memberidx.i66 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %57 = load ptr, ptr %memberidx.i66, align 8
  %58 = tail call ptr @LLVMAppendBasicBlock(ptr %57, ptr nonnull @288)
  %59 = load ptr, ptr %memberidx.i66, align 8
  %60 = tail call ptr @LLVMAppendBasicBlock(ptr %59, ptr nonnull @289)
  %memberidx2.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %61 = load ptr, ptr %memberidx2.i, align 8
  %memberidx3.i67 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %62 = load ptr, ptr %memberidx3.i67, align 8
  store ptr %60, ptr %memberidx2.i, align 8
  store ptr %58, ptr %memberidx3.i67, align 8
  %memberidx6.i = getelementptr inbounds %WhileStatement, ptr %2, i64 0, i32 1
  %63 = load ptr, ptr %memberidx6.i, align 8
  %64 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %63)
  %65 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %64, ptr %58, ptr %60)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %58)
  %memberidx7.i = getelementptr inbounds %WhileStatement, ptr %2, i64 0, i32 2
  %66 = load ptr, ptr %memberidx7.i, align 8
  %memberidx.i107 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %67 = load i1, ptr %memberidx.i107, align 1
  store i1 false, ptr %memberidx.i107, align 1
  %68 = load ptr, ptr %66, align 8
  %69 = tail call ptr @malloc(i32 25)
  %70 = load ptr, ptr %68, align 8
  %memberidx1.i.i108 = getelementptr inbounds %Array_Statement_, ptr %68, i64 0, i32 1
  %71 = load i64, ptr %memberidx1.i.i108, align 4
  store i1 false, ptr %69, align 1
  %memberidx1.i.i.i109 = getelementptr inbounds %ArrayIterator_Statement_, ptr %69, i64 0, i32 1
  %memberidx2.i.i.i110 = getelementptr inbounds %ArrayIterator_Statement_, ptr %69, i64 0, i32 3
  store ptr %70, ptr %memberidx2.i.i.i110, align 8
  %memberidx3.i.i.i111 = getelementptr inbounds %ArrayIterator_Statement_, ptr %69, i64 0, i32 2
  store i64 %71, ptr %memberidx3.i.i.i111, align 4
  store i64 1, ptr %memberidx1.i.i.i109, align 4
  %72 = icmp slt i64 %71, 1
  br i1 %72, label %for.end.i123, label %for.body.i120

for.body.i120:                                    ; preds = %if.entry6, %for.body.i120
  %73 = phi i64 [ %74, %for.body.i120 ], [ 1, %if.entry6 ]
  %statement.0.i115132.in = phi ptr [ %75, %for.body.i120 ], [ %70, %if.entry6 ]
  %statement.0.i115132 = load ptr, ptr %statement.0.i115132.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i115132)
  %74 = add nuw nsw i64 %73, 1
  store i64 %74, ptr %memberidx1.i.i.i109, align 4
  %75 = getelementptr inbounds ptr, ptr %70, i64 %73
  %.not = icmp slt i64 %73, %71
  br i1 %.not, label %for.body.i120, label %for.end.i123

for.end.i123:                                     ; preds = %for.body.i120, %if.entry6
  tail call void @free(ptr nonnull %69)
  %memberidx4.i121 = getelementptr inbounds %Block, ptr %66, i64 0, i32 4
  %76 = load ptr, ptr %memberidx4.i121, align 8
  %.not.i122 = icmp eq ptr %76, null
  br i1 %.not.i122, label %CodeGen_codegen_block.exit127, label %if.entry.i124

if.entry.i124:                                    ; preds = %for.end.i123
  %77 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %76)
  br label %CodeGen_codegen_block.exit127

CodeGen_codegen_block.exit127:                    ; preds = %for.end.i123, %if.entry.i124
  store i1 %67, ptr %memberidx.i107, align 1
  %78 = load ptr, ptr %memberidx7.i, align 8
  %memberidx.i.i = getelementptr inbounds %Block, ptr %78, i64 0, i32 1
  %79 = load i1, ptr %memberidx.i.i, align 1
  %memberidx1.i.i = getelementptr inbounds %Block, ptr %78, i64 0, i32 2
  %80 = load i1, ptr %memberidx1.i.i, align 1
  %81 = or i1 %79, %80
  %memberidx2.i.i = getelementptr inbounds %Block, ptr %78, i64 0, i32 3
  %82 = load i1, ptr %memberidx2.i.i, align 1
  %83 = or i1 %81, %82
  br i1 %83, label %CodeGen_codegen_while_stmt.exit, label %if.entry.i68

if.entry.i68:                                     ; preds = %CodeGen_codegen_block.exit127
  %84 = load ptr, ptr %memberidx6.i, align 8
  %85 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %84)
  %86 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %85, ptr %58, ptr %60)
  br label %CodeGen_codegen_while_stmt.exit

CodeGen_codegen_while_stmt.exit:                  ; preds = %CodeGen_codegen_block.exit127, %if.entry.i68
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %60)
  store ptr %61, ptr %memberidx2.i, align 8
  store ptr %62, ptr %memberidx3.i67, align 8
  %.pr128 = load i64, ptr %2, align 4
  br label %ifend8

ifend8:                                           ; preds = %ifend4, %CodeGen_codegen_while_stmt.exit
  %87 = phi i64 [ %55, %ifend4 ], [ %.pr128, %CodeGen_codegen_while_stmt.exit ]
  %88 = icmp eq i64 %87, 5
  br i1 %88, label %if.entry10, label %ifend12

if.entry10:                                       ; preds = %ifend8
  %memberidx13 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %89 = load ptr, ptr %memberidx13, align 8
  %90 = tail call ptr @LLVMBuildBr(ptr %1, ptr %89)
  %.pre141 = load i64, ptr %2, align 4
  br label %ifend12

ifend12:                                          ; preds = %ifend8, %if.entry10
  %91 = phi i64 [ %87, %ifend8 ], [ %.pre141, %if.entry10 ]
  %92 = icmp eq i64 %91, 6
  br i1 %92, label %if.entry15, label %ifend17

if.entry15:                                       ; preds = %ifend12
  %memberidx18 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %93 = load ptr, ptr %memberidx18, align 8
  %94 = tail call ptr @LLVMBuildBr(ptr %1, ptr %93)
  %.pr129 = load i64, ptr %2, align 4
  br label %ifend17

ifend17:                                          ; preds = %ifend12, %if.entry15
  %95 = phi i64 [ %91, %ifend12 ], [ %.pr129, %if.entry15 ]
  %96 = icmp eq i64 %95, 1
  br i1 %96, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %ifend17
  tail call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr %1, ptr nonnull %2)
  %.pre142 = load i64, ptr %2, align 4
  br label %ifend22

ifend22:                                          ; preds = %ifend17, %if.entry20
  %97 = phi i64 [ %95, %ifend17 ], [ %.pre142, %if.entry20 ]
  %98 = icmp eq i64 %97, 2
  br i1 %98, label %if.entry24, label %ifend26

if.entry24:                                       ; preds = %ifend22
  tail call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr %1, ptr nonnull %2)
  %.pr130 = load i64, ptr %2, align 4
  br label %ifend26

ifend26:                                          ; preds = %ifend22, %if.entry24
  %99 = phi i64 [ %97, %ifend22 ], [ %.pr130, %if.entry24 ]
  %100 = icmp eq i64 %99, 7
  br i1 %100, label %if.entry28, label %ifend30

if.entry28:                                       ; preds = %ifend26
  %memberidx.i = getelementptr inbounds %ReturnStatement, ptr %2, i64 0, i32 1
  %101 = load ptr, ptr %memberidx.i, align 8
  %.not.i = icmp eq ptr %101, null
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry28
  %102 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %101)
  %103 = load ptr, ptr %memberidx.i, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %103, i64 0, i32 3
  %104 = load ptr, ptr %memberidx3.i, align 8
  %105 = load i64, ptr %104, align 4
  %.not12.i = icmp eq i64 %105, 10
  br i1 %.not12.i, label %ifend.i, label %if.entry5.i

ifend.i:                                          ; preds = %if.entry.i, %if.entry28
  %106 = tail call ptr @LLVMBuildRetVoid(ptr %1)
  br label %ifend30

if.entry5.i:                                      ; preds = %if.entry.i
  %107 = tail call ptr @LLVMBuildRet(ptr %1, ptr %102)
  br label %ifend30

ifend30:                                          ; preds = %if.entry5.i, %ifend.i, %ifend26
  %108 = load i64, ptr %2, align 4
  %109 = icmp eq i64 %108, 8
  br i1 %109, label %if.entry32, label %ifend34

if.entry32:                                       ; preds = %ifend30
  %110 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %2)
  br label %ifend34

ifend34:                                          ; preds = %ifend30, %if.entry32
  ret void
}

define internal fastcc void @Map_String_CGClassType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_CGClassType____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_CGClassType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_CGClassType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_CGClassType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_CGClassType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_CGClassType__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_get_string_val(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr nocapture %4, i64 %5) unnamed_addr {
  %indices = alloca [1 x ptr], align 8
  %7 = load i64, ptr %3, align 4
  switch i64 %7, label %is_object.exit302 [
    i64 0, label %if.entry
    i64 20, label %if.entry.i299
  ]

common.ret:                                       ; preds = %ifend4, %if.entry.i, %Map_String_LLVMValueRef____getitem__.exit, %if.entry.i135, %Map_String_LLVMValueRef____getitem__.exit219, %CodeGen_get_or_codegen_enum_from_typeid.exit, %Array_LLVMValueRef____sl__.exit107, %Array_LLVMValueRef____sl__.exit160, %CodeGen_createGlobalLLVMString.exit173
  %common.ret.op = phi ptr [ %67, %CodeGen_createGlobalLLVMString.exit173 ], [ %102, %Array_LLVMValueRef____sl__.exit160 ], [ %266, %Array_LLVMValueRef____sl__.exit107 ], [ %382, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %192, %if.entry.i135 ], [ %185, %Map_String_LLVMValueRef____getitem__.exit219 ], [ %361, %if.entry.i ], [ %357, %Map_String_LLVMValueRef____getitem__.exit ], [ %2, %ifend4 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %6
  %8 = tail call ptr @malloc(i32 4)
  store i32 1702195828, ptr %8, align 8
  %9 = tail call ptr @malloc(i32 24)
  store ptr %8, ptr %9, align 8
  %memberidx1.i.i182 = getelementptr inbounds %String, ptr %9, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i182, align 4
  %memberidx2.i.i183 = getelementptr inbounds %String, ptr %9, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i183, align 4
  %memberidx.i176 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %memberidx.i176, align 8
  %11 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %9)
  %memberidx.i239 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %10, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i239, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %10, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i240 = icmp eq ptr %16, null
  br i1 %.not.i240, label %if.entry.i178, label %while.entry.i245

while.entry.i245:                                 ; preds = %if.entry, %else.i253
  %17 = phi ptr [ %25, %else.i253 ], [ %14, %if.entry ]
  %18 = phi i64 [ %26, %else.i253 ], [ %12, %if.entry ]
  %19 = phi ptr [ %30, %else.i253 ], [ %16, %if.entry ]
  %hash.0.i241 = phi i64 [ %28, %else.i253 ], [ %13, %if.entry ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i242 = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i.i242, align 4
  %.not.i.i244 = icmp eq i64 %21, 4
  br i1 %.not.i.i244, label %ifend.i.i246, label %else.i253

ifend.i.i246:                                     ; preds = %while.entry.i245
  %22 = load ptr, ptr %20, align 8
  %23 = tail call i64 @memcmp(ptr %22, ptr nonnull %8, i64 4)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i251, label %ifend.i.i246.else.i253_crit_edge

ifend.i.i246.else.i253_crit_edge:                 ; preds = %ifend.i.i246
  %.pre = load i64, ptr %memberidx.i239, align 4
  %.pre335 = load ptr, ptr %10, align 8
  br label %else.i253

while.end.i251:                                   ; preds = %ifend.i.i246
  %.pre336.pre = load ptr, ptr %10, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre336.pre, i64 %hash.0.i241
  %.pre337.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i250 = icmp eq ptr %.pre337.pre, null
  br i1 %.not25.i250, label %if.entry.i178, label %Map_String_LLVMValueRef____getitem__.exit257

else.i253:                                        ; preds = %ifend.i.i246.else.i253_crit_edge, %while.entry.i245
  %25 = phi ptr [ %.pre335, %ifend.i.i246.else.i253_crit_edge ], [ %17, %while.entry.i245 ]
  %26 = phi i64 [ %.pre, %ifend.i.i246.else.i253_crit_edge ], [ %18, %while.entry.i245 ]
  %27 = add nuw i64 %hash.0.i241, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not26.i252 = icmp eq ptr %30, null
  br i1 %.not26.i252, label %if.entry.i178, label %while.entry.i245

Map_String_LLVMValueRef____getitem__.exit257:     ; preds = %while.end.i251
  %memberidx11.i255 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre337.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx11.i255, align 8
  %32 = icmp eq ptr %31, null
  br i1 %32, label %if.entry.i178, label %CodeGen_createGlobalLLVMString.exit181

if.entry.i178:                                    ; preds = %else.i253, %if.entry, %while.end.i251, %Map_String_LLVMValueRef____getitem__.exit257
  %33 = tail call ptr @malloc(i32 5)
  %34 = load i32, ptr %8, align 8
  store i32 %34, ptr %33, align 8
  %35 = getelementptr inbounds i8, ptr %33, i64 4
  store i8 0, ptr %35, align 1
  %36 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr nonnull %33, ptr nonnull @80)
  %37 = load ptr, ptr %memberidx.i176, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %37, ptr nonnull %9, ptr %36)
  br label %CodeGen_createGlobalLLVMString.exit181

CodeGen_createGlobalLLVMString.exit181:           ; preds = %Map_String_LLVMValueRef____getitem__.exit257, %if.entry.i178
  %str.0.i179 = phi ptr [ %36, %if.entry.i178 ], [ %31, %Map_String_LLVMValueRef____getitem__.exit257 ]
  %38 = tail call ptr @malloc(i32 5)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %38, ptr noundef nonnull align 8 dereferenceable(5) @100, i64 5, i1 false)
  %39 = tail call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i.i174 = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 5, ptr %memberidx1.i.i174, align 4
  %memberidx2.i.i175 = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 5, ptr %memberidx2.i.i175, align 4
  %40 = load ptr, ptr %memberidx.i176, align 8
  %41 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %39)
  %memberidx.i220 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %40, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i220, align 4
  %43 = urem i64 %41, %42
  %44 = load ptr, ptr %40, align 8
  %45 = getelementptr inbounds ptr, ptr %44, i64 %43
  %46 = load ptr, ptr %45, align 8
  %.not.i221 = icmp eq ptr %46, null
  br i1 %.not.i221, label %if.entry.i170, label %while.entry.i226

while.entry.i226:                                 ; preds = %CodeGen_createGlobalLLVMString.exit181, %else.i234
  %47 = phi ptr [ %55, %else.i234 ], [ %44, %CodeGen_createGlobalLLVMString.exit181 ]
  %48 = phi i64 [ %56, %else.i234 ], [ %42, %CodeGen_createGlobalLLVMString.exit181 ]
  %49 = phi ptr [ %60, %else.i234 ], [ %46, %CodeGen_createGlobalLLVMString.exit181 ]
  %hash.0.i222 = phi i64 [ %58, %else.i234 ], [ %43, %CodeGen_createGlobalLLVMString.exit181 ]
  %50 = load ptr, ptr %49, align 8
  %memberidx.i.i223 = getelementptr inbounds %String, ptr %50, i64 0, i32 1
  %51 = load i64, ptr %memberidx.i.i223, align 4
  %.not.i.i225 = icmp eq i64 %51, 5
  br i1 %.not.i.i225, label %ifend.i.i227, label %else.i234

ifend.i.i227:                                     ; preds = %while.entry.i226
  %52 = load ptr, ptr %50, align 8
  %53 = tail call i64 @memcmp(ptr %52, ptr %38, i64 5)
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %while.end.i232, label %ifend.i.i227.else.i234_crit_edge

ifend.i.i227.else.i234_crit_edge:                 ; preds = %ifend.i.i227
  %.pre338 = load i64, ptr %memberidx.i220, align 4
  %.pre339 = load ptr, ptr %40, align 8
  br label %else.i234

while.end.i232:                                   ; preds = %ifend.i.i227
  %.pre340.pre = load ptr, ptr %40, align 8
  %.phi.trans.insert341.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre340.pre, i64 %hash.0.i222
  %.pre342.pre = load ptr, ptr %.phi.trans.insert341.phi.trans.insert, align 8
  %.not25.i231 = icmp eq ptr %.pre342.pre, null
  br i1 %.not25.i231, label %if.entry.i170, label %Map_String_LLVMValueRef____getitem__.exit238

else.i234:                                        ; preds = %ifend.i.i227.else.i234_crit_edge, %while.entry.i226
  %55 = phi ptr [ %.pre339, %ifend.i.i227.else.i234_crit_edge ], [ %47, %while.entry.i226 ]
  %56 = phi i64 [ %.pre338, %ifend.i.i227.else.i234_crit_edge ], [ %48, %while.entry.i226 ]
  %57 = add nuw i64 %hash.0.i222, 1
  %58 = urem i64 %57, %56
  %59 = getelementptr inbounds ptr, ptr %55, i64 %58
  %60 = load ptr, ptr %59, align 8
  %.not26.i233 = icmp eq ptr %60, null
  br i1 %.not26.i233, label %if.entry.i170, label %while.entry.i226

Map_String_LLVMValueRef____getitem__.exit238:     ; preds = %while.end.i232
  %memberidx11.i236 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre342.pre, i64 0, i32 1
  %61 = load ptr, ptr %memberidx11.i236, align 8
  %62 = icmp eq ptr %61, null
  br i1 %62, label %if.entry.i170, label %CodeGen_createGlobalLLVMString.exit173

if.entry.i170:                                    ; preds = %else.i234, %CodeGen_createGlobalLLVMString.exit181, %while.end.i232, %Map_String_LLVMValueRef____getitem__.exit238
  %63 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(5) %63, ptr noundef nonnull align 8 dereferenceable(5) %38, i64 5, i1 false)
  %64 = getelementptr inbounds i8, ptr %63, i64 5
  store i8 0, ptr %64, align 1
  %65 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %63, ptr nonnull @80)
  %66 = load ptr, ptr %memberidx.i176, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %66, ptr nonnull %39, ptr %65)
  br label %CodeGen_createGlobalLLVMString.exit173

CodeGen_createGlobalLLVMString.exit173:           ; preds = %Map_String_LLVMValueRef____getitem__.exit238, %if.entry.i170
  %str.0.i171 = phi ptr [ %65, %if.entry.i170 ], [ %61, %Map_String_LLVMValueRef____getitem__.exit238 ]
  %67 = tail call ptr @LLVMBuildSelect(ptr %1, ptr %2, ptr %str.0.i179, ptr %str.0.i171, ptr nonnull @80)
  br label %common.ret

if.entry.i299:                                    ; preds = %6, %if.entry.i299
  %.tr5.i297 = phi ptr [ %68, %if.entry.i299 ], [ %3, %6 ]
  %memberidx1.i298 = getelementptr inbounds %GenericType, ptr %.tr5.i297, i64 0, i32 3
  %68 = load ptr, ptr %memberidx1.i298, align 8
  %69 = load i64, ptr %68, align 4
  %70 = icmp eq i64 %69, 20
  br i1 %70, label %if.entry.i299, label %is_object.exit302

is_object.exit302:                                ; preds = %if.entry.i299, %6
  %.lcssa.i300 = phi i64 [ %7, %6 ], [ %69, %if.entry.i299 ]
  %71 = icmp eq i64 %.lcssa.i300, 11
  br i1 %71, label %if.entry2, label %ifend4

if.entry2:                                        ; preds = %is_object.exit302
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %72 = load ptr, ptr %memberidx, align 8
  %73 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %73, ptr noundef nonnull align 8 dereferenceable(6) @187, i64 6, i1 false)
  %74 = tail call ptr @malloc(i32 24)
  store ptr %73, ptr %74, align 8
  %memberidx1.i.i166 = getelementptr inbounds %String, ptr %74, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i166, align 4
  %memberidx2.i.i167 = getelementptr inbounds %String, ptr %74, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i167, align 4
  %75 = load i64, ptr %3, align 4
  %76 = icmp eq i64 %75, 20
  br i1 %76, label %if.entry.i293, label %is_object.exit296.thread

if.entry.i293:                                    ; preds = %if.entry2, %if.entry.i293
  %.tr5.i291 = phi ptr [ %77, %if.entry.i293 ], [ %3, %if.entry2 ]
  %memberidx1.i292 = getelementptr inbounds %GenericType, ptr %.tr5.i291, i64 0, i32 3
  %77 = load ptr, ptr %memberidx1.i292, align 8
  %78 = load i64, ptr %77, align 4
  switch i64 %78, label %ifend7 [
    i64 20, label %if.entry.i293
    i64 11, label %tailrecurse.i282.preheader
  ]

is_object.exit296.thread:                         ; preds = %if.entry2
  %79 = icmp eq i64 %75, 11
  br i1 %79, label %if.entry3.i289, label %ifend7

tailrecurse.i282.preheader:                       ; preds = %if.entry.i293
  br i1 %76, label %if.entry.i285, label %if.entry3.i289

if.entry.i285:                                    ; preds = %tailrecurse.i282.preheader, %if.entry.i285
  %.tr11.i281327 = phi ptr [ %80, %if.entry.i285 ], [ %3, %tailrecurse.i282.preheader ]
  %memberidx1.i284 = getelementptr inbounds %GenericType, ptr %.tr11.i281327, i64 0, i32 3
  %80 = load ptr, ptr %memberidx1.i284, align 8
  %81 = load i64, ptr %80, align 4
  %switch = icmp eq i64 %81, 20
  br i1 %switch, label %if.entry.i285, label %if.entry3.i289

if.entry3.i289:                                   ; preds = %if.entry.i285, %is_object.exit296.thread, %tailrecurse.i282.preheader
  %.tr11.i281.lcssa = phi ptr [ %3, %tailrecurse.i282.preheader ], [ %3, %is_object.exit296.thread ], [ %80, %if.entry.i285 ]
  %memberidx6.i286 = getelementptr inbounds %ObjectType, ptr %.tr11.i281.lcssa, i64 0, i32 1
  %82 = load ptr, ptr %memberidx6.i286, align 8
  %83 = load ptr, ptr %72, align 8
  %84 = load i64, ptr %82, align 4
  %85 = load ptr, ptr %83, align 8
  %86 = getelementptr inbounds ptr, ptr %85, i64 %84
  %87 = load ptr, ptr %86, align 8
  %memberidx2.i.i287 = getelementptr inbounds %Module, ptr %87, i64 0, i32 3
  %88 = load ptr, ptr %memberidx2.i.i287, align 8
  %memberidx3.i.i288 = getelementptr inbounds %TypeId, ptr %82, i64 0, i32 2
  %89 = load i64, ptr %memberidx3.i.i288, align 4
  %90 = load ptr, ptr %88, align 8
  %91 = getelementptr inbounds ptr, ptr %90, i64 %89
  %92 = load ptr, ptr %91, align 8
  %memberidx.i162 = getelementptr inbounds %Class, ptr %92, i64 0, i32 1
  %93 = load ptr, ptr %memberidx.i162, align 8
  %memberidx.i.i163 = getelementptr inbounds %String, ptr %93, i64 0, i32 1
  %94 = load i64, ptr %memberidx.i.i163, align 4
  %.not.i.i = icmp eq i64 %94, 6
  br i1 %.not.i.i, label %String___eq__.exit.i, label %ifend7

String___eq__.exit.i:                             ; preds = %if.entry3.i289
  %95 = load ptr, ptr %93, align 8
  %96 = tail call i64 @memcmp(ptr %95, ptr %73, i64 6)
  %97 = icmp eq i64 %96, 0
  %98 = load ptr, ptr %92, align 8
  %99 = load i64, ptr %98, align 4
  %100 = icmp eq i64 %99, 1
  %101 = and i1 %97, %100
  br i1 %101, label %if.entry5, label %ifend7

ifend4:                                           ; preds = %is_object.exit302
  switch i64 %7, label %common.ret [
    i64 16, label %if.entry26
    i64 12, label %if.entry30
  ]

if.entry5:                                        ; preds = %String___eq__.exit.i
  %102 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %2)
  %memberidx.i157 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %103 = load i64, ptr %memberidx.i157, align 4
  %104 = add i64 %103, 1
  %memberidx.i.i158 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %105 = load i64, ptr %memberidx.i.i158, align 4
  %106 = icmp slt i64 %105, %104
  %.pre365 = load ptr, ptr %4, align 8
  br i1 %106, label %while.entry.i.i159, label %Array_LLVMValueRef____sl__.exit160

while.entry.i.i159:                               ; preds = %if.entry5, %while.entry.i.i159
  %107 = phi ptr [ %111, %while.entry.i.i159 ], [ %.pre365, %if.entry5 ]
  %108 = phi i64 [ %112, %while.entry.i.i159 ], [ %105, %if.entry5 ]
  %109 = shl nuw i64 %108, 1
  store i64 %109, ptr %memberidx.i.i158, align 4
  %110 = shl i64 %108, 4
  %111 = tail call ptr @realloc(ptr %107, i64 %110)
  store ptr %111, ptr %4, align 8
  %112 = load i64, ptr %memberidx.i.i158, align 4
  %113 = icmp slt i64 %112, %104
  br i1 %113, label %while.entry.i.i159, label %Array_LLVMValueRef____sl__.exit160.loopexit

Array_LLVMValueRef____sl__.exit160.loopexit:      ; preds = %while.entry.i.i159
  %.pre366 = load i64, ptr %memberidx.i157, align 4
  %.pre376 = add nsw i64 %.pre366, 1
  br label %Array_LLVMValueRef____sl__.exit160

Array_LLVMValueRef____sl__.exit160:               ; preds = %if.entry5, %Array_LLVMValueRef____sl__.exit160.loopexit
  %.pre-phi = phi i64 [ %.pre376, %Array_LLVMValueRef____sl__.exit160.loopexit ], [ %104, %if.entry5 ]
  %114 = phi ptr [ %111, %Array_LLVMValueRef____sl__.exit160.loopexit ], [ %.pre365, %if.entry5 ]
  %115 = phi i64 [ %.pre366, %Array_LLVMValueRef____sl__.exit160.loopexit ], [ %103, %if.entry5 ]
  store i64 %.pre-phi, ptr %memberidx.i157, align 4
  %116 = getelementptr inbounds ptr, ptr %114, i64 %115
  store ptr %102, ptr %116, align 8
  br label %common.ret

ifend7:                                           ; preds = %if.entry.i293, %is_object.exit296.thread, %if.entry3.i289, %String___eq__.exit.i
  %117 = load ptr, ptr %memberidx, align 8
  br label %tailrecurse.i

tailrecurse.i:                                    ; preds = %if.entry.i277, %ifend7
  %.tr11.i = phi ptr [ %3, %ifend7 ], [ %119, %if.entry.i277 ]
  %118 = load i64, ptr %.tr11.i, align 4
  switch i64 %118, label %get_class_from_type.exit [
    i64 20, label %if.entry.i277
    i64 11, label %if.entry3.i
  ]

if.entry.i277:                                    ; preds = %tailrecurse.i
  %memberidx1.i276 = getelementptr inbounds %GenericType, ptr %.tr11.i, i64 0, i32 3
  %119 = load ptr, ptr %memberidx1.i276, align 8
  br label %tailrecurse.i

if.entry3.i:                                      ; preds = %tailrecurse.i
  %memberidx6.i278 = getelementptr inbounds %ObjectType, ptr %.tr11.i, i64 0, i32 1
  %120 = load ptr, ptr %memberidx6.i278, align 8
  %121 = load ptr, ptr %117, align 8
  %122 = load i64, ptr %120, align 4
  %123 = load ptr, ptr %121, align 8
  %124 = getelementptr inbounds ptr, ptr %123, i64 %122
  %125 = load ptr, ptr %124, align 8
  %memberidx2.i.i279 = getelementptr inbounds %Module, ptr %125, i64 0, i32 3
  %126 = load ptr, ptr %memberidx2.i.i279, align 8
  %memberidx3.i.i280 = getelementptr inbounds %TypeId, ptr %120, i64 0, i32 2
  %127 = load i64, ptr %memberidx3.i.i280, align 4
  %128 = load ptr, ptr %126, align 8
  %129 = getelementptr inbounds ptr, ptr %128, i64 %127
  %130 = load ptr, ptr %129, align 8
  br label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %tailrecurse.i, %if.entry3.i
  %common.ret.op.i275 = phi ptr [ %130, %if.entry3.i ], [ null, %tailrecurse.i ]
  %memberidx9 = getelementptr inbounds %Class, ptr %common.ret.op.i275, i64 0, i32 1
  %131 = load ptr, ptr %memberidx9, align 8
  %memberidx10 = getelementptr inbounds %String, ptr %131, i64 0, i32 1
  %132 = load i64, ptr %memberidx10, align 4
  %133 = add nuw i64 %132, 14
  %134 = trunc i64 %133 to i32
  %135 = tail call ptr @malloc(i32 %134)
  %136 = tail call ptr @malloc(i32 24)
  store ptr %135, ptr %136, align 8
  %memberidx1.i.i154 = getelementptr inbounds %String, ptr %136, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i154, align 4
  %memberidx.i156 = getelementptr inbounds %String, ptr %136, i64 0, i32 2
  store i64 %133, ptr %memberidx.i156, align 4
  %137 = load ptr, ptr %memberidx9, align 8
  %memberidx.i153 = getelementptr inbounds %String, ptr %137, i64 0, i32 1
  %138 = load i64, ptr %memberidx.i153, align 4
  %139 = trunc i64 %138 to i32
  %140 = add i32 %139, 1
  %141 = tail call ptr @malloc(i32 %140)
  %142 = load ptr, ptr %137, align 8
  %143 = load i64, ptr %memberidx.i153, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %141, ptr align 8 %142, i64 %143, i1 false)
  %144 = getelementptr inbounds i8, ptr %141, i64 %143
  store i8 0, ptr %144, align 1
  %145 = alloca ptr, align 8
  %146 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %145, ptr nonnull @247, ptr %141)
  %147 = load ptr, ptr %145, align 8
  %148 = tail call ptr @malloc(i32 24)
  store ptr %147, ptr %148, align 8
  %memberidx1.i151 = getelementptr inbounds %String, ptr %148, i64 0, i32 1
  store i64 %146, ptr %memberidx1.i151, align 4
  %memberidx2.i152 = getelementptr inbounds %String, ptr %148, i64 0, i32 2
  store i64 %146, ptr %memberidx2.i152, align 4
  tail call void @free(ptr %141)
  %149 = icmp slt i64 %133, %146
  br i1 %149, label %if.entry.i.i.i149, label %String___adda__.exit150

if.entry.i.i.i149:                                ; preds = %get_class_from_type.exit
  %150 = call ptr @realloc(ptr %135, i64 %146)
  store ptr %150, ptr %136, align 8
  store i64 %146, ptr %memberidx.i156, align 4
  br label %String___adda__.exit150

String___adda__.exit150:                          ; preds = %get_class_from_type.exit, %if.entry.i.i.i149
  %151 = phi i64 [ %133, %get_class_from_type.exit ], [ %146, %if.entry.i.i.i149 ]
  %152 = phi ptr [ %135, %get_class_from_type.exit ], [ %150, %if.entry.i.i.i149 ]
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %152, ptr align 8 %147, i64 %146, i1 false)
  store i64 %146, ptr %memberidx1.i.i154, align 4
  %153 = icmp eq i64 %5, 3
  br i1 %153, label %if.entry12, label %ifend14

if.entry12:                                       ; preds = %String___adda__.exit150
  %154 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %154, ptr noundef nonnull align 8 dereferenceable(6) @248, i64 6, i1 false)
  %155 = call ptr @malloc(i32 24)
  store ptr %154, ptr %155, align 8
  %memberidx1.i.i144 = getelementptr inbounds %String, ptr %155, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i144, align 4
  %memberidx2.i.i145 = getelementptr inbounds %String, ptr %155, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i145, align 4
  %156 = add nuw i64 %146, 6
  %157 = icmp slt i64 %151, %156
  br i1 %157, label %if.entry.i.i.i142, label %String___adda__.exit143

if.entry.i.i.i142:                                ; preds = %if.entry12
  %158 = call ptr @realloc(ptr %152, i64 %156)
  store ptr %158, ptr %136, align 8
  store i64 %156, ptr %memberidx.i156, align 4
  br label %String___adda__.exit143

String___adda__.exit143:                          ; preds = %if.entry12, %if.entry.i.i.i142
  %159 = phi ptr [ %152, %if.entry12 ], [ %158, %if.entry.i.i.i142 ]
  %160 = getelementptr inbounds i8, ptr %159, i64 %146
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 2147483648 dereferenceable(6) %160, ptr noundef nonnull align 8 dereferenceable(6) %154, i64 6, i1 false)
  %161 = load i64, ptr %memberidx1.i.i154, align 4
  %162 = add nuw i64 %161, 6
  store i64 %162, ptr %memberidx1.i.i154, align 4
  %memberidx.i133 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %163 = load ptr, ptr %memberidx.i133, align 8
  %164 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %136)
  %memberidx.i201 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %163, i64 0, i32 1
  %165 = load i64, ptr %memberidx.i201, align 4
  %166 = urem i64 %164, %165
  %167 = load ptr, ptr %163, align 8
  %168 = getelementptr inbounds ptr, ptr %167, i64 %166
  %169 = load ptr, ptr %168, align 8
  %.not.i202 = icmp eq ptr %169, null
  br i1 %.not.i202, label %if.entry.i135, label %while.entry.i207

while.entry.i207:                                 ; preds = %String___adda__.exit143, %else.i215
  %170 = phi ptr [ %179, %else.i215 ], [ %167, %String___adda__.exit143 ]
  %171 = phi i64 [ %180, %else.i215 ], [ %165, %String___adda__.exit143 ]
  %172 = phi ptr [ %184, %else.i215 ], [ %169, %String___adda__.exit143 ]
  %hash.0.i203 = phi i64 [ %182, %else.i215 ], [ %166, %String___adda__.exit143 ]
  %173 = load ptr, ptr %172, align 8
  %memberidx.i.i204 = getelementptr inbounds %String, ptr %173, i64 0, i32 1
  %174 = load i64, ptr %memberidx.i.i204, align 4
  %.not.i.i206 = icmp eq i64 %174, %162
  br i1 %.not.i.i206, label %ifend.i.i208, label %else.i215

ifend.i.i208:                                     ; preds = %while.entry.i207
  %175 = load ptr, ptr %173, align 8
  %176 = load ptr, ptr %136, align 8
  %177 = call i64 @memcmp(ptr %175, ptr %176, i64 %162)
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %while.end.i213, label %ifend.i.i208.else.i215_crit_edge

ifend.i.i208.else.i215_crit_edge:                 ; preds = %ifend.i.i208
  %.pre360 = load i64, ptr %memberidx.i201, align 4
  %.pre361 = load ptr, ptr %163, align 8
  br label %else.i215

while.end.i213:                                   ; preds = %ifend.i.i208
  %.pre362.pre = load ptr, ptr %163, align 8
  %.phi.trans.insert363.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre362.pre, i64 %hash.0.i203
  %.pre364.pre = load ptr, ptr %.phi.trans.insert363.phi.trans.insert, align 8
  %.not25.i212 = icmp eq ptr %.pre364.pre, null
  br i1 %.not25.i212, label %if.entry.i135, label %Map_String_LLVMValueRef____getitem__.exit219

else.i215:                                        ; preds = %ifend.i.i208.else.i215_crit_edge, %while.entry.i207
  %179 = phi ptr [ %.pre361, %ifend.i.i208.else.i215_crit_edge ], [ %170, %while.entry.i207 ]
  %180 = phi i64 [ %.pre360, %ifend.i.i208.else.i215_crit_edge ], [ %171, %while.entry.i207 ]
  %181 = add nuw i64 %hash.0.i203, 1
  %182 = urem i64 %181, %180
  %183 = getelementptr inbounds ptr, ptr %179, i64 %182
  %184 = load ptr, ptr %183, align 8
  %.not26.i214 = icmp eq ptr %184, null
  br i1 %.not26.i214, label %if.entry.i135, label %while.entry.i207

Map_String_LLVMValueRef____getitem__.exit219:     ; preds = %while.end.i213
  %memberidx11.i217 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre364.pre, i64 0, i32 1
  %185 = load ptr, ptr %memberidx11.i217, align 8
  %186 = icmp eq ptr %185, null
  br i1 %186, label %if.entry.i135, label %common.ret

if.entry.i135:                                    ; preds = %else.i215, %String___adda__.exit143, %while.end.i213, %Map_String_LLVMValueRef____getitem__.exit219
  %187 = trunc i64 %162 to i32
  %188 = add i32 %187, 1
  %189 = call ptr @malloc(i32 %188)
  %190 = load ptr, ptr %136, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %189, ptr align 8 %190, i64 %162, i1 false)
  %191 = getelementptr inbounds i8, ptr %189, i64 %162
  store i8 0, ptr %191, align 1
  %192 = call ptr @LLVMBuildGlobalString(ptr %1, ptr %189, ptr nonnull @80)
  %193 = load ptr, ptr %memberidx.i133, align 8
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %193, ptr nonnull %136, ptr %192)
  br label %common.ret

ifend14:                                          ; preds = %String___adda__.exit150
  %memberidx15 = getelementptr inbounds %Class, ptr %common.ret.op.i275, i64 0, i32 6
  %194 = load ptr, ptr %memberidx15, align 8
  %memberidx16 = getelementptr inbounds %Map_String_PropId_, ptr %194, i64 0, i32 2
  %195 = load i64, ptr %memberidx16, align 4
  %196 = alloca ptr, i64 %195, align 8
  %197 = call ptr @malloc(i32 25)
  %198 = load ptr, ptr %194, align 8
  %memberidx1.i129 = getelementptr inbounds %Map_String_PropId_, ptr %194, i64 0, i32 1
  %199 = load i64, ptr %memberidx1.i129, align 4
  %200 = load i64, ptr %memberidx16, align 4
  store i1 false, ptr %197, align 1
  %memberidx1.i.i131 = getelementptr inbounds %MapIterator_String_PropId_, ptr %197, i64 0, i32 1
  store ptr %198, ptr %memberidx1.i.i131, align 8
  %memberidx2.i.i132 = getelementptr inbounds %MapIterator_String_PropId_, ptr %197, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %197, i64 0, i32 3
  store i64 %200, ptr %memberidx3.i.i, align 4
  %201 = add nsw i64 %199, -1
  store i64 %201, ptr %memberidx2.i.i132, align 4
  %202 = icmp sgt i64 %199, 0
  br i1 %202, label %while.entry.i124, label %MapIterator_String_PropId__next.exit128

while.entry.i124:                                 ; preds = %ifend14, %ifend.i127
  %203 = phi i64 [ %206, %ifend.i127 ], [ %201, %ifend14 ]
  %204 = phi ptr [ %incdec.ptr.i122, %ifend.i127 ], [ %198, %ifend14 ]
  %incdec.ptr.i122 = getelementptr inbounds ptr, ptr %204, i64 1
  %205 = load ptr, ptr %204, align 8
  %.not.i123 = icmp eq ptr %205, null
  br i1 %.not.i123, label %ifend.i127, label %MapIterator_String_PropId__next.exit128.loopexit

ifend.i127:                                       ; preds = %while.entry.i124
  %206 = add nsw i64 %203, -1
  store i64 %206, ptr %memberidx2.i.i132, align 4
  %207 = icmp sgt i64 %203, 0
  br i1 %207, label %while.entry.i124, label %MapIterator_String_PropId__next.exit128.loopexit

MapIterator_String_PropId__next.exit128.loopexit: ; preds = %ifend.i127, %while.entry.i124
  %208 = phi i64 [ %206, %ifend.i127 ], [ %203, %while.entry.i124 ]
  store ptr %incdec.ptr.i122, ptr %memberidx1.i.i131, align 8
  br label %MapIterator_String_PropId__next.exit128

MapIterator_String_PropId__next.exit128:          ; preds = %MapIterator_String_PropId__next.exit128.loopexit, %ifend14
  %209 = phi i64 [ %208, %MapIterator_String_PropId__next.exit128.loopexit ], [ %201, %ifend14 ]
  %memberidx1.i.i131.promoted313 = phi ptr [ %incdec.ptr.i122, %MapIterator_String_PropId__next.exit128.loopexit ], [ %198, %ifend14 ]
  %storemerge317 = icmp slt i64 %200, 1
  br i1 %storemerge317, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_String_PropId__next.exit128
  %210 = add nuw i64 %5, 1
  %memberidx.i102 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %memberidx.i.i103 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_String_PropId__next.exit
  %211 = phi i64 [ %209, %for.body.lr.ph ], [ %333, %MapIterator_String_PropId__next.exit ]
  %storemerge308322.in = phi i64 [ %200, %for.body.lr.ph ], [ %storemerge308322, %MapIterator_String_PropId__next.exit ]
  %idx.0321 = phi i64 [ 0, %for.body.lr.ph ], [ %295, %MapIterator_String_PropId__next.exit ]
  %incdec.ptr.i.lcssa315320 = phi ptr [ %memberidx1.i.i131.promoted313, %for.body.lr.ph ], [ %incdec.ptr.i.lcssa314, %MapIterator_String_PropId__next.exit ]
  %storemerge308322 = add nsw i64 %storemerge308322.in, -1
  %field_entry.0323.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa315320, i64 -1
  %field_entry.0323 = load ptr, ptr %field_entry.0323.in, align 8
  %212 = load ptr, ptr %memberidx, align 8
  %memberidx20 = getelementptr inbounds %MapEntry_String_PropId_, ptr %field_entry.0323, i64 0, i32 1
  %213 = load ptr, ptr %memberidx20, align 8
  %memberidx.i.i115 = getelementptr inbounds %PropId, ptr %213, i64 0, i32 1
  %214 = load ptr, ptr %memberidx.i.i115, align 8
  %215 = load ptr, ptr %212, align 8
  %216 = load i64, ptr %214, align 4
  %217 = load ptr, ptr %215, align 8
  %218 = getelementptr inbounds ptr, ptr %217, i64 %216
  %219 = load ptr, ptr %218, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %219, i64 0, i32 3
  %220 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %214, i64 0, i32 2
  %221 = load i64, ptr %memberidx3.i.i.i, align 4
  %222 = load ptr, ptr %220, align 8
  %223 = getelementptr inbounds ptr, ptr %222, i64 %221
  %224 = load ptr, ptr %223, align 8
  %225 = load i64, ptr %213, align 4
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %if.entry.i118, label %ifend.i119

if.entry.i118:                                    ; preds = %for.body
  %memberidx1.i116 = getelementptr inbounds %Class, ptr %224, i64 0, i32 5
  %227 = load ptr, ptr %memberidx1.i116, align 8
  %memberidx2.i117 = getelementptr inbounds %PropId, ptr %213, i64 0, i32 2
  %228 = load i64, ptr %memberidx2.i117, align 4
  %229 = load ptr, ptr %227, align 8
  %230 = getelementptr inbounds ptr, ptr %229, i64 %228
  %231 = load ptr, ptr %230, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %231, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i119:                                       ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %224, i64 0, i32 4
  %232 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %213, i64 0, i32 2
  %233 = load i64, ptr %memberidx5.i, align 4
  %234 = load ptr, ptr %232, align 8
  %235 = getelementptr inbounds ptr, ptr %234, i64 %233
  %236 = load ptr, ptr %235, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %236, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i118, %ifend.i119
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i118 ], [ %memberidx6.i, %ifend.i119 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %237 = load ptr, ptr %field_entry.0323, align 8
  %238 = call fastcc ptr @CodeGen_get_member_with_name(ptr nonnull %0, ptr %1, ptr %2, ptr nonnull %3, ptr %237, ptr null)
  %239 = call fastcc ptr @CodeGen_get_string_val(ptr nonnull %0, ptr %1, ptr %238, ptr %common.ret.op.i, ptr %4, i64 %210)
  %240 = load i64, ptr %common.ret.op.i, align 4
  %241 = icmp eq i64 %240, 20
  br i1 %241, label %if.entry.i273, label %is_object.exit

if.entry.i273:                                    ; preds = %get_class_prop_type.exit, %if.entry.i273
  %.tr5.i = phi ptr [ %242, %if.entry.i273 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i272 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %242 = load ptr, ptr %memberidx1.i272, align 8
  %243 = load i64, ptr %242, align 4
  %244 = icmp eq i64 %243, 20
  br i1 %244, label %if.entry.i273, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i273, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %240, %get_class_prop_type.exit ], [ %243, %if.entry.i273 ]
  %245 = icmp eq i64 %.lcssa.i, 11
  %246 = call ptr @LLVMTypeOf(ptr %239)
  %247 = call i64 @LLVMGetTypeKind(ptr %246)
  %248 = icmp ne i64 %247, 12
  %249 = call i1 @LLVMIsGlobalConstant(ptr %239)
  %250 = or i1 %245, %249
  %251 = or i1 %248, %250
  br i1 %251, label %ifend24, label %if.entry22

for.end:                                          ; preds = %MapIterator_String_PropId__next.exit, %MapIterator_String_PropId__next.exit128
  %252 = phi i64 [ %146, %MapIterator_String_PropId__next.exit128 ], [ %326, %MapIterator_String_PropId__next.exit ]
  tail call void @free(ptr nonnull %197)
  %253 = call ptr @malloc(i32 1)
  store i8 125, ptr %253, align 8
  %254 = call ptr @malloc(i32 24)
  store ptr %253, ptr %254, align 8
  %memberidx1.i.i113 = getelementptr inbounds %String, ptr %254, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i113, align 4
  %memberidx2.i.i114 = getelementptr inbounds %String, ptr %254, i64 0, i32 2
  store i64 1, ptr %memberidx2.i.i114, align 4
  %255 = add nuw i64 %252, 1
  %256 = load i64, ptr %memberidx.i156, align 4
  %257 = icmp slt i64 %256, %255
  %258 = load ptr, ptr %136, align 8
  br i1 %257, label %if.entry.i.i.i111, label %String___adda__.exit112

if.entry.i.i.i111:                                ; preds = %for.end
  %259 = call ptr @realloc(ptr %258, i64 %255)
  store ptr %259, ptr %136, align 8
  store i64 %255, ptr %memberidx.i156, align 4
  %.pre355 = load i64, ptr %memberidx1.i.i154, align 4
  %.pre356 = load i8, ptr %253, align 8
  br label %String___adda__.exit112

String___adda__.exit112:                          ; preds = %for.end, %if.entry.i.i.i111
  %260 = phi i8 [ %.pre356, %if.entry.i.i.i111 ], [ 125, %for.end ]
  %261 = phi i64 [ %.pre355, %if.entry.i.i.i111 ], [ %252, %for.end ]
  %262 = phi ptr [ %259, %if.entry.i.i.i111 ], [ %258, %for.end ]
  %263 = getelementptr inbounds i8, ptr %262, i64 %261
  store i8 %260, ptr %263, align 2147483648
  %264 = load i64, ptr %memberidx1.i.i154, align 4
  %265 = add nuw i64 %264, 1
  store i64 %265, ptr %memberidx1.i.i154, align 4
  %266 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr nonnull %136, ptr nonnull %196, i64 %195, ptr null)
  %memberidx.i104 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 1
  %267 = load i64, ptr %memberidx.i104, align 4
  %268 = add i64 %267, 1
  %memberidx.i.i105 = getelementptr inbounds %Array_LLVMValueRef_, ptr %4, i64 0, i32 2
  %269 = load i64, ptr %memberidx.i.i105, align 4
  %270 = icmp slt i64 %269, %268
  %.pre357 = load ptr, ptr %4, align 8
  br i1 %270, label %while.entry.i.i106, label %Array_LLVMValueRef____sl__.exit107

while.entry.i.i106:                               ; preds = %String___adda__.exit112, %while.entry.i.i106
  %271 = phi ptr [ %275, %while.entry.i.i106 ], [ %.pre357, %String___adda__.exit112 ]
  %272 = phi i64 [ %276, %while.entry.i.i106 ], [ %269, %String___adda__.exit112 ]
  %273 = shl nuw i64 %272, 1
  store i64 %273, ptr %memberidx.i.i105, align 4
  %274 = shl i64 %272, 4
  %275 = call ptr @realloc(ptr %271, i64 %274)
  store ptr %275, ptr %4, align 8
  %276 = load i64, ptr %memberidx.i.i105, align 4
  %277 = icmp slt i64 %276, %268
  br i1 %277, label %while.entry.i.i106, label %Array_LLVMValueRef____sl__.exit107.loopexit

Array_LLVMValueRef____sl__.exit107.loopexit:      ; preds = %while.entry.i.i106
  %.pre358 = load i64, ptr %memberidx.i104, align 4
  %.pre377 = add nsw i64 %.pre358, 1
  br label %Array_LLVMValueRef____sl__.exit107

Array_LLVMValueRef____sl__.exit107:               ; preds = %String___adda__.exit112, %Array_LLVMValueRef____sl__.exit107.loopexit
  %.pre-phi378 = phi i64 [ %.pre377, %Array_LLVMValueRef____sl__.exit107.loopexit ], [ %268, %String___adda__.exit112 ]
  %278 = phi ptr [ %275, %Array_LLVMValueRef____sl__.exit107.loopexit ], [ %.pre357, %String___adda__.exit112 ]
  %279 = phi i64 [ %.pre358, %Array_LLVMValueRef____sl__.exit107.loopexit ], [ %267, %String___adda__.exit112 ]
  store i64 %.pre-phi378, ptr %memberidx.i104, align 4
  %280 = getelementptr inbounds ptr, ptr %278, i64 %279
  store ptr %266, ptr %280, align 8
  br label %common.ret

if.entry22:                                       ; preds = %is_object.exit
  %281 = load i64, ptr %memberidx.i102, align 4
  %282 = add i64 %281, 1
  %283 = load i64, ptr %memberidx.i.i103, align 4
  %284 = icmp slt i64 %283, %282
  %.pre349 = load ptr, ptr %4, align 8
  br i1 %284, label %while.entry.i.i, label %Array_LLVMValueRef____sl__.exit

while.entry.i.i:                                  ; preds = %if.entry22, %while.entry.i.i
  %285 = phi ptr [ %289, %while.entry.i.i ], [ %.pre349, %if.entry22 ]
  %286 = phi i64 [ %290, %while.entry.i.i ], [ %283, %if.entry22 ]
  %287 = shl nuw i64 %286, 1
  store i64 %287, ptr %memberidx.i.i103, align 4
  %288 = shl i64 %286, 4
  %289 = call ptr @realloc(ptr %285, i64 %288)
  store ptr %289, ptr %4, align 8
  %290 = load i64, ptr %memberidx.i.i103, align 4
  %291 = icmp slt i64 %290, %282
  br i1 %291, label %while.entry.i.i, label %Array_LLVMValueRef____sl__.exit.loopexit

Array_LLVMValueRef____sl__.exit.loopexit:         ; preds = %while.entry.i.i
  %.pre350 = load i64, ptr %memberidx.i102, align 4
  %.pre379 = add nsw i64 %.pre350, 1
  br label %Array_LLVMValueRef____sl__.exit

Array_LLVMValueRef____sl__.exit:                  ; preds = %if.entry22, %Array_LLVMValueRef____sl__.exit.loopexit
  %.pre-phi380 = phi i64 [ %.pre379, %Array_LLVMValueRef____sl__.exit.loopexit ], [ %282, %if.entry22 ]
  %292 = phi ptr [ %289, %Array_LLVMValueRef____sl__.exit.loopexit ], [ %.pre349, %if.entry22 ]
  %293 = phi i64 [ %.pre350, %Array_LLVMValueRef____sl__.exit.loopexit ], [ %281, %if.entry22 ]
  store i64 %.pre-phi380, ptr %memberidx.i102, align 4
  %294 = getelementptr inbounds ptr, ptr %292, i64 %293
  store ptr %239, ptr %294, align 8
  br label %ifend24

ifend24:                                          ; preds = %is_object.exit, %Array_LLVMValueRef____sl__.exit
  %295 = add nuw nsw i64 %idx.0321, 1
  %296 = getelementptr inbounds ptr, ptr %196, i64 %idx.0321
  store ptr %239, ptr %296, align 8
  %297 = load ptr, ptr %field_entry.0323, align 8
  %memberidx.i101 = getelementptr inbounds %String, ptr %297, i64 0, i32 1
  %298 = load i64, ptr %memberidx.i101, align 4
  %299 = trunc i64 %298 to i32
  %300 = add i32 %299, 1
  %301 = call ptr @malloc(i32 %300)
  %302 = load ptr, ptr %297, align 8
  %303 = load i64, ptr %memberidx.i101, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %301, ptr align 8 %302, i64 %303, i1 false)
  %304 = getelementptr inbounds i8, ptr %301, i64 %303
  store i8 0, ptr %304, align 1
  %305 = call fastcc ptr @get_format_from_type(ptr nonnull %common.ret.op.i)
  %memberidx.i100 = getelementptr inbounds %String, ptr %305, i64 0, i32 1
  %306 = load i64, ptr %memberidx.i100, align 4
  %307 = trunc i64 %306 to i32
  %308 = add i32 %307, 1
  %309 = call ptr @malloc(i32 %308)
  %310 = load ptr, ptr %305, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %309, ptr align 8 %310, i64 %306, i1 false)
  %311 = getelementptr inbounds i8, ptr %309, i64 %306
  store i8 0, ptr %311, align 1
  %312 = alloca ptr, align 8
  %313 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %312, ptr nonnull @252, ptr %301, ptr %309)
  %314 = load ptr, ptr %312, align 8
  %315 = tail call ptr @malloc(i32 24)
  store ptr %314, ptr %315, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %315, i64 0, i32 1
  store i64 %313, ptr %memberidx1.i, align 4
  %memberidx2.i99 = getelementptr inbounds %String, ptr %315, i64 0, i32 2
  store i64 %313, ptr %memberidx2.i99, align 4
  tail call void @free(ptr %301)
  tail call void @free(ptr %309)
  %316 = load i64, ptr %memberidx1.i.i154, align 4
  %317 = add nuw i64 %316, %313
  %318 = load i64, ptr %memberidx.i156, align 4
  %319 = icmp slt i64 %318, %317
  %320 = load ptr, ptr %136, align 8
  br i1 %319, label %if.entry.i.i.i, label %String___adda__.exit

if.entry.i.i.i:                                   ; preds = %ifend24
  %321 = call ptr @realloc(ptr %320, i64 %317)
  store ptr %321, ptr %136, align 8
  store i64 %317, ptr %memberidx.i156, align 4
  %.pre353 = load i64, ptr %memberidx1.i.i154, align 4
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %ifend24, %if.entry.i.i.i
  %322 = phi i64 [ %.pre353, %if.entry.i.i.i ], [ %316, %ifend24 ]
  %323 = phi ptr [ %321, %if.entry.i.i.i ], [ %320, %ifend24 ]
  %324 = getelementptr inbounds i8, ptr %323, i64 %322
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %324, ptr align 8 %314, i64 %313, i1 false)
  %325 = load i64, ptr %memberidx1.i.i154, align 4
  %326 = add nuw i64 %325, %313
  store i64 %326, ptr %memberidx1.i.i154, align 4
  %327 = add nsw i64 %211, -1
  store i64 %327, ptr %memberidx2.i.i132, align 4
  %328 = icmp sgt i64 %211, 0
  br i1 %328, label %while.entry.i, label %MapIterator_String_PropId__next.exit

while.entry.i:                                    ; preds = %String___adda__.exit, %ifend.i
  %329 = phi i64 [ %332, %ifend.i ], [ %327, %String___adda__.exit ]
  %330 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa315320, %String___adda__.exit ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %330, i64 1
  %331 = load ptr, ptr %330, align 8
  %.not.i = icmp eq ptr %331, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_PropId__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %332 = add nsw i64 %329, -1
  store i64 %332, ptr %memberidx2.i.i132, align 4
  %.not = icmp eq i64 %329, 0
  br i1 %.not, label %MapIterator_String_PropId__next.exit, label %while.entry.i

MapIterator_String_PropId__next.exit:             ; preds = %while.entry.i, %ifend.i, %String___adda__.exit
  %333 = phi i64 [ %327, %String___adda__.exit ], [ %329, %while.entry.i ], [ -1, %ifend.i ]
  %incdec.ptr.i.lcssa314 = phi ptr [ %incdec.ptr.i.lcssa315320, %String___adda__.exit ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge = icmp slt i64 %storemerge308322.in, 2
  br i1 %storemerge, label %for.end, label %for.body

if.entry26:                                       ; preds = %ifend4
  %334 = tail call ptr @malloc(i32 10)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %334, ptr noundef nonnull align 8 dereferenceable(10) @253, i64 10, i1 false)
  %335 = tail call ptr @malloc(i32 24)
  store ptr %334, ptr %335, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %335, i64 0, i32 1
  store i64 10, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %335, i64 0, i32 2
  store i64 10, ptr %memberidx2.i.i, align 4
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %336 = load ptr, ptr %memberidx.i, align 8
  %337 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %335)
  %memberidx.i191 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %336, i64 0, i32 1
  %338 = load i64, ptr %memberidx.i191, align 4
  %339 = urem i64 %337, %338
  %340 = load ptr, ptr %336, align 8
  %341 = getelementptr inbounds ptr, ptr %340, i64 %339
  %342 = load ptr, ptr %341, align 8
  %.not.i192 = icmp eq ptr %342, null
  br i1 %.not.i192, label %if.entry.i, label %while.entry.i196

while.entry.i196:                                 ; preds = %if.entry26, %else.i
  %343 = phi ptr [ %351, %else.i ], [ %340, %if.entry26 ]
  %344 = phi i64 [ %352, %else.i ], [ %338, %if.entry26 ]
  %345 = phi ptr [ %356, %else.i ], [ %342, %if.entry26 ]
  %hash.0.i = phi i64 [ %354, %else.i ], [ %339, %if.entry26 ]
  %346 = load ptr, ptr %345, align 8
  %memberidx.i.i193 = getelementptr inbounds %String, ptr %346, i64 0, i32 1
  %347 = load i64, ptr %memberidx.i.i193, align 4
  %.not.i.i195 = icmp eq i64 %347, 10
  br i1 %.not.i.i195, label %ifend.i.i197, label %else.i

ifend.i.i197:                                     ; preds = %while.entry.i196
  %348 = load ptr, ptr %346, align 8
  %349 = tail call i64 @memcmp(ptr %348, ptr %334, i64 10)
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %while.end.i, label %ifend.i.i197.else.i_crit_edge

ifend.i.i197.else.i_crit_edge:                    ; preds = %ifend.i.i197
  %.pre343 = load i64, ptr %memberidx.i191, align 4
  %.pre344 = load ptr, ptr %336, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i197
  %.pre345.pre = load ptr, ptr %336, align 8
  %.phi.trans.insert346.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre345.pre, i64 %hash.0.i
  %.pre347.pre = load ptr, ptr %.phi.trans.insert346.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre347.pre, null
  br i1 %.not25.i, label %if.entry.i, label %Map_String_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i197.else.i_crit_edge, %while.entry.i196
  %351 = phi ptr [ %.pre344, %ifend.i.i197.else.i_crit_edge ], [ %343, %while.entry.i196 ]
  %352 = phi i64 [ %.pre343, %ifend.i.i197.else.i_crit_edge ], [ %344, %while.entry.i196 ]
  %353 = add nuw i64 %hash.0.i, 1
  %354 = urem i64 %353, %352
  %355 = getelementptr inbounds ptr, ptr %351, i64 %354
  %356 = load ptr, ptr %355, align 8
  %.not26.i = icmp eq ptr %356, null
  br i1 %.not26.i, label %if.entry.i, label %while.entry.i196

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre347.pre, i64 0, i32 1
  %357 = load ptr, ptr %memberidx11.i, align 8
  %358 = icmp eq ptr %357, null
  br i1 %358, label %if.entry.i, label %common.ret

if.entry.i:                                       ; preds = %else.i, %if.entry26, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %359 = tail call ptr @malloc(i32 11)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(10) %359, ptr noundef nonnull align 8 dereferenceable(10) %334, i64 10, i1 false)
  %360 = getelementptr inbounds i8, ptr %359, i64 10
  store i8 0, ptr %360, align 1
  %361 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %359, ptr nonnull @80)
  %362 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %362, ptr nonnull %335, ptr %361)
  br label %common.ret

if.entry30:                                       ; preds = %ifend4
  %memberidx33 = getelementptr inbounds %EnumType, ptr %3, i64 0, i32 1
  %363 = load ptr, ptr %memberidx33, align 8
  %364 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %363)
  %.not.i184 = icmp eq ptr %364, null
  br i1 %.not.i184, label %ifend.i190, label %CodeGen_get_or_codegen_enum_from_typeid.exit

ifend.i190:                                       ; preds = %if.entry30
  %memberidx.i187 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %365 = load ptr, ptr %memberidx.i187, align 8
  %366 = load ptr, ptr %365, align 8
  %367 = load i64, ptr %363, align 4
  %368 = load ptr, ptr %366, align 8
  %369 = getelementptr inbounds ptr, ptr %368, i64 %367
  %370 = load ptr, ptr %369, align 8
  %memberidx2.i.i188 = getelementptr inbounds %Module, ptr %370, i64 0, i32 6
  %371 = load ptr, ptr %memberidx2.i.i188, align 8
  %memberidx3.i.i189 = getelementptr inbounds %TypeId, ptr %363, i64 0, i32 2
  %372 = load i64, ptr %memberidx3.i.i189, align 4
  %373 = load ptr, ptr %371, align 8
  %374 = getelementptr inbounds ptr, ptr %373, i64 %372
  %375 = load ptr, ptr %374, align 8
  tail call fastcc void @CodeGen_declare_enum(ptr %0, ptr %375)
  %376 = load ptr, ptr %375, align 8
  %377 = tail call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %376)
  br label %CodeGen_get_or_codegen_enum_from_typeid.exit

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry30, %ifend.i190
  %common.ret.op.i185 = phi ptr [ %377, %ifend.i190 ], [ %364, %if.entry30 ]
  %memberidx34 = getelementptr inbounds %CGEnumType, ptr %common.ret.op.i185, i64 0, i32 2
  %378 = load ptr, ptr %memberidx34, align 8
  store ptr %2, ptr %indices, align 8
  %379 = tail call ptr @LLVMTypeOf(ptr %378)
  %380 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %379, ptr %378, ptr nonnull %indices, i64 1, ptr nonnull @80)
  %381 = call ptr @LLVMTypeOf(ptr %380)
  %382 = call ptr @LLVMBuildLoad2(ptr %1, ptr %381, ptr %380, ptr nonnull @80)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_var_expr_mem(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %memberidx = getelementptr inbounds %VarAccessExpression, ptr %1, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %4 = tail call fastcc ptr @CodeGen_get_or_codegen_var(ptr %0, ptr %3)
  %5 = icmp eq ptr %4, null
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %2
  %6 = tail call ptr @malloc(i32 45)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(45) %6, ptr noundef nonnull align 8 dereferenceable(45) @258, i64 45, i1 false)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %8, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %9 = tail call ptr @malloc(i32 24)
  %10 = tail call i64 @write(i64 1, ptr %8, i64 7)
  tail call void @free(ptr %8)
  tail call void @free(ptr %9)
  %11 = tail call i64 @write(i64 1, ptr %6, i64 45)
  %12 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %6)
  tail call void @free(ptr %7)
  tail call void @exit(i64 -1)
  br label %ifend

ifend:                                            ; preds = %2, %if.entry
  ret ptr %4
}

define internal fastcc ptr @CodeGen_get_index_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %indices_1 = alloca [1 x ptr], align 8
  %indices = alloca [2 x ptr], align 8
  %indices1 = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 5
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %4)
  %memberidx2 = getelementptr inbounds %IndexExpression, ptr %2, i64 0, i32 4
  %6 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Expression, ptr %6, i64 0, i32 3
  %7 = load ptr, ptr %memberidx3, align 8
  %8 = load i64, ptr %7, align 4
  %9 = icmp eq i64 %8, 13
  br i1 %9, label %true_block, label %false_block

true_block:                                       ; preds = %3
  %memberidx4 = getelementptr inbounds %PointerType, ptr %7, i64 0, i32 1
  %10 = load ptr, ptr %memberidx4, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %10, i1 true)
  br label %end

false_block:                                      ; preds = %3
  %12 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %7, i1 true)
  br label %end

end:                                              ; preds = %false_block, %true_block
  %ternary = phi ptr [ %11, %true_block ], [ %12, %false_block ]
  %13 = load i64, ptr %7, align 4
  switch i64 %13, label %ifend10 [
    i64 14, label %if.entry
    i64 15, label %if.entry8
  ]

common.ret:                                       ; preds = %ifend10, %CodeGen_get_expr_mem.exit, %CodeGen_get_expr_mem.exit48
  %common.ret.op = phi ptr [ %23, %CodeGen_get_expr_mem.exit48 ], [ %34, %CodeGen_get_expr_mem.exit ], [ %37, %ifend10 ]
  ret ptr %common.ret.op

if.entry:                                         ; preds = %end
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 0, i1 false)
  store ptr %15, ptr %indices, align 8
  %16 = getelementptr inbounds ptr, ptr %indices, i64 1
  store ptr %5, ptr %16, align 8
  %17 = load ptr, ptr %memberidx2, align 8
  %memberidx.i40 = getelementptr inbounds %Expression, ptr %17, i64 0, i32 2
  %18 = load i64, ptr %memberidx.i40, align 4
  switch i64 %18, label %ifend8.i47 [
    i64 8, label %if.entry.i42
    i64 14, label %if.entry2.i44
    i64 13, label %if.entry6.i46
  ]

if.entry.i42:                                     ; preds = %if.entry
  %19 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

if.entry2.i44:                                    ; preds = %if.entry
  %20 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

if.entry6.i46:                                    ; preds = %if.entry
  %21 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %17, ptr null)
  br label %CodeGen_get_expr_mem.exit48

ifend8.i47:                                       ; preds = %if.entry
  %22 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %17)
  br label %CodeGen_get_expr_mem.exit48

CodeGen_get_expr_mem.exit48:                      ; preds = %if.entry.i42, %if.entry2.i44, %if.entry6.i46, %ifend8.i47
  %common.ret.op.i41 = phi ptr [ %19, %if.entry.i42 ], [ %20, %if.entry2.i44 ], [ %21, %if.entry6.i46 ], [ %22, %ifend8.i47 ]
  %23 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %common.ret.op.i41, ptr nonnull %indices, i64 2, ptr nonnull @80)
  br label %common.ret

if.entry8:                                        ; preds = %end
  %24 = tail call ptr @LLVMInt32Type()
  %25 = tail call ptr @LLVMConstInt(ptr %24, i64 0, i1 false)
  store ptr %25, ptr %indices1, align 8
  %26 = getelementptr inbounds ptr, ptr %indices1, i64 1
  %27 = tail call ptr @LLVMConstIntCast(ptr %5, ptr %24, i1 false)
  store ptr %27, ptr %26, align 8
  %28 = load ptr, ptr %memberidx2, align 8
  %memberidx.i = getelementptr inbounds %Expression, ptr %28, i64 0, i32 2
  %29 = load i64, ptr %memberidx.i, align 4
  switch i64 %29, label %ifend8.i [
    i64 8, label %if.entry.i
    i64 14, label %if.entry2.i
    i64 13, label %if.entry6.i
  ]

if.entry.i:                                       ; preds = %if.entry8
  %30 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry8
  %31 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry8
  %32 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %28, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry8
  %33 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %28)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i = phi ptr [ %30, %if.entry.i ], [ %31, %if.entry2.i ], [ %32, %if.entry6.i ], [ %33, %ifend8.i ]
  %34 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %common.ret.op.i, ptr nonnull %indices1, i64 2, ptr nonnull @80)
  br label %common.ret

ifend10:                                          ; preds = %end
  store ptr %5, ptr %indices_1, align 8
  %35 = load ptr, ptr %memberidx2, align 8
  %36 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %35)
  %37 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %ternary, ptr %36, ptr nonnull %indices_1, i64 1, ptr nonnull @80)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_member_expr_mem(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %indices_buffer = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %7 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %PropId, ptr %7, i64 0, i32 1
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %8)
  %.not.i40 = icmp eq ptr %9, null
  br i1 %.not.i40, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %4
  %memberidx.i42 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %10 = load ptr, ptr %memberidx.i42, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = load i64, ptr %8, align 4
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx2.i.i43 = getelementptr inbounds %Module, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2.i.i43, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %8, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i, align 4
  %18 = load ptr, ptr %16, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %20)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %20)
  %21 = load ptr, ptr %20, align 8
  %22 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %21)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %4, %ifend.i
  %common.ret.op.i41 = phi ptr [ %22, %ifend.i ], [ %9, %4 ]
  %23 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i = getelementptr inbounds %PropId, ptr %23, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %25 = load i64, ptr %24, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i, align 4
  %28 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %25, i64 %26, i64 %27)
  %29 = load ptr, ptr %5, align 8
  %30 = call ptr @malloc(i32 24)
  store ptr %29, ptr %30, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  store i64 %28, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %31 = trunc i64 %28 to i32
  %32 = add i32 %31, 1
  %33 = call ptr @malloc(i32 %32)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %29, i64 %28, i1 false)
  %34 = getelementptr inbounds i8, ptr %33, i64 %28
  store i8 0, ptr %34, align 1
  %35 = load i64, ptr %23, align 4
  %memberidx2.i = getelementptr inbounds %PropId, ptr %23, i64 0, i32 2
  %36 = load i64, ptr %memberidx2.i, align 4
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @259, ptr %33, i64 %35, i64 %36)
  %38 = load ptr, ptr %6, align 8
  %39 = call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %33)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %40 = load ptr, ptr %common.ret.op.i41, align 8
  %memberidx4 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i41, i64 0, i32 3
  %41 = load ptr, ptr %memberidx4, align 8
  %42 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %39)
  %memberidx.i19 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %41, i64 0, i32 1
  %43 = load i64, ptr %memberidx.i19, align 4
  %44 = urem i64 %42, %43
  %45 = load ptr, ptr %41, align 8
  %46 = getelementptr inbounds ptr, ptr %45, i64 %44
  %47 = load ptr, ptr %46, align 8
  %.not.i = icmp eq ptr %47, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit, %else.i
  %48 = phi ptr [ %56, %else.i ], [ %45, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %49 = phi i64 [ %57, %else.i ], [ %43, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %50 = phi ptr [ %61, %else.i ], [ %47, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %hash.0.i = phi i64 [ %59, %else.i ], [ %44, %CodeGen_get_or_codegen_class_from_typeid.exit ]
  %51 = load ptr, ptr %50, align 8
  %memberidx.i.i20 = getelementptr inbounds %String, ptr %51, i64 0, i32 1
  %52 = load i64, ptr %memberidx.i.i20, align 4
  %.not.i.i = icmp eq i64 %52, %37
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %53 = load ptr, ptr %51, align 8
  %54 = call i64 @memcmp(ptr %53, ptr %38, i64 %37)
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i19, align 4
  %.pre51 = load ptr, ptr %41, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre52.pre = load ptr, ptr %41, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre52.pre, i64 %hash.0.i
  %.pre53.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre53.pre, null
  br i1 %.not25.i, label %ifend, label %Map_String_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %56 = phi ptr [ %.pre51, %ifend.i.i.else.i_crit_edge ], [ %48, %while.entry.i ]
  %57 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %49, %while.entry.i ]
  %58 = add nuw i64 %hash.0.i, 1
  %59 = urem i64 %58, %57
  %60 = getelementptr inbounds ptr, ptr %56, i64 %59
  %61 = load ptr, ptr %60, align 8
  %.not26.i = icmp eq ptr %61, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre53.pre, i64 0, i32 1
  %62 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %62, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %Map_String_LLVMValueRef____getitem__.exit, %Map_String_uint____getitem__.exit
  %common.ret.op = phi ptr [ %93, %Map_String_uint____getitem__.exit ], [ %62, %Map_String_LLVMValueRef____getitem__.exit ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %CodeGen_get_or_codegen_class_from_typeid.exit, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %63 = icmp eq ptr %3, null
  br i1 %63, label %if.entry5, label %ifend7

if.entry5:                                        ; preds = %ifend
  %memberidx8 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %64 = load ptr, ptr %memberidx8, align 8
  %65 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %64)
  br label %ifend7

ifend7:                                           ; preds = %ifend, %if.entry5
  %ptr.0 = phi ptr [ %65, %if.entry5 ], [ %3, %ifend ]
  %66 = call ptr @LLVMInt32Type()
  %67 = call ptr @LLVMConstInt(ptr %66, i64 0, i1 false)
  store ptr %67, ptr %indices_buffer, align 8
  %68 = getelementptr inbounds ptr, ptr %indices_buffer, i64 1
  store ptr null, ptr %68, align 8
  %69 = call ptr @LLVMInt32Type()
  %memberidx9 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i41, i64 0, i32 2
  %70 = load ptr, ptr %memberidx9, align 8
  %71 = call fastcc i64 @Map_String_uint__hash_fnc(ptr nonnull %39)
  %memberidx.i22 = getelementptr inbounds %Map_String_uint_, ptr %70, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i22, align 4
  %73 = urem i64 %71, %72
  %74 = load ptr, ptr %70, align 8
  %75 = getelementptr inbounds ptr, ptr %74, i64 %73
  %76 = load ptr, ptr %75, align 8
  %.not.i23 = icmp eq ptr %76, null
  br i1 %.not.i23, label %Map_String_uint____getitem__.exit, label %while.entry.i28

while.entry.i28:                                  ; preds = %ifend7, %else.i36
  %77 = phi ptr [ %85, %else.i36 ], [ %74, %ifend7 ]
  %78 = phi i64 [ %86, %else.i36 ], [ %72, %ifend7 ]
  %79 = phi ptr [ %90, %else.i36 ], [ %76, %ifend7 ]
  %hash.0.i24 = phi i64 [ %88, %else.i36 ], [ %73, %ifend7 ]
  %80 = load ptr, ptr %79, align 8
  %memberidx.i.i25 = getelementptr inbounds %String, ptr %80, i64 0, i32 1
  %81 = load i64, ptr %memberidx.i.i25, align 4
  %.not.i.i27 = icmp eq i64 %81, %37
  br i1 %.not.i.i27, label %ifend.i.i29, label %else.i36

ifend.i.i29:                                      ; preds = %while.entry.i28
  %82 = load ptr, ptr %80, align 8
  %83 = call i64 @memcmp(ptr %82, ptr %38, i64 %37)
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %while.end.i34, label %ifend.i.i29.else.i36_crit_edge

ifend.i.i29.else.i36_crit_edge:                   ; preds = %ifend.i.i29
  %.pre54 = load i64, ptr %memberidx.i22, align 4
  %.pre55 = load ptr, ptr %70, align 8
  br label %else.i36

while.end.i34:                                    ; preds = %ifend.i.i29
  %.pre56.pre = load ptr, ptr %70, align 8
  %.phi.trans.insert57.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre56.pre, i64 %hash.0.i24
  %.pre58.pre = load ptr, ptr %.phi.trans.insert57.phi.trans.insert, align 8
  %.not25.i33 = icmp eq ptr %.pre58.pre, null
  br i1 %.not25.i33, label %Map_String_uint____getitem__.exit, label %if.entry7.i39

else.i36:                                         ; preds = %ifend.i.i29.else.i36_crit_edge, %while.entry.i28
  %85 = phi ptr [ %.pre55, %ifend.i.i29.else.i36_crit_edge ], [ %77, %while.entry.i28 ]
  %86 = phi i64 [ %.pre54, %ifend.i.i29.else.i36_crit_edge ], [ %78, %while.entry.i28 ]
  %87 = add nuw i64 %hash.0.i24, 1
  %88 = urem i64 %87, %86
  %89 = getelementptr inbounds ptr, ptr %85, i64 %88
  %90 = load ptr, ptr %89, align 8
  %.not26.i35 = icmp eq ptr %90, null
  br i1 %.not26.i35, label %Map_String_uint____getitem__.exit, label %while.entry.i28

if.entry7.i39:                                    ; preds = %while.end.i34
  %memberidx11.i38 = getelementptr inbounds %MapEntry_String_uint_, ptr %.pre58.pre, i64 0, i32 1
  %91 = load i64, ptr %memberidx11.i38, align 4
  br label %Map_String_uint____getitem__.exit

Map_String_uint____getitem__.exit:                ; preds = %else.i36, %ifend7, %while.end.i34, %if.entry7.i39
  %common.ret.op.i37 = phi i64 [ %91, %if.entry7.i39 ], [ 0, %while.end.i34 ], [ 0, %ifend7 ], [ 0, %else.i36 ]
  %92 = call ptr @LLVMConstInt(ptr %69, i64 %common.ret.op.i37, i1 false)
  store ptr %92, ptr %68, align 8
  %93 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %40, ptr %ptr.0, ptr nonnull %indices_buffer, i64 2, ptr nonnull @260)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_codegen_builtin_array(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
end:
  %args = alloca [2 x ptr], align 8
  %memberidx = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 3
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %4, i1 false)
  %memberidx1 = getelementptr inbounds %GenericType, ptr %2, i64 0, i32 2
  %6 = load ptr, ptr %memberidx1, align 8
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %8, i1 true)
  %10 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %5, ptr nonnull @80)
  %memberidx2 = getelementptr inbounds %ArrayExpression, ptr %3, i64 0, i32 4
  %11 = load ptr, ptr %memberidx2, align 8
  %memberidx3 = getelementptr inbounds %Array_Expression_, ptr %11, i64 0, i32 1
  %12 = load i64, ptr %memberidx3, align 4
  %13 = tail call i64 @llvm.smax.i64(i64 %12, i64 1)
  %14 = tail call ptr @LLVMIntType(i64 64)
  %15 = tail call ptr @LLVMConstInt(ptr %14, i64 %13, i1 false)
  %16 = tail call ptr @LLVMIntType(i64 64)
  %17 = tail call ptr @LLVMConstInt(ptr %16, i64 %12, i1 false)
  store ptr %10, ptr %args, align 8
  %18 = getelementptr inbounds ptr, ptr %args, i64 1
  %19 = tail call ptr @LLVMSizeOf(ptr %9)
  %20 = tail call ptr @LLVMConstMul(ptr %15, ptr %19)
  store ptr %20, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %21 = load i64, ptr %4, align 4
  %cond43 = icmp eq i64 %21, 20
  br i1 %cond43, label %if.entry.i40, label %get_class_from_type.exit

if.entry.i40:                                     ; preds = %end, %if.entry.i40
  %.tr11.i44 = phi ptr [ %22, %if.entry.i40 ], [ %4, %end ]
  %memberidx1.i39 = getelementptr inbounds %GenericType, ptr %.tr11.i44, i64 0, i32 3
  %22 = load ptr, ptr %memberidx1.i39, align 8
  %23 = load i64, ptr %22, align 4
  %cond = icmp eq i64 %23, 20
  br i1 %cond, label %if.entry.i40, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i40, %end
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %4, i64 0, i32 1
  %24 = load ptr, ptr %memberidx1.i, align 8
  %25 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %24)
  %.not.i30 = icmp eq ptr %25, null
  br i1 %.not.i30, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %26 = load ptr, ptr %memberidx.i, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = load i64, ptr %24, align 4
  %29 = load ptr, ptr %27, align 8
  %30 = getelementptr inbounds ptr, ptr %29, i64 %28
  %31 = load ptr, ptr %30, align 8
  %memberidx2.i.i33 = getelementptr inbounds %Module, ptr %31, i64 0, i32 3
  %32 = load ptr, ptr %memberidx2.i.i33, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 2
  %33 = load i64, ptr %memberidx3.i.i, align 4
  %34 = load ptr, ptr %32, align 8
  %35 = getelementptr inbounds ptr, ptr %34, i64 %33
  %36 = load ptr, ptr %35, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %36)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %36)
  %37 = load ptr, ptr %36, align 8
  %38 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %37)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %38, %ifend.i ], [ %25, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 4
  %39 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %39, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %40 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %39)
  %41 = call ptr @LLVMBuildCall2(ptr %1, ptr %40, ptr nonnull %39, ptr nonnull %args, i64 2, ptr nonnull @80)
  br label %CodeGen_build_constructor_call.exit

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %42 = tail call ptr @malloc(i32 47)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %42, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %43 = tail call ptr @malloc(i32 24)
  %44 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %44, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %45 = tail call ptr @malloc(i32 24)
  %46 = tail call i64 @write(i64 1, ptr %44, i64 7)
  tail call void @free(ptr %44)
  tail call void @free(ptr %45)
  %47 = tail call i64 @write(i64 1, ptr %42, i64 47)
  %48 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %42)
  tail call void @free(ptr %43)
  tail call void @exit(i64 -1)
  br label %CodeGen_build_constructor_call.exit

CodeGen_build_constructor_call.exit:              ; preds = %if.entry.i, %else.i
  %49 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %49, ptr noundef nonnull align 8 dereferenceable(6) @261, i64 6, i1 false)
  %50 = call ptr @malloc(i32 24)
  store ptr %49, ptr %50, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %50, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %50, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i, align 4
  %51 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %10, ptr nonnull %4, ptr nonnull %50)
  %52 = call ptr @LLVMPointerType(ptr %9, i64 0)
  %53 = call ptr @LLVMBuildLoad2(ptr %1, ptr %52, ptr %51, ptr nonnull @80)
  %54 = call fastcc ptr @CodeGen_store_array_elements(ptr %0, ptr %1, ptr %53, ptr %3)
  %55 = call ptr @malloc(i32 6)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %55, ptr noundef nonnull align 8 dereferenceable(6) @262, i64 6, i1 false)
  %56 = call ptr @malloc(i32 24)
  store ptr %55, ptr %56, align 8
  %memberidx1.i.i28 = getelementptr inbounds %String, ptr %56, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i28, align 4
  %memberidx2.i.i29 = getelementptr inbounds %String, ptr %56, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i29, align 4
  %57 = call fastcc ptr @CodeGen_get_member_mem_with_name(ptr %0, ptr %1, ptr %10, ptr nonnull %4, ptr nonnull %56)
  %58 = call ptr @LLVMBuildStore(ptr %1, ptr %17, ptr %57)
  ret ptr %10
}

define internal fastcc void @CodeGen_declare_class(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = tail call ptr @malloc(i32 40)
  %5 = tail call ptr @malloc(i32 24)
  %6 = tail call ptr @malloc(i32 2048)
  store ptr %6, ptr %5, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i67 = phi i64 [ 0, %2 ], [ %9, %for.body.i.i ]
  %7 = load ptr, ptr %5, align 8
  %8 = getelementptr inbounds ptr, ptr %7, i64 %i.0.i.i67
  store ptr null, ptr %8, align 8
  %9 = add nuw nsw i64 %i.0.i.i67, 1
  %10 = icmp ult i64 %i.0.i.i67, 255
  br i1 %10, label %for.body.i.i, label %Map_String_uint__constructor.exit.i

Map_String_uint__constructor.exit.i:              ; preds = %for.body.i.i
  %memberidx.i61 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 1
  %memberidx2.i.i62 = getelementptr inbounds %Map_String_uint_, ptr %5, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i62, align 4
  %memberidx3.i.i = getelementptr inbounds %Map_String_uint_, ptr %5, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i, align 4
  store ptr %5, ptr %memberidx.i61, align 8
  %11 = tail call ptr @malloc(i32 24)
  %12 = tail call ptr @malloc(i32 2048)
  store ptr %12, ptr %11, align 8
  br label %for.body.i7.i

for.body.i7.i:                                    ; preds = %Map_String_uint__constructor.exit.i, %for.body.i7.i
  %i.0.i5.i66 = phi i64 [ 0, %Map_String_uint__constructor.exit.i ], [ %15, %for.body.i7.i ]
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %i.0.i5.i66
  store ptr null, ptr %14, align 8
  %15 = add nuw nsw i64 %i.0.i5.i66, 1
  %16 = icmp ult i64 %i.0.i5.i66, 255
  br i1 %16, label %for.body.i7.i, label %Map_String_uint__constructor.exit10.i

Map_String_uint__constructor.exit10.i:            ; preds = %for.body.i7.i
  %memberidx1.i63 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 2
  %memberidx2.i8.i = getelementptr inbounds %Map_String_uint_, ptr %11, i64 0, i32 1
  store i64 256, ptr %memberidx2.i8.i, align 4
  %memberidx3.i9.i = getelementptr inbounds %Map_String_uint_, ptr %11, i64 0, i32 2
  store i64 0, ptr %memberidx3.i9.i, align 4
  store ptr %11, ptr %memberidx1.i63, align 8
  %17 = tail call ptr @malloc(i32 24)
  %18 = tail call ptr @malloc(i32 2048)
  store ptr %18, ptr %17, align 8
  br label %for.body.i13.i

for.body.i13.i:                                   ; preds = %Map_String_uint__constructor.exit10.i, %for.body.i13.i
  %i.0.i11.i65 = phi i64 [ 0, %Map_String_uint__constructor.exit10.i ], [ %21, %for.body.i13.i ]
  %19 = load ptr, ptr %17, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %i.0.i11.i65
  store ptr null, ptr %20, align 8
  %21 = add nuw nsw i64 %i.0.i11.i65, 1
  %22 = icmp ult i64 %i.0.i11.i65, 255
  br i1 %22, label %for.body.i13.i, label %CGClassType_constructor.exit

CGClassType_constructor.exit:                     ; preds = %for.body.i13.i
  %memberidx2.i64 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 3
  %memberidx2.i14.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %17, i64 0, i32 1
  store i64 256, ptr %memberidx2.i14.i, align 4
  %memberidx3.i15.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %17, i64 0, i32 2
  store i64 0, ptr %memberidx3.i15.i, align 4
  store ptr %17, ptr %memberidx2.i64, align 8
  %23 = load ptr, ptr %0, align 8
  %24 = tail call ptr @LLVMGetModuleContext(ptr %23)
  %memberidx2 = getelementptr inbounds %Class, ptr %1, i64 0, i32 1
  %25 = load ptr, ptr %memberidx2, align 8
  %memberidx.i60 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  %26 = load i64, ptr %memberidx.i60, align 4
  %27 = trunc i64 %26 to i32
  %28 = add i32 %27, 1
  %29 = tail call ptr @malloc(i32 %28)
  %30 = load ptr, ptr %25, align 8
  %31 = load i64, ptr %memberidx.i60, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %29, ptr align 8 %30, i64 %31, i1 false)
  %32 = getelementptr inbounds i8, ptr %29, i64 %31
  store i8 0, ptr %32, align 1
  %33 = tail call ptr @LLVMStructCreateNamed(ptr %24, ptr %29)
  store ptr %33, ptr %4, align 8
  %34 = load ptr, ptr %1, align 8
  %memberidx.i58 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %35 = load ptr, ptr %memberidx.i58, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %36 = load i64, ptr %34, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %34, i64 0, i32 1
  %37 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %34, i64 0, i32 2
  %38 = load i64, ptr %memberidx2.i.i, align 4
  %39 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %36, i64 %37, i64 %38)
  %40 = load ptr, ptr %3, align 8
  %41 = call ptr @malloc(i32 24)
  store ptr %40, ptr %41, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %41, i64 0, i32 1
  store i64 %39, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i59 = getelementptr inbounds %String, ptr %41, i64 0, i32 2
  store i64 %39, ptr %memberidx2.i.i.i59, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  call fastcc void @Map_String_CGClassType____setitem__(ptr %35, ptr nonnull %41, ptr nonnull %4)
  %42 = tail call ptr @malloc(i32 24)
  %memberidx.i56 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %42, i64 0, i32 1
  %memberidx1.i57 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %42, i64 0, i32 2
  store i64 8, ptr %memberidx1.i57, align 4
  %43 = call ptr @malloc(i32 64)
  store ptr %43, ptr %42, align 8
  store i64 0, ptr %memberidx.i56, align 4
  call fastcc void @CodeGen_declare_static_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1)
  call fastcc void @CodeGen_declare_class_props(ptr nonnull %0, ptr nonnull %4, ptr nonnull %1, ptr nonnull %42)
  %44 = load ptr, ptr %4, align 8
  %45 = load ptr, ptr %42, align 8
  %46 = load i64, ptr %memberidx.i56, align 4
  call void @LLVMStructSetBody(ptr %44, ptr %45, i64 %46, i1 true)
  call void @free(ptr %45)
  tail call void @free(ptr nonnull %42)
  %memberidx9 = getelementptr inbounds %Class, ptr %1, i64 0, i32 3
  %47 = load ptr, ptr %memberidx9, align 8
  %.not = icmp eq ptr %47, null
  br i1 %.not, label %else, label %if.entry

if.entry:                                         ; preds = %CGClassType_constructor.exit
  %memberidx10 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %48 = load ptr, ptr %memberidx10, align 8
  %memberidx.i.i53 = getelementptr inbounds %PropId, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %memberidx.i.i53, align 8
  %50 = load ptr, ptr %48, align 8
  %51 = load i64, ptr %49, align 4
  %52 = load ptr, ptr %50, align 8
  %53 = getelementptr inbounds ptr, ptr %52, i64 %51
  %54 = load ptr, ptr %53, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %54, i64 0, i32 3
  %55 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %49, i64 0, i32 2
  %56 = load i64, ptr %memberidx3.i.i.i, align 4
  %57 = load ptr, ptr %55, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  %60 = load i64, ptr %47, align 4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %if.entry
  %memberidx1.i54 = getelementptr inbounds %Class, ptr %59, i64 0, i32 5
  %62 = load ptr, ptr %memberidx1.i54, align 8
  %memberidx2.i55 = getelementptr inbounds %PropId, ptr %47, i64 0, i32 2
  %63 = load i64, ptr %memberidx2.i55, align 4
  %64 = load ptr, ptr %62, align 8
  %65 = getelementptr inbounds ptr, ptr %64, i64 %63
  %66 = load ptr, ptr %65, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %66, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %if.entry
  %memberidx4.i = getelementptr inbounds %Class, ptr %59, i64 0, i32 4
  %67 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %47, i64 0, i32 2
  %68 = load i64, ptr %memberidx5.i, align 4
  %69 = load ptr, ptr %67, align 8
  %70 = getelementptr inbounds ptr, ptr %69, i64 %68
  %71 = load ptr, ptr %70, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %71, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %72 = tail call ptr @malloc(i32 24)
  %memberidx.i51 = getelementptr inbounds %Array_Type_, ptr %72, i64 0, i32 1
  store i64 0, ptr %memberidx.i51, align 4
  %memberidx1.i52 = getelementptr inbounds %Array_Type_, ptr %72, i64 0, i32 2
  store i64 8, ptr %memberidx1.i52, align 4
  %73 = call ptr @malloc(i32 64)
  store ptr %73, ptr %72, align 8
  %74 = tail call ptr @malloc(i32 16)
  %75 = load ptr, ptr %1, align 8
  store i64 11, ptr %74, align 4
  %memberidx.i50 = getelementptr inbounds %ObjectType, ptr %74, i64 0, i32 1
  store ptr %75, ptr %memberidx.i50, align 8
  store ptr %74, ptr %73, align 8
  store i64 1, ptr %memberidx.i51, align 4
  %memberidx15 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i, i64 0, i32 1
  %76 = load ptr, ptr %memberidx15, align 8
  %memberidx1.i48 = getelementptr inbounds %Array_Type_, ptr %76, i64 0, i32 1
  %77 = load i64, ptr %memberidx1.i48, align 4
  %78 = add nuw i64 %77, 2
  %79 = icmp sgt i64 %78, 8
  br i1 %79, label %while.entry.i.i, label %Array_Type____adda__.exit

while.entry.i.i:                                  ; preds = %get_class_prop_type.exit, %while.entry.i.i
  %80 = phi ptr [ %84, %while.entry.i.i ], [ %73, %get_class_prop_type.exit ]
  %81 = phi i64 [ %82, %while.entry.i.i ], [ 8, %get_class_prop_type.exit ]
  %82 = shl nuw i64 %81, 1
  %83 = shl i64 %81, 4
  %84 = call ptr @realloc(ptr %80, i64 %83)
  %85 = icmp slt i64 %82, %78
  br i1 %85, label %while.entry.i.i, label %Array_Type____adda__.exit.loopexit

Array_Type____adda__.exit.loopexit:               ; preds = %while.entry.i.i
  store i64 %82, ptr %memberidx1.i52, align 4
  store ptr %84, ptr %72, align 8
  %.pre = load i64, ptr %memberidx1.i48, align 4
  br label %Array_Type____adda__.exit

Array_Type____adda__.exit:                        ; preds = %Array_Type____adda__.exit.loopexit, %get_class_prop_type.exit
  %86 = phi i64 [ %.pre, %Array_Type____adda__.exit.loopexit ], [ %77, %get_class_prop_type.exit ]
  %87 = phi ptr [ %84, %Array_Type____adda__.exit.loopexit ], [ %73, %get_class_prop_type.exit ]
  %88 = getelementptr inbounds ptr, ptr %87, i64 1
  %89 = load ptr, ptr %76, align 8
  %90 = shl i64 %86, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2147483648 %88, ptr align 8 %89, i64 %90, i1 false)
  %91 = load i64, ptr %memberidx1.i48, align 4
  %92 = add nuw i64 %91, 1
  store i64 %92, ptr %memberidx.i51, align 4
  %93 = load ptr, ptr %memberidx15, align 8
  %94 = load ptr, ptr %93, align 8
  call void @free(ptr %94)
  tail call void @free(ptr %93)
  store ptr %72, ptr %memberidx15, align 8
  %95 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 false)
  %memberidx18 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 4
  %96 = load ptr, ptr %memberidx2, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %96, i64 0, i32 1
  %97 = load i64, ptr %memberidx.i, align 4
  %98 = trunc i64 %97 to i32
  %99 = add i32 %98, 1
  %100 = call ptr @malloc(i32 %99)
  %101 = load ptr, ptr %96, align 8
  %102 = load i64, ptr %memberidx.i, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %100, ptr align 8 %101, i64 %102, i1 false)
  %103 = getelementptr inbounds i8, ptr %100, i64 %102
  store i8 0, ptr %103, align 1
  %104 = alloca ptr, align 8
  %105 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %104, ptr nonnull @291, ptr %100)
  %106 = load ptr, ptr %104, align 8
  %107 = tail call ptr @malloc(i32 24)
  store ptr %106, ptr %107, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %107, i64 0, i32 1
  store i64 %105, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %String, ptr %107, i64 0, i32 2
  store i64 %105, ptr %memberidx2.i, align 4
  tail call void @free(ptr %100)
  %108 = load ptr, ptr %0, align 8
  %109 = trunc i64 %105 to i32
  %110 = add i32 %109, 1
  %111 = call ptr @malloc(i32 %110)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %111, ptr align 8 %106, i64 %105, i1 false)
  %112 = getelementptr inbounds i8, ptr %111, i64 %105
  store i8 0, ptr %112, align 1
  %113 = call ptr @LLVMAddFunction(ptr %108, ptr %111, ptr %95)
  store ptr %113, ptr %memberidx18, align 8
  br label %ifend

else:                                             ; preds = %CGClassType_constructor.exit
  %memberidx20 = getelementptr inbounds %CGClassType, ptr %4, i64 0, i32 4
  store ptr null, ptr %memberidx20, align 8
  br label %ifend

ifend:                                            ; preds = %else, %Array_Type____adda__.exit
  ret void
}

define internal fastcc void @CodeGen_codegen_match_case(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr %4) unnamed_addr {
  %memberidx23 = getelementptr inbounds %Expression, ptr %3, i64 0, i32 2
  %6 = load i64, ptr %memberidx23, align 4
  %7 = icmp eq i64 %6, 9
  br i1 %7, label %if.entry, label %ifend

if.entry:                                         ; preds = %5, %if.entry2
  %.tr2124 = phi ptr [ %12, %if.entry2 ], [ %3, %5 ]
  %memberidx1 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 5
  %8 = load i64, ptr %memberidx1, align 4
  %9 = icmp eq i64 %8, 15
  br i1 %9, label %if.entry2, label %ifend

ifend:                                            ; preds = %if.entry2, %if.entry, %5
  %.tr21.lcssa = phi ptr [ %3, %5 ], [ %.tr2124, %if.entry ], [ %12, %if.entry2 ]
  %10 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %.tr21.lcssa)
  tail call void @LLVMAddCase(ptr %2, ptr %10, ptr %4)
  ret void

if.entry2:                                        ; preds = %if.entry
  %memberidx5 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 4
  %11 = load ptr, ptr %memberidx5, align 8
  tail call fastcc void @CodeGen_codegen_match_case(ptr %0, ptr %1, ptr %2, ptr %11, ptr %4)
  %memberidx6 = getelementptr inbounds %BinaryExpression, ptr %.tr2124, i64 0, i32 6
  %12 = load ptr, ptr %memberidx6, align 8
  %memberidx = getelementptr inbounds %Expression, ptr %12, i64 0, i32 2
  %13 = load i64, ptr %memberidx, align 4
  %14 = icmp eq i64 %13, 9
  br i1 %14, label %if.entry, label %ifend
}

define internal fastcc ptr @CodeGen_get_class_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 8
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 24)
  store ptr %9, ptr %10, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_String_CGClassType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_String_CGClassType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i = icmp eq ptr %16, null
  br i1 %.not.i, label %Map_String_CGClassType____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %17 = phi ptr [ %25, %else.i ], [ %14, %2 ]
  %18 = phi i64 [ %26, %else.i ], [ %12, %2 ]
  %19 = phi ptr [ %30, %else.i ], [ %16, %2 ]
  %hash.0.i = phi i64 [ %28, %else.i ], [ %13, %2 ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %21, %8
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %22 = load ptr, ptr %20, align 8
  %23 = call i64 @memcmp(ptr %22, ptr %9, i64 %8)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre3 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre4.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre4.pre, i64 %hash.0.i
  %.pre5.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre5.pre, null
  br i1 %.not25.i, label %Map_String_CGClassType____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %25 = phi ptr [ %.pre3, %ifend.i.i.else.i_crit_edge ], [ %17, %while.entry.i ]
  %26 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %18, %while.entry.i ]
  %27 = add nuw i64 %hash.0.i, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not26.i = icmp eq ptr %30, null
  br i1 %.not26.i, label %Map_String_CGClassType____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_CGClassType_, ptr %.pre5.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_CGClassType____getitem__.exit

Map_String_CGClassType____getitem__.exit:         ; preds = %else.i, %2, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %31, %if.entry7.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_enum_from_typeid(ptr nocapture readonly %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %4 = load ptr, ptr %memberidx, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %5 = load i64, ptr %1, align 4
  %memberidx1.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 1
  %6 = load i64, ptr %memberidx1.i, align 4
  %memberidx2.i = getelementptr inbounds %TypeId, ptr %1, i64 0, i32 2
  %7 = load i64, ptr %memberidx2.i, align 4
  %8 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %5, i64 %6, i64 %7)
  %9 = load ptr, ptr %3, align 8
  %10 = call ptr @malloc(i32 24)
  store ptr %9, ptr %10, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 1
  store i64 %8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %10, i64 0, i32 2
  store i64 %8, ptr %memberidx2.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %11 = call fastcc i64 @Map_String_CGEnumType__hash_fnc(ptr nonnull %10)
  %memberidx.i = getelementptr inbounds %Map_String_CGEnumType_, ptr %4, i64 0, i32 1
  %12 = load i64, ptr %memberidx.i, align 4
  %13 = urem i64 %11, %12
  %14 = load ptr, ptr %4, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %.not.i = icmp eq ptr %16, null
  br i1 %.not.i, label %Map_String_CGEnumType____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %17 = phi ptr [ %25, %else.i ], [ %14, %2 ]
  %18 = phi i64 [ %26, %else.i ], [ %12, %2 ]
  %19 = phi ptr [ %30, %else.i ], [ %16, %2 ]
  %hash.0.i = phi i64 [ %28, %else.i ], [ %13, %2 ]
  %20 = load ptr, ptr %19, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %20, i64 0, i32 1
  %21 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %21, %8
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %22 = load ptr, ptr %20, align 8
  %23 = call i64 @memcmp(ptr %22, ptr %9, i64 %8)
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre3 = load ptr, ptr %4, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre4.pre = load ptr, ptr %4, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre4.pre, i64 %hash.0.i
  %.pre5.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre5.pre, null
  br i1 %.not25.i, label %Map_String_CGEnumType____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %25 = phi ptr [ %.pre3, %ifend.i.i.else.i_crit_edge ], [ %17, %while.entry.i ]
  %26 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %18, %while.entry.i ]
  %27 = add nuw i64 %hash.0.i, 1
  %28 = urem i64 %27, %26
  %29 = getelementptr inbounds ptr, ptr %25, i64 %28
  %30 = load ptr, ptr %29, align 8
  %.not26.i = icmp eq ptr %30, null
  br i1 %.not26.i, label %Map_String_CGEnumType____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %.pre5.pre, i64 0, i32 1
  %31 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_CGEnumType____getitem__.exit

Map_String_CGEnumType____getitem__.exit:          ; preds = %else.i, %2, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %31, %if.entry7.i ], [ null, %while.end.i ], [ null, %2 ], [ null, %else.i ]
  ret ptr %common.ret.op.i
}

define internal fastcc ptr @CodeGen_get_member_mem_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr nocapture readonly %3, ptr nocapture readonly %4) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %6 = load ptr, ptr %memberidx, align 8
  %7 = load i64, ptr %3, align 4
  %switch6 = icmp eq i64 %7, 20
  br i1 %switch6, label %if.entry.i3, label %if.entry3.i

if.entry.i3:                                      ; preds = %5, %if.entry.i3
  %.tr11.i7 = phi ptr [ %8, %if.entry.i3 ], [ %3, %5 ]
  %memberidx1.i2 = getelementptr inbounds %GenericType, ptr %.tr11.i7, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1.i2, align 8
  %9 = load i64, ptr %8, align 4
  %switch = icmp eq i64 %9, 20
  br i1 %switch, label %if.entry.i3, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i3, %5
  %.tr11.i.lcssa = phi ptr [ %3, %5 ], [ %8, %if.entry.i3 ]
  %memberidx6.i4 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %10 = load ptr, ptr %memberidx6.i4, align 8
  %11 = load ptr, ptr %6, align 8
  %12 = load i64, ptr %10, align 4
  %13 = load ptr, ptr %11, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %15, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %10, i64 0, i32 2
  %17 = load i64, ptr %memberidx3.i.i, align 4
  %18 = load ptr, ptr %16, align 8
  %19 = getelementptr inbounds ptr, ptr %18, i64 %17
  %20 = load ptr, ptr %19, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %20, i64 0, i32 6
  %21 = load ptr, ptr %memberidx1, align 8
  %22 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %4)
  %memberidx.i = getelementptr inbounds %Map_String_PropId_, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx.i, align 4
  %24 = urem i64 %22, %23
  %25 = load ptr, ptr %21, align 8
  %26 = getelementptr inbounds ptr, ptr %25, i64 %24
  %27 = load ptr, ptr %26, align 8
  %.not.i = icmp eq ptr %27, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %28 = phi ptr [ %38, %else.i ], [ %25, %while.entry.i.preheader ]
  %29 = phi i64 [ %39, %else.i ], [ %23, %while.entry.i.preheader ]
  %30 = phi ptr [ %43, %else.i ], [ %27, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %41, %else.i ], [ %24, %while.entry.i.preheader ]
  %31 = load ptr, ptr %30, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %31, i64 0, i32 1
  %32 = load i64, ptr %memberidx.i.i, align 4
  %33 = load i64, ptr %memberidx1.i.i, align 4
  %.not.i.i = icmp eq i64 %32, %33
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %34 = load ptr, ptr %31, align 8
  %35 = load ptr, ptr %4, align 8
  %36 = tail call i64 @memcmp(ptr %34, ptr %35, i64 %32)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre8 = load ptr, ptr %21, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre9.pre = load ptr, ptr %21, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre9.pre, i64 %hash.0.i
  %.pre10.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre10.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %38 = phi ptr [ %.pre8, %ifend.i.i.else.i_crit_edge ], [ %28, %while.entry.i ]
  %39 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %29, %while.entry.i ]
  %40 = add nuw i64 %hash.0.i, 1
  %41 = urem i64 %40, %39
  %42 = getelementptr inbounds ptr, ptr %38, i64 %41
  %43 = load ptr, ptr %42, align 8
  %.not26.i = icmp eq ptr %43, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre10.pre, i64 0, i32 1
  %44 = load ptr, ptr %memberidx11.i, align 8
  %45 = icmp eq ptr %44, null
  br i1 %45, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_String_PropId____getitem__.exit, %ifend5
  %common.ret.op = phi ptr [ %71, %ifend5 ], [ null, %Map_String_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %46 = load ptr, ptr %memberidx, align 8
  %memberidx.i.i12 = getelementptr inbounds %PropId, ptr %44, i64 0, i32 1
  %47 = load ptr, ptr %memberidx.i.i12, align 8
  %48 = load ptr, ptr %46, align 8
  %49 = load i64, ptr %47, align 4
  %50 = load ptr, ptr %48, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %49
  %52 = load ptr, ptr %51, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %52, i64 0, i32 3
  %53 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %47, i64 0, i32 2
  %54 = load i64, ptr %memberidx3.i.i.i, align 4
  %55 = load ptr, ptr %53, align 8
  %56 = getelementptr inbounds ptr, ptr %55, i64 %54
  %57 = load ptr, ptr %56, align 8
  %58 = load i64, ptr %44, align 4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i = getelementptr inbounds %Class, ptr %57, i64 0, i32 5
  %60 = load ptr, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %PropId, ptr %44, i64 0, i32 2
  %61 = load i64, ptr %memberidx2.i, align 4
  %62 = load ptr, ptr %60, align 8
  %63 = getelementptr inbounds ptr, ptr %62, i64 %61
  %64 = load ptr, ptr %63, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %64, i64 0, i32 4
  br label %ifend5

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %57, i64 0, i32 4
  %65 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %44, i64 0, i32 2
  %66 = load i64, ptr %memberidx5.i, align 4
  %67 = load ptr, ptr %65, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %69, i64 0, i32 4
  br label %ifend5

ifend5:                                           ; preds = %ifend.i, %if.entry.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i13 = load ptr, ptr %common.ret.op.in.i, align 8
  %70 = alloca %MemberExpression, align 8
  store i64 8, ptr %70, align 8
  %memberidx.i.i14 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i14, align 4
  %memberidx1.i.i15 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i15, align 8
  %memberidx.i16 = getelementptr inbounds %MemberExpression, ptr %70, i64 0, i32 4
  store ptr null, ptr %memberidx.i16, align 8
  %memberidx1.i17 = getelementptr inbounds %MemberExpression, ptr %70, i64 0, i32 5
  store ptr %44, ptr %memberidx1.i17, align 8
  %memberidx2.i18 = getelementptr inbounds %Expression, ptr %70, i64 0, i32 3
  store ptr %common.ret.op.i13, ptr %memberidx2.i18, align 8
  %71 = call fastcc ptr @CodeGen_get_member_expr_mem(ptr nonnull %0, ptr %1, ptr nonnull %70, ptr %2)
  br label %common.ret
}

define internal fastcc ptr @CodeGen_get_member_with_name(ptr nocapture %0, ptr %1, ptr %2, ptr %3, ptr nocapture readonly %4, ptr writeonly %5) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %8 = load i64, ptr %3, align 4
  %switch31 = icmp eq i64 %8, 20
  br i1 %switch31, label %if.entry.i28, label %if.entry3.i

if.entry.i28:                                     ; preds = %6, %if.entry.i28
  %.tr11.i32 = phi ptr [ %9, %if.entry.i28 ], [ %3, %6 ]
  %memberidx1.i27 = getelementptr inbounds %GenericType, ptr %.tr11.i32, i64 0, i32 3
  %9 = load ptr, ptr %memberidx1.i27, align 8
  %10 = load i64, ptr %9, align 4
  %switch = icmp eq i64 %10, 20
  br i1 %switch, label %if.entry.i28, label %if.entry3.i

if.entry3.i:                                      ; preds = %if.entry.i28, %6
  %.tr11.i.lcssa = phi ptr [ %3, %6 ], [ %9, %if.entry.i28 ]
  %memberidx6.i29 = getelementptr inbounds %ObjectType, ptr %.tr11.i.lcssa, i64 0, i32 1
  %11 = load ptr, ptr %memberidx6.i29, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load i64, ptr %11, align 4
  %14 = load ptr, ptr %12, align 8
  %15 = getelementptr inbounds ptr, ptr %14, i64 %13
  %16 = load ptr, ptr %15, align 8
  %memberidx2.i.i = getelementptr inbounds %Module, ptr %16, i64 0, i32 3
  %17 = load ptr, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %11, i64 0, i32 2
  %18 = load i64, ptr %memberidx3.i.i, align 4
  %19 = load ptr, ptr %17, align 8
  %20 = getelementptr inbounds ptr, ptr %19, i64 %18
  %21 = load ptr, ptr %20, align 8
  %memberidx1 = getelementptr inbounds %Class, ptr %21, i64 0, i32 6
  %22 = load ptr, ptr %memberidx1, align 8
  %23 = tail call fastcc i64 @Map_String_PropId__hash_fnc(ptr %4)
  %memberidx.i20 = getelementptr inbounds %Map_String_PropId_, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i20, align 4
  %25 = urem i64 %23, %24
  %26 = load ptr, ptr %22, align 8
  %27 = getelementptr inbounds ptr, ptr %26, i64 %25
  %28 = load ptr, ptr %27, align 8
  %.not.i = icmp eq ptr %28, null
  br i1 %.not.i, label %common.ret, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %if.entry3.i
  %memberidx1.i.i22 = getelementptr inbounds %String, ptr %4, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i
  %29 = phi ptr [ %39, %else.i ], [ %26, %while.entry.i.preheader ]
  %30 = phi i64 [ %40, %else.i ], [ %24, %while.entry.i.preheader ]
  %31 = phi ptr [ %44, %else.i ], [ %28, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %42, %else.i ], [ %25, %while.entry.i.preheader ]
  %32 = load ptr, ptr %31, align 8
  %memberidx.i.i21 = getelementptr inbounds %String, ptr %32, i64 0, i32 1
  %33 = load i64, ptr %memberidx.i.i21, align 4
  %34 = load i64, ptr %memberidx1.i.i22, align 4
  %.not.i.i = icmp eq i64 %33, %34
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %35 = load ptr, ptr %32, align 8
  %36 = load ptr, ptr %4, align 8
  %37 = tail call i64 @memcmp(ptr %35, ptr %36, i64 %33)
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i20, align 4
  %.pre33 = load ptr, ptr %22, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre34.pre = load ptr, ptr %22, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre34.pre, i64 %hash.0.i
  %.pre35.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre35.pre, null
  br i1 %.not25.i, label %common.ret, label %Map_String_PropId____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %39 = phi ptr [ %.pre33, %ifend.i.i.else.i_crit_edge ], [ %29, %while.entry.i ]
  %40 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %30, %while.entry.i ]
  %41 = add nuw i64 %hash.0.i, 1
  %42 = urem i64 %41, %40
  %43 = getelementptr inbounds ptr, ptr %39, i64 %42
  %44 = load ptr, ptr %43, align 8
  %.not26.i = icmp eq ptr %44, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

Map_String_PropId____getitem__.exit:              ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_PropId_, ptr %.pre35.pre, i64 0, i32 1
  %45 = load ptr, ptr %memberidx11.i, align 8
  %46 = icmp eq ptr %45, null
  br i1 %46, label %common.ret, label %ifend

common.ret:                                       ; preds = %else.i, %if.entry3.i, %while.end.i, %Map_String_PropId____getitem__.exit, %ifend5
  %common.ret.op = phi ptr [ %73, %ifend5 ], [ null, %Map_String_PropId____getitem__.exit ], [ null, %while.end.i ], [ null, %if.entry3.i ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %Map_String_PropId____getitem__.exit
  %47 = load ptr, ptr %memberidx, align 8
  %memberidx.i.i17 = getelementptr inbounds %PropId, ptr %45, i64 0, i32 1
  %48 = load ptr, ptr %memberidx.i.i17, align 8
  %49 = load ptr, ptr %47, align 8
  %50 = load i64, ptr %48, align 4
  %51 = load ptr, ptr %49, align 8
  %52 = getelementptr inbounds ptr, ptr %51, i64 %50
  %53 = load ptr, ptr %52, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %53, i64 0, i32 3
  %54 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %48, i64 0, i32 2
  %55 = load i64, ptr %memberidx3.i.i.i, align 4
  %56 = load ptr, ptr %54, align 8
  %57 = getelementptr inbounds ptr, ptr %56, i64 %55
  %58 = load ptr, ptr %57, align 8
  %59 = load i64, ptr %45, align 4
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %if.entry.i, label %ifend.i

if.entry.i:                                       ; preds = %ifend
  %memberidx1.i18 = getelementptr inbounds %Class, ptr %58, i64 0, i32 5
  %61 = load ptr, ptr %memberidx1.i18, align 8
  %memberidx2.i19 = getelementptr inbounds %PropId, ptr %45, i64 0, i32 2
  %62 = load i64, ptr %memberidx2.i19, align 4
  %63 = load ptr, ptr %61, align 8
  %64 = getelementptr inbounds ptr, ptr %63, i64 %62
  %65 = load ptr, ptr %64, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %65, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i:                                          ; preds = %ifend
  %memberidx4.i = getelementptr inbounds %Class, ptr %58, i64 0, i32 4
  %66 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %PropId, ptr %45, i64 0, i32 2
  %67 = load i64, ptr %memberidx5.i, align 4
  %68 = load ptr, ptr %66, align 8
  %69 = getelementptr inbounds ptr, ptr %68, i64 %67
  %70 = load ptr, ptr %69, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %70, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %.not = icmp eq ptr %5, null
  br i1 %.not, label %ifend5, label %if.entry3

if.entry3:                                        ; preds = %get_class_prop_type.exit
  store ptr %common.ret.op.i, ptr %5, align 8
  br label %ifend5

ifend5:                                           ; preds = %get_class_prop_type.exit, %if.entry3
  %71 = alloca %Expression, align 8
  store i64 8, ptr %71, align 8
  %memberidx.i15 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 2
  store i64 8, ptr %memberidx.i15, align 4
  %memberidx1.i16 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 1
  store i1 false, ptr %memberidx1.i16, align 8
  %memberidx6 = getelementptr inbounds %Expression, ptr %71, i64 0, i32 3
  store ptr %3, ptr %memberidx6, align 8
  %72 = alloca %MemberExpression, align 8
  store i64 8, ptr %72, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 2
  store i64 13, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 1
  store i1 false, ptr %memberidx1.i.i, align 8
  %memberidx.i = getelementptr inbounds %MemberExpression, ptr %72, i64 0, i32 4
  store ptr %71, ptr %memberidx.i, align 8
  %memberidx1.i = getelementptr inbounds %MemberExpression, ptr %72, i64 0, i32 5
  store ptr %45, ptr %memberidx1.i, align 8
  %memberidx2.i = getelementptr inbounds %Expression, ptr %72, i64 0, i32 3
  store ptr %common.ret.op.i, ptr %memberidx2.i, align 8
  %73 = call fastcc ptr @CodeGen_codegen_member_exp(ptr nonnull %0, ptr %1, ptr nonnull %72, ptr %2)
  br label %common.ret
}

define internal fastcc void @CodeGen_codegen_for_stmt(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %memberidx, align 8
  %5 = tail call ptr @LLVMAppendBasicBlock(ptr %4, ptr nonnull @283)
  %6 = tail call ptr @LLVMBuildBr(ptr %1, ptr %5)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %5)
  %memberidx1 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 1
  %7 = load ptr, ptr %memberidx1, align 8
  %.not = icmp eq ptr %7, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %3
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %7)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %memberidx3 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 2
  %8 = load ptr, ptr %memberidx3, align 8
  %.not95 = icmp eq ptr %8, null
  br i1 %.not95, label %ifend6, label %if.entry4

if.entry4:                                        ; preds = %ifend
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %8)
  br label %ifend6

ifend6:                                           ; preds = %ifend, %if.entry4
  %9 = load ptr, ptr %memberidx, align 8
  %10 = tail call ptr @LLVMAppendBasicBlock(ptr %9, ptr nonnull @284)
  %11 = load ptr, ptr %memberidx, align 8
  %12 = tail call ptr @LLVMAppendBasicBlock(ptr %11, ptr nonnull @285)
  %13 = load ptr, ptr %memberidx, align 8
  %14 = tail call ptr @LLVMAppendBasicBlock(ptr %13, ptr nonnull @286)
  %15 = load ptr, ptr %memberidx, align 8
  %16 = tail call ptr @LLVMAppendBasicBlock(ptr %15, ptr nonnull @287)
  %memberidx12 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 2
  %17 = load ptr, ptr %memberidx12, align 8
  %memberidx13 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 3
  %18 = load ptr, ptr %memberidx13, align 8
  store ptr %16, ptr %memberidx12, align 8
  store ptr %14, ptr %memberidx13, align 8
  %19 = tail call ptr @LLVMBuildBr(ptr %1, ptr %10)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %10)
  %20 = tail call ptr @LLVMInt1Type()
  %21 = tail call ptr @LLVMConstInt(ptr %20, i64 1, i1 false)
  %memberidx16 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 3
  %22 = load ptr, ptr %memberidx16, align 8
  %.not96 = icmp eq ptr %22, null
  br i1 %.not96, label %ifend19, label %if.entry17

if.entry17:                                       ; preds = %ifend6
  %23 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr nonnull %22)
  br label %ifend19

ifend19:                                          ; preds = %ifend6, %if.entry17
  %condition.0 = phi ptr [ %23, %if.entry17 ], [ %21, %ifend6 ]
  %24 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %condition.0, ptr %12, ptr %16)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %12)
  %memberidx21 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 5
  %25 = load ptr, ptr %memberidx21, align 8
  %memberidx.i108 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %26 = load i1, ptr %memberidx.i108, align 1
  store i1 false, ptr %memberidx.i108, align 1
  %27 = load ptr, ptr %25, align 8
  %28 = tail call ptr @malloc(i32 25)
  %29 = load ptr, ptr %27, align 8
  %memberidx1.i.i109 = getelementptr inbounds %Array_Statement_, ptr %27, i64 0, i32 1
  %30 = load i64, ptr %memberidx1.i.i109, align 4
  store i1 false, ptr %28, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 3
  store ptr %29, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %28, i64 0, i32 2
  store i64 %30, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %31 = icmp slt i64 %30, 1
  br i1 %31, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %ifend19, %for.body.i
  %32 = phi i64 [ %33, %for.body.i ], [ 1, %ifend19 ]
  %statement.0.i112.in = phi ptr [ %34, %for.body.i ], [ %29, %ifend19 ]
  %statement.0.i112 = load ptr, ptr %statement.0.i112.in, align 8
  tail call fastcc void @CodeGen_codegen_statement(ptr %0, ptr %1, ptr %statement.0.i112)
  %33 = add nuw nsw i64 %32, 1
  store i64 %33, ptr %memberidx1.i.i.i, align 4
  %34 = getelementptr inbounds ptr, ptr %29, i64 %32
  %.not113 = icmp slt i64 %32, %30
  br i1 %.not113, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %ifend19
  tail call void @free(ptr nonnull %28)
  %memberidx4.i = getelementptr inbounds %Block, ptr %25, i64 0, i32 4
  %35 = load ptr, ptr %memberidx4.i, align 8
  %.not.i = icmp eq ptr %35, null
  br i1 %.not.i, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %36 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %35)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  store i1 %26, ptr %memberidx.i108, align 1
  %37 = load ptr, ptr %memberidx21, align 8
  %memberidx.i = getelementptr inbounds %Block, ptr %37, i64 0, i32 1
  %38 = load i1, ptr %memberidx.i, align 1
  %memberidx1.i = getelementptr inbounds %Block, ptr %37, i64 0, i32 2
  %39 = load i1, ptr %memberidx1.i, align 1
  %40 = or i1 %38, %39
  %memberidx2.i = getelementptr inbounds %Block, ptr %37, i64 0, i32 3
  %41 = load i1, ptr %memberidx2.i, align 1
  %42 = or i1 %40, %41
  br i1 %42, label %ifend25, label %if.entry23

if.entry23:                                       ; preds = %CodeGen_codegen_block.exit
  %43 = tail call ptr @LLVMBuildBr(ptr %1, ptr %14)
  br label %ifend25

ifend25:                                          ; preds = %CodeGen_codegen_block.exit, %if.entry23
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %14)
  %memberidx26 = getelementptr inbounds %ForStatement, ptr %2, i64 0, i32 4
  %44 = load ptr, ptr %memberidx26, align 8
  %.not97 = icmp eq ptr %44, null
  br i1 %.not97, label %ifend29, label %if.entry27

if.entry27:                                       ; preds = %ifend25
  tail call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %1, ptr nonnull %44)
  br label %ifend29

ifend29:                                          ; preds = %ifend25, %if.entry27
  %45 = tail call ptr @LLVMBuildBr(ptr %1, ptr %10)
  store ptr %17, ptr %memberidx12, align 8
  store ptr %18, ptr %memberidx13, align 8
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %16)
  %46 = load ptr, ptr %memberidx1, align 8
  %.not98 = icmp eq ptr %46, null
  br i1 %.not98, label %ifend36, label %if.entry34

if.entry34:                                       ; preds = %ifend29
  %memberidx38 = getelementptr inbounds %VarDeclaration, ptr %46, i64 0, i32 2
  %47 = load ptr, ptr %memberidx38, align 8
  %48 = alloca %VarAccessExpression, align 8
  %memberidx39 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %49 = load ptr, ptr %memberidx39, align 8
  %50 = load ptr, ptr %49, align 8
  %memberidx1.i99 = getelementptr inbounds %VarId, ptr %47, i64 0, i32 1
  %51 = load i64, ptr %memberidx1.i99, align 4
  %52 = load ptr, ptr %50, align 8
  %53 = getelementptr inbounds ptr, ptr %52, i64 %51
  %54 = load ptr, ptr %53, align 8
  %memberidx2.i100 = getelementptr inbounds %Module, ptr %54, i64 0, i32 1
  %55 = load ptr, ptr %memberidx2.i100, align 8
  %memberidx3.i = getelementptr inbounds %VarId, ptr %47, i64 0, i32 2
  %56 = load i64, ptr %memberidx3.i, align 4
  %57 = load ptr, ptr %55, align 8
  %58 = getelementptr inbounds ptr, ptr %57, i64 %56
  %59 = load ptr, ptr %58, align 8
  %60 = load ptr, ptr %59, align 8
  store i64 8, ptr %48, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %48, i64 0, i32 2
  store i64 8, ptr %memberidx.i.i, align 4
  %memberidx1.i.i = getelementptr inbounds %Expression, ptr %48, i64 0, i32 1
  %memberidx.i101 = getelementptr inbounds %VarAccessExpression, ptr %48, i64 0, i32 4
  store ptr %47, ptr %memberidx.i101, align 8
  %memberidx1.i102 = getelementptr inbounds %Expression, ptr %48, i64 0, i32 3
  store ptr %60, ptr %memberidx1.i102, align 8
  %61 = load i64, ptr %47, align 4
  %62 = icmp eq i64 %61, 2
  store i1 %62, ptr %memberidx1.i.i, align 8
  %63 = call fastcc ptr @CodeGen_codegen_var_access_exp(ptr nonnull %0, ptr %1, ptr nonnull %48)
  %64 = tail call ptr @LLVMBuildFree(ptr %1, ptr %63)
  br label %ifend36

ifend36:                                          ; preds = %ifend29, %if.entry34
  ret void
}

define internal fastcc ptr @CodeGen_codegen_member_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2, ptr %3) unnamed_addr {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 4
  %7 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %7, i64 0, i32 3
  %8 = load ptr, ptr %memberidx1, align 8
  %9 = load i64, ptr %8, align 4
  %10 = icmp eq i64 %9, 20
  br i1 %10, label %if.entry.i, label %is_object.exit

if.entry.i:                                       ; preds = %4, %if.entry.i
  %.tr5.i = phi ptr [ %11, %if.entry.i ], [ %8, %4 ]
  %memberidx1.i119 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %11 = load ptr, ptr %memberidx1.i119, align 8
  %12 = load i64, ptr %11, align 4
  %13 = icmp eq i64 %12, 20
  br i1 %13, label %if.entry.i, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i, %4
  %.lcssa.i = phi i64 [ %9, %4 ], [ %12, %if.entry.i ]
  %14 = icmp eq i64 %.lcssa.i, 11
  br i1 %14, label %if.entry, label %ifend

if.entry:                                         ; preds = %is_object.exit
  %15 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr %2, ptr %3)
  %memberidx2 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %16 = load ptr, ptr %memberidx2, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 16
  br i1 %18, label %common.ret, label %ifend5

ifend:                                            ; preds = %is_object.exit
  %memberidx8 = getelementptr inbounds %VarAccessExpression, ptr %7, i64 0, i32 4
  %19 = load ptr, ptr %memberidx8, align 8
  %memberidx9 = getelementptr inbounds %MemberExpression, ptr %2, i64 0, i32 5
  %20 = load ptr, ptr %memberidx9, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i63 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 1
  %21 = load ptr, ptr %memberidx.i63, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %22 = load i64, ptr %21, align 4
  %memberidx1.i.i64 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 1
  %23 = load i64, ptr %memberidx1.i.i64, align 4
  %memberidx2.i.i65 = getelementptr inbounds %TypeId, ptr %21, i64 0, i32 2
  %24 = load i64, ptr %memberidx2.i.i65, align 4
  %25 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %22, i64 %23, i64 %24)
  %26 = load ptr, ptr %5, align 8
  %27 = call ptr @malloc(i32 24)
  store ptr %26, ptr %27, align 8
  %memberidx1.i.i.i66 = getelementptr inbounds %String, ptr %27, i64 0, i32 1
  store i64 %25, ptr %memberidx1.i.i.i66, align 4
  %memberidx2.i.i.i67 = getelementptr inbounds %String, ptr %27, i64 0, i32 2
  store i64 %25, ptr %memberidx2.i.i.i67, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %28 = trunc i64 %25 to i32
  %29 = add i32 %28, 1
  %30 = call ptr @malloc(i32 %29)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr align 8 %26, i64 %25, i1 false)
  %31 = getelementptr inbounds i8, ptr %30, i64 %25
  store i8 0, ptr %31, align 1
  %32 = load i64, ptr %20, align 4
  %memberidx2.i = getelementptr inbounds %PropId, ptr %20, i64 0, i32 2
  %33 = load i64, ptr %memberidx2.i, align 4
  %34 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @259, ptr %30, i64 %32, i64 %33)
  %35 = load ptr, ptr %6, align 8
  %36 = call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 %34, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 %34, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %30)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %37 = load i64, ptr %19, align 4
  switch i64 %37, label %common.ret [
    i64 3, label %if.entry11
    i64 4, label %if.entry27
  ]

common.ret:                                       ; preds = %else.i, %ifend32, %if.entry7.i, %while.end.i, %ifend20, %ifend, %if.entry, %ifend24, %ifend5
  %common.ret.op = phi ptr [ %39, %ifend5 ], [ %97, %ifend24 ], [ %15, %if.entry ], [ null, %ifend ], [ %common.ret.op.i90124, %ifend20 ], [ %142, %if.entry7.i ], [ null, %while.end.i ], [ null, %ifend32 ], [ null, %else.i ]
  ret ptr %common.ret.op

ifend5:                                           ; preds = %if.entry
  %38 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %16, i1 true)
  %39 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %38, ptr %15, ptr nonnull @80)
  br label %common.ret

if.entry11:                                       ; preds = %ifend
  %40 = call ptr @malloc(i32 24)
  %memberidx.i71 = getelementptr inbounds %VarId, ptr %19, i64 0, i32 1
  %41 = load i64, ptr %memberidx.i71, align 4
  %memberidx1.i72 = getelementptr inbounds %VarId, ptr %19, i64 0, i32 2
  %42 = load i64, ptr %memberidx1.i72, align 4
  store i64 %41, ptr %40, align 4
  %memberidx1.i.i.i73 = getelementptr inbounds %TypeId, ptr %40, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i.i73, align 4
  %memberidx2.i.i.i74 = getelementptr inbounds %TypeId, ptr %40, i64 0, i32 2
  store i64 %42, ptr %memberidx2.i.i.i74, align 4
  %43 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr nonnull %40)
  %.not.i99 = icmp eq ptr %43, null
  br i1 %.not.i99, label %CodeGen_get_or_codegen_class_from_typeid.exit, label %ifend16

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %if.entry11
  %memberidx.i101 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %44 = load ptr, ptr %memberidx.i101, align 8
  %45 = load ptr, ptr %44, align 8
  %46 = load ptr, ptr %45, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 %41
  %48 = load ptr, ptr %47, align 8
  %memberidx2.i.i102 = getelementptr inbounds %Module, ptr %48, i64 0, i32 3
  %49 = load ptr, ptr %memberidx2.i.i102, align 8
  %50 = load ptr, ptr %49, align 8
  %51 = getelementptr inbounds ptr, ptr %50, i64 %42
  %52 = load ptr, ptr %51, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %52)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %52)
  %53 = load ptr, ptr %52, align 8
  %54 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %53)
  %55 = icmp eq ptr %54, null
  br i1 %55, label %if.entry14, label %ifend16

if.entry14:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %56 = call ptr @malloc(i32 51)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(51) %56, ptr noundef nonnull align 8 dereferenceable(51) @276, i64 51, i1 false)
  %57 = call ptr @malloc(i32 24)
  %58 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %58, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %59 = call ptr @malloc(i32 24)
  %60 = call i64 @write(i64 1, ptr %58, i64 7)
  call void @free(ptr %58)
  call void @free(ptr %59)
  %61 = call i64 @write(i64 1, ptr %56, i64 51)
  %62 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %56)
  call void @free(ptr %57)
  call void @exit(i64 -1)
  unreachable

ifend16:                                          ; preds = %if.entry11, %CodeGen_get_or_codegen_class_from_typeid.exit
  %common.ret.op.i100122 = phi ptr [ %54, %CodeGen_get_or_codegen_class_from_typeid.exit ], [ %43, %if.entry11 ]
  %memberidx17 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i100122, i64 0, i32 3
  %63 = load ptr, ptr %memberidx17, align 8
  %64 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %36)
  %memberidx.i75 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %63, i64 0, i32 1
  %65 = load i64, ptr %memberidx.i75, align 4
  %66 = urem i64 %64, %65
  %67 = load ptr, ptr %63, align 8
  %68 = getelementptr inbounds ptr, ptr %67, i64 %66
  %69 = load ptr, ptr %68, align 8
  %.not.i76 = icmp eq ptr %69, null
  br i1 %.not.i76, label %if.entry18, label %while.entry.i81

while.entry.i81:                                  ; preds = %ifend16, %else.i89
  %70 = phi ptr [ %78, %else.i89 ], [ %67, %ifend16 ]
  %71 = phi i64 [ %79, %else.i89 ], [ %65, %ifend16 ]
  %72 = phi ptr [ %83, %else.i89 ], [ %69, %ifend16 ]
  %hash.0.i77 = phi i64 [ %81, %else.i89 ], [ %66, %ifend16 ]
  %73 = load ptr, ptr %72, align 8
  %memberidx.i.i78 = getelementptr inbounds %String, ptr %73, i64 0, i32 1
  %74 = load i64, ptr %memberidx.i.i78, align 4
  %.not.i.i80 = icmp eq i64 %74, %34
  br i1 %.not.i.i80, label %ifend.i.i82, label %else.i89

ifend.i.i82:                                      ; preds = %while.entry.i81
  %75 = load ptr, ptr %73, align 8
  %76 = call i64 @memcmp(ptr %75, ptr %35, i64 %34)
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %while.end.i87, label %ifend.i.i82.else.i89_crit_edge

ifend.i.i82.else.i89_crit_edge:                   ; preds = %ifend.i.i82
  %.pre131 = load i64, ptr %memberidx.i75, align 4
  %.pre132 = load ptr, ptr %63, align 8
  br label %else.i89

while.end.i87:                                    ; preds = %ifend.i.i82
  %.pre133.pre = load ptr, ptr %63, align 8
  %.phi.trans.insert134.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre133.pre, i64 %hash.0.i77
  %.pre135.pre = load ptr, ptr %.phi.trans.insert134.phi.trans.insert, align 8
  %.not25.i86 = icmp eq ptr %.pre135.pre, null
  br i1 %.not25.i86, label %if.entry18, label %Map_String_LLVMValueRef____getitem__.exit93

else.i89:                                         ; preds = %ifend.i.i82.else.i89_crit_edge, %while.entry.i81
  %78 = phi ptr [ %.pre132, %ifend.i.i82.else.i89_crit_edge ], [ %70, %while.entry.i81 ]
  %79 = phi i64 [ %.pre131, %ifend.i.i82.else.i89_crit_edge ], [ %71, %while.entry.i81 ]
  %80 = add nuw i64 %hash.0.i77, 1
  %81 = urem i64 %80, %79
  %82 = getelementptr inbounds ptr, ptr %78, i64 %81
  %83 = load ptr, ptr %82, align 8
  %.not26.i88 = icmp eq ptr %83, null
  br i1 %.not26.i88, label %if.entry18, label %while.entry.i81

Map_String_LLVMValueRef____getitem__.exit93:      ; preds = %while.end.i87
  %memberidx11.i91 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre135.pre, i64 0, i32 1
  %84 = load ptr, ptr %memberidx11.i91, align 8
  %85 = icmp eq ptr %84, null
  br i1 %85, label %if.entry18, label %ifend20

if.entry18:                                       ; preds = %else.i89, %ifend16, %while.end.i87, %Map_String_LLVMValueRef____getitem__.exit93
  %86 = call ptr @malloc(i32 59)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(59) %86, ptr noundef nonnull align 8 dereferenceable(59) @277, i64 59, i1 false)
  %87 = call ptr @malloc(i32 24)
  %88 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %88, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %89 = call ptr @malloc(i32 24)
  %90 = call i64 @write(i64 1, ptr %88, i64 7)
  call void @free(ptr %88)
  call void @free(ptr %89)
  %91 = call i64 @write(i64 1, ptr %86, i64 59)
  %92 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %86)
  call void @free(ptr %87)
  call void @exit(i64 -1)
  br label %ifend20

ifend20:                                          ; preds = %Map_String_LLVMValueRef____getitem__.exit93, %if.entry18
  %common.ret.op.i90124 = phi ptr [ %84, %Map_String_LLVMValueRef____getitem__.exit93 ], [ null, %if.entry18 ]
  %memberidx21 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %93 = load ptr, ptr %memberidx21, align 8
  %94 = load i64, ptr %93, align 4
  %95 = icmp eq i64 %94, 16
  br i1 %95, label %common.ret, label %ifend24

ifend24:                                          ; preds = %ifend20
  %96 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %93, i1 true)
  %97 = call ptr @LLVMBuildLoad2(ptr %1, ptr %96, ptr %common.ret.op.i90124, ptr nonnull @80)
  br label %common.ret

if.entry27:                                       ; preds = %ifend
  %98 = call ptr @malloc(i32 24)
  %memberidx.i57 = getelementptr inbounds %VarId, ptr %19, i64 0, i32 1
  %99 = load i64, ptr %memberidx.i57, align 4
  %memberidx1.i = getelementptr inbounds %VarId, ptr %19, i64 0, i32 2
  %100 = load i64, ptr %memberidx1.i, align 4
  store i64 %99, ptr %98, align 4
  %memberidx1.i.i.i58 = getelementptr inbounds %TypeId, ptr %98, i64 0, i32 1
  store i64 1, ptr %memberidx1.i.i.i58, align 4
  %memberidx2.i.i.i59 = getelementptr inbounds %TypeId, ptr %98, i64 0, i32 2
  store i64 %100, ptr %memberidx2.i.i.i59, align 4
  %101 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr nonnull %98)
  %.not.i103 = icmp eq ptr %101, null
  br i1 %.not.i103, label %CodeGen_get_or_codegen_enum_from_typeid.exit, label %ifend32

CodeGen_get_or_codegen_enum_from_typeid.exit:     ; preds = %if.entry27
  %memberidx.i106 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %102 = load ptr, ptr %memberidx.i106, align 8
  %103 = load ptr, ptr %102, align 8
  %104 = load ptr, ptr %103, align 8
  %105 = getelementptr inbounds ptr, ptr %104, i64 %99
  %106 = load ptr, ptr %105, align 8
  %memberidx2.i.i107 = getelementptr inbounds %Module, ptr %106, i64 0, i32 6
  %107 = load ptr, ptr %memberidx2.i.i107, align 8
  %108 = load ptr, ptr %107, align 8
  %109 = getelementptr inbounds ptr, ptr %108, i64 %100
  %110 = load ptr, ptr %109, align 8
  call fastcc void @CodeGen_declare_enum(ptr %0, ptr %110)
  %111 = load ptr, ptr %110, align 8
  %112 = call fastcc ptr @CodeGen_get_enum_from_typeid(ptr %0, ptr %111)
  %113 = icmp eq ptr %112, null
  br i1 %113, label %if.entry30, label %ifend32

if.entry30:                                       ; preds = %CodeGen_get_or_codegen_enum_from_typeid.exit
  %114 = call ptr @malloc(i32 50)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(50) %114, ptr noundef nonnull align 8 dereferenceable(50) @278, i64 50, i1 false)
  %115 = call ptr @malloc(i32 24)
  %116 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %116, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %117 = call ptr @malloc(i32 24)
  %118 = call i64 @write(i64 1, ptr %116, i64 7)
  call void @free(ptr %116)
  call void @free(ptr %117)
  %119 = call i64 @write(i64 1, ptr %114, i64 50)
  %120 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %114)
  call void @free(ptr %115)
  call void @exit(i64 -1)
  unreachable

ifend32:                                          ; preds = %if.entry27, %CodeGen_get_or_codegen_enum_from_typeid.exit
  %common.ret.op.i104127 = phi ptr [ %112, %CodeGen_get_or_codegen_enum_from_typeid.exit ], [ %101, %if.entry27 ]
  %memberidx33 = getelementptr inbounds %CGEnumType, ptr %common.ret.op.i104127, i64 0, i32 1
  %121 = load ptr, ptr %memberidx33, align 8
  %122 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %36)
  %memberidx.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %121, i64 0, i32 1
  %123 = load i64, ptr %memberidx.i, align 4
  %124 = urem i64 %122, %123
  %125 = load ptr, ptr %121, align 8
  %126 = getelementptr inbounds ptr, ptr %125, i64 %124
  %127 = load ptr, ptr %126, align 8
  %.not.i = icmp eq ptr %127, null
  br i1 %.not.i, label %common.ret, label %while.entry.i

while.entry.i:                                    ; preds = %ifend32, %else.i
  %128 = phi ptr [ %136, %else.i ], [ %125, %ifend32 ]
  %129 = phi i64 [ %137, %else.i ], [ %123, %ifend32 ]
  %130 = phi ptr [ %141, %else.i ], [ %127, %ifend32 ]
  %hash.0.i = phi i64 [ %139, %else.i ], [ %124, %ifend32 ]
  %131 = load ptr, ptr %130, align 8
  %memberidx.i.i = getelementptr inbounds %String, ptr %131, i64 0, i32 1
  %132 = load i64, ptr %memberidx.i.i, align 4
  %.not.i.i = icmp eq i64 %132, %34
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %133 = load ptr, ptr %131, align 8
  %134 = call i64 @memcmp(ptr %133, ptr %35, i64 %34)
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i, align 4
  %.pre128 = load ptr, ptr %121, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre129.pre = load ptr, ptr %121, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre129.pre, i64 %hash.0.i
  %.pre130.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre130.pre, null
  br i1 %.not25.i, label %common.ret, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %136 = phi ptr [ %.pre128, %ifend.i.i.else.i_crit_edge ], [ %128, %while.entry.i ]
  %137 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %129, %while.entry.i ]
  %138 = add nuw i64 %hash.0.i, 1
  %139 = urem i64 %138, %137
  %140 = getelementptr inbounds ptr, ptr %136, i64 %139
  %141 = load ptr, ptr %140, align 8
  %.not26.i = icmp eq ptr %141, null
  br i1 %.not26.i, label %common.ret, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre130.pre, i64 0, i32 1
  %142 = load ptr, ptr %memberidx11.i, align 8
  br label %common.ret
}

define internal fastcc void @CodeGen_declare_static_props(ptr nocapture %0, ptr nocapture readonly %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Class, ptr %2, i64 0, i32 7
  %5 = load ptr, ptr %memberidx, align 8
  %6 = tail call ptr @malloc(i32 25)
  %7 = load ptr, ptr %5, align 8
  %memberidx1.i50 = getelementptr inbounds %Map_String_PropId_, ptr %5, i64 0, i32 1
  %8 = load i64, ptr %memberidx1.i50, align 4
  %memberidx2.i51 = getelementptr inbounds %Map_String_PropId_, ptr %5, i64 0, i32 2
  %9 = load i64, ptr %memberidx2.i51, align 4
  store i1 false, ptr %6, align 1
  %memberidx1.i.i52 = getelementptr inbounds %MapIterator_String_PropId_, ptr %6, i64 0, i32 1
  store ptr %7, ptr %memberidx1.i.i52, align 8
  %memberidx2.i.i53 = getelementptr inbounds %MapIterator_String_PropId_, ptr %6, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %6, i64 0, i32 3
  store i64 %9, ptr %memberidx3.i.i, align 4
  %10 = add nsw i64 %8, -1
  store i64 %10, ptr %memberidx2.i.i53, align 4
  %11 = icmp sgt i64 %8, 0
  br i1 %11, label %while.entry.i45, label %MapIterator_String_PropId__next.exit49

while.entry.i45:                                  ; preds = %for.entry, %ifend.i48
  %12 = phi i64 [ %15, %ifend.i48 ], [ %10, %for.entry ]
  %13 = phi ptr [ %incdec.ptr.i43, %ifend.i48 ], [ %7, %for.entry ]
  %incdec.ptr.i43 = getelementptr inbounds ptr, ptr %13, i64 1
  %14 = load ptr, ptr %13, align 8
  %.not.i44 = icmp eq ptr %14, null
  br i1 %.not.i44, label %ifend.i48, label %MapIterator_String_PropId__next.exit49.loopexit

ifend.i48:                                        ; preds = %while.entry.i45
  %15 = add nsw i64 %12, -1
  store i64 %15, ptr %memberidx2.i.i53, align 4
  %16 = icmp sgt i64 %12, 0
  br i1 %16, label %while.entry.i45, label %MapIterator_String_PropId__next.exit49.loopexit

MapIterator_String_PropId__next.exit49.loopexit:  ; preds = %ifend.i48, %while.entry.i45
  %17 = phi i64 [ %15, %ifend.i48 ], [ %12, %while.entry.i45 ]
  store ptr %incdec.ptr.i43, ptr %memberidx1.i.i52, align 8
  br label %MapIterator_String_PropId__next.exit49

MapIterator_String_PropId__next.exit49:           ; preds = %MapIterator_String_PropId__next.exit49.loopexit, %for.entry
  %18 = phi i64 [ %17, %MapIterator_String_PropId__next.exit49.loopexit ], [ %10, %for.entry ]
  %memberidx1.i.i52.promoted62 = phi ptr [ %incdec.ptr.i43, %MapIterator_String_PropId__next.exit49.loopexit ], [ %7, %for.entry ]
  %storemerge59 = icmp slt i64 %9, 1
  br i1 %storemerge59, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_String_PropId__next.exit49
  %memberidx4 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx5 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx8 = getelementptr inbounds %Class, ptr %2, i64 0, i32 4
  %memberidx11 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_String_PropId__next.exit
  %19 = phi i64 [ %18, %for.body.lr.ph ], [ %111, %MapIterator_String_PropId__next.exit ]
  %incdec.ptr.i.lcssa64 = phi ptr [ %memberidx1.i.i52.promoted62, %for.body.lr.ph ], [ %incdec.ptr.i.lcssa63, %MapIterator_String_PropId__next.exit ]
  %storemerge5760.in = phi i64 [ %9, %for.body.lr.ph ], [ %storemerge5760, %MapIterator_String_PropId__next.exit ]
  %storemerge5760 = add nsw i64 %storemerge5760.in, -1
  %entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i.lcssa64, i64 -1
  %entry.0 = load ptr, ptr %entry.0.in, align 8
  %memberidx2 = getelementptr inbounds %MapEntry_String_PropId_, ptr %entry.0, i64 0, i32 1
  %20 = load ptr, ptr %memberidx2, align 8
  %21 = load ptr, ptr %entry.0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i37 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 1
  %22 = load ptr, ptr %memberidx.i37, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %23 = load i64, ptr %22, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 1
  %24 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %22, i64 0, i32 2
  %25 = load i64, ptr %memberidx2.i.i, align 4
  %26 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %23, i64 %24, i64 %25)
  %27 = load ptr, ptr %3, align 8
  %28 = call ptr @malloc(i32 24)
  store ptr %27, ptr %28, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %28, i64 0, i32 1
  store i64 %26, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i38 = getelementptr inbounds %String, ptr %28, i64 0, i32 2
  store i64 %26, ptr %memberidx2.i.i.i38, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %29 = trunc i64 %26 to i32
  %30 = add i32 %29, 1
  %31 = call ptr @malloc(i32 %30)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %31, ptr align 8 %27, i64 %26, i1 false)
  %32 = getelementptr inbounds i8, ptr %31, i64 %26
  store i8 0, ptr %32, align 1
  %33 = load i64, ptr %20, align 4
  %memberidx2.i40 = getelementptr inbounds %PropId, ptr %20, i64 0, i32 2
  %34 = load i64, ptr %memberidx2.i40, align 4
  %35 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @259, ptr %31, i64 %33, i64 %34)
  %36 = load ptr, ptr %4, align 8
  %37 = call ptr @malloc(i32 24)
  store ptr %36, ptr %37, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %37, i64 0, i32 1
  store i64 %35, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %37, i64 0, i32 2
  store i64 %35, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %31)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %38 = load ptr, ptr %memberidx4, align 8
  %39 = load ptr, ptr %memberidx.i37, align 8
  %40 = load ptr, ptr %38, align 8
  %41 = load i64, ptr %39, align 4
  %42 = load ptr, ptr %40, align 8
  %43 = getelementptr inbounds ptr, ptr %42, i64 %41
  %44 = load ptr, ptr %43, align 8
  %memberidx2.i.i.i = getelementptr inbounds %Module, ptr %44, i64 0, i32 3
  %45 = load ptr, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %39, i64 0, i32 2
  %46 = load i64, ptr %memberidx3.i.i.i, align 4
  %47 = load ptr, ptr %45, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  %50 = load i64, ptr %20, align 4
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %if.entry.i, label %ifend.i36

if.entry.i:                                       ; preds = %for.body
  %memberidx1.i34 = getelementptr inbounds %Class, ptr %49, i64 0, i32 5
  %52 = load ptr, ptr %memberidx1.i34, align 8
  %53 = load i64, ptr %memberidx2.i40, align 4
  %54 = load ptr, ptr %52, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %56, i64 0, i32 4
  br label %get_class_prop_type.exit

ifend.i36:                                        ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %49, i64 0, i32 4
  %57 = load ptr, ptr %memberidx4.i, align 8
  %58 = load i64, ptr %memberidx2.i40, align 4
  %59 = load ptr, ptr %57, align 8
  %60 = getelementptr inbounds ptr, ptr %59, i64 %58
  %61 = load ptr, ptr %60, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %61, i64 0, i32 4
  br label %get_class_prop_type.exit

get_class_prop_type.exit:                         ; preds = %if.entry.i, %ifend.i36
  %common.ret.op.in.i = phi ptr [ %memberidx3.i, %if.entry.i ], [ %memberidx6.i, %ifend.i36 ]
  %common.ret.op.i = load ptr, ptr %common.ret.op.in.i, align 8
  %62 = load i64, ptr %common.ret.op.i, align 4
  %63 = icmp eq i64 %62, 20
  br i1 %63, label %if.entry.i55, label %is_object.exit

if.entry.i55:                                     ; preds = %get_class_prop_type.exit, %if.entry.i55
  %.tr5.i = phi ptr [ %64, %if.entry.i55 ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %memberidx1.i54 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %64 = load ptr, ptr %memberidx1.i54, align 8
  %65 = load i64, ptr %64, align 4
  %66 = icmp eq i64 %65, 20
  br i1 %66, label %if.entry.i55, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i55, %get_class_prop_type.exit
  %.lcssa.i = phi i64 [ %62, %get_class_prop_type.exit ], [ %65, %if.entry.i55 ]
  %67 = icmp eq i64 %.lcssa.i, 11
  %68 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %common.ret.op.i, i1 %67)
  %69 = load ptr, ptr %memberidx5, align 8
  %memberidx.i32 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  %70 = load i64, ptr %memberidx.i32, align 4
  %71 = trunc i64 %70 to i32
  %72 = add i32 %71, 1
  %73 = call ptr @malloc(i32 %72)
  %74 = load ptr, ptr %69, align 8
  %75 = load i64, ptr %memberidx.i32, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %73, ptr align 8 %74, i64 %75, i1 false)
  %76 = getelementptr inbounds i8, ptr %73, i64 %75
  store i8 0, ptr %76, align 1
  %memberidx.i31 = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  %77 = load i64, ptr %memberidx.i31, align 4
  %78 = trunc i64 %77 to i32
  %79 = add i32 %78, 1
  %80 = call ptr @malloc(i32 %79)
  %81 = load ptr, ptr %21, align 8
  %82 = load i64, ptr %memberidx.i31, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %80, ptr align 8 %81, i64 %82, i1 false)
  %83 = getelementptr inbounds i8, ptr %80, i64 %82
  store i8 0, ptr %83, align 1
  %84 = alloca ptr, align 8
  %85 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %84, ptr nonnull @104, ptr %73, ptr %80)
  %86 = load ptr, ptr %84, align 8
  %87 = tail call ptr @malloc(i32 24)
  store ptr %86, ptr %87, align 8
  %memberidx1.i = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  store i64 %85, ptr %memberidx1.i, align 4
  %memberidx2.i30 = getelementptr inbounds %String, ptr %87, i64 0, i32 2
  store i64 %85, ptr %memberidx2.i30, align 4
  tail call void @free(ptr %73)
  tail call void @free(ptr %80)
  %88 = load i64, ptr %20, align 4
  %89 = icmp eq i64 %88, 0
  %90 = load ptr, ptr %0, align 8
  %91 = trunc i64 %85 to i32
  %92 = add i32 %91, 1
  %93 = call ptr @malloc(i32 %92)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %93, ptr align 8 %86, i64 %85, i1 false)
  %94 = getelementptr inbounds i8, ptr %93, i64 %85
  store i8 0, ptr %94, align 1
  br i1 %89, label %if.entry, label %else

for.end:                                          ; preds = %MapIterator_String_PropId__next.exit, %MapIterator_String_PropId__next.exit49
  tail call void @free(ptr nonnull %6)
  ret void

if.entry:                                         ; preds = %is_object.exit
  %95 = call ptr @LLVMAddFunction(ptr %90, ptr %93, ptr %68)
  br label %ifend

else:                                             ; preds = %is_object.exit
  %96 = call ptr @LLVMAddGlobal(ptr %90, ptr %68, ptr %93)
  %97 = load ptr, ptr %memberidx8, align 8
  %98 = load i64, ptr %memberidx2.i40, align 4
  %99 = load ptr, ptr %97, align 8
  %100 = getelementptr inbounds ptr, ptr %99, i64 %98
  %101 = load ptr, ptr %100, align 8
  %memberidx10 = getelementptr inbounds %ClassField, ptr %101, i64 0, i32 6
  %102 = load ptr, ptr %memberidx10, align 8
  %103 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr null, ptr %102)
  call void @LLVMSetInitializer(ptr %96, ptr %103)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %static_prop_value.0 = phi ptr [ %95, %if.entry ], [ %96, %else ]
  %104 = load ptr, ptr %memberidx11, align 8
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %104, ptr nonnull %37, ptr %static_prop_value.0)
  %105 = add nsw i64 %19, -1
  store i64 %105, ptr %memberidx2.i.i53, align 4
  %106 = icmp sgt i64 %19, 0
  br i1 %106, label %while.entry.i, label %MapIterator_String_PropId__next.exit

while.entry.i:                                    ; preds = %ifend, %ifend.i
  %107 = phi i64 [ %110, %ifend.i ], [ %105, %ifend ]
  %108 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i.lcssa64, %ifend ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %108, i64 1
  %109 = load ptr, ptr %108, align 8
  %.not.i = icmp eq ptr %109, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_PropId__next.exit

ifend.i:                                          ; preds = %while.entry.i
  %110 = add nsw i64 %107, -1
  store i64 %110, ptr %memberidx2.i.i53, align 4
  %.not = icmp eq i64 %107, 0
  br i1 %.not, label %MapIterator_String_PropId__next.exit, label %while.entry.i

MapIterator_String_PropId__next.exit:             ; preds = %while.entry.i, %ifend.i, %ifend
  %111 = phi i64 [ %105, %ifend ], [ %107, %while.entry.i ], [ -1, %ifend.i ]
  %incdec.ptr.i.lcssa63 = phi ptr [ %incdec.ptr.i.lcssa64, %ifend ], [ %incdec.ptr.i, %ifend.i ], [ %incdec.ptr.i, %while.entry.i ]
  %storemerge = icmp slt i64 %storemerge5760.in, 2
  br i1 %storemerge, label %for.end, label %for.body
}

define internal fastcc void @CodeGen_codegen_function(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %memberidx = getelementptr inbounds %Function, ptr %1, i64 0, i32 1
  %5 = load ptr, ptr %memberidx, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx.i, align 4
  %7 = trunc i64 %6 to i32
  %8 = add i32 %7, 1
  %9 = tail call ptr @malloc(i32 %8)
  %10 = load ptr, ptr %5, align 8
  %11 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %10, i64 %11, i1 false)
  %12 = getelementptr inbounds i8, ptr %9, i64 %11
  store i8 0, ptr %12, align 1
  %13 = load ptr, ptr %0, align 8
  %memberidx2 = getelementptr inbounds %Function, ptr %1, i64 0, i32 4
  %14 = load ptr, ptr %memberidx2, align 8
  %15 = tail call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %14, i1 false)
  %16 = tail call ptr @LLVMAddFunction(ptr %13, ptr %9, ptr %15)
  %17 = load ptr, ptr %1, align 8
  %memberidx.i40 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %18 = load ptr, ptr %memberidx.i40, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %17, i64 0, i32 1
  %19 = load i64, ptr %memberidx.i.i, align 4
  %20 = load i64, ptr %17, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %17, i64 0, i32 2
  %21 = load i64, ptr %memberidx2.i.i, align 4
  %22 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %19, i64 %20, i64 %21)
  %23 = load ptr, ptr %4, align 8
  %24 = call ptr @malloc(i32 24)
  store ptr %23, ptr %24, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %24, i64 0, i32 1
  store i64 %22, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %24, i64 0, i32 2
  store i64 %22, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %18, ptr nonnull %24, ptr %16)
  %memberidx4 = getelementptr inbounds %Function, ptr %1, i64 0, i32 6
  %25 = load i1, ptr %memberidx4, align 1
  br i1 %25, label %if.entry, label %ifend

common.ret:                                       ; preds = %CodeGen_codegen_block.exit, %if.entry
  ret void

if.entry:                                         ; preds = %2
  call void @LLVMSetLinkage(ptr %16, i64 0)
  br label %common.ret

ifend:                                            ; preds = %2
  %26 = call ptr @LLVMCreateBuilder()
  %27 = call ptr @LLVMAppendBasicBlock(ptr %16, ptr nonnull @80)
  call void @LLVMPositionBuilderAtEnd(ptr %26, ptr %27)
  %memberidx5 = getelementptr inbounds %Function, ptr %1, i64 0, i32 5
  %28 = load ptr, ptr %memberidx5, align 8
  call fastcc void @CodeGen_codegen_vars_alloc_funtion_scope(ptr nonnull %0, ptr %26, ptr %28)
  %memberidx6 = getelementptr inbounds %Function, ptr %1, i64 0, i32 2
  %29 = load ptr, ptr %memberidx6, align 8
  %memberidx757 = getelementptr inbounds %Array_FunctionArg_, ptr %29, i64 0, i32 1
  %30 = load i64, ptr %memberidx757, align 4
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %for.body, label %for.end

for.body:                                         ; preds = %ifend, %Map_String_LLVMValueRef____getitem__.exit
  %32 = phi ptr [ %68, %Map_String_LLVMValueRef____getitem__.exit ], [ %29, %ifend ]
  %i.058 = phi i64 [ %67, %Map_String_LLVMValueRef____getitem__.exit ], [ 0, %ifend ]
  %33 = load ptr, ptr %32, align 8
  %34 = getelementptr inbounds ptr, ptr %33, i64 %i.058
  %35 = load ptr, ptr %34, align 8
  %memberidx9 = getelementptr inbounds %FunctionArg, ptr %35, i64 0, i32 4
  %36 = load ptr, ptr %memberidx9, align 8
  %37 = load ptr, ptr %memberidx.i40, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %memberidx.i.i42 = getelementptr inbounds %VarId, ptr %36, i64 0, i32 1
  %38 = load i64, ptr %memberidx.i.i42, align 4
  %39 = load i64, ptr %36, align 4
  %memberidx2.i.i43 = getelementptr inbounds %VarId, ptr %36, i64 0, i32 2
  %40 = load i64, ptr %memberidx2.i.i43, align 4
  %41 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %38, i64 %39, i64 %40)
  %42 = load ptr, ptr %3, align 8
  %43 = call ptr @malloc(i32 24)
  store ptr %42, ptr %43, align 8
  %memberidx1.i.i.i44 = getelementptr inbounds %String, ptr %43, i64 0, i32 1
  store i64 %41, ptr %memberidx1.i.i.i44, align 4
  %memberidx2.i.i.i45 = getelementptr inbounds %String, ptr %43, i64 0, i32 2
  store i64 %41, ptr %memberidx2.i.i.i45, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %44 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %43)
  %memberidx.i46 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %37, i64 0, i32 1
  %45 = load i64, ptr %memberidx.i46, align 4
  %46 = urem i64 %44, %45
  %47 = load ptr, ptr %37, align 8
  %48 = getelementptr inbounds ptr, ptr %47, i64 %46
  %49 = load ptr, ptr %48, align 8
  %.not.i = icmp eq ptr %49, null
  br i1 %.not.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

while.entry.i:                                    ; preds = %for.body, %else.i
  %50 = phi ptr [ %58, %else.i ], [ %47, %for.body ]
  %51 = phi i64 [ %59, %else.i ], [ %45, %for.body ]
  %52 = phi ptr [ %63, %else.i ], [ %49, %for.body ]
  %hash.0.i = phi i64 [ %61, %else.i ], [ %46, %for.body ]
  %53 = load ptr, ptr %52, align 8
  %memberidx.i.i47 = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  %54 = load i64, ptr %memberidx.i.i47, align 4
  %.not.i.i = icmp eq i64 %54, %41
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %55 = load ptr, ptr %53, align 8
  %56 = call i64 @memcmp(ptr %55, ptr %42, i64 %41)
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i46, align 4
  %.pre59 = load ptr, ptr %37, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre60.pre = load ptr, ptr %37, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre60.pre, i64 %hash.0.i
  %.pre61.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre61.pre, null
  br i1 %.not25.i, label %Map_String_LLVMValueRef____getitem__.exit, label %if.entry7.i

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %58 = phi ptr [ %.pre59, %ifend.i.i.else.i_crit_edge ], [ %50, %while.entry.i ]
  %59 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %51, %while.entry.i ]
  %60 = add nuw i64 %hash.0.i, 1
  %61 = urem i64 %60, %59
  %62 = getelementptr inbounds ptr, ptr %58, i64 %61
  %63 = load ptr, ptr %62, align 8
  %.not26.i = icmp eq ptr %63, null
  br i1 %.not26.i, label %Map_String_LLVMValueRef____getitem__.exit, label %while.entry.i

if.entry7.i:                                      ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre61.pre, i64 0, i32 1
  %64 = load ptr, ptr %memberidx11.i, align 8
  br label %Map_String_LLVMValueRef____getitem__.exit

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %else.i, %for.body, %while.end.i, %if.entry7.i
  %common.ret.op.i = phi ptr [ %64, %if.entry7.i ], [ null, %while.end.i ], [ null, %for.body ], [ null, %else.i ]
  %65 = call ptr @LLVMGetParam(ptr %16, i64 %i.058)
  %66 = call ptr @LLVMBuildStore(ptr %26, ptr %65, ptr %common.ret.op.i)
  %67 = add nuw nsw i64 %i.058, 1
  %68 = load ptr, ptr %memberidx6, align 8
  %memberidx7 = getelementptr inbounds %Array_FunctionArg_, ptr %68, i64 0, i32 1
  %69 = load i64, ptr %memberidx7, align 4
  %70 = icmp slt i64 %67, %69
  br i1 %70, label %for.body, label %for.end

for.end:                                          ; preds = %Map_String_LLVMValueRef____getitem__.exit, %ifend
  %memberidx10 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %71 = load ptr, ptr %memberidx10, align 8
  store ptr %16, ptr %memberidx10, align 8
  %memberidx12 = getelementptr inbounds %Function, ptr %1, i64 0, i32 3
  %72 = load ptr, ptr %memberidx12, align 8
  %memberidx.i49 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 5
  %73 = load i1, ptr %memberidx.i49, align 1
  store i1 false, ptr %memberidx.i49, align 1
  %74 = load ptr, ptr %72, align 8
  %75 = call ptr @malloc(i32 25)
  %76 = load ptr, ptr %74, align 8
  %memberidx1.i.i50 = getelementptr inbounds %Array_Statement_, ptr %74, i64 0, i32 1
  %77 = load i64, ptr %memberidx1.i.i50, align 4
  store i1 false, ptr %75, align 1
  %memberidx1.i.i.i51 = getelementptr inbounds %ArrayIterator_Statement_, ptr %75, i64 0, i32 1
  %memberidx2.i.i.i52 = getelementptr inbounds %ArrayIterator_Statement_, ptr %75, i64 0, i32 3
  store ptr %76, ptr %memberidx2.i.i.i52, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Statement_, ptr %75, i64 0, i32 2
  store i64 %77, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i51, align 4
  %78 = icmp slt i64 %77, 1
  br i1 %78, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.end, %for.body.i
  %79 = phi i64 [ %80, %for.body.i ], [ 1, %for.end ]
  %statement.0.i56.in = phi ptr [ %81, %for.body.i ], [ %76, %for.end ]
  %statement.0.i56 = load ptr, ptr %statement.0.i56.in, align 8
  call fastcc void @CodeGen_codegen_statement(ptr nonnull %0, ptr %26, ptr %statement.0.i56)
  %80 = add nuw nsw i64 %79, 1
  store i64 %80, ptr %memberidx1.i.i.i51, align 4
  %81 = getelementptr inbounds ptr, ptr %76, i64 %79
  %.not = icmp slt i64 %79, %77
  br i1 %.not, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %for.end
  call void @free(ptr nonnull %75)
  %memberidx4.i = getelementptr inbounds %Block, ptr %72, i64 0, i32 4
  %82 = load ptr, ptr %memberidx4.i, align 8
  %.not.i54 = icmp eq ptr %82, null
  br i1 %.not.i54, label %CodeGen_codegen_block.exit, label %if.entry.i

if.entry.i:                                       ; preds = %for.end.i
  %83 = call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %26, ptr nonnull %82)
  br label %CodeGen_codegen_block.exit

CodeGen_codegen_block.exit:                       ; preds = %for.end.i, %if.entry.i
  store i1 %73, ptr %memberidx.i49, align 1
  call void @LLVMDisposeBuilder(ptr %26)
  store ptr %71, ptr %memberidx10, align 8
  br label %common.ret
}

define internal fastcc void @CodeGen_declare_class_props(ptr nocapture %0, ptr nocapture readonly %1, ptr nocapture readonly %2, ptr nocapture %3) unnamed_addr {
for.entry:
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = tail call ptr @malloc(i32 24)
  %memberidx.i = getelementptr inbounds %Array_LLVMTypeRef_, ptr %6, i64 0, i32 1
  %memberidx1.i = getelementptr inbounds %Array_LLVMTypeRef_, ptr %6, i64 0, i32 2
  store i64 8, ptr %memberidx1.i, align 4
  %7 = tail call ptr @malloc(i32 64)
  store ptr %7, ptr %6, align 8
  store i64 0, ptr %memberidx.i, align 4
  %memberidx2 = getelementptr inbounds %Class, ptr %2, i64 0, i32 6
  %8 = load ptr, ptr %memberidx2, align 8
  %9 = tail call ptr @malloc(i32 25)
  %10 = load ptr, ptr %8, align 8
  %memberidx1.i61 = getelementptr inbounds %Map_String_PropId_, ptr %8, i64 0, i32 1
  %11 = load i64, ptr %memberidx1.i61, align 4
  %memberidx2.i = getelementptr inbounds %Map_String_PropId_, ptr %8, i64 0, i32 2
  %12 = load i64, ptr %memberidx2.i, align 4
  store i1 false, ptr %9, align 1
  %memberidx1.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %9, i64 0, i32 1
  store ptr %10, ptr %memberidx1.i.i, align 8
  %memberidx2.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %9, i64 0, i32 2
  %memberidx3.i.i = getelementptr inbounds %MapIterator_String_PropId_, ptr %9, i64 0, i32 3
  store i64 %12, ptr %memberidx3.i.i, align 4
  %13 = add nsw i64 %11, -1
  store i64 %13, ptr %memberidx2.i.i, align 4
  %14 = icmp sgt i64 %11, 0
  br i1 %14, label %while.entry.i, label %MapIterator_String_PropId__next.exit

while.entry.i:                                    ; preds = %for.entry, %ifend.i
  %15 = phi i64 [ %18, %ifend.i ], [ %13, %for.entry ]
  %16 = phi ptr [ %incdec.ptr.i, %ifend.i ], [ %10, %for.entry ]
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %16, i64 1
  %17 = load ptr, ptr %16, align 8
  %.not.i = icmp eq ptr %17, null
  br i1 %.not.i, label %ifend.i, label %MapIterator_String_PropId__next.exit.loopexit

ifend.i:                                          ; preds = %while.entry.i
  %18 = add nsw i64 %15, -1
  store i64 %18, ptr %memberidx2.i.i, align 4
  %19 = icmp sgt i64 %15, 0
  br i1 %19, label %while.entry.i, label %MapIterator_String_PropId__next.exit.loopexit

MapIterator_String_PropId__next.exit.loopexit:    ; preds = %ifend.i, %while.entry.i
  store ptr %incdec.ptr.i, ptr %memberidx1.i.i, align 8
  br label %MapIterator_String_PropId__next.exit

MapIterator_String_PropId__next.exit:             ; preds = %MapIterator_String_PropId__next.exit.loopexit, %for.entry
  %memberidx1.i.i.promoted116 = phi ptr [ %incdec.ptr.i, %MapIterator_String_PropId__next.exit.loopexit ], [ %10, %for.entry ]
  %storemerge113 = icmp slt i64 %12, 1
  br i1 %storemerge113, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %MapIterator_String_PropId__next.exit
  %memberidx6 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %memberidx9 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 2
  %memberidx21 = getelementptr inbounds %Class, ptr %2, i64 0, i32 5
  %memberidx27 = getelementptr inbounds %Class, ptr %2, i64 0, i32 1
  %memberidx28 = getelementptr inbounds %CGClassType, ptr %1, i64 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %MapIterator_String_PropId__next.exit101
  %20 = phi i64 [ 0, %for.body.lr.ph ], [ %135, %MapIterator_String_PropId__next.exit101 ]
  %21 = phi ptr [ %7, %for.body.lr.ph ], [ %136, %MapIterator_String_PropId__next.exit101 ]
  %.promoted = phi ptr [ %7, %for.body.lr.ph ], [ %.promoted124, %MapIterator_String_PropId__next.exit101 ]
  %memberidx1.i.promoted = phi i64 [ 8, %for.body.lr.ph ], [ %137, %MapIterator_String_PropId__next.exit101 ]
  %incdec.ptr.i95.lcssa118 = phi ptr [ %memberidx1.i.i.promoted116, %for.body.lr.ph ], [ %incdec.ptr.i95.lcssa117, %MapIterator_String_PropId__next.exit101 ]
  %storemerge110114.in = phi i64 [ %12, %for.body.lr.ph ], [ %storemerge110114, %MapIterator_String_PropId__next.exit101 ]
  %storemerge110114 = add nsw i64 %storemerge110114.in, -1
  %entry.0.in = getelementptr inbounds ptr, ptr %incdec.ptr.i95.lcssa118, i64 -1
  %entry.0 = load ptr, ptr %entry.0.in, align 8
  %memberidx4 = getelementptr inbounds %MapEntry_String_PropId_, ptr %entry.0, i64 0, i32 1
  %22 = load ptr, ptr %memberidx4, align 8
  %23 = load ptr, ptr %entry.0, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %memberidx.i64 = getelementptr inbounds %PropId, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %memberidx.i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %25 = load i64, ptr %24, align 4
  %memberidx1.i.i65 = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 1
  %26 = load i64, ptr %memberidx1.i.i65, align 4
  %memberidx2.i.i66 = getelementptr inbounds %TypeId, ptr %24, i64 0, i32 2
  %27 = load i64, ptr %memberidx2.i.i66, align 4
  %28 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %25, i64 %26, i64 %27)
  %29 = load ptr, ptr %4, align 8
  %30 = call ptr @malloc(i32 24)
  store ptr %29, ptr %30, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 1
  store i64 %28, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %30, i64 0, i32 2
  store i64 %28, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %31 = trunc i64 %28 to i32
  %32 = add i32 %31, 1
  %33 = call ptr @malloc(i32 %32)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %29, i64 %28, i1 false)
  %34 = getelementptr inbounds i8, ptr %33, i64 %28
  store i8 0, ptr %34, align 1
  %35 = load i64, ptr %22, align 4
  %memberidx2.i67 = getelementptr inbounds %PropId, ptr %22, i64 0, i32 2
  %36 = load i64, ptr %memberidx2.i67, align 4
  %37 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @259, ptr %33, i64 %35, i64 %36)
  %38 = load ptr, ptr %5, align 8
  %39 = call ptr @malloc(i32 24)
  store ptr %38, ptr %39, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %39, i64 0, i32 1
  store i64 %37, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %39, i64 0, i32 2
  store i64 %37, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %33)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %40 = load ptr, ptr %memberidx6, align 8
  %41 = load ptr, ptr %memberidx.i64, align 8
  %42 = load ptr, ptr %40, align 8
  %43 = load i64, ptr %41, align 4
  %44 = load ptr, ptr %42, align 8
  %45 = getelementptr inbounds ptr, ptr %44, i64 %43
  %46 = load ptr, ptr %45, align 8
  %memberidx2.i.i.i69 = getelementptr inbounds %Module, ptr %46, i64 0, i32 3
  %47 = load ptr, ptr %memberidx2.i.i.i69, align 8
  %memberidx3.i.i.i = getelementptr inbounds %TypeId, ptr %41, i64 0, i32 2
  %48 = load i64, ptr %memberidx3.i.i.i, align 4
  %49 = load ptr, ptr %47, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 %48
  %51 = load ptr, ptr %50, align 8
  %52 = load i64, ptr %22, align 4
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %get_class_prop_type.exit.thread, label %get_class_prop_type.exit

get_class_prop_type.exit.thread:                  ; preds = %for.body
  %memberidx1.i70 = getelementptr inbounds %Class, ptr %51, i64 0, i32 5
  %54 = load ptr, ptr %memberidx1.i70, align 8
  %55 = load i64, ptr %memberidx2.i67, align 4
  %56 = load ptr, ptr %54, align 8
  %57 = getelementptr inbounds ptr, ptr %56, i64 %55
  %58 = load ptr, ptr %57, align 8
  %memberidx3.i = getelementptr inbounds %ClassMethod, ptr %58, i64 0, i32 4
  %common.ret.op.i108 = load ptr, ptr %memberidx3.i, align 8
  br label %else

get_class_prop_type.exit:                         ; preds = %for.body
  %memberidx4.i = getelementptr inbounds %Class, ptr %51, i64 0, i32 4
  %59 = load ptr, ptr %memberidx4.i, align 8
  %60 = load i64, ptr %memberidx2.i67, align 4
  %61 = load ptr, ptr %59, align 8
  %62 = getelementptr inbounds ptr, ptr %61, i64 %60
  %63 = load ptr, ptr %62, align 8
  %memberidx6.i = getelementptr inbounds %ClassField, ptr %63, i64 0, i32 4
  %common.ret.op.i = load ptr, ptr %memberidx6.i, align 8
  %64 = icmp eq i64 %52, 1
  br i1 %64, label %get_field_offset.exit, label %else

for.end:                                          ; preds = %MapIterator_String_PropId__next.exit101, %MapIterator_String_PropId__next.exit
  %65 = phi ptr [ %7, %MapIterator_String_PropId__next.exit ], [ %136, %MapIterator_String_PropId__next.exit101 ]
  %66 = phi i64 [ 0, %MapIterator_String_PropId__next.exit ], [ %135, %MapIterator_String_PropId__next.exit101 ]
  tail call void @free(ptr nonnull %9)
  %memberidx.i73 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 1
  %67 = load i64, ptr %memberidx.i73, align 4
  %68 = add i64 %67, 1
  %69 = add i64 %68, %66
  %memberidx.i.i75 = getelementptr inbounds %Array_LLVMTypeRef_, ptr %3, i64 0, i32 2
  %70 = load i64, ptr %memberidx.i.i75, align 4
  %71 = icmp slt i64 %70, %69
  %.pre128 = load ptr, ptr %3, align 8
  br i1 %71, label %while.entry.i.i, label %Array_LLVMTypeRef____adda__.exit

while.entry.i.i:                                  ; preds = %for.end, %while.entry.i.i
  %72 = phi ptr [ %76, %while.entry.i.i ], [ %.pre128, %for.end ]
  %73 = phi i64 [ %77, %while.entry.i.i ], [ %70, %for.end ]
  %74 = shl nuw i64 %73, 1
  store i64 %74, ptr %memberidx.i.i75, align 4
  %75 = shl i64 %73, 4
  %76 = call ptr @realloc(ptr %72, i64 %75)
  store ptr %76, ptr %3, align 8
  %77 = load i64, ptr %memberidx.i.i75, align 4
  %78 = icmp slt i64 %77, %69
  br i1 %78, label %while.entry.i.i, label %Array_LLVMTypeRef____adda__.exit.loopexit

Array_LLVMTypeRef____adda__.exit.loopexit:        ; preds = %while.entry.i.i
  %.pre130 = load i64, ptr %memberidx.i73, align 4
  br label %Array_LLVMTypeRef____adda__.exit

Array_LLVMTypeRef____adda__.exit:                 ; preds = %for.end, %Array_LLVMTypeRef____adda__.exit.loopexit
  %79 = phi i64 [ %.pre130, %Array_LLVMTypeRef____adda__.exit.loopexit ], [ %67, %for.end ]
  %80 = phi ptr [ %76, %Array_LLVMTypeRef____adda__.exit.loopexit ], [ %.pre128, %for.end ]
  %81 = getelementptr inbounds ptr, ptr %80, i64 %79
  %82 = shl i64 %66, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %81, ptr align 8 %65, i64 %82, i1 false)
  %83 = load i64, ptr %memberidx.i73, align 4
  %84 = add nuw i64 %83, %66
  store i64 %84, ptr %memberidx.i73, align 4
  call void @free(ptr %65)
  tail call void @free(ptr %6)
  ret void

get_field_offset.exit:                            ; preds = %get_class_prop_type.exit
  %memberidx3.i82 = getelementptr inbounds %ClassField, ptr %63, i64 0, i32 5
  %85 = load i64, ptr %memberidx3.i82, align 4
  %86 = call fastcc ptr @CodeGen_codegen_type(ptr nonnull %0, ptr %common.ret.op.i, i1 true)
  %87 = load ptr, ptr %memberidx9, align 8
  call fastcc void @Map_String_uint____setitem__(ptr %87, ptr nonnull %39, i64 %85)
  %88 = add nuw i64 %85, 1
  %89 = icmp slt i64 %memberidx1.i.promoted, %88
  br i1 %89, label %while.entry.i85, label %Array_LLVMTypeRef__ensure_capacity.exit

while.entry.i85:                                  ; preds = %get_field_offset.exit, %while.entry.i85
  %90 = phi ptr [ %94, %while.entry.i85 ], [ %.promoted, %get_field_offset.exit ]
  %91 = phi i64 [ %92, %while.entry.i85 ], [ %memberidx1.i.promoted, %get_field_offset.exit ]
  %92 = shl nuw i64 %91, 1
  %93 = shl i64 %91, 4
  %94 = call ptr @realloc(ptr %90, i64 %93)
  %95 = icmp slt i64 %92, %88
  br i1 %95, label %while.entry.i85, label %Array_LLVMTypeRef__ensure_capacity.exit.loopexit

Array_LLVMTypeRef__ensure_capacity.exit.loopexit: ; preds = %while.entry.i85
  store i64 %92, ptr %memberidx1.i, align 4
  store ptr %94, ptr %6, align 8
  br label %Array_LLVMTypeRef__ensure_capacity.exit

Array_LLVMTypeRef__ensure_capacity.exit:          ; preds = %Array_LLVMTypeRef__ensure_capacity.exit.loopexit, %get_field_offset.exit
  %96 = phi ptr [ %94, %Array_LLVMTypeRef__ensure_capacity.exit.loopexit ], [ %21, %get_field_offset.exit ]
  %97 = phi i64 [ %92, %Array_LLVMTypeRef__ensure_capacity.exit.loopexit ], [ %memberidx1.i.promoted, %get_field_offset.exit ]
  %98 = getelementptr inbounds ptr, ptr %96, i64 %85
  store ptr %86, ptr %98, align 8
  %99 = load i64, ptr %memberidx.i, align 4
  %100 = icmp sgt i64 %88, %99
  br i1 %100, label %if.entry11, label %ifend

else:                                             ; preds = %get_class_prop_type.exit.thread, %get_class_prop_type.exit
  %common.ret.op.i109 = phi ptr [ %common.ret.op.i108, %get_class_prop_type.exit.thread ], [ %common.ret.op.i, %get_class_prop_type.exit ]
  %101 = tail call ptr @malloc(i32 24)
  %memberidx.i86 = getelementptr inbounds %Array_Type_, ptr %101, i64 0, i32 1
  store i64 0, ptr %memberidx.i86, align 4
  %memberidx1.i87 = getelementptr inbounds %Array_Type_, ptr %101, i64 0, i32 2
  store i64 8, ptr %memberidx1.i87, align 4
  %102 = call ptr @malloc(i32 64)
  store ptr %102, ptr %101, align 8
  %103 = tail call ptr @malloc(i32 16)
  %104 = load ptr, ptr %2, align 8
  store i64 11, ptr %103, align 4
  %memberidx.i88 = getelementptr inbounds %ObjectType, ptr %103, i64 0, i32 1
  store ptr %104, ptr %memberidx.i88, align 8
  store ptr %103, ptr %102, align 8
  store i64 1, ptr %memberidx.i86, align 4
  %memberidx18 = getelementptr inbounds %FunctionType, ptr %common.ret.op.i109, i64 0, i32 1
  %105 = load ptr, ptr %memberidx18, align 8
  %memberidx1.i90 = getelementptr inbounds %Array_Type_, ptr %105, i64 0, i32 1
  %106 = load i64, ptr %memberidx1.i90, align 4
  %107 = add nuw i64 %106, 2
  %108 = load i64, ptr %memberidx1.i87, align 4
  %109 = icmp slt i64 %108, %107
  %.pre = load ptr, ptr %101, align 8
  br i1 %109, label %while.entry.i.i92, label %Array_Type____adda__.exit

while.entry.i.i92:                                ; preds = %else, %while.entry.i.i92
  %110 = phi ptr [ %114, %while.entry.i.i92 ], [ %.pre, %else ]
  %111 = phi i64 [ %115, %while.entry.i.i92 ], [ %108, %else ]
  %112 = shl nuw i64 %111, 1
  store i64 %112, ptr %memberidx1.i87, align 4
  %113 = shl i64 %111, 4
  %114 = call ptr @realloc(ptr %110, i64 %113)
  store ptr %114, ptr %101, align 8
  %115 = load i64, ptr %memberidx1.i87, align 4
  %116 = icmp slt i64 %115, %107
  br i1 %116, label %while.entry.i.i92, label %Array_Type____adda__.exit.loopexit

Array_Type____adda__.exit.loopexit:               ; preds = %while.entry.i.i92
  %.pre126 = load i64, ptr %memberidx.i86, align 4
  %.pre127 = load i64, ptr %memberidx1.i90, align 4
  br label %Array_Type____adda__.exit

Array_Type____adda__.exit:                        ; preds = %else, %Array_Type____adda__.exit.loopexit
  %117 = phi i64 [ %.pre127, %Array_Type____adda__.exit.loopexit ], [ %106, %else ]
  %118 = phi i64 [ %.pre126, %Array_Type____adda__.exit.loopexit ], [ 1, %else ]
  %119 = phi ptr [ %114, %Array_Type____adda__.exit.loopexit ], [ %.pre, %else ]
  %120 = getelementptr inbounds ptr, ptr %119, i64 %118
  %121 = load ptr, ptr %105, align 8
  %122 = shl i64 %117, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %120, ptr align 8 %121, i64 %122, i1 false)
  %123 = load i64, ptr %memberidx.i86, align 4
  %124 = load i64, ptr %memberidx1.i90, align 4
  %125 = add nuw i64 %124, %123
  store i64 %125, ptr %memberidx.i86, align 4
  %126 = load ptr, ptr %memberidx18, align 8
  %127 = load ptr, ptr %126, align 8
  call void @free(ptr %127)
  tail call void @free(ptr %126)
  store ptr %101, ptr %memberidx18, align 8
  %128 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %common.ret.op.i109, i1 false)
  %129 = load ptr, ptr %memberidx21, align 8
  %130 = load i64, ptr %memberidx2.i67, align 4
  %131 = load ptr, ptr %129, align 8
  %132 = getelementptr inbounds ptr, ptr %131, i64 %130
  %133 = load ptr, ptr %132, align 8
  %memberidx23 = getelementptr inbounds %ClassMethod, ptr %133, i64 0, i32 7
  %134 = load i1, ptr %memberidx23, align 1
  br i1 %134, label %ifend26, label %if.entry24

ifend:                                            ; preds = %if.entry11, %Array_LLVMTypeRef__ensure_capacity.exit, %ifend26
  %135 = phi i64 [ %88, %if.entry11 ], [ %99, %Array_LLVMTypeRef__ensure_capacity.exit ], [ %20, %ifend26 ]
  %136 = phi ptr [ %96, %if.entry11 ], [ %96, %Array_LLVMTypeRef__ensure_capacity.exit ], [ %21, %ifend26 ]
  %.promoted124 = phi ptr [ %96, %if.entry11 ], [ %96, %Array_LLVMTypeRef__ensure_capacity.exit ], [ %.promoted, %ifend26 ]
  %137 = phi i64 [ %97, %if.entry11 ], [ %97, %Array_LLVMTypeRef__ensure_capacity.exit ], [ %memberidx1.i.promoted, %ifend26 ]
  %138 = load i64, ptr %memberidx2.i.i, align 4
  %139 = add nsw i64 %138, -1
  store i64 %139, ptr %memberidx2.i.i, align 4
  %140 = icmp sgt i64 %138, 0
  br i1 %140, label %while.entry.i97, label %MapIterator_String_PropId__next.exit101

while.entry.i97:                                  ; preds = %ifend, %ifend.i100
  %141 = phi i64 [ %144, %ifend.i100 ], [ %139, %ifend ]
  %142 = phi ptr [ %incdec.ptr.i95, %ifend.i100 ], [ %incdec.ptr.i95.lcssa118, %ifend ]
  %incdec.ptr.i95 = getelementptr inbounds ptr, ptr %142, i64 1
  %143 = load ptr, ptr %142, align 8
  %.not.i96 = icmp eq ptr %143, null
  br i1 %.not.i96, label %ifend.i100, label %MapIterator_String_PropId__next.exit101

ifend.i100:                                       ; preds = %while.entry.i97
  %144 = add nsw i64 %141, -1
  store i64 %144, ptr %memberidx2.i.i, align 4
  %145 = icmp sgt i64 %141, 0
  br i1 %145, label %while.entry.i97, label %MapIterator_String_PropId__next.exit101

MapIterator_String_PropId__next.exit101:          ; preds = %while.entry.i97, %ifend.i100, %ifend
  %incdec.ptr.i95.lcssa117 = phi ptr [ %incdec.ptr.i95.lcssa118, %ifend ], [ %incdec.ptr.i95, %ifend.i100 ], [ %incdec.ptr.i95, %while.entry.i97 ]
  %storemerge = icmp slt i64 %storemerge110114.in, 2
  br i1 %storemerge, label %for.end, label %for.body

if.entry11:                                       ; preds = %Array_LLVMTypeRef__ensure_capacity.exit
  store i64 %88, ptr %memberidx.i, align 4
  br label %ifend

if.entry24:                                       ; preds = %Array_Type____adda__.exit
  %146 = load ptr, ptr %memberidx27, align 8
  %memberidx.i102 = getelementptr inbounds %String, ptr %146, i64 0, i32 1
  %147 = load i64, ptr %memberidx.i102, align 4
  %148 = trunc i64 %147 to i32
  %149 = add i32 %148, 1
  %150 = call ptr @malloc(i32 %149)
  %151 = load ptr, ptr %146, align 8
  %152 = load i64, ptr %memberidx.i102, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %150, ptr align 8 %151, i64 %152, i1 false)
  %153 = getelementptr inbounds i8, ptr %150, i64 %152
  store i8 0, ptr %153, align 1
  %memberidx.i103 = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  %154 = load i64, ptr %memberidx.i103, align 4
  %155 = trunc i64 %154 to i32
  %156 = add i32 %155, 1
  %157 = call ptr @malloc(i32 %156)
  %158 = load ptr, ptr %23, align 8
  %159 = load i64, ptr %memberidx.i103, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %157, ptr align 8 %158, i64 %159, i1 false)
  %160 = getelementptr inbounds i8, ptr %157, i64 %159
  store i8 0, ptr %160, align 1
  %161 = alloca ptr, align 8
  %162 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %161, ptr nonnull @104, ptr %150, ptr %157)
  %163 = load ptr, ptr %161, align 8
  %164 = tail call ptr @malloc(i32 24)
  store ptr %163, ptr %164, align 8
  %memberidx1.i104 = getelementptr inbounds %String, ptr %164, i64 0, i32 1
  store i64 %162, ptr %memberidx1.i104, align 4
  %memberidx2.i105 = getelementptr inbounds %String, ptr %164, i64 0, i32 2
  store i64 %162, ptr %memberidx2.i105, align 4
  tail call void @free(ptr %150)
  tail call void @free(ptr %157)
  %165 = load ptr, ptr %0, align 8
  %166 = trunc i64 %162 to i32
  %167 = add i32 %166, 1
  %168 = call ptr @malloc(i32 %167)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %168, ptr align 8 %163, i64 %162, i1 false)
  %169 = getelementptr inbounds i8, ptr %168, i64 %162
  store i8 0, ptr %169, align 1
  %170 = call ptr @LLVMAddFunction(ptr %165, ptr %168, ptr %128)
  br label %ifend26

ifend26:                                          ; preds = %Array_Type____adda__.exit, %if.entry24
  %llvm_method_val.0 = phi ptr [ %170, %if.entry24 ], [ null, %Array_Type____adda__.exit ]
  %171 = load ptr, ptr %memberidx28, align 8
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %171, ptr nonnull %39, ptr %llvm_method_val.0)
  br label %ifend
}

define internal fastcc ptr @CodeGen_get_or_codegen_var(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 6
  %7 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  %memberidx.i.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 1
  %8 = load i64, ptr %memberidx.i.i, align 4
  %9 = load i64, ptr %1, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %1, i64 0, i32 2
  %10 = load i64, ptr %memberidx2.i.i, align 4
  %11 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %6, ptr nonnull @243, i64 %8, i64 %9, i64 %10)
  %12 = load ptr, ptr %6, align 8
  %13 = call ptr @malloc(i32 24)
  store ptr %12, ptr %13, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 1
  store i64 %11, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %13, i64 0, i32 2
  store i64 %11, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  %14 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %13)
  %memberidx.i123 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %7, i64 0, i32 1
  %15 = load i64, ptr %memberidx.i123, align 4
  %16 = urem i64 %14, %15
  %17 = load ptr, ptr %7, align 8
  %18 = getelementptr inbounds ptr, ptr %17, i64 %16
  %19 = load ptr, ptr %18, align 8
  %.not.i = icmp eq ptr %19, null
  br i1 %.not.i, label %ifend, label %while.entry.i

while.entry.i:                                    ; preds = %2, %else.i
  %20 = phi ptr [ %28, %else.i ], [ %17, %2 ]
  %21 = phi i64 [ %29, %else.i ], [ %15, %2 ]
  %22 = phi ptr [ %33, %else.i ], [ %19, %2 ]
  %hash.0.i = phi i64 [ %31, %else.i ], [ %16, %2 ]
  %23 = load ptr, ptr %22, align 8
  %memberidx.i.i124 = getelementptr inbounds %String, ptr %23, i64 0, i32 1
  %24 = load i64, ptr %memberidx.i.i124, align 4
  %.not.i.i = icmp eq i64 %24, %11
  br i1 %.not.i.i, label %ifend.i.i, label %else.i

ifend.i.i:                                        ; preds = %while.entry.i
  %25 = load ptr, ptr %23, align 8
  %26 = call i64 @memcmp(ptr %25, ptr %12, i64 %11)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %while.end.i, label %ifend.i.i.else.i_crit_edge

ifend.i.i.else.i_crit_edge:                       ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i123, align 4
  %.pre219 = load ptr, ptr %7, align 8
  br label %else.i

while.end.i:                                      ; preds = %ifend.i.i
  %.pre220.pre = load ptr, ptr %7, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre220.pre, i64 %hash.0.i
  %.pre221.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre221.pre, null
  br i1 %.not25.i, label %ifend, label %Map_String_LLVMValueRef____getitem__.exit

else.i:                                           ; preds = %ifend.i.i.else.i_crit_edge, %while.entry.i
  %28 = phi ptr [ %.pre219, %ifend.i.i.else.i_crit_edge ], [ %20, %while.entry.i ]
  %29 = phi i64 [ %.pre, %ifend.i.i.else.i_crit_edge ], [ %21, %while.entry.i ]
  %30 = add nuw i64 %hash.0.i, 1
  %31 = urem i64 %30, %29
  %32 = getelementptr inbounds ptr, ptr %28, i64 %31
  %33 = load ptr, ptr %32, align 8
  %.not26.i = icmp eq ptr %33, null
  br i1 %.not26.i, label %ifend, label %while.entry.i

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre221.pre, i64 0, i32 1
  %34 = load ptr, ptr %memberidx11.i, align 8
  %.not = icmp eq ptr %34, null
  br i1 %.not, label %ifend, label %common.ret

common.ret:                                       ; preds = %else.i140, %else.i159, %else.i178, %if.entry48, %if.entry31, %if.entry14, %if.entry7.i181, %while.end.i176, %if.entry7.i162, %while.end.i157, %if.entry7.i143, %while.end.i138, %Map_String_LLVMValueRef____getitem__.exit, %for.end43, %ifend20
  %common.ret.op = phi ptr [ null, %ifend20 ], [ null, %for.end43 ], [ %34, %Map_String_LLVMValueRef____getitem__.exit ], [ %82, %if.entry7.i143 ], [ null, %while.end.i138 ], [ %124, %if.entry7.i162 ], [ null, %while.end.i157 ], [ %164, %if.entry7.i181 ], [ null, %while.end.i176 ], [ null, %if.entry14 ], [ null, %if.entry31 ], [ null, %if.entry48 ], [ null, %else.i178 ], [ null, %else.i159 ], [ null, %else.i140 ]
  ret ptr %common.ret.op

ifend:                                            ; preds = %else.i, %2, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %memberidx = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %35 = load ptr, ptr %memberidx, align 8
  %36 = load ptr, ptr %35, align 8
  %37 = load i64, ptr %memberidx.i.i, align 4
  %38 = load ptr, ptr %36, align 8
  %39 = getelementptr inbounds ptr, ptr %38, i64 %37
  %40 = load ptr, ptr %39, align 8
  %41 = load i64, ptr %1, align 4
  %42 = icmp eq i64 %41, 2
  br i1 %42, label %for.entry, label %ifend8

ifend8:                                           ; preds = %ifend, %for.end
  %43 = phi i64 [ %41, %ifend ], [ %.pr, %for.end ]
  %44 = icmp eq i64 %43, 1
  br i1 %44, label %for.entry21, label %ifend20

for.entry:                                        ; preds = %ifend
  %memberidx9 = getelementptr inbounds %Module, ptr %40, i64 0, i32 8
  %45 = load ptr, ptr %memberidx9, align 8
  %46 = call ptr @malloc(i32 25)
  %47 = load ptr, ptr %45, align 8
  %memberidx1.i = getelementptr inbounds %Array_ConstDeclaration_, ptr %45, i64 0, i32 1
  %48 = load i64, ptr %memberidx1.i, align 4
  store i1 false, ptr %46, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %46, i64 0, i32 1
  %memberidx2.i.i83 = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %46, i64 0, i32 3
  store ptr %47, ptr %memberidx2.i.i83, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_ConstDeclaration_, ptr %46, i64 0, i32 2
  store i64 %48, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %49 = icmp slt i64 %48, 1
  br i1 %49, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.entry
  %50 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %ifend16
  %51 = phi i64 [ 1, %for.body.lr.ph ], [ %83, %ifend16 ]
  %global_const.0209.in = phi ptr [ %47, %for.body.lr.ph ], [ %84, %ifend16 ]
  %global_const.0209 = load ptr, ptr %global_const.0209.in, align 8
  %memberidx11 = getelementptr inbounds %ConstDeclaration, ptr %global_const.0209, i64 0, i32 2
  %52 = load ptr, ptr %memberidx11, align 8
  %memberidx12 = getelementptr inbounds %VarId, ptr %52, i64 0, i32 2
  %53 = load i64, ptr %memberidx12, align 4
  %54 = icmp eq i64 %53, %50
  br i1 %54, label %if.entry14, label %ifend16

for.end:                                          ; preds = %ifend16, %for.entry
  tail call void @free(ptr nonnull %46)
  %.pr = load i64, ptr %1, align 4
  br label %ifend8

if.entry14:                                       ; preds = %for.body
  store i1 false, ptr %46, align 1
  call fastcc void @CodeGen_codegen_const_declaration(ptr %0, ptr null, ptr nonnull %global_const.0209)
  %55 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %56 = load i64, ptr %memberidx.i.i, align 4
  %57 = load i64, ptr %1, align 4
  %58 = load i64, ptr %memberidx2.i.i, align 4
  %59 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %56, i64 %57, i64 %58)
  %60 = load ptr, ptr %5, align 8
  %61 = call ptr @malloc(i32 24)
  store ptr %60, ptr %61, align 8
  %memberidx1.i.i.i88 = getelementptr inbounds %String, ptr %61, i64 0, i32 1
  store i64 %59, ptr %memberidx1.i.i.i88, align 4
  %memberidx2.i.i.i89 = getelementptr inbounds %String, ptr %61, i64 0, i32 2
  store i64 %59, ptr %memberidx2.i.i.i89, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  %62 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %61)
  %memberidx.i126 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %55, i64 0, i32 1
  %63 = load i64, ptr %memberidx.i126, align 4
  %64 = urem i64 %62, %63
  %65 = load ptr, ptr %55, align 8
  %66 = getelementptr inbounds ptr, ptr %65, i64 %64
  %67 = load ptr, ptr %66, align 8
  %.not.i127 = icmp eq ptr %67, null
  br i1 %.not.i127, label %common.ret, label %while.entry.i132

while.entry.i132:                                 ; preds = %if.entry14, %else.i140
  %68 = phi ptr [ %76, %else.i140 ], [ %65, %if.entry14 ]
  %69 = phi i64 [ %77, %else.i140 ], [ %63, %if.entry14 ]
  %70 = phi ptr [ %81, %else.i140 ], [ %67, %if.entry14 ]
  %hash.0.i128 = phi i64 [ %79, %else.i140 ], [ %64, %if.entry14 ]
  %71 = load ptr, ptr %70, align 8
  %memberidx.i.i129 = getelementptr inbounds %String, ptr %71, i64 0, i32 1
  %72 = load i64, ptr %memberidx.i.i129, align 4
  %.not.i.i131 = icmp eq i64 %72, %59
  br i1 %.not.i.i131, label %ifend.i.i133, label %else.i140

ifend.i.i133:                                     ; preds = %while.entry.i132
  %73 = load ptr, ptr %71, align 8
  %74 = call i64 @memcmp(ptr %73, ptr %60, i64 %59)
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %while.end.i138, label %ifend.i.i133.else.i140_crit_edge

ifend.i.i133.else.i140_crit_edge:                 ; preds = %ifend.i.i133
  %.pre222 = load i64, ptr %memberidx.i126, align 4
  %.pre223 = load ptr, ptr %55, align 8
  br label %else.i140

while.end.i138:                                   ; preds = %ifend.i.i133
  %.pre224.pre = load ptr, ptr %55, align 8
  %.phi.trans.insert225.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre224.pre, i64 %hash.0.i128
  %.pre226.pre = load ptr, ptr %.phi.trans.insert225.phi.trans.insert, align 8
  %.not25.i137 = icmp eq ptr %.pre226.pre, null
  br i1 %.not25.i137, label %common.ret, label %if.entry7.i143

else.i140:                                        ; preds = %ifend.i.i133.else.i140_crit_edge, %while.entry.i132
  %76 = phi ptr [ %.pre223, %ifend.i.i133.else.i140_crit_edge ], [ %68, %while.entry.i132 ]
  %77 = phi i64 [ %.pre222, %ifend.i.i133.else.i140_crit_edge ], [ %69, %while.entry.i132 ]
  %78 = add nuw i64 %hash.0.i128, 1
  %79 = urem i64 %78, %77
  %80 = getelementptr inbounds ptr, ptr %76, i64 %79
  %81 = load ptr, ptr %80, align 8
  %.not26.i139 = icmp eq ptr %81, null
  br i1 %.not26.i139, label %common.ret, label %while.entry.i132

if.entry7.i143:                                   ; preds = %while.end.i138
  %memberidx11.i142 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre226.pre, i64 0, i32 1
  %82 = load ptr, ptr %memberidx11.i142, align 8
  br label %common.ret

ifend16:                                          ; preds = %for.body
  %83 = add nuw nsw i64 %51, 1
  store i64 %83, ptr %memberidx1.i.i, align 4
  %84 = getelementptr inbounds ptr, ptr %47, i64 %51
  %.not248 = icmp slt i64 %51, %48
  br i1 %.not248, label %for.body, label %for.end

ifend20:                                          ; preds = %ifend8, %for.end26
  %85 = phi i64 [ %43, %ifend8 ], [ %.pre232, %for.end26 ]
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %for.entry38, label %common.ret

for.entry21:                                      ; preds = %ifend8
  %memberidx22 = getelementptr inbounds %Module, ptr %40, i64 0, i32 9
  %87 = load ptr, ptr %memberidx22, align 8
  %88 = call ptr @malloc(i32 25)
  %89 = load ptr, ptr %87, align 8
  %memberidx1.i93 = getelementptr inbounds %Array_VarDeclaration_, ptr %87, i64 0, i32 1
  %90 = load i64, ptr %memberidx1.i93, align 4
  store i1 false, ptr %88, align 1
  %memberidx1.i.i94 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %88, i64 0, i32 1
  %memberidx2.i.i95 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %88, i64 0, i32 3
  store ptr %89, ptr %memberidx2.i.i95, align 8
  %memberidx3.i.i96 = getelementptr inbounds %ArrayIterator_VarDeclaration_, ptr %88, i64 0, i32 2
  store i64 %90, ptr %memberidx3.i.i96, align 4
  store i64 1, ptr %memberidx1.i.i94, align 4
  %91 = icmp slt i64 %90, 1
  br i1 %91, label %for.end26, label %for.body24.lr.ph

for.body24.lr.ph:                                 ; preds = %for.entry21
  %92 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body24

for.body24:                                       ; preds = %for.body24.lr.ph, %ifend33
  %93 = phi i64 [ 1, %for.body24.lr.ph ], [ %125, %ifend33 ]
  %global_var.0204.in = phi ptr [ %89, %for.body24.lr.ph ], [ %126, %ifend33 ]
  %global_var.0204 = load ptr, ptr %global_var.0204.in, align 8
  %memberidx28 = getelementptr inbounds %VarDeclaration, ptr %global_var.0204, i64 0, i32 2
  %94 = load ptr, ptr %memberidx28, align 8
  %memberidx29 = getelementptr inbounds %VarId, ptr %94, i64 0, i32 2
  %95 = load i64, ptr %memberidx29, align 4
  %96 = icmp eq i64 %95, %92
  br i1 %96, label %if.entry31, label %ifend33

for.end26:                                        ; preds = %ifend33, %for.entry21
  tail call void @free(ptr nonnull %88)
  %.pre232 = load i64, ptr %1, align 4
  br label %ifend20

if.entry31:                                       ; preds = %for.body24
  store i1 false, ptr %88, align 1
  call fastcc void @CodeGen_codegen_var_declaration(ptr %0, ptr null, ptr nonnull %global_var.0204)
  %97 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %98 = load i64, ptr %memberidx.i.i, align 4
  %99 = load i64, ptr %1, align 4
  %100 = load i64, ptr %memberidx2.i.i, align 4
  %101 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %98, i64 %99, i64 %100)
  %102 = load ptr, ptr %4, align 8
  %103 = call ptr @malloc(i32 24)
  store ptr %102, ptr %103, align 8
  %memberidx1.i.i.i103 = getelementptr inbounds %String, ptr %103, i64 0, i32 1
  store i64 %101, ptr %memberidx1.i.i.i103, align 4
  %memberidx2.i.i.i104 = getelementptr inbounds %String, ptr %103, i64 0, i32 2
  store i64 %101, ptr %memberidx2.i.i.i104, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %104 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %103)
  %memberidx.i145 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %97, i64 0, i32 1
  %105 = load i64, ptr %memberidx.i145, align 4
  %106 = urem i64 %104, %105
  %107 = load ptr, ptr %97, align 8
  %108 = getelementptr inbounds ptr, ptr %107, i64 %106
  %109 = load ptr, ptr %108, align 8
  %.not.i146 = icmp eq ptr %109, null
  br i1 %.not.i146, label %common.ret, label %while.entry.i151

while.entry.i151:                                 ; preds = %if.entry31, %else.i159
  %110 = phi ptr [ %118, %else.i159 ], [ %107, %if.entry31 ]
  %111 = phi i64 [ %119, %else.i159 ], [ %105, %if.entry31 ]
  %112 = phi ptr [ %123, %else.i159 ], [ %109, %if.entry31 ]
  %hash.0.i147 = phi i64 [ %121, %else.i159 ], [ %106, %if.entry31 ]
  %113 = load ptr, ptr %112, align 8
  %memberidx.i.i148 = getelementptr inbounds %String, ptr %113, i64 0, i32 1
  %114 = load i64, ptr %memberidx.i.i148, align 4
  %.not.i.i150 = icmp eq i64 %114, %101
  br i1 %.not.i.i150, label %ifend.i.i152, label %else.i159

ifend.i.i152:                                     ; preds = %while.entry.i151
  %115 = load ptr, ptr %113, align 8
  %116 = call i64 @memcmp(ptr %115, ptr %102, i64 %101)
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %while.end.i157, label %ifend.i.i152.else.i159_crit_edge

ifend.i.i152.else.i159_crit_edge:                 ; preds = %ifend.i.i152
  %.pre227 = load i64, ptr %memberidx.i145, align 4
  %.pre228 = load ptr, ptr %97, align 8
  br label %else.i159

while.end.i157:                                   ; preds = %ifend.i.i152
  %.pre229.pre = load ptr, ptr %97, align 8
  %.phi.trans.insert230.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre229.pre, i64 %hash.0.i147
  %.pre231.pre = load ptr, ptr %.phi.trans.insert230.phi.trans.insert, align 8
  %.not25.i156 = icmp eq ptr %.pre231.pre, null
  br i1 %.not25.i156, label %common.ret, label %if.entry7.i162

else.i159:                                        ; preds = %ifend.i.i152.else.i159_crit_edge, %while.entry.i151
  %118 = phi ptr [ %.pre228, %ifend.i.i152.else.i159_crit_edge ], [ %110, %while.entry.i151 ]
  %119 = phi i64 [ %.pre227, %ifend.i.i152.else.i159_crit_edge ], [ %111, %while.entry.i151 ]
  %120 = add nuw i64 %hash.0.i147, 1
  %121 = urem i64 %120, %119
  %122 = getelementptr inbounds ptr, ptr %118, i64 %121
  %123 = load ptr, ptr %122, align 8
  %.not26.i158 = icmp eq ptr %123, null
  br i1 %.not26.i158, label %common.ret, label %while.entry.i151

if.entry7.i162:                                   ; preds = %while.end.i157
  %memberidx11.i161 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre231.pre, i64 0, i32 1
  %124 = load ptr, ptr %memberidx11.i161, align 8
  br label %common.ret

ifend33:                                          ; preds = %for.body24
  %125 = add nuw nsw i64 %93, 1
  store i64 %125, ptr %memberidx1.i.i94, align 4
  %126 = getelementptr inbounds ptr, ptr %89, i64 %93
  %.not247 = icmp slt i64 %93, %90
  br i1 %.not247, label %for.body24, label %for.end26

for.entry38:                                      ; preds = %ifend20
  %memberidx39 = getelementptr inbounds %Module, ptr %40, i64 0, i32 4
  %127 = load ptr, ptr %memberidx39, align 8
  %128 = call ptr @malloc(i32 25)
  %129 = load ptr, ptr %127, align 8
  %memberidx1.i108 = getelementptr inbounds %Array_Function_, ptr %127, i64 0, i32 1
  %130 = load i64, ptr %memberidx1.i108, align 4
  store i1 false, ptr %128, align 1
  %memberidx1.i.i109 = getelementptr inbounds %ArrayIterator_Function_, ptr %128, i64 0, i32 1
  %memberidx2.i.i110 = getelementptr inbounds %ArrayIterator_Function_, ptr %128, i64 0, i32 3
  store ptr %129, ptr %memberidx2.i.i110, align 8
  %memberidx3.i.i111 = getelementptr inbounds %ArrayIterator_Function_, ptr %128, i64 0, i32 2
  store i64 %130, ptr %memberidx3.i.i111, align 4
  store i64 1, ptr %memberidx1.i.i109, align 4
  %131 = icmp slt i64 %130, 1
  br i1 %131, label %for.end43, label %for.body41.lr.ph

for.body41.lr.ph:                                 ; preds = %for.entry38
  %132 = load i64, ptr %memberidx2.i.i, align 4
  br label %for.body41

for.body41:                                       ; preds = %for.body41.lr.ph, %ifend50
  %133 = phi i64 [ 1, %for.body41.lr.ph ], [ %165, %ifend50 ]
  %function.0200.in = phi ptr [ %129, %for.body41.lr.ph ], [ %166, %ifend50 ]
  %function.0200 = load ptr, ptr %function.0200.in, align 8
  %134 = load ptr, ptr %function.0200, align 8
  %memberidx46 = getelementptr inbounds %VarId, ptr %134, i64 0, i32 2
  %135 = load i64, ptr %memberidx46, align 4
  %136 = icmp eq i64 %135, %132
  br i1 %136, label %if.entry48, label %ifend50

for.end43:                                        ; preds = %ifend50, %for.entry38
  tail call void @free(ptr nonnull %128)
  br label %common.ret

if.entry48:                                       ; preds = %for.body41
  store i1 false, ptr %128, align 1
  call fastcc void @CodeGen_codegen_function(ptr %0, ptr nonnull %function.0200)
  %137 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %138 = load i64, ptr %memberidx.i.i, align 4
  %139 = load i64, ptr %1, align 4
  %140 = load i64, ptr %memberidx2.i.i, align 4
  %141 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %138, i64 %139, i64 %140)
  %142 = load ptr, ptr %3, align 8
  %143 = call ptr @malloc(i32 24)
  store ptr %142, ptr %143, align 8
  %memberidx1.i.i.i118 = getelementptr inbounds %String, ptr %143, i64 0, i32 1
  store i64 %141, ptr %memberidx1.i.i.i118, align 4
  %memberidx2.i.i.i119 = getelementptr inbounds %String, ptr %143, i64 0, i32 2
  store i64 %141, ptr %memberidx2.i.i.i119, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %144 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %143)
  %memberidx.i164 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %137, i64 0, i32 1
  %145 = load i64, ptr %memberidx.i164, align 4
  %146 = urem i64 %144, %145
  %147 = load ptr, ptr %137, align 8
  %148 = getelementptr inbounds ptr, ptr %147, i64 %146
  %149 = load ptr, ptr %148, align 8
  %.not.i165 = icmp eq ptr %149, null
  br i1 %.not.i165, label %common.ret, label %while.entry.i170

while.entry.i170:                                 ; preds = %if.entry48, %else.i178
  %150 = phi ptr [ %158, %else.i178 ], [ %147, %if.entry48 ]
  %151 = phi i64 [ %159, %else.i178 ], [ %145, %if.entry48 ]
  %152 = phi ptr [ %163, %else.i178 ], [ %149, %if.entry48 ]
  %hash.0.i166 = phi i64 [ %161, %else.i178 ], [ %146, %if.entry48 ]
  %153 = load ptr, ptr %152, align 8
  %memberidx.i.i167 = getelementptr inbounds %String, ptr %153, i64 0, i32 1
  %154 = load i64, ptr %memberidx.i.i167, align 4
  %.not.i.i169 = icmp eq i64 %154, %141
  br i1 %.not.i.i169, label %ifend.i.i171, label %else.i178

ifend.i.i171:                                     ; preds = %while.entry.i170
  %155 = load ptr, ptr %153, align 8
  %156 = call i64 @memcmp(ptr %155, ptr %142, i64 %141)
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %while.end.i176, label %ifend.i.i171.else.i178_crit_edge

ifend.i.i171.else.i178_crit_edge:                 ; preds = %ifend.i.i171
  %.pre233 = load i64, ptr %memberidx.i164, align 4
  %.pre234 = load ptr, ptr %137, align 8
  br label %else.i178

while.end.i176:                                   ; preds = %ifend.i.i171
  %.pre235.pre = load ptr, ptr %137, align 8
  %.phi.trans.insert236.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre235.pre, i64 %hash.0.i166
  %.pre237.pre = load ptr, ptr %.phi.trans.insert236.phi.trans.insert, align 8
  %.not25.i175 = icmp eq ptr %.pre237.pre, null
  br i1 %.not25.i175, label %common.ret, label %if.entry7.i181

else.i178:                                        ; preds = %ifend.i.i171.else.i178_crit_edge, %while.entry.i170
  %158 = phi ptr [ %.pre234, %ifend.i.i171.else.i178_crit_edge ], [ %150, %while.entry.i170 ]
  %159 = phi i64 [ %.pre233, %ifend.i.i171.else.i178_crit_edge ], [ %151, %while.entry.i170 ]
  %160 = add nuw i64 %hash.0.i166, 1
  %161 = urem i64 %160, %159
  %162 = getelementptr inbounds ptr, ptr %158, i64 %161
  %163 = load ptr, ptr %162, align 8
  %.not26.i177 = icmp eq ptr %163, null
  br i1 %.not26.i177, label %common.ret, label %while.entry.i170

if.entry7.i181:                                   ; preds = %while.end.i176
  %memberidx11.i180 = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre237.pre, i64 0, i32 1
  %164 = load ptr, ptr %memberidx11.i180, align 8
  br label %common.ret

ifend50:                                          ; preds = %for.body41
  %165 = add nuw nsw i64 %133, 1
  store i64 %165, ptr %memberidx1.i.i109, align 4
  %166 = getelementptr inbounds ptr, ptr %129, i64 %133
  %.not246 = icmp slt i64 %133, %130
  br i1 %.not246, label %for.body41, label %for.end43
}

define internal fastcc void @CodeGen_declare_enum(ptr nocapture %0, ptr nocapture readonly %1) unnamed_addr {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = tail call ptr @malloc(i32 24)
  %7 = tail call ptr @malloc(i32 24)
  %8 = tail call ptr @malloc(i32 2048)
  store ptr %8, ptr %7, align 8
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %2, %for.body.i.i
  %i.0.i.i77 = phi i64 [ 0, %2 ], [ %11, %for.body.i.i ]
  %9 = load ptr, ptr %7, align 8
  %10 = getelementptr inbounds ptr, ptr %9, i64 %i.0.i.i77
  store ptr null, ptr %10, align 8
  %11 = add nuw nsw i64 %i.0.i.i77, 1
  %12 = icmp ult i64 %i.0.i.i77, 255
  br i1 %12, label %for.body.i.i, label %CGEnumType_constructor.exit

CGEnumType_constructor.exit:                      ; preds = %for.body.i.i
  %memberidx.i69 = getelementptr inbounds %CGEnumType, ptr %6, i64 0, i32 1
  %memberidx2.i.i70 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %7, i64 0, i32 1
  store i64 256, ptr %memberidx2.i.i70, align 4
  %memberidx3.i.i71 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %7, i64 0, i32 2
  store i64 0, ptr %memberidx3.i.i71, align 4
  store ptr %7, ptr %memberidx.i69, align 8
  %memberidx = getelementptr inbounds %Enum, ptr %1, i64 0, i32 2
  %13 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Array_EnumField_, ptr %13, i64 0, i32 1
  %14 = load i64, ptr %memberidx1, align 4
  %15 = icmp sgt i64 %14, 0
  br i1 %15, label %if.entry, label %else

if.entry:                                         ; preds = %CGEnumType_constructor.exit
  %16 = load ptr, ptr %13, align 8
  %17 = load ptr, ptr %16, align 8
  %memberidx4 = getelementptr inbounds %EnumField, ptr %17, i64 0, i32 2
  %18 = load ptr, ptr %memberidx4, align 8
  %memberidx5 = getelementptr inbounds %Expression, ptr %18, i64 0, i32 3
  %19 = load ptr, ptr %memberidx5, align 8
  %20 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %19, i1 true)
  br label %ifend

else:                                             ; preds = %CGEnumType_constructor.exit
  %21 = tail call ptr @LLVMIntType(i64 64)
  br label %ifend

ifend:                                            ; preds = %else, %if.entry
  %storemerge = phi ptr [ %21, %else ], [ %20, %if.entry ]
  store ptr %storemerge, ptr %6, align 8
  %22 = load ptr, ptr %memberidx, align 8
  %memberidx8 = getelementptr inbounds %Array_EnumField_, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx8, align 4
  %24 = alloca ptr, i64 %23, align 8
  %25 = tail call ptr @malloc(i32 25)
  %26 = load ptr, ptr %22, align 8
  %27 = load i64, ptr %memberidx8, align 4
  store i1 false, ptr %25, align 1
  %memberidx1.i.i67 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %25, i64 0, i32 1
  %memberidx2.i.i68 = getelementptr inbounds %ArrayIterator_EnumField_, ptr %25, i64 0, i32 3
  store ptr %26, ptr %memberidx2.i.i68, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_EnumField_, ptr %25, i64 0, i32 2
  store i64 %27, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i67, align 4
  %28 = icmp slt i64 %27, 1
  br i1 %28, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %ifend
  %memberidx14 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %29 = phi i64 [ 1, %for.body.lr.ph ], [ %80, %for.body ]
  %enum_field.075.in = phi ptr [ %26, %for.body.lr.ph ], [ %81, %for.body ]
  %idx.074 = phi i64 [ 0, %for.body.lr.ph ], [ %78, %for.body ]
  %enum_field.075 = load ptr, ptr %enum_field.075.in, align 8
  %30 = load ptr, ptr %enum_field.075, align 8
  %31 = load ptr, ptr %memberidx.i69, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i57 = getelementptr inbounds %PropId, ptr %30, i64 0, i32 1
  %32 = load ptr, ptr %memberidx.i57, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3)
  %33 = load i64, ptr %32, align 4
  %memberidx1.i.i58 = getelementptr inbounds %TypeId, ptr %32, i64 0, i32 1
  %34 = load i64, ptr %memberidx1.i.i58, align 4
  %memberidx2.i.i59 = getelementptr inbounds %TypeId, ptr %32, i64 0, i32 2
  %35 = load i64, ptr %memberidx2.i.i59, align 4
  %36 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %3, ptr nonnull @243, i64 %33, i64 %34, i64 %35)
  %37 = load ptr, ptr %3, align 8
  %38 = call ptr @malloc(i32 24)
  store ptr %37, ptr %38, align 8
  %memberidx1.i.i.i60 = getelementptr inbounds %String, ptr %38, i64 0, i32 1
  store i64 %36, ptr %memberidx1.i.i.i60, align 4
  %memberidx2.i.i.i61 = getelementptr inbounds %String, ptr %38, i64 0, i32 2
  store i64 %36, ptr %memberidx2.i.i.i61, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3)
  %39 = trunc i64 %36 to i32
  %40 = add i32 %39, 1
  %41 = call ptr @malloc(i32 %40)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %41, ptr align 8 %37, i64 %36, i1 false)
  %42 = getelementptr inbounds i8, ptr %41, i64 %36
  store i8 0, ptr %42, align 1
  %43 = load i64, ptr %30, align 4
  %memberidx2.i62 = getelementptr inbounds %PropId, ptr %30, i64 0, i32 2
  %44 = load i64, ptr %memberidx2.i62, align 4
  %45 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @259, ptr %41, i64 %43, i64 %44)
  %46 = load ptr, ptr %4, align 8
  %47 = call ptr @malloc(i32 24)
  store ptr %46, ptr %47, align 8
  %memberidx1.i5.i = getelementptr inbounds %String, ptr %47, i64 0, i32 1
  store i64 %45, ptr %memberidx1.i5.i, align 4
  %memberidx2.i6.i = getelementptr inbounds %String, ptr %47, i64 0, i32 2
  store i64 %45, ptr %memberidx2.i6.i, align 4
  call void @free(ptr %41)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %memberidx13 = getelementptr inbounds %EnumField, ptr %enum_field.075, i64 0, i32 2
  %48 = load ptr, ptr %memberidx13, align 8
  %49 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr null, ptr %48)
  call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %31, ptr nonnull %47, ptr %49)
  %50 = load ptr, ptr %memberidx14, align 8
  %memberidx.i56 = getelementptr inbounds %String, ptr %50, i64 0, i32 1
  %51 = load i64, ptr %memberidx.i56, align 4
  %52 = trunc i64 %51 to i32
  %53 = add i32 %52, 1
  %54 = call ptr @malloc(i32 %53)
  %55 = load ptr, ptr %50, align 8
  %56 = load i64, ptr %memberidx.i56, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %54, ptr align 8 %55, i64 %56, i1 false)
  %57 = getelementptr inbounds i8, ptr %54, i64 %56
  store i8 0, ptr %57, align 1
  %memberidx15 = getelementptr inbounds %EnumField, ptr %enum_field.075, i64 0, i32 1
  %58 = load ptr, ptr %memberidx15, align 8
  %memberidx.i55 = getelementptr inbounds %String, ptr %58, i64 0, i32 1
  %59 = load i64, ptr %memberidx.i55, align 4
  %60 = trunc i64 %59 to i32
  %61 = add i32 %60, 1
  %62 = call ptr @malloc(i32 %61)
  %63 = load ptr, ptr %58, align 8
  %64 = load i64, ptr %memberidx.i55, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %62, ptr align 8 %63, i64 %64, i1 false)
  %65 = getelementptr inbounds i8, ptr %62, i64 %64
  store i8 0, ptr %65, align 1
  %66 = alloca ptr, align 8
  %67 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %66, ptr nonnull @292, ptr %54, ptr %62)
  %68 = load ptr, ptr %66, align 8
  %69 = tail call ptr @malloc(i32 24)
  store ptr %68, ptr %69, align 8
  %memberidx1.i53 = getelementptr inbounds %String, ptr %69, i64 0, i32 1
  store i64 %67, ptr %memberidx1.i53, align 4
  %memberidx2.i54 = getelementptr inbounds %String, ptr %69, i64 0, i32 2
  store i64 %67, ptr %memberidx2.i54, align 4
  tail call void @free(ptr %54)
  tail call void @free(ptr %62)
  %70 = trunc i64 %67 to i32
  %71 = add i32 %70, 1
  %72 = call ptr @malloc(i32 %71)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %72, ptr align 8 %68, i64 %67, i1 false)
  %73 = getelementptr inbounds i8, ptr %72, i64 %67
  store i8 0, ptr %73, align 1
  %74 = call ptr @LLVMConstString(ptr %72, i64 %67, i1 false)
  %75 = load ptr, ptr %0, align 8
  %76 = call ptr @LLVMTypeOf(ptr %74)
  %77 = call ptr @LLVMAddGlobal(ptr %75, ptr %76, ptr nonnull @80)
  call void @LLVMSetInitializer(ptr %77, ptr %74)
  %78 = add nuw nsw i64 %idx.074, 1
  %79 = getelementptr inbounds ptr, ptr %24, i64 %idx.074
  store ptr %77, ptr %79, align 8
  %80 = add nuw nsw i64 %29, 1
  store i64 %80, ptr %memberidx1.i.i67, align 4
  %81 = getelementptr inbounds ptr, ptr %26, i64 %29
  %.not = icmp slt i64 %29, %27
  br i1 %.not, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %ifend
  %idx.0.lcssa = phi i64 [ 0, %ifend ], [ %78, %for.body ]
  tail call void @free(ptr nonnull %25)
  %82 = call ptr @LLVMInt8Type()
  %83 = call ptr @LLVMPointerType(ptr %82, i64 0)
  %84 = call ptr @LLVMConstArray(ptr %83, ptr nonnull %24, i64 %idx.0.lcssa)
  %85 = load ptr, ptr %0, align 8
  %86 = call ptr @LLVMTypeOf(ptr %84)
  %memberidx19 = getelementptr inbounds %Enum, ptr %1, i64 0, i32 1
  %87 = load ptr, ptr %memberidx19, align 8
  %memberidx.i49 = getelementptr inbounds %String, ptr %87, i64 0, i32 1
  %88 = load i64, ptr %memberidx.i49, align 4
  %89 = trunc i64 %88 to i32
  %90 = add i32 %89, 1
  %91 = call ptr @malloc(i32 %90)
  %92 = load ptr, ptr %87, align 8
  %93 = load i64, ptr %memberidx.i49, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %91, ptr align 8 %92, i64 %93, i1 false)
  %94 = getelementptr inbounds i8, ptr %91, i64 %93
  store i8 0, ptr %94, align 1
  %95 = alloca ptr, align 8
  %96 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %95, ptr nonnull @293, ptr %91)
  %97 = load ptr, ptr %95, align 8
  %98 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %91)
  %99 = trunc i64 %96 to i32
  %100 = add i32 %99, 1
  %101 = call ptr @malloc(i32 %100)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %101, ptr align 8 %97, i64 %96, i1 false)
  %102 = getelementptr inbounds i8, ptr %101, i64 %96
  store i8 0, ptr %102, align 1
  %103 = call ptr @LLVMAddGlobal(ptr %85, ptr %86, ptr %101)
  call void @LLVMSetInitializer(ptr %103, ptr %84)
  %memberidx20 = getelementptr inbounds %CGEnumType, ptr %6, i64 0, i32 2
  store ptr %103, ptr %memberidx20, align 8
  %104 = load ptr, ptr %1, align 8
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 9
  %105 = load ptr, ptr %memberidx.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  %106 = load i64, ptr %104, align 4
  %memberidx1.i.i = getelementptr inbounds %TypeId, ptr %104, i64 0, i32 1
  %107 = load i64, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %TypeId, ptr %104, i64 0, i32 2
  %108 = load i64, ptr %memberidx2.i.i, align 4
  %109 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @243, i64 %106, i64 %107, i64 %108)
  %110 = load ptr, ptr %5, align 8
  %111 = call ptr @malloc(i32 24)
  store ptr %110, ptr %111, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %111, i64 0, i32 1
  store i64 %109, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %111, i64 0, i32 2
  store i64 %109, ptr %memberidx2.i.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call fastcc void @Map_String_CGEnumType____setitem__(ptr %105, ptr nonnull %111, ptr nonnull %6)
  ret void
}

define internal fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr nocapture readonly %0, ptr %1, ptr %2, ptr nocapture readonly %3, i64 %4, ptr writeonly %5) unnamed_addr {
  %arg_types = alloca [2 x ptr], align 8
  %7 = tail call ptr @LLVMInt8Type()
  %8 = tail call ptr @LLVMPointerType(ptr %7, i64 0)
  %9 = tail call ptr @LLVMIntType(i64 64)
  %10 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %8, ptr nonnull @80)
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %11 = load ptr, ptr %memberidx.i, align 8
  %12 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr %2)
  %memberidx.i22 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %11, i64 0, i32 1
  %13 = load i64, ptr %memberidx.i22, align 4
  %14 = urem i64 %12, %13
  %15 = load ptr, ptr %11, align 8
  %16 = getelementptr inbounds ptr, ptr %15, i64 %14
  %17 = load ptr, ptr %16, align 8
  %.not.i23 = icmp eq ptr %17, null
  br i1 %.not.i23, label %if.entry.i, label %while.entry.i.preheader

while.entry.i.preheader:                          ; preds = %6
  %memberidx1.i.i25 = getelementptr inbounds %String, ptr %2, i64 0, i32 1
  br label %while.entry.i

while.entry.i:                                    ; preds = %while.entry.i.preheader, %else.i26
  %18 = phi ptr [ %28, %else.i26 ], [ %15, %while.entry.i.preheader ]
  %19 = phi i64 [ %29, %else.i26 ], [ %13, %while.entry.i.preheader ]
  %20 = phi ptr [ %33, %else.i26 ], [ %17, %while.entry.i.preheader ]
  %hash.0.i = phi i64 [ %31, %else.i26 ], [ %14, %while.entry.i.preheader ]
  %21 = load ptr, ptr %20, align 8
  %memberidx.i.i24 = getelementptr inbounds %String, ptr %21, i64 0, i32 1
  %22 = load i64, ptr %memberidx.i.i24, align 4
  %23 = load i64, ptr %memberidx1.i.i25, align 4
  %.not.i.i = icmp eq i64 %22, %23
  br i1 %.not.i.i, label %ifend.i.i, label %else.i26

ifend.i.i:                                        ; preds = %while.entry.i
  %24 = load ptr, ptr %21, align 8
  %25 = load ptr, ptr %2, align 8
  %26 = tail call i64 @memcmp(ptr %24, ptr %25, i64 %22)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %while.end.i, label %ifend.i.i.else.i26_crit_edge

ifend.i.i.else.i26_crit_edge:                     ; preds = %ifend.i.i
  %.pre = load i64, ptr %memberidx.i22, align 4
  %.pre31 = load ptr, ptr %11, align 8
  br label %else.i26

while.end.i:                                      ; preds = %ifend.i.i
  %.pre32.pre = load ptr, ptr %11, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre32.pre, i64 %hash.0.i
  %.pre33.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre33.pre, null
  br i1 %.not25.i, label %if.entry.i, label %Map_String_LLVMValueRef____getitem__.exit

else.i26:                                         ; preds = %ifend.i.i.else.i26_crit_edge, %while.entry.i
  %28 = phi ptr [ %.pre31, %ifend.i.i.else.i26_crit_edge ], [ %18, %while.entry.i ]
  %29 = phi i64 [ %.pre, %ifend.i.i.else.i26_crit_edge ], [ %19, %while.entry.i ]
  %30 = add nuw i64 %hash.0.i, 1
  %31 = urem i64 %30, %29
  %32 = getelementptr inbounds ptr, ptr %28, i64 %31
  %33 = load ptr, ptr %32, align 8
  %.not26.i = icmp eq ptr %33, null
  br i1 %.not26.i, label %if.entry.i, label %while.entry.i

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre33.pre, i64 0, i32 1
  %34 = load ptr, ptr %memberidx11.i, align 8
  %35 = icmp eq ptr %34, null
  br i1 %35, label %if.entry.i, label %CodeGen_createGlobalLLVMString.exit

if.entry.i:                                       ; preds = %else.i26, %6, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %memberidx.i.i = getelementptr inbounds %String, ptr %2, i64 0, i32 1
  %36 = load i64, ptr %memberidx.i.i, align 4
  %37 = trunc i64 %36 to i32
  %38 = add i32 %37, 1
  %39 = tail call ptr @malloc(i32 %38)
  %40 = load ptr, ptr %2, align 8
  %41 = load i64, ptr %memberidx.i.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %40, i64 %41, i1 false)
  %42 = getelementptr inbounds i8, ptr %39, i64 %41
  store i8 0, ptr %42, align 1
  %43 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %39, ptr nonnull @80)
  %44 = load ptr, ptr %memberidx.i, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %44, ptr nonnull %2, ptr %43)
  br label %CodeGen_createGlobalLLVMString.exit

CodeGen_createGlobalLLVMString.exit:              ; preds = %Map_String_LLVMValueRef____getitem__.exit, %if.entry.i
  %str.0.i = phi ptr [ %43, %if.entry.i ], [ %34, %Map_String_LLVMValueRef____getitem__.exit ]
  %45 = add nuw i64 %4, 2
  %46 = alloca ptr, i64 %45, align 8
  store ptr %10, ptr %46, align 8
  %47 = getelementptr inbounds ptr, ptr %46, i64 1
  store ptr %str.0.i, ptr %47, align 8
  %48 = getelementptr inbounds ptr, ptr %46, i64 2
  %49 = shl i64 %4, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 2147483648 %48, ptr align 8 %3, i64 %49, i1 false)
  store ptr %8, ptr %arg_types, align 8
  %50 = getelementptr inbounds ptr, ptr %arg_types, i64 1
  store ptr %8, ptr %50, align 8
  %51 = load ptr, ptr %0, align 8
  %52 = tail call ptr @malloc(i32 8)
  store i64 7382647088337679201, ptr %52, align 8
  %53 = tail call ptr @malloc(i32 24)
  store ptr %52, ptr %53, align 8
  %memberidx1.i.i = getelementptr inbounds %String, ptr %53, i64 0, i32 1
  store i64 8, ptr %memberidx1.i.i, align 4
  %memberidx2.i.i = getelementptr inbounds %String, ptr %53, i64 0, i32 2
  store i64 8, ptr %memberidx2.i.i, align 4
  %54 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i18 = getelementptr inbounds %IntrinsicResult, ptr %54, i64 0, i32 1
  store i64 0, ptr %54, align 8
  %55 = call ptr @LLVMFunctionType(ptr %9, ptr nonnull %arg_types, i64 2, i1 true)
  store ptr %55, ptr %memberidx1.i.i18, align 8
  %56 = call ptr @malloc(i32 9)
  %57 = load i64, ptr %52, align 8
  store i64 %57, ptr %56, align 8
  %58 = getelementptr inbounds i8, ptr %56, i64 8
  store i8 0, ptr %58, align 1
  %59 = call ptr @LLVMGetNamedFunction(ptr %51, ptr nonnull %56)
  %.not.i = icmp eq ptr %59, null
  br i1 %.not.i, label %else.i, label %get_intrinsic.exit

else.i:                                           ; preds = %CodeGen_createGlobalLLVMString.exit
  %60 = call ptr @LLVMAddFunction(ptr %51, ptr nonnull %56, ptr %55)
  br label %get_intrinsic.exit

get_intrinsic.exit:                               ; preds = %CodeGen_createGlobalLLVMString.exit, %else.i
  %storemerge.i = phi ptr [ %60, %else.i ], [ %59, %CodeGen_createGlobalLLVMString.exit ]
  store ptr %storemerge.i, ptr %54, align 8
  %61 = call ptr @LLVMBuildCall2(ptr %1, ptr %55, ptr %storemerge.i, ptr nonnull %46, i64 %45, ptr nonnull @80)
  %.not = icmp eq ptr %5, null
  br i1 %.not, label %ifend, label %if.entry

if.entry:                                         ; preds = %get_intrinsic.exit
  store ptr %61, ptr %5, align 8
  br label %ifend

ifend:                                            ; preds = %get_intrinsic.exit, %if.entry
  %62 = call ptr @LLVMBuildLoad2(ptr %1, ptr %8, ptr %10, ptr nonnull @80)
  ret ptr %62
}

define internal fastcc ptr @CodeGen_codegen_string(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
for.entry:
  %str_len = alloca ptr, align 8
  %args = alloca [2 x ptr], align 8
  %args1 = alloca [3 x ptr], align 8
  %memberidx = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 4
  %3 = load ptr, ptr %memberidx, align 8
  %memberidx2 = getelementptr inbounds %String, ptr %3, i64 0, i32 1
  %4 = load i64, ptr %memberidx2, align 4
  %memberidx3 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 5
  %5 = load ptr, ptr %memberidx3, align 8
  %memberidx4 = getelementptr inbounds %Array_uint_, ptr %5, i64 0, i32 1
  %6 = load i64, ptr %memberidx4, align 4
  %7 = shl nuw i64 %6, 1
  %8 = add nuw i64 %7, %4
  %9 = trunc i64 %8 to i32
  %10 = tail call ptr @malloc(i32 %9)
  %11 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %11, align 8
  %memberidx1.i.i103 = getelementptr inbounds %String, ptr %11, i64 0, i32 1
  store i64 0, ptr %memberidx1.i.i103, align 4
  %memberidx.i105 = getelementptr inbounds %String, ptr %11, i64 0, i32 2
  store i64 %8, ptr %memberidx.i105, align 4
  %12 = load ptr, ptr %3, align 8
  %13 = tail call ptr @malloc(i32 24)
  %memberidx.i101 = getelementptr inbounds %Array_LLVMValueRef_, ptr %13, i64 0, i32 1
  %memberidx1.i102 = getelementptr inbounds %Array_LLVMValueRef_, ptr %13, i64 0, i32 2
  store i64 8, ptr %memberidx1.i102, align 4
  %14 = tail call ptr @malloc(i32 64)
  store ptr %14, ptr %13, align 8
  store i64 0, ptr %memberidx.i101, align 4
  %memberidx7 = getelementptr inbounds %StringExpression, ptr %2, i64 0, i32 6
  %15 = load ptr, ptr %memberidx7, align 8
  %memberidx8 = getelementptr inbounds %Array_Expression_, ptr %15, i64 0, i32 1
  %16 = load i64, ptr %memberidx8, align 4
  %17 = alloca ptr, i64 %16, align 8
  %18 = icmp sgt i64 %16, 0
  br i1 %18, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %String___adda__.exit
  %19 = phi i64 [ %52, %String___adda__.exit ], [ 0, %for.entry ]
  %chars.0150 = phi ptr [ %53, %String___adda__.exit ], [ %12, %for.entry ]
  %curr_ind.0149 = phi i64 [ %29, %String___adda__.exit ], [ 0, %for.entry ]
  %i.0148 = phi i64 [ %57, %String___adda__.exit ], [ 0, %for.entry ]
  %20 = load ptr, ptr %memberidx7, align 8
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds ptr, ptr %21, i64 %i.0148
  %23 = load ptr, ptr %22, align 8
  %memberidx10 = getelementptr inbounds %Expression, ptr %23, i64 0, i32 3
  %24 = load ptr, ptr %memberidx10, align 8
  %25 = tail call fastcc ptr @get_format_from_type(ptr %24)
  %26 = load ptr, ptr %memberidx3, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = getelementptr inbounds i64, ptr %27, i64 %i.0148
  %29 = load i64, ptr %28, align 4
  %30 = sub nuw i64 %29, %curr_ind.0149
  %31 = add nuw i64 %19, %30
  %32 = load i64, ptr %memberidx.i105, align 4
  %33 = icmp slt i64 %32, %31
  %34 = load ptr, ptr %11, align 8
  br i1 %33, label %if.entry.i.i99, label %String_append_bytes_length.exit100

if.entry.i.i99:                                   ; preds = %for.body
  %35 = tail call ptr @realloc(ptr %34, i64 %31)
  store ptr %35, ptr %11, align 8
  store i64 %31, ptr %memberidx.i105, align 4
  %.pre156 = load i64, ptr %memberidx1.i.i103, align 4
  br label %String_append_bytes_length.exit100

String_append_bytes_length.exit100:               ; preds = %for.body, %if.entry.i.i99
  %36 = phi i64 [ %.pre156, %if.entry.i.i99 ], [ %19, %for.body ]
  %37 = phi ptr [ %35, %if.entry.i.i99 ], [ %34, %for.body ]
  %38 = getelementptr inbounds i8, ptr %37, i64 %36
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %38, ptr align 8 %chars.0150, i64 %30, i1 false)
  %39 = load i64, ptr %memberidx1.i.i103, align 4
  %40 = add nuw i64 %39, %30
  store i64 %40, ptr %memberidx1.i.i103, align 4
  %41 = load ptr, ptr %25, align 8
  %memberidx.i94 = getelementptr inbounds %String, ptr %25, i64 0, i32 1
  %42 = load i64, ptr %memberidx.i94, align 4
  %43 = add nuw i64 %42, %40
  %44 = load i64, ptr %memberidx.i105, align 4
  %45 = icmp slt i64 %44, %43
  %46 = load ptr, ptr %11, align 8
  br i1 %45, label %if.entry.i.i.i, label %String___adda__.exit

if.entry.i.i.i:                                   ; preds = %String_append_bytes_length.exit100
  %47 = tail call ptr @realloc(ptr %46, i64 %43)
  store ptr %47, ptr %11, align 8
  store i64 %43, ptr %memberidx.i105, align 4
  %.pre158 = load i64, ptr %memberidx1.i.i103, align 4
  br label %String___adda__.exit

String___adda__.exit:                             ; preds = %String_append_bytes_length.exit100, %if.entry.i.i.i
  %48 = phi i64 [ %.pre158, %if.entry.i.i.i ], [ %40, %String_append_bytes_length.exit100 ]
  %49 = phi ptr [ %47, %if.entry.i.i.i ], [ %46, %String_append_bytes_length.exit100 ]
  %50 = getelementptr inbounds i8, ptr %49, i64 %48
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %50, ptr align 8 %41, i64 %42, i1 false)
  %51 = load i64, ptr %memberidx1.i.i103, align 4
  %52 = add nuw i64 %51, %42
  store i64 %52, ptr %memberidx1.i.i103, align 4
  %53 = getelementptr inbounds i8, ptr %chars.0150, i64 %30
  %54 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %23)
  %55 = getelementptr inbounds ptr, ptr %17, i64 %i.0148
  %56 = tail call fastcc ptr @CodeGen_get_string_val(ptr %0, ptr %1, ptr %54, ptr %24, ptr nonnull %13, i64 0)
  store ptr %56, ptr %55, align 8
  %57 = add nuw nsw i64 %i.0148, 1
  %58 = icmp slt i64 %57, %16
  br i1 %58, label %for.body, label %for.end.loopexit

for.end.loopexit:                                 ; preds = %String___adda__.exit
  %.pre159 = load i64, ptr %memberidx.i105, align 4
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.entry
  %59 = phi i64 [ %8, %for.entry ], [ %.pre159, %for.end.loopexit ]
  %60 = phi i64 [ 0, %for.entry ], [ %52, %for.end.loopexit ]
  %curr_ind.0.lcssa = phi i64 [ 0, %for.entry ], [ %29, %for.end.loopexit ]
  %chars.0.lcssa = phi ptr [ %12, %for.entry ], [ %53, %for.end.loopexit ]
  %61 = load i64, ptr %memberidx2, align 4
  %62 = sub nuw i64 %61, %curr_ind.0.lcssa
  %63 = add nuw i64 %60, %62
  %64 = icmp slt i64 %59, %63
  %65 = load ptr, ptr %11, align 8
  br i1 %64, label %if.entry.i.i, label %String_append_bytes_length.exit

if.entry.i.i:                                     ; preds = %for.end
  %66 = tail call ptr @realloc(ptr %65, i64 %63)
  store ptr %66, ptr %11, align 8
  store i64 %63, ptr %memberidx.i105, align 4
  %.pre161 = load i64, ptr %memberidx1.i.i103, align 4
  br label %String_append_bytes_length.exit

String_append_bytes_length.exit:                  ; preds = %for.end, %if.entry.i.i
  %67 = phi i64 [ %.pre161, %if.entry.i.i ], [ %60, %for.end ]
  %68 = phi ptr [ %66, %if.entry.i.i ], [ %65, %for.end ]
  %69 = getelementptr inbounds i8, ptr %68, i64 %67
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 2147483648 %69, ptr align 8 %chars.0.lcssa, i64 %62, i1 false)
  %70 = load i64, ptr %memberidx1.i.i103, align 4
  %71 = add nuw i64 %70, %62
  store i64 %71, ptr %memberidx1.i.i103, align 4
  %72 = tail call ptr @LLVMIntType(i64 64)
  %73 = tail call ptr @LLVMConstInt(ptr %72, i64 %71, i1 false)
  store ptr %73, ptr %str_len, align 8
  br i1 %18, label %true_block, label %false_block

true_block:                                       ; preds = %String_append_bytes_length.exit
  %74 = call fastcc ptr @CodeGen_codegen_safe_fmt_string(ptr %0, ptr %1, ptr nonnull %11, ptr nonnull %17, i64 %16, ptr nonnull %str_len)
  br label %end

false_block:                                      ; preds = %String_append_bytes_length.exit
  %memberidx.i91 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 7
  %75 = load ptr, ptr %memberidx.i91, align 8
  %76 = tail call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %11)
  %memberidx.i111 = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %75, i64 0, i32 1
  %77 = load i64, ptr %memberidx.i111, align 4
  %78 = urem i64 %76, %77
  %79 = load ptr, ptr %75, align 8
  %80 = getelementptr inbounds ptr, ptr %79, i64 %78
  %81 = load ptr, ptr %80, align 8
  %.not.i112 = icmp eq ptr %81, null
  br i1 %.not.i112, label %if.entry.i, label %while.entry.i

while.entry.i:                                    ; preds = %false_block, %else.i115
  %82 = phi ptr [ %91, %else.i115 ], [ %79, %false_block ]
  %83 = phi i64 [ %92, %else.i115 ], [ %77, %false_block ]
  %84 = phi ptr [ %96, %else.i115 ], [ %81, %false_block ]
  %hash.0.i = phi i64 [ %94, %else.i115 ], [ %78, %false_block ]
  %85 = load ptr, ptr %84, align 8
  %memberidx.i.i113 = getelementptr inbounds %String, ptr %85, i64 0, i32 1
  %86 = load i64, ptr %memberidx.i.i113, align 4
  %.not.i.i = icmp eq i64 %86, %71
  br i1 %.not.i.i, label %ifend.i.i, label %else.i115

ifend.i.i:                                        ; preds = %while.entry.i
  %87 = load ptr, ptr %85, align 8
  %88 = load ptr, ptr %11, align 8
  %89 = tail call i64 @memcmp(ptr %87, ptr %88, i64 %71)
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %while.end.i, label %ifend.i.i.else.i115_crit_edge

ifend.i.i.else.i115_crit_edge:                    ; preds = %ifend.i.i
  %.pre162 = load i64, ptr %memberidx.i111, align 4
  %.pre163 = load ptr, ptr %75, align 8
  br label %else.i115

while.end.i:                                      ; preds = %ifend.i.i
  %.pre164.pre = load ptr, ptr %75, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre164.pre, i64 %hash.0.i
  %.pre165.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i = icmp eq ptr %.pre165.pre, null
  br i1 %.not25.i, label %if.entry.i, label %Map_String_LLVMValueRef____getitem__.exit

else.i115:                                        ; preds = %ifend.i.i.else.i115_crit_edge, %while.entry.i
  %91 = phi ptr [ %.pre163, %ifend.i.i.else.i115_crit_edge ], [ %82, %while.entry.i ]
  %92 = phi i64 [ %.pre162, %ifend.i.i.else.i115_crit_edge ], [ %83, %while.entry.i ]
  %93 = add nuw i64 %hash.0.i, 1
  %94 = urem i64 %93, %92
  %95 = getelementptr inbounds ptr, ptr %91, i64 %94
  %96 = load ptr, ptr %95, align 8
  %.not26.i = icmp eq ptr %96, null
  br i1 %.not26.i, label %if.entry.i, label %while.entry.i

Map_String_LLVMValueRef____getitem__.exit:        ; preds = %while.end.i
  %memberidx11.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre165.pre, i64 0, i32 1
  %97 = load ptr, ptr %memberidx11.i, align 8
  %98 = icmp eq ptr %97, null
  br i1 %98, label %if.entry.i, label %end

if.entry.i:                                       ; preds = %else.i115, %false_block, %while.end.i, %Map_String_LLVMValueRef____getitem__.exit
  %99 = trunc i64 %71 to i32
  %100 = add i32 %99, 1
  %101 = tail call ptr @malloc(i32 %100)
  %102 = load ptr, ptr %11, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %101, ptr align 8 %102, i64 %71, i1 false)
  %103 = getelementptr inbounds i8, ptr %101, i64 %71
  store i8 0, ptr %103, align 1
  %104 = tail call ptr @LLVMBuildGlobalString(ptr %1, ptr %101, ptr nonnull @80)
  %105 = load ptr, ptr %memberidx.i91, align 8
  tail call fastcc void @Map_String_LLVMValueRef____setitem__(ptr %105, ptr nonnull %11, ptr %104)
  br label %end

end:                                              ; preds = %if.entry.i, %Map_String_LLVMValueRef____getitem__.exit, %true_block
  %ternary = phi ptr [ %74, %true_block ], [ %104, %if.entry.i ], [ %97, %Map_String_LLVMValueRef____getitem__.exit ]
  %memberidx14 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %106 = load ptr, ptr %memberidx14, align 8
  %107 = load i64, ptr %106, align 4
  %108 = icmp eq i64 %107, 20
  br i1 %108, label %if.entry.i141, label %is_object.exit

if.entry.i141:                                    ; preds = %end, %if.entry.i141
  %.tr5.i = phi ptr [ %109, %if.entry.i141 ], [ %106, %end ]
  %memberidx1.i140 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %109 = load ptr, ptr %memberidx1.i140, align 8
  %110 = load i64, ptr %109, align 4
  %111 = icmp eq i64 %110, 20
  br i1 %111, label %if.entry.i141, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i141, %end
  %.lcssa.i = phi i64 [ %107, %end ], [ %110, %if.entry.i141 ]
  %112 = icmp eq i64 %.lcssa.i, 11
  br i1 %112, label %if.entry, label %for.entry24

if.entry:                                         ; preds = %is_object.exit
  %113 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %106, i1 false)
  %114 = call i1 @LLVMIsConstant(ptr %ternary)
  %115 = call i1 @LLVMIsGlobalConstant(ptr %ternary)
  %116 = and i1 %114, %115
  br i1 %116, label %if.entry16, label %else17

if.entry16:                                       ; preds = %if.entry
  %117 = load ptr, ptr %0, align 8
  %118 = call ptr @LLVMGetNamedFunction(ptr %117, ptr nonnull @254)
  %119 = icmp eq ptr %118, null
  br i1 %119, label %if.entry20, label %ifend22

else17:                                           ; preds = %if.entry
  %120 = call ptr @LLVMBuildMalloc(ptr %1, ptr %113, ptr nonnull @80)
  store ptr %120, ptr %args1, align 8
  %121 = getelementptr inbounds ptr, ptr %args1, i64 1
  store ptr %ternary, ptr %121, align 8
  %122 = getelementptr inbounds ptr, ptr %args1, i64 2
  %123 = load ptr, ptr %str_len, align 8
  store ptr %123, ptr %122, align 8
  %124 = load ptr, ptr %memberidx14, align 8
  %memberidx.i106 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %125 = load i64, ptr %124, align 4
  %cond146 = icmp eq i64 %125, 20
  br i1 %cond146, label %if.entry.i137, label %get_class_from_type.exit

if.entry.i137:                                    ; preds = %else17, %if.entry.i137
  %.tr11.i147 = phi ptr [ %126, %if.entry.i137 ], [ %124, %else17 ]
  %memberidx1.i136 = getelementptr inbounds %GenericType, ptr %.tr11.i147, i64 0, i32 3
  %126 = load ptr, ptr %memberidx1.i136, align 8
  %127 = load i64, ptr %126, align 4
  %cond = icmp eq i64 %127, 20
  br i1 %cond, label %if.entry.i137, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i137, %else17
  %memberidx1.i107 = getelementptr inbounds %ObjectType, ptr %124, i64 0, i32 1
  %128 = load ptr, ptr %memberidx1.i107, align 8
  %129 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %128)
  %.not.i116 = icmp eq ptr %129, null
  br i1 %.not.i116, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %130 = load ptr, ptr %memberidx.i106, align 8
  %131 = load ptr, ptr %130, align 8
  %132 = load i64, ptr %128, align 4
  %133 = load ptr, ptr %131, align 8
  %134 = getelementptr inbounds ptr, ptr %133, i64 %132
  %135 = load ptr, ptr %134, align 8
  %memberidx2.i.i120 = getelementptr inbounds %Module, ptr %135, i64 0, i32 3
  %136 = load ptr, ptr %memberidx2.i.i120, align 8
  %memberidx3.i.i121 = getelementptr inbounds %TypeId, ptr %128, i64 0, i32 2
  %137 = load i64, ptr %memberidx3.i.i121, align 4
  %138 = load ptr, ptr %136, align 8
  %139 = getelementptr inbounds ptr, ptr %138, i64 %137
  %140 = load ptr, ptr %139, align 8
  call fastcc void @CodeGen_declare_class(ptr %0, ptr %140)
  call fastcc void @CodeGen_codegen_class(ptr %0, ptr %140)
  %141 = load ptr, ptr %140, align 8
  %142 = call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %141)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i117 = phi ptr [ %142, %ifend.i ], [ %129, %get_class_from_type.exit ]
  %memberidx2.i108 = getelementptr inbounds %CGClassType, ptr %common.ret.op.i117, i64 0, i32 4
  %143 = load ptr, ptr %memberidx2.i108, align 8
  %.not.i = icmp eq ptr %143, null
  br i1 %.not.i, label %else.i, label %if.entry.i109

if.entry.i109:                                    ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %144 = call ptr @LLVM_GetFunctionType(ptr nonnull %143)
  %145 = call ptr @LLVMBuildCall2(ptr %1, ptr %144, ptr nonnull %143, ptr nonnull %args1, i64 3, ptr nonnull @80)
  br label %for.entry24

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %146 = call ptr @malloc(i32 47)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %146, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %147 = call ptr @malloc(i32 24)
  %148 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %148, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %149 = call ptr @malloc(i32 24)
  %150 = call i64 @write(i64 1, ptr %148, i64 7)
  call void @free(ptr %148)
  call void @free(ptr %149)
  %151 = call i64 @write(i64 1, ptr %146, i64 47)
  %152 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %146)
  call void @free(ptr %147)
  call void @exit(i64 -1)
  br label %for.entry24

if.entry20:                                       ; preds = %if.entry16
  %153 = call ptr @malloc(i32 54)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(54) %153, ptr noundef nonnull align 8 dereferenceable(54) @255, i64 54, i1 false)
  %154 = call ptr @malloc(i32 24)
  %155 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %155, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %156 = call ptr @malloc(i32 24)
  %157 = call i64 @write(i64 1, ptr %155, i64 7)
  call void @free(ptr %155)
  call void @free(ptr %156)
  %158 = call i64 @write(i64 1, ptr %153, i64 54)
  %159 = call i64 @write(i64 1, ptr nonnull @1, i64 1)
  call void @free(ptr %153)
  call void @free(ptr %154)
  call void @exit(i64 -1)
  br label %ifend22

ifend22:                                          ; preds = %if.entry16, %if.entry20
  store ptr %ternary, ptr %args, align 8
  %160 = getelementptr inbounds ptr, ptr %args, i64 1
  %161 = load ptr, ptr %str_len, align 8
  store ptr %161, ptr %160, align 8
  %162 = call ptr @LLVM_GetFunctionType(ptr %118)
  %163 = call ptr @LLVMBuildCall2(ptr %1, ptr %162, ptr %118, ptr nonnull %args, i64 2, ptr nonnull @80)
  br label %for.entry24

for.entry24:                                      ; preds = %else.i, %if.entry.i109, %ifend22, %is_object.exit
  %str.0 = phi ptr [ %163, %ifend22 ], [ %ternary, %is_object.exit ], [ %120, %if.entry.i109 ], [ %120, %else.i ]
  %164 = call ptr @malloc(i32 25)
  %165 = load ptr, ptr %13, align 8
  %166 = load i64, ptr %memberidx.i101, align 4
  store i1 false, ptr %164, align 1
  %memberidx1.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %164, i64 0, i32 1
  %memberidx2.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %164, i64 0, i32 3
  store ptr %165, ptr %memberidx2.i.i, align 8
  %memberidx3.i.i = getelementptr inbounds %ArrayIterator_LLVMValueRef_, ptr %164, i64 0, i32 2
  store i64 %166, ptr %memberidx3.i.i, align 4
  store i64 1, ptr %memberidx1.i.i, align 4
  %167 = icmp slt i64 %166, 1
  br i1 %167, label %for.end28, label %for.body26

for.body26:                                       ; preds = %for.entry24, %for.body26
  %168 = phi i64 [ %170, %for.body26 ], [ 1, %for.entry24 ]
  %mem.0145.in = phi ptr [ %171, %for.body26 ], [ %165, %for.entry24 ]
  %mem.0145 = load ptr, ptr %mem.0145.in, align 8
  %169 = call ptr @LLVMBuildFree(ptr %1, ptr %mem.0145)
  %170 = add nuw nsw i64 %168, 1
  store i64 %170, ptr %memberidx1.i.i, align 4
  %171 = getelementptr inbounds ptr, ptr %165, i64 %168
  %.not = icmp slt i64 %168, %166
  br i1 %.not, label %for.body26, label %for.end28

for.end28:                                        ; preds = %for.body26, %for.entry24
  tail call void @free(ptr nonnull %164)
  call void @free(ptr %165)
  tail call void @free(ptr %13)
  ret ptr %str.0
}

define internal fastcc ptr @CodeGen_codegen_expression(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %args.i = alloca [1 x ptr], align 8
  %func_ty.i = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %args.i.i = alloca [2 x ptr], align 8
  %arg_types.i.i = alloca [2 x ptr], align 8
  %5 = alloca ptr, align 8
  %indices.i = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %Expression, ptr %2, i64 0, i32 2
  %6 = load i64, ptr %memberidx, align 4
  switch i64 %6, label %common.ret245 [
    i64 4, label %if.entry
    i64 0, label %if.entry2
    i64 1, label %if.entry6
    i64 5, label %if.entry10
    i64 2, label %if.entry14
    i64 8, label %if.entry18
    i64 9, label %if.entry22
    i64 10, label %if.entry26
    i64 15, label %if.entry30
    i64 14, label %CodeGen_get_expr_mem.exit214
    i64 13, label %if.entry38
    i64 12, label %if.entry42
    i64 16, label %if.entry46
    i64 11, label %if.entry50
    i64 6, label %if.entry54
    i64 7, label %if.entry58
    i64 17, label %if.entry62
    i64 18, label %if.entry66
  ]

common.ret245:                                    ; preds = %if.entry, %if.entry2, %if.entry6, %if.entry10, %if.entry14, %if.entry18, %CodeGen_codegen_bin_exp.exit, %CodeGen_codegen_unary_exp.exit, %CodeGen_codegen_call_exp.exit, %CodeGen_get_expr_mem.exit214, %if.entry38, %if.entry42, %if.entry54, %if.entry58, %if.entry62, %if.entry66, %true_block.i179, %false_block.i180, %true_block6.i, %false_block7.i, %true_block14.i, %false_block15.i, %true_block22.i, %false_block23.i, %true_block32.i, %false_block33.i, %true_block36.i, %false_block37.i, %3, %if.entry46
  %common.ret245.op = phi ptr [ %387, %if.entry46 ], [ %9, %if.entry ], [ %13, %if.entry2 ], [ %17, %if.entry6 ], [ %20, %if.entry10 ], [ %21, %if.entry14 ], [ %22, %if.entry18 ], [ %common.ret.op.i, %CodeGen_codegen_bin_exp.exit ], [ %common.ret.op.i147, %CodeGen_codegen_unary_exp.exit ], [ %362, %CodeGen_codegen_call_exp.exit ], [ %366, %CodeGen_get_expr_mem.exit214 ], [ %367, %if.entry38 ], [ %368, %if.entry42 ], [ %427, %if.entry54 ], [ %428, %if.entry58 ], [ %429, %if.entry62 ], [ %430, %if.entry66 ], [ %407, %true_block.i179 ], [ %408, %false_block.i180 ], [ %414, %true_block6.i ], [ %415, %false_block7.i ], [ %417, %true_block14.i ], [ %418, %false_block15.i ], [ %421, %true_block22.i ], [ %422, %false_block23.i ], [ %423, %true_block32.i ], [ %424, %false_block33.i ], [ %425, %true_block36.i ], [ %426, %false_block37.i ], [ null, %3 ]
  ret ptr %common.ret245.op

if.entry:                                         ; preds = %3
  %memberidx.i = getelementptr inbounds %BooleanExpression, ptr %2, i64 0, i32 4
  %7 = load i1, ptr %memberidx.i, align 1
  %8 = tail call ptr @LLVMInt1Type()
  %..i.i = zext i1 %7 to i64
  %9 = tail call ptr @LLVMConstInt(ptr %8, i64 %..i.i, i1 false)
  br label %common.ret245

if.entry2:                                        ; preds = %3
  %memberidx.i134 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %10 = load ptr, ptr %memberidx.i134, align 8
  %11 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %10, i1 true)
  %memberidx1.i = getelementptr inbounds %IntExpression, ptr %2, i64 0, i32 4
  %12 = load i64, ptr %memberidx1.i, align 4
  %13 = tail call ptr @LLVMConstInt(ptr %11, i64 %12, i1 true)
  br label %common.ret245

if.entry6:                                        ; preds = %3
  %memberidx.i135 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %14 = load ptr, ptr %memberidx.i135, align 8
  %15 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %14, i1 true)
  %memberidx1.i136 = getelementptr inbounds %FloatExpression, ptr %2, i64 0, i32 4
  %16 = load double, ptr %memberidx1.i136, align 8
  %17 = tail call ptr @LLVMConstReal(ptr %15, double %16)
  br label %common.ret245

if.entry10:                                       ; preds = %3
  %memberidx.i137 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %18 = load ptr, ptr %memberidx.i137, align 8
  %19 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %18, i1 true)
  %20 = tail call ptr @LLVMConstNull(ptr %19)
  br label %common.ret245

if.entry14:                                       ; preds = %3
  %21 = tail call fastcc ptr @CodeGen_codegen_string(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry18:                                       ; preds = %3
  %22 = tail call fastcc ptr @CodeGen_codegen_var_access_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry22:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %indices.i)
  %memberidx.i138 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 5
  %23 = load i64, ptr %memberidx.i138, align 4
  %memberidx1.i139 = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 4
  %24 = load ptr, ptr %memberidx1.i139, align 8
  %memberidx2.i = getelementptr inbounds %Expression, ptr %24, i64 0, i32 3
  %25 = load ptr, ptr %memberidx2.i, align 8
  %26 = load i64, ptr %25, align 4
  %memberidx4.i = getelementptr inbounds %BinaryExpression, ptr %2, i64 0, i32 6
  %27 = load ptr, ptr %memberidx4.i, align 8
  %memberidx5.i = getelementptr inbounds %Expression, ptr %27, i64 0, i32 3
  %28 = load ptr, ptr %memberidx5.i, align 8
  %29 = load i64, ptr %28, align 4
  %.not.i = icmp eq i64 %26, %29
  br i1 %.not.i, label %ifend.i, label %if.entry.i

if.entry.i:                                       ; preds = %if.entry22
  switch i64 %23, label %ifend15.i [
    i64 11, label %if.entry7.i
    i64 12, label %if.entry10.i
    i64 19, label %if.entry13.i
  ]

ifend.i:                                          ; preds = %if.entry22
  %30 = icmp eq i64 %23, 19
  br i1 %30, label %if.entry13.i, label %ifend15.i

if.entry7.i:                                      ; preds = %if.entry.i
  %31 = tail call ptr @LLVMInt1Type()
  %32 = tail call ptr @LLVMConstInt(ptr %31, i64 0, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

if.entry10.i:                                     ; preds = %if.entry.i
  %33 = tail call ptr @LLVMInt1Type()
  %34 = tail call ptr @LLVMConstInt(ptr %33, i64 1, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

if.entry13.i:                                     ; preds = %if.entry.i, %ifend.i
  %memberidx.i187 = getelementptr inbounds %Expression, ptr %24, i64 0, i32 2
  %35 = load i64, ptr %memberidx.i187, align 4
  switch i64 %35, label %ifend8.i [
    i64 8, label %if.entry.i189
    i64 14, label %if.entry2.i
    i64 13, label %if.entry6.i
  ]

if.entry.i189:                                    ; preds = %if.entry13.i
  %36 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

if.entry2.i:                                      ; preds = %if.entry13.i
  %37 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

if.entry6.i:                                      ; preds = %if.entry13.i
  %38 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %24, ptr null)
  br label %CodeGen_get_expr_mem.exit

ifend8.i:                                         ; preds = %if.entry13.i
  %39 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %24)
  br label %CodeGen_get_expr_mem.exit

CodeGen_get_expr_mem.exit:                        ; preds = %if.entry.i189, %if.entry2.i, %if.entry6.i, %ifend8.i
  %common.ret.op.i188 = phi ptr [ %36, %if.entry.i189 ], [ %37, %if.entry2.i ], [ %38, %if.entry6.i ], [ %39, %ifend8.i ]
  %40 = load ptr, ptr %memberidx4.i, align 8
  %41 = tail call fastcc ptr @CodeGen_store_expr_to_mem(ptr %0, ptr %1, ptr %common.ret.op.i188, ptr %40)
  br label %CodeGen_codegen_bin_exp.exit

ifend15.i:                                        ; preds = %if.entry.i, %ifend.i
  %42 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %24)
  %43 = load ptr, ptr %memberidx4.i, align 8
  %44 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %43)
  %45 = load ptr, ptr %memberidx4.i, align 8
  %memberidx.i.i = getelementptr inbounds %Expression, ptr %45, i64 0, i32 2
  %46 = load i64, ptr %memberidx.i.i, align 4
  %47 = icmp eq i64 %46, 5
  %48 = icmp eq i64 %23, 11
  %49 = icmp eq i64 %23, 12
  %50 = add i64 %23, -11
  %51 = icmp ult i64 %50, 2
  %52 = and i1 %51, %47
  br i1 %52, label %if.entry19.i, label %ifend21.i

if.entry19.i:                                     ; preds = %ifend15.i
  %53 = tail call i1 @LLVMIsConstant(ptr %42)
  br i1 %53, label %if.entry22.i, label %ifend24.i

ifend21.i:                                        ; preds = %ifend15.i
  %54 = load ptr, ptr %memberidx1.i139, align 8
  %memberidx30.i = getelementptr inbounds %Expression, ptr %54, i64 0, i32 3
  %55 = load ptr, ptr %memberidx30.i, align 8
  %memberidx32.i = getelementptr inbounds %Expression, ptr %45, i64 0, i32 3
  %56 = load ptr, ptr %memberidx32.i, align 8
  %57 = load i64, ptr %56, align 4
  %58 = add i64 %57, -1
  %59 = icmp ult i64 %58, 9
  %60 = icmp eq i64 %23, 6
  %61 = and i1 %60, %59
  br i1 %61, label %if.entry33.i, label %ifend35.i

if.entry22.i:                                     ; preds = %if.entry19.i
  %62 = tail call i1 @LLVMIsNull(ptr %42)
  %63 = tail call ptr @LLVMInt1Type()
  %..i.i140 = zext i1 %62 to i64
  %64 = tail call ptr @LLVMConstInt(ptr %63, i64 %..i.i140, i1 false)
  br label %CodeGen_codegen_bin_exp.exit

ifend24.i:                                        ; preds = %if.entry19.i
  br i1 %48, label %true_block25.i, label %false_block26.i

true_block25.i:                                   ; preds = %ifend24.i
  %65 = tail call ptr @LLVMBuildIsNull(ptr %1, ptr %42, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

false_block26.i:                                  ; preds = %ifend24.i
  %66 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %42, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry33.i:                                     ; preds = %ifend21.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  store ptr %42, ptr %args.i.i, align 8
  %67 = getelementptr inbounds ptr, ptr %args.i.i, i64 1
  store ptr %44, ptr %67, align 8
  %68 = tail call fastcc ptr @dump_type(ptr nonnull %56, i1 true)
  %memberidx.i.i.i = getelementptr inbounds %String, ptr %68, i64 0, i32 1
  %69 = load i64, ptr %memberidx.i.i.i, align 4
  %70 = trunc i64 %69 to i32
  %71 = add i32 %70, 1
  %72 = tail call ptr @malloc(i32 %71)
  %73 = load ptr, ptr %68, align 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %72, ptr align 8 %73, i64 %69, i1 false)
  %74 = getelementptr inbounds i8, ptr %72, i64 %69
  store i8 0, ptr %74, align 1
  %75 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %5, ptr nonnull @263, ptr %72)
  %76 = load ptr, ptr %5, align 8
  %77 = call ptr @malloc(i32 24)
  store ptr %76, ptr %77, align 8
  %memberidx1.i.i454.i = getelementptr inbounds %String, ptr %77, i64 0, i32 1
  store i64 %75, ptr %memberidx1.i.i454.i, align 4
  %memberidx2.i.i455.i = getelementptr inbounds %String, ptr %77, i64 0, i32 2
  store i64 %75, ptr %memberidx2.i.i455.i, align 4
  call void @free(ptr %72)
  %78 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %56, i1 true)
  store ptr %78, ptr %arg_types.i.i, align 8
  %79 = getelementptr inbounds ptr, ptr %arg_types.i.i, i64 1
  store ptr %78, ptr %79, align 8
  %80 = load ptr, ptr %0, align 8
  %81 = call ptr @malloc(i32 16)
  %memberidx1.i.i.i456.i = getelementptr inbounds %IntrinsicResult, ptr %81, i64 0, i32 1
  store i64 0, ptr %81, align 8
  %82 = call ptr @LLVMFunctionType(ptr %78, ptr nonnull %arg_types.i.i, i64 2, i1 false)
  store ptr %82, ptr %memberidx1.i.i.i456.i, align 8
  %83 = trunc i64 %75 to i32
  %84 = add i32 %83, 1
  %85 = call ptr @malloc(i32 %84)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %85, ptr align 8 %76, i64 %75, i1 false)
  %86 = getelementptr inbounds i8, ptr %85, i64 %75
  store i8 0, ptr %86, align 1
  %87 = call ptr @LLVMGetNamedFunction(ptr %80, ptr %85)
  %.not.i.i.i = icmp eq ptr %87, null
  br i1 %.not.i.i.i, label %else.i.i.i, label %CodeGen_codegen_pow_expr.exit.i

else.i.i.i:                                       ; preds = %if.entry33.i
  %88 = call ptr @LLVMAddFunction(ptr %80, ptr nonnull %85, ptr %82)
  br label %CodeGen_codegen_pow_expr.exit.i

CodeGen_codegen_pow_expr.exit.i:                  ; preds = %if.entry33.i, %else.i.i.i
  %storemerge.i.i.i = phi ptr [ %88, %else.i.i.i ], [ %87, %if.entry33.i ]
  store ptr %storemerge.i.i.i, ptr %81, align 8
  %89 = call ptr @LLVMBuildCall2(ptr %1, ptr %82, ptr %storemerge.i.i.i, ptr nonnull %args.i.i, i64 2, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  br label %CodeGen_codegen_bin_exp.exit

ifend35.i:                                        ; preds = %ifend21.i
  %90 = load i64, ptr %55, align 4
  %91 = icmp eq i64 %90, 13
  br i1 %91, label %if.entry36.i, label %ifend38.i

if.entry36.i:                                     ; preds = %ifend35.i
  %92 = icmp eq i64 %23, 1
  br i1 %92, label %end41.i, label %false_block40.i

ifend38.i:                                        ; preds = %ifend35.i
  %93 = tail call i1 @LLVMIsConstant(ptr %42)
  %94 = tail call i1 @LLVMIsConstant(ptr %44)
  %95 = and i1 %93, %94
  %96 = load i64, ptr %56, align 4
  %97 = load i64, ptr %55, align 4
  %98 = icmp eq i64 %97, 20
  br i1 %98, label %if.entry.i235, label %is_object.exit238

if.entry.i235:                                    ; preds = %ifend38.i, %if.entry.i235
  %.tr5.i233 = phi ptr [ %99, %if.entry.i235 ], [ %55, %ifend38.i ]
  %memberidx1.i234 = getelementptr inbounds %GenericType, ptr %.tr5.i233, i64 0, i32 3
  %99 = load ptr, ptr %memberidx1.i234, align 8
  %100 = load i64, ptr %99, align 4
  %101 = icmp eq i64 %100, 20
  br i1 %101, label %if.entry.i235, label %is_object.exit238

is_object.exit238:                                ; preds = %if.entry.i235, %ifend38.i
  %.lcssa.i236 = phi i64 [ %97, %ifend38.i ], [ %100, %if.entry.i235 ]
  %102 = icmp eq i64 %.lcssa.i236, 11
  %103 = icmp eq i64 %96, 20
  br i1 %103, label %if.entry.i229, label %is_object.exit232

if.entry.i229:                                    ; preds = %is_object.exit238, %if.entry.i229
  %.tr5.i227 = phi ptr [ %104, %if.entry.i229 ], [ %56, %is_object.exit238 ]
  %memberidx1.i228 = getelementptr inbounds %GenericType, ptr %.tr5.i227, i64 0, i32 3
  %104 = load ptr, ptr %memberidx1.i228, align 8
  %105 = load i64, ptr %104, align 4
  %106 = icmp eq i64 %105, 20
  br i1 %106, label %if.entry.i229, label %is_object.exit232

is_object.exit232:                                ; preds = %if.entry.i229, %is_object.exit238
  %.lcssa.i230 = phi i64 [ %96, %is_object.exit238 ], [ %105, %if.entry.i229 ]
  %107 = icmp eq i64 %.lcssa.i230, 11
  %108 = and i1 %102, %107
  %109 = and i1 %51, %108
  %110 = freeze i1 %109
  br i1 %110, label %if.entry45.i, label %switch.early.test

switch.early.test:                                ; preds = %is_object.exit232
  switch i64 %96, label %else46.i [
    i64 12, label %if.entry45.i
    i64 7, label %if.entry45.i
    i64 6, label %if.entry45.i
    i64 5, label %if.entry45.i
    i64 4, label %if.entry45.i
    i64 3, label %if.entry45.i
    i64 2, label %if.entry45.i
    i64 1, label %if.entry45.i
  ]

false_block40.i:                                  ; preds = %if.entry36.i
  %111 = tail call i1 @LLVMIsConstant(ptr %44)
  br i1 %111, label %true_block.i.i, label %false_block.i.i

true_block.i.i:                                   ; preds = %false_block40.i
  %112 = tail call ptr @LLVMConstNeg(ptr %44)
  br label %end41.i

false_block.i.i:                                  ; preds = %false_block40.i
  %113 = tail call ptr @LLVMBuildNeg(ptr %1, ptr %44, ptr nonnull @80)
  br label %end41.i

end41.i:                                          ; preds = %true_block.i.i, %false_block.i.i, %if.entry36.i
  %ternary42.i = phi ptr [ %44, %if.entry36.i ], [ %112, %true_block.i.i ], [ %113, %false_block.i.i ]
  store ptr %ternary42.i, ptr %indices.i, align 8
  %memberidx43.i = getelementptr inbounds %PointerType, ptr %55, i64 0, i32 1
  %114 = load ptr, ptr %memberidx43.i, align 8
  %115 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %114, i1 true)
  %116 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %115, ptr %42, ptr nonnull %indices.i, i64 1, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry45.i:                                     ; preds = %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %switch.early.test, %is_object.exit232
  switch i64 %23, label %else105.i [
    i64 1, label %if.entry48.i
    i64 2, label %if.entry64.i
    i64 3, label %if.entry80.i
    i64 4, label %if.entry96.i
    i64 5, label %if.entry104.i
  ]

else46.i:                                         ; preds = %switch.early.test
  %117 = and i64 %96, -2
  %118 = icmp eq i64 %117, 8
  br i1 %118, label %if.entry166.i, label %else167.i

ifend47.i:                                        ; preds = %else125.i, %else213.i, %else185.i, %else167.i
  %119 = tail call ptr @malloc(i32 33)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(33) %119, ptr noundef nonnull align 8 dereferenceable(33) @264, i64 33, i1 false)
  %120 = tail call ptr @malloc(i32 24)
  %121 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %121, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %122 = tail call ptr @malloc(i32 24)
  %123 = tail call i64 @write(i64 1, ptr %121, i64 7)
  tail call void @free(ptr %121)
  tail call void @free(ptr %122)
  %124 = tail call i64 @write(i64 1, ptr %119, i64 33)
  %125 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %119)
  tail call void @free(ptr %120)
  tail call void @exit(i64 -1)
  br label %CodeGen_codegen_bin_exp.exit

if.entry48.i:                                     ; preds = %if.entry45.i
  %memberidx51.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %126 = load ptr, ptr %memberidx51.i, align 8
  %memberidx52.i = getelementptr inbounds %IntType, ptr %126, i64 0, i32 1
  %127 = load i1, ptr %memberidx52.i, align 1
  br i1 %127, label %if.entry53.i, label %ifend55.i

if.entry53.i:                                     ; preds = %if.entry48.i
  br i1 %95, label %true_block56.i, label %false_block57.i

ifend55.i:                                        ; preds = %if.entry48.i
  br i1 %95, label %true_block60.i, label %false_block61.i

true_block56.i:                                   ; preds = %if.entry53.i
  %128 = tail call ptr @LLVMConstNSWAdd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block57.i:                                  ; preds = %if.entry53.i
  %129 = tail call ptr @LLVMBuildNSWAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

true_block60.i:                                   ; preds = %ifend55.i
  %130 = tail call ptr @LLVMConstNUWAdd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block61.i:                                  ; preds = %ifend55.i
  %131 = tail call ptr @LLVMBuildNUWAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry64.i:                                     ; preds = %if.entry45.i
  %memberidx67.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %132 = load ptr, ptr %memberidx67.i, align 8
  %memberidx68.i = getelementptr inbounds %IntType, ptr %132, i64 0, i32 1
  %133 = load i1, ptr %memberidx68.i, align 1
  br i1 %133, label %if.entry69.i, label %ifend71.i

if.entry69.i:                                     ; preds = %if.entry64.i
  br i1 %95, label %true_block72.i, label %false_block73.i

ifend71.i:                                        ; preds = %if.entry64.i
  br i1 %95, label %true_block76.i, label %false_block77.i

true_block72.i:                                   ; preds = %if.entry69.i
  %134 = tail call ptr @LLVMConstNSWSub(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block73.i:                                  ; preds = %if.entry69.i
  %135 = tail call ptr @LLVMBuildNSWSub(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

true_block76.i:                                   ; preds = %ifend71.i
  %136 = tail call ptr @LLVMConstNUWSub(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block77.i:                                  ; preds = %ifend71.i
  %137 = tail call ptr @LLVMBuildNUWSub(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry80.i:                                     ; preds = %if.entry45.i
  %memberidx83.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %138 = load ptr, ptr %memberidx83.i, align 8
  %memberidx84.i = getelementptr inbounds %IntType, ptr %138, i64 0, i32 1
  %139 = load i1, ptr %memberidx84.i, align 1
  br i1 %139, label %if.entry85.i, label %ifend87.i

if.entry85.i:                                     ; preds = %if.entry80.i
  br i1 %95, label %true_block88.i, label %false_block89.i

ifend87.i:                                        ; preds = %if.entry80.i
  br i1 %95, label %true_block92.i, label %false_block93.i

true_block88.i:                                   ; preds = %if.entry85.i
  %140 = tail call ptr @LLVMConstNSWMul(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block89.i:                                  ; preds = %if.entry85.i
  %141 = tail call ptr @LLVMBuildNSWMul(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

true_block92.i:                                   ; preds = %ifend87.i
  %142 = tail call ptr @LLVMConstNUWMul(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block93.i:                                  ; preds = %ifend87.i
  %143 = tail call ptr @LLVMBuildNUWMul(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry96.i:                                     ; preds = %if.entry45.i
  %memberidx99.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %144 = load ptr, ptr %memberidx99.i, align 8
  %memberidx100.i = getelementptr inbounds %IntType, ptr %144, i64 0, i32 1
  %145 = load i1, ptr %memberidx100.i, align 1
  br i1 %145, label %if.entry101.i, label %ifend103.i

if.entry101.i:                                    ; preds = %if.entry96.i
  %146 = tail call ptr @LLVMBuildSDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

ifend103.i:                                       ; preds = %if.entry96.i
  %147 = tail call ptr @LLVMBuildUDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry104.i:                                    ; preds = %if.entry45.i
  %memberidx107.i = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %148 = load ptr, ptr %memberidx107.i, align 8
  %memberidx108.i = getelementptr inbounds %IntType, ptr %148, i64 0, i32 1
  %149 = load i1, ptr %memberidx108.i, align 1
  br i1 %149, label %if.entry109.i, label %ifend111.i

else105.i:                                        ; preds = %if.entry45.i
  %150 = add i64 %23, -7
  %151 = icmp ult i64 %150, 4
  br i1 %151, label %if.entry112.i, label %else113.i

if.entry109.i:                                    ; preds = %if.entry104.i
  %152 = tail call ptr @LLVMBuildSRem(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

ifend111.i:                                       ; preds = %if.entry104.i
  %153 = tail call ptr @LLVMBuildURem(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry112.i:                                    ; preds = %else105.i
  %154 = add nuw nsw i64 %23, 31
  br i1 %95, label %true_block120.i, label %false_block121.i

else113.i:                                        ; preds = %else105.i
  br i1 %51, label %if.entry124.i, label %else125.i

true_block120.i:                                  ; preds = %if.entry112.i
  %155 = tail call ptr @LLVMConstICmp(i64 %154, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block121.i:                                 ; preds = %if.entry112.i
  %156 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %154, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry124.i:                                    ; preds = %else113.i
  %157 = add nuw nsw i64 %23, 21
  br i1 %95, label %true_block127.i, label %false_block128.i

else125.i:                                        ; preds = %else113.i
  switch i64 %23, label %ifend47.i [
    i64 13, label %if.entry131.i
    i64 14, label %if.entry138.i
    i64 15, label %if.entry145.i
    i64 16, label %if.entry152.i
    i64 17, label %if.entry159.i
  ]

true_block127.i:                                  ; preds = %if.entry124.i
  %158 = tail call ptr @LLVMConstICmp(i64 %157, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block128.i:                                 ; preds = %if.entry124.i
  %159 = tail call ptr @LLVMBuildICmp(ptr %1, i64 %157, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry131.i:                                    ; preds = %else125.i
  br i1 %95, label %true_block134.i, label %false_block135.i

true_block134.i:                                  ; preds = %if.entry131.i
  %160 = tail call ptr @LLVMConstShl(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block135.i:                                 ; preds = %if.entry131.i
  %161 = tail call ptr @LLVMBuildShl(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry138.i:                                    ; preds = %else125.i
  br i1 %95, label %true_block141.i, label %false_block142.i

true_block141.i:                                  ; preds = %if.entry138.i
  %162 = tail call ptr @LLVMConstLShr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block142.i:                                 ; preds = %if.entry138.i
  %163 = tail call ptr @LLVMBuildLShr(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry145.i:                                    ; preds = %else125.i
  br i1 %95, label %true_block148.i, label %false_block149.i

true_block148.i:                                  ; preds = %if.entry145.i
  %164 = tail call ptr @LLVMConstOr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block149.i:                                 ; preds = %if.entry145.i
  %165 = tail call ptr @LLVMBuildOr(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry152.i:                                    ; preds = %else125.i
  br i1 %95, label %true_block155.i, label %false_block156.i

true_block155.i:                                  ; preds = %if.entry152.i
  %166 = tail call ptr @LLVMConstAnd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block156.i:                                 ; preds = %if.entry152.i
  %167 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry159.i:                                    ; preds = %else125.i
  br i1 %95, label %true_block162.i, label %false_block163.i

true_block162.i:                                  ; preds = %if.entry159.i
  %168 = tail call ptr @LLVMConstXor(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block163.i:                                 ; preds = %if.entry159.i
  %169 = tail call ptr @LLVMBuildXor(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry166.i:                                    ; preds = %else46.i
  switch i64 %23, label %else182.i [
    i64 1, label %if.entry169.i
    i64 2, label %if.entry172.i
    i64 3, label %if.entry175.i
    i64 4, label %if.entry178.i
    i64 5, label %if.entry181.i
  ]

else167.i:                                        ; preds = %else46.i
  %170 = icmp eq i64 %96, 0
  br i1 %170, label %if.entry202.i, label %ifend47.i

if.entry169.i:                                    ; preds = %if.entry166.i
  %171 = tail call ptr @LLVMBuildFAdd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry172.i:                                    ; preds = %if.entry166.i
  %172 = tail call ptr @LLVMBuildFSub(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry175.i:                                    ; preds = %if.entry166.i
  %173 = tail call ptr @LLVMBuildFMul(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry178.i:                                    ; preds = %if.entry166.i
  %174 = tail call ptr @LLVMBuildFDiv(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry181.i:                                    ; preds = %if.entry166.i
  %175 = tail call ptr @LLVMBuildFRem(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

else182.i:                                        ; preds = %if.entry166.i
  %176 = add i64 %23, -7
  %177 = icmp ult i64 %176, 4
  br i1 %177, label %if.entry184.i, label %else185.i

if.entry184.i:                                    ; preds = %else182.i
  %178 = add nsw i64 %23, -5
  br i1 %95, label %true_block187.i, label %false_block188.i

else185.i:                                        ; preds = %else182.i
  br i1 %51, label %if.entry191.i, label %ifend47.i

true_block187.i:                                  ; preds = %if.entry184.i
  %179 = tail call ptr @LLVMConstFCmp(i64 %178, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block188.i:                                 ; preds = %if.entry184.i
  %180 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %178, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry191.i:                                    ; preds = %else185.i
  %.226.i = select i1 %49, i64 6, i64 1
  br i1 %95, label %true_block198.i, label %false_block199.i

true_block198.i:                                  ; preds = %if.entry191.i
  %181 = tail call ptr @LLVMConstFCmp(i64 %.226.i, ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block199.i:                                 ; preds = %if.entry191.i
  %182 = tail call ptr @LLVMBuildFCmp(ptr %1, i64 %.226.i, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry202.i:                                    ; preds = %else167.i
  switch i64 %23, label %else213.i [
    i64 16, label %if.entry205.i
    i64 11, label %if.entry205.i
    i64 15, label %if.entry212.i
  ]

if.entry205.i:                                    ; preds = %if.entry202.i, %if.entry202.i
  br i1 %95, label %true_block208.i, label %false_block209.i

true_block208.i:                                  ; preds = %if.entry205.i
  %183 = tail call ptr @LLVMConstAnd(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block209.i:                                 ; preds = %if.entry205.i
  %184 = tail call ptr @LLVMBuildAnd(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry212.i:                                    ; preds = %if.entry202.i
  br i1 %95, label %true_block215.i, label %false_block216.i

else213.i:                                        ; preds = %if.entry202.i
  br i1 %49, label %if.entry219.i, label %ifend47.i

true_block215.i:                                  ; preds = %if.entry212.i
  %185 = tail call ptr @LLVMConstOr(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block216.i:                                 ; preds = %if.entry212.i
  %186 = tail call ptr @LLVMBuildOr(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

if.entry219.i:                                    ; preds = %else213.i
  br i1 %95, label %true_block222.i, label %false_block223.i

true_block222.i:                                  ; preds = %if.entry219.i
  %187 = tail call ptr @LLVMConstXor(ptr %42, ptr %44)
  br label %CodeGen_codegen_bin_exp.exit

false_block223.i:                                 ; preds = %if.entry219.i
  %188 = tail call ptr @LLVMBuildXor(ptr %1, ptr %42, ptr %44, ptr nonnull @80)
  br label %CodeGen_codegen_bin_exp.exit

CodeGen_codegen_bin_exp.exit:                     ; preds = %if.entry7.i, %if.entry10.i, %CodeGen_get_expr_mem.exit, %if.entry22.i, %true_block25.i, %false_block26.i, %CodeGen_codegen_pow_expr.exit.i, %end41.i, %ifend47.i, %true_block56.i, %false_block57.i, %true_block60.i, %false_block61.i, %true_block72.i, %false_block73.i, %true_block76.i, %false_block77.i, %true_block88.i, %false_block89.i, %true_block92.i, %false_block93.i, %if.entry101.i, %ifend103.i, %if.entry109.i, %ifend111.i, %true_block120.i, %false_block121.i, %true_block127.i, %false_block128.i, %true_block134.i, %false_block135.i, %true_block141.i, %false_block142.i, %true_block148.i, %false_block149.i, %true_block155.i, %false_block156.i, %true_block162.i, %false_block163.i, %if.entry169.i, %if.entry172.i, %if.entry175.i, %if.entry178.i, %if.entry181.i, %true_block187.i, %false_block188.i, %true_block198.i, %false_block199.i, %true_block208.i, %false_block209.i, %true_block215.i, %false_block216.i, %true_block222.i, %false_block223.i
  %common.ret.op.i = phi ptr [ %32, %if.entry7.i ], [ %34, %if.entry10.i ], [ %41, %CodeGen_get_expr_mem.exit ], [ %64, %if.entry22.i ], [ %89, %CodeGen_codegen_pow_expr.exit.i ], [ %116, %end41.i ], [ null, %ifend47.i ], [ %146, %if.entry101.i ], [ %147, %ifend103.i ], [ %152, %if.entry109.i ], [ %153, %ifend111.i ], [ %171, %if.entry169.i ], [ %172, %if.entry172.i ], [ %173, %if.entry175.i ], [ %174, %if.entry178.i ], [ %175, %if.entry181.i ], [ %65, %true_block25.i ], [ %66, %false_block26.i ], [ %128, %true_block56.i ], [ %129, %false_block57.i ], [ %130, %true_block60.i ], [ %131, %false_block61.i ], [ %134, %true_block72.i ], [ %135, %false_block73.i ], [ %136, %true_block76.i ], [ %137, %false_block77.i ], [ %140, %true_block88.i ], [ %141, %false_block89.i ], [ %142, %true_block92.i ], [ %143, %false_block93.i ], [ %155, %true_block120.i ], [ %156, %false_block121.i ], [ %158, %true_block127.i ], [ %159, %false_block128.i ], [ %160, %true_block134.i ], [ %161, %false_block135.i ], [ %162, %true_block141.i ], [ %163, %false_block142.i ], [ %164, %true_block148.i ], [ %165, %false_block149.i ], [ %166, %true_block155.i ], [ %167, %false_block156.i ], [ %168, %true_block162.i ], [ %169, %false_block163.i ], [ %179, %true_block187.i ], [ %180, %false_block188.i ], [ %181, %true_block198.i ], [ %182, %false_block199.i ], [ %183, %true_block208.i ], [ %184, %false_block209.i ], [ %185, %true_block215.i ], [ %186, %false_block216.i ], [ %187, %true_block222.i ], [ %188, %false_block223.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %indices.i)
  br label %common.ret245

if.entry26:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %indices.i)
  %memberidx.i142 = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 4
  %189 = load i64, ptr %memberidx.i142, align 4
  %memberidx1.i143 = getelementptr inbounds %UnaryExpression, ptr %2, i64 0, i32 5
  %190 = load ptr, ptr %memberidx1.i143, align 8
  %191 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %190)
  switch i64 %189, label %ifend29.i [
    i64 1, label %if.entry.i145
    i64 6, label %if.entry7.i148
    i64 7, label %if.entry27.i
  ]

if.entry.i145:                                    ; preds = %if.entry26
  %memberidx2.i144 = getelementptr inbounds %Expression, ptr %190, i64 0, i32 3
  %192 = load ptr, ptr %memberidx2.i144, align 8
  %193 = load i64, ptr %192, align 4
  %194 = icmp eq i64 %193, 20
  br i1 %194, label %if.entry.i225, label %is_object.exit

if.entry.i225:                                    ; preds = %if.entry.i145, %if.entry.i225
  %.tr5.i = phi ptr [ %195, %if.entry.i225 ], [ %192, %if.entry.i145 ]
  %memberidx1.i224 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %195 = load ptr, ptr %memberidx1.i224, align 8
  %196 = load i64, ptr %195, align 4
  %197 = icmp eq i64 %196, 20
  br i1 %197, label %if.entry.i225, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i225, %if.entry.i145
  %.lcssa.i = phi i64 [ %193, %if.entry.i145 ], [ %196, %if.entry.i225 ]
  %198 = icmp eq i64 %.lcssa.i, 11
  br i1 %198, label %if.entry3.i, label %ifend5.i

if.entry3.i:                                      ; preds = %is_object.exit
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %func_ty.i)
  %199 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %199, ptr noundef nonnull align 8 dereferenceable(7) @135, i64 7, i1 false)
  %200 = tail call ptr @malloc(i32 24)
  store ptr %199, ptr %200, align 8
  %memberidx1.i.i.i239 = getelementptr inbounds %String, ptr %200, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i.i239, align 4
  %memberidx2.i.i.i240 = getelementptr inbounds %String, ptr %200, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i.i240, align 4
  %201 = call fastcc ptr @CodeGen_get_member_with_name(ptr %0, ptr %1, ptr %191, ptr nonnull %192, ptr nonnull %200, ptr nonnull %func_ty.i)
  %202 = icmp eq ptr %201, null
  br i1 %202, label %CodeGen_codegen_del_call.exit, label %ifend.i241

ifend.i241:                                       ; preds = %if.entry3.i
  store ptr %191, ptr %args.i, align 8
  %203 = load ptr, ptr %func_ty.i, align 8
  %204 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %203, i1 false)
  %205 = call ptr @LLVMBuildCall2(ptr %1, ptr %204, ptr nonnull %201, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  br label %CodeGen_codegen_del_call.exit

CodeGen_codegen_del_call.exit:                    ; preds = %if.entry3.i, %ifend.i241
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %func_ty.i)
  br label %ifend5.i

ifend5.i:                                         ; preds = %CodeGen_codegen_del_call.exit, %is_object.exit
  %206 = call ptr @LLVMBuildFree(ptr %1, ptr %191)
  br label %CodeGen_codegen_unary_exp.exit

if.entry7.i148:                                   ; preds = %if.entry26
  %memberidx10.i = getelementptr inbounds %Expression, ptr %190, i64 0, i32 3
  %207 = load ptr, ptr %memberidx10.i, align 8
  %208 = load i64, ptr %207, align 4
  %209 = add i64 %208, -1
  %210 = icmp ult i64 %209, 7
  br i1 %210, label %if.entry11.i, label %else12.i

if.entry11.i:                                     ; preds = %if.entry7.i148
  %memberidx15.i = getelementptr inbounds %IntType, ptr %207, i64 0, i32 1
  %211 = load i1, ptr %memberidx15.i, align 1
  %212 = tail call i1 @LLVMIsConstant(ptr %191)
  br i1 %211, label %if.entry16.i, label %ifend18.i

else12.i:                                         ; preds = %if.entry7.i148
  %213 = and i64 %208, -2
  %214 = icmp eq i64 %213, 8
  br i1 %214, label %if.entry24.i, label %CodeGen_codegen_unary_exp.exit

if.entry16.i:                                     ; preds = %if.entry11.i
  br i1 %212, label %true_block.i149, label %false_block.i150

ifend18.i:                                        ; preds = %if.entry11.i
  br i1 %212, label %true_block19.i, label %false_block20.i

true_block.i149:                                  ; preds = %if.entry16.i
  %215 = tail call ptr @LLVMConstNSWNeg(ptr %191)
  br label %CodeGen_codegen_unary_exp.exit

false_block.i150:                                 ; preds = %if.entry16.i
  %216 = tail call ptr @LLVMBuildNSWNeg(ptr %1, ptr %191, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

true_block19.i:                                   ; preds = %ifend18.i
  %217 = tail call ptr @LLVMConstNUWNeg(ptr %191)
  br label %CodeGen_codegen_unary_exp.exit

false_block20.i:                                  ; preds = %ifend18.i
  %218 = tail call ptr @LLVMBuildNUWNeg(ptr %1, ptr %191, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

if.entry24.i:                                     ; preds = %else12.i
  %219 = tail call ptr @LLVMBuildFNeg(ptr %1, ptr %191, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

if.entry27.i:                                     ; preds = %if.entry26
  %220 = tail call i1 @LLVMIsConstant(ptr %191)
  br i1 %220, label %true_block30.i, label %false_block31.i

ifend29.i:                                        ; preds = %if.entry26
  %221 = icmp eq i64 %189, 8
  switch i64 %189, label %CodeGen_codegen_unary_exp.exit [
    i64 8, label %if.entry34.i
    i64 5, label %if.entry34.i
    i64 4, label %if.entry34.i
    i64 3, label %if.entry34.i
    i64 2, label %if.entry34.i
  ]

true_block30.i:                                   ; preds = %if.entry27.i
  %222 = tail call ptr @LLVMConstNot(ptr %191)
  br label %CodeGen_codegen_unary_exp.exit

false_block31.i:                                  ; preds = %if.entry27.i
  %223 = tail call ptr @LLVMBuildNot(ptr %1, ptr %191, ptr nonnull @80)
  br label %CodeGen_codegen_unary_exp.exit

if.entry34.i:                                     ; preds = %ifend29.i, %ifend29.i, %ifend29.i, %ifend29.i, %ifend29.i
  %memberidx.i191 = getelementptr inbounds %Expression, ptr %190, i64 0, i32 2
  %224 = load i64, ptr %memberidx.i191, align 4
  switch i64 %224, label %ifend8.i198 [
    i64 8, label %if.entry.i193
    i64 14, label %if.entry2.i195
    i64 13, label %if.entry6.i197
  ]

if.entry.i193:                                    ; preds = %if.entry34.i
  %225 = tail call fastcc ptr @CodeGen_get_var_expr_mem(ptr %0, ptr nonnull %190)
  br label %CodeGen_get_expr_mem.exit199

if.entry2.i195:                                   ; preds = %if.entry34.i
  %226 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %190)
  br label %CodeGen_get_expr_mem.exit199

if.entry6.i197:                                   ; preds = %if.entry34.i
  %227 = tail call fastcc ptr @CodeGen_get_member_expr_mem(ptr %0, ptr %1, ptr nonnull %190, ptr null)
  br label %CodeGen_get_expr_mem.exit199

ifend8.i198:                                      ; preds = %if.entry34.i
  %228 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr nonnull %190)
  br label %CodeGen_get_expr_mem.exit199

CodeGen_get_expr_mem.exit199:                     ; preds = %if.entry.i193, %if.entry2.i195, %if.entry6.i197, %ifend8.i198
  %common.ret.op.i192 = phi ptr [ %225, %if.entry.i193 ], [ %226, %if.entry2.i195 ], [ %227, %if.entry6.i197 ], [ %228, %ifend8.i198 ]
  br i1 %221, label %CodeGen_codegen_unary_exp.exit, label %ifend39.i

ifend39.i:                                        ; preds = %CodeGen_get_expr_mem.exit199
  %memberidx40.i = getelementptr inbounds %Expression, ptr %190, i64 0, i32 3
  %229 = load ptr, ptr %memberidx40.i, align 8
  %230 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %229, i1 true)
  %231 = icmp eq i64 %189, 2
  %232 = icmp eq i64 %189, 4
  %233 = or i1 %231, %232
  %..i = select i1 %233, i64 1, i64 -1
  %234 = load ptr, ptr %memberidx40.i, align 8
  %235 = load i64, ptr %234, align 4
  %236 = icmp eq i64 %235, 13
  br i1 %236, label %if.entry46.i, label %else47.i

if.entry46.i:                                     ; preds = %ifend39.i
  %memberidx50.i = getelementptr inbounds %PointerType, ptr %234, i64 0, i32 1
  %237 = load ptr, ptr %memberidx50.i, align 8
  %238 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %237, i1 true)
  %239 = tail call ptr @LLVMInt32Type()
  %240 = tail call ptr @LLVMConstInt(ptr %239, i64 %..i, i1 true)
  store ptr %240, ptr %indices.i, align 8
  %241 = call ptr @LLVMBuildInBoundsGEP2(ptr %1, ptr %238, ptr %191, ptr nonnull %indices.i, i64 1, ptr nonnull @265)
  br label %ifend48.i

else47.i:                                         ; preds = %ifend39.i
  %242 = add i64 %235, -1
  %243 = icmp ult i64 %242, 9
  br i1 %243, label %if.entry52.i, label %ifend48.i

ifend48.i:                                        ; preds = %end57.i, %else47.i, %if.entry46.i
  %new_value.0.i = phi ptr [ %241, %if.entry46.i ], [ %250, %end57.i ], [ null, %else47.i ]
  %244 = call ptr @LLVMBuildStore(ptr %1, ptr %new_value.0.i, ptr %common.ret.op.i192)
  %245 = icmp ugt i64 %189, 2
  %ternary63.i = select i1 %245, ptr %191, ptr %new_value.0.i
  br label %CodeGen_codegen_unary_exp.exit

if.entry52.i:                                     ; preds = %else47.i
  %246 = icmp ult i64 %242, 7
  br i1 %246, label %true_block55.i, label %false_block56.i

true_block55.i:                                   ; preds = %if.entry52.i
  %247 = tail call ptr @LLVMConstInt(ptr %230, i64 %..i, i1 false)
  br label %end57.i

false_block56.i:                                  ; preds = %if.entry52.i
  %248 = sitofp i64 %..i to double
  %249 = tail call ptr @LLVMConstReal(ptr %230, double %248)
  br label %end57.i

end57.i:                                          ; preds = %false_block56.i, %true_block55.i
  %ternary59.i = phi ptr [ %247, %true_block55.i ], [ %249, %false_block56.i ]
  %250 = tail call ptr @LLVMBuildNSWAdd(ptr %1, ptr %191, ptr %ternary59.i, ptr nonnull @80)
  br label %ifend48.i

CodeGen_codegen_unary_exp.exit:                   ; preds = %else12.i, %CodeGen_get_expr_mem.exit199, %ifend29.i, %ifend5.i, %true_block.i149, %false_block.i150, %true_block19.i, %false_block20.i, %if.entry24.i, %true_block30.i, %false_block31.i, %ifend48.i
  %common.ret.op.i147 = phi ptr [ null, %ifend5.i ], [ %219, %if.entry24.i ], [ %ternary63.i, %ifend48.i ], [ %215, %true_block.i149 ], [ %216, %false_block.i150 ], [ %217, %true_block19.i ], [ %218, %false_block20.i ], [ %222, %true_block30.i ], [ %223, %false_block31.i ], [ %191, %ifend29.i ], [ %common.ret.op.i192, %CodeGen_get_expr_mem.exit199 ], [ %191, %else12.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %indices.i)
  br label %common.ret245

if.entry30:                                       ; preds = %3
  %251 = tail call ptr @malloc(i32 24)
  %memberidx.i.i151 = getelementptr inbounds %Array_LLVMValueRef_, ptr %251, i64 0, i32 1
  %memberidx1.i.i152 = getelementptr inbounds %Array_LLVMValueRef_, ptr %251, i64 0, i32 2
  store i64 8, ptr %memberidx1.i.i152, align 4
  %252 = tail call ptr @malloc(i32 64)
  store ptr %252, ptr %251, align 8
  store i64 0, ptr %memberidx.i.i151, align 4
  %memberidx2.i154 = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 4
  %253 = load ptr, ptr %memberidx2.i154, align 8
  %memberidx3.i = getelementptr inbounds %Expression, ptr %253, i64 0, i32 2
  %254 = load i64, ptr %memberidx3.i, align 4
  %255 = icmp eq i64 %254, 13
  br i1 %255, label %if.entry.i158, label %if.entry14.i

if.entry.i158:                                    ; preds = %if.entry30
  %memberidx5.i155 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %256 = load ptr, ptr %memberidx5.i155, align 8
  %memberidx6.i = getelementptr inbounds %MemberExpression, ptr %253, i64 0, i32 5
  %257 = load ptr, ptr %memberidx6.i, align 8
  %memberidx.i.i.i156 = getelementptr inbounds %PropId, ptr %257, i64 0, i32 1
  %258 = load ptr, ptr %memberidx.i.i.i156, align 8
  %259 = load ptr, ptr %256, align 8
  %260 = load i64, ptr %258, align 4
  %261 = load ptr, ptr %259, align 8
  %262 = getelementptr inbounds ptr, ptr %261, i64 %260
  %263 = load ptr, ptr %262, align 8
  %memberidx2.i.i.i.i157 = getelementptr inbounds %Module, ptr %263, i64 0, i32 3
  %264 = load ptr, ptr %memberidx2.i.i.i.i157, align 8
  %memberidx3.i.i.i.i = getelementptr inbounds %TypeId, ptr %258, i64 0, i32 2
  %265 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %266 = load ptr, ptr %264, align 8
  %267 = getelementptr inbounds ptr, ptr %266, i64 %265
  %268 = load ptr, ptr %267, align 8
  %memberidx.i65.i = getelementptr inbounds %Class, ptr %268, i64 0, i32 5
  %269 = load ptr, ptr %memberidx.i65.i, align 8
  %memberidx1.i66.i = getelementptr inbounds %PropId, ptr %257, i64 0, i32 2
  %270 = load i64, ptr %memberidx1.i66.i, align 4
  %271 = load ptr, ptr %269, align 8
  %272 = getelementptr inbounds ptr, ptr %271, i64 %270
  %273 = load ptr, ptr %272, align 8
  %memberidx7.i = getelementptr inbounds %ClassMethod, ptr %273, i64 0, i32 1
  %274 = load i1, ptr %memberidx7.i, align 1
  br i1 %274, label %ifend21.i165, label %if.entry8.i

ifend.i159:                                       ; preds = %ifend.i205, %if.entry8.i
  %memberidx13.i = getelementptr inbounds %MemberExpression, ptr %253, i64 0, i32 4
  %275 = load ptr, ptr %memberidx13.i, align 8
  %276 = tail call fastcc ptr @CodeGen_codegen_expression(ptr nonnull %0, ptr %1, ptr %275)
  %277 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr nonnull %0, ptr %1, ptr nonnull %253, ptr %276)
  store i64 1, ptr %memberidx.i.i151, align 4
  store ptr %276, ptr %252, align 8
  %278 = icmp eq ptr %277, null
  br i1 %278, label %ifend.i159.if.entry14.i_crit_edge, label %for.entry.i

ifend.i159.if.entry14.i_crit_edge:                ; preds = %ifend.i159
  %.pre = load ptr, ptr %memberidx2.i154, align 8
  %memberidx18.i.phi.trans.insert = getelementptr inbounds %Expression, ptr %.pre, i64 0, i32 2
  %.pre269 = load i64, ptr %memberidx18.i.phi.trans.insert, align 4
  br label %if.entry14.i

if.entry8.i:                                      ; preds = %if.entry.i158
  %279 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr nonnull %258)
  %.not.i200 = icmp eq ptr %279, null
  br i1 %.not.i200, label %ifend.i205, label %ifend.i159

ifend.i205:                                       ; preds = %if.entry8.i
  %280 = load ptr, ptr %memberidx5.i155, align 8
  %281 = load ptr, ptr %280, align 8
  %282 = load i64, ptr %258, align 4
  %283 = load ptr, ptr %281, align 8
  %284 = getelementptr inbounds ptr, ptr %283, i64 %282
  %285 = load ptr, ptr %284, align 8
  %memberidx2.i.i204 = getelementptr inbounds %Module, ptr %285, i64 0, i32 3
  %286 = load ptr, ptr %memberidx2.i.i204, align 8
  %287 = load i64, ptr %memberidx3.i.i.i.i, align 4
  %288 = load ptr, ptr %286, align 8
  %289 = getelementptr inbounds ptr, ptr %288, i64 %287
  %290 = load ptr, ptr %289, align 8
  tail call fastcc void @CodeGen_declare_class(ptr nonnull %0, ptr %290)
  tail call fastcc void @CodeGen_codegen_class(ptr nonnull %0, ptr %290)
  %291 = load ptr, ptr %290, align 8
  %292 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr nonnull %0, ptr %291)
  br label %ifend.i159

if.entry14.i:                                     ; preds = %ifend.i159.if.entry14.i_crit_edge, %if.entry30
  %293 = phi i64 [ 1, %ifend.i159.if.entry14.i_crit_edge ], [ 0, %if.entry30 ]
  %294 = phi i64 [ %.pre269, %ifend.i159.if.entry14.i_crit_edge ], [ %254, %if.entry30 ]
  %295 = phi ptr [ %.pre, %ifend.i159.if.entry14.i_crit_edge ], [ %253, %if.entry30 ]
  %296 = icmp eq i64 %294, 8
  br i1 %296, label %if.entry19.i162, label %ifend21.i165

if.entry19.i162:                                  ; preds = %if.entry14.i
  %memberidx23.i = getelementptr inbounds %VarAccessExpression, ptr %295, i64 0, i32 4
  %297 = load ptr, ptr %memberidx23.i, align 8
  %memberidx24.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 10
  %298 = load ptr, ptr %memberidx24.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  %memberidx.i69.i = getelementptr inbounds %VarId, ptr %297, i64 0, i32 1
  %299 = load i64, ptr %memberidx.i69.i, align 4
  %300 = load i64, ptr %297, align 4
  %memberidx2.i.i = getelementptr inbounds %VarId, ptr %297, i64 0, i32 2
  %301 = load i64, ptr %memberidx2.i.i, align 4
  %302 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %4, ptr nonnull @243, i64 %299, i64 %300, i64 %301)
  %303 = load ptr, ptr %4, align 8
  %304 = call ptr @malloc(i32 24)
  store ptr %303, ptr %304, align 8
  %memberidx1.i.i.i160 = getelementptr inbounds %String, ptr %304, i64 0, i32 1
  store i64 %302, ptr %memberidx1.i.i.i160, align 4
  %memberidx2.i.i.i161 = getelementptr inbounds %String, ptr %304, i64 0, i32 2
  store i64 %302, ptr %memberidx2.i.i.i161, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  %305 = call fastcc i64 @Map_String_LLVMValueRef__hash_fnc(ptr nonnull %304)
  %memberidx.i70.i = getelementptr inbounds %Map_String_LLVMValueRef_, ptr %298, i64 0, i32 1
  %306 = load i64, ptr %memberidx.i70.i, align 4
  %307 = urem i64 %305, %306
  %308 = load ptr, ptr %298, align 8
  %309 = getelementptr inbounds ptr, ptr %308, i64 %307
  %310 = load ptr, ptr %309, align 8
  %.not.i.i = icmp eq ptr %310, null
  br i1 %.not.i.i, label %ifend21.i165, label %while.entry.i.i

while.entry.i.i:                                  ; preds = %if.entry19.i162, %else.i.i
  %311 = phi ptr [ %319, %else.i.i ], [ %308, %if.entry19.i162 ]
  %312 = phi i64 [ %320, %else.i.i ], [ %306, %if.entry19.i162 ]
  %313 = phi ptr [ %324, %else.i.i ], [ %310, %if.entry19.i162 ]
  %hash.0.i.i = phi i64 [ %322, %else.i.i ], [ %307, %if.entry19.i162 ]
  %314 = load ptr, ptr %313, align 8
  %memberidx.i.i71.i = getelementptr inbounds %String, ptr %314, i64 0, i32 1
  %315 = load i64, ptr %memberidx.i.i71.i, align 4
  %.not.i.i.i163 = icmp eq i64 %315, %302
  br i1 %.not.i.i.i163, label %ifend.i.i.i, label %else.i.i

ifend.i.i.i:                                      ; preds = %while.entry.i.i
  %316 = load ptr, ptr %314, align 8
  %317 = call i64 @memcmp(ptr %316, ptr %303, i64 %302)
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %while.end.i.i, label %ifend.i.i.i.else.i.i_crit_edge

ifend.i.i.i.else.i.i_crit_edge:                   ; preds = %ifend.i.i.i
  %.pre270 = load i64, ptr %memberidx.i70.i, align 4
  %.pre271 = load ptr, ptr %298, align 8
  br label %else.i.i

while.end.i.i:                                    ; preds = %ifend.i.i.i
  %.pre272.pre = load ptr, ptr %298, align 8
  %.phi.trans.insert.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre272.pre, i64 %hash.0.i.i
  %.pre273.pre = load ptr, ptr %.phi.trans.insert.phi.trans.insert, align 8
  %.not25.i.i = icmp eq ptr %.pre273.pre, null
  br i1 %.not25.i.i, label %ifend21.i165, label %Map_String_LLVMValueRef____getitem__.exit.i

else.i.i:                                         ; preds = %ifend.i.i.i.else.i.i_crit_edge, %while.entry.i.i
  %319 = phi ptr [ %.pre271, %ifend.i.i.i.else.i.i_crit_edge ], [ %311, %while.entry.i.i ]
  %320 = phi i64 [ %.pre270, %ifend.i.i.i.else.i.i_crit_edge ], [ %312, %while.entry.i.i ]
  %321 = add nuw i64 %hash.0.i.i, 1
  %322 = urem i64 %321, %320
  %323 = getelementptr inbounds ptr, ptr %319, i64 %322
  %324 = load ptr, ptr %323, align 8
  %.not26.i.i = icmp eq ptr %324, null
  br i1 %.not26.i.i, label %ifend21.i165, label %while.entry.i.i

Map_String_LLVMValueRef____getitem__.exit.i:      ; preds = %while.end.i.i
  %memberidx11.i.i = getelementptr inbounds %MapEntry_String_LLVMValueRef_, ptr %.pre273.pre, i64 0, i32 1
  %325 = load ptr, ptr %memberidx11.i.i, align 8
  %.not.i164 = icmp eq ptr %325, null
  br i1 %.not.i164, label %ifend21.i165, label %Array_LLVMValueRef____sl__.exit76.i

ifend21.i165:                                     ; preds = %else.i.i, %if.entry19.i162, %if.entry.i158, %while.end.i.i, %Array_LLVMValueRef____sl__.exit76.i, %Map_String_LLVMValueRef____getitem__.exit.i, %if.entry14.i
  %326 = phi i64 [ %293, %while.end.i.i ], [ %329, %Array_LLVMValueRef____sl__.exit76.i ], [ %293, %Map_String_LLVMValueRef____getitem__.exit.i ], [ %293, %if.entry14.i ], [ 0, %if.entry.i158 ], [ %293, %if.entry19.i162 ], [ %293, %else.i.i ]
  %327 = load ptr, ptr %memberidx2.i154, align 8
  %328 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %327)
  br label %for.entry.i

Array_LLVMValueRef____sl__.exit76.i:              ; preds = %Map_String_LLVMValueRef____getitem__.exit.i
  %329 = add nuw nsw i64 %293, 1
  store i64 %329, ptr %memberidx.i.i151, align 4
  %330 = getelementptr inbounds ptr, ptr %252, i64 %293
  store ptr %325, ptr %330, align 8
  br label %ifend21.i165

for.entry.i:                                      ; preds = %ifend21.i165, %ifend.i159
  %331 = phi i64 [ %326, %ifend21.i165 ], [ 1, %ifend.i159 ]
  %func.1.i = phi ptr [ %328, %ifend21.i165 ], [ %277, %ifend.i159 ]
  %memberidx29.i = getelementptr inbounds %CallExpression, ptr %2, i64 0, i32 5
  %332 = load ptr, ptr %memberidx29.i, align 8
  %333 = call ptr @malloc(i32 25)
  %334 = load ptr, ptr %332, align 8
  %memberidx1.i77.i = getelementptr inbounds %Array_Expression_, ptr %332, i64 0, i32 1
  %335 = load i64, ptr %memberidx1.i77.i, align 4
  store i1 false, ptr %333, align 1
  %memberidx1.i.i78.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %333, i64 0, i32 1
  %memberidx2.i.i79.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %333, i64 0, i32 3
  store ptr %334, ptr %memberidx2.i.i79.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %333, i64 0, i32 2
  store i64 %335, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i78.i, align 4
  %336 = icmp slt i64 %335, 1
  br i1 %336, label %CodeGen_codegen_call_exp.exit, label %for.body.i

for.body.i:                                       ; preds = %for.entry.i, %Array_LLVMValueRef____sl__.exit85.i
  %337 = phi ptr [ %348, %Array_LLVMValueRef____sl__.exit85.i ], [ %252, %for.entry.i ]
  %memberidx1.i.i152.promoted = phi i64 [ %350, %Array_LLVMValueRef____sl__.exit85.i ], [ 8, %for.entry.i ]
  %338 = phi i64 [ %.pre-phi, %Array_LLVMValueRef____sl__.exit85.i ], [ %331, %for.entry.i ]
  %call_arg.0.i251.in = phi ptr [ %355, %Array_LLVMValueRef____sl__.exit85.i ], [ %334, %for.entry.i ]
  %call_arg.0.i251 = load ptr, ptr %call_arg.0.i251.in, align 8
  %339 = call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %call_arg.0.i251)
  %340 = add i64 %338, 1
  %341 = icmp slt i64 %memberidx1.i.i152.promoted, %340
  br i1 %341, label %while.entry.i.i84.i, label %Array_LLVMValueRef____sl__.exit85.i

while.entry.i.i84.i:                              ; preds = %for.body.i, %while.entry.i.i84.i
  %342 = phi ptr [ %346, %while.entry.i.i84.i ], [ %337, %for.body.i ]
  %343 = phi i64 [ %344, %while.entry.i.i84.i ], [ %memberidx1.i.i152.promoted, %for.body.i ]
  %344 = shl nuw i64 %343, 1
  %345 = shl i64 %343, 4
  %346 = call ptr @realloc(ptr %342, i64 %345)
  %347 = icmp slt i64 %344, %340
  br i1 %347, label %while.entry.i.i84.i, label %Array_LLVMValueRef____sl__.exit85.i.loopexit

Array_LLVMValueRef____sl__.exit85.i.loopexit:     ; preds = %while.entry.i.i84.i
  store i64 %344, ptr %memberidx1.i.i152, align 4
  store ptr %346, ptr %251, align 8
  %.pre277 = load i64, ptr %memberidx.i.i151, align 4
  %.pre280 = add nsw i64 %.pre277, 1
  br label %Array_LLVMValueRef____sl__.exit85.i

Array_LLVMValueRef____sl__.exit85.i:              ; preds = %Array_LLVMValueRef____sl__.exit85.i.loopexit, %for.body.i
  %.pre-phi = phi i64 [ %.pre280, %Array_LLVMValueRef____sl__.exit85.i.loopexit ], [ %340, %for.body.i ]
  %348 = phi ptr [ %346, %Array_LLVMValueRef____sl__.exit85.i.loopexit ], [ %337, %for.body.i ]
  %349 = phi i64 [ %.pre277, %Array_LLVMValueRef____sl__.exit85.i.loopexit ], [ %338, %for.body.i ]
  %350 = phi i64 [ %344, %Array_LLVMValueRef____sl__.exit85.i.loopexit ], [ %memberidx1.i.i152.promoted, %for.body.i ]
  store i64 %.pre-phi, ptr %memberidx.i.i151, align 4
  %351 = getelementptr inbounds ptr, ptr %348, i64 %349
  store ptr %339, ptr %351, align 8
  %352 = load i64, ptr %memberidx1.i.i78.i, align 4
  %353 = add nsw i64 %352, 1
  store i64 %353, ptr %memberidx1.i.i78.i, align 4
  %354 = load ptr, ptr %memberidx2.i.i79.i, align 8
  %355 = getelementptr inbounds ptr, ptr %354, i64 %352
  %356 = load i64, ptr %memberidx3.i.i.i, align 4
  %.not = icmp slt i64 %352, %356
  br i1 %.not, label %for.body.i, label %CodeGen_codegen_call_exp.exit

CodeGen_codegen_call_exp.exit:                    ; preds = %Array_LLVMValueRef____sl__.exit85.i, %for.entry.i
  %357 = phi ptr [ %252, %for.entry.i ], [ %348, %Array_LLVMValueRef____sl__.exit85.i ]
  call void @free(ptr nonnull %333)
  %358 = load ptr, ptr %memberidx2.i154, align 8
  %memberidx32.i166 = getelementptr inbounds %Expression, ptr %358, i64 0, i32 3
  %359 = load ptr, ptr %memberidx32.i166, align 8
  %360 = call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %359, i1 false)
  %361 = load i64, ptr %memberidx.i.i151, align 4
  %362 = call ptr @LLVMBuildCall2(ptr %1, ptr %360, ptr %func.1.i, ptr %357, i64 %361, ptr nonnull @80)
  br label %common.ret245

CodeGen_get_expr_mem.exit214:                     ; preds = %3
  %363 = tail call fastcc ptr @CodeGen_get_index_expr_mem(ptr %0, ptr %1, ptr nonnull %2)
  %memberidx.i167 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %364 = load ptr, ptr %memberidx.i167, align 8
  %365 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %364, i1 true)
  %366 = tail call ptr @LLVMBuildLoad2(ptr %1, ptr %365, ptr %363, ptr nonnull @80)
  br label %common.ret245

if.entry38:                                       ; preds = %3
  %367 = tail call fastcc ptr @CodeGen_codegen_member_exp(ptr %0, ptr %1, ptr nonnull %2, ptr null)
  br label %common.ret245

if.entry42:                                       ; preds = %3
  %368 = tail call fastcc ptr @CodeGen_codegen_new_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry46:                                       ; preds = %3
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i.i)
  %memberidx.i168 = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 1
  %369 = load ptr, ptr %memberidx.i168, align 8
  %370 = tail call ptr @LLVMAppendBasicBlock(ptr %369, ptr nonnull @267)
  %371 = load ptr, ptr %memberidx.i168, align 8
  %372 = tail call ptr @LLVMAppendBasicBlock(ptr %371, ptr nonnull @268)
  %373 = load ptr, ptr %memberidx.i168, align 8
  %374 = tail call ptr @LLVMAppendBasicBlock(ptr %373, ptr nonnull @269)
  %memberidx3.i169 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 4
  %375 = load ptr, ptr %memberidx3.i169, align 8
  %376 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %375)
  %377 = tail call ptr @LLVMBuildCondBr(ptr %1, ptr %376, ptr %370, ptr %372)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %370)
  %memberidx4.i170 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 5
  %378 = load ptr, ptr %memberidx4.i170, align 8
  %379 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %378)
  %380 = tail call ptr @LLVMBuildBr(ptr %1, ptr %374)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %372)
  %memberidx5.i171 = getelementptr inbounds %TernaryExpression, ptr %2, i64 0, i32 6
  %381 = load ptr, ptr %memberidx5.i171, align 8
  %382 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %381)
  %383 = tail call ptr @LLVMBuildBr(ptr %1, ptr %374)
  tail call void @LLVMPositionBuilderAtEnd(ptr %1, ptr %374)
  %384 = load ptr, ptr %memberidx4.i170, align 8
  %memberidx7.i172 = getelementptr inbounds %Expression, ptr %384, i64 0, i32 3
  %385 = load ptr, ptr %memberidx7.i172, align 8
  %386 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %385, i1 true)
  %387 = tail call ptr @LLVMBuildPhi(ptr %1, ptr %386, ptr nonnull @270)
  store ptr %379, ptr %arg_types.i.i, align 8
  %388 = getelementptr inbounds ptr, ptr %arg_types.i.i, i64 1
  store ptr %382, ptr %388, align 8
  store ptr %370, ptr %args.i.i, align 8
  %389 = getelementptr inbounds ptr, ptr %args.i.i, i64 1
  store ptr %372, ptr %389, align 8
  call void @LLVMAddIncoming(ptr %387, ptr nonnull %arg_types.i.i, ptr nonnull %args.i.i, i64 2)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %args.i.i)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i.i)
  br label %common.ret245

if.entry50:                                       ; preds = %3
  %memberidx.i173 = getelementptr inbounds %TypeCastExpression, ptr %2, i64 0, i32 4
  %390 = load ptr, ptr %memberidx.i173, align 8
  %memberidx1.i174 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %391 = load ptr, ptr %memberidx1.i174, align 8
  %392 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %390)
  %393 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %391, i1 true)
  %394 = tail call i1 @LLVMIsConstant(ptr %392)
  %395 = load i64, ptr %391, align 4
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %if.entry.i175, label %ifend.i177

if.entry.i175:                                    ; preds = %if.entry50
  br i1 %394, label %true_block.i179, label %false_block.i180

ifend.i177:                                       ; preds = %if.entry50
  %memberidx2.i176 = getelementptr inbounds %Expression, ptr %390, i64 0, i32 3
  %397 = load ptr, ptr %memberidx2.i176, align 8
  %398 = load i64, ptr %397, align 4
  %399 = add i64 %398, -1
  %400 = icmp ult i64 %399, 7
  %401 = and i64 %395, -2
  %402 = icmp eq i64 %401, 8
  %403 = and i1 %402, %400
  br i1 %403, label %if.entry3.i182, label %else4.i

true_block.i179:                                  ; preds = %if.entry.i175
  %404 = tail call i1 @LLVMIsNull(ptr %392)
  %405 = xor i1 %404, true
  %406 = tail call ptr @LLVMInt1Type()
  %..i.i178 = zext i1 %405 to i64
  %407 = tail call ptr @LLVMConstInt(ptr %406, i64 %..i.i178, i1 false)
  br label %common.ret245

false_block.i180:                                 ; preds = %if.entry.i175
  %408 = tail call ptr @LLVMBuildIsNotNull(ptr %1, ptr %392, ptr nonnull @80)
  br label %common.ret245

if.entry3.i182:                                   ; preds = %ifend.i177
  br i1 %394, label %true_block6.i, label %false_block7.i

else4.i:                                          ; preds = %ifend.i177
  %409 = and i64 %398, -2
  %410 = icmp eq i64 %409, 8
  %411 = add i64 %395, -1
  %412 = icmp ult i64 %411, 7
  %413 = and i1 %412, %410
  br i1 %413, label %if.entry11.i183, label %else12.i184

true_block6.i:                                    ; preds = %if.entry3.i182
  %414 = tail call ptr @LLVMConstSIToFP(ptr %392, ptr %393)
  br label %common.ret245

false_block7.i:                                   ; preds = %if.entry3.i182
  %415 = tail call ptr @LLVMBuildSIToFP(ptr %1, ptr %392, ptr %393, ptr nonnull @80)
  br label %common.ret245

if.entry11.i183:                                  ; preds = %else4.i
  br i1 %394, label %true_block14.i, label %false_block15.i

else12.i184:                                      ; preds = %else4.i
  %416 = and i1 %412, %400
  br i1 %416, label %if.entry19.i185, label %else20.i

true_block14.i:                                   ; preds = %if.entry11.i183
  %417 = tail call ptr @LLVMConstFPToSI(ptr %392, ptr %393)
  br label %common.ret245

false_block15.i:                                  ; preds = %if.entry11.i183
  %418 = tail call ptr @LLVMBuildFPToSI(ptr %1, ptr %392, ptr %393, ptr nonnull @80)
  br label %common.ret245

if.entry19.i185:                                  ; preds = %else12.i184
  %memberidx25.i = getelementptr inbounds %IntType, ptr %391, i64 0, i32 1
  %419 = load i1, ptr %memberidx25.i, align 1
  br i1 %394, label %true_block22.i, label %false_block23.i

else20.i:                                         ; preds = %else12.i184
  %420 = and i1 %402, %410
  br i1 %420, label %if.entry29.i, label %ifend31.i

true_block22.i:                                   ; preds = %if.entry19.i185
  %421 = tail call ptr @LLVMConstIntCast(ptr %392, ptr %393, i1 %419)
  br label %common.ret245

false_block23.i:                                  ; preds = %if.entry19.i185
  %422 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %392, ptr %393, i1 %419, ptr nonnull @80)
  br label %common.ret245

if.entry29.i:                                     ; preds = %else20.i
  br i1 %394, label %true_block32.i, label %false_block33.i

ifend31.i:                                        ; preds = %else20.i
  br i1 %394, label %true_block36.i, label %false_block37.i

true_block32.i:                                   ; preds = %if.entry29.i
  %423 = tail call ptr @LLVMConstFPCast(ptr %392, ptr %393)
  br label %common.ret245

false_block33.i:                                  ; preds = %if.entry29.i
  %424 = tail call ptr @LLVMBuildFPCast(ptr %1, ptr %392, ptr %393, ptr nonnull @80)
  br label %common.ret245

true_block36.i:                                   ; preds = %ifend31.i
  %425 = tail call ptr @LLVMConstBitCast(ptr %392, ptr %393)
  br label %common.ret245

false_block37.i:                                  ; preds = %ifend31.i
  %426 = tail call ptr @LLVMBuildBitCast(ptr %1, ptr %392, ptr %393, ptr nonnull @80)
  br label %common.ret245

if.entry54:                                       ; preds = %3
  %427 = tail call fastcc ptr @CodeGen_codegen_array_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry58:                                       ; preds = %3
  %428 = tail call fastcc ptr @CodeGen_codegen_tuple_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry62:                                       ; preds = %3
  %429 = tail call fastcc ptr @CodeGen_codegen_match_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245

if.entry66:                                       ; preds = %3
  %430 = tail call fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr %0, ptr %1, ptr nonnull %2)
  br label %common.ret245
}

define internal fastcc void @Map_String_CGEnumType__resize(ptr nocapture %0) unnamed_addr {
for.entry:
  %memberidx = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx, align 4
  %2 = alloca ptr, i64 %1, align 8
  %3 = load ptr, ptr %0, align 8
  %4 = shl i64 %1, 3
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 8 %2, ptr align 8 %3, i64 %4, i1 false)
  %5 = shl nuw i64 %1, 1
  store i64 %5, ptr %memberidx, align 4
  %memberidx7 = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 2
  store i64 0, ptr %memberidx7, align 4
  %6 = shl i64 %1, 4
  %7 = tail call ptr @realloc(ptr %3, i64 %6)
  store ptr %7, ptr %0, align 8
  %8 = load i64, ptr %memberidx, align 4
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %for.body, label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body, %for.entry
  %10 = icmp sgt i64 %1, 0
  br i1 %10, label %for.body15, label %for.end17

for.body:                                         ; preds = %for.entry, %for.body
  %i.040 = phi i64 [ %13, %for.body ], [ 0, %for.entry ]
  %11 = load ptr, ptr %0, align 8
  %12 = getelementptr inbounds ptr, ptr %11, i64 %i.040
  store ptr null, ptr %12, align 8
  %13 = add nuw nsw i64 %i.040, 1
  %14 = load i64, ptr %memberidx, align 4
  %15 = icmp slt i64 %13, %14
  br i1 %15, label %for.body, label %for.cond14.preheader

for.body15:                                       ; preds = %for.cond14.preheader, %ifend
  %i1.039 = phi i64 [ %20, %ifend ], [ 0, %for.cond14.preheader ]
  %16 = getelementptr inbounds ptr, ptr %2, i64 %i1.039
  %17 = load ptr, ptr %16, align 8
  %.not = icmp eq ptr %17, null
  br i1 %.not, label %ifend, label %if.entry

for.end17:                                        ; preds = %ifend, %for.cond14.preheader
  ret void

if.entry:                                         ; preds = %for.body15
  %18 = load ptr, ptr %17, align 8
  %memberidx19 = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %memberidx19, align 8
  tail call fastcc void @Map_String_CGEnumType____setitem__(ptr nonnull %0, ptr %18, ptr %19)
  br label %ifend

ifend:                                            ; preds = %for.body15, %if.entry
  %20 = add nuw nsw i64 %i1.039, 1
  %21 = icmp slt i64 %20, %1
  br i1 %21, label %for.body15, label %for.end17
}

define internal fastcc void @Map_String_CGEnumType____setitem__(ptr nocapture %0, ptr %1, ptr %2) unnamed_addr {
  %memberidx = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 2
  %4 = load i64, ptr %memberidx, align 4
  %5 = sitofp i64 %4 to double
  %memberidx1 = getelementptr inbounds %Map_String_CGEnumType_, ptr %0, i64 0, i32 1
  %6 = load i64, ptr %memberidx1, align 4
  %7 = sitofp i64 %6 to double
  %8 = fdiv double %5, %7
  %9 = fcmp ogt double %8, 7.500000e-01
  br i1 %9, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  tail call fastcc void @Map_String_CGEnumType__resize(ptr nonnull %0)
  br label %ifend

ifend:                                            ; preds = %3, %if.entry
  %10 = tail call fastcc i64 @Map_String_CGEnumType__hash_fnc(ptr %1)
  %11 = load i64, ptr %memberidx1, align 4
  %12 = urem i64 %10, %11
  %13 = load ptr, ptr %0, align 8
  %14 = getelementptr inbounds ptr, ptr %13, i64 %12
  %15 = load ptr, ptr %14, align 8
  %.not = icmp eq ptr %15, null
  br i1 %.not, label %if.entry11, label %while.entry.preheader

while.entry.preheader:                            ; preds = %ifend
  %memberidx1.i35 = getelementptr inbounds %String, ptr %1, i64 0, i32 1
  br label %while.entry

while.entry:                                      ; preds = %while.entry.preheader, %ifend8
  %16 = phi ptr [ %26, %ifend8 ], [ %13, %while.entry.preheader ]
  %17 = phi i64 [ %27, %ifend8 ], [ %11, %while.entry.preheader ]
  %18 = phi ptr [ %31, %ifend8 ], [ %15, %while.entry.preheader ]
  %hash.0 = phi i64 [ %29, %ifend8 ], [ %12, %while.entry.preheader ]
  %19 = load ptr, ptr %18, align 8
  %memberidx.i = getelementptr inbounds %String, ptr %19, i64 0, i32 1
  %20 = load i64, ptr %memberidx.i, align 4
  %21 = load i64, ptr %memberidx1.i35, align 4
  %.not.i = icmp eq i64 %20, %21
  br i1 %.not.i, label %ifend.i, label %ifend8

ifend.i:                                          ; preds = %while.entry
  %22 = load ptr, ptr %19, align 8
  %23 = load ptr, ptr %1, align 8
  %24 = tail call i64 @memcmp(ptr %22, ptr %23, i64 %20)
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %ifend13.loopexit, label %ifend.i.ifend8_crit_edge

ifend.i.ifend8_crit_edge:                         ; preds = %ifend.i
  %.pre = load i64, ptr %memberidx1, align 4
  %.pre42 = load ptr, ptr %0, align 8
  br label %ifend8

ifend8:                                           ; preds = %ifend.i.ifend8_crit_edge, %while.entry
  %26 = phi ptr [ %.pre42, %ifend.i.ifend8_crit_edge ], [ %16, %while.entry ]
  %27 = phi i64 [ %.pre, %ifend.i.ifend8_crit_edge ], [ %17, %while.entry ]
  %28 = add nuw i64 %hash.0, 1
  %29 = urem i64 %28, %27
  %30 = getelementptr inbounds ptr, ptr %26, i64 %29
  %31 = load ptr, ptr %30, align 8
  %.not34 = icmp eq ptr %31, null
  br i1 %.not34, label %if.entry11, label %while.entry

if.entry11:                                       ; preds = %ifend8, %ifend
  %32 = phi ptr [ %13, %ifend ], [ %26, %ifend8 ]
  %hash.1.ph = phi i64 [ %12, %ifend ], [ %29, %ifend8 ]
  %33 = load i64, ptr %memberidx, align 4
  %34 = add nsw i64 %33, 1
  store i64 %34, ptr %memberidx, align 4
  br label %ifend13

ifend13.loopexit:                                 ; preds = %ifend.i
  %.pre43 = load ptr, ptr %0, align 8
  br label %ifend13

ifend13:                                          ; preds = %ifend13.loopexit, %if.entry11
  %35 = phi ptr [ %32, %if.entry11 ], [ %.pre43, %ifend13.loopexit ]
  %hash.138 = phi i64 [ %hash.1.ph, %if.entry11 ], [ %hash.0, %ifend13.loopexit ]
  %36 = getelementptr inbounds ptr, ptr %35, i64 %hash.138
  %37 = tail call ptr @malloc(i32 16)
  store ptr %1, ptr %37, align 8
  %memberidx1.i = getelementptr inbounds %MapEntry_String_CGEnumType_, ptr %37, i64 0, i32 1
  store ptr %2, ptr %memberidx1.i, align 8
  store ptr %37, ptr %36, align 8
  ret void
}

define internal fastcc i64 @Map_String_CGEnumType__hash_fnc(ptr nocapture readonly %0) unnamed_addr {
for.entry:
  %memberidx.i = getelementptr inbounds %String, ptr %0, i64 0, i32 1
  %1 = load i64, ptr %memberidx.i, align 4
  %2 = trunc i64 %1 to i32
  %3 = add i32 %2, 1
  %4 = tail call ptr @malloc(i32 %3)
  %5 = load ptr, ptr %0, align 8
  %6 = load i64, ptr %memberidx.i, align 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 %6, i1 false)
  %7 = getelementptr inbounds i8, ptr %4, i64 %6
  store i8 0, ptr %7, align 1
  %8 = alloca ptr, align 8
  %9 = call i64 (ptr, ptr, ...) @asprintf(ptr nonnull %8, ptr nonnull @6, ptr %4)
  %10 = load ptr, ptr %8, align 8
  %11 = tail call ptr @malloc(i32 24)
  tail call void @free(ptr %4)
  %12 = icmp sgt i64 %9, 0
  br i1 %12, label %for.body, label %for.end

for.body:                                         ; preds = %for.entry, %for.body
  %i.02 = phi i64 [ %18, %for.body ], [ 0, %for.entry ]
  %hash.01 = phi i64 [ %17, %for.body ], [ 0, %for.entry ]
  %13 = shl i64 %hash.01, 1
  %14 = getelementptr inbounds i8, ptr %10, i64 %i.02
  %15 = load i8, ptr %14, align 1
  %16 = zext i8 %15 to i64
  %17 = add nuw i64 %13, %16
  %18 = add nuw nsw i64 %i.02, 1
  %19 = icmp slt i64 %18, %9
  br i1 %19, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.entry
  %hash.0.lcssa = phi i64 [ 0, %for.entry ], [ %17, %for.body ]
  call void @free(ptr %10)
  tail call void @free(ptr %11)
  ret i64 %hash.0.lcssa
}

define internal fastcc ptr @CodeGen_codegen_new_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %memberidx = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 6
  %4 = load ptr, ptr %memberidx, align 8
  %memberidx1 = getelementptr inbounds %Expression, ptr %2, i64 0, i32 3
  %5 = load ptr, ptr %memberidx1, align 8
  %6 = load i64, ptr %5, align 4
  %7 = icmp eq i64 %6, 13
  br i1 %7, label %if.entry, label %else

if.entry:                                         ; preds = %3
  %8 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %4, i1 true)
  %memberidx2 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %9 = load ptr, ptr %memberidx2, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %11)
  %memberidx3 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %13 = load i1, ptr %memberidx3, align 1
  br i1 %13, label %if.entry4, label %else5

else:                                             ; preds = %3
  %14 = load i64, ptr %4, align 4
  %15 = icmp eq i64 %14, 20
  br i1 %15, label %if.entry.i55, label %is_object.exit

if.entry.i55:                                     ; preds = %else, %if.entry.i55
  %.tr5.i = phi ptr [ %16, %if.entry.i55 ], [ %4, %else ]
  %memberidx1.i54 = getelementptr inbounds %GenericType, ptr %.tr5.i, i64 0, i32 3
  %16 = load ptr, ptr %memberidx1.i54, align 8
  %17 = load i64, ptr %16, align 4
  %18 = icmp eq i64 %17, 20
  br i1 %18, label %if.entry.i55, label %is_object.exit

is_object.exit:                                   ; preds = %if.entry.i55, %else
  %.lcssa.i = phi i64 [ %14, %else ], [ %17, %if.entry.i55 ]
  %19 = icmp eq i64 %.lcssa.i, 11
  br i1 %19, label %if.entry7, label %ifend

ifend:                                            ; preds = %else.i, %if.entry.i, %is_object.exit, %if.entry4, %else5
  %ptr.0 = phi ptr [ %20, %if.entry4 ], [ %21, %else5 ], [ null, %is_object.exit ], [ %ptr.1, %if.entry.i ], [ %ptr.1, %else.i ]
  ret ptr %ptr.0

if.entry4:                                        ; preds = %if.entry
  %20 = tail call ptr @LLVMBuildArrayMalloc(ptr %1, ptr %8, ptr %12, ptr nonnull @80)
  br label %ifend

else5:                                            ; preds = %if.entry
  %21 = tail call ptr @LLVMBuildArrayAlloca(ptr %1, ptr %8, ptr %12, ptr nonnull @80)
  br label %ifend

if.entry7:                                        ; preds = %is_object.exit
  %memberidx10 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 4
  %22 = load ptr, ptr %memberidx10, align 8
  %memberidx11 = getelementptr inbounds %Array_Expression_, ptr %22, i64 0, i32 1
  %23 = load i64, ptr %memberidx11, align 4
  %24 = add nuw i64 %23, 1
  %25 = alloca ptr, i64 %24, align 8
  %26 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr nonnull %4, i1 false)
  %memberidx12 = getelementptr inbounds %NewExpression, ptr %2, i64 0, i32 5
  %27 = load i1, ptr %memberidx12, align 1
  br i1 %27, label %if.entry13, label %else14

if.entry13:                                       ; preds = %if.entry7
  %28 = tail call ptr @LLVMBuildMalloc(ptr %1, ptr %26, ptr nonnull @80)
  br label %ifend15

else14:                                           ; preds = %if.entry7
  %29 = tail call ptr @LLVMBuildAlloca(ptr %1, ptr %26, ptr nonnull @80)
  br label %ifend15

ifend15:                                          ; preds = %else14, %if.entry13
  %ptr.1 = phi ptr [ %28, %if.entry13 ], [ %29, %else14 ]
  store ptr %ptr.1, ptr %25, align 8
  %30 = load ptr, ptr %memberidx10, align 8
  %31 = tail call ptr @malloc(i32 25)
  %32 = load ptr, ptr %30, align 8
  %memberidx1.i.i = getelementptr inbounds %Array_Expression_, ptr %30, i64 0, i32 1
  %33 = load i64, ptr %memberidx1.i.i, align 4
  store i1 false, ptr %31, align 1
  %memberidx1.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 1
  %memberidx2.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 3
  store ptr %32, ptr %memberidx2.i.i.i, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %31, i64 0, i32 2
  store i64 %33, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i, align 4
  %34 = icmp slt i64 %33, 1
  br i1 %34, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend15, %for.body.i
  %35 = phi i64 [ %39, %for.body.i ], [ 1, %ifend15 ]
  %item.0.i65.in = phi ptr [ %40, %for.body.i ], [ %32, %ifend15 ]
  %start.0.i64 = phi i64 [ %36, %for.body.i ], [ 1, %ifend15 ]
  %item.0.i65 = load ptr, ptr %item.0.i65.in, align 8
  %36 = add nuw nsw i64 %start.0.i64, 1
  %37 = getelementptr inbounds ptr, ptr %25, i64 %start.0.i64
  %38 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %item.0.i65)
  store ptr %38, ptr %37, align 8
  %39 = add nuw nsw i64 %35, 1
  store i64 %39, ptr %memberidx1.i.i.i, align 4
  %40 = getelementptr inbounds ptr, ptr %32, i64 %35
  %.not = icmp slt i64 %35, %33
  br i1 %.not, label %for.body.i, label %CodeGen_evaluate_expression_list.exit

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend15
  tail call void @free(ptr nonnull %31)
  %memberidx.i = getelementptr inbounds %CodeGen, ptr %0, i64 0, i32 4
  %41 = load i64, ptr %4, align 4
  %cond61 = icmp eq i64 %41, 20
  br i1 %cond61, label %if.entry.i59, label %get_class_from_type.exit

if.entry.i59:                                     ; preds = %CodeGen_evaluate_expression_list.exit, %if.entry.i59
  %.tr11.i62 = phi ptr [ %42, %if.entry.i59 ], [ %4, %CodeGen_evaluate_expression_list.exit ]
  %memberidx1.i58 = getelementptr inbounds %GenericType, ptr %.tr11.i62, i64 0, i32 3
  %42 = load ptr, ptr %memberidx1.i58, align 8
  %43 = load i64, ptr %42, align 4
  %cond = icmp eq i64 %43, 20
  br i1 %cond, label %if.entry.i59, label %get_class_from_type.exit

get_class_from_type.exit:                         ; preds = %if.entry.i59, %CodeGen_evaluate_expression_list.exit
  %memberidx1.i = getelementptr inbounds %ObjectType, ptr %4, i64 0, i32 1
  %44 = load ptr, ptr %memberidx1.i, align 8
  %45 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %44)
  %.not.i44 = icmp eq ptr %45, null
  br i1 %.not.i44, label %ifend.i, label %CodeGen_get_or_codegen_class_from_typeid.exit

ifend.i:                                          ; preds = %get_class_from_type.exit
  %46 = load ptr, ptr %memberidx.i, align 8
  %47 = load ptr, ptr %46, align 8
  %48 = load i64, ptr %44, align 4
  %49 = load ptr, ptr %47, align 8
  %50 = getelementptr inbounds ptr, ptr %49, i64 %48
  %51 = load ptr, ptr %50, align 8
  %memberidx2.i.i47 = getelementptr inbounds %Module, ptr %51, i64 0, i32 3
  %52 = load ptr, ptr %memberidx2.i.i47, align 8
  %memberidx3.i.i = getelementptr inbounds %TypeId, ptr %44, i64 0, i32 2
  %53 = load i64, ptr %memberidx3.i.i, align 4
  %54 = load ptr, ptr %52, align 8
  %55 = getelementptr inbounds ptr, ptr %54, i64 %53
  %56 = load ptr, ptr %55, align 8
  tail call fastcc void @CodeGen_declare_class(ptr %0, ptr %56)
  tail call fastcc void @CodeGen_codegen_class(ptr %0, ptr %56)
  %57 = load ptr, ptr %56, align 8
  %58 = tail call fastcc ptr @CodeGen_get_class_from_typeid(ptr %0, ptr %57)
  br label %CodeGen_get_or_codegen_class_from_typeid.exit

CodeGen_get_or_codegen_class_from_typeid.exit:    ; preds = %get_class_from_type.exit, %ifend.i
  %common.ret.op.i = phi ptr [ %58, %ifend.i ], [ %45, %get_class_from_type.exit ]
  %memberidx2.i = getelementptr inbounds %CGClassType, ptr %common.ret.op.i, i64 0, i32 4
  %59 = load ptr, ptr %memberidx2.i, align 8
  %.not.i = icmp eq ptr %59, null
  br i1 %.not.i, label %else.i, label %if.entry.i

if.entry.i:                                       ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %60 = tail call ptr @LLVM_GetFunctionType(ptr nonnull %59)
  %61 = call ptr @LLVMBuildCall2(ptr %1, ptr %60, ptr nonnull %59, ptr nonnull %25, i64 %24, ptr nonnull @80)
  br label %ifend

else.i:                                           ; preds = %CodeGen_get_or_codegen_class_from_typeid.exit
  %62 = tail call ptr @malloc(i32 47)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(47) %62, ptr noundef nonnull align 8 dereferenceable(47) @290, i64 47, i1 false)
  %63 = tail call ptr @malloc(i32 24)
  %64 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %64, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %65 = tail call ptr @malloc(i32 24)
  %66 = tail call i64 @write(i64 1, ptr %64, i64 7)
  tail call void @free(ptr %64)
  tail call void @free(ptr %65)
  %67 = tail call i64 @write(i64 1, ptr %62, i64 47)
  %68 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %62)
  tail call void @free(ptr %63)
  tail call void @exit(i64 -1)
  br label %ifend
}

define internal fastcc ptr @CodeGen_codegen_intrinsic_exp(ptr nocapture %0, ptr %1, ptr nocapture readonly %2) unnamed_addr {
  %arg_types.i124 = alloca [3 x ptr], align 8
  %arg_types.i114 = alloca [2 x ptr], align 8
  %args.i = alloca [1 x ptr], align 8
  %arg_types.i = alloca [1 x ptr], align 8
  %memberidx = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 4
  %4 = load i64, ptr %memberidx, align 4
  %5 = icmp slt i64 %4, 3
  %memberidx1 = getelementptr inbounds %IntrinsicCall, ptr %2, i64 0, i32 5
  %6 = load ptr, ptr %memberidx1, align 8
  br i1 %5, label %if.entry, label %ifend

if.entry:                                         ; preds = %3
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %8)
  %10 = tail call fastcc ptr @CodeGen_codegen_string_to_cstring(ptr %0, ptr %1, ptr %9)
  switch i64 %4, label %ifend10 [
    i64 0, label %if.entry2
    i64 1, label %if.entry5
    i64 2, label %if.entry8
  ]

ifend:                                            ; preds = %3
  %memberidx12 = getelementptr inbounds %Array_Expression_, ptr %6, i64 0, i32 1
  %11 = load i64, ptr %memberidx12, align 4
  %12 = alloca ptr, i64 %11, align 8
  %13 = tail call ptr @malloc(i32 25)
  %14 = load ptr, ptr %6, align 8
  %15 = load i64, ptr %memberidx12, align 4
  store i1 false, ptr %13, align 1
  %memberidx1.i.i.i138 = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 1
  %memberidx2.i.i.i139 = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 3
  store ptr %14, ptr %memberidx2.i.i.i139, align 8
  %memberidx3.i.i.i = getelementptr inbounds %ArrayIterator_Expression_, ptr %13, i64 0, i32 2
  store i64 %15, ptr %memberidx3.i.i.i, align 4
  store i64 1, ptr %memberidx1.i.i.i138, align 4
  %16 = icmp slt i64 %15, 1
  br i1 %16, label %CodeGen_evaluate_expression_list.exit, label %for.body.i

for.body.i:                                       ; preds = %ifend, %for.body.i
  %17 = phi i64 [ %21, %for.body.i ], [ 1, %ifend ]
  %item.0.i152.in = phi ptr [ %22, %for.body.i ], [ %14, %ifend ]
  %start.0.i151 = phi i64 [ %18, %for.body.i ], [ 0, %ifend ]
  %item.0.i152 = load ptr, ptr %item.0.i152.in, align 8
  %18 = add nuw nsw i64 %start.0.i151, 1
  %19 = getelementptr inbounds ptr, ptr %12, i64 %start.0.i151
  %20 = tail call fastcc ptr @CodeGen_codegen_expression(ptr %0, ptr %1, ptr %item.0.i152)
  store ptr %20, ptr %19, align 8
  %21 = add nuw nsw i64 %17, 1
  store i64 %21, ptr %memberidx1.i.i.i138, align 4
  %22 = getelementptr inbounds ptr, ptr %14, i64 %17
  %.not = icmp slt i64 %17, %15
  br i1 %.not, label %for.body.i, label %CodeGen_evaluate_expression_list.exit

CodeGen_evaluate_expression_list.exit:            ; preds = %for.body.i, %ifend
  tail call void @free(ptr nonnull %13)
  %23 = load ptr, ptr %memberidx1, align 8
  %24 = load ptr, ptr %23, align 8
  %25 = load ptr, ptr %24, align 8
  %memberidx15 = getelementptr inbounds %Expression, ptr %25, i64 0, i32 3
  %26 = load ptr, ptr %memberidx15, align 8
  %memberidx16 = getelementptr inbounds %PointerType, ptr %26, i64 0, i32 1
  %27 = load ptr, ptr %memberidx16, align 8
  %28 = tail call fastcc ptr @CodeGen_codegen_type(ptr %0, ptr %27, i1 true)
  %29 = tail call ptr @LLVMSizeOf(ptr %28)
  %30 = icmp eq i64 %4, 6
  br i1 %30, label %if.entry17, label %ifend19

if.entry2:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %31 = tail call ptr @LLVMInt8Type()
  %32 = tail call ptr @LLVMPointerType(ptr %31, i64 0)
  store ptr %32, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %33 = tail call ptr @LLVMDoubleType()
  %34 = load ptr, ptr %0, align 8
  %35 = tail call ptr @malloc(i32 4)
  store i32 1718580321, ptr %35, align 8
  %36 = tail call ptr @malloc(i32 24)
  store ptr %35, ptr %36, align 8
  %memberidx1.i.i.i = getelementptr inbounds %String, ptr %36, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i, align 4
  %memberidx2.i.i.i = getelementptr inbounds %String, ptr %36, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i, align 4
  %37 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i = getelementptr inbounds %IntrinsicResult, ptr %37, i64 0, i32 1
  store i64 0, ptr %37, align 8
  %38 = call ptr @LLVMFunctionType(ptr %33, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %38, ptr %memberidx1.i.i4.i, align 8
  %39 = call ptr @malloc(i32 5)
  %40 = load i32, ptr %35, align 8
  store i32 %40, ptr %39, align 8
  %41 = getelementptr inbounds i8, ptr %39, i64 4
  store i8 0, ptr %41, align 1
  %42 = call ptr @LLVMGetNamedFunction(ptr %34, ptr nonnull %39)
  %.not.i.i = icmp eq ptr %42, null
  br i1 %.not.i.i, label %else.i.i, label %ifend4.thread

else.i.i:                                         ; preds = %if.entry2
  %43 = call ptr @LLVMAddFunction(ptr %34, ptr nonnull %39, ptr %38)
  br label %ifend4.thread

ifend4.thread:                                    ; preds = %else.i.i, %if.entry2
  %storemerge.i.i = phi ptr [ %43, %else.i.i ], [ %42, %if.entry2 ]
  store ptr %storemerge.i.i, ptr %37, align 8
  %44 = call ptr @LLVMBuildCall2(ptr %1, ptr %38, ptr %storemerge.i.i, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

if.entry5:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %45 = tail call ptr @LLVMInt8Type()
  %46 = tail call ptr @LLVMPointerType(ptr %45, i64 0)
  store ptr %46, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %47 = tail call ptr @LLVMInt32Type()
  %48 = load ptr, ptr %0, align 8
  %49 = tail call ptr @malloc(i32 4)
  store i32 1768911969, ptr %49, align 8
  %50 = tail call ptr @malloc(i32 24)
  store ptr %49, ptr %50, align 8
  %memberidx1.i.i.i92 = getelementptr inbounds %String, ptr %50, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i92, align 4
  %memberidx2.i.i.i93 = getelementptr inbounds %String, ptr %50, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i93, align 4
  %51 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i94 = getelementptr inbounds %IntrinsicResult, ptr %51, i64 0, i32 1
  store i64 0, ptr %51, align 8
  %52 = call ptr @LLVMFunctionType(ptr %47, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %52, ptr %memberidx1.i.i4.i94, align 8
  %53 = call ptr @malloc(i32 5)
  %54 = load i32, ptr %49, align 8
  store i32 %54, ptr %53, align 8
  %55 = getelementptr inbounds i8, ptr %53, i64 4
  store i8 0, ptr %55, align 1
  %56 = call ptr @LLVMGetNamedFunction(ptr %48, ptr nonnull %53)
  %.not.i.i97 = icmp eq ptr %56, null
  br i1 %.not.i.i97, label %else.i.i99, label %CodeGen_codegen_atoi_call.exit

else.i.i99:                                       ; preds = %if.entry5
  %57 = call ptr @LLVMAddFunction(ptr %48, ptr nonnull %53, ptr %52)
  br label %CodeGen_codegen_atoi_call.exit

CodeGen_codegen_atoi_call.exit:                   ; preds = %if.entry5, %else.i.i99
  %storemerge.i.i100 = phi ptr [ %57, %else.i.i99 ], [ %56, %if.entry5 ]
  store ptr %storemerge.i.i100, ptr %51, align 8
  %58 = call ptr @LLVMBuildCall2(ptr %1, ptr %52, ptr %storemerge.i.i100, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

if.entry8:                                        ; preds = %if.entry
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %arg_types.i)
  %59 = tail call ptr @LLVMInt8Type()
  %60 = tail call ptr @LLVMPointerType(ptr %59, i64 0)
  store ptr %60, ptr %arg_types.i, align 8
  store ptr %10, ptr %args.i, align 8
  %61 = tail call ptr @LLVMInt64Type()
  %62 = load ptr, ptr %0, align 8
  %63 = tail call ptr @malloc(i32 4)
  store i32 1819243617, ptr %63, align 8
  %64 = tail call ptr @malloc(i32 24)
  store ptr %63, ptr %64, align 8
  %memberidx1.i.i.i104 = getelementptr inbounds %String, ptr %64, i64 0, i32 1
  store i64 4, ptr %memberidx1.i.i.i104, align 4
  %memberidx2.i.i.i105 = getelementptr inbounds %String, ptr %64, i64 0, i32 2
  store i64 4, ptr %memberidx2.i.i.i105, align 4
  %65 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i4.i106 = getelementptr inbounds %IntrinsicResult, ptr %65, i64 0, i32 1
  store i64 0, ptr %65, align 8
  %66 = call ptr @LLVMFunctionType(ptr %61, ptr nonnull %arg_types.i, i64 1, i1 false)
  store ptr %66, ptr %memberidx1.i.i4.i106, align 8
  %67 = call ptr @malloc(i32 5)
  %68 = load i32, ptr %63, align 8
  store i32 %68, ptr %67, align 8
  %69 = getelementptr inbounds i8, ptr %67, i64 4
  store i8 0, ptr %69, align 1
  %70 = call ptr @LLVMGetNamedFunction(ptr %62, ptr nonnull %67)
  %.not.i.i109 = icmp eq ptr %70, null
  br i1 %.not.i.i109, label %else.i.i111, label %CodeGen_codegen_atol_call.exit

else.i.i111:                                      ; preds = %if.entry8
  %71 = call ptr @LLVMAddFunction(ptr %62, ptr nonnull %67, ptr %66)
  br label %CodeGen_codegen_atol_call.exit

CodeGen_codegen_atol_call.exit:                   ; preds = %if.entry8, %else.i.i111
  %storemerge.i.i112 = phi ptr [ %71, %else.i.i111 ], [ %70, %if.entry8 ]
  store ptr %storemerge.i.i112, ptr %65, align 8
  %72 = call ptr @LLVMBuildCall2(ptr %1, ptr %66, ptr %storemerge.i.i112, ptr nonnull %args.i, i64 1, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %args.i)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %arg_types.i)
  br label %ifend10

common.ret:                                       ; preds = %ifend31, %if.entry29, %if.entry26, %if.entry23, %CodeGen_codegen_memcmp_call.exit, %CodeGen_codegen_realloc_call.exit, %ifend10
  %common.ret.op = phi ptr [ %value.2, %ifend10 ], [ %90, %CodeGen_codegen_realloc_call.exit ], [ %109, %CodeGen_codegen_memcmp_call.exit ], [ %117, %if.entry23 ], [ %119, %if.entry26 ], [ %120, %if.entry29 ], [ null, %ifend31 ]
  ret ptr %common.ret.op

ifend10:                                          ; preds = %if.entry, %CodeGen_codegen_atoi_call.exit, %ifend4.thread, %CodeGen_codegen_atol_call.exit
  %value.2 = phi ptr [ %72, %CodeGen_codegen_atol_call.exit ], [ %44, %ifend4.thread ], [ %58, %CodeGen_codegen_atoi_call.exit ], [ null, %if.entry ]
  %73 = call ptr @LLVMBuildFree(ptr %1, ptr %10)
  br label %common.ret

if.entry17:                                       ; preds = %CodeGen_evaluate_expression_list.exit
  %74 = getelementptr inbounds ptr, ptr %12, i64 1
  %75 = load ptr, ptr %74, align 8
  %76 = tail call ptr @LLVMBuildMul(ptr %1, ptr %75, ptr %29, ptr nonnull @80)
  store ptr %76, ptr %74, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %arg_types.i114)
  %77 = tail call ptr @LLVMInt8Type()
  %78 = tail call ptr @LLVMPointerType(ptr %77, i64 0)
  store ptr %78, ptr %arg_types.i114, align 8
  %79 = getelementptr inbounds ptr, ptr %arg_types.i114, i64 1
  %80 = tail call ptr @LLVMIntType(i64 64)
  store ptr %80, ptr %79, align 8
  %81 = load ptr, ptr %0, align 8
  %82 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %82, ptr noundef nonnull align 8 dereferenceable(7) @245, i64 7, i1 false)
  %83 = tail call ptr @malloc(i32 24)
  store ptr %82, ptr %83, align 8
  %memberidx1.i.i.i115 = getelementptr inbounds %String, ptr %83, i64 0, i32 1
  store i64 7, ptr %memberidx1.i.i.i115, align 4
  %memberidx2.i.i.i116 = getelementptr inbounds %String, ptr %83, i64 0, i32 2
  store i64 7, ptr %memberidx2.i.i.i116, align 4
  %84 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i5.i = getelementptr inbounds %IntrinsicResult, ptr %84, i64 0, i32 1
  store i64 0, ptr %84, align 8
  %85 = call ptr @LLVMFunctionType(ptr %78, ptr nonnull %arg_types.i114, i64 2, i1 false)
  store ptr %85, ptr %memberidx1.i.i5.i, align 8
  %86 = call ptr @malloc(i32 8)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %86, ptr noundef nonnull align 8 dereferenceable(7) %82, i64 7, i1 false)
  %87 = getelementptr inbounds i8, ptr %86, i64 7
  store i8 0, ptr %87, align 1
  %88 = call ptr @LLVMGetNamedFunction(ptr %81, ptr %86)
  %.not.i.i119 = icmp eq ptr %88, null
  br i1 %.not.i.i119, label %else.i.i121, label %CodeGen_codegen_realloc_call.exit

else.i.i121:                                      ; preds = %if.entry17
  %89 = call ptr @LLVMAddFunction(ptr %81, ptr nonnull %86, ptr %85)
  br label %CodeGen_codegen_realloc_call.exit

CodeGen_codegen_realloc_call.exit:                ; preds = %if.entry17, %else.i.i121
  %storemerge.i.i122 = phi ptr [ %89, %else.i.i121 ], [ %88, %if.entry17 ]
  store ptr %storemerge.i.i122, ptr %84, align 8
  %90 = call ptr @LLVMBuildCall2(ptr %1, ptr %85, ptr %storemerge.i.i122, ptr nonnull %12, i64 2, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %arg_types.i114)
  br label %common.ret

ifend19:                                          ; preds = %CodeGen_evaluate_expression_list.exit
  %91 = getelementptr inbounds ptr, ptr %12, i64 2
  %92 = load ptr, ptr %91, align 8
  %93 = tail call ptr @LLVMBuildMul(ptr %1, ptr %92, ptr %29, ptr nonnull @80)
  store ptr %93, ptr %91, align 8
  %94 = icmp eq i64 %4, 7
  br i1 %94, label %if.entry20, label %ifend22

if.entry20:                                       ; preds = %ifend19
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %arg_types.i124)
  %95 = tail call ptr @LLVMInt8Type()
  %96 = tail call ptr @LLVMPointerType(ptr %95, i64 0)
  %97 = tail call ptr @LLVMIntType(i64 64)
  store ptr %96, ptr %arg_types.i124, align 8
  %98 = getelementptr inbounds ptr, ptr %arg_types.i124, i64 1
  store ptr %96, ptr %98, align 8
  %99 = getelementptr inbounds ptr, ptr %arg_types.i124, i64 2
  store ptr %97, ptr %99, align 8
  %100 = load ptr, ptr %0, align 8
  %101 = tail call ptr @malloc(i32 6)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %101, ptr noundef nonnull align 8 dereferenceable(6) @246, i64 6, i1 false)
  %102 = tail call ptr @malloc(i32 24)
  store ptr %101, ptr %102, align 8
  %memberidx1.i.i.i125 = getelementptr inbounds %String, ptr %102, i64 0, i32 1
  store i64 6, ptr %memberidx1.i.i.i125, align 4
  %memberidx2.i.i.i126 = getelementptr inbounds %String, ptr %102, i64 0, i32 2
  store i64 6, ptr %memberidx2.i.i.i126, align 4
  %103 = tail call ptr @malloc(i32 16)
  %memberidx1.i.i6.i = getelementptr inbounds %IntrinsicResult, ptr %103, i64 0, i32 1
  store i64 0, ptr %103, align 8
  %104 = call ptr @LLVMFunctionType(ptr %97, ptr nonnull %arg_types.i124, i64 3, i1 false)
  store ptr %104, ptr %memberidx1.i.i6.i, align 8
  %105 = call ptr @malloc(i32 7)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %105, ptr noundef nonnull align 8 dereferenceable(6) %101, i64 6, i1 false)
  %106 = getelementptr inbounds i8, ptr %105, i64 6
  store i8 0, ptr %106, align 1
  %107 = call ptr @LLVMGetNamedFunction(ptr %100, ptr %105)
  %.not.i.i129 = icmp eq ptr %107, null
  br i1 %.not.i.i129, label %else.i.i131, label %CodeGen_codegen_memcmp_call.exit

else.i.i131:                                      ; preds = %if.entry20
  %108 = call ptr @LLVMAddFunction(ptr %100, ptr nonnull %105, ptr %104)
  br label %CodeGen_codegen_memcmp_call.exit

CodeGen_codegen_memcmp_call.exit:                 ; preds = %if.entry20, %else.i.i131
  %storemerge.i.i132 = phi ptr [ %108, %else.i.i131 ], [ %107, %if.entry20 ]
  store ptr %storemerge.i.i132, ptr %103, align 8
  %109 = call ptr @LLVMBuildCall2(ptr %1, ptr %104, ptr %storemerge.i.i132, ptr nonnull %12, i64 3, ptr nonnull @80)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %arg_types.i124)
  br label %common.ret

ifend22:                                          ; preds = %ifend19
  %110 = load ptr, ptr %12, align 8
  %111 = tail call i64 @LLVMGetAlignment(ptr %110)
  %112 = icmp eq i64 %4, 5
  %113 = getelementptr inbounds ptr, ptr %12, i64 1
  %114 = load ptr, ptr %113, align 8
  br i1 %112, label %if.entry23, label %ifend25

if.entry23:                                       ; preds = %ifend22
  %115 = tail call ptr @LLVMInt8Type()
  %116 = tail call ptr @LLVMBuildIntCast2(ptr %1, ptr %114, ptr %115, i1 false, ptr nonnull @80)
  %117 = tail call ptr @LLVMBuildMemSet(ptr %1, ptr %110, ptr %116, ptr %93, i64 %111)
  br label %common.ret

ifend25:                                          ; preds = %ifend22
  %118 = tail call i64 @LLVMGetAlignment(ptr %114)
  switch i64 %4, label %ifend31 [
    i64 3, label %if.entry26
    i64 4, label %if.entry29
  ]

if.entry26:                                       ; preds = %ifend25
  %119 = tail call ptr @LLVMBuildMemCpy(ptr %1, ptr %110, i64 %111, ptr %114, i64 %118, ptr %93)
  br label %common.ret

if.entry29:                                       ; preds = %ifend25
  %120 = tail call ptr @LLVMBuildMemMove(ptr %1, ptr %110, i64 %111, ptr %114, i64 %118, ptr %93)
  br label %common.ret

ifend31:                                          ; preds = %ifend25
  %121 = tail call ptr @malloc(i32 21)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(21) %121, ptr noundef nonnull align 8 dereferenceable(21) @280, i64 21, i1 false)
  %122 = tail call ptr @malloc(i32 24)
  %123 = tail call ptr @malloc(i32 7)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(7) %123, ptr noundef nonnull align 8 dereferenceable(7) @0, i64 7, i1 false)
  %124 = tail call ptr @malloc(i32 24)
  %125 = tail call i64 @write(i64 1, ptr %123, i64 7)
  tail call void @free(ptr %123)
  tail call void @free(ptr %124)
  %126 = tail call i64 @write(i64 1, ptr %121, i64 21)
  %127 = tail call i64 @write(i64 1, ptr nonnull @1, i64 1)
  tail call void @free(ptr %121)
  tail call void @free(ptr %122)
  tail call void @exit(i64 -1)
  br label %common.ret
}

declare ptr @LLVMModuleCreateWithName(ptr) local_unnamed_addr

declare i1 @LLVMIsConstant(ptr) local_unnamed_addr

declare ptr @LLVMConstNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstInt(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMInt1Type() local_unnamed_addr

declare ptr @LLVMIntType(i64) local_unnamed_addr

declare ptr @LLVMVoidType() local_unnamed_addr

declare ptr @LLVMInt8Type() local_unnamed_addr

declare ptr @LLVMInt16Type() local_unnamed_addr

declare ptr @LLVMInt32Type() local_unnamed_addr

declare ptr @LLVMInt64Type() local_unnamed_addr

declare ptr @LLVMInt128Type() local_unnamed_addr

declare ptr @LLVMFloatType() local_unnamed_addr

declare ptr @LLVMDoubleType() local_unnamed_addr

declare ptr @LLVMPointerType(ptr, i64) local_unnamed_addr

declare ptr @LLVMArrayType(ptr, i64) local_unnamed_addr

declare ptr @LLVMFunctionType(ptr, ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMStructType(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMBuildRet(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildRetVoid(ptr) local_unnamed_addr

declare ptr @LLVMConstReal(ptr, double) local_unnamed_addr

declare ptr @LLVMAddFunction(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCall2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMBuildGlobalString(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAlloca(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildLoad2(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSelect(ptr, ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetTypeKind(ptr) local_unnamed_addr

declare ptr @LLVMTypeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsGlobalConstant(ptr) local_unnamed_addr

define internal fastcc noalias ptr @get_format_from_type(ptr nocapture readonly %0) unnamed_addr {
  %2 = load i64, ptr %0, align 4
  %3 = add i64 %2, -1
  %4 = icmp ult i64 %3, 7
  br i1 %4, label %if.entry, label %ifend

if.entry:                                         ; preds = %1
  %memberidx = getelementptr inbounds %IntType, ptr %0, i64 0, i32 1
  %5 = load i1, ptr %memberidx, align 1
  switch i64 %2, label %ifend8 [
    i64 7, label %if.entry2
    i64 5, label %if.entry6
  ]

ifend:                                            ; preds = %1
  switch i64 %2, label %ifend27 [
    i64 8, label %if.entry18
    i64 9, label %if.entry22
    i64 13, label %if.entry25
  ]

if.entry2:                                        ; preds = %if.entry
  %6 = tail call ptr @malloc(i32 4)
  br i1 %5, label %true_block, label %false_block

true_block:                                       ; preds = %if.entry2
  store i32 1684827173, ptr %6, align 8
  %7 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %7, align 8
  br label %common.ret

false_block:                                      ; preds = %if.entry2
  store i32 1970039845, ptr %6, align 8
  %8 = tail call ptr @malloc(i32 24)
  store ptr %6, ptr %8, align 8
  br label %common.ret

common.ret:                                       ; preds = %true_block13, %false_block14, %true_block9, %false_block10, %true_block, %false_block, %ifend27, %if.entry25, %if.entry22, %if.entry18
  %.sink57 = phi ptr [ %13, %true_block13 ], [ %14, %false_block14 ], [ %11, %true_block9 ], [ %12, %false_block10 ], [ %7, %true_block ], [ %8, %false_block ], [ %22, %ifend27 ], [ %20, %if.entry25 ], [ %18, %if.entry22 ], [ %16, %if.entry18 ]
  %.sink56 = phi i64 [ 2, %true_block13 ], [ 2, %false_block14 ], [ 3, %true_block9 ], [ 3, %false_block10 ], [ 4, %true_block ], [ 4, %false_block ], [ 2, %ifend27 ], [ 4, %if.entry25 ], [ 3, %if.entry22 ], [ 2, %if.entry18 ]
  %memberidx1.i.i44 = getelementptr inbounds %String, ptr %.sink57, i64 0, i32 1
  store i64 %.sink56, ptr %memberidx1.i.i44, align 4
  %memberidx2.i.i45 = getelementptr inbounds %String, ptr %.sink57, i64 0, i32 2
  store i64 %.sink56, ptr %memberidx2.i.i45, align 4
  ret ptr %.sink57

if.entry6:                                        ; preds = %if.entry
  %9 = tail call ptr @malloc(i32 3)
  br i1 %5, label %true_block9, label %false_block10

ifend8:                                           ; preds = %if.entry
  %10 = tail call ptr @malloc(i32 2)
  br i1 %5, label %true_block13, label %false_block14

true_block9:                                      ; preds = %if.entry6
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %9, ptr noundef nonnull align 8 dereferenceable(3) @249, i64 3, i1 false)
  %11 = tail call ptr @malloc(i32 24)
  store ptr %9, ptr %11, align 8
  br label %common.ret

false_block10:                                    ; preds = %if.entry6
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %9, ptr noundef nonnull align 8 dereferenceable(3) @250, i64 3, i1 false)
  %12 = tail call ptr @malloc(i32 24)
  store ptr %9, ptr %12, align 8
  br label %common.ret

true_block13:                                     ; preds = %ifend8
  store i16 25637, ptr %10, align 8
  %13 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %13, align 8
  br label %common.ret

false_block14:                                    ; preds = %ifend8
  store i16 29989, ptr %10, align 8
  %14 = tail call ptr @malloc(i32 24)
  store ptr %10, ptr %14, align 8
  br label %common.ret

if.entry18:                                       ; preds = %ifend
  %15 = tail call ptr @malloc(i32 2)
  store i16 26149, ptr %15, align 8
  %16 = tail call ptr @malloc(i32 24)
  store ptr %15, ptr %16, align 8
  br label %common.ret

if.entry22:                                       ; preds = %ifend
  %17 = tail call ptr @malloc(i32 3)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3) %17, ptr noundef nonnull align 8 dereferenceable(3) @251, i64 3, i1 false)
  %18 = tail call ptr @malloc(i32 24)
  store ptr %17, ptr %18, align 8
  br label %common.ret

if.entry25:                                       ; preds = %ifend
  %19 = tail call ptr @malloc(i32 4)
  store i32 1478850608, ptr %19, align 8
  %20 = tail call ptr @malloc(i32 24)
  store ptr %19, ptr %20, align 8
  br label %common.ret

ifend27:                                          ; preds = %ifend
  %21 = tail call ptr @malloc(i32 2)
  store i16 29477, ptr %21, align 8
  %22 = tail call ptr @malloc(i32 24)
  store ptr %21, ptr %22, align 8
  br label %common.ret
}

declare ptr @LLVMBuildInBoundsGEP2(ptr, ptr, ptr, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVM_GetFunctionType(ptr) local_unnamed_addr

declare ptr @LLVMBuildMalloc(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFree(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildStore(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstArray(ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMConstStruct(ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMConstIntCast(ptr, ptr, i1) local_unnamed_addr

declare ptr @LLVMConstMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMSizeOf(ptr) local_unnamed_addr

declare i1 @LLVMIsNull(ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildIsNotNull(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWAdd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWAdd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWSub(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWSub(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWMul(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildUDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildURem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstICmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildICmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstShl(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildShl(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstLShr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildLShr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstOr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildOr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstAnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildAnd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstXor(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildXor(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFAdd(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFSub(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFDiv(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFRem(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFCmp(i64, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFCmp(ptr, i64, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstSIToFP(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSIToFP(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstFPToSI(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPToSI(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildIntCast2(ptr, ptr, ptr, i1, ptr) local_unnamed_addr

declare ptr @LLVMConstFPCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFPCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstBitCast(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBitCast(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNSWNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNSWNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNUWNeg(ptr) local_unnamed_addr

declare ptr @LLVMBuildNUWNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildFNeg(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMConstNot(ptr) local_unnamed_addr

declare ptr @LLVMBuildNot(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetInitializer(ptr) local_unnamed_addr

declare ptr @LLVMConstNull(ptr) local_unnamed_addr

declare ptr @LLVMAppendBasicBlock(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildCondBr(ptr, ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMPositionBuilderAtEnd(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildBr(ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildPhi(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMAddIncoming(ptr, ptr, ptr, i64) local_unnamed_addr

declare void @LLVMAddCase(ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildSwitch(ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildArrayMalloc(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildArrayAlloca(ptr, ptr, ptr, ptr) local_unnamed_addr

declare ptr @LLVMBuildMul(ptr, ptr, ptr, ptr) local_unnamed_addr

declare i64 @LLVMGetAlignment(ptr) local_unnamed_addr

declare ptr @LLVMBuildMemSet(ptr, ptr, ptr, ptr, i64) local_unnamed_addr

declare ptr @LLVMBuildMemCpy(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare ptr @LLVMBuildMemMove(ptr, ptr, i64, ptr, i64, ptr) local_unnamed_addr

declare void @LLVMDeleteBasicBlock(ptr) local_unnamed_addr

declare ptr @LLVMAddGlobal(ptr, ptr, ptr) local_unnamed_addr

declare void @LLVMSetInitializer(ptr, ptr) local_unnamed_addr

declare void @LLVMSetGlobalConstant(ptr, i1) local_unnamed_addr

declare void @LLVMSetLinkage(ptr, i64) local_unnamed_addr

declare ptr @LLVMCreateBuilder() local_unnamed_addr

declare ptr @LLVMGetParam(ptr, i64) local_unnamed_addr

declare void @LLVMDisposeBuilder(ptr) local_unnamed_addr

declare ptr @LLVMStructCreateNamed(ptr, ptr) local_unnamed_addr

declare ptr @LLVMGetModuleContext(ptr) local_unnamed_addr

declare void @LLVMStructSetBody(ptr, ptr, i64, i1) local_unnamed_addr

declare ptr @LLVMConstString(ptr, i64, i1) local_unnamed_addr

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.smax.i64(i64, i64) #9

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #10

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #10

; Function Attrs: argmemonly nocallback nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #11

attributes #0 = { nofree }
attributes #1 = { argmemonly mustprogress nocallback nofree nounwind willreturn }
attributes #2 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("free") "alloc-family"="malloc" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn }
attributes #4 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allockind("realloc") allocsize(1) "alloc-family"="malloc" }
attributes #5 = { nofree nounwind }
attributes #6 = { mustprogress nounwind willreturn }
attributes #7 = { mustprogress nofree nounwind readonly willreturn }
attributes #8 = { nofree nosync nounwind readonly }
attributes #9 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }
attributes #11 = { argmemonly nocallback nofree nounwind willreturn writeonly }

!0 = !{}
